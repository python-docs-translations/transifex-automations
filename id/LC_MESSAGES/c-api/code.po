# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# Rafael Fontenelle <rffontenelle@gmail.com>, 2022
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.10\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-01-10 16:06+0000\n"
"PO-Revision-Date: 2022-11-05 17:21+0000\n"
"Last-Translator: Rafael Fontenelle <rffontenelle@gmail.com>, 2022\n"
"Language-Team: Indonesian (https://app.transifex.com/python-doc/teams/5390/"
"id/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: id\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../c-api/code.rst:8
msgid "Code Objects"
msgstr "Objek Kode"

#: ../../c-api/code.rst:12
msgid ""
"Code objects are a low-level detail of the CPython implementation. Each one "
"represents a chunk of executable code that hasn't yet been bound into a "
"function."
msgstr ""
"Objek kode merupakan detail tingkat rendah dari implementasi CPython. Masing-"
"masing mewakili sekumpulan kode yang dapat dieksekusi dimana belum terikat "
"ke fungsi."

#: ../../c-api/code.rst:18
msgid ""
"The C structure of the objects used to describe code objects.  The fields of "
"this type are subject to change at any time."
msgstr ""
"Struktur C dari objek yang digunakan untuk menggambarkan objek kode. Jenis "
"dari tipe ini dapat berubah sewaktu-waktu."

#: ../../c-api/code.rst:24
msgid ""
"This is an instance of :c:type:`PyTypeObject` representing the Python :class:"
"`code` type."
msgstr ""
"Ini adalah contoh dari :c:type:`PyTypeObject` mewakili tipe Python :class:"
"`code`."

#: ../../c-api/code.rst:30
msgid ""
"Return true if *co* is a :class:`code` object.  This function always "
"succeeds."
msgstr ""
"Mengembalikan benar jika *co* adalah objek :class:`code`. Fungsi ini selalu "
"sukses."

#: ../../c-api/code.rst:34
msgid "Return the number of free variables in *co*."
msgstr "Mengembalikan jumlah variabel bebas dalam *co*."

#: ../../c-api/code.rst:38
msgid ""
"Return a new code object.  If you need a dummy code object to create a "
"frame, use :c:func:`PyCode_NewEmpty` instead.  Calling :c:func:`PyCode_New` "
"directly can bind you to a precise Python version since the definition of "
"the bytecode changes often."
msgstr ""
"Mengembalikan objek kode baru. Jika Anda memerlukan objek kode dummy untuk "
"membuat bingkai, gunakan :c: func:`PyCode_NewEmpty` sebagai gantinya. "
"Memanggil :c:func:`PyCode_New` secara langsung dapat mengikat Anda ke versi "
"Python yang tepat karena seringnya perubahan definisi bytecode."

#: ../../c-api/code.rst:45
msgid ""
"Similar to :c:func:`PyCode_New`, but with an extra \"posonlyargcount\" for "
"positional-only arguments."
msgstr ""
"Mirip dengan :c:func:`PyCode_New`, namun dengan tambahan \"posonlyargcount\" "
"untuk argumen dengan posisi  ."

#: ../../c-api/code.rst:51
msgid ""
"Return a new empty code object with the specified filename, function name, "
"and first line number.  It is illegal to :func:`exec` or :func:`eval` the "
"resulting code object."
msgstr ""
"Mengembalikan objek kode kosong baru dengan nama file yang ditentukan, nama "
"fungsi, dan nomor baris pertama. Adalah ilegal untuk :func:`exec` atau :func:"
"` eval` menghasilkan objek kode."

#: ../../c-api/code.rst:57
msgid ""
"Return the line number of the instruction that occurs on or before "
"``byte_offset`` and ends after it. If you just need the line number of a "
"frame, use :c:func:`PyFrame_GetLineNumber` instead."
msgstr ""

#: ../../c-api/code.rst:60
msgid ""
"For efficiently iterating over the line numbers in a code object, use `the "
"API described in PEP 626 <https://www.python.org/dev/peps/pep-0626/#out-of-"
"process-debuggers-and-profilers>`_."
msgstr ""
