# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# python-doc bot, 2025
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.13\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-10-15 15:08+0000\n"
"PO-Revision-Date: 2025-09-19 15:03+0000\n"
"Last-Translator: python-doc bot, 2025\n"
"Language-Team: Indonesian (https://app.transifex.com/python-doc/teams/5390/"
"id/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: id\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../deprecations/pending-removal-in-3.17.rst:2
msgid "Pending removal in Python 3.17"
msgstr "Penghapusan yang tertunda di Python 3.17"

#: ../../deprecations/pending-removal-in-3.17.rst:4
msgid ":mod:`collections.abc`:"
msgstr ""

#: ../../deprecations/pending-removal-in-3.17.rst:6
msgid ""
":class:`collections.abc.ByteString` is scheduled for removal in Python 3.17."
msgstr ""

#: ../../deprecations/pending-removal-in-3.17.rst:8
#: ../../deprecations/pending-removal-in-3.17.rst:36
msgid ""
"Use ``isinstance(obj, collections.abc.Buffer)`` to test if ``obj`` "
"implements the :ref:`buffer protocol <bufferobjects>` at runtime. For use in "
"type annotations, either use :class:`~collections.abc.Buffer` or a union "
"that explicitly specifies the types your code supports (e.g., ``bytes | "
"bytearray | memoryview``)."
msgstr ""

#: ../../deprecations/pending-removal-in-3.17.rst:14
#: ../../deprecations/pending-removal-in-3.17.rst:42
msgid ""
":class:`!ByteString` was originally intended to be an abstract class that "
"would serve as a supertype of both :class:`bytes` and :class:`bytearray`. "
"However, since the ABC never had any methods, knowing that an object was an "
"instance of :class:`!ByteString` never actually told you anything useful "
"about the object. Other common buffer types such as :class:`memoryview` were "
"also never understood as subtypes of :class:`!ByteString` (either at runtime "
"or by static type checkers)."
msgstr ""

#: ../../deprecations/pending-removal-in-3.17.rst:22
#: ../../deprecations/pending-removal-in-3.17.rst:50
msgid ""
"See :pep:`PEP 688 <688#current-options>` for more details. (Contributed by "
"Shantanu Jain in :gh:`91896`.)"
msgstr ""

#: ../../deprecations/pending-removal-in-3.17.rst:26
msgid ":mod:`typing`:"
msgstr ":mod:`typing`:"

#: ../../deprecations/pending-removal-in-3.17.rst:28
msgid ""
"Before Python 3.14, old-style unions were implemented using the private "
"class ``typing._UnionGenericAlias``. This class is no longer needed for the "
"implementation, but it has been retained for backward compatibility, with "
"removal scheduled for Python 3.17. Users should use documented introspection "
"helpers like :func:`typing.get_origin` and :func:`typing.get_args` instead "
"of relying on private implementation details."
msgstr ""

#: ../../deprecations/pending-removal-in-3.17.rst:33
msgid ""
":class:`typing.ByteString`, deprecated since Python 3.9, is scheduled for "
"removal in Python 3.17."
msgstr ""
