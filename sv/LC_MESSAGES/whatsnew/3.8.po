# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# python-doc bot, 2025
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.9\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-25 18:05+0000\n"
"PO-Revision-Date: 2025-09-22 17:56+0000\n"
"Last-Translator: python-doc bot, 2025\n"
"Language-Team: Swedish (https://app.transifex.com/python-doc/teams/5390/sv/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: sv\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"

#: ../../whatsnew/3.8.rst:3
msgid "What's New In Python 3.8"
msgstr "Vad är nytt i Python 3.8"

#: ../../whatsnew/3.8.rst:0
msgid "Editor"
msgstr "Redigerare"

#: ../../whatsnew/3.8.rst:45
msgid "Raymond Hettinger"
msgstr "Raymond Hettinger"

#: ../../whatsnew/3.8.rst:47
msgid ""
"This article explains the new features in Python 3.8, compared to 3.7. For "
"full details, see the :ref:`changelog <changelog>`."
msgstr ""

#: ../../whatsnew/3.8.rst:60
msgid "Summary -- Release highlights"
msgstr "Sammanfattning -- Release highlights"

#: ../../whatsnew/3.8.rst:71
msgid "New Features"
msgstr "Nya funktioner"

#: ../../whatsnew/3.8.rst:74
msgid "Assignment expressions"
msgstr "Uppdragets uttryck"

#: ../../whatsnew/3.8.rst:76
msgid ""
"There is new syntax ``:=`` that assigns values to variables as part of a "
"larger expression. It is affectionately known as \"the walrus operator\" due"
" to its resemblance to `the eyes and tusks of a walrus "
"<https://en.wikipedia.org/wiki/Walrus#/media/File:Pacific_Walrus_-"
"_Bull_(8247646168).jpg>`_."
msgstr ""
"Det finns en ny syntax ``:=`` som tilldelar värden till variabler som en del"
" av ett större uttryck. Den är kärleksfullt känd som \"valrossoperatorn\" på"
" grund av dess likhet med `ögon och betar hos en valross "
"<https://en.wikipedia.org/wiki/Walrus#/media/File:Pacific_Walrus_-"
"_Bull_(8247646168).jpg>`_."

#: ../../whatsnew/3.8.rst:81
msgid ""
"In this example, the assignment expression helps avoid calling :func:`len` "
"twice::"
msgstr ""
"I det här exemplet hjälper assignment-uttrycket till att undvika att anropa "
":func:`len` två gånger::"

#: ../../whatsnew/3.8.rst:87
msgid ""
"A similar benefit arises during regular expression matching where match "
"objects are needed twice, once to test whether a match occurred and another "
"to extract a subgroup::"
msgstr ""
"En liknande fördel uppstår vid matchning med reguljära uttryck där "
"matchningsobjekt behövs två gånger, en gång för att testa om en matchning "
"inträffade och en annan gång för att extrahera en undergrupp::"

#: ../../whatsnew/3.8.rst:95
msgid ""
"The operator is also useful with while-loops that compute a value to test "
"loop termination and then need that same value again in the body of the "
"loop::"
msgstr ""
"Operatorn är också användbar med while-loopar som beräknar ett värde för att"
" testa loopens avslutning och sedan behöver samma värde igen i loopens "
"kropp::"

#: ../../whatsnew/3.8.rst:103
msgid ""
"Another motivating use case arises in list comprehensions where a value "
"computed in a filtering condition is also needed in the expression body::"
msgstr ""
"Ett annat motiverande användningsfall uppstår i listförståelser där ett "
"värde som beräknats i ett filtreringsvillkor också behövs i "
"uttryckskroppen::"

#: ../../whatsnew/3.8.rst:110
msgid ""
"Try to limit use of the walrus operator to clean cases that reduce "
"complexity and improve readability."
msgstr ""
"Försök att begränsa användningen av valrossoperatorn till rena fall som "
"minskar komplexiteten och förbättrar läsbarheten."

#: ../../whatsnew/3.8.rst:113
msgid "See :pep:`572` for a full description."
msgstr "Se :pep:`572` för en fullständig beskrivning."

#: ../../whatsnew/3.8.rst:115
msgid "(Contributed by Emily Morehouse in :issue:`35224`.)"
msgstr "(Bidrag från Emily Morehouse i :issue:`35224`.)"

#: ../../whatsnew/3.8.rst:119
msgid "Positional-only parameters"
msgstr "Parametrar som endast är positionsbestämda"

#: ../../whatsnew/3.8.rst:121
msgid ""
"There is a new function parameter syntax ``/`` to indicate that some "
"function parameters must be specified positionally and cannot be used as "
"keyword arguments.  This is the same notation shown by ``help()`` for C "
"functions annotated with Larry Hastings' `Argument Clinic "
"<https://docs.python.org/3/howto/clinic.html>`_ tool."
msgstr ""

#: ../../whatsnew/3.8.rst:127
msgid ""
"In the following example, parameters *a* and *b* are positional-only, while "
"*c* or *d* can be positional or keyword, and *e* or *f* are required to be "
"keywords::"
msgstr ""
"I följande exempel är parametrarna *a* och *b* endast positionella, medan "
"*c* eller *d* kan vara positionella eller nyckelord, och *e* eller *f* måste"
" vara nyckelord::"

#: ../../whatsnew/3.8.rst:134
msgid "The following is a valid call::"
msgstr "Följande är ett giltigt anrop::"

#: ../../whatsnew/3.8.rst:138
msgid "However, these are invalid calls::"
msgstr "Dessa är dock ogiltiga samtal::"

#: ../../whatsnew/3.8.rst:143
msgid ""
"One use case for this notation is that it allows pure Python functions to "
"fully emulate behaviors of existing C coded functions.  For example, the "
"built-in :func:`divmod` function does not accept keyword arguments::"
msgstr ""
"Ett användningsområde för denna notation är att den gör det möjligt för rena"
" Python-funktioner att helt emulera beteenden hos befintliga C-kodade "
"funktioner.  Till exempel accepterar den inbyggda "
":func:`divmod`\\-funktionen inte nyckelordsargument::"

#: ../../whatsnew/3.8.rst:151
msgid ""
"Another use case is to preclude keyword arguments when the parameter name is"
" not helpful.  For example, the builtin :func:`len` function has the "
"signature ``len(obj, /)``.  This precludes awkward calls such as::"
msgstr ""
"Ett annat användningsfall är att utesluta nyckelordsargument när "
"parameternamnet inte är till hjälp.  Till exempel har den inbyggda "
"funktionen :func:`len` signaturen ``len(obj, /)``.  Detta utesluter "
"besvärliga anrop som::"

#: ../../whatsnew/3.8.rst:157
msgid ""
"A further benefit of marking a parameter as positional-only is that it "
"allows the parameter name to be changed in the future without risk of "
"breaking client code.  For example, in the :mod:`statistics` module, the "
"parameter name *dist* may be changed in the future.  This was made possible "
"with the following function specification::"
msgstr ""
"En ytterligare fördel med att markera en parameter som endast positionell är"
" att det gör det möjligt att ändra parameternamnet i framtiden utan att "
"riskera att bryta klientkoden.  I modulen :mod:`statistics` kan t.ex. "
"parameternamnet *dist* ändras i framtiden.  Detta möjliggjordes med följande"
" funktionsspecifikation::"

#: ../../whatsnew/3.8.rst:166
msgid ""
"Since the parameters to the left of ``/`` are not exposed as possible "
"keywords, the parameters names remain available for use in ``**kwargs``::"
msgstr ""
"Eftersom parametrarna till vänster om ``/`` inte exponeras som möjliga "
"nyckelord, förblir parameternamnen tillgängliga för användning i "
"``**kwargs``::"

#: ../../whatsnew/3.8.rst:175
msgid ""
"This greatly simplifies the implementation of functions and methods that "
"need to accept arbitrary keyword arguments.  For example, here is an excerpt"
" from code in the :mod:`collections` module::"
msgstr ""
"Detta förenklar avsevärt implementeringen av funktioner och metoder som "
"behöver acceptera godtyckliga nyckelordsargument.  Här är till exempel ett "
"utdrag ur koden i modulen :mod:`collections`::"

#: ../../whatsnew/3.8.rst:184
msgid "See :pep:`570` for a full description."
msgstr "Se :pep:`570` för en fullständig beskrivning."

#: ../../whatsnew/3.8.rst:186
msgid "(Contributed by Pablo Galindo in :issue:`36540`.)"
msgstr "(Bidrag från Pablo Galindo i :issue:`36540`.)"

#: ../../whatsnew/3.8.rst:192
msgid "Parallel filesystem cache for compiled bytecode files"
msgstr "Parallell filsystemcache för kompilerade bytecode-filer"

#: ../../whatsnew/3.8.rst:194
msgid ""
"The new :envvar:`PYTHONPYCACHEPREFIX` setting (also available as "
":option:`-X` ``pycache_prefix``) configures the implicit bytecode cache to "
"use a separate parallel filesystem tree, rather than the default "
"``__pycache__`` subdirectories within each source directory."
msgstr ""
"Den nya inställningen :envvar:`PYTHONPYCACHEPREFIX` (även tillgänglig som "
":option:`\\-X` ``pycache_prefix``) konfigurerar den implicita bytecode-"
"cachen att använda ett separat parallellt filsystemträd, i stället för "
"standardunderkatalogerna ``__pycache__`` i varje källkatalog."

#: ../../whatsnew/3.8.rst:200
msgid ""
"The location of the cache is reported in :data:`sys.pycache_prefix` "
"(:const:`None` indicates the default location in ``__pycache__`` "
"subdirectories)."
msgstr ""
"Cachens plats rapporteras i :data:`sys.pycache_prefix` (:const:`None` anger "
"standardplatsen i underkatalogerna ``__pycache__``)."

#: ../../whatsnew/3.8.rst:204
msgid "(Contributed by Carl Meyer in :issue:`33499`.)"
msgstr "(Bidrag från Carl Meyer i :issue:`33499`.)"

#: ../../whatsnew/3.8.rst:208
msgid "Debug build uses the same ABI as release build"
msgstr "Debug build använder samma ABI som release build"

#: ../../whatsnew/3.8.rst:210
msgid ""
"Python now uses the same ABI whether it's built in release or debug mode. On"
" Unix, when Python is built in debug mode, it is now possible to load C "
"extensions built in release mode and C extensions built using the stable "
"ABI."
msgstr ""
"Python använder nu samma ABI oavsett om det byggs i release- eller debug-"
"läge. På Unix, när Python byggs i felsökningsläge, är det nu möjligt att "
"läsa in C-tillägg som byggts i release-läge och C-tillägg som byggts med det"
" stabila ABI:t."

#: ../../whatsnew/3.8.rst:214
msgid ""
"Release builds and debug builds are now ABI compatible: defining the "
"``Py_DEBUG`` macro no longer implies the ``Py_TRACE_REFS`` macro, which "
"introduces the only ABI incompatibility. The ``Py_TRACE_REFS`` macro, which "
"adds the :func:`sys.getobjects` function and the :envvar:`PYTHONDUMPREFS` "
"environment variable, can be set using the new ``./configure --with-trace-"
"refs`` build option. (Contributed by Victor Stinner in :issue:`36465`.)"
msgstr ""

#: ../../whatsnew/3.8.rst:222
msgid ""
"On Unix, C extensions are no longer linked to libpython except on Android "
"and Cygwin. It is now possible for a statically linked Python to load a C "
"extension built using a shared library Python. (Contributed by Victor "
"Stinner in :issue:`21536`.)"
msgstr ""
"På Unix är C-tillägg inte längre länkade till libpython, förutom på Android "
"och Cygwin. Det är nu möjligt för en statiskt länkad Python att läsa in ett "
"C-tillägg som byggts med hjälp av ett delat Python-bibliotek. (Bidrag från "
"Victor Stinner i :issue:`21536`.)"

#: ../../whatsnew/3.8.rst:229
msgid ""
"On Unix, when Python is built in debug mode, import now also looks for C "
"extensions compiled in release mode and for C extensions compiled with the "
"stable ABI. (Contributed by Victor Stinner in :issue:`36722`.)"
msgstr ""
"På Unix, när Python byggs i felsökningsläge, letar import nu även efter "
"C-tillägg som kompilerats i release-läge och efter C-tillägg som kompilerats"
" med det stabila ABI. (Bidrag från Victor Stinner i :issue:`36722`.)"

#: ../../whatsnew/3.8.rst:234
msgid ""
"To embed Python into an application, a new ``--embed`` option must be passed"
" to ``python3-config --libs --embed`` to get ``-lpython3.8`` (link the "
"application to libpython). To support both 3.8 and older, try "
"``python3-config --libs --embed`` first and fallback to ``python3-config "
"--libs`` (without ``--embed``) if the previous command fails."
msgstr ""
"För att bädda in Python i ett program måste ett nytt alternativ "
"``\\--embed`` skickas till ``python3-config --libs --embed`` för att få "
"``\\-lpython3.8`` (länka programmet till libpython). För att stödja både 3.8"
" och äldre, prova ``python3-config --libs --embed`` först och fallbacka till"
" ``python3-config --libs`` (utan ``\\--embed``) om det föregående kommandot "
"misslyckas."

#: ../../whatsnew/3.8.rst:240
msgid ""
"Add a pkg-config ``python-3.8-embed`` module to embed Python into an "
"application: ``pkg-config python-3.8-embed --libs`` includes "
"``-lpython3.8``. To support both 3.8 and older, try ``pkg-config "
"python-X.Y-embed --libs`` first and fallback to ``pkg-config python-X.Y "
"--libs`` (without ``--embed``) if the previous command fails (replace "
"``X.Y`` with the Python version)."
msgstr ""
"Lägg till en pkg-config-modul ``python-3.8-embed`` för att bädda in Python i"
" ett program: ``pkg-config python-3.8-embed --libs`` inkluderar "
"``\\-lpython3.8``. För att stödja både 3.8 och äldre, prova ``pkg-config "
"python-X.Y-embed --libs`` först och fallbacka till ``pkg-config python-X.Y "
"--libs`` (utan ``\\--embed``) om det föregående kommandot misslyckas (ersätt"
" ``X.Y`` med Python-versionen)."

#: ../../whatsnew/3.8.rst:246
msgid ""
"On the other hand, ``pkg-config python3.8 --libs`` no longer contains "
"``-lpython3.8``. C extensions must not be linked to libpython (except on "
"Android and Cygwin, whose cases are handled by the script); this change is "
"backward incompatible on purpose. (Contributed by Victor Stinner in "
":issue:`36721`.)"
msgstr ""
"Å andra sidan innehåller ``pkg-config python3.8 --libs`` inte längre "
"``\\-lpython3.8``. C-tillägg får inte länkas till libpython (utom på Android"
" och Cygwin, vars fall hanteras av skriptet); denna ändring är avsiktligt "
"bakåtkompatibel. (Bidrag från Victor Stinner i :issue:`36721`.)"

#: ../../whatsnew/3.8.rst:254
msgid "f-strings support ``=`` for self-documenting expressions and debugging"
msgstr ""
"f-strings stödjer ``=`` för självdokumenterande uttryck och felsökning"

#: ../../whatsnew/3.8.rst:256
msgid ""
"Added an ``=`` specifier to :term:`f-string`\\s. An f-string such as "
"``f'{expr=}'`` will expand to the text of the expression, an equal sign, "
"then the representation of the evaluated expression.  For example:"
msgstr ""
"Lade till en ``=``\\ -specifikator till :term:`f-string`\\s. En f-sträng som"
" ``f'{expr=}'`` kommer att expandera till uttryckets text, ett likhetstecken"
" och sedan representationen av det utvärderade uttrycket.  Ett exempel:"

#: ../../whatsnew/3.8.rst:265
msgid ""
"The usual :ref:`f-string format specifiers <f-strings>` allow more control "
"over how the result of the expression is displayed::"
msgstr ""
"De vanliga :ref:`f-string-formatspecifikationerna <f-strings>` ger mer "
"kontroll över hur resultatet av uttrycket visas::"

#: ../../whatsnew/3.8.rst:272
msgid ""
"The ``=`` specifier will display the whole expression so that calculations "
"can be shown::"
msgstr ""
"Specificeraren ``=`` visar hela uttrycket så att beräkningar kan visas::"

#: ../../whatsnew/3.8.rst:278
msgid "(Contributed by Eric V. Smith and Larry Hastings in :issue:`36817`.)"
msgstr "(Bidrag från Eric V. Smith och Larry Hastings i :issue:`36817`.)"

#: ../../whatsnew/3.8.rst:282
msgid "PEP 578: Python Runtime Audit Hooks"
msgstr "PEP 578: Python Runtime Audit Hooks"

#: ../../whatsnew/3.8.rst:284
msgid ""
"The PEP adds an Audit Hook and Verified Open Hook. Both are available from "
"Python and native code, allowing applications and frameworks written in pure"
" Python code to take advantage of extra notifications, while also allowing "
"embedders or system administrators to deploy builds of Python where auditing"
" is always enabled."
msgstr ""
"PEP:n lägger till en Audit Hook och Verified Open Hook. Båda är tillgängliga"
" från Python och inbyggd kod, vilket gör att applikationer och ramverk "
"skrivna i ren Python-kod kan dra nytta av extra meddelanden, samtidigt som "
"inbäddare eller systemadministratörer kan distribuera Python-byggnader där "
"granskning alltid är aktiverad."

#: ../../whatsnew/3.8.rst:290
msgid "See :pep:`578` for full details."
msgstr "Se :pep:`578` för fullständig information."

#: ../../whatsnew/3.8.rst:294
msgid "PEP 587: Python Initialization Configuration"
msgstr "PEP 587: Konfiguration av Python-initialisering"

#: ../../whatsnew/3.8.rst:296
msgid ""
"The :pep:`587` adds a new C API to configure the Python Initialization "
"providing finer control on the whole configuration and better error "
"reporting."
msgstr ""
":pep:`587` lägger till ett nytt C API för att konfigurera Python "
"Initialization, vilket ger finare kontroll över hela konfigurationen och "
"bättre felrapportering."

#: ../../whatsnew/3.8.rst:299
msgid "New structures:"
msgstr "Nya strukturer:"

#: ../../whatsnew/3.8.rst:301
msgid ":c:type:`PyConfig`"
msgstr ":c:type:`PyConfig`"

#: ../../whatsnew/3.8.rst:302
msgid ":c:type:`PyPreConfig`"
msgstr ":c:type:`PyPreConfig`"

#: ../../whatsnew/3.8.rst:303
msgid ":c:type:`PyStatus`"
msgstr ":c:type:`PyStatus`"

#: ../../whatsnew/3.8.rst:304
msgid ":c:type:`PyWideStringList`"
msgstr ":c:type:`PyWideStringList`"

#: ../../whatsnew/3.8.rst:306
msgid "New functions:"
msgstr "Nya funktioner:"

#: ../../whatsnew/3.8.rst:308
msgid ":c:func:`PyConfig_Clear`"
msgstr ":c:func:`PyConfig_Clear`"

#: ../../whatsnew/3.8.rst:309
msgid ":c:func:`PyConfig_InitIsolatedConfig`"
msgstr ":c:func:`PyConfig_InitIsolatedConfig`"

#: ../../whatsnew/3.8.rst:310
msgid ":c:func:`PyConfig_InitPythonConfig`"
msgstr ":c:func:`PyConfig_InitPythonConfig`"

#: ../../whatsnew/3.8.rst:311
msgid ":c:func:`PyConfig_Read`"
msgstr ":c:func:`PyConfig_Read`"

#: ../../whatsnew/3.8.rst:312
msgid ":c:func:`PyConfig_SetArgv`"
msgstr ":c:func:`PyConfig_SetArgv`"

#: ../../whatsnew/3.8.rst:313
msgid ":c:func:`PyConfig_SetBytesArgv`"
msgstr ":c:func:`PyConfig_SetBytesArgv`"

#: ../../whatsnew/3.8.rst:314
msgid ":c:func:`PyConfig_SetBytesString`"
msgstr ":c:func:`PyConfig_SetBytesString`"

#: ../../whatsnew/3.8.rst:315
msgid ":c:func:`PyConfig_SetString`"
msgstr ":c:func:`PyConfig_SetString`"

#: ../../whatsnew/3.8.rst:316
msgid ":c:func:`PyPreConfig_InitIsolatedConfig`"
msgstr ":c:func:`PyPreConfig_InitIsolatedConfig`"

#: ../../whatsnew/3.8.rst:317
msgid ":c:func:`PyPreConfig_InitPythonConfig`"
msgstr ":c:func:`PyPreConfig_InitPythonConfig`"

#: ../../whatsnew/3.8.rst:318
msgid ":c:func:`PyStatus_Error`"
msgstr ":c:func:`PyStatus_Error`"

#: ../../whatsnew/3.8.rst:319
msgid ":c:func:`PyStatus_Exception`"
msgstr ":c:func:`PyStatus_Exception`"

#: ../../whatsnew/3.8.rst:320
msgid ":c:func:`PyStatus_Exit`"
msgstr ":c:func:`PyStatus_Exit`"

#: ../../whatsnew/3.8.rst:321
msgid ":c:func:`PyStatus_IsError`"
msgstr ":c:func:`PyStatus_IsError`"

#: ../../whatsnew/3.8.rst:322
msgid ":c:func:`PyStatus_IsExit`"
msgstr ":c:func:`PyStatus_IsExit`"

#: ../../whatsnew/3.8.rst:323
msgid ":c:func:`PyStatus_NoMemory`"
msgstr ":c:func:`PyStatus_NoMemory`"

#: ../../whatsnew/3.8.rst:324
msgid ":c:func:`PyStatus_Ok`"
msgstr ":c:func:`PyStatus_Ok`"

#: ../../whatsnew/3.8.rst:325
msgid ":c:func:`PyWideStringList_Append`"
msgstr ":c:func:`PyWideStringList_Append`"

#: ../../whatsnew/3.8.rst:326
msgid ":c:func:`PyWideStringList_Insert`"
msgstr ":c:func:`PyWideStringList_Insert`"

#: ../../whatsnew/3.8.rst:327
msgid ":c:func:`Py_BytesMain`"
msgstr ":c:func:`Py_BytesMain`"

#: ../../whatsnew/3.8.rst:328
msgid ":c:func:`Py_ExitStatusException`"
msgstr ":c:func:`Py_ExitStatusException`"

#: ../../whatsnew/3.8.rst:329
msgid ":c:func:`Py_InitializeFromConfig`"
msgstr ":c:func:`Py_InitializeFromConfig`"

#: ../../whatsnew/3.8.rst:330
msgid ":c:func:`Py_PreInitialize`"
msgstr ":c:func:`Py_PreInitialize`"

#: ../../whatsnew/3.8.rst:331
msgid ":c:func:`Py_PreInitializeFromArgs`"
msgstr ":c:func:`Py_PreInitializeFromArgs`"

#: ../../whatsnew/3.8.rst:332
msgid ":c:func:`Py_PreInitializeFromBytesArgs`"
msgstr ":c:func:`Py_PreInitializeFromBytesArgs`"

#: ../../whatsnew/3.8.rst:333
msgid ":c:func:`Py_RunMain`"
msgstr ":c:func:`Py_RunMain`"

#: ../../whatsnew/3.8.rst:335
msgid ""
"This PEP also adds ``_PyRuntimeState.preconfig`` (:c:type:`PyPreConfig` "
"type) and ``PyInterpreterState.config`` (:c:type:`PyConfig` type) fields to "
"these internal structures. ``PyInterpreterState.config`` becomes the new "
"reference configuration, replacing global configuration variables and other "
"private variables."
msgstr ""
"Denna PEP lägger också till ``_PyRuntimeState.preconfig`` "
"(:c:type:`PyPreConfig` type) och ``PyInterpreterState.config`` "
"(:c:type:`PyConfig` type) fält till dessa interna strukturer. "
"``PyInterpreterState.config`` blir den nya referenskonfigurationen och "
"ersätter globala konfigurationsvariabler och andra privata variabler."

#: ../../whatsnew/3.8.rst:341
msgid ""
"See :ref:`Python Initialization Configuration <init-config>` for the "
"documentation."
msgstr ""
"Se :ref:`Python Initialization Configuration <init-config>` för "
"dokumentation."

#: ../../whatsnew/3.8.rst:344
msgid "See :pep:`587` for a full description."
msgstr "Se :pep:`587` för en fullständig beskrivning."

#: ../../whatsnew/3.8.rst:346
msgid "(Contributed by Victor Stinner in :issue:`36763`.)"
msgstr "(Bidrag från Victor Stinner i :issue:`36763`.)"

#: ../../whatsnew/3.8.rst:350
msgid "PEP 590: Vectorcall: a fast calling protocol for CPython"
msgstr "PEP 590: Vectorcall: ett snabbt anropsprotokoll för CPython"

#: ../../whatsnew/3.8.rst:352
msgid ""
":ref:`vectorcall` is added to the Python/C API. It is meant to formalize "
"existing optimizations which were already done for various classes. Any "
"static type implementing a callable can use this protocol."
msgstr ""

#: ../../whatsnew/3.8.rst:357
msgid ""
"This is currently provisional. The aim is to make it fully public in Python "
"3.9."
msgstr ""
"Detta är för närvarande provisoriskt. Målet är att göra det helt offentligt "
"i Python 3.9."

#: ../../whatsnew/3.8.rst:360
msgid "See :pep:`590` for a full description."
msgstr "Se :pep:`590` för en fullständig beskrivning."

#: ../../whatsnew/3.8.rst:362
msgid ""
"(Contributed by Jeroen Demeyer, Mark Shannon and Petr Viktorin in "
":issue:`36974`.)"
msgstr ""
"(Bidrag från Jeroen Demeyer, Mark Shannon och Petr Viktorin i "
":issue:`36974`.)"

#: ../../whatsnew/3.8.rst:366
msgid "Pickle protocol 5 with out-of-band data buffers"
msgstr "Pickle-protokoll 5 med buffertar för data utanför bandet"

#: ../../whatsnew/3.8.rst:368
msgid ""
"When :mod:`pickle` is used to transfer large data between Python processes "
"in order to take advantage of multi-core or multi-machine processing, it is "
"important to optimize the transfer by reducing memory copies, and possibly "
"by applying custom techniques such as data-dependent compression."
msgstr ""
"När :mod:`pickle` används för att överföra stora datamängder mellan Python-"
"processer för att dra nytta av bearbetning med flera kärnor eller maskiner "
"är det viktigt att optimera överföringen genom att minska antalet "
"minneskopior och eventuellt tillämpa anpassade tekniker som databeroende "
"komprimering."

#: ../../whatsnew/3.8.rst:373
msgid ""
"The :mod:`pickle` protocol 5 introduces support for out-of-band buffers "
"where :pep:`3118`-compatible data can be transmitted separately from the "
"main pickle stream, at the discretion of the communication layer."
msgstr ""
"Protokollet :mod:`pickle` 5 introducerar stöd för out-of-band buffertar där "
":pep:`3118`\\-kompatibla data kan överföras separat från huvudflödet av "
"pickle, efter kommunikationslagrets gottfinnande."

#: ../../whatsnew/3.8.rst:377
msgid "See :pep:`574` for a full description."
msgstr "Se :pep:`574` för en fullständig beskrivning."

#: ../../whatsnew/3.8.rst:379
msgid "(Contributed by Antoine Pitrou in :issue:`36785`.)"
msgstr "(Bidrag från Antoine Pitrou i :issue:`36785`.)"

#: ../../whatsnew/3.8.rst:383
msgid "Other Language Changes"
msgstr "Andra språkliga förändringar"

#: ../../whatsnew/3.8.rst:385
msgid ""
"A :keyword:`continue` statement was illegal in the :keyword:`finally` clause"
" due to a problem with the implementation.  In Python 3.8 this restriction "
"was lifted. (Contributed by Serhiy Storchaka in :issue:`32489`.)"
msgstr ""
"En :keyword:`continue`\\-sats var olaglig i :keyword:`finally`\\-satsen på "
"grund av ett problem med implementeringen.  I Python 3.8 togs denna "
"begränsning bort. (Bidrag från Serhiy Storchaka i :issue:`32489`.)"

#: ../../whatsnew/3.8.rst:390
msgid ""
"The :class:`bool`, :class:`int`, and :class:`fractions.Fraction` types now "
"have an :meth:`~int.as_integer_ratio` method like that found in "
":class:`float` and :class:`decimal.Decimal`.  This minor API extension makes"
" it possible to write ``numerator, denominator = x.as_integer_ratio()`` and "
"have it work across multiple numeric types. (Contributed by Lisa Roach in "
":issue:`33073` and Raymond Hettinger in :issue:`37819`.)"
msgstr ""
"Typerna :class:`bool`, :class:`int`, och :class:`fractions.Fraction` har nu "
"en :meth:`~int.as_integer_ratio`\\-metod som den som finns i :class:`float` "
"och :class:`decimal.Decimal`.  Detta mindre API-tillägg gör det möjligt att "
"skriva ``numerator, denominator = x.as_integer_ratio()`` och få det att "
"fungera över flera numeriska typer. (Bidrag från Lisa Roach i :issue:`33073`"
" och Raymond Hettinger i :issue:`37819`.)"

#: ../../whatsnew/3.8.rst:398
msgid ""
"Constructors of :class:`int`, :class:`float` and :class:`complex` will now "
"use the :meth:`~object.__index__` special method, if available and the "
"corresponding method :meth:`~object.__int__`, :meth:`~object.__float__` or "
":meth:`~object.__complex__` is not available. (Contributed by Serhiy "
"Storchaka in :issue:`20092`.)"
msgstr ""
"Konstruktörer av :class:`int`, :class:`float` och :class:`complex` kommer nu"
" att använda specialmetoden :meth:`~object.__index__`, om den är tillgänglig"
" och motsvarande metod :meth:`~object.__int__`, :meth:`~object.__float__` "
"eller :meth:`~object.__complex__` inte är tillgänglig. (Bidrag från Serhiy "
"Storchaka i :issue:`20092`.)"

#: ../../whatsnew/3.8.rst:404
msgid ""
"Added support of ``\\N{name}`` escapes in :mod:`regular expressions <re>`::"
msgstr ""

#: ../../whatsnew/3.8.rst:411
msgid ""
"(Contributed by Jonathan Eunice and Serhiy Storchaka in :issue:`30688`.)"
msgstr "(Bidrag från Jonathan Eunice och Serhiy Storchaka i :issue:`30688`.)"

#: ../../whatsnew/3.8.rst:413
msgid ""
"Dict and dictviews are now iterable in reversed insertion order using "
":func:`reversed`. (Contributed by Rémi Lapeyre in :issue:`33462`.)"
msgstr ""
"Dict och dictviews är nu itererbara i omvänd inmatningsordning med "
":func:`reversed`. (Bidrag från Rémi Lapeyre i :issue:`33462`.)"

#: ../../whatsnew/3.8.rst:416
msgid ""
"The syntax allowed for keyword names in function calls was further "
"restricted. In particular, ``f((keyword)=arg)`` is no longer allowed. It was"
" never intended to permit more than a bare name on the left-hand side of a "
"keyword argument assignment term. (Contributed by Benjamin Peterson in "
":issue:`34641`.)"
msgstr ""
"Den syntax som tillåts för nyckelordsnamn i funktionsanrop har begränsats "
"ytterligare. I synnerhet är ``f((nyckelord)=arg)`` inte längre tillåtet. Det"
" var aldrig meningen att tillåta mer än ett namn på vänstersidan av ett "
"nyckelords argumenttilldelningsterm. (Bidrag från Benjamin Peterson i "
":issue:`34641`.)"

#: ../../whatsnew/3.8.rst:422
msgid ""
"Generalized iterable unpacking in :keyword:`yield` and :keyword:`return` "
"statements no longer requires enclosing parentheses. This brings the *yield*"
" and *return* syntax into better agreement with normal assignment syntax::"
msgstr ""
"Generaliserad iterabeluppackning i :keyword:`yield`\\- och "
":keyword:`return`\\-satser kräver inte längre omslutande parenteser. Detta "
"gör att syntaxen för *yield* och *return* stämmer bättre överens med normal "
"syntax för tilldelningar::"

#: ../../whatsnew/3.8.rst:434
msgid "(Contributed by David Cuthbert and Jordan Chapman in :issue:`32117`.)"
msgstr "(Bidrag från David Cuthbert och Jordan Chapman i :issue:`32117`.)"

#: ../../whatsnew/3.8.rst:436
msgid ""
"When a comma is missed in code such as ``[(10, 20) (30, 40)]``, the compiler"
" displays a :exc:`SyntaxWarning` with a helpful suggestion. This improves on"
" just having a :exc:`TypeError` indicating that the first tuple was not "
"callable.  (Contributed by Serhiy Storchaka in :issue:`15248`.)"
msgstr ""
"När ett kommatecken missas i kod som ``[(10, 20) (30, 40)]``, visar "
"kompilatorn en :exc:`SyntaxWarning` med ett användbart förslag. Detta är en "
"förbättring jämfört med att bara ha en :exc:`TypeError` som indikerar att "
"den första tupeln inte var anropsbar.  (Bidrag från Serhiy Storchaka i "
":issue:`15248`.)"

#: ../../whatsnew/3.8.rst:442
msgid ""
"Arithmetic operations between subclasses of :class:`datetime.date` or "
":class:`datetime.datetime` and :class:`datetime.timedelta` objects now "
"return an instance of the subclass, rather than the base class. This also "
"affects the return type of operations whose implementation (directly or "
"indirectly) uses :class:`datetime.timedelta` arithmetic, such as "
":meth:`~datetime.datetime.astimezone`. (Contributed by Paul Ganssle in "
":issue:`32417`.)"
msgstr ""
"Aritmetiska operationer mellan underklasser av :class:`datetime.date` eller "
":class:`datetime.datetime` och :class:`datetime.timedelta`\\-objekt "
"returnerar nu en instans av underklassen, snarare än basklassen. Detta "
"påverkar också returtypen för operationer vars implementering (direkt eller "
"indirekt) använder :class:`datetime.timedelta`\\-aritmetik, till exempel "
":meth:`~datetime.datetime.astimezone`. (Bidrag från Paul Ganssle i "
":issue:`32417`.)"

#: ../../whatsnew/3.8.rst:450
msgid ""
"When the Python interpreter is interrupted by Ctrl-C (SIGINT) and the "
"resulting :exc:`KeyboardInterrupt` exception is not caught, the Python "
"process now exits via a SIGINT signal or with the correct exit code such "
"that the calling process can detect that it died due to a Ctrl-C.  Shells on"
" POSIX and Windows use this to properly terminate scripts in interactive "
"sessions. (Contributed by Google via Gregory P. Smith in :issue:`1054041`.)"
msgstr ""
"När Python-tolken avbryts av Ctrl-C (SIGINT) och det resulterande "
":exc:`KeyboardInterrupt`\\-undantaget inte fångas upp, avslutas Python-"
"processen nu via en SIGINT-signal eller med rätt utgångskod så att den "
"anropande processen kan upptäcka att den dog på grund av ett Ctrl-C.  Skal "
"på POSIX och Windows använder detta för att avsluta skript i interaktiva "
"sessioner på rätt sätt. (Bidrag från Google via Gregory P. Smith i "
":issue:`1054041`.)"

#: ../../whatsnew/3.8.rst:457
msgid ""
"Some advanced styles of programming require updating the "
":class:`types.CodeType` object for an existing function.  Since code objects"
" are immutable, a new code object needs to be created, one that is modeled "
"on the existing code object.  With 19 parameters, this was somewhat tedious."
"  Now, the new ``replace()`` method makes it possible to create a clone with"
" a few altered parameters."
msgstr ""
"Vissa avancerade programmeringsstilar kräver uppdatering av "
":class:`types.CodeType`\\-objektet för en befintlig funktion.  Eftersom "
"kodobjekt är oföränderliga måste ett nytt kodobjekt skapas, ett som är "
"modellerat på det befintliga kodobjektet.  Med 19 parametrar var detta något"
" tråkigt.  Nu gör den nya metoden ``replace()`` det möjligt att skapa en "
"klon med några få ändrade parametrar."

#: ../../whatsnew/3.8.rst:464
msgid ""
"Here's an example that alters the :func:`statistics.mean` function to "
"prevent the *data* parameter from being used as a keyword argument::"
msgstr ""
"Här är ett exempel som ändrar funktionen :func:`statistics.mean` för att "
"förhindra att parametern *data* används som ett nyckelordsargument::"

#: ../../whatsnew/3.8.rst:476
msgid "(Contributed by Victor Stinner in :issue:`37032`.)"
msgstr "(Bidrag från Victor Stinner i :issue:`37032`.)"

#: ../../whatsnew/3.8.rst:478
msgid ""
"For integers, the three-argument form of the :func:`pow` function now "
"permits the exponent to be negative in the case where the base is relatively"
" prime to the modulus. It then computes a modular inverse to the base when "
"the exponent is ``-1``, and a suitable power of that inverse for other "
"negative exponents.  For example, to compute the `modular multiplicative "
"inverse <https://en.wikipedia.org/wiki/Modular_multiplicative_inverse>`_ of "
"38 modulo 137, write::"
msgstr ""
"För heltal tillåter nu :func:`pow`\\-funktionens treargumentform att "
"exponenten är negativ i de fall där basen är relativt prim till modulus. Den"
" beräknar sedan en modulär invers till basen när exponenten är ``\\-1``, och"
" en lämplig potens av denna invers för andra negativa exponenter.  För att "
"till exempel beräkna den `modulära multiplikativa inversen "
"<https://en.wikipedia.org/wiki/Modular_multiplicative_inverse>`_ av 38 "
"modulo 137, skriv::"

#: ../../whatsnew/3.8.rst:492
msgid ""
"Modular inverses arise in the solution of `linear Diophantine equations "
"<https://en.wikipedia.org/wiki/Diophantine_equation>`_. For example, to find"
" integer solutions for ``4258𝑥 + 147𝑦 = 369``, first rewrite as ``4258𝑥 ≡ "
"369 (mod 147)`` then solve:"
msgstr ""
"Modulära inverser förekommer vid lösning av `linjära diofantiska ekvationer "
"<https://en.wikipedia.org/wiki/Diophantine_equation>`_. Till exempel, för "
"att hitta heltalslösningar för ``4258𝑥 + 147𝑦 = 369``, skriv först om till "
"``4258𝑥 ≡ 369 (mod 147)`` och lös sedan:"

#: ../../whatsnew/3.8.rst:502
msgid "(Contributed by Mark Dickinson in :issue:`36027`.)"
msgstr "(Bidrag från Mark Dickinson i :issue:`36027`.)"

#: ../../whatsnew/3.8.rst:504
msgid ""
"Dict comprehensions have been synced-up with dict literals so that the key "
"is computed first and the value second::"
msgstr ""
"Dict-komprehensioner har synkroniserats med dict-litteraler så att nyckeln "
"beräknas först och värdet sedan::"

#: ../../whatsnew/3.8.rst:519
msgid ""
"The guaranteed execution order is helpful with assignment expressions "
"because variables assigned in the key expression will be available in the "
"value expression::"
msgstr ""
"Den garanterade exekveringsordningen är användbar med tilldelningsuttryck "
"eftersom variabler som tilldelats i nyckeluttrycket kommer att vara "
"tillgängliga i värdeuttrycket::"

#: ../../whatsnew/3.8.rst:529
msgid "(Contributed by Jörn Heissler in :issue:`35224`.)"
msgstr "(Bidrag från Jörn Heissler i :issue:`35224`.)"

#: ../../whatsnew/3.8.rst:531
msgid ""
"The :meth:`object.__reduce__` method can now return a tuple from two to six "
"elements long. Formerly, five was the limit.  The new, optional sixth "
"element is a callable with a ``(obj, state)`` signature.  This allows the "
"direct control over the state-updating behavior of a specific object.  If "
"not *None*, this callable will have priority over the object's "
":meth:`~__setstate__` method. (Contributed by Pierre Glaser and Olivier "
"Grisel in :issue:`35900`.)"
msgstr ""

#: ../../whatsnew/3.8.rst:540
msgid "New Modules"
msgstr "Nya moduler"

#: ../../whatsnew/3.8.rst:542
msgid ""
"The new :mod:`importlib.metadata` module provides (provisional) support for "
"reading metadata from third-party packages.  For example, it can extract an "
"installed package's version number, list of entry points, and more::"
msgstr ""
"Den nya :mod:`importlib.metadata`\\-modulen ger (provisoriskt) stöd för att "
"läsa metadata från tredjepartspaket.  Den kan till exempel extrahera ett "
"installerat pakets versionsnummer, lista över ingångspunkter med mera:"

#: ../../whatsnew/3.8.rst:561
msgid "(Contributed by Barry Warsaw and Jason R. Coombs in :issue:`34632`.)"
msgstr "(Bidrag från Barry Warsaw och Jason R. Coombs i :issue:`34632`.)"

#: ../../whatsnew/3.8.rst:565
msgid "Improved Modules"
msgstr "Förbättrade moduler"

#: ../../whatsnew/3.8.rst:568
msgid "ast"
msgstr "ast"

#: ../../whatsnew/3.8.rst:570
msgid ""
"AST nodes now have ``end_lineno`` and ``end_col_offset`` attributes, which "
"give the precise location of the end of the node.  (This only applies to "
"nodes that have ``lineno`` and ``col_offset`` attributes.)"
msgstr ""
"AST-noder har nu attributen ``end_lineno`` och ``end_col_offset``, som anger"
" den exakta platsen för nodens slut.  (Detta gäller endast för noder som har"
" attributen ``lineno`` och ``col_offset``)"

#: ../../whatsnew/3.8.rst:574
msgid ""
"New function :func:`ast.get_source_segment` returns the source code for a "
"specific AST node."
msgstr ""
"Ny funktion :func:`ast.get_source_segment` returnerar källkoden för en "
"specifik AST-nod."

#: ../../whatsnew/3.8.rst:577
msgid "(Contributed by Ivan Levkivskyi in :issue:`33416`.)"
msgstr "(Bidrag från Ivan Levkivskyi i :issue:`33416`.)"

#: ../../whatsnew/3.8.rst:579
msgid "The :func:`ast.parse` function has some new flags:"
msgstr "Funktionen :func:`ast.parse` har fått några nya flaggor:"

#: ../../whatsnew/3.8.rst:581
msgid ""
"``type_comments=True`` causes it to return the text of :pep:`484` and "
":pep:`526` type comments associated with certain AST nodes;"
msgstr ""
"``type_comments=True`` gör att den returnerar texten i kommentarer av typen "
":pep:`484` och :pep:`526` som är associerade med vissa AST-noder;"

#: ../../whatsnew/3.8.rst:584
msgid ""
"``mode='func_type'`` can be used to parse :pep:`484` \"signature type "
"comments\" (returned for function definition AST nodes);"
msgstr ""
"``mode='func_type'`` kan användas för att analysera :pep:`484` \"signature "
"type comments\" (returneras för funktionsdefinition AST-noder);"

#: ../../whatsnew/3.8.rst:587
msgid ""
"``feature_version=(3, N)`` allows specifying an earlier Python 3 version.  "
"For example, ``feature_version=(3, 4)`` will treat :keyword:`async` and "
":keyword:`await` as non-reserved words."
msgstr ""
"``feature_version=(3, N)`` gör det möjligt att ange en tidigare Python "
"3-version.  Till exempel, ``feature_version=(3, 4)`` kommer att behandla "
":keyword:`async` och :keyword:`await` som icke-reserverade ord."

#: ../../whatsnew/3.8.rst:591
msgid "(Contributed by Guido van Rossum in :issue:`35766`.)"
msgstr "(Bidrag från Guido van Rossum i :issue:`35766`.)"

#: ../../whatsnew/3.8.rst:595
msgid "asyncio"
msgstr "asyncio"

#: ../../whatsnew/3.8.rst:597
msgid ""
":func:`asyncio.run` has graduated from the provisional to stable API. This "
"function can be used to execute a :term:`coroutine` and return the result "
"while automatically managing the event loop. For example::"
msgstr ""
":func:`asyncio.run` har gått från provisional till stable API. Denna "
"funktion kan användas för att exekvera en :term:`coroutine` och returnera "
"resultatet samtidigt som händelseslingan hanteras automatiskt. Till "
"exempel::"

#: ../../whatsnew/3.8.rst:609
msgid "This is *roughly* equivalent to::"
msgstr "Detta är *helt* likvärdigt med::"

#: ../../whatsnew/3.8.rst:626
msgid ""
"The actual implementation is significantly more complex. Thus, "
":func:`asyncio.run` should be the preferred way of running asyncio programs."
msgstr ""
"Den faktiska implementationen är betydligt mer komplex. Därför bör "
":func:`asyncio.run` vara det föredragna sättet att köra asyncioprogram."

#: ../../whatsnew/3.8.rst:629
msgid "(Contributed by Yury Selivanov in :issue:`32314`.)"
msgstr "(Bidrag från Yury Selivanov i :issue:`32314`.)"

#: ../../whatsnew/3.8.rst:631
msgid ""
"Running ``python -m asyncio`` launches a natively async REPL.  This allows "
"rapid experimentation with code that has a top-level :keyword:`await`.  "
"There is no longer a need to directly call ``asyncio.run()`` which would "
"spawn a new event loop on every invocation:"
msgstr ""
"Genom att köra ``python -m asyncio`` startas en inbyggd asynkron REPL.  "
"Detta möjliggör snabba experiment med kod som har en toppnivå "
":keyword:`await`.  Det finns inte längre något behov av att direkt anropa "
"``asyncio.run()`` vilket skulle skapa en ny händelseslinga vid varje anrop:"

#: ../../whatsnew/3.8.rst:646
msgid "(Contributed by Yury Selivanov in :issue:`37028`.)"
msgstr "(Bidrag från Yury Selivanov i :issue:`37028`.)"

#: ../../whatsnew/3.8.rst:648 ../../whatsnew/3.8.rst:1964
msgid ""
"The exception :class:`asyncio.CancelledError` now inherits from "
":class:`BaseException` rather than :class:`Exception` and no longer inherits"
" from :class:`concurrent.futures.CancelledError`. (Contributed by Yury "
"Selivanov in :issue:`32528`.)"
msgstr ""
"Undantaget :class:`asyncio.CancelledError` ärver nu från "
":class:`BaseException` snarare än :class:`Exception` och ärver inte längre "
"från :class:`concurrent.futures.CancelledError`. (Bidrag från Yury Selivanov"
" i :issue:`32528`.)"

#: ../../whatsnew/3.8.rst:653
msgid ""
"On Windows, the default event loop is now "
":class:`~asyncio.ProactorEventLoop`. (Contributed by Victor Stinner in "
":issue:`34687`.)"
msgstr ""
"I Windows är standardhändelseslingan nu :class:`~asyncio.ProactorEventLoop`."
" (Bidrag från Victor Stinner i :issue:`34687`.)"

#: ../../whatsnew/3.8.rst:656
msgid ""
":class:`~asyncio.ProactorEventLoop` now also supports UDP. (Contributed by "
"Adam Meily and Andrew Svetlov in :issue:`29883`.)"
msgstr ""
":class:`~asyncio.ProactorEventLoop` stöder nu även UDP. (Bidrag från Adam "
"Meily och Andrew Svetlov i :issue:`29883`.)"

#: ../../whatsnew/3.8.rst:659
msgid ""
":class:`~asyncio.ProactorEventLoop` can now be interrupted by "
":exc:`KeyboardInterrupt` (\"CTRL+C\"). (Contributed by Vladimir Matveev in "
":issue:`23057`.)"
msgstr ""
":class:`~asyncio.ProactorEventLoop` kan nu avbrytas med "
":exc:`KeyboardInterrupt` (\"CTRL+C\"). (Bidrag från Vladimir Matveev i "
":issue:`23057`.)"

#: ../../whatsnew/3.8.rst:663
msgid ""
"Added :meth:`asyncio.Task.get_coro` for getting the wrapped coroutine within"
" an :class:`asyncio.Task`. (Contributed by Alex Grönholm in :issue:`36999`.)"
msgstr ""
"Lagt till :meth:`asyncio.Task.get_coro` för att hämta den omslutna "
"coroutinen inom en :class:`asyncio.Task`. (Bidrag från Alex Grönholm i "
":issue:`36999`.)"

#: ../../whatsnew/3.8.rst:667
msgid ""
"Asyncio tasks can now be named, either by passing the ``name`` keyword "
"argument to :func:`asyncio.create_task` or the "
":meth:`~asyncio.loop.create_task` event loop method, or by calling the "
":meth:`~asyncio.Task.set_name` method on the task object. The task name is "
"visible in the ``repr()`` output of :class:`asyncio.Task` and can also be "
"retrieved using the :meth:`~asyncio.Task.get_name` method. (Contributed by "
"Alex Grönholm in :issue:`34270`.)"
msgstr ""
"Asyncio-uppgifter kan nu namnges, antingen genom att skicka "
"nyckelordsargumentet ``name`` till :func:`asyncio.create_task` eller "
":meth:`~asyncio.loop.create_task` event loop-metoden, eller genom att anropa"
" :meth:`~asyncio.Task.set_name`\\-metoden på uppgiftsobjektet. "
"Uppgiftsnamnet är synligt i ``repr()``\\-utdata från :class:`asyncio.Task` "
"och kan också hämtas med metoden :meth:`~asyncio.Task.get_name`. (Bidrag "
"från Alex Grönholm i :issue:`34270`.)"

#: ../../whatsnew/3.8.rst:675
msgid ""
"Added support for `Happy Eyeballs "
"<https://en.wikipedia.org/wiki/Happy_Eyeballs>`_ to "
":func:`asyncio.loop.create_connection`. To specify the behavior, two new "
"parameters have been added: *happy_eyeballs_delay* and *interleave*. The "
"Happy Eyeballs algorithm improves responsiveness in applications that "
"support IPv4 and IPv6 by attempting to simultaneously connect using both. "
"(Contributed by twisteroid ambassador in :issue:`33530`.)"
msgstr ""
"Stöd för `Happy Eyeballs <https://en.wikipedia.org/wiki/Happy_Eyeballs>`_ "
"har lagts till i :func:`asyncio.loop.create_connection`. För att specificera"
" beteendet har två nya parametrar lagts till: *happy_eyeballs_delay* och "
"*interleave*. Happy Eyeballs-algoritmen förbättrar responsen i applikationer"
" som stöder IPv4 och IPv6 genom att försöka ansluta samtidigt med båda. "
"(Bidrag från twisteroid-ambassadören i :issue:`33530`.)"

#: ../../whatsnew/3.8.rst:685
msgid "builtins"
msgstr "inbyggda"

#: ../../whatsnew/3.8.rst:687
msgid ""
"The :func:`compile` built-in has been improved to accept the "
"``ast.PyCF_ALLOW_TOP_LEVEL_AWAIT`` flag. With this new flag passed, "
":func:`compile` will allow top-level ``await``, ``async for`` and ``async "
"with`` constructs that are usually considered invalid syntax. Asynchronous "
"code object marked with the ``CO_COROUTINE`` flag may then be returned. "
"(Contributed by Matthias Bussonnier in :issue:`34616`)"
msgstr ""
"Den inbyggda :func:`compile` har förbättrats för att acceptera "
"``ast.PyCF_ALLOW_TOP_LEVEL_AWAIT`` flaggan. Med denna nya flagga godkänd, "
"kommer :func:`compile` att tillåta toppnivå ``await``, ``async for`` och "
"``async with`` konstruktioner som vanligtvis anses vara ogiltig syntax. "
"Asynkrona kodobjekt markerade med flaggan ``CO_COROUTINE`` kan då "
"returneras. (Bidrag från Matthias Bussonnier i :issue:`34616`)"

#: ../../whatsnew/3.8.rst:696
msgid "collections"
msgstr "samlingar"

#: ../../whatsnew/3.8.rst:698
msgid ""
"The :meth:`~collections.somenamedtuple._asdict` method for "
":func:`collections.namedtuple` now returns a :class:`dict` instead of a "
":class:`collections.OrderedDict`. This works because regular dicts have "
"guaranteed ordering since Python 3.7. If the extra features of "
":class:`OrderedDict` are required, the suggested remediation is to cast the "
"result to the desired type: ``OrderedDict(nt._asdict())``. (Contributed by "
"Raymond Hettinger in :issue:`35864`.)"
msgstr ""
"Metoden :meth:`~collections.somenamedtuple._asdict` för "
":func:`collections.namedtuple` returnerar nu en :class:`dict` istället för "
"en :class:`collections.OrderedDict`. Detta fungerar eftersom vanliga dicts "
"har garanterad ordning sedan Python 3.7. Om de extra funktionerna i "
":class:`OrderedDict` krävs, är den föreslagna lösningen att kasta resultatet"
" till önskad typ: ``OrderedDict(nt._asdict())``. (Bidrag från Raymond "
"Hettinger i :issue:`35864`.)"

#: ../../whatsnew/3.8.rst:708
msgid "cProfile"
msgstr "cProfil"

#: ../../whatsnew/3.8.rst:710
msgid ""
"The :class:`cProfile.Profile <profile.Profile>` class can now be used as a "
"context manager. Profile a block of code by running::"
msgstr ""
"Klassen :class:`cProfile.Profile <profile.Profile>` kan nu användas som en "
"kontexthanterare. Profilera ett kodblock genom att köra::"

#: ../../whatsnew/3.8.rst:719
msgid "(Contributed by Scott Sanderson in :issue:`29235`.)"
msgstr "(Bidrag från Scott Sanderson i :issue:`29235`.)"

#: ../../whatsnew/3.8.rst:723
msgid "csv"
msgstr "csv"

#: ../../whatsnew/3.8.rst:725
msgid ""
"The :class:`csv.DictReader` now returns instances of :class:`dict` instead "
"of a :class:`collections.OrderedDict`.  The tool is now faster and uses less"
" memory while still preserving the field order. (Contributed by Michael "
"Selik in :issue:`34003`.)"
msgstr ""
":class:`csv.DictReader` returnerar nu instanser av :class:`dict` istället "
"för en :class:`collections.OrderedDict`.  Verktyget är nu snabbare och "
"använder mindre minne samtidigt som fältordningen bevaras. (Bidrag från "
"Michael Selik i :issue:`34003`.)"

#: ../../whatsnew/3.8.rst:732
msgid "curses"
msgstr "förbannelser"

#: ../../whatsnew/3.8.rst:734
msgid ""
"Added a new variable holding structured version information for the "
"underlying ncurses library: :data:`~curses.ncurses_version`. (Contributed by"
" Serhiy Storchaka in :issue:`31680`.)"
msgstr ""
"En ny variabel har lagts till som innehåller strukturerad "
"versionsinformation för det underliggande ncurses-biblioteket: "
":data:`~curses.ncurses_version`. (Bidrag från Serhiy Storchaka i "
":issue:`31680`.)"

#: ../../whatsnew/3.8.rst:740
msgid "ctypes"
msgstr "ctyper"

#: ../../whatsnew/3.8.rst:742
msgid ""
"On Windows, :class:`~ctypes.CDLL` and subclasses now accept a *winmode* "
"parameter to specify flags for the underlying ``LoadLibraryEx`` call. The "
"default flags are set to only load DLL dependencies from trusted locations, "
"including the path where the DLL is stored (if a full or partial path is "
"used to load the initial DLL) and paths added by "
":func:`~os.add_dll_directory`. (Contributed by Steve Dower in "
":issue:`36085`.)"
msgstr ""
"I Windows accepterar nu :class:`~ctypes.CDLL` och underklasser en "
"*winmode*-parameter för att ange flaggor för det underliggande "
"``LoadLibraryEx``\\-anropet. Standardflaggorna är inställda på att endast "
"ladda DLL-beroenden från betrodda platser, inklusive sökvägen där DLL:en är "
"lagrad (om en fullständig eller partiell sökväg används för att ladda den "
"ursprungliga DLL:en) och sökvägar som lagts till av "
":func:`~os.add_dll_directory`. (Bidrag från Steve Dower i :issue:`36085`.)"

#: ../../whatsnew/3.8.rst:751
msgid "datetime"
msgstr "datatid"

#: ../../whatsnew/3.8.rst:753
msgid ""
"Added new alternate constructors :meth:`datetime.date.fromisocalendar` and "
":meth:`datetime.datetime.fromisocalendar`, which construct :class:`date` and"
" :class:`datetime` objects respectively from ISO year, week number, and "
"weekday; these are the inverse of each class's ``isocalendar`` method. "
"(Contributed by Paul Ganssle in :issue:`36004`.)"
msgstr ""

#: ../../whatsnew/3.8.rst:761
msgid "functools"
msgstr "functools"

#: ../../whatsnew/3.8.rst:763
msgid ""
":func:`functools.lru_cache` can now be used as a straight decorator rather "
"than as a function returning a decorator.  So both of these are now "
"supported::"
msgstr ""
":func:`functools.lru_cache` kan nu användas som en direkt dekorator snarare "
"än som en funktion som returnerar en dekorator.  Så båda dessa stöds nu::"

#: ../../whatsnew/3.8.rst:774
msgid "(Contributed by Raymond Hettinger in :issue:`36772`.)"
msgstr "(Bidrag från Raymond Hettinger i :issue:`36772`.)"

#: ../../whatsnew/3.8.rst:776
msgid ""
"Added a new :func:`functools.cached_property` decorator, for computed "
"properties cached for the life of the instance. ::"
msgstr ""
"Lagt till en ny :func:`functools.cached_property`\\-dekorator, för beräknade"
" egenskaper som cachas under instansens livstid. ::"

#: ../../whatsnew/3.8.rst:790
msgid "(Contributed by Carl Meyer in :issue:`21145`)"
msgstr "(Bidrag från Carl Meyer i :issue:`21145`)"

#: ../../whatsnew/3.8.rst:793
msgid ""
"Added a new :func:`functools.singledispatchmethod` decorator that converts "
"methods into :term:`generic functions <generic function>` using "
":term:`single dispatch`::"
msgstr ""
"Lagt till en ny :func:`functools.singledispatchmethod`\\-dekorator som "
"konverterar metoder till :term:`generiska funktioner <generic function>` med"
" :term:`single dispatch`::"

#: ../../whatsnew/3.8.rst:815
msgid "(Contributed by Ethan Smith in :issue:`32380`)"
msgstr "(Bidrag från Ethan Smith i :issue:`32380`)"

#: ../../whatsnew/3.8.rst:818
msgid "gc"
msgstr "gc"

#: ../../whatsnew/3.8.rst:820
msgid ""
":func:`~gc.get_objects` can now receive an optional *generation* parameter "
"indicating a generation to get objects from. (Contributed by Pablo Galindo "
"in :issue:`36016`.)"
msgstr ""
":func:`~gc.get_objects` kan nu ta emot en valfri *generation* parameter som "
"anger en generation att hämta objekt från. (Bidrag från Pablo Galindo i "
":issue:`36016`.)"

#: ../../whatsnew/3.8.rst:826
msgid "gettext"
msgstr "gettext"

#: ../../whatsnew/3.8.rst:828
msgid ""
"Added :func:`~gettext.pgettext` and its variants. (Contributed by Franz "
"Glasner, Éric Araujo, and Cheryl Sabella in :issue:`2504`.)"
msgstr ""
"Lagt till :func:`~gettext.pgettext` och dess varianter. (Bidrag från Franz "
"Glasner, Éric Araujo och Cheryl Sabella i :issue:`2504`.)"

#: ../../whatsnew/3.8.rst:833
msgid "gzip"
msgstr "gzip"

#: ../../whatsnew/3.8.rst:835
msgid ""
"Added the *mtime* parameter to :func:`gzip.compress` for reproducible "
"output. (Contributed by Guo Ci Teo in :issue:`34898`.)"
msgstr ""
"Lade till parametern *mtime* i :func:`gzip.compress` för reproducerbar "
"utdata. (Bidrag från Guo Ci Teo i :issue:`34898`.)"

#: ../../whatsnew/3.8.rst:838
msgid ""
"A :exc:`~gzip.BadGzipFile` exception is now raised instead of :exc:`OSError`"
" for certain types of invalid or corrupt gzip files. (Contributed by Filip "
"Gruszczyński, Michele Orrù, and Zackery Spytz in :issue:`6584`.)"
msgstr ""
"Ett :exc:`~gzip.BadGzipFile`\\-undantag tas nu upp istället för "
":exc:`OSError` för vissa typer av ogiltiga eller korrupta gzip-filer. "
"(Bidrag från Filip Gruszczyński, Michele Orrù och Zackery Spytz i "
":issue:`6584`.)"

#: ../../whatsnew/3.8.rst:845
msgid "IDLE and idlelib"
msgstr "IDLE och idlelib"

#: ../../whatsnew/3.8.rst:847
msgid ""
"Output over N lines (50 by default) is squeezed down to a button. N can be "
"changed in the PyShell section of the General page of the Settings dialog.  "
"Fewer, but possibly extra long, lines can be squeezed by right clicking on "
"the output.  Squeezed output can be expanded in place by double-clicking the"
" button or into the clipboard or a separate window by right-clicking the "
"button.  (Contributed by Tal Einat in :issue:`1529353`.)"
msgstr ""
"Utdata över N rader (50 som standard) pressas ner till en knapp. N kan "
"ändras i avsnittet PyShell på sidan Allmänt i dialogrutan Inställningar.  "
"Färre, men eventuellt extra långa, rader kan pressas genom att högerklicka "
"på utmatningen.  Pressad utdata kan expanderas på plats genom att "
"dubbelklicka på knappen eller till urklippet eller ett separat fönster genom"
" att högerklicka på knappen.  (Bidrag från Tal Einat i :issue:`1529353`.)"

#: ../../whatsnew/3.8.rst:854
msgid ""
"Add \"Run Customized\" to the Run menu to run a module with customized "
"settings. Any command line arguments entered are added to sys.argv. They "
"also re-appear in the box for the next customized run.  One can also "
"suppress the normal Shell main module restart.  (Contributed by Cheryl "
"Sabella, Terry Jan Reedy, and others in :issue:`5680` and :issue:`37627`.)"
msgstr ""
"Lägg till \"Run Customized\" i Run-menyn för att köra en modul med anpassade"
" inställningar. Alla kommandoradsargument som anges läggs till i sys.argv. "
"De visas också igen i rutan för nästa anpassade körning.  Man kan också "
"undertrycka den normala omstarten av Shell-huvudmodulen.  (Bidrag från "
"Cheryl Sabella, Terry Jan Reedy och andra i :issue:`5680` och "
":issue:`37627`.)"

#: ../../whatsnew/3.8.rst:860
msgid ""
"Added optional line numbers for IDLE editor windows. Windows open without "
"line numbers unless set otherwise in the General tab of the configuration "
"dialog.  Line numbers for an existing window are shown and hidden in the "
"Options menu. (Contributed by Tal Einat and Saimadhav Heblikar in "
":issue:`17535`.)"
msgstr ""
"Valfria radnummer för IDLE-redigeringsfönster har lagts till. Fönster öppnas"
" utan radnummer om inget annat anges på fliken Allmänt i "
"konfigurationsdialogrutan.  Radnummer för ett befintligt fönster visas och "
"döljs i menyn Alternativ. (Bidrag från Tal Einat och Saimadhav Heblikar i "
":issue:`17535`.)"

#: ../../whatsnew/3.8.rst:866
msgid ""
"OS native encoding is now used for converting between Python strings and Tcl"
" objects. This allows IDLE to work with emoji and other non-BMP characters. "
"These characters can be displayed or copied and pasted to or from the "
"clipboard.  Converting strings from Tcl to Python and back now never fails. "
"(Many people worked on this for eight years but the problem was finally "
"solved by Serhiy Storchaka in :issue:`13153`.)"
msgstr ""
"Nu används OS:s inbyggda kodning för konvertering mellan Python-strängar och"
" Tcl-objekt. Detta gör att IDLE kan arbeta med emoji och andra icke-BMP-"
"tecken. Dessa tecken kan visas eller kopieras och klistras in till eller "
"från urklippet.  Konvertering av strängar från Tcl till Python och tillbaka "
"misslyckas nu aldrig. (Många människor arbetade med detta i åtta år men "
"problemet löstes slutligen av Serhiy Storchaka i :issue:`13153`)"

#: ../../whatsnew/3.8.rst:873
msgid "New in 3.8.1:"
msgstr "Nytt i 3.8.1:"

#: ../../whatsnew/3.8.rst:875
msgid ""
"Add option to toggle cursor blink off.  (Contributed by Zackery Spytz in "
":issue:`4603`.)"
msgstr ""
"Lägg till alternativ för att stänga av markörens blinkning.  (Bidrag från "
"Zackery Spytz i :issue:`4603`.)"

#: ../../whatsnew/3.8.rst:878
msgid ""
"Escape key now closes IDLE completion windows.  (Contributed by Johnny "
"Najera in :issue:`38944`.)"
msgstr ""
"Escape-tangenten stänger nu IDLE-avslutningsfönster.  (Bidrag från Johnny "
"Najera i :issue:`38944`.)"

#: ../../whatsnew/3.8.rst:881
msgid "The changes above have been backported to 3.7 maintenance releases."
msgstr "Ändringarna ovan har backporterats till underhållsversionerna av 3.7."

#: ../../whatsnew/3.8.rst:883
msgid ""
"Add keywords to module name completion list.  (Contributed by Terry J. Reedy"
" in :issue:`37765`.)"
msgstr ""
"Lägg till nyckelord i listan för komplettering av modulnamn.  (Bidrag från "
"Terry J. Reedy i :issue:`37765`.)"

#: ../../whatsnew/3.8.rst:887
msgid "inspect"
msgstr "inspektera"

#: ../../whatsnew/3.8.rst:889
msgid ""
"The :func:`inspect.getdoc` function can now find docstrings for "
"``__slots__`` if that attribute is a :class:`dict` where the values are "
"docstrings. This provides documentation options similar to what we already "
"have for :func:`property`, :func:`classmethod`, and :func:`staticmethod`::"
msgstr ""
"Funktionen :func:`inspect.getdoc` kan nu hitta dokumentationssträngar för "
"``__slots__`` om attributet är en :class:`dict` där värdena är "
"dokumentationssträngar. Detta ger dokumentationsalternativ liknande de som "
"vi redan har för :func:`property`, :func:`classmethod` och "
":func:`staticmethod`::"

#: ../../whatsnew/3.8.rst:901
msgid "(Contributed by Raymond Hettinger in :issue:`36326`.)"
msgstr "(Bidrag från Raymond Hettinger i :issue:`36326`.)"

#: ../../whatsnew/3.8.rst:905
msgid "io"
msgstr "io"

#: ../../whatsnew/3.8.rst:907
msgid ""
"In development mode (:option:`-X` ``env``) and in debug build, the "
":class:`io.IOBase` finalizer now logs the exception if the ``close()`` "
"method fails. The exception is ignored silently by default in release build."
" (Contributed by Victor Stinner in :issue:`18748`.)"
msgstr ""

#: ../../whatsnew/3.8.rst:914
msgid "itertools"
msgstr "itertools"

#: ../../whatsnew/3.8.rst:916
msgid ""
"The :func:`itertools.accumulate` function added an option *initial* keyword "
"argument to specify an initial value::"
msgstr ""
"Funktionen :func:`itertools.accumulate` lade till ett alternativ *initial* "
"nyckelordsargument för att ange ett initialt värde::"

#: ../../whatsnew/3.8.rst:923
msgid "(Contributed by Lisa Roach in :issue:`34659`.)"
msgstr "(Bidrag från Lisa Roach i :issue:`34659`.)"

#: ../../whatsnew/3.8.rst:927
msgid "json.tool"
msgstr "json.verktyg"

#: ../../whatsnew/3.8.rst:929
msgid ""
"Add option ``--json-lines`` to parse every input line as a separate JSON "
"object. (Contributed by Weipeng Hong in :issue:`31553`.)"
msgstr ""
"Lägg till alternativet ``\\--json-lines`` för att analysera varje "
"inmatningsrad som ett separat JSON-objekt. (Bidrag från Weipeng Hong i "
":issue:`31553`.)"

#: ../../whatsnew/3.8.rst:934
msgid "logging"
msgstr "loggning"

#: ../../whatsnew/3.8.rst:936
msgid ""
"Added a *force* keyword argument to :func:`logging.basicConfig()` When set "
"to true, any existing handlers attached to the root logger are removed and "
"closed before carrying out the configuration specified by the other "
"arguments."
msgstr ""

#: ../../whatsnew/3.8.rst:941
msgid ""
"This solves a long-standing problem.  Once a logger or *basicConfig()* had "
"been called, subsequent calls to *basicConfig()* were silently ignored. This"
" made it difficult to update, experiment with, or teach the various logging "
"configuration options using the interactive prompt or a Jupyter notebook."
msgstr ""
"Detta löser ett långvarigt problem.  När en logger eller *basicConfig()* "
"hade anropats, ignorerades efterföljande anrop till *basicConfig()* i "
"tysthet. Detta gjorde det svårt att uppdatera, experimentera med eller lära "
"ut de olika konfigurationsalternativen för loggning med hjälp av den "
"interaktiva prompten eller en Jupyter-anteckningsbok."

#: ../../whatsnew/3.8.rst:947
msgid ""
"(Suggested by Raymond Hettinger, implemented by Dong-hee Na, and reviewed by"
" Vinay Sajip in :issue:`33897`.)"
msgstr ""

#: ../../whatsnew/3.8.rst:952
msgid "math"
msgstr "matematik"

#: ../../whatsnew/3.8.rst:954
msgid ""
"Added new function :func:`math.dist` for computing Euclidean distance "
"between two points.  (Contributed by Raymond Hettinger in :issue:`33089`.)"
msgstr ""
"Lagt till ny funktion :func:`math.dist` för beräkning av Euclidean-avstånd "
"mellan två punkter.  (Bidrag från Raymond Hettinger i :issue:`33089`.)"

#: ../../whatsnew/3.8.rst:957
msgid ""
"Expanded the :func:`math.hypot` function to handle multiple dimensions. "
"Formerly, it only supported the 2-D case. (Contributed by Raymond Hettinger "
"in :issue:`33089`.)"
msgstr ""
"Funktionen :func:`math.hypot` har utökats för att hantera flera dimensioner."
" Tidigare stödde den endast 2D-fallet. (Bidrag från Raymond Hettinger i "
":issue:`33089`.)"

#: ../../whatsnew/3.8.rst:961
msgid ""
"Added new function, :func:`math.prod`, as analogous function to :func:`sum` "
"that returns the product of a 'start' value (default: 1) times an iterable "
"of numbers::"
msgstr ""
"Lagt till en ny funktion, :func:`math.prod`, som en analog funktion till "
":func:`sum` som returnerar produkten av ett startvärde (standard: 1) gånger "
"en iterabel av tal::"

#: ../../whatsnew/3.8.rst:970
msgid "(Contributed by Pablo Galindo in :issue:`35606`.)"
msgstr "(Bidrag från Pablo Galindo i :issue:`35606`.)"

#: ../../whatsnew/3.8.rst:972
msgid ""
"Added two new combinatoric functions :func:`math.perm` and "
":func:`math.comb`::"
msgstr ""
"Lade till två nya kombinatoriska funktioner :func:`math.perm` och "
":func:`math.comb`::"

#: ../../whatsnew/3.8.rst:979
msgid ""
"(Contributed by Yash Aggarwal, Keller Fuchs, Serhiy Storchaka, and Raymond "
"Hettinger in :issue:`37128`, :issue:`37178`, and :issue:`35431`.)"
msgstr ""
"(Bidrag från Yash Aggarwal, Keller Fuchs, Serhiy Storchaka och Raymond "
"Hettinger i :issue:`37128`, :issue:`37178` och :issue:`35431`.)"

#: ../../whatsnew/3.8.rst:982
msgid ""
"Added a new function :func:`math.isqrt` for computing accurate integer "
"square roots without conversion to floating point.  The new function "
"supports arbitrarily large integers.  It is faster than ``floor(sqrt(n))`` "
"but slower than :func:`math.sqrt`::"
msgstr ""
"Lagt till en ny funktion :func:`math.isqrt` för att beräkna exakta "
"kvadratrötter för heltal utan konvertering till flyttal.  Den nya funktionen"
" stöder godtyckligt stora heltal.  Den är snabbare än ``floor(sqrt(n))`` men"
" långsammare än :func:`math.sqrt`::"

#: ../../whatsnew/3.8.rst:994
msgid "(Contributed by Mark Dickinson in :issue:`36887`.)"
msgstr "(Bidrag från Mark Dickinson i :issue:`36887`.)"

#: ../../whatsnew/3.8.rst:996
msgid ""
"The function :func:`math.factorial` no longer accepts arguments that are not"
" int-like. (Contributed by Pablo Galindo in :issue:`33083`.)"
msgstr ""
"Funktionen :func:`math.factorial` accepterar inte längre argument som inte "
"är int-liknande. (Bidrag från Pablo Galindo i :issue:`33083`.)"

#: ../../whatsnew/3.8.rst:1001
msgid "mmap"
msgstr "mmap"

#: ../../whatsnew/3.8.rst:1003
msgid ""
"The :class:`mmap.mmap` class now has an :meth:`~mmap.mmap.madvise` method to"
" access the ``madvise()`` system call. (Contributed by Zackery Spytz in "
":issue:`32941`.)"
msgstr ""
"Klassen :class:`mmap.mmap` har nu en :meth:`~mmap.mmap.madvise`\\-metod för "
"att komma åt systemanropet ``madvise()``. (Bidrag från Zackery Spytz i "
":issue:`32941`.)"

#: ../../whatsnew/3.8.rst:1009
msgid "multiprocessing"
msgstr "multiprocessing"

#: ../../whatsnew/3.8.rst:1011
msgid ""
"Added new :mod:`multiprocessing.shared_memory` module. (Contributed by Davin"
" Potts in :issue:`35813`.)"
msgstr ""
"Lagt till ny :mod:`multiprocessing.shared_memory` modul. (Bidrag från Davin "
"Potts i :issue:`35813`.)"

#: ../../whatsnew/3.8.rst:1014
msgid ""
"On macOS, the *spawn* start method is now used by default. (Contributed by "
"Victor Stinner in :issue:`33725`.)"
msgstr ""
"På macOS används nu startmetoden *spawn* som standard. (Bidrag från Victor "
"Stinner i :issue:`33725`.)"

#: ../../whatsnew/3.8.rst:1019
msgid "os"
msgstr "os"

#: ../../whatsnew/3.8.rst:1021
msgid ""
"Added new function :func:`~os.add_dll_directory` on Windows for providing "
"additional search paths for native dependencies when importing extension "
"modules or loading DLLs using :mod:`ctypes`. (Contributed by Steve Dower in "
":issue:`36085`.)"
msgstr ""
"Lagt till ny funktion :func:`~os.add_dll_directory` på Windows för att "
"tillhandahålla ytterligare sökvägar för inbyggda beroenden vid import av "
"tilläggsmoduler eller laddning av DLL:er med :mod:`ctypes`. (Bidrag från "
"Steve Dower i :issue:`36085`.)"

#: ../../whatsnew/3.8.rst:1026
msgid ""
"A new :func:`os.memfd_create` function was added to wrap the "
"``memfd_create()`` syscall. (Contributed by Zackery Spytz and Christian "
"Heimes in :issue:`26836`.)"
msgstr ""
"En ny :func:`os.memfd_create`\\-funktion lades till för att omsluta "
"syscallen ``memfd_create()``. (Bidrag från Zackery Spytz och Christian "
"Heimes i :issue:`26836`.)"

#: ../../whatsnew/3.8.rst:1030
msgid ""
"On Windows, much of the manual logic for handling reparse points (including "
"symlinks and directory junctions) has been delegated to the operating "
"system. Specifically, :func:`os.stat` will now traverse anything supported "
"by the operating system, while :func:`os.lstat` will only open reparse "
"points that identify as \"name surrogates\" while others are opened as for "
":func:`os.stat`. In all cases, :attr:`stat_result.st_mode` will only have "
"``S_IFLNK`` set for symbolic links and not other kinds of reparse points. To"
" identify other kinds of reparse point, check the new "
":attr:`stat_result.st_reparse_tag` attribute."
msgstr ""

#: ../../whatsnew/3.8.rst:1039
msgid ""
"On Windows, :func:`os.readlink` is now able to read directory junctions. "
"Note that :func:`~os.path.islink` will return ``False`` for directory "
"junctions, and so code that checks ``islink`` first will continue to treat "
"junctions as directories, while code that handles errors from "
":func:`os.readlink` may now treat junctions as links."
msgstr ""
"I Windows kan :func:`os.readlink` nu läsa katalogförgreningar. Observera att"
" :func:`~os.path.islink` kommer att returnera ``False`` för "
"katalogförgreningar, så kod som kontrollerar ``islink`` först kommer att "
"fortsätta att behandla förgreningar som kataloger, medan kod som hanterar "
"fel från :func:`os.readlink` nu kan behandla förgreningar som länkar."

#: ../../whatsnew/3.8.rst:1045 ../../whatsnew/3.8.rst:1070
msgid "(Contributed by Steve Dower in :issue:`37834`.)"
msgstr "(Bidrag från Steve Dower i :issue:`37834`.)"

#: ../../whatsnew/3.8.rst:1049
msgid "os.path"
msgstr "os.path"

#: ../../whatsnew/3.8.rst:1051
msgid ""
":mod:`os.path` functions that return a boolean result like "
":func:`~os.path.exists`, :func:`~os.path.lexists`, :func:`~os.path.isdir`, "
":func:`~os.path.isfile`, :func:`~os.path.islink`, and "
":func:`~os.path.ismount` now return ``False`` instead of raising "
":exc:`ValueError` or its subclasses :exc:`UnicodeEncodeError` and "
":exc:`UnicodeDecodeError` for paths that contain characters or bytes "
"unrepresentable at the OS level. (Contributed by Serhiy Storchaka in "
":issue:`33721`.)"
msgstr ""
":mod:`os.path` funktioner som returnerar ett booleskt resultat som "
":func:`~os.path.exists`, :func:`~os.path.lexists`, :func:`~os.path.isdir`, "
":func:`~os.path.isfile`, :func:`~os.path.islink`, och "
":func:`~os.path.ismount` returnerar nu ``False`` istället för att ge upphov "
"till :exc:`ValueError` eller dess underklasser :exc:`UnicodeEncodeError` och"
" :exc:`UnicodeDecodeError` för sökvägar som innehåller tecken eller byte som"
" inte kan representeras på OS-nivå. (Bidrag från Serhiy Storchaka i "
":issue:`33721`.)"

#: ../../whatsnew/3.8.rst:1059 ../../whatsnew/3.8.rst:1959
msgid ""
":func:`~os.path.expanduser` on Windows now prefers the :envvar:`USERPROFILE`"
" environment variable and does not use :envvar:`HOME`, which is not normally"
" set for regular user accounts. (Contributed by Anthony Sottile in "
":issue:`36264`.)"
msgstr ""
":func:`~os.path.expanduser` på Windows föredrar nu miljövariabeln "
":envvar:`USERPROFILE` och använder inte :envvar:`HOME`, som normalt inte är "
"inställd för vanliga användarkonton. (Bidrag från Anthony Sottile i "
":issue:`36264`.)"

#: ../../whatsnew/3.8.rst:1064
msgid ""
":func:`~os.path.isdir` on Windows no longer returns ``True`` for a link to a"
" non-existent directory."
msgstr ""
":func:`~os.path.isdir` på Windows returnerar inte längre ``True`` för en "
"länk till en icke-existerande katalog."

#: ../../whatsnew/3.8.rst:1067
msgid ""
":func:`~os.path.realpath` on Windows now resolves reparse points, including "
"symlinks and directory junctions."
msgstr ""
":func:`~os.path.realpath` på Windows löser nu reparse-punkter, inklusive "
"symlinks och directory junctions."

#: ../../whatsnew/3.8.rst:1074
msgid "pathlib"
msgstr "sökväg"

#: ../../whatsnew/3.8.rst:1076
msgid ""
":mod:`pathlib.Path` methods that return a boolean result like "
":meth:`~pathlib.Path.exists()`, :meth:`~pathlib.Path.is_dir()`, "
":meth:`~pathlib.Path.is_file()`, :meth:`~pathlib.Path.is_mount()`, "
":meth:`~pathlib.Path.is_symlink()`, :meth:`~pathlib.Path.is_block_device()`,"
" :meth:`~pathlib.Path.is_char_device()`, :meth:`~pathlib.Path.is_fifo()`, "
":meth:`~pathlib.Path.is_socket()` now return ``False`` instead of raising "
":exc:`ValueError` or its subclass :exc:`UnicodeEncodeError` for paths that "
"contain characters unrepresentable at the OS level. (Contributed by Serhiy "
"Storchaka in :issue:`33721`.)"
msgstr ""

#: ../../whatsnew/3.8.rst:1086
msgid ""
"Added :meth:`pathlib.Path.link_to()` which creates a hard link pointing to a"
" path. (Contributed by Joannah Nanjekye in :issue:`26978`)"
msgstr ""

#: ../../whatsnew/3.8.rst:1092
msgid "pickle"
msgstr "pickle"

#: ../../whatsnew/3.8.rst:1094
msgid ""
":mod:`pickle` extensions subclassing the C-optimized "
":class:`~pickle.Pickler` can now override the pickling logic of functions "
"and classes by defining the special :meth:`~pickle.Pickler.reducer_override`"
" method. (Contributed by Pierre Glaser and Olivier Grisel in "
":issue:`35900`.)"
msgstr ""
":mod:`pickle`\\-tillägg som underklassar den C-optimerade "
":class:`~pickle.Pickler` kan nu åsidosätta pickling-logiken för funktioner "
"och klasser genom att definiera den speciella "
":meth:`~pickle.Pickler.reducer_override`\\-metoden. (Bidrag från Pierre "
"Glaser och Olivier Grisel i :issue:`35900`.)"

#: ../../whatsnew/3.8.rst:1101
msgid "plistlib"
msgstr "plistlib"

#: ../../whatsnew/3.8.rst:1103
msgid ""
"Added new :class:`plistlib.UID` and enabled support for reading and writing "
"NSKeyedArchiver-encoded binary plists. (Contributed by Jon Janzen in "
":issue:`26707`.)"
msgstr ""
"Lade till ny :class:`plistlib.UID` och aktiverade stöd för att läsa och "
"skriva NSKeyedArchiver-kodade binära plistor. (Bidrag från Jon Janzen i "
":issue:`26707`.)"

#: ../../whatsnew/3.8.rst:1109
msgid "pprint"
msgstr "tryck"

#: ../../whatsnew/3.8.rst:1111
msgid ""
"The :mod:`pprint` module added a *sort_dicts* parameter to several "
"functions. By default, those functions continue to sort dictionaries before "
"rendering or printing.  However, if *sort_dicts* is set to false, the "
"dictionaries retain the order that keys were inserted.  This can be useful "
"for comparison to JSON inputs during debugging."
msgstr ""
"Modulen :mod:`pprint` lade till en *sort_dicts*-parameter till flera "
"funktioner. Som standard fortsätter dessa funktioner att sortera lexikon "
"före rendering eller utskrift.  Men om *sort_dicts* är satt till false "
"behåller ordböckerna den ordning som nycklarna infogades.  Detta kan vara "
"användbart vid jämförelse med JSON-inmatningar under felsökning."

#: ../../whatsnew/3.8.rst:1117
msgid ""
"In addition, there is a convenience new function, :func:`pprint.pp` that is "
"like :func:`pprint.pprint` but with *sort_dicts* defaulting to ``False``::"
msgstr ""
"Dessutom finns det en ny funktion, :func:`pprint.pp` som är som "
":func:`pprint.pprint` men med *sort_dicts* som standard till ``False``::"

#: ../../whatsnew/3.8.rst:1131
msgid "(Contributed by Rémi Lapeyre in :issue:`30670`.)"
msgstr "(Bidrag från Rémi Lapeyre i :issue:`30670`.)"

#: ../../whatsnew/3.8.rst:1135
msgid "py_compile"
msgstr "py_compile"

#: ../../whatsnew/3.8.rst:1137
msgid ""
":func:`py_compile.compile` now supports silent mode. (Contributed by Joannah"
" Nanjekye in :issue:`22640`.)"
msgstr ""
":func:`py_compile.compile` stöder nu tyst läge. (Bidrag från Joannah "
"Nanjekye i :issue:`22640`.)"

#: ../../whatsnew/3.8.rst:1142
msgid "shlex"
msgstr "shlex"

#: ../../whatsnew/3.8.rst:1144
msgid ""
"The new :func:`shlex.join` function acts as the inverse of "
":func:`shlex.split`. (Contributed by Bo Bayles in :issue:`32102`.)"
msgstr ""
"Den nya funktionen :func:`shlex.join` fungerar som inversen av "
":func:`shlex.split`. (Bidrag från Bo Bayles i :issue:`32102`.)"

#: ../../whatsnew/3.8.rst:1149
msgid "shutil"
msgstr "shutil"

#: ../../whatsnew/3.8.rst:1151
msgid ""
":func:`shutil.copytree` now accepts a new ``dirs_exist_ok`` keyword "
"argument. (Contributed by Josh Bronson in :issue:`20849`.)"
msgstr ""
":func:`shutil.copytree` accepterar nu ett nytt ``dirs_exist_ok`` "
"nyckelordsargument. (Bidrag från Josh Bronson i :issue:`20849`.)"

#: ../../whatsnew/3.8.rst:1154
msgid ""
":func:`shutil.make_archive` now defaults to the modern pax (POSIX.1-2001) "
"format for new archives to improve portability and standards conformance, "
"inherited from the corresponding change to the :mod:`tarfile` module. "
"(Contributed by C.A.M. Gerlach in :issue:`30661`.)"
msgstr ""
":func:`shutil.make_archive` använder nu som standard det moderna pax-"
"formatet (POSIX.1-2001) för nya arkiv för att förbättra portabiliteten och "
"överensstämmelsen med standarder, vilket är ett arv från motsvarande ändring"
" i modulen :mod:`tarfile`. (Bidrag från C.A.M. Gerlach i :issue:`30661`.)"

#: ../../whatsnew/3.8.rst:1159
msgid ""
":func:`shutil.rmtree` on Windows now removes directory junctions without "
"recursively removing their contents first. (Contributed by Steve Dower in "
":issue:`37834`.)"
msgstr ""
":func:`shutil.rmtree` på Windows tar nu bort katalogförgreningar utan att "
"rekursivt ta bort deras innehåll först. (Bidrag från Steve Dower i "
":issue:`37834`.)"

#: ../../whatsnew/3.8.rst:1165
msgid "socket"
msgstr "kortplats"

#: ../../whatsnew/3.8.rst:1167
msgid ""
"Added :meth:`~socket.create_server()` and "
":meth:`~socket.has_dualstack_ipv6()` convenience functions to automate the "
"necessary tasks usually involved when creating a server socket, including "
"accepting both IPv4 and IPv6 connections on the same socket.  (Contributed "
"by Giampaolo Rodolà in :issue:`17561`.)"
msgstr ""

#: ../../whatsnew/3.8.rst:1172
msgid ""
"The :func:`socket.if_nameindex()`, :func:`socket.if_nametoindex()`, and "
":func:`socket.if_indextoname()` functions have been implemented on Windows. "
"(Contributed by Zackery Spytz in :issue:`37007`.)"
msgstr ""

#: ../../whatsnew/3.8.rst:1178
msgid "ssl"
msgstr "ssl"

#: ../../whatsnew/3.8.rst:1180
msgid ""
"Added :attr:`~ssl.SSLContext.post_handshake_auth` to enable and "
":meth:`~ssl.SSLSocket.verify_client_post_handshake` to initiate TLS 1.3 "
"post-handshake authentication. (Contributed by Christian Heimes in "
":issue:`34670`.)"
msgstr ""
"Lagt till :attr:`~ssl.SSLContext.post_handshake_auth` för att aktivera och "
":meth:`~ssl.SSLSocket.verify_client_post_handshake` för att initiera TLS 1.3"
" post-handshake-autentisering. (Bidrag från Christian Heimes i "
":issue:`34670`.)"

#: ../../whatsnew/3.8.rst:1187
msgid "statistics"
msgstr "statistics"

#: ../../whatsnew/3.8.rst:1189
msgid ""
"Added :func:`statistics.fmean` as a faster, floating point variant of "
":func:`statistics.mean()`.  (Contributed by Raymond Hettinger and Steven "
"D'Aprano in :issue:`35904`.)"
msgstr ""

#: ../../whatsnew/3.8.rst:1193
msgid ""
"Added :func:`statistics.geometric_mean()` (Contributed by Raymond Hettinger "
"in :issue:`27181`.)"
msgstr ""

#: ../../whatsnew/3.8.rst:1196
msgid ""
"Added :func:`statistics.multimode` that returns a list of the most common "
"values. (Contributed by Raymond Hettinger in :issue:`35892`.)"
msgstr ""
"Lagt till :func:`statistics.multimode` som returnerar en lista med de "
"vanligaste värdena. (Bidrag från Raymond Hettinger i :issue:`35892`.)"

#: ../../whatsnew/3.8.rst:1199
msgid ""
"Added :func:`statistics.quantiles` that divides data or a distribution in to"
" equiprobable intervals (e.g. quartiles, deciles, or percentiles). "
"(Contributed by Raymond Hettinger in :issue:`36546`.)"
msgstr ""
"Lagt till :func:`statistics.quantiles` som delar in data eller en fördelning"
" i utjämningsbara intervall (t.ex. kvartiler, deciler eller percentiler). "
"(Bidrag från Raymond Hettinger i :issue:`36546`.)"

#: ../../whatsnew/3.8.rst:1203
msgid ""
"Added :class:`statistics.NormalDist`, a tool for creating and manipulating "
"normal distributions of a random variable. (Contributed by Raymond Hettinger"
" in :issue:`36018`.)"
msgstr ""
"Lagt till :class:`statistics.NormalDist`, ett verktyg för att skapa och "
"manipulera normalfördelningar av en slumpmässig variabel. (Bidrag från "
"Raymond Hettinger i :issue:`36018`.)"

#: ../../whatsnew/3.8.rst:1233
msgid "sys"
msgstr "system"

#: ../../whatsnew/3.8.rst:1235
msgid ""
"Add new :func:`sys.unraisablehook` function which can be overridden to "
"control how \"unraisable exceptions\" are handled. It is called when an "
"exception has occurred but there is no way for Python to handle it. For "
"example, when a destructor raises an exception or during garbage collection "
"(:func:`gc.collect`). (Contributed by Victor Stinner in :issue:`36829`.)"
msgstr ""
"Lägg till ny :func:`sys.unraisablehook`\\-funktion som kan åsidosättas för "
"att styra hur \"unraisable exceptions\" hanteras. Den anropas när ett "
"undantag har inträffat men det inte finns något sätt för Python att hantera "
"det. Till exempel när en destruktor gör ett undantag eller under "
"skräpplockning (:func:`gc.collect`). (Bidrag från Victor Stinner i "
":issue:`36829`.)"

#: ../../whatsnew/3.8.rst:1244
msgid "tarfile"
msgstr "tarfil"

#: ../../whatsnew/3.8.rst:1246
msgid ""
"The :mod:`tarfile` module now defaults to the modern pax (POSIX.1-2001) "
"format for new archives, instead of the previous GNU-specific one. This "
"improves cross-platform portability with a consistent encoding (UTF-8) in a "
"standardized and extensible format, and offers several other benefits. "
"(Contributed by C.A.M. Gerlach in :issue:`36268`.)"
msgstr ""
"Modulen :mod:`tarfile` använder nu som standard det moderna pax-formatet "
"(POSIX.1-2001) för nya arkiv, i stället för det tidigare GNU-specifika "
"formatet. Detta förbättrar portabiliteten mellan olika plattformar med en "
"konsekvent kodning (UTF-8) i ett standardiserat och utbyggbart format, och "
"ger flera andra fördelar. (Bidrag från C.A.M. Gerlach i :issue:`36268`.)"

#: ../../whatsnew/3.8.rst:1254
msgid "threading"
msgstr "threading"

#: ../../whatsnew/3.8.rst:1256
msgid ""
"Add a new :func:`threading.excepthook` function which handles uncaught "
":meth:`threading.Thread.run` exception. It can be overridden to control how "
"uncaught :meth:`threading.Thread.run` exceptions are handled. (Contributed "
"by Victor Stinner in :issue:`1230540`.)"
msgstr ""
"Lägg till en ny :func:`threading.excepthook`\\-funktion som hanterar ej "
"fångade :meth:`threading.Thread.run`\\-undantag. Den kan åsidosättas för att"
" kontrollera hur ej fångade :meth:`threading.Thread.run`\\-undantag "
"hanteras. (Bidrag från Victor Stinner i :issue:`1230540`.)"

#: ../../whatsnew/3.8.rst:1261
msgid ""
"Add a new :func:`threading.get_native_id` function and a "
":data:`~threading.Thread.native_id` attribute to the "
":class:`threading.Thread` class. These return the native integral Thread ID "
"of the current thread assigned by the kernel. This feature is only available"
" on certain platforms, see :func:`get_native_id <threading.get_native_id>` "
"for more information. (Contributed by Jake Tesler in :issue:`36084`.)"
msgstr ""
"Lägg till en ny :func:`threading.get_native_id`\\-funktion och ett "
":data:`~threading.Thread.native_id`\\-attribut till "
":class:`threading.Thread`\\-klassen. Dessa returnerar det inbyggda "
"integrerade tråd-ID:t för den aktuella tråden som tilldelats av kärnan. Den "
"här funktionen är endast tillgänglig på vissa plattformar, se "
":func:`get_native_id <threading.get_native_id>` för mer information. (Bidrag"
" från Jake Tesler i :issue:`36084`.)"

#: ../../whatsnew/3.8.rst:1271
msgid "tokenize"
msgstr "tokenize"

#: ../../whatsnew/3.8.rst:1273
msgid ""
"The :mod:`tokenize` module now implicitly emits a ``NEWLINE`` token when "
"provided with input that does not have a trailing new line.  This behavior "
"now matches what the C tokenizer does internally. (Contributed by Ammar "
"Askar in :issue:`33899`.)"
msgstr ""
"Modulen :mod:`tokenize` emitterar nu implicit en ``NEWLINE``\\-token när den"
" förses med indata som inte har en efterföljande ny rad.  Detta beteende "
"matchar nu vad C:s tokenizer gör internt. (Bidrag från Ammar Askar i "
":issue:`33899`.)"

#: ../../whatsnew/3.8.rst:1280
msgid "tkinter"
msgstr "tkinter"

#: ../../whatsnew/3.8.rst:1282
msgid ""
"Added methods :meth:`~tkinter.Spinbox.selection_from`, "
":meth:`~tkinter.Spinbox.selection_present`, "
":meth:`~tkinter.Spinbox.selection_range` and "
":meth:`~tkinter.Spinbox.selection_to` in the :class:`tkinter.Spinbox` class."
" (Contributed by Juliette Monsel in :issue:`34829`.)"
msgstr ""

#: ../../whatsnew/3.8.rst:1289
msgid ""
"Added method :meth:`~tkinter.Canvas.moveto` in the :class:`tkinter.Canvas` "
"class. (Contributed by Juliette Monsel in :issue:`23831`.)"
msgstr ""

#: ../../whatsnew/3.8.rst:1293
msgid ""
"The :class:`tkinter.PhotoImage` class now has "
":meth:`~tkinter.PhotoImage.transparency_get` and "
":meth:`~tkinter.PhotoImage.transparency_set` methods.  (Contributed by "
"Zackery Spytz in :issue:`25451`.)"
msgstr ""

#: ../../whatsnew/3.8.rst:1300
msgid "time"
msgstr "tid"

#: ../../whatsnew/3.8.rst:1302
msgid ""
"Added new clock :data:`~time.CLOCK_UPTIME_RAW` for macOS 10.12. (Contributed"
" by Joannah Nanjekye in :issue:`35702`.)"
msgstr ""

#: ../../whatsnew/3.8.rst:1307
msgid "typing"
msgstr "maskinskrivning"

#: ../../whatsnew/3.8.rst:1309
msgid "The :mod:`typing` module incorporates several new features:"
msgstr "Modulen :mod:`typing` innehåller flera nya funktioner:"

#: ../../whatsnew/3.8.rst:1311
msgid ""
"A dictionary type with per-key types.  See :pep:`589` and "
":class:`typing.TypedDict`. TypedDict uses only string keys.  By default, "
"every key is required to be present. Specify \"total=False\" to allow keys "
"to be optional::"
msgstr ""
"En ordbokstyp med typer per nyckel.  Se :pep:`589` och "
":class:`typing.TypedDict`. TypedDict använder endast strängnycklar.  Som "
"standard måste alla nycklar vara närvarande. Ange \"total=False\" för att "
"tillåta att nycklar är valfria:"

#: ../../whatsnew/3.8.rst:1321
msgid ""
"Literal types.  See :pep:`586` and :class:`typing.Literal`. Literal types "
"indicate that a parameter or return value is constrained to one or more "
"specific literal values::"
msgstr ""
"Litterala typer.  Se :pep:`586` och :class:`typing.Literal`. Literal-typer "
"anger att en parameter eller ett returvärde är begränsat till ett eller "
"flera specifika literal-värden::"

#: ../../whatsnew/3.8.rst:1328
msgid ""
"\"Final\" variables, functions, methods and classes.  See :pep:`591`, "
":class:`typing.Final` and :func:`typing.final`. The final qualifier "
"instructs a static type checker to restrict subclassing, overriding, or "
"reassignment::"
msgstr ""
"\"Final\"-variabler, -funktioner, -metoder och -klasser.  Se :pep:`591`, "
":class:`typing.Final` och :func:`typing.final`. Kvalificeraren final "
"instruerar en statisk typkontrollör att begränsa underklassning, "
"överstyrning eller omtilldelning::"

#: ../../whatsnew/3.8.rst:1335
msgid ""
"Protocol definitions.  See :pep:`544`, :class:`typing.Protocol` and "
":func:`typing.runtime_checkable`.  Simple ABCs like "
":class:`typing.SupportsInt` are now ``Protocol`` subclasses."
msgstr ""
"Definitioner av protokoll.  Se :pep:`544`, :class:`typing.Protocol` och "
":func:`typing.runtime_checkable`.  Enkla ABC som :class:`typing.SupportsInt`"
" är nu ``Protocol`` subklasser."

#: ../../whatsnew/3.8.rst:1339
msgid "New protocol class :class:`typing.SupportsIndex`."
msgstr "Ny protokollklass :class:`typing.SupportsIndex`."

#: ../../whatsnew/3.8.rst:1341
msgid "New functions :func:`typing.get_origin` and :func:`typing.get_args`."
msgstr "Nya funktioner :func:`typing.get_origin` och :func:`typing.get_args`."

#: ../../whatsnew/3.8.rst:1345
msgid "unicodedata"
msgstr "unicodedata"

#: ../../whatsnew/3.8.rst:1347
msgid ""
"The :mod:`unicodedata` module has been upgraded to use the `Unicode 12.1.0 "
"<http://blog.unicode.org/2019/05/unicode-12-1-en.html>`_ release."
msgstr ""

#: ../../whatsnew/3.8.rst:1350
msgid ""
"New function :func:`~unicodedata.is_normalized` can be used to verify a "
"string is in a specific normal form, often much faster than by actually "
"normalizing the string.  (Contributed by Max Belanger, David Euresti, and "
"Greg Price in :issue:`32285` and :issue:`37966`)."
msgstr ""
"Den nya funktionen :func:`~unicodedata.is_normalized` kan användas för att "
"verifiera att en sträng är i en viss normalform, ofta mycket snabbare än "
"genom att faktiskt normalisera strängen.  (Bidrag från Max Belanger, David "
"Euresti och Greg Price i :issue:`32285` och :issue:`37966`)."

#: ../../whatsnew/3.8.rst:1357
msgid "unittest"
msgstr "unittest"

#: ../../whatsnew/3.8.rst:1359
msgid ""
"Added :class:`~unittest.mock.AsyncMock` to support an asynchronous version "
"of :class:`~unittest.mock.Mock`.  Appropriate new assert functions for "
"testing have been added as well. (Contributed by Lisa Roach in "
":issue:`26467`)."
msgstr ""
"Lagt till :class:`~unittest.mock.AsyncMock` för att stödja en asynkron "
"version av :class:`~unittest.mock.Mock`.  Lämpliga nya assert-funktioner för"
" testning har också lagts till. (Bidrag från Lisa Roach i :issue:`26467`)."

#: ../../whatsnew/3.8.rst:1364
msgid ""
"Added :func:`~unittest.addModuleCleanup()` and "
":meth:`~unittest.TestCase.addClassCleanup()` to unittest to support cleanups"
" for :func:`~unittest.setUpModule()` and "
":meth:`~unittest.TestCase.setUpClass()`. (Contributed by Lisa Roach in "
":issue:`24412`.)"
msgstr ""

#: ../../whatsnew/3.8.rst:1370
msgid ""
"Several mock assert functions now also print a list of actual calls upon "
"failure. (Contributed by Petter Strandmark in :issue:`35047`.)"
msgstr ""
"Flera mock assert-funktioner skriver nu också ut en lista över faktiska "
"anrop om de misslyckas. (Bidrag från Petter Strandmark i :issue:`35047`.)"

#: ../../whatsnew/3.8.rst:1373
msgid ""
":mod:`unittest` module gained support for coroutines to be used as test "
"cases with :class:`unittest.IsolatedAsyncioTestCase`. (Contributed by Andrew"
" Svetlov in :issue:`32972`.)"
msgstr ""
":mod:`unittest`\\-modulen fick stöd för coroutines som kan användas som "
"testfall med :class:`unittest.IsolatedAsyncioTestCase`. (Bidrag från Andrew "
"Svetlov i :issue:`32972`.)"

#: ../../whatsnew/3.8.rst:1377
msgid "Example::"
msgstr "Exempel::"

#: ../../whatsnew/3.8.rst:1400
msgid "venv"
msgstr "ven"

#: ../../whatsnew/3.8.rst:1402
msgid ""
":mod:`venv` now includes an ``Activate.ps1`` script on all platforms for "
"activating virtual environments under PowerShell Core 6.1. (Contributed by "
"Brett Cannon in :issue:`32718`.)"
msgstr ""
":mod:`venv` innehåller nu ett ``Activate.ps1``\\-skript på alla plattformar "
"för aktivering av virtuella miljöer under PowerShell Core 6.1. (Bidrag från "
"Brett Cannon i :issue:`32718`.)"

#: ../../whatsnew/3.8.rst:1408
msgid "weakref"
msgstr "weakref"

#: ../../whatsnew/3.8.rst:1410
msgid ""
"The proxy objects returned by :func:`weakref.proxy` now support the matrix "
"multiplication operators ``@`` and ``@=`` in addition to the other numeric "
"operators. (Contributed by Mark Dickinson in :issue:`36669`.)"
msgstr ""
"De proxyobjekt som returneras av :func:`weakref.proxy` har nu stöd för "
"matrismultiplikationsoperatorerna ``@`` och ``@=`` utöver de andra numeriska"
" operatorerna. (Bidrag från Mark Dickinson i :issue:`36669`.)"

#: ../../whatsnew/3.8.rst:1416
msgid "xml"
msgstr "xml"

#: ../../whatsnew/3.8.rst:1418
msgid ""
"As mitigation against DTD and external entity retrieval, the "
":mod:`xml.dom.minidom` and :mod:`xml.sax` modules no longer process external"
" entities by default. (Contributed by Christian Heimes in :issue:`17239`.)"
msgstr ""
"Som en åtgärd mot hämtning av DTD:er och externa entiteter bearbetar "
"modulerna :mod:`xml.dom.minidom` och :mod:`xml.sax` inte längre externa "
"entiteter som standard. (Bidrag från Christian Heimes i :issue:`17239`.)"

#: ../../whatsnew/3.8.rst:1423
msgid ""
"The ``.find*()`` methods in the :mod:`xml.etree.ElementTree` module support "
"wildcard searches like ``{*}tag`` which ignores the namespace and "
"``{namespace}*`` which returns all tags in the given namespace. (Contributed"
" by Stefan Behnel in :issue:`28238`.)"
msgstr ""
"Metoderna ``.find*()`` i modulen :mod:`xml.etree.ElementTree` stöder "
"sökningar med jokertecken som ``{*}tag`` som ignorerar namnrymden och "
"``{namespace}*`` som returnerar alla taggar i den angivna namnrymden. "
"(Bidrag från Stefan Behnel i :issue:`28238`.)"

#: ../../whatsnew/3.8.rst:1428
msgid ""
"The :mod:`xml.etree.ElementTree` module provides a new function "
":func:`–xml.etree.ElementTree.canonicalize()` that implements C14N 2.0. "
"(Contributed by Stefan Behnel in :issue:`13611`.)"
msgstr ""

#: ../../whatsnew/3.8.rst:1432
msgid ""
"The target object of :class:`xml.etree.ElementTree.XMLParser` can receive "
"namespace declaration events through the new callback methods ``start_ns()``"
" and ``end_ns()``.  Additionally, the "
":class:`xml.etree.ElementTree.TreeBuilder` target can be configured to "
"process events about comments and processing instructions to include them in"
" the generated tree. (Contributed by Stefan Behnel in :issue:`36676` and "
":issue:`36673`.)"
msgstr ""
"Målobjektet för :class:`xml.etree.ElementTree.XMLParser` kan ta emot "
"namnrymdsdeklarationshändelser genom de nya callback-metoderna "
"``start_ns()`` och ``end_ns()``.  Dessutom kan målet "
":class:`xml.etree.ElementTree.TreeBuilder` konfigureras för att bearbeta "
"händelser om kommentarer och bearbetningsinstruktioner för att inkludera dem"
" i det genererade trädet. (Bidrag från Stefan Behnel i :issue:`36676` och "
":issue:`36673`.)"

#: ../../whatsnew/3.8.rst:1442
msgid "xmlrpc"
msgstr "xmlrpc"

#: ../../whatsnew/3.8.rst:1444
msgid ""
":class:`xmlrpc.client.ServerProxy` now supports an optional *headers* "
"keyword argument for a sequence of HTTP headers to be sent with each "
"request.  Among other things, this makes it possible to upgrade from default"
" basic authentication to faster session authentication. (Contributed by "
"Cédric Krier in :issue:`35153`.)"
msgstr ""
":class:`xmlrpc.client.ServerProxy` stöder nu ett valfritt *headers* "
"nyckelordsargument för en sekvens av HTTP-rubriker som ska skickas med varje"
" förfrågan.  Detta gör det bland annat möjligt att uppgradera från "
"grundläggande autentisering till snabbare sessionsautentisering. (Bidrag "
"från Cédric Krier i :issue:`35153`.)"

#: ../../whatsnew/3.8.rst:1452
msgid "Optimizations"
msgstr "Optimeringar"

#: ../../whatsnew/3.8.rst:1454
msgid ""
"The :mod:`subprocess` module can now use the :func:`os.posix_spawn` function"
" in some cases for better performance. Currently, it is only used on macOS "
"and Linux (using glibc 2.24 or newer) if all these conditions are met:"
msgstr ""
"Modulen :mod:`subprocess` kan nu använda funktionen :func:`os.posix_spawn` i"
" vissa fall för bättre prestanda. För närvarande används den endast på macOS"
" och Linux (med glibc 2.24 eller nyare) om alla dessa villkor är uppfyllda:"

#: ../../whatsnew/3.8.rst:1458
msgid "*close_fds* is false;"
msgstr "*close_fds* är falsk;"

#: ../../whatsnew/3.8.rst:1459
msgid ""
"*preexec_fn*, *pass_fds*, *cwd* and *start_new_session* parameters are not "
"set;"
msgstr ""
"*parametrarna preexec_fn*, *pass_fds*, *cwd* och *start_new_session* är inte"
" inställda;"

#: ../../whatsnew/3.8.rst:1461
msgid "the *executable* path contains a directory."
msgstr "den *exekverbara* sökvägen innehåller en katalog."

#: ../../whatsnew/3.8.rst:1463
msgid ""
"(Contributed by Joannah Nanjekye and Victor Stinner in :issue:`35537`.)"
msgstr "(Bidrag från Joannah Nanjekye och Victor Stinner i :issue:`35537`.)"

#: ../../whatsnew/3.8.rst:1465
msgid ""
":func:`shutil.copyfile`, :func:`shutil.copy`, :func:`shutil.copy2`, "
":func:`shutil.copytree` and :func:`shutil.move` use platform-specific "
"\"fast-copy\" syscalls on Linux and macOS in order to copy the file more "
"efficiently. \"fast-copy\" means that the copying operation occurs within "
"the kernel, avoiding the use of userspace buffers in Python as in "
"\"``outfd.write(infd.read())``\". On Windows :func:`shutil.copyfile` uses a "
"bigger default buffer size (1 MiB instead of 16 KiB) and a "
":func:`memoryview`-based variant of :func:`shutil.copyfileobj` is used. The "
"speedup for copying a 512 MiB file within the same partition is about +26% "
"on Linux, +50% on macOS and +40% on Windows. Also, much less CPU cycles are "
"consumed. See :ref:`shutil-platform-dependent-efficient-copy-operations` "
"section. (Contributed by Giampaolo Rodolà in :issue:`33671`.)"
msgstr ""
":func:`shutil.copyfile`, :func:`shutil.copy`, :func:`shutil.copy2`, "
":func:`shutil.copytree` och :func:`shutil.move` använder plattformsspecifika"
" \"fast-copy\" syscalls på Linux och macOS för att kopiera filen mer "
"effektivt. \"Fast-copy\" innebär att kopieringsoperationen sker i kärnan, "
"vilket undviker användning av userspace-buffertar i Python som i "
"\"``outfd.write(infd.read())``\". På Windows använder "
":func:`shutil.copyfile` en större standardbuffertstorlek (1 MiB istället för"
" 16 KiB) och en :func:`memoryview`\\-baserad variant av "
":func:`shutil.copyfileobj` används. Hastighetsökningen för att kopiera en "
"512 MiB-fil inom samma partition är ca +26% on Linux, +50% on macOS och +40%"
" on Windows. Dessutom förbrukas mycket mindre CPU-cykler. Se avsnittet "
":ref:`shutil-platform-dependent-efficient-copy-operations`. (Bidrag från "
"Giampaolo Rodolà i :issue:`33671`.)"

#: ../../whatsnew/3.8.rst:1481
msgid ""
":func:`shutil.copytree` uses :func:`os.scandir` function and all copy "
"functions depending from it use cached :func:`os.stat` values. The speedup "
"for copying a directory with 8000 files is around +9% on Linux, +20% on "
"Windows and +30% on a Windows SMB share. Also the number of :func:`os.stat` "
"syscalls is reduced by 38% making :func:`shutil.copytree` especially faster "
"on network filesystems. (Contributed by Giampaolo Rodolà in :issue:`33695`.)"
msgstr ""
":func:`shutil.copytree` använder :func:`os.scandir`\\-funktionen och alla "
"kopieringsfunktioner som är beroende av den använder cachade "
":func:`os.stat`\\-värden. Hastighetsökningen för att kopiera en katalog med "
"8000 filer är cirka +9% on Linux, +20% on Windows och +30% on en Windows "
"SMB-delning. Även antalet :func:`os.stat` syscalls minskas med 38% vilket "
"gör :func:`shutil.copytree` särskilt snabbare på nätverksfilsystem. (Bidrag "
"från Giampaolo Rodolà i :issue:`33695`.)"

#: ../../whatsnew/3.8.rst:1488
msgid ""
"The default protocol in the :mod:`pickle` module is now Protocol 4, first "
"introduced in Python 3.4.  It offers better performance and smaller size "
"compared to Protocol 3 available since Python 3.0."
msgstr ""
"Standardprotokollet i modulen :mod:`pickle` är nu Protocol 4, som först "
"introducerades i Python 3.4.  Det erbjuder bättre prestanda och mindre "
"storlek jämfört med Protocol 3 som funnits tillgängligt sedan Python 3.0."

#: ../../whatsnew/3.8.rst:1492
msgid ""
"Removed one :c:type:`Py_ssize_t` member from ``PyGC_Head``.  All GC tracked "
"objects (e.g. tuple, list, dict) size is reduced 4 or 8 bytes. (Contributed "
"by Inada Naoki in :issue:`33597`.)"
msgstr ""
"Tog bort en :c:type:`Py_ssize_t`\\-medlem från ``PyGC_Head``.  Alla GC-"
"spårade objekt (t.ex. tuple, list, dict) minskas med 4 eller 8 byte. (Bidrag"
" från Inada Naoki i :issue:`33597`.)"

#: ../../whatsnew/3.8.rst:1496
msgid ""
":class:`uuid.UUID` now uses ``__slots__`` to reduce its memory footprint. "
"(Contributed by Wouter Bolsterlee and Tal Einat in :issue:`30977`)"
msgstr ""
":class:`uuid.UUID` använder nu ``__slots__`` för att minska sitt "
"minnesavtryck. (Bidrag från Wouter Bolsterlee och Tal Einat i "
":issue:`30977`)"

#: ../../whatsnew/3.8.rst:1499
msgid ""
"Improved performance of :func:`operator.itemgetter` by 33%.  Optimized "
"argument handling and added a fast path for the common case of a single non-"
"negative integer index into a tuple (which is the typical use case in the "
"standard library).  (Contributed by Raymond Hettinger in :issue:`35664`.)"
msgstr ""
"Förbättrad prestanda för :func:`operator.itemgetter` med 33%.  Optimerad "
"argumenthantering och en snabb väg har lagts till för det vanliga fallet med"
" ett enda icke-negativt heltalsindex i en tupel (vilket är det typiska "
"användningsfallet i standardbiblioteket).  (Bidrag från Raymond Hettinger i "
":issue:`35664`.)"

#: ../../whatsnew/3.8.rst:1505
msgid ""
"Sped-up field lookups in :func:`collections.namedtuple`.  They are now more "
"than two times faster, making them the fastest form of instance variable "
"lookup in Python. (Contributed by Raymond Hettinger, Pablo Galindo, and Joe "
"Jevnik, Serhiy Storchaka in :issue:`32492`.)"
msgstr ""
"Snabbare fältuppslagningar i :func:`collections.namedtuple`.  De är nu mer "
"än två gånger snabbare, vilket gör dem till den snabbaste formen av "
"instansvariabeluppslagning i Python. (Bidrag från Raymond Hettinger, Pablo "
"Galindo, och Joe Jevnik, Serhiy Storchaka i :issue:`32492`.)"

#: ../../whatsnew/3.8.rst:1510
msgid ""
"The :class:`list` constructor does not overallocate the internal item buffer"
" if the input iterable has a known length (the input implements "
"``__len__``). This makes the created list 12% smaller on average. "
"(Contributed by Raymond Hettinger and Pablo Galindo in :issue:`33234`.)"
msgstr ""
"Konstruktorn :class:`list` overallokerar inte den interna objektbufferten om"
" den ingående iterabeln har en känd längd (den ingående implementerar "
"``__len__``). Detta gör den skapade listan 12% smaller i genomsnitt. (Bidrag"
" från Raymond Hettinger och Pablo Galindo i :issue:`33234`.)"

#: ../../whatsnew/3.8.rst:1515
msgid ""
"Doubled the speed of class variable writes.  When a non-dunder attribute was"
" updated, there was an unnecessary call to update slots. (Contributed by "
"Stefan Behnel, Pablo Galindo Salgado, Raymond Hettinger, Neil Schemenauer, "
"and Serhiy Storchaka in :issue:`36012`.)"
msgstr ""
"Fördubblade hastigheten för skrivningar av klassvariabler.  När ett icke-"
"dunder-attribut uppdaterades fanns det ett onödigt anrop till update slots. "
"(Bidrag från Stefan Behnel, Pablo Galindo Salgado, Raymond Hettinger, Neil "
"Schemenauer, och Serhiy Storchaka i :issue:`36012`.)"

#: ../../whatsnew/3.8.rst:1520
msgid ""
"Reduced an overhead of converting arguments passed to many builtin functions"
" and methods.  This sped up calling some simple builtin functions and "
"methods up to 20--50%.  (Contributed by Serhiy Storchaka in :issue:`23867`, "
":issue:`35582` and :issue:`36127`.)"
msgstr ""
"Minskade omkostnaderna för att konvertera argument som skickas till många "
"inbyggda funktioner och metoder.  Detta påskyndade anrop av vissa enkla "
"inbyggda funktioner och metoder upp till 20--50%.  (Bidrag från Serhiy "
"Storchaka i :issue:`23867`, :issue:`35582` och :issue:`36127`.)"

#: ../../whatsnew/3.8.rst:1525
msgid ""
"``LOAD_GLOBAL`` instruction now uses new \"per opcode cache\" mechanism. It "
"is about 40% faster now.  (Contributed by Yury Selivanov and Inada Naoki in "
":issue:`26219`.)"
msgstr ""
"``LOAD_GLOBAL`` instruktionen använder nu den nya \"per opcode cache\" "
"mekanismen. Den är ungefär 40% faster nu.  (Bidrag från Yury Selivanov och "
"Inada Naoki i :issue:`26219`.)"

#: ../../whatsnew/3.8.rst:1531
msgid "Build and C API Changes"
msgstr "Ändringar i Build och C API"

#: ../../whatsnew/3.8.rst:1533
msgid ""
"Default :data:`sys.abiflags` became an empty string: the ``m`` flag for "
"pymalloc became useless (builds with and without pymalloc are ABI "
"compatible) and so has been removed. (Contributed by Victor Stinner in "
":issue:`36707`.)"
msgstr ""
"Standard :data:`sys.abiflags` blev en tom sträng: flaggan ``m`` för pymalloc"
" blev värdelös (byggen med och utan pymalloc är ABI-kompatibla) och har "
"därför tagits bort. (Bidrag från Victor Stinner i :issue:`36707`.)"

#: ../../whatsnew/3.8.rst:1537
msgid "Example of changes:"
msgstr "Exempel på förändringar:"

#: ../../whatsnew/3.8.rst:1539
msgid ""
"Only ``python3.8`` program is installed, ``python3.8m`` program is gone."
msgstr ""
"Endast programmet ``python3.8`` är installerat, programmet ``python3.8m`` är"
" borta."

#: ../../whatsnew/3.8.rst:1540
msgid ""
"Only ``python3.8-config`` script is installed, ``python3.8m-config`` script "
"is gone."
msgstr ""
"Endast skriptet ``python3.8-config`` är installerat, skriptet "
"``python3.8m-config`` är borta."

#: ../../whatsnew/3.8.rst:1542
msgid ""
"The ``m`` flag has been removed from the suffix of dynamic library "
"filenames: extension modules in the standard library as well as those "
"produced and installed by third-party packages, like those downloaded from "
"PyPI. On Linux, for example, the Python 3.7 suffix "
"``.cpython-37m-x86_64-linux-gnu.so`` became ``.cpython-38-x86_64-linux-"
"gnu.so`` in Python 3.8."
msgstr ""
"Flaggan ``m`` har tagits bort från suffixet för dynamiska biblioteksfilnamn:"
" tilläggsmoduler i standardbiblioteket samt de som produceras och "
"installeras av tredjepartspaket, som de som hämtas från PyPI. På Linux, till"
" exempel, blev Python 3.7-suffixet ``.cpython-37m-x86_64-linux-gnu.so`` "
"``.cpython-38-x86_64-linux-gnu.so`` i Python 3.8."

#: ../../whatsnew/3.8.rst:1549
msgid ""
"The header files have been reorganized to better separate the different "
"kinds of APIs:"
msgstr ""
"Huvudfilerna har omorganiserats för att bättre separera de olika typerna av "
"API:er:"

#: ../../whatsnew/3.8.rst:1552
msgid "``Include/*.h`` should be the portable public stable C API."
msgstr "``Include/*.h`` bör vara det portabla offentliga stabila C API."

#: ../../whatsnew/3.8.rst:1553
msgid ""
"``Include/cpython/*.h`` should be the unstable C API specific to CPython; "
"public API, with some private API prefixed by ``_Py`` or ``_PY``."
msgstr ""
"``Include/cpython/*.h`` bör vara det instabila C API som är specifikt för "
"CPython; offentligt API, med vissa privata API som föregås av ``_Py`` eller "
"``_PY``."

#: ../../whatsnew/3.8.rst:1555
msgid ""
"``Include/internal/*.h`` is the private internal C API very specific to "
"CPython. This API comes with no backward compatibility warranty and should "
"not be used outside CPython. It is only exposed for very specific needs like"
" debuggers and profiles which has to access to CPython internals without "
"calling functions. This API is now installed by ``make install``."
msgstr ""
"``Include/internal/*.h`` är det privata interna C API:et som är mycket "
"specifikt för CPython. Detta API kommer med ingen garanti för "
"bakåtkompatibilitet och bör inte användas utanför CPython. Det är endast "
"exponerat för mycket specifika behov som debuggers och profiler som måste "
"komma åt CPython-interna utan att anropa funktioner. Detta API installeras "
"nu av ``make install``."

#: ../../whatsnew/3.8.rst:1561
msgid ""
"(Contributed by Victor Stinner in :issue:`35134` and :issue:`35081`, work "
"initiated by Eric Snow in Python 3.7.)"
msgstr ""
"(Bidrag från Victor Stinner i :issue:`35134` och :issue:`35081`, arbete "
"påbörjat av Eric Snow i Python 3.7.)"

#: ../../whatsnew/3.8.rst:1564
msgid ""
"Some macros have been converted to static inline functions: parameter types "
"and return type are well defined, they don't have issues specific to macros,"
" variables have a local scopes. Examples:"
msgstr ""
"Vissa makron har konverterats till statiska inline-funktioner: "
"parametertyper och returtyp är väldefinierade, de har inte problem som är "
"specifika för makron, variabler har lokala räckvidder. Exempel på detta:"

#: ../../whatsnew/3.8.rst:1568
msgid ":c:func:`Py_INCREF`, :c:func:`Py_DECREF`"
msgstr ":c:func:`Py_INCREF`, :c:func:`Py_DECREF`"

#: ../../whatsnew/3.8.rst:1569
msgid ":c:func:`Py_XINCREF`, :c:func:`Py_XDECREF`"
msgstr ":c:func:`Py_XINCREF`, :c:func:`Py_XDECREF`"

#: ../../whatsnew/3.8.rst:1570
msgid ":c:func:`PyObject_INIT`, :c:func:`PyObject_INIT_VAR`"
msgstr ""

#: ../../whatsnew/3.8.rst:1571
msgid ""
"Private functions: :c:func:`_PyObject_GC_TRACK`, "
":c:func:`_PyObject_GC_UNTRACK`, :c:func:`_Py_Dealloc`"
msgstr ""

#: ../../whatsnew/3.8.rst:1574
msgid "(Contributed by Victor Stinner in :issue:`35059`.)"
msgstr "(Bidrag från Victor Stinner i :issue:`35059`.)"

#: ../../whatsnew/3.8.rst:1576
msgid ""
"The :c:func:`PyByteArray_Init` and :c:func:`PyByteArray_Fini` functions have"
" been removed. They did nothing since Python 2.7.4 and Python 3.2.0, were "
"excluded from the limited API (stable ABI), and were not documented. "
"(Contributed by Victor Stinner in :issue:`35713`.)"
msgstr ""

#: ../../whatsnew/3.8.rst:1581
msgid ""
"The result of :c:func:`PyExceptionClass_Name` is now of type ``const char "
"*`` rather of ``char *``. (Contributed by Serhiy Storchaka in "
":issue:`33818`.)"
msgstr ""
"Resultatet av :c:func:`PyExceptionClass_Name` är nu av typen ``const char "
"*`` istället för ``char *``. (Bidrag från Serhiy Storchaka i "
":issue:`33818`.)"

#: ../../whatsnew/3.8.rst:1585
msgid ""
"The duality of ``Modules/Setup.dist`` and ``Modules/Setup`` has been "
"removed.  Previously, when updating the CPython source tree, one had to "
"manually copy ``Modules/Setup.dist`` (inside the source tree) to "
"``Modules/Setup`` (inside the build tree) in order to reflect any changes "
"upstream.  This was of a small benefit to packagers at the expense of a "
"frequent annoyance to developers following CPython development, as "
"forgetting to copy the file could produce build failures."
msgstr ""
"Dubbelheten mellan ``Modules/Setup.dist`` och ``Modules/Setup`` har tagits "
"bort.  Tidigare, när man uppdaterade CPythons källträd, var man tvungen att "
"manuellt kopiera ``Modules/Setup.dist`` (i källträdet) till "
"``Modules/Setup`` (i byggträdet) för att återspegla eventuella ändringar "
"uppströms.  Detta var en liten fördel för paketerare på bekostnad av ett "
"ofta förekommande irritationsmoment för utvecklare som följde CPython-"
"utvecklingen, eftersom om man glömde att kopiera filen kunde det leda till "
"byggfel."

#: ../../whatsnew/3.8.rst:1593
msgid ""
"Now the build system always reads from ``Modules/Setup`` inside the source "
"tree.  People who want to customize that file are encouraged to maintain "
"their changes in a git fork of CPython or as patch files, as they would do "
"for any other change to the source tree."
msgstr ""
"Nu läser byggsystemet alltid från ``Modules/Setup`` inuti källträdet.  "
"Personer som vill anpassa den filen uppmuntras att underhålla sina ändringar"
" i en git-fork av CPython eller som patch-filer, som de skulle göra för alla"
" andra ändringar i källträdet."

#: ../../whatsnew/3.8.rst:1598
msgid "(Contributed by Antoine Pitrou in :issue:`32430`.)"
msgstr "(Bidrag från Antoine Pitrou i :issue:`32430`.)"

#: ../../whatsnew/3.8.rst:1600
msgid ""
"Functions that convert Python number to C integer like "
":c:func:`PyLong_AsLong` and argument parsing functions like "
":c:func:`PyArg_ParseTuple` with integer converting format units like ``'i'``"
" will now use the :meth:`~object.__index__` special method instead of "
":meth:`~object.__int__`, if available.  The deprecation warning will be "
"emitted for objects with the ``__int__()`` method but without the "
"``__index__()`` method (like :class:`~decimal.Decimal` and "
":class:`~fractions.Fraction`).  :c:func:`PyNumber_Check` will now return "
"``1`` for objects implementing ``__index__()``. :c:func:`PyNumber_Long`, "
":c:func:`PyNumber_Float` and :c:func:`PyFloat_AsDouble` also now use the "
"``__index__()`` method if available. (Contributed by Serhiy Storchaka in "
":issue:`36048` and :issue:`20092`.)"
msgstr ""
"Funktioner som konverterar Pythontal till C-integral som "
":c:func:`PyLong_AsLong` och argumentparsingfunktioner som "
":c:func:`PyArg_ParseTuple` med heltalskonverteringsformatenheter som ``'i'``"
" kommer nu att använda specialmetoden :meth:`~object.__index__` istället för"
" :meth:`~object.__int__`, om tillgänglig.  Deprecation-varningen kommer att "
"utfärdas för objekt med metoden ``__int__()`` men utan metoden "
"``__index__()`` (som :class:`~decimal.Decimal` och "
":class:`~fractions.Fraction`).  :c:func:`PyNumber_Check` kommer nu att "
"returnera ``1`` för objekt som implementerar ``__index__()``. "
":c:func:`PyNumber_Long`, :c:func:`PyNumber_Float` och "
":c:func:`PyFloat_AsDouble` använder nu också metoden ``__index__()`` om den "
"är tillgänglig. (Bidrag från Serhiy Storchaka i :issue:`36048` och "
":issue:`20092`.)"

#: ../../whatsnew/3.8.rst:1614
msgid ""
"Heap-allocated type objects will now increase their reference count in "
":c:func:`PyObject_Init` (and its parallel macro ``PyObject_INIT``) instead "
"of in :c:func:`PyType_GenericAlloc`. Types that modify instance allocation "
"or deallocation may need to be adjusted. (Contributed by Eddie Elizondo in "
":issue:`35810`.)"
msgstr ""
"Heap-allokerade typobjekt kommer nu att öka sitt referensantal i "
":c:func:`PyObject_Init` (och dess parallella makro ``PyObject_INIT``) "
"istället för i :c:func:`PyType_GenericAlloc`. Typer som modifierar "
"instansallokering eller -deallokering kan behöva justeras. (Bidrag från "
"Eddie Elizondo i :issue:`35810`.)"

#: ../../whatsnew/3.8.rst:1620
msgid ""
"The new function :c:func:`PyCode_NewWithPosOnlyArgs` allows to create code "
"objects like :c:func:`PyCode_New`, but with an extra *posonlyargcount* "
"parameter for indicating the number of positional-only arguments. "
"(Contributed by Pablo Galindo in :issue:`37221`.)"
msgstr ""

#: ../../whatsnew/3.8.rst:1625
msgid ""
":c:func:`Py_SetPath` now sets :data:`sys.executable` to the program full "
"path (:c:func:`Py_GetProgramFullPath`) rather than to the program name "
"(:c:func:`Py_GetProgramName`). (Contributed by Victor Stinner in "
":issue:`38234`.)"
msgstr ""

#: ../../whatsnew/3.8.rst:1632
msgid "Deprecated"
msgstr "Föråldrat"

#: ../../whatsnew/3.8.rst:1634
msgid ""
"The distutils ``bdist_wininst`` command is now deprecated, use "
"``bdist_wheel`` (wheel packages) instead. (Contributed by Victor Stinner in "
":issue:`37481`.)"
msgstr ""
"Kommandot distutils ``bdist_wininst`` är nu föråldrat, använd "
"``bdist_wheel`` (wheel-paket) istället. (Bidrag från Victor Stinner i "
":issue:`37481`.)"

#: ../../whatsnew/3.8.rst:1638
msgid ""
"Deprecated methods ``getchildren()`` and ``getiterator()`` in the "
":mod:`~xml.etree.ElementTree` module now emit a :exc:`DeprecationWarning` "
"instead of :exc:`PendingDeprecationWarning`. They will be removed in Python "
"3.9. (Contributed by Serhiy Storchaka in :issue:`29209`.)"
msgstr ""
"De föråldrade metoderna ``getchildren()`` och ``getiterator()`` i modulen "
":mod:`~xml.etree.ElementTree` avger nu en :exc:`DeprecationWarning` istället"
" för :exc:`PendingDeprecationWarning`. De kommer att tas bort i Python 3.9. "
"(Bidrag från Serhiy Storchaka i :issue:`29209`.)"

#: ../../whatsnew/3.8.rst:1644
msgid ""
"Passing an object that is not an instance of "
":class:`concurrent.futures.ThreadPoolExecutor` to "
":meth:`loop.set_default_executor() <asyncio.loop.set_default_executor>` is "
"deprecated and will be prohibited in Python 3.9. (Contributed by Elvis "
"Pranskevichus in :issue:`34075`.)"
msgstr ""
"Att skicka ett objekt som inte är en instans av "
":class:`concurrent.futures.ThreadPoolExecutor` till "
":meth:`loop.set_default_executor() <asyncio.loop.set_default_executor>` är "
"föråldrat och kommer att förbjudas i Python 3.9. (Bidrag från Elvis "
"Pranskevichus i :issue:`34075`.)"

#: ../../whatsnew/3.8.rst:1650
msgid ""
"The :meth:`__getitem__` methods of :class:`xml.dom.pulldom.DOMEventStream`, "
":class:`wsgiref.util.FileWrapper` and :class:`fileinput.FileInput` have been"
" deprecated."
msgstr ""

#: ../../whatsnew/3.8.rst:1654
msgid ""
"Implementations of these methods have been ignoring their *index* parameter,"
" and returning the next item instead. (Contributed by Berker Peksag in "
":issue:`9372`.)"
msgstr ""
"Implementeringar av dessa metoder har ignorerat deras *index*-parameter och "
"returnerat nästa objekt istället. (Bidrag från Berker Peksag i "
":issue:`9372`.)"

#: ../../whatsnew/3.8.rst:1658
msgid ""
"The :class:`typing.NamedTuple` class has deprecated the ``_field_types`` "
"attribute in favor of the ``__annotations__`` attribute which has the same "
"information. (Contributed by Raymond Hettinger in :issue:`36320`.)"
msgstr ""
"Klassen :class:`typing.NamedTuple` har tagit bort attributet "
"``_field_types`` till förmån för attributet ``__annotations__`` som "
"innehåller samma information. (Bidrag från Raymond Hettinger i "
":issue:`36320`.)"

#: ../../whatsnew/3.8.rst:1662
msgid ""
":mod:`ast` classes ``Num``, ``Str``, ``Bytes``, ``NameConstant`` and "
"``Ellipsis`` are considered deprecated and will be removed in future Python "
"versions. :class:`~ast.Constant` should be used instead. (Contributed by "
"Serhiy Storchaka in :issue:`32892`.)"
msgstr ""
":mod:`ast`\\-klasserna ``Num``, ``Str``, ``Bytes``, ``NameConstant`` och "
"``Ellipsis`` anses vara föråldrade och kommer att tas bort i framtida "
"Python-versioner. :class:`~ast.Constant` bör användas istället. (Bidrag från"
" Serhiy Storchaka i :issue:`32892`.)"

#: ../../whatsnew/3.8.rst:1667
msgid ""
":class:`ast.NodeVisitor` methods ``visit_Num()``, ``visit_Str()``, "
"``visit_Bytes()``, ``visit_NameConstant()`` and ``visit_Ellipsis()`` are "
"deprecated now and will not be called in future Python versions. Add the "
":meth:`~ast.NodeVisitor.visit_Constant` method to handle all constant nodes."
" (Contributed by Serhiy Storchaka in :issue:`36917`.)"
msgstr ""
":class:`ast.NodeVisitor` metoderna ``visit_Num()``, ``visit_Str()``, "
"``visit_Bytes()``, ``visit_NameConstant()`` och ``visit_Ellipsis()`` är nu "
"avförda och kommer inte att anropas i framtida Python-versioner. Lägg till "
"metoden :meth:`~ast.NodeVisitor.visit_Constant` för att hantera alla "
"konstanta noder. (Bidrag från Serhiy Storchaka i :issue:`36917`.)"

#: ../../whatsnew/3.8.rst:1674
msgid ""
"The :func:`asyncio.coroutine` :term:`decorator` is deprecated and will be "
"removed in version 3.10.  Instead of ``@asyncio.coroutine``, use "
":keyword:`async def` instead. (Contributed by Andrew Svetlov in "
":issue:`36921`.)"
msgstr ""

#: ../../whatsnew/3.8.rst:1679
msgid ""
"In :mod:`asyncio`, the explicit passing of a *loop* argument has been "
"deprecated and will be removed in version 3.10 for the following: "
":func:`asyncio.sleep`, :func:`asyncio.gather`, :func:`asyncio.shield`, "
":func:`asyncio.wait_for`, :func:`asyncio.wait`, "
":func:`asyncio.as_completed`, :class:`asyncio.Task`, :class:`asyncio.Lock`, "
":class:`asyncio.Event`, :class:`asyncio.Condition`, "
":class:`asyncio.Semaphore`, :class:`asyncio.BoundedSemaphore`, "
":class:`asyncio.Queue`, :func:`asyncio.create_subprocess_exec`, and "
":func:`asyncio.create_subprocess_shell`."
msgstr ""
"I :mod:`asyncio` har det uttryckliga passandet av ett *loop*-argument "
"föråldrats och kommer att tas bort i version 3.10 för följande: "
":func:`asyncio.sleep`, :func:`asyncio.gather`, :func:`asyncio.shield`, "
":func:`asyncio.wait_for`, :func:`asyncio.wait`, "
":func:`asyncio.as_completed`, :class:`asyncio.Task`, :class:`asyncio.Lock`, "
":class:`asyncio.Event`, :class:`asyncio.Condition`, "
":class:`asyncio.Semaphore`, :class:`asyncio.BoundedSemaphore`, "
":class:`asyncio.Queue`, :func:`asyncio.create_subprocess_exec`, och "
":func:`asyncio.create_subprocess_shell`."

#: ../../whatsnew/3.8.rst:1689
msgid ""
"The explicit passing of coroutine objects to :func:`asyncio.wait` has been "
"deprecated and will be removed in version 3.11. (Contributed by Yury "
"Selivanov in :issue:`34790`.)"
msgstr ""
"Den explicita överföringen av coroutine-objekt till :func:`asyncio.wait` har"
" föråldrats och kommer att tas bort i version 3.11. (Bidrag från Yury "
"Selivanov i :issue:`34790`.)"

#: ../../whatsnew/3.8.rst:1693
msgid ""
"The following functions and methods are deprecated in the :mod:`gettext` "
"module: :func:`~gettext.lgettext`, :func:`~gettext.ldgettext`, "
":func:`~gettext.lngettext` and :func:`~gettext.ldngettext`. They return "
"encoded bytes, and it's possible that you will get unexpected Unicode-"
"related exceptions if there are encoding problems with the translated "
"strings. It's much better to use alternatives which return Unicode strings "
"in Python 3. These functions have been broken for a long time."
msgstr ""

#: ../../whatsnew/3.8.rst:1701
msgid ""
"Function :func:`~gettext.bind_textdomain_codeset`, methods "
":meth:`~gettext.NullTranslations.output_charset` and "
":meth:`~gettext.NullTranslations.set_output_charset`, and the *codeset* "
"parameter of functions :func:`~gettext.translation` and "
":func:`~gettext.install` are also deprecated, since they are only used for "
"the ``l*gettext()`` functions. (Contributed by Serhiy Storchaka in "
":issue:`33710`.)"
msgstr ""

#: ../../whatsnew/3.8.rst:1709
msgid ""
"The :meth:`~threading.Thread.isAlive()` method of :class:`threading.Thread` "
"has been deprecated. (Contributed by Dong-hee Na in :issue:`35283`.)"
msgstr ""

#: ../../whatsnew/3.8.rst:1713
msgid ""
"Many builtin and extension functions that take integer arguments will now "
"emit a deprecation warning for :class:`~decimal.Decimal`\\ s, "
":class:`~fractions.Fraction`\\ s and any other objects that can be converted"
" to integers only with a loss (e.g. that have the :meth:`~object.__int__` "
"method but do not have the :meth:`~object.__index__` method).  In future "
"version they will be errors. (Contributed by Serhiy Storchaka in "
":issue:`36048`.)"
msgstr ""
"Många inbyggda funktioner och tilläggsfunktioner som tar heltalsargument "
"kommer nu att avge en varning om föråldring för :class:`~decimal.Decimal`` "
"s, :class:`~fractions.Fraction`` s och alla andra objekt som kan konverteras"
" till heltal endast med förlust (t.ex. som har "
":meth:`~object.__int__`\\-metoden men inte har "
":meth:`~object.__index__`\\-metoden).  I framtida versioner kommer de att "
"vara fel. (Bidrag från Serhiy Storchaka i :issue:`36048`.)"

#: ../../whatsnew/3.8.rst:1721
msgid "Deprecated passing the following arguments as keyword arguments:"
msgstr "Föråldrat att skicka följande argument som nyckelordsargument:"

#: ../../whatsnew/3.8.rst:1723
msgid ""
"*func* in :func:`functools.partialmethod`, :func:`weakref.finalize`, "
":meth:`profile.Profile.runcall`, :meth:`cProfile.Profile.runcall`, "
":meth:`bdb.Bdb.runcall`, :meth:`trace.Trace.runfunc` and "
":func:`curses.wrapper`."
msgstr ""

#: ../../whatsnew/3.8.rst:1727
msgid "*function* in :meth:`unittest.TestCase.addCleanup`."
msgstr "*function* i :meth:`unittest.TestCase.addCleanup`."

#: ../../whatsnew/3.8.rst:1728
msgid ""
"*fn* in the :meth:`~concurrent.futures.Executor.submit` method of "
":class:`concurrent.futures.ThreadPoolExecutor` and "
":class:`concurrent.futures.ProcessPoolExecutor`."
msgstr ""
"*fn* i metoden :meth:`~concurrent.futures.Executor.submit` i "
":class:`concurrent.futures.ThreadPoolExecutor` och "
":class:`concurrent.futures.ProcessPoolExecutor`."

#: ../../whatsnew/3.8.rst:1731
msgid ""
"*callback* in :meth:`contextlib.ExitStack.callback`, "
":meth:`contextlib.AsyncExitStack.callback` and "
":meth:`contextlib.AsyncExitStack.push_async_callback`."
msgstr ""

#: ../../whatsnew/3.8.rst:1734
msgid ""
"*c* and *typeid* in the :meth:`~multiprocessing.managers.Server.create` "
"method of :class:`multiprocessing.managers.Server` and "
":class:`multiprocessing.managers.SharedMemoryServer`."
msgstr ""

#: ../../whatsnew/3.8.rst:1737
msgid "*obj* in :func:`weakref.finalize`."
msgstr "*obj* i :func:`weakref.finalize`."

#: ../../whatsnew/3.8.rst:1739
msgid ""
"In future releases of Python, they will be :ref:`positional-only "
"<positional-only_parameter>`. (Contributed by Serhiy Storchaka in "
":issue:`36492`.)"
msgstr ""
"I framtida utgåvor av Python kommer de att vara :ref:`positional-only "
"<positional-only_parameter>`. (Bidrag från Serhiy Storchaka i "
":issue:`36492`.)"

#: ../../whatsnew/3.8.rst:1745
msgid "API and Feature Removals"
msgstr "Borttagning av API och funktioner"

#: ../../whatsnew/3.8.rst:1747
msgid "The following features and APIs have been removed from Python 3.8:"
msgstr "Följande funktioner och API:er har tagits bort från Python 3.8:"

#: ../../whatsnew/3.8.rst:1749
msgid ""
"Starting with Python 3.3, importing ABCs from :mod:`collections` was "
"deprecated, and importing should be done from :mod:`collections.abc`. Being "
"able to import from collections was marked for removal in 3.8, but has been "
"delayed to 3.9. (See :issue:`36952`.)"
msgstr ""

#: ../../whatsnew/3.8.rst:1754
msgid ""
"The :mod:`macpath` module, deprecated in Python 3.7, has been removed. "
"(Contributed by Victor Stinner in :issue:`35471`.)"
msgstr ""

#: ../../whatsnew/3.8.rst:1757 ../../whatsnew/3.8.rst:1876
msgid ""
"The function :func:`platform.popen` has been removed, after having been "
"deprecated since Python 3.3: use :func:`os.popen` instead. (Contributed by "
"Victor Stinner in :issue:`35345`.)"
msgstr ""

#: ../../whatsnew/3.8.rst:1761
msgid ""
"The function :func:`time.clock` has been removed, after having been "
"deprecated since Python 3.3: use :func:`time.perf_counter` or "
":func:`time.process_time` instead, depending on your requirements, to have "
"well-defined behavior. (Contributed by Matthias Bussonnier in "
":issue:`36895`.)"
msgstr ""

#: ../../whatsnew/3.8.rst:1767
msgid ""
"The ``pyvenv`` script has been removed in favor of ``python3.8 -m venv`` to "
"help eliminate confusion as to what Python interpreter the ``pyvenv`` script"
" is tied to. (Contributed by Brett Cannon in :issue:`25427`.)"
msgstr ""
"Skriptet ``pyvenv`` har tagits bort till förmån för ``python3.8 -m venv`` "
"för att hjälpa till att eliminera förvirring om vilken Python-tolk skriptet "
"``pyvenv`` är knutet till. (Bidrag från Brett Cannon i :issue:`25427`.)"

#: ../../whatsnew/3.8.rst:1771
msgid ""
"``parse_qs``, ``parse_qsl``, and ``escape`` are removed from the :mod:`cgi` "
"module.  They are deprecated in Python 3.2 or older. They should be imported"
" from the ``urllib.parse`` and ``html`` modules instead."
msgstr ""

#: ../../whatsnew/3.8.rst:1775
msgid ""
"``filemode`` function is removed from the :mod:`tarfile` module. It is not "
"documented and deprecated since Python 3.3."
msgstr ""
"``filemode`` funktionen är borttagen från :mod:`tarfile` modulen. Den är "
"inte dokumenterad och föråldrad sedan Python 3.3."

#: ../../whatsnew/3.8.rst:1778
msgid ""
"The :class:`~xml.etree.ElementTree.XMLParser` constructor no longer accepts "
"the *html* argument.  It never had an effect and was deprecated in Python "
"3.4. All other parameters are now :ref:`keyword-only <keyword-"
"only_parameter>`. (Contributed by Serhiy Storchaka in :issue:`29209`.)"
msgstr ""
"Konstruktorn :class:`~xml.etree.ElementTree.XMLParser` accepterar inte "
"längre argumentet *html*.  Det hade aldrig någon effekt och utrangerades i "
"Python 3.4. Alla andra parametrar är nu :ref:`keyword-only <keyword-"
"only_parameter>`. (Bidrag från Serhiy Storchaka i :issue:`29209`.)"

#: ../../whatsnew/3.8.rst:1783
msgid ""
"Removed the ``doctype()`` method of "
":class:`~xml.etree.ElementTree.XMLParser`. (Contributed by Serhiy Storchaka "
"in :issue:`29209`.)"
msgstr ""
"Tog bort metoden ``doctype()`` i :class:`~xml.etree.ElementTree.XMLParser`. "
"(Bidrag från Serhiy Storchaka i :issue:`29209`.)"

#: ../../whatsnew/3.8.rst:1786
msgid ""
"\"unicode_internal\" codec is removed. (Contributed by Inada Naoki in "
":issue:`36297`.)"
msgstr ""
"\"unicode_internal\" codec är borttagen. (Bidrag från Inada Naoki i "
":issue:`36297`.)"

#: ../../whatsnew/3.8.rst:1789
msgid ""
"The ``Cache`` and ``Statement`` objects of the :mod:`sqlite3` module are not"
" exposed to the user. (Contributed by Aviv Palivoda in :issue:`30262`.)"
msgstr ""
"Objekten ``Cache`` och ``Statement`` i modulen :mod:`sqlite3` är inte "
"exponerade för användaren. (Bidrag från Aviv Palivoda i :issue:`30262`.)"

#: ../../whatsnew/3.8.rst:1793
msgid ""
"The ``bufsize`` keyword argument of :func:`fileinput.input` and "
":func:`fileinput.FileInput` which was ignored and deprecated since Python "
"3.6 has been removed. :issue:`36952` (Contributed by Matthias Bussonnier.)"
msgstr ""
"Nyckelordsargumentet ``bufsize`` i :func:`fileinput.input` och "
":func:`fileinput.FileInput` som ignorerades och var föråldrat sedan Python "
"3.6 har tagits bort. :issue:`36952` (Bidrag från Matthias Bussonnier.)"

#: ../../whatsnew/3.8.rst:1797
msgid ""
"The functions :func:`sys.set_coroutine_wrapper` and "
":func:`sys.get_coroutine_wrapper` deprecated in Python 3.7 have been "
"removed; :issue:`36933` (Contributed by Matthias Bussonnier.)"
msgstr ""

#: ../../whatsnew/3.8.rst:1803
msgid "Porting to Python 3.8"
msgstr "Portning till Python 3.8"

#: ../../whatsnew/3.8.rst:1805
msgid ""
"This section lists previously described changes and other bugfixes that may "
"require changes to your code."
msgstr ""
"I det här avsnittet listas tidigare beskrivna ändringar och andra buggfixar "
"som kan kräva ändringar i din kod."

#: ../../whatsnew/3.8.rst:1810
msgid "Changes in Python behavior"
msgstr "Förändringar i Pythons beteende"

#: ../../whatsnew/3.8.rst:1812
msgid ""
"Yield expressions (both ``yield`` and ``yield from`` clauses) are now "
"disallowed in comprehensions and generator expressions (aside from the "
"iterable expression in the leftmost :keyword:`!for` clause). (Contributed by"
" Serhiy Storchaka in :issue:`10544`.)"
msgstr ""
"Yield-uttryck (både ``yield`` och ``yield from``\\-klausuler) är nu inte "
"tillåtna i förståelser och generatoruttryck (förutom det iterabla uttrycket "
"i :keyword:`!for`\\-klausulen längst till vänster). (Bidrag från Serhiy "
"Storchaka i :issue:`10544`.)"

#: ../../whatsnew/3.8.rst:1817
msgid ""
"The compiler now produces a :exc:`SyntaxWarning` when identity checks "
"(``is`` and ``is not``) are used with certain types of literals (e.g. "
"strings, numbers).  These can often work by accident in CPython, but are not"
" guaranteed by the language spec.  The warning advises users to use equality"
" tests (``==`` and ``!=``) instead. (Contributed by Serhiy Storchaka in "
":issue:`34850`.)"
msgstr ""
"Kompilatorn producerar nu en :exc:`SyntaxWarning` när identitetskontroller "
"(``is`` och ``is not``) används med vissa typer av literaler (t.ex. "
"strängar, tal).  Dessa kan ofta fungera av misstag i CPython, men garanteras"
" inte av språkspecifikationen.  Varningen råder användare att använda "
"likhetstester (``==`` och ``!=``) istället. (Bidrag från Serhiy Storchaka i "
":issue:`34850`.)"

#: ../../whatsnew/3.8.rst:1824
msgid ""
"The CPython interpreter can swallow exceptions in some circumstances. In "
"Python 3.8 this happens in fewer cases.  In particular, exceptions raised "
"when getting the attribute from the type dictionary are no longer ignored. "
"(Contributed by Serhiy Storchaka in :issue:`35459`.)"
msgstr ""
"CPython-tolken kan svälja undantag under vissa omständigheter. I Python 3.8 "
"händer detta i färre fall.  I synnerhet ignoreras inte längre undantag som "
"uppstår när attributet hämtas från typordboken. (Bidrag från Serhiy "
"Storchaka i :issue:`35459`.)"

#: ../../whatsnew/3.8.rst:1829
msgid ""
"Removed ``__str__`` implementations from builtin types :class:`bool`, "
":class:`int`, :class:`float`, :class:`complex` and few classes from the "
"standard library.  They now inherit ``__str__()`` from :class:`object`. As "
"result, defining the ``__repr__()`` method in the subclass of these classes "
"will affect their string representation. (Contributed by Serhiy Storchaka in"
" :issue:`36793`.)"
msgstr ""
"Tog bort ``__str__`` implementationer från inbyggda typer :class:`bool`, "
":class:`int`, :class:`float`, :class:`complex` och några klasser från "
"standardbiblioteket.  De ärver nu ``__str__()`` från :class:`object`. Som "
"ett resultat kommer definitionen av metoden ``__repr__()`` i underklassen av"
" dessa klasser att påverka deras strängrepresentation. (Bidrag från Serhiy "
"Storchaka i :issue:`36793`.)"

#: ../../whatsnew/3.8.rst:1836
msgid ""
"On AIX, :attr:`sys.platform` doesn't contain the major version anymore. It "
"is always ``'aix'``, instead of ``'aix3'`` .. ``'aix7'``.  Since older "
"Python versions include the version number, so it is recommended to always "
"use ``sys.platform.startswith('aix')``. (Contributed by M. Felt in "
":issue:`36588`.)"
msgstr ""

#: ../../whatsnew/3.8.rst:1842
msgid ""
":c:func:`PyEval_AcquireLock` and :c:func:`PyEval_AcquireThread` now "
"terminate the current thread if called while the interpreter is finalizing, "
"making them consistent with :c:func:`PyEval_RestoreThread`, "
":c:func:`Py_END_ALLOW_THREADS`, and :c:func:`PyGILState_Ensure`. If this "
"behavior is not desired, guard the call by checking "
":c:func:`_Py_IsFinalizing` or :c:func:`sys.is_finalizing`. (Contributed by "
"Joannah Nanjekye in :issue:`36475`.)"
msgstr ""

#: ../../whatsnew/3.8.rst:1852
msgid "Changes in the Python API"
msgstr "Ändringar i Python API"

#: ../../whatsnew/3.8.rst:1854
msgid ""
"The :func:`os.getcwdb` function now uses the UTF-8 encoding on Windows, "
"rather than the ANSI code page: see :pep:`529` for the rationale. The "
"function is no longer deprecated on Windows. (Contributed by Victor Stinner "
"in :issue:`37412`.)"
msgstr ""
"Funktionen :func:`os.getcwdb` använder nu UTF-8-kodning i Windows, snarare "
"än ANSI-kodsidan: se :pep:`529` för motivering. Funktionen är inte längre "
"föråldrad i Windows. (Bidrag från Victor Stinner i :issue:`37412`.)"

#: ../../whatsnew/3.8.rst:1859
msgid ""
":class:`subprocess.Popen` can now use :func:`os.posix_spawn` in some cases "
"for better performance. On Windows Subsystem for Linux and QEMU User "
"Emulation, the :class:`Popen` constructor using :func:`os.posix_spawn` no "
"longer raises an exception on errors like \"missing program\".  Instead the "
"child process fails with a non-zero :attr:`~Popen.returncode`. (Contributed "
"by Joannah Nanjekye and Victor Stinner in :issue:`35537`.)"
msgstr ""

#: ../../whatsnew/3.8.rst:1866
msgid ""
"The *preexec_fn* argument of * :class:`subprocess.Popen` is no longer "
"compatible with subinterpreters. The use of the parameter in a "
"subinterpreter now raises :exc:`RuntimeError`. (Contributed by Eric Snow in "
":issue:`34651`, modified by Christian Heimes in :issue:`37951`.)"
msgstr ""
"Argumentet *preexec_fn* i * :class:`subprocess.Popen` är inte längre "
"kompatibelt med undertolkare. Användningen av parametern i en undertolk ger "
"nu upphov till :exc:`RuntimeError`. (Bidrag från Eric Snow i :issue:`34651`,"
" modifierat av Christian Heimes i :issue:`37951`.)"

#: ../../whatsnew/3.8.rst:1872
msgid ""
"The :meth:`imap.IMAP4.logout` method no longer silently ignores arbitrary "
"exceptions. (Contributed by Victor Stinner in :issue:`36348`.)"
msgstr ""

#: ../../whatsnew/3.8.rst:1880
msgid ""
"The :func:`statistics.mode` function no longer raises an exception when "
"given multimodal data.  Instead, it returns the first mode encountered in "
"the input data.  (Contributed by Raymond Hettinger in :issue:`35892`.)"
msgstr ""
"Funktionen :func:`statistics.mode` ger inte längre upphov till ett undantag "
"när den får multimodala data.  Istället returnerar den det första läget som "
"påträffas i indata.  (Bidrag från Raymond Hettinger i :issue:`35892`.)"

#: ../../whatsnew/3.8.rst:1885
msgid ""
"The :meth:`~tkinter.ttk.Treeview.selection` method of the "
":class:`tkinter.ttk.Treeview` class no longer takes arguments.  Using it "
"with arguments for changing the selection was deprecated in Python 3.6.  Use"
" specialized methods like :meth:`~tkinter.ttk.Treeview.selection_set` for "
"changing the selection.  (Contributed by Serhiy Storchaka in "
":issue:`31508`.)"
msgstr ""
"Metoden :meth:`~tkinter.ttk.Treeview.selection` i klassen "
":class:`tkinter.ttk.Treeview` tar inte längre emot argument.  Att använda "
"den med argument för att ändra urvalet var föråldrat i Python 3.6.  Använd "
"specialiserade metoder som :meth:`~tkinter.ttk.Treeview.selection_set` för "
"att ändra urvalet.  (Bidrag från Serhiy Storchaka i :issue:`31508`.)"

#: ../../whatsnew/3.8.rst:1891
msgid ""
"The :meth:`writexml`, :meth:`toxml` and :meth:`toprettyxml` methods of "
":mod:`xml.dom.minidom`, and the :meth:`write` method of :mod:`xml.etree`, "
"now preserve the attribute order specified by the user. (Contributed by "
"Diego Rojas and Raymond Hettinger in :issue:`34160`.)"
msgstr ""

#: ../../whatsnew/3.8.rst:1896
msgid ""
"A :mod:`dbm.dumb` database opened with flags ``'r'`` is now read-only. "
":func:`dbm.dumb.open` with flags ``'r'`` and ``'w'`` no longer creates a "
"database if it does not exist. (Contributed by Serhiy Storchaka in "
":issue:`32749`.)"
msgstr ""
"En :mod:`dbm.dumb` databas som öppnats med flaggorna ``'r'`` är nu "
"skrivskyddad. :func:`dbm.dumb.open` med flaggorna ``'r'`` och ``'w'`` skapar"
" inte längre en databas om den inte existerar. (Bidrag från Serhiy Storchaka"
" i :issue:`32749`.)"

#: ../../whatsnew/3.8.rst:1901
msgid ""
"The ``doctype()`` method defined in a subclass of "
":class:`~xml.etree.ElementTree.XMLParser` will no longer be called and will "
"emit a :exc:`RuntimeWarning` instead of a :exc:`DeprecationWarning`. Define "
"the :meth:`doctype() <xml.etree.ElementTree.TreeBuilder.doctype>` method on "
"a target for handling an XML doctype declaration. (Contributed by Serhiy "
"Storchaka in :issue:`29209`.)"
msgstr ""
"Metoden ``doctype()`` som definieras i en underklass till "
":class:`~xml.etree.ElementTree.XMLParser` kommer inte längre att anropas och"
" avger en :exc:`RuntimeWarning` istället för en :exc:`DeprecationWarning`. "
"Definiera metoden :meth:`doctype() "
"<xml.etree.ElementTree.TreeBuilder.doctype>` på ett mål för hantering av en "
"XML-doktypdeklaration. (Bidrag från Serhiy Storchaka i :issue:`29209`.)"

#: ../../whatsnew/3.8.rst:1908
msgid ""
"A :exc:`RuntimeError` is now raised when the custom metaclass doesn't "
"provide the ``__classcell__`` entry in the namespace passed to "
"``type.__new__``.  A :exc:`DeprecationWarning` was emitted in Python 3.6--"
"3.7.  (Contributed by Serhiy Storchaka in :issue:`23722`.)"
msgstr ""
"Ett :exc:`RuntimeError` utlöses nu när den anpassade metaklassen inte "
"tillhandahåller ``__classcell__``\\ -objektet i namnrymden som skickas till "
"``type.__new__``.  En :exc:`DeprecationWarning` gavs ut i Python 3.6--3.7. "
"(Bidrag från Serhiy Storchaka i :issue:`23722`.)"

#: ../../whatsnew/3.8.rst:1913
msgid ""
"The :class:`cProfile.Profile` class can now be used as a context manager. "
"(Contributed by Scott Sanderson in :issue:`29235`.)"
msgstr ""

#: ../../whatsnew/3.8.rst:1916
msgid ""
":func:`shutil.copyfile`, :func:`shutil.copy`, :func:`shutil.copy2`, "
":func:`shutil.copytree` and :func:`shutil.move` use platform-specific "
"\"fast-copy\" syscalls (see :ref:`shutil-platform-dependent-efficient-copy-"
"operations` section)."
msgstr ""
":func:`shutil.copyfile`, :func:`shutil.copy`, :func:`shutil.copy2`, "
":func:`shutil.copytree` och :func:`shutil.move` använder plattformsspecifika"
" \"fast-copy\" syscalls (se avsnittet :ref:`shutil-platform-dependent-"
"efficient-copy-operations`)."

#: ../../whatsnew/3.8.rst:1921
msgid ""
":func:`shutil.copyfile` default buffer size on Windows was changed from 16 "
"KiB to 1 MiB."
msgstr ""
":func:`shutil.copyfile` standardbuffertstorlek i Windows ändrades från 16 "
"KiB till 1 MiB."

#: ../../whatsnew/3.8.rst:1924
msgid ""
"The ``PyGC_Head`` struct has changed completely.  All code that touched the "
"struct member should be rewritten.  (See :issue:`33597`.)"
msgstr ""
"Strukturen ``PyGC_Head`` har ändrats helt.  All kod som berör struct-"
"medlemmen bör skrivas om.  (Se :issue:`33597`.)"

#: ../../whatsnew/3.8.rst:1927
msgid ""
"The :c:type:`PyInterpreterState` struct has been moved into the \"internal\""
" header files (specifically Include/internal/pycore_pystate.h).  An opaque "
"``PyInterpreterState`` is still available as part of the public API (and "
"stable ABI).  The docs indicate that none of the struct's fields are public,"
" so we hope no one has been using them.  However, if you do rely on one or "
"more of those private fields and have no alternative then please open a BPO "
"issue.  We'll work on helping you adjust (possibly including adding accessor"
" functions to the public API).  (See :issue:`35886`.)"
msgstr ""
"Strukturen :c:type:`PyInterpreterState` har flyttats till de \"interna\" "
"header-filerna (särskilt Include/internal/pycore_pystate.h).  En opak "
"``PyInterpreterState`` är fortfarande tillgänglig som en del av det "
"offentliga API:et (och stabila ABI).  Dokumentationen indikerar att inga av "
"strukturens fält är offentliga, så vi hoppas att ingen har använt dem.  Men "
"om du förlitar dig på ett eller flera av dessa privata fält och inte har "
"något alternativ, öppna en BPO-fråga.  Vi ska försöka hjälpa dig att anpassa"
" dig (eventuellt genom att lägga till accessorfunktioner till det publika "
"API:et).  (Se :issue:`35886`.)"

#: ../../whatsnew/3.8.rst:1937
msgid ""
"The :meth:`mmap.flush() <mmap.mmap.flush>` method now returns ``None`` on "
"success and raises an exception on error under all platforms.  Previously, "
"its behavior was platform-dependent: a nonzero value was returned on "
"success; zero was returned on error under Windows.  A zero value was "
"returned on success; an exception was raised on error under Unix. "
"(Contributed by Berker Peksag in :issue:`2122`.)"
msgstr ""
"Metoden :meth:`mmap.flush() <mmap.mmap.flush>` returnerar nu ``None`` vid "
"framgång och ger upphov till ett undantag vid fel under alla plattformar.  "
"Tidigare var dess beteende plattformsberoende: ett värde som inte var noll "
"returnerades vid framgång; noll returnerades vid fel under Windows.  Ett "
"nollvärde returnerades vid framgång; ett undantag utlöstes vid fel under "
"Unix. (Bidrag från Berker Peksag i :issue:`2122`.)"

#: ../../whatsnew/3.8.rst:1944
msgid ""
":mod:`xml.dom.minidom` and :mod:`xml.sax` modules no longer process external"
" entities by default. (Contributed by Christian Heimes in :issue:`17239`.)"
msgstr ""
"modulerna :mod:`xml.dom.minidom` och :mod:`xml.sax` bearbetar inte längre "
"externa enheter som standard. (Bidrag från Christian Heimes i "
":issue:`17239`.)"

#: ../../whatsnew/3.8.rst:1948
msgid ""
"Deleting a key from a read-only :mod:`dbm` database (:mod:`dbm.dumb`, "
":mod:`dbm.gnu` or :mod:`dbm.ndbm`) raises :attr:`error` "
"(:exc:`dbm.dumb.error`, :exc:`dbm.gnu.error` or :exc:`dbm.ndbm.error`) "
"instead of :exc:`KeyError`. (Contributed by Xiang Zhang in :issue:`33106`.)"
msgstr ""

#: ../../whatsnew/3.8.rst:1953
msgid ""
"Simplified AST for literals.  All constants will be represented as "
":class:`ast.Constant` instances.  Instantiating old classes ``Num``, "
"``Str``, ``Bytes``, ``NameConstant`` and ``Ellipsis`` will return an "
"instance of ``Constant``. (Contributed by Serhiy Storchaka in "
":issue:`32892`.)"
msgstr ""
"Förenklad AST för literaler.  Alla konstanter kommer att representeras som "
":class:`ast.Constant`\\-instanser.  Instansiering av gamla klasser ``Num``, "
"``Str``, ``Bytes``, ``NameConstant`` och ``Ellipsis`` kommer att returnera "
"en instans av ``Constant``. (Bidrag från Serhiy Storchaka i :issue:`32892`.)"

#: ../../whatsnew/3.8.rst:1969
msgid ""
"The function :func:`asyncio.wait_for` now correctly waits for cancellation "
"when using an instance of :class:`asyncio.Task`. Previously, upon reaching "
"*timeout*, it was cancelled and immediately returned. (Contributed by Elvis "
"Pranskevichus in :issue:`32751`.)"
msgstr ""
"Funktionen :func:`asyncio.wait_for` väntar nu korrekt på avbrytande när den "
"använder en instans av :class:`asyncio.Task`. Tidigare, när *timeout* "
"nåddes, avbröts funktionen och returnerades omedelbart. (Bidrag från Elvis "
"Pranskevichus i :issue:`32751`.)"

#: ../../whatsnew/3.8.rst:1974
msgid ""
"The function :func:`asyncio.BaseTransport.get_extra_info` now returns a safe"
" to use socket object when 'socket' is passed to the *name* parameter. "
"(Contributed by Yury Selivanov in :issue:`37027`.)"
msgstr ""
"Funktionen :func:`asyncio.BaseTransport.get_extra_info` returnerar nu ett "
"socket-objekt som är säkert att använda när 'socket' skickas till parametern"
" *name*. (Bidrag från Yury Selivanov i :issue:`37027`.)"

#: ../../whatsnew/3.8.rst:1978
msgid ":class:`asyncio.BufferedProtocol` has graduated to the stable API."
msgstr ""
":class:`asyncio.BufferedProtocol` har gått över till det stabila API:et."

#: ../../whatsnew/3.8.rst:1982
msgid ""
"DLL dependencies for extension modules and DLLs loaded with :mod:`ctypes` on"
" Windows are now resolved more securely. Only the system paths, the "
"directory containing the DLL or PYD file, and directories added with "
":func:`~os.add_dll_directory` are searched for load-time dependencies. "
"Specifically, :envvar:`PATH` and the current working directory are no longer"
" used, and modifications to these will no longer have any effect on normal "
"DLL resolution. If your application relies on these mechanisms, you should "
"check for :func:`~os.add_dll_directory` and if it exists, use it to add your"
" DLLs directory while loading your library. Note that Windows 7 users will "
"need to ensure that Windows Update KB2533623 has been installed (this is "
"also verified by the installer). (Contributed by Steve Dower in "
":issue:`36085`.)"
msgstr ""
"DLL-beroenden för tilläggsmoduler och DLL:er som laddas med :mod:`ctypes` i "
"Windows löses nu på ett säkrare sätt. Endast systemsökvägarna, katalogen som"
" innehåller DLL- eller PYD-filen och kataloger som lagts till med "
":func:`~os.add_dll_directory` genomsöks efter beroenden vid "
"laddningstillfället. Specifikt används inte längre :envvar:`PATH` och den "
"aktuella arbetskatalogen, och ändringar av dessa kommer inte längre att ha "
"någon effekt på normal DLL-upplösning. Om ditt program är beroende av dessa "
"mekanismer bör du söka efter :func:`~os.add_dll_directory` och om den finns,"
" använda den för att lägga till DLL-katalogen när du laddar ditt bibliotek. "
"Observera att Windows 7-användare måste se till att Windows Update KB2533623"
" har installerats (detta verifieras också av installationsprogrammet). "
"(Bidrag från Steve Dower i :issue:`36085`.)"

#: ../../whatsnew/3.8.rst:1995
msgid ""
"The header files and functions related to pgen have been removed after its "
"replacement by a pure Python implementation. (Contributed by Pablo Galindo "
"in :issue:`36623`.)"
msgstr ""
"Huvudfilerna och funktionerna relaterade till pgen har tagits bort efter att"
" de ersatts av en ren Python-implementation. (Bidrag från Pablo Galindo i "
":issue:`36623`.)"

#: ../../whatsnew/3.8.rst:1999
msgid ""
":class:`types.CodeType` has a new parameter in the second position of the "
"constructor (*posonlyargcount*) to support positional-only arguments defined"
" in :pep:`570`. The first argument (*argcount*) now represents the total "
"number of positional arguments (including positional-only arguments). The "
"new ``replace()`` method of :class:`types.CodeType` can be used to make the "
"code future-proof."
msgstr ""
":class:`types.CodeType` har en ny parameter i konstruktörens andra position "
"(*posonlyargcount*) för att stödja enbart positionella argument definierade "
"i :pep:`570`. Det första argumentet (*argcount*) representerar nu det totala"
" antalet positionella argument (inklusive enbart positionella argument). Den"
" nya metoden ``replace()`` i :class:`types.CodeType` kan användas för att "
"göra koden framtidssäker."

#: ../../whatsnew/3.8.rst:2006
msgid ""
"The parameter ``digestmod`` for :func:`hmac.new` no longer uses the MD5 "
"digest by default."
msgstr ""
"Parametern ``digestmod`` för :func:`hmac.new` använder inte längre "
"MD5-digest som standard."

#: ../../whatsnew/3.8.rst:2010
msgid "Changes in the C API"
msgstr "Förändringar i C API"

#: ../../whatsnew/3.8.rst:2012
msgid ""
"The :c:type:`PyCompilerFlags` structure got a new *cf_feature_version* "
"field. It should be initialized to ``PY_MINOR_VERSION``. The field is "
"ignored by default, and is used if and only if ``PyCF_ONLY_AST`` flag is set"
" in *cf_flags*. (Contributed by Guido van Rossum in :issue:`35766`.)"
msgstr ""

#: ../../whatsnew/3.8.rst:2018
msgid ""
"The :c:func:`PyEval_ReInitThreads` function has been removed from the C API."
" It should not be called explicitly: use :c:func:`PyOS_AfterFork_Child` "
"instead. (Contributed by Victor Stinner in :issue:`36728`.)"
msgstr ""

#: ../../whatsnew/3.8.rst:2023
msgid ""
"On Unix, C extensions are no longer linked to libpython except on Android "
"and Cygwin. When Python is embedded, ``libpython`` must not be loaded with "
"``RTLD_LOCAL``, but ``RTLD_GLOBAL`` instead. Previously, using "
"``RTLD_LOCAL``, it was already not possible to load C extensions which were "
"not linked to ``libpython``, like C extensions of the standard library built"
" by the ``*shared*`` section of ``Modules/Setup``. (Contributed by Victor "
"Stinner in :issue:`21536`.)"
msgstr ""
"På Unix länkas inte längre C-tillägg till libpython, utom på Android och "
"Cygwin. När Python är inbäddat får inte ``libpython`` laddas med "
"``RTLD_LOCAL`` utan ``RTLD_GLOBAL`` istället. Tidigare, med ``RTLD_LOCAL``, "
"var det redan inte möjligt att ladda C-tillägg som inte var länkade till "
"``libpython``, som C-tillägg till standardbiblioteket som byggdes av "
"``*shared*`` sektionen i ``Modules/Setup``. (Bidrag från Victor Stinner i "
":issue:`21536`.)"

#: ../../whatsnew/3.8.rst:2031
msgid ""
"Use of ``#`` variants of formats in parsing or building value (e.g. "
":c:func:`PyArg_ParseTuple`, :c:func:`Py_BuildValue`, "
":c:func:`PyObject_CallFunction`, etc.) without ``PY_SSIZE_T_CLEAN`` defined "
"raises ``DeprecationWarning`` now. It will be removed in 3.10 or 4.0.  Read "
":ref:`arg-parsing` for detail. (Contributed by Inada Naoki in "
":issue:`36381`.)"
msgstr ""
"Användning av ``#`` varianter av format vid parsning eller skapande av värde"
" (t.ex. :c:func:`PyArg_ParseTuple`, :c:func:`Py_BuildValue`, "
":c:func:`PyObject_CallFunction`, etc.) utan ``PY_SSIZE_T_CLEAN`` definierad "
"ger upphov till ``DeprecationWarning`` nu. Det kommer att tas bort i 3.10 "
"eller 4.0.  Läs :ref:`arg-parsing` för detaljer. (Bidrag från Inada Naoki i "
":issue:`36381`.)"

#: ../../whatsnew/3.8.rst:2037
msgid ""
"Instances of heap-allocated types (such as those created with "
":c:func:`PyType_FromSpec`) hold a reference to their type object. Increasing"
" the reference count of these type objects has been moved from "
":c:func:`PyType_GenericAlloc` to the more low-level functions, "
":c:func:`PyObject_Init` and :c:func:`PyObject_INIT`. This makes types "
"created through :c:func:`PyType_FromSpec` behave like other classes in "
"managed code."
msgstr ""

#: ../../whatsnew/3.8.rst:2045
msgid "Statically allocated types are not affected."
msgstr ""

#: ../../whatsnew/3.8.rst:2047
msgid ""
"For the vast majority of cases, there should be no side effect. However, "
"types that manually increase the reference count after allocating an "
"instance (perhaps to work around the bug) may now become immortal. To avoid "
"this, these classes need to call Py_DECREF on the type object during "
"instance deallocation."
msgstr ""
"För de allra flesta fall bör det inte finnas någon bieffekt. Men typer som "
"manuellt ökar referensantalet efter att ha allokerat en instans (kanske för "
"att kringgå buggen) kan nu bli odödliga. För att undvika detta måste dessa "
"klasser anropa Py_DECREF på typobjektet under avallokering av instansen."

#: ../../whatsnew/3.8.rst:2053
msgid ""
"To correctly port these types into 3.8, please apply the following changes:"
msgstr "För att korrekt porta dessa typer till 3.8, gör följande ändringar:"

#: ../../whatsnew/3.8.rst:2056
msgid ""
"Remove :c:macro:`Py_INCREF` on the type object after allocating an instance "
"- if any. This may happen after calling :c:func:`PyObject_New`, "
":c:func:`PyObject_NewVar`, :c:func:`PyObject_GC_New`, "
":c:func:`PyObject_GC_NewVar`, or any other custom allocator that uses "
":c:func:`PyObject_Init` or :c:func:`PyObject_INIT`."
msgstr ""

#: ../../whatsnew/3.8.rst:2063 ../../whatsnew/3.8.rst:2082
#: ../../whatsnew/3.8.rst:2101
msgid "Example:"
msgstr "Exempel:"

#: ../../whatsnew/3.8.rst:2079
msgid ""
"Ensure that all custom ``tp_dealloc`` functions of heap-allocated types "
"decrease the type's reference count."
msgstr ""
"Säkerställ att alla anpassade ``tp_dealloc``\\-funktioner för heap-"
"allokerade typer minskar typens referensantal."

#: ../../whatsnew/3.8.rst:2096
msgid "(Contributed by Eddie Elizondo in :issue:`35810`.)"
msgstr "(Bidrag från Eddie Elizondo i :issue:`35810`.)"

#: ../../whatsnew/3.8.rst:2098
msgid ""
"The :c:macro:`Py_DEPRECATED()` macro has been implemented for MSVC. The "
"macro now must be placed before the symbol name."
msgstr ""
"Makrot :c:macro:`Py_DEPRECATED()` har implementerats för MSVC. Makrot måste "
"nu placeras före symbolnamnet."

#: ../../whatsnew/3.8.rst:2107
msgid "(Contributed by Zackery Spytz in :issue:`33407`.)"
msgstr "(Bidrag från Zackery Spytz i :issue:`33407`.)"

#: ../../whatsnew/3.8.rst:2109
msgid ""
"The interpreter does not pretend to support binary compatibility of "
"extension types across feature releases, anymore.  A :c:type:`PyTypeObject` "
"exported by a third-party extension module is supposed to have all the slots"
" expected in the current Python version, including "
":c:member:`~PyTypeObject.tp_finalize` (:const:`Py_TPFLAGS_HAVE_FINALIZE` is "
"not checked anymore before reading :c:member:`~PyTypeObject.tp_finalize`)."
msgstr ""

#: ../../whatsnew/3.8.rst:2116
msgid "(Contributed by Antoine Pitrou in :issue:`32388`.)"
msgstr "(Bidrag från Antoine Pitrou i :issue:`32388`.)"

#: ../../whatsnew/3.8.rst:2118
msgid ""
"The functions :c:func:`PyNode_AddChild` and :c:func:`PyParser_AddToken` now "
"accept two additional ``int`` arguments *end_lineno* and *end_col_offset*."
msgstr ""

#: ../../whatsnew/3.8.rst:2121
msgid ""
"The :file:`libpython38.a` file to allow MinGW tools to link directly against"
" :file:`python38.dll` is no longer included in the regular Windows "
"distribution. If you require this file, it may be generated with the "
"``gendef`` and ``dlltool`` tools, which are part of the MinGW binutils "
"package:"
msgstr ""
"Filen :file:`libpython38.a` som gör det möjligt för MinGW-verktyg att länka "
"direkt mot :file:`python38.dll` ingår inte längre i den vanliga Windows-"
"distributionen. Om du behöver den här filen kan den genereras med verktygen "
"``gendef`` och ``dlltool``, som ingår i MinGW binutils-paketet:"

#: ../../whatsnew/3.8.rst:2131
msgid ""
"The location of an installed :file:`pythonXY.dll` will depend on the "
"installation options and the version and language of Windows. See "
":ref:`using-on-windows` for more information. The resulting library should "
"be placed in the same directory as :file:`pythonXY.lib`, which is generally "
"the :file:`libs` directory under your Python installation."
msgstr ""
"Platsen för en installerad :file:`pythonXY.dll` beror på "
"installationsalternativen och versionen av och språket i Windows. Se "
":ref:`using-on-windows` för mer information. Det resulterande biblioteket "
"bör placeras i samma katalog som :file:`pythonXY.lib`, vilket i allmänhet är"
" :file:`libs`\\-katalogen under din Python-installation."

#: ../../whatsnew/3.8.rst:2137
msgid "(Contributed by Steve Dower in :issue:`37351`.)"
msgstr "(Bidrag från Steve Dower i :issue:`37351`.)"

#: ../../whatsnew/3.8.rst:2141
msgid "CPython bytecode changes"
msgstr "CPython bytecode-ändringar"

#: ../../whatsnew/3.8.rst:2143
msgid ""
"The interpreter loop  has been simplified by moving the logic of unrolling "
"the stack of blocks into the compiler.  The compiler emits now explicit "
"instructions for adjusting the stack of values and calling the cleaning-up "
"code for :keyword:`break`, :keyword:`continue` and :keyword:`return`."
msgstr ""
"Tolkningsloopen har förenklats genom att logiken för att rulla ut "
"blockstapeln har flyttats till kompilatorn.  Kompilatorn ger nu uttryckliga "
"instruktioner för att justera stapeln med värden och anropa "
"uppstädningskoden för :keyword:`break`, :keyword:`continue` och "
":keyword:`return`."

#: ../../whatsnew/3.8.rst:2149
msgid ""
"Removed opcodes :opcode:`BREAK_LOOP`, :opcode:`CONTINUE_LOOP`, "
":opcode:`SETUP_LOOP` and :opcode:`SETUP_EXCEPT`.  Added new opcodes "
":opcode:`ROT_FOUR`, :opcode:`BEGIN_FINALLY`, :opcode:`CALL_FINALLY` and "
":opcode:`POP_FINALLY`.  Changed the behavior of :opcode:`END_FINALLY` and "
":opcode:`WITH_CLEANUP_START`."
msgstr ""

#: ../../whatsnew/3.8.rst:2155
msgid ""
"(Contributed by Mark Shannon, Antoine Pitrou and Serhiy Storchaka in "
":issue:`17611`.)"
msgstr ""
"(Bidrag från Mark Shannon, Antoine Pitrou och Serhiy Storchaka i "
":issue:`17611`.)"

#: ../../whatsnew/3.8.rst:2158
msgid ""
"Added new opcode :opcode:`END_ASYNC_FOR` for handling exceptions raised when"
" awaiting a next item in an :keyword:`async for` loop. (Contributed by "
"Serhiy Storchaka in :issue:`33041`.)"
msgstr ""
"Lagt till ny opcode :opcode:`END_ASYNC_FOR` för hantering av undantag som "
"uppstår när man väntar på nästa objekt i en :keyword:`async for`\\-loop. "
"(Bidrag från Serhiy Storchaka i :issue:`33041`.)"

#: ../../whatsnew/3.8.rst:2162
msgid ""
"The :opcode:`MAP_ADD` now expects the value as the first element in the "
"stack and the key as the second element. This change was made so the key is "
"always evaluated before the value in dictionary comprehensions, as proposed "
"by :pep:`572`. (Contributed by Jörn Heissler in :issue:`35224`.)"
msgstr ""
":opcode:`MAP_ADD` förväntar sig nu värdet som det första elementet i stacken"
" och nyckeln som det andra elementet. Denna ändring gjordes så att nyckeln "
"alltid utvärderas före värdet i ordboksförståelser, vilket föreslogs av "
":pep:`572`. (Bidrag från Jörn Heissler i :issue:`35224`.)"

#: ../../whatsnew/3.8.rst:2169
msgid "Demos and Tools"
msgstr "Demonstrationer och verktyg"

#: ../../whatsnew/3.8.rst:2171
msgid ""
"Added a benchmark script for timing various ways to access variables: "
"``Tools/scripts/var_access_benchmark.py``. (Contributed by Raymond Hettinger"
" in :issue:`35884`.)"
msgstr ""
"Lagt till ett benchmarkskript för att mäta olika sätt att komma åt "
"variabler: ``Tools/scripts/var_access_benchmark.py``. (Bidrag från Raymond "
"Hettinger i :issue:`35884`.)"

#: ../../whatsnew/3.8.rst:2175
msgid "Here's a summary of performance improvements since Python 3.3:"
msgstr "Här är en sammanfattning av prestandaförbättringar sedan Python 3.3:"

#: ../../whatsnew/3.8.rst:2222
msgid ""
"The benchmarks were measured on an `Intel® Core™ i7-4960HQ processor "
"<https://ark.intel.com/content/www/us/en/ark/products/76088/intel-"
"core-i7-4960hq-processor-6m-cache-up-to-3-80-ghz.html>`_ running the macOS "
"64-bit builds found at `python.org <https://www.python.org/downloads/mac-"
"osx/>`_. The benchmark script displays timings in nanoseconds."
msgstr ""

#: ../../whatsnew/3.8.rst:2231
msgid "Notable changes in Python 3.8.1"
msgstr "Viktiga ändringar i Python 3.8.1"

#: ../../whatsnew/3.8.rst:2233
msgid ""
"Due to significant security concerns, the *reuse_address* parameter of "
":meth:`asyncio.loop.create_datagram_endpoint` is no longer supported. This "
"is because of the behavior of the socket option ``SO_REUSEADDR`` in UDP. For"
" more details, see the documentation for "
"``loop.create_datagram_endpoint()``. (Contributed by Kyle Stanley, Antoine "
"Pitrou, and Yury Selivanov in :issue:`37228`.)"
msgstr ""
"På grund av betydande säkerhetsproblem stöds inte längre parametern "
"*reuse_address* i :meth:`asyncio.loop.create_datagram_endpoint`. Detta beror"
" på beteendet hos socket-alternativet ``SO_REUSEADDR`` i UDP. För mer "
"information, se dokumentationen för ``loop.create_datagram_endpoint()``. "
"(Bidrag från Kyle Stanley, Antoine Pitrou och Yury Selivanov i "
":issue:`37228`.)"

#: ../../whatsnew/3.8.rst:2241
msgid "Notable changes in Python 3.8.8"
msgstr "Noterbara ändringar i Python 3.8.8"

#: ../../whatsnew/3.8.rst:2243
msgid ""
"Earlier Python versions allowed using both ``;`` and ``&`` as query "
"parameter separators in :func:`urllib.parse.parse_qs` and "
":func:`urllib.parse.parse_qsl`.  Due to security concerns, and to conform "
"with newer W3C recommendations, this has been changed to allow only a single"
" separator key, with ``&`` as the default.  This change also affects "
":func:`cgi.parse` and :func:`cgi.parse_multipart` as they use the affected "
"functions internally. For more details, please see their respective "
"documentation. (Contributed by Adam Goldschmidt, Senthil Kumaran and Ken Jin"
" in :issue:`42967`.)"
msgstr ""

#: ../../whatsnew/3.8.rst:2254
msgid "Notable changes in Python 3.8.12"
msgstr "Viktiga ändringar i Python 3.8.12"

#: ../../whatsnew/3.8.rst:2256
msgid ""
"Starting with Python 3.8.12 the :mod:`ipaddress` module no longer accepts "
"any leading zeros in IPv4 address strings. Leading zeros are ambiguous and "
"interpreted as octal notation by some libraries. For example the legacy "
"function :func:`socket.inet_aton` treats leading zeros as octal notation. "
"glibc implementation of modern :func:`~socket.inet_pton` does not accept any"
" leading zeros."
msgstr ""
"Från och med Python 3.8.12 accepterar modulen :mod:`ipaddress` inte längre "
"några ledande nollor i IPv4-adresssträngar. Ledande nollor är tvetydiga och "
"tolkas som oktal notation av vissa bibliotek. Till exempel behandlar den "
"äldre funktionen :func:`socket.inet_aton` ledande nollor som oktal notation."
" glibc-implementeringen av den moderna :func:`~socket.inet_pton` accepterar "
"inte några ledande nollor."

#: ../../whatsnew/3.8.rst:2263
msgid ""
"(Originally contributed by Christian Heimes in :issue:`36384`, and "
"backported to 3.8 by Achraf Merzouki.)"
msgstr ""
"(Ursprungligen bidragit av Christian Heimes i :issue:`36384`, och "
"bakåtporterat till 3.8 av Achraf Merzouki.)"
