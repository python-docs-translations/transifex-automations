# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# python-doc bot, 2025
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.10\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-10-17 17:19+0000\n"
"PO-Revision-Date: 2025-09-22 15:57+0000\n"
"Last-Translator: python-doc bot, 2025\n"
"Language-Team: Swedish (https://app.transifex.com/python-doc/teams/5390/"
"sv/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: sv\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"

#: ../../c-api/sequence.rst:6
msgid "Sequence Protocol"
msgstr "Sekvensprotokoll"

#: ../../c-api/sequence.rst:11
msgid ""
"Return ``1`` if the object provides the sequence protocol, and ``0`` "
"otherwise. Note that it returns ``1`` for Python classes with a :meth:"
"`__getitem__` method, unless they are :class:`dict` subclasses, since in "
"general it is impossible to determine what type of keys the class supports.  "
"This function always succeeds."
msgstr ""

#: ../../c-api/sequence.rst:23
msgid ""
"Returns the number of objects in sequence *o* on success, and ``-1`` on "
"failure.  This is equivalent to the Python expression ``len(o)``."
msgstr ""
"Returnerar antalet objekt i sekvensen *o* vid framgång, och ``\\-1`` vid "
"misslyckande.  Detta är likvärdigt med Python-uttrycket ``len(o)``."

#: ../../c-api/sequence.rst:29
msgid ""
"Return the concatenation of *o1* and *o2* on success, and ``NULL`` on "
"failure. This is the equivalent of the Python expression ``o1 + o2``."
msgstr ""
"Returnerar konkateneringen av *o1* och *o2* vid framgång och ``NULL`` vid "
"misslyckande. Detta är motsvarigheten till Python-uttrycket ``o1 + o2``."

#: ../../c-api/sequence.rst:35
msgid ""
"Return the result of repeating sequence object *o* *count* times, or "
"``NULL`` on failure.  This is the equivalent of the Python expression ``o * "
"count``."
msgstr ""
"Returnerar resultatet av att upprepa sekvensobjektet *o* *count* gånger, "
"eller ``NULL`` om det misslyckas.  Detta är motsvarigheten till Python-"
"uttrycket ``o * count``."

#: ../../c-api/sequence.rst:41
msgid ""
"Return the concatenation of *o1* and *o2* on success, and ``NULL`` on "
"failure. The operation is done *in-place* when *o1* supports it.  This is "
"the equivalent of the Python expression ``o1 += o2``."
msgstr ""
"Returnerar konkateneringen av *o1* och *o2* vid framgång, och ``NULL`` vid "
"misslyckande. Operationen utförs *in-place* när *o1* stöder det.  Detta är "
"motsvarigheten till Python-uttrycket ``o1 += o2``."

#: ../../c-api/sequence.rst:48
msgid ""
"Return the result of repeating sequence object *o* *count* times, or "
"``NULL`` on failure.  The operation is done *in-place* when *o* supports "
"it.  This is the equivalent of the Python expression ``o *= count``."
msgstr ""
"Returnerar resultatet av att upprepa sekvensobjektet *o* *antal* gånger, "
"eller ``NULL`` om det misslyckas.  Operationen görs *in-place* när *o* "
"stöder den.  Detta är motsvarigheten till Python-uttrycket ``o *= count``."

#: ../../c-api/sequence.rst:55
msgid ""
"Return the *i*\\ th element of *o*, or ``NULL`` on failure. This is the "
"equivalent of the Python expression ``o[i]``."
msgstr ""
"Returnerar det *i*\\:e elementet i *o*, eller ``NULL`` om det misslyckas. "
"Detta är motsvarigheten till Python-uttrycket ``o[i]``."

#: ../../c-api/sequence.rst:61
msgid ""
"Return the slice of sequence object *o* between *i1* and *i2*, or ``NULL`` "
"on failure. This is the equivalent of the Python expression ``o[i1:i2]``."
msgstr ""
"Returnerar den del av sekvensobjektet *o* som ligger mellan *i1* och *i2*, "
"eller ``NULL`` om den misslyckas. Detta är motsvarigheten till Python-"
"uttrycket ``o[i1:i2]``."

#: ../../c-api/sequence.rst:67
msgid ""
"Assign object *v* to the *i*\\ th element of *o*.  Raise an exception and "
"return ``-1`` on failure; return ``0`` on success.  This is the equivalent "
"of the Python statement ``o[i] = v``.  This function *does not* steal a "
"reference to *v*."
msgstr ""
"Tilldela objekt *v* till det *i*:e elementet i *o*.  Utlös ett undantag och "
"returnera ``\\-1`` vid misslyckande; returnera ``0`` vid framgång.  Detta är "
"motsvarigheten till Python-satsen ``o[i] = v``.  Den här funktionen *stjäl* "
"inte en referens till *v*."

#: ../../c-api/sequence.rst:72
msgid ""
"If *v* is ``NULL``, the element is deleted, but this feature is deprecated "
"in favour of using :c:func:`PySequence_DelItem`."
msgstr ""
"Om *v* är ``NULL`` raderas elementet, men denna funktion är föråldrad till "
"förmån för användning av :c:func:`PySequence_DelItem`."

#: ../../c-api/sequence.rst:78
msgid ""
"Delete the *i*\\ th element of object *o*.  Returns ``-1`` on failure.  This "
"is the equivalent of the Python statement ``del o[i]``."
msgstr ""
"Ta bort det *i*\\:e elementet i objektet *o*.  Returnerar ``\\-1`` om det "
"misslyckas.  Detta är motsvarigheten till Python-satsen ``del o[i]``."

#: ../../c-api/sequence.rst:84
msgid ""
"Assign the sequence object *v* to the slice in sequence object *o* from *i1* "
"to *i2*.  This is the equivalent of the Python statement ``o[i1:i2] = v``."
msgstr ""
"Tilldela sekvensobjektet *v* till snittet i sekvensobjektet *o* från *i1* "
"till *i2*.  Detta är motsvarigheten till Python-satsen ``o[i1:i2] = v``."

#: ../../c-api/sequence.rst:90
msgid ""
"Delete the slice in sequence object *o* from *i1* to *i2*.  Returns ``-1`` "
"on failure.  This is the equivalent of the Python statement ``del o[i1:i2]``."
msgstr ""
"Raderar delen i sekvensobjektet *o* från *i1* till *i2*.  Returnerar "
"``\\-1`` om det misslyckas.  Detta är motsvarigheten till Python-satsen "
"``del o[i1:i2]``."

#: ../../c-api/sequence.rst:96
msgid ""
"Return the number of occurrences of *value* in *o*, that is, return the "
"number of keys for which ``o[key] == value``.  On failure, return ``-1``.  "
"This is equivalent to the Python expression ``o.count(value)``."
msgstr ""
"Returnerar antalet förekomster av *värde* i *o*, det vill säga returnerar "
"antalet nycklar för vilka ``o[key] == value``.  Vid misslyckande returneras "
"``\\-1``.  Detta är likvärdigt med Python-uttrycket ``o.count(value)``."

#: ../../c-api/sequence.rst:103
msgid ""
"Determine if *o* contains *value*.  If an item in *o* is equal to *value*, "
"return ``1``, otherwise return ``0``. On error, return ``-1``.  This is "
"equivalent to the Python expression ``value in o``."
msgstr ""
"Bestäm om *o* innehåller *värde*.  Om en post i *o* är lika med *värde*, "
"returneras ``1``, annars returneras ``0``. Vid fel returneras ``\\-1``.  "
"Detta är likvärdigt med Python-uttrycket ``value in o``."

#: ../../c-api/sequence.rst:110
msgid ""
"Return the first index *i* for which ``o[i] == value``.  On error, return "
"``-1``.    This is equivalent to the Python expression ``o.index(value)``."
msgstr ""
"Returnerar det första indexet *i* för vilket ``o[i] == value``.  Vid fel "
"returneras ``\\-1``.    Detta är likvärdigt med Python-uttrycket ``o."
"index(value)``."

#: ../../c-api/sequence.rst:116
msgid ""
"Return a list object with the same contents as the sequence or iterable *o*, "
"or ``NULL`` on failure.  The returned list is guaranteed to be new.  This is "
"equivalent to the Python expression ``list(o)``."
msgstr ""
"Returnerar ett listobjekt med samma innehåll som sekvensen eller iterabeln "
"*o*, eller ``NULL`` om det misslyckas.  Den returnerade listan är garanterat "
"ny.  Detta är likvärdigt med Python-uttrycket ``list(o)``."

#: ../../c-api/sequence.rst:125
msgid ""
"Return a tuple object with the same contents as the sequence or iterable "
"*o*, or ``NULL`` on failure.  If *o* is a tuple, a new reference will be "
"returned, otherwise a tuple will be constructed with the appropriate "
"contents.  This is equivalent to the Python expression ``tuple(o)``."
msgstr ""
"Returnerar ett tuple-objekt med samma innehåll som sekvensen eller iterabeln "
"*o*, eller ``NULL`` om det misslyckas.  Om *o* är en tupel returneras en ny "
"referens, annars konstrueras en tupel med lämpligt innehåll.  Detta är "
"likvärdigt med Python-uttrycket ``tuple(o)``."

#: ../../c-api/sequence.rst:133
msgid ""
"Return the sequence or iterable *o* as an object usable by the other "
"``PySequence_Fast*`` family of functions. If the object is not a sequence or "
"iterable, raises :exc:`TypeError` with *m* as the message text. Returns "
"``NULL`` on failure."
msgstr ""
"Returnerar sekvensen eller den itererbara *o* som ett objekt som kan "
"användas av andra funktioner i familjen ``PySequence_Fast*``. Om objektet "
"inte är en sekvens eller itererbart, genereras :exc:`TypeError` med *m* som "
"meddelandetext. Returnerar ``NULL`` vid fel."

#: ../../c-api/sequence.rst:138
msgid ""
"The ``PySequence_Fast*`` functions are thus named because they assume *o* is "
"a :c:type:`PyTupleObject` or a :c:type:`PyListObject` and access the data "
"fields of *o* directly."
msgstr ""
"Funktionerna ``PySequence_Fast*`` har fått detta namn eftersom de antar att "
"*o* är ett :c:type:`PyTupleObject` eller ett :c:type:`PyListObject` och har "
"direkt åtkomst till datafälten i *o*."

#: ../../c-api/sequence.rst:142
msgid ""
"As a CPython implementation detail, if *o* is already a sequence or list, it "
"will be returned."
msgstr ""
"Som en detalj i CPython-implementeringen, om *o* redan är en sekvens eller "
"lista, kommer den att returneras."

#: ../../c-api/sequence.rst:148
msgid ""
"Returns the length of *o*, assuming that *o* was returned by :c:func:"
"`PySequence_Fast` and that *o* is not ``NULL``.  The size can also be "
"retrieved by calling :c:func:`PySequence_Size` on *o*, but :c:func:"
"`PySequence_Fast_GET_SIZE` is faster because it can assume *o* is a list or "
"tuple."
msgstr ""
"Returnerar längden på *o*, förutsatt att *o* returnerades av :c:func:"
"`PySequence_Fast` och att *o* inte är ``NULL``.  Storleken kan också hämtas "
"genom att anropa :c:func:`PySequence_Size` på *o*, men :c:func:"
"`PySequence_Fast_GET_SIZE` är snabbare eftersom den kan anta att *o* är en "
"lista eller tupel."

#: ../../c-api/sequence.rst:157
msgid ""
"Return the *i*\\ th element of *o*, assuming that *o* was returned by :c:"
"func:`PySequence_Fast`, *o* is not ``NULL``, and that *i* is within bounds."
msgstr ""
"Returnerar det *i*\\:e elementet i *o*, förutsatt att *o* returnerades av :c:"
"func:`PySequence_Fast`, att *o* inte är ``NULL`` och att *i* är inom "
"gränserna."

#: ../../c-api/sequence.rst:163
msgid ""
"Return the underlying array of PyObject pointers.  Assumes that *o* was "
"returned by :c:func:`PySequence_Fast` and *o* is not ``NULL``."
msgstr ""
"Returnerar den underliggande matrisen av PyObject-pekare.  Antar att *o* "
"returnerades av :c:func:`PySequence_Fast` och att *o* inte är ``NULL``."

#: ../../c-api/sequence.rst:166
msgid ""
"Note, if a list gets resized, the reallocation may relocate the items array. "
"So, only use the underlying array pointer in contexts where the sequence "
"cannot change."
msgstr ""
"Observera att om en lista ändras i storlek kan omallokeringen flytta "
"objektmatrisen. Använd därför endast den underliggande arraypekaren i "
"sammanhang där sekvensen inte kan ändras."

#: ../../c-api/sequence.rst:173
msgid ""
"Return the *i*\\ th element of *o* or ``NULL`` on failure. Faster form of :c:"
"func:`PySequence_GetItem` but without checking that :c:func:"
"`PySequence_Check` on *o* is true and without adjustment for negative "
"indices."
msgstr ""
"Returnerar *i*\\ th elementet i *o* eller ``NULL`` vid fel. Snabbare form "
"av :c:func:`PySequence_GetItem` men utan att kontrollera att :c:func:"
"`PySequence_Check` på *o* är sant och utan justering för negativa index."
