# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# python-doc bot, 2025
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.10\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-25 17:21+0000\n"
"PO-Revision-Date: 2025-09-22 15:57+0000\n"
"Last-Translator: python-doc bot, 2025\n"
"Language-Team: Swedish (https://app.transifex.com/python-doc/teams/5390/sv/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: sv\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"

#: ../../c-api/datetime.rst:6
msgid "DateTime Objects"
msgstr "DateTime-objekt"

#: ../../c-api/datetime.rst:8
msgid ""
"Various date and time objects are supplied by the :mod:`datetime` module. "
"Before using any of these functions, the header file :file:`datetime.h` must"
" be included in your source (note that this is not included by "
":file:`Python.h`), and the macro :c:macro:`PyDateTime_IMPORT` must be "
"invoked, usually as part of the module initialisation function.  The macro "
"puts a pointer to a C structure into a static variable, "
":c:data:`PyDateTimeAPI`, that is used by the following macros."
msgstr ""

#: ../../c-api/datetime.rst:16
msgid "Macro for access to the UTC singleton:"
msgstr "Makro för åtkomst till UTC-singleton:"

#: ../../c-api/datetime.rst:20
msgid ""
"Returns the time zone singleton representing UTC, the same object as "
":attr:`datetime.timezone.utc`."
msgstr ""
"Returnerar tidszonens singleton som representerar UTC, samma objekt som "
":attr:`datetime.timezone.utc`."

#: ../../c-api/datetime.rst:26
msgid "Type-check macros:"
msgstr "Typkontrollera makron:"

#: ../../c-api/datetime.rst:30
msgid ""
"Return true if *ob* is of type :c:data:`PyDateTime_DateType` or a subtype of"
" :c:data:`PyDateTime_DateType`.  *ob* must not be ``NULL``.  This function "
"always succeeds."
msgstr ""

#: ../../c-api/datetime.rst:37
msgid ""
"Return true if *ob* is of type :c:data:`PyDateTime_DateType`. *ob* must not "
"be ``NULL``.  This function always succeeds."
msgstr ""
"Returnerar true om *ob* är av typen :c:data:`PyDateTime_DateType`. *ob* får "
"inte vara ``NULL``.  Denna funktion lyckas alltid."

#: ../../c-api/datetime.rst:43
msgid ""
"Return true if *ob* is of type :c:data:`PyDateTime_DateTimeType` or a "
"subtype of :c:data:`PyDateTime_DateTimeType`.  *ob* must not be ``NULL``.  "
"This function always succeeds."
msgstr ""

#: ../../c-api/datetime.rst:50
msgid ""
"Return true if *ob* is of type :c:data:`PyDateTime_DateTimeType`. *ob* must "
"not be ``NULL``.  This function always succeeds."
msgstr ""
"Returnerar true om *ob* är av typen :c:data:`PyDateTime_DateTimeType`. *ob* "
"får inte vara ``NULL``.  Denna funktion lyckas alltid."

#: ../../c-api/datetime.rst:56
msgid ""
"Return true if *ob* is of type :c:data:`PyDateTime_TimeType` or a subtype of"
" :c:data:`PyDateTime_TimeType`.  *ob* must not be ``NULL``.  This function "
"always succeeds."
msgstr ""

#: ../../c-api/datetime.rst:63
msgid ""
"Return true if *ob* is of type :c:data:`PyDateTime_TimeType`. *ob* must not "
"be ``NULL``.  This function always succeeds."
msgstr ""
"Returnerar true om *ob* är av typen :c:data:`PyDateTime_TimeType`. *ob* får "
"inte vara ``NULL``.  Denna funktion lyckas alltid."

#: ../../c-api/datetime.rst:69
msgid ""
"Return true if *ob* is of type :c:data:`PyDateTime_DeltaType` or a subtype "
"of :c:data:`PyDateTime_DeltaType`.  *ob* must not be ``NULL``.  This "
"function always succeeds."
msgstr ""

#: ../../c-api/datetime.rst:76
msgid ""
"Return true if *ob* is of type :c:data:`PyDateTime_DeltaType`. *ob* must not"
" be ``NULL``.  This function always succeeds."
msgstr ""
"Returnerar true om *ob* är av typen :c:data:`PyDateTime_DeltaType`. *ob* får"
" inte vara ``NULL``.  Denna funktion lyckas alltid."

#: ../../c-api/datetime.rst:82
msgid ""
"Return true if *ob* is of type :c:data:`PyDateTime_TZInfoType` or a subtype "
"of :c:data:`PyDateTime_TZInfoType`.  *ob* must not be ``NULL``.  This "
"function always succeeds."
msgstr ""

#: ../../c-api/datetime.rst:89
msgid ""
"Return true if *ob* is of type :c:data:`PyDateTime_TZInfoType`. *ob* must "
"not be ``NULL``.  This function always succeeds."
msgstr ""
"Returnerar true om *ob* är av typen :c:data:`PyDateTime_TZInfoType`. *ob* "
"får inte vara ``NULL``.  Denna funktion lyckas alltid."

#: ../../c-api/datetime.rst:93
msgid "Macros to create objects:"
msgstr "Makron för att skapa objekt:"

#: ../../c-api/datetime.rst:97
msgid ""
"Return a :class:`datetime.date` object with the specified year, month and "
"day."
msgstr ""
"Returnerar ett :class:`datetime.date`\\-objekt med angivet år, månad och "
"dag."

#: ../../c-api/datetime.rst:102
msgid ""
"Return a :class:`datetime.datetime` object with the specified year, month, "
"day, hour, minute, second and microsecond."
msgstr ""
"Returnerar ett :class:`datetime.datetime`\\-objekt med angivet år, månad, "
"dag, timme, minut, sekund och mikrosekund."

#: ../../c-api/datetime.rst:108
msgid ""
"Return a :class:`datetime.datetime` object with the specified year, month, "
"day, hour, minute, second, microsecond and fold."
msgstr ""
"Returnera ett :class:`datetime.datetime`\\-objekt med angivet år, månad, "
"dag, timme, minut, sekund, mikrosekund och vikning."

#: ../../c-api/datetime.rst:116
msgid ""
"Return a :class:`datetime.time` object with the specified hour, minute, "
"second and microsecond."
msgstr ""
"Returnerar ett :class:`datetime.time`\\-objekt med angiven timme, minut, "
"sekund och mikrosekund."

#: ../../c-api/datetime.rst:122
msgid ""
"Return a :class:`datetime.time` object with the specified hour, minute, "
"second, microsecond and fold."
msgstr ""
"Returnerar ett :class:`datetime.time`\\-objekt med angiven timme, minut, "
"sekund, mikrosekund och vikning."

#: ../../c-api/datetime.rst:130
msgid ""
"Return a :class:`datetime.timedelta` object representing the given number of"
" days, seconds and microseconds.  Normalization is performed so that the "
"resulting number of microseconds and seconds lie in the ranges documented "
"for :class:`datetime.timedelta` objects."
msgstr ""
"Returnerar ett :class:`datetime.timedelta`\\-objekt som representerar det "
"givna antalet dagar, sekunder och mikrosekunder.  Normalisering utförs så "
"att det resulterande antalet mikrosekunder och sekunder ligger inom de "
"intervall som dokumenterats för :class:`datetime.timedelta`\\-objekt."

#: ../../c-api/datetime.rst:138
msgid ""
"Return a :class:`datetime.timezone` object with an unnamed fixed offset "
"represented by the *offset* argument."
msgstr ""
"Returnerar ett :class:`datetime.timezone`\\-objekt med en icke namngiven "
"fast offset som representeras av argumentet *offset*."

#: ../../c-api/datetime.rst:146
msgid ""
"Return a :class:`datetime.timezone` object with a fixed offset represented "
"by the *offset* argument and with tzname *name*."
msgstr ""
"Returnerar ett :class:`datetime.timezone`\\-objekt med en fast offset som "
"representeras av argumentet *offset* och med tzname *name*."

#: ../../c-api/datetime.rst:152
msgid ""
"Macros to extract fields from date objects.  The argument must be an "
"instance of :c:data:`PyDateTime_Date`, including subclasses (such as "
":c:data:`PyDateTime_DateTime`).  The argument must not be ``NULL``, and the "
"type is not checked:"
msgstr ""

#: ../../c-api/datetime.rst:159
msgid "Return the year, as a positive int."
msgstr "Returnerar året som en positiv int."

#: ../../c-api/datetime.rst:164
msgid "Return the month, as an int from 1 through 12."
msgstr "Returnerar månaden, som ett int från 1 till 12."

#: ../../c-api/datetime.rst:169
msgid "Return the day, as an int from 1 through 31."
msgstr "Returnera dagen, som ett int från 1 till 31."

#: ../../c-api/datetime.rst:172
msgid ""
"Macros to extract fields from datetime objects.  The argument must be an "
"instance of :c:data:`PyDateTime_DateTime`, including subclasses. The "
"argument must not be ``NULL``, and the type is not checked:"
msgstr ""

#: ../../c-api/datetime.rst:178 ../../c-api/datetime.rst:216
msgid "Return the hour, as an int from 0 through 23."
msgstr "Returnerar timmen som ett int från 0 till 23."

#: ../../c-api/datetime.rst:183 ../../c-api/datetime.rst:221
msgid "Return the minute, as an int from 0 through 59."
msgstr "Returnera minuten som ett int från 0 till 59."

#: ../../c-api/datetime.rst:188 ../../c-api/datetime.rst:226
msgid "Return the second, as an int from 0 through 59."
msgstr "Returnera den andra, som ett int från 0 till 59."

#: ../../c-api/datetime.rst:193 ../../c-api/datetime.rst:231
msgid "Return the microsecond, as an int from 0 through 999999."
msgstr "Returnerar mikrosekunden, som ett int från 0 till 999999."

#: ../../c-api/datetime.rst:198 ../../c-api/datetime.rst:236
msgid "Return the fold, as an int from 0 through 1."
msgstr "Returnera vikningen, som ett int från 0 till 1."

#: ../../c-api/datetime.rst:205 ../../c-api/datetime.rst:243
msgid "Return the tzinfo (which may be ``None``)."
msgstr "Returnerar tzinfo (som kan vara ``None``)."

#: ../../c-api/datetime.rst:210
msgid ""
"Macros to extract fields from time objects.  The argument must be an "
"instance of :c:data:`PyDateTime_Time`, including subclasses. The argument "
"must not be ``NULL``, and the type is not checked:"
msgstr ""

#: ../../c-api/datetime.rst:248
msgid ""
"Macros to extract fields from time delta objects.  The argument must be an "
"instance of :c:data:`PyDateTime_Delta`, including subclasses. The argument "
"must not be ``NULL``, and the type is not checked:"
msgstr ""

#: ../../c-api/datetime.rst:254
msgid "Return the number of days, as an int from -999999999 to 999999999."
msgstr "Returnera antalet dagar, som ett int från -999999999 till 999999999."

#: ../../c-api/datetime.rst:261
msgid "Return the number of seconds, as an int from 0 through 86399."
msgstr "Returnerar antalet sekunder, som ett int från 0 till 86399."

#: ../../c-api/datetime.rst:268
msgid "Return the number of microseconds, as an int from 0 through 999999."
msgstr "Returnerar antalet mikrosekunder, som ett int från 0 till 999999."

#: ../../c-api/datetime.rst:273
msgid "Macros for the convenience of modules implementing the DB API:"
msgstr "Makron för att underlätta för moduler som implementerar DB API:"

#: ../../c-api/datetime.rst:277
msgid ""
"Create and return a new :class:`datetime.datetime` object given an argument "
"tuple suitable for passing to :meth:`datetime.datetime.fromtimestamp()`."
msgstr ""

#: ../../c-api/datetime.rst:283
msgid ""
"Create and return a new :class:`datetime.date` object given an argument "
"tuple suitable for passing to :meth:`datetime.date.fromtimestamp()`."
msgstr ""
