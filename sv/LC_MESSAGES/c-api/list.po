# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001 Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# python-doc bot, 2025
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.14\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-05-09 14:19+0000\n"
"PO-Revision-Date: 2025-09-16 00:00+0000\n"
"Last-Translator: python-doc bot, 2025\n"
"Language-Team: Swedish (https://app.transifex.com/python-doc/teams/5390/"
"sv/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: sv\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"

#: ../../c-api/list.rst:6
msgid "List Objects"
msgstr "Listobjekt"

#: ../../c-api/list.rst:13
msgid "This subtype of :c:type:`PyObject` represents a Python list object."
msgstr ""
"Denna subtyp av :c:type:`PyObject` representerar ett Python-listobjekt."

#: ../../c-api/list.rst:18
msgid ""
"This instance of :c:type:`PyTypeObject` represents the Python list type. "
"This is the same object as :class:`list` in the Python layer."
msgstr ""
"Denna instans av :c:type:`PyTypeObject` representerar Pythons listtyp. Detta "
"är samma objekt som :class:`list` i Python-lagret."

#: ../../c-api/list.rst:24
msgid ""
"Return true if *p* is a list object or an instance of a subtype of the list "
"type.  This function always succeeds."
msgstr ""
"Returnerar true om *p* är ett listobjekt eller en instans av en subtyp av "
"listtypen.  Denna funktion lyckas alltid."

#: ../../c-api/list.rst:30
msgid ""
"Return true if *p* is a list object, but not an instance of a subtype of the "
"list type.  This function always succeeds."
msgstr ""
"Returnerar true om *p* är ett listobjekt, men inte en instans av en subtyp "
"av listtypen.  Denna funktion lyckas alltid."

#: ../../c-api/list.rst:36
msgid "Return a new list of length *len* on success, or ``NULL`` on failure."
msgstr ""
"Returnerar en ny lista med längden *len* vid framgång, eller ``NULL`` vid "
"misslyckande."

#: ../../c-api/list.rst:40
msgid ""
"If *len* is greater than zero, the returned list object's items are set to "
"``NULL``. Thus you cannot use abstract API functions such "
"as :c:func:`PySequence_SetItem` or expose the object to Python code before "
"setting all items to a real object with :c:func:`PyList_SetItem` "
"or :c:func:`PyList_SET_ITEM()`. The following APIs are safe APIs before the "
"list is fully initialized: :c:func:`PyList_SetItem()` "
"and :c:func:`PyList_SET_ITEM()`."
msgstr ""
"Om *len* är större än noll, sätts det returnerade listobjektets objekt till "
"``NULL``. Du kan alltså inte använda abstrakta API-funktioner "
"som :c:func:`PySequence_SetItem` eller exponera objektet för Python-kod "
"innan du har satt alla objekt till ett verkligt objekt "
"med :c:func:`PyList_SetItem` eller :c:func:`PyList_SET_ITEM()`. Följande "
"API:er är säkra API:er innan listan är helt "
"initialiserad: :c:func:`PyList_SetItem()` och :c:func:`PyList_SET_ITEM()`."

#: ../../c-api/list.rst:53
msgid ""
"Return the length of the list object in *list*; this is equivalent to "
"``len(list)`` on a list object."
msgstr ""
"Returnerar längden på listobjektet i *list*; detta är likvärdigt med "
"``len(list)`` på ett listobjekt."

#: ../../c-api/list.rst:59
msgid "Similar to :c:func:`PyList_Size`, but without error checking."
msgstr "Liknar :c:func:`PyList_Size`, men utan felkontroll."

#: ../../c-api/list.rst:64
msgid ""
"Return the object at position *index* in the list pointed to by *list*.  The "
"position must be non-negative; indexing from the end of the list is not "
"supported.  If *index* is out of bounds (:code:`<0 or >=len(list)`), return "
"``NULL`` and set an :exc:`IndexError` exception."
msgstr ""
"Returnerar objektet på position *index* i listan som pekas ut av *list*.  "
"Positionen måste vara icke-negativ; indexering från slutet av listan stöds "
"inte.  Om *index* är utanför gränserna (:code:`<0 or >=len(list)`), "
"returneras ``NULL`` och ett :exc:`IndexError` undantag anges."

#: ../../c-api/list.rst:74
msgid ""
"Like :c:func:`PyList_GetItemRef`, but returns a :term:`borrowed reference` "
"instead of a :term:`strong reference`."
msgstr ""
"Som :c:func:`PyList_GetItemRef`, men returnerar en :term:`lånad referens` "
"istället för en :term:`strong reference`."

#: ../../c-api/list.rst:80
msgid "Similar to :c:func:`PyList_GetItem`, but without error checking."
msgstr "Liknar :c:func:`PyList_GetItem`, men utan felkontroll."

#: ../../c-api/list.rst:85
msgid ""
"Set the item at index *index* in list to *item*.  Return ``0`` on success. "
"If *index* is out of bounds, return ``-1`` and set an :exc:`IndexError` "
"exception."
msgstr ""
"Ställ in objektet på index *index* i listan till *item*.  Returnera ``0`` "
"vid framgång. Om *index* är utanför gränserna, returneras ``\\-1`` och "
"ett :exc:`IndexError` undantag anges."

#: ../../c-api/list.rst:91
msgid ""
"This function \"steals\" a reference to *item* and discards a reference to "
"an item already in the list at the affected position."
msgstr ""
"Denna funktion \"stjäl\" en referens till *item* och kastar bort en referens "
"till ett objekt som redan finns i listan på den berörda positionen."

#: ../../c-api/list.rst:97
msgid ""
"Macro form of :c:func:`PyList_SetItem` without error checking. This is "
"normally only used to fill in new lists where there is no previous content."
msgstr ""
"Makroform av :c:func:`PyList_SetItem` utan felkontroll. Detta används "
"normalt bara för att fylla i nya listor där det inte finns något tidigare "
"innehåll."

#: ../../c-api/list.rst:100
msgid ""
"Bounds checking is performed as an assertion if Python is built "
"in :ref:`debug mode <debug-build>` or :option:`with assertions <--with-"
"assertions>`."
msgstr ""
"Gränskontroll utförs som ett påstående om Python är byggt i :ref:`debugläge "
"<debug-build>` eller :option:`med påstående <--with-assertions>`."

#: ../../c-api/list.rst:106
msgid ""
"This macro \"steals\" a reference to *item*, and, "
"unlike :c:func:`PyList_SetItem`, does *not* discard a reference to any item "
"that is being replaced; any reference in *list* at position *i* will be "
"leaked."
msgstr ""
"Detta makro \"stjäl\" en referens till *objekt* och, till skillnad "
"från :c:func:`PyList_SetItem`, förkastar *inte* en referens till något "
"objekt som ersätts; alla referenser i *list* på position *i* kommer att "
"läcka ut."

#: ../../c-api/list.rst:114
msgid ""
"Insert the item *item* into list *list* in front of index *index*.  Return "
"``0`` if successful; return ``-1`` and set an exception if unsuccessful. "
"Analogous to ``list.insert(index, item)``."
msgstr ""
"Infoga objektet *item* i listan *list* framför index *index*.  Returnerar "
"``0`` om det lyckas; returnerar ``\\-1`` och sätter ett undantag om det inte "
"lyckas. Analogt med ``list.insert(index, item)``."

#: ../../c-api/list.rst:121
msgid ""
"Append the object *item* at the end of list *list*. Return ``0`` if "
"successful; return ``-1`` and set an exception if unsuccessful.  Analogous "
"to ``list.append(item)``."
msgstr ""
"Lägg till objektet *item* i slutet av listan *list*. Returnerar ``0`` om det "
"lyckas; returnerar ``\\-1`` och sätter ett undantag om det inte lyckas.  "
"Analogt med ``list.append(item)``."

#: ../../c-api/list.rst:128
msgid ""
"Return a list of the objects in *list* containing the objects *between* "
"*low* and *high*.  Return ``NULL`` and set an exception if unsuccessful.  "
"Analogous to ``list[low:high]``.  Indexing from the end of the list is not "
"supported."
msgstr ""
"Returnerar en lista över objekten i *list* som innehåller objekten *mellan* "
"*low* och *high*.  Returnerar ``NULL`` och anger ett undantag om det inte "
"lyckas.  Analogt med ``list[low:high]``.  Indexering från slutet av listan "
"stöds inte."

#: ../../c-api/list.rst:135
msgid ""
"Set the slice of *list* between *low* and *high* to the contents of "
"*itemlist*.  Analogous to ``list[low:high] = itemlist``. The *itemlist* may "
"be ``NULL``, indicating the assignment of an empty list (slice deletion). "
"Return ``0`` on success, ``-1`` on failure.  Indexing from the end of the "
"list is not supported."
msgstr ""
"Ställ in delen av *list* mellan *low* och *high* till innehållet i "
"*itemlist*.  Analogt med ``list[low:high] = itemlist``. *itemlist* kan vara "
"``NULL``, vilket indikerar tilldelning av en tom lista (deletion). "
"Returnerar ``0`` vid framgång, ``\\-1`` vid misslyckande.  Indexering från "
"slutet av listan stöds inte."

#: ../../c-api/list.rst:144
msgid ""
"Extend *list* with the contents of *iterable*.  This is the same as "
"``PyList_SetSlice(list, PY_SSIZE_T_MAX, PY_SSIZE_T_MAX, iterable)`` and "
"analogous to ``list.extend(iterable)`` or ``list += iterable``."
msgstr ""
"Utökar *list* med innehållet i *iterable*.  Detta är samma sak som "
"``PyList_SetSlice(list, PY_SSIZE_T_MAX, PY_SSIZE_T_MAX, iterable)`` och "
"analogt med ``list.extend(iterable)`` eller ``list += iterable``."

#: ../../c-api/list.rst:148
msgid ""
"Raise an exception and return ``-1`` if *list* is not a :class:`list` "
"object. Return 0 on success."
msgstr ""
"Utlös ett undantag och returnera ``\\-1`` om *list* inte är "
"ett :class:`list`\\-objekt. Returnerar 0 vid framgång."

#: ../../c-api/list.rst:156
msgid ""
"Remove all items from *list*.  This is the same as ``PyList_SetSlice(list, "
"0, PY_SSIZE_T_MAX, NULL)`` and analogous to ``list.clear()`` or ``del "
"list[:]``."
msgstr ""
"Tar bort alla objekt från *list*.  Detta är samma sak som "
"``PyList_SetSlice(list, 0, PY_SSIZE_T_MAX, NULL)`` och analogt med "
"``list.clear()`` eller ``del list[:]``."

#: ../../c-api/list.rst:160
msgid ""
"Raise an exception and return ``-1`` if *list* is not a :class:`list` "
"object.  Return 0 on success."
msgstr ""
"Utlös ett undantag och returnera ``\\-1`` om *list* inte är "
"ett :class:`list`\\-objekt.  Returnerar 0 vid framgång."

#: ../../c-api/list.rst:168
msgid ""
"Sort the items of *list* in place.  Return ``0`` on success, ``-1`` on "
"failure.  This is equivalent to ``list.sort()``."
msgstr ""
"Sortera objekten i *list* på plats.  Returnerar ``0`` vid framgång, ``\\-1`` "
"vid misslyckande.  Detta är likvärdigt med ``list.sort()``."

#: ../../c-api/list.rst:174
msgid ""
"Reverse the items of *list* in place.  Return ``0`` on success, ``-1`` on "
"failure.  This is the equivalent of ``list.reverse()``."
msgstr ""
"Omvända objekten i *list* på plats.  Returnerar ``0`` vid framgång, ``\\-1`` "
"vid misslyckande.  Detta är motsvarigheten till ``list.reverse()``."

#: ../../c-api/list.rst:182
msgid ""
"Return a new tuple object containing the contents of *list*; equivalent to "
"``tuple(list)``."
msgstr ""
"Returnerar ett nytt tuple-objekt som innehåller innehållet i *list*; "
"motsvarar ``tuple(list)``."

#: ../../c-api/list.rst:8
msgid "object"
msgstr "objekt"

#: ../../c-api/list.rst:8
msgid "list"
msgstr "lista"

#: ../../c-api/list.rst:51 ../../c-api/list.rst:180
msgid "built-in function"
msgstr "inbyggd funktion"

#: ../../c-api/list.rst:51
msgid "len"
msgstr "len"

#: ../../c-api/list.rst:180
msgid "tuple"
msgstr "tupel"
