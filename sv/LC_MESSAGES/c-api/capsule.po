# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# python-doc bot, 2025
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.11\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-25 16:33+0000\n"
"PO-Revision-Date: 2025-09-22 16:49+0000\n"
"Last-Translator: python-doc bot, 2025\n"
"Language-Team: Swedish (https://app.transifex.com/python-doc/teams/5390/sv/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: sv\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"

#: ../../c-api/capsule.rst:6
msgid "Capsules"
msgstr "Kapslar"

#: ../../c-api/capsule.rst:10
msgid ""
"Refer to :ref:`using-capsules` for more information on using these objects."
msgstr ""
"Se :ref:`using-capsules` för mer information om hur du använder dessa "
"objekt."

#: ../../c-api/capsule.rst:17
msgid ""
"This subtype of :c:type:`PyObject` represents an opaque value, useful for C "
"extension modules who need to pass an opaque value (as a :c:expr:`void*` "
"pointer) through Python code to other C code.  It is often used to make a C "
"function pointer defined in one module available to other modules, so the "
"regular import mechanism can be used to access C APIs defined in dynamically"
" loaded modules."
msgstr ""
"Denna subtyp av :c:type:`PyObject` representerar ett opakt värde, användbart"
" för C-tilläggsmoduler som behöver skicka ett opakt värde (som en "
":c:expr:`void*`-pekare) genom Python-kod till annan C-kod.  Det används ofta"
" för att göra en C-funktionspekare som definieras i en modul tillgänglig för"
" andra moduler, så att den vanliga importmekanismen kan användas för att "
"komma åt C API:er som definieras i dynamiskt laddade moduler."

#: ../../c-api/capsule.rst:27
msgid "The type of a destructor callback for a capsule.  Defined as::"
msgstr "Typen av ett destruktoranrop för en kapsel.  Definierad som::"

#: ../../c-api/capsule.rst:31
msgid ""
"See :c:func:`PyCapsule_New` for the semantics of PyCapsule_Destructor "
"callbacks."
msgstr ""
"Se :c:func:`PyCapsule_New` för semantiken för PyCapsule_Destructor "
"callbacks."

#: ../../c-api/capsule.rst:37
msgid ""
"Return true if its argument is a :c:type:`PyCapsule`.  This function always "
"succeeds."
msgstr ""
"Returnerar true om dess argument är en :c:type:`PyCapsule`.  Denna funktion "
"lyckas alltid."

#: ../../c-api/capsule.rst:43
msgid ""
"Create a :c:type:`PyCapsule` encapsulating the *pointer*.  The *pointer* "
"argument may not be ``NULL``."
msgstr ""
"Skapa en :c:type:`PyCapsule` som kapslar in *pekaren*.  Argumentet *pekare* "
"får inte vara ``NULL``."

#: ../../c-api/capsule.rst:46
msgid "On failure, set an exception and return ``NULL``."
msgstr "Vid misslyckande, sätt ett undantag och returnera ``NULL``."

#: ../../c-api/capsule.rst:48
msgid ""
"The *name* string may either be ``NULL`` or a pointer to a valid C string.  "
"If non-``NULL``, this string must outlive the capsule.  (Though it is "
"permitted to free it inside the *destructor*.)"
msgstr ""
"Strängen *name* kan antingen vara ``NULL`` eller en pekare till en giltig "
"C-sträng.  Om den inte är ``NULL`` måste denna sträng överleva kapseln.  "
"(Det är dock tillåtet att frigöra den i *destructor*.)"

#: ../../c-api/capsule.rst:52
msgid ""
"If the *destructor* argument is not ``NULL``, it will be called with the "
"capsule as its argument when it is destroyed."
msgstr ""
"Om argumentet *destructor* inte är ``NULL``, kommer den att anropas med "
"kapseln som argument när den förstörs."

#: ../../c-api/capsule.rst:55
msgid ""
"If this capsule will be stored as an attribute of a module, the *name* "
"should be specified as ``modulename.attributename``.  This will enable other"
" modules to import the capsule using :c:func:`PyCapsule_Import`."
msgstr ""
"Om denna kapsel skall lagras som ett attribut i en modul, skall *namnet* "
"anges som ``modulename.attributename``.  Detta gör det möjligt för andra "
"moduler att importera kapseln med hjälp av :c:func:`PyCapsule_Import`."

#: ../../c-api/capsule.rst:62
msgid ""
"Retrieve the *pointer* stored in the capsule.  On failure, set an exception "
"and return ``NULL``."
msgstr ""
"Hämtar *pekaren* som finns lagrad i kapseln.  Vid misslyckande, sätt ett "
"undantag och returnera ``NULL``."

#: ../../c-api/capsule.rst:65
msgid ""
"The *name* parameter must compare exactly to the name stored in the capsule."
" If the name stored in the capsule is ``NULL``, the *name* passed in must "
"also be ``NULL``.  Python uses the C function :c:func:`!strcmp` to compare "
"capsule names."
msgstr ""
"Parametern *name* måste jämföras exakt med det namn som lagrats i kapseln. "
"Om namnet som lagras i kapseln är ``NULL``, måste *name* som skickas in "
"också vara ``NULL``.  Python använder C-funktionen :c:func:`!strcmp` för att"
" jämföra kapselnamn."

#: ../../c-api/capsule.rst:73
msgid ""
"Return the current destructor stored in the capsule.  On failure, set an "
"exception and return ``NULL``."
msgstr ""
"Returnerar den aktuella destruktorn som finns lagrad i kapseln.  Vid "
"misslyckande, sätt ett undantag och returnera ``NULL``."

#: ../../c-api/capsule.rst:76
msgid ""
"It is legal for a capsule to have a ``NULL`` destructor.  This makes a "
"``NULL`` return code somewhat ambiguous; use :c:func:`PyCapsule_IsValid` or "
":c:func:`PyErr_Occurred` to disambiguate."
msgstr ""
"Det är lagligt för en kapsel att ha en ``NULL`` destruktor.  Detta gör att "
"en ``NULL`` returkod är något tvetydig; använd :c:func:`PyCapsule_IsValid` "
"eller :c:func:`PyErr_Occurred` för att reda ut det."

#: ../../c-api/capsule.rst:83
msgid ""
"Return the current context stored in the capsule.  On failure, set an "
"exception and return ``NULL``."
msgstr ""
"Returnerar det aktuella sammanhanget som lagrats i kapseln.  Vid "
"misslyckande anges ett undantag och ``NULL`` returneras."

#: ../../c-api/capsule.rst:86
msgid ""
"It is legal for a capsule to have a ``NULL`` context.  This makes a ``NULL``"
" return code somewhat ambiguous; use :c:func:`PyCapsule_IsValid` or "
":c:func:`PyErr_Occurred` to disambiguate."
msgstr ""
"Det är lagligt för en kapsel att ha en ``NULL`` kontext.  Detta gör att en "
"``NULL`` returkod är något tvetydig; använd :c:func:`PyCapsule_IsValid` "
"eller :c:func:`PyErr_Occurred` för att reda ut det."

#: ../../c-api/capsule.rst:93
msgid ""
"Return the current name stored in the capsule.  On failure, set an exception"
" and return ``NULL``."
msgstr ""
"Returnerar det aktuella namnet som lagrats i kapseln.  Vid misslyckande, "
"sätt ett undantag och returnera ``NULL``."

#: ../../c-api/capsule.rst:96
msgid ""
"It is legal for a capsule to have a ``NULL`` name.  This makes a ``NULL`` "
"return code somewhat ambiguous; use :c:func:`PyCapsule_IsValid` or "
":c:func:`PyErr_Occurred` to disambiguate."
msgstr ""
"Det är lagligt för en kapsel att ha ett ``NULL`` namn.  Detta gör att en "
"``NULL`` returkod är något tvetydig; använd :c:func:`PyCapsule_IsValid` "
"eller :c:func:`PyErr_Occurred` för att reda ut det."

#: ../../c-api/capsule.rst:103
msgid ""
"Import a pointer to a C object from a capsule attribute in a module.  The "
"*name* parameter should specify the full name to the attribute, as in "
"``module.attribute``.  The *name* stored in the capsule must match this "
"string exactly."
msgstr ""
"Importerar en pekare till ett C-objekt från ett kapselattribut i en modul.  "
"Parametern *name* bör ange det fullständiga namnet på attributet, som i "
"``module.attribute``.  Det *namn* som lagras i kapseln måste matcha denna "
"sträng exakt."

#: ../../c-api/capsule.rst:108
msgid ""
"Return the capsule's internal *pointer* on success.  On failure, set an "
"exception and return ``NULL``."
msgstr ""
"Returnerar kapselns interna *pekare* vid framgång.  Vid misslyckande, sätt "
"ett undantag och returnera ``NULL``."

#: ../../c-api/capsule.rst:111
msgid "*no_block* has no effect anymore."
msgstr "*no_block* har ingen effekt längre."

#: ../../c-api/capsule.rst:117
msgid ""
"Determines whether or not *capsule* is a valid capsule.  A valid capsule is "
"non-``NULL``, passes :c:func:`PyCapsule_CheckExact`, has a non-``NULL`` "
"pointer stored in it, and its internal name matches the *name* parameter.  "
"(See :c:func:`PyCapsule_GetPointer` for information on how capsule names are"
" compared.)"
msgstr ""
"Avgör om *capsule* är en giltig kapsel eller inte.  En giltig kapsel är inte"
" ``NULL``, klarar :c:func:`PyCapsule_CheckExact`, har en pekare som inte är "
"``NULL`` lagrad i den och dess interna namn matchar parametern *name*.  (Se "
":c:func:`PyCapsule_GetPointer` för information om hur kapselnamn jämförs)"

#: ../../c-api/capsule.rst:123
msgid ""
"In other words, if :c:func:`PyCapsule_IsValid` returns a true value, calls "
"to any of the accessors (any function starting with ``PyCapsule_Get``) are "
"guaranteed to succeed."
msgstr ""
"Med andra ord, om :c:func:`PyCapsule_IsValid` returnerar ett sant värde, "
"kommer anrop till någon av accessorerna (alla funktioner som börjar med "
"``PyCapsule_Get``) garanterat att lyckas."

#: ../../c-api/capsule.rst:127
msgid ""
"Return a nonzero value if the object is valid and matches the name passed "
"in. Return ``0`` otherwise.  This function will not fail."
msgstr ""
"Returnerar ett värde som inte är noll om objektet är giltigt och matchar "
"namnet som skickades in. Returnerar annars ``0``.  Denna funktion kommer "
"inte att misslyckas."

#: ../../c-api/capsule.rst:133
msgid "Set the context pointer inside *capsule* to *context*."
msgstr "Ställ in kontextpekaren i *capsule* till *context*."

#: ../../c-api/capsule.rst:135 ../../c-api/capsule.rst:142
#: ../../c-api/capsule.rst:151 ../../c-api/capsule.rst:159
msgid ""
"Return ``0`` on success.  Return nonzero and set an exception on failure."
msgstr ""
"Returnera ``0`` vid framgång.  Returnerar icke-noll och sätter ett undantag "
"vid misslyckande."

#: ../../c-api/capsule.rst:140
msgid "Set the destructor inside *capsule* to *destructor*."
msgstr "Ställ in destruktorn inuti *capsule* till *destructor*."

#: ../../c-api/capsule.rst:147
msgid ""
"Set the name inside *capsule* to *name*.  If non-``NULL``, the name must "
"outlive the capsule.  If the previous *name* stored in the capsule was not "
"``NULL``, no attempt is made to free it."
msgstr ""
"Ställ in namnet inuti *kapsel* till *namn*.  Om det inte är ``NULL`` måste "
"namnet överleva kapseln.  Om det tidigare *namn* som lagrades i kapseln inte"
" var ``NULL``, görs inget försök att frigöra det."

#: ../../c-api/capsule.rst:156
msgid ""
"Set the void pointer inside *capsule* to *pointer*.  The pointer may not be "
"``NULL``."
msgstr ""
"Ställ in void-pekaren inuti *capsule* till *pointer*.  Pekaren får inte vara"
" ``NULL``."

#: ../../c-api/capsule.rst:8
msgid "object"
msgstr "object"

#: ../../c-api/capsule.rst:8
msgid "Capsule"
msgstr "Kapsel"
