# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# python-doc bot, 2025
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.11\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-10-15 16:36+0000\n"
"PO-Revision-Date: 2025-09-22 16:49+0000\n"
"Last-Translator: python-doc bot, 2025\n"
"Language-Team: Swedish (https://app.transifex.com/python-doc/teams/5390/"
"sv/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: sv\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"

#: ../../c-api/object.rst:6
msgid "Object Protocol"
msgstr "Objektprotokoll"

#: ../../c-api/object.rst:11
msgid ""
"The ``NotImplemented`` singleton, used to signal that an operation is not "
"implemented for the given type combination."
msgstr ""
"Singleton ``NotImplemented``, används för att signalera att en operation "
"inte är implementerad för den givna typkombinationen."

#: ../../c-api/object.rst:17
msgid ""
"Properly handle returning :c:data:`Py_NotImplemented` from within a C "
"function (that is, create a new :term:`strong reference` to NotImplemented "
"and return it)."
msgstr ""

#: ../../c-api/object.rst:24
msgid ""
"Flag to be used with multiple functions that print the object (like :c:func:"
"`PyObject_Print` and :c:func:`PyFile_WriteObject`). If passed, these "
"function would use the :func:`str` of the object instead of the :func:`repr`."
msgstr ""
"Flagga som ska användas med flera funktioner som skriver ut objektet (som :c:"
"func:`PyObject_Print` och :c:func:`PyFile_WriteObject`). Om den godkänns "
"kommer dessa funktioner att använda objektets :func:`str` istället för :func:"
"`repr`."

#: ../../c-api/object.rst:32
msgid ""
"Print an object *o*, on file *fp*.  Returns ``-1`` on error.  The flags "
"argument is used to enable certain printing options.  The only option "
"currently supported is :c:macro:`Py_PRINT_RAW`; if given, the :func:`str` of "
"the object is written instead of the :func:`repr`."
msgstr ""
"Skriv ut ett objekt *o*, på filen *fp*.  Returnerar ``\\-1`` vid fel.  "
"Argumentet flags används för att aktivera vissa utskriftsalternativ.  Det "
"enda alternativ som för närvarande stöds är :c:macro:`Py_PRINT_RAW`; om det "
"anges skrivs objektets :func:`str` ut istället för :func:`repr`."

#: ../../c-api/object.rst:40
msgid ""
"Returns ``1`` if *o* has the attribute *attr_name*, and ``0`` otherwise.  "
"This is equivalent to the Python expression ``hasattr(o, attr_name)``.  This "
"function always succeeds."
msgstr ""

#: ../../c-api/object.rst:46
msgid ""
"Exceptions that occur when this calls :meth:`~object.__getattr__` and :meth:"
"`~object.__getattribute__` methods are silently ignored. For proper error "
"handling, use :c:func:`PyObject_GetAttr` instead."
msgstr ""

#: ../../c-api/object.rst:53
msgid ""
"This is the same as :c:func:`PyObject_HasAttr`, but *attr_name* is specified "
"as a :c:expr:`const char*` UTF-8 encoded bytes string, rather than a :c:expr:"
"`PyObject*`."
msgstr ""
"Detta är samma sak som :c:func:`PyObject_HasAttr`, men *attr_name* anges som "
"en :c:expr:`const char*` UTF-8-kodad bytessträng, i stället för en :c:expr:"
"`PyObject*`."

#: ../../c-api/object.rst:59
msgid ""
"Exceptions that occur when this calls :meth:`~object.__getattr__` and :meth:"
"`~object.__getattribute__` methods or while creating the temporary :class:"
"`str` object are silently ignored. For proper error handling, use :c:func:"
"`PyObject_GetAttrString` instead."
msgstr ""

#: ../../c-api/object.rst:67
msgid ""
"Retrieve an attribute named *attr_name* from object *o*. Returns the "
"attribute value on success, or ``NULL`` on failure.  This is the equivalent "
"of the Python expression ``o.attr_name``."
msgstr ""
"Hämtar ett attribut med namnet *attr_name* från objektet *o*. Returnerar "
"attributvärdet vid framgång, eller ``NULL`` vid misslyckande.  Detta är "
"motsvarigheten till Python-uttrycket ``o.attr_name``."

#: ../../c-api/object.rst:74
msgid ""
"This is the same as :c:func:`PyObject_GetAttr`, but *attr_name* is specified "
"as a :c:expr:`const char*` UTF-8 encoded bytes string, rather than a :c:expr:"
"`PyObject*`."
msgstr ""
"Detta är samma sak som :c:func:`PyObject_GetAttr`, men *attr_name* anges som "
"en :c:expr:`const char*` UTF-8-kodad bytessträng, i stället för en :c:expr:"
"`PyObject*`."

#: ../../c-api/object.rst:81
msgid ""
"Generic attribute getter function that is meant to be put into a type "
"object's ``tp_getattro`` slot.  It looks for a descriptor in the dictionary "
"of classes in the object's MRO as well as an attribute in the object's :attr:"
"`~object.__dict__` (if present).  As outlined in :ref:`descriptors`, data "
"descriptors take preference over instance attributes, while non-data "
"descriptors don't.  Otherwise, an :exc:`AttributeError` is raised."
msgstr ""
"Generisk getterfunktion för attribut som är avsedd att placeras i ett "
"typobjekts ``tp_getattro`` slot.  Den letar efter en deskriptor i "
"klassordboken i objektets MRO samt ett attribut i objektets :attr:`~object."
"__dict__` (om det finns).  Som beskrivs i :ref:`descriptors`, har "
"datadeskriptorer företräde framför instansattribut, medan icke-"
"datadeskriptorer inte har det.  I annat fall uppstår ett :exc:"
"`AttributeError`."

#: ../../c-api/object.rst:91
msgid ""
"Set the value of the attribute named *attr_name*, for object *o*, to the "
"value *v*. Raise an exception and return ``-1`` on failure; return ``0`` on "
"success.  This is the equivalent of the Python statement ``o.attr_name = v``."
msgstr ""
"Ställ in värdet på attributet med namnet *attr_name*, för objektet *o*, till "
"värdet *v*. Utlös ett undantag och returnera ``\\-1`` vid misslyckande; "
"returnera ``0`` vid framgång.  Detta är motsvarigheten till Python-satsen "
"``o.attr_name = v``."

#: ../../c-api/object.rst:96
msgid ""
"If *v* is ``NULL``, the attribute is deleted. This behaviour is deprecated "
"in favour of using :c:func:`PyObject_DelAttr`, but there are currently no "
"plans to remove it."
msgstr ""
"Om *v* är ``NULL`` tas attributet bort. Detta beteende är föråldrat till "
"förmån för att använda :c:func:`PyObject_DelAttr`, men det finns för "
"närvarande inga planer på att ta bort det."

#: ../../c-api/object.rst:103
msgid ""
"This is the same as :c:func:`PyObject_SetAttr`, but *attr_name* is specified "
"as a :c:expr:`const char*` UTF-8 encoded bytes string, rather than a :c:expr:"
"`PyObject*`."
msgstr ""
"Detta är samma sak som :c:func:`PyObject_SetAttr`, men *attr_name* anges som "
"en :c:expr:`const char*` UTF-8-kodad bytessträng, i stället för en :c:expr:"
"`PyObject*`."

#: ../../c-api/object.rst:107
msgid ""
"If *v* is ``NULL``, the attribute is deleted, but this feature is deprecated "
"in favour of using :c:func:`PyObject_DelAttrString`."
msgstr ""
"Om *v* är ``NULL`` tas attributet bort, men denna funktion är föråldrad till "
"förmån för att använda :c:func:`PyObject_DelAttrString`."

#: ../../c-api/object.rst:113
msgid ""
"Generic attribute setter and deleter function that is meant to be put into a "
"type object's :c:member:`~PyTypeObject.tp_setattro` slot.  It looks for a "
"data descriptor in the dictionary of classes in the object's MRO, and if "
"found it takes preference over setting or deleting the attribute in the "
"instance dictionary. Otherwise, the attribute is set or deleted in the "
"object's :attr:`~object.__dict__` (if present). On success, ``0`` is "
"returned, otherwise an :exc:`AttributeError` is raised and ``-1`` is "
"returned."
msgstr ""
"Generisk attributsättnings- och borttagningsfunktion som är avsedd att "
"placeras i ett typobjekts :c:member:`~PyTypeObject.tp_setattro` slot.  Den "
"letar efter en databeskrivare i klassordboken i objektets MRO, och om den "
"hittas har den företräde framför att sätta eller ta bort attributet i "
"instansordboken. I annat fall sätts eller tas attributet bort i objektets :"
"attr:`~object.__dict__` (om det finns). Vid framgång returneras ``0``, "
"annars genereras ett :exc:`AttributeError` och ``\\-1`` returneras."

#: ../../c-api/object.rst:125
msgid ""
"Delete attribute named *attr_name*, for object *o*. Returns ``-1`` on "
"failure. This is the equivalent of the Python statement ``del o.attr_name``."
msgstr ""
"Ta bort attributet med namnet *attr_name* för objektet *o*. Returnerar "
"``\\-1`` om det misslyckas. Detta är motsvarigheten till Python-satsen ``del "
"o.attr_name``."

#: ../../c-api/object.rst:131
msgid ""
"This is the same as :c:func:`PyObject_DelAttr`, but *attr_name* is specified "
"as a :c:expr:`const char*` UTF-8 encoded bytes string, rather than a :c:expr:"
"`PyObject*`."
msgstr ""
"Detta är samma sak som :c:func:`PyObject_DelAttr`, men *attr_name* anges som "
"en :c:expr:`const char*` UTF-8-kodad bytessträng, i stället för en :c:expr:"
"`PyObject*`."

#: ../../c-api/object.rst:138
msgid ""
"A generic implementation for the getter of a ``__dict__`` descriptor. It "
"creates the dictionary if necessary."
msgstr ""
"En generisk implementation för gettern för en ``__dict__`` deskriptor. Den "
"skapar ordlistan om det behövs."

#: ../../c-api/object.rst:141
msgid ""
"This function may also be called to get the :py:attr:`~object.__dict__` of "
"the object *o*. Pass ``NULL`` for *context* when calling it. Since this "
"function may need to allocate memory for the dictionary, it may be more "
"efficient to call :c:func:`PyObject_GetAttr` when accessing an attribute on "
"the object."
msgstr ""
"Denna funktion kan också anropas för att få :py:attr:`~object.__dict__` för "
"objektet *o*. Ange ``NULL`` för *context* när du anropar den. Eftersom den "
"här funktionen kan behöva allokera minne för ordlistan kan det vara "
"effektivare att anropa :c:func:`PyObject_GetAttr` när man vill komma åt ett "
"attribut på objektet."

#: ../../c-api/object.rst:147
msgid "On failure, returns ``NULL`` with an exception set."
msgstr "Vid misslyckande returneras ``NULL`` med en undantagsuppsättning."

#: ../../c-api/object.rst:154
msgid ""
"A generic implementation for the setter of a ``__dict__`` descriptor. This "
"implementation does not allow the dictionary to be deleted."
msgstr ""
"En generisk implementation för en ``__dict__`` descriptors setter. Den här "
"implementationen tillåter inte att ordboken raderas."

#: ../../c-api/object.rst:162
msgid ""
"Return a pointer to :py:attr:`~object.__dict__` of the object *obj*. If "
"there is no ``__dict__``, return ``NULL`` without setting an exception."
msgstr ""
"Returnerar en pekare till :py:attr:`~object.__dict__` för objektet *obj*. Om "
"det inte finns någon ``__dict__``, returneras ``NULL`` utan att ett undantag "
"anges."

#: ../../c-api/object.rst:165
msgid ""
"This function may need to allocate memory for the dictionary, so it may be "
"more efficient to call :c:func:`PyObject_GetAttr` when accessing an "
"attribute on the object."
msgstr ""
"Denna funktion kan behöva allokera minne för ordlistan, så det kan vara mer "
"effektivt att anropa :c:func:`PyObject_GetAttr` när man vill komma åt ett "
"attribut på objektet."

#: ../../c-api/object.rst:172
msgid ""
"Compare the values of *o1* and *o2* using the operation specified by *opid*, "
"which must be one of :c:macro:`Py_LT`, :c:macro:`Py_LE`, :c:macro:`Py_EQ`, :"
"c:macro:`Py_NE`, :c:macro:`Py_GT`, or :c:macro:`Py_GE`, corresponding to "
"``<``, ``<=``, ``==``, ``!=``, ``>``, or ``>=`` respectively. This is the "
"equivalent of the Python expression ``o1 op o2``, where ``op`` is the "
"operator corresponding to *opid*. Returns the value of the comparison on "
"success, or ``NULL`` on failure."
msgstr ""
"Jämför värdena i *o1* och *o2* med den operation som anges av *opid*, som "
"måste vara en av :c:macro:`Py_LT`, :c:macro:`Py_LE`, :c:macro:`Py_EQ`, :c:"
"macro:`Py_NE`, :c:macro:`Py_GT` eller :c:macro:`Py_GE`, motsvarande ``<``, "
"``<=``, ``==``, ``!=``, ``>``, eller ``>=`` respektive. Detta är "
"motsvarigheten till Python-uttrycket ``o1 op o2``, där ``op`` är operatorn "
"som motsvarar *opid*. Returnerar värdet av jämförelsen om den lyckas, eller "
"``NULL`` om den misslyckas."

#: ../../c-api/object.rst:182
msgid ""
"Compare the values of *o1* and *o2* using the operation specified by *opid*, "
"like :c:func:`PyObject_RichCompare`, but returns ``-1`` on error, ``0`` if "
"the result is false, ``1`` otherwise."
msgstr ""
"Jämför värdena på *o1* och *o2* med den operation som anges av *opid*, som :"
"c:func:`PyObject_RichCompare`, men returnerar ``\\-1`` vid fel, ``0`` om "
"resultatet är falskt, ``1`` annars."

#: ../../c-api/object.rst:187
msgid ""
"If *o1* and *o2* are the same object, :c:func:`PyObject_RichCompareBool` "
"will always return ``1`` for :c:macro:`Py_EQ` and ``0`` for :c:macro:`Py_NE`."
msgstr ""
"Om *o1* och *o2* är samma objekt kommer :c:func:`PyObject_RichCompareBool` "
"alltid att returnera ``1`` för :c:macro:`Py_EQ` och ``0`` för :c:macro:"
"`Py_NE`."

#: ../../c-api/object.rst:192
msgid ""
"Format *obj* using *format_spec*. This is equivalent to the Python "
"expression ``format(obj, format_spec)``."
msgstr ""
"Formatera *obj* med hjälp av *format_spec*. Detta är likvärdigt med Python-"
"uttrycket ``format(obj, format_spec)``."

#: ../../c-api/object.rst:195
msgid ""
"*format_spec* may be ``NULL``. In this case the call is equivalent to "
"``format(obj)``. Returns the formatted string on success, ``NULL`` on "
"failure."
msgstr ""
"*format_spec* kan vara ``NULL``. I detta fall är anropet likvärdigt med "
"``format(obj)``. Returnerar den formaterade strängen vid framgång, ``NULL`` "
"vid misslyckande."

#: ../../c-api/object.rst:203
msgid ""
"Compute a string representation of object *o*.  Returns the string "
"representation on success, ``NULL`` on failure.  This is the equivalent of "
"the Python expression ``repr(o)``.  Called by the :func:`repr` built-in "
"function."
msgstr ""
"Beräknar en strängrepresentation av objektet *o*.  Returnerar "
"strängrepresentationen vid framgång, ``NULL`` vid misslyckande.  Detta är "
"motsvarigheten till Python-uttrycket ``repr(o)``.  Anropas av den inbyggda "
"funktionen :func:`repr`."

#: ../../c-api/object.rst:207 ../../c-api/object.rst:231
msgid ""
"This function now includes a debug assertion to help ensure that it does not "
"silently discard an active exception."
msgstr ""
"Denna funktion innehåller nu ett debug-assertion för att säkerställa att den "
"inte i tysthet kasserar ett aktivt undantag."

#: ../../c-api/object.rst:215
msgid ""
"As :c:func:`PyObject_Repr`, compute a string representation of object *o*, "
"but escape the non-ASCII characters in the string returned by :c:func:"
"`PyObject_Repr` with ``\\x``, ``\\u`` or ``\\U`` escapes.  This generates a "
"string similar to that returned by :c:func:`PyObject_Repr` in Python 2. "
"Called by the :func:`ascii` built-in function."
msgstr ""
"Som :c:func:`PyObject_Repr`, beräkna en strängrepresentation av objektet "
"*o*, men escape icke-ASCII-tecken i strängen som returneras av :c:func:"
"`PyObject_Repr` med ``\\x``, ``u`` eller ``U`` escapes.  Detta genererar en "
"sträng som liknar den som returneras av :c:func:`PyObject_Repr` i Python 2. "
"Anropas av den inbyggda funktionen :func:`ascii`."

#: ../../c-api/object.rst:226
msgid ""
"Compute a string representation of object *o*.  Returns the string "
"representation on success, ``NULL`` on failure.  This is the equivalent of "
"the Python expression ``str(o)``.  Called by the :func:`str` built-in "
"function and, therefore, by the :func:`print` function."
msgstr ""
"Beräknar en strängrepresentation av objektet *o*.  Returnerar "
"strängrepresentationen vid framgång, ``NULL`` vid misslyckande.  Detta är "
"motsvarigheten till Python-uttrycket ``str(o)``.  Anropas av den inbyggda "
"funktionen :func:`str` och därför även av funktionen :func:`print`."

#: ../../c-api/object.rst:240
msgid ""
"Compute a bytes representation of object *o*.  ``NULL`` is returned on "
"failure and a bytes object on success.  This is equivalent to the Python "
"expression ``bytes(o)``, when *o* is not an integer.  Unlike ``bytes(o)``, a "
"TypeError is raised when *o* is an integer instead of a zero-initialized "
"bytes object."
msgstr ""
"Beräkna en bytesrepresentation av objektet *o*.  ``NULL`` returneras vid "
"misslyckande och ett bytesobjekt vid framgång.  Detta är likvärdigt med "
"Python-uttrycket ``bytes(o)``, när *o* inte är ett heltal.  Till skillnad "
"från ``bytes(o)`` uppstår ett TypeError när *o* är ett heltal istället för "
"ett nollinitialiserat bytesobjekt."

#: ../../c-api/object.rst:249
msgid ""
"Return ``1`` if the class *derived* is identical to or derived from the "
"class *cls*, otherwise return ``0``.  In case of an error, return ``-1``."
msgstr ""
"Returnerar ``1`` om klassen *derived* är identisk med eller härledd från "
"klassen *cls*, annars returneras ``0``.  Vid ett fel returneras ``\\-1``."

#: ../../c-api/object.rst:252 ../../c-api/object.rst:271
msgid ""
"If *cls* is a tuple, the check will be done against every entry in *cls*. "
"The result will be ``1`` when at least one of the checks returns ``1``, "
"otherwise it will be ``0``."
msgstr ""
"Om *cls* är en tupel kommer kontrollen att göras mot varje post i *cls*. "
"Resultatet blir ``1`` när minst en av kontrollerna returnerar ``1``, annars "
"blir det ``0``."

#: ../../c-api/object.rst:256
msgid ""
"If *cls* has a :meth:`~class.__subclasscheck__` method, it will be called to "
"determine the subclass status as described in :pep:`3119`.  Otherwise, "
"*derived* is a subclass of *cls* if it is a direct or indirect subclass, i."
"e. contained in ``cls.__mro__``."
msgstr ""

#: ../../c-api/object.rst:261
msgid ""
"Normally only class objects, i.e. instances of :class:`type` or a derived "
"class, are considered classes.  However, objects can override this by having "
"a :attr:`~class.__bases__` attribute (which must be a tuple of base classes)."
msgstr ""

#: ../../c-api/object.rst:268
msgid ""
"Return ``1`` if *inst* is an instance of the class *cls* or a subclass of "
"*cls*, or ``0`` if not.  On error, returns ``-1`` and sets an exception."
msgstr ""
"Returnerar ``1`` om *inst* är en instans av klassen *cls* eller en "
"underklass av *cls*, eller ``0`` om inte.  Vid fel returneras ``\\-1`` och "
"ett undantag anges."

#: ../../c-api/object.rst:275
msgid ""
"If *cls* has a :meth:`~class.__instancecheck__` method, it will be called to "
"determine the subclass status as described in :pep:`3119`.  Otherwise, "
"*inst* is an instance of *cls* if its class is a subclass of *cls*."
msgstr ""

#: ../../c-api/object.rst:279
msgid ""
"An instance *inst* can override what is considered its class by having a :"
"attr:`~instance.__class__` attribute."
msgstr ""

#: ../../c-api/object.rst:282
msgid ""
"An object *cls* can override if it is considered a class, and what its base "
"classes are, by having a :attr:`~class.__bases__` attribute (which must be a "
"tuple of base classes)."
msgstr ""

#: ../../c-api/object.rst:291
msgid ""
"Compute and return the hash value of an object *o*.  On failure, return "
"``-1``. This is the equivalent of the Python expression ``hash(o)``."
msgstr ""
"Beräknar och returnerar hashvärdet för ett objekt *o*.  Vid misslyckande "
"returneras ``\\-1``. Detta är motsvarigheten till Python-uttrycket "
"``hash(o)``."

#: ../../c-api/object.rst:294
msgid ""
"The return type is now Py_hash_t.  This is a signed integer the same size "
"as :c:type:`Py_ssize_t`."
msgstr ""
"Returtypen är nu Py_hash_t.  Detta är ett signerat heltal av samma storlek "
"som :c:type:`Py_ssize_t`."

#: ../../c-api/object.rst:301
msgid ""
"Set a :exc:`TypeError` indicating that ``type(o)`` is not :term:`hashable` "
"and return ``-1``. This function receives special treatment when stored in a "
"``tp_hash`` slot, allowing a type to explicitly indicate to the interpreter "
"that it is not hashable."
msgstr ""
"Ställ in en :exc:`TypeError` som anger att ``type(o)`` inte är :term:"
"`hashable` och returnera ``\\-1``. Denna funktion behandlas speciellt när "
"den lagras i en ``tp_hash`` slot, vilket gör det möjligt för en typ att "
"uttryckligen ange för tolkaren att den inte är hashbar."

#: ../../c-api/object.rst:309
msgid ""
"Returns ``1`` if the object *o* is considered to be true, and ``0`` "
"otherwise. This is equivalent to the Python expression ``not not o``.  On "
"failure, return ``-1``."
msgstr ""
"Returnerar ``1`` om objektet *o* anses vara sant, och ``0`` annars. Detta är "
"likvärdigt med Python-uttrycket ``not not o``.  Vid misslyckande returneras "
"``\\-1``."

#: ../../c-api/object.rst:316
msgid ""
"Returns ``0`` if the object *o* is considered to be true, and ``1`` "
"otherwise. This is equivalent to the Python expression ``not o``.  On "
"failure, return ``-1``."
msgstr ""
"Returnerar ``0`` om objektet *o* anses vara sant, och ``1`` annars. Detta är "
"likvärdigt med Python-uttrycket ``not o``.  Vid misslyckande returneras "
"``\\-1``."

#: ../../c-api/object.rst:325
msgid ""
"When *o* is non-``NULL``, returns a type object corresponding to the object "
"type of object *o*. On failure, raises :exc:`SystemError` and returns "
"``NULL``.  This is equivalent to the Python expression ``type(o)``. This "
"function creates a new :term:`strong reference` to the return value. There's "
"really no reason to use this function instead of the :c:func:`Py_TYPE()` "
"function, which returns a pointer of type :c:expr:`PyTypeObject*`, except "
"when a new :term:`strong reference` is needed."
msgstr ""
"När *o* är icke-``NULL``, returnerar ett typobjekt som motsvarar objekttypen "
"för objektet *o*. Om det misslyckas, uppstår :exc:`SystemError` och "
"returnerar ``NULL``.  Detta är likvärdigt med Python-uttrycket ``type(o)``. "
"Denna funktion skapar en ny :term:`strong reference` till returvärdet. Det "
"finns egentligen ingen anledning att använda den här funktionen istället "
"för :c:func:`Py_TYPE()`\\-funktionen, som returnerar en pekare av typen :c:"
"expr:`PyTypeObject*`, förutom när en ny :term:`strong reference` behövs."

#: ../../c-api/object.rst:337
msgid ""
"Return non-zero if the object *o* is of type *type* or a subtype of *type*, "
"and ``0`` otherwise.  Both parameters must be non-``NULL``."
msgstr ""
"Returnerar icke-noll om objektet *o* är av typen *type* eller en subtyp av "
"*type*, och ``0`` annars.  Båda parametrarna måste vara icke-``NULL``."

#: ../../c-api/object.rst:346
msgid ""
"Return the length of object *o*.  If the object *o* provides either the "
"sequence and mapping protocols, the sequence length is returned.  On error, "
"``-1`` is returned.  This is the equivalent to the Python expression "
"``len(o)``."
msgstr ""
"Returnerar längden på objektet *o*.  Om objektet *o* tillhandahåller "
"antingen sekvens- eller mappningsprotokollet returneras sekvenslängden.  Vid "
"fel returneras ``\\-1``.  Detta är motsvarigheten till Python-uttrycket "
"``len(o)``."

#: ../../c-api/object.rst:353
msgid ""
"Return an estimated length for the object *o*. First try to return its "
"actual length, then an estimate using :meth:`~object.__length_hint__`, and "
"finally return the default value. On error return ``-1``. This is the "
"equivalent to the Python expression ``operator.length_hint(o, "
"defaultvalue)``."
msgstr ""
"Returnerar en uppskattad längd för objektet *o*. Försök först att returnera "
"dess faktiska längd, sedan en uppskattning med hjälp av :meth:`~object."
"__length_hint__`, och slutligen returnera standardvärdet. Vid fel returneras "
"``\\-1``. Detta är motsvarigheten till Python-uttrycket ``operator."
"length_hint(o, defaultvalue)``."

#: ../../c-api/object.rst:363
msgid ""
"Return element of *o* corresponding to the object *key* or ``NULL`` on "
"failure. This is the equivalent of the Python expression ``o[key]``."
msgstr ""
"Returnerar element av *o* som motsvarar objektet *key* eller ``NULL`` om det "
"misslyckas. Detta är motsvarigheten till Python-uttrycket ``o[key]``."

#: ../../c-api/object.rst:369
msgid ""
"Map the object *key* to the value *v*.  Raise an exception and return ``-1`` "
"on failure; return ``0`` on success.  This is the equivalent of the Python "
"statement ``o[key] = v``.  This function *does not* steal a reference to *v*."
msgstr ""
"Mappa objektet *key* till värdet *v*.  Utlös ett undantag och returnera "
"``\\-1`` vid misslyckande; returnera ``0`` vid framgång.  Detta är "
"motsvarigheten till Python-satsen ``o[key] = v``.  Den här funktionen "
"*stjäl* inte en referens till *v*."

#: ../../c-api/object.rst:377
msgid ""
"Remove the mapping for the object *key* from the object *o*.  Return ``-1`` "
"on failure.  This is equivalent to the Python statement ``del o[key]``."
msgstr ""
"Ta bort mappningen för objektet *key* från objektet *o*.  Returnerar "
"``\\-1`` vid misslyckande.  Detta är likvärdigt med Python-satsen ``del "
"o[key]``."

#: ../../c-api/object.rst:383
msgid ""
"This is equivalent to the Python expression ``dir(o)``, returning a "
"(possibly empty) list of strings appropriate for the object argument, or "
"``NULL`` if there was an error.  If the argument is ``NULL``, this is like "
"the Python ``dir()``, returning the names of the current locals; in this "
"case, if no execution frame is active then ``NULL`` is returned but :c:func:"
"`PyErr_Occurred` will return false."
msgstr ""
"Detta motsvarar Python-uttrycket ``dir(o)``, som returnerar en (eventuellt "
"tom) lista med strängar som passar för objektargumentet, eller ``NULL`` om "
"det uppstod ett fel.  Om argumentet är ``NULL``, är detta som Pythons "
"``dir()``, som returnerar namnen på de aktuella lokala platserna; i detta "
"fall, om ingen exekveringsram är aktiv, returneras ``NULL`` men :c:func:"
"`PyErr_Occurred` kommer att returnera false."

#: ../../c-api/object.rst:392
msgid ""
"This is equivalent to the Python expression ``iter(o)``. It returns a new "
"iterator for the object argument, or the object  itself if the object is "
"already an iterator.  Raises :exc:`TypeError` and returns ``NULL`` if the "
"object cannot be iterated."
msgstr ""
"Detta är likvärdigt med Python-uttrycket ``iter(o)``. Det returnerar en ny "
"iterator för objektargumentet, eller själva objektet om objektet redan är en "
"iterator.  Utlöser :exc:`TypeError` och returnerar ``NULL`` om objektet inte "
"kan itereras."

#: ../../c-api/object.rst:400
msgid ""
"This is the equivalent to the Python expression ``aiter(o)``. Takes an :"
"class:`AsyncIterable` object and returns an :class:`AsyncIterator` for it. "
"This is typically a new iterator but if the argument is an :class:"
"`AsyncIterator`, this returns itself. Raises :exc:`TypeError` and returns "
"``NULL`` if the object cannot be iterated."
msgstr ""
"Detta är motsvarigheten till Python-uttrycket ``aiter(o)``. Tar ett :class:"
"`AsyncIterable`\\-objekt och returnerar en :class:`AsyncIterator` för det. "
"Detta är typiskt en ny iterator men om argumentet är en :class:"
"`AsyncIterator` returnerar den sig själv. Utlöser :exc:`TypeError` och "
"returnerar ``NULL`` om objektet inte kan itereras."

#: ../../c-api/object.rst:201 ../../c-api/object.rst:213
#: ../../c-api/object.rst:238 ../../c-api/object.rst:289
#: ../../c-api/object.rst:323 ../../c-api/object.rst:344
msgid "built-in function"
msgstr "inbyggd funktion"

#: ../../c-api/object.rst:201
msgid "repr"
msgstr "repr"

#: ../../c-api/object.rst:213
msgid "ascii"
msgstr "ascii"

#: ../../c-api/object.rst:221
msgid "string"
msgstr "sträng"

#: ../../c-api/object.rst:221
msgid "PyObject_Str (C function)"
msgstr "PyObject_Str (C-funktion)"

#: ../../c-api/object.rst:238
msgid "bytes"
msgstr "bytes"

#: ../../c-api/object.rst:289
msgid "hash"
msgstr "hash"

#: ../../c-api/object.rst:323
msgid "type"
msgstr "type"

#: ../../c-api/object.rst:344
msgid "len"
msgstr "len"
