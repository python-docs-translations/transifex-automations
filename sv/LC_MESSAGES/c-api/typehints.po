# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# python-doc bot, 2025
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.9\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-10-17 18:07+0000\n"
"PO-Revision-Date: 2025-09-22 17:54+0000\n"
"Last-Translator: python-doc bot, 2025\n"
"Language-Team: Swedish (https://app.transifex.com/python-doc/teams/5390/"
"sv/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: sv\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"

#: ../../c-api/typehints.rst:6
msgid "Objects for Type Hinting"
msgstr "Objekt för typhinting"

#: ../../c-api/typehints.rst:8
msgid ""
"Various built-in types for type hinting are provided. Only :ref:"
"`GenericAlias <types-genericalias>` is exposed to C."
msgstr ""

#: ../../c-api/typehints.rst:13
msgid ""
"Create a :ref:`GenericAlias <types-genericalias>` object. Equivalent to "
"calling the Python class :class:`types.GenericAlias`.  The *origin* and "
"*args* arguments set the ``GenericAlias``\\ 's ``__origin__`` and "
"``__args__`` attributes respectively. *origin* should be a :c:type:"
"`PyTypeObject*`, and *args* can be a :c:type:`PyTupleObject*` or any "
"``PyObject*``.  If *args* passed is not a tuple, a 1-tuple is automatically "
"constructed and ``__args__`` is set to ``(args,)``. Minimal checking is done "
"for the arguments, so the function will succeed even if *origin* is not a "
"type. The ``GenericAlias``\\ 's ``__parameters__`` attribute is constructed "
"lazily from ``__args__``.  On failure, an exception is raised and ``NULL`` "
"is returned."
msgstr ""

#: ../../c-api/typehints.rst:27
msgid "Here's an example of how to make an extension type generic::"
msgstr "Här är ett exempel på hur man gör en tilläggstyp generisk::"

#: ../../c-api/typehints.rst:37
msgid "The data model method :meth:`__class_getitem__`."
msgstr ""

#: ../../c-api/typehints.rst:43
msgid ""
"The C type of the object returned by :c:func:`Py_GenericAlias`. Equivalent "
"to :class:`types.GenericAlias` in Python."
msgstr ""
"C-typen för det objekt som returneras av :c:func:`Py_GenericAlias`. "
"Motsvarar :class:`types.GenericAlias` i Python."
