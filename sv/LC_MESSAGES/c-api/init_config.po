# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# python-doc bot, 2025
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.11\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-25 16:33+0000\n"
"PO-Revision-Date: 2025-09-22 16:49+0000\n"
"Last-Translator: python-doc bot, 2025\n"
"Language-Team: Swedish (https://app.transifex.com/python-doc/teams/5390/sv/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: sv\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"

#: ../../c-api/init_config.rst:7
msgid "Python Initialization Configuration"
msgstr "Konfiguration av Python-initialisering"

#: ../../c-api/init_config.rst:11
msgid ""
"Python can be initialized with :c:func:`Py_InitializeFromConfig` and the "
":c:type:`PyConfig` structure. It can be preinitialized with "
":c:func:`Py_PreInitialize` and the :c:type:`PyPreConfig` structure."
msgstr ""
"Python kan initialiseras med :c:func:`Py_InitializeFromConfig` och "
":c:type:`PyConfig`-strukturen. Den kan förinitialiseras med "
":c:func:`Py_PreInitialize` och strukturen :c:type:`PyPreConfig`."

#: ../../c-api/init_config.rst:15
msgid "There are two kinds of configuration:"
msgstr "Det finns två typer av konfigurering:"

#: ../../c-api/init_config.rst:17
msgid ""
"The :ref:`Python Configuration <init-python-config>` can be used to build a "
"customized Python which behaves as the regular Python. For example, "
"environment variables and command line arguments are used to configure "
"Python."
msgstr ""
":ref:`Python Configuration <init-python-config>` kan användas för att bygga "
"en anpassad Python som beter sig som den vanliga Python. Till exempel "
"används miljövariabler och kommandoradsargument för att konfigurera Python."

#: ../../c-api/init_config.rst:22
msgid ""
"The :ref:`Isolated Configuration <init-isolated-conf>` can be used to embed "
"Python into an application. It isolates Python from the system. For example,"
" environment variables are ignored, the LC_CTYPE locale is left unchanged "
"and no signal handler is registered."
msgstr ""
":ref:`Isolated Configuration <init-isolated-conf>` kan användas för att "
"bädda in Python i en applikation. Den isolerar Python från systemet. Till "
"exempel ignoreras miljövariabler, LC_CTYPE locale lämnas oförändrad och "
"ingen signalhanterare registreras."

#: ../../c-api/init_config.rst:27
msgid ""
"The :c:func:`Py_RunMain` function can be used to write a customized Python "
"program."
msgstr ""
"Funktionen :c:func:`Py_RunMain` kan användas för att skriva ett anpassat "
"Python-program."

#: ../../c-api/init_config.rst:30
msgid ""
"See also :ref:`Initialization, Finalization, and Threads <initialization>`."
msgstr ""
"Se även :ref:`Initialization, Finalization, and Threads <initialization>`."

#: ../../c-api/init_config.rst:33
msgid ":pep:`587` \"Python Initialization Configuration\"."
msgstr ":pep:`587` \"Python Initialization Configuration\"."

#: ../../c-api/init_config.rst:37
msgid "Example"
msgstr "Exempel"

#: ../../c-api/init_config.rst:39
msgid "Example of customized Python always running in isolated mode::"
msgstr "Exempel på anpassad Python som alltid körs i isolerat läge::"

#: ../../c-api/init_config.rst:76
msgid "PyWideStringList"
msgstr "PyWideStringList"

#: ../../c-api/init_config.rst:80
msgid "List of ``wchar_t*`` strings."
msgstr "Lista över strängar av typen ``wchar_t*``."

#: ../../c-api/init_config.rst:82
msgid ""
"If *length* is non-zero, *items* must be non-``NULL`` and all strings must "
"be non-``NULL``."
msgstr ""
"Om *length* inte är noll måste *items* vara något annat än ``NULL`` och alla"
" strängar måste vara något annat än ``NULL``."

#: ../../c-api/init_config.rst:87
msgid "Methods:"
msgstr "Metoder:"

#: ../../c-api/init_config.rst:91
msgid "Append *item* to *list*."
msgstr "Lägg till *item* till *list*."

#: ../../c-api/init_config.rst:93 ../../c-api/init_config.rst:104
msgid "Python must be preinitialized to call this function."
msgstr ""
"Python måste vara förinitialiserat för att denna funktion ska kunna anropas."

#: ../../c-api/init_config.rst:97
msgid "Insert *item* into *list* at *index*."
msgstr "Infoga *objekt* i *lista* vid *index*."

#: ../../c-api/init_config.rst:99
msgid ""
"If *index* is greater than or equal to *list* length, append *item* to "
"*list*."
msgstr ""
"Om *index* är större än eller lika med *list* längd, lägg till *item* till "
"*list*."

#: ../../c-api/init_config.rst:102
msgid "*index* must be greater than or equal to ``0``."
msgstr "*index* måste vara större än eller lika med ``0``."

#: ../../c-api/init_config.rst:108 ../../c-api/init_config.rst:128
#: ../../c-api/init_config.rst:235 ../../c-api/init_config.rst:544
msgid "Structure fields:"
msgstr "Strukturfält:"

#: ../../c-api/init_config.rst:112
msgid "List length."
msgstr "Listans längd."

#: ../../c-api/init_config.rst:116
msgid "List items."
msgstr "Lista objekt."

#: ../../c-api/init_config.rst:119
msgid "PyStatus"
msgstr "PyStatus"

#: ../../c-api/init_config.rst:123
msgid ""
"Structure to store an initialization function status: success, error or "
"exit."
msgstr ""
"Struktur för att lagra en initialiseringsfunktions status: success, error "
"eller exit."

#: ../../c-api/init_config.rst:126
msgid ""
"For an error, it can store the C function name which created the error."
msgstr "För ett fel kan det lagra namnet på den C-funktion som skapade felet."

#: ../../c-api/init_config.rst:132
msgid "Exit code. Argument passed to ``exit()``."
msgstr "Exit-kod. Argument som skickas till ``exit()``."

#: ../../c-api/init_config.rst:136
msgid "Error message."
msgstr "Felmeddelande."

#: ../../c-api/init_config.rst:140
msgid "Name of the function which created an error, can be ``NULL``."
msgstr "Namn på den funktion som skapade ett fel, kan vara ``NULL``."

#: ../../c-api/init_config.rst:144
msgid "Functions to create a status:"
msgstr "Funktioner för att skapa en status:"

#: ../../c-api/init_config.rst:148
msgid "Success."
msgstr "Lyckades."

#: ../../c-api/init_config.rst:152
msgid "Initialization error with a message."
msgstr "Initialiseringsfel med ett meddelande."

#: ../../c-api/init_config.rst:154
msgid "*err_msg* must not be ``NULL``."
msgstr "*err_msg* får inte vara ``NULL``."

#: ../../c-api/init_config.rst:158
msgid "Memory allocation failure (out of memory)."
msgstr "Fel i minnesallokeringen (minnet är slut)."

#: ../../c-api/init_config.rst:162
msgid "Exit Python with the specified exit code."
msgstr "Avsluta Python med den angivna exit-koden."

#: ../../c-api/init_config.rst:164
msgid "Functions to handle a status:"
msgstr "Funktioner för att hantera en status:"

#: ../../c-api/init_config.rst:168
msgid ""
"Is the status an error or an exit? If true, the exception must be handled; "
"by calling :c:func:`Py_ExitStatusException` for example."
msgstr ""
"Är statusen ett fel eller en exit? Om true måste undantaget hanteras, t.ex. "
"genom att anropa :c:func:`Py_ExitStatusException`."

#: ../../c-api/init_config.rst:173
msgid "Is the result an error?"
msgstr "Är resultatet ett fel?"

#: ../../c-api/init_config.rst:177
msgid "Is the result an exit?"
msgstr "Är resultatet en exit?"

#: ../../c-api/init_config.rst:181
msgid ""
"Call ``exit(exitcode)`` if *status* is an exit. Print the error message and "
"exit with a non-zero exit code if *status* is an error.  Must only be called"
" if ``PyStatus_Exception(status)`` is non-zero."
msgstr ""
"Anropa ``exit(exitcode)`` om *status* är en exit. Skriv ut felmeddelandet "
"och avsluta med en utgångskod som inte är noll om *status* är ett fel.  Får "
"endast anropas om ``PyStatus_Exception(status)`` inte är noll."

#: ../../c-api/init_config.rst:186
msgid ""
"Internally, Python uses macros which set ``PyStatus.func``, whereas "
"functions to create a status set ``func`` to ``NULL``."
msgstr ""
"Internt använder Python makron som sätter ``PyStatus.func``, medan "
"funktioner för att skapa en status sätter ``func`` till ``NULL``."

#: ../../c-api/init_config.rst:189
msgid "Example::"
msgstr "Exempel::"

#: ../../c-api/init_config.rst:213
msgid "PyPreConfig"
msgstr "PyPreConfig"

#: ../../c-api/init_config.rst:217
msgid "Structure used to preinitialize Python."
msgstr "Struktur som används för att förinitialisera Python."

#: ../../c-api/init_config.rst:221
msgid "Function to initialize a preconfiguration:"
msgstr "Funktion för att initiera en förkonfiguration:"

#: ../../c-api/init_config.rst:225
msgid ""
"Initialize the preconfiguration with :ref:`Python Configuration <init-"
"python-config>`."
msgstr ""
"Initiera förkonfigurationen med :ref:`Python Configuration <init-python-"
"config>`."

#: ../../c-api/init_config.rst:230
msgid ""
"Initialize the preconfiguration with :ref:`Isolated Configuration <init-"
"isolated-conf>`."
msgstr ""
"Initiera förkonfigurationen med :ref:`Isolated Configuration <init-isolated-"
"conf>`."

#: ../../c-api/init_config.rst:239
msgid "Name of the Python memory allocators:"
msgstr "Namn på Pythons minnesallokatorer:"

#: ../../c-api/init_config.rst:241
msgid ""
"``PYMEM_ALLOCATOR_NOT_SET`` (``0``): don't change memory allocators (use "
"defaults)."
msgstr ""
"``PYMEM_ALLOCATOR_NOT_SET`` (``0``): ändra inte minnesallokatorer (använd "
"standardvärden)."

#: ../../c-api/init_config.rst:243
msgid ""
"``PYMEM_ALLOCATOR_DEFAULT`` (``1``): :ref:`default memory allocators "
"<default-memory-allocators>`."
msgstr ""
"``PYMEM_ALLOCATOR_DEFAULT`` (``1``): :ref:``standard minnesallokatorer "
"<default-memory-allocators>`."

#: ../../c-api/init_config.rst:245
msgid ""
"``PYMEM_ALLOCATOR_DEBUG`` (``2``): :ref:`default memory allocators <default-"
"memory-allocators>` with :ref:`debug hooks <pymem-debug-hooks>`."
msgstr ""
"``PYMEM_ALLOCATOR_DEBUG`` (``2``): :ref:`default memory allocators <default-"
"memory-allocators>` with :ref:`debug hooks <pymem-debug-hooks>`."

#: ../../c-api/init_config.rst:248
msgid "``PYMEM_ALLOCATOR_MALLOC`` (``3``): use ``malloc()`` of the C library."
msgstr ""
"``PYMEM_ALLOCATOR_MALLOC`` (``3``): använd ``malloc()`` från C-biblioteket."

#: ../../c-api/init_config.rst:249
msgid ""
"``PYMEM_ALLOCATOR_MALLOC_DEBUG`` (``4``): force usage of ``malloc()`` with "
":ref:`debug hooks <pymem-debug-hooks>`."
msgstr ""
"``PYMEM_ALLOCATOR_MALLOC_DEBUG`` (``4``): tvinga fram användning av "
"``malloc()`` med :ref:`debug hooks <pymem-debug-hooks>`."

#: ../../c-api/init_config.rst:251
msgid ""
"``PYMEM_ALLOCATOR_PYMALLOC`` (``5``): :ref:`Python pymalloc memory allocator"
" <pymalloc>`."
msgstr ""
"``PYMEM_ALLOCATOR_PYMALLOC`` (``5``): :ref:`Python pymalloc memory allocator"
" <pymalloc>`."

#: ../../c-api/init_config.rst:253
msgid ""
"``PYMEM_ALLOCATOR_PYMALLOC_DEBUG`` (``6``): :ref:`Python pymalloc memory "
"allocator <pymalloc>` with :ref:`debug hooks <pymem-debug-hooks>`."
msgstr ""
"``PYMEM_ALLOCATOR_PYMALLOC_DEBUG`` (``6``): :ref:`Python pymalloc memory "
"allocator <pymalloc>` med :ref:`debug hooks <pymem-debug-hooks>`."

#: ../../c-api/init_config.rst:257
msgid ""
"``PYMEM_ALLOCATOR_PYMALLOC`` and ``PYMEM_ALLOCATOR_PYMALLOC_DEBUG`` are not "
"supported if Python is :option:`configured using --without-pymalloc "
"<--without-pymalloc>`."
msgstr ""
"``PYMEM_ALLOCATOR_PYMALLOC`` och ``PYMEM_ALLOCATOR_PYMALLOC_DEBUG`` stöds "
"inte om Python är :option:`konfigurerat med --without-pymalloc <--without-"
"pymalloc>`."

#: ../../c-api/init_config.rst:261
msgid "See :ref:`Memory Management <memory>`."
msgstr "Se :ref:`Memory Management <memory>`."

#: ../../c-api/init_config.rst:263
msgid "Default: ``PYMEM_ALLOCATOR_NOT_SET``."
msgstr "Standard: ``PYMEM_ALLOCATOR_NOT_SET``."

#: ../../c-api/init_config.rst:267
msgid "Set the LC_CTYPE locale to the user preferred locale."
msgstr "Ställ in LC_CTYPE locale till den locale som användaren föredrar."

#: ../../c-api/init_config.rst:269
msgid ""
"If equals to ``0``, set :c:member:`~PyPreConfig.coerce_c_locale` and "
":c:member:`~PyPreConfig.coerce_c_locale_warn` members to ``0``."
msgstr ""
"Om lika med ``0``, sätt medlemmarna :c:member:`~PyPreConfig.coerce_c_locale`"
" och :c:member:`~PyPreConfig.coerce_c_locale_warn` till ``0``."

#: ../../c-api/init_config.rst:272 ../../c-api/init_config.rst:283
msgid "See the :term:`locale encoding`."
msgstr "Se :term:`locale encoding`."

#: ../../c-api/init_config.rst:274 ../../c-api/init_config.rst:329
#: ../../c-api/init_config.rst:684
msgid "Default: ``1`` in Python config, ``0`` in isolated config."
msgstr ""
"Standard: ``1`` i Python-konfiguration, ``0`` i isolerad konfiguration."

#: ../../c-api/init_config.rst:278
msgid "If equals to ``2``, coerce the C locale."
msgstr "Om lika med ``2``, tvinga fram C locale."

#: ../../c-api/init_config.rst:280
msgid ""
"If equals to ``1``, read the LC_CTYPE locale to decide if it should be "
"coerced."
msgstr ""
"Om lika med ``1``, läs LC_CTYPE locale för att avgöra om den ska tvingas."

#: ../../c-api/init_config.rst:285 ../../c-api/init_config.rst:291
msgid "Default: ``-1`` in Python config, ``0`` in isolated config."
msgstr ""
"Standard: ``-1`` i Python-konfiguration, ``0`` i isolerad konfiguration."

#: ../../c-api/init_config.rst:289
msgid "If non-zero, emit a warning if the C locale is coerced."
msgstr "Om ej noll, avge en varning om C-landets språk är tvingat."

#: ../../c-api/init_config.rst:295
msgid ""
":ref:`Python Development Mode <devmode>`: see :c:member:`PyConfig.dev_mode`."
msgstr ""
":ref:`Python Development Mode <devmode>`: se :c:member:`PyConfig.dev_mode`."

#: ../../c-api/init_config.rst:298 ../../c-api/init_config.rst:693
#: ../../c-api/init_config.rst:735 ../../c-api/init_config.rst:1164
msgid "Default: ``-1`` in Python mode, ``0`` in isolated mode."
msgstr "Standard: ``-1`` i Python-läge, ``0`` i isolerat läge."

#: ../../c-api/init_config.rst:302
msgid "Isolated mode: see :c:member:`PyConfig.isolated`."
msgstr "Isolerat läge: se :c:member:`PyConfig.isolated`."

#: ../../c-api/init_config.rst:304 ../../c-api/init_config.rst:860
msgid "Default: ``0`` in Python mode, ``1`` in isolated mode."
msgstr "Standard: ``0`` i Python-läge, ``1`` i isolerat läge."

#: ../../c-api/init_config.rst:308
msgid "If non-zero:"
msgstr "Om ej noll:"

#: ../../c-api/init_config.rst:310
msgid "Set :c:member:`PyPreConfig.utf8_mode` to ``0``,"
msgstr "Sätt :c:member:`PyPreConfig.utf8_mode` till ``0``,"

#: ../../c-api/init_config.rst:311
msgid "Set :c:member:`PyConfig.filesystem_encoding` to ``\"mbcs\"``,"
msgstr "Sätt :c:member:`PyConfig.filesystem_encoding` till ``\"mbcs\"``,"

#: ../../c-api/init_config.rst:312
msgid "Set :c:member:`PyConfig.filesystem_errors` to ``\"replace\"``."
msgstr "Sätt :c:member:`PyConfig.filesystem_errors` till ``\"replace\"``."

#: ../../c-api/init_config.rst:314
msgid ""
"Initialized the from :envvar:`PYTHONLEGACYWINDOWSFSENCODING` environment "
"variable value."
msgstr ""

#: ../../c-api/init_config.rst:317 ../../c-api/init_config.rst:873
msgid ""
"Only available on Windows. ``#ifdef MS_WINDOWS`` macro can be used for "
"Windows specific code."
msgstr ""
"Endast tillgängligt på Windows. makrot ``#ifdef MS_WINDOWS`` kan användas "
"för Windows-specifik kod."

#: ../../c-api/init_config.rst:320 ../../c-api/init_config.rst:632
#: ../../c-api/init_config.rst:639 ../../c-api/init_config.rst:706
#: ../../c-api/init_config.rst:815 ../../c-api/init_config.rst:829
#: ../../c-api/init_config.rst:843 ../../c-api/init_config.rst:876
#: ../../c-api/init_config.rst:890 ../../c-api/init_config.rst:950
#: ../../c-api/init_config.rst:999 ../../c-api/init_config.rst:1059
#: ../../c-api/init_config.rst:1099 ../../c-api/init_config.rst:1128
#: ../../c-api/init_config.rst:1201
msgid "Default: ``0``."
msgstr "Standard: ``0``."

#: ../../c-api/init_config.rst:324
msgid ""
"If non-zero, :c:func:`Py_PreInitializeFromArgs` and "
":c:func:`Py_PreInitializeFromBytesArgs` parse their ``argv`` argument the "
"same way the regular Python parses command line arguments: see :ref:`Command"
" Line Arguments <using-on-cmdline>`."
msgstr ""
"Om icke-noll, analyserar :c:func:`Py_PreInitializeFromArgs` och "
":c:func:`Py_PreInitializeFromBytesArgs` sina ``argv`` argument på samma sätt"
" som vanliga Python analyserar kommandoradsargument: se :ref:`Command Line "
"Arguments <using-on-cmdline>`."

#: ../../c-api/init_config.rst:333
msgid ""
"Use :ref:`environment variables <using-on-envvars>`? See "
":c:member:`PyConfig.use_environment`."
msgstr ""
"Använda :ref:``miljövariabler <using-on-envvars>`? Se "
":c:member:`PyConfig.use_environment`."

#: ../../c-api/init_config.rst:336 ../../c-api/init_config.rst:1175
msgid "Default: ``1`` in Python config and ``0`` in isolated config."
msgstr ""
"Standard: ``1`` i Python-konfiguration och ``0`` i isolerad konfiguration."

#: ../../c-api/init_config.rst:340
msgid "If non-zero, enable the :ref:`Python UTF-8 Mode <utf8-mode>`."
msgstr ""
"Om värdet är annat än noll aktiveras :ref:`Python UTF-8 Mode <utf8-mode>`."

#: ../../c-api/init_config.rst:342
msgid ""
"Set to ``0`` or ``1`` by the :option:`-X utf8 <-X>` command line option and "
"the :envvar:`PYTHONUTF8` environment variable."
msgstr ""
"Sätts till ``0`` eller ``1`` med kommandoradsalternativet :option:`-X utf8 "
"<-X>` och miljövariabeln :envvar:`PYTHONUTF8`."

#: ../../c-api/init_config.rst:345
msgid "Also set to ``1`` if the ``LC_CTYPE`` locale is ``C`` or ``POSIX``."
msgstr ""
"Sätts också till ``1`` om ``LC_CTYPE`` locale är ``C`` eller ``POSIX``."

#: ../../c-api/init_config.rst:347
msgid "Default: ``-1`` in Python config and ``0`` in isolated config."
msgstr ""
"Standard: ``-1`` i Python-konfiguration och ``0`` i isolerad konfiguration."

#: ../../c-api/init_config.rst:353
msgid "Preinitialize Python with PyPreConfig"
msgstr "Förinitiera Python med PyPreConfig"

#: ../../c-api/init_config.rst:355
msgid "The preinitialization of Python:"
msgstr "Förinitialisering av Python:"

#: ../../c-api/init_config.rst:357
msgid "Set the Python memory allocators (:c:member:`PyPreConfig.allocator`)"
msgstr "Ange Pythons minnesallokatorer (:c:member:`PyPreConfig.allocator`)"

#: ../../c-api/init_config.rst:358
msgid "Configure the LC_CTYPE locale (:term:`locale encoding`)"
msgstr "Konfigurera LC_CTYPE-locale (:term:`locale encoding`)"

#: ../../c-api/init_config.rst:359
msgid ""
"Set the :ref:`Python UTF-8 Mode <utf8-mode>` "
"(:c:member:`PyPreConfig.utf8_mode`)"
msgstr ""
"Ställ in :ref:`Python UTF-8 Mode <utf8-mode>` "
"(:c:member:`PyPreConfig.utf8_mode`)"

#: ../../c-api/init_config.rst:362
msgid ""
"The current preconfiguration (``PyPreConfig`` type) is stored in "
"``_PyRuntime.preconfig``."
msgstr ""
"Den aktuella förkonfigurationen (av typen ``PyPreConfig``) lagras i "
"``_PyRuntime.preconfig``."

#: ../../c-api/init_config.rst:365
msgid "Functions to preinitialize Python:"
msgstr "Funktioner för att förinitialisera Python:"

#: ../../c-api/init_config.rst:369 ../../c-api/init_config.rst:375
#: ../../c-api/init_config.rst:384
msgid "Preinitialize Python from *preconfig* preconfiguration."
msgstr "Förinitiera Python från *preconfig* preconfiguration."

#: ../../c-api/init_config.rst:371 ../../c-api/init_config.rst:380
#: ../../c-api/init_config.rst:389
msgid "*preconfig* must not be ``NULL``."
msgstr "*preconfig* får inte vara ``NULL``."

#: ../../c-api/init_config.rst:377
msgid ""
"Parse *argv* command line arguments (bytes strings) if "
":c:member:`~PyPreConfig.parse_argv` of *preconfig* is non-zero."
msgstr ""
"Analysera *argv* kommandoradsargument (bytessträngar) om "
":c:member:`~PyPreConfig.parse_argv` i *preconfig* är ung."

#: ../../c-api/init_config.rst:386
msgid ""
"Parse *argv* command line arguments (wide strings) if "
":c:member:`~PyPreConfig.parse_argv` of *preconfig* is non-zero."
msgstr ""
"Analysera *argv* kommandoradsargument (breda strängar) om "
":c:member:`~PyPreConfig.parse_argv` i *preconfig* är ung."

#: ../../c-api/init_config.rst:391 ../../c-api/init_config.rst:1263
msgid ""
"The caller is responsible to handle exceptions (error or exit) using "
":c:func:`PyStatus_Exception` and :c:func:`Py_ExitStatusException`."
msgstr ""
"Anroparen ansvarar för att hantera undantag (error eller exit) med hjälp av "
":c:func:`PyStatus_Exception` och :c:func:`Py_ExitStatusException`."

#: ../../c-api/init_config.rst:394
msgid ""
"For :ref:`Python Configuration <init-python-config>` "
"(:c:func:`PyPreConfig_InitPythonConfig`), if Python is initialized with "
"command line arguments, the command line arguments must also be passed to "
"preinitialize Python, since they have an effect on the pre-configuration "
"like encodings. For example, the :option:`-X utf8 <-X>` command line option "
"enables the :ref:`Python UTF-8 Mode <utf8-mode>`."
msgstr ""
"För :ref:`Python Configuration <init-python-config>` "
"(:c:func:`PyPreConfig_InitPythonConfig`), om Python initieras med "
"kommandoradsargument, måste kommandoradsargumenten också skickas för att "
"förinitialisera Python, eftersom de har en effekt på förkonfigurationen som "
"kodningar. Till exempel aktiverar :option:`-X utf8 <-X>` "
"kommandoradsalternativet :ref:`Python UTF-8 Mode <utf8-mode>`."

#: ../../c-api/init_config.rst:401
msgid ""
"``PyMem_SetAllocator()`` can be called after :c:func:`Py_PreInitialize` and "
"before :c:func:`Py_InitializeFromConfig` to install a custom memory "
"allocator. It can be called before :c:func:`Py_PreInitialize` if "
":c:member:`PyPreConfig.allocator` is set to ``PYMEM_ALLOCATOR_NOT_SET``."
msgstr ""
"``PyMem_SetAllocator()`` kan anropas efter :c:func:`Py_PreInitialize` och "
"före :c:func:`Py_InitializeFromConfig` för att installera en anpassad "
"minnesallokator. Den kan anropas före :c:func:`Py_PreInitialize` om "
":c:member:`PyPreConfig.allocator` är satt till ``PYMEM_ALLOCATOR_NOT_SET``."

#: ../../c-api/init_config.rst:406
msgid ""
"Python memory allocation functions like :c:func:`PyMem_RawMalloc` must not "
"be used before the Python preinitialization, whereas calling directly "
"``malloc()`` and ``free()`` is always safe. :c:func:`Py_DecodeLocale` must "
"not be called before the Python preinitialization."
msgstr ""
"Python-minnesallokeringsfunktioner som :c:func:`PyMem_RawMalloc` får inte "
"användas före Pythons förinitialisering, medan det alltid är säkert att "
"anropa ``malloc()`` och ``free()`` direkt. :c:func:`Py_DecodeLocale` får "
"inte anropas före Pythons förinitialisering."

#: ../../c-api/init_config.rst:411
msgid ""
"Example using the preinitialization to enable the :ref:`Python UTF-8 Mode "
"<utf8-mode>`::"
msgstr ""
"Exempel på användning av förinitialisering för att aktivera :ref:`Python "
"UTF-8 Mode <utf8-mode>`::"

#: ../../c-api/init_config.rst:433
msgid "PyConfig"
msgstr "PyConfig"

#: ../../c-api/init_config.rst:437
msgid "Structure containing most parameters to configure Python."
msgstr ""
"Struktur som innehåller de flesta parametrar för att konfigurera Python."

#: ../../c-api/init_config.rst:439
msgid ""
"When done, the :c:func:`PyConfig_Clear` function must be used to release the"
" configuration memory."
msgstr ""
"När detta är gjort måste funktionen :c:func:`PyConfig_Clear` användas för "
"att frigöra konfigurationsminnet."

#: ../../c-api/init_config.rst:444
msgid "Structure methods:"
msgstr "Strukturmetoder:"

#: ../../c-api/init_config.rst:448
msgid ""
"Initialize configuration with the :ref:`Python Configuration <init-python-"
"config>`."
msgstr ""
"Initiera konfigurationen med :ref:`Python Configuration <init-python-"
"config>`."

#: ../../c-api/init_config.rst:453
msgid ""
"Initialize configuration with the :ref:`Isolated Configuration <init-"
"isolated-conf>`."
msgstr ""
"Initiera konfigurationen med :ref:`Isolated Configuration <init-isolated-"
"conf>`."

#: ../../c-api/init_config.rst:458
msgid "Copy the wide character string *str* into ``*config_str``."
msgstr "Kopiera den breda teckensträngen *str* till ``*config_str``."

#: ../../c-api/init_config.rst:460 ../../c-api/init_config.rst:467
#: ../../c-api/init_config.rst:474 ../../c-api/init_config.rst:482
#: ../../c-api/init_config.rst:488 ../../c-api/init_config.rst:505
msgid ":ref:`Preinitialize Python <c-preinit>` if needed."
msgstr ":ref:`Preinitialize Python <c-preinit>` om det behövs."

#: ../../c-api/init_config.rst:464
msgid ""
"Decode *str* using :c:func:`Py_DecodeLocale` and set the result into "
"``*config_str``."
msgstr ""
"Avkoda *str* med :c:func:`Py_DecodeLocale` och lägg in resultatet i "
"``*config_str``."

#: ../../c-api/init_config.rst:471
msgid ""
"Set command line arguments (:c:member:`~PyConfig.argv` member of *config*) "
"from the *argv* list of wide character strings."
msgstr ""
"Ange kommandoradsargument (:c:member:`~PyConfig.argv` member of *config*) "
"från listan *argv* med breda teckensträngar."

#: ../../c-api/init_config.rst:478
msgid ""
"Set command line arguments (:c:member:`~PyConfig.argv` member of *config*) "
"from the *argv* list of bytes strings. Decode bytes using "
":c:func:`Py_DecodeLocale`."
msgstr ""
"Ange kommandoradsargument (:c:member:`~PyConfig.argv` member of *config*) "
"från listan *argv* med bytessträngar. Avkoda bytes med hjälp av "
":c:func:`Py_DecodeLocale`."

#: ../../c-api/init_config.rst:486
msgid "Set the list of wide strings *list* to *length* and *items*."
msgstr "Ställ in listan med breda strängar *list* till *length* och *items*."

#: ../../c-api/init_config.rst:492
msgid "Read all Python configuration."
msgstr "Läs alla Python-konfigurationer."

#: ../../c-api/init_config.rst:494
msgid "Fields which are already initialized are left unchanged."
msgstr "Fält som redan är initialiserade lämnas oförändrade."

#: ../../c-api/init_config.rst:496
msgid ""
"Fields for :ref:`path configuration <init-path-config>` are no longer "
"calculated or modified when calling this function, as of Python 3.11."
msgstr ""
"Fält för :ref:`path configuration <init-path-config>` beräknas eller ändras "
"inte längre vid anrop av denna funktion, från och med Python 3.11."

#: ../../c-api/init_config.rst:499 ../../c-api/init_config.rst:979
msgid ""
"The :c:func:`PyConfig_Read` function only parses :c:member:`PyConfig.argv` "
"arguments once: :c:member:`PyConfig.parse_argv` is set to ``2`` after "
"arguments are parsed. Since Python arguments are strippped from "
":c:member:`PyConfig.argv`, parsing arguments twice would parse the "
"application options as Python options."
msgstr ""

#: ../../c-api/init_config.rst:507
msgid ""
"The :c:member:`PyConfig.argv` arguments are now only parsed once, "
":c:member:`PyConfig.parse_argv` is set to ``2`` after arguments are parsed, "
"and arguments are only parsed if :c:member:`PyConfig.parse_argv` equals "
"``1``."
msgstr ""
"Argumenten :c:member:`PyConfig.argv` analyseras nu endast en gång, "
":c:member:`PyConfig.parse_argv` sätts till ``2`` efter att argumenten har "
"analyserats och argumenten analyseras endast om "
":c:member:`PyConfig.parse_argv` är lika med ``1``."

#: ../../c-api/init_config.rst:513
msgid ""
":c:func:`PyConfig_Read` no longer calculates all paths, and so fields listed"
" under :ref:`Python Path Configuration <init-path-config>` may no longer be "
"updated until :c:func:`Py_InitializeFromConfig` is called."
msgstr ""
":c:func:`PyConfig_Read` beräknar inte längre alla sökvägar, och därför kan "
"fält som listas under :ref:`Python Path Configuration <init-path-config>` "
"inte längre uppdateras förrän :c:func:`Py_InitializeFromConfig` anropas."

#: ../../c-api/init_config.rst:521
msgid "Release configuration memory."
msgstr "Frigör konfigurationsminnet."

#: ../../c-api/init_config.rst:523
msgid ""
"Most ``PyConfig`` methods :ref:`preinitialize Python <c-preinit>` if needed."
" In that case, the Python preinitialization configuration "
"(:c:type:`PyPreConfig`) in based on the :c:type:`PyConfig`. If configuration"
" fields which are in common with :c:type:`PyPreConfig` are tuned, they must "
"be set before calling a :c:type:`PyConfig` method:"
msgstr ""
"De flesta ``PyConfig``-metoder :ref:`förinitiera Python <c-preinit>`` om det"
" behövs. I så fall baseras Pythons förinitialiseringskonfiguration "
"(:c:type:`PyPreConfig`) på :c:type:`PyConfig`. Om konfigurationsfält som är "
"gemensamma med :c:type:`PyPreConfig` är inställda, måste de ställas in innan"
" en :c:type:`PyConfig`-metod anropas:"

#: ../../c-api/init_config.rst:529
msgid ":c:member:`PyConfig.dev_mode`"
msgstr ":c:member:`PyConfig.dev_mode`"

#: ../../c-api/init_config.rst:530
msgid ":c:member:`PyConfig.isolated`"
msgstr ":c:member:`PyConfig.isolated`"

#: ../../c-api/init_config.rst:531
msgid ":c:member:`PyConfig.parse_argv`"
msgstr ":c:member:`PyConfig.parse_argv`"

#: ../../c-api/init_config.rst:532
msgid ":c:member:`PyConfig.use_environment`"
msgstr ":c:member:`PyConfig.use_environment`"

#: ../../c-api/init_config.rst:534
msgid ""
"Moreover, if :c:func:`PyConfig_SetArgv` or :c:func:`PyConfig_SetBytesArgv` "
"is used, this method must be called before other methods, since the "
"preinitialization configuration depends on command line arguments (if "
":c:member:`~PyConfig.parse_argv` is non-zero)."
msgstr ""
"Dessutom, om :c:func:`PyConfig_SetArgv` eller "
":c:func:`PyConfig_SetBytesArgv` används, måste denna metod anropas före "
"andra metoder, eftersom konfigurationen före initieringen beror på "
"kommandoradsargument (om :c:member:`~PyConfig.parse_argv` inte är noll)."

#: ../../c-api/init_config.rst:539
msgid ""
"The caller of these methods is responsible to handle exceptions (error or "
"exit) using ``PyStatus_Exception()`` and ``Py_ExitStatusException()``."
msgstr ""
"Den som anropar dessa metoder är ansvarig för att hantera undantag (fel "
"eller exit) med hjälp av ``PyStatus_Exception()`` och "
"``Py_ExitStatusException()``."

#: ../../c-api/init_config.rst:548
msgid "Command line arguments: :data:`sys.argv`."
msgstr ""

#: ../../c-api/init_config.rst:550
msgid ""
"Set :c:member:`~PyConfig.parse_argv` to ``1`` to parse "
":c:member:`~PyConfig.argv` the same way the regular Python parses Python "
"command line arguments and then to strip Python arguments from "
":c:member:`~PyConfig.argv`."
msgstr ""
"Sätt :c:member:`~PyConfig.parse_argv` till ``1`` för att analysera "
":c:member:`~PyConfig.argv` på samma sätt som vanliga Python analyserar "
"Python-kommandoradsargument och sedan ta bort Python-argument från "
":c:member:`~PyConfig.argv`."

#: ../../c-api/init_config.rst:555
msgid ""
"If :c:member:`~PyConfig.argv` is empty, an empty string is added to ensure "
"that :data:`sys.argv` always exists and is never empty."
msgstr ""
"Om :c:member:`~PyConfig.argv` är tom, läggs en tom sträng till för att "
"säkerställa att :data:`sys.argv` alltid existerar och aldrig är tom."

#: ../../c-api/init_config.rst:558 ../../c-api/init_config.rst:585
#: ../../c-api/init_config.rst:597 ../../c-api/init_config.rst:605
#: ../../c-api/init_config.rst:713 ../../c-api/init_config.rst:722
#: ../../c-api/init_config.rst:804 ../../c-api/init_config.rst:920
#: ../../c-api/init_config.rst:1018 ../../c-api/init_config.rst:1036
#: ../../c-api/init_config.rst:1050 ../../c-api/init_config.rst:1067
#: ../../c-api/init_config.rst:1080 ../../c-api/init_config.rst:1088
msgid "Default: ``NULL``."
msgstr "Standard: ``NULL``."

#: ../../c-api/init_config.rst:560
msgid "See also the :c:member:`~PyConfig.orig_argv` member."
msgstr "Se även :c:member:`~PyConfig.orig_argv`-medlemmen."

#: ../../c-api/init_config.rst:564
msgid ""
"If equals to zero, ``Py_RunMain()`` prepends a potentially unsafe path to "
":data:`sys.path` at startup:"
msgstr ""
"Om den är lika med noll, lägger ``Py_RunMain()`` till en potentiellt osäker "
"sökväg till :data:`sys.path` vid uppstart:"

#: ../../c-api/init_config.rst:567
msgid ""
"If :c:member:`argv[0] <PyConfig.argv>` is equal to ``L\"-m\"`` (``python -m "
"module``), prepend the current working directory."
msgstr ""
"Om :c:member:`argv[0] <PyConfig.argv>` är lika med ``L\"-m\"`` (``python -m "
"module``), lägg till den aktuella arbetskatalogen."

#: ../../c-api/init_config.rst:569
msgid ""
"If running a script (``python script.py``), prepend the script's directory."
"  If it's a symbolic link, resolve symbolic links."
msgstr ""
"Om du kör ett skript (``python script.py``), lägg till skriptets katalog.  "
"Om det är en symbolisk länk, lös symboliska länkar."

#: ../../c-api/init_config.rst:571
msgid ""
"Otherwise (``python -c code`` and ``python``), prepend an empty string, "
"which means the current working directory."
msgstr ""
"I annat fall (``python -c code`` och ``python``) läggs en tom sträng till, "
"vilket innebär den aktuella arbetskatalogen."

#: ../../c-api/init_config.rst:574
msgid ""
"Set to ``1`` by the :option:`-P` command line option and the "
":envvar:`PYTHONSAFEPATH` environment variable."
msgstr ""
"Sätts till ``1`` med kommandoradsalternativet :option:`-P` och "
"miljövariabeln :envvar:`PYTHONSAFEPATH`."

#: ../../c-api/init_config.rst:577
msgid "Default: ``0`` in Python config, ``1`` in isolated config."
msgstr ""
"Standard: ``0`` i Python-konfiguration, ``1`` i isolerad konfiguration."

#: ../../c-api/init_config.rst:583
msgid ":data:`sys.base_exec_prefix`."
msgstr ":data:`sys.base_exec_prefix`."

#: ../../c-api/init_config.rst:587 ../../c-api/init_config.rst:599
#: ../../c-api/init_config.rst:607 ../../c-api/init_config.rst:715
#: ../../c-api/init_config.rst:724 ../../c-api/init_config.rst:937
#: ../../c-api/init_config.rst:1020
msgid ""
"Part of the :ref:`Python Path Configuration <init-path-config>` output."
msgstr "Del av :ref:`Python Path Configuration <init-path-config>` utdata."

#: ../../c-api/init_config.rst:591
msgid "Python base executable: :data:`sys._base_executable`."
msgstr "Körbar Python-bas: :data:`sys._base_executable`."

#: ../../c-api/init_config.rst:593
msgid "Set by the :envvar:`__PYVENV_LAUNCHER__` environment variable."
msgstr "Ställs in av miljövariabeln :envvar:`__PYVENV_LAUNCHER__`."

#: ../../c-api/init_config.rst:595
msgid "Set from :c:member:`PyConfig.executable` if ``NULL``."
msgstr "Set från :c:member:`PyConfig.executable` if ``NULL``."

#: ../../c-api/init_config.rst:603
msgid ":data:`sys.base_prefix`."
msgstr ":data:`sys.base_prefix`."

#: ../../c-api/init_config.rst:611
msgid ""
"If equals to ``0`` and :c:member:`~PyConfig.configure_c_stdio` is non-zero, "
"disable buffering on the C streams stdout and stderr."
msgstr ""
"Om lika med ``0`` och :c:member:`~PyConfig.configure_c_stdio` är icke-noll, "
"inaktivera buffring på C-strömmarna stdout och stderr."

#: ../../c-api/init_config.rst:614
msgid ""
"Set to ``0`` by the :option:`-u` command line option and the "
":envvar:`PYTHONUNBUFFERED` environment variable."
msgstr ""
"Sätts till ``0`` med kommandoradsalternativet :option:`-u` och "
"miljövariabeln :envvar:`PYTHONUNBUFFERED`."

#: ../../c-api/init_config.rst:617
msgid "stdin is always opened in buffered mode."
msgstr "stdin öppnas alltid i buffrat läge."

#: ../../c-api/init_config.rst:619 ../../c-api/init_config.rst:652
#: ../../c-api/init_config.rst:1116 ../../c-api/init_config.rst:1233
msgid "Default: ``1``."
msgstr "Standard: ``1``."

#: ../../c-api/init_config.rst:623
msgid ""
"If equals to ``1``, issue a warning when comparing :class:`bytes` or "
":class:`bytearray` with :class:`str`, or comparing :class:`bytes` with "
":class:`int`."
msgstr ""
"Om lika med ``1``, utfärda en varning när du jämför :class:`bytes` eller "
":class:`bytearray` med :class:`str`, eller jämför :class:`bytes` med "
":class:`int`."

#: ../../c-api/init_config.rst:627
msgid ""
"If equal or greater to ``2``, raise a :exc:`BytesWarning` exception in these"
" cases."
msgstr ""
"Om lika med eller större än ``2``, skapa ett :exc:`BytesWarning` undantag i "
"dessa fall."

#: ../../c-api/init_config.rst:630
msgid "Incremented by the :option:`-b` command line option."
msgstr "Ökas med kommandoradsalternativet :option:`-b`."

#: ../../c-api/init_config.rst:636
msgid ""
"If non-zero, emit a :exc:`EncodingWarning` warning when "
":class:`io.TextIOWrapper` uses its default encoding. See :ref:`io-encoding-"
"warning` for details."
msgstr ""
"Om ung, avge en :exc:`EncodingWarning`-varning när :class:`io.TextIOWrapper`"
" använder sin standardkodning. Se :ref:`io-encoding-warning` för detaljer."

#: ../../c-api/init_config.rst:645
msgid ""
"If equals to ``0``, disables the inclusion of the end line and column "
"mappings in code objects. Also disables traceback printing carets to "
"specific error locations."
msgstr ""
"Om lika med ``0``, inaktiveras inkludering av slutrad och kolumnmappningar i"
" kodobjekt. Inaktiverar också spårningsutskrift av carets till specifika "
"felplatser."

#: ../../c-api/init_config.rst:649
msgid ""
"Set to ``0`` by the :envvar:`PYTHONNODEBUGRANGES` environment variable and "
"by the :option:`-X no_debug_ranges <-X>` command line option."
msgstr ""
"Sätts till ``0`` av miljövariabeln :envvar:`PYTHONNODEBUGRANGES` och av "
"kommandoradsalternativet :option:`-X no_debug_ranges <-X>`."

#: ../../c-api/init_config.rst:658
msgid ""
"Control the validation behavior of hash-based ``.pyc`` files: value of the "
":option:`--check-hash-based-pycs` command line option."
msgstr ""
"Kontrollera valideringsbeteendet för hash-baserade ``.pyc``-filer: värdet av"
" kommandoradsalternativet :option:`--check-hash-based-pycs`."

#: ../../c-api/init_config.rst:661
msgid "Valid values:"
msgstr "Giltiga värden:"

#: ../../c-api/init_config.rst:663
msgid ""
"``L\"always\"``: Hash the source file for invalidation regardless of value "
"of the 'check_source' flag."
msgstr ""
"``L\"alltid\"``: Hashar källfilen för ogiltigförklaring oavsett värdet på "
"flaggan \"check_source\"."

#: ../../c-api/init_config.rst:665
msgid "``L\"never\"``: Assume that hash-based pycs always are valid."
msgstr "``L\"aldrig\"``: Anta att hash-baserade pycs alltid är giltiga."

#: ../../c-api/init_config.rst:666
msgid ""
"``L\"default\"``: The 'check_source' flag in hash-based pycs determines "
"invalidation."
msgstr ""
"``L\"standard\"``: Flaggan \"check_source\" i hash-baserade pycs avgör "
"ogiltighet."

#: ../../c-api/init_config.rst:669
msgid "Default: ``L\"default\"``."
msgstr "Standard: ``L\"default\"``."

#: ../../c-api/init_config.rst:671
msgid "See also :pep:`552` \"Deterministic pycs\"."
msgstr "Se även :pep:`552` \"Deterministic pycs\"."

#: ../../c-api/init_config.rst:675
msgid "If non-zero, configure C standard streams:"
msgstr "Om ej noll, konfigurera C-standardströmmar:"

#: ../../c-api/init_config.rst:677
msgid ""
"On Windows, set the binary mode (``O_BINARY``) on stdin, stdout and stderr."
msgstr ""
"I Windows ställer du in binärt läge (``O_BINARY``) på stdin, stdout och "
"stderr."

#: ../../c-api/init_config.rst:679
msgid ""
"If :c:member:`~PyConfig.buffered_stdio` equals zero, disable buffering of "
"stdin, stdout and stderr streams."
msgstr ""
"Om :c:member:`~PyConfig.buffered_stdio` är lika med noll, inaktiveras "
"buffring av strömmarna stdin, stdout och stderr."

#: ../../c-api/init_config.rst:681
msgid ""
"If :c:member:`~PyConfig.interactive` is non-zero, enable stream buffering on"
" stdin and stdout (only stdout on Windows)."
msgstr ""
"Om :c:member:`~PyConfig.interactive` inte är noll, aktivera strömbuffring på"
" stdin och stdout (endast stdout på Windows)."

#: ../../c-api/init_config.rst:688
msgid "If non-zero, enable the :ref:`Python Development Mode <devmode>`."
msgstr ""
"Om värdet är annat än noll aktiveras :ref:`Python Development Mode "
"<devmode>`."

#: ../../c-api/init_config.rst:690
msgid ""
"Set to ``1`` by the :option:`-X dev <-X>` option and the "
":envvar:`PYTHONDEVMODE` environment variable."
msgstr ""
"Sätts till ``1`` med alternativet :option:`-X dev <-X>` och miljövariabeln "
":envvar:`PYTHONDEVMODE`."

#: ../../c-api/init_config.rst:697
msgid "Dump Python references?"
msgstr "Dumpa Python-referenser?"

#: ../../c-api/init_config.rst:699
msgid "If non-zero, dump all objects which are still alive at exit."
msgstr ""
"Om värdet inte är noll, dumpas alla objekt som fortfarande lever vid avslut."

#: ../../c-api/init_config.rst:701
msgid "Set to ``1`` by the :envvar:`PYTHONDUMPREFS` environment variable."
msgstr "Sätts till ``1`` av miljövariabeln :envvar:`PYTHONDUMPREFS`."

#: ../../c-api/init_config.rst:703
msgid ""
"Need a special build of Python with the ``Py_TRACE_REFS`` macro defined: see"
" the :option:`configure --with-trace-refs option <--with-trace-refs>`."
msgstr ""

#: ../../c-api/init_config.rst:710
msgid ""
"The site-specific directory prefix where the platform-dependent Python files"
" are installed: :data:`sys.exec_prefix`."
msgstr ""
"Det platsspecifika katalogprefixet där de plattformsberoende Python-filerna "
"installeras: :data:`sys.exec_prefix`."

#: ../../c-api/init_config.rst:719
msgid ""
"The absolute path of the executable binary for the Python interpreter: "
":data:`sys.executable`."
msgstr ""
"Den absoluta sökvägen till den körbara binärfilen för Python-tolken: "
":data:`sys.executable`."

#: ../../c-api/init_config.rst:728
msgid "Enable faulthandler?"
msgstr "Aktivera Faulthandler?"

#: ../../c-api/init_config.rst:730
msgid "If non-zero, call :func:`faulthandler.enable` at startup."
msgstr "Om ej noll, anropa :func:`faulthandler.enable` vid uppstart."

#: ../../c-api/init_config.rst:732
msgid ""
"Set to ``1`` by :option:`-X faulthandler <-X>` and the "
":envvar:`PYTHONFAULTHANDLER` environment variable."
msgstr ""
"Sätts till ``1`` av :option:`-X faulthandler <-X>` och miljövariabeln "
":envvar:`PYTHONFAULTHANDLER`."

#: ../../c-api/init_config.rst:739
msgid ""
":term:`Filesystem encoding <filesystem encoding and error handler>`: "
":func:`sys.getfilesystemencoding`."
msgstr ""
":term:`Filesystem encoding <filesystem encoding and error handler>`: "
":func:`sys.getfilesystemencoding`."

#: ../../c-api/init_config.rst:742
msgid "On macOS, Android and VxWorks: use ``\"utf-8\"`` by default."
msgstr "På macOS, Android och VxWorks: använd ``\"utf-8\"`` som standard."

#: ../../c-api/init_config.rst:744
msgid ""
"On Windows: use ``\"utf-8\"`` by default, or ``\"mbcs\"`` if "
":c:member:`~PyPreConfig.legacy_windows_fs_encoding` of :c:type:`PyPreConfig`"
" is non-zero."
msgstr ""
"På Windows: använd ``\"utf-8\"`` som standard, eller ``\"mbcs\"`` om "
":c:member:`~PyPreConfig.legacy_windows_fs_encoding` av :c:type:`PyPreConfig`"
" är icke-noll."

#: ../../c-api/init_config.rst:748
msgid "Default encoding on other platforms:"
msgstr "Standardkodning på andra plattformar:"

#: ../../c-api/init_config.rst:750
msgid "``\"utf-8\"`` if :c:member:`PyPreConfig.utf8_mode` is non-zero."
msgstr "``\"utf-8\"`` om :c:member:`PyPreConfig.utf8_mode` inte är noll."

#: ../../c-api/init_config.rst:751
msgid ""
"``\"ascii\"`` if Python detects that ``nl_langinfo(CODESET)`` announces the "
"ASCII encoding, whereas the ``mbstowcs()`` function decodes from a different"
" encoding (usually Latin1)."
msgstr ""
"``\"ascii\"`` om Python upptäcker att ``nl_langinfo(CODESET)`` meddelar "
"ASCII-kodning, medan funktionen ``mbstowcs()`` avkodar från en annan kodning"
" (vanligtvis Latin1)."

#: ../../c-api/init_config.rst:754
msgid "``\"utf-8\"`` if ``nl_langinfo(CODESET)`` returns an empty string."
msgstr "``\"utf-8\"`` om ``nl_langinfo(CODESET)`` returnerar en tom sträng."

#: ../../c-api/init_config.rst:755
msgid ""
"Otherwise, use the :term:`locale encoding`: ``nl_langinfo(CODESET)`` result."
msgstr ""
"Annars används :term:`locale encoding`: ``nl_langinfo(CODESET)`` resultat."

#: ../../c-api/init_config.rst:758
msgid ""
"At Python startup, the encoding name is normalized to the Python codec name."
" For example, ``\"ANSI_X3.4-1968\"`` is replaced with ``\"ascii\"``."
msgstr ""
"Vid Python-start normaliseras kodningsnamnet till Python-codec-namnet. Till "
"exempel ersätts ``\"ANSI_X3.4-1968\"`` med ``\"ascii\"``."

#: ../../c-api/init_config.rst:761
msgid "See also the :c:member:`~PyConfig.filesystem_errors` member."
msgstr "Se även :c:member:`~PyConfig.filesystem_errors` member."

#: ../../c-api/init_config.rst:765
msgid ""
":term:`Filesystem error handler <filesystem encoding and error handler>`: "
":func:`sys.getfilesystemencodeerrors`."
msgstr ""
":term:`Filsystemfelhanterare <filesystem encoding and error handler>`: "
":func:`sys.getfilesystemencodeerrors`."

#: ../../c-api/init_config.rst:768
msgid ""
"On Windows: use ``\"surrogatepass\"`` by default, or ``\"replace\"``  if "
":c:member:`~PyPreConfig.legacy_windows_fs_encoding` of :c:type:`PyPreConfig`"
" is non-zero."
msgstr ""
"På Windows: använd ``\"surrogatepass\"`` som standard, eller ``\"replace\"``"
" om :c:member:`~PyPreConfig.legacy_windows_fs_encoding` av "
":c:type:`PyPreConfig` inte är noll."

#: ../../c-api/init_config.rst:772
msgid "On other platforms: use ``\"surrogateescape\"`` by default."
msgstr "På andra plattformar: använd ``\"surrogateescape\"`` som standard."

#: ../../c-api/init_config.rst:774
msgid "Supported error handlers:"
msgstr "Felhanterare som stöds:"

#: ../../c-api/init_config.rst:776
msgid "``\"strict\"``"
msgstr "``\"strikt\"``"

#: ../../c-api/init_config.rst:777
msgid "``\"surrogateescape\"``"
msgstr "``\"surrogatlandskap\"``"

#: ../../c-api/init_config.rst:778
msgid "``\"surrogatepass\"`` (only supported with the UTF-8 encoding)"
msgstr "``\"surrogatepass\"`` (stöds endast med UTF-8-kodning)"

#: ../../c-api/init_config.rst:780
msgid "See also the :c:member:`~PyConfig.filesystem_encoding` member."
msgstr "Se även medlemmen :c:member:`~PyConfig.filesystem_encoding`."

#: ../../c-api/init_config.rst:785
msgid "Randomized hash function seed."
msgstr "Slumpmässigt utsäde för hashfunktion."

#: ../../c-api/init_config.rst:787
msgid ""
"If :c:member:`~PyConfig.use_hash_seed` is zero, a seed is chosen randomly at"
" Python startup, and :c:member:`~PyConfig.hash_seed` is ignored."
msgstr ""
"Om :c:member:`~PyConfig.use_hash_seed` är noll, väljs ett frö slumpmässigt "
"vid Python-start och :c:member:`~PyConfig.hash_seed` ignoreras."

#: ../../c-api/init_config.rst:790
msgid "Set by the :envvar:`PYTHONHASHSEED` environment variable."
msgstr "Ställs in av miljövariabeln :envvar:`PYTHONHASHSEED`."

#: ../../c-api/init_config.rst:792
msgid ""
"Default *use_hash_seed* value: ``-1`` in Python mode, ``0`` in isolated "
"mode."
msgstr ""
"Standardvärde för *use_hash_seed*: ``-1`` i Python-läge, ``0`` i isolerat "
"läge."

#: ../../c-api/init_config.rst:797
msgid "Python home directory."
msgstr ""

#: ../../c-api/init_config.rst:799
msgid ""
"If :c:func:`Py_SetPythonHome` has been called, use its argument if it is not"
" ``NULL``."
msgstr ""

#: ../../c-api/init_config.rst:802
msgid "Set by the :envvar:`PYTHONHOME` environment variable."
msgstr "Ställs in av miljövariabeln :envvar:`PYTHONHOME`."

#: ../../c-api/init_config.rst:806 ../../c-api/init_config.rst:902
#: ../../c-api/init_config.rst:922 ../../c-api/init_config.rst:1008
#: ../../c-api/init_config.rst:1038
msgid "Part of the :ref:`Python Path Configuration <init-path-config>` input."
msgstr "Del av :ref:`Python Path Configuration <init-path-config>` inmatning."

#: ../../c-api/init_config.rst:810
msgid "If non-zero, profile import time."
msgstr ""

#: ../../c-api/init_config.rst:812
msgid ""
"Set the ``1`` by the :option:`-X importtime <-X>` option and the "
":envvar:`PYTHONPROFILEIMPORTTIME` environment variable."
msgstr ""

#: ../../c-api/init_config.rst:819
msgid "Enter interactive mode after executing a script or a command."
msgstr ""
"Gå till interaktivt läge efter att du har kört ett skript eller ett "
"kommando."

#: ../../c-api/init_config.rst:821
msgid ""
"If greater than ``0``, enable inspect: when a script is passed as first "
"argument or the -c option is used, enter interactive mode after executing "
"the script or the command, even when :data:`sys.stdin` does not appear to be"
" a terminal."
msgstr ""
"Om större än ``0``, aktivera inspect: när ett skript skickas som första "
"argument eller alternativet -c används, gå till interaktivt läge efter att "
"skriptet eller kommandot har exekverats, även om :data:`sys.stdin` inte "
"verkar vara en terminal."

#: ../../c-api/init_config.rst:826
msgid ""
"Incremented by the :option:`-i` command line option. Set to ``1`` if the "
":envvar:`PYTHONINSPECT` environment variable is non-empty."
msgstr ""
"Ökas med kommandoradsalternativet :option:`-i`. Sätts till ``1`` om "
"miljövariabeln :envvar:`PYTHONINSPECT` inte är tom."

#: ../../c-api/init_config.rst:833
msgid "Install Python signal handlers?"
msgstr "Installera Python-signalhanterare?"

#: ../../c-api/init_config.rst:835 ../../c-api/init_config.rst:985
#: ../../c-api/init_config.rst:1006 ../../c-api/init_config.rst:1185
msgid "Default: ``1`` in Python mode, ``0`` in isolated mode."
msgstr "Standard: ``1`` i Python-läge, ``0`` i isolerat läge."

#: ../../c-api/init_config.rst:839
msgid "If greater than ``0``, enable the interactive mode (REPL)."
msgstr "Om större än ``0``, aktivera det interaktiva läget (REPL)."

#: ../../c-api/init_config.rst:841
msgid "Incremented by the :option:`-i` command line option."
msgstr "Ökas med kommandoradsalternativet :option:`-i`."

#: ../../c-api/init_config.rst:847
msgid "If greater than ``0``, enable isolated mode:"
msgstr "Om större än ``0``, aktivera isolerat läge:"

#: ../../c-api/init_config.rst:849
msgid ""
"Set :c:member:`~PyConfig.safe_path` to ``1``: don't prepend a potentially "
"unsafe path to :data:`sys.path` at Python startup."
msgstr ""

#: ../../c-api/init_config.rst:852 ../../c-api/init_config.rst:1483
msgid "Set :c:member:`~PyConfig.use_environment` to ``0``."
msgstr "Sätt :c:member:`~PyConfig.use_environment` till ``0``."

#: ../../c-api/init_config.rst:853
msgid ""
"Set :c:member:`~PyConfig.user_site_directory` to ``0``: don't add the user "
"site directory to :data:`sys.path`."
msgstr ""
"Sätt :c:member:`~PyConfig.user_site_directory` till ``0``: lägg inte till "
"användarkatalogen i :data:`sys.path`."

#: ../../c-api/init_config.rst:855
msgid ""
"Python REPL doesn't import :mod:`readline` nor enable default readline "
"configuration on interactive prompts."
msgstr ""
"Python REPL importerar inte :mod:`readline` eller aktiverar "
"standardkonfiguration för readline på interaktiva prompter."

#: ../../c-api/init_config.rst:858
msgid "Set to ``1`` by the :option:`-I` command line option."
msgstr "Sätts till ``1`` med kommandoradsalternativet :option:`-I`."

#: ../../c-api/init_config.rst:862
msgid "See also :c:member:`PyPreConfig.isolated`."
msgstr ""

#: ../../c-api/init_config.rst:866
msgid ""
"If non-zero, use :class:`io.FileIO` instead of "
":class:`!io._WindowsConsoleIO` for :data:`sys.stdin`, :data:`sys.stdout` and"
" :data:`sys.stderr`."
msgstr ""
"Om den inte är noll, använd :class:`io.FileIO` istället för "
":class:`!io._WindowsConsoleIO` för :data:`sys.stdin`, :data:`sys.stdout` och"
" :data:`sys.stderr`."

#: ../../c-api/init_config.rst:870
msgid ""
"Set to ``1`` if the :envvar:`PYTHONLEGACYWINDOWSSTDIO` environment variable "
"is set to a non-empty string."
msgstr ""
"Sätts till ``1`` om miljövariabeln :envvar:`PYTHONLEGACYWINDOWSSTDIO` är "
"satt till en icke-tom sträng."

#: ../../c-api/init_config.rst:878
msgid "See also the :pep:`528` (Change Windows console encoding to UTF-8)."
msgstr "Se även :pep:`528` (Ändra Windows-konsolens kodning till UTF-8)."

#: ../../c-api/init_config.rst:882
msgid ""
"If non-zero, dump statistics on :ref:`Python pymalloc memory allocator "
"<pymalloc>` at exit."
msgstr ""
"Om ej noll, dumpa statistik på :ref:`Python pymalloc memory allocator "
"<pymalloc>` vid avslut."

#: ../../c-api/init_config.rst:885
msgid "Set to ``1`` by the :envvar:`PYTHONMALLOCSTATS` environment variable."
msgstr "Sätts till ``1`` av miljövariabeln :envvar:`PYTHONMALLOCSTATS`."

#: ../../c-api/init_config.rst:887
msgid ""
"The option is ignored if Python is :option:`configured using the --without-"
"pymalloc option <--without-pymalloc>`."
msgstr ""
"Alternativet ignoreras om Python är :option:`konfigurerad med alternativet "
"--without-pymalloc <--without-pymalloc>`."

#: ../../c-api/init_config.rst:894
msgid "Platform library directory name: :data:`sys.platlibdir`."
msgstr "Katalognamn för plattformsbibliotek: :data:`sys.platlibdir`."

#: ../../c-api/init_config.rst:896
msgid "Set by the :envvar:`PYTHONPLATLIBDIR` environment variable."
msgstr "Ställs in av miljövariabeln :envvar:`PYTHONPLATLIBDIR`."

#: ../../c-api/init_config.rst:898
msgid ""
"Default: value of the ``PLATLIBDIR`` macro which is set by the "
":option:`configure --with-platlibdir option <--with-platlibdir>` (default: "
"``\"lib\"``, or ``\"DLLs\"`` on Windows)."
msgstr ""
"Standard: värdet på makrot ``PLATLIBDIR`` som anges av :option:`configure "
"--with-platlibdir option <--with-platlibdir>` (standard: ``\"lib\"``, eller "
"``\"DLLs\"`` på Windows)."

#: ../../c-api/init_config.rst:906
msgid ""
"This macro is now used on Windows to locate the standard library extension "
"modules, typically under ``DLLs``. However, for compatibility, note that "
"this value is ignored for any non-standard layouts, including in-tree builds"
" and virtual environments."
msgstr ""
"Detta makro används nu i Windows för att lokalisera standardbibliotekets "
"tilläggsmoduler, vanligtvis under ``DLLs``. Av kompatibilitetsskäl bör du "
"dock notera att detta värde ignoreras för alla icke-standardiserade "
"layouter, inklusive in-tree builds och virtuella miljöer."

#: ../../c-api/init_config.rst:915
msgid ""
"Module search paths (:data:`sys.path`) as a string separated by ``DELIM`` "
"(:data:`os.pathsep`)."
msgstr ""
"Sökvägar för modul (:data:`sys.path`) som en sträng separerad med ``DELIM`` "
"(:data:`os.pathsep`)."

#: ../../c-api/init_config.rst:918
msgid "Set by the :envvar:`PYTHONPATH` environment variable."
msgstr "Ställs in av miljövariabeln :envvar:`PYTHONPATH`."

#: ../../c-api/init_config.rst:927
msgid "Module search paths: :data:`sys.path`."
msgstr "Sökvägar för modul: :data:`sys.path`."

#: ../../c-api/init_config.rst:929
msgid ""
"If :c:member:`~PyConfig.module_search_paths_set` is equal to ``0``, "
":c:func:`Py_InitializeFromConfig` will replace "
":c:member:`~PyConfig.module_search_paths` and sets "
":c:member:`~PyConfig.module_search_paths_set` to ``1``."
msgstr ""
"Om :c:member:`~PyConfig.module_search_paths_set` är lika med ``0``, kommer "
":c:func:`Py_InitializeFromConfig` att ersätta "
":c:member:`~PyConfig.module_search_paths` och sätter "
":c:member:`~PyConfig.module_search_paths_set` till ``1``."

#: ../../c-api/init_config.rst:934
msgid ""
"Default: empty list (``module_search_paths``) and ``0`` "
"(``module_search_paths_set``)."
msgstr ""
"Standard: tom lista (``module_search_paths``) och ``0`` "
"(``module_search_paths_set``)."

#: ../../c-api/init_config.rst:941
msgid "Compilation optimization level:"
msgstr "Nivå för kompileringsoptimering:"

#: ../../c-api/init_config.rst:943
msgid "``0``: Peephole optimizer, set ``__debug__`` to ``True``."
msgstr "``0``: Peephole optimizer, ställ in ``__debug__`` till ``True``."

#: ../../c-api/init_config.rst:944
msgid "``1``: Level 0, remove assertions, set ``__debug__`` to ``False``."
msgstr "``1``: Nivå 0, ta bort påståenden, sätt ``__debug__`` till ``False``."

#: ../../c-api/init_config.rst:945
msgid "``2``: Level 1, strip docstrings."
msgstr "``2``: Nivå 1, remsa docstrings."

#: ../../c-api/init_config.rst:947
msgid ""
"Incremented by the :option:`-O` command line option. Set to the "
":envvar:`PYTHONOPTIMIZE` environment variable value."
msgstr ""
"Ökas med kommandoradsalternativet :option:`-O`. Sätts till värdet för "
"miljövariabeln :envvar:`PYTHONOPTIMIZE`."

#: ../../c-api/init_config.rst:954
msgid ""
"The list of the original command line arguments passed to the Python "
"executable: :data:`sys.orig_argv`."
msgstr ""
"Listan över de ursprungliga kommandoradsargumenten som skickades till "
"Python-körprogrammet: :data:`sys.orig_argv`."

#: ../../c-api/init_config.rst:957
msgid ""
"If :c:member:`~PyConfig.orig_argv` list is empty and "
":c:member:`~PyConfig.argv` is not a list only containing an empty string, "
":c:func:`PyConfig_Read` copies :c:member:`~PyConfig.argv` into "
":c:member:`~PyConfig.orig_argv` before modifying :c:member:`~PyConfig.argv` "
"(if :c:member:`~PyConfig.parse_argv` is non-zero)."
msgstr ""
"Om listan :c:member:`~PyConfig.orig_argv` är tom och "
":c:member:`~PyConfig.argv` inte är en lista som bara innehåller en tom "
"sträng, kopierar :c:func:`PyConfig_Read` :c:member:`~PyConfig.argv` till "
":c:member:`~PyConfig.orig_argv` innan den modifierar "
":c:member:`~PyConfig.argv` (om :c:member:`~PyConfig.parse_argv` inte är "
"noll)."

#: ../../c-api/init_config.rst:964
msgid ""
"See also the :c:member:`~PyConfig.argv` member and the "
":c:func:`Py_GetArgcArgv` function."
msgstr ""
"Se även medlemmen :c:member:`~PyConfig.argv` och funktionen "
":c:func:`Py_GetArgcArgv`."

#: ../../c-api/init_config.rst:967 ../../c-api/init_config.rst:1220
#: ../../c-api/init_config.rst:1239
msgid "Default: empty list."
msgstr "Standard: tom lista."

#: ../../c-api/init_config.rst:973
msgid "Parse command line arguments?"
msgstr "Analysera kommandoradsargument?"

#: ../../c-api/init_config.rst:975
msgid ""
"If equals to ``1``, parse :c:member:`~PyConfig.argv` the same way the "
"regular Python parses :ref:`command line arguments <using-on-cmdline>`, and "
"strip Python arguments from :c:member:`~PyConfig.argv`."
msgstr ""
"Om lika med ``1``, analyseras :c:member:`~PyConfig.argv` på samma sätt som "
"vanliga Python analyserar :ref:`kommandoradsargument <using-on-cmdline>`, "
"och Python-argument tas bort från :c:member:`~PyConfig.argv`."

#: ../../c-api/init_config.rst:987
msgid ""
"The :c:member:`PyConfig.argv` arguments are now only parsed if "
":c:member:`PyConfig.parse_argv` equals to ``1``."
msgstr ""
"Argumenten i :c:member:`PyConfig.argv` analyseras nu endast om "
":c:member:`PyConfig.parse_argv` är lika med ``1``."

#: ../../c-api/init_config.rst:993
msgid ""
"Parser debug mode. If greater than ``0``, turn on parser debugging output "
"(for expert only, depending on compilation options)."
msgstr ""
"Felsökningsläge för parser. Om större än ``0``, aktivera "
"felsökningsutmatning för parser (endast för experter, beroende på "
"kompileringsalternativ)."

#: ../../c-api/init_config.rst:996
msgid ""
"Incremented by the :option:`-d` command line option. Set to the "
":envvar:`PYTHONDEBUG` environment variable value."
msgstr ""
"Ökas med kommandoradsalternativet :option:`-d`. Sätts till värdet för "
"miljövariabeln :envvar:`PYTHONDEBUG`."

#: ../../c-api/init_config.rst:1003
msgid ""
"If non-zero, calculation of path configuration is allowed to log warnings "
"into ``stderr``. If equals to ``0``, suppress these warnings."
msgstr ""
"Om ej noll, tillåts beräkning av sökvägskonfiguration att logga varningar i "
"``stderr``. Om lika med ``0``, undertrycks dessa varningar."

#: ../../c-api/init_config.rst:1010
msgid "Now also applies on Windows."
msgstr "Gäller nu även på Windows."

#: ../../c-api/init_config.rst:1015
msgid ""
"The site-specific directory prefix where the platform independent Python "
"files are installed: :data:`sys.prefix`."
msgstr ""
"Det platsspecifika katalogprefixet där de plattformsoberoende Python-filerna"
" installeras: :data:`sys.prefix`."

#: ../../c-api/init_config.rst:1024
msgid ""
"Program name used to initialize :c:member:`~PyConfig.executable` and in "
"early error messages during Python initialization."
msgstr ""
"Programnamn som används för att initiera :c:member:`~PyConfig.executable` "
"och i tidiga felmeddelanden under Python-initialisering."

#: ../../c-api/init_config.rst:1027
msgid "If :func:`Py_SetProgramName` has been called, use its argument."
msgstr ""

#: ../../c-api/init_config.rst:1028
msgid "On macOS, use :envvar:`PYTHONEXECUTABLE` environment variable if set."
msgstr ""
"På macOS, använd :envvar:`PYTHONEXECUTABLE` miljövariabel om den är "
"inställd."

#: ../../c-api/init_config.rst:1029
msgid ""
"If the ``WITH_NEXT_FRAMEWORK`` macro is defined, use "
":envvar:`__PYVENV_LAUNCHER__` environment variable if set."
msgstr ""
"Om makrot ``WITH_NEXT_FRAMEWORK`` är definierat, använd "
":envvar:`__PYVENV_LAUNCHER__` miljövariabel om den är inställd."

#: ../../c-api/init_config.rst:1031
msgid ""
"Use ``argv[0]`` of :c:member:`~PyConfig.argv` if available and non-empty."
msgstr ""
"Använd ``argv[0]`` i :c:member:`~PyConfig.argv` om den finns tillgänglig och"
" inte är tom."

#: ../../c-api/init_config.rst:1033
msgid ""
"Otherwise, use ``L\"python\"`` on Windows, or ``L\"python3\"`` on other "
"platforms."
msgstr ""
"Annars använder du ``L\"python\"`` på Windows, eller ``L\"python3\"`` på "
"andra plattformar."

#: ../../c-api/init_config.rst:1042
msgid ""
"Directory where cached ``.pyc`` files are written: "
":data:`sys.pycache_prefix`."
msgstr ""
"Katalog där cachade ``.pyc``-filer skrivs: :data:`sys.pycache_prefix`."

#: ../../c-api/init_config.rst:1045
msgid ""
"Set by the :option:`-X pycache_prefix=PATH <-X>` command line option and the"
" :envvar:`PYTHONPYCACHEPREFIX` environment variable."
msgstr ""

#: ../../c-api/init_config.rst:1048
msgid "If ``NULL``, :data:`sys.pycache_prefix` is set to ``None``."
msgstr "Om ``NULL``, sätts :data:`sys.pycache_prefix` till ``None``."

#: ../../c-api/init_config.rst:1054
msgid ""
"Quiet mode. If greater than ``0``, don't display the copyright and version "
"at Python startup in interactive mode."
msgstr ""
"Tyst läge. Om större än ``0``, visa inte copyright och version vid Python-"
"start i interaktivt läge."

#: ../../c-api/init_config.rst:1057
msgid "Incremented by the :option:`-q` command line option."
msgstr "Ökas med kommandoradsalternativet :option:`-q`."

#: ../../c-api/init_config.rst:1063
msgid "Value of the :option:`-c` command line option."
msgstr "Värde för kommandoradsalternativet :option:`-c`."

#: ../../c-api/init_config.rst:1065 ../../c-api/init_config.rst:1086
msgid "Used by :c:func:`Py_RunMain`."
msgstr "Används av :c:func:`Py_RunMain`."

#: ../../c-api/init_config.rst:1071
msgid ""
"Filename passed on the command line: trailing command line argument without "
":option:`-c` or :option:`-m`. It is used by the :c:func:`Py_RunMain` "
"function."
msgstr ""
"Filnamn som skickas på kommandoraden: efterföljande argument på "
"kommandoraden utan :option:`-c` eller :option:`-m`. Den används av "
"funktionen :c:func:`Py_RunMain`."

#: ../../c-api/init_config.rst:1075
msgid ""
"For example, it is set to ``script.py`` by the ``python3 script.py arg`` "
"command line."
msgstr ""
"Den ställs till exempel in på ``cript.py`` med kommandoraden ``python3 "
"script.py arg``."

#: ../../c-api/init_config.rst:1078
msgid "See also the :c:member:`PyConfig.skip_source_first_line` option."
msgstr "Se även alternativet :c:member:`PyConfig.skip_source_first_line`."

#: ../../c-api/init_config.rst:1084
msgid "Value of the :option:`-m` command line option."
msgstr "Värde för kommandoradsalternativet :option:`-m`."

#: ../../c-api/init_config.rst:1092
msgid "Show total reference count at exit?"
msgstr ""

#: ../../c-api/init_config.rst:1094
msgid "Set to ``1`` by :option:`-X showrefcount <-X>` command line option."
msgstr ""
"Sätts till ``1`` av :option:`-X showrefcount <-X>` kommandoradsalternativ."

#: ../../c-api/init_config.rst:1096
msgid ""
"Need a :ref:`debug build of Python <debug-build>` (the ``Py_REF_DEBUG`` "
"macro must be defined)."
msgstr ""

#: ../../c-api/init_config.rst:1103
msgid "Import the :mod:`site` module at startup?"
msgstr "Importera modulen :mod:`site` vid uppstart?"

#: ../../c-api/init_config.rst:1105
msgid ""
"If equal to zero, disable the import of the module site and the site-"
"dependent manipulations of :data:`sys.path` that it entails."
msgstr ""
"Om värdet är noll inaktiveras importen av modulens webbplats och de "
"webbplatsberoende manipulationerna av :data:`sys.path` som den medför."

#: ../../c-api/init_config.rst:1108
msgid ""
"Also disable these manipulations if the :mod:`site` module is explicitly "
"imported later (call :func:`site.main` if you want them to be triggered)."
msgstr ""
"Inaktivera även dessa manipulationer om modulen :mod:`site` uttryckligen "
"importeras senare (anropa :func:`site.main` om du vill att de ska utlösas)."

#: ../../c-api/init_config.rst:1111
msgid "Set to ``0`` by the :option:`-S` command line option."
msgstr "Sätts till ``0`` med kommandoradsalternativet :option:`-S`."

#: ../../c-api/init_config.rst:1113
msgid ""
":data:`sys.flags.no_site <sys.flags>` is set to the inverted value of "
":c:member:`~PyConfig.site_import`."
msgstr ""
":data:`sys.flags.no_site <sys.flags>` är satt till det inverterade värdet av"
" :c:member:`~PyConfig.site_import`."

#: ../../c-api/init_config.rst:1120
msgid ""
"If non-zero, skip the first line of the :c:member:`PyConfig.run_filename` "
"source."
msgstr ""
"Om värdet är annat än noll, hoppa över första raden i källan "
":c:member:`PyConfig.run_filename`."

#: ../../c-api/init_config.rst:1123
msgid ""
"It allows the usage of non-Unix forms of ``#!cmd``. This is intended for a "
"DOS specific hack only."
msgstr ""
"Det gör det möjligt att använda icke-Unix-former av ``#!cmd``. Detta är "
"endast avsett för ett DOS-specifikt hack."

#: ../../c-api/init_config.rst:1126
msgid "Set to ``1`` by the :option:`-x` command line option."
msgstr "Sätts till ``1`` med kommandoradsalternativet :option:`-x`."

#: ../../c-api/init_config.rst:1133
msgid ""
"Encoding and encoding errors of :data:`sys.stdin`, :data:`sys.stdout` and "
":data:`sys.stderr` (but :data:`sys.stderr` always uses "
"``\"backslashreplace\"`` error handler)."
msgstr ""
"Kodnings- och kodningsfel i :data:`sys.stdin`, :data:`sys.stdout` och "
":data:`sys.stderr` (men :data:`sys.stderr` använder alltid felhanteraren "
"``\"backslashreplace\"``)."

#: ../../c-api/init_config.rst:1137
msgid ""
"If :c:func:`Py_SetStandardStreamEncoding` has been called, use its *error* "
"and *errors* arguments if they are not ``NULL``."
msgstr ""

#: ../../c-api/init_config.rst:1140
msgid ""
"Use the :envvar:`PYTHONIOENCODING` environment variable if it is non-empty."
msgstr "Använd miljövariabeln :envvar:`PYTHONIOENCODING` om den inte är tom."

#: ../../c-api/init_config.rst:1143
msgid "Default encoding:"
msgstr "Standardkodning:"

#: ../../c-api/init_config.rst:1145
msgid "``\"UTF-8\"`` if :c:member:`PyPreConfig.utf8_mode` is non-zero."
msgstr "``\"UTF-8\"`` om :c:member:`PyPreConfig.utf8_mode` inte är noll."

#: ../../c-api/init_config.rst:1146
msgid "Otherwise, use the :term:`locale encoding`."
msgstr "I annat fall används :term:`locale encoding`."

#: ../../c-api/init_config.rst:1148
msgid "Default error handler:"
msgstr "Standard felhanterare:"

#: ../../c-api/init_config.rst:1150
msgid "On Windows: use ``\"surrogateescape\"``."
msgstr "I Windows: använd ``\"surrogateescape\"``."

#: ../../c-api/init_config.rst:1151
msgid ""
"``\"surrogateescape\"`` if :c:member:`PyPreConfig.utf8_mode` is non-zero, or"
" if the LC_CTYPE locale is \"C\" or \"POSIX\"."
msgstr ""
"``\"surrogateescape\"`` om :c:member:`PyPreConfig.utf8_mode` är icke-noll, "
"eller om LC_CTYPE locale är \"C\" eller \"POSIX\"."

#: ../../c-api/init_config.rst:1153
msgid "``\"strict\"`` otherwise."
msgstr "``\"strikt\"`` annars."

#: ../../c-api/init_config.rst:1157
msgid "Enable tracemalloc?"
msgstr "Aktivera tracemalloc?"

#: ../../c-api/init_config.rst:1159
msgid "If non-zero, call :func:`tracemalloc.start` at startup."
msgstr "Om ej noll, anropa :func:`tracemalloc.start` vid uppstart."

#: ../../c-api/init_config.rst:1161
msgid ""
"Set by :option:`-X tracemalloc=N <-X>` command line option and by the "
":envvar:`PYTHONTRACEMALLOC` environment variable."
msgstr ""
"Ställs in av :option:`-X tracemalloc=N <-X>` kommandoradsalternativ och av "
"miljövariabeln :envvar:`PYTHONTRACEMALLOC`."

#: ../../c-api/init_config.rst:1168
msgid "Use :ref:`environment variables <using-on-envvars>`?"
msgstr "Använd :ref:`miljövariabler <using-on-envvars>`?"

#: ../../c-api/init_config.rst:1170
msgid ""
"If equals to zero, ignore the :ref:`environment variables <using-on-"
"envvars>`."
msgstr ""
"Om den är lika med noll ignoreras :ref:`miljövariabler <using-on-envvars>`."

#: ../../c-api/init_config.rst:1173
msgid "Set to ``0`` by the :option:`-E` environment variable."
msgstr "Sätts till ``0`` av miljövariabeln :option:`-E`."

#: ../../c-api/init_config.rst:1179
msgid "If non-zero, add the user site directory to :data:`sys.path`."
msgstr ""
"Om värdet är annat än noll läggs användarens webbplatskatalog till i "
":data:`sys.path`."

#: ../../c-api/init_config.rst:1181
msgid ""
"Set to ``0`` by the :option:`-s` and :option:`-I` command line options."
msgstr ""
"Sätts till ``0`` med kommandoradsalternativen :option:`-s` och :option:`-I`."

#: ../../c-api/init_config.rst:1183
msgid "Set to ``0`` by the :envvar:`PYTHONNOUSERSITE` environment variable."
msgstr "Sätts till ``0`` av miljövariabeln :envvar:`PYTHONNOUSERSITE`."

#: ../../c-api/init_config.rst:1189
msgid ""
"Verbose mode. If greater than ``0``, print a message each time a module is "
"imported, showing the place (filename or built-in module) from which it is "
"loaded."
msgstr ""
"Verbose-läge. Om större än ``0``, skriv ut ett meddelande varje gång en "
"modul importeras, som visar platsen (filnamn eller inbyggd modul) från "
"vilken den laddas."

#: ../../c-api/init_config.rst:1193
msgid ""
"If greater or equal to ``2``, print a message for each file that is checked "
"for when searching for a module. Also provides information on module cleanup"
" at exit."
msgstr ""

#: ../../c-api/init_config.rst:1197
msgid "Incremented by the :option:`-v` command line option."
msgstr "Ökas med kommandoradsalternativet :option:`-v`."

#: ../../c-api/init_config.rst:1199
msgid "Set to the :envvar:`PYTHONVERBOSE` environment variable value."
msgstr ""

#: ../../c-api/init_config.rst:1205
msgid ""
"Options of the :mod:`warnings` module to build warnings filters, lowest to "
"highest priority: :data:`sys.warnoptions`."
msgstr ""
"Alternativ för modulen :mod:`warnings` för att bygga varningsfilter, från "
"lägsta till högsta prioritet: :data:`sys.warnoptions`."

#: ../../c-api/init_config.rst:1208
msgid ""
"The :mod:`warnings` module adds :data:`sys.warnoptions` in the reverse "
"order: the last :c:member:`PyConfig.warnoptions` item becomes the first item"
" of :data:`warnings.filters` which is checked first (highest priority)."
msgstr ""
"Modulen :mod:`warnings` lägger till :data:`sys.warnoptions` i omvänd "
"ordning: det sista :c:member:`PyConfig.warnoptions`-objektet blir det första"
" objektet i :data:`warnings.filters` som kontrolleras först (högsta "
"prioritet)."

#: ../../c-api/init_config.rst:1213
msgid ""
"The :option:`-W` command line options adds its value to "
":c:member:`~PyConfig.warnoptions`, it can be used multiple times."
msgstr ""
"Kommandoradsalternativet :option:`-W` lägger till sitt värde i "
":c:member:`~PyConfig.warnoptions`, det kan användas flera gånger."

#: ../../c-api/init_config.rst:1216
msgid ""
"The :envvar:`PYTHONWARNINGS` environment variable can also be used to add "
"warning options. Multiple options can be specified, separated by commas "
"(``,``)."
msgstr ""
"Miljövariabeln :envvar:`PYTHONWARNINGS` kan också användas för att lägga "
"till varningsalternativ. Flera alternativ kan anges, åtskilda med "
"kommatecken (``,``)."

#: ../../c-api/init_config.rst:1224
msgid ""
"If equal to ``0``, Python won't try to write ``.pyc`` files on the import of"
" source modules."
msgstr ""
"Om lika med ``0``, kommer Python inte att försöka skriva ``.pyc``-filer vid "
"import av källmoduler."

#: ../../c-api/init_config.rst:1227
msgid ""
"Set to ``0`` by the :option:`-B` command line option and the "
":envvar:`PYTHONDONTWRITEBYTECODE` environment variable."
msgstr ""
"Sätts till ``0`` med kommandoradsalternativet :option:`-B` och "
"miljövariabeln :envvar:`PYTHONDONTWRITEBYTECODE`."

#: ../../c-api/init_config.rst:1230
msgid ""
":data:`sys.dont_write_bytecode` is initialized to the inverted value of "
":c:member:`~PyConfig.write_bytecode`."
msgstr ""
":data:`sys.dont_write_bytecode` initialiseras till det inverterade värdet av"
" :c:member:`~PyConfig.write_bytecode`."

#: ../../c-api/init_config.rst:1237
msgid ""
"Values of the :option:`-X` command line options: :data:`sys._xoptions`."
msgstr ""
"Värden för kommandoradsalternativen :option:`-X`: :data:`sys._xoptions`."

#: ../../c-api/init_config.rst:1241
msgid ""
"If :c:member:`~PyConfig.parse_argv` is non-zero, :c:member:`~PyConfig.argv` "
"arguments are parsed the same way the regular Python parses :ref:`command "
"line arguments <using-on-cmdline>`, and Python arguments are stripped from "
":c:member:`~PyConfig.argv`."
msgstr ""
"Om :c:member:`~PyConfig.parse_argv` inte är noll, analyseras "
":c:member:`~PyConfig.argv`-argument på samma sätt som vanliga Python "
"analyserar :ref:`kommandoradsargument <using-on-cmdline>`, och Python-"
"argument tas bort från :c:member:`~PyConfig.argv`."

#: ../../c-api/init_config.rst:1246
msgid ""
"The :c:member:`~PyConfig.xoptions` options are parsed to set other options: "
"see the :option:`-X` command line option."
msgstr ""
"Alternativen :c:member:`~PyConfig.xoptions` analyseras för att ange andra "
"alternativ: se kommandoradsalternativet :option:`-X`."

#: ../../c-api/init_config.rst:1251
msgid "The ``show_alloc_count`` field has been removed."
msgstr "Fältet ``show_alloc_count`` har tagits bort."

#: ../../c-api/init_config.rst:1255
msgid "Initialization with PyConfig"
msgstr "Initialisering med PyConfig"

#: ../../c-api/init_config.rst:1257
msgid "Function to initialize Python:"
msgstr ""

#: ../../c-api/init_config.rst:1261
msgid "Initialize Python from *config* configuration."
msgstr ""

#: ../../c-api/init_config.rst:1266
msgid ""
"If :c:func:`PyImport_FrozenModules`, :c:func:`PyImport_AppendInittab` or "
":c:func:`PyImport_ExtendInittab` are used, they must be set or called after "
"Python preinitialization and before the Python initialization. If Python is "
"initialized multiple times, :c:func:`PyImport_AppendInittab` or "
":c:func:`PyImport_ExtendInittab` must be called before each Python "
"initialization."
msgstr ""
"Om :c:func:`PyImport_FrozenModules`, :c:func:`PyImport_AppendInittab` eller "
":c:func:`PyImport_ExtendInittab` används, måste de anges eller anropas efter"
" Pythons förinitialisering och före Pythons initialisering. Om Python "
"initialiseras flera gånger måste :c:func:`PyImport_AppendInittab` eller "
":c:func:`PyImport_ExtendInittab` anropas före varje Python-initialisering."

#: ../../c-api/init_config.rst:1273
msgid ""
"The current configuration (``PyConfig`` type) is stored in "
"``PyInterpreterState.config``."
msgstr ""
"Den aktuella konfigurationen (av typen ``PyConfig``) lagras i "
"``PyInterpreterState.config``."

#: ../../c-api/init_config.rst:1276
msgid "Example setting the program name::"
msgstr "Exempel på inställning av programnamn::"

#: ../../c-api/init_config.rst:1304
msgid ""
"More complete example modifying the default configuration, read the "
"configuration, and then override some parameters. Note that since 3.11, many"
" parameters are not calculated until initialization, and so values cannot be"
" read from the configuration structure. Any values set before initialize is "
"called will be left unchanged by initialization::"
msgstr ""
"Ett mer komplett exempel på hur man ändrar standardkonfigurationen, läser "
"konfigurationen och sedan åsidosätter vissa parametrar. Observera att sedan "
"3.11 beräknas många parametrar inte förrän vid initialiseringen, och därför "
"kan värdena inte läsas från konfigurationsstrukturen. Alla värden som "
"ställts in innan initialize anropas kommer att lämnas oförändrade av "
"initialization::"

#: ../../c-api/init_config.rst:1367
msgid "Isolated Configuration"
msgstr "Isolerad konfiguration"

#: ../../c-api/init_config.rst:1369
msgid ""
":c:func:`PyPreConfig_InitIsolatedConfig` and "
":c:func:`PyConfig_InitIsolatedConfig` functions create a configuration to "
"isolate Python from the system. For example, to embed Python into an "
"application."
msgstr ""
"funktionerna :c:func:`PyPreConfig_InitIsolatedConfig` och "
":c:func:`PyConfig_InitIsolatedConfig` skapar en konfiguration för att "
"isolera Python från systemet. Till exempel för att bädda in Python i en "
"applikation."

#: ../../c-api/init_config.rst:1374
msgid ""
"This configuration ignores global configuration variables, environment "
"variables, command line arguments (:c:member:`PyConfig.argv` is not parsed) "
"and user site directory. The C standard streams (ex: ``stdout``) and the "
"LC_CTYPE locale are left unchanged. Signal handlers are not installed."
msgstr ""
"Denna konfiguration ignorerar globala konfigurationsvariabler, "
"miljövariabler, kommandoradsargument (:c:member:`PyConfig.argv` tolkas inte)"
" och användarens webbplatskatalog. C-standardströmmarna (t.ex. ``stdout``) "
"och LC_CTYPE-lokalen lämnas oförändrade. Signalhanterare är inte "
"installerade."

#: ../../c-api/init_config.rst:1379
msgid ""
"Configuration files are still used with this configuration to determine "
"paths that are unspecified. Ensure :c:member:`PyConfig.home` is specified to"
" avoid computing the default path configuration."
msgstr ""
"Konfigurationsfiler används fortfarande med den här konfigurationen för att "
"bestämma sökvägar som inte är specificerade. Se till att "
":c:member:`PyConfig.home` anges för att undvika att beräkna "
"standardsökvägskonfigurationen."

#: ../../c-api/init_config.rst:1387
msgid "Python Configuration"
msgstr "Python-konfiguration"

#: ../../c-api/init_config.rst:1389
msgid ""
":c:func:`PyPreConfig_InitPythonConfig` and "
":c:func:`PyConfig_InitPythonConfig` functions create a configuration to "
"build a customized Python which behaves as the regular Python."
msgstr ""
"funktionerna :c:func:`PyPreConfig_InitPythonConfig` och "
":c:func:`PyConfig_InitPythonConfig` skapar en konfiguration för att bygga "
"ett anpassat Python som beter sig som det vanliga Python."

#: ../../c-api/init_config.rst:1393
msgid ""
"Environments variables and command line arguments are used to configure "
"Python, whereas global configuration variables are ignored."
msgstr ""
"Miljövariabler och kommandoradsargument används för att konfigurera Python, "
"medan globala konfigurationsvariabler ignoreras."

#: ../../c-api/init_config.rst:1396
msgid ""
"This function enables C locale coercion (:pep:`538`) and :ref:`Python UTF-8 "
"Mode <utf8-mode>` (:pep:`540`) depending on the LC_CTYPE locale, "
":envvar:`PYTHONUTF8` and :envvar:`PYTHONCOERCECLOCALE` environment "
"variables."
msgstr ""
"Denna funktion aktiverar C locale coercion (:pep:`538`) och :ref:`Python "
"UTF-8 Mode <utf8-mode>` (:pep:`540`) beroende på LC_CTYPE locale, "
":envvar:`PYTHONUTF8` och :envvar:`PYTHONCOERCECLOCALE` miljövariabler."

#: ../../c-api/init_config.rst:1405
msgid "Python Path Configuration"
msgstr "Konfiguration av Python-sökväg"

#: ../../c-api/init_config.rst:1407
msgid ""
":c:type:`PyConfig` contains multiple fields for the path configuration:"
msgstr ":c:type:`PyConfig` innehåller flera fält för sökvägskonfigurationen:"

#: ../../c-api/init_config.rst:1409
msgid "Path configuration inputs:"
msgstr "Ingångar för konfiguration av sökväg:"

#: ../../c-api/init_config.rst:1411
msgid ":c:member:`PyConfig.home`"
msgstr ":c:member:`PyConfig.home`"

#: ../../c-api/init_config.rst:1412
msgid ":c:member:`PyConfig.platlibdir`"
msgstr ":c:member:`PyConfig.platlibdir`"

#: ../../c-api/init_config.rst:1413
msgid ":c:member:`PyConfig.pathconfig_warnings`"
msgstr ":c:member:`PyConfig.pathconfig_warnings`"

#: ../../c-api/init_config.rst:1414
msgid ":c:member:`PyConfig.program_name`"
msgstr ":c:member:`PyConfig.program_namn`"

#: ../../c-api/init_config.rst:1415
msgid ":c:member:`PyConfig.pythonpath_env`"
msgstr ":c:member:`PyConfig.pythonpath_env`"

#: ../../c-api/init_config.rst:1416
msgid "current working directory: to get absolute paths"
msgstr "aktuell arbetskatalog: för att få absoluta sökvägar"

#: ../../c-api/init_config.rst:1417
msgid ""
"``PATH`` environment variable to get the program full path (from "
":c:member:`PyConfig.program_name`)"
msgstr ""
"``PATH`` miljövariabel för att få den fullständiga sökvägen till programmet "
"(från :c:member:`PyConfig.program_name`)"

#: ../../c-api/init_config.rst:1419
msgid "``__PYVENV_LAUNCHER__`` environment variable"
msgstr "miljövariabeln ``PYVENV_LAUNCHER__``"

#: ../../c-api/init_config.rst:1420
msgid ""
"(Windows only) Application paths in the registry under "
"\"Software\\Python\\PythonCore\\X.Y\\PythonPath\" of HKEY_CURRENT_USER and "
"HKEY_LOCAL_MACHINE (where X.Y is the Python version)."
msgstr ""
"(Endast Windows) Programsökvägar i registret under "
"\"Software\\Python\\PythonCore\\X.Y\\PythonPath\" i HKEY_CURRENT_USER och "
"HKEY_LOCAL_MACHINE (där X.Y är Python-versionen)."

#: ../../c-api/init_config.rst:1424
msgid "Path configuration output fields:"
msgstr "Utmatningsfält för konfiguration av sökväg:"

#: ../../c-api/init_config.rst:1426
msgid ":c:member:`PyConfig.base_exec_prefix`"
msgstr ":c:member:`PyConfig.base_exec_prefix`"

#: ../../c-api/init_config.rst:1427
msgid ":c:member:`PyConfig.base_executable`"
msgstr ":c:member:`PyConfig.base_executable`"

#: ../../c-api/init_config.rst:1428
msgid ":c:member:`PyConfig.base_prefix`"
msgstr ":c:member:`PyConfig.base_prefix`"

#: ../../c-api/init_config.rst:1429
msgid ":c:member:`PyConfig.exec_prefix`"
msgstr ":c:member:`PyConfig.exec_prefix`"

#: ../../c-api/init_config.rst:1430
msgid ":c:member:`PyConfig.executable`"
msgstr ":c:member:`PyConfig.körbar`"

#: ../../c-api/init_config.rst:1431
msgid ""
":c:member:`PyConfig.module_search_paths_set`, "
":c:member:`PyConfig.module_search_paths`"
msgstr ""
":c:member:`PyConfig.module_search_paths_set`, "
":c:member:`PyConfig.module_search_paths`"

#: ../../c-api/init_config.rst:1433
msgid ":c:member:`PyConfig.prefix`"
msgstr ":c:member:`PyConfig.prefix`"

#: ../../c-api/init_config.rst:1435
msgid ""
"If at least one \"output field\" is not set, Python calculates the path "
"configuration to fill unset fields. If "
":c:member:`~PyConfig.module_search_paths_set` is equal to ``0``, "
":c:member:`~PyConfig.module_search_paths` is overridden and "
":c:member:`~PyConfig.module_search_paths_set` is set to ``1``."
msgstr ""
"Om minst ett \"utdatafält\" inte är inställt, beräknar Python "
"sökvägskonfigurationen för att fylla oinställda fält. Om "
":c:member:`~PyConfig.module_search_paths_set` är lika med ``0``, åsidosätts "
":c:member:`~PyConfig.module_search_paths` och "
":c:member:`~PyConfig.module_search_paths_set` sätts till ``1``."

#: ../../c-api/init_config.rst:1441
msgid ""
"It is possible to completely ignore the function calculating the default "
"path configuration by setting explicitly all path configuration output "
"fields listed above. A string is considered as set even if it is non-empty. "
"``module_search_paths`` is considered as set if ``module_search_paths_set`` "
"is set to ``1``. In this case, ``module_search_paths`` will be used without "
"modification."
msgstr ""
"Det är möjligt att helt ignorera funktionen som beräknar "
"standardsökvägskonfigurationen genom att uttryckligen ange alla utdatafält "
"för sökvägskonfigurationen som anges ovan. En sträng anses vara inställd "
"även om den inte är tom. ``module_search_paths`` betraktas som set om "
"``module_search_paths_set`` är satt till ``1``. I detta fall kommer "
"``module_search_paths`` att användas utan modifiering."

#: ../../c-api/init_config.rst:1448
msgid ""
"Set :c:member:`~PyConfig.pathconfig_warnings` to ``0`` to suppress warnings "
"when calculating the path configuration (Unix only, Windows does not log any"
" warning)."
msgstr ""
"Sätt :c:member:`~PyConfig.pathconfig_warnings` till ``0`` för att "
"undertrycka varningar vid beräkning av sökvägskonfigurationen (endast Unix, "
"Windows loggar inte någon varning)."

#: ../../c-api/init_config.rst:1451
msgid ""
"If :c:member:`~PyConfig.base_prefix` or "
":c:member:`~PyConfig.base_exec_prefix` fields are not set, they inherit "
"their value from :c:member:`~PyConfig.prefix` and "
":c:member:`~PyConfig.exec_prefix` respectively."
msgstr ""
"Om fälten :c:member:`~PyConfig.base_prefix` eller "
":c:member:`~PyConfig.base_exec_prefix` inte har angetts ärver de sina värden"
" från :c:member:`~PyConfig.prefix` respektive "
":c:member:`~PyConfig.exec_prefix`."

#: ../../c-api/init_config.rst:1455
msgid ":c:func:`Py_RunMain` and :c:func:`Py_Main` modify :data:`sys.path`:"
msgstr ""
":c:func:`Py_RunMain` och :c:func:`Py_Main` modifierar :data:`sys.path`:"

#: ../../c-api/init_config.rst:1457
msgid ""
"If :c:member:`~PyConfig.run_filename` is set and is a directory which "
"contains a ``__main__.py`` script, prepend "
":c:member:`~PyConfig.run_filename` to :data:`sys.path`."
msgstr ""
"Om :c:member:`~PyConfig.run_filename` är inställd och är en katalog som "
"innehåller ett ``__main__.py``-skript, prepend "
":c:member:`~PyConfig.run_filename` till :data:`sys.path`."

#: ../../c-api/init_config.rst:1460
msgid "If :c:member:`~PyConfig.isolated` is zero:"
msgstr "Om :c:member:`~PyConfig.isolated` är noll:"

#: ../../c-api/init_config.rst:1462
msgid ""
"If :c:member:`~PyConfig.run_module` is set, prepend the current directory to"
" :data:`sys.path`. Do nothing if the current directory cannot be read."
msgstr ""
"Om :c:member:`~PyConfig.run_module` är inställd, lägg till den aktuella "
"katalogen i :data:`sys.path`. Gör ingenting om den aktuella katalogen inte "
"kan läsas."

#: ../../c-api/init_config.rst:1464
msgid ""
"If :c:member:`~PyConfig.run_filename` is set, prepend the directory of the "
"filename to :data:`sys.path`."
msgstr ""
"Om :c:member:`~PyConfig.run_filename` är inställt, lägg till katalogen för "
"filnamnet i :data:`sys.path`."

#: ../../c-api/init_config.rst:1466
msgid "Otherwise, prepend an empty string to :data:`sys.path`."
msgstr "I annat fall läggs en tom sträng till :data:`sys.path`."

#: ../../c-api/init_config.rst:1468
msgid ""
"If :c:member:`~PyConfig.site_import` is non-zero, :data:`sys.path` can be "
"modified by the :mod:`site` module. If "
":c:member:`~PyConfig.user_site_directory` is non-zero and the user's site-"
"package directory exists, the :mod:`site` module appends the user's site-"
"package directory to :data:`sys.path`."
msgstr ""
"Om :c:member:`~PyConfig.site_import` inte är noll, kan :data:`sys.path` "
"ändras av modulen :mod:`site`. Om :c:member:`~PyConfig.user_site_directory` "
"inte är noll och användarens katalog för site-paketet finns, lägger modulen "
":mod:`site` till användarens katalog för site-paketet till :data:`sys.path`."

#: ../../c-api/init_config.rst:1474
msgid "The following configuration files are used by the path configuration:"
msgstr "Följande konfigurationsfiler används av sökvägskonfigurationen:"

#: ../../c-api/init_config.rst:1476
msgid "``pyvenv.cfg``"
msgstr "``pyvenv.cfg``"

#: ../../c-api/init_config.rst:1477
msgid "``._pth`` file (ex: ``python._pth``)"
msgstr "filen ``._pth`` (t.ex. ``python._pth``)"

#: ../../c-api/init_config.rst:1478
msgid "``pybuilddir.txt`` (Unix only)"
msgstr "``pybuilddir.txt`` (endast Unix)"

#: ../../c-api/init_config.rst:1480
msgid "If a ``._pth`` file is present:"
msgstr "Om en ``._pth``-fil finns:"

#: ../../c-api/init_config.rst:1482
msgid "Set :c:member:`~PyConfig.isolated` to ``1``."
msgstr "Sätt :c:member:`~PyConfig.isolated` till ``1``."

#: ../../c-api/init_config.rst:1484
msgid "Set :c:member:`~PyConfig.site_import` to ``0``."
msgstr "Ställ in :c:member:`~PyConfig.site_import` till ``0``."

#: ../../c-api/init_config.rst:1485
msgid "Set :c:member:`~PyConfig.safe_path` to ``1``."
msgstr "Sätt :c:member:`~PyConfig.safe_path` till ``1``."

#: ../../c-api/init_config.rst:1487
msgid ""
"The ``__PYVENV_LAUNCHER__`` environment variable is used to set "
":c:member:`PyConfig.base_executable`"
msgstr ""

#: ../../c-api/init_config.rst:1492
msgid "Py_RunMain()"
msgstr ""

#: ../../c-api/init_config.rst:1496
msgid ""
"Execute the command (:c:member:`PyConfig.run_command`), the script "
"(:c:member:`PyConfig.run_filename`) or the module "
"(:c:member:`PyConfig.run_module`) specified on the command line or in the "
"configuration."
msgstr ""

#: ../../c-api/init_config.rst:1501
msgid "By default and when if :option:`-i` option is used, run the REPL."
msgstr ""

#: ../../c-api/init_config.rst:1503
msgid ""
"Finally, finalizes Python and returns an exit status that can be passed to "
"the ``exit()`` function."
msgstr ""

#: ../../c-api/init_config.rst:1506
msgid ""
"See :ref:`Python Configuration <init-python-config>` for an example of "
"customized Python always running in isolated mode using "
":c:func:`Py_RunMain`."
msgstr ""

#: ../../c-api/init_config.rst:1512
msgid "Py_GetArgcArgv()"
msgstr "Py_GetArgcArgv()"

#: ../../c-api/init_config.rst:1516
msgid "Get the original command line arguments, before Python modified them."
msgstr ""
"Hämta de ursprungliga kommandoradsargumenten, innan Python ändrade dem."

#: ../../c-api/init_config.rst:1518
msgid "See also :c:member:`PyConfig.orig_argv` member."
msgstr "Se även :c:member:`PyConfig.orig_argv` member."

#: ../../c-api/init_config.rst:1522
msgid "Multi-Phase Initialization Private Provisional API"
msgstr ""

#: ../../c-api/init_config.rst:1524
msgid ""
"This section is a private provisional API introducing multi-phase "
"initialization, the core feature of :pep:`432`:"
msgstr ""

#: ../../c-api/init_config.rst:1527
msgid "\"Core\" initialization phase, \"bare minimum Python\":"
msgstr ""

#: ../../c-api/init_config.rst:1529
msgid "Builtin types;"
msgstr ""

#: ../../c-api/init_config.rst:1530
msgid "Builtin exceptions;"
msgstr ""

#: ../../c-api/init_config.rst:1531
msgid "Builtin and frozen modules;"
msgstr ""

#: ../../c-api/init_config.rst:1532
msgid ""
"The :mod:`sys` module is only partially initialized (ex: :data:`sys.path` "
"doesn't exist yet)."
msgstr ""

#: ../../c-api/init_config.rst:1535
msgid "\"Main\" initialization phase, Python is fully initialized:"
msgstr ""

#: ../../c-api/init_config.rst:1537
msgid "Install and configure :mod:`importlib`;"
msgstr ""

#: ../../c-api/init_config.rst:1538
msgid "Apply the :ref:`Path Configuration <init-path-config>`;"
msgstr ""

#: ../../c-api/init_config.rst:1539
msgid "Install signal handlers;"
msgstr ""

#: ../../c-api/init_config.rst:1540
msgid ""
"Finish :mod:`sys` module initialization (ex: create :data:`sys.stdout` and "
":data:`sys.path`);"
msgstr ""

#: ../../c-api/init_config.rst:1542
msgid ""
"Enable optional features like :mod:`faulthandler` and :mod:`tracemalloc`;"
msgstr ""

#: ../../c-api/init_config.rst:1543
msgid "Import the :mod:`site` module;"
msgstr ""

#: ../../c-api/init_config.rst:1544
msgid "etc."
msgstr ""

#: ../../c-api/init_config.rst:1546
msgid "Private provisional API:"
msgstr ""

#: ../../c-api/init_config.rst:1548
msgid ""
":c:member:`PyConfig._init_main`: if set to ``0``, "
":c:func:`Py_InitializeFromConfig` stops at the \"Core\" initialization "
"phase."
msgstr ""

#: ../../c-api/init_config.rst:1550
msgid ""
":c:member:`PyConfig._isolated_interpreter`: if non-zero, disallow threads, "
"subprocesses and fork."
msgstr ""

#: ../../c-api/init_config.rst:1555
msgid ""
"Move to the \"Main\" initialization phase, finish the Python initialization."
msgstr ""

#: ../../c-api/init_config.rst:1557
msgid ""
"No module is imported during the \"Core\" phase and the ``importlib`` module"
" is not configured: the :ref:`Path Configuration <init-path-config>` is only"
" applied during the \"Main\" phase. It may allow to customize Python in "
"Python to override or tune the :ref:`Path Configuration <init-path-config>`,"
" maybe install a custom :data:`sys.meta_path` importer or an import hook, "
"etc."
msgstr ""

#: ../../c-api/init_config.rst:1563
msgid ""
"It may become possible to calculatin the :ref:`Path Configuration <init-"
"path-config>` in Python, after the Core phase and before the Main phase, "
"which is one of the :pep:`432` motivation."
msgstr ""

#: ../../c-api/init_config.rst:1567
msgid ""
"The \"Core\" phase is not properly defined: what should be and what should "
"not be available at this phase is not specified yet. The API is marked as "
"private and provisional: the API can be modified or even be removed anytime "
"until a proper public API is designed."
msgstr ""

#: ../../c-api/init_config.rst:1572
msgid ""
"Example running Python code between \"Core\" and \"Main\" initialization "
"phases::"
msgstr ""
