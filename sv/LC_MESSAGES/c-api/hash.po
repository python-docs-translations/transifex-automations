# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001 Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# python-doc bot, 2025
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.14\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-11 14:18+0000\n"
"PO-Revision-Date: 2025-09-16 00:00+0000\n"
"Last-Translator: python-doc bot, 2025\n"
"Language-Team: Swedish (https://app.transifex.com/python-doc/teams/5390/"
"sv/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: sv\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"

#: ../../c-api/hash.rst:4
msgid "PyHash API"
msgstr "PyHash API"

#: ../../c-api/hash.rst:6
msgid ""
"See also the :c:member:`PyTypeObject.tp_hash` member and :ref:`numeric-hash`."
msgstr ""
"Se även :c:member:`PyTypeObject.tp_hash`\\-medlemmen och :ref:`numeric-hash`."

#: ../../c-api/hash.rst:10
msgid "Hash value type: signed integer."
msgstr "Hashvärdestyp: signerat heltal."

#: ../../c-api/hash.rst:16
msgid "Hash value type: unsigned integer."
msgstr "Typ av Hash-värde: osignerat heltal."

#: ../../c-api/hash.rst:22
msgid ""
"The `Mersenne prime <https://en.wikipedia.org/wiki/Mersenne_prime>`_ ``P = "
"2**n -1``, used for numeric hash scheme."
msgstr ""
"`Mersenne-primtalet <https://en.wikipedia.org/wiki/Mersenne_prime>`_ ``P = "
"2**n -1``, används för numeriska hashscheman."

#: ../../c-api/hash.rst:28
msgid "The exponent ``n`` of ``P`` in :c:macro:`PyHASH_MODULUS`."
msgstr "Exponenten ``n`` för ``P`` i :c:macro:`PyHASH_MODULUS`."

#: ../../c-api/hash.rst:34
msgid "Prime multiplier used in string and various other hashes."
msgstr "Prime-multiplikator som används i string och olika andra hashar."

#: ../../c-api/hash.rst:40
msgid "The hash value returned for a positive infinity."
msgstr "Det hashvärde som returneras för en positiv oändlighet."

#: ../../c-api/hash.rst:46
msgid "The multiplier used for the imaginary part of a complex number."
msgstr "Den multiplikator som används för imaginärdelen av ett komplext tal."

#: ../../c-api/hash.rst:52
msgid "Hash function definition used by :c:func:`PyHash_GetFuncDef`."
msgstr "Hashfunktionsdefinition som används av :c:func:`PyHash_GetFuncDef`."

#: ../../c-api/hash.rst:56
msgid "Hash function."
msgstr ""

#: ../../c-api/hash.rst:60
msgid "Hash function name (UTF-8 encoded string)."
msgstr "Hashfunktionens namn (UTF-8-kodad sträng)."

#: ../../c-api/hash.rst:64
msgid "Internal size of the hash value in bits."
msgstr "Intern storlek på hash-värdet i bitar."

#: ../../c-api/hash.rst:68
msgid "Size of seed input in bits."
msgstr "Storlek på inmatat frö i bitar."

#: ../../c-api/hash.rst:75
msgid "Get the hash function definition."
msgstr "Hämta definitionen av hashfunktionen."

#: ../../c-api/hash.rst:78
msgid ":pep:`456` \"Secure and interchangeable hash algorithm\"."
msgstr ":pep:`456` \"Säker och utbytbar hashalgoritm\"."

#: ../../c-api/hash.rst:85
msgid ""
"Hash a pointer value: process the pointer value as an integer (cast it to "
"``uintptr_t`` internally). The pointer is not dereferenced."
msgstr ""
"Hash ett pekarvärde: bearbeta pekarvärdet som ett heltal (casta det till "
"``uintptr_t`` internt). Pekaren är inte dereferencerad."

#: ../../c-api/hash.rst:88
msgid "The function cannot fail: it cannot return ``-1``."
msgstr "Funktionen kan inte misslyckas: den kan inte returnera ``\\-1``."

#: ../../c-api/hash.rst:95
msgid ""
"Compute and return the hash value of a buffer of *len* bytes starting at "
"address *ptr*. The hash is guaranteed to match that "
"of :class:`bytes`, :class:`memoryview`, and other built-in objects that "
"implement the :ref:`buffer protocol <bufferobjects>`."
msgstr ""
"Beräknar och returnerar hashvärdet för en buffert på *len* byte som börjar "
"på adressen *ptr*. Hashvärdet kommer garanterat att matcha det "
"i :class:`bytes`, :class:`memoryview` och andra inbyggda objekt som "
"implementerar :ref:`buffer protocol <bufferobjects>`."

#: ../../c-api/hash.rst:100
msgid ""
"Use this function to implement hashing for immutable objects "
"whose :c:member:`~PyTypeObject.tp_richcompare` function compares to another "
"object's buffer."
msgstr ""
"Använd denna funktion för att implementera hashing för oföränderliga objekt "
"vars :c:member:`~PyTypeObject.tp_richcompare`\\-funktion jämför med ett "
"annat objekts buffert."

#: ../../c-api/hash.rst:104
msgid "*len* must be greater than or equal to ``0``."
msgstr "*len* måste vara större än eller lika med ``0``."

#: ../../c-api/hash.rst:106
msgid "This function always succeeds."
msgstr "Denna funktion lyckas alltid."

#: ../../c-api/hash.rst:113
msgid ""
"Generic hashing function that is meant to be put into a type object's "
"``tp_hash`` slot. Its result only depends on the object's identity."
msgstr ""
"Generisk hashfunktion som är avsedd att placeras i ett typobjekts "
"``tp_hash`` slot. Dess resultat beror endast på objektets identitet."

#: ../../c-api/hash.rst:118
msgid "In CPython, it is equivalent to :c:func:`Py_HashPointer`."
msgstr "I CPython är det likvärdigt med :c:func:`Py_HashPointer`."
