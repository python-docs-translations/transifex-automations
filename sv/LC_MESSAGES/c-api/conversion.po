# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# python-doc bot, 2025
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.9\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-10-17 18:07+0000\n"
"PO-Revision-Date: 2025-09-22 17:54+0000\n"
"Last-Translator: python-doc bot, 2025\n"
"Language-Team: Swedish (https://app.transifex.com/python-doc/teams/5390/"
"sv/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: sv\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"

#: ../../c-api/conversion.rst:6
msgid "String conversion and formatting"
msgstr "Konvertering och formatering av strängar"

#: ../../c-api/conversion.rst:8
msgid "Functions for number conversion and formatted string output."
msgstr "Funktioner för nummerkonvertering och formaterad strängutmatning."

#: ../../c-api/conversion.rst:13
msgid ""
"Output not more than *size* bytes to *str* according to the format string "
"*format* and the extra arguments. See the Unix man page :manpage:"
"`snprintf(3)`."
msgstr ""
"Skriver ut högst *storlek* byte till *str* enligt formatsträngen *format* "
"och de extra argumenten. Se Unix man-sida :manpage:`snprintf(3)`."

#: ../../c-api/conversion.rst:19
msgid ""
"Output not more than *size* bytes to *str* according to the format string "
"*format* and the variable argument list *va*. Unix man page :manpage:"
"`vsnprintf(3)`."
msgstr ""
"Skriver ut högst *storlek* byte till *str* enligt formatsträngen *format* "
"och variabelargumentlistan *va*. Unix man page :manpage:`vsnprintf(3)`."

#: ../../c-api/conversion.rst:23
msgid ""
":c:func:`PyOS_snprintf` and :c:func:`PyOS_vsnprintf` wrap the Standard C "
"library functions :c:func:`snprintf` and :c:func:`vsnprintf`. Their purpose "
"is to guarantee consistent behavior in corner cases, which the Standard C "
"functions do not."
msgstr ""
":c:func:`PyOS_snprintf` och :c:func:`PyOS_vsnprintf` omsluter Standard C-"
"biblioteksfunktionerna :c:func:`snprintf` och :c:func:`vsnprintf`. Deras "
"syfte är att garantera konsekvent beteende i hörnfall, vilket Standard C-"
"funktionerna inte gör."

#: ../../c-api/conversion.rst:28
msgid ""
"The wrappers ensure that ``str[size-1]`` is always ``'\\0'`` upon return. "
"They never write more than *size* bytes (including the trailing ``'\\0'``) "
"into str. Both functions require that ``str != NULL``, ``size > 0`` and "
"``format != NULL``."
msgstr ""

#: ../../c-api/conversion.rst:33
msgid ""
"If the platform doesn't have :c:func:`vsnprintf` and the buffer size needed "
"to avoid truncation exceeds *size* by more than 512 bytes, Python aborts "
"with a :c:func:`Py_FatalError`."
msgstr ""

#: ../../c-api/conversion.rst:37
msgid ""
"The return value (*rv*) for these functions should be interpreted as follows:"
msgstr "Returvärdet (*rv*) för dessa funktioner ska tolkas på följande sätt:"

#: ../../c-api/conversion.rst:39
msgid ""
"When ``0 <= rv < size``, the output conversion was successful and *rv* "
"characters were written to *str* (excluding the trailing ``'\\0'`` byte at "
"``str[rv]``)."
msgstr ""
"När ``0 <= rv < size``, var utdatakonverteringen lyckad och *rv* tecken "
"skrevs till *str* (exklusive den avslutande byten ``'\\0'`` vid ``str[rv]``)."

#: ../../c-api/conversion.rst:43
msgid ""
"When ``rv >= size``, the output conversion was truncated and a buffer with "
"``rv + 1`` bytes would have been needed to succeed. ``str[size-1]`` is "
"``'\\0'`` in this case."
msgstr ""
"När ``rv >= size``, blev utdatakonverteringen avkortad och en buffert med "
"``rv + 1`` bytes skulle ha behövts för att lyckas. ``str[size-1]`` är "
"``'\\0'`` i det här fallet."

#: ../../c-api/conversion.rst:47
msgid ""
"When ``rv < 0``, \"something bad happened.\" ``str[size-1]`` is ``'\\0'`` in "
"this case too, but the rest of *str* is undefined. The exact cause of the "
"error depends on the underlying platform."
msgstr ""
"När ``rv < 0``, \"hände något dåligt.\" ``str[size-1]`` är ``'\\0'`` även i "
"detta fall, men resten av *str* är odefinierat. Den exakta orsaken till "
"felet beror på den underliggande plattformen."

#: ../../c-api/conversion.rst:51
msgid ""
"The following functions provide locale-independent string to number "
"conversions."
msgstr ""
"Följande funktioner ger lokaloberoende omvandling av strängar till tal."

#: ../../c-api/conversion.rst:56
msgid ""
"Convert a string ``s`` to a :c:type:`double`, raising a Python exception on "
"failure.  The set of accepted strings corresponds to the set of strings "
"accepted by Python's :func:`float` constructor, except that ``s`` must not "
"have leading or trailing whitespace. The conversion is independent of the "
"current locale."
msgstr ""

#: ../../c-api/conversion.rst:62
msgid ""
"If ``endptr`` is ``NULL``, convert the whole string.  Raise :exc:"
"`ValueError` and return ``-1.0`` if the string is not a valid representation "
"of a floating-point number."
msgstr ""
"Om ``endptr`` är ``NULL``, konvertera hela strängen.  Utlös :exc:"
"`ValueError` och returnera ``\\-1.0`` om strängen inte är en giltig "
"representation av ett flyttal."

#: ../../c-api/conversion.rst:66
msgid ""
"If endptr is not ``NULL``, convert as much of the string as possible and set "
"``*endptr`` to point to the first unconverted character.  If no initial "
"segment of the string is the valid representation of a floating-point "
"number, set ``*endptr`` to point to the beginning of the string, raise "
"ValueError, and return ``-1.0``."
msgstr ""
"Om endptr inte är ``NULL``, konvertera så mycket som möjligt av strängen och "
"sätt ``*endptr`` till att peka på det första okonverterade tecknet.  Om "
"inget inledande segment av strängen är en giltig representation av ett "
"flyttal, sätt ``*endptr`` till att peka på början av strängen, skapa "
"ValueError och returnera ``\\-1.0``."

#: ../../c-api/conversion.rst:73
msgid ""
"If ``s`` represents a value that is too large to store in a float (for "
"example, ``\"1e500\"`` is such a string on many platforms) then if "
"``overflow_exception`` is ``NULL`` return ``Py_HUGE_VAL`` (with an "
"appropriate sign) and don't set any exception.  Otherwise, "
"``overflow_exception`` must point to a Python exception object; raise that "
"exception and return ``-1.0``.  In both cases, set ``*endptr`` to point to "
"the first character after the converted value."
msgstr ""

#: ../../c-api/conversion.rst:81
msgid ""
"If any other error occurs during the conversion (for example an out-of-"
"memory error), set the appropriate Python exception and return ``-1.0``."
msgstr ""
"Om något annat fel inträffar under konverteringen (t.ex. ett fel som innebär "
"att minnet är slut), ska du ange lämpligt Python-undantag och returnera "
"``\\-1.0``."

#: ../../c-api/conversion.rst:90
msgid ""
"Convert a :c:type:`double` *val* to a string using supplied *format_code*, "
"*precision*, and *flags*."
msgstr ""

#: ../../c-api/conversion.rst:93
msgid ""
"*format_code* must be one of ``'e'``, ``'E'``, ``'f'``, ``'F'``, ``'g'``, "
"``'G'`` or ``'r'``.  For ``'r'``, the supplied *precision* must be 0 and is "
"ignored.  The ``'r'`` format code specifies the standard :func:`repr` format."
msgstr ""
"*format_code* måste vara en av ``'e'``, ``'E'``, ``'f'``, ``'F'``, ``'g'``, "
"``'G'`` eller ``'r'``.  För ``'r'`` måste den medföljande *precisionen* vara "
"0 och ignoreras.  Formatkoden ``'r'`` specificerar standardformatet :func:"
"`repr`."

#: ../../c-api/conversion.rst:98
msgid ""
"*flags* can be zero or more of the values ``Py_DTSF_SIGN``, "
"``Py_DTSF_ADD_DOT_0``, or ``Py_DTSF_ALT``, or-ed together:"
msgstr ""
"*flags* kan vara noll eller flera av värdena ``Py_DTSF_SIGN``, "
"``Py_DTSF_ADD_DOT_0``, eller ``Py_DTSF_ALT``, eller kombinerade:"

#: ../../c-api/conversion.rst:101
msgid ""
"``Py_DTSF_SIGN`` means to always precede the returned string with a sign "
"character, even if *val* is non-negative."
msgstr ""
"``Py_DTSF_SIGN`` innebär att den returnerade strängen alltid ska föregås av "
"ett tecken, även om *val* är icke-negativt."

#: ../../c-api/conversion.rst:104
msgid ""
"``Py_DTSF_ADD_DOT_0`` means to ensure that the returned string will not look "
"like an integer."
msgstr ""
"``Py_DTSF_ADD_DOT_0`` innebär att man säkerställer att den returnerade "
"strängen inte ser ut som ett heltal."

#: ../../c-api/conversion.rst:107
msgid ""
"``Py_DTSF_ALT`` means to apply \"alternate\" formatting rules.  See the "
"documentation for the :c:func:`PyOS_snprintf` ``'#'`` specifier for details."
msgstr ""
"``Py_DTSF_ALT`` innebär att tillämpa \"alternativa\" formateringsregler.  Se "
"dokumentationen för specificeraren :c:func:`PyOS_snprintf` ``'#'`` för mer "
"information."

#: ../../c-api/conversion.rst:111
msgid ""
"If *ptype* is non-``NULL``, then the value it points to will be set to one "
"of ``Py_DTST_FINITE``, ``Py_DTST_INFINITE``, or ``Py_DTST_NAN``, signifying "
"that *val* is a finite number, an infinite number, or not a number, "
"respectively."
msgstr ""
"Om *ptype* inte är ``NULL`` kommer värdet som den pekar på att sättas till "
"ett av ``Py_DTST_FINITE``, ``Py_DTST_INFINITE`` eller ``Py_DTST_NAN``, "
"vilket betyder att *val* är ett ändligt tal, ett oändligt tal eller inte ett "
"tal."

#: ../../c-api/conversion.rst:115
msgid ""
"The return value is a pointer to *buffer* with the converted string or "
"``NULL`` if the conversion failed. The caller is responsible for freeing the "
"returned string by calling :c:func:`PyMem_Free`."
msgstr ""
"Returvärdet är en pekare till *buffer* med den konverterade strängen eller "
"``NULL`` om konverteringen misslyckades. Anroparen är ansvarig för att "
"frigöra den returnerade strängen genom att anropa :c:func:`PyMem_Free`."

#: ../../c-api/conversion.rst:124
msgid ""
"Case insensitive comparison of strings. The function works almost "
"identically to :c:func:`strcmp` except that it ignores the case."
msgstr ""

#: ../../c-api/conversion.rst:130
msgid ""
"Case insensitive comparison of strings. The function works almost "
"identically to :c:func:`strncmp` except that it ignores the case."
msgstr ""
