# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# python-doc bot, 2025
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.10\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-10-17 17:19+0000\n"
"PO-Revision-Date: 2025-09-22 15:58+0000\n"
"Last-Translator: python-doc bot, 2025\n"
"Language-Team: Swedish (https://app.transifex.com/python-doc/teams/5390/"
"sv/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: sv\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"

#: ../../tutorial/interpreter.rst:5
msgid "Using the Python Interpreter"
msgstr "Använda Pythons tolkprogram"

#: ../../tutorial/interpreter.rst:11
msgid "Invoking the Interpreter"
msgstr "Anropa tolken"

#: ../../tutorial/interpreter.rst:13
msgid ""
"The Python interpreter is usually installed as :file:`/usr/local/bin/"
"python3.10` on those machines where it is available; putting :file:`/usr/"
"local/bin` in your Unix shell's search path makes it possible to start it by "
"typing the command:"
msgstr ""

#: ../../tutorial/interpreter.rst:21
msgid ""
"to the shell. [#]_ Since the choice of the directory where the interpreter "
"lives is an installation option, other places are possible; check with your "
"local Python guru or system administrator.  (E.g., :file:`/usr/local/python` "
"is a popular alternative location.)"
msgstr ""
"till skalet. [#]_ Eftersom valet av katalog där tolken bor är ett "
"installationsalternativ, är andra platser möjliga; kolla med din lokala "
"Python-guru eller systemadministratör.  (T.ex. är :file:`/usr/local/python` "
"en populär alternativ plats)"

#: ../../tutorial/interpreter.rst:26
msgid ""
"On Windows machines where you have installed Python from the :ref:`Microsoft "
"Store <windows-store>`, the :file:`python3.10` command will be available. If "
"you have the :ref:`py.exe launcher <launcher>` installed, you can use the :"
"file:`py` command. See :ref:`setting-envvars` for other ways to launch "
"Python."
msgstr ""

#: ../../tutorial/interpreter.rst:31
msgid ""
"Typing an end-of-file character (:kbd:`Control-D` on Unix, :kbd:`Control-Z` "
"on Windows) at the primary prompt causes the interpreter to exit with a zero "
"exit status.  If that doesn't work, you can exit the interpreter by typing "
"the following command: ``quit()``."
msgstr ""
"Om du skriver ett tecken för slutet av filen (:kbd:`Control-D` på Unix, :kbd:"
"`Control-Z` på Windows) vid den primära prompten avslutas tolken med "
"utgångsstatus noll.  Om det inte fungerar kan du avsluta tolken genom att "
"skriva följande kommando: ``quit()``."

#: ../../tutorial/interpreter.rst:36
msgid ""
"The interpreter's line-editing features include interactive editing, history "
"substitution and code completion on systems that support the `GNU Readline "
"<https://tiswww.case.edu/php/chet/readline/rltop.html>`_ library. Perhaps "
"the quickest check to see whether command line editing is supported is "
"typing :kbd:`Control-P` to the first Python prompt you get.  If it beeps, "
"you have command line editing; see Appendix :ref:`tut-interacting` for an "
"introduction to the keys.  If nothing appears to happen, or if ``^P`` is "
"echoed, command line editing isn't available; you'll only be able to use "
"backspace to remove characters from the current line."
msgstr ""
"Tolkens funktioner för radredigering inkluderar interaktiv redigering, "
"historikersättning och kodkomplettering på system som stöder biblioteket "
"`GNU Readline <https://tiswww.case.edu/php/chet/readline/rltop.html>`_. Den "
"kanske snabbaste kontrollen för att se om kommandoradsredigering stöds är "
"att skriva :kbd:`Control-P` till den första Python-prompten du får.  Om det "
"piper har du kommandoradsredigering; se Appendix :ref:`tut-interacting` för "
"en introduktion till tangenterna.  Om ingenting verkar hända, eller om "
"``^P`` ekas, är kommandoradsredigering inte tillgänglig; du kan bara använda "
"backspace för att ta bort tecken från den aktuella raden."

#: ../../tutorial/interpreter.rst:46
msgid ""
"The interpreter operates somewhat like the Unix shell: when called with "
"standard input connected to a tty device, it reads and executes commands "
"interactively; when called with a file name argument or with a file as "
"standard input, it reads and executes a *script* from that file."
msgstr ""
"Tolken fungerar ungefär som Unix-skalet: när den anropas med "
"standardinmatning ansluten till en tty-enhet läser och utför den kommandon "
"interaktivt; när den anropas med ett filnamnsargument eller med en fil som "
"standardinmatning läser och utför den ett *skript* från den filen."

#: ../../tutorial/interpreter.rst:51
msgid ""
"A second way of starting the interpreter is ``python -c command [arg] ...``, "
"which executes the statement(s) in *command*, analogous to the shell's :"
"option:`-c` option.  Since Python statements often contain spaces or other "
"characters that are special to the shell, it is usually advised to quote "
"*command* in its entirety."
msgstr ""
"Ett annat sätt att starta tolken är ``python -c command [arg] ...``, som "
"exekverar satsen/satserna i *command*, på samma sätt som skalets :option:`-"
"c`.  Eftersom Python-satser ofta innehåller mellanslag eller andra tecken "
"som är speciella för skalet, är det oftast lämpligt att citera *command* i "
"sin helhet."

#: ../../tutorial/interpreter.rst:57
msgid ""
"Some Python modules are also useful as scripts.  These can be invoked using "
"``python -m module [arg] ...``, which executes the source file for *module* "
"as if you had spelled out its full name on the command line."
msgstr ""
"Vissa Python-moduler är också användbara som skript.  Dessa kan anropas med "
"``python -m module [arg] ...``, som exekverar källfilen för *module* som om "
"du hade stavat ut hela namnet på kommandoraden."

#: ../../tutorial/interpreter.rst:61
msgid ""
"When a script file is used, it is sometimes useful to be able to run the "
"script and enter interactive mode afterwards.  This can be done by passing :"
"option:`-i` before the script."
msgstr ""
"När en skriptfil används är det ibland användbart att kunna köra skriptet "
"och gå in i interaktivt läge efteråt.  Detta kan göras genom att skicka :"
"option:`-i` före skriptet."

#: ../../tutorial/interpreter.rst:65
msgid "All command line options are described in :ref:`using-on-general`."
msgstr "Alla kommandoradsalternativ beskrivs i :ref:`using-on-general`."

#: ../../tutorial/interpreter.rst:71
msgid "Argument Passing"
msgstr "Överföring av argument"

#: ../../tutorial/interpreter.rst:73
msgid ""
"When known to the interpreter, the script name and additional arguments "
"thereafter are turned into a list of strings and assigned to the ``argv`` "
"variable in the ``sys`` module.  You can access this list by executing "
"``import sys``.  The length of the list is at least one; when no script and "
"no arguments are given, ``sys.argv[0]`` is an empty string.  When the script "
"name is given as ``'-'`` (meaning  standard input), ``sys.argv[0]`` is set "
"to ``'-'``.  When :option:`-c` *command* is used, ``sys.argv[0]`` is set to "
"``'-c'``.  When :option:`-m` *module* is used, ``sys.argv[0]``  is set to "
"the full name of the located module.  Options found after  :option:`-c` "
"*command* or :option:`-m` *module* are not consumed  by the Python "
"interpreter's option processing but left in ``sys.argv`` for  the command or "
"module to handle."
msgstr ""
"När tolken känner till skriptnamnet och de ytterligare argument som följer "
"omvandlas de till en lista med strängar och tilldelas variabeln ``argv`` i "
"modulen ``sys``.  Du kan komma åt den här listan genom att köra ``import "
"sys``.  Längden på listan är minst ett; när inget skript och inga argument "
"anges är ```sys.argv[0]`` en tom sträng.  När skriptnamnet anges som ``'-'`` "
"(vilket betyder standardinmatning), sätts ``sys.argv[0]`` till ``'-'``.  "
"När :option:`-c` *kommando* används, sätts ``sys.argv[0]`` till ``'-c'``.  "
"När :option:`-m` *module* används, sätts ``sys.argv[0]`` till det "
"fullständiga namnet på den modul som finns.  Alternativ som hittas efter :"
"option:`-c` *kommando* eller :option:`-m` *modul* används inte av Python-"
"tolkens alternativbehandling utan lämnas kvar i ``sys.argv`` för kommandot "
"eller modulen att hantera."

#: ../../tutorial/interpreter.rst:89
msgid "Interactive Mode"
msgstr "Interaktivt läge"

#: ../../tutorial/interpreter.rst:91
msgid ""
"When commands are read from a tty, the interpreter is said to be in "
"*interactive mode*.  In this mode it prompts for the next command with the "
"*primary prompt*, usually three greater-than signs (``>>>``); for "
"continuation lines it prompts with the *secondary prompt*, by default three "
"dots (``...``). The interpreter prints a welcome message stating its version "
"number and a copyright notice before printing the first prompt:"
msgstr ""
"När kommandon läses från en tty sägs tolken befinna sig i *interaktivt "
"läge*.  I detta läge frågar den efter nästa kommando med den *primära "
"prompten*, vanligtvis tre större-än-tecken (``>>>``); för fortsättningsrader "
"frågar den med den *sekundära prompten*, som standard tre punkter (``...``). "
"Tolken skriver ut ett välkomstmeddelande med versionsnummer och ett "
"copyrightmeddelande innan den första prompten skrivs ut:"

#: ../../tutorial/interpreter.rst:108
msgid ""
"Continuation lines are needed when entering a multi-line construct. As an "
"example, take a look at this :keyword:`if` statement::"
msgstr ""
"Fortsättningsrader behövs när du skriver in en konstruktion med flera rader. "
"Som ett exempel, ta en titt på detta :keyword:`if`-sats::"

#: ../../tutorial/interpreter.rst:118
msgid "For more on interactive mode, see :ref:`tut-interac`."
msgstr "För mer information om interaktivt läge, se :ref:`tut-interac`."

#: ../../tutorial/interpreter.rst:124
msgid "The Interpreter and Its Environment"
msgstr "Tolken och dess omgivning"

#: ../../tutorial/interpreter.rst:130
msgid "Source Code Encoding"
msgstr "Kodning av källkod"

#: ../../tutorial/interpreter.rst:132
msgid ""
"By default, Python source files are treated as encoded in UTF-8.  In that "
"encoding, characters of most languages in the world can be used "
"simultaneously in string literals, identifiers and comments --- although the "
"standard library only uses ASCII characters for identifiers, a convention "
"that any portable code should follow.  To display all these characters "
"properly, your editor must recognize that the file is UTF-8, and it must use "
"a font that supports all the characters in the file."
msgstr ""
"Som standard behandlas Python-källfiler som kodade i UTF-8.  I den kodningen "
"kan tecken från de flesta språk i världen användas samtidigt i "
"stränglitteraler, identifierare och kommentarer --- även om "
"standardbiblioteket endast använder ASCII-tecken för identifierare, en "
"konvention som all portabel kod bör följa.  För att kunna visa alla dessa "
"tecken på rätt sätt måste din editor känna igen att filen är UTF-8 och "
"använda ett typsnitt som stöder alla tecken i filen."

#: ../../tutorial/interpreter.rst:140
msgid ""
"To declare an encoding other than the default one, a special comment line "
"should be added as the *first* line of the file.  The syntax is as follows::"
msgstr ""
"För att deklarera en annan kodning än standardkodningen måste en speciell "
"kommentarrad läggas till som *första* rad i filen.  Syntaxen är som följer::"

#: ../../tutorial/interpreter.rst:145
msgid "where *encoding* is one of the valid :mod:`codecs` supported by Python."
msgstr "där *encoding* är en av de giltiga :mod:`codecs` som stöds av Python."

#: ../../tutorial/interpreter.rst:147
msgid ""
"For example, to declare that Windows-1252 encoding is to be used, the first "
"line of your source code file should be::"
msgstr ""
"Om du t.ex. vill ange att Windows-1252-kodning ska användas ska den första "
"raden i källkodsfilen vara::"

#: ../../tutorial/interpreter.rst:152
msgid ""
"One exception to the *first line* rule is when the source code starts with "
"a :ref:`UNIX \"shebang\" line <tut-scripts>`.  In this case, the encoding "
"declaration should be added as the second line of the file.  For example::"
msgstr ""
"Ett undantag från *första raden*-regeln är när källkoden börjar med en :ref:"
"`UNIX \"shebang\"-rad <tut-scripts>`.  I så fall ska kodningsdeklarationen "
"läggas till som andra rad i filen.  Till exempel::"

#: ../../tutorial/interpreter.rst:160
msgid "Footnotes"
msgstr "Fotnoter"

#: ../../tutorial/interpreter.rst:161
msgid ""
"On Unix, the Python 3.x interpreter is by default not installed with the "
"executable named ``python``, so that it does not conflict with a "
"simultaneously installed Python 2.x executable."
msgstr ""
"På Unix installeras Python 3.x-tolken som standard inte med den körbara "
"filen med namnet ``python``, så att den inte hamnar i konflikt med en "
"samtidigt installerad Python 2.x-körbar fil."
