# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# python-doc bot, 2025
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.10\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-10-17 17:19+0000\n"
"PO-Revision-Date: 2025-09-22 15:58+0000\n"
"Last-Translator: python-doc bot, 2025\n"
"Language-Team: Swedish (https://app.transifex.com/python-doc/teams/5390/"
"sv/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: sv\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"

#: ../../tutorial/interactive.rst:5
msgid "Interactive Input Editing and History Substitution"
msgstr "Interaktiv inmatningsredigering och historikersättning"

#: ../../tutorial/interactive.rst:7
msgid ""
"Some versions of the Python interpreter support editing of the current input "
"line and history substitution, similar to facilities found in the Korn shell "
"and the GNU Bash shell.  This is implemented using the `GNU Readline`_ "
"library, which supports various styles of editing.  This library has its own "
"documentation which we won't duplicate here."
msgstr ""
"Vissa versioner av Python-tolken har stöd för redigering av den aktuella "
"inmatningsraden och historikersättning, liknande de funktioner som finns i "
"Korn-skalet och GNU Bash-skalet.  Detta implementeras med hjälp av "
"biblioteket `GNU Readline`_, som stöder olika redigeringsstilar.  Detta "
"bibliotek har sin egen dokumentation som vi inte kommer att duplicera här."

#: ../../tutorial/interactive.rst:17
msgid "Tab Completion and History Editing"
msgstr "Komplettering av flikar och historikredigering"

#: ../../tutorial/interactive.rst:19
msgid ""
"Completion of variable and module names is :ref:`automatically enabled "
"<rlcompleter-config>` at interpreter startup so that the :kbd:`Tab` key "
"invokes the completion function; it looks at Python statement names, the "
"current local variables, and the available module names.  For dotted "
"expressions such as ``string.a``, it will evaluate the expression up to the "
"final ``'.'`` and then suggest completions from the attributes of the "
"resulting object.  Note that this may execute application-defined code if an "
"object with a :meth:`__getattr__` method is part of the expression.  The "
"default configuration also saves your history into a file named :file:`."
"python_history` in your user directory. The history will be available again "
"during the next interactive interpreter session."
msgstr ""

#: ../../tutorial/interactive.rst:36
msgid "Alternatives to the Interactive Interpreter"
msgstr "Alternativ till den interaktiva tolken"

#: ../../tutorial/interactive.rst:38
msgid ""
"This facility is an enormous step forward compared to earlier versions of "
"the interpreter; however, some wishes are left: It would be nice if the "
"proper indentation were suggested on continuation lines (the parser knows if "
"an indent token is required next).  The completion mechanism might use the "
"interpreter's symbol table.  A command to check (or even suggest) matching "
"parentheses, quotes, etc., would also be useful."
msgstr ""

#: ../../tutorial/interactive.rst:45
msgid ""
"One alternative enhanced interactive interpreter that has been around for "
"quite some time is IPython_, which features tab completion, object "
"exploration and advanced history management.  It can also be thoroughly "
"customized and embedded into other applications.  Another similar enhanced "
"interactive environment is bpython_."
msgstr ""
"En alternativ förbättrad interaktiv tolk som har funnits ganska länge är "
"IPython_, som har tabbkomplettering, objektutforskning och avancerad "
"historikhantering.  Den kan också anpassas grundligt och bäddas in i andra "
"applikationer.  En annan liknande förbättrad interaktiv miljö är bpython_."
