# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# python-doc bot, 2025
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.11\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-10-15 16:36+0000\n"
"PO-Revision-Date: 2025-09-22 16:49+0000\n"
"Last-Translator: python-doc bot, 2025\n"
"Language-Team: Swedish (https://app.transifex.com/python-doc/teams/5390/"
"sv/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: sv\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"

#: ../../howto/gdb_helpers.rst:5
msgid "Debugging C API extensions and CPython Internals with GDB"
msgstr "Felsökning av C API-tillägg och CPython-interna funktioner med GDB"

#: ../../howto/gdb_helpers.rst:9
msgid ""
"This document explains how the Python GDB extension, ``python-gdb.py``, can "
"be used with the GDB debugger to debug CPython extensions and the CPython "
"interpreter itself."
msgstr ""
"Det här dokumentet förklarar hur Python GDB-tillägget, ``python-gdb.py``, "
"kan användas med GDB-debuggern för att debugga CPython-tillägg och själva "
"CPython-tolken."

#: ../../howto/gdb_helpers.rst:13
msgid ""
"When debugging low-level problems such as crashes or deadlocks, a low-level "
"debugger, such as GDB, is useful to diagnose and correct the issue. By "
"default, GDB (or any of its front-ends) doesn't support high-level "
"information specific to the CPython interpreter."
msgstr ""
"Vid felsökning av lågnivåproblem som krascher eller deadlocks är en "
"lågnivåfelsökare, som GDB, användbar för att diagnostisera och korrigera "
"problemet. Som standard stöder GDB (eller någon av dess frontend) inte "
"information på hög nivå som är specifik för CPython-tolken."

#: ../../howto/gdb_helpers.rst:18
msgid ""
"The ``python-gdb.py`` extension adds CPython interpreter information to GDB. "
"The extension helps introspect the stack of currently executing Python "
"functions. Given a Python object represented by a :c:expr:`PyObject *` "
"pointer, the extension surfaces the type and value of the object."
msgstr ""
"Tillägget ``python-gdb.py`` lägger till information om CPython-tolken i GDB. "
"Tillägget hjälper till att introspektera stacken för Python-funktioner som "
"körs för närvarande. Med tanke på ett Python-objekt som representeras av en :"
"c:expr:`PyObject *`\\-pekare, visar tillägget objektets typ och värde."

#: ../../howto/gdb_helpers.rst:23
msgid ""
"Developers who are working on CPython extensions or tinkering with parts of "
"CPython that are written in C can use this document to learn how to use the "
"``python-gdb.py`` extension with GDB."
msgstr ""
"Utvecklare som arbetar med tillägg till CPython eller med delar av CPython "
"som är skrivna i C kan använda det här dokumentet för att lära sig hur man "
"använder tillägget ``python-gdb.py`` med GDB."

#: ../../howto/gdb_helpers.rst:29
msgid ""
"This document assumes that you are familiar with the basics of GDB and the "
"CPython C API. It consolidates guidance from the `devguide <https://devguide."
"python.org>`_  and the `Python wiki <https://wiki.python.org/moin/"
"DebuggingWithGdb>`_."
msgstr ""
"Detta dokument förutsätter att du är bekant med grunderna i GDB och CPython "
"C API. Det konsoliderar vägledning från `devguide <https://devguide.python."
"org>`_ och `Python wiki <https://wiki.python.org/moin/DebuggingWithGdb>`_."

#: ../../howto/gdb_helpers.rst:36
msgid "Prerequisites"
msgstr "Förutsättningar"

#: ../../howto/gdb_helpers.rst:38
msgid "You need to have:"
msgstr "Du måste ha:"

#: ../../howto/gdb_helpers.rst:40
msgid ""
"GDB 7 or later. (For earlier versions of GDB, see ``Misc/gdbinit`` in the "
"CPython sources. Note that this file will be removed in Python 3.12.)"
msgstr ""

#: ../../howto/gdb_helpers.rst:42
msgid ""
"GDB-compatible debugging information for Python and any extension you are "
"debugging."
msgstr ""
"GDB-kompatibel felsökningsinformation för Python och alla tillägg som du "
"felsöker."

#: ../../howto/gdb_helpers.rst:44
msgid "The ``python-gdb.py`` extension."
msgstr "Tillägget ``python-gdb.py``."

#: ../../howto/gdb_helpers.rst:46
msgid ""
"The extension is built with Python, but might be distributed separately or "
"not at all. Below, we include tips for a few common systems as examples. "
"Note that even if the instructions match your system, they might be outdated."
msgstr ""
"Tillägget är byggt med Python, men kan distribueras separat eller inte alls. "
"Nedan finns tips för några vanliga system som exempel. Observera att även om "
"instruktionerna matchar ditt system kan de vara föråldrade."

#: ../../howto/gdb_helpers.rst:52
msgid "Setup with Python built from source"
msgstr "Installation med Python byggt från källkod"

#: ../../howto/gdb_helpers.rst:54
msgid ""
"When you build CPython from source, debugging information should be "
"available, and the build should add a ``python-gdb.py`` file to the root "
"directory of your repository."
msgstr ""
"När du bygger CPython från källkod bör felsökningsinformation vara "
"tillgänglig och byggandet bör lägga till en fil med namnet ``python-gdb.py`` "
"i rotkatalogen för ditt repository."

#: ../../howto/gdb_helpers.rst:58
msgid ""
"To activate support, you must add the directory containing ``python-gdb.py`` "
"to GDB's \"auto-load-safe-path\". If you haven't done this, recent versions "
"of GDB will print out a warning with instructions on how to do this."
msgstr ""
"För att aktivera stödet måste du lägga till katalogen som innehåller "
"``python-gdb.py`` i GDB:s \"auto-load-safe-path\". Om du inte har gjort "
"detta kommer de senaste versionerna av GDB att skriva ut en varning med "
"instruktioner om hur du gör detta."

#: ../../howto/gdb_helpers.rst:65
msgid ""
"If you do not see instructions for your version of GDB, put this in your "
"configuration file (``~/.gdbinit`` or ``~/.config/gdb/gdbinit``)::"
msgstr ""
"Om du inte hittar några instruktioner för din version av GDB, skriv in detta "
"i din konfigurationsfil (``~/.gdbinit`` eller ``~/.config/gdb/gdbinit``)::"

#: ../../howto/gdb_helpers.rst:70
msgid "You can also add multiple paths, separated by ``:``."
msgstr "Du kan också lägga till flera sökvägar, åtskilda med ``:``."

#: ../../howto/gdb_helpers.rst:74
msgid "Setup for Python from a Linux distro"
msgstr "Installation för Python från en Linux-distro"

#: ../../howto/gdb_helpers.rst:76
msgid ""
"Most Linux systems provide debug information for the system Python in a "
"package called ``python-debuginfo``, ``python-dbg`` or similar. For example:"
msgstr ""
"De flesta Linux-system tillhandahåller felsökningsinformation för systemet "
"Python i ett paket som heter ``python-debuginfo``, ``python-dbg`` eller "
"liknande. Till exempel"

#: ../../howto/gdb_helpers.rst:80
msgid "Fedora:"
msgstr "Fedora:"

#: ../../howto/gdb_helpers.rst:87
msgid "Ubuntu:"
msgstr "Ubuntu:"

#: ../../howto/gdb_helpers.rst:93
msgid ""
"On several recent Linux systems, GDB can download debugging symbols "
"automatically using *debuginfod*. However, this will not install the "
"``python-gdb.py`` extension; you generally do need to install the debug info "
"package separately."
msgstr ""
"På flera nya Linux-system kan GDB hämta felsökningssymboler automatiskt med "
"hjälp av *debuginfod*. Detta kommer dock inte att installera tillägget "
"``python-gdb.py``; du behöver i allmänhet installera debug info-paketet "
"separat."

#: ../../howto/gdb_helpers.rst:100
msgid "Using the Debug build and Development mode"
msgstr "Använda Debug- och utvecklingsläget"

#: ../../howto/gdb_helpers.rst:102
msgid "For easier debugging, you might want to:"
msgstr "För enklare felsökning kanske du vill göra det:"

#: ../../howto/gdb_helpers.rst:104
msgid ""
"Use a :ref:`debug build <debug-build>` of Python. (When building from "
"source, use ``configure --with-pydebug``. On Linux distros, install and run "
"a package like ``python-debug`` or ``python-dbg``, if available.)"
msgstr ""
"Använd en :ref:`debug build <debug-build>` av Python. (När du bygger från "
"källkod, använd ``configure --with-pydebug``. På Linux-distributioner, "
"installera och kör ett paket som ``python-debug`` eller ``python-dbg``, om "
"det finns tillgängligt)"

#: ../../howto/gdb_helpers.rst:107
msgid "Use the runtime :ref:`development mode <devmode>` (``-X dev``)."
msgstr "Använd runtime :ref:`development mode <devmode>` (``\\-X dev``)."

#: ../../howto/gdb_helpers.rst:109
msgid ""
"Both enable extra assertions and disable some optimizations. Sometimes this "
"hides the bug you are trying to find, but in most cases they make the "
"process easier."
msgstr ""
"Båda aktiverar extra assertions och inaktiverar vissa optimeringar. Ibland "
"döljer detta felet du försöker hitta, men i de flesta fall gör de processen "
"enklare."

#: ../../howto/gdb_helpers.rst:115
msgid "Using the ``python-gdb`` extension"
msgstr "Använda tillägget ``python-gdb``"

#: ../../howto/gdb_helpers.rst:117
msgid ""
"When the extension is loaded, it provides two main features: pretty printers "
"for Python values, and additional commands."
msgstr ""
"När tillägget är laddat har det två huvudfunktioner: snygga skrivare för "
"Python-värden och ytterligare kommandon."

#: ../../howto/gdb_helpers.rst:121
msgid "Pretty-printers"
msgstr "Vackra skrivare"

#: ../../howto/gdb_helpers.rst:123
msgid ""
"This is what a GDB backtrace looks like (truncated) when this extension is "
"enabled::"
msgstr ""
"Så här ser en GDB-bakspårning ut (avkortad) när detta tillägg är aktiverat::"

#: ../../howto/gdb_helpers.rst:142
msgid ""
"Notice how the dictionary argument to ``PyDict_GetItemString`` is displayed "
"as its ``repr()``, rather than an opaque ``PyObject *`` pointer."
msgstr ""
"Lägg märke till hur ordboksargumentet till ``PyDict_GetItemString`` visas "
"som dess ``repr()``, snarare än en ogenomskinlig ``PyObject *``\\-pekare."

#: ../../howto/gdb_helpers.rst:145
msgid ""
"The extension works by supplying a custom printing routine for values of "
"type ``PyObject *``.  If you need to access lower-level details of an "
"object, then cast the value to a pointer of the appropriate type.  For "
"example::"
msgstr ""
"Tillägget fungerar genom att tillhandahålla en anpassad utskriftsrutin för "
"värden av typen ``PyObject *``.  Om du behöver komma åt detaljer på lägre "
"nivå i ett objekt, castar du värdet till en pekare av lämplig typ.  Till "
"exempel::"

#: ../../howto/gdb_helpers.rst:168
msgid ""
"Note that the pretty-printers do not actually call ``repr()``. For basic "
"types, they try to match its result closely."
msgstr ""
"Observera att pretty-printers faktiskt inte anropar ``repr()``. För "
"grundläggande typer försöker de matcha dess resultat nära."

#: ../../howto/gdb_helpers.rst:171
msgid ""
"An area that can be confusing is that the custom printer for some types look "
"a lot like GDB's built-in printer for standard types.  For example, the "
"pretty-printer for a Python ``int`` (:c:expr:`PyLongObject *`) gives a "
"representation that is not distinguishable from one of a regular machine-"
"level integer::"
msgstr ""
"Ett område som kan vara förvirrande är att den anpassade skrivaren för vissa "
"typer ser ut ungefär som GDB:s inbyggda skrivare för standardtyper.  Till "
"exempel ger pretty-printern för en Python ``int`` (:c:expr:`PyLongObject *`) "
"en representation som inte kan skiljas från en representation av ett vanligt "
"heltal på maskinnivå::"

#: ../../howto/gdb_helpers.rst:183
msgid ""
"The internal structure can be revealed with a cast to :c:expr:`PyLongObject "
"*`:"
msgstr ""

#: ../../howto/gdb_helpers.rst:185
msgid ""
"(gdb) p *(PyLongObject*)some_python_integer $5 = {ob_base = {ob_base = "
"{ob_refcnt = 8, ob_type = 0x3dad39f5e0}, ob_size = 1}, ob_digit = {42}}"
msgstr ""

#: ../../howto/gdb_helpers.rst:189
msgid ""
"A similar confusion can arise with the ``str`` type, where the output looks "
"a lot like gdb's built-in printer for ``char *``::"
msgstr ""
"En liknande förvirring kan uppstå med typen ``str``, där utdata ser ut "
"ungefär som gdb:s inbyggda skrivare för ``char *``::"

#: ../../howto/gdb_helpers.rst:195
msgid ""
"The pretty-printer for ``str`` instances defaults to using single-quotes (as "
"does Python's ``repr`` for strings) whereas the standard printer for ``char "
"*`` values uses double-quotes and contains a hexadecimal address::"
msgstr ""
"Pretty-printer för ``str`` -instanser använder som standard enkla "
"citattecken (precis som Pythons ``repr`` för strängar), medan "
"standardprinter för ``char *`` -värden använder dubbla citattecken och "
"innehåller en hexadecimal adress::"

#: ../../howto/gdb_helpers.rst:202
msgid ""
"Again, the implementation details can be revealed with a cast to :c:expr:"
"`PyUnicodeObject *`::"
msgstr ""
"Återigen kan implementeringsdetaljerna avslöjas med en cast till :c:expr:"
"`PyUnicodeObject *`::"

#: ../../howto/gdb_helpers.rst:210
msgid "``py-list``"
msgstr "``py-list``"

#: ../../howto/gdb_helpers.rst:212
msgid ""
"The extension adds a ``py-list`` command, which lists the Python source code "
"(if any) for the current frame in the selected thread.  The current line is "
"marked with a \">\"::"
msgstr ""
"Tillägget lägger till kommandot ``py-list``, som listar Python-källkoden (om "
"någon) för den aktuella bildrutan i den valda tråden.  Den aktuella raden "
"markeras med ett \">\"::"

#: ../../howto/gdb_helpers.rst:229
msgid ""
"Use ``py-list START`` to list at a different line number within the Python "
"source, and ``py-list START,END`` to list a specific range of lines within "
"the Python source."
msgstr ""
"Använd ``py-list START`` för att lista på ett annat radnummer i Python-"
"källan och ``py-list START,END`` för att lista ett specifikt intervall av "
"rader i Python-källan."

#: ../../howto/gdb_helpers.rst:234
msgid "``py-up`` and ``py-down``"
msgstr "``py-up`` and ``py-down``"

#: ../../howto/gdb_helpers.rst:236
msgid ""
"The ``py-up`` and ``py-down`` commands are analogous to GDB's regular ``up`` "
"and ``down`` commands, but try to move at the level of CPython frames, "
"rather than C frames."
msgstr ""
"Kommandona ``py-up`` och ``py-down`` är analoga med GDB:s vanliga kommandon "
"``up`` och ``down``, men försöker röra sig på nivån för CPython-ramar, "
"snarare än C-ramar."

#: ../../howto/gdb_helpers.rst:240
msgid ""
"GDB is not always able to read the relevant frame information, depending on "
"the optimization level with which CPython was compiled. Internally, the "
"commands look for C frames that are executing the default frame evaluation "
"function (that is, the core bytecode interpreter loop within CPython) and "
"look up the value of the related ``PyFrameObject *``."
msgstr ""
"GDB kan inte alltid läsa den relevanta raminformationen, beroende på "
"optimeringsnivån som CPython kompilerades med. Internt letar kommandona "
"efter C-ramar som kör standardfunktionen för ramutvärdering (det vill säga "
"den centrala bytecode-tolkningsloopen i CPython) och letar upp värdet på det "
"relaterade ``PyFrameObject *``."

#: ../../howto/gdb_helpers.rst:246
msgid "They emit the frame number (at the C level) within the thread."
msgstr "De sänder ut ramnumret (på C-nivå) inom tråden."

#: ../../howto/gdb_helpers.rst:248 ../../howto/gdb_helpers.rst:298
msgid "For example::"
msgstr "Till exempel::"

#: ../../howto/gdb_helpers.rst:261
msgid "so we're at the top of the Python stack."
msgstr "så vi är högst upp i Python-stacken."

#: ../../howto/gdb_helpers.rst:263
msgid ""
"The frame numbers correspond to those displayed by GDB's standard "
"``backtrace`` command. The command skips C frames which are not executing "
"Python code."
msgstr ""
"Ramnumren motsvarar de som visas av GDB:s standardkommando ``backtrace``. "
"Kommandot hoppar över C-rutor som inte exekverar Python-kod."

#: ../../howto/gdb_helpers.rst:267
msgid "Going back down::"
msgstr "Går ner igen::"

#: ../../howto/gdb_helpers.rst:289
msgid "and we're at the bottom of the Python stack."
msgstr "och vi är längst ner i Python-stacken."

#: ../../howto/gdb_helpers.rst:293
msgid "``py-bt``"
msgstr "``py-bt``"

#: ../../howto/gdb_helpers.rst:295
msgid ""
"The ``py-bt`` command attempts to display a Python-level backtrace of the "
"current thread."
msgstr ""
"Kommandot ``py-bt`` försöker visa en bakåtspårning på Python-nivå av den "
"aktuella tråden."

#: ../../howto/gdb_helpers.rst:314
msgid ""
"The frame numbers correspond to those displayed by GDB's standard "
"``backtrace`` command."
msgstr ""
"Ramnumren motsvarar de som visas med GDB:s standardkommando ``backtrace``."

#: ../../howto/gdb_helpers.rst:318
msgid "``py-print``"
msgstr "``py-print``"

#: ../../howto/gdb_helpers.rst:320
msgid ""
"The ``py-print`` command looks up a Python name and tries to print it. It "
"looks in locals within the current thread, then globals, then finally "
"builtins::"
msgstr ""
"Kommandot ``py-print`` letar upp ett Python-namn och försöker skriva ut det. "
"Det letar i lokala filer i den aktuella tråden, sedan i globala filer och "
"slutligen i builtins::"

#: ../../howto/gdb_helpers.rst:335
msgid "``py-locals``"
msgstr "``py-locals``"

#: ../../howto/gdb_helpers.rst:337
msgid ""
"The ``py-locals`` command looks up all Python locals within the current "
"Python frame in the selected thread, and prints their representations::"
msgstr ""
"Kommandot ``py-locals`` letar upp alla Python-locals inom den aktuella "
"Python-rutan i den valda tråden och skriver ut deras representationer::"

#: ../../howto/gdb_helpers.rst:347
msgid "Use with GDB commands"
msgstr "Använd med GDB-kommandon"

#: ../../howto/gdb_helpers.rst:349
msgid ""
"The extension commands complement GDB's built-in commands. For example, you "
"can use a frame numbers shown by ``py-bt`` with the ``frame`` command to go "
"a specific frame within the selected thread, like this::"
msgstr ""
"Tilläggskommandona kompletterar GDB:s inbyggda kommandon. Du kan till "
"exempel använda ett ramnummer som visas av ``py-bt`` med kommandot ``frame`` "
"för att gå till en specifik ram inom den valda tråden, så här::"

#: ../../howto/gdb_helpers.rst:368
msgid ""
"The ``info threads`` command will give you a list of the threads within the "
"process, and you can use the ``thread`` command to select a different one::"
msgstr ""
"Kommandot ``info threads`` ger dig en lista över trådarna i processen, och "
"du kan använda kommandot ``thread`` för att välja en annan::"

#: ../../howto/gdb_helpers.rst:376
msgid ""
"You can use ``thread apply all COMMAND`` or (``t a a COMMAND`` for short) to "
"run a command on all threads.  With ``py-bt``, this lets you see what every "
"thread is doing at the Python level::"
msgstr ""
"Du kan använda ``thread apply all COMMAND`` eller (``t a a COMMAND`` "
"förkortat) för att köra ett kommando på alla trådar.  Med ``py-bt`` kan du "
"se vad varje tråd gör på Python-nivå::"
