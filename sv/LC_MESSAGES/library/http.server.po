# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# python-doc bot, 2025
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.9\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-10-17 18:07+0000\n"
"PO-Revision-Date: 2025-09-22 17:55+0000\n"
"Last-Translator: python-doc bot, 2025\n"
"Language-Team: Swedish (https://app.transifex.com/python-doc/teams/5390/"
"sv/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: sv\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"

#: ../../library/http.server.rst:2
msgid ":mod:`http.server` --- HTTP servers"
msgstr ""

#: ../../library/http.server.rst:7
msgid "**Source code:** :source:`Lib/http/server.py`"
msgstr "**Källkod:** :source:`Lib/http/server.py`"

#: ../../library/http.server.rst:17
msgid ""
"This module defines classes for implementing HTTP servers (Web servers)."
msgstr ""

#: ../../library/http.server.rst:22
msgid ""
":mod:`http.server` is not recommended for production. It only implements :"
"ref:`basic security checks <http.server-security>`."
msgstr ""
":mod:`http.server` rekommenderas inte för produktion. Den implementerar "
"endast :ref:`grundläggande säkerhetskontroller <http.server-security>`."

#: ../../library/http.server.rst:25
msgid ""
"One class, :class:`HTTPServer`, is a :class:`socketserver.TCPServer` "
"subclass. It creates and listens at the HTTP socket, dispatching the "
"requests to a handler.  Code to create and run the server looks like this::"
msgstr ""
"En klass, :class:`HTTPServer`, är en :class:`socketserver.TCPServer`\\-"
"underklass. Den skapar och lyssnar på HTTP-sockeln och skickar "
"förfrågningarna till en hanterare.  Koden för att skapa och köra servern ser "
"ut så här::"

#: ../../library/http.server.rst:37
msgid ""
"This class builds on the :class:`~socketserver.TCPServer` class by storing "
"the server address as instance variables named :attr:`server_name` and :attr:"
"`server_port`. The server is accessible by the handler, typically through "
"the handler's :attr:`server` instance variable."
msgstr ""
"Den här klassen bygger på klassen :class:`~socketserver.TCPServer` genom att "
"lagra serveradressen som instansvariabler med namnen :attr:`server_name` "
"och :attr:`server_port`. Servern är åtkomlig för hanteraren, vanligtvis "
"genom hanterarens :attr:`server`\\-instansvariabel."

#: ../../library/http.server.rst:44
msgid ""
"This class is identical to HTTPServer but uses threads to handle requests by "
"using the :class:`~socketserver.ThreadingMixIn`. This is useful to handle "
"web browsers pre-opening sockets, on which :class:`HTTPServer` would wait "
"indefinitely."
msgstr ""
"Den här klassen är identisk med HTTPServer men använder trådar för att "
"hantera förfrågningar genom att använda :class:`~socketserver."
"ThreadingMixIn`. Detta är användbart för att hantera webbläsare som "
"föröppnar socklar, på vilka :class:`HTTPServer` skulle vänta på obestämd tid."

#: ../../library/http.server.rst:52
msgid ""
"The :class:`HTTPServer` and :class:`ThreadingHTTPServer` must be given a "
"*RequestHandlerClass* on instantiation, of which this module provides three "
"different variants:"
msgstr ""

#: ../../library/http.server.rst:58
msgid ""
"This class is used to handle the HTTP requests that arrive at the server.  "
"By itself, it cannot respond to any actual HTTP requests; it must be "
"subclassed to handle each request method (e.g. GET or POST). :class:"
"`BaseHTTPRequestHandler` provides a number of class and instance variables, "
"and methods for use by subclasses."
msgstr ""
"Den här klassen används för att hantera HTTP-förfrågningar som kommer till "
"servern.  I sig själv kan den inte svara på några faktiska HTTP-"
"förfrågningar; den måste underklassas för att hantera varje "
"förfrågningsmetod (t.ex. GET eller POST). :class:`BaseHTTPRequestHandler` "
"tillhandahåller ett antal klass- och instansvariabler och metoder för "
"användning av underklasser."

#: ../../library/http.server.rst:64
msgid ""
"The handler will parse the request and the headers, then call a method "
"specific to the request type. The method name is constructed from the "
"request. For example, for the request method ``SPAM``, the :meth:`do_SPAM` "
"method will be called with no arguments. All of the relevant information is "
"stored in instance variables of the handler.  Subclasses should not need to "
"override or extend the :meth:`__init__` method."
msgstr ""

#: ../../library/http.server.rst:71
msgid ":class:`BaseHTTPRequestHandler` has the following instance variables:"
msgstr ":class:`BaseHTTPRequestHandler` har följande instansvariabler:"

#: ../../library/http.server.rst:75
msgid ""
"Contains a tuple of the form ``(host, port)`` referring to the client's "
"address."
msgstr ""
"Innehåller en tupel av formen ``(host, port)`` som hänvisar till klientens "
"adress."

#: ../../library/http.server.rst:80
msgid "Contains the server instance."
msgstr "Innehåller serverinstansen."

#: ../../library/http.server.rst:84
msgid ""
"Boolean that should be set before :meth:`handle_one_request` returns, "
"indicating if another request may be expected, or if the connection should "
"be shut down."
msgstr ""
"Boolean som ska anges innan :meth:`handle_one_request` returneras, vilket "
"indikerar om en annan begäran kan väntas eller om anslutningen ska stängas "
"av."

#: ../../library/http.server.rst:90
msgid ""
"Contains the string representation of the HTTP request line. The terminating "
"CRLF is stripped. This attribute should be set by :meth:"
"`handle_one_request`. If no valid request line was processed, it should be "
"set to the empty string."
msgstr ""
"Innehåller en strängrepresentation av HTTP-begärans rad. Det avslutande CRLF "
"är borttaget. Detta attribut bör sättas av :meth:`handle_one_request`. Om "
"ingen giltig request-rad behandlades, bör det sättas till den tomma strängen."

#: ../../library/http.server.rst:97
msgid "Contains the command (request type). For example, ``'GET'``."
msgstr "Innehåller kommandot (typ av begäran). Till exempel ``'GET'``."

#: ../../library/http.server.rst:101
msgid ""
"Contains the request path. If query component of the URL is present, then "
"``path`` includes the query. Using the terminology of :rfc:`3986`, ``path`` "
"here includes ``hier-part`` and the ``query``."
msgstr ""
"Innehåller sökvägen till begäran. Om query-komponenten i URL:en finns med, "
"innehåller ``path`` även query. Med terminologin i :rfc:`3986` inkluderar "
"``path`` här ``hier-part`` och ``query``."

#: ../../library/http.server.rst:107
msgid ""
"Contains the version string from the request. For example, ``'HTTP/1.0'``."
msgstr ""
"Innehåller versionssträngen från begäran. Till exempel, ``'HTTP/1.0'``."

#: ../../library/http.server.rst:111
msgid ""
"Holds an instance of the class specified by the :attr:`MessageClass` class "
"variable. This instance parses and manages the headers in the HTTP request. "
"The :func:`~http.client.parse_headers` function from :mod:`http.client` is "
"used to parse the headers and it requires that the HTTP request provide a "
"valid :rfc:`2822` style header."
msgstr ""
"Innehåller en instans av den klass som anges av klassvariabeln :attr:"
"`MessageClass`. Denna instans analyserar och hanterar rubrikerna i HTTP-"
"begäran. Funktionen :func:`~http.client.parse_headers` från :mod:`http."
"client` används för att analysera rubrikerna och den kräver att HTTP-begäran "
"innehåller en giltig rubrik av typen :rfc:`2822`."

#: ../../library/http.server.rst:119
msgid ""
"An :class:`io.BufferedIOBase` input stream, ready to read from the start of "
"the optional input data."
msgstr ""
"En :class:`io.BufferedIOBase` inmatningsström, redo att läsas från början av "
"de valfria inmatningsdata."

#: ../../library/http.server.rst:124
msgid ""
"Contains the output stream for writing a response back to the client. Proper "
"adherence to the HTTP protocol must be used when writing to this stream in "
"order to achieve successful interoperation with HTTP clients."
msgstr ""
"Innehåller utdataströmmen för att skriva ett svar tillbaka till klienten. "
"HTTP-protokollet måste följas när du skriver till den här strömmen för att "
"du ska få ett bra samspel med HTTP-klienter."

#: ../../library/http.server.rst:129
msgid "This is an :class:`io.BufferedIOBase` stream."
msgstr "Detta är en :class:`io.BufferedIOBase`\\-ström."

#: ../../library/http.server.rst:132
msgid ":class:`BaseHTTPRequestHandler` has the following attributes:"
msgstr ":class:`BaseHTTPRequestHandler` har följande attribut:"

#: ../../library/http.server.rst:136
msgid ""
"Specifies the server software version.  You may want to override this. The "
"format is multiple whitespace-separated strings, where each string is of the "
"form name[/version]. For example, ``'BaseHTTP/0.2'``."
msgstr ""
"Anger serverns programvaruversion.  Du kanske vill åsidosätta detta. "
"Formatet är flera strängar separerade med blanksteg, där varje sträng är av "
"formen name[/version]. Till exempel ``'BaseHTTP/0.2'``."

#: ../../library/http.server.rst:142
msgid ""
"Contains the Python system version, in a form usable by the :attr:"
"`version_string` method and the :attr:`server_version` class variable. For "
"example, ``'Python/1.4'``."
msgstr ""
"Innehåller Python-systemets version, i en form som kan användas med metoden :"
"attr:`version_string` och klassvariabeln :attr:`server_version`. Till "
"exempel ``'Python/1.4'``."

#: ../../library/http.server.rst:148
msgid ""
"Specifies a format string that should be used by :meth:`send_error` method "
"for building an error response to the client. The string is filled by "
"default with variables from :attr:`responses` based on the status code that "
"passed to :meth:`send_error`."
msgstr ""
"Anger en formatsträng som ska användas av metoden :meth:`send_error` för att "
"bygga upp ett felsvar till klienten. Strängen fylls som standard med "
"variabler från :attr:`responses` baserat på den statuskod som skickades "
"till :meth:`send_error`."

#: ../../library/http.server.rst:155
msgid ""
"Specifies the Content-Type HTTP header of error responses sent to the "
"client.  The default value is ``'text/html'``."
msgstr ""
"Anger HTTP-huvudet Content-Type för felsvar som skickas till klienten.  "
"Standardvärdet är ``'text/html'``."

#: ../../library/http.server.rst:160
msgid ""
"This specifies the HTTP protocol version used in responses.  If set to "
"``'HTTP/1.1'``, the server will permit HTTP persistent connections; however, "
"your server *must* then include an accurate ``Content-Length`` header "
"(using :meth:`send_header`) in all of its responses to clients. For "
"backwards compatibility, the setting defaults to ``'HTTP/1.0'``."
msgstr ""

#: ../../library/http.server.rst:168
msgid ""
"Specifies an :class:`email.message.Message`\\ -like class to parse HTTP "
"headers.  Typically, this is not overridden, and it defaults to :class:`http."
"client.HTTPMessage`."
msgstr ""
"Anger en :class:`email.message.Message` -liknande klass för att analysera "
"HTTP-rubriker.  Vanligtvis åsidosätts inte detta, och standardvärdet är :"
"class:`http.client.HTTPMessage`."

#: ../../library/http.server.rst:174
msgid ""
"This attribute contains a mapping of error code integers to two-element "
"tuples containing a short and long message. For example, ``{code: "
"(shortmessage, longmessage)}``. The *shortmessage* is usually used as the "
"*message* key in an error response, and *longmessage* as the *explain* key.  "
"It is used by :meth:`send_response_only` and :meth:`send_error` methods."
msgstr ""
"Detta attribut innehåller en mappning av heltal för felkoder till tupler med "
"två element som innehåller ett kort och ett långt meddelande. Till exempel "
"``{kod: (kortmeddelande, långtmeddelande)}``. *shortmessage* används "
"vanligtvis som *message*-nyckel i ett felsvar, och *longmessage* som "
"*explain*-nyckel.  Den används av metoderna :meth:`send_response_only` och :"
"meth:`send_error`."

#: ../../library/http.server.rst:180
msgid "A :class:`BaseHTTPRequestHandler` instance has the following methods:"
msgstr "En :class:`BaseHTTPRequestHandler`\\-instans har följande metoder:"

#: ../../library/http.server.rst:184
msgid ""
"Calls :meth:`handle_one_request` once (or, if persistent connections are "
"enabled, multiple times) to handle incoming HTTP requests. You should never "
"need to override it; instead, implement appropriate :meth:`do_\\*` methods."
msgstr ""

#: ../../library/http.server.rst:191
msgid ""
"This method will parse and dispatch the request to the appropriate :meth:"
"`do_\\*` method.  You should never need to override it."
msgstr ""

#: ../../library/http.server.rst:196
msgid ""
"When a HTTP/1.1 compliant server receives an ``Expect: 100-continue`` "
"request header it responds back with a ``100 Continue`` followed by ``200 "
"OK`` headers. This method can be overridden to raise an error if the server "
"does not want the client to continue.  For e.g. server can choose to send "
"``417 Expectation Failed`` as a response header and ``return False``."
msgstr ""

#: ../../library/http.server.rst:207
msgid ""
"Sends and logs a complete error reply to the client. The numeric *code* "
"specifies the HTTP error code, with *message* as an optional, short, human "
"readable description of the error.  The *explain* argument can be used to "
"provide more detailed information about the error; it will be formatted "
"using the :attr:`error_message_format` attribute and emitted, after a "
"complete set of headers, as the response body.  The :attr:`responses` "
"attribute holds the default values for *message* and *explain* that will be "
"used if no value is provided; for unknown codes the default value for both "
"is the string ``???``. The body will be empty if the method is HEAD or the "
"response code is one of the following: ``1xx``, ``204 No Content``, ``205 "
"Reset Content``, ``304 Not Modified``."
msgstr ""

#: ../../library/http.server.rst:219
msgid ""
"The error response includes a Content-Length header. Added the *explain* "
"argument."
msgstr ""
"Felmeddelandet innehåller en Content-Length-rubrik. Argumentet *explain* har "
"lagts till."

#: ../../library/http.server.rst:225
msgid ""
"Adds a response header to the headers buffer and logs the accepted request. "
"The HTTP response line is written to the internal buffer, followed by "
"*Server* and *Date* headers. The values for these two headers are picked up "
"from the :meth:`version_string` and :meth:`date_time_string` methods, "
"respectively. If the server does not intend to send any other headers using "
"the :meth:`send_header` method, then :meth:`send_response` should be "
"followed by an :meth:`end_headers` call."
msgstr ""
"Lägger till en svarsrubrik i bufferten för rubriker och loggar den "
"accepterade begäran. HTTP-svarsraden skrivs till den interna bufferten, "
"följt av rubrikerna *Server* och *Date*. Värdena för dessa två rubriker "
"hämtas från metoderna :meth:`version_string` respektive :meth:"
"`date_time_string`. Om servern inte avser att skicka några andra rubriker "
"med metoden :meth:`send_header`, bör :meth:`send_response` följas av ett "
"anrop till :meth:`end_headers`."

#: ../../library/http.server.rst:234
msgid ""
"Headers are stored to an internal buffer and :meth:`end_headers` needs to be "
"called explicitly."
msgstr ""
"Headers lagras i en intern buffert och :meth:`end_headers` måste anropas "
"explicit."

#: ../../library/http.server.rst:240
msgid ""
"Adds the HTTP header to an internal buffer which will be written to the "
"output stream when either :meth:`end_headers` or :meth:`flush_headers` is "
"invoked. *keyword* should specify the header keyword, with *value* "
"specifying its value. Note that, after the send_header calls are done, :meth:"
"`end_headers` MUST BE called in order to complete the operation."
msgstr ""
"Lägger till HTTP-headern i en intern buffert som skrivs till utdataströmmen "
"när antingen :meth:`end_headers` eller :meth:`flush_headers` aktiveras. "
"*keyword* bör ange nyckelordet för rubriken, med *value* som anger dess "
"värde. Observera att efter att send_header-anropen har gjorts MÅSTE :meth:"
"`end_headers` anropas för att slutföra operationen."

#: ../../library/http.server.rst:246
msgid "Headers are stored in an internal buffer."
msgstr "Huvudrubrikerna lagras i en intern buffert."

#: ../../library/http.server.rst:251
msgid ""
"Sends the response header only, used for the purposes when ``100 Continue`` "
"response is sent by the server to the client. The headers not buffered and "
"sent directly the output stream.If the *message* is not specified, the HTTP "
"message corresponding the response *code*  is sent."
msgstr ""
"Skickar endast svarshuvudet, som används när svaret ``100 Continue`` skickas "
"från servern till klienten. Rubrikerna buffras inte utan skickas direkt till "
"utdataströmmen. Om *message* inte anges skickas det HTTP-meddelande som "
"motsvarar svarets *code*."

#: ../../library/http.server.rst:260
msgid ""
"Adds a blank line (indicating the end of the HTTP headers in the response) "
"to the headers buffer and calls :meth:`flush_headers()`."
msgstr ""

#: ../../library/http.server.rst:264
msgid "The buffered headers are written to the output stream."
msgstr "De buffrade sidhuvudena skrivs till utdataströmmen."

#: ../../library/http.server.rst:269
msgid ""
"Finally send the headers to the output stream and flush the internal headers "
"buffer."
msgstr ""
"Slutligen skickas rubrikerna till utdataströmmen och den interna bufferten "
"för rubriker töms."

#: ../../library/http.server.rst:276
msgid ""
"Logs an accepted (successful) request. *code* should specify the numeric "
"HTTP code associated with the response. If a size of the response is "
"available, then it should be passed as the *size* parameter."
msgstr ""
"Loggar en accepterad (lyckad) begäran. *code* bör ange den numeriska HTTP-"
"kod som är associerad med svaret. Om en storlek på svaret är tillgänglig, "
"ska den skickas som parametern *size*."

#: ../../library/http.server.rst:282
msgid ""
"Logs an error when a request cannot be fulfilled. By default, it passes the "
"message to :meth:`log_message`, so it takes the same arguments (*format* and "
"additional values)."
msgstr ""
"Loggar ett felmeddelande när en begäran inte kan uppfyllas. Som standard "
"skickas meddelandet till :meth:`log_message`, så det tar samma argument "
"(*format* och ytterligare värden)."

#: ../../library/http.server.rst:289
msgid ""
"Logs an arbitrary message to ``sys.stderr``. This is typically overridden to "
"create custom error logging mechanisms. The *format* argument is a standard "
"printf-style format string, where the additional arguments to :meth:"
"`log_message` are applied as inputs to the formatting. The client ip address "
"and current date and time are prefixed to every message logged."
msgstr ""
"Loggar ett godtyckligt meddelande till ``sys.stderr``. Detta åsidosätts "
"vanligen för att skapa egna mekanismer för felloggning. Argumentet *format* "
"är en standardformatsträng i printf-stil, där de ytterligare argumenten "
"till :meth:`log_message` används som input till formateringen. Klientens ip-"
"adress och aktuellt datum och tid prefixeras till varje loggat meddelande."

#: ../../library/http.server.rst:297
msgid ""
"Returns the server software's version string. This is a combination of the :"
"attr:`server_version` and :attr:`sys_version` attributes."
msgstr ""
"Returnerar serverprogramvarans versionssträng. Detta är en kombination av "
"attributen :attr:`server_version` och :attr:`sys_version`."

#: ../../library/http.server.rst:302
msgid ""
"Returns the date and time given by *timestamp* (which must be ``None`` or in "
"the format returned by :func:`time.time`), formatted for a message header. "
"If *timestamp* is omitted, it uses the current date and time."
msgstr ""
"Returnerar datum och tid som anges av *timestamp* (som måste vara ``None`` "
"eller i det format som returneras av :func:`time.time`), formaterat för ett "
"meddelandehuvud. Om *timestamp* utelämnas används aktuellt datum och aktuell "
"tid."

#: ../../library/http.server.rst:306
msgid "The result looks like ``'Sun, 06 Nov 1994 08:49:37 GMT'``."
msgstr "Resultatet ser ut som ``'Sun, 06 Nov 1994 08:49:37 GMT'``."

#: ../../library/http.server.rst:310
msgid "Returns the current date and time, formatted for logging."
msgstr "Returnerar aktuellt datum och tid, formaterat för loggning."

#: ../../library/http.server.rst:314
msgid "Returns the client address."
msgstr "Returnerar klientadressen."

#: ../../library/http.server.rst:316
msgid ""
"Previously, a name lookup was performed. To avoid name resolution delays, it "
"now always returns the IP address."
msgstr ""
"Tidigare gjordes en namnuppslagning. För att undvika fördröjningar i "
"namnupplösningen returneras nu alltid IP-adressen."

#: ../../library/http.server.rst:323
msgid ""
"This class serves files from the directory *directory* and below, or the "
"current directory if *directory* is not provided, directly mapping the "
"directory structure to HTTP requests."
msgstr ""
"Den här klassen serverar filer från katalogen *directory* och nedåt, eller "
"den aktuella katalogen om *directory* inte anges, och mappar "
"katalogstrukturen direkt till HTTP-begäranden."

#: ../../library/http.server.rst:327
msgid "The *directory* parameter."
msgstr ""

#: ../../library/http.server.rst:330
msgid "The *directory* parameter accepts a :term:`path-like object`."
msgstr "Parametern *directory* accepterar en :term:`path-like object`."

#: ../../library/http.server.rst:333
msgid ""
"A lot of the work, such as parsing the request, is done by the base class :"
"class:`BaseHTTPRequestHandler`.  This class implements the :func:`do_GET` "
"and :func:`do_HEAD` functions."
msgstr ""
"En stor del av arbetet, t.ex. parsning av begäran, görs av basklassen :class:"
"`BaseHTTPRequestHandler`.  Denna klass implementerar funktionerna :func:"
"`do_GET` och :func:`do_HEAD`."

#: ../../library/http.server.rst:337
msgid ""
"The following are defined as class-level attributes of :class:"
"`SimpleHTTPRequestHandler`:"
msgstr ""
"Följande är definierade som attribut på klassnivå för :class:"
"`SimpleHTTPRequestHandler`:"

#: ../../library/http.server.rst:342
msgid ""
"This will be ``\"SimpleHTTP/\" + __version__``, where ``__version__`` is "
"defined at the module level."
msgstr ""
"Detta kommer att vara ``\"SimpleHTTP/\" + __version__``, där ``__version__`` "
"definieras på modulnivå."

#: ../../library/http.server.rst:347
msgid ""
"A dictionary mapping suffixes into MIME types, contains custom overrides for "
"the default system mappings. The mapping is used case-insensitively, and so "
"should contain only lower-cased keys."
msgstr ""
"En ordbok som mappar suffix till MIME-typer, innehåller anpassade "
"åsidosättningar för systemets standardmappningar. Mappningen används utan "
"hänsyn till skiftlägesskillnader och bör därför endast innehålla nycklar med "
"gemener."

#: ../../library/http.server.rst:351
msgid ""
"This dictionary is no longer filled with the default system mappings, but "
"only contains overrides."
msgstr ""
"Denna ordbok är inte längre fylld med systemets standardmappningar, utan "
"innehåller endast åsidosättningar."

#: ../../library/http.server.rst:355
msgid ""
"The :class:`SimpleHTTPRequestHandler` class defines the following methods:"
msgstr "Klassen :class:`SimpleHTTPRequestHandler` definierar följande metoder:"

#: ../../library/http.server.rst:359
msgid ""
"This method serves the ``'HEAD'`` request type: it sends the headers it "
"would send for the equivalent ``GET`` request. See the :meth:`do_GET` method "
"for a more complete explanation of the possible headers."
msgstr ""
"Denna metod betjänar ``'HEAD'``\\-begärandetypen: den skickar de rubriker "
"som den skulle skicka för motsvarande ``GET``\\-begärande. Se :meth:"
"`do_GET`\\-metoden för en mer fullständig förklaring av de möjliga "
"rubrikerna."

#: ../../library/http.server.rst:365
msgid ""
"The request is mapped to a local file by interpreting the request as a path "
"relative to the current working directory."
msgstr ""
"Begäran mappas till en lokal fil genom att tolka begäran som en sökväg i "
"förhållande till den aktuella arbetskatalogen."

#: ../../library/http.server.rst:368
msgid ""
"If the request was mapped to a directory, the directory is checked for a "
"file named ``index.html`` or ``index.htm`` (in that order). If found, the "
"file's contents are returned; otherwise a directory listing is generated by "
"calling the :meth:`list_directory` method. This method uses :func:`os."
"listdir` to scan the directory, and returns a ``404`` error response if the :"
"func:`~os.listdir` fails."
msgstr ""
"Om begäran mappades till en katalog, kontrolleras om katalogen innehåller en "
"fil med namnet ``index.html`` eller ``index.htm`` (i den ordningen). Om den "
"hittas returneras filens innehåll, annars genereras en kataloglista genom "
"att anropa metoden :meth:`list_directory`. Denna metod använder :func:`os."
"listdir` för att skanna katalogen och returnerar ett ``404``\\-felsvar om :"
"func:`~os.listdir` misslyckas."

#: ../../library/http.server.rst:375
msgid ""
"If the request was mapped to a file, it is opened. Any :exc:`OSError` "
"exception in opening the requested file is mapped to a ``404``, ``'File not "
"found'`` error. If there was a ``'If-Modified-Since'`` header in the "
"request, and the file was not modified after this time, a ``304``, ``'Not "
"Modified'`` response is sent. Otherwise, the content type is guessed by "
"calling the :meth:`guess_type` method, which in turn uses the "
"*extensions_map* variable, and the file contents are returned."
msgstr ""

#: ../../library/http.server.rst:383
msgid ""
"A ``'Content-type:'`` header with the guessed content type is output, "
"followed by a ``'Content-Length:'`` header with the file's size and a "
"``'Last-Modified:'`` header with the file's modification time."
msgstr ""
"En ``'Content-type:'`` header med den gissade innehållstypen matas ut, följt "
"av en ``'Content-Length:'`` header med filens storlek och en ``'Last-"
"Modified:'`` header med filens ändringstid."

#: ../../library/http.server.rst:387
msgid ""
"Then follows a blank line signifying the end of the headers, and then the "
"contents of the file are output. If the file's MIME type starts with ``text/"
"`` the file is opened in text mode; otherwise binary mode is used."
msgstr ""

#: ../../library/http.server.rst:391
msgid ""
"For example usage, see the implementation of the :func:`test` function "
"invocation in the :mod:`http.server` module."
msgstr ""

#: ../../library/http.server.rst:394
msgid "Support of the ``'If-Modified-Since'`` header."
msgstr "Stöd för rubriken ``'If-Modified-Since'``."

#: ../../library/http.server.rst:397
msgid ""
"The :class:`SimpleHTTPRequestHandler` class can be used in the following "
"manner in order to create a very basic webserver serving files relative to "
"the current directory::"
msgstr ""
"Klassen :class:`SimpleHTTPRequestHandler` kan användas på följande sätt för "
"att skapa en mycket enkel webbserver som serverar filer i förhållande till "
"den aktuella katalogen::"

#: ../../library/http.server.rst:414
msgid ""
":mod:`http.server` can also be invoked directly using the :option:`-m` "
"switch of the interpreter.  Similar to the previous example, this serves "
"files relative to the current directory::"
msgstr ""

#: ../../library/http.server.rst:420
msgid ""
"The server listens to port 8000 by default. The default can be overridden by "
"passing the desired port number as an argument::"
msgstr ""
"Servern lyssnar på port 8000 som standard. Standardinställningen kan "
"åsidosättas genom att ange önskat portnummer som ett argument::"

#: ../../library/http.server.rst:425
msgid ""
"By default, the server binds itself to all interfaces.  The option ``-b/--"
"bind`` specifies a specific address to which it should bind. Both IPv4 and "
"IPv6 addresses are supported. For example, the following command causes the "
"server to bind to localhost only::"
msgstr ""

#: ../../library/http.server.rst:432
msgid "``--bind`` argument was introduced."
msgstr ""

#: ../../library/http.server.rst:435
msgid "``--bind`` argument enhanced to support IPv6"
msgstr ""

#: ../../library/http.server.rst:438
msgid ""
"By default, the server uses the current directory. The option ``-d/--"
"directory`` specifies a directory to which it should serve the files. For "
"example, the following command uses a specific directory::"
msgstr ""

#: ../../library/http.server.rst:444
msgid "``--directory`` argument was introduced."
msgstr ""

#: ../../library/http.server.rst:449
msgid ""
"This class is used to serve either files or output of CGI scripts from the "
"current directory and below. Note that mapping HTTP hierarchic structure to "
"local directory structure is exactly as in :class:`SimpleHTTPRequestHandler`."
msgstr ""
"Denna klass används för att servera antingen filer eller utdata från CGI-"
"skript från den aktuella katalogen och nedåt. Observera att mappning av HTTP-"
"hierarkisk struktur till lokal katalogstruktur är exakt som i :class:"
"`SimpleHTTPRequestHandler`."

#: ../../library/http.server.rst:455
msgid ""
"CGI scripts run by the :class:`CGIHTTPRequestHandler` class cannot execute "
"redirects (HTTP code 302), because code 200 (script output follows) is sent "
"prior to execution of the CGI script.  This pre-empts the status code."
msgstr ""
"CGI-skript som körs av :class:`CGIHTTPRequestHandler`\\-klassen kan inte "
"utföra omdirigeringar (HTTP-kod 302), eftersom kod 200 (skriptutdata följer) "
"skickas innan CGI-skriptet körs.  Detta föregår statuskoden."

#: ../../library/http.server.rst:460
msgid ""
"The class will however, run the CGI script, instead of serving it as a file, "
"if it guesses it to be a CGI script.  Only directory-based CGI are used --- "
"the other common server configuration is to treat special extensions as "
"denoting CGI scripts."
msgstr ""
"Klassen kommer dock att köra CGI-skriptet, istället för att servera det som "
"en fil, om den gissar att det är ett CGI-skript.  Endast katalogbaserade CGI "
"används --- den andra vanliga serverkonfigurationen är att behandla "
"speciella tillägg som betecknar CGI-skript."

#: ../../library/http.server.rst:465
msgid ""
"The :func:`do_GET` and :func:`do_HEAD` functions are modified to run CGI "
"scripts and serve the output, instead of serving files, if the request leads "
"to somewhere below the ``cgi_directories`` path."
msgstr ""
"Funktionerna :func:`do_GET` och :func:`do_HEAD` är modifierade så att de kör "
"CGI-skript och serverar utdata i stället för att servera filer om begäran "
"leder till en plats under sökvägen ``cgi_directories``."

#: ../../library/http.server.rst:469
msgid "The :class:`CGIHTTPRequestHandler` defines the following data member:"
msgstr "Klassen :class:`CGIHTTPRequestHandler` definierar följande datamedlem:"

#: ../../library/http.server.rst:473
msgid ""
"This defaults to ``['/cgi-bin', '/htbin']`` and describes directories to "
"treat as containing CGI scripts."
msgstr ""
"Standardvärdet är ``['/cgi-bin', '/htbin']`` och beskriver kataloger som ska "
"behandlas som innehållande CGI-skript."

#: ../../library/http.server.rst:476
msgid "The :class:`CGIHTTPRequestHandler` defines the following method:"
msgstr ":class:`CGIHTTPRequestHandler` definierar följande metod:"

#: ../../library/http.server.rst:480
msgid ""
"This method serves the ``'POST'`` request type, only allowed for CGI "
"scripts.  Error 501, \"Can only POST to CGI scripts\", is output when trying "
"to POST to a non-CGI url."
msgstr ""
"Denna metod serverar begärandetypen ``'POST``, som endast är tillåten för "
"CGI-skript.  Fel 501, \"Can only POST to CGI scripts\", visas när man "
"försöker POSTa till en url som inte är CGI."

#: ../../library/http.server.rst:484
msgid ""
"Note that CGI scripts will be run with UID of user nobody, for security "
"reasons.  Problems with the CGI script will be translated to error 403."
msgstr ""
"Observera att CGI-skript kommer att köras med UID för användaren nobody, av "
"säkerhetsskäl.  Problem med CGI-skriptet kommer att översättas till fel 403."

#: ../../library/http.server.rst:487
msgid ""
":class:`CGIHTTPRequestHandler` can be enabled in the command line by passing "
"the ``--cgi`` option::"
msgstr ""
":class:`CGIHTTPRequestHandler` kan aktiveras på kommandoraden genom att ange "
"alternativet ``\\--cgi``::"

#: ../../library/http.server.rst:495
msgid "Security Considerations"
msgstr "Säkerhetsöverväganden"

#: ../../library/http.server.rst:499
msgid ""
":class:`SimpleHTTPRequestHandler` will follow symbolic links when handling "
"requests, this makes it possible for files outside of the specified "
"directory to be served."
msgstr ""
":class:`SimpleHTTPRequestHandler` kommer att följa symboliska länkar vid "
"hantering av förfrågningar, vilket gör det möjligt för filer utanför den "
"angivna katalogen att serveras."

#: ../../library/http.server.rst:503
msgid ""
"Earlier versions of Python did not scrub control characters from the log "
"messages emitted to stderr from ``python -m http.server`` or the default :"
"class:`BaseHTTPRequestHandler` ``.log_message`` implementation. This could "
"allow remote clients connecting to your server to send nefarious control "
"codes to your terminal."
msgstr ""
"Tidigare versioner av Python rensade inte bort kontrolltecken från "
"loggmeddelanden som sändes till stderr från ``python -m http.server`` eller "
"standardimplementationen :class:`BaseHTTPRequestHandler` ``.log_message``. "
"Detta kan göra det möjligt för fjärrklienter som ansluter till din server "
"att skicka skumma kontrollkoder till din terminal."

#: ../../library/http.server.rst:509
msgid "scrubbing control characters from log messages"
msgstr ""
