# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# python-doc bot, 2025
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.9\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-25 18:05+0000\n"
"PO-Revision-Date: 2025-09-22 17:55+0000\n"
"Last-Translator: python-doc bot, 2025\n"
"Language-Team: Swedish (https://app.transifex.com/python-doc/teams/5390/sv/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: sv\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"

#: ../../library/os.path.rst:2
msgid ":mod:`os.path` --- Common pathname manipulations"
msgstr ""

#: ../../library/os.path.rst:7
msgid ""
"**Source code:** :source:`Lib/posixpath.py` (for POSIX) and "
":source:`Lib/ntpath.py` (for Windows)."
msgstr ""

#: ../../library/os.path.rst:14
msgid ""
"This module implements some useful functions on pathnames. To read or write "
"files see :func:`open`, and for accessing the filesystem see the :mod:`os` "
"module. The path parameters can be passed as strings, or bytes, or any "
"object implementing the :class:`os.PathLike` protocol."
msgstr ""
"Den här modulen implementerar några användbara funktioner för sökvägsnamn. "
"För att läsa eller skriva filer se :func:`open`, och för åtkomst till "
"filsystemet se :mod:`os`\\-modulen. Sökvägsparametrarna kan skickas som "
"strängar, bytes eller objekt som implementerar "
":class:`os.PathLike`\\-protokollet."

#: ../../library/os.path.rst:19
msgid ""
"Unlike a unix shell, Python does not do any *automatic* path expansions. "
"Functions such as :func:`expanduser` and :func:`expandvars` can be invoked "
"explicitly when an application desires shell-like path expansion.  (See also"
" the :mod:`glob` module.)"
msgstr ""

#: ../../library/os.path.rst:26
msgid "The :mod:`pathlib` module offers high-level path objects."
msgstr "Modulen :mod:`pathlib` erbjuder sökvägsobjekt på hög nivå."

#: ../../library/os.path.rst:31
msgid ""
"All of these functions accept either only bytes or only string objects as "
"their parameters.  The result is an object of the same type, if a path or "
"file name is returned."
msgstr ""
"Alla dessa funktioner accepterar antingen bara bytes eller bara strängobjekt"
" som sina parametrar.  Resultatet är ett objekt av samma typ om en sökväg "
"eller ett filnamn returneras."

#: ../../library/os.path.rst:37
msgid ""
"Since different operating systems have different path name conventions, "
"there are several versions of this module in the standard library.  The "
":mod:`os.path` module is always the path module suitable for the operating "
"system Python is running on, and therefore usable for local paths.  However,"
" you can also import and use the individual modules if you want to "
"manipulate a path that is *always* in one of the different formats.  They "
"all have the same interface:"
msgstr ""
"Eftersom olika operativsystem har olika konventioner för sökvägsnamn finns "
"det flera versioner av denna modul i standardbiblioteket.  Modulen "
":mod:`os.path` är alltid den sökvägsmodul som är lämplig för det "
"operativsystem som Python körs på, och kan därför användas för lokala "
"sökvägar.  Men du kan också importera och använda de enskilda modulerna om "
"du vill manipulera en sökväg som *alltid* är i ett av de olika formaten.  De"
" har alla samma gränssnitt:"

#: ../../library/os.path.rst:45
msgid ":mod:`posixpath` for UNIX-style paths"
msgstr ""

#: ../../library/os.path.rst:46
msgid ":mod:`ntpath` for Windows paths"
msgstr ""

#: ../../library/os.path.rst:51
msgid ""
":func:`exists`, :func:`lexists`, :func:`isdir`, :func:`isfile`, "
":func:`islink`, and :func:`ismount` now return ``False`` instead of raising "
"an exception for paths that contain characters or bytes unrepresentable at "
"the OS level."
msgstr ""
":func:`exists`, :func:`lexists`, :func:`isdir`, :func:`isfile`, "
":func:`islink` och :func:`ismount` returnerar nu ``False`` istället för att "
"skapa ett undantag för sökvägar som innehåller tecken eller byte som inte "
"kan representeras på OS-nivå."

#: ../../library/os.path.rst:59
msgid ""
"Return a normalized absolutized version of the pathname *path*. On most "
"platforms, this is equivalent to calling the function :func:`normpath` as "
"follows: ``normpath(join(os.getcwd(), path))``."
msgstr ""
"Returnerar en normaliserad absolutiserad version av sökvägsnamnet *path*. På"
" de flesta plattformar är detta likvärdigt med att anropa funktionen "
":func:`normpath` enligt följande: ``normpath(join(os.getcwd(), path))``."

#: ../../library/os.path.rst:63 ../../library/os.path.rst:76
#: ../../library/os.path.rst:116 ../../library/os.path.rst:125
#: ../../library/os.path.rst:141 ../../library/os.path.rst:151
#: ../../library/os.path.rst:177 ../../library/os.path.rst:197
#: ../../library/os.path.rst:214 ../../library/os.path.rst:226
#: ../../library/os.path.rst:235 ../../library/os.path.rst:245
#: ../../library/os.path.rst:255 ../../library/os.path.rst:265
#: ../../library/os.path.rst:275 ../../library/os.path.rst:294
#: ../../library/os.path.rst:324 ../../library/os.path.rst:344
#: ../../library/os.path.rst:383 ../../library/os.path.rst:414
#: ../../library/os.path.rst:432 ../../library/os.path.rst:445
#: ../../library/os.path.rst:461 ../../library/os.path.rst:477
#: ../../library/os.path.rst:502 ../../library/os.path.rst:533
msgid "Accepts a :term:`path-like object`."
msgstr "Accepterar en :term:`path-like object`."

#: ../../library/os.path.rst:69
msgid ""
"Return the base name of pathname *path*.  This is the second element of the "
"pair returned by passing *path* to the function :func:`split`.  Note that "
"the result of this function is different from the Unix :program:`basename` "
"program; where :program:`basename` for ``'/foo/bar/'`` returns ``'bar'``, "
"the :func:`basename` function returns an empty string (``''``)."
msgstr ""
"Returnerar basnamnet för sökvägsnamnet *sökväg*.  Detta är det andra "
"elementet i det par som returneras genom att skicka *path* till funktionen "
":func:`split`.  Observera att resultatet av denna funktion skiljer sig från "
"Unix :program:`basename`\\-program; där :program:`basename` för "
"``'/foo/bar/'`` returnerar ``'bar'``, returnerar "
":func:`basename`\\-funktionen en tom sträng (``''``)."

#: ../../library/os.path.rst:82
msgid ""
"Return the longest common sub-path of each pathname in the sequence *paths*."
"  Raise :exc:`ValueError` if *paths* contain both absolute and relative "
"pathnames, the *paths* are on the different drives or if *paths* is empty.  "
"Unlike :func:`commonprefix`, this returns a valid path."
msgstr ""

#: ../../library/os.path.rst:89 ../../library/os.path.rst:413
#: ../../library/os.path.rst:425 ../../library/os.path.rst:441
#: ../../library/os.path.rst:457
msgid ":ref:`Availability <availability>`: Unix, Windows."
msgstr ""

#: ../../library/os.path.rst:92
msgid "Accepts a sequence of :term:`path-like objects <path-like object>`."
msgstr ""
"Accepterar en sekvens av :term:`path-liknande objekt <path-like object>`."

#: ../../library/os.path.rst:98
msgid ""
"Return the longest path prefix (taken character-by-character) that is a "
"prefix of all paths in  *list*.  If *list* is empty, return the empty string"
" (``''``)."
msgstr ""
"Returnerar det längsta sökvägsprefixet (taget tecken för tecken) som är ett "
"prefix för alla sökvägar i *list*.  Om *list* är tom returneras den tomma "
"strängen (``''``)."

#: ../../library/os.path.rst:104
msgid ""
"This function may return invalid paths because it works a character at a "
"time.  To obtain a valid path, see :func:`commonpath`."
msgstr ""
"Denna funktion kan returnera ogiltiga sökvägar eftersom den arbetar med ett "
"tecken i taget.  För att få en giltig sökväg, se :func:`commonpath`."

#: ../../library/os.path.rst:122
msgid ""
"Return the directory name of pathname *path*.  This is the first element of "
"the pair returned by passing *path* to the function :func:`split`."
msgstr ""
"Returnerar katalognamnet för sökvägsnamnet *sökväg*.  Detta är det första "
"elementet i det par som returneras när *path* skickas till funktionen "
":func:`split`."

#: ../../library/os.path.rst:131
msgid ""
"Return ``True`` if *path* refers to an existing path or an open file "
"descriptor.  Returns ``False`` for broken symbolic links.  On some "
"platforms, this function may return ``False`` if permission is not granted "
"to execute :func:`os.stat` on the requested file, even if the *path* "
"physically exists."
msgstr ""
"Returnerar ``True`` om *path* hänvisar till en befintlig sökväg eller en "
"öppen filbeskrivare.  Returnerar ``False`` för brutna symboliska länkar.  På"
" vissa plattformar kan denna funktion returnera ``False`` om tillstånd inte "
"ges för att köra :func:`os.stat` på den begärda filen, även om *sökvägen* "
"fysiskt existerar."

#: ../../library/os.path.rst:137
msgid ""
"*path* can now be an integer: ``True`` is returned if it is an  open file "
"descriptor, ``False`` otherwise."
msgstr ""
"*path* kan nu vara ett heltal: ``True`` returneras om det är en öppen "
"filbeskrivare, ``False`` annars."

#: ../../library/os.path.rst:147
msgid ""
"Return ``True`` if *path* refers to an existing path. Returns ``True`` for "
"broken symbolic links.   Equivalent to :func:`exists` on platforms lacking "
":func:`os.lstat`."
msgstr ""

#: ../../library/os.path.rst:159
msgid ""
"On Unix and Windows, return the argument with an initial component of ``~`` "
"or ``~user`` replaced by that *user*'s home directory."
msgstr ""
"På Unix och Windows returneras argumentet med en initial komponent av ``~`` "
"eller ``~user`` ersatt av den *användarens* hemkatalog."

#: ../../library/os.path.rst:164
msgid ""
"On Unix, an initial ``~`` is replaced by the environment variable "
":envvar:`HOME` if it is set; otherwise the current user's home directory is "
"looked up in the password directory through the built-in module :mod:`pwd`. "
"An initial ``~user`` is looked up directly in the password directory."
msgstr ""
"På Unix ersätts en initial ``~`` av miljövariabeln :envvar:`HOME` om den är "
"inställd; annars söks den aktuella användarens hemkatalog upp i "
"lösenordskatalogen genom den inbyggda modulen :mod:`pwd`. En första "
"``~``användare`` söks upp direkt i lösenordskatalogen."

#: ../../library/os.path.rst:169
msgid ""
"On Windows, :envvar:`USERPROFILE` will be used if set, otherwise a "
"combination of :envvar:`HOMEPATH` and :envvar:`HOMEDRIVE` will be used.  An "
"initial ``~user`` is handled by stripping the last directory component from "
"the created user path derived above."
msgstr ""

#: ../../library/os.path.rst:174
msgid ""
"If the expansion fails or if the path does not begin with a tilde, the path "
"is returned unchanged."
msgstr ""
"Om expansionen misslyckas eller om sökvägen inte börjar med en tilde, "
"returneras sökvägen oförändrad."

#: ../../library/os.path.rst:180
msgid "No longer uses :envvar:`HOME` on Windows."
msgstr "Använder inte längre :envvar:`HOME` på Windows."

#: ../../library/os.path.rst:189
msgid ""
"Return the argument with environment variables expanded.  Substrings of the "
"form ``$name`` or ``${name}`` are replaced by the value of environment "
"variable *name*.  Malformed variable names and references to non-existing "
"variables are left unchanged."
msgstr ""
"Returnerar argumentet med miljövariablerna expanderade.  Substrängar av "
"formen ``$name`` eller ``${name}`` ersätts av värdet på miljövariabeln "
"*name*.  Missbildade variabelnamn och referenser till icke-existerande "
"variabler lämnas oförändrade."

#: ../../library/os.path.rst:194
msgid ""
"On Windows, ``%name%`` expansions are supported in addition to ``$name`` and"
" ``${name}``."
msgstr ""
"I Windows stöds ``%name%``\\-expansioner utöver ``$name`` och ``${name}``."

#: ../../library/os.path.rst:203
msgid ""
"Return the time of last access of *path*.  The return value is a floating "
"point number giving the number of seconds since the epoch (see the  "
":mod:`time` module).  Raise :exc:`OSError` if the file does not exist or is "
"inaccessible."
msgstr ""

#: ../../library/os.path.rst:210
msgid ""
"Return the time of last modification of *path*.  The return value is a "
"floating point number giving the number of seconds since the epoch (see the"
"  :mod:`time` module). Raise :exc:`OSError` if the file does not exist or is"
" inaccessible."
msgstr ""

#: ../../library/os.path.rst:220
msgid ""
"Return the system's ctime which, on some systems (like Unix) is the time of "
"the last metadata change, and, on others (like Windows), is the creation "
"time for *path*. The return value is a number giving the number of seconds "
"since the epoch (see the  :mod:`time` module).  Raise :exc:`OSError` if the "
"file does not exist or is inaccessible."
msgstr ""
"Returnerar systemets ctime, som på vissa system (t.ex. Unix) är tidpunkten "
"för den senaste metadataförändringen och på andra (t.ex. Windows) är "
"skapelsetiden för *path*. Returvärdet är ett tal som anger antalet sekunder "
"sedan epoken (se modulen :mod:`time`).  Utlöser :exc:`OSError` om filen inte"
" finns eller är otillgänglig."

#: ../../library/os.path.rst:232
msgid ""
"Return the size, in bytes, of *path*.  Raise :exc:`OSError` if the file does"
" not exist or is inaccessible."
msgstr ""
"Returnerar storleken, i byte, på *path*.  Ger :exc:`OSError` om filen inte "
"finns eller är otillgänglig."

#: ../../library/os.path.rst:241
msgid ""
"Return ``True`` if *path* is an absolute pathname.  On Unix, that means it "
"begins with a slash, on Windows that it begins with a (back)slash after "
"chopping off a potential drive letter."
msgstr ""

#: ../../library/os.path.rst:251
msgid ""
"Return ``True`` if *path* is an :func:`existing <exists>` regular file. This"
" follows symbolic links, so both :func:`islink` and :func:`isfile` can be "
"true for the same path."
msgstr ""
"Returnerar ``True`` om *sökväg* är en :func:`existerande <exists>` vanlig "
"fil. Detta följer symboliska länkar, så både :func:`islink` och "
":func:`isfile` kan vara true för samma sökväg."

#: ../../library/os.path.rst:261
msgid ""
"Return ``True`` if *path* is an :func:`existing <exists>` directory.  This "
"follows symbolic links, so both :func:`islink` and :func:`isdir` can be true"
" for the same path."
msgstr ""
"Returnerar ``True`` om *sökväg* är en :func:`existerande <exists>` katalog."
"  Detta följer symboliska länkar, så både :func:`islink` och :func:`isdir` "
"kan vara true för samma sökväg."

#: ../../library/os.path.rst:271
msgid ""
"Return ``True`` if *path* refers to an :func:`existing <exists>` directory "
"entry that is a symbolic link.  Always ``False`` if symbolic links are not "
"supported by the Python runtime."
msgstr ""
"Returnerar ``True`` om *path* refererar till en :func:`existerande <exists>`"
" katalogpost som är en symbolisk länk.  Alltid ``False`` om symboliska "
"länkar inte stöds av Pythons runtime."

#: ../../library/os.path.rst:281
msgid ""
"Return ``True`` if pathname *path* is a :dfn:`mount point`: a point in a "
"file system where a different file system has been mounted.  On POSIX, the "
"function checks whether *path*'s parent, :file:`{path}/..`, is on a "
"different device than *path*, or whether :file:`{path}/..` and *path* point "
"to the same i-node on the same device --- this should detect mount points "
"for all Unix and POSIX variants.  It is not able to reliably detect bind "
"mounts on the same filesystem.  On Windows, a drive letter root and a share "
"UNC are always mount points, and for any other path ``GetVolumePathName`` is"
" called to see if it is different from the input path."
msgstr ""

#: ../../library/os.path.rst:291
msgid "Support for detecting non-root mount points on Windows."
msgstr ""

#: ../../library/os.path.rst:300
msgid ""
"Join one or more path components intelligently.  The return value is the "
"concatenation of *path* and any members of *\\*paths* with exactly one "
"directory separator following each non-empty part except the last, meaning "
"that the result will only end in a separator if the last part is empty.  If "
"a component is an absolute path, all previous components are thrown away and"
" joining continues from the absolute path component."
msgstr ""

#: ../../library/os.path.rst:307
msgid ""
"On Windows, the drive letter is not reset when an absolute path component "
"(e.g., ``r'\\foo'``) is encountered.  If a component contains a drive "
"letter, all previous components are thrown away and the drive letter is "
"reset.  Note that since there is a current directory for each drive, "
"``os.path.join(\"c:\", \"foo\")`` represents a path relative to the current "
"directory on drive :file:`C:` (:file:`c:foo`), not :file:`c:\\\\foo`."
msgstr ""

#: ../../library/os.path.rst:314
msgid "Accepts a :term:`path-like object` for *path* and *paths*."
msgstr "Accepterar en :term:`path-like object` för *path* och *paths*."

#: ../../library/os.path.rst:320
msgid ""
"Normalize the case of a pathname.  On Windows, convert all characters in the"
" pathname to lowercase, and also convert forward slashes to backward "
"slashes. On other operating systems, return the path unchanged."
msgstr ""
"Normalisera versalerna i ett sökvägsnamn.  I Windows konverterar du alla "
"tecken i sökvägsnamnet till gemener och konverterar även snedstreck framåt "
"till snedstreck bakåt. På andra operativsystem returneras sökvägen "
"oförändrad."

#: ../../library/os.path.rst:330
msgid ""
"Normalize a pathname by collapsing redundant separators and up-level "
"references so that ``A//B``, ``A/B/``, ``A/./B`` and ``A/foo/../B`` all "
"become ``A/B``.  This string manipulation may change the meaning of a path "
"that contains symbolic links.  On Windows, it converts forward slashes to "
"backward slashes. To normalize case, use :func:`normcase`."
msgstr ""
"Normalisera ett sökvägsnamn genom att kollapsa överflödiga separatorer och "
"referenser på högre nivåer så att ``A//B``, ``A/B/``, ``A/./B`` och "
"``A/foo/../B`` alla blir ``A/B``.  Denna strängmanipulation kan ändra "
"betydelsen av en sökväg som innehåller symboliska länkar.  I Windows "
"konverteras snedstreck framåt till snedstreck bakåt. Använd :func:`normcase`"
" om du vill normalisera teckenföljden."

#: ../../library/os.path.rst:337
msgid ""
"On POSIX systems, in accordance with `IEEE Std 1003.1 2013 Edition; 4.13 "
"Pathname Resolution "
"<http://pubs.opengroup.org/onlinepubs/9699919799/basedefs/V1_chap04.html#tag_04_13>`_,"
" if a pathname begins with exactly two slashes, the first component "
"following the leading characters may be interpreted in an implementation-"
"defined manner, although more than two leading characters shall be treated "
"as a single character."
msgstr ""

#: ../../library/os.path.rst:350
msgid ""
"Return the canonical path of the specified filename, eliminating any "
"symbolic links encountered in the path (if they are supported by the "
"operating system)."
msgstr ""

#: ../../library/os.path.rst:354
msgid ""
"By default, the path is evaluated up to the first component that does not "
"exist, is a symlink loop, or whose evaluation raises :exc:`OSError`. All "
"such components are appended unchanged to the existing part of the path."
msgstr ""
"Som standard utvärderas sökvägen fram till den första komponent som inte "
"finns, som är en symlänk-loop eller vars utvärdering ger upphov till "
":exc:`OSError`. Alla sådana komponenter läggs till oförändrade till den "
"befintliga delen av sökvägen."

#: ../../library/os.path.rst:358
msgid ""
"Some errors that are handled this way include \"access denied\", \"not a "
"directory\", or \"bad argument to internal function\". Thus, the resulting "
"path may be missing or inaccessible, may still contain links or loops, and "
"may traverse non-directories."
msgstr ""
"Några fel som hanteras på det här sättet är \"åtkomst nekad\", \"inte en "
"katalog\" eller \"dåligt argument till intern funktion\". Den resulterande "
"sökvägen kan alltså saknas eller vara otillgänglig, kan fortfarande "
"innehålla länkar eller loopar och kan korsa icke-kataloger."

#: ../../library/os.path.rst:363
msgid "This behavior can be modified by keyword arguments:"
msgstr "Detta beteende kan ändras med hjälp av nyckelordsargument:"

#: ../../library/os.path.rst:365
msgid ""
"If *strict* is ``True``, the first error encountered when evaluating the "
"path is re-raised. In particular, :exc:`FileNotFoundError` is raised if "
"*path* does not exist, or another :exc:`OSError` if it is otherwise "
"inaccessible."
msgstr ""
"Om *strict* är ``True``, kommer det första felet som uppstår när sökvägen "
"utvärderas att visas igen. I synnerhet :exc:`FileNotFoundError` om *sökväg* "
"inte finns, eller ett annat :exc:`OSError` om den på annat sätt är "
"otillgänglig."

#: ../../library/os.path.rst:370
msgid ""
"If *strict* is :py:data:`os.path.ALLOW_MISSING`, errors other than "
":exc:`FileNotFoundError` are re-raised (as with ``strict=True``). Thus, the "
"returned path will not contain any symbolic links, but the named file and "
"some of its parent directories may be missing."
msgstr ""
"Om *strict* är :py:data:`os.path.ALLOW_MISSING`, kommer andra fel än "
":exc:`FileNotFoundError` att visas igen (som med ``strict=True``). Den "
"returnerade sökvägen kommer alltså inte att innehålla några symboliska "
"länkar, men den namngivna filen och några av dess överordnade kataloger kan "
"saknas."

#: ../../library/os.path.rst:376
msgid ""
"This function emulates the operating system's procedure for making a path "
"canonical, which differs slightly between Windows and UNIX with respect to "
"how links and subsequent path components interact."
msgstr ""
"Den här funktionen emulerar operativsystemets procedur för att göra en "
"sökväg kanonisk, som skiljer sig något mellan Windows och UNIX när det "
"gäller hur länkar och efterföljande sökvägskomponenter interagerar."

#: ../../library/os.path.rst:380
msgid ""
"Operating system APIs make paths canonical as needed, so it's not normally "
"necessary to call this function."
msgstr ""
"Operativsystemets API:er gör sökvägar kanoniska efter behov, så det är "
"normalt inte nödvändigt att anropa den här funktionen."

#: ../../library/os.path.rst:386
msgid "Symbolic links and junctions are now resolved on Windows."
msgstr "Symboliska länkar och korsningar löses nu i Windows."

#: ../../library/os.path.rst:389
msgid "The *strict* parameter was added."
msgstr "Parametern *strict* lades till."

#: ../../library/os.path.rst:392
msgid ""
"The :py:data:`~os.path.ALLOW_MISSING` value for the *strict* parameter was "
"added."
msgstr ""
"Värdet :py:data:`~os.path.ALLOW_MISSING` för parametern *strict* har lagts "
"till."

#: ../../library/os.path.rst:398
msgid "Special value used for the *strict* argument in :func:`realpath`."
msgstr "Specialvärde som används för *strict*-argumentet i :func:`realpath`."

#: ../../library/os.path.rst:404
msgid ""
"Return a relative filepath to *path* either from the current directory or "
"from an optional *start* directory.  This is a path computation:  the "
"filesystem is not accessed to confirm the existence or nature of *path* or "
"*start*.  On Windows, :exc:`ValueError` is raised when *path* and *start* "
"are on different drives."
msgstr ""
"Returnerar en relativ filväg till *väg* antingen från den aktuella katalogen"
" eller från en valfri *start*-katalog.  Detta är en sökvägsberäkning: "
"filsystemet används inte för att bekräfta existensen av eller typen av "
"*sökväg* eller *start*.  I Windows genereras :exc:`ValueError` när *sökväg* "
"och *start* finns på olika enheter."

#: ../../library/os.path.rst:410
msgid "*start* defaults to :attr:`os.curdir`."
msgstr ""

#: ../../library/os.path.rst:420
msgid ""
"Return ``True`` if both pathname arguments refer to the same file or "
"directory. This is determined by the device number and i-node number and "
"raises an exception if an :func:`os.stat` call on either pathname fails."
msgstr ""
"Returnerar ``True`` om båda sökvägsargumenten hänvisar till samma fil eller "
"katalog. Detta bestäms av enhetsnumret och i-nod-numret och ger upphov till "
"ett undantag om ett :func:`os.stat`\\-anrop på något av sökvägsnamnen "
"misslyckas."

#: ../../library/os.path.rst:426 ../../library/os.path.rst:442
#: ../../library/os.path.rst:458
msgid "Added Windows support."
msgstr "Stöd för Windows har lagts till."

#: ../../library/os.path.rst:429
msgid "Windows now uses the same implementation as all other platforms."
msgstr "Windows använder nu samma implementering som alla andra plattformar."

#: ../../library/os.path.rst:438
msgid ""
"Return ``True`` if the file descriptors *fp1* and *fp2* refer to the same "
"file."
msgstr ""
"Returnerar ``True`` om filbeskrivarna *fp1* och *fp2* hänvisar till samma "
"fil."

#: ../../library/os.path.rst:451
msgid ""
"Return ``True`` if the stat tuples *stat1* and *stat2* refer to the same "
"file. These structures may have been returned by :func:`os.fstat`, "
":func:`os.lstat`, or :func:`os.stat`.  This function implements the "
"underlying comparison used by :func:`samefile` and :func:`sameopenfile`."
msgstr ""
"Returnerar ``True`` om stat-tuplerna *stat1* och *stat2* refererar till "
"samma fil. Dessa strukturer kan ha returnerats av :func:`os.fstat`, "
":func:`os.lstat`, eller :func:`os.stat`.  Denna funktion implementerar den "
"underliggande jämförelse som används av :func:`samefile` och "
":func:`sameopenfile`."

#: ../../library/os.path.rst:467
msgid ""
"Split the pathname *path* into a pair, ``(head, tail)`` where *tail* is the "
"last pathname component and *head* is everything leading up to that.  The "
"*tail* part will never contain a slash; if *path* ends in a slash, *tail* "
"will be empty.  If there is no slash in *path*, *head* will be empty.  If "
"*path* is empty, both *head* and *tail* are empty.  Trailing slashes are "
"stripped from *head* unless it is the root (one or more slashes only).  In "
"all cases, ``join(head, tail)`` returns a path to the same location as "
"*path* (but the strings may differ).  Also see the functions :func:`dirname`"
" and :func:`basename`."
msgstr ""
"Dela upp sökvägsnamnet *sökväg* i ett par, ``(huvud, svans)`` där *svans* är"
" den sista sökvägskomponenten och *huvud* är allt som leder fram till den.  "
"*tail*-delen kommer aldrig att innehålla ett snedstreck; om *path* slutar "
"med ett snedstreck kommer *tail* att vara tomt.  Om det inte finns något "
"snedstreck i *path* kommer *head* att vara tom.  Om *sökväg* är tom, är både"
" *huvud* och *svans* tomma.  Efterföljande snedstreck tas bort från *head* "
"om det inte är roten (endast ett eller flera snedstreck).  I samtliga fall "
"returnerar ``join(head, tail)`` en sökväg till samma plats som *path* (men "
"strängarna kan skilja sig åt).  Se även funktionerna :func:`dirname` och "
":func:`basename`."

#: ../../library/os.path.rst:483
msgid ""
"Split the pathname *path* into a pair ``(drive, tail)`` where *drive* is "
"either a mount point or the empty string.  On systems which do not use drive"
" specifications, *drive* will always be the empty string.  In all cases, "
"``drive + tail`` will be the same as *path*."
msgstr ""
"Dela upp sökvägsnamnet *path* i ett par ``(drive, tail)`` där *drive* "
"antingen är en monteringspunkt eller den tomma strängen.  På system som inte"
" använder enhetsspecifikationer kommer *drive* alltid att vara den tomma "
"strängen.  I samtliga fall kommer ``drive + tail`` att vara samma sak som "
"*path*."

#: ../../library/os.path.rst:488
msgid ""
"On Windows, splits a pathname into drive/UNC sharepoint and relative path."
msgstr ""
"I Windows delas ett söknamn upp i enhet/UNC sharepoint och relativ sökväg."

#: ../../library/os.path.rst:490
msgid ""
"If the path contains a drive letter, drive will contain everything up to and"
" including the colon::"
msgstr ""
"Om sökvägen innehåller en enhetsbeteckning kommer enheten att innehålla allt"
" till och med kolon::"

#: ../../library/os.path.rst:496
msgid ""
"If the path contains a UNC path, drive will contain the host name and share,"
" up to but not including the fourth separator::"
msgstr ""

#: ../../library/os.path.rst:508
msgid ""
"Split the pathname *path* into a pair ``(root, ext)``  such that ``root + "
"ext == path``, and the extension, *ext*, is empty or begins with a period "
"and contains at most one period."
msgstr ""
"Dela upp sökvägsnamnet *sökväg* i ett par ``(rot, ext)`` så att ``rot + ext "
"== sökväg``, och tillägget, *ext*, är tomt eller börjar med en punkt och "
"innehåller högst en punkt."

#: ../../library/os.path.rst:512
msgid "If the path contains no extension, *ext* will be ``''``::"
msgstr ""
"Om sökvägen inte innehåller något tillägg kommer *ext* att vara ``''``::"

#: ../../library/os.path.rst:517
msgid ""
"If the path contains an extension, then *ext* will be set to this extension,"
" including the leading period. Note that previous periods will be ignored::"
msgstr ""
"Om sökvägen innehåller en förlängning, kommer *ext* att sättas till denna "
"förlängning, inklusive den inledande punkten. Observera att tidigare "
"perioder ignoreras::"

#: ../../library/os.path.rst:525
msgid ""
"Leading periods of the last component of the path are considered to be part "
"of the root::"
msgstr ""
"Ledande perioder av den sista komponenten i sökvägen anses vara en del av "
"roten::"

#: ../../library/os.path.rst:539
msgid ""
"``True`` if arbitrary Unicode strings can be used as file names (within "
"limitations imposed by the file system)."
msgstr ""
"``True`` om godtyckliga Unicode-strängar kan användas som filnamn (inom de "
"begränsningar som gäller för filsystemet)."
