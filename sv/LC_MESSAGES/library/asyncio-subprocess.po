# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# python-doc bot, 2025
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.11\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-25 16:33+0000\n"
"PO-Revision-Date: 2025-09-22 16:49+0000\n"
"Last-Translator: python-doc bot, 2025\n"
"Language-Team: Swedish (https://app.transifex.com/python-doc/teams/5390/sv/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: sv\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"

#: ../../library/asyncio-subprocess.rst:7
msgid "Subprocesses"
msgstr "Delprocesser"

#: ../../library/asyncio-subprocess.rst:9
msgid ""
"**Source code:** :source:`Lib/asyncio/subprocess.py`, "
":source:`Lib/asyncio/base_subprocess.py`"
msgstr ""
"**Källkod:** :source:`Lib/asyncio/subprocess.py`, "
":source:`Lib/asyncio/base_subprocess.py`"

#: ../../library/asyncio-subprocess.rst:14
msgid ""
"This section describes high-level async/await asyncio APIs to create and "
"manage subprocesses."
msgstr ""
"I detta avsnitt beskrivs async/await asyncio API:er på hög nivå för att "
"skapa och hantera underprocesser."

#: ../../library/asyncio-subprocess.rst:19
msgid ""
"Here's an example of how asyncio can run a shell command and obtain its "
"result::"
msgstr ""
"Här är ett exempel på hur asyncio kan köra ett shell-kommando och få "
"resultatet av det::"

#: ../../library/asyncio-subprocess.rst:40
msgid "will print::"
msgstr "kommer att skriva ut::"

#: ../../library/asyncio-subprocess.rst:46
msgid ""
"Because all asyncio subprocess functions are asynchronous and asyncio "
"provides many tools to work with such functions, it is easy to execute and "
"monitor multiple subprocesses in parallel.  It is indeed trivial to modify "
"the above example to run several commands simultaneously::"
msgstr ""
"Eftersom alla asyncios subprocessfunktioner är asynkrona och asyncio "
"tillhandahåller många verktyg för att arbeta med sådana funktioner, är det "
"enkelt att köra och övervaka flera subprocesser parallellt.  Det är faktiskt"
" trivialt att modifiera ovanstående exempel för att köra flera kommandon "
"samtidigt::"

#: ../../library/asyncio-subprocess.rst:58
msgid "See also the `Examples`_ subsection."
msgstr "Se även underavsnittet `Exempel`_."

#: ../../library/asyncio-subprocess.rst:62
msgid "Creating Subprocesses"
msgstr "Skapa underprocesser"

#: ../../library/asyncio-subprocess.rst:67
msgid "Create a subprocess."
msgstr "Skapa en underprocess."

#: ../../library/asyncio-subprocess.rst:69
#: ../../library/asyncio-subprocess.rst:87
msgid ""
"The *limit* argument sets the buffer limit for :class:`StreamReader` "
"wrappers for :attr:`Process.stdout` and :attr:`Process.stderr` (if "
":const:`subprocess.PIPE` is passed to *stdout* and *stderr* arguments)."
msgstr ""

#: ../../library/asyncio-subprocess.rst:73
#: ../../library/asyncio-subprocess.rst:91
msgid "Return a :class:`~asyncio.subprocess.Process` instance."
msgstr "Returnerar en :class:`~asyncio.subprocess.Process`\\-instans."

#: ../../library/asyncio-subprocess.rst:75
msgid ""
"See the documentation of :meth:`loop.subprocess_exec` for other parameters."
msgstr ""
"Se dokumentationen för :meth:`loop.subprocess_exec` för andra parametrar."

#: ../../library/asyncio-subprocess.rst:78
#: ../../library/asyncio-subprocess.rst:105
msgid "Removed the *loop* parameter."
msgstr "Parametern *loop* har tagits bort."

#: ../../library/asyncio-subprocess.rst:85
msgid "Run the *cmd* shell command."
msgstr "Kör skalkommandot *cmd*."

#: ../../library/asyncio-subprocess.rst:93
msgid ""
"See the documentation of :meth:`loop.subprocess_shell` for other parameters."
msgstr ""
"Se dokumentationen för :meth:`loop.subprocess_shell` för andra parametrar."

#: ../../library/asyncio-subprocess.rst:98
msgid ""
"It is the application's responsibility to ensure that all whitespace and "
"special characters are quoted appropriately to avoid `shell injection "
"<https://en.wikipedia.org/wiki/Shell_injection#Shell_injection>`_ "
"vulnerabilities. The :func:`shlex.quote` function can be used to properly "
"escape whitespace and special shell characters in strings that are going to "
"be used to construct shell commands."
msgstr ""
"Det är programmets ansvar att se till att alla blanksteg och specialtecken "
"citeras på rätt sätt för att undvika `shell injection "
"<https://en.wikipedia.org/wiki/Shell_injection#Shell_injection>`_-sårbarheter."
" Funktionen :func:`shlex.quote` kan användas för att på rätt sätt undkomma "
"blanksteg och speciella skaltecken i strängar som ska användas för att "
"konstruera skalkommandon."

#: ../../library/asyncio-subprocess.rst:110
msgid ""
"Subprocesses are available for Windows if a :class:`ProactorEventLoop` is "
"used. See :ref:`Subprocess Support on Windows <asyncio-windows-subprocess>` "
"for details."
msgstr ""
"Underprocesser är tillgängliga för Windows om en :class:`ProactorEventLoop` "
"används. Se :ref:`Subprocessstöd på Windows <asyncio-windows-subprocess>` "
"för mer information."

#: ../../library/asyncio-subprocess.rst:116
msgid ""
"asyncio also has the following *low-level* APIs to work with subprocesses: "
":meth:`loop.subprocess_exec`, :meth:`loop.subprocess_shell`, "
":meth:`loop.connect_read_pipe`, :meth:`loop.connect_write_pipe`, as well as "
"the :ref:`Subprocess Transports <asyncio-subprocess-transports>` and "
":ref:`Subprocess Protocols <asyncio-subprocess-protocols>`."
msgstr ""
"asyncio har även följande *lågnivå* API:er för att arbeta med subprocesser: "
":meth:`loop.subprocess_exec`, :meth:`loop.subprocess_shell`, "
":meth:`loop.connect_read_pipe`, :meth:`loop.connect_write_pipe`, samt "
":ref:`Subprocess Transports <asyncio-subprocess-transports>` och "
":ref:`Subprocess Protocols <asyncio-subprocess-protocols>`."

#: ../../library/asyncio-subprocess.rst:124
msgid "Constants"
msgstr "Konstanter"

#: ../../library/asyncio-subprocess.rst:129
msgid "Can be passed to the *stdin*, *stdout* or *stderr* parameters."
msgstr "Kan skickas till parametrarna *stdin*, *stdout* eller *stderr*."

#: ../../library/asyncio-subprocess.rst:131
msgid ""
"If *PIPE* is passed to *stdin* argument, the :attr:`Process.stdin "
"<asyncio.subprocess.Process.stdin>` attribute will point to a "
":class:`StreamWriter` instance."
msgstr ""

#: ../../library/asyncio-subprocess.rst:135
msgid ""
"If *PIPE* is passed to *stdout* or *stderr* arguments, the "
":attr:`Process.stdout <asyncio.subprocess.Process.stdout>` and "
":attr:`Process.stderr <asyncio.subprocess.Process.stderr>` attributes will "
"point to :class:`StreamReader` instances."
msgstr ""

#: ../../library/asyncio-subprocess.rst:143
msgid ""
"Special value that can be used as the *stderr* argument and indicates that "
"standard error should be redirected into standard output."
msgstr ""
"Specialvärde som kan användas som argumentet *stderr* och som anger att "
"standardfelet ska omdirigeras till standardutmatningen."

#: ../../library/asyncio-subprocess.rst:149
msgid ""
"Special value that can be used as the *stdin*, *stdout* or *stderr* argument"
" to process creation functions.  It indicates that the special file "
":data:`os.devnull` will be used for the corresponding subprocess stream."
msgstr ""
"Specialvärde som kan användas som *stdin*-, *stdout*- eller "
"*stderr*-argument i processskapande funktioner.  Det anger att specialfilen "
":data:`os.devnull` kommer att användas för motsvarande subprocessström."

#: ../../library/asyncio-subprocess.rst:155
msgid "Interacting with Subprocesses"
msgstr "Interagera med underprocesser"

#: ../../library/asyncio-subprocess.rst:157
msgid ""
"Both :func:`create_subprocess_exec` and :func:`create_subprocess_shell` "
"functions return instances of the *Process* class.  *Process* is a high-"
"level wrapper that allows communicating with subprocesses and watching for "
"their completion."
msgstr ""
"Både funktionerna :func:`create_subprocess_exec` och "
":func:`create_subprocess_shell` returnerar instanser av klassen *Process*.  "
"*Process* är ett omslag på hög nivå som gör det möjligt att kommunicera med "
"subprocesser och övervaka att de slutförs."

#: ../../library/asyncio-subprocess.rst:165
msgid ""
"An object that wraps OS processes created by the "
":func:`create_subprocess_exec` and :func:`create_subprocess_shell` "
"functions."
msgstr ""

#: ../../library/asyncio-subprocess.rst:169
msgid ""
"This class is designed to have a similar API to the "
":class:`subprocess.Popen` class, but there are some notable differences:"
msgstr ""
"Denna klass är utformad för att ha ett liknande API som klassen "
":class:`subprocess.Popen`, men det finns några anmärkningsvärda skillnader:"

#: ../../library/asyncio-subprocess.rst:173
msgid ""
"unlike Popen, Process instances do not have an equivalent to the "
":meth:`~subprocess.Popen.poll` method;"
msgstr ""
"till skillnad från Popen har Process-instanser ingen motsvarighet till "
"metoden :meth:`~subprocess.Popen.poll`;"

#: ../../library/asyncio-subprocess.rst:176
msgid ""
"the :meth:`~asyncio.subprocess.Process.communicate` and "
":meth:`~asyncio.subprocess.Process.wait` methods don't have a *timeout* "
"parameter: use the :func:`~asyncio.wait_for` function;"
msgstr ""
"metoderna :meth:`~asyncio.subprocess.Process.communicate` och "
":meth:`~asyncio.subprocess.Process.wait` har ingen parameter *timeout*: "
"använd funktionen :func:`~asyncio.wait_for`;"

#: ../../library/asyncio-subprocess.rst:180
msgid ""
"the :meth:`Process.wait() <asyncio.subprocess.Process.wait>` method is "
"asynchronous, whereas :meth:`subprocess.Popen.wait` method is implemented as"
" a blocking busy loop;"
msgstr ""
"metoden :meth:`Process.wait() <asyncio.subprocess.Process.wait>` är "
"asynkron, medan metoden :meth:`subprocess.Popen.wait` implementeras som en "
"blockerande busy loop;"

#: ../../library/asyncio-subprocess.rst:184
msgid "the *universal_newlines* parameter is not supported."
msgstr "parametern *universal_newlines* stöds inte."

#: ../../library/asyncio-subprocess.rst:186
msgid "This class is :ref:`not thread safe <asyncio-multithreading>`."
msgstr "Den här klassen är :ref:`inte trådsäker <asyncio-multithreading>`."

#: ../../library/asyncio-subprocess.rst:188
msgid ""
"See also the :ref:`Subprocess and Threads <asyncio-subprocess-threads>` "
"section."
msgstr ""
"Se även avsnittet :ref:`Subprocesser och trådar <asyncio-subprocess-"
"threads>`."

#: ../../library/asyncio-subprocess.rst:193
msgid "Wait for the child process to terminate."
msgstr "Vänta tills barnprocessen har avslutats."

#: ../../library/asyncio-subprocess.rst:195
msgid "Set and return the :attr:`returncode` attribute."
msgstr "Ange och returnera attributet :attr:`returncode`."

#: ../../library/asyncio-subprocess.rst:199
msgid ""
"This method can deadlock when using ``stdout=PIPE`` or ``stderr=PIPE`` and "
"the child process generates so much output that it blocks waiting for the OS"
" pipe buffer to accept more data. Use the :meth:`communicate` method when "
"using pipes to avoid this condition."
msgstr ""
"Den här metoden kan leda till dödläge när ``stdout=PIPE`` eller "
"``stderr=PIPE`` används och barnprocessen genererar så mycket utdata att den"
" blockeras i väntan på att OS-pipebufferten ska ta emot mer data. Använd "
"metoden :meth:`communicate` när du använder pipes för att undvika detta "
"tillstånd."

#: ../../library/asyncio-subprocess.rst:207
msgid "Interact with process:"
msgstr "Interagera med processen:"

#: ../../library/asyncio-subprocess.rst:209
msgid "send data to *stdin* (if *input* is not ``None``);"
msgstr "skicka data till *stdin* (om *input* inte är ``None``);"

#: ../../library/asyncio-subprocess.rst:210
msgid "read data from *stdout* and *stderr*, until EOF is reached;"
msgstr "läser data från *stdout* och *stderr* tills EOF nås;"

#: ../../library/asyncio-subprocess.rst:211
msgid "wait for process to terminate."
msgstr "vänta på att processen ska avslutas."

#: ../../library/asyncio-subprocess.rst:213
msgid ""
"The optional *input* argument is the data (:class:`bytes` object) that will "
"be sent to the child process."
msgstr ""
"Det valfria argumentet *input* är de data (:class:`bytes`\\-objekt) som ska "
"skickas till underordnad process."

#: ../../library/asyncio-subprocess.rst:216
msgid "Return a tuple ``(stdout_data, stderr_data)``."
msgstr "Returnera en tupel ``(stdout_data, stderr_data)``."

#: ../../library/asyncio-subprocess.rst:218
msgid ""
"If either :exc:`BrokenPipeError` or :exc:`ConnectionResetError` exception is"
" raised when writing *input* into *stdin*, the exception is ignored.  This "
"condition occurs when the process exits before all data are written into "
"*stdin*."
msgstr ""
"Om något av undantagen :exc:`BrokenPipeError` eller "
":exc:`ConnectionResetError` uppstår när *input* skrivs in i *stdin*, "
"ignoreras undantaget.  Detta tillstånd inträffar när processen avslutas "
"innan alla data har skrivits in i *stdin*."

#: ../../library/asyncio-subprocess.rst:223
msgid ""
"If it is desired to send data to the process' *stdin*, the process needs to "
"be created with ``stdin=PIPE``.  Similarly, to get anything other than "
"``None`` in the result tuple, the process has to be created with "
"``stdout=PIPE`` and/or ``stderr=PIPE`` arguments."
msgstr ""
"Om man vill skicka data till processens *stdin*, måste processen skapas med "
"``stdin=PIPE``.  På samma sätt, för att få något annat än ``None`` i "
"resultattupeln, måste processen skapas med ``stdout=PIPE`` och/eller "
"``stderr=PIPE`` argument."

#: ../../library/asyncio-subprocess.rst:229
msgid ""
"Note, that the data read is buffered in memory, so do not use this method if"
" the data size is large or unlimited."
msgstr ""
"Observera att de data som läses buffras i minnet, så använd inte den här "
"metoden om datastorleken är stor eller obegränsad."

#: ../../library/asyncio-subprocess.rst:234
msgid "Sends the signal *signal* to the child process."
msgstr "Skickar signalen *signal* till den underordnade processen."

#: ../../library/asyncio-subprocess.rst:238
msgid ""
"On Windows, :py:const:`~signal.SIGTERM` is an alias for :meth:`terminate`. "
"``CTRL_C_EVENT`` and ``CTRL_BREAK_EVENT`` can be sent to processes started "
"with a *creationflags* parameter which includes "
"``CREATE_NEW_PROCESS_GROUP``."
msgstr ""
"I Windows är :py:const:`~signal.SIGTERM` ett alias för :meth:`terminate`. "
"``CTRL_C_EVENT`` och ``CTRL_BREAK_EVENT`` kan skickas till processer som "
"startats med en *creationflags*-parameter som inkluderar "
"``CREATE_NEW_PROCESS_GROUP``."

#: ../../library/asyncio-subprocess.rst:245
msgid "Stop the child process."
msgstr "Stoppa barnprocessen."

#: ../../library/asyncio-subprocess.rst:247
msgid ""
"On POSIX systems this method sends :py:const:`~signal.SIGTERM` to the child "
"process."
msgstr ""
"På POSIX-system skickar den här metoden :py:const:`~signal.SIGTERM` till "
"barnprocessen."

#: ../../library/asyncio-subprocess.rst:250
msgid ""
"On Windows the Win32 API function :c:func:`!TerminateProcess` is called to "
"stop the child process."
msgstr ""
"I Windows anropas Win32 API-funktionen :c:func:`!TerminateProcess` för att "
"stoppa underordnad process."

#: ../../library/asyncio-subprocess.rst:255
msgid "Kill the child process."
msgstr "Avsluta barnprocessen."

#: ../../library/asyncio-subprocess.rst:257
msgid ""
"On POSIX systems this method sends :py:data:`SIGKILL` to the child process."
msgstr ""

#: ../../library/asyncio-subprocess.rst:260
msgid "On Windows this method is an alias for :meth:`terminate`."
msgstr "I Windows är denna metod ett alias för :meth:`terminate`."

#: ../../library/asyncio-subprocess.rst:264
msgid ""
"Standard input stream (:class:`StreamWriter`) or ``None`` if the process was"
" created with ``stdin=None``."
msgstr ""

#: ../../library/asyncio-subprocess.rst:269
msgid ""
"Standard output stream (:class:`StreamReader`) or ``None`` if the process "
"was created with ``stdout=None``."
msgstr ""

#: ../../library/asyncio-subprocess.rst:274
msgid ""
"Standard error stream (:class:`StreamReader`) or ``None`` if the process was"
" created with ``stderr=None``."
msgstr ""

#: ../../library/asyncio-subprocess.rst:279
msgid ""
"Use the :meth:`communicate` method rather than :attr:`process.stdin.write() "
"<stdin>`, :attr:`await process.stdout.read() <stdout>` or :attr:`await "
"process.stderr.read() <stderr>`. This avoids deadlocks due to streams "
"pausing reading or writing and blocking the child process."
msgstr ""
"Använd metoden :meth:`communicate` i stället för "
":attr:`process.stdin.write() <stdin>`, :attr:`await process.stdout.read() "
"<stdout>` eller :attr:`await process.stderr.read() <stderr>`. På så sätt "
"undviks dödlägen på grund av att strömmar pausar läsning eller skrivning och"
" blockerar barnprocessen."

#: ../../library/asyncio-subprocess.rst:288
msgid "Process identification number (PID)."
msgstr "Processens identifikationsnummer (PID)."

#: ../../library/asyncio-subprocess.rst:290
msgid ""
"Note that for processes created by the :func:`create_subprocess_shell` "
"function, this attribute is the PID of the spawned shell."
msgstr ""

#: ../../library/asyncio-subprocess.rst:295
msgid "Return code of the process when it exits."
msgstr "Processens returkod när den avslutas."

#: ../../library/asyncio-subprocess.rst:297
msgid "A ``None`` value indicates that the process has not terminated yet."
msgstr "Ett värde på ``None`` anger att processen inte har avslutats ännu."

#: ../../library/asyncio-subprocess.rst:299
msgid ""
"A negative value ``-N`` indicates that the child was terminated by signal "
"``N`` (POSIX only)."
msgstr ""
"Ett negativt värde ``\\-N`` anger att barnet avslutades med signal ``N`` "
"(endast POSIX)."

#: ../../library/asyncio-subprocess.rst:306
msgid "Subprocess and Threads"
msgstr "Underprocesser och trådar"

#: ../../library/asyncio-subprocess.rst:308
msgid ""
"Standard asyncio event loop supports running subprocesses from different "
"threads by default."
msgstr ""
"Standard asyncio event loop stöder som standard att köra subprocesser från "
"olika trådar."

#: ../../library/asyncio-subprocess.rst:311
msgid ""
"On Windows subprocesses are provided by :class:`ProactorEventLoop` only "
"(default), :class:`SelectorEventLoop` has no subprocess support."
msgstr ""
"I Windows tillhandahålls underprocesser endast av :class:`ProactorEventLoop`"
" (standard), :class:`SelectorEventLoop` har inget stöd för underprocesser."

#: ../../library/asyncio-subprocess.rst:314
msgid ""
"On UNIX *child watchers* are used for subprocess finish waiting, see "
":ref:`asyncio-watchers` for more info."
msgstr ""

#: ../../library/asyncio-subprocess.rst:320
msgid ""
"UNIX switched to use :class:`ThreadedChildWatcher` for spawning subprocesses"
" from different threads without any limitation."
msgstr ""

#: ../../library/asyncio-subprocess.rst:323
msgid ""
"Spawning a subprocess with *inactive* current child watcher raises "
":exc:`RuntimeError`."
msgstr ""

#: ../../library/asyncio-subprocess.rst:326
msgid ""
"Note that alternative event loop implementations might have own limitations;"
" please refer to their documentation."
msgstr ""
"Observera att alternativa implementeringar av händelseslingor kan ha egna "
"begränsningar; se deras dokumentation."

#: ../../library/asyncio-subprocess.rst:331
msgid ""
"The :ref:`Concurrency and multithreading in asyncio <asyncio-"
"multithreading>` section."
msgstr ""
"Avsnittet :ref:`Concurrency och multithreading i asyncio <asyncio-"
"multithreading>`."

#: ../../library/asyncio-subprocess.rst:336
msgid "Examples"
msgstr "Exempel"

#: ../../library/asyncio-subprocess.rst:338
msgid ""
"An example using the :class:`~asyncio.subprocess.Process` class to control a"
" subprocess and the :class:`StreamReader` class to read from its standard "
"output."
msgstr ""
"Ett exempel där klassen :class:`~asyncio.subprocess.Process` används för att"
" styra en subprocess och klassen :class:`StreamReader` för att läsa från "
"dess standardutdata."

#: ../../library/asyncio-subprocess.rst:344
msgid ""
"The subprocess is created by the :func:`create_subprocess_exec` function::"
msgstr "Subprocessen skapas med funktionen :func:`create_subprocess_exec`::"

#: ../../library/asyncio-subprocess.rst:371
msgid ""
"See also the :ref:`same example <asyncio_example_subprocess_proto>` written "
"using low-level APIs."
msgstr ""
"Se även :ref:`samme exempel <asyncio_example_subprocess_proto>` skrivet med "
"hjälp av API:er på låg nivå."
