# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# python-doc bot, 2025
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.13\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-10-15 15:08+0000\n"
"PO-Revision-Date: 2025-09-15 01:04+0000\n"
"Last-Translator: python-doc bot, 2025\n"
"Language-Team: Swedish (https://app.transifex.com/python-doc/teams/5390/"
"sv/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: sv\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"

#: ../../library/pathlib.rst:2
msgid ":mod:`!pathlib` --- Object-oriented filesystem paths"
msgstr ":mod:`!pathlib` --- Objektorienterade sökvägar i filsystemet"

#: ../../library/pathlib.rst:9
msgid "**Source code:** :source:`Lib/pathlib/`"
msgstr "**Källkod:** :source:`Lib/pathlib/`"

#: ../../library/pathlib.rst:15
msgid ""
"This module offers classes representing filesystem paths with semantics "
"appropriate for different operating systems.  Path classes are divided "
"between :ref:`pure paths <pure-paths>`, which provide purely computational "
"operations without I/O, and :ref:`concrete paths <concrete-paths>`, which "
"inherit from pure paths but also provide I/O operations."
msgstr ""
"Denna modul erbjuder klasser som representerar filsystemvägar med semantik "
"som är lämplig för olika operativsystem. Vägklasser delas in i :ref:`rena "
"vägar <pure-paths>`, som tillhandahåller rent beräkningsmässiga operationer "
"utan I/O, och :ref:`konkreta vägar <concrete-paths>`, som ärver från rena "
"vägar men också tillhandahåller I/O-operationer."

#: ../../library/pathlib.rst:21
msgid ""
"Inheritance diagram showing the classes available in pathlib. The\n"
"most basic class is PurePath, which has three direct subclasses:\n"
"PurePosixPath, PureWindowsPath, and Path. Further to these four\n"
"classes, there are two classes that use multiple inheritance:\n"
"PosixPath subclasses PurePosixPath and Path, and WindowsPath\n"
"subclasses PureWindowsPath and Path."
msgstr ""
"Arvsdiagram som visar de klasser som finns i pathlib. Den\n"
"mest grundläggande klassen är PurePath, som har tre direkta underklasser:\n"
"PurePosixPath, PureWindowsPath och Path. Utöver dessa fyra\n"
"klasserna finns det två klasser som använder multipel arv:\n"
"PosixPath underklassar PurePosixPath och Path, och WindowsPath\n"
"underklasserna PureWindowsPath och Path."

#: ../../library/pathlib.rst:31
msgid ""
"If you've never used this module before or just aren't sure which class is "
"right for your task, :class:`Path` is most likely what you need. It "
"instantiates a :ref:`concrete path <concrete-paths>` for the platform the "
"code is running on."
msgstr ""
"Om du aldrig har använt den här modulen tidigare eller bara är osäker på "
"vilken klass som är rätt för din uppgift, är :class:`Path` troligen vad du "
"behöver. Den instansierar en :ref:`concrete path <concrete-paths>` för den "
"plattform som koden körs på."

#: ../../library/pathlib.rst:35
msgid "Pure paths are useful in some special cases; for example:"
msgstr "Rena vägar är användbara i vissa specialfall, t.ex:"

#: ../../library/pathlib.rst:37
msgid ""
"If you want to manipulate Windows paths on a Unix machine (or vice versa). "
"You cannot instantiate a :class:`WindowsPath` when running on Unix, but you "
"can instantiate :class:`PureWindowsPath`."
msgstr ""
"Om du vill manipulera Windows-sökvägar på en Unix-maskin (eller vice versa). "
"Du kan inte instansiera en :class:`WindowsPath` när du kör på Unix, men du "
"kan instansiera :class:`PureWindowsPath`."

#: ../../library/pathlib.rst:40
msgid ""
"You want to make sure that your code only manipulates paths without actually "
"accessing the OS. In this case, instantiating one of the pure classes may be "
"useful since those simply don't have any OS-accessing operations."
msgstr ""
"Du vill se till att din kod bara manipulerar sökvägar utan att faktiskt "
"komma åt operativsystemet. I det här fallet kan det vara användbart att "
"instansiera en av de rena klasserna eftersom de helt enkelt inte har några "
"OS-åtkomstoperationer."

#: ../../library/pathlib.rst:45
msgid ":pep:`428`: The pathlib module -- object-oriented filesystem paths."
msgstr ""
":pep:`428`: Pathlib-modulen -- objektorienterade sökvägar i filsystemet."

#: ../../library/pathlib.rst:48
msgid ""
"For low-level path manipulation on strings, you can also use the :mod:`os."
"path` module."
msgstr ""
"För lågnivåhantering av sökvägar för strängar kan du också använda modulen :"
"mod:`os.path`."

#: ../../library/pathlib.rst:53
msgid "Basic use"
msgstr "Grundläggande användning"

#: ../../library/pathlib.rst:55
msgid "Importing the main class::"
msgstr "Importera huvudklassen::"

#: ../../library/pathlib.rst:57
msgid ">>> from pathlib import Path"
msgstr ">>> from pathlib import Path"

#: ../../library/pathlib.rst:59
msgid "Listing subdirectories::"
msgstr "Listning av underkataloger::"

#: ../../library/pathlib.rst:61
msgid ""
">>> p = Path('.')\n"
">>> [x for x in p.iterdir() if x.is_dir()]\n"
"[PosixPath('.hg'), PosixPath('docs'), PosixPath('dist'),\n"
" PosixPath('__pycache__'), PosixPath('build')]"
msgstr ""
">>> p = Path('.')\n"
">>> [x for x in p.iterdir() if x.is_dir()]\n"
"[PosixPath('.hg'), PosixPath('docs'), PosixPath('dist'),\n"
" PosixPath('__pycache__'), PosixPath('build')]"

#: ../../library/pathlib.rst:66
msgid "Listing Python source files in this directory tree::"
msgstr "Listar Python-källfiler i detta katalogträd::"

#: ../../library/pathlib.rst:68
msgid ""
">>> list(p.glob('**/*.py'))\n"
"[PosixPath('test_pathlib.py'), PosixPath('setup.py'),\n"
" PosixPath('pathlib.py'), PosixPath('docs/conf.py'),\n"
" PosixPath('build/lib/pathlib.py')]"
msgstr ""
">>> list(p.glob('**/*.py'))\n"
"[PosixPath('test_pathlib.py'), PosixPath('setup.py'),\n"
" PosixPath('pathlib.py'), PosixPath('docs/conf.py'),\n"
" PosixPath('build/lib/pathlib.py')]"

#: ../../library/pathlib.rst:73
msgid "Navigating inside a directory tree::"
msgstr "Navigera inuti ett katalogträd::"

#: ../../library/pathlib.rst:75
msgid ""
">>> p = Path('/etc')\n"
">>> q = p / 'init.d' / 'reboot'\n"
">>> q\n"
"PosixPath('/etc/init.d/reboot')\n"
">>> q.resolve()\n"
"PosixPath('/etc/rc.d/init.d/halt')"
msgstr ""
">>> p = Path('/etc')\n"
">>> q = p / 'init.d' / 'reboot'\n"
">>> q\n"
"PosixPath('/etc/init.d/reboot')\n"
">>> q.resolve()\n"
"PosixPath('/etc/rc.d/init.d/halt')"

#: ../../library/pathlib.rst:82
msgid "Querying path properties::"
msgstr "Fråga om egenskaper för sökvägen::"

#: ../../library/pathlib.rst:84
msgid ""
">>> q.exists()\n"
"True\n"
">>> q.is_dir()\n"
"False"
msgstr ""
">>> q.exists()\n"
"True\n"
">>> q.is_dir()\n"
"False"

#: ../../library/pathlib.rst:89
msgid "Opening a file::"
msgstr "Öppna en fil::"

#: ../../library/pathlib.rst:91
msgid ""
">>> with q.open() as f: f.readline()\n"
"...\n"
"'#!/bin/bash\\n'"
msgstr ""
">>> with q.open() as f: f.readline()\n"
"...\n"
"'#!/bin/bash\\n'"

#: ../../library/pathlib.rst:97
msgid "Exceptions"
msgstr "Undantag"

#: ../../library/pathlib.rst:101
msgid ""
"An exception inheriting :exc:`NotImplementedError` that is raised when an "
"unsupported operation is called on a path object."
msgstr ""
"Ett undantag som ärver :exc:`NotImplementedError` och som uppstår när en "
"åtgärd som inte stöds anropas på ett sökvägsobjekt."

#: ../../library/pathlib.rst:110
msgid "Pure paths"
msgstr "Rena vägar"

#: ../../library/pathlib.rst:112
msgid ""
"Pure path objects provide path-handling operations which don't actually "
"access a filesystem.  There are three ways to access these classes, which we "
"also call *flavours*:"
msgstr ""
"Rena sökvägsobjekt tillhandahåller sökvägshanteringsoperationer som faktiskt "
"inte har åtkomst till ett filsystem.  Det finns tre sätt att komma åt dessa "
"klasser, som vi också kallar *flavours*:"

#: ../../library/pathlib.rst:118
msgid ""
"A generic class that represents the system's path flavour (instantiating it "
"creates either a :class:`PurePosixPath` or a :class:`PureWindowsPath`)::"
msgstr ""
"En generisk klass som representerar systemets sökvägssmak (instansiering av "
"den skapar antingen en :class:`PurePosixPath` eller en :class:"
"`PureWindowsPath`)::"

#: ../../library/pathlib.rst:121
msgid ""
">>> PurePath('setup.py')      # Running on a Unix machine\n"
"PurePosixPath('setup.py')"
msgstr ""
">>> PurePath('setup.py')      # Running on a Unix machine\n"
"PurePosixPath('setup.py')"

#: ../../library/pathlib.rst:124
msgid ""
"Each element of *pathsegments* can be either a string representing a path "
"segment, or an object implementing the :class:`os.PathLike` interface where "
"the :meth:`~os.PathLike.__fspath__` method returns a string, such as another "
"path object::"
msgstr ""
"Varje element i *pathsegments* kan vara antingen en sträng som representerar "
"ett vägsegment eller ett objekt som implementerar :class:`os.PathLike`\\-"
"gränssnittet där :meth:`~os.PathLike.__fspath__`\\-metoden returnerar en "
"sträng, t.ex. ett annat vägobjekt::"

#: ../../library/pathlib.rst:129
msgid ""
">>> PurePath('foo', 'some/path', 'bar')\n"
"PurePosixPath('foo/some/path/bar')\n"
">>> PurePath(Path('foo'), Path('bar'))\n"
"PurePosixPath('foo/bar')"
msgstr ""
">>> PurePath('foo', 'some/path', 'bar')\n"
"PurePosixPath('foo/some/path/bar')\n"
">>> PurePath(Path('foo'), Path('bar'))\n"
"PurePosixPath('foo/bar')"

#: ../../library/pathlib.rst:134
msgid "When *pathsegments* is empty, the current directory is assumed::"
msgstr "När *pathsegments* är tomt antas den aktuella katalogen::"

#: ../../library/pathlib.rst:136
msgid ""
">>> PurePath()\n"
"PurePosixPath('.')"
msgstr ""
">>> PurePath()\n"
"PurePosixPath('.')"

#: ../../library/pathlib.rst:139
msgid ""
"If a segment is an absolute path, all previous segments are ignored (like :"
"func:`os.path.join`)::"
msgstr ""
"Om ett segment är en absolut sökväg ignoreras alla tidigare segment (som :"
"func:`os.path.join`)::"

#: ../../library/pathlib.rst:142
msgid ""
">>> PurePath('/etc', '/usr', 'lib64')\n"
"PurePosixPath('/usr/lib64')\n"
">>> PureWindowsPath('c:/Windows', 'd:bar')\n"
"PureWindowsPath('d:bar')"
msgstr ""
">>> PurePath('/etc', '/usr', 'lib64')\n"
"PurePosixPath('/usr/lib64')\n"
">>> PureWindowsPath('c:/Windows', 'd:bar')\n"
"PureWindowsPath('d:bar')"

#: ../../library/pathlib.rst:147
msgid ""
"On Windows, the drive is not reset when a rooted relative path segment (e."
"g., ``r'\\foo'``) is encountered::"
msgstr ""
"I Windows återställs inte enheten när ett rotat relativt sökvägssegment (t."
"ex. ``r'\\foo'``) påträffas::"

#: ../../library/pathlib.rst:150
msgid ""
">>> PureWindowsPath('c:/Windows', '/Program Files')\n"
"PureWindowsPath('c:/Program Files')"
msgstr ""
">>> PureWindowsPath('c:/Windows', '/Program Files')\n"
"PureWindowsPath('c:/Program Files')"

#: ../../library/pathlib.rst:153
msgid ""
"Spurious slashes and single dots are collapsed, but double dots (``'..'``) "
"and leading double slashes (``'//'``) are not, since this would change the "
"meaning of a path for various reasons (e.g. symbolic links, UNC paths)::"
msgstr ""
"Felaktiga snedstreck och enkla prickar kollapsar, men inte dubbla prickar "
"(``'..'``) och inledande dubbla snedstreck (``'//'``), eftersom detta av "
"olika skäl (t.ex. symboliska länkar, UNC-sökvägar) skulle ändra sökvägens "
"betydelse::"

#: ../../library/pathlib.rst:157
msgid ""
">>> PurePath('foo//bar')\n"
"PurePosixPath('foo/bar')\n"
">>> PurePath('//foo/bar')\n"
"PurePosixPath('//foo/bar')\n"
">>> PurePath('foo/./bar')\n"
"PurePosixPath('foo/bar')\n"
">>> PurePath('foo/../bar')\n"
"PurePosixPath('foo/../bar')"
msgstr ""
">>> PurePath('foo//bar')\n"
"PurePosixPath('foo/bar')\n"
">>> PurePath('//foo/bar')\n"
"PurePosixPath('//foo/bar')\n"
">>> PurePath('foo/./bar')\n"
"PurePosixPath('foo/bar')\n"
">>> PurePath('foo/../bar')\n"
"PurePosixPath('foo/../bar')"

#: ../../library/pathlib.rst:166
msgid ""
"(a naïve approach would make ``PurePosixPath('foo/../bar')`` equivalent to "
"``PurePosixPath('bar')``, which is wrong if ``foo`` is a symbolic link to "
"another directory)"
msgstr ""
"(ett naivt tillvägagångssätt skulle göra ``PurePosixPath('foo/../bar')`` "
"likvärdig med ``PurePosixPath('bar')``, vilket är fel om ``foo`` är en "
"symbolisk länk till en annan katalog)"

#: ../../library/pathlib.rst:170
msgid ""
"Pure path objects implement the :class:`os.PathLike` interface, allowing "
"them to be used anywhere the interface is accepted."
msgstr ""
"Rena sökvägsobjekt implementerar gränssnittet :class:`os.PathLike`, vilket "
"gör att de kan användas överallt där gränssnittet accepteras."

#: ../../library/pathlib.rst:173
msgid "Added support for the :class:`os.PathLike` interface."
msgstr "Lagt till stöd för gränssnittet :class:`os.PathLike`."

#: ../../library/pathlib.rst:178
msgid ""
"A subclass of :class:`PurePath`, this path flavour represents non-Windows "
"filesystem paths::"
msgstr ""
"Denna sökvägssmak är en underklass till :class:`PurePath` och representerar "
"sökvägar som inte är Windows-filsystem::"

#: ../../library/pathlib.rst:181
msgid ""
">>> PurePosixPath('/etc/hosts')\n"
"PurePosixPath('/etc/hosts')"
msgstr ""
">>> PurePosixPath('/etc/hosts')\n"
"PurePosixPath('/etc/hosts')"

#: ../../library/pathlib.rst:184 ../../library/pathlib.rst:196
#: ../../library/pathlib.rst:766 ../../library/pathlib.rst:776
#: ../../library/pathlib.rst:791
msgid "*pathsegments* is specified similarly to :class:`PurePath`."
msgstr "*pathsegments* specificeras på liknande sätt som :class:`PurePath`."

#: ../../library/pathlib.rst:188
msgid ""
"A subclass of :class:`PurePath`, this path flavour represents Windows "
"filesystem paths, including `UNC paths`_::"
msgstr ""
"Denna sökvägssmak är en underklass till :class:`PurePath` och representerar "
"sökvägar i Windows filsystem, inklusive `UNC-sökvägar`_::"

#: ../../library/pathlib.rst:191
msgid ""
">>> PureWindowsPath('c:/', 'Users', 'Ximénez')\n"
"PureWindowsPath('c:/Users/Ximénez')\n"
">>> PureWindowsPath('//server/share/file')\n"
"PureWindowsPath('//server/share/file')"
msgstr ""
">>> PureWindowsPath('c:/', 'Users', 'Ximénez')\n"
"PureWindowsPath('c:/Users/Ximénez')\n"
">>> PureWindowsPath('//server/share/file')\n"
"PureWindowsPath('//server/share/file')"

#: ../../library/pathlib.rst:200
msgid ""
"Regardless of the system you're running on, you can instantiate all of these "
"classes, since they don't provide any operation that does system calls."
msgstr ""
"Oavsett vilket system du kör på kan du instansiera alla dessa klasser, "
"eftersom de inte tillhandahåller någon operation som gör systemanrop."

#: ../../library/pathlib.rst:205
msgid "General properties"
msgstr "Allmänna egenskaper"

#: ../../library/pathlib.rst:207
msgid ""
"Paths are immutable and :term:`hashable`.  Paths of a same flavour are "
"comparable and orderable.  These properties respect the flavour's case-"
"folding semantics::"
msgstr ""
"Sökvägar är oföränderliga och :term:`hashable`.  Sökvägar av samma smak är "
"jämförbara och ordningsbara.  Dessa egenskaper respekterar smakens semantik "
"för case-folding::"

#: ../../library/pathlib.rst:211
msgid ""
">>> PurePosixPath('foo') == PurePosixPath('FOO')\n"
"False\n"
">>> PureWindowsPath('foo') == PureWindowsPath('FOO')\n"
"True\n"
">>> PureWindowsPath('FOO') in { PureWindowsPath('foo') }\n"
"True\n"
">>> PureWindowsPath('C:') < PureWindowsPath('d:')\n"
"True"
msgstr ""
">>> PurePosixPath('foo') == PurePosixPath('FOO')\n"
"False\n"
">>> PureWindowsPath('foo') == PureWindowsPath('FOO')\n"
"True\n"
">>> PureWindowsPath('FOO') in { PureWindowsPath('foo') }\n"
"True\n"
">>> PureWindowsPath('C:') < PureWindowsPath('d:')\n"
"True"

#: ../../library/pathlib.rst:220
msgid "Paths of a different flavour compare unequal and cannot be ordered::"
msgstr "Banor med olika smak jämför ojämlikt och kan inte beställas::"

#: ../../library/pathlib.rst:222
msgid ""
">>> PureWindowsPath('foo') == PurePosixPath('foo')\n"
"False\n"
">>> PureWindowsPath('foo') < PurePosixPath('foo')\n"
"Traceback (most recent call last):\n"
"  File \"<stdin>\", line 1, in <module>\n"
"TypeError: '<' not supported between instances of 'PureWindowsPath' and "
"'PurePosixPath'"
msgstr ""
">>> PureWindowsPath('foo') == PurePosixPath('foo')\n"
"False\n"
">>> PureWindowsPath('foo') < PurePosixPath('foo')\n"
"Traceback (most recent call last):\n"
"  File \"<stdin>\", line 1, in <module>\n"
"TypeError: '<' not supported between instances of 'PureWindowsPath' and "
"'PurePosixPath'"

#: ../../library/pathlib.rst:231
msgid "Operators"
msgstr "Operatorer"

#: ../../library/pathlib.rst:233
msgid ""
"The slash operator helps create child paths, like :func:`os.path.join`. If "
"the argument is an absolute path, the previous path is ignored. On Windows, "
"the drive is not reset when the argument is a rooted relative path (e.g., "
"``r'\\foo'``)::"
msgstr ""
"Slash-operatorn hjälper till att skapa underordnade sökvägar, som :func:`os."
"path.join`. Om argumentet är en absolut sökväg ignoreras den föregående "
"sökvägen. I Windows återställs inte enheten när argumentet är en rotad "
"relativ sökväg (t.ex. ``r'\\foo'``)::"

#: ../../library/pathlib.rst:238
msgid ""
">>> p = PurePath('/etc')\n"
">>> p\n"
"PurePosixPath('/etc')\n"
">>> p / 'init.d' / 'apache2'\n"
"PurePosixPath('/etc/init.d/apache2')\n"
">>> q = PurePath('bin')\n"
">>> '/usr' / q\n"
"PurePosixPath('/usr/bin')\n"
">>> p / '/an_absolute_path'\n"
"PurePosixPath('/an_absolute_path')\n"
">>> PureWindowsPath('c:/Windows', '/Program Files')\n"
"PureWindowsPath('c:/Program Files')"
msgstr ""
">>> p = PurePath('/etc')\n"
">>> p\n"
"PurePosixPath('/etc')\n"
">>> p / 'init.d' / 'apache2'\n"
"PurePosixPath('/etc/init.d/apache2')\n"
">>> q = PurePath('bin')\n"
">>> '/usr' / q\n"
"PurePosixPath('/usr/bin')\n"
">>> p / '/an_absolute_path'\n"
"PurePosixPath('/an_absolute_path')\n"
">>> PureWindowsPath('c:/Windows', '/Program Files')\n"
"PureWindowsPath('c:/Program Files')"

#: ../../library/pathlib.rst:251
msgid ""
"A path object can be used anywhere an object implementing :class:`os."
"PathLike` is accepted::"
msgstr ""
"Ett sökvägsobjekt kan användas var som helst där ett objekt som "
"implementerar :class:`os.PathLike` accepteras::"

#: ../../library/pathlib.rst:254
msgid ""
">>> import os\n"
">>> p = PurePath('/etc')\n"
">>> os.fspath(p)\n"
"'/etc'"
msgstr ""
">>> import os\n"
">>> p = PurePath('/etc')\n"
">>> os.fspath(p)\n"
"'/etc'"

#: ../../library/pathlib.rst:259
msgid ""
"The string representation of a path is the raw filesystem path itself (in "
"native form, e.g. with backslashes under Windows), which you can pass to any "
"function taking a file path as a string::"
msgstr ""
"Strängrepresentationen av en sökväg är själva den råa filsystemssökvägen (i "
"ursprunglig form, t.ex. med bindestreck under Windows), som du kan skicka "
"till alla funktioner som tar emot en filväg som en sträng::"

#: ../../library/pathlib.rst:263
msgid ""
">>> p = PurePath('/etc')\n"
">>> str(p)\n"
"'/etc'\n"
">>> p = PureWindowsPath('c:/Program Files')\n"
">>> str(p)\n"
"'c:\\\\Program Files'"
msgstr ""
">>> p = PurePath('/etc')\n"
">>> str(p)\n"
"'/etc'\n"
">>> p = PureWindowsPath('c:/Program Files')\n"
">>> str(p)\n"
"'c:\\\\Program Files'"

#: ../../library/pathlib.rst:270
msgid ""
"Similarly, calling :class:`bytes` on a path gives the raw filesystem path as "
"a bytes object, as encoded by :func:`os.fsencode`::"
msgstr ""
"På samma sätt ger anrop av :class:`bytes` på en sökväg den råa "
"filsystemssökvägen som ett bytesobjekt, kodat med :func:`os.fsencode`::"

#: ../../library/pathlib.rst:273
msgid ""
">>> bytes(p)\n"
"b'/etc'"
msgstr ""
">>> bytes(p)\n"
"b'/etc'"

#: ../../library/pathlib.rst:277
msgid ""
"Calling :class:`bytes` is only recommended under Unix.  Under Windows, the "
"unicode form is the canonical representation of filesystem paths."
msgstr ""
"Att anropa :class:`bytes` är endast rekommenderat under Unix.  Under Windows "
"är unicode-formen den kanoniska representationen av sökvägar i filsystemet."

#: ../../library/pathlib.rst:282
msgid "Accessing individual parts"
msgstr "Åtkomst till enskilda delar"

#: ../../library/pathlib.rst:284
msgid ""
"To access the individual \"parts\" (components) of a path, use the following "
"property:"
msgstr ""
"För att komma åt de enskilda \"delarna\" (komponenterna) i en sökväg "
"använder du följande egenskap:"

#: ../../library/pathlib.rst:289
msgid "A tuple giving access to the path's various components::"
msgstr "En tupel som ger tillgång till sökvägens olika komponenter::"

#: ../../library/pathlib.rst:291
msgid ""
">>> p = PurePath('/usr/bin/python3')\n"
">>> p.parts\n"
"('/', 'usr', 'bin', 'python3')\n"
"\n"
">>> p = PureWindowsPath('c:/Program Files/PSF')\n"
">>> p.parts\n"
"('c:\\\\', 'Program Files', 'PSF')"
msgstr ""
">>> p = PurePath('/usr/bin/python3')\n"
">>> p.parts\n"
"('/', 'usr', 'bin', 'python3')\n"
"\n"
">>> p = PureWindowsPath('c:/Program Files/PSF')\n"
">>> p.parts\n"
"('c:\\\\', 'Program Files', 'PSF')"

#: ../../library/pathlib.rst:299
msgid "(note how the drive and local root are regrouped in a single part)"
msgstr ""
"(notera hur enheten och den lokala roten är omgrupperade i en enda del)"

#: ../../library/pathlib.rst:303
msgid "Methods and properties"
msgstr "Metoder och egenskaper"

#: ../../library/pathlib.rst:309
msgid "Pure paths provide the following methods and properties:"
msgstr "Pure paths tillhandahåller följande metoder och egenskaper:"

#: ../../library/pathlib.rst:313
msgid ""
"The implementation of the :mod:`os.path` module used for low-level path "
"parsing and joining: either :mod:`posixpath` or :mod:`ntpath`."
msgstr ""

#: ../../library/pathlib.rst:320
msgid "A string representing the drive letter or name, if any::"
msgstr ""
"En sträng som representerar enhetens bokstav eller namn, om sådan finns::"

#: ../../library/pathlib.rst:322
msgid ""
">>> PureWindowsPath('c:/Program Files/').drive\n"
"'c:'\n"
">>> PureWindowsPath('/Program Files/').drive\n"
"''\n"
">>> PurePosixPath('/etc').drive\n"
"''"
msgstr ""
">>> PureWindowsPath('c:/Program Files/').drive\n"
"'c:'\n"
">>> PureWindowsPath('/Program Files/').drive\n"
"''\n"
">>> PurePosixPath('/etc').drive\n"
"''"

#: ../../library/pathlib.rst:329
msgid "UNC shares are also considered drives::"
msgstr "UNC-delar betraktas också som enheter::"

#: ../../library/pathlib.rst:331
msgid ""
">>> PureWindowsPath('//host/share/foo.txt').drive\n"
"'\\\\\\\\host\\\\share'"
msgstr ""
">>> PureWindowsPath('//host/share/foo.txt').drive\n"
"'\\\\\\\\host\\\\share'"

#: ../../library/pathlib.rst:336
msgid "A string representing the (local or global) root, if any::"
msgstr ""
"En sträng som representerar den (lokala eller globala) roten, om någon::"

#: ../../library/pathlib.rst:338
msgid ""
">>> PureWindowsPath('c:/Program Files/').root\n"
"'\\\\'\n"
">>> PureWindowsPath('c:Program Files/').root\n"
"''\n"
">>> PurePosixPath('/etc').root\n"
"'/'"
msgstr ""
">>> PureWindowsPath('c:/Program Files/').root\n"
"'\\\\'\n"
">>> PureWindowsPath('c:Program Files/').root\n"
"''\n"
">>> PurePosixPath('/etc').root\n"
"'/'"

#: ../../library/pathlib.rst:345
msgid "UNC shares always have a root::"
msgstr "UNC-aktier har alltid en root::"

#: ../../library/pathlib.rst:347
msgid ""
">>> PureWindowsPath('//host/share').root\n"
"'\\\\'"
msgstr ""
">>> PureWindowsPath('//host/share').root\n"
"'\\\\'"

#: ../../library/pathlib.rst:350
msgid ""
"If the path starts with more than two successive slashes, :class:`~pathlib."
"PurePosixPath` collapses them::"
msgstr ""
"Om sökvägen börjar med mer än två på varandra följande snedstreck, :class:"
"`~pathlib.PurePosixPath` kollapsar dem::"

#: ../../library/pathlib.rst:353
msgid ""
">>> PurePosixPath('//etc').root\n"
"'//'\n"
">>> PurePosixPath('///etc').root\n"
"'/'\n"
">>> PurePosixPath('////etc').root\n"
"'/'"
msgstr ""
">>> PurePosixPath('//etc').root\n"
"'//'\n"
">>> PurePosixPath('///etc').root\n"
"'/'\n"
">>> PurePosixPath('////etc').root\n"
"'/'"

#: ../../library/pathlib.rst:362
msgid ""
"This behavior conforms to *The Open Group Base Specifications Issue 6*, "
"paragraph `4.11 Pathname Resolution <https://pubs.opengroup.org/"
"onlinepubs/009695399/basedefs/xbd_chap04.html#tag_04_11>`_:"
msgstr ""
"Detta beteende överensstämmer med *The Open Group Base Specifications Issue "
"6*, paragraf `4.11 Pathname Resolution <https://pubs.opengroup.org/"
"onlinepubs/009695399/basedefs/xbd_chap04.html#tag_04_11>`_:"

#: ../../library/pathlib.rst:366
msgid ""
"*\"A pathname that begins with two successive slashes may be interpreted in "
"an implementation-defined manner, although more than two leading slashes "
"shall be treated as a single slash.\"*"
msgstr ""
"*\"Ett sökvägsnamn som börjar med två på varandra följande snedstreck kan "
"tolkas på ett sätt som definieras av implementationen, även om mer än två "
"inledande snedstreck ska behandlas som ett enda snedstreck.\"*"

#: ../../library/pathlib.rst:372
msgid "The concatenation of the drive and root::"
msgstr "Sammankopplingen av enheten och roten::"

#: ../../library/pathlib.rst:374
msgid ""
">>> PureWindowsPath('c:/Program Files/').anchor\n"
"'c:\\\\'\n"
">>> PureWindowsPath('c:Program Files/').anchor\n"
"'c:'\n"
">>> PurePosixPath('/etc').anchor\n"
"'/'\n"
">>> PureWindowsPath('//host/share').anchor\n"
"'\\\\\\\\host\\\\share\\\\'"
msgstr ""
">>> PureWindowsPath('c:/Program Files/').anchor\n"
"'c:\\\\'\n"
">>> PureWindowsPath('c:Program Files/').anchor\n"
"'c:'\n"
">>> PurePosixPath('/etc').anchor\n"
"'/'\n"
">>> PureWindowsPath('//host/share').anchor\n"
"'\\\\\\\\host\\\\share\\\\'"

#: ../../library/pathlib.rst:386
msgid ""
"An immutable sequence providing access to the logical ancestors of the path::"
msgstr ""
"En oföränderlig sekvens som ger tillgång till logiska förfäder till "
"sökvägen::"

#: ../../library/pathlib.rst:389
msgid ""
">>> p = PureWindowsPath('c:/foo/bar/setup.py')\n"
">>> p.parents[0]\n"
"PureWindowsPath('c:/foo/bar')\n"
">>> p.parents[1]\n"
"PureWindowsPath('c:/foo')\n"
">>> p.parents[2]\n"
"PureWindowsPath('c:/')"
msgstr ""
">>> p = PureWindowsPath('c:/foo/bar/setup.py')\n"
">>> p.parents[0]\n"
"PureWindowsPath('c:/foo/bar')\n"
">>> p.parents[1]\n"
"PureWindowsPath('c:/foo')\n"
">>> p.parents[2]\n"
"PureWindowsPath('c:/')"

#: ../../library/pathlib.rst:397
msgid ""
"The parents sequence now supports :term:`slices <slice>` and negative index "
"values."
msgstr ""
"Parent-sekvensen stöder nu :term:`slices <slice>` och negativa indexvärden."

#: ../../library/pathlib.rst:402
msgid "The logical parent of the path::"
msgstr "Den logiska föräldern till sökvägen::"

#: ../../library/pathlib.rst:404
msgid ""
">>> p = PurePosixPath('/a/b/c/d')\n"
">>> p.parent\n"
"PurePosixPath('/a/b/c')"
msgstr ""
">>> p = PurePosixPath('/a/b/c/d')\n"
">>> p.parent\n"
"PurePosixPath('/a/b/c')"

#: ../../library/pathlib.rst:408
msgid "You cannot go past an anchor, or empty path::"
msgstr "Du kan inte gå förbi ett ankare, eller en tom väg::"

#: ../../library/pathlib.rst:410
msgid ""
">>> p = PurePosixPath('/')\n"
">>> p.parent\n"
"PurePosixPath('/')\n"
">>> p = PurePosixPath('.')\n"
">>> p.parent\n"
"PurePosixPath('.')"
msgstr ""
">>> p = PurePosixPath('/')\n"
">>> p.parent\n"
"PurePosixPath('/')\n"
">>> p = PurePosixPath('.')\n"
">>> p.parent\n"
"PurePosixPath('.')"

#: ../../library/pathlib.rst:418
msgid "This is a purely lexical operation, hence the following behaviour::"
msgstr "Detta är en rent lexikal operation, därav följande beteende::"

#: ../../library/pathlib.rst:420
msgid ""
">>> p = PurePosixPath('foo/..')\n"
">>> p.parent\n"
"PurePosixPath('foo')"
msgstr ""
">>> p = PurePosixPath('foo/..')\n"
">>> p.parent\n"
"PurePosixPath('foo')"

#: ../../library/pathlib.rst:424
msgid ""
"If you want to walk an arbitrary filesystem path upwards, it is recommended "
"to first call :meth:`Path.resolve` so as to resolve symlinks and eliminate "
"``\"..\"`` components."
msgstr ""
"Om du vill gå en godtycklig filsystemssökväg uppåt rekommenderas att du "
"först anropar :meth:`Path.resolve` för att lösa upp symlänkar och eliminera "
"``\"...\"``\\-komponenter."

#: ../../library/pathlib.rst:431
msgid ""
"A string representing the final path component, excluding the drive and "
"root, if any::"
msgstr ""
"En sträng som representerar den slutliga sökvägskomponenten, exklusive "
"enheten och roten, om sådana finns::"

#: ../../library/pathlib.rst:434
msgid ""
">>> PurePosixPath('my/library/setup.py').name\n"
"'setup.py'"
msgstr ""
">>> PurePosixPath('my/library/setup.py').name\n"
"'setup.py'"

#: ../../library/pathlib.rst:437
msgid "UNC drive names are not considered::"
msgstr "Namn på UNC-enheter räknas inte som::"

#: ../../library/pathlib.rst:439
msgid ""
">>> PureWindowsPath('//some/share/setup.py').name\n"
"'setup.py'\n"
">>> PureWindowsPath('//some/share').name\n"
"''"
msgstr ""
">>> PureWindowsPath('//some/share/setup.py').name\n"
"'setup.py'\n"
">>> PureWindowsPath('//some/share').name\n"
"''"

#: ../../library/pathlib.rst:447
msgid "The last dot-separated portion of the final component, if any::"
msgstr ""
"Den sista punktseparerade delen av den slutliga komponenten, om sådan finns::"

#: ../../library/pathlib.rst:449
msgid ""
">>> PurePosixPath('my/library/setup.py').suffix\n"
"'.py'\n"
">>> PurePosixPath('my/library.tar.gz').suffix\n"
"'.gz'\n"
">>> PurePosixPath('my/library').suffix\n"
"''"
msgstr ""
">>> PurePosixPath('my/library/setup.py').suffix\n"
"'.py'\n"
">>> PurePosixPath('my/library.tar.gz').suffix\n"
"'.gz'\n"
">>> PurePosixPath('my/library').suffix\n"
"''"

#: ../../library/pathlib.rst:456
msgid "This is commonly called the file extension."
msgstr "Detta kallas vanligen filtillägget."

#: ../../library/pathlib.rst:460
msgid "A list of the path's suffixes, often called file extensions::"
msgstr "En lista över sökvägens suffix, ofta kallade filtillägg::"

#: ../../library/pathlib.rst:462
msgid ""
">>> PurePosixPath('my/library.tar.gar').suffixes\n"
"['.tar', '.gar']\n"
">>> PurePosixPath('my/library.tar.gz').suffixes\n"
"['.tar', '.gz']\n"
">>> PurePosixPath('my/library').suffixes\n"
"[]"
msgstr ""
">>> PurePosixPath('my/library.tar.gar').suffixes\n"
"['.tar', '.gar']\n"
">>> PurePosixPath('my/library.tar.gz').suffixes\n"
"['.tar', '.gz']\n"
">>> PurePosixPath('my/library').suffixes\n"
"[]"

#: ../../library/pathlib.rst:472
msgid "The final path component, without its suffix::"
msgstr "Den sista komponenten i sökvägen, utan suffixet::"

#: ../../library/pathlib.rst:474
msgid ""
">>> PurePosixPath('my/library.tar.gz').stem\n"
"'library.tar'\n"
">>> PurePosixPath('my/library.tar').stem\n"
"'library'\n"
">>> PurePosixPath('my/library').stem\n"
"'library'"
msgstr ""
">>> PurePosixPath('my/library.tar.gz').stem\n"
"'library.tar'\n"
">>> PurePosixPath('my/library.tar').stem\n"
"'library'\n"
">>> PurePosixPath('my/library').stem\n"
"'library'"

#: ../../library/pathlib.rst:484
msgid ""
"Return a string representation of the path with forward slashes (``/``)::"
msgstr ""
"Returnerar en strängrepresentation av sökvägen med snedstreck (``/``)::"

#: ../../library/pathlib.rst:486
msgid ""
">>> p = PureWindowsPath('c:\\\\windows')\n"
">>> str(p)\n"
"'c:\\\\windows'\n"
">>> p.as_posix()\n"
"'c:/windows'"
msgstr ""
">>> p = PureWindowsPath('c:\\\\windows')\n"
">>> str(p)\n"
"'c:\\\\windows'\n"
">>> p.as_posix()\n"
"'c:/windows'"

#: ../../library/pathlib.rst:495
msgid ""
"Return whether the path is absolute or not.  A path is considered absolute "
"if it has both a root and (if the flavour allows) a drive::"
msgstr ""
"Returnerar om sökvägen är absolut eller inte.  En sökväg anses vara absolut "
"om den har både en rot och (om smaken tillåter det) en drive::"

#: ../../library/pathlib.rst:498
msgid ""
">>> PurePosixPath('/a/b').is_absolute()\n"
"True\n"
">>> PurePosixPath('a/b').is_absolute()\n"
"False\n"
"\n"
">>> PureWindowsPath('c:/a/b').is_absolute()\n"
"True\n"
">>> PureWindowsPath('/a/b').is_absolute()\n"
"False\n"
">>> PureWindowsPath('c:').is_absolute()\n"
"False\n"
">>> PureWindowsPath('//some/share').is_absolute()\n"
"True"
msgstr ""
">>> PurePosixPath('/a/b').is_absolute()\n"
"True\n"
">>> PurePosixPath('a/b').is_absolute()\n"
"False\n"
"\n"
">>> PureWindowsPath('c:/a/b').is_absolute()\n"
"True\n"
">>> PureWindowsPath('/a/b').is_absolute()\n"
"False\n"
">>> PureWindowsPath('c:').is_absolute()\n"
"False\n"
">>> PureWindowsPath('//some/share').is_absolute()\n"
"True"

#: ../../library/pathlib.rst:515
msgid "Return whether or not this path is relative to the *other* path."
msgstr ""
"Returnerar om den här sökvägen är relativ till den *andra* sökvägen eller "
"inte."

#: ../../library/pathlib.rst:523
msgid ""
"This method is string-based; it neither accesses the filesystem nor treats "
"\"``..``\" segments specially. The following code is equivalent:"
msgstr ""
"Denna metod är strängbaserad; den har varken åtkomst till filsystemet eller "
"behandlar \"``..``\"-segment speciellt. Följande kod är likvärdig:"

#: ../../library/pathlib.rst:534
msgid ""
"Passing additional arguments is deprecated; if supplied, they are joined "
"with *other*."
msgstr ""
"Att ange ytterligare argument är inte aktuellt; om de anges sammanfogas de "
"med *other*."

#: ../../library/pathlib.rst:539
msgid ""
"With :class:`PureWindowsPath`, return ``True`` if the path is considered "
"reserved under Windows, ``False`` otherwise.  With :class:`PurePosixPath`, "
"``False`` is always returned."
msgstr ""
"Med :class:`PureWindowsPath` returneras ``True`` om sökvägen anses vara "
"reserverad under Windows, annars ``False``.  Med :class:`PurePosixPath` "
"returneras alltid ``False``."

#: ../../library/pathlib.rst:543
msgid ""
"Windows path names that contain a colon, or end with a dot or a space, are "
"considered reserved. UNC paths may be reserved."
msgstr ""
"Windows-sökvägsnamn som innehåller ett kolon eller slutar med en punkt eller "
"ett mellanslag betraktas som reserverade. UNC-sökvägar kan vara reserverade."

#: ../../library/pathlib.rst:547
msgid ""
"This method is deprecated; use :func:`os.path.isreserved` to detect reserved "
"paths on Windows."
msgstr ""
"Denna metod är föråldrad; använd :func:`os.path.isreserved` för att upptäcka "
"reserverade sökvägar i Windows."

#: ../../library/pathlib.rst:553
msgid ""
"Calling this method is equivalent to combining the path with each of the "
"given *pathsegments* in turn::"
msgstr ""
"Att anropa denna metod motsvarar att kombinera sökvägen med vart och ett av "
"de angivna *sökvägssegmenten* i tur och ordning::"

#: ../../library/pathlib.rst:556
msgid ""
">>> PurePosixPath('/etc').joinpath('passwd')\n"
"PurePosixPath('/etc/passwd')\n"
">>> PurePosixPath('/etc').joinpath(PurePosixPath('passwd'))\n"
"PurePosixPath('/etc/passwd')\n"
">>> PurePosixPath('/etc').joinpath('init.d', 'apache2')\n"
"PurePosixPath('/etc/init.d/apache2')\n"
">>> PureWindowsPath('c:').joinpath('/Program Files')\n"
"PureWindowsPath('c:/Program Files')"
msgstr ""
">>> PurePosixPath('/etc').joinpath('passwd')\n"
"PurePosixPath('/etc/passwd')\n"
">>> PurePosixPath('/etc').joinpath(PurePosixPath('passwd'))\n"
"PurePosixPath('/etc/passwd')\n"
">>> PurePosixPath('/etc').joinpath('init.d', 'apache2')\n"
"PurePosixPath('/etc/init.d/apache2')\n"
">>> PureWindowsPath('c:').joinpath('/Program Files')\n"
"PureWindowsPath('c:/Program Files')"

#: ../../library/pathlib.rst:568
msgid ""
"Match this path against the provided glob-style pattern.  Return ``True`` if "
"matching is successful, ``False`` otherwise.  For example::"
msgstr ""
"Matchar denna sökväg mot det angivna mönstret i glob-stil.  Returnerar "
"``True`` om matchningen lyckas, annars ``False``.  Till exempel::"

#: ../../library/pathlib.rst:571
msgid ""
">>> PurePath('a/b.py').full_match('a/*.py')\n"
"True\n"
">>> PurePath('a/b.py').full_match('*.py')\n"
"False\n"
">>> PurePath('/a/b/c.py').full_match('/a/**')\n"
"True\n"
">>> PurePath('/a/b/c.py').full_match('**/*.py')\n"
"True"
msgstr ""
">>> PurePath('a/b.py').full_match('a/*.py')\n"
"True\n"
">>> PurePath('a/b.py').full_match('*.py')\n"
"False\n"
">>> PurePath('/a/b/c.py').full_match('/a/**')\n"
"True\n"
">>> PurePath('/a/b/c.py').full_match('**/*.py')\n"
"True"

#: ../../library/pathlib.rst:581 ../../library/pathlib.rst:1291
msgid ":ref:`pathlib-pattern-language` documentation."
msgstr ":ref:`pathlib-pattern-language` dokumentation."

#: ../../library/pathlib.rst:583
msgid "As with other methods, case-sensitivity follows platform defaults::"
msgstr ""
"Som med andra metoder följer skiftlägeskänsligheten plattformens "
"standardvärden::"

#: ../../library/pathlib.rst:585
msgid ""
">>> PurePosixPath('b.py').full_match('*.PY')\n"
"False\n"
">>> PureWindowsPath('b.py').full_match('*.PY')\n"
"True"
msgstr ""
">>> PurePosixPath('b.py').full_match('*.PY')\n"
"False\n"
">>> PureWindowsPath('b.py').full_match('*.PY')\n"
"True"

#: ../../library/pathlib.rst:590
msgid ""
"Set *case_sensitive* to ``True`` or ``False`` to override this behaviour."
msgstr ""
"Sätt *case_sensitive* till ``True`` eller ``False`` för att åsidosätta detta "
"beteende."

#: ../../library/pathlib.rst:597
msgid ""
"Match this path against the provided non-recursive glob-style pattern. "
"Return ``True`` if matching is successful, ``False`` otherwise."
msgstr ""
"Matchar denna sökväg mot det angivna icke-rekursiva mönstret i glob-stil. "
"Returnerar ``True`` om matchningen är lyckad, ``False`` annars."

#: ../../library/pathlib.rst:600
msgid ""
"This method is similar to :meth:`~PurePath.full_match`, but empty patterns "
"aren't allowed (:exc:`ValueError` is raised), the recursive wildcard "
"\"``**``\" isn't supported (it acts like non-recursive \"``*``\"), and if a "
"relative pattern is provided, then matching is done from the right::"
msgstr ""
"Den här metoden liknar :meth:`~PurePath.full_match`, men tomma mönster "
"tillåts inte (:exc:`ValueError` tas upp), det rekursiva jokertecknet "
"\"``**``\" stöds inte (det fungerar som icke-rekursivt \"``*``\"), och om "
"ett relativt mönster anges görs matchningen från höger::"

#: ../../library/pathlib.rst:605
msgid ""
">>> PurePath('a/b.py').match('*.py')\n"
"True\n"
">>> PurePath('/a/b/c.py').match('b/*.py')\n"
"True\n"
">>> PurePath('/a/b/c.py').match('a/*.py')\n"
"False"
msgstr ""
">>> PurePath('a/b.py').match('*.py')\n"
"True\n"
">>> PurePath('/a/b/c.py').match('b/*.py')\n"
"True\n"
">>> PurePath('/a/b/c.py').match('a/*.py')\n"
"False"

#: ../../library/pathlib.rst:612 ../../library/pathlib.rst:1310
#: ../../library/pathlib.rst:1335
msgid "The *pattern* parameter accepts a :term:`path-like object`."
msgstr "Parametern *pattern* accepterar en :term:`path-like object`."

#: ../../library/pathlib.rst:615 ../../library/pathlib.rst:1304
#: ../../library/pathlib.rst:1329
msgid "The *case_sensitive* parameter was added."
msgstr "Parametern *case_sensitive* har lagts till."

#: ../../library/pathlib.rst:621
msgid ""
"Compute a version of this path relative to the path represented by *other*.  "
"If it's impossible, :exc:`ValueError` is raised::"
msgstr ""
"Beräkna en version av den här sökvägen i förhållande till den sökväg som "
"representeras av *other*.  Om det är omöjligt, :exc:`ValueError` tas upp::"

#: ../../library/pathlib.rst:624
msgid ""
">>> p = PurePosixPath('/etc/passwd')\n"
">>> p.relative_to('/')\n"
"PurePosixPath('etc/passwd')\n"
">>> p.relative_to('/etc')\n"
"PurePosixPath('passwd')\n"
">>> p.relative_to('/usr')\n"
"Traceback (most recent call last):\n"
"  File \"<stdin>\", line 1, in <module>\n"
"  File \"pathlib.py\", line 941, in relative_to\n"
"    raise ValueError(error_message.format(str(self), str(formatted)))\n"
"ValueError: '/etc/passwd' is not in the subpath of '/usr' OR one path is "
"relative and the other is absolute."
msgstr ""
">>> p = PurePosixPath('/etc/passwd')\n"
">>> p.relative_to('/')\n"
"PurePosixPath('etc/passwd')\n"
">>> p.relative_to('/etc')\n"
"PurePosixPath('passwd')\n"
">>> p.relative_to('/usr')\n"
"Traceback (most recent call last):\n"
"  File \"<stdin>\", line 1, in <module>\n"
"  File \"pathlib.py\", line 941, in relative_to\n"
"    raise ValueError(error_message.format(str(self), str(formatted)))\n"
"ValueError: '/etc/passwd' is not in the subpath of '/usr' OR one path is "
"relative and the other is absolute."

#: ../../library/pathlib.rst:636
msgid ""
"When *walk_up* is false (the default), the path must start with *other*. "
"When the argument is true, ``..`` entries may be added to form the relative "
"path. In all other cases, such as the paths referencing different drives, :"
"exc:`ValueError` is raised.::"
msgstr ""
"När *walk_up* är false (standard) måste sökvägen börja med *other*. När "
"argumentet är true kan ``..`` poster läggas till för att bilda den relativa "
"sökvägen. I alla andra fall, t.ex. sökvägar som refererar till olika "
"enheter, visas :exc:`ValueError`.::"

#: ../../library/pathlib.rst:641
msgid ""
">>> p.relative_to('/usr', walk_up=True)\n"
"PurePosixPath('../etc/passwd')\n"
">>> p.relative_to('foo', walk_up=True)\n"
"Traceback (most recent call last):\n"
"  File \"<stdin>\", line 1, in <module>\n"
"  File \"pathlib.py\", line 941, in relative_to\n"
"    raise ValueError(error_message.format(str(self), str(formatted)))\n"
"ValueError: '/etc/passwd' is not on the same drive as 'foo' OR one path is "
"relative and the other is absolute."
msgstr ""
">>> p.relative_to('/usr', walk_up=True)\n"
"PurePosixPath('../etc/passwd')\n"
">>> p.relative_to('foo', walk_up=True)\n"
"Traceback (most recent call last):\n"
"  File \"<stdin>\", line 1, in <module>\n"
"  File \"pathlib.py\", line 941, in relative_to\n"
"    raise ValueError(error_message.format(str(self), str(formatted)))\n"
"ValueError: '/etc/passwd' is not on the same drive as 'foo' OR one path is "
"relative and the other is absolute."

#: ../../library/pathlib.rst:651
msgid ""
"This function is part of :class:`PurePath` and works with strings. It does "
"not check or access the underlying file structure. This can impact the "
"*walk_up* option as it assumes that no symlinks are present in the path; "
"call :meth:`~Path.resolve` first if necessary to resolve symlinks."
msgstr ""
"Denna funktion är en del av :class:`PurePath` och arbetar med strängar. Den "
"kontrollerar inte och har inte åtkomst till den underliggande filstrukturen. "
"Detta kan påverka alternativet *walk_up* eftersom det förutsätter att det "
"inte finns några symlänkar i sökvägen; anropa :meth:`~Path.resolve` först om "
"det behövs för att lösa symlänkar."

#: ../../library/pathlib.rst:657
msgid ""
"The *walk_up* parameter was added (old behavior is the same as "
"``walk_up=False``)."
msgstr ""
"Parametern *walk_up* har lagts till (det gamla beteendet är detsamma som "
"``walk_up=False``)."

#: ../../library/pathlib.rst:662
msgid ""
"Passing additional positional arguments is deprecated; if supplied, they are "
"joined with *other*."
msgstr ""
"Att ange ytterligare positionella argument är inte aktuellt; om de anges "
"sammanfogas de med *other*."

#: ../../library/pathlib.rst:667
msgid ""
"Return a new path with the :attr:`name` changed.  If the original path "
"doesn't have a name, ValueError is raised::"
msgstr ""
"Returnerar en ny sökväg med :attr:`name` ändrat.  Om den ursprungliga "
"sökvägen inte har något namn, uppstår ValueError::"

#: ../../library/pathlib.rst:670
msgid ""
">>> p = PureWindowsPath('c:/Downloads/pathlib.tar.gz')\n"
">>> p.with_name('setup.py')\n"
"PureWindowsPath('c:/Downloads/setup.py')\n"
">>> p = PureWindowsPath('c:/')\n"
">>> p.with_name('setup.py')\n"
"Traceback (most recent call last):\n"
"  File \"<stdin>\", line 1, in <module>\n"
"  File \"/home/antoine/cpython/default/Lib/pathlib.py\", line 751, in "
"with_name\n"
"    raise ValueError(\"%r has an empty name\" % (self,))\n"
"ValueError: PureWindowsPath('c:/') has an empty name"
msgstr ""
">>> p = PureWindowsPath('c:/Downloads/pathlib.tar.gz')\n"
">>> p.with_name('setup.py')\n"
"PureWindowsPath('c:/Downloads/setup.py')\n"
">>> p = PureWindowsPath('c:/')\n"
">>> p.with_name('setup.py')\n"
"Traceback (most recent call last):\n"
"  File \"<stdin>\", line 1, in <module>\n"
"  File \"/home/antoine/cpython/default/Lib/pathlib.py\", line 751, in "
"with_name\n"
"    raise ValueError(\"%r has an empty name\" % (self,))\n"
"ValueError: PureWindowsPath('c:/') has an empty name"

#: ../../library/pathlib.rst:684
msgid ""
"Return a new path with the :attr:`stem` changed.  If the original path "
"doesn't have a name, ValueError is raised::"
msgstr ""
"Returnerar en ny sökväg med :attr:`stem` ändrad.  Om den ursprungliga "
"sökvägen inte har något namn, uppstår ValueError::"

#: ../../library/pathlib.rst:687
msgid ""
">>> p = PureWindowsPath('c:/Downloads/draft.txt')\n"
">>> p.with_stem('final')\n"
"PureWindowsPath('c:/Downloads/final.txt')\n"
">>> p = PureWindowsPath('c:/Downloads/pathlib.tar.gz')\n"
">>> p.with_stem('lib')\n"
"PureWindowsPath('c:/Downloads/lib.gz')\n"
">>> p = PureWindowsPath('c:/')\n"
">>> p.with_stem('')\n"
"Traceback (most recent call last):\n"
"  File \"<stdin>\", line 1, in <module>\n"
"  File \"/home/antoine/cpython/default/Lib/pathlib.py\", line 861, in "
"with_stem\n"
"    return self.with_name(stem + self.suffix)\n"
"  File \"/home/antoine/cpython/default/Lib/pathlib.py\", line 851, in "
"with_name\n"
"    raise ValueError(\"%r has an empty name\" % (self,))\n"
"ValueError: PureWindowsPath('c:/') has an empty name"
msgstr ""
">>> p = PureWindowsPath('c:/Downloads/draft.txt')\n"
">>> p.with_stem('final')\n"
"PureWindowsPath('c:/Downloads/final.txt')\n"
">>> p = PureWindowsPath('c:/Downloads/pathlib.tar.gz')\n"
">>> p.with_stem('lib')\n"
"PureWindowsPath('c:/Downloads/lib.gz')\n"
">>> p = PureWindowsPath('c:/')\n"
">>> p.with_stem('')\n"
"Traceback (most recent call last):\n"
"  File \"<stdin>\", line 1, in <module>\n"
"  File \"/home/antoine/cpython/default/Lib/pathlib.py\", line 861, in "
"with_stem\n"
"    return self.with_name(stem + self.suffix)\n"
"  File \"/home/antoine/cpython/default/Lib/pathlib.py\", line 851, in "
"with_name\n"
"    raise ValueError(\"%r has an empty name\" % (self,))\n"
"ValueError: PureWindowsPath('c:/') has an empty name"

#: ../../library/pathlib.rst:708
msgid ""
"Return a new path with the :attr:`suffix` changed.  If the original path "
"doesn't have a suffix, the new *suffix* is appended instead.  If the "
"*suffix* is an empty string, the original suffix is removed::"
msgstr ""
"Returnerar en ny sökväg med :attr:`suffix` ändrat.  Om den ursprungliga "
"sökvägen inte har något suffix läggs det nya *suffixet* till istället.  Om "
"*suffix* är en tom sträng tas det ursprungliga suffixet bort::"

#: ../../library/pathlib.rst:712
msgid ""
">>> p = PureWindowsPath('c:/Downloads/pathlib.tar.gz')\n"
">>> p.with_suffix('.bz2')\n"
"PureWindowsPath('c:/Downloads/pathlib.tar.bz2')\n"
">>> p = PureWindowsPath('README')\n"
">>> p.with_suffix('.txt')\n"
"PureWindowsPath('README.txt')\n"
">>> p = PureWindowsPath('README.txt')\n"
">>> p.with_suffix('')\n"
"PureWindowsPath('README')"
msgstr ""
">>> p = PureWindowsPath('c:/Downloads/pathlib.tar.gz')\n"
">>> p.with_suffix('.bz2')\n"
"PureWindowsPath('c:/Downloads/pathlib.tar.bz2')\n"
">>> p = PureWindowsPath('README')\n"
">>> p.with_suffix('.txt')\n"
"PureWindowsPath('README.txt')\n"
">>> p = PureWindowsPath('README.txt')\n"
">>> p.with_suffix('')\n"
"PureWindowsPath('README')"

#: ../../library/pathlib.rst:725
msgid ""
"Create a new path object of the same type by combining the given "
"*pathsegments*. This method is called whenever a derivative path is created, "
"such as from :attr:`parent` and :meth:`relative_to`. Subclasses may override "
"this method to pass information to derivative paths, for example::"
msgstr ""
"Skapar ett nytt sökvägsobjekt av samma typ genom att kombinera de angivna "
"*sökvägssegmenten*. Denna metod anropas när en härledd sökväg skapas, t.ex. "
"från :attr:`parent` och :meth:`relative_to`. Subklasser kan åsidosätta denna "
"metod för att skicka information till härledda sökvägar, till exempel::"

#: ../../library/pathlib.rst:730
msgid ""
"from pathlib import PurePosixPath\n"
"\n"
"class MyPath(PurePosixPath):\n"
"    def __init__(self, *pathsegments, session_id):\n"
"        super().__init__(*pathsegments)\n"
"        self.session_id = session_id\n"
"\n"
"    def with_segments(self, *pathsegments):\n"
"        return type(self)(*pathsegments, session_id=self.session_id)\n"
"\n"
"etc = MyPath('/etc', session_id=42)\n"
"hosts = etc / 'hosts'\n"
"print(hosts.session_id)  # 42"
msgstr ""
"from pathlib import PurePosixPath\n"
"\n"
"class MyPath(PurePosixPath):\n"
"    def __init__(self, *pathsegments, session_id):\n"
"        super().__init__(*pathsegments)\n"
"        self.session_id = session_id\n"
"\n"
"    def with_segments(self, *pathsegments):\n"
"        return type(self)(*pathsegments, session_id=self.session_id)\n"
"\n"
"etc = MyPath('/etc', session_id=42)\n"
"hosts = etc / 'hosts'\n"
"print(hosts.session_id)  # 42"

#: ../../library/pathlib.rst:751
msgid "Concrete paths"
msgstr "Betongvägar"

#: ../../library/pathlib.rst:753
msgid ""
"Concrete paths are subclasses of the pure path classes.  In addition to "
"operations provided by the latter, they also provide methods to do system "
"calls on path objects.  There are three ways to instantiate concrete paths:"
msgstr ""
"Konkreta sökvägar är subklasser av de rena sökvägsklasserna.  Förutom de "
"operationer som tillhandahålls av de senare, tillhandahåller de också "
"metoder för att göra systemanrop på sökvägsobjekt.  Det finns tre sätt att "
"instansiera konkreta sökvägar:"

#: ../../library/pathlib.rst:759
msgid ""
"A subclass of :class:`PurePath`, this class represents concrete paths of the "
"system's path flavour (instantiating it creates either a :class:`PosixPath` "
"or a :class:`WindowsPath`)::"
msgstr ""
"Denna klass är en underklass till :class:`PurePath` och representerar "
"konkreta sökvägar av systemets sökvägssmak (genom att instansiera den skapas "
"antingen en :class:`PosixPath` eller en :class:`WindowsPath`)::"

#: ../../library/pathlib.rst:763
msgid ""
">>> Path('setup.py')\n"
"PosixPath('setup.py')"
msgstr ""
">>> Path('setup.py')\n"
"PosixPath('setup.py')"

#: ../../library/pathlib.rst:770
msgid ""
"A subclass of :class:`Path` and :class:`PurePosixPath`, this class "
"represents concrete non-Windows filesystem paths::"
msgstr ""
"Denna klass är en underklass till :class:`Path` och :class:`PurePosixPath` "
"och representerar konkreta sökvägar till filsystem som inte är Windows::"

#: ../../library/pathlib.rst:773
msgid ""
">>> PosixPath('/etc/hosts')\n"
"PosixPath('/etc/hosts')"
msgstr ""
">>> PosixPath('/etc/hosts')\n"
"PosixPath('/etc/hosts')"

#: ../../library/pathlib.rst:778
msgid ""
"Raises :exc:`UnsupportedOperation` on Windows. In previous versions, :exc:"
"`NotImplementedError` was raised instead."
msgstr ""
"Utlöser :exc:`UnsupportedOperation` på Windows. I tidigare versioner gavs "
"istället :exc:`NotImplementedError`."

#: ../../library/pathlib.rst:785
msgid ""
"A subclass of :class:`Path` and :class:`PureWindowsPath`, this class "
"represents concrete Windows filesystem paths::"
msgstr ""
"Denna klass är en underklass till :class:`Path` och :class:`PureWindowsPath` "
"och representerar konkreta sökvägar i Windows filsystem::"

#: ../../library/pathlib.rst:788
msgid ""
">>> WindowsPath('c:/', 'Users', 'Ximénez')\n"
"WindowsPath('c:/Users/Ximénez')"
msgstr ""
">>> WindowsPath('c:/', 'Users', 'Ximénez')\n"
"WindowsPath('c:/Users/Ximénez')"

#: ../../library/pathlib.rst:793
msgid ""
"Raises :exc:`UnsupportedOperation` on non-Windows platforms. In previous "
"versions, :exc:`NotImplementedError` was raised instead."
msgstr ""
"Utlöser :exc:`UnsupportedOperation` på icke-Windows plattformar. I tidigare "
"versioner gavs istället :exc:`NotImplementedError`."

#: ../../library/pathlib.rst:798
msgid ""
"You can only instantiate the class flavour that corresponds to your system "
"(allowing system calls on non-compatible path flavours could lead to bugs or "
"failures in your application)::"
msgstr ""
"Du kan bara instansiera den klassvariant som motsvarar ditt system (om du "
"tillåter systemanrop på icke-kompatibla klassvarianter kan det leda till "
"buggar eller fel i din applikation)::"

#: ../../library/pathlib.rst:802
msgid ""
">>> import os\n"
">>> os.name\n"
"'posix'\n"
">>> Path('setup.py')\n"
"PosixPath('setup.py')\n"
">>> PosixPath('setup.py')\n"
"PosixPath('setup.py')\n"
">>> WindowsPath('setup.py')\n"
"Traceback (most recent call last):\n"
"  File \"<stdin>\", line 1, in <module>\n"
"  File \"pathlib.py\", line 798, in __new__\n"
"    % (cls.__name__,))\n"
"UnsupportedOperation: cannot instantiate 'WindowsPath' on your system"
msgstr ""
">>> import os\n"
">>> os.name\n"
"'posix'\n"
">>> Path('setup.py')\n"
"PosixPath('setup.py')\n"
">>> PosixPath('setup.py')\n"
"PosixPath('setup.py')\n"
">>> WindowsPath('setup.py')\n"
"Traceback (most recent call last):\n"
"  File \"<stdin>\", line 1, in <module>\n"
"  File \"pathlib.py\", line 798, in __new__\n"
"    % (cls.__name__,))\n"
"UnsupportedOperation: cannot instantiate 'WindowsPath' on your system"

#: ../../library/pathlib.rst:816
msgid ""
"Some concrete path methods can raise an :exc:`OSError` if a system call "
"fails (for example because the path doesn't exist)."
msgstr ""
"Vissa konkreta sökvägsmetoder kan ge upphov till ett :exc:`OSError` om ett "
"systemanrop misslyckas (t.ex. för att sökvägen inte finns)."

#: ../../library/pathlib.rst:821
msgid "Parsing and generating URIs"
msgstr "Parsning och generering av URI:er"

#: ../../library/pathlib.rst:823
msgid ""
"Concrete path objects can be created from, and represented as, 'file' URIs "
"conforming to :rfc:`8089`."
msgstr ""
"Konkreta sökvägsobjekt kan skapas från, och representeras som, 'file' URI:er "
"som överensstämmer med :rfc:`8089`."

#: ../../library/pathlib.rst:828
msgid ""
"File URIs are not portable across machines with different :ref:`filesystem "
"encodings <filesystem-encoding>`."
msgstr ""
"Fil-URI:er är inte portabla mellan maskiner med olika :ref:"
"`filsystemskodningar <filesystem-encoding>`."

#: ../../library/pathlib.rst:833
msgid "Return a new path object from parsing a 'file' URI. For example::"
msgstr ""
"Returnerar ett nytt sökvägsobjekt från parsning av en \"file\"-URI. Till "
"exempel::"

#: ../../library/pathlib.rst:835
msgid ""
">>> p = Path.from_uri('file:///etc/hosts')\n"
"PosixPath('/etc/hosts')"
msgstr ""
">>> p = Path.from_uri('file:///etc/hosts')\n"
"PosixPath('/etc/hosts')"

#: ../../library/pathlib.rst:838
msgid "On Windows, DOS device and UNC paths may be parsed from URIs::"
msgstr "I Windows kan DOS-enhets- och UNC-sökvägar tolkas från URI:er::"

#: ../../library/pathlib.rst:840
msgid ""
">>> p = Path.from_uri('file:///c:/windows')\n"
"WindowsPath('c:/windows')\n"
">>> p = Path.from_uri('file://server/share')\n"
"WindowsPath('//server/share')"
msgstr ""
">>> p = Path.from_uri('file:///c:/windows')\n"
"WindowsPath('c:/windows')\n"
">>> p = Path.from_uri('file://server/share')\n"
"WindowsPath('//server/share')"

#: ../../library/pathlib.rst:845
msgid "Several variant forms are supported::"
msgstr "Flera olika varianter stöds::"

#: ../../library/pathlib.rst:847
msgid ""
">>> p = Path.from_uri('file:////server/share')\n"
"WindowsPath('//server/share')\n"
">>> p = Path.from_uri('file://///server/share')\n"
"WindowsPath('//server/share')\n"
">>> p = Path.from_uri('file:c:/windows')\n"
"WindowsPath('c:/windows')\n"
">>> p = Path.from_uri('file:/c|/windows')\n"
"WindowsPath('c:/windows')"
msgstr ""
">>> p = Path.from_uri('file:////server/share')\n"
"WindowsPath('//server/share')\n"
">>> p = Path.from_uri('file://///server/share')\n"
"WindowsPath('//server/share')\n"
">>> p = Path.from_uri('file:c:/windows')\n"
"WindowsPath('c:/windows')\n"
">>> p = Path.from_uri('file:/c|/windows')\n"
"WindowsPath('c:/windows')"

#: ../../library/pathlib.rst:856
msgid ""
":exc:`ValueError` is raised if the URI does not start with ``file:``, or the "
"parsed path isn't absolute."
msgstr ""
":exc:`ValueError` uppstår om URI:n inte börjar med ``file:``, eller om den "
"tolkade sökvägen inte är absolut."

#: ../../library/pathlib.rst:864
msgid ""
"Represent the path as a 'file' URI.  :exc:`ValueError` is raised if the path "
"isn't absolute."
msgstr ""
"Representera sökvägen som en 'file' URI. :exc:`ValueError` uppstår om "
"sökvägen inte är absolut."

#: ../../library/pathlib.rst:867
msgid ""
">>> p = PosixPath('/etc/passwd')\n"
">>> p.as_uri()\n"
"'file:///etc/passwd'\n"
">>> p = WindowsPath('c:/Windows')\n"
">>> p.as_uri()\n"
"'file:///c:/Windows'"
msgstr ""
">>> p = PosixPath('/etc/passwd')\n"
">>> p.as_uri()\n"
"'file:///etc/passwd'\n"
">>> p = WindowsPath('c:/Windows')\n"
">>> p.as_uri()\n"
"'file:///c:/Windows'"

#: ../../library/pathlib.rst:876
msgid ""
"For historical reasons, this method is also available from :class:`PurePath` "
"objects. However, its use of :func:`os.fsencode` makes it strictly impure."
msgstr ""

#: ../../library/pathlib.rst:882
msgid "Expanding and resolving paths"
msgstr "Utvidgning och upplösning av banor"

#: ../../library/pathlib.rst:886
msgid ""
"Return a new path object representing the user's home directory (as returned "
"by :func:`os.path.expanduser` with ``~`` construct). If the home directory "
"can't be resolved, :exc:`RuntimeError` is raised."
msgstr ""
"Returnerar ett nytt sökvägsobjekt som representerar användarens hemkatalog "
"(som returneras av :func:`os.path.expanduser` med ``~``\\-konstruktionen). "
"Om hemkatalogen inte kan lösas ut kommer :exc:`RuntimeError` att visas."

#: ../../library/pathlib.rst:892
msgid ""
">>> Path.home()\n"
"PosixPath('/home/antoine')"
msgstr ""
">>> Path.home()\n"
"PosixPath('/home/antoine')"

#: ../../library/pathlib.rst:900
msgid ""
"Return a new path with expanded ``~`` and ``~user`` constructs, as returned "
"by :meth:`os.path.expanduser`. If a home directory can't be resolved, :exc:"
"`RuntimeError` is raised."
msgstr ""
"Returnerar en ny sökväg med utökade ``~`` och ``~user`` konstruktioner, som "
"returneras av :meth:`os.path.expanduser`. Om en hemkatalog inte kan lösas, "
"uppstår :exc:`RuntimeError`."

#: ../../library/pathlib.rst:906
msgid ""
">>> p = PosixPath('~/films/Monty Python')\n"
">>> p.expanduser()\n"
"PosixPath('/home/eric/films/Monty Python')"
msgstr ""
">>> p = PosixPath('~/films/Monty Python')\n"
">>> p.expanduser()\n"
"PosixPath('/home/eric/films/Monty Python')"

#: ../../library/pathlib.rst:915
msgid ""
"Return a new path object representing the current directory (as returned by :"
"func:`os.getcwd`)::"
msgstr ""
"Returnerar ett nytt sökvägsobjekt som representerar den aktuella katalogen "
"(som returneras av :func:`os.getcwd`)::"

#: ../../library/pathlib.rst:918
msgid ""
">>> Path.cwd()\n"
"PosixPath('/home/antoine/pathlib')"
msgstr ""
">>> Path.cwd()\n"
"PosixPath('/home/antoine/pathlib')"

#: ../../library/pathlib.rst:924
msgid ""
"Make the path absolute, without normalization or resolving symlinks. Returns "
"a new path object::"
msgstr ""
"Gör sökvägen absolut, utan normalisering eller lösning av symlänkar. "
"Returnerar ett nytt sökvägsobjekt::"

#: ../../library/pathlib.rst:927
msgid ""
">>> p = Path('tests')\n"
">>> p\n"
"PosixPath('tests')\n"
">>> p.absolute()\n"
"PosixPath('/home/antoine/pathlib/tests')"
msgstr ""
">>> p = Path('tests')\n"
">>> p\n"
"PosixPath('tests')\n"
">>> p.absolute()\n"
"PosixPath('/home/antoine/pathlib/tests')"

#: ../../library/pathlib.rst:936
msgid ""
"Make the path absolute, resolving any symlinks.  A new path object is "
"returned::"
msgstr ""
"Gör sökvägen absolut och löser eventuella symlänkar.  Ett nytt sökvägsobjekt "
"returneras::"

#: ../../library/pathlib.rst:939
msgid ""
">>> p = Path()\n"
">>> p\n"
"PosixPath('.')\n"
">>> p.resolve()\n"
"PosixPath('/home/antoine/pathlib')"
msgstr ""
">>> p = Path()\n"
">>> p\n"
"PosixPath('.')\n"
">>> p.resolve()\n"
"PosixPath('/home/antoine/pathlib')"

#: ../../library/pathlib.rst:945
msgid ""
"\"``..``\" components are also eliminated (this is the only method to do "
"so)::"
msgstr ""
"\"``..``\"-komponenter elimineras också (detta är den enda metoden som gör "
"det)::"

#: ../../library/pathlib.rst:947
msgid ""
">>> p = Path('docs/../setup.py')\n"
">>> p.resolve()\n"
"PosixPath('/home/antoine/pathlib/setup.py')"
msgstr ""
">>> p = Path('docs/../setup.py')\n"
">>> p.resolve()\n"
"PosixPath('/home/antoine/pathlib/setup.py')"

#: ../../library/pathlib.rst:951
msgid ""
"If a path doesn't exist or a symlink loop is encountered, and *strict* is "
"``True``, :exc:`OSError` is raised.  If *strict* is ``False``, the path is "
"resolved as far as possible and any remainder is appended without checking "
"whether it exists."
msgstr ""
"Om en sökväg inte finns eller om en symlänkslinga påträffas, och *strict* är "
"``True``, genereras :exc:`OSError`.  Om *strict* är ``False`` löses sökvägen "
"upp så långt det är möjligt och eventuella rester läggs till utan att "
"kontrollera om den existerar."

#: ../../library/pathlib.rst:956
msgid "The *strict* parameter was added (pre-3.6 behavior is strict)."
msgstr "Parametern *strict* har lagts till (beteendet före 3.6 är strikt)."

#: ../../library/pathlib.rst:959
msgid ""
"Symlink loops are treated like other errors: :exc:`OSError` is raised in "
"strict mode, and no exception is raised in non-strict mode. In previous "
"versions, :exc:`RuntimeError` is raised no matter the value of *strict*."
msgstr ""
"Symlink-loopar behandlas som andra fel: :exc:`OSError` aktiveras i strikt "
"läge och inget undantag aktiveras i icke-strikt läge. I tidigare versioner "
"utlöses :exc:`RuntimeError` oavsett värdet på *strict*."

#: ../../library/pathlib.rst:967
msgid ""
"Return the path to which the symbolic link points (as returned by :func:`os."
"readlink`)::"
msgstr ""
"Returnera sökvägen som den symboliska länken pekar på (som returneras av :"
"func:`os.readlink`)::"

#: ../../library/pathlib.rst:970
msgid ""
">>> p = Path('mylink')\n"
">>> p.symlink_to('setup.py')\n"
">>> p.readlink()\n"
"PosixPath('setup.py')"
msgstr ""
">>> p = Path('mylink')\n"
">>> p.symlink_to('setup.py')\n"
">>> p.readlink()\n"
"PosixPath('setup.py')"

#: ../../library/pathlib.rst:977
msgid ""
"Raises :exc:`UnsupportedOperation` if :func:`os.readlink` is not available. "
"In previous versions, :exc:`NotImplementedError` was raised."
msgstr ""
"Utlöser :exc:`UnsupportedOperation` om :func:`os.readlink` inte är "
"tillgänglig. I tidigare versioner gavs :exc:`NotImplementedError`."

#: ../../library/pathlib.rst:983
msgid "Querying file type and status"
msgstr "Förfrågan om filtyp och status"

#: ../../library/pathlib.rst:987
msgid ""
":meth:`~Path.exists`, :meth:`~Path.is_dir`, :meth:`~Path.is_file`, :meth:"
"`~Path.is_mount`, :meth:`~Path.is_symlink`, :meth:`~Path.is_block_device`, :"
"meth:`~Path.is_char_device`, :meth:`~Path.is_fifo`, :meth:`~Path.is_socket` "
"now return ``False`` instead of raising an exception for paths that contain "
"characters unrepresentable at the OS level."
msgstr ""
":meth:`~Path.exists`, :meth:`~Path.is_dir`, :meth:`~Path.is_file`, :meth:"
"`~Path.is_mount`, :meth:`~Path.is_symlink`, :meth:`~Path.is_block_device`, :"
"meth:`~Path.is_char_device`, :meth:`~Path.is_fifo`, :meth:`~Path.is_socket` "
"returnerar nu ``False`` istället för att skapa ett undantag för sökvägar som "
"innehåller tecken som inte kan representeras på OS-nivå."

#: ../../library/pathlib.rst:997
msgid ""
"Return an :class:`os.stat_result` object containing information about this "
"path, like :func:`os.stat`. The result is looked up at each call to this "
"method."
msgstr ""
"Returnerar ett :class:`os.stat_result`\\-objekt som innehåller information "
"om den här sökvägen, som :func:`os.stat`. Resultatet söks upp vid varje "
"anrop till denna metod."

#: ../../library/pathlib.rst:1000
msgid ""
"This method normally follows symlinks; to stat a symlink add the argument "
"``follow_symlinks=False``, or use :meth:`~Path.lstat`."
msgstr ""
"Den här metoden följer normalt symlinks; för att stata en symlink lägg till "
"argumentet ``follow_symlinks=False``, eller använd :meth:`~Path.lstat`."

#: ../../library/pathlib.rst:1005
msgid ""
">>> p = Path('setup.py')\n"
">>> p.stat().st_size\n"
"956\n"
">>> p.stat().st_mtime\n"
"1327883547.852554"
msgstr ""
">>> p = Path('setup.py')\n"
">>> p.stat().st_size\n"
"956\n"
">>> p.stat().st_mtime\n"
"1327883547.852554"

#: ../../library/pathlib.rst:1011 ../../library/pathlib.rst:1039
#: ../../library/pathlib.rst:1054 ../../library/pathlib.rst:1069
#: ../../library/pathlib.rst:1600 ../../library/pathlib.rst:1616
#: ../../library/pathlib.rst:1637
msgid "The *follow_symlinks* parameter was added."
msgstr "Parametern *follow_symlinks* har lagts till."

#: ../../library/pathlib.rst:1017
msgid ""
"Like :meth:`Path.stat` but, if the path points to a symbolic link, return "
"the symbolic link's information rather than its target's."
msgstr ""
"Som :meth:`Path.stat`, men om sökvägen pekar på en symbolisk länk returneras "
"den symboliska länkens information i stället för målets."

#: ../../library/pathlib.rst:1023
msgid "Return ``True`` if the path points to an existing file or directory."
msgstr ""

#: ../../library/pathlib.rst:1025
msgid ""
"This method normally follows symlinks; to check if a symlink exists, add the "
"argument ``follow_symlinks=False``."
msgstr ""
"Denna metod följer normalt symlinks; för att kontrollera om en symlink "
"existerar, lägg till argumentet ``follow_symlinks=False``."

#: ../../library/pathlib.rst:1030
msgid ""
">>> Path('.').exists()\n"
"True\n"
">>> Path('setup.py').exists()\n"
"True\n"
">>> Path('/etc').exists()\n"
"True\n"
">>> Path('nonexistentfile').exists()\n"
"False"
msgstr ""
">>> Path('.').exists()\n"
"True\n"
">>> Path('setup.py').exists()\n"
"True\n"
">>> Path('/etc').exists()\n"
"True\n"
">>> Path('nonexistentfile').exists()\n"
"False"

#: ../../library/pathlib.rst:1045
msgid ""
"Return ``True`` if the path points to a regular file, ``False`` if it points "
"to another kind of file."
msgstr ""

#: ../../library/pathlib.rst:1048 ../../library/pathlib.rst:1063
#: ../../library/pathlib.rst:1111 ../../library/pathlib.rst:1120
#: ../../library/pathlib.rst:1129 ../../library/pathlib.rst:1138
msgid ""
"``False`` is also returned if the path doesn't exist or is a broken symlink; "
"other errors (such as permission errors) are propagated."
msgstr ""

#: ../../library/pathlib.rst:1051
msgid ""
"This method normally follows symlinks; to exclude symlinks, add the argument "
"``follow_symlinks=False``."
msgstr ""
"Denna metod följer normalt symlänkar; för att utesluta symlänkar, lägg till "
"argumentet ``follow_symlinks=False``."

#: ../../library/pathlib.rst:1060
msgid ""
"Return ``True`` if the path points to a directory, ``False`` if it points to "
"another kind of file."
msgstr ""

#: ../../library/pathlib.rst:1066
msgid ""
"This method normally follows symlinks; to exclude symlinks to directories, "
"add the argument ``follow_symlinks=False``."
msgstr ""
"Den här metoden följer normalt symlinks; om du vill utesluta symlinks till "
"kataloger lägger du till argumentet ``follow_symlinks=False``."

#: ../../library/pathlib.rst:1075
msgid ""
"Return ``True`` if the path points to a symbolic link, ``False`` otherwise."
msgstr ""

#: ../../library/pathlib.rst:1077
msgid ""
"``False`` is also returned if the path doesn't exist; other errors (such as "
"permission errors) are propagated."
msgstr ""

#: ../../library/pathlib.rst:1083
msgid ""
"Return ``True`` if the path points to a junction, and ``False`` for any "
"other type of file. Currently only Windows supports junctions."
msgstr ""
"Returnerar ``True`` om sökvägen pekar på en korsning och ``False`` för alla "
"andra typer av filer. För närvarande stöder endast Windows junctions."

#: ../../library/pathlib.rst:1091
msgid ""
"Return ``True`` if the path is a :dfn:`mount point`: a point in a file "
"system where a different file system has been mounted.  On POSIX, the "
"function checks whether *path*'s parent, :file:`path/..`, is on a different "
"device than *path*, or whether :file:`path/..` and *path* point to the same "
"i-node on the same device --- this should detect mount points for all Unix "
"and POSIX variants.  On Windows, a mount point is considered to be a drive "
"letter root (e.g. ``c:\\``), a UNC share (e.g. ``\\\\server\\share``), or a "
"mounted filesystem directory."
msgstr ""
"Returnerar ``True`` om sökvägen är en :dfn:`mount point`: en punkt i ett "
"filsystem där ett annat filsystem har monterats.  På POSIX kontrollerar "
"funktionen om *sökväg*s förälder, :file:`sökväg/..`, finns på en annan enhet "
"än *sökväg*, eller om :file:`sökväg/..` och *sökväg* pekar på samma i-nod på "
"samma enhet --- detta bör upptäcka monteringspunkter för alla Unix- och "
"POSIX-varianter.  I Windows anses en monteringspunkt vara en enhetsbokstav "
"root (t.ex. ``c:\\``), en UNC-delning (t.ex. ``\\server\\share``) eller en "
"monterad filsystemkatalog."

#: ../../library/pathlib.rst:1102
msgid "Windows support was added."
msgstr "Stöd för Windows har lagts till."

#: ../../library/pathlib.rst:1108
msgid ""
"Return ``True`` if the path points to a Unix socket (or a symbolic link "
"pointing to a Unix socket), ``False`` if it points to another kind of file."
msgstr ""

#: ../../library/pathlib.rst:1117
msgid ""
"Return ``True`` if the path points to a FIFO (or a symbolic link pointing to "
"a FIFO), ``False`` if it points to another kind of file."
msgstr ""

#: ../../library/pathlib.rst:1126
msgid ""
"Return ``True`` if the path points to a block device (or a symbolic link "
"pointing to a block device), ``False`` if it points to another kind of file."
msgstr ""

#: ../../library/pathlib.rst:1135
msgid ""
"Return ``True`` if the path points to a character device (or a symbolic link "
"pointing to a character device), ``False`` if it points to another kind of "
"file."
msgstr ""

#: ../../library/pathlib.rst:1144
msgid ""
"Return whether this path points to the same file as *other_path*, which can "
"be either a Path object, or a string.  The semantics are similar to :func:"
"`os.path.samefile` and :func:`os.path.samestat`."
msgstr ""
"Returnerar om den här sökvägen pekar på samma fil som *other_path*, som kan "
"vara antingen ett Path-objekt eller en sträng.  Semantiken liknar :func:`os."
"path.samefile` och :func:`os.path.samestat`."

#: ../../library/pathlib.rst:1148
msgid ""
"An :exc:`OSError` can be raised if either file cannot be accessed for some "
"reason."
msgstr ""
"Ett :exc:`OSError` kan uppstå om någon av filerna av någon anledning inte "
"går att komma åt."

#: ../../library/pathlib.rst:1153
msgid ""
">>> p = Path('spam')\n"
">>> q = Path('eggs')\n"
">>> p.samefile(q)\n"
"False\n"
">>> p.samefile('spam')\n"
"True"
msgstr ""
">>> p = Path('spam')\n"
">>> q = Path('eggs')\n"
">>> p.samefile(q)\n"
"False\n"
">>> p.samefile('spam')\n"
"True"

#: ../../library/pathlib.rst:1164
msgid "Reading and writing files"
msgstr "Läsa och skriva filer"

#: ../../library/pathlib.rst:1169
msgid ""
"Open the file pointed to by the path, like the built-in :func:`open` "
"function does::"
msgstr ""
"Öppna den fil som sökvägen pekar på, på samma sätt som den inbyggda "
"funktionen :func:`open` gör::"

#: ../../library/pathlib.rst:1172
msgid ""
">>> p = Path('setup.py')\n"
">>> with p.open() as f:\n"
"...     f.readline()\n"
"...\n"
"'#!/usr/bin/env python3\\n'"
msgstr ""
">>> p = Path('setup.py')\n"
">>> with p.open() as f:\n"
"...     f.readline()\n"
"...\n"
"'#!/usr/bin/env python3\\n'"

#: ../../library/pathlib.rst:1181
msgid "Return the decoded contents of the pointed-to file as a string::"
msgstr ""
"Returnera det avkodade innehållet i den fil som pekas ut som en sträng::"

#: ../../library/pathlib.rst:1183 ../../library/pathlib.rst:1216
msgid ""
">>> p = Path('my_text_file')\n"
">>> p.write_text('Text file contents')\n"
"18\n"
">>> p.read_text()\n"
"'Text file contents'"
msgstr ""
">>> p = Path('my_text_file')\n"
">>> p.write_text('Text file contents')\n"
"18\n"
">>> p.read_text()\n"
"'Text file contents'"

#: ../../library/pathlib.rst:1189
msgid ""
"The file is opened and then closed. The optional parameters have the same "
"meaning as in :func:`open`."
msgstr ""
"Filen öppnas och stängs sedan. De valfria parametrarna har samma betydelse "
"som i :func:`open`."

#: ../../library/pathlib.rst:1194 ../../library/pathlib.rst:1227
msgid "The *newline* parameter was added."
msgstr "Parametern *newline* har lagts till."

#: ../../library/pathlib.rst:1200
msgid "Return the binary contents of the pointed-to file as a bytes object::"
msgstr ""
"Returnera det binära innehållet i den fil som pekas ut som ett bytesobjekt::"

#: ../../library/pathlib.rst:1202 ../../library/pathlib.rst:1236
msgid ""
">>> p = Path('my_binary_file')\n"
">>> p.write_bytes(b'Binary file contents')\n"
"20\n"
">>> p.read_bytes()\n"
"b'Binary file contents'"
msgstr ""
">>> p = Path('my_binary_file')\n"
">>> p.write_bytes(b'Binary file contents')\n"
"20\n"
">>> p.read_bytes()\n"
"b'Binary file contents'"

#: ../../library/pathlib.rst:1213
msgid ""
"Open the file pointed to in text mode, write *data* to it, and close the "
"file::"
msgstr ""
"Öppna den fil som pekas ut i textläge, skriv *data* till den och stäng "
"filen::"

#: ../../library/pathlib.rst:1222
msgid ""
"An existing file of the same name is overwritten. The optional parameters "
"have the same meaning as in :func:`open`."
msgstr ""
"En befintlig fil med samma namn skrivs över. De valfria parametrarna har "
"samma betydelse som i :func:`open`."

#: ../../library/pathlib.rst:1233
msgid ""
"Open the file pointed to in bytes mode, write *data* to it, and close the "
"file::"
msgstr ""
"Öppna den fil som pekas ut i bytesläge, skriv *data* till den och stäng "
"filen::"

#: ../../library/pathlib.rst:1242
msgid "An existing file of the same name is overwritten."
msgstr "En befintlig fil med samma namn skrivs över."

#: ../../library/pathlib.rst:1248
msgid "Reading directories"
msgstr "Läsa kataloger"

#: ../../library/pathlib.rst:1252
msgid ""
"When the path points to a directory, yield path objects of the directory "
"contents::"
msgstr ""
"När sökvägen pekar på en katalog, ger sökvägen objekt av kataloginnehållet::"

#: ../../library/pathlib.rst:1255
msgid ""
">>> p = Path('docs')\n"
">>> for child in p.iterdir(): child\n"
"...\n"
"PosixPath('docs/conf.py')\n"
"PosixPath('docs/_templates')\n"
"PosixPath('docs/make.bat')\n"
"PosixPath('docs/index.rst')\n"
"PosixPath('docs/_build')\n"
"PosixPath('docs/_static')\n"
"PosixPath('docs/Makefile')"
msgstr ""
">>> p = Path('docs')\n"
">>> for child in p.iterdir(): child\n"
"...\n"
"PosixPath('docs/conf.py')\n"
"PosixPath('docs/_templates')\n"
"PosixPath('docs/make.bat')\n"
"PosixPath('docs/index.rst')\n"
"PosixPath('docs/_build')\n"
"PosixPath('docs/_static')\n"
"PosixPath('docs/Makefile')"

#: ../../library/pathlib.rst:1266
msgid ""
"The children are yielded in arbitrary order, and the special entries ``'.'`` "
"and ``'..'`` are not included.  If a file is removed from or added to the "
"directory after creating the iterator, it is unspecified whether a path "
"object for that file is included."
msgstr ""
"Barnen ges i godtycklig ordning, och de speciella posterna ``'.'`` och "
"``'..'`` inkluderas inte.  Om en fil tas bort från eller läggs till i "
"katalogen efter att iteratorn har skapats, är det ospecificerat om ett "
"sökvägsobjekt för den filen inkluderas."

#: ../../library/pathlib.rst:1271
msgid ""
"If the path is not a directory or otherwise inaccessible, :exc:`OSError` is "
"raised."
msgstr ""
"Om sökvägen inte är en katalog eller på annat sätt är otillgänglig, uppstår :"
"exc:`OSError`."

#: ../../library/pathlib.rst:1276
msgid ""
"Glob the given relative *pattern* in the directory represented by this path, "
"yielding all matching files (of any kind)::"
msgstr ""
"Globalisera det angivna relativa *mönstret* i katalogen som representeras av "
"denna sökväg, vilket ger alla matchande filer (av alla slag)::"

#: ../../library/pathlib.rst:1279
msgid ""
">>> sorted(Path('.').glob('*.py'))\n"
"[PosixPath('pathlib.py'), PosixPath('setup.py'), PosixPath('test_pathlib."
"py')]\n"
">>> sorted(Path('.').glob('*/*.py'))\n"
"[PosixPath('docs/conf.py')]\n"
">>> sorted(Path('.').glob('**/*.py'))\n"
"[PosixPath('build/lib/pathlib.py'),\n"
" PosixPath('docs/conf.py'),\n"
" PosixPath('pathlib.py'),\n"
" PosixPath('setup.py'),\n"
" PosixPath('test_pathlib.py')]"
msgstr ""
">>> sorted(Path('.').glob('*.py'))\n"
"[PosixPath('pathlib.py'), PosixPath('setup.py'), PosixPath('test_pathlib."
"py')]\n"
">>> sorted(Path('.').glob('*/*.py'))\n"
"[PosixPath('docs/conf.py')]\n"
">>> sorted(Path('.').glob('**/*.py'))\n"
"[PosixPath('build/lib/pathlib.py'),\n"
" PosixPath('docs/conf.py'),\n"
" PosixPath('pathlib.py'),\n"
" PosixPath('setup.py'),\n"
" PosixPath('test_pathlib.py')]"

#: ../../library/pathlib.rst:1293
msgid ""
"By default, or when the *case_sensitive* keyword-only argument is set to "
"``None``, this method matches paths using platform-specific casing rules: "
"typically, case-sensitive on POSIX, and case-insensitive on Windows. Set "
"*case_sensitive* to ``True`` or ``False`` to override this behaviour."
msgstr ""
"Som standard, eller när det enda nyckelordsargumentet *case_sensitive* är "
"inställt på ``None``, matchar den här metoden sökvägar med hjälp av "
"plattformsspecifika regler för skiftlägeskodning: vanligtvis "
"skiftlägeskänsligt på POSIX och skiftlägesokänsligt på Windows. Ställ in "
"*case_sensitive* till ``True`` eller ``False`` för att åsidosätta detta "
"beteende."

#: ../../library/pathlib.rst:1298
msgid ""
"By default, or when the *recurse_symlinks* keyword-only argument is set to "
"``False``, this method follows symlinks except when expanding \"``**``\" "
"wildcards. Set *recurse_symlinks* to ``True`` to always follow symlinks."
msgstr ""
"Som standard, eller när det enda nyckelordsargumentet *recurse_symlinks* är "
"inställt på ``False``, följer den här metoden symolänkar utom när "
"jokertecken \"``**``\" expanderas. Ställ in *recurse_symlinks* till ``True`` "
"för att alltid följa symboliska länkar."

#: ../../library/pathlib.rst:1302
msgid ""
"Raises an :ref:`auditing event <auditing>` ``pathlib.Path.glob`` with "
"arguments ``self``, ``pattern``."
msgstr ""
"Utlöser en :ref:`auditing event <auditing>` ``pathlib.Path.glob`` med "
"argumenten ``self``, ``pattern``."

#: ../../library/pathlib.rst:1307 ../../library/pathlib.rst:1332
msgid "The *recurse_symlinks* parameter was added."
msgstr "Parametern *recurse_symlinks* har lagts till."

#: ../../library/pathlib.rst:1313
msgid ""
"Any :exc:`OSError` exceptions raised from scanning the filesystem are "
"suppressed. In previous versions, such exceptions are suppressed in many "
"cases, but not all."
msgstr ""
"Alla :exc:`OSError`\\-undantag som uppstår vid skanning av filsystemet "
"undertrycks. I tidigare versioner undertrycks sådana undantag i många fall, "
"men inte i alla."

#: ../../library/pathlib.rst:1321
msgid ""
"Glob the given relative *pattern* recursively.  This is like calling :func:"
"`Path.glob` with \"``**/``\" added in front of the *pattern*."
msgstr ""
"Globera det givna relativa *mönstret* rekursivt.  Detta är som att anropa :"
"func:`Path.glob` med \"``**/``\" tillagt framför *mönstret*."

#: ../../library/pathlib.rst:1325
msgid ":ref:`pathlib-pattern-language` and :meth:`Path.glob` documentation."
msgstr ":ref:`pathlib-pattern-language` och :meth:`Path.glob` dokumentation."

#: ../../library/pathlib.rst:1327
msgid ""
"Raises an :ref:`auditing event <auditing>` ``pathlib.Path.rglob`` with "
"arguments ``self``, ``pattern``."
msgstr ""
"Utlöser en :ref:`auditing event <auditing>` ``pathlib.Path.rglob`` med "
"argumenten ``self``, ``pattern``."

#: ../../library/pathlib.rst:1341
msgid ""
"Generate the file names in a directory tree by walking the tree either top-"
"down or bottom-up."
msgstr ""
"Generera filnamnen i ett katalogträd genom att gå igenom trädet antingen "
"uppifrån och ner eller nerifrån och upp."

#: ../../library/pathlib.rst:1344
msgid ""
"For each directory in the directory tree rooted at *self* (including *self* "
"but excluding '.' and '..'), the method yields a 3-tuple of ``(dirpath, "
"dirnames, filenames)``."
msgstr ""
"För varje katalog i katalogträdet med rot i *self* (inklusive *self* men "
"exklusive '.' och '...') ger metoden en 3-tupel av ``(dirpath, dirnames, "
"filenames)``."

#: ../../library/pathlib.rst:1348
msgid ""
"*dirpath* is a :class:`Path` to the directory currently being walked, "
"*dirnames* is a list of strings for the names of subdirectories in *dirpath* "
"(excluding ``'.'`` and ``'..'``), and *filenames* is a list of strings for "
"the names of the non-directory files in *dirpath*. To get a full path (which "
"begins with *self*) to a file or directory in *dirpath*, do ``dirpath / "
"name``. Whether or not the lists are sorted is file system-dependent."
msgstr ""
"*dirpath* är en :class:`Sökväg` till den katalog som för närvarande gås "
"igenom, *dirnames* är en lista med strängar för namnen på underkataloger i "
"*dirpath* (exklusive ``'.'`` och ``'..'``), och *filenames* är en lista med "
"strängar för namnen på de filer som inte finns i katalogen i *dirpath*. För "
"att få en fullständig sökväg (som börjar med *self*) till en fil eller "
"katalog i *dirpath*, gör ``dirpath / name``. Huruvida listorna är sorterade "
"eller inte är beroende av filsystemet."

#: ../../library/pathlib.rst:1356
msgid ""
"If the optional argument *top_down* is true (which is the default), the "
"triple for a directory is generated before the triples for any of its "
"subdirectories (directories are walked top-down).  If *top_down* is false, "
"the triple for a directory is generated after the triples for all of its "
"subdirectories (directories are walked bottom-up). No matter the value of "
"*top_down*, the list of subdirectories is retrieved before the triples for "
"the directory and its subdirectories are walked."
msgstr ""
"Om det valfria argumentet *top_down* är true (vilket är standard) genereras "
"trippeln för en katalog före tripplarna för någon av dess underkataloger "
"(kataloger gås igenom uppifrån och ned).  Om *top_down* är false genereras "
"trippeln för en katalog efter tripplarna för alla dess underkataloger "
"(kataloger gås igenom nedifrån och upp). Oavsett värdet på *top_down* hämtas "
"listan med underkataloger innan tripplarna för katalogen och dess "
"underkataloger gås igenom."

#: ../../library/pathlib.rst:1364
msgid ""
"When *top_down* is true, the caller can modify the *dirnames* list in-place "
"(for example, using :keyword:`del` or slice assignment), and :meth:`Path."
"walk` will only recurse into the subdirectories whose names remain in "
"*dirnames*. This can be used to prune the search, or to impose a specific "
"order of visiting, or even to inform :meth:`Path.walk` about directories the "
"caller creates or renames before it resumes :meth:`Path.walk` again. "
"Modifying *dirnames* when *top_down* is false has no effect on the behavior "
"of :meth:`Path.walk` since the directories in *dirnames* have already been "
"generated by the time *dirnames* is yielded to the caller."
msgstr ""
"När *top_down* är true kan anroparen ändra *dirnames*-listan på plats (till "
"exempel med :keyword:`del` eller slice assignment), och :meth:`Path.walk` "
"kommer bara att söka i de underkataloger vars namn finns kvar i *dirnames*. "
"Detta kan användas för att begränsa sökningen, eller för att införa en "
"specifik besöksordning, eller till och med för att informera :meth:`Path."
"walk` om kataloger som anroparen skapar eller byter namn på innan den "
"återupptar :meth:`Path.walk` igen. Att ändra *dirnames* när *top_down* är "
"false har ingen effekt på beteendet hos :meth:`Path.walk` eftersom "
"katalogerna i *dirnames* redan har skapats när *dirnames* överlämnas till "
"den som anropar."

#: ../../library/pathlib.rst:1374
msgid ""
"By default, errors from :func:`os.scandir` are ignored.  If the optional "
"argument *on_error* is specified, it should be a callable; it will be called "
"with one argument, an :exc:`OSError` instance. The callable can handle the "
"error to continue the walk or re-raise it to stop the walk. Note that the "
"filename is available as the ``filename`` attribute of the exception object."
msgstr ""
"Som standard ignoreras fel från :func:`os.scandir`.  Om det valfria "
"argumentet *on_error* anges bör det vara en callable; den kommer att anropas "
"med ett argument, en :exc:`OSError`\\-instans. Anropsobjektet kan hantera "
"felet för att fortsätta vandringen eller ta upp det igen för att stoppa "
"vandringen. Observera att filnamnet är tillgängligt som attributet "
"``filename`` i undantagsobjektet."

#: ../../library/pathlib.rst:1380
msgid ""
"By default, :meth:`Path.walk` does not follow symbolic links, and instead "
"adds them to the *filenames* list. Set *follow_symlinks* to true to resolve "
"symlinks and place them in *dirnames* and *filenames* as appropriate for "
"their targets, and consequently visit directories pointed to by symlinks "
"(where supported)."
msgstr ""
"Som standard följer :meth:`Path.walk` inte symboliska länkar, utan lägger "
"istället till dem i listan *filnamn*. Ange *follow_symlinks* till true för "
"att lösa upp symboliska länkar och placera dem i *dirnames* och *filenames* "
"på lämpligt sätt för deras mål, och följaktligen besöka kataloger som "
"symboliska länkar pekar på (där detta stöds)."

#: ../../library/pathlib.rst:1387
msgid ""
"Be aware that setting *follow_symlinks* to true can lead to infinite "
"recursion if a link points to a parent directory of itself. :meth:`Path."
"walk` does not keep track of the directories it has already visited."
msgstr ""
"Tänk på att om *follow_symlinks* sätts till true kan det leda till oändlig "
"rekursion om en länk pekar på en överordnad katalog till sig själv. :meth:"
"`Path.walk` håller inte reda på vilka kataloger den redan har besökt."

#: ../../library/pathlib.rst:1392
msgid ""
":meth:`Path.walk` assumes the directories it walks are not modified during "
"execution. For example, if a directory from *dirnames* has been replaced "
"with a symlink and *follow_symlinks* is false, :meth:`Path.walk` will still "
"try to descend into it. To prevent such behavior, remove directories from "
"*dirnames* as appropriate."
msgstr ""
":meth:`Path.walk` förutsätter att de kataloger den går igenom inte ändras "
"under körningen. Om till exempel en katalog från *dirnames* har ersatts med "
"en symlänk och *follow_symlinks* är false, kommer :meth:`Path.walk` ändå att "
"försöka gå ner i den. För att förhindra ett sådant beteende ska du ta bort "
"kataloger från *dirnames* på lämpligt sätt."

#: ../../library/pathlib.rst:1400
msgid ""
"Unlike :func:`os.walk`, :meth:`Path.walk` lists symlinks to directories in "
"*filenames* if *follow_symlinks* is false."
msgstr ""
"Till skillnad från :func:`os.walk` listar :meth:`Path.walk` symlänkar till "
"kataloger i *filnamn* om *follow_symlinks* är false."

#: ../../library/pathlib.rst:1403
msgid ""
"This example displays the number of bytes used by all files in each "
"directory, while ignoring ``__pycache__`` directories::"
msgstr ""
"I det här exemplet visas antalet byte som används av alla filer i varje "
"katalog, samtidigt som katalogerna ``__pycache__`` ignoreras::"

#: ../../library/pathlib.rst:1406
msgid ""
"from pathlib import Path\n"
"for root, dirs, files in Path(\"cpython/Lib/concurrent\")."
"walk(on_error=print):\n"
"  print(\n"
"      root,\n"
"      \"consumes\",\n"
"      sum((root / file).stat().st_size for file in files),\n"
"      \"bytes in\",\n"
"      len(files),\n"
"      \"non-directory files\"\n"
"  )\n"
"  if '__pycache__' in dirs:\n"
"        dirs.remove('__pycache__')"
msgstr ""
"from pathlib import Path\n"
"for root, dirs, files in Path(\"cpython/Lib/concurrent\")."
"walk(on_error=print):\n"
"  print(\n"
"      root,\n"
"      \"consumes\",\n"
"      sum((root / file).stat().st_size for file in files),\n"
"      \"bytes in\",\n"
"      len(files),\n"
"      \"non-directory files\"\n"
"  )\n"
"  if '__pycache__' in dirs:\n"
"        dirs.remove('__pycache__')"

#: ../../library/pathlib.rst:1419
msgid ""
"This next example is a simple implementation of :func:`shutil.rmtree`. "
"Walking the tree bottom-up is essential as :func:`rmdir` doesn't allow "
"deleting a directory before it is empty::"
msgstr ""
"Nästa exempel är en enkel implementation av :func:`shutil.rmtree`. Att gå "
"igenom trädet nerifrån och upp är nödvändigt eftersom :func:`rmdir` inte "
"tillåter att en katalog tas bort innan den är tom:"

#: ../../library/pathlib.rst:1423
msgid ""
"# Delete everything reachable from the directory \"top\".\n"
"# CAUTION:  This is dangerous! For example, if top == Path('/'),\n"
"# it could delete all of your files.\n"
"for root, dirs, files in top.walk(top_down=False):\n"
"    for name in files:\n"
"        (root / name).unlink()\n"
"    for name in dirs:\n"
"        (root / name).rmdir()"
msgstr ""
"# Ta bort allt som går att nå från katalogen \"top\".\n"
"# FÖRSIKTIGHET: Detta är farligt! Till exempel, om top == Path('/'),\n"
"# kan det radera alla dina filer.\n"
"for root, dirs, files in top.walk(top_down=False):\n"
"    för namn i filer:\n"
"        (rot / namn).unlink()\n"
"    för namn i dirs:\n"
"        (rot / namn).rmdir()"

#: ../../library/pathlib.rst:1436
msgid "Creating files and directories"
msgstr "Skapa filer och kataloger"

#: ../../library/pathlib.rst:1440
msgid ""
"Create a file at this given path.  If *mode* is given, it is combined with "
"the process's ``umask`` value to determine the file mode and access flags.  "
"If the file already exists, the function succeeds when *exist_ok* is true "
"(and its modification time is updated to the current time), otherwise :exc:"
"`FileExistsError` is raised."
msgstr ""
"Skapa en fil på den angivna sökvägen.  Om *mode* anges kombineras det med "
"processens ``umask``\\-värde för att bestämma filens läge och "
"åtkomstflaggor.  Om filen redan finns, lyckas funktionen när *exist_ok* är "
"sant (och dess modifieringstid uppdateras till aktuell tid), annars uppstår :"
"exc:`FileExistsError`."

#: ../../library/pathlib.rst:1447
msgid ""
"The :meth:`~Path.open`, :meth:`~Path.write_text` and :meth:`~Path."
"write_bytes` methods are often used to create files."
msgstr ""
"Metoderna :meth:`~Path.open`, :meth:`~Path.write_text` och :meth:`~Path."
"write_bytes` används ofta för att skapa filer."

#: ../../library/pathlib.rst:1453
msgid ""
"Create a new directory at this given path.  If *mode* is given, it is "
"combined with the process's ``umask`` value to determine the file mode and "
"access flags.  If the path already exists, :exc:`FileExistsError` is raised."
msgstr ""
"Skapa en ny katalog på den angivna sökvägen.  Om *mode* anges kombineras det "
"med processens ``umask``\\-värde för att bestämma filläge och "
"åtkomstflaggor.  Om sökvägen redan finns kommer :exc:`FileExistsError` att "
"visas."

#: ../../library/pathlib.rst:1458
msgid ""
"If *parents* is true, any missing parents of this path are created as "
"needed; they are created with the default permissions without taking *mode* "
"into account (mimicking the POSIX ``mkdir -p`` command)."
msgstr ""
"Om *parents* är true, skapas alla saknade föräldrar till den här sökvägen "
"vid behov; de skapas med standardbehörigheter utan att *mode* beaktas "
"(efterliknar POSIX-kommandot ``mkdir -p``)."

#: ../../library/pathlib.rst:1462
msgid ""
"If *parents* is false (the default), a missing parent raises :exc:"
"`FileNotFoundError`."
msgstr ""
"Om *parents* är false (standard), orsakar en saknad förälder :exc:"
"`FileNotFoundError`."

#: ../../library/pathlib.rst:1465
msgid ""
"If *exist_ok* is false (the default), :exc:`FileExistsError` is raised if "
"the target directory already exists."
msgstr ""
"Om *exist_ok* är false (standard) kommer :exc:`FileExistsError` att uppstå "
"om målkatalogen redan existerar."

#: ../../library/pathlib.rst:1468
msgid ""
"If *exist_ok* is true, :exc:`FileExistsError` will not be raised unless the "
"given path already exists in the file system and is not a directory (same "
"behavior as the POSIX ``mkdir -p`` command)."
msgstr ""
"Om *exist_ok* är sant kommer :exc:`FileExistsError` inte att uppstå om inte "
"den angivna sökvägen redan finns i filsystemet och inte är en katalog (samma "
"beteende som POSIX-kommandot ``mkdir -p``)."

#: ../../library/pathlib.rst:1472
msgid "The *exist_ok* parameter was added."
msgstr "Parametern *exist_ok* har lagts till."

#: ../../library/pathlib.rst:1478
msgid "Make this path a symbolic link pointing to *target*."
msgstr "Gör den här sökvägen till en symbolisk länk som pekar på *target*."

#: ../../library/pathlib.rst:1480
msgid ""
"On Windows, a symlink represents either a file or a directory, and does not "
"morph to the target dynamically.  If the target is present, the type of the "
"symlink will be created to match. Otherwise, the symlink will be created as "
"a directory if *target_is_directory* is true or a file symlink (the default) "
"otherwise.  On non-Windows platforms, *target_is_directory* is ignored."
msgstr ""
"I Windows representerar en symlänk antingen en fil eller en katalog, och den "
"flyttas inte dynamiskt till målet.  Om målet finns kommer typen av symlänk "
"att skapas så att den matchar. I annat fall skapas symbollänken som en "
"katalog om *target_is_directory* är sant eller som en filsymlänk (standard) "
"i annat fall.  På icke-Windows-plattformar ignoreras *target_is_directory*."

#: ../../library/pathlib.rst:1488
msgid ""
">>> p = Path('mylink')\n"
">>> p.symlink_to('setup.py')\n"
">>> p.resolve()\n"
"PosixPath('/home/antoine/pathlib/setup.py')\n"
">>> p.stat().st_size\n"
"956\n"
">>> p.lstat().st_size\n"
"8"
msgstr ""
">>> p = Path('mylink')\n"
">>> p.symlink_to('setup.py')\n"
">>> p.resolve()\n"
"PosixPath('/home/antoine/pathlib/setup.py')\n"
">>> p.stat().st_size\n"
"956\n"
">>> p.lstat().st_size\n"
"8"

#: ../../library/pathlib.rst:1498
msgid ""
"The order of arguments (link, target) is the reverse of :func:`os.symlink`'s."
msgstr ""
"Ordningen på argumenten (länk, mål) är den omvända mot :func:`os.symlink`."

#: ../../library/pathlib.rst:1501
msgid ""
"Raises :exc:`UnsupportedOperation` if :func:`os.symlink` is not available. "
"In previous versions, :exc:`NotImplementedError` was raised."
msgstr ""
"Utlöser :exc:`UnsupportedOperation` om :func:`os.symlink` inte är "
"tillgänglig. I tidigare versioner gavs :exc:`NotImplementedError`."

#: ../../library/pathlib.rst:1508
msgid "Make this path a hard link to the same file as *target*."
msgstr "Gör den här sökvägen till en hård länk till samma fil som *target*."

#: ../../library/pathlib.rst:1511
msgid ""
"The order of arguments (link, target) is the reverse of :func:`os.link`'s."
msgstr ""
"Ordningen på argumenten (länk, mål) är den omvända mot :func:`os.link`."

#: ../../library/pathlib.rst:1516
msgid ""
"Raises :exc:`UnsupportedOperation` if :func:`os.link` is not available. In "
"previous versions, :exc:`NotImplementedError` was raised."
msgstr ""
"Visar :exc:`UnsupportedOperation` om :func:`os.link` inte är tillgänglig. I "
"tidigare versioner gavs :exc:`NotImplementedError`."

#: ../../library/pathlib.rst:1522
msgid "Renaming and deleting"
msgstr ""

#: ../../library/pathlib.rst:1526
msgid ""
"Rename this file or directory to the given *target*, and return a new :class:"
"`!Path` instance pointing to *target*.  On Unix, if *target* exists and is a "
"file, it will be replaced silently if the user has permission. On Windows, "
"if *target* exists, :exc:`FileExistsError` will be raised. *target* can be "
"either a string or another path object::"
msgstr ""
"Byt namn på denna fil eller katalog till det angivna *target* och returnera "
"en ny :class:`!Path`\\-instans som pekar på *target*.  På Unix, om *target* "
"finns och är en fil, kommer den att ersättas tyst om användaren har "
"behörighet. På Windows, om *target* existerar, kommer :exc:`FileExistsError` "
"att uppstå. *target* kan vara antingen en sträng eller ett annat "
"sökvägsobjekt::"

#: ../../library/pathlib.rst:1532
msgid ""
">>> p = Path('foo')\n"
">>> p.open('w').write('some text')\n"
"9\n"
">>> target = Path('bar')\n"
">>> p.rename(target)\n"
"PosixPath('bar')\n"
">>> target.open().read()\n"
"'some text'"
msgstr ""
">>> p = Path('foo')\n"
">>> p.open('w').write('some text')\n"
"9\n"
">>> target = Path('bar')\n"
">>> p.rename(target)\n"
"PosixPath('bar')\n"
">>> target.open().read()\n"
"'some text'"

#: ../../library/pathlib.rst:1541 ../../library/pathlib.rst:1557
msgid ""
"The target path may be absolute or relative. Relative paths are interpreted "
"relative to the current working directory, *not* the directory of the :class:"
"`!Path` object."
msgstr ""
"Målsökvägen kan vara absolut eller relativ. Relativa sökvägar tolkas i "
"förhållande till den aktuella arbetskatalogen, *inte* katalogen för :class:`!"
"Path`\\-objektet."

#: ../../library/pathlib.rst:1545
msgid ""
"It is implemented in terms of :func:`os.rename` and gives the same "
"guarantees."
msgstr "Den implementeras i form av :func:`os.rename` och ger samma garantier."

#: ../../library/pathlib.rst:1547 ../../library/pathlib.rst:1561
msgid "Added return value, return the new :class:`!Path` instance."
msgstr "Lagt till returvärde, returnerar den nya :class:`!Path`\\-instansen."

#: ../../library/pathlib.rst:1553
msgid ""
"Rename this file or directory to the given *target*, and return a new :class:"
"`!Path` instance pointing to *target*.  If *target* points to an existing "
"file or empty directory, it will be unconditionally replaced."
msgstr ""
"Byt namn på denna fil eller katalog till det angivna *target*, och returnera "
"en ny :class:`!Path`\\-instans som pekar på *target*.  Om *target* pekar på "
"en befintlig fil eller en tom katalog kommer den ovillkorligen att ersättas."

#: ../../library/pathlib.rst:1567
msgid ""
"Remove this file or symbolic link.  If the path points to a directory, use :"
"func:`Path.rmdir` instead."
msgstr ""
"Ta bort denna fil eller symboliska länk.  Om sökvägen pekar på en katalog, "
"använd :func:`Path.rmdir` istället."

#: ../../library/pathlib.rst:1570
msgid ""
"If *missing_ok* is false (the default), :exc:`FileNotFoundError` is raised "
"if the path does not exist."
msgstr ""
"Om *missing_ok* är false (standard) kommer :exc:`FileNotFoundError` att "
"uppstå om sökvägen inte finns."

#: ../../library/pathlib.rst:1573
msgid ""
"If *missing_ok* is true, :exc:`FileNotFoundError` exceptions will be ignored "
"(same behavior as the POSIX ``rm -f`` command)."
msgstr ""
"Om *missing_ok* är true, ignoreras :exc:`FileNotFoundError` (samma beteende "
"som POSIX-kommandot ``rm -f``)."

#: ../../library/pathlib.rst:1576
msgid "The *missing_ok* parameter was added."
msgstr "Parametern *missing_ok* har lagts till."

#: ../../library/pathlib.rst:1582
msgid "Remove this directory.  The directory must be empty."
msgstr "Ta bort den här katalogen.  Katalogen måste vara tom."

#: ../../library/pathlib.rst:1586
msgid "Permissions and ownership"
msgstr "Behörigheter och ägande"

#: ../../library/pathlib.rst:1590
msgid ""
"Return the name of the user owning the file. :exc:`KeyError` is raised if "
"the file's user identifier (UID) isn't found in the system database."
msgstr ""
"Returnerar namnet på den användare som äger filen. :exc:`KeyError` uppstår "
"om filens användaridentifierare (UID) inte finns i systemdatabasen."

#: ../../library/pathlib.rst:1593
msgid ""
"This method normally follows symlinks; to get the owner of the symlink, add "
"the argument ``follow_symlinks=False``."
msgstr ""
"Denna metod följer normalt symlänkar; för att få ägaren till symlänken, lägg "
"till argumentet ``follow_symlinks=False``."

#: ../../library/pathlib.rst:1596
msgid ""
"Raises :exc:`UnsupportedOperation` if the :mod:`pwd` module is not "
"available. In earlier versions, :exc:`NotImplementedError` was raised."
msgstr ""
"Utlöser :exc:`UnsupportedOperation` om modulen :mod:`pwd` inte är "
"tillgänglig. I tidigare versioner gavs :exc:`NotImplementedError`."

#: ../../library/pathlib.rst:1606
msgid ""
"Return the name of the group owning the file. :exc:`KeyError` is raised if "
"the file's group identifier (GID) isn't found in the system database."
msgstr ""
"Returnerar namnet på den grupp som äger filen. :exc:`KeyError` uppstår om "
"filens gruppidentifierare (GID) inte finns i systemdatabasen."

#: ../../library/pathlib.rst:1609
msgid ""
"This method normally follows symlinks; to get the group of the symlink, add "
"the argument ``follow_symlinks=False``."
msgstr ""
"Denna metod följer normalt symlänkar; för att få gruppen i symbollänken, "
"lägg till argumentet ``follow_symlinks=False``."

#: ../../library/pathlib.rst:1612
msgid ""
"Raises :exc:`UnsupportedOperation` if the :mod:`grp` module is not "
"available. In earlier versions, :exc:`NotImplementedError` was raised."
msgstr ""
"Utlöser :exc:`UnsupportedOperation` om modulen :mod:`grp` inte är "
"tillgänglig. I tidigare versioner gavs :exc:`NotImplementedError`."

#: ../../library/pathlib.rst:1622
msgid "Change the file mode and permissions, like :func:`os.chmod`."
msgstr "Ändra filens läge och behörigheter, som :func:`os.chmod`."

#: ../../library/pathlib.rst:1624
msgid ""
"This method normally follows symlinks. Some Unix flavours support changing "
"permissions on the symlink itself; on these platforms you may add the "
"argument ``follow_symlinks=False``, or use :meth:`~Path.lchmod`."
msgstr ""
"Den här metoden följer normalt symlänkar. Vissa Unix-versioner stöder "
"ändring av behörigheter på själva symbollänken; på dessa plattformar kan du "
"lägga till argumentet ``follow_symlinks=False``, eller använda :meth:`~Path."
"lchmod`."

#: ../../library/pathlib.rst:1630
msgid ""
">>> p = Path('setup.py')\n"
">>> p.stat().st_mode\n"
"33277\n"
">>> p.chmod(0o444)\n"
">>> p.stat().st_mode\n"
"33060"
msgstr ""
">>> p = Path('setup.py')\n"
">>> p.stat().st_mode\n"
"33277\n"
">>> p.chmod(0o444)\n"
">>> p.stat().st_mode\n"
"33060"

#: ../../library/pathlib.rst:1643
msgid ""
"Like :meth:`Path.chmod` but, if the path points to a symbolic link, the "
"symbolic link's mode is changed rather than its target's."
msgstr ""
"Som :meth:`Path.chmod`, men om sökvägen pekar på en symbolisk länk ändras "
"den symboliska länkens läge i stället för målets."

#: ../../library/pathlib.rst:1650
msgid "Pattern language"
msgstr "Mönster språk"

#: ../../library/pathlib.rst:1652
msgid ""
"The following wildcards are supported in patterns for :meth:`~PurePath."
"full_match`, :meth:`~Path.glob` and :meth:`~Path.rglob`:"
msgstr ""
"Följande jokertecken stöds i mönster för :meth:`~PurePath.full_match`, :meth:"
"`~Path.glob` och :meth:`~Path.rglob`:"

#: ../../library/pathlib.rst:1655
msgid "``**`` (entire segment)"
msgstr "``**`` (hela segmentet)"

#: ../../library/pathlib.rst:1656
msgid "Matches any number of file or directory segments, including zero."
msgstr "Matchar valfritt antal fil- eller katalogsegment, inklusive noll."

#: ../../library/pathlib.rst:1657
msgid "``*`` (entire segment)"
msgstr "``*`` (hela segmentet)"

#: ../../library/pathlib.rst:1658
msgid "Matches one file or directory segment."
msgstr "Matchar ett fil- eller katalogsegment."

#: ../../library/pathlib.rst:1659
msgid "``*`` (part of a segment)"
msgstr "``*`` (del av ett segment)"

#: ../../library/pathlib.rst:1660
msgid "Matches any number of non-separator characters, including zero."
msgstr "Matchar valfritt antal tecken utan separator, inklusive noll."

#: ../../library/pathlib.rst:1661
msgid "``?``"
msgstr "``?``"

#: ../../library/pathlib.rst:1662
msgid "Matches one non-separator character."
msgstr "Matchar ett tecken utan separator."

#: ../../library/pathlib.rst:1663
msgid "``[seq]``"
msgstr "``[seq]``"

#: ../../library/pathlib.rst:1664
msgid ""
"Matches one character in *seq*, where *seq* is a sequence of characters. "
"Range expressions are supported; for example, ``[a-z]`` matches any "
"lowercase ASCII letter. Multiple ranges can be combined: ``[a-zA-Z0-9_]`` "
"matches any ASCII letter, digit, or underscore."
msgstr ""
"Matchar ett tecken i *seq*, där *seq* är en sekvens av tecken. Uttryck för "
"intervall stöds, t.ex. ``[a-z]`` matchar alla gemena ASCII-bokstäver. Flera "
"intervall kan kombineras: ``[a-zA-Z0-9_]`` matchar alla ASCII-bokstäver, "
"siffror eller understreck."

#: ../../library/pathlib.rst:1668
msgid "``[!seq]``"
msgstr "``[!seq]``"

#: ../../library/pathlib.rst:1669
msgid ""
"Matches one character not in *seq*, where *seq* follows the same rules as "
"above."
msgstr ""
"Matchar ett tecken som inte finns med i *seq*, där *seq* följer samma regler "
"som ovan."

#: ../../library/pathlib.rst:1671
msgid ""
"For a literal match, wrap the meta-characters in brackets. For example, "
"``\"[?]\"`` matches the character ``\"?\"``."
msgstr ""
"För en bokstavlig matchning omsluter du metatecknen inom parentes. Till "
"exempel matchar ``\"[?]\"`` tecknet ``\"?\"``."

#: ../../library/pathlib.rst:1674
msgid "The \"``**``\" wildcard enables recursive globbing. A few examples:"
msgstr "Jokertecknet \"``**``\" möjliggör rekursiv globbing. Några exempel:"

#: ../../library/pathlib.rst:1677
msgid "Pattern"
msgstr "Mönster"

#: ../../library/pathlib.rst:1677
msgid "Meaning"
msgstr "Betydelse"

#: ../../library/pathlib.rst:1679
msgid "\"``**/*``\""
msgstr "\"``**/*``\""

#: ../../library/pathlib.rst:1679
msgid "Any path with at least one segment."
msgstr "Varje väg med minst ett segment."

#: ../../library/pathlib.rst:1680
msgid "\"``**/*.py``\""
msgstr "\"``**/*.py``\""

#: ../../library/pathlib.rst:1680
msgid "Any path with a final segment ending \"``.py``\"."
msgstr "Alla sökvägar med ett slutsegment som slutar på \"``.py``\"."

#: ../../library/pathlib.rst:1681
msgid "\"``assets/**``\""
msgstr "\"``tillgångar/**``\""

#: ../../library/pathlib.rst:1681
msgid "Any path starting with \"``assets/``\"."
msgstr "Alla sökvägar som börjar med \"``assets/``\"."

#: ../../library/pathlib.rst:1682
msgid "\"``assets/**/*``\""
msgstr "\"``tillgångar/**/*``\""

#: ../../library/pathlib.rst:1682
msgid ""
"Any path starting with \"``assets/``\", excluding \"``assets/``\" itself."
msgstr ""
"Alla sökvägar som börjar med \"``assets/``\", utom själva \"``assets/``\"."

#: ../../library/pathlib.rst:1686
msgid ""
"Globbing with the \"``**``\" wildcard visits every directory in the tree. "
"Large directory trees may take a long time to search."
msgstr ""
"Om du använder jokertecknet \"``**``\" besöks alla kataloger i trädet. Stora "
"katalogträd kan ta lång tid att söka igenom."

#: ../../library/pathlib.rst:1689
msgid ""
"Globbing with a pattern that ends with \"``**``\" returns both files and "
"directories. In previous versions, only directories were returned."
msgstr ""
"Globbing med ett mönster som slutar med \"``**``\" returnerar både filer och "
"kataloger. I tidigare versioner returnerades endast kataloger."

#: ../../library/pathlib.rst:1693
msgid ""
"In :meth:`Path.glob` and :meth:`~Path.rglob`, a trailing slash may be added "
"to the pattern to match only directories."
msgstr ""
"I :meth:`Path.glob` och :meth:`~Path.rglob` kan ett efterföljande snedstreck "
"läggas till i mönstret för att endast matcha kataloger."

#: ../../library/pathlib.rst:1696
msgid ""
"Globbing with a pattern that ends with a pathname components separator (:"
"data:`~os.sep` or :data:`~os.altsep`) returns only directories."
msgstr ""
"Globbing med ett mönster som slutar med en komponentavgränsare för "
"sökvägsnamn (:data:`~os.sep` eller :data:`~os.altsep`) returnerar endast "
"kataloger."

#: ../../library/pathlib.rst:1702
msgid "Comparison to the :mod:`glob` module"
msgstr "Jämförelse med :mod:`glob`\\-modulen"

#: ../../library/pathlib.rst:1704
msgid ""
"The patterns accepted and results generated by :meth:`Path.glob` and :meth:"
"`Path.rglob` differ slightly from those by the :mod:`glob` module:"
msgstr ""
"De mönster som accepteras och de resultat som genereras av :meth:`Path.glob` "
"och :meth:`Path.rglob` skiljer sig något från dem som genereras av modulen :"
"mod:`glob`:"

#: ../../library/pathlib.rst:1707
msgid ""
"Files beginning with a dot are not special in pathlib. This is like passing "
"``include_hidden=True`` to :func:`glob.glob`."
msgstr ""
"Filer som börjar med en punkt är inte speciella i pathlib. Detta är som att "
"skicka ``include_hidden=True`` till :func:`glob.glob`."

#: ../../library/pathlib.rst:1709
msgid ""
"\"``**``\" pattern components are always recursive in pathlib. This is like "
"passing ``recursive=True`` to :func:`glob.glob`."
msgstr ""
"\"``**``\"-mönsterkomponenter är alltid rekursiva i pathlib. Detta är som "
"att skicka ``recursive=True`` till :func:`glob.glob`."

#: ../../library/pathlib.rst:1711
msgid ""
"\"``**``\" pattern components do not follow symlinks by default in pathlib. "
"This behaviour has no equivalent in :func:`glob.glob`, but you can pass "
"``recurse_symlinks=True`` to :meth:`Path.glob` for compatible behaviour."
msgstr ""
"\"``**``\"-mönsterkomponenter följer inte symlinks som standard i pathlib. "
"Detta beteende har ingen motsvarighet i :func:`glob.glob`, men du kan skicka "
"``recurse_symlinks=True`` till :meth:`Path.glob` för ett kompatibelt "
"beteende."

#: ../../library/pathlib.rst:1714
msgid ""
"Like all :class:`PurePath` and :class:`Path` objects, the values returned "
"from :meth:`Path.glob` and :meth:`Path.rglob` don't include trailing slashes."
msgstr ""
"Liksom alla :class:`PurePath`\\- och :class:`Path`\\-objekt innehåller de "
"värden som returneras från :meth:`Path.glob` och :meth:`Path.rglob` inte "
"efterföljande snedstreck."

#: ../../library/pathlib.rst:1717
msgid ""
"The values returned from pathlib's ``path.glob()`` and ``path.rglob()`` "
"include the *path* as a prefix, unlike the results of ``glob."
"glob(root_dir=path)``."
msgstr ""
"De värden som returneras från pathlibs ``path.glob()`` och ``path.rglob()`` "
"inkluderar *path* som prefix, till skillnad från resultaten från ``glob."
"glob(root_dir=path)``."

#: ../../library/pathlib.rst:1720
msgid ""
"The values returned from pathlib's ``path.glob()`` and ``path.rglob()`` may "
"include *path* itself, for example when globbing \"``**``\", whereas the "
"results of ``glob.glob(root_dir=path)`` never include an empty string that "
"would correspond to *path*."
msgstr ""
"De värden som returneras från pathlibs ``path.glob()`` och ``path.rglob()`` "
"kan innehålla *path* själv, till exempel vid globbing av \"``**``\", medan "
"resultaten från ``glob.glob(root_dir=path)`` aldrig innehåller en tom sträng "
"som skulle motsvara *path*."

#: ../../library/pathlib.rst:1727
msgid "Comparison to the :mod:`os` and :mod:`os.path` modules"
msgstr "Jämförelse med modulerna :mod:`os` och :mod:`os.path`"

#: ../../library/pathlib.rst:1729
msgid ""
"pathlib implements path operations using :class:`PurePath` and :class:`Path` "
"objects, and so it's said to be *object-oriented*. On the other hand, the :"
"mod:`os` and :mod:`os.path` modules supply functions that work with low-"
"level ``str`` and ``bytes`` objects, which is a more *procedural* approach. "
"Some users consider the object-oriented style to be more readable."
msgstr ""
"pathlib implementerar sökvägsoperationer med hjälp av :class:`PurePath` och :"
"class:`Path`\\-objekt, och därför sägs den vara *objektorienterad*. Å andra "
"sidan tillhandahåller modulerna :mod:`os` och :mod:`os.path` funktioner som "
"arbetar med lågnivåobjekten ``str`` och ``bytes``, vilket är ett mer "
"*procedurinriktat* tillvägagångssätt. Vissa användare anser att den "
"objektorienterade stilen är mer läsbar."

#: ../../library/pathlib.rst:1735
msgid ""
"Many functions in :mod:`os` and :mod:`os.path` support ``bytes`` paths and :"
"ref:`paths relative to directory descriptors <dir_fd>`. These features "
"aren't available in pathlib."
msgstr ""
"Många funktioner i :mod:`os` och :mod:`os.path` stöder ``bytes``\\-sökvägar "
"och :ref:`sökvägar relativt katalogbeskrivare <dir_fd>`. Dessa funktioner är "
"inte tillgängliga i pathlib."

#: ../../library/pathlib.rst:1739
msgid ""
"Python's ``str`` and ``bytes`` types, and portions of the :mod:`os` and :mod:"
"`os.path` modules, are written in C and are very speedy. pathlib is written "
"in pure Python and is often slower, but rarely slow enough to matter."
msgstr ""
"Pythons typer ``str`` och ``bytes``, och delar av modulerna :mod:`os` och :"
"mod:`os.path`, är skrivna i C och är mycket snabba. pathlib är skrivet i ren "
"Python och är ofta långsammare, men sällan tillräckligt långsamt för att det "
"ska spela någon roll."

#: ../../library/pathlib.rst:1743
msgid ""
"pathlib's path normalization is slightly more opinionated and consistent "
"than :mod:`os.path`. For example, whereas :func:`os.path.abspath` eliminates "
"\"``..``\" segments from a path, which may change its meaning if symlinks "
"are involved, :meth:`Path.absolute` preserves these segments for greater "
"safety."
msgstr ""
"pathlibs normalisering av sökvägar är något mer åsiktsbaserad och konsekvent "
"än :mod:`os.path`. Till exempel, medan :func:`os.path.abspath` eliminerar "
"\"``..``\"-segment från en sökväg, vilket kan ändra dess betydelse om "
"symlinks är inblandade, bevarar :meth:`Path.absolute` dessa segment för "
"större säkerhet."

#: ../../library/pathlib.rst:1748
msgid ""
"pathlib's path normalization may render it unsuitable for some applications:"
msgstr ""
"pathlibs normalisering av sökvägar kan göra den olämplig för vissa "
"applikationer:"

#: ../../library/pathlib.rst:1750
msgid ""
"pathlib normalizes ``Path(\"my_folder/\")`` to ``Path(\"my_folder\")``, "
"which changes a path's meaning when supplied to various operating system "
"APIs and command-line utilities. Specifically, the absence of a trailing "
"separator may allow the path to be resolved as either a file or directory, "
"rather than a directory only."
msgstr ""
"pathlib normaliserar ``Path(\"my_folder/\")`` till ``Path(\"my_folder\")``, "
"vilket ändrar en sökvägs betydelse när den tillhandahålls till olika API:er "
"för operativsystem och kommandoradsverktyg. I synnerhet kan avsaknaden av en "
"efterföljande separator göra det möjligt att lösa sökvägen som antingen en "
"fil eller en katalog, snarare än bara en katalog."

#: ../../library/pathlib.rst:1755
msgid ""
"pathlib normalizes ``Path(\"./my_program\")`` to ``Path(\"my_program\")``, "
"which changes a path's meaning when used as an executable search path, such "
"as in a shell or when spawning a child process. Specifically, the absence of "
"a separator in the path may force it to be looked up in :envvar:`PATH` "
"rather than the current directory."
msgstr ""
"pathlib normaliserar ``Path(\"./my_program\")`` till "
"``Path(\"my_program\")``, vilket ändrar en sökvägs betydelse när den används "
"som sökväg för körbara program, t.ex. i ett skal eller när en underordnad "
"process startas. Specifikt kan avsaknaden av en separator i sökvägen tvinga "
"den att letas upp i :envvar:`PATH` i stället för i den aktuella katalogen."

#: ../../library/pathlib.rst:1761
msgid ""
"As a consequence of these differences, pathlib is not a drop-in replacement "
"for :mod:`os.path`."
msgstr ""
"Som en följd av dessa skillnader är pathlib inte en direkt ersättning för :"
"mod:`os.path`."

#: ../../library/pathlib.rst:1766
msgid "Corresponding tools"
msgstr "Motsvarande verktyg"

#: ../../library/pathlib.rst:1768
msgid ""
"Below is a table mapping various :mod:`os` functions to their corresponding :"
"class:`PurePath`/:class:`Path` equivalent."
msgstr ""
"Nedan finns en tabell som mappar olika :mod:`os`\\-funktioner till deras "
"motsvarande :class:`PurePath`/:class:`Path`\\-ekvivalenter."

#: ../../library/pathlib.rst:1772
msgid ":mod:`os` and :mod:`os.path`"
msgstr ":mod:`os` och :mod:`os.path`"

#: ../../library/pathlib.rst:1772
msgid ":mod:`pathlib`"
msgstr ":mod:`pathlib`"

#: ../../library/pathlib.rst:1774
msgid ":func:`os.path.dirname`"
msgstr ":func:`os.sökväg.dirnamn`"

#: ../../library/pathlib.rst:1774
msgid ":attr:`PurePath.parent`"
msgstr ":attr:`PurePath.förälder`"

#: ../../library/pathlib.rst:1775
msgid ":func:`os.path.basename`"
msgstr ":func:`os.sökväg.basnamn`"

#: ../../library/pathlib.rst:1775
msgid ":attr:`PurePath.name`"
msgstr ":attr:`PurePath.namn`"

#: ../../library/pathlib.rst:1776
msgid ":func:`os.path.splitext`"
msgstr ":func:`os.sökväg.splitext`"

#: ../../library/pathlib.rst:1776
msgid ":attr:`PurePath.stem`, :attr:`PurePath.suffix`"
msgstr ":attr:`PurePath.stem`, :attr:`PurePath.suffix`"

#: ../../library/pathlib.rst:1777
msgid ":func:`os.path.join`"
msgstr ":func:`os.sökväg.join`"

#: ../../library/pathlib.rst:1777
msgid ":meth:`PurePath.joinpath`"
msgstr ":meth:`PurePath.joinpath`"

#: ../../library/pathlib.rst:1778
msgid ":func:`os.path.isabs`"
msgstr ":func:`os.path.isabs``"

#: ../../library/pathlib.rst:1778
msgid ":meth:`PurePath.is_absolute`"
msgstr ":meth:`PurePath.is_absolute`"

#: ../../library/pathlib.rst:1779
msgid ":func:`os.path.relpath`"
msgstr ":func:`os.path.relpath`"

#: ../../library/pathlib.rst:1779
msgid ":meth:`PurePath.relative_to` [1]_"
msgstr ":meth:`PurePath.relative_to` [1]_"

#: ../../library/pathlib.rst:1780
msgid ":func:`os.path.expanduser`"
msgstr ":func:`os.path.expanduser`"

#: ../../library/pathlib.rst:1780
msgid ":meth:`Path.expanduser` [2]_"
msgstr ":meth:`Path.expanduser` [2]_"

#: ../../library/pathlib.rst:1781
msgid ":func:`os.path.realpath`"
msgstr ":func:`os.path.realpath`"

#: ../../library/pathlib.rst:1781
msgid ":meth:`Path.resolve`"
msgstr ":meth:`Path.resolve`"

#: ../../library/pathlib.rst:1782
msgid ":func:`os.path.abspath`"
msgstr ":func:`os.path.abspath`"

#: ../../library/pathlib.rst:1782
msgid ":meth:`Path.absolute` [3]_"
msgstr ":meth:`Sökväg.absolut` [3]_"

#: ../../library/pathlib.rst:1783
msgid ":func:`os.path.exists`"
msgstr ":func:`os.path.exists`"

#: ../../library/pathlib.rst:1783
msgid ":meth:`Path.exists`"
msgstr ":meth:`Sökväg.finns`"

#: ../../library/pathlib.rst:1784
msgid ":func:`os.path.isfile`"
msgstr ":func:`os.path.isfile`"

#: ../../library/pathlib.rst:1784
msgid ":meth:`Path.is_file`"
msgstr ":meth:`Path.is_file`"

#: ../../library/pathlib.rst:1785
msgid ":func:`os.path.isdir`"
msgstr ":func:`os.sökväg.isdir`"

#: ../../library/pathlib.rst:1785
msgid ":meth:`Path.is_dir`"
msgstr ":meth:`Path.is_dir`"

#: ../../library/pathlib.rst:1786
msgid ":func:`os.path.islink`"
msgstr ":func:`os.sökväg.islink`"

#: ../../library/pathlib.rst:1786
msgid ":meth:`Path.is_symlink`"
msgstr ":meth:`Sökväg.is_symlänk`"

#: ../../library/pathlib.rst:1787
msgid ":func:`os.path.isjunction`"
msgstr ":func:`os.path.isjunction`"

#: ../../library/pathlib.rst:1787
msgid ":meth:`Path.is_junction`"
msgstr ":meth:`Sökväg.is_junction`"

#: ../../library/pathlib.rst:1788
msgid ":func:`os.path.ismount`"
msgstr ":func:`os.sökväg.ismount`"

#: ../../library/pathlib.rst:1788
msgid ":meth:`Path.is_mount`"
msgstr ":meth:`Path.is_mount`"

#: ../../library/pathlib.rst:1789
msgid ":func:`os.path.samefile`"
msgstr ":func:`os.sökväg.samefile`"

#: ../../library/pathlib.rst:1789
msgid ":meth:`Path.samefile`"
msgstr ":meth:`Sökväg.samefile`"

#: ../../library/pathlib.rst:1790
msgid ":func:`os.getcwd`"
msgstr ":func:`os.getcwd`"

#: ../../library/pathlib.rst:1790
msgid ":meth:`Path.cwd`"
msgstr ":meth:`Sökväg.cwd`"

#: ../../library/pathlib.rst:1791
msgid ":func:`os.stat`"
msgstr ":func:`os.stat`"

#: ../../library/pathlib.rst:1791
msgid ":meth:`Path.stat`"
msgstr ":meth:`Sökväg.stat`"

#: ../../library/pathlib.rst:1792
msgid ":func:`os.lstat`"
msgstr ":func:`os.lstat`"

#: ../../library/pathlib.rst:1792
msgid ":meth:`Path.lstat`"
msgstr ":meth:`Sökväg.lstat`"

#: ../../library/pathlib.rst:1793
msgid ":func:`os.listdir`"
msgstr ":func:`os.listdir`"

#: ../../library/pathlib.rst:1793
msgid ":meth:`Path.iterdir`"
msgstr ":meth:`Sökväg.iterdir`"

#: ../../library/pathlib.rst:1794
msgid ":func:`os.walk`"
msgstr ":func:`os.walk`"

#: ../../library/pathlib.rst:1794
msgid ":meth:`Path.walk` [4]_"
msgstr ":meth:`Path.walk` [4]_"

#: ../../library/pathlib.rst:1795
msgid ":func:`os.mkdir`, :func:`os.makedirs`"
msgstr ":func:`os.mkdir`, :func:`os.makedirs`"

#: ../../library/pathlib.rst:1795
msgid ":meth:`Path.mkdir`"
msgstr ":meth:`Sökväg.mkdir`"

#: ../../library/pathlib.rst:1796
msgid ":func:`os.link`"
msgstr ":func:`os.länk`"

#: ../../library/pathlib.rst:1796
msgid ":meth:`Path.hardlink_to`"
msgstr ":meth:`Sökväg.hårdlänk_till`"

#: ../../library/pathlib.rst:1797
msgid ":func:`os.symlink`"
msgstr ":func:`os.symlänk`"

#: ../../library/pathlib.rst:1797
msgid ":meth:`Path.symlink_to`"
msgstr ":meth:`Path.symlink_to`"

#: ../../library/pathlib.rst:1798
msgid ":func:`os.readlink`"
msgstr ":func:`os.readlink`"

#: ../../library/pathlib.rst:1798
msgid ":meth:`Path.readlink`"
msgstr ":meth:`Sökväg.läslänk`"

#: ../../library/pathlib.rst:1799
msgid ":func:`os.rename`"
msgstr ":func:`os.rename`"

#: ../../library/pathlib.rst:1799
msgid ":meth:`Path.rename`"
msgstr ":meth:`Path.rename`"

#: ../../library/pathlib.rst:1800
msgid ":func:`os.replace`"
msgstr ":func:`os.replace`"

#: ../../library/pathlib.rst:1800
msgid ":meth:`Path.replace`"
msgstr ":meth:`Sökväg.ersätt`"

#: ../../library/pathlib.rst:1801
msgid ":func:`os.remove`, :func:`os.unlink`"
msgstr ":func:`os.remove`, :func:`os.unlink`"

#: ../../library/pathlib.rst:1801
msgid ":meth:`Path.unlink`"
msgstr ":meth:`Path.unlink`"

#: ../../library/pathlib.rst:1802
msgid ":func:`os.rmdir`"
msgstr ":func:`os.rmdir`"

#: ../../library/pathlib.rst:1802
msgid ":meth:`Path.rmdir`"
msgstr ":meth:`Sökväg.rmdir`"

#: ../../library/pathlib.rst:1803
msgid ":func:`os.chmod`"
msgstr ":func:`os.chmod`"

#: ../../library/pathlib.rst:1803
msgid ":meth:`Path.chmod`"
msgstr ":meth:`Sökväg.chmod`"

#: ../../library/pathlib.rst:1804
msgid ":func:`os.lchmod`"
msgstr ":func:`os.lchmod`"

#: ../../library/pathlib.rst:1804
msgid ":meth:`Path.lchmod`"
msgstr ":meth:`Sökväg.lchmod`"

#: ../../library/pathlib.rst:1808
msgid "Footnotes"
msgstr "Fotnoter"

#: ../../library/pathlib.rst:1809
msgid ""
":func:`os.path.relpath` calls :func:`~os.path.abspath` to make paths "
"absolute and remove \"``..``\" parts, whereas :meth:`PurePath.relative_to` "
"is a lexical operation that raises :exc:`ValueError` when its inputs' "
"anchors differ (e.g. if one path is absolute and the other relative.)"
msgstr ""
":func:`os.path.relpath` anropar :func:`~os.path.abspath` för att göra "
"sökvägar absoluta och ta bort \"``..``\"-delar, medan :meth:`PurePath."
"relative_to` är en lexikal operation som ger upphov till :exc:`ValueError` "
"när dess ingångars ankare skiljer sig åt (t.ex. om en sökväg är absolut och "
"den andra relativ)"

#: ../../library/pathlib.rst:1813
msgid ""
":func:`os.path.expanduser` returns the path unchanged if the home directory "
"can't be resolved, whereas :meth:`Path.expanduser` raises :exc:"
"`RuntimeError`."
msgstr ""
":func:`os.path.expanduser` returnerar sökvägen oförändrad om hemkatalogen "
"inte kan lösas, medan :meth:`Path.expanduser` ger upphov till :exc:"
"`RuntimeError`."

#: ../../library/pathlib.rst:1816
msgid ""
":func:`os.path.abspath` removes \"``..``\" components without resolving "
"symlinks, which may change the meaning of the path, whereas :meth:`Path."
"absolute` leaves any \"``..``\" components in the path."
msgstr ""
":func:`os.path.abspath` tar bort \"``..``\"-komponenter utan att lösa "
"symlänkar, vilket kan ändra sökvägens betydelse, medan :meth:`Path.absolute` "
"lämnar kvar alla \"``..``\"-komponenter i sökvägen."

#: ../../library/pathlib.rst:1819
msgid ""
":func:`os.walk` always follows symlinks when categorizing paths into "
"*dirnames* and *filenames*, whereas :meth:`Path.walk` categorizes all "
"symlinks into *filenames* when *follow_symlinks* is false (the default.)"
msgstr ""
":func:`os.walk` följer alltid symlänkar när sökvägar kategoriseras i "
"*katalognamn* och *filnamn*, medan :meth:`Path.walk` kategoriserar alla "
"symlänkar i *filnamn* när *follow_symlinks* är false (standard)"

#: ../../library/pathlib.rst:11
msgid "path"
msgstr "path"

#: ../../library/pathlib.rst:11
msgid "operations"
msgstr "operations"
