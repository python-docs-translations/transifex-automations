# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# python-doc bot, 2025
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.10\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-25 17:21+0000\n"
"PO-Revision-Date: 2025-09-22 15:57+0000\n"
"Last-Translator: python-doc bot, 2025\n"
"Language-Team: Swedish (https://app.transifex.com/python-doc/teams/5390/sv/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: sv\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"

#: ../../library/exceptions.rst:4
msgid "Built-in Exceptions"
msgstr "Inbyggda undantag"

#: ../../library/exceptions.rst:10
msgid ""
"In Python, all exceptions must be instances of a class that derives from "
":class:`BaseException`.  In a :keyword:`try` statement with an "
":keyword:`except` clause that mentions a particular class, that clause also "
"handles any exception classes derived from that class (but not exception "
"classes from which *it* is derived).  Two exception classes that are not "
"related via subclassing are never equivalent, even if they have the same "
"name."
msgstr ""
"I Python måste alla undantag vara instanser av en klass som härstammar från "
":class:`BaseException`.  I en :keyword:`try`\\-sats med en "
":keyword:`except`\\-klausul som nämner en viss klass, hanterar den klausulen"
" också alla undantagsklasser som härrör från den klassen (men inte "
"undantagsklasser som *den* härrör från).  Två undantagsklasser som inte är "
"relaterade via subklassning är aldrig likvärdiga, även om de har samma namn."

#: ../../library/exceptions.rst:19
msgid ""
"The built-in exceptions listed below can be generated by the interpreter or "
"built-in functions.  Except where mentioned, they have an \"associated "
"value\" indicating the detailed cause of the error.  This may be a string or"
" a tuple of several items of information (e.g., an error code and a string "
"explaining the code).  The associated value is usually passed as arguments "
"to the exception class's constructor."
msgstr ""

#: ../../library/exceptions.rst:26
msgid ""
"User code can raise built-in exceptions.  This can be used to test an "
"exception handler or to report an error condition \"just like\" the "
"situation in which the interpreter raises the same exception; but beware "
"that there is nothing to prevent user code from raising an inappropriate "
"error."
msgstr ""
"Användarkod kan skapa inbyggda undantag.  Detta kan användas för att testa "
"en undantagshanterare eller för att rapportera ett feltillstånd \"precis "
"som\" den situation där tolken skapar samma undantag; men tänk på att det "
"inte finns något som hindrar användarkoden från att skapa ett olämpligt fel."

#: ../../library/exceptions.rst:31
msgid ""
"The built-in exception classes can be subclassed to define new exceptions; "
"programmers are encouraged to derive new exceptions from the "
":exc:`Exception` class or one of its subclasses, and not from "
":exc:`BaseException`.  More information on defining exceptions is available "
"in the Python Tutorial under :ref:`tut-userexceptions`."
msgstr ""
"De inbyggda undantagsklasserna kan subklassas för att definiera nya "
"undantag; programmerare uppmuntras att härleda nya undantag från klassen "
":exc:`Exception` eller någon av dess subklasser, och inte från "
":exc:`BaseException`.  Mer information om hur man definierar undantag finns "
"i Python Tutorial under :ref:`tut-userexceptions`."

#: ../../library/exceptions.rst:39
msgid "Exception context"
msgstr "Kontext för undantag"

#: ../../library/exceptions.rst:41
msgid ""
"When raising a new exception while another exception is already being "
"handled, the new exception's :attr:`__context__` attribute is automatically "
"set to the handled exception.  An exception may be handled when an "
":keyword:`except` or :keyword:`finally` clause, or a :keyword:`with` "
"statement, is used."
msgstr ""

#: ../../library/exceptions.rst:47
msgid ""
"This implicit exception context can be supplemented with an explicit cause "
"by using :keyword:`!from` with :keyword:`raise`::"
msgstr ""
"Denna implicita undantagskontext kan kompletteras med en explicit orsak "
"genom att använda :keyword:`!from` med :keyword:`raise`::"

#: ../../library/exceptions.rst:53
msgid ""
"The expression following :keyword:`from<raise>` must be an exception or "
"``None``. It will be set as :attr:`__cause__` on the raised exception. "
"Setting :attr:`__cause__` also implicitly sets the "
":attr:`__suppress_context__` attribute to ``True``, so that using ``raise "
"new_exc from None`` effectively replaces the old exception with the new one "
"for display purposes (e.g. converting :exc:`KeyError` to "
":exc:`AttributeError`), while leaving the old exception available in "
":attr:`__context__` for introspection when debugging."
msgstr ""

#: ../../library/exceptions.rst:62
msgid ""
"The default traceback display code shows these chained exceptions in "
"addition to the traceback for the exception itself. An explicitly chained "
"exception in :attr:`__cause__` is always shown when present. An implicitly "
"chained exception in :attr:`__context__` is shown only if :attr:`__cause__` "
"is :const:`None` and :attr:`__suppress_context__` is false."
msgstr ""

#: ../../library/exceptions.rst:68
msgid ""
"In either case, the exception itself is always shown after any chained "
"exceptions so that the final line of the traceback always shows the last "
"exception that was raised."
msgstr ""
"I båda fallen visas alltid själva undantaget efter eventuella kedjade "
"undantag, så att den sista raden i traceback alltid visar det sista "
"undantaget som uppstod."

#: ../../library/exceptions.rst:74
msgid "Inheriting from built-in exceptions"
msgstr "Ärver från inbyggda undantag"

#: ../../library/exceptions.rst:76
msgid ""
"User code can create subclasses that inherit from an exception type. It's "
"recommended to only subclass one exception type at a time to avoid any "
"possible conflicts between how the bases handle the ``args`` attribute, as "
"well as due to possible memory layout incompatibilities."
msgstr ""
"Användarkod kan skapa subklasser som ärver från en undantagstyp. Det "
"rekommenderas att endast subklassa en undantagstyp åt gången för att undvika"
" eventuella konflikter mellan hur baserna hanterar attributet ``args``, samt"
" på grund av eventuella inkompatibiliteter i minneslayouten."

#: ../../library/exceptions.rst:83
msgid ""
"Most built-in exceptions are implemented in C for efficiency, see: "
":source:`Objects/exceptions.c`.  Some have custom memory layouts which makes"
" it impossible to create a subclass that inherits from multiple exception "
"types. The memory layout of a type is an implementation detail and might "
"change between Python versions, leading to new conflicts in the future.  "
"Therefore, it's recommended to avoid subclassing multiple exception types "
"altogether."
msgstr ""
"De flesta inbyggda undantag är implementerade i C för effektivitetens skull,"
" se: :source:`Objects/exceptions.c`.  Vissa har anpassade minneslayouter "
"vilket gör det omöjligt att skapa en subklass som ärver från flera "
"undantagstyper. Minneslayouten för en typ är en implementationsdetalj och "
"kan ändras mellan Python-versioner, vilket leder till nya konflikter i "
"framtiden.  Därför rekommenderas det att undvika att underklassa flera "
"undantagstyper helt och hållet."

#: ../../library/exceptions.rst:93
msgid "Base classes"
msgstr "Basklasser"

#: ../../library/exceptions.rst:95
msgid ""
"The following exceptions are used mostly as base classes for other "
"exceptions."
msgstr "Följande undantag används mest som basklasser för andra undantag."

#: ../../library/exceptions.rst:99
msgid ""
"The base class for all built-in exceptions.  It is not meant to be directly "
"inherited by user-defined classes (for that, use :exc:`Exception`).  If "
":func:`str` is called on an instance of this class, the representation of "
"the argument(s) to the instance are returned, or the empty string when there"
" were no arguments."
msgstr ""
"Basklassen för alla inbyggda undantag.  Den är inte avsedd att ärvas direkt "
"av användardefinierade klasser (för det, använd :exc:`Exception`).  Om "
":func:`str` anropas på en instans av den här klassen returneras "
"representationen av argumentet/argumenten till instansen, eller den tomma "
"strängen om det inte fanns några argument."

#: ../../library/exceptions.rst:107
msgid ""
"The tuple of arguments given to the exception constructor.  Some built-in "
"exceptions (like :exc:`OSError`) expect a certain number of arguments and "
"assign a special meaning to the elements of this tuple, while others are "
"usually called only with a single string giving an error message."
msgstr ""
"Den tupel av argument som ges till undantagskonstruktören.  Vissa inbyggda "
"undantag (som :exc:`OSError`) förväntar sig ett visst antal argument och "
"tilldelar en speciell betydelse till elementen i denna tupel, medan andra "
"vanligtvis bara anropas med en enda sträng som ger ett felmeddelande."

#: ../../library/exceptions.rst:114
msgid ""
"This method sets *tb* as the new traceback for the exception and returns the"
" exception object.  It was more commonly used before the exception chaining "
"features of :pep:`3134` became available.  The following example shows how "
"we can convert an instance of ``SomeException`` into an instance of "
"``OtherException`` while preserving the traceback.  Once raised, the current"
" frame is pushed onto the traceback of the ``OtherException``, as would have"
" happened to the traceback of the original ``SomeException`` had we allowed "
"it to propagate to the caller. ::"
msgstr ""
"Den här metoden anger *tb* som ny traceback för undantaget och returnerar "
"undantagsobjektet.  Den användes oftare innan exception chaining-"
"funktionerna i :pep:`3134` blev tillgängliga.  Följande exempel visar hur vi"
" kan konvertera en instans av ``SomeException`` till en instans av "
"``OtherException`` samtidigt som vi bevarar spårningen.  När den väl har "
"uppstått, skjuts den aktuella ramen till spårningen av ``OtherException``, "
"vilket skulle ha hänt med spårningen av den ursprungliga ``SomeException`` "
"om vi hade tillåtit den att fortplanta sig till den som anropar. ::"

#: ../../library/exceptions.rst:132
msgid ""
"All built-in, non-system-exiting exceptions are derived from this class.  "
"All user-defined exceptions should also be derived from this class."
msgstr ""
"Alla inbyggda undantag som inte är systemundantag härrör från denna klass.  "
"Alla användardefinierade undantag bör också härledas från denna klass."

#: ../../library/exceptions.rst:138
msgid ""
"The base class for those built-in exceptions that are raised for various "
"arithmetic errors: :exc:`OverflowError`, :exc:`ZeroDivisionError`, "
":exc:`FloatingPointError`."
msgstr ""
"Basklass för de inbyggda undantag som uppstår vid olika aritmetiska fel: "
":exc:`OverflowError`, :exc:`ZeroDivisionError`, :exc:`FloatingPointError`."

#: ../../library/exceptions.rst:145
msgid ""
"Raised when a :ref:`buffer <bufferobjects>` related operation cannot be "
"performed."
msgstr ""
"Uppstår när en :ref:`buffer <bufferobjects>`\\-relaterad åtgärd inte kan "
"utföras."

#: ../../library/exceptions.rst:151
msgid ""
"The base class for the exceptions that are raised when a key or index used "
"on a mapping or sequence is invalid: :exc:`IndexError`, :exc:`KeyError`.  "
"This can be raised directly by :func:`codecs.lookup`."
msgstr ""
"Basklassen för de undantag som uppstår när en nyckel eller ett index som "
"används i en mappning eller sekvens är ogiltigt: :exc:`IndexError`, "
":exc:`KeyError`.  Detta kan tas upp direkt av :func:`codecs.lookup`."

#: ../../library/exceptions.rst:157
msgid "Concrete exceptions"
msgstr "Betongundantag"

#: ../../library/exceptions.rst:159
msgid "The following exceptions are the exceptions that are usually raised."
msgstr "Följande undantag är de undantag som vanligtvis tas upp."

#: ../../library/exceptions.rst:165
msgid "Raised when an :keyword:`assert` statement fails."
msgstr "Uppstår när en :keyword:`assert`\\-sats misslyckas."

#: ../../library/exceptions.rst:170
msgid ""
"Raised when an attribute reference (see :ref:`attribute-references`) or "
"assignment fails.  (When an object does not support attribute references or "
"attribute assignments at all, :exc:`TypeError` is raised.)"
msgstr ""
"Utlöses när en attributreferens (se :ref:`attribute-references`) eller "
"attributtilldelning misslyckas.  (När ett objekt inte stöder "
"attributreferenser eller attributtilldelningar alls, genereras "
":exc:`TypeError`)"

#: ../../library/exceptions.rst:174
msgid ""
"The :attr:`name` and :attr:`obj` attributes can be set using keyword-only "
"arguments to the constructor. When set they represent the name of the "
"attribute that was attempted to be accessed and the object that was accessed"
" for said attribute, respectively."
msgstr ""

#: ../../library/exceptions.rst:179
msgid "Added the :attr:`name` and :attr:`obj` attributes."
msgstr "Lagt till attributen :attr:`name` och :attr:`obj`."

#: ../../library/exceptions.rst:184
msgid ""
"Raised when the :func:`input` function hits an end-of-file condition (EOF) "
"without reading any data. (N.B.: the :meth:`io.IOBase.read` and "
":meth:`io.IOBase.readline` methods return an empty string when they hit "
"EOF.)"
msgstr ""

#: ../../library/exceptions.rst:191
msgid "Not currently used."
msgstr "Används inte för närvarande."

#: ../../library/exceptions.rst:196
msgid ""
"Raised when a :term:`generator` or :term:`coroutine` is closed; see "
":meth:`generator.close` and :meth:`coroutine.close`.  It directly inherits "
"from :exc:`BaseException` instead of :exc:`Exception` since it is "
"technically not an error."
msgstr ""
"Uppstår när en :term:`generator` eller :term:`coroutine` stängs; se "
":meth:`generator.close` och :meth:`coroutine.close`.  Den ärver direkt från "
":exc:`BaseException` istället för :exc:`Exception` eftersom det tekniskt "
"sett inte är ett fel."

#: ../../library/exceptions.rst:204
msgid ""
"Raised when the :keyword:`import` statement has troubles trying to load a "
"module.  Also raised when the \"from list\" in ``from ... import`` has a "
"name that cannot be found."
msgstr ""
"Utlöses när :keyword:`import`\\-satsen har problem med att ladda en modul.  "
"Uppstår också när \"from-listan\" i ``from ... import`` har ett namn som "
"inte kan hittas."

#: ../../library/exceptions.rst:208
msgid ""
"The :attr:`name` and :attr:`path` attributes can be set using keyword-only "
"arguments to the constructor. When set they represent the name of the module"
" that was attempted to be imported and the path to any file which triggered "
"the exception, respectively."
msgstr ""

#: ../../library/exceptions.rst:213
msgid "Added the :attr:`name` and :attr:`path` attributes."
msgstr "Lagt till attributen :attr:`name` och :attr:`path`."

#: ../../library/exceptions.rst:218
msgid ""
"A subclass of :exc:`ImportError` which is raised by :keyword:`import` when a"
" module could not be located.  It is also raised when ``None`` is found in "
":data:`sys.modules`."
msgstr ""
"En underklass till :exc:`ImportError` som skapas av :keyword:`import` när en"
" modul inte kunde hittas.  Det visas också när ``None`` hittas i "
":data:`sys.modules`."

#: ../../library/exceptions.rst:227
msgid ""
"Raised when a sequence subscript is out of range.  (Slice indices are "
"silently truncated to fall in the allowed range; if an index is not an "
"integer, :exc:`TypeError` is raised.)"
msgstr ""
"Uppstår när ett sekvenssubskript är utanför intervallet.  (Slice-index "
"trunkeras i tysthet för att hamna inom det tillåtna intervallet; om ett "
"index inte är ett heltal väcks :exc:`TypeError`)"

#: ../../library/exceptions.rst:236
msgid ""
"Raised when a mapping (dictionary) key is not found in the set of existing "
"keys."
msgstr ""
"Utlöses när en mappningsnyckel (ordbok) inte finns i uppsättningen av "
"befintliga nycklar."

#: ../../library/exceptions.rst:243
msgid ""
"Raised when the user hits the interrupt key (normally :kbd:`Control-C` or "
":kbd:`Delete`).  During execution, a check for interrupts is made regularly."
" The exception inherits from :exc:`BaseException` so as to not be "
"accidentally caught by code that catches :exc:`Exception` and thus prevent "
"the interpreter from exiting."
msgstr ""
"Uppstår när användaren trycker på avbrottstangenten (normalt "
":kbd:`Control-C` eller :kbd:`Delete`).  Under exekveringen görs regelbundet "
"en kontroll av avbrott. Undantaget ärver från :exc:`BaseException` så att "
"det inte av misstag fångas upp av kod som fångar upp :exc:`Exception` och "
"därmed hindrar tolken från att avsluta."

#: ../../library/exceptions.rst:251
msgid ""
"Catching a :exc:`KeyboardInterrupt` requires special consideration. Because "
"it can be raised at unpredictable points, it may, in some circumstances, "
"leave the running program in an inconsistent state. It is generally best to "
"allow :exc:`KeyboardInterrupt` to end the program as quickly as possible or "
"avoid raising it entirely. (See :ref:`handlers-and-exceptions`.)"
msgstr ""
"Att fånga ett :exc:`KeyboardInterrupt` kräver särskild hänsyn. Eftersom den "
"kan utlösas vid oförutsägbara tidpunkter kan den under vissa omständigheter "
"lämna det pågående programmet i ett inkonsekvent tillstånd. Det är i "
"allmänhet bäst att låta :exc:`KeyboardInterrupt` avsluta programmet så "
"snabbt som möjligt eller helt undvika att utlösa det. (Se :ref:`handlers-"
"and-exceptions`.)"

#: ../../library/exceptions.rst:261
msgid ""
"Raised when an operation runs out of memory but the situation may still be "
"rescued (by deleting some objects).  The associated value is a string "
"indicating what kind of (internal) operation ran out of memory. Note that "
"because of the underlying memory management architecture (C's "
":c:func:`malloc` function), the interpreter may not always be able to "
"completely recover from this situation; it nevertheless raises an exception "
"so that a stack traceback can be printed, in case a run-away program was the"
" cause."
msgstr ""
"Utlöses när en operation får slut på minne men situationen fortfarande kan "
"räddas (genom att radera vissa objekt).  Det associerade värdet är en sträng"
" som anger vilken typ av (intern) operation som fick slut på minne. "
"Observera att på grund av den underliggande minneshanteringsarkitekturen "
"(C:s :c:func:`malloc`\\-funktion) kan tolken kanske inte alltid helt "
"återhämta sig från denna situation; den väcker ändå ett undantag så att en "
"stackspårning kan skrivas ut, ifall ett skenande program var orsaken."

#: ../../library/exceptions.rst:272
msgid ""
"Raised when a local or global name is not found.  This applies only to "
"unqualified names.  The associated value is an error message that includes "
"the name that could not be found."
msgstr ""
"Utlöses när ett lokalt eller globalt namn inte hittas.  Detta gäller endast "
"okvalificerade namn.  Det associerade värdet är ett felmeddelande som "
"innehåller det namn som inte kunde hittas."

#: ../../library/exceptions.rst:276
msgid ""
"The :attr:`name` attribute can be set using a keyword-only argument to the "
"constructor. When set it represent the name of the variable that was "
"attempted to be accessed."
msgstr ""

#: ../../library/exceptions.rst:280
msgid "Added the :attr:`name` attribute."
msgstr "Lagt till attributet :attr:`name`."

#: ../../library/exceptions.rst:286
msgid ""
"This exception is derived from :exc:`RuntimeError`.  In user defined base "
"classes, abstract methods should raise this exception when they require "
"derived classes to override the method, or while the class is being "
"developed to indicate that the real implementation still needs to be added."
msgstr ""
"Detta undantag härrör från :exc:`RuntimeError`.  I användardefinierade "
"basklasser bör abstrakta metoder ge upphov till detta undantag när de kräver"
" att härledda klasser åsidosätter metoden, eller medan klassen utvecklas för"
" att indikera att den verkliga implementationen fortfarande behöver läggas "
"till."

#: ../../library/exceptions.rst:293
msgid ""
"It should not be used to indicate that an operator or method is not meant to"
" be supported at all -- in that case either leave the operator / method "
"undefined or, if a subclass, set it to :data:`None`."
msgstr ""
"Det ska inte användas för att ange att en operator eller metod inte ska "
"stödjas alls - i så fall ska operatorn/metoden antingen lämnas odefinierad "
"eller, om det är en subklass, anges till :data:`None`."

#: ../../library/exceptions.rst:299
msgid ""
"``NotImplementedError`` and ``NotImplemented`` are not interchangeable, even"
" though they have similar names and purposes.  See :data:`NotImplemented` "
"for details on when to use it."
msgstr ""

#: ../../library/exceptions.rst:308
msgid ""
"This exception is raised when a system function returns a system-related "
"error, including I/O failures such as \"file not found\" or \"disk full\" "
"(not for illegal argument types or other incidental errors)."
msgstr ""
"Detta undantag uppstår när en systemfunktion returnerar ett systemrelaterat "
"fel, inklusive I/O-fel som \"file not found\" eller \"disk full\" (inte för "
"olagliga argumenttyper eller andra tillfälliga fel)."

#: ../../library/exceptions.rst:312
msgid ""
"The second form of the constructor sets the corresponding attributes, "
"described below.  The attributes default to :const:`None` if not specified."
"  For backwards compatibility, if three arguments are passed, the "
":attr:`~BaseException.args` attribute contains only a 2-tuple of the first "
"two constructor arguments."
msgstr ""
"Den andra formen av konstruktorn ställer in motsvarande attribut, som "
"beskrivs nedan.  Attributen har som standard :const:`None` om de inte "
"specificeras.  För bakåtkompatibilitet, om tre argument skickas, innehåller "
"attributet :attr:`~BaseException.args` endast en 2-tupel av de två första "
"konstruktörsargumenten."

#: ../../library/exceptions.rst:318
msgid ""
"The constructor often actually returns a subclass of :exc:`OSError`, as "
"described in `OS exceptions`_ below.  The particular subclass depends on the"
" final :attr:`.errno` value.  This behaviour only occurs when constructing "
":exc:`OSError` directly or via an alias, and is not inherited when "
"subclassing."
msgstr ""
"Konstruktorn returnerar ofta faktiskt en underklass av :exc:`OSError`, som "
"beskrivs i `OS-undantag`_ nedan.  Den specifika underklassen beror på det "
"slutliga :attr:`.errno`\\-värdet.  Detta beteende uppstår endast när man "
"konstruerar :exc:`OSError` direkt eller via ett alias, och ärvs inte vid "
"subklassning."

#: ../../library/exceptions.rst:326
msgid "A numeric error code from the C variable :c:data:`errno`."
msgstr "En numerisk felkod från C-variabeln :c:data:`errno`."

#: ../../library/exceptions.rst:330
msgid ""
"Under Windows, this gives you the native Windows error code.  The "
":attr:`.errno` attribute is then an approximate translation, in POSIX terms,"
" of that native error code."
msgstr ""
"Under Windows ger detta dig den ursprungliga Windows-felkoden.  Attributet "
":attr:`.errno` är då en ungefärlig översättning, i POSIX-termer, av den "
"ursprungliga felkoden."

#: ../../library/exceptions.rst:334
msgid ""
"Under Windows, if the *winerror* constructor argument is an integer, the "
":attr:`.errno` attribute is determined from the Windows error code, and the "
"*errno* argument is ignored.  On other platforms, the *winerror* argument is"
" ignored, and the :attr:`winerror` attribute does not exist."
msgstr ""
"Under Windows, om konstruktörsargumentet *winerror* är ett heltal, bestäms "
"attributet :attr:`.errno` från Windows felkod och argumentet *errno* "
"ignoreras.  På andra plattformar ignoreras *winerror*-argumentet och "
"attributet :attr:`winerror` existerar inte."

#: ../../library/exceptions.rst:342
msgid ""
"The corresponding error message, as provided by the operating system.  It is"
" formatted by the C functions :c:func:`perror` under POSIX, and "
":c:func:`FormatMessage` under Windows."
msgstr ""

#: ../../library/exceptions.rst:350
msgid ""
"For exceptions that involve a file system path (such as :func:`open` or "
":func:`os.unlink`), :attr:`filename` is the file name passed to the "
"function. For functions that involve two file system paths (such as "
":func:`os.rename`), :attr:`filename2` corresponds to the second file name "
"passed to the function."
msgstr ""
"För undantag som involverar en filsystemssökväg (t.ex. :func:`open` eller "
":func:`os.unlink`) är :attr:`filename` det filnamn som skickas till "
"funktionen. För funktioner som involverar två filsystemssökvägar (t.ex. "
":func:`os.rename`) motsvarar :attr:`filename2` det andra filnamnet som "
"skickas till funktionen."

#: ../../library/exceptions.rst:357
msgid ""
":exc:`EnvironmentError`, :exc:`IOError`, :exc:`WindowsError`, "
":exc:`socket.error`, :exc:`select.error` and :exc:`mmap.error` have been "
"merged into :exc:`OSError`, and the constructor may return a subclass."
msgstr ""

#: ../../library/exceptions.rst:363
msgid ""
"The :attr:`filename` attribute is now the original file name passed to the "
"function, instead of the name encoded to or decoded from the "
":term:`filesystem encoding and error handler`. Also, the *filename2* "
"constructor argument and attribute was added."
msgstr ""
"Attributet :attr:`filename` är nu det ursprungliga filnamnet som skickas "
"till funktionen, istället för det namn som kodats till eller avkodats från "
":term:`filesystem encoding and error handler`. Dessutom har "
"konstruktörsargumentet och attributet *filename2* lagts till."

#: ../../library/exceptions.rst:372
msgid ""
"Raised when the result of an arithmetic operation is too large to be "
"represented.  This cannot occur for integers (which would rather raise "
":exc:`MemoryError` than give up).  However, for historical reasons, "
"OverflowError is sometimes raised for integers that are outside a required "
"range.   Because of the lack of standardization of floating point exception "
"handling in C, most floating point operations are not checked."
msgstr ""

#: ../../library/exceptions.rst:382
msgid ""
"This exception is derived from :exc:`RuntimeError`.  It is raised when the "
"interpreter detects that the maximum recursion depth (see "
":func:`sys.getrecursionlimit`) is exceeded."
msgstr ""
"Detta undantag härstammar från :exc:`RuntimeError`.  Det uppstår när tolken "
"upptäcker att det maximala rekursionsdjupet (se "
":func:`sys.getrecursionlimit`) har överskridits."

#: ../../library/exceptions.rst:386
msgid "Previously, a plain :exc:`RuntimeError` was raised."
msgstr "Tidigare gavs ett vanligt :exc:`RuntimeError`."

#: ../../library/exceptions.rst:392
msgid ""
"This exception is raised when a weak reference proxy, created by the "
":func:`weakref.proxy` function, is used to access an attribute of the "
"referent after it has been garbage collected. For more information on weak "
"references, see the :mod:`weakref` module."
msgstr ""
"Detta undantag uppstår när en proxy för svaga referenser, skapad av "
"funktionen :func:`weakref.proxy`, används för att komma åt ett attribut hos "
"referenten efter att den har samlats in. För mer information om svaga "
"referenser, se modulen :mod:`weakref`."

#: ../../library/exceptions.rst:400
msgid ""
"Raised when an error is detected that doesn't fall in any of the other "
"categories.  The associated value is a string indicating what precisely went"
" wrong."
msgstr ""
"Utlöses när ett fel upptäcks som inte faller inom någon av de andra "
"kategorierna.  Det associerade värdet är en sträng som anger exakt vad som "
"gick fel."

#: ../../library/exceptions.rst:407
msgid ""
"Raised by built-in function :func:`next` and an :term:`iterator`\\'s "
":meth:`~iterator.__next__` method to signal that there are no further items "
"produced by the iterator."
msgstr ""
"Utlöses av den inbyggda funktionen :func:`next` och en :term:`iterator`:s "
":meth:`~iterator.__next__`\\-metod för att signalera att det inte finns "
"några fler objekt som produceras av iteratorn."

#: ../../library/exceptions.rst:411
msgid ""
"The exception object has a single attribute :attr:`value`, which is given as"
" an argument when constructing the exception, and defaults to :const:`None`."
msgstr ""

#: ../../library/exceptions.rst:415
msgid ""
"When a :term:`generator` or :term:`coroutine` function returns, a new "
":exc:`StopIteration` instance is raised, and the value returned by the "
"function is used as the :attr:`value` parameter to the constructor of the "
"exception."
msgstr ""
"När en :term:`generator` eller :term:`coroutine`\\-funktion returneras, "
"skapas en ny :exc:`StopIteration`\\-instans och det värde som returneras av "
"funktionen används som :attr:`value`\\-parameter i konstruktören för "
"undantaget."

#: ../../library/exceptions.rst:420
msgid ""
"If a generator code directly or indirectly raises :exc:`StopIteration`, it "
"is converted into a :exc:`RuntimeError` (retaining the :exc:`StopIteration` "
"as the new exception's cause)."
msgstr ""
"Om en generatorkod direkt eller indirekt ger upphov till "
":exc:`StopIteration`, konverteras den till en :exc:`RuntimeError` (med "
":exc:`StopIteration` som orsak till det nya undantaget)."

#: ../../library/exceptions.rst:424
msgid ""
"Added ``value`` attribute and the ability for generator functions to use it "
"to return a value."
msgstr ""
"Lagt till attributet ``value`` och möjligheten för generatorfunktioner att "
"använda det för att returnera ett värde."

#: ../../library/exceptions.rst:428
msgid ""
"Introduced the RuntimeError transformation via ``from __future__ import "
"generator_stop``, see :pep:`479`."
msgstr ""
"Införde transformationen RuntimeError via ``from __future__ import "
"generator_stop``, se :pep:`479`."

#: ../../library/exceptions.rst:432
msgid ""
"Enable :pep:`479` for all code by default: a :exc:`StopIteration` error "
"raised in a generator is transformed into a :exc:`RuntimeError`."
msgstr ""
"Aktivera :pep:`479` för all kod som standard: ett :exc:`StopIteration`\\-fel"
" som uppstår i en generator omvandlas till ett :exc:`RuntimeError`."

#: ../../library/exceptions.rst:438
msgid ""
"Must be raised by :meth:`__anext__` method of an :term:`asynchronous "
"iterator` object to stop the iteration."
msgstr ""

#: ../../library/exceptions.rst:445
msgid ""
"Raised when the parser encounters a syntax error.  This may occur in an "
":keyword:`import` statement, in a call to the built-in functions "
":func:`compile`, :func:`exec`, or :func:`eval`, or when reading the initial "
"script or standard input (also interactively)."
msgstr ""
"Utlöses när parsern stöter på ett syntaxfel.  Detta kan inträffa i en "
":keyword:`import`\\-sats, i ett anrop till de inbyggda funktionerna "
":func:`compile`, :func:`exec` eller :func:`eval`, eller vid läsning av det "
"inledande skriptet eller standardinmatningen (även interaktivt)."

#: ../../library/exceptions.rst:451
msgid ""
"The :func:`str` of the exception instance returns only the error message. "
"Details is a tuple whose members are also available as separate attributes."
msgstr ""
"Undantagsinstansens :func:`str` returnerar endast felmeddelandet. Details är"
" en tupel vars medlemmar också är tillgängliga som separata attribut."

#: ../../library/exceptions.rst:456
msgid "The name of the file the syntax error occurred in."
msgstr "Namnet på den fil där syntaxfelet inträffade."

#: ../../library/exceptions.rst:460
msgid ""
"Which line number in the file the error occurred in. This is 1-indexed: the "
"first line in the file has a ``lineno`` of 1."
msgstr ""
"Vilket radnummer i filen som felet uppstod i. Detta är 1-indexerat: den "
"första raden i filen har en ``lineno`` på 1."

#: ../../library/exceptions.rst:465
msgid ""
"The column in the line where the error occurred. This is 1-indexed: the "
"first character in the line has an ``offset`` of 1."
msgstr ""
"Kolumnen i raden där felet inträffade. Detta är 1-indexerat: det första "
"tecknet på raden har en ``offset`` på 1."

#: ../../library/exceptions.rst:470
msgid "The source code text involved in the error."
msgstr "Den källkodstext som är inblandad i felet."

#: ../../library/exceptions.rst:474
msgid ""
"Which line number in the file the error occurred ends in. This is 1-indexed:"
" the first line in the file has a ``lineno`` of 1."
msgstr ""
"Vilket radnummer i filen som felet inträffade slutar på. Detta är "
"1-indexerat: den första raden i filen har en ``lineno`` på 1."

#: ../../library/exceptions.rst:479
msgid ""
"The column in the end line where the error occurred finishes. This is "
"1-indexed: the first character in the line has an ``offset`` of 1."
msgstr ""
"Kolumnen i slutraden där felet uppstod avslutas. Detta är 1-indexerat: det "
"första tecknet på raden har en ``offset`` på 1."

#: ../../library/exceptions.rst:482
msgid ""
"For errors in f-string fields, the message is prefixed by \"f-string: \" and"
" the offsets are offsets in a text constructed from the replacement "
"expression.  For example, compiling f'Bad {a b} field' results in this args "
"attribute: ('f-string: ...', ('', 1, 2, '(a b)\\n', 1, 5))."
msgstr ""
"För fel i fält med f-strängar inleds meddelandet med \"f-sträng: \" och "
"offseten är offseten i en text som konstruerats utifrån "
"ersättningsuttrycket.  Exempelvis resulterar kompilering av f'Bad {a b} "
"field' i detta args-attribut: ('f-string: ...', ('', 1, 2, '(a b)\\n', 1, "
"5))."

#: ../../library/exceptions.rst:487
msgid "Added the :attr:`end_lineno` and :attr:`end_offset` attributes."
msgstr "Lagt till attributen :attr:`end_lineno` och :attr:`end_offset`."

#: ../../library/exceptions.rst:492
msgid ""
"Base class for syntax errors related to incorrect indentation.  This is a "
"subclass of :exc:`SyntaxError`."
msgstr ""
"Basklass för syntaxfel relaterade till felaktig indragning.  Detta är en "
"underklass till :exc:`SyntaxError`."

#: ../../library/exceptions.rst:498
msgid ""
"Raised when indentation contains an inconsistent use of tabs and spaces. "
"This is a subclass of :exc:`IndentationError`."
msgstr ""
"Utlöses när indentation innehåller en inkonsekvent användning av tabbar och "
"mellanslag. Detta är en underklass till :exc:`IndentationError`."

#: ../../library/exceptions.rst:504
msgid ""
"Raised when the interpreter finds an internal error, but the situation does "
"not look so serious to cause it to abandon all hope. The associated value is"
" a string indicating what went wrong (in low-level terms)."
msgstr ""

#: ../../library/exceptions.rst:508
msgid ""
"You should report this to the author or maintainer of your Python "
"interpreter. Be sure to report the version of the Python interpreter "
"(``sys.version``; it is also printed at the start of an interactive Python "
"session), the exact error message (the exception's associated value) and if "
"possible the source of the program that triggered the error."
msgstr ""

#: ../../library/exceptions.rst:517
msgid ""
"This exception is raised by the :func:`sys.exit` function.  It inherits from"
" :exc:`BaseException` instead of :exc:`Exception` so that it is not "
"accidentally caught by code that catches :exc:`Exception`.  This allows the "
"exception to properly propagate up and cause the interpreter to exit.  When "
"it is not handled, the Python interpreter exits; no stack traceback is "
"printed.  The constructor accepts the same optional argument passed to "
":func:`sys.exit`. If the value is an integer, it specifies the system exit "
"status (passed to C's :c:func:`exit` function); if it is ``None``, the exit "
"status is zero; if it has another type (such as a string), the object's "
"value is printed and the exit status is one."
msgstr ""

#: ../../library/exceptions.rst:528
msgid ""
"A call to :func:`sys.exit` is translated into an exception so that clean-up "
"handlers (:keyword:`finally` clauses of :keyword:`try` statements) can be "
"executed, and so that a debugger can execute a script without running the "
"risk of losing control.  The :func:`os._exit` function can be used if it is "
"absolutely positively necessary to exit immediately (for example, in the "
"child process after a call to :func:`os.fork`)."
msgstr ""
"Ett anrop till :func:`sys.exit` översätts till ett undantag så att "
"rensningshanterare (:keyword:`finally`\\-klausuler i "
":keyword:`try`\\-satser) kan köras och så att en debugger kan köra ett "
"skript utan att riskera att förlora kontrollen.  Funktionen :func:`os._exit`"
" kan användas om det är absolut nödvändigt att avsluta omedelbart (t.ex. i "
"barnprocessen efter ett anrop till :func:`os.fork`)."

#: ../../library/exceptions.rst:537
msgid ""
"The exit status or error message that is passed to the constructor. "
"(Defaults to ``None``.)"
msgstr ""
"Utgångsstatus eller felmeddelande som skickas till konstruktören. "
"(Standardvärdet är ``None``.)"

#: ../../library/exceptions.rst:543
msgid ""
"Raised when an operation or function is applied to an object of "
"inappropriate type.  The associated value is a string giving details about "
"the type mismatch."
msgstr ""
"Utlöses när en operation eller funktion tillämpas på ett objekt av olämplig "
"typ.  Det associerade värdet är en sträng som ger information om felaktig "
"typmatchning."

#: ../../library/exceptions.rst:546
msgid ""
"This exception may be raised by user code to indicate that an attempted "
"operation on an object is not supported, and is not meant to be. If an "
"object is meant to support a given operation but has not yet provided an "
"implementation, :exc:`NotImplementedError` is the proper exception to raise."
msgstr ""
"Detta undantag kan skapas av användarkod för att indikera att ett försök att"
" utföra en operation på ett objekt inte stöds och inte heller är avsett att "
"stödjas. Om ett objekt är avsett att stödja en viss operation men ännu inte "
"har tillhandahållit en implementering, är :exc:`NotImplementedError` det "
"korrekta undantaget."

#: ../../library/exceptions.rst:551
msgid ""
"Passing arguments of the wrong type (e.g. passing a :class:`list` when an "
":class:`int` is expected) should result in a :exc:`TypeError`, but passing "
"arguments with the wrong value (e.g. a number outside expected boundaries) "
"should result in a :exc:`ValueError`."
msgstr ""
"Att skicka argument av fel typ (t.ex. att skicka en :class:`list` när en "
":class:`int` förväntas) bör resultera i ett :exc:`TypeError`, men att skicka"
" argument med fel värde (t.ex. ett tal utanför förväntade gränser) bör "
"resultera i ett :exc:`ValueError`."

#: ../../library/exceptions.rst:558
msgid ""
"Raised when a reference is made to a local variable in a function or method,"
" but no value has been bound to that variable.  This is a subclass of "
":exc:`NameError`."
msgstr ""
"Utlöses när en referens görs till en lokal variabel i en funktion eller "
"metod, men inget värde har bundits till variabeln.  Detta är en underklass "
"till :exc:`NameError`."

#: ../../library/exceptions.rst:565
msgid ""
"Raised when a Unicode-related encoding or decoding error occurs.  It is a "
"subclass of :exc:`ValueError`."
msgstr ""
"Utlöses när ett Unicode-relaterat kodnings- eller avkodningsfel inträffar.  "
"Det är en underklass till :exc:`ValueError`."

#: ../../library/exceptions.rst:568
msgid ""
":exc:`UnicodeError` has attributes that describe the encoding or decoding "
"error.  For example, ``err.object[err.start:err.end]`` gives the particular "
"invalid input that the codec failed on."
msgstr ""
":exc:`UnicodeError` har attribut som beskriver kodnings- eller "
"avkodningsfelet.  Till exempel ger ``err.object[err.start:err.end]`` den "
"specifika ogiltiga indata som codec misslyckades med."

#: ../../library/exceptions.rst:574
msgid "The name of the encoding that raised the error."
msgstr "Namnet på den kodning som orsakade felet."

#: ../../library/exceptions.rst:578
msgid "A string describing the specific codec error."
msgstr "En sträng som beskriver det specifika codec-felet."

#: ../../library/exceptions.rst:582
msgid "The object the codec was attempting to encode or decode."
msgstr "Det objekt som codec försökte koda eller avkoda."

#: ../../library/exceptions.rst:586
msgid "The first index of invalid data in :attr:`object`."
msgstr "Det första indexet för ogiltiga data i :attr:`object`."

#: ../../library/exceptions.rst:590
msgid "The index after the last invalid data in :attr:`object`."
msgstr "Indexet efter den sista ogiltiga uppgiften i :attr:`object`."

#: ../../library/exceptions.rst:595
msgid ""
"Raised when a Unicode-related error occurs during encoding.  It is a "
"subclass of :exc:`UnicodeError`."
msgstr ""
"Uppstår när ett Unicode-relaterat fel inträffar under kodningen.  Det är en "
"underklass till :exc:`UnicodeError`."

#: ../../library/exceptions.rst:601
msgid ""
"Raised when a Unicode-related error occurs during decoding.  It is a "
"subclass of :exc:`UnicodeError`."
msgstr ""
"Uppstår när ett Unicode-relaterat fel inträffar under avkodningen.  Det är "
"en underklass till :exc:`UnicodeError`."

#: ../../library/exceptions.rst:607
msgid ""
"Raised when a Unicode-related error occurs during translating.  It is a "
"subclass of :exc:`UnicodeError`."
msgstr ""
"Uppstår när ett Unicode-relaterat fel inträffar under översättningen.  Det "
"är en underklass till :exc:`UnicodeError`."

#: ../../library/exceptions.rst:613
msgid ""
"Raised when an operation or function receives an argument that has the right"
" type but an inappropriate value, and the situation is not described by a "
"more precise exception such as :exc:`IndexError`."
msgstr ""
"Utlöses när en operation eller funktion får ett argument som har rätt typ "
"men ett olämpligt värde, och situationen inte beskrivs av ett mer precist "
"undantag som :exc:`IndexError`."

#: ../../library/exceptions.rst:620
msgid ""
"Raised when the second argument of a division or modulo operation is zero.  "
"The associated value is a string indicating the type of the operands and the"
" operation."
msgstr ""
"Uppstår när det andra argumentet i en divisions- eller modulooperation är "
"noll.  Det associerade värdet är en sträng som anger typen av operander och "
"operation."

#: ../../library/exceptions.rst:625
msgid ""
"The following exceptions are kept for compatibility with previous versions; "
"starting from Python 3.3, they are aliases of :exc:`OSError`."
msgstr ""
"Följande undantag finns kvar för kompatibilitet med tidigare versioner; från"
" och med Python 3.3 är de alias för :exc:`OSError`."

#: ../../library/exceptions.rst:634
msgid "Only available on Windows."
msgstr "Endast tillgängligt på Windows."

#: ../../library/exceptions.rst:638
msgid "OS exceptions"
msgstr "OS-undantag"

#: ../../library/exceptions.rst:640
msgid ""
"The following exceptions are subclasses of :exc:`OSError`, they get raised "
"depending on the system error code."
msgstr ""
"Följande undantag är underklasser till :exc:`OSError`, de aktiveras beroende"
" på systemets felkod."

#: ../../library/exceptions.rst:645
msgid ""
"Raised when an operation would block on an object (e.g. socket) set for non-"
"blocking operation. Corresponds to :c:data:`errno` :py:data:`~errno.EAGAIN`,"
" :py:data:`~errno.EALREADY`, :py:data:`~errno.EWOULDBLOCK` and "
":py:data:`~errno.EINPROGRESS`."
msgstr ""

#: ../../library/exceptions.rst:650
msgid ""
"In addition to those of :exc:`OSError`, :exc:`BlockingIOError` can have one "
"more attribute:"
msgstr ""
"Utöver de attribut som finns för :exc:`OSError` kan :exc:`BlockingIOError` "
"ha ytterligare ett attribut:"

#: ../../library/exceptions.rst:655
msgid ""
"An integer containing the number of characters written to the stream before "
"it blocked.  This attribute is available when using the buffered I/O classes"
" from the :mod:`io` module."
msgstr ""
"Ett heltal som innehåller antalet tecken som skrevs till strömmen innan den "
"blockerades.  Detta attribut är tillgängligt när du använder de buffrade "
"I/O-klasserna från modulen :mod:`io`."

#: ../../library/exceptions.rst:661
msgid ""
"Raised when an operation on a child process failed. Corresponds to "
":c:data:`errno` :py:data:`~errno.ECHILD`."
msgstr ""

#: ../../library/exceptions.rst:666
msgid "A base class for connection-related issues."
msgstr "En basklass för anslutningsrelaterade frågor."

#: ../../library/exceptions.rst:668
msgid ""
"Subclasses are :exc:`BrokenPipeError`, :exc:`ConnectionAbortedError`, "
":exc:`ConnectionRefusedError` and :exc:`ConnectionResetError`."
msgstr ""
"Underklasser är :exc:`BrokenPipeError`, :exc:`ConnectionAbortedError`, "
":exc:`ConnectionRefusedError` och :exc:`ConnectionResetError`."

#: ../../library/exceptions.rst:673
msgid ""
"A subclass of :exc:`ConnectionError`, raised when trying to write on a pipe "
"while the other end has been closed, or trying to write on a socket which "
"has been shutdown for writing. Corresponds to :c:data:`errno` "
":py:data:`~errno.EPIPE` and :py:data:`~errno.ESHUTDOWN`."
msgstr ""

#: ../../library/exceptions.rst:680
msgid ""
"A subclass of :exc:`ConnectionError`, raised when a connection attempt is "
"aborted by the peer. Corresponds to :c:data:`errno` "
":py:data:`~errno.ECONNABORTED`."
msgstr ""

#: ../../library/exceptions.rst:686
msgid ""
"A subclass of :exc:`ConnectionError`, raised when a connection attempt is "
"refused by the peer. Corresponds to :c:data:`errno` "
":py:data:`~errno.ECONNREFUSED`."
msgstr ""

#: ../../library/exceptions.rst:692
msgid ""
"A subclass of :exc:`ConnectionError`, raised when a connection is reset by "
"the peer. Corresponds to :c:data:`errno` :py:data:`~errno.ECONNRESET`."
msgstr ""

#: ../../library/exceptions.rst:698
msgid ""
"Raised when trying to create a file or directory which already exists. "
"Corresponds to :c:data:`errno` :py:data:`~errno.EEXIST`."
msgstr ""

#: ../../library/exceptions.rst:703
msgid ""
"Raised when a file or directory is requested but doesn't exist. Corresponds "
"to :c:data:`errno` :py:data:`~errno.ENOENT`."
msgstr ""

#: ../../library/exceptions.rst:708
msgid ""
"Raised when a system call is interrupted by an incoming signal. Corresponds "
"to :c:data:`errno` :py:data:`~errno.EINTR`."
msgstr ""

#: ../../library/exceptions.rst:711
msgid ""
"Python now retries system calls when a syscall is interrupted by a signal, "
"except if the signal handler raises an exception (see :pep:`475` for the "
"rationale), instead of raising :exc:`InterruptedError`."
msgstr ""
"Python gör nu om systemanrop när ett syscall avbryts av en signal, utom om "
"signalhanteraren gör ett undantag (se :pep:`475` för motivering), istället "
"för att göra :exc:`InterruptedError`."

#: ../../library/exceptions.rst:718
msgid ""
"Raised when a file operation (such as :func:`os.remove`) is requested on a "
"directory. Corresponds to :c:data:`errno` :py:data:`~errno.EISDIR`."
msgstr ""

#: ../../library/exceptions.rst:724
msgid ""
"Raised when a directory operation (such as :func:`os.listdir`) is requested "
"on something which is not a directory.  On most POSIX platforms, it may also"
" be raised if an operation attempts to open or traverse a non-directory file"
" as if it were a directory. Corresponds to :c:data:`errno` "
":py:data:`~errno.ENOTDIR`."
msgstr ""

#: ../../library/exceptions.rst:732
msgid ""
"Raised when trying to run an operation without the adequate access rights - "
"for example filesystem permissions. Corresponds to :c:data:`errno` "
":py:data:`~errno.EACCES` and :py:data:`~errno.EPERM`."
msgstr ""

#: ../../library/exceptions.rst:738
msgid ""
"Raised when a given process doesn't exist. Corresponds to :c:data:`errno` "
":py:data:`~errno.ESRCH`."
msgstr ""

#: ../../library/exceptions.rst:743
msgid ""
"Raised when a system function timed out at the system level. Corresponds to "
":c:data:`errno` :py:data:`~errno.ETIMEDOUT`."
msgstr ""

#: ../../library/exceptions.rst:746
msgid "All the above :exc:`OSError` subclasses were added."
msgstr "Alla ovanstående :exc:`OSError`\\-subklasser lades till."

#: ../../library/exceptions.rst:752
msgid ":pep:`3151` - Reworking the OS and IO exception hierarchy"
msgstr ":pep:`3151` - Omarbetning av undantagshierarkin för OS och IO"

#: ../../library/exceptions.rst:758
msgid "Warnings"
msgstr "Varningar"

#: ../../library/exceptions.rst:760
msgid ""
"The following exceptions are used as warning categories; see the "
":ref:`warning-categories` documentation for more details."
msgstr ""
"Följande undantag används som varningskategorier; se :ref:`warning-"
"categories`\\-dokumentationen för mer information."

#: ../../library/exceptions.rst:765
msgid "Base class for warning categories."
msgstr "Basklass för varningskategorier."

#: ../../library/exceptions.rst:770
msgid "Base class for warnings generated by user code."
msgstr "Basklass för varningar som genereras av användarkod."

#: ../../library/exceptions.rst:775
msgid ""
"Base class for warnings about deprecated features when those warnings are "
"intended for other Python developers."
msgstr ""
"Basklass för varningar om föråldrade funktioner när dessa varningar är "
"avsedda för andra Python-utvecklare."

#: ../../library/exceptions.rst:778
msgid ""
"Ignored by the default warning filters, except in the ``__main__`` module "
"(:pep:`565`). Enabling the :ref:`Python Development Mode <devmode>` shows "
"this warning."
msgstr ""
"Ignoreras av standardvarningsfiltren, utom i modulen ``__main__`` "
"(:pep:`565`). Om du aktiverar :ref:`Python Development Mode <devmode>` visas"
" denna varning."

#: ../../library/exceptions.rst:782 ../../library/exceptions.rst:798
msgid "The deprecation policy is described in :pep:`387`."
msgstr "Policyn för utfasning beskrivs i :pep:`387`."

#: ../../library/exceptions.rst:787
msgid ""
"Base class for warnings about features which are obsolete and expected to be"
" deprecated in the future, but are not deprecated at the moment."
msgstr ""
"Basklass för varningar om funktioner som är föråldrade och förväntas bli "
"utdaterade i framtiden, men som inte är utdaterade för tillfället."

#: ../../library/exceptions.rst:791
msgid ""
"This class is rarely used as emitting a warning about a possible upcoming "
"deprecation is unusual, and :exc:`DeprecationWarning` is preferred for "
"already active deprecations."
msgstr ""
"Denna klass används sällan eftersom det är ovanligt att skicka ut en varning"
" om en eventuell kommande deprecation, och :exc:`DeprecationWarning` "
"föredras för redan aktiva deprecations."

#: ../../library/exceptions.rst:795 ../../library/exceptions.rst:821
#: ../../library/exceptions.rst:848
msgid ""
"Ignored by the default warning filters. Enabling the :ref:`Python "
"Development Mode <devmode>` shows this warning."
msgstr ""
"Ignoreras av standardvarningsfiltren. Om du aktiverar :ref:`Python "
"Development Mode <devmode>` visas den här varningen."

#: ../../library/exceptions.rst:803
msgid "Base class for warnings about dubious syntax."
msgstr "Basklass för varningar om tvivelaktig syntax."

#: ../../library/exceptions.rst:808
msgid "Base class for warnings about dubious runtime behavior."
msgstr "Basklass för varningar om tvivelaktigt beteende under körtid."

#: ../../library/exceptions.rst:813
msgid ""
"Base class for warnings about deprecated features when those warnings are "
"intended for end users of applications that are written in Python."
msgstr ""
"Basklass för varningar om föråldrade funktioner när dessa varningar är "
"avsedda för slutanvändare av program som är skrivna i Python."

#: ../../library/exceptions.rst:819
msgid "Base class for warnings about probable mistakes in module imports."
msgstr "Basklass för varningar om troliga misstag i modulimporten."

#: ../../library/exceptions.rst:827
msgid "Base class for warnings related to Unicode."
msgstr "Basklass för varningar relaterade till Unicode."

#: ../../library/exceptions.rst:832
msgid "Base class for warnings related to encodings."
msgstr "Basklass för varningar relaterade till kodning."

#: ../../library/exceptions.rst:834
msgid "See :ref:`io-encoding-warning` for details."
msgstr "Se :ref:`io-encoding-warning` för mer information."

#: ../../library/exceptions.rst:841
msgid ""
"Base class for warnings related to :class:`bytes` and :class:`bytearray`."
msgstr ""
"Basklass för varningar relaterade till :class:`bytes` och "
":class:`bytearray`."

#: ../../library/exceptions.rst:846
msgid "Base class for warnings related to resource usage."
msgstr "Basklass för varningar relaterade till resursanvändning."

#: ../../library/exceptions.rst:856
msgid "Exception hierarchy"
msgstr "Undantagshierarki"

#: ../../library/exceptions.rst:858
msgid "The class hierarchy for built-in exceptions is:"
msgstr "Klasshierarkin för inbyggda undantag är:"
