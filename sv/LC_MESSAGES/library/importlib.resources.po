# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# python-doc bot, 2025
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.11\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-10-15 16:36+0000\n"
"PO-Revision-Date: 2025-09-22 16:50+0000\n"
"Last-Translator: python-doc bot, 2025\n"
"Language-Team: Swedish (https://app.transifex.com/python-doc/teams/5390/"
"sv/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: sv\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"

#: ../../library/importlib.resources.rst:2
msgid ""
":mod:`importlib.resources` -- Package resource reading, opening and access"
msgstr ""

#: ../../library/importlib.resources.rst:7
msgid "**Source code:** :source:`Lib/importlib/resources/__init__.py`"
msgstr "**Källkod:** :source:`Lib/importlib/resources/__init__.py`"

#: ../../library/importlib.resources.rst:13
msgid ""
"This module leverages Python's import system to provide access to "
"*resources* within *packages*.  If you can import a package, you can access "
"resources within that package.  Resources can be opened or read, in either "
"binary or text mode."
msgstr ""

#: ../../library/importlib.resources.rst:18
msgid ""
"Resources are roughly akin to files inside directories, though it's "
"important to keep in mind that this is just a metaphor.  Resources and "
"packages **do not** have to exist as physical files and directories on the "
"file system: for example, a package and its resources can be imported from a "
"zip file using :py:mod:`zipimport`."
msgstr ""
"Resurser är ungefär som filer i kataloger, men det är viktigt att komma ihåg "
"att detta bara är en metafor.  Resurser och paket **behöver** inte existera "
"som fysiska filer och kataloger i filsystemet: ett paket och dess resurser "
"kan till exempel importeras från en zip-fil med :py:mod:`zipimport`."

#: ../../library/importlib.resources.rst:26
msgid ""
"This module provides functionality similar to `pkg_resources <https://"
"setuptools.readthedocs.io/en/latest/pkg_resources.html>`_ `Basic Resource "
"Access <https://setuptools.readthedocs.io/en/latest/pkg_resources.html#basic-"
"resource-access>`_ without the performance overhead of that package.  This "
"makes reading resources included in packages easier, with more stable and "
"consistent semantics."
msgstr ""
"Den här modulen tillhandahåller funktionalitet som liknar `pkg_resources "
"<https://setuptools.readthedocs.io/en/latest/pkg_resources.html>`_ `Basic "
"Resource Access <https://setuptools.readthedocs.io/en/latest/pkg_resources."
"html#basic-resource-access>`_ utan prestandakostnaderna för det paketet.  "
"Detta gör det enklare att läsa resurser som ingår i paket, med en stabilare "
"och mer konsekvent semantik."

#: ../../library/importlib.resources.rst:34
msgid ""
"The standalone backport of this module provides more information on `using "
"importlib.resources <https://importlib-resources.readthedocs.io/en/latest/"
"using.html>`_ and `migrating from pkg_resources to importlib.resources "
"<https://importlib-resources.readthedocs.io/en/latest/migration.html>`_."
msgstr ""
"I den fristående bakrapporten för den här modulen finns mer information om "
"`använda importlib.resources <https://importlib-resources.readthedocs.io/en/"
"latest/using.html>`_ och `flytta från pkg_resources till importlib.resources "
"<https://importlib-resources.readthedocs.io/en/latest/migration.html>`_."

#: ../../library/importlib.resources.rst:40
msgid ""
":class:`Loaders <importlib.abc.Loader>` that wish to support resource "
"reading should implement a ``get_resource_reader(fullname)`` method as "
"specified by :class:`importlib.resources.abc.ResourceReader`."
msgstr ""
":class:`Loaders <importlib.abc.Loader>` som vill stödja resursläsning bör "
"implementera en ``get_resource_reader(fullname)``\\-metod som specificeras "
"av :class:`importlib.resources.abc.ResourceReader`."

#: ../../library/importlib.resources.rst:46
msgid ""
"Whenever a function accepts a ``Package`` argument, you can pass in either "
"a :class:`module object <types.ModuleType>` or a module name as a string.  "
"You can only pass module objects whose ``__spec__."
"submodule_search_locations`` is not ``None``."
msgstr ""

#: ../../library/importlib.resources.rst:51
msgid "The ``Package`` type is defined as ``Union[str, ModuleType]``."
msgstr ""

#: ../../library/importlib.resources.rst:55
msgid ""
"Returns a :class:`~importlib.resources.abc.Traversable` object representing "
"the resource container for the package (think directory) and its resources "
"(think files). A Traversable may contain other containers (think "
"subdirectories)."
msgstr ""

#: ../../library/importlib.resources.rst:60
msgid ""
"*package* is either a name or a module object which conforms to the :class:"
"`Package` requirements."
msgstr ""

#: ../../library/importlib.resources.rst:67
msgid ""
"Given a :class:`~importlib.resources.abc.Traversable` object representing a "
"file, typically from :func:`importlib.resources.files`, return a context "
"manager for use in a :keyword:`with` statement. The context manager provides "
"a :class:`pathlib.Path` object."
msgstr ""

#: ../../library/importlib.resources.rst:72
msgid ""
"Exiting the context manager cleans up any temporary file created when the "
"resource was extracted from e.g. a zip file."
msgstr ""

#: ../../library/importlib.resources.rst:75
msgid ""
"Use ``as_file`` when the Traversable methods (``read_text``, etc) are "
"insufficient and an actual file on the file system is required."
msgstr ""

#: ../../library/importlib.resources.rst:82
msgid "Deprecated functions"
msgstr ""

#: ../../library/importlib.resources.rst:84
msgid ""
"An older, deprecated set of functions is still available, but is scheduled "
"for removal in a future version of Python. The main drawback of these "
"functions is that they do not support directories: they assume all resources "
"are located directly within a *package*."
msgstr ""

#: ../../library/importlib.resources.rst:91
msgid ""
"For *resource* arguments of the functions below, you can pass in the name of "
"a resource as a string or a :class:`path-like object <os.PathLike>`."
msgstr ""

#: ../../library/importlib.resources.rst:95
msgid "The ``Resource`` type is defined as ``Union[str, os.PathLike]``."
msgstr ""

#: ../../library/importlib.resources.rst:99
msgid "Open for binary reading the *resource* within *package*."
msgstr ""

#: ../../library/importlib.resources.rst:101
msgid ""
"*package* is either a name or a module object which conforms to the "
"``Package`` requirements.  *resource* is the name of the resource to open "
"within *package*; it may not contain path separators and it may not have sub-"
"resources (i.e. it cannot be a directory).  This function returns a ``typing."
"BinaryIO`` instance, a binary I/O stream open for reading."
msgstr ""

#: ../../library/importlib.resources.rst:109
#: ../../library/importlib.resources.rst:130
#: ../../library/importlib.resources.rst:148
#: ../../library/importlib.resources.rst:167
#: ../../library/importlib.resources.rst:203
#: ../../library/importlib.resources.rst:219
msgid "Calls to this function can be replaced by::"
msgstr ""

#: ../../library/importlib.resources.rst:116
msgid ""
"Open for text reading the *resource* within *package*.  By default, the "
"resource is opened for reading as UTF-8."
msgstr ""

#: ../../library/importlib.resources.rst:119
msgid ""
"*package* is either a name or a module object which conforms to the "
"``Package`` requirements.  *resource* is the name of the resource to open "
"within *package*; it may not contain path separators and it may not have sub-"
"resources (i.e. it cannot be a directory).  *encoding* and *errors* have the "
"same meaning as with built-in :func:`open`."
msgstr ""

#: ../../library/importlib.resources.rst:125
msgid ""
"This function returns a ``typing.TextIO`` instance, a text I/O stream open "
"for reading."
msgstr ""

#: ../../library/importlib.resources.rst:137
msgid ""
"Read and return the contents of the *resource* within *package* as ``bytes``."
msgstr ""

#: ../../library/importlib.resources.rst:140
msgid ""
"*package* is either a name or a module object which conforms to the "
"``Package`` requirements.  *resource* is the name of the resource to open "
"within *package*; it may not contain path separators and it may not have sub-"
"resources (i.e. it cannot be a directory).  This function returns the "
"contents of the resource as :class:`bytes`."
msgstr ""

#: ../../library/importlib.resources.rst:155
msgid ""
"Read and return the contents of *resource* within *package* as a ``str``. By "
"default, the contents are read as strict UTF-8."
msgstr ""

#: ../../library/importlib.resources.rst:158
msgid ""
"*package* is either a name or a module object which conforms to the "
"``Package`` requirements.  *resource* is the name of the resource to open "
"within *package*; it may not contain path separators and it may not have sub-"
"resources (i.e. it cannot be a directory).  *encoding* and *errors* have the "
"same meaning as with built-in :func:`open`.  This function returns the "
"contents of the resource as :class:`str`."
msgstr ""

#: ../../library/importlib.resources.rst:174
msgid ""
"Return the path to the *resource* as an actual file system path.  This "
"function returns a context manager for use in a :keyword:`with` statement. "
"The context manager provides a :class:`pathlib.Path` object."
msgstr ""

#: ../../library/importlib.resources.rst:178
msgid ""
"Exiting the context manager cleans up any temporary file created when the "
"resource needs to be extracted from e.g. a zip file."
msgstr ""

#: ../../library/importlib.resources.rst:181
msgid ""
"*package* is either a name or a module object which conforms to the "
"``Package`` requirements.  *resource* is the name of the resource to open "
"within *package*; it may not contain path separators and it may not have sub-"
"resources (i.e. it cannot be a directory)."
msgstr ""

#: ../../library/importlib.resources.rst:188
msgid "Calls to this function can be replaced using :func:`as_file`::"
msgstr ""

#: ../../library/importlib.resources.rst:195
msgid ""
"Return ``True`` if there is a resource named *name* in the package, "
"otherwise ``False``. This function does not consider directories to be "
"resources. *package* is either a name or a module object which conforms to "
"the ``Package`` requirements."
msgstr ""

#: ../../library/importlib.resources.rst:210
msgid ""
"Return an iterable over the named items within the package.  The iterable "
"returns :class:`str` resources (e.g. files) and non-resources (e.g. "
"directories).  The iterable does not recurse into subdirectories."
msgstr ""

#: ../../library/importlib.resources.rst:214
msgid ""
"*package* is either a name or a module object which conforms to the "
"``Package`` requirements."
msgstr ""
