# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# python-doc bot, 2025
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.10\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-10-17 17:19+0000\n"
"PO-Revision-Date: 2025-09-22 15:57+0000\n"
"Last-Translator: python-doc bot, 2025\n"
"Language-Team: Swedish (https://app.transifex.com/python-doc/teams/5390/"
"sv/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: sv\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"

#: ../../library/cmd.rst:2
msgid ":mod:`cmd` --- Support for line-oriented command interpreters"
msgstr ""

#: ../../library/cmd.rst:9
msgid "**Source code:** :source:`Lib/cmd.py`"
msgstr "**Källkod:** :source:`Lib/cmd.py`"

#: ../../library/cmd.rst:13
msgid ""
"The :class:`Cmd` class provides a simple framework for writing line-oriented "
"command interpreters.  These are often useful for test harnesses, "
"administrative tools, and prototypes that will later be wrapped in a more "
"sophisticated interface."
msgstr ""
"Klassen :class:`Cmd` tillhandahåller ett enkelt ramverk för att skriva "
"linjeorienterade kommandotolkar.  Dessa är ofta användbara för testverktyg, "
"administrativa verktyg och prototyper som senare kommer att förpackas i ett "
"mer sofistikerat gränssnitt."

#: ../../library/cmd.rst:20
msgid ""
"A :class:`Cmd` instance or subclass instance is a line-oriented interpreter "
"framework.  There is no good reason to instantiate :class:`Cmd` itself; "
"rather, it's useful as a superclass of an interpreter class you define "
"yourself in order to inherit :class:`Cmd`'s methods and encapsulate action "
"methods."
msgstr ""
"En :class:`Cmd`\\-instans eller underklass-instans är ett linjeorienterat "
"tolkningsramverk.  Det finns ingen bra anledning att instansiera :class:"
"`Cmd` själv; snarare är den användbar som en superklass av en tolkklass som "
"du definierar själv för att ärva :class:`Cmd`\\s metoder och kapsla in "
"åtgärdsmetoder."

#: ../../library/cmd.rst:25
msgid ""
"The optional argument *completekey* is the :mod:`readline` name of a "
"completion key; it defaults to :kbd:`Tab`. If *completekey* is not :const:"
"`None` and :mod:`readline` is available, command completion is done "
"automatically."
msgstr ""
"Det valfria argumentet *completekey* är namnet :mod:`readline` på en "
"kompletteringsnyckel; standardvärdet är :kbd:`Tab`. Om *completekey* inte "
"är :const:`None` och :mod:`readline` är tillgängligt, sker "
"kommandokomplettering automatiskt."

#: ../../library/cmd.rst:29
msgid ""
"The optional arguments *stdin* and *stdout* specify the  input and output "
"file objects that the Cmd instance or subclass  instance will use for input "
"and output. If not specified, they will default to :data:`sys.stdin` and :"
"data:`sys.stdout`."
msgstr ""
"De valfria argumenten *stdin* och *stdout* anger de in- och utdatafilobjekt "
"som Cmd-instansen eller underklassinstansen ska använda för in- och utdata. "
"Om de inte anges kommer de som standard att vara :data:`sys.stdin` och :data:"
"`sys.stdout`."

#: ../../library/cmd.rst:34
msgid ""
"If you want a given *stdin* to be used, make sure to set the instance's :"
"attr:`use_rawinput` attribute to ``False``, otherwise *stdin* will be "
"ignored."
msgstr ""
"Om du vill att en viss *stdin* ska användas, se till att sätta instansens "
"attribut :attr:`use_rawinput` till ``False``, annars kommer *stdin* att "
"ignoreras."

#: ../../library/cmd.rst:42
msgid "Cmd Objects"
msgstr "Cmd-objekt"

#: ../../library/cmd.rst:44
msgid "A :class:`Cmd` instance has the following methods:"
msgstr "En :class:`Cmd`\\-instans har följande metoder:"

#: ../../library/cmd.rst:49
msgid ""
"Repeatedly issue a prompt, accept input, parse an initial prefix off the "
"received input, and dispatch to action methods, passing them the remainder "
"of the line as argument."
msgstr ""
"Upprepa en uppmaning, acceptera inmatning, analysera ett initialt prefix "
"från den mottagna inmatningen och skicka till åtgärdsmetoder och skicka "
"resten av raden till dem som argument."

#: ../../library/cmd.rst:53
msgid ""
"The optional argument is a banner or intro string to be issued before the "
"first prompt (this overrides the :attr:`intro` class attribute)."
msgstr ""
"Det valfria argumentet är en banner eller introsträng som ska visas före den "
"första prompten (detta åsidosätter klassattributet :attr:`intro`)."

#: ../../library/cmd.rst:56
msgid ""
"If the :mod:`readline` module is loaded, input will automatically inherit :"
"program:`bash`\\ -like history-list editing (e.g. :kbd:`Control-P` scrolls "
"back to the last command, :kbd:`Control-N` forward to the next one, :kbd:"
"`Control-F` moves the cursor to the right non-destructively, :kbd:`Control-"
"B` moves the cursor to the left non-destructively, etc.)."
msgstr ""
"Om modulen :mod:`readline` laddas, kommer inmatningen automatiskt att ärva :"
"program:`bash` -liknande historielistredigering (t.ex. :kbd:`Control-P` "
"rullar tillbaka till det senaste kommandot, :kbd:`Control-N` framåt till "
"nästa, :kbd:`Control-F` flyttar markören till höger på ett icke-destruktivt "
"sätt, :kbd:`Control-B` flyttar markören till vänster på ett icke-destruktivt "
"sätt, etc.)."

#: ../../library/cmd.rst:62
msgid "An end-of-file on input is passed back as the string ``'EOF'``."
msgstr ""
"En fil som slutar vid inmatning skickas tillbaka som strängen ``'EOF'``."

#: ../../library/cmd.rst:68
msgid ""
"An interpreter instance will recognize a command name ``foo`` if and only if "
"it has a method :meth:`do_foo`.  As a special case, a line beginning with "
"the character ``'?'`` is dispatched to the method :meth:`do_help`.  As "
"another special case, a line beginning with the character ``'!'`` is "
"dispatched to the method :meth:`do_shell` (if such a method is defined)."
msgstr ""

#: ../../library/cmd.rst:74
msgid ""
"This method will return when the :meth:`postcmd` method returns a true "
"value. The *stop* argument to :meth:`postcmd` is the return value from the "
"command's corresponding :meth:`do_\\*` method."
msgstr ""

#: ../../library/cmd.rst:78
msgid ""
"If completion is enabled, completing commands will be done automatically, "
"and completing of commands args is done by calling :meth:`complete_foo` with "
"arguments *text*, *line*, *begidx*, and *endidx*.  *text* is the string "
"prefix we are attempting to match: all returned matches must begin with it. "
"*line* is the current input line with leading whitespace removed, *begidx* "
"and *endidx* are the beginning and ending indexes of the prefix text, which "
"could be used to provide different completion depending upon which position "
"the argument is in."
msgstr ""

#: ../../library/cmd.rst:86
msgid ""
"All subclasses of :class:`Cmd` inherit a predefined :meth:`do_help`.  This "
"method, called with an argument ``'bar'``, invokes the corresponding method :"
"meth:`help_bar`, and if that is not present, prints the docstring of :meth:"
"`do_bar`, if available.  With no argument, :meth:`do_help` lists all "
"available help topics (that is, all commands with corresponding :meth:"
"`help_\\*` methods or commands that have docstrings), and also lists any "
"undocumented commands."
msgstr ""

#: ../../library/cmd.rst:97
msgid ""
"Interpret the argument as though it had been typed in response to the "
"prompt. This may be overridden, but should not normally need to be; see the :"
"meth:`precmd` and :meth:`postcmd` methods for useful execution hooks.  The "
"return value is a flag indicating whether interpretation of commands by the "
"interpreter should stop.  If there is a :meth:`do_\\*` method for the "
"command *str*, the return value of that method is returned, otherwise the "
"return value from the :meth:`default` method is returned."
msgstr ""

#: ../../library/cmd.rst:108
msgid ""
"Method called when an empty line is entered in response to the prompt. If "
"this method is not overridden, it repeats the last nonempty command entered."
msgstr ""
"Metod som anropas när en tom rad skrivs in som svar på prompten. Om den här "
"metoden inte åsidosätts upprepas det senast angivna kommandot som inte var "
"tomt."

#: ../../library/cmd.rst:114
msgid ""
"Method called on an input line when the command prefix is not recognized. If "
"this method is not overridden, it prints an error message and returns."
msgstr ""
"Metod som anropas på en inmatningsrad när kommandoprefixet inte känns igen. "
"Om denna metod inte åsidosätts skriver den ut ett felmeddelande och "
"returnerar."

#: ../../library/cmd.rst:120
msgid ""
"Method called to complete an input line when no command-specific :meth:"
"`complete_\\*` method is available.  By default, it returns an empty list."
msgstr ""

#: ../../library/cmd.rst:126
msgid ""
"Hook method executed just before the command line *line* is interpreted, but "
"after the input prompt is generated and issued.  This method is a stub in :"
"class:`Cmd`; it exists to be overridden by subclasses.  The return value is "
"used as the command which will be executed by the :meth:`onecmd` method; "
"the :meth:`precmd` implementation may re-write the command or simply return "
"*line* unchanged."
msgstr ""
"Hook-metod som exekveras precis innan kommandoraden *line* tolkas, men efter "
"att indataprompten har genererats och skickats ut.  Denna metod är en stub "
"i :class:`Cmd`; den existerar för att kunna åsidosättas av underklasser.  "
"Returvärdet används som det kommando som kommer att utföras av metoden :meth:"
"`onecmd`; implementationen av :meth:`precmd` kan skriva om kommandot eller "
"helt enkelt returnera *line* oförändrad."

#: ../../library/cmd.rst:136
msgid ""
"Hook method executed just after a command dispatch is finished.  This method "
"is a stub in :class:`Cmd`; it exists to be overridden by subclasses.  *line* "
"is the command line which was executed, and *stop* is a flag which indicates "
"whether execution will be terminated after the call to :meth:`postcmd`; this "
"will be the return value of the :meth:`onecmd` method.  The return value of "
"this method will be used as the new value for the internal flag which "
"corresponds to *stop*; returning false will cause interpretation to continue."
msgstr ""
"Hook-metod som exekveras strax efter att ett kommando är färdigt.  Denna "
"metod är en stub i :class:`Cmd`; den existerar för att kunna åsidosättas av "
"underklasser.  *line* är kommandoraden som kördes, och *stop* är en flagga "
"som anger om körningen skall avslutas efter anropet till :meth:`postcmd`; "
"detta kommer att vara returvärdet för metoden :meth:`onecmd`.  Returvärdet "
"för denna metod kommer att användas som det nya värdet för den interna "
"flagga som motsvarar *stop*; om den returnerar false kommer tolkningen att "
"fortsätta."

#: ../../library/cmd.rst:147
msgid ""
"Hook method executed once when :meth:`cmdloop` is called.  This method is a "
"stub in :class:`Cmd`; it exists to be overridden by subclasses."
msgstr ""
"Hook-metod som exekveras en gång när :meth:`cmdloop` anropas.  Denna metod "
"är en stub i :class:`Cmd`; den finns för att åsidosättas av subklasser."

#: ../../library/cmd.rst:153
msgid ""
"Hook method executed once when :meth:`cmdloop` is about to return. This "
"method is a stub in :class:`Cmd`; it exists to be overridden by subclasses."
msgstr ""
"Hook-metod som exekveras en gång när :meth:`cmdloop` är på väg att "
"returnera. Denna metod är en stub i :class:`Cmd`; den existerar för att "
"kunna åsidosättas av subklasser."

#: ../../library/cmd.rst:157
msgid ""
"Instances of :class:`Cmd` subclasses have some public instance variables:"
msgstr ""
"Instanser av :class:`Cmd`\\-subklasser har vissa offentliga instansvariabler:"

#: ../../library/cmd.rst:161
msgid "The prompt issued to solicit input."
msgstr "Den uppmaning som gavs för att få in synpunkter."

#: ../../library/cmd.rst:166
msgid "The string of characters accepted for the command prefix."
msgstr "Den teckensträng som accepteras för kommandoprefixet."

#: ../../library/cmd.rst:171
msgid "The last nonempty command prefix seen."
msgstr "Det sista icke-tomma kommandoprefixet sett."

#: ../../library/cmd.rst:176
msgid ""
"A list of queued input lines.  The cmdqueue list is checked in :meth:"
"`cmdloop` when new input is needed; if it is nonempty, its elements will be "
"processed in order, as if entered at the prompt."
msgstr ""
"En lista med köade inmatningsrader.  Listan cmdqueue kontrolleras i :meth:"
"`cmdloop` när ny indata behövs; om den inte är tom kommer dess element att "
"behandlas i ordning, som om de angetts vid prompten."

#: ../../library/cmd.rst:183
msgid ""
"A string to issue as an intro or banner.  May be overridden by giving the :"
"meth:`cmdloop` method an argument."
msgstr ""
"En sträng som ska användas som intro eller banner.  Kan åsidosättas genom "
"att ge metoden :meth:`cmdloop` ett argument."

#: ../../library/cmd.rst:189
msgid ""
"The header to issue if the help output has a section for documented commands."
msgstr ""
"Den rubrik som ska visas om hjälputmatningen har ett avsnitt för "
"dokumenterade kommandon."

#: ../../library/cmd.rst:194
msgid ""
"The header to issue if the help output has a section for miscellaneous  help "
"topics (that is, there are :meth:`help_\\*` methods without corresponding :"
"meth:`do_\\*` methods)."
msgstr ""

#: ../../library/cmd.rst:201
msgid ""
"The header to issue if the help output has a section for undocumented  "
"commands (that is, there are :meth:`do_\\*` methods without corresponding :"
"meth:`help_\\*` methods)."
msgstr ""

#: ../../library/cmd.rst:208
msgid ""
"The character used to draw separator lines under the help-message headers.  "
"If empty, no ruler line is drawn.  It defaults to ``'='``."
msgstr ""
"Det tecken som används för att rita separatorlinjer under rubrikerna i "
"hjälpmeddelanden.  Om det är tomt ritas ingen linjal.  Standardvärdet är "
"``'='``."

#: ../../library/cmd.rst:214
msgid ""
"A flag, defaulting to true.  If true, :meth:`cmdloop` uses :func:`input` to "
"display a prompt and read the next command; if false, :meth:`sys.stdout."
"write` and :meth:`sys.stdin.readline` are used. (This means that by "
"importing :mod:`readline`, on systems that support it, the interpreter will "
"automatically support :program:`Emacs`\\ -like line editing  and command-"
"history keystrokes.)"
msgstr ""

#: ../../library/cmd.rst:224
msgid "Cmd Example"
msgstr "Cmd-exempel"

#: ../../library/cmd.rst:228
msgid ""
"The :mod:`cmd` module is mainly useful for building custom shells that let a "
"user work with a program interactively."
msgstr ""
"Modulen :mod:`cmd` är främst användbar för att bygga egna skal som låter "
"användaren arbeta interaktivt med ett program."

#: ../../library/cmd.rst:231
msgid ""
"This section presents a simple example of how to build a shell around a few "
"of the commands in the :mod:`turtle` module."
msgstr ""
"I det här avsnittet ges ett enkelt exempel på hur du bygger ett skal med "
"hjälp av några av kommandona i modulen :mod:`turtle`."

#: ../../library/cmd.rst:234
msgid ""
"Basic turtle commands such as :meth:`~turtle.forward` are added to a :class:"
"`Cmd` subclass with method named :meth:`do_forward`.  The argument is "
"converted to a number and dispatched to the turtle module.  The docstring is "
"used in the help utility provided by the shell."
msgstr ""

#: ../../library/cmd.rst:239
msgid ""
"The example also includes a basic record and playback facility implemented "
"with the :meth:`~Cmd.precmd` method which is responsible for converting the "
"input to lowercase and writing the commands to a file.  The :meth:"
"`do_playback` method reads the file and adds the recorded commands to the :"
"attr:`cmdqueue` for immediate playback::"
msgstr ""

#: ../../library/cmd.rst:320
msgid ""
"Here is a sample session with the turtle shell showing the help functions, "
"using blank lines to repeat commands, and the simple record and playback "
"facility:"
msgstr ""
"Här är ett exempel på en session med sköldpaddsskalet som visar "
"hjälpfunktionerna, användning av tomma rader för att upprepa kommandon och "
"den enkla inspelnings- och uppspelningsfunktionen:"
