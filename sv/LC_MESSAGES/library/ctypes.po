# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# python-doc bot, 2025
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.11\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-25 16:33+0000\n"
"PO-Revision-Date: 2025-09-22 16:49+0000\n"
"Last-Translator: python-doc bot, 2025\n"
"Language-Team: Swedish (https://app.transifex.com/python-doc/teams/5390/sv/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: sv\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"

#: ../../library/ctypes.rst:2
msgid ":mod:`ctypes` --- A foreign function library for Python"
msgstr ""

#: ../../library/ctypes.rst:9
msgid "**Source code:** :source:`Lib/ctypes`"
msgstr "**Källkod:** :source:`Lib/ctypes`"

#: ../../library/ctypes.rst:13
msgid ""
":mod:`ctypes` is a foreign function library for Python.  It provides C "
"compatible data types, and allows calling functions in DLLs or shared "
"libraries.  It can be used to wrap these libraries in pure Python."
msgstr ""
":mod:`ctypes` är ett bibliotek med främmande funktioner för Python.  Det "
"tillhandahåller C-kompatibla datatyper och gör det möjligt att anropa "
"funktioner i DLL:er eller delade bibliotek.  Det kan användas för att "
"paketera dessa bibliotek i ren Python."

#: ../../library/ctypes.rst:21
msgid "ctypes tutorial"
msgstr "ctypes handledning"

#: ../../library/ctypes.rst:23
msgid ""
"Note: The code samples in this tutorial use :mod:`doctest` to make sure that"
" they actually work.  Since some code samples behave differently under "
"Linux, Windows, or macOS, they contain doctest directives in comments."
msgstr ""
"Observera: I kodproverna i den här handledningen används :mod:`doctest` för "
"att säkerställa att de faktiskt fungerar.  Eftersom vissa kodprover beter "
"sig olika under Linux, Windows eller macOS innehåller de doctest-direktiv i "
"kommentarerna."

#: ../../library/ctypes.rst:27
msgid ""
"Note: Some code samples reference the ctypes :class:`c_int` type.  On "
"platforms where ``sizeof(long) == sizeof(int)`` it is an alias to "
":class:`c_long`. So, you should not be confused if :class:`c_long` is "
"printed if you would expect :class:`c_int` --- they are actually the same "
"type."
msgstr ""
"Observera: I vissa kodexempel hänvisas till typen ctypes :class:`c_int`.  På"
" plattformar där ``sizeof(long) == sizeof(int)`` är det ett alias till "
":class:`c_long`. Så du bör inte bli förvirrad om :class:`c_long` skrivs ut "
"när du förväntar dig :class:`c_int` --- de är faktiskt samma typ."

#: ../../library/ctypes.rst:35
msgid "Loading dynamic link libraries"
msgstr "Ladda dynamiska länkbibliotek"

#: ../../library/ctypes.rst:37
msgid ""
":mod:`ctypes` exports the *cdll*, and on Windows *windll* and *oledll* "
"objects, for loading dynamic link libraries."
msgstr ""
":mod:`ctypes` exporterar objekten *cdll*, och i Windows *windll* och "
"*oledll*, för laddning av dynamiska länkbibliotek."

#: ../../library/ctypes.rst:40
msgid ""
"You load libraries by accessing them as attributes of these objects. *cdll* "
"loads libraries which export functions using the standard ``cdecl`` calling "
"convention, while *windll* libraries call functions using the ``stdcall`` "
"calling convention. *oledll* also uses the ``stdcall`` calling convention, "
"and assumes the functions return a Windows :c:type:`HRESULT` error code. The"
" error code is used to automatically raise an :class:`OSError` exception "
"when the function call fails."
msgstr ""

#: ../../library/ctypes.rst:48
msgid ""
"Windows errors used to raise :exc:`WindowsError`, which is now an alias of "
":exc:`OSError`."
msgstr ""
"Windows-fel gav tidigare upphov till :exc:`WindowsError`, som nu är ett "
"alias för :exc:`OSError`."

#: ../../library/ctypes.rst:53
msgid ""
"Here are some examples for Windows. Note that ``msvcrt`` is the MS standard "
"C library containing most standard C functions, and uses the cdecl calling "
"convention::"
msgstr ""

#: ../../library/ctypes.rst:65
msgid "Windows appends the usual ``.dll`` file suffix automatically."
msgstr "Windows lägger till det vanliga filsuffixet ``.dll`` automatiskt."

#: ../../library/ctypes.rst:68
msgid ""
"Accessing the standard C library through ``cdll.msvcrt`` will use an "
"outdated version of the library that may be incompatible with the one being "
"used by Python. Where possible, use native Python functionality, or else "
"import and use the ``msvcrt`` module."
msgstr ""
"Om du använder standard C-biblioteket via ``cdll.msvcrt`` kommer du att "
"använda en föråldrad version av biblioteket som kan vara inkompatibel med "
"den som används av Python. Där det är möjligt, använd Pythons inbyggda "
"funktionalitet, eller importera och använd modulen ``msvcrt``."

#: ../../library/ctypes.rst:73
msgid ""
"On Linux, it is required to specify the filename *including* the extension "
"to load a library, so attribute access can not be used to load libraries. "
"Either the :meth:`LoadLibrary` method of the dll loaders should be used, or "
"you should load the library by creating an instance of CDLL by calling the "
"constructor::"
msgstr ""

#: ../../library/ctypes.rst:91
msgid "Accessing functions from loaded dlls"
msgstr "Åtkomst till funktioner från inlästa dll-filer"

#: ../../library/ctypes.rst:93
msgid "Functions are accessed as attributes of dll objects::"
msgstr "Funktioner är åtkomliga som attribut till dll-objekt::"

#: ../../library/ctypes.rst:107
msgid ""
"Note that win32 system dlls like ``kernel32`` and ``user32`` often export "
"ANSI as well as UNICODE versions of a function. The UNICODE version is "
"exported with an ``W`` appended to the name, while the ANSI version is "
"exported with an ``A`` appended to the name. The win32 ``GetModuleHandle`` "
"function, which returns a *module handle* for a given module name, has the "
"following C prototype, and a macro is used to expose one of them as "
"``GetModuleHandle`` depending on whether UNICODE is defined or not::"
msgstr ""

#: ../../library/ctypes.rst:120
msgid ""
"*windll* does not try to select one of them by magic, you must access the "
"version you need by specifying ``GetModuleHandleA`` or ``GetModuleHandleW`` "
"explicitly, and then call it with bytes or string objects respectively."
msgstr ""
"*windll* försöker inte välja en av dem med magi, du måste komma åt den "
"version du behöver genom att ange ``GetModuleHandleA`` eller "
"``GetModuleHandleW`` uttryckligen, och sedan anropa den med bytes- "
"respektive strängobjekt."

#: ../../library/ctypes.rst:124
msgid ""
"Sometimes, dlls export functions with names which aren't valid Python "
"identifiers, like ``\"??2@YAPAXI@Z\"``. In this case you have to use "
":func:`getattr` to retrieve the function::"
msgstr ""
"Ibland exporterar dll-filer funktioner med namn som inte är giltiga Python-"
"identifierare, som ``\"??2@YAPAXI@Z\"``. I det här fallet måste du använda "
":func:`getattr` för att hämta funktionen::"

#: ../../library/ctypes.rst:132
msgid ""
"On Windows, some dlls export functions not by name but by ordinal. These "
"functions can be accessed by indexing the dll object with the ordinal "
"number::"
msgstr ""
"I Windows exporterar vissa dll-filer funktioner inte efter namn utan efter "
"ordinal. Dessa funktioner kan nås genom att indexera dll-objektet med "
"ordinalnumret::"

#: ../../library/ctypes.rst:149
msgid "Calling functions"
msgstr "Anropsfunktioner"

#: ../../library/ctypes.rst:151
msgid ""
"You can call these functions like any other Python callable. This example "
"uses the ``time()`` function, which returns system time in seconds since the"
" Unix epoch, and the ``GetModuleHandleA()`` function, which returns a win32 "
"module handle."
msgstr ""

#: ../../library/ctypes.rst:156
msgid ""
"This example calls both functions with a ``NULL`` pointer (``None`` should "
"be used as the ``NULL`` pointer)::"
msgstr ""

#: ../../library/ctypes.rst:165
msgid ""
":exc:`ValueError` is raised when you call an ``stdcall`` function with the "
"``cdecl`` calling convention, or vice versa::"
msgstr ""
":exc:`ValueError` uppstår när du anropar en ``stdcall``-funktion med "
"anropskonventionen ``cdecl``, eller vice versa::"

#: ../../library/ctypes.rst:180
msgid ""
"To find out the correct calling convention you have to look into the C "
"header file or the documentation for the function you want to call."
msgstr ""
"För att ta reda på den korrekta anropskonventionen måste du titta i "
"C-headerfilen eller dokumentationen för den funktion du vill anropa."

#: ../../library/ctypes.rst:183
msgid ""
"On Windows, :mod:`ctypes` uses win32 structured exception handling to "
"prevent crashes from general protection faults when functions are called "
"with invalid argument values::"
msgstr ""
"I Windows använder :mod:`ctypes` win32-strukturerad undantagshantering för "
"att förhindra krascher på grund av generella skyddsfel när funktioner "
"anropas med ogiltiga argumentvärden::"

#: ../../library/ctypes.rst:193
msgid ""
"There are, however, enough ways to crash Python with :mod:`ctypes`, so you "
"should be careful anyway.  The :mod:`faulthandler` module can be helpful in "
"debugging crashes (e.g. from segmentation faults produced by erroneous C "
"library calls)."
msgstr ""
"Det finns dock tillräckligt många sätt att krascha Python med :mod:`ctypes`,"
" så du bör vara försiktig ändå.  Modulen :mod:`faulthandler` kan vara till "
"hjälp vid felsökning av krascher (t.ex. från segmenteringsfel som orsakas av"
" felaktiga anrop till C-biblioteket)."

#: ../../library/ctypes.rst:198
msgid ""
"``None``, integers, bytes objects and (unicode) strings are the only native "
"Python objects that can directly be used as parameters in these function "
"calls. ``None`` is passed as a C ``NULL`` pointer, bytes objects and strings"
" are passed as pointer to the memory block that contains their data "
"(:c:expr:`char *` or :c:expr:`wchar_t *`).  Python integers are passed as "
"the platforms default C :c:expr:`int` type, their value is masked to fit "
"into the C type."
msgstr ""

#: ../../library/ctypes.rst:205
msgid ""
"Before we move on calling functions with other parameter types, we have to "
"learn more about :mod:`ctypes` data types."
msgstr ""
"Innan vi går vidare med att anropa funktioner med andra parametertyper måste"
" vi lära oss mer om datatyperna :mod:`ctypes`."

#: ../../library/ctypes.rst:212 ../../library/ctypes.rst:2161
msgid "Fundamental data types"
msgstr "Grundläggande datatyper"

#: ../../library/ctypes.rst:214
msgid ":mod:`ctypes` defines a number of primitive C compatible data types:"
msgstr ":mod:`ctypes` definierar ett antal primitiva C-kompatibla datatyper:"

#: ../../library/ctypes.rst:217
msgid "ctypes type"
msgstr "ctypes typ"

#: ../../library/ctypes.rst:217
msgid "C type"
msgstr "C-typ"

#: ../../library/ctypes.rst:217
msgid "Python type"
msgstr "Python-typ"

#: ../../library/ctypes.rst:219
msgid ":class:`c_bool`"
msgstr ":klass:`c_bool`"

#: ../../library/ctypes.rst:219
msgid ":c:expr:`_Bool`"
msgstr ":c:expr:`_Bool`"

#: ../../library/ctypes.rst:219
msgid "bool (1)"
msgstr "bool (1)"

#: ../../library/ctypes.rst:221
msgid ":class:`c_char`"
msgstr ":klass:`c_char`"

#: ../../library/ctypes.rst:221 ../../library/ctypes.rst:225
msgid ":c:expr:`char`"
msgstr ":c:expr:`char`"

#: ../../library/ctypes.rst:221
msgid "1-character bytes object"
msgstr "1-teckens bytes objekt"

#: ../../library/ctypes.rst:223
msgid ":class:`c_wchar`"
msgstr ":klass:`c_wchar`"

#: ../../library/ctypes.rst:223
msgid ":c:type:`wchar_t`"
msgstr ":c:typ:`wchar_t`"

#: ../../library/ctypes.rst:223
msgid "1-character string"
msgstr "1-teckens sträng"

#: ../../library/ctypes.rst:225
msgid ":class:`c_byte`"
msgstr ":klass:`c_byte`"

#: ../../library/ctypes.rst:225 ../../library/ctypes.rst:227
#: ../../library/ctypes.rst:229 ../../library/ctypes.rst:231
#: ../../library/ctypes.rst:233 ../../library/ctypes.rst:235
#: ../../library/ctypes.rst:237 ../../library/ctypes.rst:239
#: ../../library/ctypes.rst:241 ../../library/ctypes.rst:243
#: ../../library/ctypes.rst:246 ../../library/ctypes.rst:248
msgid "int"
msgstr "int"

#: ../../library/ctypes.rst:227
msgid ":class:`c_ubyte`"
msgstr ":klass:`c_ubyte`"

#: ../../library/ctypes.rst:227
msgid ":c:expr:`unsigned char`"
msgstr ":c:expr:`unsigned char`"

#: ../../library/ctypes.rst:229
msgid ":class:`c_short`"
msgstr ":klass:`c_short`"

#: ../../library/ctypes.rst:229
msgid ":c:expr:`short`"
msgstr ":c:expr:`short`"

#: ../../library/ctypes.rst:231
msgid ":class:`c_ushort`"
msgstr ":klass:`c_ushort`"

#: ../../library/ctypes.rst:231
msgid ":c:expr:`unsigned short`"
msgstr ":c:expr:`unsigned short`"

#: ../../library/ctypes.rst:233
msgid ":class:`c_int`"
msgstr ":klass:`c_int`"

#: ../../library/ctypes.rst:233
msgid ":c:expr:`int`"
msgstr ":c:expr:`int`"

#: ../../library/ctypes.rst:235
msgid ":class:`c_uint`"
msgstr ":klass:`c_uint`"

#: ../../library/ctypes.rst:235
msgid ":c:expr:`unsigned int`"
msgstr ":c:expr:`unsigned int`"

#: ../../library/ctypes.rst:237
msgid ":class:`c_long`"
msgstr ":klass:`c_long`"

#: ../../library/ctypes.rst:237
msgid ":c:expr:`long`"
msgstr ":c:expr:`long`"

#: ../../library/ctypes.rst:239
msgid ":class:`c_ulong`"
msgstr ":klass:`c_ulong`"

#: ../../library/ctypes.rst:239
msgid ":c:expr:`unsigned long`"
msgstr ":c:expr:`unsigned long`"

#: ../../library/ctypes.rst:241
msgid ":class:`c_longlong`"
msgstr ":klass:`c_longlong`"

#: ../../library/ctypes.rst:241
msgid ":c:expr:`__int64` or :c:expr:`long long`"
msgstr ":c:expr:`__int64` eller :c:expr:`long long`"

#: ../../library/ctypes.rst:243
msgid ":class:`c_ulonglong`"
msgstr ":klass:`c_ulonglong`"

#: ../../library/ctypes.rst:243
msgid ":c:expr:`unsigned __int64` or :c:expr:`unsigned long long`"
msgstr ":c:expr:`unsigned __int64` eller :c:expr:`unsigned long long`"

#: ../../library/ctypes.rst:246
msgid ":class:`c_size_t`"
msgstr ":klass:`c_size_t`"

#: ../../library/ctypes.rst:246
msgid ":c:type:`size_t`"
msgstr ":c:type:`size_t`"

#: ../../library/ctypes.rst:248
msgid ":class:`c_ssize_t`"
msgstr ":klass:`c_ssize_t`"

#: ../../library/ctypes.rst:248
msgid ":c:type:`ssize_t` or :c:expr:`Py_ssize_t`"
msgstr ":c:type:`ssize_t` eller :c:expr:`Py_ssize_t`"

#: ../../library/ctypes.rst:251
msgid ":class:`c_float`"
msgstr ":klass:`c_float`"

#: ../../library/ctypes.rst:251
msgid ":c:expr:`float`"
msgstr ":c:expr:`float`"

#: ../../library/ctypes.rst:251 ../../library/ctypes.rst:253
#: ../../library/ctypes.rst:255
msgid "float"
msgstr "float"

#: ../../library/ctypes.rst:253
msgid ":class:`c_double`"
msgstr ":klass:`c_double`"

#: ../../library/ctypes.rst:253
msgid ":c:expr:`double`"
msgstr ":c:expr:`double`"

#: ../../library/ctypes.rst:255
msgid ":class:`c_longdouble`"
msgstr ":klass:`c_longdouble`"

#: ../../library/ctypes.rst:255
msgid ":c:expr:`long double`"
msgstr ":c:expr:`lång dubbel`"

#: ../../library/ctypes.rst:257
msgid ":class:`c_char_p`"
msgstr ":klass:`c_char_p`"

#: ../../library/ctypes.rst:257
msgid ":c:expr:`char *` (NUL terminated)"
msgstr ":c:expr:`char *` (NUL-terminerad)"

#: ../../library/ctypes.rst:257
msgid "bytes object or ``None``"
msgstr "bytes objekt eller ``None``"

#: ../../library/ctypes.rst:259
msgid ":class:`c_wchar_p`"
msgstr ":klass:`c_wchar_p`"

#: ../../library/ctypes.rst:259
msgid ":c:expr:`wchar_t *` (NUL terminated)"
msgstr ":c:expr:`wchar_t *` (NUL-terminerad)"

#: ../../library/ctypes.rst:259
msgid "string or ``None``"
msgstr "sträng eller ``None``"

#: ../../library/ctypes.rst:261
msgid ":class:`c_void_p`"
msgstr ":klass:`c_void_p`"

#: ../../library/ctypes.rst:261
msgid ":c:expr:`void *`"
msgstr ":c:expr:`void *`"

#: ../../library/ctypes.rst:261
msgid "int or ``None``"
msgstr "int eller ``None``"

#: ../../library/ctypes.rst:265
msgid "The constructor accepts any object with a truth value."
msgstr "Konstruktören accepterar alla objekt med ett sanningsvärde."

#: ../../library/ctypes.rst:267
msgid ""
"All these types can be created by calling them with an optional initializer "
"of the correct type and value::"
msgstr ""
"Alla dessa typer kan skapas genom att anropa dem med en valfri "
"initialiserare av rätt typ och värde::"

#: ../../library/ctypes.rst:278
msgid ""
"Since these types are mutable, their value can also be changed afterwards::"
msgstr ""
"Eftersom dessa typer är mutabla kan deras värde också ändras i efterhand::"

#: ../../library/ctypes.rst:290
msgid ""
"Assigning a new value to instances of the pointer types :class:`c_char_p`, "
":class:`c_wchar_p`, and :class:`c_void_p` changes the *memory location* they"
" point to, *not the contents* of the memory block (of course not, because "
"Python bytes objects are immutable)::"
msgstr ""

#: ../../library/ctypes.rst:310
msgid ""
"You should be careful, however, not to pass them to functions expecting "
"pointers to mutable memory. If you need mutable memory blocks, ctypes has a "
":func:`create_string_buffer` function which creates these in various ways.  "
"The current memory block contents can be accessed (or changed) with the "
"``raw`` property; if you want to access it as NUL terminated string, use the"
" ``value`` property::"
msgstr ""
"Du bör dock vara försiktig så att du inte skickar dem till funktioner som "
"förväntar sig pekare till föränderligt minne. Om du behöver föränderliga "
"minnesblock har ctypes en :func:`create_string_buffer`-funktion som skapar "
"dessa på olika sätt.  Det aktuella innehållet i minnesblocket kan nås (eller"
" ändras) med egenskapen ``raw``; om du vill komma åt det som en NUL-avslutad"
" sträng, använd egenskapen ``value``::"

#: ../../library/ctypes.rst:334
msgid ""
"The :func:`create_string_buffer` function replaces the old :func:`c_buffer` "
"function (which is still available as an alias).  To create a mutable memory"
" block containing unicode characters of the C type :c:type:`wchar_t`, use "
"the :func:`create_unicode_buffer` function."
msgstr ""

#: ../../library/ctypes.rst:343
msgid "Calling functions, continued"
msgstr "Anropsfunktioner, fortsättning"

#: ../../library/ctypes.rst:345
msgid ""
"Note that printf prints to the real standard output channel, *not* to "
":data:`sys.stdout`, so these examples will only work at the console prompt, "
"not from within *IDLE* or *PythonWin*::"
msgstr ""
"Observera att printf skriver ut till den riktiga standardutdatakanalen, "
"*inte* till :data:`sys.stdout`, så dessa exempel fungerar bara vid "
"konsolprompten, inte från *IDLE* eller *PythonWin*::"

#: ../../library/ctypes.rst:365
msgid ""
"As has been mentioned before, all Python types except integers, strings, and"
" bytes objects have to be wrapped in their corresponding :mod:`ctypes` type,"
" so that they can be converted to the required C data type::"
msgstr ""
"Som tidigare nämnts måste alla Python-typer utom heltal, strängar och "
"bytesobjekt förpackas i sin motsvarande :mod:`ctypes`-typ, så att de kan "
"konverteras till den nödvändiga C-datatypen::"

#: ../../library/ctypes.rst:377
msgid "Calling variadic functions"
msgstr "Anrop av variadiska funktioner"

#: ../../library/ctypes.rst:379
msgid ""
"On a lot of platforms calling variadic functions through ctypes is exactly "
"the same as calling functions with a fixed number of parameters. On some "
"platforms, and in particular ARM64 for Apple Platforms, the calling "
"convention for variadic functions is different than that for regular "
"functions."
msgstr ""
"På många plattformar är det exakt samma sak att anropa variadiska funktioner"
" via ctypes som att anropa funktioner med ett fast antal parametrar. På "
"vissa plattformar, och i synnerhet ARM64 för Apple-plattformar, är "
"anropskonventionen för variadiska funktioner annorlunda än för vanliga "
"funktioner."

#: ../../library/ctypes.rst:384
msgid ""
"On those platforms it is required to specify the *argtypes* attribute for "
"the regular, non-variadic, function arguments:"
msgstr ""

#: ../../library/ctypes.rst:391
msgid ""
"Because specifying the attribute does not inhibit portability it is advised "
"to always specify ``argtypes`` for all variadic functions."
msgstr ""

#: ../../library/ctypes.rst:398
msgid "Calling functions with your own custom data types"
msgstr "Anropa funktioner med dina egna anpassade datatyper"

#: ../../library/ctypes.rst:400
msgid ""
"You can also customize :mod:`ctypes` argument conversion to allow instances "
"of your own classes be used as function arguments. :mod:`ctypes` looks for "
"an :attr:`!_as_parameter_` attribute and uses this as the function argument."
" The attribute must be an integer, string, bytes, a :mod:`ctypes` instance, "
"or an object with an :attr:`!_as_parameter_` attribute::"
msgstr ""
"Du kan också anpassa :mod:`ctypes` argumentkonvertering så att instanser av "
"dina egna klasser kan användas som funktionsargument. :mod:`ctypes` letar "
"efter ett :attr:`!_as_parameter_`-attribut och använder detta som "
"funktionsargument. Attributet måste vara ett heltal, en sträng, bytes, en "
":mod:`ctypes`-instans eller ett objekt med ett "
":attr:`!_as_parameter_`-attribut:"

#: ../../library/ctypes.rst:416
msgid ""
"If you don't want to store the instance's data in the :attr:`_as_parameter_`"
" instance variable, you could define a :class:`property` which makes the "
"attribute available on request."
msgstr ""

#: ../../library/ctypes.rst:424
msgid "Specifying the required argument types (function prototypes)"
msgstr "Ange de nödvändiga argumenttyperna (funktionsprototyper)"

#: ../../library/ctypes.rst:426
msgid ""
"It is possible to specify the required argument types of functions exported "
"from DLLs by setting the :attr:`argtypes` attribute."
msgstr ""

#: ../../library/ctypes.rst:429
msgid ""
":attr:`argtypes` must be a sequence of C data types (the ``printf`` function"
" is probably not a good example here, because it takes a variable number and"
" different types of parameters depending on the format string, on the other "
"hand this is quite handy to experiment with this feature)::"
msgstr ""

#: ../../library/ctypes.rst:440
msgid ""
"Specifying a format protects against incompatible argument types (just as a "
"prototype for a C function), and tries to convert the arguments to valid "
"types::"
msgstr ""
"Genom att ange ett format skyddar man sig mot inkompatibla argumenttyper "
"(precis som en prototyp för en C-funktion) och försöker konvertera "
"argumenten till giltiga typer::"

#: ../../library/ctypes.rst:452
msgid ""
"If you have defined your own classes which you pass to function calls, you "
"have to implement a :meth:`from_param` class method for them to be able to "
"use them in the :attr:`argtypes` sequence. The :meth:`from_param` class "
"method receives the Python object passed to the function call, it should do "
"a typecheck or whatever is needed to make sure this object is acceptable, "
"and then return the object itself, its :attr:`_as_parameter_` attribute, or "
"whatever you want to pass as the C function argument in this case. Again, "
"the result should be an integer, string, bytes, a :mod:`ctypes` instance, or"
" an object with an :attr:`_as_parameter_` attribute."
msgstr ""

#: ../../library/ctypes.rst:466
msgid "Return types"
msgstr "Typer av avkastning"

#: ../../library/ctypes.rst:468
msgid ""
"By default functions are assumed to return the C :c:expr:`int` type.  Other "
"return types can be specified by setting the :attr:`restype` attribute of "
"the function object."
msgstr ""

#: ../../library/ctypes.rst:472
msgid ""
"Here is a more advanced example, it uses the ``strchr`` function, which "
"expects a string pointer and a char, and returns a pointer to a string::"
msgstr ""

#: ../../library/ctypes.rst:485
msgid ""
"If you want to avoid the ``ord(\"x\")`` calls above, you can set the "
":attr:`argtypes` attribute, and the second argument will be converted from a"
" single character Python bytes object into a C char::"
msgstr ""

#: ../../library/ctypes.rst:503
msgid ""
"You can also use a callable Python object (a function or a class for "
"example) as the :attr:`restype` attribute, if the foreign function returns "
"an integer.  The callable will be called with the *integer* the C function "
"returns, and the result of this call will be used as the result of your "
"function call. This is useful to check for error return values and "
"automatically raise an exception::"
msgstr ""

#: ../../library/ctypes.rst:526
msgid ""
"``WinError`` is a function which will call Windows ``FormatMessage()`` api "
"to get the string representation of an error code, and *returns* an "
"exception. ``WinError`` takes an optional error code parameter, if no one is"
" used, it calls :func:`GetLastError` to retrieve it."
msgstr ""
"``WinError`` är en funktion som anropar Windows ``FormatMessage()`` api för "
"att få strängrepresentationen av en felkod, och *returnerar* ett undantag. "
"``WinError`` tar en valfri felkodsparameter, om ingen används anropar den "
":func:`GetLastError` för att hämta den."

#: ../../library/ctypes.rst:531
msgid ""
"Please note that a much more powerful error checking mechanism is available "
"through the :attr:`errcheck` attribute; see the reference manual for "
"details."
msgstr ""

#: ../../library/ctypes.rst:538
msgid "Passing pointers (or: passing parameters by reference)"
msgstr "Passera pekare (eller: passera parametrar genom referens)"

#: ../../library/ctypes.rst:540
msgid ""
"Sometimes a C api function expects a *pointer* to a data type as parameter, "
"probably to write into the corresponding location, or if the data is too "
"large to be passed by value. This is also known as *passing parameters by "
"reference*."
msgstr ""
"Ibland förväntar sig en C api-funktion en *pekare* till en datatyp som "
"parameter, förmodligen för att skriva till motsvarande plats, eller om data "
"är för stora för att skickas med värde. Detta kallas också att *överföra "
"parametrar genom referens*."

#: ../../library/ctypes.rst:544
msgid ""
":mod:`ctypes` exports the :func:`byref` function which is used to pass "
"parameters by reference.  The same effect can be achieved with the "
":func:`pointer` function, although :func:`pointer` does a lot more work "
"since it constructs a real pointer object, so it is faster to use "
":func:`byref` if you don't need the pointer object in Python itself::"
msgstr ""
":mod:`ctypes` exporterar funktionen :func:`byref` som används för att skicka"
" parametrar som referenser.  Samma effekt kan uppnås med funktionen "
":func:`pointer`, även om :func:`pointer` gör mycket mer arbete eftersom den "
"konstruerar ett riktigt pekarobjekt, så det är snabbare att använda "
":func:`byref` om du inte behöver pekarobjektet i Python själv::"

#: ../../library/ctypes.rst:566
msgid "Structures and unions"
msgstr "Strukturer och fackföreningar"

#: ../../library/ctypes.rst:568
msgid ""
"Structures and unions must derive from the :class:`Structure` and "
":class:`Union` base classes which are defined in the :mod:`ctypes` module. "
"Each subclass must define a :attr:`_fields_` attribute.  :attr:`_fields_` "
"must be a list of *2-tuples*, containing a *field name* and a *field type*."
msgstr ""

#: ../../library/ctypes.rst:573
msgid ""
"The field type must be a :mod:`ctypes` type like :class:`c_int`, or any "
"other derived :mod:`ctypes` type: structure, union, array, pointer."
msgstr ""
"Fälttypen måste vara en :mod:`ctypes`-typ som :class:`c_int`, eller någon "
"annan härledd :mod:`ctypes`-typ: struktur, union, array, pekare."

#: ../../library/ctypes.rst:576
msgid ""
"Here is a simple example of a POINT structure, which contains two integers "
"named *x* and *y*, and also shows how to initialize a structure in the "
"constructor::"
msgstr ""
"Här följer ett enkelt exempel på en POINT-struktur, som innehåller två "
"heltal med namnen *x* och *y*, och som också visar hur man initialiserar en "
"struktur i konstruktorn::"

#: ../../library/ctypes.rst:596
msgid ""
"You can, however, build much more complicated structures.  A structure can "
"itself contain other structures by using a structure as a field type."
msgstr ""
"Det går dock att bygga mycket mer komplicerade strukturer.  En struktur kan "
"i sig innehålla andra strukturer genom att använda en struktur som fälttyp."

#: ../../library/ctypes.rst:599
msgid ""
"Here is a RECT structure which contains two POINTs named *upperleft* and "
"*lowerright*::"
msgstr ""
"Här är en RECT-struktur som innehåller två POINTs med namnen *upperleft* och"
" *lowerright*::"

#: ../../library/ctypes.rst:613
msgid ""
"Nested structures can also be initialized in the constructor in several "
"ways::"
msgstr ""
"Nästlade strukturer kan också initialiseras i konstruktorn på flera sätt::"

#: ../../library/ctypes.rst:618
msgid ""
"Field :term:`descriptor`\\s can be retrieved from the *class*, they are "
"useful for debugging because they can provide useful information::"
msgstr ""

#: ../../library/ctypes.rst:632
msgid ""
":mod:`ctypes` does not support passing unions or structures with bit-fields "
"to functions by value.  While this may work on 32-bit x86, it's not "
"guaranteed by the library to work in the general case.  Unions and "
"structures with bit-fields should always be passed to functions by pointer."
msgstr ""
":mod:`ctypes` har inte stöd för att skicka unioner eller strukturer med "
"bitfält till funktioner med värde.  Även om detta kan fungera på 32-bitars "
"x86, garanteras det inte av biblioteket att det fungerar i det allmänna "
"fallet.  Unioner och strukturer med bitfält bör alltid skickas till "
"funktioner med pekare."

#: ../../library/ctypes.rst:638
msgid "Structure/union alignment and byte order"
msgstr ""

#: ../../library/ctypes.rst:640
msgid ""
"By default, Structure and Union fields are aligned in the same way the C "
"compiler does it. It is possible to override this behavior by specifying a "
":attr:`_pack_` class attribute in the subclass definition. This must be set "
"to a positive integer and specifies the maximum alignment for the fields. "
"This is what ``#pragma pack(n)`` also does in MSVC."
msgstr ""

#: ../../library/ctypes.rst:646
msgid ""
":mod:`ctypes` uses the native byte order for Structures and Unions.  To "
"build structures with non-native byte order, you can use one of the "
":class:`BigEndianStructure`, :class:`LittleEndianStructure`, "
":class:`BigEndianUnion`, and :class:`LittleEndianUnion` base classes.  These"
" classes cannot contain pointer fields."
msgstr ""
":mod:`ctypes` använder den ursprungliga byteordningen för strukturer och "
"unioner.  Om du vill bygga strukturer med en annan byteordning kan du "
"använda någon av basklasserna :class:`BigEndianStructure`, "
":class:`LittleEndianStructure`, :class:`BigEndianUnion` och "
":class:`LittleEndianUnion`.  Dessa klasser kan inte innehålla pekarfält."

#: ../../library/ctypes.rst:656
msgid "Bit fields in structures and unions"
msgstr "Bitfält i strukturer och fackföreningar"

#: ../../library/ctypes.rst:658
msgid ""
"It is possible to create structures and unions containing bit fields. Bit "
"fields are only possible for integer fields, the bit width is specified as "
"the third item in the :attr:`_fields_` tuples::"
msgstr ""

#: ../../library/ctypes.rst:676
msgid "Arrays"
msgstr "Arrayer"

#: ../../library/ctypes.rst:678
msgid ""
"Arrays are sequences, containing a fixed number of instances of the same "
"type."
msgstr ""
"Arrayer är sekvenser som innehåller ett fast antal instanser av samma typ."

#: ../../library/ctypes.rst:680
msgid ""
"The recommended way to create array types is by multiplying a data type with"
" a positive integer::"
msgstr ""
"Det rekommenderade sättet att skapa array-typer är genom att multiplicera en"
" datatyp med ett positivt heltal::"

#: ../../library/ctypes.rst:685
msgid ""
"Here is an example of a somewhat artificial data type, a structure "
"containing 4 POINTs among other stuff::"
msgstr ""
"Här är ett exempel på en något artificiell datatyp, en struktur som bland "
"annat innehåller 4 POINTs::"

#: ../../library/ctypes.rst:701
msgid "Instances are created in the usual way, by calling the class::"
msgstr "Instanser skapas på vanligt sätt, genom att anropa class::"

#: ../../library/ctypes.rst:707
msgid ""
"The above code print a series of ``0 0`` lines, because the array contents "
"is initialized to zeros."
msgstr ""
"Ovanstående kod skriver ut en serie ``0 0`` rader, eftersom matrisens "
"innehåll är initialiserat till nollor."

#: ../../library/ctypes.rst:710
msgid "Initializers of the correct type can also be specified::"
msgstr "Initialiserare av rätt typ kan också anges::"

#: ../../library/ctypes.rst:726
msgid "Pointers"
msgstr "Pekare"

#: ../../library/ctypes.rst:728
msgid ""
"Pointer instances are created by calling the :func:`pointer` function on a "
":mod:`ctypes` type::"
msgstr ""
"Pekarinstanser skapas genom att anropa funktionen :func:`pointer` på en "
":mod:`ctypes`-typ::"

#: ../../library/ctypes.rst:736
msgid ""
"Pointer instances have a :attr:`~_Pointer.contents` attribute which returns "
"the object to which the pointer points, the ``i`` object above::"
msgstr ""
"Pekarinstanser har ett :attr:`~_Pointer.contents`-attribut som returnerar "
"det objekt som pekaren pekar på, ``i``-objektet ovan::"

#: ../../library/ctypes.rst:743
msgid ""
"Note that :mod:`ctypes` does not have OOR (original object return), it "
"constructs a new, equivalent object each time you retrieve an attribute::"
msgstr ""
"Observera att :mod:`ctypes` inte har OOR (original object return), utan "
"konstruerar ett nytt, likvärdigt objekt varje gång du hämtar ett attribut::"

#: ../../library/ctypes.rst:752
msgid ""
"Assigning another :class:`c_int` instance to the pointer's contents "
"attribute would cause the pointer to point to the memory location where this"
" is stored::"
msgstr ""
"Om du tilldelar en annan :class:`c_int`-instans till pekarens "
"innehållsattribut skulle pekaren peka på den minnesplats där detta är "
"lagrat::"

#: ../../library/ctypes.rst:764
msgid "Pointer instances can also be indexed with integers::"
msgstr "Pekarinstanser kan också indexeras med heltal::"

#: ../../library/ctypes.rst:770
msgid "Assigning to an integer index changes the pointed to value::"
msgstr "Genom att tilldela ett heltalsindex ändras det pekade till värdet::"

#: ../../library/ctypes.rst:779
msgid ""
"It is also possible to use indexes different from 0, but you must know what "
"you're doing, just as in C: You can access or change arbitrary memory "
"locations. Generally you only use this feature if you receive a pointer from"
" a C function, and you *know* that the pointer actually points to an array "
"instead of a single item."
msgstr ""
"Det är också möjligt att använda index som skiljer sig från 0, men du måste "
"veta vad du gör, precis som i C: Du kan komma åt eller ändra godtyckliga "
"minnesplatser. I allmänhet använder du bara den här funktionen om du får en "
"pekare från en C-funktion och du *vet* att pekaren faktiskt pekar på en "
"array i stället för på ett enda objekt."

#: ../../library/ctypes.rst:785
msgid ""
"Behind the scenes, the :func:`pointer` function does more than simply create"
" pointer instances, it has to create pointer *types* first. This is done "
"with the :func:`POINTER` function, which accepts any :mod:`ctypes` type, and"
" returns a new type::"
msgstr ""
"Bakom kulisserna gör funktionen :func:`pointer` mer än att bara skapa "
"pekarinstanser, den måste först skapa pekar*typer*. Detta görs med "
"funktionen :func:`POINTER`, som accepterar vilken typ som helst av "
":mod:`ctypes` och returnerar en ny typ::"

#: ../../library/ctypes.rst:801
msgid ""
"Calling the pointer type without an argument creates a ``NULL`` pointer. "
"``NULL`` pointers have a ``False`` boolean value::"
msgstr ""
"Anrop av pekartypen utan ett argument skapar en ``NULL``-pekare. ``NULL`` "
"pekare har ett ``False`` boolean värde::"

#: ../../library/ctypes.rst:809
msgid ""
":mod:`ctypes` checks for ``NULL`` when dereferencing pointers (but "
"dereferencing invalid non-\\ ``NULL`` pointers would crash Python)::"
msgstr ""
":mod:`ctypes` kontrollerar för ``NULL`` vid dereferencing av pekare (men "
"dereferencing av ogiltiga icke ``NULL`` pekare skulle krascha Python)::"

#: ../../library/ctypes.rst:828
msgid "Type conversions"
msgstr "Typkonverteringar"

#: ../../library/ctypes.rst:830
msgid ""
"Usually, ctypes does strict type checking.  This means, if you have "
"``POINTER(c_int)`` in the :attr:`argtypes` list of a function or as the type"
" of a member field in a structure definition, only instances of exactly the "
"same type are accepted.  There are some exceptions to this rule, where "
"ctypes accepts other objects.  For example, you can pass compatible array "
"instances instead of pointer types.  So, for ``POINTER(c_int)``, ctypes "
"accepts an array of c_int::"
msgstr ""

#: ../../library/ctypes.rst:851
msgid ""
"In addition, if a function argument is explicitly declared to be a pointer "
"type (such as ``POINTER(c_int)``) in :attr:`argtypes`, an object of the "
"pointed type (``c_int`` in this case) can be passed to the function.  ctypes"
" will apply the required :func:`byref` conversion in this case "
"automatically."
msgstr ""

#: ../../library/ctypes.rst:856
msgid "To set a POINTER type field to ``NULL``, you can assign ``None``::"
msgstr ""
"För att ställa in ett fält av typen POINTER till ``NULL`` kan du tilldela "
"``None``::"

#: ../../library/ctypes.rst:863
msgid ""
"Sometimes you have instances of incompatible types.  In C, you can cast one "
"type into another type.  :mod:`ctypes` provides a :func:`cast` function "
"which can be used in the same way.  The ``Bar`` structure defined above "
"accepts ``POINTER(c_int)`` pointers or :class:`c_int` arrays for its "
"``values`` field, but not instances of other types::"
msgstr ""
"Ibland har man instanser av inkompatibla typer.  I C kan du casta en typ "
"till en annan typ. :mod:`ctypes` tillhandahåller en :func:`cast`-funktion "
"som kan användas på samma sätt.  Strukturen ``Bar`` som definieras ovan "
"accepterar ``POINTER(c_int)`` pekare eller :class:`c_int` matriser för sitt "
"``values`` fält, men inte instanser av andra typer::"

#: ../../library/ctypes.rst:875
msgid "For these cases, the :func:`cast` function is handy."
msgstr "I dessa fall är funktionen :func:`cast` praktisk."

#: ../../library/ctypes.rst:877
msgid ""
"The :func:`cast` function can be used to cast a ctypes instance into a "
"pointer to a different ctypes data type.  :func:`cast` takes two parameters,"
" a ctypes object that is or can be converted to a pointer of some kind, and "
"a ctypes pointer type.  It returns an instance of the second argument, which"
" references the same memory block as the first argument::"
msgstr ""
"Funktionen :func:`cast` kan användas för att casta en ctypes-instans till en"
" pekare på en annan ctypes-datatyp. :func:`cast` tar två parametrar, ett "
"ctypes-objekt som är eller kan konverteras till en pekare av något slag och "
"en ctypes-pekartyp.  Den returnerar en instans av det andra argumentet, som "
"refererar till samma minnesblock som det första argumentet::"

#: ../../library/ctypes.rst:888
msgid ""
"So, :func:`cast` can be used to assign to the ``values`` field of ``Bar`` "
"the structure::"
msgstr ""
"Så :func:`cast` kan användas för att tilldela fältet ``values`` i ``Bar`` "
"strukturen::"

#: ../../library/ctypes.rst:901
msgid "Incomplete Types"
msgstr "Ofullständiga typer"

#: ../../library/ctypes.rst:903
msgid ""
"*Incomplete Types* are structures, unions or arrays whose members are not "
"yet specified. In C, they are specified by forward declarations, which are "
"defined later::"
msgstr ""
"*Ofullständiga typer* är strukturer, unioner eller matriser vars medlemmar "
"ännu inte har specificerats. I C specificeras de genom forward-"
"deklarationer, som definieras senare::"

#: ../../library/ctypes.rst:914
msgid ""
"The straightforward translation into ctypes code would be this, but it does "
"not work::"
msgstr ""
"Den raka översättningen till ctypes-kod skulle vara denna, men det fungerar "
"inte::"

#: ../../library/ctypes.rst:927
msgid ""
"because the new ``class cell`` is not available in the class statement "
"itself. In :mod:`ctypes`, we can define the ``cell`` class and set the "
":attr:`_fields_` attribute later, after the class statement::"
msgstr ""

#: ../../library/ctypes.rst:939
msgid ""
"Let's try it. We create two instances of ``cell``, and let them point to "
"each other, and finally follow the pointer chain a few times::"
msgstr ""
"Låt oss prova det. Vi skapar två instanser av ``cell``, och låter dem peka "
"på varandra, och följer slutligen pekarkedjan några gånger::"

#: ../../library/ctypes.rst:960
msgid "Callback functions"
msgstr "Återkallelsefunktioner"

#: ../../library/ctypes.rst:962
msgid ""
":mod:`ctypes` allows creating C callable function pointers from Python "
"callables. These are sometimes called *callback functions*."
msgstr ""
":mod:`ctypes` gör det möjligt att skapa C-kallbara funktionspoängare från "
"Python-kallbara funktioner. Dessa kallas ibland för *callback-funktioner*."

#: ../../library/ctypes.rst:965
msgid ""
"First, you must create a class for the callback function. The class knows "
"the calling convention, the return type, and the number and types of "
"arguments this function will receive."
msgstr ""
"Först måste du skapa en klass för återuppringningsfunktionen. Klassen känner"
" till anropskonventionen, returtypen och antalet och typerna av argument som"
" denna funktion kommer att ta emot."

#: ../../library/ctypes.rst:969
msgid ""
"The :func:`CFUNCTYPE` factory function creates types for callback functions "
"using the ``cdecl`` calling convention. On Windows, the :func:`WINFUNCTYPE` "
"factory function creates types for callback functions using the ``stdcall`` "
"calling convention."
msgstr ""
"Fabriksfunktionen :func:`CFUNCTYPE` skapar typer för "
"återuppringningsfunktioner med hjälp av anropskonventionen ``cdecl``. I "
"Windows skapar fabriksfunktionen :func:`WINFUNCTYPE` typer för "
"återkallningsfunktioner med hjälp av anropskonventionen ``stdcall``."

#: ../../library/ctypes.rst:974
msgid ""
"Both of these factory functions are called with the result type as first "
"argument, and the callback functions expected argument types as the "
"remaining arguments."
msgstr ""
"Båda dessa fabriksfunktioner anropas med resultattypen som första argument, "
"och callback-funktionernas förväntade argumenttyper som resterande argument."

#: ../../library/ctypes.rst:978
msgid ""
"I will present an example here which uses the standard C library's "
":c:func:`qsort` function, that is used to sort items with the help of a "
"callback function.  :c:func:`qsort` will be used to sort an array of "
"integers::"
msgstr ""

#: ../../library/ctypes.rst:988
msgid ""
":func:`qsort` must be called with a pointer to the data to sort, the number "
"of items in the data array, the size of one item, and a pointer to the "
"comparison function, the callback. The callback will then be called with two"
" pointers to items, and it must return a negative integer if the first item "
"is smaller than the second, a zero if they are equal, and a positive integer"
" otherwise."
msgstr ""

#: ../../library/ctypes.rst:994
msgid ""
"So our callback function receives pointers to integers, and must return an "
"integer. First we create the ``type`` for the callback function::"
msgstr ""
"Så vår callback-funktion tar emot pekare till heltal och måste returnera ett"
" heltal. Först skapar vi ``typ`` för callback-funktionen::"

#: ../../library/ctypes.rst:1000
msgid ""
"To get started, here is a simple callback that shows the values it gets "
"passed::"
msgstr ""
"För att komma igång, här är en enkel callback som visar de värden den får "
"skickade till sig::"

#: ../../library/ctypes.rst:1010
msgid "The result::"
msgstr "Resultatet::"

#: ../../library/ctypes.rst:1020
msgid "Now we can actually compare the two items and return a useful result::"
msgstr ""
"Nu kan vi faktiskt jämföra de två objekten och returnera ett användbart "
"resultat::"

#: ../../library/ctypes.rst:1035
msgid "As we can easily check, our array is sorted now::"
msgstr "Som vi lätt kan kontrollera är vår matris nu sorterad::"

#: ../../library/ctypes.rst:1042
msgid ""
"The function factories can be used as decorator factories, so we may as well"
" write::"
msgstr ""
"Funktionsfabrikerna kan användas som dekoratorfabriker, så vi kan lika gärna"
" skriva::"

#: ../../library/ctypes.rst:1060
msgid ""
"Make sure you keep references to :func:`CFUNCTYPE` objects as long as they "
"are used from C code. :mod:`ctypes` doesn't, and if you don't, they may be "
"garbage collected, crashing your program when a callback is made."
msgstr ""
"Se till att du behåller referenser till :func:`CFUNCTYPE`-objekt så länge "
"som de används från C-kod. :mod:`ctypes` gör inte det, och om du inte gör "
"det kan de bli garbage collected, vilket kraschar ditt program när en "
"callback görs."

#: ../../library/ctypes.rst:1064
msgid ""
"Also, note that if the callback function is called in a thread created "
"outside of Python's control (e.g. by the foreign code that calls the "
"callback), ctypes creates a new dummy Python thread on every invocation. "
"This behavior is correct for most purposes, but it means that values stored "
"with :class:`threading.local` will *not* survive across different callbacks,"
" even when those calls are made from the same C thread."
msgstr ""
"Observera också att om återuppringningsfunktionen anropas i en tråd som "
"skapats utanför Pythons kontroll (t.ex. av den utländska kod som anropar "
"återuppringningen), skapar ctypes en ny dummy Python-tråd vid varje anrop. "
"Detta beteende är korrekt för de flesta ändamål, men det innebär att värden "
"som lagras med :class:`threading.local` *inte* kommer att överleva mellan "
"olika anrop, även när dessa anrop görs från samma C-tråd."

#: ../../library/ctypes.rst:1074
msgid "Accessing values exported from dlls"
msgstr "Tillgång till värden exporterade från dll-filer"

#: ../../library/ctypes.rst:1076
msgid ""
"Some shared libraries not only export functions, they also export variables."
" An example in the Python library itself is the :c:data:`Py_OptimizeFlag`, "
"an integer set to 0, 1, or 2, depending on the :option:`-O` or :option:`-OO`"
" flag given on startup."
msgstr ""

#: ../../library/ctypes.rst:1081
msgid ""
":mod:`ctypes` can access values like this with the :meth:`in_dll` class "
"methods of the type.  *pythonapi* is a predefined symbol giving access to "
"the Python C api::"
msgstr ""

#: ../../library/ctypes.rst:1090
msgid ""
"If the interpreter would have been started with :option:`-O`, the sample "
"would have printed ``c_long(1)``, or ``c_long(2)`` if :option:`-OO` would "
"have been specified."
msgstr ""

#: ../../library/ctypes.rst:1094
msgid ""
"An extended example which also demonstrates the use of pointers accesses the"
" :c:data:`PyImport_FrozenModules` pointer exported by Python."
msgstr ""
"Ett utökat exempel som också demonstrerar användningen av pekare kommer åt "
":c:data:`PyImport_FrozenModules`-pekaren som exporteras av Python."

#: ../../library/ctypes.rst:1097
msgid "Quoting the docs for that value:"
msgstr "Citerar dokumenten för det värdet:"

#: ../../library/ctypes.rst:1099
msgid ""
"This pointer is initialized to point to an array of :c:struct:`_frozen` "
"records, terminated by one whose members are all ``NULL`` or zero.  When a "
"frozen module is imported, it is searched in this table.  Third-party code "
"could play tricks with this to provide a dynamically created collection of "
"frozen modules."
msgstr ""
"Denna pekare initialiseras så att den pekar på en array av "
":c:struct:`_frozen`\\-poster, som avslutas med en post vars alla medlemmar "
"är ``NULL`` eller noll.  När en fryst modul importeras söks den i den här "
"tabellen.  Tredjepartskod kan använda detta för att skapa en dynamiskt "
"skapad samling av frysta moduler."

#: ../../library/ctypes.rst:1104
msgid ""
"So manipulating this pointer could even prove useful. To restrict the "
"example size, we show only how this table can be read with :mod:`ctypes`::"
msgstr ""
"Så att manipulera denna pekare kan till och med visa sig vara användbart. "
"För att begränsa exemplets storlek visar vi bara hur denna tabell kan läsas "
"med :mod:`ctypes`::"

#: ../../library/ctypes.rst:1118
msgid ""
"We have defined the :c:struct:`_frozen` data type, so we can get the pointer"
" to the table::"
msgstr ""
"Vi har definierat datatypen :c:struct:`_frozen`, så vi kan hämta pekaren "
"till tabellen::"

#: ../../library/ctypes.rst:1125
msgid ""
"Since ``table`` is a ``pointer`` to the array of ``struct_frozen`` records, "
"we can iterate over it, but we just have to make sure that our loop "
"terminates, because pointers have no size. Sooner or later it would probably"
" crash with an access violation or whatever, so it's better to break out of "
"the loop when we hit the ``NULL`` entry::"
msgstr ""
"Eftersom ``table`` är en ``pekare`` till arrayen av ``struct_frozen``-poster"
" kan vi iterera över den, men vi måste bara se till att vår slinga avslutas,"
" eftersom pekare inte har någon storlek. Förr eller senare skulle det "
"förmodligen krascha med en access violation eller vad som helst, så det är "
"bättre att bryta sig ur slingan när vi träffar ``NULL``-ingången::"

#: ../../library/ctypes.rst:1141
msgid ""
"The fact that standard Python has a frozen module and a frozen package "
"(indicated by the negative ``size`` member) is not well known, it is only "
"used for testing. Try it out with ``import __hello__`` for example."
msgstr ""
"Det faktum att standard Python har en frusen modul och ett fruset paket "
"(indikeras av den negativa ``size``-medlemmen) är inte välkänt, det används "
"bara för testning. Prova det till exempel med ``import __hello__``."

#: ../../library/ctypes.rst:1149
msgid "Surprises"
msgstr "Överraskningar"

#: ../../library/ctypes.rst:1151
msgid ""
"There are some edges in :mod:`ctypes` where you might expect something other"
" than what actually happens."
msgstr ""
"Det finns vissa kanter i :mod:`ctypes` där man kan förvänta sig något annat "
"än vad som faktiskt händer."

#: ../../library/ctypes.rst:1154
msgid "Consider the following example::"
msgstr "Tänk på följande exempel::"

#: ../../library/ctypes.rst:1174
msgid ""
"Hm. We certainly expected the last statement to print ``3 4 1 2``. What "
"happened? Here are the steps of the ``rc.a, rc.b = rc.b, rc.a`` line above::"
msgstr ""
"Hm. Vi förväntade oss verkligen att det sista uttalandet skulle skriva ut "
"``3 4 1 2``. Vad var det som hände? Här är stegen i raden ``rc.a, rc.b = "
"rc.b, rc.a`` ovan::"

#: ../../library/ctypes.rst:1182
msgid ""
"Note that ``temp0`` and ``temp1`` are objects still using the internal "
"buffer of the ``rc`` object above. So executing ``rc.a = temp0`` copies the "
"buffer contents of ``temp0`` into ``rc`` 's buffer.  This, in turn, changes "
"the contents of ``temp1``. So, the last assignment ``rc.b = temp1``, doesn't"
" have the expected effect."
msgstr ""
"Observera att ``temp0`` och ``temp1`` är objekt som fortfarande använder den"
" interna bufferten i ``rc``-objektet ovan. Så när du kör ``rc.a = temp0`` "
"kopieras buffertinnehållet i ``temp0`` till ``rc`` buffert.  Detta ändrar i "
"sin tur innehållet i ``temp1``. Så den sista uppgiften ``rc.b = temp1`` har "
"inte den förväntade effekten."

#: ../../library/ctypes.rst:1188
msgid ""
"Keep in mind that retrieving sub-objects from Structure, Unions, and Arrays "
"doesn't *copy* the sub-object, instead it retrieves a wrapper object "
"accessing the root-object's underlying buffer."
msgstr ""
"Tänk på att när du hämtar underobjekt från Structure, Unions och Arrays "
"*kopieras* inte underobjektet, utan istället hämtas ett omslagsobjekt som "
"har åtkomst till rotobjektets underliggande buffert."

#: ../../library/ctypes.rst:1192
msgid ""
"Another example that may behave differently from what one would expect is "
"this::"
msgstr ""
"Ett annat exempel som kan bete sig annorlunda än vad man förväntar sig är "
"detta::"

#: ../../library/ctypes.rst:1204
msgid ""
"Objects instantiated from :class:`c_char_p` can only have their value set to"
" bytes or integers."
msgstr ""
"Objekt som instansieras från :class:`c_char_p` kan bara ha sitt värde "
"inställt på bytes eller heltal."

#: ../../library/ctypes.rst:1207
msgid ""
"Why is it printing ``False``?  ctypes instances are objects containing a "
"memory block plus some :term:`descriptor`\\s accessing the contents of the "
"memory. Storing a Python object in the memory block does not store the "
"object itself, instead the ``contents`` of the object is stored.  Accessing "
"the contents again constructs a new Python object each time!"
msgstr ""
"Varför skriver den ut ``False``? ctypes-instanser är objekt som innehåller "
"ett minnesblock plus några :term:`descriptor`` som har åtkomst till "
"innehållet i minnet. När ett Python-objekt lagras i minnesblocket lagras "
"inte själva objektet, utan istället lagras objektets ``innehåll``.  Om du "
"öppnar innehållet igen konstrueras ett nytt Python-objekt varje gång!"

#: ../../library/ctypes.rst:1217
msgid "Variable-sized data types"
msgstr "Datatyper med variabel storlek"

#: ../../library/ctypes.rst:1219
msgid ""
":mod:`ctypes` provides some support for variable-sized arrays and "
"structures."
msgstr ""
":mod:`ctypes` ger visst stöd för arrayer och strukturer med variabel "
"storlek."

#: ../../library/ctypes.rst:1221
msgid ""
"The :func:`resize` function can be used to resize the memory buffer of an "
"existing ctypes object.  The function takes the object as first argument, "
"and the requested size in bytes as the second argument.  The memory block "
"cannot be made smaller than the natural memory block specified by the "
"objects type, a :exc:`ValueError` is raised if this is tried::"
msgstr ""
"Funktionen :func:`resize` kan användas för att ändra storlek på "
"minnesbufferten för ett befintligt ctypes-objekt.  Funktionen tar objektet "
"som första argument och den begärda storleken i byte som andra argument.  "
"Minnesblocket kan inte göras mindre än det naturliga minnesblock som anges "
"av objektets typ, ett :exc:`ValueError` uppstår om detta försöker:"

#: ../../library/ctypes.rst:1241
msgid ""
"This is nice and fine, but how would one access the additional elements "
"contained in this array?  Since the type still only knows about 4 elements, "
"we get errors accessing other elements::"
msgstr ""
"Detta är bra, men hur skulle man komma åt de ytterligare element som finns i"
" denna array?  Eftersom typen fortfarande bara känner till 4 element, får vi"
" fel vid åtkomst till andra element::"

#: ../../library/ctypes.rst:1253
msgid ""
"Another way to use variable-sized data types with :mod:`ctypes` is to use "
"the dynamic nature of Python, and (re-)define the data type after the "
"required size is already known, on a case by case basis."
msgstr ""
"Ett annat sätt att använda datatyper med variabel storlek med :mod:`ctypes` "
"är att använda Pythons dynamiska natur och (om)definiera datatypen efter att"
" den önskade storleken redan är känd, från fall till fall."

#: ../../library/ctypes.rst:1261
msgid "ctypes reference"
msgstr "ctypes referens"

#: ../../library/ctypes.rst:1267
msgid "Finding shared libraries"
msgstr "Hitta delade bibliotek"

#: ../../library/ctypes.rst:1269
msgid ""
"When programming in a compiled language, shared libraries are accessed when "
"compiling/linking a program, and when the program is run."
msgstr ""
"När du programmerar i ett kompilerat språk används delade bibliotek när du "
"kompilerar/länkar ett program och när programmet körs."

#: ../../library/ctypes.rst:1272
msgid ""
"The purpose of the :func:`find_library` function is to locate a library in a"
" way similar to what the compiler or runtime loader does (on platforms with "
"several versions of a shared library the most recent should be loaded), "
"while the ctypes library loaders act like when a program is run, and call "
"the runtime loader directly."
msgstr ""

#: ../../library/ctypes.rst:1278
msgid ""
"The :mod:`ctypes.util` module provides a function which can help to "
"determine the library to load."
msgstr ""

#: ../../library/ctypes.rst:1286
msgid ""
"Try to find a library and return a pathname.  *name* is the library name "
"without any prefix like *lib*, suffix like ``.so``, ``.dylib`` or version "
"number (this is the form used for the posix linker option :option:`!-l`).  "
"If no library can be found, returns ``None``."
msgstr ""
"Försöker hitta ett bibliotek och returnerar ett sökvägsnamn.  *name* är "
"biblioteksnamnet utan något prefix som *lib*, suffix som ``.so``, ``.dylib``"
" eller versionsnummer (detta är den form som används för posix-"
"länkalternativet :option:`!-l`).  Om inget bibliotek kan hittas returneras "
"``None``."

#: ../../library/ctypes.rst:1291 ../../library/ctypes.rst:1935
msgid "The exact functionality is system dependent."
msgstr "Den exakta funktionaliteten är systemberoende."

#: ../../library/ctypes.rst:1293
msgid ""
"On Linux, :func:`find_library` tries to run external programs "
"(``/sbin/ldconfig``, ``gcc``, ``objdump`` and ``ld``) to find the library "
"file. It returns the filename of the library file."
msgstr ""

#: ../../library/ctypes.rst:1297
msgid ""
"On Linux, the value of the environment variable ``LD_LIBRARY_PATH`` is used "
"when searching for libraries, if a library cannot be found by any other "
"means."
msgstr ""
"Under Linux används värdet för miljövariabeln ``LD_LIBRARY_PATH`` vid "
"sökning efter bibliotek, om ett bibliotek inte kan hittas på något annat "
"sätt."

#: ../../library/ctypes.rst:1301
msgid "Here are some examples::"
msgstr "Här är några exempel::"

#: ../../library/ctypes.rst:1312
msgid ""
"On macOS, :func:`find_library` tries several predefined naming schemes and "
"paths to locate the library, and returns a full pathname if successful::"
msgstr ""

#: ../../library/ctypes.rst:1326
msgid ""
"On Windows, :func:`find_library` searches along the system search path, and "
"returns the full pathname, but since there is no predefined naming scheme a "
"call like ``find_library(\"c\")`` will fail and return ``None``."
msgstr ""

#: ../../library/ctypes.rst:1330
msgid ""
"If wrapping a shared library with :mod:`ctypes`, it *may* be better to "
"determine the shared library name at development time, and hardcode that "
"into the wrapper module instead of using :func:`find_library` to locate the "
"library at runtime."
msgstr ""

#: ../../library/ctypes.rst:1338
msgid "Loading shared libraries"
msgstr "Ladda delade bibliotek"

#: ../../library/ctypes.rst:1340
msgid ""
"There are several ways to load shared libraries into the Python process.  "
"One way is to instantiate one of the following classes:"
msgstr ""
"Det finns flera sätt att ladda in delade bibliotek i Python-processen.  Ett "
"sätt är att instansiera en av följande klasser:"

#: ../../library/ctypes.rst:1346
msgid ""
"Instances of this class represent loaded shared libraries. Functions in "
"these libraries use the standard C calling convention, and are assumed to "
"return :c:expr:`int`."
msgstr ""
"Instanser av denna klass representerar laddade delade bibliotek. Funktioner "
"i dessa bibliotek använder standard C-anropskonventionen och antas returnera"
" :c:expr:`int`."

#: ../../library/ctypes.rst:1350
msgid ""
"On Windows creating a :class:`CDLL` instance may fail even if the DLL name "
"exists. When a dependent DLL of the loaded DLL is not found, a "
":exc:`OSError` error is raised with the message *\"[WinError 126] The "
"specified module could not be found\".* This error message does not contain "
"the name of the missing DLL because the Windows API does not return this "
"information making this error hard to diagnose. To resolve this error and "
"determine which DLL is not found, you need to find the list of dependent "
"DLLs and determine which one is not found using Windows debugging and "
"tracing tools."
msgstr ""
"I Windows kan det misslyckas att skapa en :class:`CDLL`-instans även om DLL-"
"namnet finns. När en DLL som är beroende av den inlästa DLL:en inte hittas, "
"uppstår ett :exc:`OSError`-fel med meddelandet *\"[WinError 126] Den angivna"
" modulen kunde inte hittas\".* Detta felmeddelande innehåller inte namnet på"
" den DLL som saknas eftersom Windows API inte returnerar denna information, "
"vilket gör det svårt att diagnostisera detta fel. För att lösa det här felet"
" och avgöra vilken DLL som inte hittas måste du hitta listan över beroende "
"DLL:er och avgöra vilken som inte hittas med hjälp av Windows felsöknings- "
"och spårningsverktyg."

#: ../../library/ctypes.rst:1362
msgid ""
"`Microsoft DUMPBIN tool "
"<https://docs.microsoft.com/cpp/build/reference/dependents>`_ -- A tool to "
"find DLL dependents."
msgstr ""
"microsofts DUMPBIN-verktyg "
"<https://docs.microsoft.com/cpp/build/reference/dependents>`_ -- Ett verktyg"
" för att hitta DLL-beroenden."

#: ../../library/ctypes.rst:1368
msgid ""
"Windows only: Instances of this class represent loaded shared libraries, "
"functions in these libraries use the ``stdcall`` calling convention, and are"
" assumed to return the windows specific :class:`HRESULT` code.  "
":class:`HRESULT` values contain information specifying whether the function "
"call failed or succeeded, together with additional error code.  If the "
"return value signals a failure, an :class:`OSError` is automatically raised."
msgstr ""

#: ../../library/ctypes.rst:1375
msgid ""
":exc:`WindowsError` used to be raised, which is now an alias of "
":exc:`OSError`."
msgstr ""
"tidigare användes :exc:`WindowsError`, som nu är ett alias för "
":exc:`OSError`."

#: ../../library/ctypes.rst:1382
msgid ""
"Windows only: Instances of this class represent loaded shared libraries, "
"functions in these libraries use the ``stdcall`` calling convention, and are"
" assumed to return :c:expr:`int` by default."
msgstr ""

#: ../../library/ctypes.rst:1386
msgid ""
"The Python :term:`global interpreter lock` is released before calling any "
"function exported by these libraries, and reacquired afterwards."
msgstr ""
"Python :term:`global interpreter lock` släpps innan anrop av någon funktion "
"som exporteras av dessa bibliotek, och återfås efteråt."

#: ../../library/ctypes.rst:1392
msgid ""
"Instances of this class behave like :class:`CDLL` instances, except that the"
" Python GIL is *not* released during the function call, and after the "
"function execution the Python error flag is checked. If the error flag is "
"set, a Python exception is raised."
msgstr ""
"Instanser av denna klass beter sig som :class:`CDLL`-instanser, förutom att "
"Python GIL *inte* släpps under funktionsanropet, och efter att funktionen "
"har exekverats kontrolleras Pythons felflagga. Om fel-flaggan är satt, "
"uppstår ett Python-undantag."

#: ../../library/ctypes.rst:1397
msgid "Thus, this is only useful to call Python C api functions directly."
msgstr ""
"Därför är detta endast användbart för att anropa Python C api-funktioner "
"direkt."

#: ../../library/ctypes.rst:1399
msgid ""
"All these classes can be instantiated by calling them with at least one "
"argument, the pathname of the shared library.  If you have an existing "
"handle to an already loaded shared library, it can be passed as the "
"``handle`` named parameter, otherwise the underlying platforms ``dlopen`` or"
" ``LoadLibrary`` function is used to load the library into the process, and "
"to get a handle to it."
msgstr ""

#: ../../library/ctypes.rst:1406
msgid ""
"The *mode* parameter can be used to specify how the library is loaded.  For "
"details, consult the :manpage:`dlopen(3)` manpage.  On Windows, *mode* is "
"ignored.  On posix systems, RTLD_NOW is always added, and is not "
"configurable."
msgstr ""
"Parametern *mode* kan användas för att ange hur biblioteket laddas.  För mer"
" information, se :manpage:`dlopen(3)` manpage.  I Windows ignoreras *mode*."
"  På posix-system läggs RTLD_NOW alltid till och är inte konfigurerbart."

#: ../../library/ctypes.rst:1411
msgid ""
"The *use_errno* parameter, when set to true, enables a ctypes mechanism that"
" allows accessing the system :data:`errno` error number in a safe way. "
":mod:`ctypes` maintains a thread-local copy of the systems :data:`errno` "
"variable; if you call foreign functions created with ``use_errno=True`` then"
" the :data:`errno` value before the function call is swapped with the ctypes"
" private copy, the same happens immediately after the function call."
msgstr ""

#: ../../library/ctypes.rst:1418
msgid ""
"The function :func:`ctypes.get_errno` returns the value of the ctypes "
"private copy, and the function :func:`ctypes.set_errno` changes the ctypes "
"private copy to a new value and returns the former value."
msgstr ""
"Funktionen :func:`ctypes.get_errno` returnerar värdet på den privata kopian "
"av ctypes, och funktionen :func:`ctypes.set_errno` ändrar den privata kopian"
" av ctypes till ett nytt värde och returnerar det tidigare värdet."

#: ../../library/ctypes.rst:1422
msgid ""
"The *use_last_error* parameter, when set to true, enables the same mechanism"
" for the Windows error code which is managed by the :func:`GetLastError` and"
" :func:`SetLastError` Windows API functions; :func:`ctypes.get_last_error` "
"and :func:`ctypes.set_last_error` are used to request and change the ctypes "
"private copy of the windows error code."
msgstr ""

#: ../../library/ctypes.rst:1428
msgid ""
"The *winmode* parameter is used on Windows to specify how the library is "
"loaded (since *mode* is ignored). It takes any value that is valid for the "
"Win32 API ``LoadLibraryEx`` flags parameter. When omitted, the default is to"
" use the flags that result in the most secure DLL load to avoiding issues "
"such as DLL hijacking. Passing the full path to the DLL is the safest way to"
" ensure the correct library and dependencies are loaded."
msgstr ""

#: ../../library/ctypes.rst:1435
msgid "Added *winmode* parameter."
msgstr "Lagt till parametern *winmode*."

#: ../../library/ctypes.rst:1442
msgid ""
"Flag to use as *mode* parameter.  On platforms where this flag is not "
"available, it is defined as the integer zero."
msgstr ""
"Flagga som ska användas som *mode*-parameter.  På plattformar där denna "
"flagga inte är tillgänglig definieras den som heltalet noll."

#: ../../library/ctypes.rst:1449
msgid ""
"Flag to use as *mode* parameter.  On platforms where this is not available, "
"it is the same as *RTLD_GLOBAL*."
msgstr ""
"Flagga att använda som *mode*-parameter.  På plattformar där detta inte är "
"tillgängligt är det samma sak som *RTLD_GLOBAL*."

#: ../../library/ctypes.rst:1456
msgid ""
"The default mode which is used to load shared libraries.  On OSX 10.3, this "
"is *RTLD_GLOBAL*, otherwise it is the same as *RTLD_LOCAL*."
msgstr ""
"Det standardläge som används för att ladda delade bibliotek.  I OSX 10.3 är "
"detta *RTLD_GLOBAL*, annars är det samma som *RTLD_LOCAL*."

#: ../../library/ctypes.rst:1459
msgid ""
"Instances of these classes have no public methods.  Functions exported by "
"the shared library can be accessed as attributes or by index.  Please note "
"that accessing the function through an attribute caches the result and "
"therefore accessing it repeatedly returns the same object each time.  On the"
" other hand, accessing it through an index returns a new object each time::"
msgstr ""
"Instanser av dessa klasser har inga publika metoder.  Funktioner som "
"exporteras av det delade biblioteket kan nås som attribut eller via index.  "
"Observera att om du använder funktionen via ett attribut cachas resultatet "
"och därför returneras samma objekt varje gång om du använder den upprepade "
"gånger.  Å andra sidan returnerar åtkomst via ett index ett nytt objekt "
"varje gång::"

#: ../../library/ctypes.rst:1472
msgid ""
"The following public attributes are available, their name starts with an "
"underscore to not clash with exported function names:"
msgstr ""
"Följande publika attribut finns tillgängliga, deras namn börjar med ett "
"understreck för att inte krocka med exporterade funktionsnamn:"

#: ../../library/ctypes.rst:1478
msgid "The system handle used to access the library."
msgstr "Det systemhandtag som används för att komma åt biblioteket."

#: ../../library/ctypes.rst:1483
msgid "The name of the library passed in the constructor."
msgstr "Namnet på det bibliotek som skickas i konstruktören."

#: ../../library/ctypes.rst:1485
msgid ""
"Shared libraries can also be loaded by using one of the prefabricated "
"objects, which are instances of the :class:`LibraryLoader` class, either by "
"calling the :meth:`LoadLibrary` method, or by retrieving the library as "
"attribute of the loader instance."
msgstr ""

#: ../../library/ctypes.rst:1493
msgid ""
"Class which loads shared libraries.  *dlltype* should be one of the "
":class:`CDLL`, :class:`PyDLL`, :class:`WinDLL`, or :class:`OleDLL` types."
msgstr ""
"Klass som laddar delade bibliotek.  *dlltype* bör vara en av typerna "
":class:`CDLL`, :class:`PyDLL`, :class:`WinDLL` eller :class:`OleDLL`."

#: ../../library/ctypes.rst:1496
msgid ""
":meth:`__getattr__` has special behavior: It allows loading a shared library"
" by accessing it as attribute of a library loader instance.  The result is "
"cached, so repeated attribute accesses return the same library each time."
msgstr ""

#: ../../library/ctypes.rst:1502
msgid ""
"Load a shared library into the process and return it.  This method always "
"returns a new instance of the library."
msgstr ""
"Ladda in ett delat bibliotek i processen och returnera det.  Denna metod "
"returnerar alltid en ny instans av biblioteket."

#: ../../library/ctypes.rst:1506
msgid "These prefabricated library loaders are available:"
msgstr "Dessa prefabricerade bibliotekslastare finns tillgängliga:"

#: ../../library/ctypes.rst:1511
msgid "Creates :class:`CDLL` instances."
msgstr "Skapar :class:`CDLL`-instanser."

#: ../../library/ctypes.rst:1517
msgid "Windows only: Creates :class:`WinDLL` instances."
msgstr ""

#: ../../library/ctypes.rst:1523
msgid "Windows only: Creates :class:`OleDLL` instances."
msgstr ""

#: ../../library/ctypes.rst:1529
msgid "Creates :class:`PyDLL` instances."
msgstr "Skapar :class:`PyDLL`-instanser."

#: ../../library/ctypes.rst:1532
msgid ""
"For accessing the C Python api directly, a ready-to-use Python shared "
"library object is available:"
msgstr ""
"För direkt åtkomst till C Python Api finns ett färdigt Python shared "
"library-objekt tillgängligt:"

#: ../../library/ctypes.rst:1538
msgid ""
"An instance of :class:`PyDLL` that exposes Python C API functions as "
"attributes.  Note that all these functions are assumed to return C "
":c:expr:`int`, which is of course not always the truth, so you have to "
"assign the correct :attr:`restype` attribute to use these functions."
msgstr ""

#: ../../library/ctypes.rst:1543
msgid ""
"Raises an :ref:`auditing event <auditing>` ``ctypes.dlopen`` with argument "
"``name``."
msgstr ""

#: ../../library/ctypes.rst:1545
msgid ""
"Loading a library through any of these objects raises an :ref:`auditing "
"event <auditing>` ``ctypes.dlopen`` with string argument ``name``, the name "
"used to load the library."
msgstr ""
"Att ladda ett bibliotek via något av dessa objekt ger upphov till en "
":ref:`auditing event <auditing>` ``ctypes.dlopen`` med strängargumentet "
"``name``, namnet som används för att ladda biblioteket."

#: ../../library/ctypes.rst:1549
msgid ""
"Raises an :ref:`auditing event <auditing>` ``ctypes.dlsym`` with arguments "
"``library``, ``name``."
msgstr ""

#: ../../library/ctypes.rst:1551
msgid ""
"Accessing a function on a loaded library raises an auditing event "
"``ctypes.dlsym`` with arguments ``library`` (the library object) and "
"``name`` (the symbol's name as a string or integer)."
msgstr ""
"Åtkomst till en funktion i ett laddat bibliotek ger upphov till en "
"granskningshändelse ``ctypes.dlsym`` med argumenten ``library`` "
"(biblioteksobjektet) och ``name`` (symbolens namn som en sträng eller ett "
"heltal)."

#: ../../library/ctypes.rst:1555
msgid ""
"Raises an :ref:`auditing event <auditing>` ``ctypes.dlsym/handle`` with "
"arguments ``handle``, ``name``."
msgstr ""

#: ../../library/ctypes.rst:1557
msgid ""
"In cases when only the library handle is available rather than the object, "
"accessing a function raises an auditing event ``ctypes.dlsym/handle`` with "
"arguments ``handle`` (the raw library handle) and ``name``."
msgstr ""
"I de fall då endast bibliotekshandtaget är tillgängligt i stället för "
"objektet, ger åtkomst till en funktion upphov till en granskningshändelse "
"``ctypes.dlsym/handle`` med argumenten ``handle`` (det råa "
"bibliotekshandtaget) och ``name``."

#: ../../library/ctypes.rst:1564
msgid "Foreign functions"
msgstr "Utländska funktioner"

#: ../../library/ctypes.rst:1566
msgid ""
"As explained in the previous section, foreign functions can be accessed as "
"attributes of loaded shared libraries.  The function objects created in this"
" way by default accept any number of arguments, accept any ctypes data "
"instances as arguments, and return the default result type specified by the "
"library loader. They are instances of a private class:"
msgstr ""

#: ../../library/ctypes.rst:1575
msgid "Base class for C callable foreign functions."
msgstr "Basklass för C-anropsbara utländska funktioner."

#: ../../library/ctypes.rst:1577
msgid ""
"Instances of foreign functions are also C compatible data types; they "
"represent C function pointers."
msgstr ""
"Instanser av utländska funktioner är också C-kompatibla datatyper; de "
"representerar C-funktionspoängare."

#: ../../library/ctypes.rst:1580
msgid ""
"This behavior can be customized by assigning to special attributes of the "
"foreign function object."
msgstr ""
"Detta beteende kan anpassas genom att tilldela speciella attribut till det "
"utländska funktionsobjektet."

#: ../../library/ctypes.rst:1585
msgid ""
"Assign a ctypes type to specify the result type of the foreign function. Use"
" ``None`` for :c:expr:`void`, a function not returning anything."
msgstr ""
"Tilldela en ctypes-typ för att ange resultattypen för den främmande "
"funktionen. Använd ``None`` för :c:expr:`void`, en funktion som inte "
"returnerar någonting."

#: ../../library/ctypes.rst:1588
msgid ""
"It is possible to assign a callable Python object that is not a ctypes type,"
" in this case the function is assumed to return a C :c:expr:`int`, and the "
"callable will be called with this integer, allowing further processing or "
"error checking.  Using this is deprecated, for more flexible post processing"
" or error checking use a ctypes data type as :attr:`restype` and assign a "
"callable to the :attr:`errcheck` attribute."
msgstr ""

#: ../../library/ctypes.rst:1597
msgid ""
"Assign a tuple of ctypes types to specify the argument types that the "
"function accepts.  Functions using the ``stdcall`` calling convention can "
"only be called with the same number of arguments as the length of this "
"tuple; functions using the C calling convention accept additional, "
"unspecified arguments as well."
msgstr ""
"Tilldela en tupel av ctypes-typer för att ange de argumenttyper som "
"funktionen accepterar.  Funktioner som använder anropskonventionen "
"``stdcall`` kan bara anropas med samma antal argument som längden på denna "
"tupel; funktioner som använder anropskonventionen C accepterar även "
"ytterligare, ospecificerade argument."

#: ../../library/ctypes.rst:1603
msgid ""
"When a foreign function is called, each actual argument is passed to the "
":meth:`from_param` class method of the items in the :attr:`argtypes` tuple, "
"this method allows adapting the actual argument to an object that the "
"foreign function accepts.  For example, a :class:`c_char_p` item in the "
":attr:`argtypes` tuple will convert a string passed as argument into a bytes"
" object using ctypes conversion rules."
msgstr ""

#: ../../library/ctypes.rst:1610
msgid ""
"New: It is now possible to put items in argtypes which are not ctypes types,"
" but each item must have a :meth:`from_param` method which returns a value "
"usable as argument (integer, string, ctypes instance).  This allows defining"
" adapters that can adapt custom objects as function parameters."
msgstr ""

#: ../../library/ctypes.rst:1617
msgid ""
"Assign a Python function or another callable to this attribute. The callable"
" will be called with three or more arguments:"
msgstr ""
"Tilldela en Python-funktion eller en annan anropbar funktion till detta "
"attribut. Den anropsbara funktionen kommer att anropas med tre eller fler "
"argument:"

#: ../../library/ctypes.rst:1624
msgid ""
"*result* is what the foreign function returns, as specified by the "
":attr:`restype` attribute."
msgstr ""

#: ../../library/ctypes.rst:1627
msgid ""
"*func* is the foreign function object itself, this allows reusing the same "
"callable object to check or post process the results of several functions."
msgstr ""
"*func* är själva det främmande funktionsobjektet, vilket gör det möjligt att"
" återanvända samma anropsbara objekt för att kontrollera eller efterbehandla"
" resultaten av flera funktioner."

#: ../../library/ctypes.rst:1631
msgid ""
"*arguments* is a tuple containing the parameters originally passed to the "
"function call, this allows specializing the behavior on the arguments used."
msgstr ""
"*arguments* är en tupel som innehåller de parametrar som ursprungligen "
"skickades till funktionsanropet, vilket gör det möjligt att specialisera "
"beteendet på de argument som används."

#: ../../library/ctypes.rst:1635
msgid ""
"The object that this function returns will be returned from the foreign "
"function call, but it can also check the result value and raise an exception"
" if the foreign function call failed."
msgstr ""
"Det objekt som den här funktionen returnerar kommer att returneras från det "
"utländska funktionsanropet, men den kan också kontrollera resultatvärdet och"
" skapa ett undantag om det utländska funktionsanropet misslyckades."

#: ../../library/ctypes.rst:1642
msgid ""
"This exception is raised when a foreign function call cannot convert one of "
"the passed arguments."
msgstr ""
"Detta undantag uppstår när ett anrop av en utländsk funktion inte kan "
"konvertera ett av de passerade argumenten."

#: ../../library/ctypes.rst:1646
msgid ""
"Raises an :ref:`auditing event <auditing>` ``ctypes.seh_exception`` with "
"argument ``code``."
msgstr ""

#: ../../library/ctypes.rst:1648
msgid ""
"On Windows, when a foreign function call raises a system exception (for "
"example, due to an access violation), it will be captured and replaced with "
"a suitable Python exception. Further, an auditing event "
"``ctypes.seh_exception`` with argument ``code`` will be raised, allowing an "
"audit hook to replace the exception with its own."
msgstr ""

#: ../../library/ctypes.rst:1654
msgid ""
"Raises an :ref:`auditing event <auditing>` ``ctypes.call_function`` with "
"arguments ``func_pointer``, ``arguments``."
msgstr ""

#: ../../library/ctypes.rst:1656
msgid ""
"Some ways to invoke foreign function calls may raise an auditing event "
"``ctypes.call_function`` with arguments ``function pointer`` and "
"``arguments``."
msgstr ""

#: ../../library/ctypes.rst:1662
msgid "Function prototypes"
msgstr "Prototyper av funktioner"

#: ../../library/ctypes.rst:1664
msgid ""
"Foreign functions can also be created by instantiating function prototypes. "
"Function prototypes are similar to function prototypes in C; they describe a"
" function (return type, argument types, calling convention) without defining"
" an implementation.  The factory functions must be called with the desired "
"result type and the argument types of the function, and can be used as "
"decorator factories, and as such, be applied to functions through the "
"``@wrapper`` syntax. See :ref:`ctypes-callback-functions` for examples."
msgstr ""
"Utländska funktioner kan också skapas genom instansiering av "
"funktionsprototyper. Funktionsprototyper liknar funktionsprototyper i C; de "
"beskriver en funktion (returtyp, argumenttyper, anropskonvention) utan att "
"definiera en implementation.  Fabriksfunktionerna måste anropas med önskad "
"resultattyp och funktionens argumenttyper och kan användas som "
"dekoratorfabriker och som sådana tillämpas på funktioner genom syntaxen "
"``@wrapper``. Se :ref:`ctypes-callback-functions` för exempel."

#: ../../library/ctypes.rst:1675
msgid ""
"The returned function prototype creates functions that use the standard C "
"calling convention.  The function will release the GIL during the call.  If "
"*use_errno* is set to true, the ctypes private copy of the system "
":data:`errno` variable is exchanged with the real :data:`errno` value before"
" and after the call; *use_last_error* does the same for the Windows error "
"code."
msgstr ""
"Den returnerade funktionsprototypen skapar funktioner som använder C:s "
"standardkonvention för anrop.  Funktionen kommer att frigöra GIL under "
"anropet.  Om *use_errno* är satt till true, kommer ctypes privata kopia av "
"systemvariabeln :data:`errno` att bytas ut mot det verkliga värdet för "
":data:`errno` före och efter anropet; *use_last_error* gör samma sak för "
"Windows felkod."

#: ../../library/ctypes.rst:1685
msgid ""
"Windows only: The returned function prototype creates functions that use the"
" ``stdcall`` calling convention.  The function will release the GIL during "
"the call.  *use_errno* and *use_last_error* have the same meaning as above."
msgstr ""

#: ../../library/ctypes.rst:1693
msgid ""
"The returned function prototype creates functions that use the Python "
"calling convention.  The function will *not* release the GIL during the "
"call."
msgstr ""
"Den returnerade funktionsprototypen skapar funktioner som använder Pythons "
"anropskonvention.  Funktionen kommer *inte* att frigöra GIL under anropet."

#: ../../library/ctypes.rst:1696
msgid ""
"Function prototypes created by these factory functions can be instantiated "
"in different ways, depending on the type and number of the parameters in the"
" call:"
msgstr ""
"Funktionsprototyper som skapas av dessa fabriksfunktioner kan instansieras "
"på olika sätt, beroende på typen och antalet parametrar i anropet:"

#: ../../library/ctypes.rst:1703
msgid ""
"Returns a foreign function at the specified address which must be an "
"integer."
msgstr ""
"Returnerar en utländsk funktion på den angivna adressen som måste vara ett "
"heltal."

#: ../../library/ctypes.rst:1710
msgid ""
"Create a C callable function (a callback function) from a Python *callable*."
msgstr ""
"Skapa en anropsbar C-funktion (en callback-funktion) från en Python "
"*callable*."

#: ../../library/ctypes.rst:1717
msgid ""
"Returns a foreign function exported by a shared library. *func_spec* must be"
" a 2-tuple ``(name_or_ordinal, library)``. The first item is the name of the"
" exported function as string, or the ordinal of the exported function as "
"small integer.  The second item is the shared library instance."
msgstr ""
"Returnerar en utländsk funktion som exporteras av ett delat bibliotek. "
"*func_spec* måste vara en 2-tupel ``(name_or_ordinal, library)``. Det första"
" elementet är namnet på den exporterade funktionen som en sträng, eller den "
"exporterade funktionens ordinal som ett litet heltal.  Det andra elementet "
"är den delade biblioteksinstansen."

#: ../../library/ctypes.rst:1727
msgid ""
"Returns a foreign function that will call a COM method. *vtbl_index* is the "
"index into the virtual function table, a small non-negative integer. *name* "
"is name of the COM method. *iid* is an optional pointer to the interface "
"identifier which is used in extended error reporting."
msgstr ""
"Returnerar en utländsk funktion som anropar en COM-metod. *vtbl_index* är "
"index i den virtuella funktionstabellen, ett litet icke-negativt heltal. "
"*name* är namnet på COM-metoden. *iid* är en valfri pekare till "
"gränssnittsidentifieraren som används vid utökad felrapportering."

#: ../../library/ctypes.rst:1732
msgid ""
"COM methods use a special calling convention: They require a pointer to the "
"COM interface as first argument, in addition to those parameters that are "
"specified in the :attr:`!argtypes` tuple."
msgstr ""
"COM-metoder använder en speciell anropskonvention: De kräver en pekare till "
"COM-gränssnittet som första argument, utöver de parametrar som anges i "
":attr:`!argtypes`-tupeln."

#: ../../library/ctypes.rst:1736
msgid ""
"The optional *paramflags* parameter creates foreign function wrappers with "
"much more functionality than the features described above."
msgstr ""
"Den valfria parametern *paramflags* skapar omslag för utländska funktioner "
"med mycket mer funktionalitet än de funktioner som beskrivs ovan."

#: ../../library/ctypes.rst:1739
msgid ""
"*paramflags* must be a tuple of the same length as "
":attr:`~_FuncPtr.argtypes`."
msgstr ""

#: ../../library/ctypes.rst:1741
msgid ""
"Each item in this tuple contains further information about a parameter, it "
"must be a tuple containing one, two, or three items."
msgstr ""
"Varje objekt i denna tupel innehåller ytterligare information om en "
"parameter, det måste vara en tupel som innehåller ett, två eller tre objekt."

#: ../../library/ctypes.rst:1744
msgid ""
"The first item is an integer containing a combination of direction flags for"
" the parameter:"
msgstr ""
"Den första posten är ett heltal som innehåller en kombination av "
"riktningsflaggor för parametern:"

#: ../../library/ctypes.rst:1748
msgid "1"
msgstr "1"

#: ../../library/ctypes.rst:1748
msgid "Specifies an input parameter to the function."
msgstr "Anger en inparameter till funktionen."

#: ../../library/ctypes.rst:1751
msgid "2"
msgstr "2"

#: ../../library/ctypes.rst:1751
msgid "Output parameter.  The foreign function fills in a value."
msgstr "Parameter för utdata.  Den utländska funktionen fyller i ett värde."

#: ../../library/ctypes.rst:1754
msgid "4"
msgstr "4"

#: ../../library/ctypes.rst:1754
msgid "Input parameter which defaults to the integer zero."
msgstr "Inmatningsparameter som som standard är heltalet noll."

#: ../../library/ctypes.rst:1756
msgid ""
"The optional second item is the parameter name as string.  If this is "
"specified, the foreign function can be called with named parameters."
msgstr ""
"Den andra valfria posten är parameternamnet som en sträng.  Om detta anges "
"kan den utländska funktionen anropas med namngivna parametrar."

#: ../../library/ctypes.rst:1759
msgid "The optional third item is the default value for this parameter."
msgstr "Den valfria tredje posten är standardvärdet för denna parameter."

#: ../../library/ctypes.rst:1762
msgid ""
"The following example demonstrates how to wrap the Windows ``MessageBoxW`` "
"function so that it supports default parameters and named arguments. The C "
"declaration from the windows header file is this::"
msgstr ""
"Följande exempel visar hur man slår in Windows ``MessageBoxW``-funktionen så"
" att den stöder standardparametrar och namngivna argument. C-deklarationen "
"från Windows header-fil är denna::"

#: ../../library/ctypes.rst:1773 ../../library/ctypes.rst:1796
msgid "Here is the wrapping with :mod:`ctypes`::"
msgstr "Här är förpackningen med :mod:`ctypes`::"

#: ../../library/ctypes.rst:1781
msgid "The ``MessageBox`` foreign function can now be called in these ways::"
msgstr ""
"Den utländska funktionen ``MessageBox`` kan nu anropas på följande sätt::"

#: ../../library/ctypes.rst:1787
msgid ""
"A second example demonstrates output parameters.  The win32 "
"``GetWindowRect`` function retrieves the dimensions of a specified window by"
" copying them into ``RECT`` structure that the caller has to supply.  Here "
"is the C declaration::"
msgstr ""
"Ett andra exempel demonstrerar utdataparametrar.  Win32-funktionen "
"``GetWindowRect`` hämtar dimensionerna för ett angivet fönster genom att "
"kopiera dem till ``RECT``-strukturen som anroparen måste tillhandahålla.  "
"Här är C-deklarationen::"

#: ../../library/ctypes.rst:1805
msgid ""
"Functions with output parameters will automatically return the output "
"parameter value if there is a single one, or a tuple containing the output "
"parameter values when there are more than one, so the GetWindowRect function"
" now returns a RECT instance, when called."
msgstr ""
"Funktioner med utparametrar returnerar automatiskt utparametervärdet om det "
"finns ett enda, eller en tupel som innehåller utparametervärdena om det "
"finns fler än ett, så funktionen GetWindowRect returnerar nu en RECT-instans"
" när den anropas."

#: ../../library/ctypes.rst:1810
msgid ""
"Output parameters can be combined with the :attr:`errcheck` protocol to do "
"further output processing and error checking.  The win32 ``GetWindowRect`` "
"api function returns a ``BOOL`` to signal success or failure, so this "
"function could do the error checking, and raises an exception when the api "
"call failed::"
msgstr ""

#: ../../library/ctypes.rst:1823
msgid ""
"If the :attr:`errcheck` function returns the argument tuple it receives "
"unchanged, :mod:`ctypes` continues the normal processing it does on the "
"output parameters.  If you want to return a tuple of window coordinates "
"instead of a ``RECT`` instance, you can retrieve the fields in the function "
"and return them instead, the normal processing will no longer take place::"
msgstr ""

#: ../../library/ctypes.rst:1842
msgid "Utility functions"
msgstr "Verktygsfunktioner"

#: ../../library/ctypes.rst:1846
msgid ""
"Returns the address of the memory buffer as integer.  *obj* must be an "
"instance of a ctypes type."
msgstr ""
"Returnerar minnesbuffertens adress som heltal.  *obj* måste vara en instans "
"av en ctypes-typ."

#: ../../library/ctypes.rst:1849
msgid ""
"Raises an :ref:`auditing event <auditing>` ``ctypes.addressof`` with "
"argument ``obj``."
msgstr ""
"Utlöser en :ref:`auditing event <auditing>` ``ctypes.addressof`` med "
"argumentet ``obj``."

#: ../../library/ctypes.rst:1854
msgid ""
"Returns the alignment requirements of a ctypes type. *obj_or_type* must be a"
" ctypes type or instance."
msgstr ""
"Returnerar anpassningskraven för en ctypes-typ. *obj_or_type* måste vara en "
"ctypes-typ eller -instans."

#: ../../library/ctypes.rst:1860
msgid ""
"Returns a light-weight pointer to *obj*, which must be an instance of a "
"ctypes type.  *offset* defaults to zero, and must be an integer that will be"
" added to the internal pointer value."
msgstr ""
"Returnerar en lättviktspekare till *obj*, som måste vara en instans av en "
"ctypes-typ.  *offset* är som standard noll och måste vara ett heltal som "
"läggs till det interna pekarvärdet."

#: ../../library/ctypes.rst:1864
msgid "``byref(obj, offset)`` corresponds to this C code::"
msgstr "``byref(obj, offset)`` motsvarar denna C-kod::"

#: ../../library/ctypes.rst:1868
msgid ""
"The returned object can only be used as a foreign function call parameter. "
"It behaves similar to ``pointer(obj)``, but the construction is a lot "
"faster."
msgstr ""
"Det returnerade objektet kan endast användas som en parameter i ett "
"främmande funktionsanrop. Det fungerar på samma sätt som ``pointer(obj)``, "
"men konstruktionen är mycket snabbare."

#: ../../library/ctypes.rst:1874
msgid ""
"This function is similar to the cast operator in C. It returns a new "
"instance of *type* which points to the same memory block as *obj*.  *type* "
"must be a pointer type, and *obj* must be an object that can be interpreted "
"as a pointer."
msgstr ""
"Denna funktion liknar cast-operatorn i C. Den returnerar en ny instans av "
"*type* som pekar på samma minnesblock som *obj*.  *typ* måste vara en "
"pekartyp och *obj* måste vara ett objekt som kan tolkas som en pekare."

#: ../../library/ctypes.rst:1882
msgid ""
"This function creates a mutable character buffer. The returned object is a "
"ctypes array of :class:`c_char`."
msgstr ""
"Denna funktion skapar en föränderlig teckenbuffert. Det returnerade objektet"
" är en ctypes-array av :class:`c_char`."

#: ../../library/ctypes.rst:1885
msgid ""
"*init_or_size* must be an integer which specifies the size of the array, or "
"a bytes object which will be used to initialize the array items."
msgstr ""

#: ../../library/ctypes.rst:1888
msgid ""
"If a bytes object is specified as first argument, the buffer is made one "
"item larger than its length so that the last element in the array is a NUL "
"termination character. An integer can be passed as second argument which "
"allows specifying the size of the array if the length of the bytes should "
"not be used."
msgstr ""

#: ../../library/ctypes.rst:1893
msgid ""
"Raises an :ref:`auditing event <auditing>` ``ctypes.create_string_buffer`` "
"with arguments ``init``, ``size``."
msgstr ""
"Utlöser en :ref:`auditing event <auditing>` ``ctypes.create_string_buffer`` "
"med argumenten ``init``, ``size``."

#: ../../library/ctypes.rst:1898
msgid ""
"This function creates a mutable unicode character buffer. The returned "
"object is a ctypes array of :class:`c_wchar`."
msgstr ""
"Denna funktion skapar en mutabel unicode-teckenbuffert. Det returnerade "
"objektet är en ctypes-array av :class:`c_wchar`."

#: ../../library/ctypes.rst:1901
msgid ""
"*init_or_size* must be an integer which specifies the size of the array, or "
"a string which will be used to initialize the array items."
msgstr ""

#: ../../library/ctypes.rst:1904
msgid ""
"If a string is specified as first argument, the buffer is made one item "
"larger than the length of the string so that the last element in the array "
"is a NUL termination character. An integer can be passed as second argument "
"which allows specifying the size of the array if the length of the string "
"should not be used."
msgstr ""

#: ../../library/ctypes.rst:1910
msgid ""
"Raises an :ref:`auditing event <auditing>` ``ctypes.create_unicode_buffer`` "
"with arguments ``init``, ``size``."
msgstr ""
"Utlöser en :ref:`auditing event <auditing>` ``ctypes.create_unicode_buffer``"
" med argumenten ``init``, ``size``."

#: ../../library/ctypes.rst:1915
msgid ""
"Windows only: This function is a hook which allows implementing in-process "
"COM servers with ctypes.  It is called from the DllCanUnloadNow function "
"that the _ctypes extension dll exports."
msgstr ""

#: ../../library/ctypes.rst:1922
msgid ""
"Windows only: This function is a hook which allows implementing in-process "
"COM servers with ctypes.  It is called from the DllGetClassObject function "
"that the ``_ctypes`` extension dll exports."
msgstr ""

#: ../../library/ctypes.rst:1930
msgid ""
"Try to find a library and return a pathname.  *name* is the library name "
"without any prefix like ``lib``, suffix like ``.so``, ``.dylib`` or version "
"number (this is the form used for the posix linker option :option:`!-l`).  "
"If no library can be found, returns ``None``."
msgstr ""
"Försöker hitta ett bibliotek och returnerar ett sökvägsnamn.  *name* är "
"biblioteksnamnet utan något prefix som ``lib``, suffix som ``.so``, "
"``.dylib`` eller versionsnummer (detta är den form som används för posix-"
"länkaralternativet :option:`!-l`).  Om inget bibliotek kan hittas returneras"
" ``None``."

#: ../../library/ctypes.rst:1941
msgid ""
"Windows only: return the filename of the VC runtime library used by Python, "
"and by the extension modules.  If the name of the library cannot be "
"determined, ``None`` is returned."
msgstr ""

#: ../../library/ctypes.rst:1945
msgid ""
"If you need to free memory, for example, allocated by an extension module "
"with a call to the ``free(void *)``, it is important that you use the "
"function in the same library that allocated the memory."
msgstr ""
"Om du behöver frigöra minne, t.ex. minne som har allokerats av en "
"tilläggsmodul med ett anrop till funktionen ``free(void *)``, är det viktigt"
" att du använder funktionen i samma bibliotek som allokerade minnet."

#: ../../library/ctypes.rst:1952
msgid ""
"Windows only: Returns a textual description of the error code *code*.  If no"
" error code is specified, the last error code is used by calling the Windows"
" api function GetLastError."
msgstr ""

#: ../../library/ctypes.rst:1959
msgid ""
"Windows only: Returns the last error code set by Windows in the calling "
"thread. This function calls the Windows ``GetLastError()`` function "
"directly, it does not return the ctypes-private copy of the error code."
msgstr ""

#: ../../library/ctypes.rst:1965
msgid ""
"Returns the current value of the ctypes-private copy of the system "
":data:`errno` variable in the calling thread."
msgstr ""
"Returnerar det aktuella värdet av den ctypes-privata kopian av "
"systemvariabeln :data:`errno` i den anropande tråden."

#: ../../library/ctypes.rst:1968
msgid ""
"Raises an :ref:`auditing event <auditing>` ``ctypes.get_errno`` with no "
"arguments."
msgstr ""
"Utlöser en :ref:`auditing event <auditing>` ``ctypes.get_errno`` utan "
"argument."

#: ../../library/ctypes.rst:1972
msgid ""
"Windows only: returns the current value of the ctypes-private copy of the "
"system :data:`LastError` variable in the calling thread."
msgstr ""

#: ../../library/ctypes.rst:1975
msgid ""
"Raises an :ref:`auditing event <auditing>` ``ctypes.get_last_error`` with no"
" arguments."
msgstr ""
"Utlöser en :ref:`auditing event <auditing>` ``ctypes.get_last_error`` utan "
"argument."

#: ../../library/ctypes.rst:1979
msgid ""
"Same as the standard C memmove library function: copies *count* bytes from "
"*src* to *dst*. *dst* and *src* must be integers or ctypes instances that "
"can be converted to pointers."
msgstr ""
"Samma som standard C memmove biblioteksfunktionen: kopierar *count* bytes "
"från *src* till *dst*. *dst* och *src* måste vara heltal eller ctypes-"
"instanser som kan konverteras till pekare."

#: ../../library/ctypes.rst:1986
msgid ""
"Same as the standard C memset library function: fills the memory block at "
"address *dst* with *count* bytes of value *c*. *dst* must be an integer "
"specifying an address, or a ctypes instance."
msgstr ""
"Samma som standardfunktionen memset i C-biblioteket: fyller minnesblocket på"
" adress *dst* med *count* byte av värdet *c*. *dst* måste vara ett heltal "
"som anger en adress, eller en ctypes-instans."

#: ../../library/ctypes.rst:1993
msgid ""
"Create and return a new ctypes pointer type. Pointer types are cached and "
"reused internally, so calling this function repeatedly is cheap. *type* must"
" be a ctypes type."
msgstr ""

#: ../../library/ctypes.rst:2000
msgid ""
"Create a new pointer instance, pointing to *obj*. The returned object is of "
"the type ``POINTER(type(obj))``."
msgstr ""
"Skapa en ny pekarinstans som pekar på *obj*. Det returnerade objektet är av "
"typen ``POINTER(type(obj))``."

#: ../../library/ctypes.rst:2003
msgid ""
"Note: If you just want to pass a pointer to an object to a foreign function "
"call, you should use ``byref(obj)`` which is much faster."
msgstr ""
"Observera: Om du bara vill skicka en pekare till ett objekt till ett "
"främmande funktionsanrop bör du använda ``byref(obj)`` som är mycket "
"snabbare."

#: ../../library/ctypes.rst:2009
msgid ""
"This function resizes the internal memory buffer of *obj*, which must be an "
"instance of a ctypes type.  It is not possible to make the buffer smaller "
"than the native size of the objects type, as given by ``sizeof(type(obj))``,"
" but it is possible to enlarge the buffer."
msgstr ""
"Den här funktionen ändrar storleken på internminnesbufferten för *obj*, som "
"måste vara en instans av en ctypes-typ.  Det är inte möjligt att göra "
"bufferten mindre än den ursprungliga storleken för objekttypen, som anges av"
" ``sizeof(type(obj))``, men det är möjligt att förstora bufferten."

#: ../../library/ctypes.rst:2017
msgid ""
"Set the current value of the ctypes-private copy of the system :data:`errno`"
" variable in the calling thread to *value* and return the previous value."
msgstr ""
"Ställ in det aktuella värdet för den ctypes-privata kopian av "
"systemvariabeln :data:`errno` i den anropande tråden till *värde* och "
"returnera det tidigare värdet."

#: ../../library/ctypes.rst:2020
msgid ""
"Raises an :ref:`auditing event <auditing>` ``ctypes.set_errno`` with "
"argument ``errno``."
msgstr ""
"Utlöser en :ref:`auditing event <auditing>` ``ctypes.set_errno`` med "
"argumentet ``errno``."

#: ../../library/ctypes.rst:2025
msgid ""
"Windows only: set the current value of the ctypes-private copy of the system"
" :data:`LastError` variable in the calling thread to *value* and return the "
"previous value."
msgstr ""

#: ../../library/ctypes.rst:2029
msgid ""
"Raises an :ref:`auditing event <auditing>` ``ctypes.set_last_error`` with "
"argument ``error``."
msgstr ""
"Utlöser en :ref:`auditing event <auditing>` ``ctypes.set_last_error`` med "
"argumentet ``error``."

#: ../../library/ctypes.rst:2034
msgid ""
"Returns the size in bytes of a ctypes type or instance memory buffer. Does "
"the same as the C ``sizeof`` operator."
msgstr ""
"Returnerar storleken i byte på en minnesbuffert för en ctypes-typ eller "
"instans. Gör samma sak som C-operatorn ``sizeof``."

#: ../../library/ctypes.rst:2040
msgid ""
"This function returns the C string starting at memory address *address* as a"
" bytes object. If size is specified, it is used as size, otherwise the "
"string is assumed to be zero-terminated."
msgstr ""

#: ../../library/ctypes.rst:2044
msgid ""
"Raises an :ref:`auditing event <auditing>` ``ctypes.string_at`` with "
"arguments ``address``, ``size``."
msgstr ""

#: ../../library/ctypes.rst:2049
msgid ""
"Windows only: this function is probably the worst-named thing in ctypes. It "
"creates an instance of :exc:`OSError`.  If *code* is not specified, "
"``GetLastError`` is called to determine the error code. If *descr* is not "
"specified, :func:`FormatError` is called to get a textual description of the"
" error."
msgstr ""

#: ../../library/ctypes.rst:2055
msgid ""
"An instance of :exc:`WindowsError` used to be created, which is now an alias"
" of :exc:`OSError`."
msgstr ""
"Tidigare skapades en instans av :exc:`WindowsError`, som nu är ett alias av "
":exc:`OSError`."

#: ../../library/ctypes.rst:2062
msgid ""
"This function returns the wide character string starting at memory address "
"*address* as a string.  If *size* is specified, it is used as the number of "
"characters of the string, otherwise the string is assumed to be zero-"
"terminated."
msgstr ""

#: ../../library/ctypes.rst:2067
msgid ""
"Raises an :ref:`auditing event <auditing>` ``ctypes.wstring_at`` with "
"arguments ``address``, ``size``."
msgstr ""

#: ../../library/ctypes.rst:2073
msgid "Data types"
msgstr "Datatyper"

#: ../../library/ctypes.rst:2078
msgid ""
"This non-public class is the common base class of all ctypes data types. "
"Among other things, all ctypes type instances contain a memory block that "
"hold C compatible data; the address of the memory block is returned by the "
":func:`addressof` helper function. Another instance variable is exposed as "
":attr:`_objects`; this contains other Python objects that need to be kept "
"alive in case the memory block contains pointers."
msgstr ""
"Denna icke-offentliga klass är den gemensamma basklassen för alla ctypes-"
"datatyper. Bland annat innehåller alla instanser av ctypes-typen ett "
"minnesblock som innehåller C-kompatibla data; adressen till minnesblocket "
"returneras av hjälpfunktionen :func:`addressof`. En annan instansvariabel "
"exponeras som :attr:`_objects`; denna innehåller andra Python-objekt som "
"måste hållas vid liv ifall minnesblocket innehåller pekare."

#: ../../library/ctypes.rst:2085
msgid ""
"Common methods of ctypes data types, these are all class methods (to be "
"exact, they are methods of the :term:`metaclass`):"
msgstr ""
"Vanliga metoder för ctypes-datatyper, dessa är alla klassmetoder (för att "
"vara exakt är de metoder för :term:`metaclass`):"

#: ../../library/ctypes.rst:2090
msgid ""
"This method returns a ctypes instance that shares the buffer of the *source*"
" object.  The *source* object must support the writeable buffer interface.  "
"The optional *offset* parameter specifies an offset into the source buffer "
"in bytes; the default is zero.  If the source buffer is not large enough a "
":exc:`ValueError` is raised."
msgstr ""
"Denna metod returnerar en ctypes-instans som delar buffert med "
"*käll*-objektet.  Objektet *källa* måste stödja gränssnittet för skrivbar "
"buffert.  Den valfria parametern *offset* anger en förskjutning i "
"källbufferten i byte; standardvärdet är noll.  Om källbufferten inte är "
"tillräckligt stor uppstår ett :exc:`ValueError`."

#: ../../library/ctypes.rst:2096 ../../library/ctypes.rst:2106
msgid ""
"Raises an :ref:`auditing event <auditing>` ``ctypes.cdata/buffer`` with "
"arguments ``pointer``, ``size``, ``offset``."
msgstr ""
"Utlöser en :ref:`auditing event <auditing>` ``ctypes.cdata/buffer`` med "
"argumenten ``pointer``, ``size``, ``offset``."

#: ../../library/ctypes.rst:2100
msgid ""
"This method creates a ctypes instance, copying the buffer from the *source* "
"object buffer which must be readable.  The optional *offset* parameter "
"specifies an offset into the source buffer in bytes; the default is zero.  "
"If the source buffer is not large enough a :exc:`ValueError` is raised."
msgstr ""
"Denna metod skapar en ctypes-instans genom att kopiera bufferten från "
"*källans* objektbuffert som måste vara läsbar.  Den valfria parametern "
"*offset* anger en förskjutning i källbufferten i byte; standardvärdet är "
"noll.  Om källbufferten inte är tillräckligt stor uppstår ett "
":exc:`ValueError`."

#: ../../library/ctypes.rst:2110
msgid ""
"This method returns a ctypes type instance using the memory specified by "
"*address* which must be an integer."
msgstr ""
"Den här metoden returnerar en ctypes-typinstans som använder det minne som "
"anges av *address*, som måste vara ett heltal."

#: ../../library/ctypes.rst:2113
msgid ""
"Raises an :ref:`auditing event <auditing>` ``ctypes.cdata`` with argument "
"``address``."
msgstr ""

#: ../../library/ctypes.rst:2115
msgid ""
"This method, and others that indirectly call this method, raises an "
":ref:`auditing event <auditing>` ``ctypes.cdata`` with argument ``address``."
msgstr ""
"Denna metod, och andra som indirekt anropar denna metod, ger upphov till en "
":ref:``auditing event <auditing>``ctypes.cdata`` med argumentet ``address``."

#: ../../library/ctypes.rst:2121
msgid ""
"This method adapts *obj* to a ctypes type.  It is called with the actual "
"object used in a foreign function call when the type is present in the "
"foreign function's :attr:`argtypes` tuple; it must return an object that can"
" be used as a function call parameter."
msgstr ""

#: ../../library/ctypes.rst:2126
msgid ""
"All ctypes data types have a default implementation of this classmethod that"
" normally returns *obj* if that is an instance of the type.  Some types "
"accept other objects as well."
msgstr ""
"Alla ctypes-datatyper har en standardimplementering av denna classmethod som"
" normalt returnerar *obj* om det är en instans av typen.  Vissa typer "
"accepterar även andra objekt."

#: ../../library/ctypes.rst:2132
msgid ""
"This method returns a ctypes type instance exported by a shared library. "
"*name* is the name of the symbol that exports the data, *library* is the "
"loaded shared library."
msgstr ""
"Denna metod returnerar en ctypes-typinstans som exporteras av ett delat "
"bibliotek. *name* är namnet på den symbol som exporterar data, *library* är "
"det laddade delade biblioteket."

#: ../../library/ctypes.rst:2136
msgid "Common instance variables of ctypes data types:"
msgstr "Vanliga instansvariabler för ctypes datatyper:"

#: ../../library/ctypes.rst:2140
msgid ""
"Sometimes ctypes data instances do not own the memory block they contain, "
"instead they share part of the memory block of a base object.  The "
":attr:`_b_base_` read-only member is the root ctypes object that owns the "
"memory block."
msgstr ""
"Ibland äger inte ctypes-datainstanser det minnesblock de innehåller, utan de"
" delar istället en del av minnesblocket för ett basobjekt.  Den "
"skrivskyddade medlemmen :attr:`_b_base_` är det rot-ctypes-objekt som äger "
"minnesblocket."

#: ../../library/ctypes.rst:2147
msgid ""
"This read-only variable is true when the ctypes data instance has allocated "
"the memory block itself, false otherwise."
msgstr ""
"Denna skrivskyddade variabel är sann när ctypes-datainstansen har allokerat "
"minnesblocket själv, annars falsk."

#: ../../library/ctypes.rst:2152
msgid ""
"This member is either ``None`` or a dictionary containing Python objects "
"that need to be kept alive so that the memory block contents is kept valid."
"  This object is only exposed for debugging; never modify the contents of "
"this dictionary."
msgstr ""
"Denna medlem är antingen ``None`` eller en ordbok som innehåller Python-"
"objekt som måste hållas vid liv så att minnesblockets innehåll hålls "
"giltigt.  Detta objekt är endast exponerat för felsökning; ändra aldrig "
"innehållet i denna ordbok."

#: ../../library/ctypes.rst:2165
msgid ""
"This non-public class is the base class of all fundamental ctypes data "
"types. It is mentioned here because it contains the common attributes of the"
" fundamental ctypes data types.  :class:`_SimpleCData` is a subclass of "
":class:`_CData`, so it inherits their methods and attributes. ctypes data "
"types that are not and do not contain pointers can now be pickled."
msgstr ""
"Denna icke-offentliga klass är basklass för alla grundläggande ctypes-"
"datatyper. Den nämns här eftersom den innehåller de gemensamma attributen "
"för de grundläggande ctypes-datatyperna. :class:`_SimpleCData` är en "
"underklass till :class:`_CData`, så den ärver deras metoder och attribut. "
"ctypes-datatyper som inte är och inte innehåller pekare kan nu picklas."

#: ../../library/ctypes.rst:2171
msgid "Instances have a single attribute:"
msgstr "Instanser har ett enda attribut:"

#: ../../library/ctypes.rst:2175
msgid ""
"This attribute contains the actual value of the instance. For integer and "
"pointer types, it is an integer, for character types, it is a single "
"character bytes object or string, for character pointer types it is a Python"
" bytes object or string."
msgstr ""
"Detta attribut innehåller det faktiska värdet för instansen. För heltals- "
"och pekartyper är det ett heltal, för teckentyper är det ett objekt eller en"
" sträng med enstaka teckenbytes, för teckenspekartyper är det ett objekt "
"eller en sträng med Python-bytes."

#: ../../library/ctypes.rst:2180
msgid ""
"When the ``value`` attribute is retrieved from a ctypes instance, usually a "
"new object is returned each time.  :mod:`ctypes` does *not* implement "
"original object return, always a new object is constructed.  The same is "
"true for all other ctypes object instances."
msgstr ""
"När attributet ``value`` hämtas från en ctypes-instans returneras vanligtvis"
" ett nytt objekt varje gång. :mod:`ctypes` implementerar *inte* "
"originalobjektretur, alltid konstrueras ett nytt objekt.  Detsamma gäller "
"för alla andra ctypes-objektinstanser."

#: ../../library/ctypes.rst:2186
msgid ""
"Fundamental data types, when returned as foreign function call results, or, "
"for example, by retrieving structure field members or array items, are "
"transparently converted to native Python types.  In other words, if a "
"foreign function has a :attr:`restype` of :class:`c_char_p`, you will always"
" receive a Python bytes object, *not* a :class:`c_char_p` instance."
msgstr ""

#: ../../library/ctypes.rst:2194
msgid ""
"Subclasses of fundamental data types do *not* inherit this behavior. So, if "
"a foreign functions :attr:`restype` is a subclass of :class:`c_void_p`, you "
"will receive an instance of this subclass from the function call. Of course,"
" you can get the value of the pointer by accessing the ``value`` attribute."
msgstr ""

#: ../../library/ctypes.rst:2199
msgid "These are the fundamental ctypes data types:"
msgstr "Dessa är de grundläggande ctypes-datatyperna:"

#: ../../library/ctypes.rst:2203
msgid ""
"Represents the C :c:expr:`signed char` datatype, and interprets the value as"
" small integer.  The constructor accepts an optional integer initializer; no"
" overflow checking is done."
msgstr ""
"Representerar C:s datatyp :c:expr:`signed char` och tolkar värdet som ett "
"litet heltal.  Konstruktören accepterar en valfri heltalsinitialiserare; "
"ingen kontroll av överflöd görs."

#: ../../library/ctypes.rst:2210
msgid ""
"Represents the C :c:expr:`char` datatype, and interprets the value as a "
"single character.  The constructor accepts an optional string initializer, "
"the length of the string must be exactly one character."
msgstr ""
"Representerar C :c:expr:`char`-datatypen och tolkar värdet som ett enda "
"tecken.  Konstruktören accepterar en valfri stränginitialiserare, strängens "
"längd måste vara exakt ett tecken."

#: ../../library/ctypes.rst:2217
msgid ""
"Represents the C :c:expr:`char *` datatype when it points to a zero-"
"terminated string.  For a general character pointer that may also point to "
"binary data, ``POINTER(c_char)`` must be used.  The constructor accepts an "
"integer address, or a bytes object."
msgstr ""
"Representerar datatypen C :c:expr:`char *` när den pekar på en nollavslutad "
"sträng.  För en allmän teckenpekare som också kan peka på binära data måste "
"``POINTER(c_char)`` användas.  Konstruktören accepterar en heltalsadress "
"eller ett bytes-objekt."

#: ../../library/ctypes.rst:2225
msgid ""
"Represents the C :c:expr:`double` datatype.  The constructor accepts an "
"optional float initializer."
msgstr ""
"Representerar datatypen C :c:expr:`double`.  Konstruktören accepterar en "
"valfri float-initialiserare."

#: ../../library/ctypes.rst:2231
msgid ""
"Represents the C :c:expr:`long double` datatype.  The constructor accepts an"
" optional float initializer.  On platforms where ``sizeof(long double) == "
"sizeof(double)`` it is an alias to :class:`c_double`."
msgstr ""
"Representerar datatypen C :c:expr:`long double`.  Konstruktorn accepterar en"
" valfri float-initialiserare.  På plattformar där ``sizeof(long double) == "
"sizeof(double)`` är det ett alias till :class:`c_double`."

#: ../../library/ctypes.rst:2237
msgid ""
"Represents the C :c:expr:`float` datatype.  The constructor accepts an "
"optional float initializer."
msgstr ""
"Representerar datatypen C :c:expr:`float`.  Konstruktören accepterar en "
"valfri float-initialiserare."

#: ../../library/ctypes.rst:2243
msgid ""
"Represents the C :c:expr:`signed int` datatype.  The constructor accepts an "
"optional integer initializer; no overflow checking is done.  On platforms "
"where ``sizeof(int) == sizeof(long)`` it is an alias to :class:`c_long`."
msgstr ""
"Representerar datatypen C :c:expr:`signed int`.  Konstruktorn accepterar en "
"valfri heltalsinitialiserare; ingen kontroll av överflöd görs.  På "
"plattformar där ``sizeof(int) == sizeof(long)`` är det ett alias till "
":class:`c_long`."

#: ../../library/ctypes.rst:2250
msgid ""
"Represents the C 8-bit :c:expr:`signed int` datatype.  Usually an alias for "
":class:`c_byte`."
msgstr ""

#: ../../library/ctypes.rst:2256
msgid ""
"Represents the C 16-bit :c:expr:`signed int` datatype.  Usually an alias for"
" :class:`c_short`."
msgstr ""
"Representerar C 16-bitars :c:expr:`signed int`-datatypen.  Vanligtvis ett "
"alias för :class:`c_short`."

#: ../../library/ctypes.rst:2262
msgid ""
"Represents the C 32-bit :c:expr:`signed int` datatype.  Usually an alias for"
" :class:`c_int`."
msgstr ""
"Representerar C 32-bitars :c:expr:`signed int`-datatypen.  Vanligtvis ett "
"alias för :class:`c_int`."

#: ../../library/ctypes.rst:2268
msgid ""
"Represents the C 64-bit :c:expr:`signed int` datatype.  Usually an alias for"
" :class:`c_longlong`."
msgstr ""
"Representerar C 64-bitars :c:expr:`signed int`-datatypen.  Vanligtvis ett "
"alias för :class:`c_longlong`."

#: ../../library/ctypes.rst:2274
msgid ""
"Represents the C :c:expr:`signed long` datatype.  The constructor accepts an"
" optional integer initializer; no overflow checking is done."
msgstr ""
"Representerar datatypen C :c:expr:`signed long`.  Konstruktören accepterar "
"en valfri heltalsinitialiserare; ingen kontroll av överflöd görs."

#: ../../library/ctypes.rst:2280
msgid ""
"Represents the C :c:expr:`signed long long` datatype.  The constructor "
"accepts an optional integer initializer; no overflow checking is done."
msgstr ""
"Representerar datatypen C :c:expr:`signed long long`.  Konstruktören "
"accepterar en valfri heltalsinitialiserare; ingen kontroll av överflöd görs."

#: ../../library/ctypes.rst:2286
msgid ""
"Represents the C :c:expr:`signed short` datatype.  The constructor accepts "
"an optional integer initializer; no overflow checking is done."
msgstr ""
"Representerar datatypen C :c:expr:`signed short`.  Konstruktören accepterar "
"en valfri heltalsinitialiserare; ingen kontroll av överflöd görs."

#: ../../library/ctypes.rst:2292
msgid "Represents the C :c:type:`size_t` datatype."
msgstr "Representerar datatypen C :c:type:`size_t`."

#: ../../library/ctypes.rst:2297
msgid "Represents the C :c:type:`ssize_t` datatype."
msgstr "Representerar datatypen C :c:type:`ssize_t`."

#: ../../library/ctypes.rst:2304
msgid ""
"Represents the C :c:expr:`unsigned char` datatype, it interprets the value "
"as small integer.  The constructor accepts an optional integer initializer; "
"no overflow checking is done."
msgstr ""
"Representerar C :c:expr:`unsigned char`-datatypen, tolkar värdet som ett "
"litet heltal.  Konstruktören accepterar en valfri heltalsinitialiserare; "
"ingen kontroll av överflöd görs."

#: ../../library/ctypes.rst:2311
msgid ""
"Represents the C :c:expr:`unsigned int` datatype.  The constructor accepts "
"an optional integer initializer; no overflow checking is done.  On platforms"
" where ``sizeof(int) == sizeof(long)`` it is an alias for :class:`c_ulong`."
msgstr ""
"Representerar datatypen C :c:expr:`unsigned int`.  Konstruktorn accepterar "
"en valfri heltalsinitialiserare; ingen kontroll av överflöd görs.  På "
"plattformar där ``sizeof(int) == sizeof(long)`` är det ett alias för "
":class:`c_ulong`."

#: ../../library/ctypes.rst:2318
msgid ""
"Represents the C 8-bit :c:expr:`unsigned int` datatype.  Usually an alias "
"for :class:`c_ubyte`."
msgstr ""

#: ../../library/ctypes.rst:2324
msgid ""
"Represents the C 16-bit :c:expr:`unsigned int` datatype.  Usually an alias "
"for :class:`c_ushort`."
msgstr ""
"Representerar C 16-bitars :c:expr:`unsigned int`-datatypen.  Vanligtvis ett "
"alias för :class:`c_ushort`."

#: ../../library/ctypes.rst:2330
msgid ""
"Represents the C 32-bit :c:expr:`unsigned int` datatype.  Usually an alias "
"for :class:`c_uint`."
msgstr ""
"Representerar C 32-bitars :c:expr:`unsigned int`-datatypen.  Vanligtvis ett "
"alias för :class:`c_uint`."

#: ../../library/ctypes.rst:2336
msgid ""
"Represents the C 64-bit :c:expr:`unsigned int` datatype.  Usually an alias "
"for :class:`c_ulonglong`."
msgstr ""
"Representerar C 64-bitars :c:expr:`unsigned int`-datatypen.  Vanligtvis ett "
"alias för :class:`c_ulonglong`."

#: ../../library/ctypes.rst:2342
msgid ""
"Represents the C :c:expr:`unsigned long` datatype.  The constructor accepts "
"an optional integer initializer; no overflow checking is done."
msgstr ""
"Representerar datatypen C :c:expr:`unsigned long`.  Konstruktören accepterar"
" en valfri heltalsinitialiserare; ingen kontroll av överflöd görs."

#: ../../library/ctypes.rst:2348
msgid ""
"Represents the C :c:expr:`unsigned long long` datatype.  The constructor "
"accepts an optional integer initializer; no overflow checking is done."
msgstr ""
"Representerar datatypen C :c:expr:`unsigned long long`.  Konstruktören "
"accepterar en valfri heltalsinitialiserare; ingen kontroll av överflöd görs."

#: ../../library/ctypes.rst:2354
msgid ""
"Represents the C :c:expr:`unsigned short` datatype.  The constructor accepts"
" an optional integer initializer; no overflow checking is done."
msgstr ""
"Representerar datatypen C :c:expr:`unsigned short`.  Konstruktören "
"accepterar en valfri heltalsinitialiserare; ingen kontroll av överflöd görs."

#: ../../library/ctypes.rst:2360
msgid ""
"Represents the C :c:expr:`void *` type.  The value is represented as "
"integer. The constructor accepts an optional integer initializer."
msgstr ""
"Representerar C :c:expr:`void *`-typen.  Värdet representeras som ett "
"heltal. Konstruktören accepterar en valfri heltalsinitialiserare."

#: ../../library/ctypes.rst:2366
msgid ""
"Represents the C :c:type:`wchar_t` datatype, and interprets the value as a "
"single character unicode string.  The constructor accepts an optional string"
" initializer, the length of the string must be exactly one character."
msgstr ""
"Representerar datatypen C :c:type:`wchar_t` och tolkar värdet som en "
"unicode-sträng med ett tecken.  Konstruktören accepterar en valfri "
"stränginitialiserare, strängens längd måste vara exakt ett tecken."

#: ../../library/ctypes.rst:2373
msgid ""
"Represents the C :c:expr:`wchar_t *` datatype, which must be a pointer to a "
"zero-terminated wide character string.  The constructor accepts an integer "
"address, or a string."
msgstr ""
"Representerar datatypen C :c:expr:`wchar_t *`, som måste vara en pekare till"
" en nollavslutad bred teckensträng.  Konstruktören accepterar en "
"heltalsadress eller en sträng."

#: ../../library/ctypes.rst:2380
msgid ""
"Represent the C :c:expr:`bool` datatype (more accurately, :c:expr:`_Bool` "
"from C99).  Its value can be ``True`` or ``False``, and the constructor "
"accepts any object that has a truth value."
msgstr ""
"Representerar C:s datatyp :c:expr:`bool` (mer exakt :c:expr:`_Bool` från "
"C99).  Dess värde kan vara ``True`` eller ``False``, och konstruktören "
"accepterar alla objekt som har ett sanningsvärde."

#: ../../library/ctypes.rst:2387
msgid ""
"Windows only: Represents a :c:type:`HRESULT` value, which contains success "
"or error information for a function or method call."
msgstr ""

#: ../../library/ctypes.rst:2393
msgid ""
"Represents the C :c:expr:`PyObject *` datatype.  Calling this without an "
"argument creates a ``NULL`` :c:expr:`PyObject *` pointer."
msgstr ""
"Representerar datatypen C :c:expr:`PyObject *`.  Anrop av detta utan "
"argument skapar en ``NULL`` :c:expr:`PyObject *`-pekare."

#: ../../library/ctypes.rst:2396
msgid ""
"The :mod:`ctypes.wintypes` module provides quite some other Windows specific"
" data types, for example :c:type:`HWND`, :c:type:`WPARAM`, or "
":c:type:`DWORD`.  Some useful structures like :c:type:`MSG` or "
":c:type:`RECT` are also defined."
msgstr ""

#: ../../library/ctypes.rst:2404
msgid "Structured data types"
msgstr "Strukturerade datatyper"

#: ../../library/ctypes.rst:2409
msgid "Abstract base class for unions in native byte order."
msgstr "Abstrakt basklass för unioner i inbyggd byte-ordning."

#: ../../library/ctypes.rst:2414
msgid "Abstract base class for unions in *big endian* byte order."
msgstr "Abstrakt basklass för unioner i *big endian* byteordning."

#: ../../library/ctypes.rst:2420
msgid "Abstract base class for unions in *little endian* byte order."
msgstr "Abstrakt basklass för unioner i byteordning *little endian*."

#: ../../library/ctypes.rst:2426
msgid "Abstract base class for structures in *big endian* byte order."
msgstr "Abstrakt basklass för strukturer i *big endian* byteordning."

#: ../../library/ctypes.rst:2431
msgid "Abstract base class for structures in *little endian* byte order."
msgstr "Abstrakt basklass för strukturer i byteordning *little endian*."

#: ../../library/ctypes.rst:2433
msgid ""
"Structures and unions with non-native byte order cannot contain pointer type"
" fields, or any other data types containing pointer type fields."
msgstr ""
"Strukturer och unioner med icke inhemsk byteordning kan inte innehålla fält "
"av pekartyp eller andra datatyper som innehåller fält av pekartyp."

#: ../../library/ctypes.rst:2439
msgid "Abstract base class for structures in *native* byte order."
msgstr "Abstrakt basklass för strukturer i *nativ* byte-ordning."

#: ../../library/ctypes.rst:2441
msgid ""
"Concrete structure and union types must be created by subclassing one of "
"these types, and at least define a :attr:`_fields_` class variable. "
":mod:`ctypes` will create :term:`descriptor`\\s which allow reading and "
"writing the fields by direct attribute accesses.  These are the"
msgstr ""
"Konkreta struktur- och unionstyper måste skapas genom att underklassa en av "
"dessa typer och åtminstone definiera en klassvariabel :attr:`_fields_`. "
":mod:`ctypes` skapar :term:`descriptor` som gör det möjligt att läsa och "
"skriva fälten genom direkt attributåtkomst.  Dessa är"

#: ../../library/ctypes.rst:2449
msgid ""
"A sequence defining the structure fields.  The items must be 2-tuples or "
"3-tuples.  The first item is the name of the field, the second item "
"specifies the type of the field; it can be any ctypes data type."
msgstr ""
"En sekvens som definierar strukturfälten.  Elementen måste vara 2-tupler "
"eller 3-tupler.  Det första objektet är fältets namn, det andra objektet "
"anger fältets typ; det kan vara vilken ctypes-datatyp som helst."

#: ../../library/ctypes.rst:2453
msgid ""
"For integer type fields like :class:`c_int`, a third optional item can be "
"given.  It must be a small positive integer defining the bit width of the "
"field."
msgstr ""
"För fält av heltalstyp som :class:`c_int` kan ett tredje valfritt element "
"anges.  Det måste vara ett litet positivt heltal som definierar fältets "
"bitbredd."

#: ../../library/ctypes.rst:2457
msgid ""
"Field names must be unique within one structure or union.  This is not "
"checked, only one field can be accessed when names are repeated."
msgstr ""
"Fältnamn måste vara unika inom en struktur eller union.  Detta kontrolleras "
"inte, endast ett fält kan nås när namnen upprepas."

#: ../../library/ctypes.rst:2460
msgid ""
"It is possible to define the :attr:`_fields_` class variable *after* the "
"class statement that defines the Structure subclass, this allows creating "
"data types that directly or indirectly reference themselves::"
msgstr ""
"Det är möjligt att definiera klassvariabeln :attr:`_fields_` *efter* den "
"class-sats som definierar underklassen Structure, vilket gör det möjligt att"
" skapa datatyper som direkt eller indirekt refererar till sig själva::"

#: ../../library/ctypes.rst:2470
msgid ""
"The :attr:`_fields_` class variable must, however, be defined before the "
"type is first used (an instance is created, :func:`sizeof` is called on it, "
"and so on).  Later assignments to the :attr:`_fields_` class variable will "
"raise an AttributeError."
msgstr ""

#: ../../library/ctypes.rst:2475
msgid ""
"It is possible to define sub-subclasses of structure types, they inherit the"
" fields of the base class plus the :attr:`_fields_` defined in the sub-"
"subclass, if any."
msgstr ""

#: ../../library/ctypes.rst:2482
msgid ""
"An optional small integer that allows overriding the alignment of structure "
"fields in the instance.  :attr:`_pack_` must already be defined when "
":attr:`_fields_` is assigned, otherwise it will have no effect."
msgstr ""

#: ../../library/ctypes.rst:2489
msgid ""
"An optional sequence that lists the names of unnamed (anonymous) fields. "
":attr:`_anonymous_` must be already defined when :attr:`_fields_` is "
"assigned, otherwise it will have no effect."
msgstr ""
"En valfri sekvens som listar namnen på namnlösa (anonyma) fält. "
":attr:`_anonymous_` måste redan vara definierat när :attr:`_fields_` "
"tilldelas, annars har det ingen effekt."

#: ../../library/ctypes.rst:2493
msgid ""
"The fields listed in this variable must be structure or union type fields. "
":mod:`ctypes` will create descriptors in the structure type that allows "
"accessing the nested fields directly, without the need to create the "
"structure or union field."
msgstr ""
"De fält som anges i denna variabel måste vara av strukturtyp eller "
"unionstyp. :mod:`ctypes` skapar deskriptorer i strukturtypen som gör det "
"möjligt att komma åt de nästlade fälten direkt, utan att behöva skapa "
"struktur- eller unionsfältet."

#: ../../library/ctypes.rst:2498
msgid "Here is an example type (Windows)::"
msgstr "Här är ett exempel på en typ (Windows)::"

#: ../../library/ctypes.rst:2511
msgid ""
"The ``TYPEDESC`` structure describes a COM data type, the ``vt`` field "
"specifies which one of the union fields is valid.  Since the ``u`` field is "
"defined as anonymous field, it is now possible to access the members "
"directly off the TYPEDESC instance. ``td.lptdesc`` and ``td.u.lptdesc`` are "
"equivalent, but the former is faster since it does not need to create a "
"temporary union instance::"
msgstr ""
"Strukturen ``TYPEDESC`` beskriver en COM-datatyp, fältet ``vt`` anger vilket"
" av unionsfälten som är giltigt.  Eftersom fältet ``u`` är definierat som "
"ett anonymt fält är det nu möjligt att komma åt medlemmarna direkt från "
"TYPEDESC-instansen. ``td.lptdesc`` och ``td.u.lptdesc`` är likvärdiga, men "
"den förra är snabbare eftersom den inte behöver skapa en tillfällig "
"unionsinstans::"

#: ../../library/ctypes.rst:2523
msgid ""
"It is possible to define sub-subclasses of structures, they inherit the "
"fields of the base class.  If the subclass definition has a separate "
":attr:`_fields_` variable, the fields specified in this are appended to the "
"fields of the base class."
msgstr ""
"Det är möjligt att definiera sub-subklasser av strukturer, de ärver fälten i"
" basklassen.  Om subklassdefinitionen har en separat variabel "
":attr:`_fields_`, läggs de fält som anges i denna till basklassens fält."

#: ../../library/ctypes.rst:2528
msgid ""
"Structure and union constructors accept both positional and keyword "
"arguments.  Positional arguments are used to initialize member fields in the"
" same order as they are appear in :attr:`_fields_`.  Keyword arguments in "
"the constructor are interpreted as attribute assignments, so they will "
"initialize :attr:`_fields_` with the same name, or create new attributes for"
" names not present in :attr:`_fields_`."
msgstr ""
"Struktur- och unionskonstruktörer accepterar både positionella argument och "
"nyckelordsargument.  Positionella argument används för att initiera "
"medlemsfält i samma ordning som de visas i :attr:`_fields_`.  Nyckelord i "
"konstruktorn tolkas som attributtilldelningar, vilket innebär att de "
"initierar :attr:`_fields_` med samma namn eller skapar nya attribut för namn"
" som inte finns i :attr:`_fields_`."

#: ../../library/ctypes.rst:2539
msgid "Arrays and pointers"
msgstr "Arrayer och pekare"

#: ../../library/ctypes.rst:2543
msgid "Abstract base class for arrays."
msgstr "Abstrakt basklass för arrayer."

#: ../../library/ctypes.rst:2545
msgid ""
"The recommended way to create concrete array types is by multiplying any "
":mod:`ctypes` data type with a non-negative integer.  Alternatively, you can"
" subclass this type and define :attr:`_length_` and :attr:`_type_` class "
"variables. Array elements can be read and written using standard subscript "
"and slice accesses; for slice reads, the resulting object is *not* itself an"
" :class:`Array`."
msgstr ""
"Det rekommenderade sättet att skapa konkreta array-typer är att multiplicera"
" valfri :mod:`ctypes`-datatyp med ett icke-negativt heltal.  Alternativt kan"
" du underklassa den här typen och definiera klassvariablerna "
":attr:`_length_` och :attr:`_type_`. Array-element kan läsas och skrivas med"
" hjälp av standardåtkomst för subscript och slice; för slice-läsning är det "
"resulterande objektet *inte* i sig självt en :class:`Array`."

#: ../../library/ctypes.rst:2555
msgid ""
"A positive integer specifying the number of elements in the array. Out-of-"
"range subscripts result in an :exc:`IndexError`. Will be returned by "
":func:`len`."
msgstr ""
"Ett positivt heltal som anger antalet element i matrisen. Subskriptioner "
"utanför intervallet resulterar i ett :exc:`IndexError`. Kommer att "
"returneras av :func:`len`."

#: ../../library/ctypes.rst:2562
msgid "Specifies the type of each element in the array."
msgstr "Anger typen för varje element i matrisen."

#: ../../library/ctypes.rst:2565
msgid ""
"Array subclass constructors accept positional arguments, used to initialize "
"the elements in order."
msgstr ""
"Array-underklassens konstruktörer accepterar positionella argument som "
"används för att initiera elementen i ordning."

#: ../../library/ctypes.rst:2571
msgid "Private, abstract base class for pointers."
msgstr "Privat, abstrakt basklass för pekare."

#: ../../library/ctypes.rst:2573
msgid ""
"Concrete pointer types are created by calling :func:`POINTER` with the type "
"that will be pointed to; this is done automatically by :func:`pointer`."
msgstr ""
"Konkreta pekartyper skapas genom att anropa :func:`POINTER` med den typ som "
"ska pekas på; detta görs automatiskt av :func:`pointer`."

#: ../../library/ctypes.rst:2577
msgid ""
"If a pointer points to an array, its elements can be read and written using "
"standard subscript and slice accesses.  Pointer objects have no size, so "
":func:`len` will raise :exc:`TypeError`.  Negative subscripts will read from"
" the memory *before* the pointer (as in C), and out-of-range subscripts will"
" probably crash with an access violation (if you're lucky)."
msgstr ""
"Om en pekare pekar på en array kan dess element läsas och skrivas med hjälp "
"av standardåtkomst för subscript och slice.  Pekarobjekt har ingen storlek, "
"så :func:`len` kommer att ge upphov till :exc:`TypeError`.  Negativa "
"subscripts läser från minnet *före* pekaren (som i C), och out-of-range "
"subscripts kraschar förmodligen med en access violation (om du har tur)."

#: ../../library/ctypes.rst:2587
msgid "Specifies the type pointed to."
msgstr "Anger vilken typ som pekas ut."

#: ../../library/ctypes.rst:2591
msgid ""
"Returns the object to which to pointer points.  Assigning to this attribute "
"changes the pointer to point to the assigned object."
msgstr ""
"Returnerar det objekt som pekaren till pekar på.  Om du tilldelar detta "
"attribut ändras pekaren till att peka på det tilldelade objektet."
