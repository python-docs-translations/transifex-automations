# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# python-doc bot, 2025
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.11\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-10-15 16:36+0000\n"
"PO-Revision-Date: 2025-09-22 16:50+0000\n"
"Last-Translator: python-doc bot, 2025\n"
"Language-Team: Swedish (https://app.transifex.com/python-doc/teams/5390/"
"sv/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: sv\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"

#: ../../library/faulthandler.rst:2
msgid ":mod:`faulthandler` --- Dump the Python traceback"
msgstr ""

#: ../../library/faulthandler.rst:11
msgid ""
"This module contains functions to dump Python tracebacks explicitly, on a "
"fault, after a timeout, or on a user signal. Call :func:`faulthandler."
"enable` to install fault handlers for the :const:`SIGSEGV`, :const:"
"`SIGFPE`, :const:`SIGABRT`, :const:`SIGBUS`, and :const:`SIGILL` signals. "
"You can also enable them at startup by setting the :envvar:"
"`PYTHONFAULTHANDLER` environment variable or by using the :option:`-X` "
"``faulthandler`` command line option."
msgstr ""

#: ../../library/faulthandler.rst:18
msgid ""
"The fault handler is compatible with system fault handlers like Apport or "
"the Windows fault handler. The module uses an alternative stack for signal "
"handlers if the :c:func:`sigaltstack` function is available. This allows it "
"to dump the traceback even on a stack overflow."
msgstr ""

#: ../../library/faulthandler.rst:23
msgid ""
"The fault handler is called on catastrophic cases and therefore can only use "
"signal-safe functions (e.g. it cannot allocate memory on the heap). Because "
"of this limitation traceback dumping is minimal compared to normal Python "
"tracebacks:"
msgstr ""
"Felhanteraren anropas i katastroffall och kan därför bara använda "
"signalsäkra funktioner (den kan t.ex. inte allokera minne i heapen). På "
"grund av denna begränsning är spårningsdumpningen minimal jämfört med "
"normala Python-spårningar:"

#: ../../library/faulthandler.rst:28
msgid ""
"Only ASCII is supported. The ``backslashreplace`` error handler is used on "
"encoding."
msgstr ""
"Endast ASCII stöds. Felhanteraren ``backslashreplace`` används vid kodning."

#: ../../library/faulthandler.rst:30
msgid "Each string is limited to 500 characters."
msgstr "Varje sträng är begränsad till 500 tecken."

#: ../../library/faulthandler.rst:31
msgid ""
"Only the filename, the function name and the line number are displayed. (no "
"source code)"
msgstr "Endast filnamnet, funktionsnamnet och radnumret visas. (ingen källkod)"

#: ../../library/faulthandler.rst:33
msgid "It is limited to 100 frames and 100 threads."
msgstr "Den är begränsad till 100 ramar och 100 trådar."

#: ../../library/faulthandler.rst:34
msgid "The order is reversed: the most recent call is shown first."
msgstr "Ordningen är omvänd: det senaste anropet visas först."

#: ../../library/faulthandler.rst:36
msgid ""
"By default, the Python traceback is written to :data:`sys.stderr`. To see "
"tracebacks, applications must be run in the terminal. A log file can "
"alternatively be passed to :func:`faulthandler.enable`."
msgstr ""
"Som standard skrivs Python-spårningen till :data:`sys.stderr`. För att se "
"spårningar måste program köras i terminalen. En loggfil kan alternativt "
"skickas till :func:`faulthandler.enable`."

#: ../../library/faulthandler.rst:40
msgid ""
"The module is implemented in C, so tracebacks can be dumped on a crash or "
"when Python is deadlocked."
msgstr ""
"Modulen är implementerad i C, så att spårningar kan dumpas vid en krasch "
"eller när Python är blockerat."

#: ../../library/faulthandler.rst:43
msgid ""
"The :ref:`Python Development Mode <devmode>` calls :func:`faulthandler."
"enable` at Python startup."
msgstr ""
"I :ref:`Python Development Mode <devmode>` anropas :func:`faulthandler."
"enable` vid Python-start."

#: ../../library/faulthandler.rst:49
msgid "Module :mod:`pdb`"
msgstr "Modul :mod:`pdb`"

#: ../../library/faulthandler.rst:49
msgid "Interactive source code debugger for Python programs."
msgstr "Interaktiv källkodsfelsökare för Python-program."

#: ../../library/faulthandler.rst:51
msgid "Module :mod:`traceback`"
msgstr "Modul :mod:`traceback`"

#: ../../library/faulthandler.rst:52
msgid ""
"Standard interface to extract, format and print stack traces of Python "
"programs."
msgstr ""
"Standardgränssnitt för att extrahera, formatera och skriva ut stackspår från "
"Python-program."

#: ../../library/faulthandler.rst:55
msgid "Dumping the traceback"
msgstr "Dumpning av spårningen"

#: ../../library/faulthandler.rst:59
msgid ""
"Dump the tracebacks of all threads into *file*. If *all_threads* is "
"``False``, dump only the current thread."
msgstr ""
"Dumpar spårningarna av alla trådar till *fil*. Om *all_threads* är "
"``False``, dumpas endast den aktuella tråden."

#: ../../library/faulthandler.rst:62
msgid ""
":func:`traceback.print_tb`, which can be used to print a traceback object."
msgstr ""
":func:`traceback.print_tb`, som kan användas för att skriva ut ett traceback-"
"objekt."

#: ../../library/faulthandler.rst:64 ../../library/faulthandler.rst:82
#: ../../library/faulthandler.rst:121 ../../library/faulthandler.rst:146
msgid "Added support for passing file descriptor to this function."
msgstr "Lagt till stöd för att skicka filbeskrivare till denna funktion."

#: ../../library/faulthandler.rst:69
msgid "Fault handler state"
msgstr "Felhanterarens status"

#: ../../library/faulthandler.rst:73
msgid ""
"Enable the fault handler: install handlers for the :const:`SIGSEGV`, :const:"
"`SIGFPE`, :const:`SIGABRT`, :const:`SIGBUS` and :const:`SIGILL` signals to "
"dump the Python traceback. If *all_threads* is ``True``, produce tracebacks "
"for every running thread. Otherwise, dump only the current thread."
msgstr ""

#: ../../library/faulthandler.rst:79
msgid ""
"The *file* must be kept open until the fault handler is disabled: see :ref:"
"`issue with file descriptors <faulthandler-fd>`."
msgstr ""
"Filen måste hållas öppen tills felhanteraren inaktiveras: se :ref:`problem "
"med filbeskrivare <faulthandler-fd>`."

#: ../../library/faulthandler.rst:85
msgid "On Windows, a handler for Windows exception is also installed."
msgstr "I Windows installeras även en hanterare för Windows-undantag."

#: ../../library/faulthandler.rst:88
msgid ""
"The dump now mentions if a garbage collector collection is running if "
"*all_threads* is true."
msgstr "Dumpen nämner nu om en skräpsamlare körs om *all_threads* är true."

#: ../../library/faulthandler.rst:94
msgid ""
"Disable the fault handler: uninstall the signal handlers installed by :func:"
"`enable`."
msgstr ""
"Inaktivera felhanteraren: avinstallera de signalhanterare som installerats "
"av :func:`enable`."

#: ../../library/faulthandler.rst:99
msgid "Check if the fault handler is enabled."
msgstr "Kontrollera om felhanteraren är aktiverad."

#: ../../library/faulthandler.rst:103
msgid "Dumping the tracebacks after a timeout"
msgstr "Dumpning av spårningar efter en timeout"

#: ../../library/faulthandler.rst:107
msgid ""
"Dump the tracebacks of all threads, after a timeout of *timeout* seconds, or "
"every *timeout* seconds if *repeat* is ``True``.  If *exit* is ``True``, "
"call :c:func:`_exit` with status=1 after dumping the tracebacks.  (Note :c:"
"func:`_exit` exits the process immediately, which means it doesn't do any "
"cleanup like flushing file buffers.) If the function is called twice, the "
"new call replaces previous parameters and resets the timeout. The timer has "
"a sub-second resolution."
msgstr ""

#: ../../library/faulthandler.rst:115
msgid ""
"The *file* must be kept open until the traceback is dumped or :func:"
"`cancel_dump_traceback_later` is called: see :ref:`issue with file "
"descriptors <faulthandler-fd>`."
msgstr ""
"Filen måste hållas öppen tills spårningen dumpas eller :func:"
"`cancel_dump_traceback_later` anropas: se :ref:`problem med filbeskrivare "
"<faulthandler-fd>`."

#: ../../library/faulthandler.rst:119
msgid "This function is implemented using a watchdog thread."
msgstr "Denna funktion implementeras med hjälp av en watchdog-tråd."

#: ../../library/faulthandler.rst:124
msgid "This function is now always available."
msgstr "Denna funktion är nu alltid tillgänglig."

#: ../../library/faulthandler.rst:129
msgid "Cancel the last call to :func:`dump_traceback_later`."
msgstr "Avbryt det senaste anropet till :func:`dump_traceback_later`."

#: ../../library/faulthandler.rst:133
msgid "Dumping the traceback on a user signal"
msgstr "Dumpning av spårningen av en användarsignal"

#: ../../library/faulthandler.rst:137
msgid ""
"Register a user signal: install a handler for the *signum* signal to dump "
"the traceback of all threads, or of the current thread if *all_threads* is "
"``False``, into *file*. Call the previous handler if chain is ``True``."
msgstr ""
"Registrera en användarsignal: installera en hanterare för *signum*-signalen "
"för att dumpa spårningen av alla trådar, eller av den aktuella tråden om "
"*all_threads* är ``False``, i *file*. Anropa den föregående hanteraren om "
"chain är ``True``."

#: ../../library/faulthandler.rst:141
msgid ""
"The *file* must be kept open until the signal is unregistered by :func:"
"`unregister`: see :ref:`issue with file descriptors <faulthandler-fd>`."
msgstr ""
"*Filen* måste hållas öppen tills signalen avregistreras med :func:"
"`unregister`: se :ref:`problem med filbeskrivare <faulthandler-fd>`."

#: ../../library/faulthandler.rst:144 ../../library/faulthandler.rst:155
msgid "Not available on Windows."
msgstr "Ej tillgängligt på Windows."

#: ../../library/faulthandler.rst:151
msgid ""
"Unregister a user signal: uninstall the handler of the *signum* signal "
"installed by :func:`register`. Return ``True`` if the signal was registered, "
"``False`` otherwise."
msgstr ""
"Avregistrera en användarsignal: avinstallera hanteraren av *signum*-signalen "
"som installerats av :func:`register`. Returnerar ``True`` om signalen var "
"registrerad, ``False`` annars."

#: ../../library/faulthandler.rst:161
msgid "Issue with file descriptors"
msgstr "Problem med filbeskrivare"

#: ../../library/faulthandler.rst:163
msgid ""
":func:`enable`, :func:`dump_traceback_later` and :func:`register` keep the "
"file descriptor of their *file* argument. If the file is closed and its file "
"descriptor is reused by a new file, or if :func:`os.dup2` is used to replace "
"the file descriptor, the traceback will be written into a different file. "
"Call these functions again each time that the file is replaced."
msgstr ""
":func:`enable`, :func:`dump_traceback_later` och :func:`register` behåller "
"filbeskrivaren för sitt *file*-argument. Om filen stängs och dess "
"filbeskrivare återanvänds av en ny fil, eller om :func:`os.dup2` används för "
"att ersätta filbeskrivaren, kommer spårningen att skrivas till en annan fil. "
"Anropa dessa funktioner igen varje gång filen ersätts."

#: ../../library/faulthandler.rst:171
msgid "Example"
msgstr "Exempel"

#: ../../library/faulthandler.rst:173
msgid ""
"Example of a segmentation fault on Linux with and without enabling the fault "
"handler:"
msgstr ""
"Exempel på ett segmenteringsfel på Linux med och utan aktivering av "
"felhanteraren:"
