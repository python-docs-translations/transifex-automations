# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# python-doc bot, 2025
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.11\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-25 16:33+0000\n"
"PO-Revision-Date: 2025-09-22 16:49+0000\n"
"Last-Translator: python-doc bot, 2025\n"
"Language-Team: Swedish (https://app.transifex.com/python-doc/teams/5390/sv/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: sv\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"

#: ../../library/dbm.rst:2
msgid ":mod:`dbm` --- Interfaces to Unix \"databases\""
msgstr ""

#: ../../library/dbm.rst:7
msgid "**Source code:** :source:`Lib/dbm/__init__.py`"
msgstr "**Källkod:** :source:`Lib/dbm/__init__.py`"

#: ../../library/dbm.rst:11
msgid ""
":mod:`dbm` is a generic interface to variants of the DBM database --- "
":mod:`dbm.gnu` or :mod:`dbm.ndbm`.  If none of these modules is installed, "
"the slow-but-simple implementation in module :mod:`dbm.dumb` will be used.  "
"There is a `third party interface "
"<https://www.jcea.es/programacion/pybsddb.htm>`_ to the Oracle Berkeley DB."
msgstr ""

#: ../../library/dbm.rst:20
msgid ""
"A tuple containing the exceptions that can be raised by each of the "
"supported modules, with a unique exception also named :exc:`dbm.error` as "
"the first item --- the latter is used when :exc:`dbm.error` is raised."
msgstr ""
"En tupel som innehåller de undantag som kan utlösas av var och en av de "
"moduler som stöds, med ett unikt undantag som också heter :exc:`dbm.error` "
"som första objekt --- det senare används när :exc:`dbm.error` utlöses."

#: ../../library/dbm.rst:27
msgid ""
"This function attempts to guess which of the several simple database modules"
" available --- :mod:`dbm.gnu`, :mod:`dbm.ndbm` or :mod:`dbm.dumb` --- should"
" be used to open a given file."
msgstr ""

#: ../../library/dbm.rst:31
msgid "Return one of the following values:"
msgstr "Returnerar ett av följande värden:"

#: ../../library/dbm.rst:33
msgid ""
"``None`` if the file can't be opened because it's unreadable or doesn't "
"exist"
msgstr ""
"``None`` om filen inte kan öppnas eftersom den är oläslig eller inte finns"

#: ../../library/dbm.rst:34
msgid "the empty string (``''``) if the file's format can't be guessed"
msgstr "den tomma strängen (``''``) om filens format inte kan gissas"

#: ../../library/dbm.rst:35
msgid ""
"a string containing the required module name, such as ``'dbm.ndbm'`` or "
"``'dbm.gnu'``"
msgstr ""
"en sträng som innehåller namnet på den modul som krävs, t.ex. ``'dbm.ndbm'``"
" eller ``'dbm.gnu'``"

#: ../../library/dbm.rst:37 ../../library/dbm.rst:202
#: ../../library/dbm.rst:386
msgid "*filename* accepts a :term:`path-like object`."
msgstr "*filename* accepterar en :term:`path-like object`."

#: ../../library/dbm.rst:61
msgid "Open a database and return the corresponding database object."
msgstr "Öppna en databas och returnera motsvarande databasobjekt."

#: ../../library/dbm.rst:0
msgid "Parameters"
msgstr "Parametrar"

#: ../../library/dbm.rst:63
msgid ""
"The database file to open.  If the database file already exists, the "
":func:`whichdb` function is used to determine its type and the appropriate "
"module is used; if it does not exist, the first submodule listed above that "
"can be imported is used."
msgstr ""
"Databasfilen som skall öppnas.  Om databasfilen redan finns, används "
"funktionen :func:`whichdb` för att bestämma dess typ och lämplig modul "
"används; om den inte finns, används den första undermodulen som listas ovan "
"och som kan importeras."

#: ../../library/dbm.rst:64 ../../library/dbm.rst:174
msgid "The database file to open."
msgstr "Den databasfil som ska öppnas."

#: ../../library/dbm.rst:66
msgid ""
"If the database file already exists, the :func:`whichdb` function is used to"
" determine its type and the appropriate module is used; if it does not "
"exist, the first submodule listed above that can be imported is used."
msgstr ""
"Om databasfilen redan finns används funktionen :func:`whichdb` för att "
"bestämma dess typ och lämplig modul används; om den inte finns används den "
"första undermodulen som listas ovan och som kan importeras."

#: ../../library/dbm.rst:71 ../../library/dbm.rst:297
msgid ""
"* ``'r'`` (default): |flag_r| * ``'w'``: |flag_w| * ``'c'``: |flag_c| * "
"``'n'``: |flag_n|"
msgstr ""
"* ``'r'`` (standard): |flag_r| * ``'w'``: |flag_w| * ``'c'``: |flag_c| * "
"``'n'``: |flag_n|"

#: ../../library/dbm.rst:72 ../../library/dbm.rst:179
#: ../../library/dbm.rst:298
msgid "``'r'`` (default): |flag_r|"
msgstr "``'r'`` (standard): |flag_r|"

#: ../../library/dbm.rst:73 ../../library/dbm.rst:180
#: ../../library/dbm.rst:299 ../../library/dbm.rst:367
msgid "``'w'``: |flag_w|"
msgstr "``'w'``: |flag_w|"

#: ../../library/dbm.rst:74 ../../library/dbm.rst:181
#: ../../library/dbm.rst:300
msgid "``'c'``: |flag_c|"
msgstr "``'c'``: |flag_c|"

#: ../../library/dbm.rst:75 ../../library/dbm.rst:182
#: ../../library/dbm.rst:301 ../../library/dbm.rst:369
msgid "``'n'``: |flag_n|"
msgstr "``'n'``: |flag_n|"

#: ../../library/dbm.rst:77 ../../library/dbm.rst:196
#: ../../library/dbm.rst:303 ../../library/dbm.rst:371
msgid "|mode_param_doc|"
msgstr "|mode_param_doc|"

#: ../../library/dbm.rst:80
msgid "*file* accepts a :term:`path-like object`."
msgstr "*file* accepterar en :term:`path-like object`."

#: ../../library/dbm.rst:83
msgid ""
"The object returned by :func:`~dbm.open` supports the same basic "
"functionality as a :class:`dict`; keys and their corresponding values can be"
" stored, retrieved, and deleted, and the :keyword:`in` operator and the "
":meth:`!keys` method are available, as well as :meth:`!get` and "
":meth:`!setdefault` methods."
msgstr ""
"Objektet som returneras av :func:`~dbm.open` har samma grundläggande "
"funktionalitet som en :class:`dict`; nycklar och deras motsvarande värden "
"kan lagras, hämtas och raderas, och operatorn :keyword:`in` och metoden "
":meth:`!keys` finns tillgängliga, liksom metoderna :meth:`!get` och "
":meth:`!setdefault`."

#: ../../library/dbm.rst:88
msgid ""
"Key and values are always stored as :class:`bytes`. This means that when "
"strings are used they are implicitly converted to the default encoding "
"before being stored."
msgstr ""
"Nycklar och värden lagras alltid som :class:`bytes`. Detta innebär att när "
"strängar används konverteras de implicit till standardkodningen innan de "
"lagras."

#: ../../library/dbm.rst:92
msgid ""
"These objects also support being used in a :keyword:`with` statement, which "
"will automatically close them when done."
msgstr ""
"Dessa objekt kan också användas i en :keyword:`with`\\-sats, som automatiskt"
" stänger dem när de är klara."

#: ../../library/dbm.rst:95
msgid ""
":meth:`!get` and :meth:`!setdefault` methods are now available for all "
":mod:`dbm` backends."
msgstr ""
"metoderna :meth:`!get` och :meth:`!setdefault` är nu tillgängliga för alla "
":mod:`dbm`\\-backends."

#: ../../library/dbm.rst:99
msgid ""
"Added native support for the context management protocol to the objects "
"returned by :func:`~dbm.open`."
msgstr ""
"Lagt till inbyggt stöd för kontexthanteringsprotokollet till de objekt som "
"returneras av :func:`~dbm.open`."

#: ../../library/dbm.rst:103
msgid ""
"Deleting a key from a read-only database raises a database module specific "
"exception instead of :exc:`KeyError`."
msgstr ""
"Om du tar bort en nyckel från en skrivskyddad databas uppstår ett undantag "
"som är specifikt för databasmodulen i stället för :exc:`KeyError`."

#: ../../library/dbm.rst:107
msgid ""
"The following example records some hostnames and a corresponding title,  and"
" then prints out the contents of the database::"
msgstr ""
"I följande exempel registreras några värdnamn och en motsvarande titel, och "
"sedan skrivs innehållet i databasen ut::"

#: ../../library/dbm.rst:137
msgid "Module :mod:`shelve`"
msgstr "Modul :mod:`shelve`"

#: ../../library/dbm.rst:138
msgid "Persistence module which stores non-string data."
msgstr "Persistensmodul som lagrar data som inte är strängdata."

#: ../../library/dbm.rst:141
msgid "The individual submodules are described in the following sections."
msgstr "De enskilda undermodulerna beskrivs i följande avsnitt."

#: ../../library/dbm.rst:145
msgid ":mod:`dbm.gnu` --- GNU database manager"
msgstr ":mod:`dbm.gnu` --- GNU databashanterare"

#: ../../library/dbm.rst:151
msgid "**Source code:** :source:`Lib/dbm/gnu.py`"
msgstr "**Källkod:** :source:`Lib/dbm/gnu.py`"

#: ../../library/dbm.rst:155
msgid ""
"The :mod:`dbm.gnu` module provides an interface to the :abbr:`GDBM (GNU "
"dbm)` library, similar to the :mod:`dbm.ndbm` module, but with additional "
"functionality like crash tolerance."
msgstr ""
"Modulen :mod:`dbm.gnu` tillhandahåller ett gränssnitt till biblioteket "
":abbr:`GDBM (GNU dbm)`, liknande modulen :mod:`dbm.ndbm`, men med "
"ytterligare funktionalitet som kraschtolerans."

#: ../../library/dbm.rst:161 ../../library/dbm.rst:267
msgid ""
"The file formats created by :mod:`dbm.gnu` and :mod:`dbm.ndbm` are "
"incompatible and can not be used interchangeably."
msgstr ""
"De filformat som skapas av :mod:`dbm.gnu` och :mod:`dbm.ndbm` är "
"inkompatibla och kan inte användas omväxlande."

#: ../../library/dbm.rst:166
msgid ""
"Raised on :mod:`dbm.gnu`-specific errors, such as I/O errors. "
":exc:`KeyError` is raised for general mapping errors like specifying an "
"incorrect key."
msgstr ""
"Uppstår vid :mod:`dbm.gnu`\\-specifika fel, t.ex. I/O-fel. :exc:`KeyError` "
"uppstår vid allmänna mappningsfel, t.ex. om en felaktig nyckel anges."

#: ../../library/dbm.rst:172
msgid "Open a GDBM database and return a :class:`!gdbm` object."
msgstr "Öppna en GDBM-databas och returnera ett :class:`!gdbm`\\-objekt."

#: ../../library/dbm.rst:178
msgid ""
"* ``'r'`` (default): |flag_r| * ``'w'``: |flag_w| * ``'c'``: |flag_c| * "
"``'n'``: |flag_n|  The following additional characters may be appended to "
"control how the database is opened:  * ``'f'``: Open the database in fast "
"mode.   Writes to the database will not be synchronized. * ``'s'``: "
"Synchronized mode.   Changes to the database will be written immediately to "
"the file. * ``'u'``: Do not lock database.  Not all flags are valid for all "
"versions of GDBM. See the :data:`open_flags` member for a list of supported "
"flag characters."
msgstr ""
"* ``'r'`` (standard): |flag_r| * ``'w'``: |flag_w| * ``'c'``: |flag_c| * "
"``'n'``: |flag_n| Följande ytterligare tecken kan läggas till för att styra "
"hur databasen öppnas:  * ``'f'``: Öppna databasen i snabbläge.   Skrivningar"
" till databasen kommer inte att synkroniseras. * ``'s'``: Synkroniserat "
"läge.   Ändringar i databasen kommer omedelbart att skrivas till filen. * "
"``'u'``: Lås inte databasen.  Alla flaggor är inte giltiga för alla "
"versioner av GDBM. Se medlemmen :data:`open_flags` för en lista över "
"flaggtecken som stöds."

#: ../../library/dbm.rst:184
msgid ""
"The following additional characters may be appended to control how the "
"database is opened:"
msgstr ""
"Följande tilläggstecken kan läggas till för att styra hur databasen öppnas:"

#: ../../library/dbm.rst:187
msgid ""
"``'f'``: Open the database in fast mode. Writes to the database will not be "
"synchronized."
msgstr ""
"``'f'``: Öppna databasen i snabbläge. Skrivningar till databasen kommer inte"
" att synkroniseras."

#: ../../library/dbm.rst:189
msgid ""
"``'s'``: Synchronized mode. Changes to the database will be written "
"immediately to the file."
msgstr ""
"``'s'``: Synkroniserat läge. Ändringar i databasen kommer omedelbart att "
"skrivas till filen."

#: ../../library/dbm.rst:191
msgid "``'u'``: Do not lock database."
msgstr "``'u'``: Lås inte databasen."

#: ../../library/dbm.rst:193
msgid ""
"Not all flags are valid for all versions of GDBM. See the :data:`open_flags`"
" member for a list of supported flag characters."
msgstr ""
"Alla flaggor är inte giltiga för alla versioner av GDBM. Se medlemmen "
":data:`open_flags` för en lista över flaggtecken som stöds."

#: ../../library/dbm.rst:0
msgid "Raises"
msgstr "Höjer"

#: ../../library/dbm.rst:199
msgid "If an invalid *flag* argument is passed."
msgstr "Om ett ogiltigt *flag*-argument skickas."

#: ../../library/dbm.rst:207
msgid ""
"A string of characters the *flag* parameter of :meth:`~dbm.gnu.open` "
"supports."
msgstr ""
"En sträng med tecken som parametern *flag* i :meth:`~dbm.gnu.open` stöder."

#: ../../library/dbm.rst:209
msgid ""
":class:`!gdbm` objects behave similar to :term:`mappings <mapping>`, but "
":meth:`!items` and :meth:`!values` methods are not supported. The following "
"methods are also provided:"
msgstr ""
":class:`!gdbm`\\-objekt beter sig på liknande sätt som :term:`mappings "
"<mapping>`, men metoderna :meth:`!items` och :meth:`!values` stöds inte. "
"Följande metoder tillhandahålls också:"

#: ../../library/dbm.rst:215
msgid ""
"It's possible to loop over every key in the database using this method  and "
"the :meth:`nextkey` method.  The traversal is ordered by GDBM's internal "
"hash values, and won't be sorted by the key values.  This method returns the"
" starting key."
msgstr ""
"Det är möjligt att loopa över varje nyckel i databasen med hjälp av denna "
"metod och metoden :meth:`nextkey`.  Traversieringen ordnas efter GDBM:s "
"interna hashvärden och sorteras inte efter nyckelvärdena.  Den här metoden "
"returnerar startnyckeln."

#: ../../library/dbm.rst:222
msgid ""
"Returns the key that follows *key* in the traversal.  The following code "
"prints every key in the database ``db``, without having to create a list in "
"memory that contains them all::"
msgstr ""
"Returnerar den nyckel som följer efter *nyckel* i traverseringen.  Följande "
"kod skriver ut alla nycklar i databasen ``db``, utan att behöva skapa en "
"lista i minnet som innehåller dem alla::"

#: ../../library/dbm.rst:233
msgid ""
"If you have carried out a lot of deletions and would like to shrink the "
"space used by the GDBM file, this routine will reorganize the database.  "
":class:`!gdbm` objects will not shorten the length of a database file except"
" by using this reorganization; otherwise, deleted file space will be kept "
"and reused as new (key, value) pairs are added."
msgstr ""
"Om du har gjort många raderingar och vill krympa det utrymme som GDBM-filen "
"använder, omorganiserar den här rutinen databasen. :class:`!gdbm`\\-objekt "
"förkortar inte längden på en databasfil utom genom att använda den här "
"omorganisationen; annars behålls det raderade filutrymmet och återanvänds "
"när nya (nyckel, värde)-par läggs till."

#: ../../library/dbm.rst:241
msgid ""
"When the database has been opened in fast mode, this method forces any "
"unwritten data to be written to the disk."
msgstr ""
"När databasen har öppnats i snabbläge tvingar den här metoden alla oskrivna "
"data att skrivas till disken."

#: ../../library/dbm.rst:246
msgid "Close the GDBM database."
msgstr "Stäng GDBM-databasen."

#: ../../library/dbm.rst:250
msgid ":mod:`dbm.ndbm` --- New Database Manager"
msgstr ":mod:`dbm.ndbm` --- Ny databashanterare"

#: ../../library/dbm.rst:256
msgid "**Source code:** :source:`Lib/dbm/ndbm.py`"
msgstr "**Källkod:** :source:`Lib/dbm/ndbm.py`"

#: ../../library/dbm.rst:260
msgid ""
"The :mod:`dbm.ndbm` module provides an interface to the :abbr:`NDBM (New "
"Database Manager)` library. This module can be used with the \"classic\" "
"NDBM interface or the :abbr:`GDBM (GNU dbm)` compatibility interface."
msgstr ""
"Modulen :mod:`dbm.ndbm` tillhandahåller ett gränssnitt till biblioteket "
":abbr:`NDBM (New Database Manager)`. Denna modul kan användas med det "
"\"klassiska\" NDBM-gränssnittet eller :abbr:`GDBM (GNU dbm)` "
"kompatibilitetsgränssnitt."

#: ../../library/dbm.rst:272
msgid ""
"The NDBM library shipped as part of macOS has an undocumented limitation on "
"the size of values, which can result in corrupted database files when "
"storing values larger than this limit. Reading such corrupted files can "
"result in a hard crash (segmentation fault)."
msgstr ""
"NDBM-biblioteket som levereras som en del av macOS har en odokumenterad "
"begränsning av storleken på värden, vilket kan resultera i skadade "
"databasfiler när värden som är större än denna gräns lagras. Läsning av "
"sådana skadade filer kan resultera i en hårdkrasch (segmenteringsfel)."

#: ../../library/dbm.rst:279
msgid ""
"Raised on :mod:`dbm.ndbm`-specific errors, such as I/O errors. "
":exc:`KeyError` is raised for general mapping errors like specifying an "
"incorrect key."
msgstr ""
"Uppstår vid :mod:`dbm.ndbm`\\-specifika fel, t.ex. I/O-fel. :exc:`KeyError` "
"uppstår vid allmänna mappningsfel, t.ex. om en felaktig nyckel anges."

#: ../../library/dbm.rst:285
msgid "Name of the NDBM implementation library used."
msgstr "Namn på det implementeringsbibliotek för NDBM som används."

#: ../../library/dbm.rst:290
msgid "Open an NDBM database and return an :class:`!ndbm` object."
msgstr "Öppna en NDBM-databas och returnera ett :class:`!ndbm`\\-objekt."

#: ../../library/dbm.rst:292
msgid ""
"The basename of the database file (without the :file:`.dir` or :file:`.pag` "
"extensions)."
msgstr ""
"Grundnamnet på databasfilen (utan tilläggen :file:`.dir` eller "
":file:`.pag`)."

#: ../../library/dbm.rst:306
msgid ""
":class:`!ndbm` objects behave similar to :term:`mappings <mapping>`, but "
":meth:`!items` and :meth:`!values` methods are not supported. The following "
"methods are also provided:"
msgstr ""
":class:`!ndbm`\\-objekt beter sig på liknande sätt som :term:`mappings "
"<mapping>`, men metoderna :meth:`!items` och :meth:`!values` stöds inte. "
"Följande metoder tillhandahålls också:"

#: ../../library/dbm.rst:310
msgid "Accepts :term:`path-like object` for filename."
msgstr "Accepterar :term:`path-like object` för filnamn."

#: ../../library/dbm.rst:315
msgid "Close the NDBM database."
msgstr "Stäng NDBM-databasen."

#: ../../library/dbm.rst:319
msgid ":mod:`dbm.dumb` --- Portable DBM implementation"
msgstr ":mod:`dbm.dumb` --- Portabel DBM-implementering"

#: ../../library/dbm.rst:324
msgid "**Source code:** :source:`Lib/dbm/dumb.py`"
msgstr "**Källkod:** :source:`Lib/dbm/dumb.py`"

#: ../../library/dbm.rst:330
msgid ""
"The :mod:`dbm.dumb` module is intended as a last resort fallback for the "
":mod:`dbm` module when a more robust module is not available. The "
":mod:`dbm.dumb` module is not written for speed and is not nearly as heavily"
" used as the other database modules."
msgstr ""
"Modulen :mod:`dbm.dumb` är avsedd som en sista utväg för modulen :mod:`dbm` "
"när en mer robust modul inte är tillgänglig. Modulen :mod:`dbm.dumb` är inte"
" skriven för snabbhet och används inte alls lika flitigt som de andra "
"databasmodulerna."

#: ../../library/dbm.rst:337
msgid ""
"The :mod:`dbm.dumb` module provides a persistent :class:`dict`-like "
"interface which is written entirely in Python. Unlike other :mod:`dbm` "
"backends, such as :mod:`dbm.gnu`, no external library is required."
msgstr ""
"Modulen :mod:`dbm.dumb` tillhandahåller ett beständigt "
":class:`dict`\\-liknande gränssnitt som är helt skrivet i Python. Till "
"skillnad från andra :mod:`dbm`\\-backends, såsom :mod:`dbm.gnu`, krävs inget"
" externt bibliotek."

#: ../../library/dbm.rst:342
msgid "The :mod:`!dbm.dumb` module defines the following:"
msgstr "Modulen :mod:`!dbm.dumb` definierar följande:"

#: ../../library/dbm.rst:346
msgid ""
"Raised on :mod:`dbm.dumb`-specific errors, such as I/O errors.  "
":exc:`KeyError` is raised for general mapping errors like specifying an "
"incorrect key."
msgstr ""
"Uppstår vid :mod:`dbm.dumb`\\-specifika fel, t.ex. I/O-fel. :exc:`KeyError` "
"uppstår vid allmänna mappningsfel som t.ex. att ange en felaktig nyckel."

#: ../../library/dbm.rst:352
msgid ""
"Open a :mod:`!dbm.dumb` database. The returned database object behaves "
"similar to a :term:`mapping`, in addition to providing :meth:`~dumbdbm.sync`"
" and :meth:`~dumbdbm.close` methods."
msgstr ""
"Öppnar en :mod:`!dbm.dumb`\\-databas. Det returnerade databasobjektet beter "
"sig på liknande sätt som en :term:`mapping`, förutom att det tillhandahåller"
" metoderna :meth:`~dumbdbm.sync` och :meth:`~dumbdbm.close`."

#: ../../library/dbm.rst:357
msgid ""
"The basename of the database file (without extensions). A new database "
"creates the following files:  - :file:`{filename}.dat` - "
":file:`{filename}.dir`"
msgstr ""
"Grundnamnet på databasfilen (utan tillägg). En ny databas skapar följande "
"filer:  - :file:`{filename}.dat` - :file:`{filename}.dir` - "
":file:`{filename}.dir`"

#: ../../library/dbm.rst:358
msgid ""
"The basename of the database file (without extensions). A new database "
"creates the following files:"
msgstr ""
"Grundnamnet på databasfilen (utan tillägg). En ny databas skapar följande "
"filer:"

#: ../../library/dbm.rst:361
msgid ":file:`{filename}.dat`"
msgstr ":file:`{filename}.dat`"

#: ../../library/dbm.rst:362
msgid ":file:`{filename}.dir`"
msgstr ":file:`{filename}.dir`"

#: ../../library/dbm.rst:365
msgid ""
"* ``'r'``: |flag_r| * ``'w'``: |flag_w| * ``'c'`` (default): |flag_c| * "
"``'n'``: |flag_n|"
msgstr ""
"* ``'r'``: |flag_r| * ``'w'``: |flag_w| * ``'c'`` (standard): |flag_c| * "
"``'n'``: |flag_n|"

#: ../../library/dbm.rst:366
msgid "``'r'``: |flag_r|"
msgstr "``'r'``: |flag_r|"

#: ../../library/dbm.rst:368
msgid "``'c'`` (default): |flag_c|"
msgstr "``'c'`` (standard): |flag_c|"

#: ../../library/dbm.rst:375
msgid ""
"It is possible to crash the Python interpreter when loading a database with "
"a sufficiently large/complex entry due to stack depth limitations in "
"Python's AST compiler."
msgstr ""
"Det är möjligt att krascha Python-tolken när man laddar en databas med en "
"tillräckligt stor/komplex post på grund av begränsningar i stackdjupet i "
"Pythons AST-kompilator."

#: ../../library/dbm.rst:379
msgid ""
":func:`~dbm.dumb.open` always creates a new database when *flag* is ``'n'``."
msgstr ""
":func:`~dbm.dumb.open` skapar alltid en ny databas när *flag* är ``'n'``."

#: ../../library/dbm.rst:382
msgid ""
"A database opened read-only if *flag* is ``'r'``. A database is not created "
"if it does not exist if *flag* is ``'r'`` or ``'w'``."
msgstr ""
"En databas öppnas skrivskyddad om *flag* är ``'r'``. En databas skapas inte "
"om den inte redan finns om *flag* är ``'r'`` eller ``'w'``."

#: ../../library/dbm.rst:389
msgid ""
"In addition to the methods provided by the "
":class:`collections.abc.MutableMapping` class, the following methods are "
"provided:"
msgstr ""
"Förutom de metoder som tillhandahålls av "
":class:`collections.abc.MutableMapping`\\-klassen, tillhandahålls följande "
"metoder:"

#: ../../library/dbm.rst:395
msgid ""
"Synchronize the on-disk directory and data files.  This method is called by "
"the :meth:`Shelve.sync` method."
msgstr ""

#: ../../library/dbm.rst:400
msgid "Close the database."
msgstr "Stäng databasen."

#: ../../library/dbm.rst:326
msgid "databases"
msgstr "databaser"
