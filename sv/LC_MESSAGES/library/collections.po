# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# python-doc bot, 2025
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.10\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-10-17 17:19+0000\n"
"PO-Revision-Date: 2025-09-22 15:57+0000\n"
"Last-Translator: python-doc bot, 2025\n"
"Language-Team: Swedish (https://app.transifex.com/python-doc/teams/5390/"
"sv/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: sv\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"

#: ../../library/collections.rst:2
msgid ":mod:`collections` --- Container datatypes"
msgstr ""

#: ../../library/collections.rst:10
msgid "**Source code:** :source:`Lib/collections/__init__.py`"
msgstr "**Källkod:** :source:`Lib/collections/__init__.py`"

#: ../../library/collections.rst:20
msgid ""
"This module implements specialized container datatypes providing "
"alternatives to Python's general purpose built-in containers, :class:"
"`dict`, :class:`list`, :class:`set`, and :class:`tuple`."
msgstr ""
"Denna modul implementerar specialiserade datatyper för containrar som ger "
"alternativ till Pythons inbyggda containrar för allmänna ändamål, :class:"
"`dict`, :class:`list`, :class:`set` och :class:`tuple`."

#: ../../library/collections.rst:25
msgid ":func:`namedtuple`"
msgstr ":func:`namedtuple`"

#: ../../library/collections.rst:25
msgid "factory function for creating tuple subclasses with named fields"
msgstr "fabriksfunktion för att skapa tuple-subklasser med namngivna fält"

#: ../../library/collections.rst:26
msgid ":class:`deque`"
msgstr ":class:`deque`"

#: ../../library/collections.rst:26
msgid "list-like container with fast appends and pops on either end"
msgstr "listliknande behållare med snabba tillägg och öppningar i båda ändar"

#: ../../library/collections.rst:27
msgid ":class:`ChainMap`"
msgstr ":class:`KedjeMap`"

#: ../../library/collections.rst:27
msgid "dict-like class for creating a single view of multiple mappings"
msgstr "diktliknande klass för att skapa en enda vy av flera mappningar"

#: ../../library/collections.rst:28
msgid ":class:`Counter`"
msgstr ":class:`Counter`"

#: ../../library/collections.rst:28
msgid "dict subclass for counting :term:`hashable` objects"
msgstr "dict-underklass för räkning av :term:`hashable`\\-objekt"

#: ../../library/collections.rst:29
msgid ":class:`OrderedDict`"
msgstr ":class:`OrderedDict`"

#: ../../library/collections.rst:29
msgid "dict subclass that remembers the order entries were added"
msgstr "dict-underklass som kommer ihåg i vilken ordning posterna lades till"

#: ../../library/collections.rst:30
msgid ":class:`defaultdict`"
msgstr ":class:`defaultdict`"

#: ../../library/collections.rst:30
msgid "dict subclass that calls a factory function to supply missing values"
msgstr ""
"dict-underklass som anropar en fabriksfunktion för att leverera saknade "
"värden"

#: ../../library/collections.rst:31
msgid ":class:`UserDict`"
msgstr ":class:`UserDict`"

#: ../../library/collections.rst:31
msgid "wrapper around dictionary objects for easier dict subclassing"
msgstr "omslag runt ordboksobjekt för enklare underklassning av ordböcker"

#: ../../library/collections.rst:32
msgid ":class:`UserList`"
msgstr ":class:`UserList`"

#: ../../library/collections.rst:32
msgid "wrapper around list objects for easier list subclassing"
msgstr "omslag runt listobjekt för enklare underklassning av listor"

#: ../../library/collections.rst:33
msgid ":class:`UserString`"
msgstr ":class:`UserString`"

#: ../../library/collections.rst:33
msgid "wrapper around string objects for easier string subclassing"
msgstr "omslag runt strängobjekt för enklare underklassning av strängar"

#: ../../library/collections.rst:38
msgid ":class:`ChainMap` objects"
msgstr ":class:`ChainMap`\\-objekt"

#: ../../library/collections.rst:42
msgid ""
"A :class:`ChainMap` class is provided for quickly linking a number of "
"mappings so they can be treated as a single unit.  It is often much faster "
"than creating a new dictionary and running multiple :meth:`~dict.update` "
"calls."
msgstr ""
"En :class:`ChainMap`\\-klass tillhandahålls för att snabbt länka ett antal "
"mappningar så att de kan behandlas som en enda enhet.  Det är ofta mycket "
"snabbare än att skapa en ny ordbok och köra flera :meth:`~dict.update`\\-"
"anrop."

#: ../../library/collections.rst:46
msgid ""
"The class can be used to simulate nested scopes and is useful in templating."
msgstr ""
"Klassen kan användas för att simulera nästlade scopes och är användbar i "
"templating."

#: ../../library/collections.rst:50
msgid ""
"A :class:`ChainMap` groups multiple dicts or other mappings together to "
"create a single, updateable view.  If no *maps* are specified, a single "
"empty dictionary is provided so that a new chain always has at least one "
"mapping."
msgstr ""
"En :class:`ChainMap` grupperar flera dicts eller andra mappningar "
"tillsammans för att skapa en enda, uppdaterbar vy.  Om inga *mappningar* "
"anges, tillhandahålls en enda tom ordbok så att en ny kedja alltid har minst "
"en mappning."

#: ../../library/collections.rst:54
msgid ""
"The underlying mappings are stored in a list.  That list is public and can "
"be accessed or updated using the *maps* attribute.  There is no other state."
msgstr ""
"De underliggande mappningarna lagras i en lista.  Listan är offentlig och "
"kan nås eller uppdateras med hjälp av attributet *maps*.  Det finns inget "
"annat tillstånd."

#: ../../library/collections.rst:57
msgid ""
"Lookups search the underlying mappings successively until a key is found.  "
"In contrast, writes, updates, and deletions only operate on the first "
"mapping."
msgstr ""
"Lookups söker igenom de underliggande mappningarna successivt tills en "
"nyckel hittas.  Skrivningar, uppdateringar och borttagningar påverkar "
"däremot bara den första mappningen."

#: ../../library/collections.rst:60
msgid ""
"A :class:`ChainMap` incorporates the underlying mappings by reference.  So, "
"if one of the underlying mappings gets updated, those changes will be "
"reflected in :class:`ChainMap`."
msgstr ""
"En :class:`ChainMap` innehåller de underliggande mappningarna genom "
"referens.  Så om en av de underliggande mappningarna uppdateras, kommer "
"dessa ändringar att återspeglas i :class:`ChainMap`."

#: ../../library/collections.rst:64
msgid ""
"All of the usual dictionary methods are supported.  In addition, there is a "
"*maps* attribute, a method for creating new subcontexts, and a property for "
"accessing all but the first mapping:"
msgstr ""
"Alla de vanliga metoderna för ordböcker stöds.  Dessutom finns ett *maps*-"
"attribut, en metod för att skapa nya underkontexter och en egenskap för att "
"komma åt alla mappningar utom den första:"

#: ../../library/collections.rst:70
msgid ""
"A user updateable list of mappings.  The list is ordered from first-searched "
"to last-searched.  It is the only stored state and can be modified to change "
"which mappings are searched.  The list should always contain at least one "
"mapping."
msgstr ""
"En lista med mappningar som kan uppdateras av användaren.  Listan är ordnad "
"från först sökta till sist sökta.  Det är det enda lagrade tillståndet och "
"kan modifieras för att ändra vilka mappningar som ska sökas.  Listan bör "
"alltid innehålla minst en mappning."

#: ../../library/collections.rst:77
msgid ""
"Returns a new :class:`ChainMap` containing a new map followed by all of the "
"maps in the current instance.  If ``m`` is specified, it becomes the new map "
"at the front of the list of mappings; if not specified, an empty dict is "
"used, so that a call to ``d.new_child()`` is equivalent to: ``ChainMap({}, "
"*d.maps)``. If any keyword arguments are specified, they update passed map "
"or new empty dict. This method is used for creating subcontexts that can be "
"updated without altering values in any of the parent mappings."
msgstr ""
"Returnerar en ny :class:`ChainMap` som innehåller en ny karta följd av alla "
"kartor i den aktuella instansen.  Om ``m`` specificeras blir det den nya "
"kartan längst fram i listan över mappningar; om den inte specificeras "
"används en tom dict, så att ett anrop till ``d.new_child()`` är likvärdigt "
"med: ``ChainMap({}, *d.maps)``. Om några nyckelordsargument anges uppdaterar "
"de den map som skickas eller en ny tom dict. Den här metoden används för att "
"skapa underkontexter som kan uppdateras utan att ändra värden i någon av de "
"överordnade mappningarna."

#: ../../library/collections.rst:86
msgid "The optional ``m`` parameter was added."
msgstr "Den valfria parametern ``m`` har lagts till."

#: ../../library/collections.rst:89
msgid "Keyword arguments support was added."
msgstr "Stöd för sökordsargument har lagts till."

#: ../../library/collections.rst:94
msgid ""
"Property returning a new :class:`ChainMap` containing all of the maps in the "
"current instance except the first one.  This is useful for skipping the "
"first map in the search.  Use cases are similar to those for the :keyword:"
"`nonlocal` keyword used in :term:`nested scopes <nested scope>`.  The use "
"cases also parallel those for the built-in :func:`super` function.  A "
"reference to ``d.parents`` is equivalent to: ``ChainMap(*d.maps[1:])``."
msgstr ""
"Egenskap som returnerar en ny :class:`ChainMap` som innehåller alla kartor i "
"den aktuella instansen utom den första.  Detta är användbart för att hoppa "
"över den första kartan i sökningen.  Användningsfallen liknar dem för "
"nyckelordet :keyword:`nonlocal` som används i :term:`nested scopes <nested "
"scope>`.  Användningsfallen är också parallella med dem för den inbyggda "
"funktionen :func:`super`.  En referens till ``d.parents`` är likvärdig med: "
"``ChainMap(*d.maps[1:])``."

#: ../../library/collections.rst:102
msgid ""
"Note, the iteration order of a :class:`ChainMap()` is determined by scanning "
"the mappings last to first::"
msgstr ""

#: ../../library/collections.rst:110
msgid ""
"This gives the same ordering as a series of :meth:`dict.update` calls "
"starting with the last mapping::"
msgstr ""
"Detta ger samma ordning som en serie :meth:`dict.update`\\-anrop som börjar "
"med den sista mappningen::"

#: ../../library/collections.rst:118
msgid "Added support for ``|`` and ``|=`` operators, specified in :pep:`584`."
msgstr ""
"Lagt till stöd för operatorerna ``|`` och ``|=``, specificerat i :pep:`584`."

#: ../../library/collections.rst:123
msgid ""
"The `MultiContext class <https://github.com/enthought/codetools/blob/4.0.0/"
"codetools/contexts/multi_context.py>`_ in the Enthought `CodeTools package "
"<https://github.com/enthought/codetools>`_ has options to support writing to "
"any mapping in the chain."
msgstr ""
"Klassen `MultiContext <https://github.com/enthought/codetools/blob/4.0.0/"
"codetools/contexts/multi_context.py>`_ i Enthoughts `CodeTools-paket "
"<https://github.com/enthought/codetools>`_ har alternativ för att stödja "
"skrivning till alla mappningar i kedjan."

#: ../../library/collections.rst:129
msgid ""
"Django's `Context class <https://github.com/django/django/blob/main/django/"
"template/context.py>`_ for templating is a read-only chain of mappings.  It "
"also features pushing and popping of contexts similar to the :meth:"
"`~collections.ChainMap.new_child` method and the :attr:`~collections."
"ChainMap.parents` property."
msgstr ""
"Djangos `Context class <https://github.com/django/django/blob/main/django/"
"template/context.py>`_ för templating är en skrivskyddad kedja av "
"mappningar.  Den innehåller också pushing och popping av kontexter som "
"liknar metoden :meth:`~collections.ChainMap.new_child` och egenskapen :attr:"
"`~collections.ChainMap.parents`."

#: ../../library/collections.rst:136
msgid ""
"The `Nested Contexts recipe <https://code.activestate.com/recipes/577434/>`_ "
"has options to control whether writes and other mutations apply only to the "
"first mapping or to any mapping in the chain."
msgstr ""

#: ../../library/collections.rst:141
msgid ""
"A `greatly simplified read-only version of Chainmap <https://code."
"activestate.com/recipes/305268/>`_."
msgstr ""
"En `kraftigt förenklad skrivskyddad version av Chainmap <https://code."
"activestate.com/recipes/305268/>`_."

#: ../../library/collections.rst:146
msgid ":class:`ChainMap` Examples and Recipes"
msgstr ":class:`ChainMap` Exempel och recept"

#: ../../library/collections.rst:148
msgid "This section shows various approaches to working with chained maps."
msgstr "I detta avsnitt visas olika sätt att arbeta med kedjade kartor."

#: ../../library/collections.rst:151
msgid "Example of simulating Python's internal lookup chain::"
msgstr "Exempel på simulering av Pythons interna lookup-kedja::"

#: ../../library/collections.rst:156
msgid ""
"Example of letting user specified command-line arguments take precedence "
"over environment variables which in turn take precedence over default "
"values::"
msgstr ""
"Exempel på att låta användarspecifika kommandoradsargument ha företräde "
"framför miljövariabler som i sin tur har företräde framför standardvärden::"

#: ../../library/collections.rst:173
msgid ""
"Example patterns for using the :class:`ChainMap` class to simulate nested "
"contexts::"
msgstr ""
"Exempel på mönster för användning av klassen :class:`ChainMap` för att "
"simulera nästlade kontexter::"

#: ../../library/collections.rst:192
msgid ""
"The :class:`ChainMap` class only makes updates (writes and deletions) to the "
"first mapping in the chain while lookups will search the full chain.  "
"However, if deep writes and deletions are desired, it is easy to make a "
"subclass that updates keys found deeper in the chain::"
msgstr ""
"Klassen :class:`ChainMap` gör bara uppdateringar (skrivningar och "
"raderingar) till den första mappningen i kedjan medan uppslagningar söker i "
"hela kedjan.  Men om djupa skrivningar och raderingar önskas är det enkelt "
"att skapa en underklass som uppdaterar nycklar som finns djupare i kedjan::"

#: ../../library/collections.rst:223
msgid ":class:`Counter` objects"
msgstr ":class:`Counter`\\-objekt"

#: ../../library/collections.rst:225
msgid ""
"A counter tool is provided to support convenient and rapid tallies. For "
"example::"
msgstr ""
"Ett räkneverktyg tillhandahålls för att stödja praktiska och snabba "
"räkningar. Till exempel::"

#: ../../library/collections.rst:244
msgid ""
"A :class:`Counter` is a :class:`dict` subclass for counting :term:`hashable` "
"objects. It is a collection where elements are stored as dictionary keys and "
"their counts are stored as dictionary values.  Counts are allowed to be any "
"integer value including zero or negative counts.  The :class:`Counter` class "
"is similar to bags or multisets in other languages."
msgstr ""
"En :class:`Counter` är en :class:`dict`\\-underklass för att räkna :term:"
"`hashable`\\-objekt. Det är en samling där element lagras som nycklar i en "
"ordbok och deras antal lagras som ordboksvärden.  Antalet kan vara vilket "
"heltalsvärde som helst, inklusive noll eller negativa värden.  Klassen :"
"class:`Counter` liknar påsar eller multisets i andra språk."

#: ../../library/collections.rst:250
msgid ""
"Elements are counted from an *iterable* or initialized from another "
"*mapping* (or counter):"
msgstr ""
"Element räknas från en *iterable* eller initialiseras från en annan "
"*mapping* (eller räknare):"

#: ../../library/collections.rst:258
msgid ""
"Counter objects have a dictionary interface except that they return a zero "
"count for missing items instead of raising a :exc:`KeyError`:"
msgstr ""
"Counter-objekt har ett dictionary-gränssnitt förutom att de returnerar ett "
"nollvärde för saknade objekt i stället för att ge upphov till ett :exc:"
"`KeyError`:"

#: ../../library/collections.rst:265
msgid ""
"Setting a count to zero does not remove an element from a counter. Use "
"``del`` to remove it entirely:"
msgstr ""
"Att nollställa ett räkneverk tar inte bort ett element från ett räkneverk. "
"Använd ``del`` för att ta bort det helt:"

#: ../../library/collections.rst:273
msgid ""
"As a :class:`dict` subclass, :class:`Counter` inherited the capability to "
"remember insertion order.  Math operations on *Counter* objects also "
"preserve order.  Results are ordered according to when an element is first "
"encountered in the left operand and then by the order encountered in the "
"right operand."
msgstr ""
"Som en underklass till :class:`dict` ärvde :class:`Counter` förmågan att "
"komma ihåg inmatningsordning.  Matematiska operationer på *Counter*-objekt "
"bevarar också ordningen.  Resultaten sorteras efter när ett element först "
"påträffas i den vänstra operanden och sedan efter den ordning som det "
"påträffas i den högra operanden."

#: ../../library/collections.rst:279
msgid ""
"Counter objects support additional methods beyond those available for all "
"dictionaries:"
msgstr ""
"Counter-objekt stöder ytterligare metoder utöver de som är tillgängliga för "
"alla ordböcker:"

#: ../../library/collections.rst:284
msgid ""
"Return an iterator over elements repeating each as many times as its count.  "
"Elements are returned in the order first encountered. If an element's count "
"is less than one, :meth:`elements` will ignore it."
msgstr ""
"Returnerar en iterator över element som upprepar varje element lika många "
"gånger som dess antal.  Elementen returneras i den ordning de först "
"påträffades. Om ett elements antal är mindre än ett kommer :meth:`elements` "
"att ignorera det."

#: ../../library/collections.rst:294
msgid ""
"Return a list of the *n* most common elements and their counts from the most "
"common to the least.  If *n* is omitted or ``None``, :meth:`most_common` "
"returns *all* elements in the counter. Elements with equal counts are "
"ordered in the order first encountered:"
msgstr ""
"Returnerar en lista med de *n* vanligaste elementen och deras antal från det "
"vanligaste till det minst vanliga.  Om *n* utelämnas eller ``None`` "
"returnerar :meth:`most_common` *alla* element i räknaren. Element med lika "
"antal ordnas i den ordning som de först påträffades:"

#: ../../library/collections.rst:304
msgid ""
"Elements are subtracted from an *iterable* or from another *mapping* (or "
"counter).  Like :meth:`dict.update` but subtracts counts instead of "
"replacing them.  Both inputs and outputs may be zero or negative."
msgstr ""
"Element subtraheras från en *iterable* eller från en annan *mappning* (eller "
"räknare).  Som :meth:`dict.update` men subtraherar räkningar istället för "
"att ersätta dem.  Både ingångar och utgångar kan vara noll eller negativa."

#: ../../library/collections.rst:318
msgid "Compute the sum of the counts."
msgstr "Beräkna summan av räkningarna."

#: ../../library/collections.rst:326
msgid ""
"The usual dictionary methods are available for :class:`Counter` objects "
"except for two which work differently for counters."
msgstr ""
"De vanliga ordboksmetoderna är tillgängliga för :class:`Counter`\\-objekt, "
"förutom två som fungerar annorlunda för räknare."

#: ../../library/collections.rst:331
msgid "This class method is not implemented for :class:`Counter` objects."
msgstr "Denna klassmetod är inte implementerad för :class:`Counter`\\-objekt."

#: ../../library/collections.rst:335
msgid ""
"Elements are counted from an *iterable* or added-in from another *mapping* "
"(or counter).  Like :meth:`dict.update` but adds counts instead of replacing "
"them.  Also, the *iterable* is expected to be a sequence of elements, not a "
"sequence of ``(key, value)`` pairs."
msgstr ""
"Element räknas från en *iterable* eller läggs till från en annan *mappning* "
"(eller räknare).  Som :meth:`dict.update` men lägger till räkningar istället "
"för att ersätta dem.  Dessutom förväntas *iterable* vara en sekvens av "
"element, inte en sekvens av par av typen ``(nyckel, värde)``."

#: ../../library/collections.rst:340
msgid ""
"Counters support rich comparison operators for equality, subset, and "
"superset relationships: ``==``, ``!=``, ``<``, ``<=``, ``>``, ``>=``. All of "
"those tests treat missing elements as having zero counts so that "
"``Counter(a=1) == Counter(a=1, b=0)`` returns true."
msgstr ""
"Counters stöder omfattande jämförelseoperatorer för jämlikhet, delmängd och "
"övermängdsrelationer: ``==``, ``!=``, ``<``, ``<=``, ``>``, ``>=``. Alla "
"dessa tester behandlar saknade element som om de har noll i antal, så att "
"``Counter(a=1) == Counter(a=1, b=0)`` returnerar sant."

#: ../../library/collections.rst:345
msgid "Rich comparison operations were added."
msgstr "Rika jämförelseoperationer har lagts till."

#: ../../library/collections.rst:348
msgid ""
"In equality tests, missing elements are treated as having zero counts. "
"Formerly, ``Counter(a=3)`` and ``Counter(a=3, b=0)`` were considered "
"distinct."
msgstr ""
"I likhetstester behandlas saknade element som om de hade noll räkningar. "
"Tidigare ansågs ``Counter(a=3)`` och ``Counter(a=3, b=0)`` vara skilda."

#: ../../library/collections.rst:353
msgid "Common patterns for working with :class:`Counter` objects::"
msgstr "Vanliga mönster för att arbeta med :class:`Counter`\\-objekt::"

#: ../../library/collections.rst:365
msgid ""
"Several mathematical operations are provided for combining :class:`Counter` "
"objects to produce multisets (counters that have counts greater than zero). "
"Addition and subtraction combine counters by adding or subtracting the "
"counts of corresponding elements.  Intersection and union return the minimum "
"and maximum of corresponding counts.  Equality and inclusion compare "
"corresponding counts.  Each operation can accept inputs with signed counts, "
"but the output will exclude results with counts of zero or less."
msgstr ""
"Flera matematiska operationer finns för att kombinera :class:`Counter`\\-"
"objekt för att producera multisets (räknare som har antal större än noll). "
"Addition och subtraktion kombinerar räknare genom att addera eller "
"subtrahera räknevärdena för motsvarande element.  Intersection och union "
"returnerar minimum och maximum av motsvarande räkningar.  Equality och "
"inclusion jämför motsvarande räkningar.  Varje operation kan acceptera "
"inmatningar med signerade räkningar, men utmatningen kommer att utesluta "
"resultat med räkningar på noll eller mindre."

#: ../../library/collections.rst:390
msgid ""
"Unary addition and subtraction are shortcuts for adding an empty counter or "
"subtracting from an empty counter."
msgstr ""
"Unary addition och subtraction är genvägar för att addera en tom räknare "
"eller subtrahera från en tom räknare."

#: ../../library/collections.rst:399
msgid ""
"Added support for unary plus, unary minus, and in-place multiset operations."
msgstr ""
"Stöd för unary plus, unary minus och in-place multiset-operationer har lagts "
"till."

#: ../../library/collections.rst:404
msgid ""
"Counters were primarily designed to work with positive integers to represent "
"running counts; however, care was taken to not unnecessarily preclude use "
"cases needing other types or negative values.  To help with those use cases, "
"this section documents the minimum range and type restrictions."
msgstr ""
"Räknare utformades i första hand för att fungera med positiva heltal för att "
"representera löpande räkningar, men man var noga med att inte i onödan "
"utesluta användningsfall som behövde andra typer eller negativa värden.  För "
"att hjälpa till med dessa användningsfall dokumenterar detta avsnitt "
"minimiintervall och typbegränsningar."

#: ../../library/collections.rst:409
msgid ""
"The :class:`Counter` class itself is a dictionary subclass with no "
"restrictions on its keys and values.  The values are intended to be numbers "
"representing counts, but you *could* store anything in the value field."
msgstr ""
"Klassen :class:`Counter` är i sig en dictionary-subklass utan några "
"restriktioner för dess nycklar och värden.  Värdena är avsedda att vara "
"siffror som representerar antal, men du *kan* lagra vad som helst i "
"värdefältet."

#: ../../library/collections.rst:413
msgid ""
"The :meth:`~Counter.most_common` method requires only that the values be "
"orderable."
msgstr ""
"Metoden :meth:`~Counter.most_common` kräver endast att värdena är "
"ordningsbara."

#: ../../library/collections.rst:415
msgid ""
"For in-place operations such as ``c[key] += 1``, the value type need only "
"support addition and subtraction.  So fractions, floats, and decimals would "
"work and negative values are supported.  The same is also true for :meth:"
"`~Counter.update` and :meth:`~Counter.subtract` which allow negative and "
"zero values for both inputs and outputs."
msgstr ""
"För in-place-operationer som ``c[key] += 1`` behöver värdetypen bara stödja "
"addition och subtraktion.  Så bråk, flyttal och decimaler skulle fungera och "
"negativa värden stöds.  Detsamma gäller även för :meth:`~Counter.update` "
"och :meth:`~Counter.subtract` som tillåter negativa och nollvärden för både "
"in- och utdata."

#: ../../library/collections.rst:421
msgid ""
"The multiset methods are designed only for use cases with positive values. "
"The inputs may be negative or zero, but only outputs with positive values "
"are created.  There are no type restrictions, but the value type needs to "
"support addition, subtraction, and comparison."
msgstr ""
"Multiset-metoderna är endast avsedda för användningsfall med positiva "
"värden. Ingångsvärdena kan vara negativa eller noll, men endast utgångar med "
"positiva värden skapas.  Det finns inga typbegränsningar, men värdetypen "
"måste stödja addition, subtraktion och jämförelse."

#: ../../library/collections.rst:426
msgid ""
"The :meth:`~Counter.elements` method requires integer counts.  It ignores "
"zero and negative counts."
msgstr ""
"Metoden :meth:`~Counter.elements` kräver heltalsräkningar.  Den ignorerar "
"noll och negativa räkningar."

#: ../../library/collections.rst:431
msgid ""
"`Bag class <https://www.gnu.org/software/smalltalk/manual-base/html_node/Bag."
"html>`_ in Smalltalk."
msgstr ""
"`Bag-klass <https://www.gnu.org/software/smalltalk/manual-base/html_node/Bag."
"html>`_ i Smalltalk."

#: ../../library/collections.rst:434
msgid ""
"Wikipedia entry for `Multisets <https://en.wikipedia.org/wiki/Multiset>`_."
msgstr ""
"Wikipedia-inlägg för `Multisets <https://en.wikipedia.org/wiki/Multiset>`_."

#: ../../library/collections.rst:436
msgid ""
"`C++ multisets <http://www.java2s.com/Tutorial/Cpp/0380__set-multiset/"
"Catalog0380__set-multiset.htm>`_ tutorial with examples."
msgstr ""
"`C++ multisets <http://www.java2s.com/Tutorial/Cpp/0380__set-multiset/"
"Catalog0380__set-multiset.htm>`_ handledning med exempel."

#: ../../library/collections.rst:439
msgid ""
"For mathematical operations on multisets and their use cases, see *Knuth, "
"Donald. The Art of Computer Programming Volume II, Section 4.6.3, Exercise "
"19*."
msgstr ""
"För matematiska operationer på flermängder och deras användningsområden, se "
"*Knuth, Donald. The Art of Computer Programming Volume II, avsnitt 4.6.3, "
"övning 19*."

#: ../../library/collections.rst:443
msgid ""
"To enumerate all distinct multisets of a given size over a given set of "
"elements, see :func:`itertools.combinations_with_replacement`::"
msgstr ""
"För att räkna upp alla distinkta fleruppsättningar av en viss storlek över "
"en viss uppsättning element, se :func:`itertools."
"combinations_with_replacement`::"

#: ../../library/collections.rst:450
msgid ":class:`deque` objects"
msgstr ":class:`deque`\\-objekt"

#: ../../library/collections.rst:454
msgid ""
"Returns a new deque object initialized left-to-right (using :meth:`append`) "
"with data from *iterable*.  If *iterable* is not specified, the new deque is "
"empty."
msgstr ""
"Returnerar ett nytt deque-objekt som initierats från vänster till höger "
"(med :meth:`append`) med data från *iterable*.  Om *iterable* inte anges är "
"det nya deque-objektet tomt."

#: ../../library/collections.rst:457
msgid ""
"Deques are a generalization of stacks and queues (the name is pronounced "
"\"deck\" and is short for \"double-ended queue\").  Deques support thread-"
"safe, memory efficient appends and pops from either side of the deque with "
"approximately the same O(1) performance in either direction."
msgstr ""

#: ../../library/collections.rst:462
msgid ""
"Though :class:`list` objects support similar operations, they are optimized "
"for fast fixed-length operations and incur O(n) memory movement costs for "
"``pop(0)`` and ``insert(0, v)`` operations which change both the size and "
"position of the underlying data representation."
msgstr ""

#: ../../library/collections.rst:468
msgid ""
"If *maxlen* is not specified or is ``None``, deques may grow to an arbitrary "
"length.  Otherwise, the deque is bounded to the specified maximum length.  "
"Once a bounded length deque is full, when new items are added, a "
"corresponding number of items are discarded from the opposite end.  Bounded "
"length deques provide functionality similar to the ``tail`` filter in Unix. "
"They are also useful for tracking transactions and other pools of data where "
"only the most recent activity is of interest."
msgstr ""
"Om *maxlen* inte anges eller är ``None``, kan deques växa till godtycklig "
"längd.  I annat fall är deque begränsad till den angivna maximala längden.  "
"När en deque med begränsad längd är full, när nya objekt läggs till, "
"kasseras ett motsvarande antal objekt från den motsatta änden.  Deques med "
"begränsad längd har en funktionalitet som liknar filtret ``tail`` i Unix. De "
"är också användbara för att spåra transaktioner och andra datapooler där "
"endast den senaste aktiviteten är av intresse."

#: ../../library/collections.rst:477
msgid "Deque objects support the following methods:"
msgstr "Deque-objekt stöder följande metoder:"

#: ../../library/collections.rst:481
msgid "Add *x* to the right side of the deque."
msgstr "Lägg till *x* på höger sida av deque."

#: ../../library/collections.rst:486
msgid "Add *x* to the left side of the deque."
msgstr "Lägg till *x* på vänster sida av deque."

#: ../../library/collections.rst:491
msgid "Remove all elements from the deque leaving it with length 0."
msgstr "Ta bort alla element från deque och lämna den med längd 0."

#: ../../library/collections.rst:496
msgid "Create a shallow copy of the deque."
msgstr "Skapa en ytlig kopia av deque."

#: ../../library/collections.rst:503
msgid "Count the number of deque elements equal to *x*."
msgstr "Räkna antalet deque-element som är lika med *x*."

#: ../../library/collections.rst:510
msgid ""
"Extend the right side of the deque by appending elements from the iterable "
"argument."
msgstr ""
"Förläng höger sida av deque genom att lägga till element från iterable-"
"argumentet."

#: ../../library/collections.rst:516
msgid ""
"Extend the left side of the deque by appending elements from *iterable*. "
"Note, the series of left appends results in reversing the order of elements "
"in the iterable argument."
msgstr ""
"Förläng vänster sida av deque genom att lägga till element från *iterable*. "
"Observera att serien av vänstra appends resulterar i att ordningen på "
"elementen i iterable-argumentet vänds."

#: ../../library/collections.rst:523
msgid ""
"Return the position of *x* in the deque (at or after index *start* and "
"before index *stop*).  Returns the first match or raises :exc:`ValueError` "
"if not found."
msgstr ""
"Returnerar positionen för *x* i deque (vid eller efter index *start* och "
"före index *stop*).  Returnerar den första matchningen eller ger :exc:"
"`ValueError` om den inte hittas."

#: ../../library/collections.rst:532
msgid "Insert *x* into the deque at position *i*."
msgstr "Sätt in *x* i deque på position *i*."

#: ../../library/collections.rst:534
msgid ""
"If the insertion would cause a bounded deque to grow beyond *maxlen*, an :"
"exc:`IndexError` is raised."
msgstr ""
"Om införandet skulle leda till att en avgränsad deque växer bortom *maxlen*, "
"kommer ett :exc:`IndexError` att uppstå."

#: ../../library/collections.rst:542
msgid ""
"Remove and return an element from the right side of the deque. If no "
"elements are present, raises an :exc:`IndexError`."
msgstr ""
"Tar bort och returnerar ett element från höger sida av deque. Om inga "
"element finns, uppstår ett :exc:`IndexError`."

#: ../../library/collections.rst:548
msgid ""
"Remove and return an element from the left side of the deque. If no elements "
"are present, raises an :exc:`IndexError`."
msgstr ""
"Tar bort och returnerar ett element från vänster sida av deque. Om inga "
"element finns, uppstår ett :exc:`IndexError`."

#: ../../library/collections.rst:554
msgid ""
"Remove the first occurrence of *value*.  If not found, raises a :exc:"
"`ValueError`."
msgstr ""
"Tar bort den första förekomsten av *värde*.  Om det inte hittas, uppstår "
"ett :exc:`ValueError`."

#: ../../library/collections.rst:560
msgid "Reverse the elements of the deque in-place and then return ``None``."
msgstr "Vänd elementen i deque på plats och returnera sedan ``None``."

#: ../../library/collections.rst:567
msgid ""
"Rotate the deque *n* steps to the right.  If *n* is negative, rotate to the "
"left."
msgstr ""
"Rotera dekanen *n* steg åt höger.  Om *n* är negativ, rotera till vänster."

#: ../../library/collections.rst:570
msgid ""
"When the deque is not empty, rotating one step to the right is equivalent to "
"``d.appendleft(d.pop())``, and rotating one step to the left is equivalent "
"to ``d.append(d.popleft())``."
msgstr ""
"När deque inte är tom är rotation ett steg åt höger likvärdigt med ``d."
"appendleft(d.pop())``, och rotation ett steg åt vänster är likvärdigt med "
"``d.append(d.popleft())``."

#: ../../library/collections.rst:575
msgid "Deque objects also provide one read-only attribute:"
msgstr "Deque-objekt har också ett skrivskyddat attribut:"

#: ../../library/collections.rst:579
msgid "Maximum size of a deque or ``None`` if unbounded."
msgstr "Maximal storlek på en deque eller ``None`` om den är obegränsad."

#: ../../library/collections.rst:584
msgid ""
"In addition to the above, deques support iteration, pickling, ``len(d)``, "
"``reversed(d)``, ``copy.copy(d)``, ``copy.deepcopy(d)``, membership testing "
"with the :keyword:`in` operator, and subscript references such as ``d[0]`` "
"to access the first element.  Indexed access is O(1) at both ends but slows "
"to O(n) in the middle.  For fast random access, use lists instead."
msgstr ""

#: ../../library/collections.rst:590
msgid ""
"Starting in version 3.5, deques support ``__add__()``, ``__mul__()``, and "
"``__imul__()``."
msgstr ""
"Från och med version 3.5 har deques stöd för ``__add__()``, ``__mul__()`` "
"och ``__imul__()``."

#: ../../library/collections.rst:593
msgid "Example:"
msgstr "Exempel:"

#: ../../library/collections.rst:650
msgid ":class:`deque` Recipes"
msgstr ":class:`deque` Recept"

#: ../../library/collections.rst:652
msgid "This section shows various approaches to working with deques."
msgstr "I detta avsnitt visas olika sätt att arbeta med deques."

#: ../../library/collections.rst:654
msgid ""
"Bounded length deques provide functionality similar to the ``tail`` filter "
"in Unix::"
msgstr ""
"Deques med begränsad längd ger funktionalitet som liknar filtret ``tail`` i "
"Unix::"

#: ../../library/collections.rst:662
msgid ""
"Another approach to using deques is to maintain a sequence of recently added "
"elements by appending to the right and popping to the left::"
msgstr ""
"Ett annat sätt att använda deques är att upprätthålla en sekvens av nyligen "
"tillagda element genom att appendiera till höger och poppa till vänster::"

#: ../../library/collections.rst:677
msgid ""
"A `round-robin scheduler <https://en.wikipedia.org/wiki/Round-"
"robin_scheduling>`_ can be implemented with input iterators stored in a :"
"class:`deque`.  Values are yielded from the active iterator in position "
"zero.  If that iterator is exhausted, it can be removed with :meth:`~deque."
"popleft`; otherwise, it can be cycled back to the end with the :meth:`~deque."
"rotate` method::"
msgstr ""
"En `round-robin schemaläggare <https://en.wikipedia.org/wiki/Round-"
"robin_scheduling>`_ kan implementeras med inmatningsiteratorer lagrade i en :"
"class:`deque`.  Värden erhålls från den aktiva iteratorn i position noll.  "
"Om den iteratorn är uttömd kan den tas bort med :meth:`~deque.popleft`; "
"annars kan den cyklas tillbaka till slutet med :meth:`~deque.rotate`\\-"
"metoden::"

#: ../../library/collections.rst:696
msgid ""
"The :meth:`~deque.rotate` method provides a way to implement :class:`deque` "
"slicing and deletion.  For example, a pure Python implementation of ``del "
"d[n]`` relies on the ``rotate()`` method to position elements to be popped::"
msgstr ""
"Metoden :meth:`~deque.rotate` ger ett sätt att implementera :class:`deque` "
"skivning och borttagning.  Till exempel, en ren Python-implementering av "
"``del d[n]`` förlitar sig på ``rotate()``\\-metoden för att positionera "
"element som ska poppas::"

#: ../../library/collections.rst:705
msgid ""
"To implement :class:`deque` slicing, use a similar approach applying :meth:"
"`~deque.rotate` to bring a target element to the left side of the deque. "
"Remove old entries with :meth:`~deque.popleft`, add new entries with :meth:"
"`~deque.extend`, and then reverse the rotation. With minor variations on "
"that approach, it is easy to implement Forth style stack manipulations such "
"as ``dup``, ``drop``, ``swap``, ``over``, ``pick``, ``rot``, and ``roll``."
msgstr ""
"För att implementera :class:`deque` slicing, använd ett liknande "
"tillvägagångssätt med :meth:`~deque.rotate` för att föra ett målelement till "
"vänster sida av deque. Ta bort gamla poster med :meth:`~deque.popleft`, lägg "
"till nya poster med :meth:`~deque.extend`, och vänd sedan rotationen. Med "
"mindre variationer på detta tillvägagångssätt är det lätt att implementera "
"stackmanipulationer i Forth-stil som ``dup``, ``drop``, ``wap``, ``over``, "
"``pick``, ``rot`` och ``roll``."

#: ../../library/collections.rst:715
msgid ":class:`defaultdict` objects"
msgstr ":class:`defaultdict`\\-objekt"

#: ../../library/collections.rst:719
msgid ""
"Return a new dictionary-like object.  :class:`defaultdict` is a subclass of "
"the built-in :class:`dict` class.  It overrides one method and adds one "
"writable instance variable.  The remaining functionality is the same as for "
"the :class:`dict` class and is not documented here."
msgstr ""
"Returnerar ett nytt ordboksliknande objekt. :class:`defaultdict` är en "
"subklass av den inbyggda :class:`dict`\\-klassen.  Den åsidosätter en metod "
"och lägger till en skrivbar instansvariabel.  Resterande funktionalitet är "
"densamma som för klassen :class:`dict` och dokumenteras inte här."

#: ../../library/collections.rst:724
msgid ""
"The first argument provides the initial value for the :attr:"
"`default_factory` attribute; it defaults to ``None``. All remaining "
"arguments are treated the same as if they were passed to the :class:`dict` "
"constructor, including keyword arguments."
msgstr ""
"Det första argumentet anger det initiala värdet för attributet :attr:"
"`default_factory`; standardvärdet är ``None``. Alla återstående argument "
"behandlas på samma sätt som om de skickades till :class:`dict`\\-"
"konstruktören, inklusive nyckelordsargument."

#: ../../library/collections.rst:730
msgid ""
":class:`defaultdict` objects support the following method in addition to the "
"standard :class:`dict` operations:"
msgstr ""
":class:`defaultdict`\\-objekt stöder följande metod utöver de vanliga :class:"
"`dict`\\-operationerna:"

#: ../../library/collections.rst:735
msgid ""
"If the :attr:`default_factory` attribute is ``None``, this raises a :exc:"
"`KeyError` exception with the *key* as argument."
msgstr ""
"Om attributet :attr:`default_factory` är ``None``, utlöses ett :exc:"
"`KeyError` undantag med *key* som argument."

#: ../../library/collections.rst:738
msgid ""
"If :attr:`default_factory` is not ``None``, it is called without arguments "
"to provide a default value for the given *key*, this value is inserted in "
"the dictionary for the *key*, and returned."
msgstr ""
"Om :attr:`default_factory` inte är ``None`` anropas den utan argument för "
"att ange ett standardvärde för den angivna *key*, detta värde infogas i "
"ordlistan för *key* och returneras."

#: ../../library/collections.rst:742
msgid ""
"If calling :attr:`default_factory` raises an exception this exception is "
"propagated unchanged."
msgstr ""
"Om anrop av :attr:`default_factory` ger upphov till ett undantag, sprids "
"detta undantag oförändrat."

#: ../../library/collections.rst:745
msgid ""
"This method is called by the :meth:`__getitem__` method of the :class:`dict` "
"class when the requested key is not found; whatever it returns or raises is "
"then returned or raised by :meth:`__getitem__`."
msgstr ""

#: ../../library/collections.rst:749
msgid ""
"Note that :meth:`__missing__` is *not* called for any operations besides :"
"meth:`__getitem__`. This means that :meth:`get` will, like normal "
"dictionaries, return ``None`` as a default rather than using :attr:"
"`default_factory`."
msgstr ""

#: ../../library/collections.rst:755
msgid ":class:`defaultdict` objects support the following instance variable:"
msgstr ":class:`defaultdict`\\-objekt har stöd för följande instansvariabel:"

#: ../../library/collections.rst:760
msgid ""
"This attribute is used by the :meth:`__missing__` method; it is initialized "
"from the first argument to the constructor, if present, or to ``None``, if "
"absent."
msgstr ""

#: ../../library/collections.rst:764 ../../library/collections.rst:1180
msgid ""
"Added merge (``|``) and update (``|=``) operators, specified in :pep:`584`."
msgstr ""
"Lagt till operatorer för sammanslagning (``|``) och uppdatering (``|=``), "
"specificerade i :pep:`584`."

#: ../../library/collections.rst:770
msgid ":class:`defaultdict` Examples"
msgstr ":class:`defaultdict` Exempel"

#: ../../library/collections.rst:772
msgid ""
"Using :class:`list` as the :attr:`~defaultdict.default_factory`, it is easy "
"to group a sequence of key-value pairs into a dictionary of lists:"
msgstr ""
"Med :class:`list` som :attr:`~defaultdict.default_factory` är det enkelt att "
"gruppera en sekvens av nyckel-värde-par till en ordbok med listor:"

#: ../../library/collections.rst:783
msgid ""
"When each key is encountered for the first time, it is not already in the "
"mapping; so an entry is automatically created using the :attr:`~defaultdict."
"default_factory` function which returns an empty :class:`list`.  The :meth:"
"`list.append` operation then attaches the value to the new list.  When keys "
"are encountered again, the look-up proceeds normally (returning the list for "
"that key) and the :meth:`list.append` operation adds another value to the "
"list. This technique is simpler and faster than an equivalent technique "
"using :meth:`dict.setdefault`:"
msgstr ""

#: ../../library/collections.rst:798
msgid ""
"Setting the :attr:`~defaultdict.default_factory` to :class:`int` makes the :"
"class:`defaultdict` useful for counting (like a bag or multiset in other "
"languages):"
msgstr ""
"Om du ställer in :attr:`~defaultdict.default_factory` till :class:`int` "
"blir :class:`defaultdict` användbar för räkning (som en påse eller multiset "
"på andra språk):"

#: ../../library/collections.rst:810
msgid ""
"When a letter is first encountered, it is missing from the mapping, so the :"
"attr:`~defaultdict.default_factory` function calls :func:`int` to supply a "
"default count of zero.  The increment operation then builds up the count for "
"each letter."
msgstr ""
"När en bokstav först påträffas saknas den i mappningen, så funktionen :attr:"
"`~defaultdict.default_factory` anropar :func:`int` för att ange ett "
"standardantal på noll.  Inkrementoperationen bygger sedan upp räkningen för "
"varje bokstav."

#: ../../library/collections.rst:814
msgid ""
"The function :func:`int` which always returns zero is just a special case of "
"constant functions.  A faster and more flexible way to create constant "
"functions is to use a lambda function which can supply any constant value "
"(not just zero):"
msgstr ""
"Funktionen :func:`int` som alltid returnerar noll är bara ett specialfall av "
"konstantfunktioner.  Ett snabbare och mer flexibelt sätt att skapa "
"konstantfunktioner är att använda en lambda-funktion som kan ge vilket "
"konstant värde som helst (inte bara noll):"

#: ../../library/collections.rst:826
msgid ""
"Setting the :attr:`~defaultdict.default_factory` to :class:`set` makes the :"
"class:`defaultdict` useful for building a dictionary of sets:"
msgstr ""
"Om du ställer in :attr:`~defaultdict.default_factory` på :class:`set` blir :"
"class:`defaultdict` användbar för att bygga en ordbok med set:"

#: ../../library/collections.rst:839
msgid ":func:`namedtuple` Factory Function for Tuples with Named Fields"
msgstr ":func:`namedtuple` Fabriksfunktion för tupler med namngivna fält"

#: ../../library/collections.rst:841
msgid ""
"Named tuples assign meaning to each position in a tuple and allow for more "
"readable, self-documenting code.  They can be used wherever regular tuples "
"are used, and they add the ability to access fields by name instead of "
"position index."
msgstr ""
"Namngivna tupler tilldelar varje position i en tupel en betydelse och "
"möjliggör mer läsbar och självdokumenterande kod.  De kan användas överallt "
"där vanliga tuplar används, och de ger möjlighet att komma åt fält med namn "
"i stället för positionsindex."

#: ../../library/collections.rst:847
msgid ""
"Returns a new tuple subclass named *typename*.  The new subclass is used to "
"create tuple-like objects that have fields accessible by attribute lookup as "
"well as being indexable and iterable.  Instances of the subclass also have a "
"helpful docstring (with typename and field_names) and a helpful :meth:"
"`__repr__` method which lists the tuple contents in a ``name=value`` format."
msgstr ""

#: ../../library/collections.rst:853
msgid ""
"The *field_names* are a sequence of strings such as ``['x', 'y']``. "
"Alternatively, *field_names* can be a single string with each fieldname "
"separated by whitespace and/or commas, for example ``'x y'`` or ``'x, y'``."
msgstr ""
"*field_names* är en sekvens av strängar, t.ex. ``['x', 'y']``. Alternativt "
"kan *field_names* vara en enda sträng där varje fältnamn separeras med "
"blanksteg och/eller kommatecken, t.ex. ``'x y'`` eller ``'x, y'``."

#: ../../library/collections.rst:857
msgid ""
"Any valid Python identifier may be used for a fieldname except for names "
"starting with an underscore.  Valid identifiers consist of letters, digits, "
"and underscores but do not start with a digit or underscore and cannot be a :"
"mod:`keyword` such as *class*, *for*, *return*, *global*, *pass*, or *raise*."
msgstr ""
"Alla giltiga Python-identifierare kan användas för ett fältnamn utom namn "
"som börjar med ett understreck.  Giltiga identifierare består av bokstäver, "
"siffror och understreck men börjar inte med en siffra eller ett understreck "
"och kan inte vara ett :mod:`nyckelord` som *class*, *for*, *return*, "
"*global*, *pass* eller *raise*."

#: ../../library/collections.rst:863
msgid ""
"If *rename* is true, invalid fieldnames are automatically replaced with "
"positional names.  For example, ``['abc', 'def', 'ghi', 'abc']`` is "
"converted to ``['abc', '_1', 'ghi', '_3']``, eliminating the keyword ``def`` "
"and the duplicate fieldname ``abc``."
msgstr ""
"Om *rename* är true ersätts ogiltiga fältnamn automatiskt med "
"positionsnamn.  Till exempel konverteras ``['abc', 'def', 'ghi', 'abc']`` "
"till ``['abc', '_1', 'ghi', '_3']``, vilket eliminerar nyckelordet ``def`` "
"och det dubbla fältnamnet ``abc``."

#: ../../library/collections.rst:868
msgid ""
"*defaults* can be ``None`` or an :term:`iterable` of default values. Since "
"fields with a default value must come after any fields without a default, "
"the *defaults* are applied to the rightmost parameters.  For example, if the "
"fieldnames are ``['x', 'y', 'z']`` and the defaults are ``(1, 2)``, then "
"``x`` will be a required argument, ``y`` will default to ``1``, and ``z`` "
"will default to ``2``."
msgstr ""
"*defaults* kan vara ``None`` eller en :term:`iterable` av standardvärden. "
"Eftersom fält med ett standardvärde måste komma efter fält utan ett "
"standardvärde, tillämpas *defaults* på parametrarna längst till höger.  Om "
"fältnamnen till exempel är ``['x', 'y', 'z']`` och standardvärdena är ``(1, "
"2)``, kommer ``x`` att vara ett obligatoriskt argument, ``y`` kommer att "
"vara standardvärdet ``1`` och ``z`` kommer att vara standardvärdet ``2``."

#: ../../library/collections.rst:875
msgid ""
"If *module* is defined, the ``__module__`` attribute of the named tuple is "
"set to that value."
msgstr ""

#: ../../library/collections.rst:878
msgid ""
"Named tuple instances do not have per-instance dictionaries, so they are "
"lightweight and require no more memory than regular tuples."
msgstr ""
"Namngivna tuple-instanser har inga ordböcker per instans, så de är lätta och "
"kräver inte mer minne än vanliga tupler."

#: ../../library/collections.rst:881
msgid ""
"To support pickling, the named tuple class should be assigned to a variable "
"that matches *typename*."
msgstr ""
"För att stödja pickling bör den namngivna tuple-klassen tilldelas en "
"variabel som matchar *typename*."

#: ../../library/collections.rst:884
msgid "Added support for *rename*."
msgstr "Lagt till stöd för *rename*."

#: ../../library/collections.rst:887
msgid ""
"The *verbose* and *rename* parameters became :ref:`keyword-only arguments "
"<keyword-only_parameter>`."
msgstr ""
"Parametrarna *verbose* och *rename* blev :ref:`keyword-only arguments "
"<keyword-only_parameter>`."

#: ../../library/collections.rst:891
msgid "Added the *module* parameter."
msgstr "Parametern *module* har lagts till."

#: ../../library/collections.rst:894
msgid "Removed the *verbose* parameter and the :attr:`_source` attribute."
msgstr ""

#: ../../library/collections.rst:897
msgid ""
"Added the *defaults* parameter and the :attr:`_field_defaults` attribute."
msgstr ""

#: ../../library/collections.rst:917
msgid ""
"Named tuples are especially useful for assigning field names to result "
"tuples returned by the :mod:`csv` or :mod:`sqlite3` modules::"
msgstr ""
"Namngivna tupler är särskilt användbara för att tilldela fältnamn till "
"resultattuplar som returneras av modulerna :mod:`csv` eller :mod:`sqlite3`::"

#: ../../library/collections.rst:933
msgid ""
"In addition to the methods inherited from tuples, named tuples support three "
"additional methods and two attributes.  To prevent conflicts with field "
"names, the method and attribute names start with an underscore."
msgstr ""
"Utöver de metoder som ärvs från tuples har named tuples stöd för ytterligare "
"tre metoder och två attribut.  För att undvika konflikter med fältnamn "
"börjar metod- och attributnamnen med ett understreck."

#: ../../library/collections.rst:939
msgid ""
"Class method that makes a new instance from an existing sequence or iterable."
msgstr ""
"Klassmetod som skapar en ny instans från en befintlig sekvens eller iterabel."

#: ../../library/collections.rst:949
msgid ""
"Return a new :class:`dict` which maps field names to their corresponding "
"values:"
msgstr ""
"Returnerar en ny :class:`dict` som mappar fältnamn till deras motsvarande "
"värden:"

#: ../../library/collections.rst:958
msgid "Returns an :class:`OrderedDict` instead of a regular :class:`dict`."
msgstr ""
"Returnerar en :class:`OrderedDict` istället för en vanlig :class:`dict`."

#: ../../library/collections.rst:961
msgid ""
"Returns a regular :class:`dict` instead of an :class:`OrderedDict`. As of "
"Python 3.7, regular dicts are guaranteed to be ordered.  If the extra "
"features of :class:`OrderedDict` are required, the suggested remediation is "
"to cast the result to the desired type: ``OrderedDict(nt._asdict())``."
msgstr ""
"Returnerar en vanlig :class:`dict` istället för en :class:`OrderedDict`. "
"Från och med Python 3.7 garanteras att vanliga dicts är ordnade.  Om de "
"extra funktionerna i :class:`OrderedDict` krävs, är den föreslagna lösningen "
"att casta resultatet till önskad typ: ``OrderedDict(nt._asdict())``."

#: ../../library/collections.rst:970
msgid ""
"Return a new instance of the named tuple replacing specified fields with new "
"values::"
msgstr ""
"Returnerar en ny instans av den namngivna tupeln genom att ersätta angivna "
"fält med nya värden::"

#: ../../library/collections.rst:982
msgid ""
"Tuple of strings listing the field names.  Useful for introspection and for "
"creating new named tuple types from existing named tuples."
msgstr ""
"Tupel med strängar som listar fältnamnen.  Användbar för introspektion och "
"för att skapa nya namngivna tupeltyper från befintliga namngivna tuplar."

#: ../../library/collections.rst:997
msgid "Dictionary mapping field names to default values."
msgstr "Ordbok som mappar fältnamn till standardvärden."

#: ../../library/collections.rst:1007
msgid ""
"To retrieve a field whose name is stored in a string, use the :func:"
"`getattr` function:"
msgstr ""
"Om du vill hämta ett fält vars namn lagras i en sträng använder du "
"funktionen :func:`getattr`:"

#: ../../library/collections.rst:1013
msgid ""
"To convert a dictionary to a named tuple, use the double-star-operator (as "
"described in :ref:`tut-unpacking-arguments`):"
msgstr ""
"Om du vill konvertera en ordbok till en namngiven tupel använder du "
"dubbelstjärneoperatorn (enligt beskrivningen i :ref:`tut-unpacking-"
"arguments`):"

#: ../../library/collections.rst:1020
msgid ""
"Since a named tuple is a regular Python class, it is easy to add or change "
"functionality with a subclass.  Here is how to add a calculated field and a "
"fixed-width print format:"
msgstr ""
"Eftersom en named tuple är en vanlig Python-klass är det lätt att lägga till "
"eller ändra funktionalitet med en subklass.  Så här lägger du till ett "
"beräknat fält och ett utskriftsformat med fast bredd:"

#: ../../library/collections.rst:1039
msgid ""
"The subclass shown above sets ``__slots__`` to an empty tuple.  This helps "
"keep memory requirements low by preventing the creation of instance "
"dictionaries."
msgstr ""
"Den subklass som visas ovan sätter ``__slots__`` till en tom tupel.  Detta "
"hjälper till att hålla minneskraven låga genom att förhindra skapandet av "
"instansordböcker."

#: ../../library/collections.rst:1042
msgid ""
"Subclassing is not useful for adding new, stored fields.  Instead, simply "
"create a new named tuple type from the :attr:`~somenamedtuple._fields` "
"attribute:"
msgstr ""
"Subklassning är inte användbart för att lägga till nya, lagrade fält.  "
"Istället skapar du helt enkelt en ny namngiven tupeltyp från attributet :"
"attr:`~somenamedtuple._fields`:"

#: ../../library/collections.rst:1047
msgid ""
"Docstrings can be customized by making direct assignments to the ``__doc__`` "
"fields:"
msgstr ""
"Dokumentsträngar kan anpassas genom att göra direkta tilldelningar till "
"fälten ``__doc__``:"

#: ../../library/collections.rst:1056
msgid "Property docstrings became writeable."
msgstr "Property docstrings blev skrivbara."

#: ../../library/collections.rst:1061
msgid ""
"See :class:`typing.NamedTuple` for a way to add type hints for named "
"tuples.  It also provides an elegant notation using the :keyword:`class` "
"keyword::"
msgstr ""
"Se :class:`typing.NamedTuple` för ett sätt att lägga till typhintar för "
"namngivna tupler.  Det ger också en elegant notation med hjälp av "
"nyckelordet :keyword:`class`::"

#: ../../library/collections.rst:1070
msgid ""
"See :meth:`types.SimpleNamespace` for a mutable namespace based on an "
"underlying dictionary instead of a tuple."
msgstr ""
"Se :meth:`types.SimpleNamespace` för en föränderlig namnrymd som baseras på "
"en underliggande ordbok i stället för en tupel."

#: ../../library/collections.rst:1073
msgid ""
"The :mod:`dataclasses` module provides a decorator and functions for "
"automatically adding generated special methods to user-defined classes."
msgstr ""
"Modulen :mod:`dataclasses` innehåller en dekorator och funktioner för att "
"automatiskt lägga till genererade specialmetoder till användardefinierade "
"klasser."

#: ../../library/collections.rst:1078
msgid ":class:`OrderedDict` objects"
msgstr ":class:`OrderedDict`\\-objekt"

#: ../../library/collections.rst:1080
msgid ""
"Ordered dictionaries are just like regular dictionaries but have some extra "
"capabilities relating to ordering operations.  They have become less "
"important now that the built-in :class:`dict` class gained the ability to "
"remember insertion order (this new behavior became guaranteed in Python 3.7)."
msgstr ""
"Ordnade ordböcker är precis som vanliga ordböcker men har några extra "
"funktioner som rör ordningsoperationer.  De har blivit mindre viktiga nu när "
"den inbyggda :class:`dict`\\-klassen har fått förmågan att komma ihåg "
"insättningsordning (detta nya beteende blev garanterat i Python 3.7)."

#: ../../library/collections.rst:1086
msgid "Some differences from :class:`dict` still remain:"
msgstr "Vissa skillnader från :class:`dict` kvarstår fortfarande:"

#: ../../library/collections.rst:1088
msgid ""
"The regular :class:`dict` was designed to be very good at mapping "
"operations.  Tracking insertion order was secondary."
msgstr ""
"Den vanliga :class:`dict` utformades för att vara mycket bra på "
"mappningsoperationer.  Att spåra insättningsordning var sekundärt."

#: ../../library/collections.rst:1091
msgid ""
"The :class:`OrderedDict` was designed to be good at reordering operations. "
"Space efficiency, iteration speed, and the performance of update operations "
"were secondary."
msgstr ""
":class:`OrderedDict` utformades för att vara bra på omordningsoperationer. "
"Utrymmeseffektivitet, iterationshastighet och prestanda för "
"uppdateringsoperationer var sekundära."

#: ../../library/collections.rst:1095
msgid ""
"The :class:`OrderedDict` algorithm can handle frequent reordering operations "
"better than :class:`dict`.  As shown in the recipes below, this makes it "
"suitable for implementing various kinds of LRU caches."
msgstr ""
"Algoritmen :class:`OrderedDict` kan hantera frekventa omordningsoperationer "
"bättre än :class:`dict`.  Som visas i recepten nedan gör detta att den "
"lämpar sig för implementering av olika typer av LRU-cacher."

#: ../../library/collections.rst:1099
msgid ""
"The equality operation for :class:`OrderedDict` checks for matching order."
msgstr ""
"Jämlikhetsoperationen för :class:`OrderedDict` kontrollerar matchande "
"ordning."

#: ../../library/collections.rst:1101
msgid ""
"A regular :class:`dict` can emulate the order sensitive equality test with "
"``p == q and all(k1 == k2 for k1, k2 in zip(p, q))``."
msgstr ""
"En vanlig :class:`dict` kan emulera det ordningskänsliga likhetstestet med "
"``p == q and all(k1 == k2 for k1, k2 in zip(p, q))``."

#: ../../library/collections.rst:1104
msgid ""
"The :meth:`popitem` method of :class:`OrderedDict` has a different "
"signature.  It accepts an optional argument to specify which item is popped."
msgstr ""

#: ../../library/collections.rst:1107
msgid ""
"A regular :class:`dict` can emulate OrderedDict's ``od.popitem(last=True)`` "
"with ``d.popitem()`` which is guaranteed to pop the rightmost (last) item."
msgstr ""
"En vanlig :class:`dict` kan efterlikna OrderedDicts ``od."
"popitem(last=True)`` med ``d.popitem()`` som garanterat öppnar det längst "
"till höger (sista) objektet."

#: ../../library/collections.rst:1110
msgid ""
"A regular :class:`dict` can emulate OrderedDict's ``od.popitem(last=False)`` "
"with ``(k := next(iter(d)), d.pop(k))`` which will return and remove the "
"leftmost (first) item if it exists."
msgstr ""
"En vanlig :class:`dict` kan emulera OrderedDicts ``od.popitem(last=False)`` "
"med ``(k := next(iter(d)), d.pop(k))`` som returnerar och tar bort det "
"längst till vänster (första) objektet om det finns."

#: ../../library/collections.rst:1114
msgid ""
":class:`OrderedDict` has a :meth:`move_to_end` method to efficiently "
"reposition an element to an endpoint."
msgstr ""

#: ../../library/collections.rst:1117
msgid ""
"A regular :class:`dict` can emulate OrderedDict's ``od.move_to_end(k, "
"last=True)`` with ``d[k] = d.pop(k)`` which will move the key and its "
"associated value to the rightmost (last) position."
msgstr ""
"En vanlig :class:`dict` kan emulera OrderedDicts ``od.move_to_end(k, "
"last=True)`` med ``d[k] = d.pop(k)`` vilket flyttar nyckeln och dess "
"associerade värde till den högra (sista) positionen."

#: ../../library/collections.rst:1121
msgid ""
"A regular :class:`dict` does not have an efficient equivalent for "
"OrderedDict's ``od.move_to_end(k, last=False)`` which moves the key and its "
"associated value to the leftmost (first) position."
msgstr ""
"En vanlig :class:`dict` har inte någon effektiv motsvarighet till "
"OrderedDicts ``od.move_to_end(k, last=False)`` som flyttar nyckeln och dess "
"associerade värde till den vänstra (första) positionen."

#: ../../library/collections.rst:1125
msgid "Until Python 3.8, :class:`dict` lacked a :meth:`__reversed__` method."
msgstr ""

#: ../../library/collections.rst:1130
msgid ""
"Return an instance of a :class:`dict` subclass that has methods specialized "
"for rearranging dictionary order."
msgstr ""
"Returnerar en instans av en :class:`dict`\\-underklass som har metoder "
"specialiserade på att omorganisera ordningsföljden i ordböcker."

#: ../../library/collections.rst:1137
msgid ""
"The :meth:`popitem` method for ordered dictionaries returns and removes a "
"(key, value) pair.  The pairs are returned in :abbr:`LIFO (last-in, first-"
"out)` order if *last* is true or :abbr:`FIFO (first-in, first-out)` order if "
"false."
msgstr ""
"Metoden :meth:`popitem` för ordnade lexikon returnerar och tar bort ett "
"(nyckel, värde)-par.  Paren returneras i :abbr:`LIFO (last-in, first-out)` "
"ordning om *last* är sant eller :abbr:`FIFO (first-in, first-out)` ordning "
"om false."

#: ../../library/collections.rst:1144
msgid ""
"Move an existing *key* to either end of an ordered dictionary.  The item is "
"moved to the right end if *last* is true (the default) or to the beginning "
"if *last* is false.  Raises :exc:`KeyError` if the *key* does not exist:"
msgstr ""
"Flytta en befintlig *key* till endera änden av en ordnad ordbok.  Objektet "
"flyttas till den högra änden om *last* är true (standard) eller till början "
"om *last* är false.  Utlöser :exc:`KeyError` om *nyckeln* inte finns:"

#: ../../library/collections.rst:1161
msgid ""
"In addition to the usual mapping methods, ordered dictionaries also support "
"reverse iteration using :func:`reversed`."
msgstr ""
"Förutom de vanliga mappningsmetoderna stöder ordnade lexikon även omvänd "
"iteration med hjälp av :func:`reversed`."

#: ../../library/collections.rst:1164
msgid ""
"Equality tests between :class:`OrderedDict` objects are order-sensitive and "
"are implemented as ``list(od1.items())==list(od2.items())``. Equality tests "
"between :class:`OrderedDict` objects and other :class:`~collections.abc."
"Mapping` objects are order-insensitive like regular dictionaries.  This "
"allows :class:`OrderedDict` objects to be substituted anywhere a regular "
"dictionary is used."
msgstr ""

#: ../../library/collections.rst:1171
msgid ""
"The items, keys, and values :term:`views <dictionary view>` of :class:"
"`OrderedDict` now support reverse iteration using :func:`reversed`."
msgstr ""
"Objekten, nycklarna och värdena :term:`views <dictionary view>` i :class:"
"`OrderedDict` stöder nu omvänd iteration med :func:`reversed`."

#: ../../library/collections.rst:1175
msgid ""
"With the acceptance of :pep:`468`, order is retained for keyword arguments "
"passed to the :class:`OrderedDict` constructor and its :meth:`update` method."
msgstr ""

#: ../../library/collections.rst:1185
msgid ":class:`OrderedDict` Examples and Recipes"
msgstr ":class:`OrderedDict` Exempel och recept"

#: ../../library/collections.rst:1187
msgid ""
"It is straightforward to create an ordered dictionary variant that remembers "
"the order the keys were *last* inserted. If a new entry overwrites an "
"existing entry, the original insertion position is changed and moved to the "
"end::"
msgstr ""
"Det är enkelt att skapa en ordnad ordboksvariant som kommer ihåg den ordning "
"som nycklarna *senast* infogades. Om en ny post skriver över en befintlig "
"post, ändras den ursprungliga inmatningspositionen och flyttas till slutet::"

#: ../../library/collections.rst:1199
msgid ""
"An :class:`OrderedDict` would also be useful for implementing variants of :"
"func:`functools.lru_cache`:"
msgstr ""
"En :class:`OrderedDict` skulle också vara användbar för att implementera "
"varianter av :func:`functools.lru_cache`:"

#: ../../library/collections.rst:1297
msgid ":class:`UserDict` objects"
msgstr ":class:`UserDict`\\-objekt"

#: ../../library/collections.rst:1299
msgid ""
"The class, :class:`UserDict` acts as a wrapper around dictionary objects. "
"The need for this class has been partially supplanted by the ability to "
"subclass directly from :class:`dict`; however, this class can be easier to "
"work with because the underlying dictionary is accessible as an attribute."
msgstr ""
"Klassen :class:`UserDict` fungerar som ett omslag runt ordboksobjekt. "
"Behovet av denna klass har delvis ersatts av möjligheten att subklassa "
"direkt från :class:`dict`; denna klass kan dock vara lättare att arbeta med "
"eftersom den underliggande ordboken är tillgänglig som ett attribut."

#: ../../library/collections.rst:1307
msgid ""
"Class that simulates a dictionary.  The instance's contents are kept in a "
"regular dictionary, which is accessible via the :attr:`data` attribute of :"
"class:`UserDict` instances.  If *initialdata* is provided, :attr:`data` is "
"initialized with its contents; note that a reference to *initialdata* will "
"not be kept, allowing it to be used for other purposes."
msgstr ""
"Klass som simulerar en ordbok.  Instansens innehåll sparas i en vanlig "
"ordbok, som är tillgänglig via attributet :attr:`data` i :class:`UserDict`\\-"
"instanser.  Om *initialdata* anges initialiseras :attr:`data` med dess "
"innehåll; notera att en referens till *initialdata* inte sparas, vilket gör "
"att den kan användas för andra ändamål."

#: ../../library/collections.rst:1313
msgid ""
"In addition to supporting the methods and operations of mappings, :class:"
"`UserDict` instances provide the following attribute:"
msgstr ""
"Förutom att stödja metoder och operationer för mappningar, ger :class:"
"`UserDict`\\-instanser följande attribut:"

#: ../../library/collections.rst:1318
msgid ""
"A real dictionary used to store the contents of the :class:`UserDict` class."
msgstr ""
"En riktig ordbok som används för att lagra innehållet i :class:`UserDict`\\-"
"klassen."

#: ../../library/collections.rst:1324
msgid ":class:`UserList` objects"
msgstr ":class:`UserList`\\-objekt"

#: ../../library/collections.rst:1326
msgid ""
"This class acts as a wrapper around list objects.  It is a useful base class "
"for your own list-like classes which can inherit from them and override "
"existing methods or add new ones.  In this way, one can add new behaviors to "
"lists."
msgstr ""
"Den här klassen fungerar som ett hölje runt listobjekt.  Det är en användbar "
"basklass för dina egna listliknande klasser som kan ärva från dem och "
"åsidosätta befintliga metoder eller lägga till nya.  På så sätt kan man "
"lägga till nya beteenden i listor."

#: ../../library/collections.rst:1331
msgid ""
"The need for this class has been partially supplanted by the ability to "
"subclass directly from :class:`list`; however, this class can be easier to "
"work with because the underlying list is accessible as an attribute."
msgstr ""
"Behovet av denna klass har delvis ersatts av möjligheten att subklassa "
"direkt från :class:`list`; denna klass kan dock vara lättare att arbeta med "
"eftersom den underliggande listan är tillgänglig som ett attribut."

#: ../../library/collections.rst:1337
msgid ""
"Class that simulates a list.  The instance's contents are kept in a regular "
"list, which is accessible via the :attr:`data` attribute of :class:"
"`UserList` instances.  The instance's contents are initially set to a copy "
"of *list*, defaulting to the empty list ``[]``.  *list* can be any iterable, "
"for example a real Python list or a :class:`UserList` object."
msgstr ""
"Klass som simulerar en lista.  Instansens innehåll sparas i en vanlig lista, "
"som är tillgänglig via attributet :attr:`data` i :class:`UserList`\\-"
"instanser.  Instansens innehåll är initialt inställt på en kopia av *list*, "
"med den tomma listan ``[]`` som standard.  *list* kan vara vilken iterabel "
"som helst, t.ex. en riktig Python-lista eller ett :class:`UserList`\\-objekt."

#: ../../library/collections.rst:1343
msgid ""
"In addition to supporting the methods and operations of mutable sequences, :"
"class:`UserList` instances provide the following attribute:"
msgstr ""
"Förutom att stödja metoder och operationer för muterbara sekvenser, ger :"
"class:`UserList`\\-instanser följande attribut:"

#: ../../library/collections.rst:1348
msgid ""
"A real :class:`list` object used to store the contents of the :class:"
"`UserList` class."
msgstr ""
"Ett verkligt :class:`list`\\-objekt som används för att lagra innehållet i :"
"class:`UserList`\\-klassen."

#: ../../library/collections.rst:1351
msgid ""
"**Subclassing requirements:** Subclasses of :class:`UserList` are expected "
"to offer a constructor which can be called with either no arguments or one "
"argument.  List operations which return a new sequence attempt to create an "
"instance of the actual implementation class.  To do so, it assumes that the "
"constructor can be called with a single parameter, which is a sequence "
"object used as a data source."
msgstr ""
"**Subklassningskrav:** Subklasser av :class:`UserList` förväntas erbjuda en "
"konstruktor som kan anropas med antingen inga argument eller ett argument.  "
"Listoperationer som returnerar en ny sekvens försöker skapa en instans av "
"den faktiska implementationsklassen.  För att göra detta förutsätts att "
"konstruktören kan anropas med en enda parameter, som är ett sekvensobjekt "
"som används som datakälla."

#: ../../library/collections.rst:1358
msgid ""
"If a derived class does not wish to comply with this requirement, all of the "
"special methods supported by this class will need to be overridden; please "
"consult the sources for information about the methods which need to be "
"provided in that case."
msgstr ""
"Om en härledd klass inte vill uppfylla detta krav måste alla specialmetoder "
"som stöds av denna klass åsidosättas; se källorna för information om vilka "
"metoder som måste tillhandahållas i så fall."

#: ../../library/collections.rst:1364
msgid ":class:`UserString` objects"
msgstr ":class:`UserString`\\-objekt"

#: ../../library/collections.rst:1366
msgid ""
"The class, :class:`UserString` acts as a wrapper around string objects. The "
"need for this class has been partially supplanted by the ability to subclass "
"directly from :class:`str`; however, this class can be easier to work with "
"because the underlying string is accessible as an attribute."
msgstr ""
"Klassen :class:`UserString` fungerar som ett omslag runt strängobjekt. "
"Behovet av denna klass har delvis ersatts av möjligheten att subklassa "
"direkt från :class:`str`; denna klass kan dock vara lättare att arbeta med "
"eftersom den underliggande strängen är tillgänglig som ett attribut."

#: ../../library/collections.rst:1374
msgid ""
"Class that simulates a string object.  The instance's content is kept in a "
"regular string object, which is accessible via the :attr:`data` attribute "
"of :class:`UserString` instances.  The instance's contents are initially set "
"to a copy of *seq*.  The *seq* argument can be any object which can be "
"converted into a string using the built-in :func:`str` function."
msgstr ""
"Klass som simulerar ett strängobjekt.  Instansens innehåll förvaras i ett "
"vanligt strängobjekt, som är tillgängligt via attributet :attr:`data` i :"
"class:`UserString`\\-instanser.  Instansens innehåll sätts initialt till en "
"kopia av *seq*.  Argumentet *seq* kan vara vilket objekt som helst som kan "
"konverteras till en sträng med hjälp av den inbyggda funktionen :func:`str`."

#: ../../library/collections.rst:1381
msgid ""
"In addition to supporting the methods and operations of strings, :class:"
"`UserString` instances provide the following attribute:"
msgstr ""
"Förutom att stödja metoder och operationer för strängar, ger :class:"
"`UserString`\\-instanser följande attribut:"

#: ../../library/collections.rst:1386
msgid ""
"A real :class:`str` object used to store the contents of the :class:"
"`UserString` class."
msgstr ""
"Ett verkligt :class:`str`\\-objekt som används för att lagra innehållet i :"
"class:`UserString`\\-klassen."

#: ../../library/collections.rst:1389
msgid ""
"New methods ``__getnewargs__``, ``__rmod__``, ``casefold``, ``format_map``, "
"``isprintable``, and ``maketrans``."
msgstr ""
"Nya metoder ``__getnewargs__``, ``__rmod__``, ``casefold``, ``format_map``, "
"``isprintable`` och ``maketrans``."
