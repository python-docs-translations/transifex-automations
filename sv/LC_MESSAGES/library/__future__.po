# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# python-doc bot, 2025
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.9\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-10-17 18:07+0000\n"
"PO-Revision-Date: 2025-09-22 17:54+0000\n"
"Last-Translator: python-doc bot, 2025\n"
"Language-Team: Swedish (https://app.transifex.com/python-doc/teams/5390/"
"sv/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: sv\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"

#: ../../library/__future__.rst:2
msgid ":mod:`__future__` --- Future statement definitions"
msgstr ""

#: ../../library/__future__.rst:7
msgid "**Source code:** :source:`Lib/__future__.py`"
msgstr "**Källkod:** :source:`Lib/__future__.py`"

#: ../../library/__future__.rst:11
msgid ":mod:`__future__` is a real module, and serves three purposes:"
msgstr ""

#: ../../library/__future__.rst:13
msgid ""
"To avoid confusing existing tools that analyze import statements and expect "
"to find the modules they're importing."
msgstr ""
"För att undvika förvirring hos befintliga verktyg som analyserar "
"importmeddelanden och förväntar sig att hitta de moduler som de importerar."

#: ../../library/__future__.rst:16
msgid ""
"To ensure that :ref:`future statements <future>` run under releases prior to "
"2.1 at least yield runtime exceptions (the import of :mod:`__future__` will "
"fail, because there was no module of that name prior to 2.1)."
msgstr ""

#: ../../library/__future__.rst:20
msgid ""
"To document when incompatible changes were introduced, and when they will be "
"--- or were --- made mandatory.  This is a form of executable documentation, "
"and can be inspected programmatically via importing :mod:`__future__` and "
"examining its contents."
msgstr ""
"För att dokumentera när inkompatibla ändringar infördes och när de kommer "
"att bli --- eller var --- obligatoriska.  Detta är en form av körbar "
"dokumentation och kan inspekteras programmatiskt genom att importera :mod:"
"`__future__` och undersöka dess innehåll."

#: ../../library/__future__.rst:25
msgid "Each statement in :file:`__future__.py` is of the form::"
msgstr "Varje uttalande i :file:`__future__.py` är av formen::"

#: ../../library/__future__.rst:31
msgid ""
"where, normally, *OptionalRelease* is less than *MandatoryRelease*, and both "
"are 5-tuples of the same form as :data:`sys.version_info`::"
msgstr ""
"där normalt *OptionalRelease* är mindre än *MandatoryRelease*, och båda är 5-"
"tupler av samma form som :data:`sys.version_info`::"

#: ../../library/__future__.rst:41
msgid ""
"*OptionalRelease* records the first release in which the feature was "
"accepted."
msgstr ""
"*OptionalRelease* registrerar den första utgåvan i vilken funktionen "
"accepterades."

#: ../../library/__future__.rst:43
msgid ""
"In the case of a *MandatoryRelease* that has not yet occurred, "
"*MandatoryRelease* predicts the release in which the feature will become "
"part of the language."
msgstr ""
"När det gäller en *MandatoryRelease* som ännu inte har inträffat, förutspår "
"*MandatoryRelease* den version där funktionen kommer att bli en del av "
"språket."

#: ../../library/__future__.rst:47
msgid ""
"Else *MandatoryRelease* records when the feature became part of the "
"language; in releases at or after that, modules no longer need a future "
"statement to use the feature in question, but may continue to use such "
"imports."
msgstr ""
"Else *MandatoryRelease* registrerar när funktionen blev en del av språket; i "
"utgåvor från och med den tidpunkten behöver moduler inte längre ett framtida "
"uttalande för att använda funktionen i fråga, men kan fortsätta att använda "
"sådana importer."

#: ../../library/__future__.rst:51
msgid ""
"*MandatoryRelease* may also be ``None``, meaning that a planned feature got "
"dropped."
msgstr ""

#: ../../library/__future__.rst:54
msgid ""
"Instances of class :class:`_Feature` have two corresponding methods, :meth:"
"`getOptionalRelease` and :meth:`getMandatoryRelease`."
msgstr ""

#: ../../library/__future__.rst:57
msgid ""
"*CompilerFlag* is the (bitfield) flag that should be passed in the fourth "
"argument to the built-in function :func:`compile` to enable the feature in "
"dynamically compiled code.  This flag is stored in the :attr:`compiler_flag` "
"attribute on :class:`_Feature` instances."
msgstr ""

#: ../../library/__future__.rst:62
msgid ""
"No feature description will ever be deleted from :mod:`__future__`. Since "
"its introduction in Python 2.1 the following features have found their way "
"into the language using this mechanism:"
msgstr ""
"Ingen funktionsbeskrivning kommer någonsin att tas bort från :mod:"
"`__future__`. Sedan introduktionen i Python 2.1 har följande funktioner "
"hittat sin väg in i språket med hjälp av denna mekanism:"

#: ../../library/__future__.rst:67
msgid "feature"
msgstr "funktion"

#: ../../library/__future__.rst:67
msgid "optional in"
msgstr "valfritt i"

#: ../../library/__future__.rst:67
msgid "mandatory in"
msgstr "obligatorisk i"

#: ../../library/__future__.rst:67
msgid "effect"
msgstr "effekt"

#: ../../library/__future__.rst:69
msgid "nested_scopes"
msgstr ""

#: ../../library/__future__.rst:69
msgid "2.1.0b1"
msgstr "2.1.0b1"

#: ../../library/__future__.rst:69
msgid "2.2"
msgstr "2.2"

#: ../../library/__future__.rst:69
msgid ":pep:`227`: *Statically Nested Scopes*"
msgstr ":pep:`227`: *Statiskt nästlade scopes*"

#: ../../library/__future__.rst:72
msgid "generators"
msgstr ""

#: ../../library/__future__.rst:72
msgid "2.2.0a1"
msgstr "2.2.0a1"

#: ../../library/__future__.rst:72
msgid "2.3"
msgstr "2.3"

#: ../../library/__future__.rst:72
msgid ":pep:`255`: *Simple Generators*"
msgstr ":pep:`255`: *Enkla generatorer*"

#: ../../library/__future__.rst:75
msgid "division"
msgstr "division"

#: ../../library/__future__.rst:75
msgid "2.2.0a2"
msgstr "2.2.0a2"

#: ../../library/__future__.rst:75 ../../library/__future__.rst:78
#: ../../library/__future__.rst:84 ../../library/__future__.rst:87
msgid "3.0"
msgstr "3.0"

#: ../../library/__future__.rst:75
msgid ":pep:`238`: *Changing the Division Operator*"
msgstr ":pep:`238`: *Byte av divisionsoperator*"

#: ../../library/__future__.rst:78
msgid "absolute_import"
msgstr ""

#: ../../library/__future__.rst:78 ../../library/__future__.rst:81
msgid "2.5.0a1"
msgstr "2.5.0a1"

#: ../../library/__future__.rst:78
msgid ":pep:`328`: *Imports: Multi-Line and Absolute/Relative*"
msgstr ":pep:`328`: *Importerar: Flera rader och absolut/relativ*"

#: ../../library/__future__.rst:81
msgid "with_statement"
msgstr ""

#: ../../library/__future__.rst:81
msgid "2.6"
msgstr "2.6"

#: ../../library/__future__.rst:81
msgid ":pep:`343`: *The \"with\" Statement*"
msgstr ""

#: ../../library/__future__.rst:84
msgid "print_function"
msgstr ""

#: ../../library/__future__.rst:84 ../../library/__future__.rst:87
msgid "2.6.0a2"
msgstr "2.6.0a2"

#: ../../library/__future__.rst:84
msgid ":pep:`3105`: *Make print a function*"
msgstr ":pep:`3105`: *Gör print till en funktion*"

#: ../../library/__future__.rst:87
msgid "unicode_literals"
msgstr ""

#: ../../library/__future__.rst:87
msgid ":pep:`3112`: *Bytes literals in Python 3000*"
msgstr ":pep:`3112`: *Byteslitteraler i Python 3000*"

#: ../../library/__future__.rst:90
msgid "generator_stop"
msgstr ""

#: ../../library/__future__.rst:90
msgid "3.5.0b1"
msgstr "3.5.0b1"

#: ../../library/__future__.rst:90
msgid "3.7"
msgstr "3.7"

#: ../../library/__future__.rst:90
msgid ":pep:`479`: *StopIteration handling inside generators*"
msgstr ":pep:`479`: *StopIteration-hantering i generatorer*"

#: ../../library/__future__.rst:93
msgid "annotations"
msgstr "anteckningar"

#: ../../library/__future__.rst:93
msgid "3.7.0b1"
msgstr "3.7.0b1"

#: ../../library/__future__.rst:93
msgid "TBD [1]_"
msgstr ""

#: ../../library/__future__.rst:93
msgid ":pep:`563`: *Postponed evaluation of annotations*"
msgstr ""

#: ../../library/__future__.rst:100
msgid ""
"``from __future__ import annotations`` was previously scheduled to become "
"mandatory in Python 3.10, but the Python Steering Council twice decided to "
"delay the change (`announcement for Python 3.10 <https://mail.python.org/"
"archives/list/python-dev@python.org/message/CLVXXPQ2T2LQ5MP2Y53VVQFCXYWQJHKZ/"
">`__; `announcement for Python 3.11 <https://mail.python.org/archives/list/"
"python-dev@python.org/message/VIZEBX5EYMSYIJNDBF6DMUMZOCWHARSO/>`__). No "
"final decision has been made yet. See also :pep:`563` and :pep:`649`."
msgstr ""

#: ../../library/__future__.rst:110
msgid ":ref:`future`"
msgstr ":ref:`future`"

#: ../../library/__future__.rst:111
msgid "How the compiler treats future imports."
msgstr "Hur kompilatorn behandlar framtida import."
