# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# python-doc bot, 2025
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.10\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-25 17:21+0000\n"
"PO-Revision-Date: 2025-09-22 15:57+0000\n"
"Last-Translator: python-doc bot, 2025\n"
"Language-Team: Swedish (https://app.transifex.com/python-doc/teams/5390/sv/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: sv\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"

#: ../../library/constants.rst:4
msgid "Built-in Constants"
msgstr "Inbyggda konstanter"

#: ../../library/constants.rst:6
msgid "A small number of constants live in the built-in namespace.  They are:"
msgstr ""
"Ett litet antal konstanter finns i den inbyggda namnrymden.  De är följande:"

#: ../../library/constants.rst:10
msgid ""
"The false value of the :class:`bool` type. Assignments to ``False`` are "
"illegal and raise a :exc:`SyntaxError`."
msgstr ""
"Det falska värdet av typen :class:`bool`. Tilldelningar till ``False`` är "
"olagliga och ger upphov till ett :exc:`SyntaxError`."

#: ../../library/constants.rst:16
msgid ""
"The true value of the :class:`bool` type. Assignments to ``True`` are "
"illegal and raise a :exc:`SyntaxError`."
msgstr ""
"Det sanna värdet av typen :class:`bool`. Tilldelningar till ``True`` är "
"olagliga och ger upphov till ett :exc:`SyntaxError`."

#: ../../library/constants.rst:22
msgid ""
"An object frequently used to represent the absence of a value, as when "
"default arguments are not passed to a function. Assignments to ``None`` are "
"illegal and raise a :exc:`SyntaxError`. ``None`` is the sole instance of the"
" :data:`NoneType` type."
msgstr ""

#: ../../library/constants.rst:30
msgid ""
"A special value which should be returned by the binary special methods (e.g."
" :meth:`__eq__`, :meth:`__lt__`, :meth:`__add__`, :meth:`__rsub__`, etc.) to"
" indicate that the operation is not implemented with respect to the other "
"type; may be returned by the in-place binary special methods (e.g. "
":meth:`__imul__`, :meth:`__iand__`, etc.) for the same purpose. It should "
"not be evaluated in a boolean context. ``NotImplemented`` is the sole "
"instance of the :data:`types.NotImplementedType` type."
msgstr ""

#: ../../library/constants.rst:40
msgid ""
"When a binary (or in-place) method returns ``NotImplemented`` the "
"interpreter will try the reflected operation on the other type (or some "
"other fallback, depending on the operator).  If all attempts return "
"``NotImplemented``, the interpreter will raise an appropriate exception. "
"Incorrectly returning ``NotImplemented`` will result in a misleading error "
"message or the ``NotImplemented`` value being returned to Python code."
msgstr ""

#: ../../library/constants.rst:47
msgid "See :ref:`implementing-the-arithmetic-operations` for examples."
msgstr "Se :ref:`implementing-the-arithmetic-operations` för exempel."

#: ../../library/constants.rst:51
msgid ""
"``NotImplementedError`` and ``NotImplemented`` are not interchangeable, even"
" though they have similar names and purposes. See :exc:`NotImplementedError`"
" for details on when to use it."
msgstr ""

#: ../../library/constants.rst:55
msgid ""
"Evaluating ``NotImplemented`` in a boolean context is deprecated. While it "
"currently evaluates as true, it will emit a :exc:`DeprecationWarning`. It "
"will raise a :exc:`TypeError` in a future version of Python."
msgstr ""

#: ../../library/constants.rst:64
msgid ""
"The same as the ellipsis literal \"``...``\". Special value used mostly in "
"conjunction with extended slicing syntax for user-defined container data "
"types. ``Ellipsis`` is the sole instance of the :data:`types.EllipsisType` "
"type."
msgstr ""

#: ../../library/constants.rst:71
msgid ""
"This constant is true if Python was not started with an :option:`-O` option."
" See also the :keyword:`assert` statement."
msgstr ""
"Denna konstant är sann om Python inte startades med ett "
":option:`\\-O`\\-alternativ. Se även :keyword:`assert`\\-satsen."

#: ../../library/constants.rst:77
msgid ""
"The names :data:`None`, :data:`False`, :data:`True` and :data:`__debug__` "
"cannot be reassigned (assignments to them, even as an attribute name, raise "
":exc:`SyntaxError`), so they can be considered \"true\" constants."
msgstr ""
"Namnen :data:`None`, :data:`False`, :data:`True` och :data:`__debug__` kan "
"inte tilldelas på nytt (tilldelningar till dem, även som ett attributnamn, "
"ger upphov till :exc:`SyntaxError`), så de kan betraktas som \"sanna\" "
"konstanter."

#: ../../library/constants.rst:83
msgid "Constants added by the :mod:`site` module"
msgstr "Konstanter som läggs till av modulen :mod:`site`"

#: ../../library/constants.rst:85
msgid ""
"The :mod:`site` module (which is imported automatically during startup, "
"except if the :option:`-S` command-line option is given) adds several "
"constants to the built-in namespace.  They are useful for the interactive "
"interpreter shell and should not be used in programs."
msgstr ""
"Modulen :mod:`site` (som importeras automatiskt vid uppstart, utom om "
"kommandoradsalternativet :option:`\\-S` anges) lägger till flera konstanter "
"i det inbyggda namnrymden.  De är användbara för det interaktiva tolkskalet "
"och bör inte användas i program."

#: ../../library/constants.rst:93
msgid ""
"Objects that when printed, print a message like \"Use quit() or Ctrl-D (i.e."
" EOF) to exit\", and when called, raise :exc:`SystemExit` with the specified"
" exit code."
msgstr ""

#: ../../library/constants.rst:100
msgid ""
"Objects that when printed or called, print the text of copyright or credits,"
" respectively."
msgstr ""
"Objekt som när de skrivs ut eller anropas skriver ut texten för copyright "
"respektive credits."

#: ../../library/constants.rst:105
msgid ""
"Object that when printed, prints the message \"Type license() to see the "
"full license text\", and when called, displays the full license text in a "
"pager-like fashion (one screen at a time)."
msgstr ""
"Objekt som när det skrivs ut visar meddelandet \"Skriv license() för att se "
"hela licenstexten\" och när det anropas visar hela licenstexten på ett "
"personsökarliknande sätt (en skärm i taget)."
