# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# python-doc bot, 2025
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.11\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-25 16:33+0000\n"
"PO-Revision-Date: 2025-09-22 16:49+0000\n"
"Last-Translator: python-doc bot, 2025\n"
"Language-Team: Swedish (https://app.transifex.com/python-doc/teams/5390/sv/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: sv\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"

#: ../../library/binascii.rst:2
msgid ":mod:`binascii` --- Convert between binary and ASCII"
msgstr ""

#: ../../library/binascii.rst:14
msgid ""
"The :mod:`binascii` module contains a number of methods to convert between "
"binary and various ASCII-encoded binary representations. Normally, you will "
"not use these functions directly but use wrapper modules like :mod:`uu` or "
":mod:`base64` instead. The :mod:`binascii` module contains low-level "
"functions written in C for greater speed that are used by the higher-level "
"modules."
msgstr ""

#: ../../library/binascii.rst:23
msgid ""
"``a2b_*`` functions accept Unicode strings containing only ASCII characters."
" Other functions only accept :term:`bytes-like objects <bytes-like object>` "
"(such as :class:`bytes`, :class:`bytearray` and other objects that support "
"the buffer protocol)."
msgstr ""
"``a2b_*``\\-funktioner accepterar Unicode-strängar som endast innehåller "
"ASCII-tecken. Andra funktioner accepterar endast :term:`bytesliknande objekt"
" <bytes-like object>` (t.ex. :class:`bytes`, :class:`bytearray` och andra "
"objekt som stöder buffertprotokollet)."

#: ../../library/binascii.rst:28
msgid ""
"ASCII-only unicode strings are now accepted by the ``a2b_*`` functions."
msgstr "ASCII-only unicode-strängar accepteras nu av funktionerna ``a2b_*``."

#: ../../library/binascii.rst:32
msgid "The :mod:`binascii` module defines the following functions:"
msgstr "Modulen :mod:`binascii` definierar följande funktioner:"

#: ../../library/binascii.rst:37
msgid ""
"Convert a single line of uuencoded data back to binary and return the binary"
" data. Lines normally contain 45 (binary) bytes, except for the last line. "
"Line data may be followed by whitespace."
msgstr ""
"Konvertera en enda rad med uuencoded data tillbaka till binär och returnera "
"binärdata. Rader innehåller normalt 45 (binära) byte, med undantag för den "
"sista raden. Raddata kan följas av blanksteg."

#: ../../library/binascii.rst:44
msgid ""
"Convert binary data to a line of ASCII characters, the return value is the "
"converted line, including a newline char. The length of *data* should be at "
"most 45. If *backtick* is true, zeros are represented by ``'`'`` instead of "
"spaces."
msgstr ""
"Konvertera binära data till en rad med ASCII-tecken, returvärdet är den "
"konverterade raden, inklusive ett tecken för ny rad. Längden på *data* bör "
"vara högst 45. Om *backtick* är true representeras nollor av ``'`'`` "
"istället för mellanslag."

#: ../../library/binascii.rst:48
msgid "Added the *backtick* parameter."
msgstr "Lagt till parametern *backtick*."

#: ../../library/binascii.rst:54
msgid ""
"Convert a block of base64 data back to binary and return the binary data. "
"More than one line may be passed at a time."
msgstr ""
"Konverterar ett block med base64-data tillbaka till binär och returnerar de "
"binära data. Mer än en rad kan skickas åt gången."

#: ../../library/binascii.rst:57
msgid ""
"If *strict_mode* is true, only valid base64 data will be converted. Invalid "
"base64 data will raise :exc:`binascii.Error`."
msgstr ""
"Om *strict_mode* är true kommer endast giltiga base64-data att konverteras. "
"Ogiltiga base64-data kommer att ge upphov till :exc:`binascii.Error`."

#: ../../library/binascii.rst:60
msgid "Valid base64:"
msgstr "Giltig base64:"

#: ../../library/binascii.rst:62
msgid "Conforms to :rfc:`3548`."
msgstr "Överensstämmer med :rfc:`3548`."

#: ../../library/binascii.rst:63
msgid "Contains only characters from the base64 alphabet."
msgstr "Innehåller endast tecken från base64-alfabetet."

#: ../../library/binascii.rst:64
msgid ""
"Contains no excess data after padding (including excess padding, newlines, "
"etc.)."
msgstr ""
"Innehåller inga överflödiga data efter utfyllnad (inklusive överflödig "
"utfyllnad, nya linjer etc.)."

#: ../../library/binascii.rst:65
msgid "Does not start with a padding."
msgstr "Börjar inte med en utfyllnad."

#: ../../library/binascii.rst:67
msgid "Added the *strict_mode* parameter."
msgstr "Parametern *strict_mode* har lagts till."

#: ../../library/binascii.rst:73
msgid ""
"Convert binary data to a line of ASCII characters in base64 coding. The "
"return value is the converted line, including a newline char if *newline* is"
" true.  The output of this function conforms to :rfc:`3548`."
msgstr ""
"Konverterar binära data till en rad ASCII-tecken i base64-kodning. "
"Returvärdet är den konverterade raden, inklusive ett tecken för ny rad om "
"*newline* är sant.  Utdata från denna funktion överensstämmer med "
":rfc:`3548`."

#: ../../library/binascii.rst:77
msgid "Added the *newline* parameter."
msgstr "Parametern *newline* har lagts till."

#: ../../library/binascii.rst:83
msgid ""
"Convert a block of quoted-printable data back to binary and return the "
"binary data. More than one line may be passed at a time. If the optional "
"argument *header* is present and true, underscores will be decoded as "
"spaces."
msgstr ""
"Konverterar ett block med data som kan skrivas ut med citattecken tillbaka "
"till binära data och returnerar de binära data. Mer än en rad kan skickas åt"
" gången. Om det valfria argumentet *header* är närvarande och true, kommer "
"understrykningar att avkodas som mellanslag."

#: ../../library/binascii.rst:90
msgid ""
"Convert binary data to a line(s) of ASCII characters in quoted-printable "
"encoding.  The return value is the converted line(s). If the optional "
"argument *quotetabs* is present and true, all tabs and spaces will be "
"encoded.   If the optional argument *istext* is present and true, newlines "
"are not encoded but trailing whitespace will be encoded. If the optional "
"argument *header* is present and true, spaces will be encoded as underscores"
" per :rfc:`1522`. If the optional argument *header* is present and false, "
"newline characters will be encoded as well; otherwise linefeed conversion "
"might corrupt the binary data stream."
msgstr ""
"Konverterar binära data till en eller flera rader med ASCII-tecken i "
"citattryckbar kodning.  Returvärdet är den konverterade raden/raderna. Om "
"det valfria argumentet *quotetabs* är närvarande och sant, kommer alla "
"tabbar och mellanslag att kodas.   Om det valfria argumentet *istext* är "
"närvarande och true, kodas inte nya rader men efterföljande blanksteg kodas."
" Om det valfria argumentet *header* är närvarande och sant, kommer "
"mellanslag att kodas som understrykningstecken enligt :rfc:`1522`. Om det "
"valfria argumentet *header* är närvarande och false, kommer även tecken för "
"nya rader att kodas; annars kan omvandling av radavbrott korrumpera den "
"binära dataströmmen."

#: ../../library/binascii.rst:103
msgid ""
"Compute a 16-bit CRC value of *data*, starting with *value* as the initial "
"CRC, and return the result.  This uses the CRC-CCITT polynomial *x*:sup:`16`"
" + *x*:sup:`12` + *x*:sup:`5` + 1, often represented as 0x1021.  This CRC is"
" used in the binhex4 format."
msgstr ""
"Beräkna ett 16-bitars CRC-värde för *data*, med *värde* som första CRC, och "
"returnera resultatet.  Detta använder CRC-CCITT-polynomet *x*:sup:`16` + "
"*x*:sup:`12` + *x*:sup:`5` + 1, ofta representerat som 0x1021.  Denna CRC "
"används i binhex4-formatet."

#: ../../library/binascii.rst:111
msgid ""
"Compute CRC-32, the unsigned 32-bit checksum of *data*, starting with an "
"initial CRC of *value*.  The default initial CRC is zero.  The algorithm is "
"consistent with the ZIP file checksum.  Since the algorithm is designed for "
"use as a checksum algorithm, it is not suitable for use as a general hash "
"algorithm.  Use as follows::"
msgstr ""
"Beräkna CRC-32, den osignerade 32-bitars kontrollsumman för *data*, med "
"utgångspunkt från en initial CRC på *värde*.  Standardvärdet för den "
"initiala CRC:n är noll.  Algoritmen är konsekvent med ZIP-filens "
"kontrollsumma.  Eftersom algoritmen är utformad för att användas som en "
"kontrollsummealgoritm är den inte lämplig att använda som en allmän "
"hashalgoritm.  Använd enligt följande::"

#: ../../library/binascii.rst:123
msgid "The result is always unsigned."
msgstr "Resultatet är alltid osignerat."

#: ../../library/binascii.rst:129
msgid ""
"Return the hexadecimal representation of the binary *data*.  Every byte of "
"*data* is converted into the corresponding 2-digit hex representation.  The "
"returned bytes object is therefore twice as long as the length of *data*."
msgstr ""
"Returnerar den hexadecimala representationen av binära *data*.  Varje byte i"
" *data* konverteras till motsvarande 2-siffriga hexadecimala representation."
"  Det returnerade bytes-objektet är därför dubbelt så långt som längden på "
"*data*."

#: ../../library/binascii.rst:133
msgid ""
"Similar functionality (but returning a text string) is also conveniently "
"accessible using the :meth:`bytes.hex` method."
msgstr ""
"Liknande funktionalitet (men som returnerar en textsträng) är också "
"lättillgänglig med metoden :meth:`bytes.hex`."

#: ../../library/binascii.rst:136
msgid ""
"If *sep* is specified, it must be a single character str or bytes object. It"
" will be inserted in the output after every *bytes_per_sep* input bytes. "
"Separator placement is counted from the right end of the output by default, "
"if you wish to count from the left, supply a negative *bytes_per_sep* value."
msgstr ""
"Om *sep* anges måste det vara ett str- eller bytes-objekt med ett enda "
"tecken. Det kommer att infogas i utdata efter varje *bytes_per_sep* "
"indatabytes. Separatorplaceringen räknas som standard från den högra änden "
"av utmatningen, om du vill räkna från vänster anger du ett negativt "
"*bytes_per_sep*-värde."

#: ../../library/binascii.rst:151
msgid "The *sep* and *bytes_per_sep* parameters were added."
msgstr "Parametrarna *sep* och *bytes_per_sep* har lagts till."

#: ../../library/binascii.rst:157
msgid ""
"Return the binary data represented by the hexadecimal string *hexstr*.  This"
" function is the inverse of :func:`b2a_hex`. *hexstr* must contain an even "
"number of hexadecimal digits (which can be upper or lower case), otherwise "
"an :exc:`Error` exception is raised."
msgstr ""
"Returnerar binärdata som representeras av den hexadecimala strängen "
"*hexstr*.  Denna funktion är inversen av :func:`b2a_hex`. *hexstr* måste "
"innehålla ett jämnt antal hexadecimala siffror (som kan vara versaler eller "
"gemener), annars uppstår ett :exc:`Error` undantag."

#: ../../library/binascii.rst:162
msgid ""
"Similar functionality (accepting only text string arguments, but more "
"liberal towards whitespace) is also accessible using the "
":meth:`bytes.fromhex` class method."
msgstr ""
"Liknande funktionalitet (som endast accepterar argument i form av "
"textsträngar, men som är mer liberal när det gäller blanksteg) kan också nås"
" med klassmetoden :meth:`bytes.fromhex`."

#: ../../library/binascii.rst:168
msgid "Exception raised on errors. These are usually programming errors."
msgstr "Undantag som uppstår vid fel. Dessa är vanligtvis programmeringsfel."

#: ../../library/binascii.rst:173
msgid ""
"Exception raised on incomplete data. These are usually not programming "
"errors, but may be handled by reading a little more data and trying again."
msgstr ""
"Undantag på grund av ofullständiga data. Dessa är vanligtvis inte "
"programmeringsfel, men kan hanteras genom att läsa lite mer data och försöka"
" igen."

#: ../../library/binascii.rst:181
msgid "Module :mod:`base64`"
msgstr "Modul :mod:`base64`"

#: ../../library/binascii.rst:180
msgid ""
"Support for RFC compliant base64-style encoding in base 16, 32, 64, and 85."
msgstr ""
"Stöd för RFC-kompatibel kodning i base64-stil i baserna 16, 32, 64 och 85."

#: ../../library/binascii.rst:184
msgid "Module :mod:`uu`"
msgstr ""

#: ../../library/binascii.rst:184
msgid "Support for UU encoding used on Unix."
msgstr ""

#: ../../library/binascii.rst:186
msgid "Module :mod:`quopri`"
msgstr "Modul :mod:`quopri`"

#: ../../library/binascii.rst:187
msgid "Support for quoted-printable encoding used in MIME email messages."
msgstr ""
"Stöd för utskriftskodning med citattecken som används i MIME-e-"
"postmeddelanden."

#: ../../library/binascii.rst:8
msgid "module"
msgstr "module"

#: ../../library/binascii.rst:8
msgid "uu"
msgstr "uu"

#: ../../library/binascii.rst:8
msgid "base64"
msgstr "base64"
