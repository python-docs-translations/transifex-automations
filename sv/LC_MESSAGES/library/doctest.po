# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# python-doc bot, 2025
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.11\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-10-15 16:36+0000\n"
"PO-Revision-Date: 2025-09-22 16:49+0000\n"
"Last-Translator: python-doc bot, 2025\n"
"Language-Team: Swedish (https://app.transifex.com/python-doc/teams/5390/"
"sv/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: sv\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"

#: ../../library/doctest.rst:2
msgid ":mod:`doctest` --- Test interactive Python examples"
msgstr ""

#: ../../library/doctest.rst:12
msgid "**Source code:** :source:`Lib/doctest.py`"
msgstr "**Källkod:** :source:`Lib/doctest.py`"

#: ../../library/doctest.rst:16
msgid ""
"The :mod:`doctest` module searches for pieces of text that look like "
"interactive Python sessions, and then executes those sessions to verify that "
"they work exactly as shown.  There are several common ways to use doctest:"
msgstr ""
"Modulen :mod:`doctest` söker efter textstycken som ser ut som interaktiva "
"Python-sessioner och kör sedan dessa sessioner för att verifiera att de "
"fungerar exakt som de visas.  Det finns flera vanliga sätt att använda "
"doctest:"

#: ../../library/doctest.rst:20
msgid ""
"To check that a module's docstrings are up-to-date by verifying that all "
"interactive examples still work as documented."
msgstr ""
"För att kontrollera att en moduls dokumentation är uppdaterad genom att "
"verifiera att alla interaktiva exempel fortfarande fungerar enligt "
"dokumentationen."

#: ../../library/doctest.rst:23
msgid ""
"To perform regression testing by verifying that interactive examples from a "
"test file or a test object work as expected."
msgstr ""
"Att utföra regressionstest genom att verifiera att interaktiva exempel från "
"en testfil eller ett testobjekt fungerar som förväntat."

#: ../../library/doctest.rst:26
msgid ""
"To write tutorial documentation for a package, liberally illustrated with "
"input-output examples.  Depending on whether the examples or the expository "
"text are emphasized, this has the flavor of \"literate testing\" or "
"\"executable documentation\"."
msgstr ""
"Att skriva handledningsdokumentation för ett paket, rikligt illustrerad med "
"exempel på inmatning och utmatning.  Beroende på om exemplen eller den "
"förklarande texten betonas, har detta en smak av \"litterat testande\" eller "
"\"körbar dokumentation\"."

#: ../../library/doctest.rst:31
msgid "Here's a complete but small example module::"
msgstr "Här är en komplett men liten exempelmodul::"

#: ../../library/doctest.rst:88
msgid ""
"If you run :file:`example.py` directly from the command line, :mod:`doctest` "
"works its magic:"
msgstr ""
"Om du kör :file:`example.py` direkt från kommandoraden, kommer :mod:"
"`doctest` att utföra sin magi:"

#: ../../library/doctest.rst:96
msgid ""
"There's no output!  That's normal, and it means all the examples worked.  "
"Pass ``-v`` to the script, and :mod:`doctest` prints a detailed log of what "
"it's trying, and prints a summary at the end:"
msgstr ""
"Det finns ingen utdata!  Det är normalt, och det betyder att alla exempel "
"fungerade.  Skicka ``\\-v`` till skriptet, och :mod:`doctest` skriver ut en "
"detaljerad logg över vad det försöker göra, och skriver ut en sammanfattning "
"i slutet:"

#: ../../library/doctest.rst:114
msgid "And so on, eventually ending with:"
msgstr "Och så vidare, för att slutligen sluta med:"

#: ../../library/doctest.rst:133
msgid ""
"That's all you need to know to start making productive use of :mod:"
"`doctest`! Jump in.  The following sections provide full details.  Note that "
"there are many examples of doctests in the standard Python test suite and "
"libraries. Especially useful examples can be found in the standard test "
"file :file:`Lib/test/test_doctest/test_doctest.py`."
msgstr ""
"Det är allt du behöver veta för att börja använda :mod:`doctest` på ett "
"produktivt sätt! Hoppa in.  Följande avsnitt ger fullständiga detaljer.  "
"Observera att det finns många exempel på doctests i Pythons standardtestsvit "
"och bibliotek. Speciellt användbara exempel finns i standardtestfilen :file:"
"`Lib/test/test_doctest/test_doctest.py`."

#: ../../library/doctest.rst:143
msgid "Simple Usage: Checking Examples in Docstrings"
msgstr "Enkel användning: Kontrollera exempel i dokumentsträngar"

#: ../../library/doctest.rst:145
msgid ""
"The simplest way to start using doctest (but not necessarily the way you'll "
"continue to do it) is to end each module :mod:`!M` with::"
msgstr ""
"Det enklaste sättet att börja använda doctest (men inte nödvändigtvis det "
"sätt som du kommer att fortsätta att göra det på) är att avsluta varje "
"modul :mod:`!M` med::"

#: ../../library/doctest.rst:152
msgid ":mod:`!doctest` then examines docstrings in module :mod:`!M`."
msgstr ":mod:`!doctest` undersöker sedan dokumentsträngar i modulen :mod:`!M`."

#: ../../library/doctest.rst:154
msgid ""
"Running the module as a script causes the examples in the docstrings to get "
"executed and verified::"
msgstr ""
"Om modulen körs som ett skript kommer exemplen i dokumentationen att köras "
"och verifieras::"

#: ../../library/doctest.rst:159
msgid ""
"This won't display anything unless an example fails, in which case the "
"failing example(s) and the cause(s) of the failure(s) are printed to stdout, "
"and the final line of output is ``***Test Failed*** N failures.``, where *N* "
"is the number of examples that failed."
msgstr ""
"Detta kommer inte att visa någonting om inte ett exempel misslyckas, i "
"vilket fall de misslyckade exemplen och orsaken till misslyckandet skrivs ut "
"till stdout, och den sista utdataraden är ``***Test Failed*** N failures.``, "
"där *N* är antalet exempel som misslyckades."

#: ../../library/doctest.rst:164
msgid "Run it with the ``-v`` switch instead::"
msgstr "Kör det med ``\\-v``\\-omkopplaren istället::"

#: ../../library/doctest.rst:168
msgid ""
"and a detailed report of all examples tried is printed to standard output, "
"along with assorted summaries at the end."
msgstr ""
"och en detaljerad rapport om alla exempel som provats skrivs ut till "
"standardutmatningen, tillsammans med diverse sammanfattningar i slutet."

#: ../../library/doctest.rst:171
msgid ""
"You can force verbose mode by passing ``verbose=True`` to :func:`testmod`, "
"or prohibit it by passing ``verbose=False``.  In either of those cases, "
"``sys.argv`` is not examined by :func:`testmod` (so passing ``-v`` or not "
"has no effect)."
msgstr ""

#: ../../library/doctest.rst:176
msgid ""
"There is also a command line shortcut for running :func:`testmod`.  You can "
"instruct the Python interpreter to run the doctest module directly from the "
"standard library and pass the module name(s) on the command line::"
msgstr ""

#: ../../library/doctest.rst:182
msgid ""
"This will import :file:`example.py` as a standalone module and run :func:"
"`testmod` on it.  Note that this may not work correctly if the file is part "
"of a package and imports other submodules from that package."
msgstr ""

#: ../../library/doctest.rst:186
msgid ""
"For more information on :func:`testmod`, see section :ref:`doctest-basic-"
"api`."
msgstr ""
"För mer information om :func:`testmod`, se avsnitt :ref:`doctest-basic-api`."

#: ../../library/doctest.rst:192
msgid "Simple Usage: Checking Examples in a Text File"
msgstr "Enkel användning: Kontrollera exempel i en textfil"

#: ../../library/doctest.rst:194
msgid ""
"Another simple application of doctest is testing interactive examples in a "
"text file.  This can be done with the :func:`testfile` function::"
msgstr ""
"En annan enkel tillämpning av doctest är att testa interaktiva exempel i en "
"textfil.  Detta kan göras med funktionen :func:`testfile`::"

#: ../../library/doctest.rst:200
msgid ""
"That short script executes and verifies any interactive Python examples "
"contained in the file :file:`example.txt`.  The file content is treated as "
"if it were a single giant docstring; the file doesn't need to contain a "
"Python program!   For example, perhaps :file:`example.txt` contains this:"
msgstr ""
"Det korta skriptet exekverar och verifierar alla interaktiva Python-exempel "
"som finns i filen :file:`example.txt`.  Filens innehåll behandlas som om det "
"vore en enda stor dokumentsträng; filen behöver inte innehålla ett Python-"
"program!   Till exempel kanske :file:`example.txt` innehåller detta:"

#: ../../library/doctest.rst:223
msgid ""
"Running ``doctest.testfile(\"example.txt\")`` then finds the error in this "
"documentation::"
msgstr ""
"När man kör ``doctest.testfile(\"example.txt\")`` hittar man sedan felet i "
"denna dokumentation::"

#: ../../library/doctest.rst:234
msgid ""
"As with :func:`testmod`, :func:`testfile` won't display anything unless an "
"example fails.  If an example does fail, then the failing example(s) and the "
"cause(s) of the failure(s) are printed to stdout, using the same format as :"
"func:`testmod`."
msgstr ""

#: ../../library/doctest.rst:239
msgid ""
"By default, :func:`testfile` looks for files in the calling module's "
"directory. See section :ref:`doctest-basic-api` for a description of the "
"optional arguments that can be used to tell it to look for files in other "
"locations."
msgstr ""
"Som standard letar :func:`testfile` efter filer i den anropande modulens "
"katalog. Se avsnitt :ref:`doctest-basic-api` för en beskrivning av de "
"valfria argument som kan användas för att be den leta efter filer på andra "
"platser."

#: ../../library/doctest.rst:243
msgid ""
"Like :func:`testmod`, :func:`testfile`'s verbosity can be set with the ``-"
"v`` command-line switch or with the optional keyword argument *verbose*."
msgstr ""
"I likhet med :func:`testmod` kan :func:`testfile`\\:s ordrikedom ställas in "
"med kommandoradskommandot ``\\-v`` eller med det valfria "
"nyckelordsargumentet *verbose*."

#: ../../library/doctest.rst:247
msgid ""
"There is also a command line shortcut for running :func:`testfile`.  You can "
"instruct the Python interpreter to run the doctest module directly from the "
"standard library and pass the file name(s) on the command line::"
msgstr ""

#: ../../library/doctest.rst:253
msgid ""
"Because the file name does not end with :file:`.py`, :mod:`doctest` infers "
"that it must be run with :func:`testfile`, not :func:`testmod`."
msgstr ""

#: ../../library/doctest.rst:256
msgid ""
"For more information on :func:`testfile`, see section :ref:`doctest-basic-"
"api`."
msgstr ""
"För mer information om :func:`testfile`, se avsnitt :ref:`doctest-basic-api`."

#: ../../library/doctest.rst:262
msgid "How It Works"
msgstr "Hur det fungerar"

#: ../../library/doctest.rst:264
msgid ""
"This section examines in detail how doctest works: which docstrings it looks "
"at, how it finds interactive examples, what execution context it uses, how "
"it handles exceptions, and how option flags can be used to control its "
"behavior. This is the information that you need to know to write doctest "
"examples; for information about actually running doctest on these examples, "
"see the following sections."
msgstr ""
"I det här avsnittet undersöks i detalj hur doctest fungerar: vilka "
"dokumentsträngar det tittar på, hur det hittar interaktiva exempel, vilket "
"exekveringskontext det använder, hur det hanterar undantag och hur "
"alternativflaggor kan användas för att styra dess beteende. Detta är den "
"information som du behöver för att skriva doctest-exempel; för information "
"om hur du faktiskt kör doctest på dessa exempel, se följande avsnitt."

#: ../../library/doctest.rst:275
msgid "Which Docstrings Are Examined?"
msgstr "Vilka dokumentsträngar granskas?"

#: ../../library/doctest.rst:277
msgid ""
"The module docstring, and all function, class and method docstrings are "
"searched.  Objects imported into the module are not searched."
msgstr ""
"Modulens dokumentsträng och alla funktions-, klass- och "
"metoddokumentsträngar genomsöks.  Objekt som importeras till modulen "
"genomsöks inte."

#: ../../library/doctest.rst:280
msgid ""
"In addition, there are cases when you want tests to be part of a module but "
"not part of the help text, which requires that the tests not be included in "
"the docstring. Doctest looks for a module-level variable called ``__test__`` "
"and uses it to locate other tests. If ``M.__test__`` exists, it must be a "
"dict, and each entry maps a (string) name to a function object, class "
"object, or string. Function and class object docstrings found from ``M."
"__test__`` are searched, and strings are treated as if they were "
"docstrings.  In output, a key ``K`` in ``M.__test__`` appears with name ``M."
"__test__.K``."
msgstr ""
"Dessutom finns det fall där du vill att tester ska vara en del av en modul "
"men inte en del av hjälptexten, vilket kräver att testerna inte ingår i "
"dokumentsträngen. Doctest letar efter en variabel på modulnivå som heter "
"``__test__`` och använder den för att hitta andra tester. Om ``M.__test__`` "
"finns måste den vara en dict, och varje post mappar ett (sträng)namn till "
"ett funktionsobjekt, klassobjekt eller en sträng. Dokumentsträngar för "
"funktions- och klassobjekt som hittas från ``M.__test__`` söks igenom och "
"strängar behandlas som om de vore dokumentsträngar.  I utdata visas en "
"nyckel ``K`` i ``M.__test__`` med namnet ``M.__test__.K``."

#: ../../library/doctest.rst:289
msgid "For example, place this block of code at the top of :file:`example.py`:"
msgstr ""
"Placera till exempel det här kodblocket högst upp i :file:`example.py`:"

#: ../../library/doctest.rst:303
msgid ""
"The value of ``example.__test__[\"numbers\"]`` will be treated as a "
"docstring and all the tests inside it will be run. It is important to note "
"that the value can be mapped to a function, class object, or module; if so, :"
"mod:`!doctest` searches them recursively for docstrings, which are then "
"scanned for tests."
msgstr ""
"Värdet av ``example.__test__[\"numbers\"]`` kommer att behandlas som en "
"docstring och alla tester i den kommer att köras. Det är viktigt att notera "
"att värdet kan mappas till en funktion, ett klassobjekt eller en modul; om "
"så är fallet söker :mod:`!doctest` igenom dem rekursivt efter docstrings, "
"som sedan genomsöks efter tester."

#: ../../library/doctest.rst:309
msgid ""
"Any classes found are recursively searched similarly, to test docstrings in "
"their contained methods and nested classes."
msgstr ""
"Alla klasser som hittas genomsöks rekursivt på samma sätt för att testa "
"dokumentsträngar i de metoder och nästlade klasser som ingår."

#: ../../library/doctest.rst:316
msgid "How are Docstring Examples Recognized?"
msgstr "Hur känns Docstring-exempel igen?"

#: ../../library/doctest.rst:318
msgid ""
"In most cases a copy-and-paste of an interactive console session works fine, "
"but doctest isn't trying to do an exact emulation of any specific Python "
"shell."
msgstr ""
"I de flesta fall fungerar en kopia och klistra in av en interaktiv "
"konsolsession bra, men doctest försöker inte göra en exakt emulering av "
"något specifikt Python-skal."

#: ../../library/doctest.rst:343
msgid ""
"Any expected output must immediately follow the final ``'>>> '`` or ``'... "
"'`` line containing the code, and the expected output (if any) extends to "
"the next ``'>>> '`` or all-whitespace line."
msgstr ""
"Any expected output must immediately follow the final ``'>>> '`` or ``'... "
"'`` line containing the code, and the expected output (if any) extends to "
"the next ``'>>> '`` or all-whitespace line."

#: ../../library/doctest.rst:347
msgid "The fine print:"
msgstr "Det finstilta:"

#: ../../library/doctest.rst:349
msgid ""
"Expected output cannot contain an all-whitespace line, since such a line is "
"taken to signal the end of expected output.  If expected output does contain "
"a blank line, put ``<BLANKLINE>`` in your doctest example each place a blank "
"line is expected."
msgstr ""
"Förväntad utdata kan inte innehålla en rad med enbart blanksteg, eftersom en "
"sådan rad anses signalera slutet på förväntad utdata.  Om förväntad utdata "
"innehåller en blankrad, lägg till ``<BLANKLINE>`` i ditt doctest-exempel "
"varje gång en blankrad förväntas."

#: ../../library/doctest.rst:354
msgid ""
"All hard tab characters are expanded to spaces, using 8-column tab stops. "
"Tabs in output generated by the tested code are not modified.  Because any "
"hard tabs in the sample output *are* expanded, this means that if the code "
"output includes hard tabs, the only way the doctest can pass is if the :"
"const:`NORMALIZE_WHITESPACE` option or :ref:`directive <doctest-directives>` "
"is in effect. Alternatively, the test can be rewritten to capture the output "
"and compare it to an expected value as part of the test.  This handling of "
"tabs in the source was arrived at through trial and error, and has proven to "
"be the least error prone way of handling them.  It is possible to use a "
"different algorithm for handling tabs by writing a custom :class:"
"`DocTestParser` class."
msgstr ""
"Alla hårda tabbtecken expanderas till mellanslag med tabbstopp i 8 kolumner. "
"Tabbar i utdata som genereras av den testade koden ändras inte.  Eftersom "
"alla hårda tabbar i exempelutmatningen *expanderas* innebär detta att om "
"kodutmatningen innehåller hårda tabbar är det enda sättet för doctestet att "
"bli godkänt om alternativet :const:`NORMALIZE_WHITESPACE` eller :ref:"
"`directive <doctest-directives>` är i kraft. Alternativt kan testet skrivas "
"om för att fånga utdata och jämföra det med ett förväntat värde som en del "
"av testet.  Den här hanteringen av tabbar i källan har kommit till genom "
"försök och misstag och har visat sig vara det minst felbenägna sättet att "
"hantera dem.  Det är möjligt att använda en annan algoritm för att hantera "
"tabbar genom att skriva en egen :class:`DocTestParser`\\-klass."

#: ../../library/doctest.rst:366
msgid ""
"Output to stdout is captured, but not output to stderr (exception tracebacks "
"are captured via a different means)."
msgstr ""
"Utdata till stdout fångas upp, men inte utdata till stderr (spårningar av "
"undantag fångas upp på ett annat sätt)."

#: ../../library/doctest.rst:369
msgid ""
"If you continue a line via backslashing in an interactive session, or for "
"any other reason use a backslash, you should use a raw docstring, which will "
"preserve your backslashes exactly as you type them::"
msgstr ""
"Om du fortsätter en rad med hjälp av backslash i en interaktiv session, "
"eller av någon annan anledning använder backslash, bör du använda en rå "
"docstring, som bevarar dina backslash exakt som du skriver dem::"

#: ../../library/doctest.rst:378
msgid ""
"Otherwise, the backslash will be interpreted as part of the string. For "
"example, the ``\\n`` above would be interpreted as a newline character.  "
"Alternatively, you can double each backslash in the doctest version (and not "
"use a raw string)::"
msgstr ""
"I annat fall tolkas backslash som en del av strängen. Till exempel skulle "
"``n`` ovan tolkas som ett tecken för ny rad.  Alternativt kan du fördubbla "
"varje backslash i doctest-versionen (och inte använda en rå sträng)::"

#: ../../library/doctest.rst:387
msgid "The starting column doesn't matter::"
msgstr "Startkolumnen spelar ingen roll::"

#: ../../library/doctest.rst:394
msgid ""
"and as many leading whitespace characters are stripped from the expected "
"output as appeared in the initial ``'>>> '`` line that started the example."
msgstr ""
"and as many leading whitespace characters are stripped from the expected "
"output as appeared in the initial ``'>>> '`` line that started the example."

#: ../../library/doctest.rst:401
msgid "What's the Execution Context?"
msgstr "Vad är exekveringskontexten?"

#: ../../library/doctest.rst:403
msgid ""
"By default, each time :mod:`doctest` finds a docstring to test, it uses a "
"*shallow copy* of :mod:`!M`'s globals, so that running tests doesn't change "
"the module's real globals, and so that one test in :mod:`!M` can't leave "
"behind crumbs that accidentally allow another test to work.  This means "
"examples can freely use any names defined at top-level in :mod:`!M`, and "
"names defined earlier in the docstring being run. Examples cannot see names "
"defined in other docstrings."
msgstr ""
"Som standard, varje gång :mod:`doctest` hittar en dokumentsträng att testa, "
"använder den en *grunt kopia* av :mod:`!M`\\:s globaler, så att körning av "
"tester inte ändrar modulens verkliga globaler, och så att ett test i :mod:`!"
"M` inte kan lämna efter sig smulor som av misstag tillåter ett annat test "
"att fungera.  Detta innebär att exempel fritt kan använda alla namn som "
"definieras på toppnivå i :mod:`!M`, och namn som definieras tidigare i den "
"dokumentsträng som körs. Exempel kan inte se namn som definierats i andra "
"dokumentsträngar."

#: ../../library/doctest.rst:411
msgid ""
"You can force use of your own dict as the execution context by passing "
"``globs=your_dict`` to :func:`testmod` or :func:`testfile` instead."
msgstr ""
"Du kan tvinga fram användning av din egen dict som exekveringskontext genom "
"att skicka ``globs=your_dict`` till :func:`testmod` eller :func:`testfile` "
"istället."

#: ../../library/doctest.rst:418
msgid "What About Exceptions?"
msgstr "Hur är det med undantag?"

#: ../../library/doctest.rst:420
msgid ""
"No problem, provided that the traceback is the only output produced by the "
"example:  just paste in the traceback. [#]_ Since tracebacks contain details "
"that are likely to change rapidly (for example, exact file paths and line "
"numbers), this is one case where doctest works hard to be flexible in what "
"it accepts."
msgstr ""
"Inga problem, förutsatt att spårningen är den enda utdata som exemplet ger: "
"klistra bara in spårningen. [#]_ Eftersom spårningar innehåller detaljer som "
"sannolikt kommer att ändras snabbt (till exempel exakta filsökvägar och "
"radnummer) är detta ett fall där doctest arbetar hårt för att vara flexibel "
"i vad den accepterar."

#: ../../library/doctest.rst:426
msgid "Simple example::"
msgstr "Ett enkelt exempel::"

#: ../../library/doctest.rst:433
msgid ""
"That doctest succeeds if :exc:`ValueError` is raised, with the ``list."
"remove(x): x not in list`` detail as shown."
msgstr ""
"Detta doctest lyckas om :exc:`ValueError` tas upp, med ``list.remove(x): x "
"not in list`` detalj som visas."

#: ../../library/doctest.rst:436
msgid ""
"The expected output for an exception must start with a traceback header, "
"which may be either of the following two lines, indented the same as the "
"first line of the example::"
msgstr ""
"Den förväntade utdata för ett undantag måste börja med en spårningsrubrik, "
"som kan vara någon av följande två rader, indragna på samma sätt som den "
"första raden i exemplet::"

#: ../../library/doctest.rst:443
msgid ""
"The traceback header is followed by an optional traceback stack, whose "
"contents are ignored by doctest.  The traceback stack is typically omitted, "
"or copied verbatim from an interactive session."
msgstr ""
"Traceback-huvudet följs av en valfri traceback-stack, vars innehåll "
"ignoreras av doctest.  Traceback-stacken utelämnas vanligtvis eller kopieras "
"ordagrant från en interaktiv session."

#: ../../library/doctest.rst:447
msgid ""
"The traceback stack is followed by the most interesting part: the line(s) "
"containing the exception type and detail.  This is usually the last line of "
"a traceback, but can extend across multiple lines if the exception has a "
"multi-line detail::"
msgstr ""
"Efter spårningsstacken följer den mest intressanta delen: raden/raderna som "
"innehåller undantagstypen och detaljerna.  Detta är vanligtvis den sista "
"raden i en spårning, men kan sträcka sig över flera rader om undantaget har "
"en detalj med flera rader::"

#: ../../library/doctest.rst:459
msgid ""
"The last three lines (starting with :exc:`ValueError`) are compared against "
"the exception's type and detail, and the rest are ignored."
msgstr ""
"De tre sista raderna (som börjar med :exc:`ValueError`) jämförs med "
"undantagets typ och detalj, och resten ignoreras."

#: ../../library/doctest.rst:462
msgid ""
"Best practice is to omit the traceback stack, unless it adds significant "
"documentation value to the example.  So the last example is probably better "
"as::"
msgstr ""
"Bästa praxis är att utelämna traceback-stacken, såvida den inte tillför ett "
"betydande dokumentationsvärde till exemplet.  Så det sista exemplet är "
"förmodligen bättre som::"

#: ../../library/doctest.rst:472
msgid ""
"Note that tracebacks are treated very specially.  In particular, in the "
"rewritten example, the use of ``...`` is independent of doctest's :const:"
"`ELLIPSIS` option.  The ellipsis in that example could be left out, or could "
"just as well be three (or three hundred) commas or digits, or an indented "
"transcript of a Monty Python skit."
msgstr ""
"Observera att spårningar behandlas mycket speciellt.  I synnerhet i det "
"omskrivna exemplet är användningen av ``...`` oberoende av doctests :const:"
"`ELLIPSIS`\\-alternativ.  Ellipsen i det exemplet kan utelämnas, eller lika "
"gärna vara tre (eller trehundra) kommatecken eller siffror, eller en "
"indragen utskrift av en Monty Python-sketch."

#: ../../library/doctest.rst:478
msgid "Some details you should read once, but won't need to remember:"
msgstr "Vissa detaljer bör du läsa en gång, men behöver inte komma ihåg:"

#: ../../library/doctest.rst:480
msgid ""
"Doctest can't guess whether your expected output came from an exception "
"traceback or from ordinary printing.  So, e.g., an example that expects "
"``ValueError: 42 is prime`` will pass whether :exc:`ValueError` is actually "
"raised or if the example merely prints that traceback text.  In practice, "
"ordinary output rarely begins with a traceback header line, so this doesn't "
"create real problems."
msgstr ""
"Doctest kan inte gissa om den förväntade utmatningen kommer från en "
"exception traceback eller från vanlig utskrift.  Så, t.ex., ett exempel som "
"förväntar sig ``ValueError: 42 is prime`` kommer att godkännas oavsett om :"
"exc:`ValueError` faktiskt uppstår eller om exemplet bara skriver ut den "
"spårningstexten.  I praktiken börjar vanliga utdata sällan med en "
"spårningshuvudrad, så det här skapar inga verkliga problem."

#: ../../library/doctest.rst:487
msgid ""
"Each line of the traceback stack (if present) must be indented further than "
"the first line of the example, *or* start with a non-alphanumeric character. "
"The first line following the traceback header indented the same and starting "
"with an alphanumeric is taken to be the start of the exception detail.  Of "
"course this does the right thing for genuine tracebacks."
msgstr ""
"Varje rad i spårningsstacken (om sådan finns) måste vara indragen längre än "
"den första raden i exemplet, *eller* börja med ett icke-alfanumeriskt "
"tecken. Den första raden efter spårningshuvudet som är indragen på samma "
"sätt och som börjar med ett alfanumeriskt tecken anses vara början på "
"undantagsdetaljen.  Naturligtvis gör detta det rätta för äkta spårningar."

#: ../../library/doctest.rst:493
msgid ""
"When the :const:`IGNORE_EXCEPTION_DETAIL` doctest option is specified, "
"everything following the leftmost colon and any module information in the "
"exception name is ignored."
msgstr ""
"När doctest-alternativet :const:`IGNORE_EXCEPTION_DETAIL` anges ignoreras "
"allt som följer efter kolon längst till vänster och all modulinformation i "
"undantagsnamnet."

#: ../../library/doctest.rst:497
msgid ""
"The interactive shell omits the traceback header line for some :exc:"
"`SyntaxError`\\ s.  But doctest uses the traceback header line to "
"distinguish exceptions from non-exceptions.  So in the rare case where you "
"need to test a :exc:`SyntaxError` that omits the traceback header, you will "
"need to manually add the traceback header line to your test example."
msgstr ""

#: ../../library/doctest.rst:505
msgid ""
"For some exceptions, Python displays the position of the error using ``^`` "
"markers and tildes::"
msgstr ""
"För vissa undantag visar Python felets position med hjälp av ``^``\\-"
"markörer och tildes::"

#: ../../library/doctest.rst:514
msgid ""
"Since the lines showing the position of the error come before the exception "
"type and detail, they are not checked by doctest.  For example, the "
"following test would pass, even though it puts the ``^`` marker in the wrong "
"location::"
msgstr ""
"Eftersom raderna som visar felets position kommer före undantagstypen och "
"detaljerna, kontrolleras de inte av doctest.  Till exempel skulle följande "
"test godkännas, även om det placerar ``^``\\-markören på fel plats::"

#: ../../library/doctest.rst:529
msgid "Option Flags"
msgstr "Flaggor för alternativ"

#: ../../library/doctest.rst:531
msgid ""
"A number of option flags control various aspects of doctest's behavior. "
"Symbolic names for the flags are supplied as module constants, which can be :"
"ref:`bitwise ORed <bitwise>` together and passed to various functions. The "
"names can also be used in :ref:`doctest directives <doctest-directives>`, "
"and may be passed to the doctest command line interface via the ``-o`` "
"option."
msgstr ""
"Ett antal optionsflaggor styr olika aspekter av doctests beteende. "
"Symboliska namn för flaggorna anges som modulkonstanter, som kan :ref:"
"`bitwise ORed <bitwise>` ihop och skickas till olika funktioner. Namnen kan "
"också användas i :ref:`doctest-direktiv <doctest-directives>`, och kan "
"skickas till doctests kommandoradsgränssnitt via alternativet ``\\-o``."

#: ../../library/doctest.rst:537
msgid "The ``-o`` command line option."
msgstr ""

#: ../../library/doctest.rst:540
msgid ""
"The first group of options define test semantics, controlling aspects of how "
"doctest decides whether actual output matches an example's expected output:"
msgstr ""
"Den första gruppen av alternativ definierar testets semantik och styr "
"aspekter av hur doctest avgör om den faktiska utdata stämmer överens med ett "
"exempels förväntade utdata:"

#: ../../library/doctest.rst:546
msgid ""
"By default, if an expected output block contains just ``1``, an actual "
"output block containing just ``1`` or just ``True`` is considered to be a "
"match, and similarly for ``0`` versus ``False``.  When :const:"
"`DONT_ACCEPT_TRUE_FOR_1` is specified, neither substitution is allowed.  The "
"default behavior caters to that Python changed the return type of many "
"functions from integer to boolean; doctests expecting \"little integer\" "
"output still work in these cases.  This option will probably go away, but "
"not for several years."
msgstr ""
"Som standard, om ett förväntat utdatablock innehåller bara ``1``, anses ett "
"faktiskt utdatablock som innehåller bara ``1`` eller bara ``True`` vara en "
"matchning, och på samma sätt för ``0`` kontra ``False``.  När :const:"
"`DONT_ACCEPT_TRUE_FOR_1` anges tillåts ingen av dessa substitutioner.  "
"Standardbeteendet tar hänsyn till att Python ändrade returtypen för många "
"funktioner från heltal till boolean; doctests som förväntar sig \"little "
"integer\"-utdata fungerar fortfarande i dessa fall.  Detta alternativ kommer "
"förmodligen att försvinna, men inte på flera år."

#: ../../library/doctest.rst:558
msgid ""
"By default, if an expected output block contains a line containing only the "
"string ``<BLANKLINE>``, then that line will match a blank line in the actual "
"output.  Because a genuinely blank line delimits the expected output, this "
"is the only way to communicate that a blank line is expected.  When :const:"
"`DONT_ACCEPT_BLANKLINE` is specified, this substitution is not allowed."
msgstr ""
"Om ett förväntat utdatablock innehåller en rad som bara innehåller strängen "
"``<BLANKLINE>``, kommer den raden som standard att matcha en tom rad i den "
"faktiska utdatan.  Eftersom en blank rad verkligen avgränsar den förväntade "
"utdata, är detta det enda sättet att kommunicera att en blank rad "
"förväntas.  När :const:`DONT_ACCEPT_BLANKLINE` anges är denna substitution "
"inte tillåten."

#: ../../library/doctest.rst:567
msgid ""
"When specified, all sequences of whitespace (blanks and newlines) are "
"treated as equal.  Any sequence of whitespace within the expected output "
"will match any sequence of whitespace within the actual output. By default, "
"whitespace must match exactly. :const:`NORMALIZE_WHITESPACE` is especially "
"useful when a line of expected output is very long, and you want to wrap it "
"across multiple lines in your source."
msgstr ""
"När detta anges behandlas alla sekvenser av blanktecken (blanksteg och nya "
"linjer) som lika.  Alla sekvenser av blanksteg i den förväntade utskriften "
"kommer att matcha alla sekvenser av blanksteg i den faktiska utskriften. Som "
"standard måste blanksteg matcha exakt. :const:`NORMALIZE_WHITESPACE` är "
"särskilt användbart när en rad med förväntad utdata är mycket lång och du "
"vill lägga den över flera rader i källan."

#: ../../library/doctest.rst:578
msgid ""
"When specified, an ellipsis marker (``...``) in the expected output can "
"match any substring in the actual output.  This includes substrings that "
"span line boundaries, and empty substrings, so it's best to keep usage of "
"this simple. Complicated uses can lead to the same kinds of \"oops, it "
"matched too much!\" surprises that ``.*`` is prone to in regular expressions."
msgstr ""
"När detta anges kan en ellipsmarkör (``...``) i den förväntade utdata matcha "
"vilken delsträng som helst i den faktiska utdata.  Detta inkluderar "
"substrängar som sträcker sig över radgränser och tomma substrängar, så det "
"är bäst att hålla användningen av detta enkel. Komplicerade användningar kan "
"leda till samma typ av \"oops, det matchade för mycket!\" överraskningar som "
"``.*`` är benägen att i reguljära uttryck."

#: ../../library/doctest.rst:587
msgid ""
"When specified, doctests expecting exceptions pass so long as an exception "
"of the expected type is raised, even if the details (message and fully "
"qualified exception name) don't match."
msgstr ""
"När detta anges godkänns doctests som väntar på undantag så länge ett "
"undantag av den förväntade typen uppstår, även om detaljerna (meddelande och "
"fullständigt kvalificerat undantagsnamn) inte stämmer överens."

#: ../../library/doctest.rst:591
msgid ""
"For example, an example expecting ``ValueError: 42`` will pass if the actual "
"exception raised is ``ValueError: 3*14``, but will fail if, say, a :exc:"
"`TypeError` is raised instead. It will also ignore any fully qualified name "
"included before the exception class, which can vary between implementations "
"and versions of Python and the code/libraries in use. Hence, all three of "
"these variations will work with the flag specified:"
msgstr ""
"Till exempel kommer ett exempel som förväntar sig ``ValueError: 42`` kommer "
"att godkännas om det faktiska undantaget är ``ValueError: 3*14``, men kommer "
"att misslyckas om, säg, ett :exc:`TypeError` tas upp istället. Den kommer "
"också att ignorera alla fullständigt kvalificerade namn som ingår före "
"undantagsklassen, vilket kan variera mellan implementationer och versioner "
"av Python och den kod / bibliotek som används. Därför kommer alla dessa tre "
"variationer att fungera med den angivna flaggan:"

#: ../../library/doctest.rst:613
msgid ""
"Note that :const:`ELLIPSIS` can also be used to ignore the details of the "
"exception message, but such a test may still fail based on whether the "
"module name is present or matches exactly."
msgstr ""
"Observera att :const:`ELLIPSIS` också kan användas för att ignorera "
"detaljerna i undantagsmeddelandet, men ett sådant test kan fortfarande "
"misslyckas beroende på om modulnamnet finns eller matchar exakt."

#: ../../library/doctest.rst:617
msgid ""
":const:`IGNORE_EXCEPTION_DETAIL` now also ignores any information relating "
"to the module containing the exception under test."
msgstr ""
":const:`IGNORE_EXCEPTION_DETAIL` ignorerar nu även all information som rör "
"den modul som innehåller det undantag som testas."

#: ../../library/doctest.rst:624
msgid ""
"When specified, do not run the example at all.  This can be useful in "
"contexts where doctest examples serve as both documentation and test cases, "
"and an example should be included for documentation purposes, but should not "
"be checked.  E.g., the example's output might be random; or the example "
"might depend on resources which would be unavailable to the test driver."
msgstr ""
"Om detta anges ska exemplet inte köras alls.  Detta kan vara användbart i "
"sammanhang där doctest-exempel fungerar som både dokumentation och testfall, "
"och ett exempel bör inkluderas för dokumentationsändamål, men inte bör "
"kontrolleras.  Exemplets utdata kan t.ex. vara slumpmässig, eller så kan "
"exemplet vara beroende av resurser som inte är tillgängliga för testföraren."

#: ../../library/doctest.rst:630
msgid ""
"The SKIP flag can also be used for temporarily \"commenting out\" examples."
msgstr ""
"SKIP-flaggan kan också användas för att tillfälligt \"kommentera bort\" "
"exempel."

#: ../../library/doctest.rst:635
msgid "A bitmask or'ing together all the comparison flags above."
msgstr "En bitmask som kombinerar alla jämförelseflaggorna ovan."

#: ../../library/doctest.rst:637
msgid "The second group of options controls how test failures are reported:"
msgstr "Den andra gruppen av alternativ styr hur testfel rapporteras:"

#: ../../library/doctest.rst:642
msgid ""
"When specified, failures that involve multi-line expected and actual outputs "
"are displayed using a unified diff."
msgstr ""
"När så anges visas fel som omfattar förväntade och faktiska utdata på flera "
"rader med en enhetlig diff."

#: ../../library/doctest.rst:648
msgid ""
"When specified, failures that involve multi-line expected and actual outputs "
"will be displayed using a context diff."
msgstr ""
"Om detta anges kommer fel som innehåller flera rader med förväntade och "
"faktiska utdata att visas med hjälp av en kontextdiff."

#: ../../library/doctest.rst:654
msgid ""
"When specified, differences are computed by ``difflib.Differ``, using the "
"same algorithm as the popular :file:`ndiff.py` utility. This is the only "
"method that marks differences within lines as well as across lines.  For "
"example, if a line of expected output contains digit ``1`` where actual "
"output contains letter ``l``, a line is inserted with a caret marking the "
"mismatching column positions."
msgstr ""
"När detta anges beräknas skillnaderna av ``difflib.Differ``, som använder "
"samma algoritm som det populära verktyget :file:`ndiff.py`. Detta är den "
"enda metod som markerar skillnader inom rader såväl som mellan rader.  Om t."
"ex. en rad med förväntad utmatning innehåller siffran ``1`` medan den "
"faktiska utmatningen innehåller bokstaven ``l``, infogas en rad med en caret "
"som markerar de felaktiga kolumnpositionerna."

#: ../../library/doctest.rst:663
msgid ""
"When specified, display the first failing example in each doctest, but "
"suppress output for all remaining examples.  This will prevent doctest from "
"reporting correct examples that break because of earlier failures; but it "
"might also hide incorrect examples that fail independently of the first "
"failure.  When :const:`REPORT_ONLY_FIRST_FAILURE` is specified, the "
"remaining examples are still run, and still count towards the total number "
"of failures reported; only the output is suppressed."
msgstr ""
"När detta anges visas det första misslyckade exemplet i varje doctest, men "
"utdata för alla återstående exempel undertrycks.  Detta kommer att förhindra "
"doctest från att rapportera korrekta exempel som misslyckas på grund av "
"tidigare misslyckanden; men det kan också dölja felaktiga exempel som "
"misslyckas oberoende av det första misslyckandet.  När :const:"
"`REPORT_ONLY_FIRST_FAILURE` anges, körs de återstående exemplen fortfarande "
"och räknas fortfarande in i det totala antalet fel som rapporteras; endast "
"utdata undertrycks."

#: ../../library/doctest.rst:674
msgid ""
"When specified, exit after the first failing example and don't attempt to "
"run the remaining examples. Thus, the number of failures reported will be at "
"most 1.  This flag may be useful during debugging, since examples after the "
"first failure won't even produce debugging output."
msgstr ""
"När den anges avslutas programmet efter det första misslyckade exemplet och "
"försöker inte köra de återstående exemplen. Antalet misslyckanden som "
"rapporteras blir således högst 1. Denna flagga kan vara användbar under "
"felsökning, eftersom exempel efter det första misslyckandet inte ens kommer "
"att producera felsökningsutdata."

#: ../../library/doctest.rst:679
msgid ""
"The doctest command line accepts the option ``-f`` as a shorthand for ``-o "
"FAIL_FAST``."
msgstr ""

#: ../../library/doctest.rst:687
msgid "A bitmask or'ing together all the reporting flags above."
msgstr "En bitmask som kombinerar alla rapporteringsflaggor ovan."

#: ../../library/doctest.rst:690
msgid ""
"There is also a way to register new option flag names, though this isn't "
"useful unless you intend to extend :mod:`doctest` internals via subclassing:"
msgstr ""
"Det finns också ett sätt att registrera nya alternativflaggnamn, men detta "
"är inte användbart om du inte tänker utöka :mod:`doctest` internals via "
"underklassning:"

#: ../../library/doctest.rst:696
msgid ""
"Create a new option flag with a given name, and return the new flag's "
"integer value.  :func:`register_optionflag` can be used when subclassing :"
"class:`OutputChecker` or :class:`DocTestRunner` to create new options that "
"are supported by your subclasses.  :func:`register_optionflag` should always "
"be called using the following idiom::"
msgstr ""
"Skapa en ny alternativflagga med ett givet namn och returnera den nya "
"flaggans heltalsvärde. :func:`register_optionflag` kan användas när du "
"underklassar :class:`OutputChecker` eller :class:`DocTestRunner` för att "
"skapa nya alternativ som stöds av dina underklasser. :func:"
"`register_optionflag` bör alltid anropas med följande idiom::"

#: ../../library/doctest.rst:712
msgid "Directives"
msgstr "Direktiv"

#: ../../library/doctest.rst:714
msgid ""
"Doctest directives may be used to modify the :ref:`option flags <doctest-"
"options>` for an individual example.  Doctest directives are special Python "
"comments following an example's source code:"
msgstr ""
"Doctest-direktiv kan användas för att ändra :ref:`alternativflaggor <doctest-"
"options>` för ett enskilt exempel.  Doctest-direktiv är speciella Python-"
"kommentarer som följer efter ett exempels källkod:"

#: ../../library/doctest.rst:725
msgid ""
"Whitespace is not allowed between the ``+`` or ``-`` and the directive "
"option name.  The directive option name can be any of the option flag names "
"explained above."
msgstr ""
"Whitespace är inte tillåtet mellan ``+`` eller ``\\-`` och namnet på "
"direktivalternativet.  Namnet på direktivalternativet kan vara vilket som "
"helst av de flaggnamn för alternativ som förklaras ovan."

#: ../../library/doctest.rst:729
msgid ""
"An example's doctest directives modify doctest's behavior for that single "
"example.  Use ``+`` to enable the named behavior, or ``-`` to disable it."
msgstr ""
"Ett exempels doctest-direktiv ändrar doctests beteende för det enskilda "
"exemplet.  Använd ``+`` för att aktivera det angivna beteendet, eller ``\\-"
"`` för att inaktivera det."

#: ../../library/doctest.rst:732
msgid "For example, this test passes:"
msgstr "Det här testet är till exempel godkänt:"

#: ../../library/doctest.rst:741
msgid ""
"Without the directive it would fail, both because the actual output doesn't "
"have two blanks before the single-digit list elements, and because the "
"actual output is on a single line.  This test also passes, and also requires "
"a directive to do so:"
msgstr ""
"Utan direktivet skulle det misslyckas, både för att den faktiska utmatningen "
"inte har två blanksteg före de ensiffriga listelementen och för att den "
"faktiska utmatningen är på en enda rad.  Det här testet är också godkänt och "
"kräver också ett direktiv för att bli det:"

#: ../../library/doctest.rst:752
msgid ""
"Multiple directives can be used on a single physical line, separated by "
"commas:"
msgstr ""
"Flera direktiv kan användas på en och samma fysiska rad, åtskilda med "
"kommatecken:"

#: ../../library/doctest.rst:761
msgid ""
"If multiple directive comments are used for a single example, then they are "
"combined:"
msgstr ""
"Om flera direktivkommentarer används för ett och samma exempel, kombineras "
"de:"

#: ../../library/doctest.rst:771
msgid ""
"As the previous example shows, you can add ``...`` lines to your example "
"containing only directives.  This can be useful when an example is too long "
"for a directive to comfortably fit on the same line:"
msgstr ""
"Som det föregående exemplet visar kan du lägga till ``...`` rader till ditt "
"exempel som bara innehåller direktiv.  Detta kan vara användbart när ett "
"exempel är för långt för att ett direktiv ska rymmas på samma rad:"

#: ../../library/doctest.rst:782
msgid ""
"Note that since all options are disabled by default, and directives apply "
"only to the example they appear in, enabling options (via ``+`` in a "
"directive) is usually the only meaningful choice.  However, option flags can "
"also be passed to functions that run doctests, establishing different "
"defaults.  In such cases, disabling an option via ``-`` in a directive can "
"be useful."
msgstr ""
"Observera att eftersom alla alternativ är inaktiverade som standard och "
"direktiv endast gäller för det exempel de förekommer i, är aktivering av "
"alternativ (via ``+`` i ett direktiv) vanligtvis det enda meningsfulla "
"valet.  Alternativflaggor kan emellertid också skickas till funktioner som "
"kör doctests och fastställa olika standardvärden.  I sådana fall kan det "
"vara användbart att inaktivera ett alternativ via ``\\-`` i ett direktiv."

#: ../../library/doctest.rst:792
msgid "Warnings"
msgstr "Varningar"

#: ../../library/doctest.rst:794
msgid ""
":mod:`doctest` is serious about requiring exact matches in expected output.  "
"If even a single character doesn't match, the test fails.  This will "
"probably surprise you a few times, as you learn exactly what Python does and "
"doesn't guarantee about output.  For example, when printing a set, Python "
"doesn't guarantee that the element is printed in any particular order, so a "
"test like ::"
msgstr ""
":mod:`doctest` är seriös när det gäller att kräva exakta matchningar i "
"förväntad utdata.  Om inte ens ett enda tecken matchar, misslyckas testet.  "
"Detta kommer förmodligen att överraska dig några gånger, eftersom du lär dig "
"exakt vad Python gör och inte garanterar om utdata.  Till exempel, när du "
"skriver ut en uppsättning garanterar Python inte att elementen skrivs ut i "
"någon särskild ordning, så ett test som ::"

#: ../../library/doctest.rst:803
msgid "is vulnerable!  One workaround is to do ::"
msgstr "är sårbar!  En lösning är att göra ::"

#: ../../library/doctest.rst:808
msgid "instead.  Another is to do ::"
msgstr "istället.  Ett annat är att göra ::"

#: ../../library/doctest.rst:814
msgid "There are others, but you get the idea."
msgstr "Det finns fler, men du förstår säkert."

#: ../../library/doctest.rst:816
msgid "Another bad idea is to print things that embed an object address, like"
msgstr ""
"En annan dålig idé är att skriva ut saker som innehåller en objektadress, t."
"ex"

#: ../../library/doctest.rst:826
msgid ""
"The :const:`ELLIPSIS` directive gives a nice approach for the last example:"
msgstr "Direktivet :const:`ELLIPSIS` ger en bra metod för det sista exemplet:"

#: ../../library/doctest.rst:834
msgid ""
"Floating-point numbers are also subject to small output variations across "
"platforms, because Python defers to the platform C library for float "
"formatting, and C libraries vary widely in quality here. ::"
msgstr ""

#: ../../library/doctest.rst:845
msgid ""
"Numbers of the form ``I/2.**J`` are safe across all platforms, and I often "
"contrive doctest examples to produce numbers of that form::"
msgstr ""
"Tal av formen ``I/2.**J`` är säkra på alla plattformar, och jag hittar ofta "
"på doctest-exempel för att producera tal av den formen::"

#: ../../library/doctest.rst:851
msgid ""
"Simple fractions are also easier for people to understand, and that makes "
"for better documentation."
msgstr ""
"Enkla bråk är också lättare för människor att förstå, och det ger bättre "
"dokumentation."

#: ../../library/doctest.rst:858
msgid "Basic API"
msgstr "Grundläggande API"

#: ../../library/doctest.rst:860
msgid ""
"The functions :func:`testmod` and :func:`testfile` provide a simple "
"interface to doctest that should be sufficient for most basic uses.  For a "
"less formal introduction to these two functions, see sections :ref:`doctest-"
"simple-testmod` and :ref:`doctest-simple-testfile`."
msgstr ""
"Funktionerna :func:`testmod` och :func:`testfile` ger ett enkelt gränssnitt "
"till doctest som bör vara tillräckligt för de flesta grundläggande "
"användningsområden.  För en mindre formell introduktion till dessa två "
"funktioner, se avsnitten :ref:`doctest-simple-testmod` och :ref:`doctest-"
"simple-testfile`."

#: ../../library/doctest.rst:868
msgid ""
"All arguments except *filename* are optional, and should be specified in "
"keyword form."
msgstr ""
"Alla argument utom *filnamn* är valfria och bör anges i nyckelordsform."

#: ../../library/doctest.rst:871
msgid ""
"Test examples in the file named *filename*.  Return ``(failure_count, "
"test_count)``."
msgstr ""
"Testa exempel i filen med namnet *filnamn*.  Returnerar "
"``(misslyckande_antal, test_antal)``."

#: ../../library/doctest.rst:874
msgid ""
"Optional argument *module_relative* specifies how the filename should be "
"interpreted:"
msgstr ""
"Det valfria argumentet *module_relative* anger hur filnamnet ska tolkas:"

#: ../../library/doctest.rst:877
msgid ""
"If *module_relative* is ``True`` (the default), then *filename* specifies an "
"OS-independent module-relative path.  By default, this path is relative to "
"the calling module's directory; but if the *package* argument is specified, "
"then it is relative to that package.  To ensure OS-independence, *filename* "
"should use ``/`` characters to separate path segments, and may not be an "
"absolute path (i.e., it may not begin with ``/``)."
msgstr ""
"Om *module_relative* är ``True`` (standard), anger *filename* en OS-"
"oberoende modulrelativ sökväg. Som standard är denna sökväg relativ till den "
"anropande modulens katalog, men om argumentet *package* anges är den relativ "
"till det paketet. För att säkerställa operativsystemsoberoende bör "
"*filename* använda tecknet ``/`` för att separera sökvägssegment och får "
"inte vara en absolut sökväg (dvs. den får inte börja med ``/``)."

#: ../../library/doctest.rst:884
msgid ""
"If *module_relative* is ``False``, then *filename* specifies an OS-specific "
"path.  The path may be absolute or relative; relative paths are resolved "
"with respect to the current working directory."
msgstr ""
"Om *module_relative* är ``False``, anger *filnamn* en OS-specifik sökväg.  "
"Sökvägen kan vara absolut eller relativ; relativa sökvägar löses med "
"avseende på den aktuella arbetskatalogen."

#: ../../library/doctest.rst:888
msgid ""
"Optional argument *name* gives the name of the test; by default, or if "
"``None``, ``os.path.basename(filename)`` is used."
msgstr ""
"Det valfria argumentet *name* anger namnet på testet; som standard, eller om "
"``None``, används ``os.path.basename(filnamn)``."

#: ../../library/doctest.rst:891
msgid ""
"Optional argument *package* is a Python package or the name of a Python "
"package whose directory should be used as the base directory for a module-"
"relative filename.  If no package is specified, then the calling module's "
"directory is used as the base directory for module-relative filenames.  It "
"is an error to specify *package* if *module_relative* is ``False``."
msgstr ""
"Valfritt argument *package* är ett Python-paket eller namnet på ett Python-"
"paket vars katalog ska användas som baskatalog för ett modulrelativt "
"filnamn.  Om inget paket anges används den anropande modulens katalog som "
"baskatalog för modulrelativa filnamn.  Det är ett fel att ange *package* om "
"*module_relative* är ``False``."

#: ../../library/doctest.rst:897
msgid ""
"Optional argument *globs* gives a dict to be used as the globals when "
"executing examples.  A new shallow copy of this dict is created for the "
"doctest, so its examples start with a clean slate. By default, or if "
"``None``, a new empty dict is used."
msgstr ""
"Det valfria argumentet *globs* ger en dict som ska användas som globaler när "
"exempel körs.  En ny ytlig kopia av denna dict skapas för doctestet, så att "
"dess exempel börjar med ett rent blad. Som standard, eller om ``None``, "
"används en ny tom dict."

#: ../../library/doctest.rst:902
msgid ""
"Optional argument *extraglobs* gives a dict merged into the globals used to "
"execute examples.  This works like :meth:`dict.update`:  if *globs* and "
"*extraglobs* have a common key, the associated value in *extraglobs* appears "
"in the combined dict.  By default, or if ``None``, no extra globals are "
"used.  This is an advanced feature that allows parameterization of "
"doctests.  For example, a doctest can be written for a base class, using a "
"generic name for the class, then reused to test any number of subclasses by "
"passing an *extraglobs* dict mapping the generic name to the subclass to be "
"tested."
msgstr ""
"Det valfria argumentet *extraglobs* ger en dict som sammanfogats till de "
"globaler som används för att exekvera exempel.  Detta fungerar som :meth:"
"`dict.update`: om *globs* och *extraglobs* har en gemensam nyckel, visas det "
"associerade värdet i *extraglobs* i den kombinerade dict.  Som standard, "
"eller om ``None``, används inga extra globaler.  Detta är en avancerad "
"funktion som gör det möjligt att parametrisera doctests.  Till exempel kan "
"ett doctest skrivas för en basklass, med ett generiskt namn för klassen, och "
"sedan återanvändas för att testa valfritt antal underklasser genom att "
"skicka en *extraglobs*-dict som mappar det generiska namnet till den "
"underklass som ska testas."

#: ../../library/doctest.rst:911
msgid ""
"Optional argument *verbose* prints lots of stuff if true, and prints only "
"failures if false; by default, or if ``None``, it's true if and only if ``'-"
"v'`` is in ``sys.argv``."
msgstr ""

#: ../../library/doctest.rst:915
msgid ""
"Optional argument *report* prints a summary at the end when true, else "
"prints nothing at the end.  In verbose mode, the summary is detailed, else "
"the summary is very brief (in fact, empty if all tests passed)."
msgstr ""
"Det valfria argumentet *report* skriver ut en sammanfattning i slutet när "
"det är sant, annars skrivs ingenting ut i slutet.  I verbose-läge är "
"sammanfattningen detaljerad, annars är sammanfattningen mycket kort (i "
"själva verket tom om alla tester är godkända)."

#: ../../library/doctest.rst:919
msgid ""
"Optional argument *optionflags* (default value 0) takes the :ref:`bitwise OR "
"<bitwise>` of option flags. See section :ref:`doctest-options`."
msgstr ""

#: ../../library/doctest.rst:923
msgid ""
"Optional argument *raise_on_error* defaults to false.  If true, an exception "
"is raised upon the first failure or unexpected exception in an example.  "
"This allows failures to be post-mortem debugged. Default behavior is to "
"continue running examples."
msgstr ""
"Det valfria argumentet *raise_on_error* är som standard false.  Om det är "
"sant utlöses ett undantag vid det första felet eller oväntade undantaget i "
"ett exempel.  Detta gör att misslyckanden kan felsökas efteråt. "
"Standardbeteendet är att fortsätta köra exempel."

#: ../../library/doctest.rst:928 ../../library/doctest.rst:1069
msgid ""
"Optional argument *parser* specifies a :class:`DocTestParser` (or subclass) "
"that should be used to extract tests from the files.  It defaults to a "
"normal parser (i.e., ``DocTestParser()``)."
msgstr ""
"Det valfria argumentet *parser* anger en :class:`DocTestParser` (eller "
"underklass) som ska användas för att extrahera tester från filerna.  "
"Standardvärdet är en normal parser (dvs. ``DocTestParser()``)."

#: ../../library/doctest.rst:932 ../../library/doctest.rst:1073
msgid ""
"Optional argument *encoding* specifies an encoding that should be used to "
"convert the file to unicode."
msgstr ""
"Det valfria argumentet *encoding* anger en kodning som ska användas för att "
"konvertera filen till unicode."

#: ../../library/doctest.rst:938
msgid ""
"All arguments are optional, and all except for *m* should be specified in "
"keyword form."
msgstr "Alla argument är valfria och alla utom *m* ska anges i nyckelordsform."

#: ../../library/doctest.rst:941
msgid ""
"Test examples in docstrings in functions and classes reachable from module "
"*m* (or module :mod:`__main__` if *m* is not supplied or is ``None``), "
"starting with ``m.__doc__``."
msgstr ""
"Testexempel i dokumentationssträngar i funktioner och klasser som kan nås "
"från modul *m* (eller modul :mod:`__main__` om *m* inte anges eller är "
"``None``), med början i ``m.__doc__``."

#: ../../library/doctest.rst:945
msgid ""
"Also test examples reachable from dict ``m.__test__``, if it exists. ``m."
"__test__`` maps names (strings) to functions, classes and strings; function "
"and class docstrings are searched for examples; strings are searched "
"directly, as if they were docstrings."
msgstr ""
"Testa även exempel som kan nås från dict ``m.__test__``, om den finns. ``m."
"__test__`` mappar namn (strängar) till funktioner, klasser och strängar; "
"funktions- och klassdokstrings söks efter exempel; strängar söks direkt, som "
"om de vore dokstrings."

#: ../../library/doctest.rst:950
msgid ""
"Only docstrings attached to objects belonging to module *m* are searched."
msgstr ""
"Endast dokumentsträngar som är kopplade till objekt som tillhör modul *m* "
"söks."

#: ../../library/doctest.rst:952
msgid "Return ``(failure_count, test_count)``."
msgstr "Return ``(failure_count, test_count)``."

#: ../../library/doctest.rst:954
msgid ""
"Optional argument *name* gives the name of the module; by default, or if "
"``None``, ``m.__name__`` is used."
msgstr ""
"Det valfria argumentet *name* anger namnet på modulen; som standard, eller "
"om ``None``, används ``m.__name__``."

#: ../../library/doctest.rst:957
msgid ""
"Optional argument *exclude_empty* defaults to false.  If true, objects for "
"which no doctests are found are excluded from consideration. The default is "
"a backward compatibility hack, so that code still using :meth:`doctest."
"master.summarize <DocTestRunner.summarize>` in conjunction with :func:"
"`testmod` continues to get output for objects with no tests. The "
"*exclude_empty* argument to the newer :class:`DocTestFinder` constructor "
"defaults to true."
msgstr ""
"Det valfria argumentet *exclude_empty* är som standard false.  Om det är "
"sant utesluts objekt för vilka inga doctests hittas från att beaktas. "
"Standardvärdet är ett hack för bakåtkompatibilitet, så att kod som "
"fortfarande använder :meth:`doctest.master.summarize <DocTestRunner."
"summarize>` i kombination med :func:`testmod` fortsätter att få utdata för "
"objekt utan tester. Argumentet *exclude_empty* till den nyare :class:"
"`DocTestFinder`\\-konstruktorn är som standard true."

#: ../../library/doctest.rst:965
msgid ""
"Optional arguments *extraglobs*, *verbose*, *report*, *optionflags*, "
"*raise_on_error*, and *globs* are the same as for function :func:`testfile` "
"above, except that *globs* defaults to ``m.__dict__``."
msgstr ""
"De valfria argumenten *extraglobs*, *verbose*, *report*, *optionflags*, "
"*raise_on_error* och *globs* är desamma som för funktionen :func:`testfile` "
"ovan, förutom att *globs* som standard är ``m.__dict__``."

#: ../../library/doctest.rst:972
msgid ""
"Test examples associated with object *f*; for example, *f* may be a string, "
"a module, a function, or a class object."
msgstr ""
"Testexempel som är associerade med objektet *f*; *f* kan t.ex. vara en "
"sträng, en modul, en funktion eller ett klassobjekt."

#: ../../library/doctest.rst:975
msgid ""
"A shallow copy of dictionary argument *globs* is used for the execution "
"context."
msgstr ""
"En ytlig kopia av ordboksargumentet *globs* används för exekveringskontexten."

#: ../../library/doctest.rst:977
msgid ""
"Optional argument *name* is used in failure messages, and defaults to "
"``\"NoName\"``."
msgstr ""
"Det valfria argumentet *name* används i felmeddelanden och är som standard "
"``\"NoName\"``."

#: ../../library/doctest.rst:980
msgid ""
"If optional argument *verbose* is true, output is generated even if there "
"are no failures.  By default, output is generated only in case of an example "
"failure."
msgstr ""
"Om det valfria argumentet *verbose* är true, genereras utdata även om det "
"inte finns några fel.  Som standard genereras utdata endast i händelse av "
"ett exempel på fel."

#: ../../library/doctest.rst:983
msgid ""
"Optional argument *compileflags* gives the set of flags that should be used "
"by the Python compiler when running the examples.  By default, or if "
"``None``, flags are deduced corresponding to the set of future features "
"found in *globs*."
msgstr ""
"Det valfria argumentet *compileflags* anger den uppsättning flaggor som ska "
"användas av Python-kompilatorn när exemplen körs.  Som standard, eller om "
"``None``, härleds flaggor som motsvarar den uppsättning framtida funktioner "
"som finns i *globs*."

#: ../../library/doctest.rst:987
msgid ""
"Optional argument *optionflags* works as for function :func:`testfile` above."
msgstr ""
"Det valfria argumentet *optionflags* fungerar som för funktionen :func:"
"`testfile` ovan."

#: ../../library/doctest.rst:993
msgid "Unittest API"
msgstr "Unittest API"

#: ../../library/doctest.rst:995
msgid ""
"As your collection of doctest'ed modules grows, you'll want a way to run all "
"their doctests systematically.  :mod:`doctest` provides two functions that "
"can be used to create :mod:`unittest` test suites from modules and text "
"files containing doctests.  To integrate with :mod:`unittest` test "
"discovery, include a :ref:`load_tests <load_tests-protocol>` function in "
"your test module::"
msgstr ""
"När din samling av doctest'ed-moduler växer, kommer du att vilja ha ett sätt "
"att köra alla deras doctests systematiskt. :mod:`doctest` tillhandahåller "
"två funktioner som kan användas för att skapa :mod:`unittest` testsviter "
"från moduler och textfiler som innehåller doctests.  För att integrera med :"
"mod:`unittest` testupptäckt, inkludera en :ref:`load_tests <load_tests-"
"protocol>` funktion i din testmodul::"

#: ../../library/doctest.rst:1009
msgid ""
"There are two main functions for creating :class:`unittest.TestSuite` "
"instances from text files and modules with doctests:"
msgstr ""
"Det finns två huvudfunktioner för att skapa :class:`unittest.TestSuite`\\-"
"instanser från textfiler och moduler med doctests:"

#: ../../library/doctest.rst:1015
msgid ""
"Convert doctest tests from one or more text files to a :class:`unittest."
"TestSuite`."
msgstr ""
"Konvertera doctest-tester från en eller flera textfiler till en :class:"
"`unittest.TestSuite`."

#: ../../library/doctest.rst:1018
msgid ""
"The returned :class:`unittest.TestSuite` is to be run by the unittest "
"framework and runs the interactive examples in each file.  If an example in "
"any file fails, then the synthesized unit test fails, and a :exc:"
"`failureException` exception is raised showing the name of the file "
"containing the test and a (sometimes approximate) line number."
msgstr ""

#: ../../library/doctest.rst:1024
msgid "Pass one or more paths (as strings) to text files to be examined."
msgstr ""
"Skicka en eller flera sökvägar (som strängar) till textfiler som ska "
"undersökas."

#: ../../library/doctest.rst:1026
msgid "Options may be provided as keyword arguments:"
msgstr "Alternativ kan anges som nyckelordsargument:"

#: ../../library/doctest.rst:1028
msgid ""
"Optional argument *module_relative* specifies how the filenames in *paths* "
"should be interpreted:"
msgstr ""
"Det valfria argumentet *module_relative* anger hur filnamnen i *paths* ska "
"tolkas:"

#: ../../library/doctest.rst:1031
msgid ""
"If *module_relative* is ``True`` (the default), then each filename in "
"*paths* specifies an OS-independent module-relative path.  By default, this "
"path is relative to the calling module's directory; but if the *package* "
"argument is specified, then it is relative to that package.  To ensure OS-"
"independence, each filename should use ``/`` characters to separate path "
"segments, and may not be an absolute path (i.e., it may not begin with ``/"
"``)."
msgstr ""
"Om *module_relative* är ``True`` (standard), anger varje filnamn i *paths* "
"en OS-oberoende modulrelativ sökväg. Som standard är denna sökväg relativ "
"till den anropande modulens katalog, men om argumentet *package* anges är "
"den relativ till det paketet. För att säkerställa operativsystemsoberoende "
"bör varje filnamn använda tecknet ``/`` för att separera sökvägssegment och "
"får inte vara en absolut sökväg (dvs. den får inte börja med ``/``)."

#: ../../library/doctest.rst:1039
msgid ""
"If *module_relative* is ``False``, then each filename in *paths* specifies "
"an OS-specific path.  The path may be absolute or relative; relative paths "
"are resolved with respect to the current working directory."
msgstr ""
"Om *module_relative* är ``False``, anger varje filnamn i *paths* en OS-"
"specifik sökväg.  Sökvägen kan vara absolut eller relativ; relativa sökvägar "
"löses med avseende på den aktuella arbetskatalogen."

#: ../../library/doctest.rst:1043
msgid ""
"Optional argument *package* is a Python package or the name of a Python "
"package whose directory should be used as the base directory for module-"
"relative filenames in *paths*.  If no package is specified, then the calling "
"module's directory is used as the base directory for module-relative "
"filenames.  It is an error to specify *package* if *module_relative* is "
"``False``."
msgstr ""
"Det valfria argumentet *package* är ett Python-paket eller namnet på ett "
"Python-paket vars katalog ska användas som baskatalog för modulrelativa "
"filnamn i *paths*.  Om inget paket anges används den anropande modulens "
"katalog som baskatalog för modulrelativa filnamn.  Det är ett fel att ange "
"*package* om *module_relative* är ``False``."

#: ../../library/doctest.rst:1050
msgid ""
"Optional argument *setUp* specifies a set-up function for the test suite. "
"This is called before running the tests in each file.  The *setUp* function "
"will be passed a :class:`DocTest` object.  The setUp function can access the "
"test globals as the *globs* attribute of the test passed."
msgstr ""

#: ../../library/doctest.rst:1055
msgid ""
"Optional argument *tearDown* specifies a tear-down function for the test "
"suite.  This is called after running the tests in each file.  The *tearDown* "
"function will be passed a :class:`DocTest` object.  The setUp function can "
"access the test globals as the *globs* attribute of the test passed."
msgstr ""

#: ../../library/doctest.rst:1060 ../../library/doctest.rst:1094
msgid ""
"Optional argument *globs* is a dictionary containing the initial global "
"variables for the tests.  A new copy of this dictionary is created for each "
"test.  By default, *globs* is a new empty dictionary."
msgstr ""
"Det valfria argumentet *globs* är en ordbok som innehåller de första globala "
"variablerna för testerna.  En ny kopia av denna ordbok skapas för varje "
"test.  Som standard är *globs* en ny tom ordbok."

#: ../../library/doctest.rst:1064
msgid ""
"Optional argument *optionflags* specifies the default doctest options for "
"the tests, created by or-ing together individual option flags.  See section :"
"ref:`doctest-options`. See function :func:`set_unittest_reportflags` below "
"for a better way to set reporting options."
msgstr ""
"Det valfria argumentet *optionflags* anger standardalternativen för doctest "
"för testerna, som skapas genom att kombinera enskilda alternativflaggor.  Se "
"avsnitt :ref:`doctest-options`. Se funktionen :func:"
"`set_unittest_reportflags` nedan för ett bättre sätt att ställa in "
"rapporteringsalternativ."

#: ../../library/doctest.rst:1076
msgid ""
"The global ``__file__`` is added to the globals provided to doctests loaded "
"from a text file using :func:`DocFileSuite`."
msgstr ""
"Den globala ``__file__`` läggs till i de globaler som tillhandahålls för "
"doctests som laddas från en textfil med :func:`DocFileSuite`."

#: ../../library/doctest.rst:1082
msgid "Convert doctest tests for a module to a :class:`unittest.TestSuite`."
msgstr ""
"Konvertera doctest-tester för en modul till en :class:`unittest.TestSuite`."

#: ../../library/doctest.rst:1084
msgid ""
"The returned :class:`unittest.TestSuite` is to be run by the unittest "
"framework and runs each doctest in the module.  If any of the doctests fail, "
"then the synthesized unit test fails, and a :exc:`failureException` "
"exception is raised showing the name of the file containing the test and a "
"(sometimes approximate) line number."
msgstr ""

#: ../../library/doctest.rst:1090
msgid ""
"Optional argument *module* provides the module to be tested.  It can be a "
"module object or a (possibly dotted) module name.  If not specified, the "
"module calling this function is used."
msgstr ""
"Det valfria argumentet *module* anger vilken modul som ska testas.  Det kan "
"vara ett modulobjekt eller ett (eventuellt prickat) modulnamn.  Om det inte "
"anges används den modul som anropar denna funktion."

#: ../../library/doctest.rst:1098
msgid ""
"Optional argument *extraglobs* specifies an extra set of global variables, "
"which is merged into *globs*.  By default, no extra globals are used."
msgstr ""
"Det valfria argumentet *extraglobs* anger en extra uppsättning globala "
"variabler som slås samman med *globs*.  Som standard används inga extra "
"globala variabler."

#: ../../library/doctest.rst:1101
msgid ""
"Optional argument *test_finder* is the :class:`DocTestFinder` object (or a "
"drop-in replacement) that is used to extract doctests from the module."
msgstr ""
"Valfritt argument *test_finder* är :class:`DocTestFinder`\\-objektet (eller "
"en direkt ersättare) som används för att extrahera doctests från modulen."

#: ../../library/doctest.rst:1104
msgid ""
"Optional arguments *setUp*, *tearDown*, and *optionflags* are the same as "
"for function :func:`DocFileSuite` above."
msgstr ""

#: ../../library/doctest.rst:1107
msgid "This function uses the same search technique as :func:`testmod`."
msgstr "Denna funktion använder samma sökteknik som :func:`testmod`."

#: ../../library/doctest.rst:1109
msgid ""
":func:`DocTestSuite` returns an empty :class:`unittest.TestSuite` if "
"*module* contains no docstrings instead of raising :exc:`ValueError`."
msgstr ""
":func:`DocTestSuite` returnerar en tom :class:`unittest.TestSuite` om "
"*modul* inte innehåller några docstrings istället för att ge :exc:"
"`ValueError`."

#: ../../library/doctest.rst:1115
msgid ""
"When doctests which have been converted to unit tests by :func:"
"`DocFileSuite` or :func:`DocTestSuite` fail, this exception is raised "
"showing the name of the file containing the test and a (sometimes "
"approximate) line number."
msgstr ""

#: ../../library/doctest.rst:1119
msgid ""
"Under the covers, :func:`DocTestSuite` creates a :class:`unittest.TestSuite` "
"out of :class:`!doctest.DocTestCase` instances, and :class:`!DocTestCase` is "
"a subclass of :class:`unittest.TestCase`. :class:`!DocTestCase` isn't "
"documented here (it's an internal detail), but studying its code can answer "
"questions about the exact details of :mod:`unittest` integration."
msgstr ""
"Under täckmanteln skapar :func:`DocTestSuite` en :class:`unittest.TestSuite` "
"av :class:`!doctest.DocTestCase`\\-instanser, och :class:`!DocTestCase` är "
"en underklass till :class:`unittest.TestCase`. :class:`!DocTestCase` "
"dokumenteras inte här (det är en intern detalj), men att studera dess kod "
"kan svara på frågor om de exakta detaljerna i :mod:`unittest`\\-"
"integrationen."

#: ../../library/doctest.rst:1125
msgid ""
"Similarly, :func:`DocFileSuite` creates a :class:`unittest.TestSuite` out "
"of :class:`!doctest.DocFileCase` instances, and :class:`!DocFileCase` is a "
"subclass of :class:`!DocTestCase`."
msgstr ""
"På samma sätt skapar :func:`DocFileSuite` en :class:`unittest.TestSuite` av :"
"class:`!doctest.DocFileCase`\\-instanser, och :class:`!DocFileCase` är en "
"subklass av :class:`!DocTestCase`."

#: ../../library/doctest.rst:1129
msgid ""
"So both ways of creating a :class:`unittest.TestSuite` run instances of :"
"class:`!DocTestCase`.  This is important for a subtle reason: when you run :"
"mod:`doctest` functions yourself, you can control the :mod:`doctest` options "
"in use directly, by passing option flags to :mod:`doctest` functions.  "
"However, if you're writing a :mod:`unittest` framework, :mod:`unittest` "
"ultimately controls when and how tests get run.  The framework author "
"typically wants to control :mod:`doctest` reporting options (perhaps, e.g., "
"specified by command line options), but there's no way to pass options "
"through :mod:`unittest` to :mod:`doctest` test runners."
msgstr ""

#: ../../library/doctest.rst:1139
msgid ""
"For this reason, :mod:`doctest` also supports a notion of :mod:`doctest` "
"reporting flags specific to :mod:`unittest` support, via this function:"
msgstr ""

#: ../../library/doctest.rst:1145
msgid "Set the :mod:`doctest` reporting flags to use."
msgstr "Ange vilka :mod:`doctest`\\-rapporteringsflaggor som ska användas."

#: ../../library/doctest.rst:1147
msgid ""
"Argument *flags* takes the :ref:`bitwise OR <bitwise>` of option flags.  See "
"section :ref:`doctest-options`.  Only \"reporting flags\" can be used."
msgstr ""
"Argument *flags* tar :ref:`bitvis ELLER <bitwise>` av alternativflaggor.  Se "
"avsnitt :ref:`doctest-options`.  Endast \"rapporteringsflaggor\" kan "
"användas."

#: ../../library/doctest.rst:1150
msgid ""
"This is a module-global setting, and affects all future doctests run by "
"module :mod:`unittest`:  the :meth:`!runTest` method of :class:`!"
"DocTestCase` looks at the option flags specified for the test case when the :"
"class:`!DocTestCase` instance was constructed.  If no reporting flags were "
"specified (which is the typical and expected case), :mod:`!doctest`'s :mod:"
"`unittest` reporting flags are :ref:`bitwise ORed <bitwise>` into the option "
"flags, and the option flags so augmented are passed to the :class:"
"`DocTestRunner` instance created to run the doctest.  If any reporting flags "
"were specified when the :class:`!DocTestCase` instance was constructed, :mod:"
"`!doctest`'s :mod:`unittest` reporting flags are ignored."
msgstr ""

#: ../../library/doctest.rst:1161
msgid ""
"The value of the :mod:`unittest` reporting flags in effect before the "
"function was called is returned by the function."
msgstr ""
"Funktionen returnerar värdet på :mod:`unittest`\\-rapporteringsflaggorna som "
"gällde innan funktionen anropades."

#: ../../library/doctest.rst:1168
msgid "Advanced API"
msgstr "Avancerat API"

#: ../../library/doctest.rst:1170
msgid ""
"The basic API is a simple wrapper that's intended to make doctest easy to "
"use. It is fairly flexible, and should meet most users' needs; however, if "
"you require more fine-grained control over testing, or wish to extend "
"doctest's capabilities, then you should use the advanced API."
msgstr ""
"Det grundläggande API:et är en enkel wrapper som är avsedd att göra doctest "
"lätt att använda. Det är ganska flexibelt och bör uppfylla de flesta "
"användares behov; men om du behöver mer finkornig kontroll över testningen "
"eller vill utöka doctests funktioner bör du använda det avancerade API:et."

#: ../../library/doctest.rst:1175
msgid ""
"The advanced API revolves around two container classes, which are used to "
"store the interactive examples extracted from doctest cases:"
msgstr ""
"Det avancerade API:et kretsar kring två containerklasser som används för att "
"lagra de interaktiva exempel som hämtas från doctest-fall:"

#: ../../library/doctest.rst:1178
msgid ""
":class:`Example`: A single Python :term:`statement`, paired with its "
"expected output."
msgstr ""
":class:`Exempel`: En enda Python :term:`statement`, parat med dess "
"förväntade resultat."

#: ../../library/doctest.rst:1181
msgid ""
":class:`DocTest`: A collection of :class:`Example`\\ s, typically extracted "
"from a single docstring or text file."
msgstr ""
":class:`DocTest`: En samling av :class:`Example`, vanligtvis extraherade "
"från en enda dokumentsträng eller textfil."

#: ../../library/doctest.rst:1184
msgid ""
"Additional processing classes are defined to find, parse, and run, and check "
"doctest examples:"
msgstr ""
"Ytterligare bearbetningsklasser definieras för att hitta, analysera och köra "
"samt kontrollera doctest-exempel:"

#: ../../library/doctest.rst:1187
msgid ""
":class:`DocTestFinder`: Finds all docstrings in a given module, and uses a :"
"class:`DocTestParser` to create a :class:`DocTest` from every docstring that "
"contains interactive examples."
msgstr ""
":class:`DocTestFinder`: Hittar alla dokumentsträngar i en given modul och "
"använder en :class:`DocTestParser` för att skapa en :class:`DocTest` från "
"varje dokumentsträng som innehåller interaktiva exempel."

#: ../../library/doctest.rst:1191
msgid ""
":class:`DocTestParser`: Creates a :class:`DocTest` object from a string "
"(such as an object's docstring)."
msgstr ""
":class:`DocTestParser`: Skapar ett :class:`DocTest`\\-objekt från en sträng "
"(t.ex. ett objekts docstring)."

#: ../../library/doctest.rst:1194
msgid ""
":class:`DocTestRunner`: Executes the examples in a :class:`DocTest`, and "
"uses an :class:`OutputChecker` to verify their output."
msgstr ""
":class:`DocTestRunner`: Exekverar exemplen i en :class:`DocTest` och "
"använder en :class:`OutputChecker` för att verifiera utdata."

#: ../../library/doctest.rst:1197
msgid ""
":class:`OutputChecker`: Compares the actual output from a doctest example "
"with the expected output, and decides whether they match."
msgstr ""
":class:`OutputChecker`: Jämför den faktiska utdata från ett doctest-exempel "
"med den förväntade utdata och avgör om de stämmer överens."

#: ../../library/doctest.rst:1200
msgid ""
"The relationships among these processing classes are summarized in the "
"following diagram::"
msgstr ""
"Relationerna mellan dessa bearbetningsklasser sammanfattas i följande "
"diagram::"

#: ../../library/doctest.rst:1216
msgid "DocTest Objects"
msgstr "DocTest-objekt"

#: ../../library/doctest.rst:1221
msgid ""
"A collection of doctest examples that should be run in a single namespace.  "
"The constructor arguments are used to initialize the attributes of the same "
"names."
msgstr ""
"En samling doctest-exempel som bör köras i ett enda namnrymd.  Argumenten i "
"konstruktorn används för att initiera attributen med samma namn."

#: ../../library/doctest.rst:1225
msgid ""
":class:`DocTest` defines the following attributes.  They are initialized by "
"the constructor, and should not be modified directly."
msgstr ""
":class:`DocTest` definierar följande attribut.  De initialiseras av "
"konstruktören och bör inte modifieras direkt."

#: ../../library/doctest.rst:1231
msgid ""
"A list of :class:`Example` objects encoding the individual interactive "
"Python examples that should be run by this test."
msgstr ""
"En lista med :class:`Example`\\-objekt som kodar för de enskilda interaktiva "
"Python-exempel som ska köras av detta test."

#: ../../library/doctest.rst:1237
msgid ""
"The namespace (aka globals) that the examples should be run in. This is a "
"dictionary mapping names to values.  Any changes to the namespace made by "
"the examples (such as binding new variables) will be reflected in :attr:"
"`globs` after the test is run."
msgstr ""
"Namnrymden (även kallad globals) som exemplen ska köras i. Detta är en "
"ordbok som mappar namn till värden.  Alla ändringar i namnrymden som görs av "
"exemplen (t.ex. bindning av nya variabler) kommer att återspeglas i :attr:"
"`globs` efter att testet har körts."

#: ../../library/doctest.rst:1245
msgid ""
"A string name identifying the :class:`DocTest`.  Typically, this is the name "
"of the object or file that the test was extracted from."
msgstr ""
"Ett strängnamn som identifierar :class:`DocTest`.  Vanligtvis är detta "
"namnet på det objekt eller den fil som testet extraherades från."

#: ../../library/doctest.rst:1251
msgid ""
"The name of the file that this :class:`DocTest` was extracted from; or "
"``None`` if the filename is unknown, or if the :class:`DocTest` was not "
"extracted from a file."
msgstr ""

#: ../../library/doctest.rst:1258
msgid ""
"The line number within :attr:`filename` where this :class:`DocTest` begins, "
"or ``None`` if the line number is unavailable.  This line number is zero-"
"based with respect to the beginning of the file."
msgstr ""
"Radnumret i :attr:`filename` där denna :class:`DocTest` börjar, eller "
"``None`` om radnumret inte är tillgängligt.  Radnumret är nollbaserat i "
"förhållande till början av filen."

#: ../../library/doctest.rst:1265
msgid ""
"The string that the test was extracted from, or ``None`` if the string is "
"unavailable, or if the test was not extracted from a string."
msgstr ""
"Den sträng som testet extraherades från, eller ``None`` om strängen inte är "
"tillgänglig, eller om testet inte extraherades från en sträng."

#: ../../library/doctest.rst:1272
msgid "Example Objects"
msgstr "Exempel på objekt"

#: ../../library/doctest.rst:1277
msgid ""
"A single interactive example, consisting of a Python statement and its "
"expected output.  The constructor arguments are used to initialize the "
"attributes of the same names."
msgstr ""
"Ett enda interaktivt exempel som består av en Python-sats och dess "
"förväntade utdata.  Argumenten i konstruktorn används för att initiera "
"attributen med samma namn."

#: ../../library/doctest.rst:1282
msgid ""
":class:`Example` defines the following attributes.  They are initialized by "
"the constructor, and should not be modified directly."
msgstr ""
":class:`Example` definierar följande attribut.  De initialiseras av "
"konstruktören och bör inte modifieras direkt."

#: ../../library/doctest.rst:1288
msgid ""
"A string containing the example's source code.  This source code consists of "
"a single Python statement, and always ends with a newline; the constructor "
"adds a newline when necessary."
msgstr ""
"En sträng som innehåller exemplets källkod.  Källkoden består av en enda "
"Python-sats och avslutas alltid med en ny rad; konstruktören lägger till en "
"ny rad när det behövs."

#: ../../library/doctest.rst:1295
msgid ""
"The expected output from running the example's source code (either from "
"stdout, or a traceback in case of exception).  :attr:`want` ends with a "
"newline unless no output is expected, in which case it's an empty string.  "
"The constructor adds a newline when necessary."
msgstr ""
"Den förväntade utdata från körning av exemplets källkod (antingen från "
"stdout eller en spårning vid undantag). :attr:`want` slutar med en ny rad om "
"ingen utdata förväntas, i vilket fall det är en tom sträng.  Konstruktören "
"lägger till en ny rad när det behövs."

#: ../../library/doctest.rst:1303
msgid ""
"The exception message generated by the example, if the example is expected "
"to generate an exception; or ``None`` if it is not expected to generate an "
"exception.  This exception message is compared against the return value of :"
"func:`traceback.format_exception_only`.  :attr:`exc_msg` ends with a newline "
"unless it's ``None``.  The constructor adds a newline if needed."
msgstr ""
"Det undantagsmeddelande som genereras av exemplet, om exemplet förväntas "
"generera ett undantag; eller ``None`` om det inte förväntas generera ett "
"undantag.  Detta undantagsmeddelande jämförs med returvärdet för :func:"
"`traceback.format_exception_only`. :attr:`exc_msg` slutar med en ny rad om "
"det inte är ``None``.  Konstruktören lägger till en ny rad om det behövs."

#: ../../library/doctest.rst:1312
msgid ""
"The line number within the string containing this example where the example "
"begins.  This line number is zero-based with respect to the beginning of the "
"containing string."
msgstr ""
"Radnumret i den sträng som innehåller detta exempel där exemplet börjar.  "
"Radnumret är nollbaserat i förhållande till början av den sträng som "
"innehåller exemplet."

#: ../../library/doctest.rst:1319
msgid ""
"The example's indentation in the containing string, i.e., the number of "
"space characters that precede the example's first prompt."
msgstr ""
"Exemplets indrag i den innehållande strängen, dvs. antalet mellanslagstecken "
"som föregår exemplets första prompt."

#: ../../library/doctest.rst:1325
msgid ""
"A dictionary mapping from option flags to ``True`` or ``False``, which is "
"used to override default options for this example.  Any option flags not "
"contained in this dictionary are left at their default value (as specified "
"by the :class:`DocTestRunner`'s :ref:`optionflags <doctest-options>`). By "
"default, no options are set."
msgstr ""
"En ordbok som mappar från alternativflaggor till ``True`` eller ``False``, "
"som används för att åsidosätta standardalternativ för detta exempel.  Alla "
"alternativflaggor som inte finns i denna ordbok lämnas med sitt "
"standardvärde (som anges av :class:`DocTestRunner` :ref:`optionflags "
"<doctest-options>`). Som standard är inga alternativ inställda."

#: ../../library/doctest.rst:1335
msgid "DocTestFinder objects"
msgstr "DocTestFinder-objekt"

#: ../../library/doctest.rst:1340
msgid ""
"A processing class used to extract the :class:`DocTest`\\ s that are "
"relevant to a given object, from its docstring and the docstrings of its "
"contained objects. :class:`DocTest`\\ s can be extracted from modules, "
"classes, functions, methods, staticmethods, classmethods, and properties."
msgstr ""
"En bearbetningsklass som används för att extrahera de :class:`DocTest` s som "
"är relevanta för ett visst objekt, från dess docstring och docstrings för de "
"objekt som ingår. :class:`DocTest` s kan extraheras från moduler, klasser, "
"funktioner, metoder, staticmethods, classmethods och properties."

#: ../../library/doctest.rst:1345
msgid ""
"The optional argument *verbose* can be used to display the objects searched "
"by the finder.  It defaults to ``False`` (no output)."
msgstr ""
"Det valfria argumentet *verbose* kan användas för att visa de objekt som "
"sökts av sökaren.  Standardvärdet är ``False`` (ingen utdata)."

#: ../../library/doctest.rst:1348
msgid ""
"The optional argument *parser* specifies the :class:`DocTestParser` object "
"(or a drop-in replacement) that is used to extract doctests from docstrings."
msgstr ""
"Det valfria argumentet *parser* anger objektet :class:`DocTestParser` (eller "
"en direkt ersättare) som används för att extrahera doctests från docstrings."

#: ../../library/doctest.rst:1351
msgid ""
"If the optional argument *recurse* is false, then :meth:`DocTestFinder.find` "
"will only examine the given object, and not any contained objects."
msgstr ""
"Om det valfria argumentet *recurse* är false, kommer :meth:`DocTestFinder."
"find` endast att undersöka det givna objektet, och inte några ingående "
"objekt."

#: ../../library/doctest.rst:1354
msgid ""
"If the optional argument *exclude_empty* is false, then :meth:`DocTestFinder."
"find` will include tests for objects with empty docstrings."
msgstr ""
"Om det valfria argumentet *exclude_empty* är false, kommer :meth:"
"`DocTestFinder.find` att inkludera tester för objekt med tomma "
"dokumentsträngar."

#: ../../library/doctest.rst:1358
msgid ":class:`DocTestFinder` defines the following method:"
msgstr ":class:`DocTestFinder` definierar följande metod:"

#: ../../library/doctest.rst:1363
msgid ""
"Return a list of the :class:`DocTest`\\ s that are defined by *obj*'s "
"docstring, or by any of its contained objects' docstrings."
msgstr ""
"Returnerar en lista över :class:`DocTest` som definieras av *obj*\\s "
"docstring, eller av någon av dess ingående objekts docstrings."

#: ../../library/doctest.rst:1366
msgid ""
"The optional argument *name* specifies the object's name; this name will be "
"used to construct names for the returned :class:`DocTest`\\ s.  If *name* is "
"not specified, then ``obj.__name__`` is used."
msgstr ""
"Det valfria argumentet *name* anger objektets namn; detta namn kommer att "
"användas för att konstruera namn för de returnerade :class:`DocTest` s. Om "
"*name* inte anges används ``obj.__name__``."

#: ../../library/doctest.rst:1370
msgid ""
"The optional parameter *module* is the module that contains the given "
"object. If the module is not specified or is ``None``, then the test finder "
"will attempt to automatically determine the correct module.  The object's "
"module is used:"
msgstr ""
"Den valfria parametern *module* är den modul som innehåller det angivna "
"objektet. Om modulen inte anges eller är ``None``, kommer testfinder att "
"försöka att automatiskt bestämma rätt modul.  Objektets modul används:"

#: ../../library/doctest.rst:1374
msgid "As a default namespace, if *globs* is not specified."
msgstr "Som standardnamnrymd om *globs* inte anges."

#: ../../library/doctest.rst:1376
msgid ""
"To prevent the DocTestFinder from extracting DocTests from objects that are "
"imported from other modules.  (Contained objects with modules other than "
"*module* are ignored.)"
msgstr ""
"För att förhindra DocTestFinder från att extrahera DocTests från objekt som "
"importeras från andra moduler.  (Inneslutna objekt med andra moduler än "
"*modul* ignoreras)"

#: ../../library/doctest.rst:1380
msgid "To find the name of the file containing the object."
msgstr "För att hitta namnet på den fil som innehåller objektet."

#: ../../library/doctest.rst:1382
msgid "To help find the line number of the object within its file."
msgstr "För att hjälpa till att hitta radnumret för objektet i dess fil."

#: ../../library/doctest.rst:1384
msgid ""
"If *module* is ``False``, no attempt to find the module will be made.  This "
"is obscure, of use mostly in testing doctest itself: if *module* is "
"``False``, or is ``None`` but cannot be found automatically, then all "
"objects are considered to belong to the (non-existent) module, so all "
"contained objects will (recursively) be searched for doctests."
msgstr ""
"Om *module* är ``False`` kommer inget försök att hitta modulen att göras.  "
"Detta är oklart och används mest för att testa själva doctest: om *module* "
"är ``False``, eller är ``None`` men inte kan hittas automatiskt, anses alla "
"objekt tillhöra den (icke-existerande) modulen, så alla objekt som ingår "
"kommer (rekursivt) att sökas efter doctests."

#: ../../library/doctest.rst:1390
msgid ""
"The globals for each :class:`DocTest` is formed by combining *globs* and "
"*extraglobs* (bindings in *extraglobs* override bindings in *globs*).  A new "
"shallow copy of the globals dictionary is created for each :class:`DocTest`. "
"If *globs* is not specified, then it defaults to the module's *__dict__*, if "
"specified, or ``{}`` otherwise.  If *extraglobs* is not specified, then it "
"defaults to ``{}``."
msgstr ""

#: ../../library/doctest.rst:1401
msgid "DocTestParser objects"
msgstr "DocTestParser-objekt"

#: ../../library/doctest.rst:1406
msgid ""
"A processing class used to extract interactive examples from a string, and "
"use them to create a :class:`DocTest` object."
msgstr ""
"En bearbetningsklass som används för att extrahera interaktiva exempel från "
"en sträng och använda dem för att skapa ett :class:`DocTest`\\-objekt."

#: ../../library/doctest.rst:1410
msgid ":class:`DocTestParser` defines the following methods:"
msgstr ":class:`DocTestParser` definierar följande metoder:"

#: ../../library/doctest.rst:1415
msgid ""
"Extract all doctest examples from the given string, and collect them into a :"
"class:`DocTest` object."
msgstr ""
"Extrahera alla doctest-exempel från den angivna strängen och samla dem i "
"ett :class:`DocTest`\\-objekt."

#: ../../library/doctest.rst:1418
msgid ""
"*globs*, *name*, *filename*, and *lineno* are attributes for the new :class:"
"`DocTest` object.  See the documentation for :class:`DocTest` for more "
"information."
msgstr ""

#: ../../library/doctest.rst:1425
msgid ""
"Extract all doctest examples from the given string, and return them as a "
"list of :class:`Example` objects.  Line numbers are 0-based.  The optional "
"argument *name* is a name identifying this string, and is only used for "
"error messages."
msgstr ""
"Extraherar alla doctest-exempel från den angivna strängen och returnerar dem "
"som en lista med :class:`Example`\\-objekt.  Radnummer är 0-baserade.  Det "
"valfria argumentet *name* är ett namn som identifierar den här strängen och "
"används endast för felmeddelanden."

#: ../../library/doctest.rst:1432
msgid ""
"Divide the given string into examples and intervening text, and return them "
"as a list of alternating :class:`Example`\\ s and strings. Line numbers for "
"the :class:`Example`\\ s are 0-based.  The optional argument *name* is a "
"name identifying this string, and is only used for error messages."
msgstr ""

#: ../../library/doctest.rst:1441
msgid "DocTestRunner objects"
msgstr "DocTestRunner-objekt"

#: ../../library/doctest.rst:1446
msgid ""
"A processing class used to execute and verify the interactive examples in a :"
"class:`DocTest`."
msgstr ""
"En bearbetningsklass som används för att exekvera och verifiera de "
"interaktiva exemplen i en :class:`DocTest`."

#: ../../library/doctest.rst:1449
msgid ""
"The comparison between expected outputs and actual outputs is done by an :"
"class:`OutputChecker`.  This comparison may be customized with a number of "
"option flags; see section :ref:`doctest-options` for more information.  If "
"the option flags are insufficient, then the comparison may also be "
"customized by passing a subclass of :class:`OutputChecker` to the "
"constructor."
msgstr ""

#: ../../library/doctest.rst:1455
msgid ""
"The test runner's display output can be controlled in two ways. First, an "
"output function can be passed to :meth:`TestRunner.run`; this function will "
"be called with strings that should be displayed.  It defaults to ``sys."
"stdout.write``.  If capturing the output is not sufficient, then the display "
"output can be also customized by subclassing DocTestRunner, and overriding "
"the methods :meth:`report_start`, :meth:`report_success`, :meth:"
"`report_unexpected_exception`, and :meth:`report_failure`."
msgstr ""

#: ../../library/doctest.rst:1463
msgid ""
"The optional keyword argument *checker* specifies the :class:`OutputChecker` "
"object (or drop-in replacement) that should be used to compare the expected "
"outputs to the actual outputs of doctest examples."
msgstr ""
"Det valfria nyckelordsargumentet *checker* anger objektet :class:"
"`OutputChecker` (eller en ersättare) som ska användas för att jämföra "
"förväntade utdata med faktiska utdata för doctest-exempel."

#: ../../library/doctest.rst:1467
msgid ""
"The optional keyword argument *verbose* controls the :class:"
"`DocTestRunner`'s verbosity.  If *verbose* is ``True``, then information is "
"printed about each example, as it is run.  If *verbose* is ``False``, then "
"only failures are printed.  If *verbose* is unspecified, or ``None``, then "
"verbose output is used iff the command-line switch ``-v`` is used."
msgstr ""
"Det valfria nyckelordsargumentet *verbose* styr :class:`DocTestRunner` s "
"ordrikedom.  Om *verbose* är ``True``, skrivs information ut om varje "
"exempel, allteftersom det körs.  Om *verbose* är ``False`` skrivs endast "
"misslyckanden ut.  Om *verbose* är ospecificerat, eller ``None``, så används "
"verbose-utmatning om kommandoradsväxeln ``\\-v`` används."

#: ../../library/doctest.rst:1473
msgid ""
"The optional keyword argument *optionflags* can be used to control how the "
"test runner compares expected output to actual output, and how it displays "
"failures. For more information, see section :ref:`doctest-options`."
msgstr ""
"Det valfria nyckelordsargumentet *optionflags* kan användas för att styra "
"hur testlöparen jämför förväntade resultat med faktiska resultat och hur den "
"visar misslyckanden. För mer information, se avsnitt :ref:`doctest-options`."

#: ../../library/doctest.rst:1478
msgid ":class:`DocTestRunner` defines the following methods:"
msgstr ":class:`DocTestRunner` definierar följande metoder:"

#: ../../library/doctest.rst:1483
msgid ""
"Report that the test runner is about to process the given example. This "
"method is provided to allow subclasses of :class:`DocTestRunner` to "
"customize their output; it should not be called directly."
msgstr ""
"Rapporterar att testlöparen håller på att bearbeta det givna exemplet. Denna "
"metod tillhandahålls för att underklasser till :class:`DocTestRunner` ska "
"kunna anpassa sin utdata; den ska inte anropas direkt."

#: ../../library/doctest.rst:1487
msgid ""
"*example* is the example about to be processed.  *test* is the test "
"*containing example*.  *out* is the output function that was passed to :meth:"
"`DocTestRunner.run`."
msgstr ""

#: ../../library/doctest.rst:1494
msgid ""
"Report that the given example ran successfully.  This method is provided to "
"allow subclasses of :class:`DocTestRunner` to customize their output; it "
"should not be called directly."
msgstr ""
"Rapportera att det givna exemplet kördes framgångsrikt.  Denna metod "
"tillhandahålls för att underklasser till :class:`DocTestRunner` ska kunna "
"anpassa sin utdata; den ska inte anropas direkt."

#: ../../library/doctest.rst:1498 ../../library/doctest.rst:1509
msgid ""
"*example* is the example about to be processed.  *got* is the actual output "
"from the example.  *test* is the test containing *example*.  *out* is the "
"output function that was passed to :meth:`DocTestRunner.run`."
msgstr ""
"*example* är exemplet som ska bearbetas.  *got* är den faktiska utmatningen "
"från exemplet.  *test* är testet som innehåller *example*.  *out* är den "
"utdatafunktion som skickades till :meth:`DocTestRunner.run`."

#: ../../library/doctest.rst:1505
msgid ""
"Report that the given example failed.  This method is provided to allow "
"subclasses of :class:`DocTestRunner` to customize their output; it should "
"not be called directly."
msgstr ""
"Rapportera att det givna exemplet misslyckades.  Den här metoden "
"tillhandahålls för att underklasser till :class:`DocTestRunner` ska kunna "
"anpassa sin utdata; den ska inte anropas direkt."

#: ../../library/doctest.rst:1516
msgid ""
"Report that the given example raised an unexpected exception. This method is "
"provided to allow subclasses of :class:`DocTestRunner` to customize their "
"output; it should not be called directly."
msgstr ""
"Rapportera att det givna exemplet gav upphov till ett oväntat undantag. "
"Denna metod tillhandahålls för att underklasser till :class:`DocTestRunner` "
"ska kunna anpassa sina utdata; den ska inte anropas direkt."

#: ../../library/doctest.rst:1520
msgid ""
"*example* is the example about to be processed. *exc_info* is a tuple "
"containing information about the unexpected exception (as returned by :func:"
"`sys.exc_info`). *test* is the test containing *example*.  *out* is the "
"output function that was passed to :meth:`DocTestRunner.run`."
msgstr ""
"*example* är det exempel som ska bearbetas. *exc_info* är en tupel som "
"innehåller information om det oväntade undantaget (som returneras av :func:"
"`sys.exc_info`). *test* är testet som innehåller *exempel*.  *out* är den "
"utdatafunktion som skickades till :meth:`DocTestRunner.run`."

#: ../../library/doctest.rst:1528
msgid ""
"Run the examples in *test* (a :class:`DocTest` object), and display the "
"results using the writer function *out*."
msgstr ""

#: ../../library/doctest.rst:1531
msgid ""
"The examples are run in the namespace ``test.globs``.  If *clear_globs* is "
"true (the default), then this namespace will be cleared after the test runs, "
"to help with garbage collection. If you would like to examine the namespace "
"after the test completes, then use *clear_globs=False*."
msgstr ""
"Exemplen körs i namnrymden ``test.globs``.  Om *clear_globs* är true "
"(standard) kommer detta namnrymd att rensas efter att testet har körts, för "
"att hjälpa till med skräpsamlingen. Om du vill undersöka namnrymden efter "
"att testet har slutförts använder du *clear_globs=False*."

#: ../../library/doctest.rst:1536
msgid ""
"*compileflags* gives the set of flags that should be used by the Python "
"compiler when running the examples.  If not specified, then it will default "
"to the set of future-import flags that apply to *globs*."
msgstr ""
"*compileflags* anger den uppsättning flaggor som ska användas av Python-"
"kompilatorn när exemplen körs.  Om den inte anges kommer den som standard "
"att använda den uppsättning flaggor för framtida import som gäller för "
"*globs*."

#: ../../library/doctest.rst:1540
msgid ""
"The output of each example is checked using the :class:`DocTestRunner`'s "
"output checker, and the results are formatted by the :meth:`!DocTestRunner."
"report_\\*` methods."
msgstr ""
"Utdata för varje exempel kontrolleras med hjälp av :class:`DocTestRunner`\\:"
"s utdatakontroll och resultaten formateras med :meth:`!DocTestRunner."
"report_\\*`\\-metoderna."

#: ../../library/doctest.rst:1547
msgid ""
"Print a summary of all the test cases that have been run by this "
"DocTestRunner, and return a :term:`named tuple` ``TestResults(failed, "
"attempted)``."
msgstr ""

#: ../../library/doctest.rst:1550
msgid ""
"The optional *verbose* argument controls how detailed the summary is.  If "
"the verbosity is not specified, then the :class:`DocTestRunner`'s verbosity "
"is used."
msgstr ""
"Det valfria argumentet *verbose* styr hur detaljerad sammanfattningen är.  "
"Om ordrikhet inte anges används :class:`DocTestRunner`\\:s ordrikhet."

#: ../../library/doctest.rst:1557
msgid "OutputChecker objects"
msgstr "OutputChecker-objekt"

#: ../../library/doctest.rst:1562
msgid ""
"A class used to check the whether the actual output from a doctest example "
"matches the expected output.  :class:`OutputChecker` defines two methods: :"
"meth:`check_output`, which compares a given pair of outputs, and returns "
"``True`` if they match; and :meth:`output_difference`, which returns a "
"string describing the differences between two outputs."
msgstr ""
"En klass som används för att kontrollera om den faktiska utmatningen från "
"ett doctest-exempel matchar den förväntade utmatningen. :class:"
"`OutputChecker` definierar två metoder: :meth:`check_output`, som jämför ett "
"givet par utmatningar och returnerar ``True`` om de matchar; och :meth:"
"`output_difference`, som returnerar en sträng som beskriver skillnaderna "
"mellan två utmatningar."

#: ../../library/doctest.rst:1569
msgid ":class:`OutputChecker` defines the following methods:"
msgstr ":class:`OutputChecker` definierar följande metoder:"

#: ../../library/doctest.rst:1573
msgid ""
"Return ``True`` iff the actual output from an example (*got*) matches the "
"expected output (*want*).  These strings are always considered to match if "
"they are identical; but depending on what option flags the test runner is "
"using, several non-exact match types are also possible.  See section :ref:"
"`doctest-options` for more information about option flags."
msgstr ""
"Returnerar ``True`` om den faktiska utdata från ett exempel (*got*) matchar "
"den förväntade utdata (*want*).  Dessa strängar anses alltid matcha om de är "
"identiska; men beroende på vilka alternativflaggor testköraren använder är "
"flera icke-exakta matchningstyper också möjliga.  Se avsnitt :ref:`doctest-"
"options` för mer information om alternativflaggor."

#: ../../library/doctest.rst:1582
msgid ""
"Return a string describing the differences between the expected output for a "
"given example (*example*) and the actual output (*got*).  *optionflags* is "
"the set of option flags used to compare *want* and *got*."
msgstr ""
"Returnerar en sträng som beskriver skillnaderna mellan det förväntade "
"utfallet för ett visst exempel (*example*) och det faktiska utfallet "
"(*got*).  *optionflags* är den uppsättning optionsflaggor som används för "
"att jämföra *want* och *got*."

#: ../../library/doctest.rst:1590
msgid "Debugging"
msgstr "Felsökning"

#: ../../library/doctest.rst:1592
msgid "Doctest provides several mechanisms for debugging doctest examples:"
msgstr ""
"Doctest tillhandahåller flera mekanismer för felsökning av doctest-exempel:"

#: ../../library/doctest.rst:1594
msgid ""
"Several functions convert doctests to executable Python programs, which can "
"be run under the Python debugger, :mod:`pdb`."
msgstr ""
"Flera funktioner konverterar doctests till körbara Python-program, som kan "
"köras under Pythons debugger, :mod:`pdb`."

#: ../../library/doctest.rst:1597
msgid ""
"The :class:`DebugRunner` class is a subclass of :class:`DocTestRunner` that "
"raises an exception for the first failing example, containing information "
"about that example. This information can be used to perform post-mortem "
"debugging on the example."
msgstr ""
"Klassen :class:`DebugRunner` är en underklass till :class:`DocTestRunner` "
"som skapar ett undantag för det första misslyckade exemplet och innehåller "
"information om det exemplet. Denna information kan användas för att utföra "
"felsökning av exemplet efteråt."

#: ../../library/doctest.rst:1602
msgid ""
"The :mod:`unittest` cases generated by :func:`DocTestSuite` support the :"
"meth:`debug` method defined by :class:`unittest.TestCase`."
msgstr ""
"De :mod:`unittest`\\-fall som genereras av :func:`DocTestSuite` stöder :meth:"
"`debug`\\-metoden som definieras av :class:`unittest.TestCase`."

#: ../../library/doctest.rst:1605
msgid ""
"You can add a call to :func:`pdb.set_trace` in a doctest example, and you'll "
"drop into the Python debugger when that line is executed.  Then you can "
"inspect current values of variables, and so on.  For example, suppose :file:"
"`a.py` contains just this module docstring::"
msgstr ""
"Du kan lägga till ett anrop till :func:`pdb.set_trace` i ett doctest-"
"exempel, och du kommer att hamna i Pythons debugger när den raden körs.  "
"Sedan kan du inspektera aktuella värden för variabler och så vidare.  Anta "
"till exempel att :file:`a.py` innehåller just den här modulen docstring::"

#: ../../library/doctest.rst:1620
msgid "Then an interactive Python session may look like this::"
msgstr "Då kan en interaktiv Python-session se ut så här::"

#: ../../library/doctest.rst:1653
msgid ""
"Functions that convert doctests to Python code, and possibly run the "
"synthesized code under the debugger:"
msgstr ""
"Funktioner som konverterar doctests till Python-kod och eventuellt kör den "
"syntetiserade koden under felsökaren:"

#: ../../library/doctest.rst:1659
msgid "Convert text with examples to a script."
msgstr "Konvertera text med exempel till ett skript."

#: ../../library/doctest.rst:1661
msgid ""
"Argument *s* is a string containing doctest examples.  The string is "
"converted to a Python script, where doctest examples in *s* are converted to "
"regular code, and everything else is converted to Python comments.  The "
"generated script is returned as a string. For example, ::"
msgstr ""
"Argument *s* är en sträng som innehåller doctest-exempel.  Strängen "
"konverteras till ett Python-skript, där doctest-exemplen i *s* konverteras "
"till vanlig kod och allt annat konverteras till Python-kommentarer.  Det "
"genererade skriptet returneras som en sträng. Till exempel ::"

#: ../../library/doctest.rst:1676
msgid "displays::"
msgstr "visar::"

#: ../../library/doctest.rst:1686
msgid ""
"This function is used internally by other functions (see below), but can "
"also be useful when you want to transform an interactive Python session into "
"a Python script."
msgstr ""
"Denna funktion används internt av andra funktioner (se nedan), men kan också "
"vara användbar när du vill omvandla en interaktiv Python-session till ett "
"Python-skript."

#: ../../library/doctest.rst:1693
msgid "Convert the doctest for an object to a script."
msgstr "Konvertera doctestet för ett objekt till ett skript."

#: ../../library/doctest.rst:1695
msgid ""
"Argument *module* is a module object, or dotted name of a module, containing "
"the object whose doctests are of interest.  Argument *name* is the name "
"(within the module) of the object with the doctests of interest.  The result "
"is a string, containing the object's docstring converted to a Python script, "
"as described for :func:`script_from_examples` above.  For example, if "
"module :file:`a.py` contains a top-level function :func:`!f`, then ::"
msgstr ""
"Argument *module* är ett modulobjekt, eller ett punktat namn på en modul, "
"som innehåller det objekt vars doctests är av intresse.  Argument *name* är "
"namnet (inom modulen) på objektet med de doctests som är av intresse.  "
"Resultatet är en sträng som innehåller objektets dokumentsträng konverterad "
"till ett Python-skript, enligt beskrivningen för :func:"
"`script_from_examples` ovan.  Om till exempel modulen :file:`a.py` "
"innehåller en toppnivåfunktion :func:`!f`, så är ::"

#: ../../library/doctest.rst:1705
msgid ""
"prints a script version of function :func:`!f`'s docstring, with doctests "
"converted to code, and the rest placed in comments."
msgstr ""
"skriver ut en skriptversion av funktionen :func:`!f`'s docstring, med "
"doctests konverterade till kod och resten placerade i kommentarer."

#: ../../library/doctest.rst:1711
msgid "Debug the doctests for an object."
msgstr "Felsök doctesterna för ett objekt."

#: ../../library/doctest.rst:1713
msgid ""
"The *module* and *name* arguments are the same as for function :func:"
"`testsource` above.  The synthesized Python script for the named object's "
"docstring is written to a temporary file, and then that file is run under "
"the control of the Python debugger, :mod:`pdb`."
msgstr ""
"Argumenten *module* och *name* är desamma som för funktionen :func:"
"`testsource` ovan.  Det syntetiserade Python-skriptet för det namngivna "
"objektets docstring skrivs till en temporär fil, och sedan körs filen under "
"kontroll av Python-debuggern, :mod:`pdb`."

#: ../../library/doctest.rst:1718
msgid ""
"A shallow copy of ``module.__dict__`` is used for both local and global "
"execution context."
msgstr ""
"En ytlig kopia av ``module.__dict__`` används för både lokal och global "
"exekveringskontext."

#: ../../library/doctest.rst:1721
msgid ""
"Optional argument *pm* controls whether post-mortem debugging is used.  If "
"*pm* has a true value, the script file is run directly, and the debugger "
"gets involved only if the script terminates via raising an unhandled "
"exception.  If it does, then post-mortem debugging is invoked, via :func:"
"`pdb.post_mortem`, passing the traceback object from the unhandled "
"exception.  If *pm* is not specified, or is false, the script is run under "
"the debugger from the start, via passing an appropriate :func:`exec` call "
"to :func:`pdb.run`."
msgstr ""
"Det valfria argumentet *pm* styr om felsökning efter avslutad körning ska "
"användas.  Om *pm* har ett sant värde körs skriptfilen direkt och felsökaren "
"blir inblandad endast om skriptet avslutas genom att ett ohanterat undantag "
"uppstår.  Om så är fallet aktiveras post-mortem-felsökning via :func:`pdb."
"post_mortem`, som skickar spårningsobjektet från det ohanterade undantaget.  "
"Om *pm* inte anges, eller är false, körs skriptet under debuggern från "
"början, genom att skicka ett lämpligt :func:`exec`\\-anrop till :func:`pdb."
"run`."

#: ../../library/doctest.rst:1732
msgid "Debug the doctests in a string."
msgstr "Felsök doctesterna i en sträng."

#: ../../library/doctest.rst:1734
msgid ""
"This is like function :func:`debug` above, except that a string containing "
"doctest examples is specified directly, via the *src* argument."
msgstr ""
"Detta är som funktionen :func:`debug` ovan, förutom att en sträng som "
"innehåller doctest-exempel anges direkt via argumentet *src*."

#: ../../library/doctest.rst:1737
msgid ""
"Optional argument *pm* has the same meaning as in function :func:`debug` "
"above."
msgstr ""
"Det valfria argumentet *pm* har samma betydelse som i funktionen :func:"
"`debug` ovan."

#: ../../library/doctest.rst:1739
msgid ""
"Optional argument *globs* gives a dictionary to use as both local and global "
"execution context.  If not specified, or ``None``, an empty dictionary is "
"used. If specified, a shallow copy of the dictionary is used."
msgstr ""
"Det valfria argumentet *globs* anger en ordbok som ska användas som både "
"lokalt och globalt exekveringskontext.  Om det inte anges, eller ``None``, "
"används en tom ordbok. Om det anges används en ytlig kopia av ordlistan."

#: ../../library/doctest.rst:1744
msgid ""
"The :class:`DebugRunner` class, and the special exceptions it may raise, are "
"of most interest to testing framework authors, and will only be sketched "
"here.  See the source code, and especially :class:`DebugRunner`'s docstring "
"(which is a doctest!) for more details:"
msgstr ""
"Klassen :class:`DebugRunner`, och de speciella undantag som den kan ge "
"upphov till, är av störst intresse för utvecklare av testramverk och kommer "
"endast att beskrivas översiktligt här.  Se källkoden, och särskilt :class:"
"`DebugRunner` s docstring (som är ett doctest!) för mer information:"

#: ../../library/doctest.rst:1752
msgid ""
"A subclass of :class:`DocTestRunner` that raises an exception as soon as a "
"failure is encountered.  If an unexpected exception occurs, an :exc:"
"`UnexpectedException` exception is raised, containing the test, the example, "
"and the original exception.  If the output doesn't match, then a :exc:"
"`DocTestFailure` exception is raised, containing the test, the example, and "
"the actual output."
msgstr ""
"En underklass till :class:`DocTestRunner` som ger upphov till ett undantag "
"så snart ett fel uppstår.  Om ett oväntat undantag inträffar, skapas ett :"
"exc:`UnexpectedException`\\-undantag som innehåller testet, exemplet och det "
"ursprungliga undantaget.  Om utdata inte stämmer överens skapas ett :exc:"
"`DocTestFailure`\\-undantag som innehåller testet, exemplet och den faktiska "
"utdatan."

#: ../../library/doctest.rst:1759
msgid ""
"For information about the constructor parameters and methods, see the "
"documentation for :class:`DocTestRunner` in section :ref:`doctest-advanced-"
"api`."
msgstr ""
"För information om konstruktörens parametrar och metoder, se dokumentationen "
"för :class:`DocTestRunner` i avsnitt :ref:`doctest-advanced-api`."

#: ../../library/doctest.rst:1762
msgid ""
"There are two exceptions that may be raised by :class:`DebugRunner` "
"instances:"
msgstr ""
"Det finns två undantag som kan uppstå i :class:`DebugRunner`\\-instanser:"

#: ../../library/doctest.rst:1767
msgid ""
"An exception raised by :class:`DocTestRunner` to signal that a doctest "
"example's actual output did not match its expected output. The constructor "
"arguments are used to initialize the attributes of the same names."
msgstr ""
"Ett undantag som tas upp av :class:`DocTestRunner` för att signalera att ett "
"doctest-exempels faktiska resultat inte stämde överens med det förväntade "
"resultatet. Argumenten i konstruktorn används för att initiera attributen "
"med samma namn."

#: ../../library/doctest.rst:1771
msgid ":exc:`DocTestFailure` defines the following attributes:"
msgstr ":exc:`DocTestFailure` definierar följande attribut:"

#: ../../library/doctest.rst:1776 ../../library/doctest.rst:1800
msgid "The :class:`DocTest` object that was being run when the example failed."
msgstr "Objektet :class:`DocTest` som kördes när exemplet misslyckades."

#: ../../library/doctest.rst:1781 ../../library/doctest.rst:1805
msgid "The :class:`Example` that failed."
msgstr "Den :class:`Example` som misslyckades."

#: ../../library/doctest.rst:1786
msgid "The example's actual output."
msgstr "Exemplets faktiska utdata."

#: ../../library/doctest.rst:1791
msgid ""
"An exception raised by :class:`DocTestRunner` to signal that a doctest "
"example raised an unexpected exception.  The constructor arguments are used "
"to initialize the attributes of the same names."
msgstr ""
"Ett undantag som skapas av :class:`DocTestRunner` för att signalera att ett "
"doctest-exempel skapade ett oväntat undantag.  Argumenten i konstruktorn "
"används för att initiera attributen med samma namn."

#: ../../library/doctest.rst:1795
msgid ":exc:`UnexpectedException` defines the following attributes:"
msgstr ":exc:`UnexpectedException` definierar följande attribut:"

#: ../../library/doctest.rst:1810
msgid ""
"A tuple containing information about the unexpected exception, as returned "
"by :func:`sys.exc_info`."
msgstr ""
"En tupel som innehåller information om det oväntade undantaget, som "
"returneras av :func:`sys.exc_info`."

#: ../../library/doctest.rst:1817
msgid "Soapbox"
msgstr "Soapbox"

#: ../../library/doctest.rst:1819
msgid ""
"As mentioned in the introduction, :mod:`doctest` has grown to have three "
"primary uses:"
msgstr ""
"Som nämndes i inledningen har :mod:`doctest` vuxit till att ha tre primära "
"användningsområden:"

#: ../../library/doctest.rst:1822
msgid "Checking examples in docstrings."
msgstr "Kontroll av exempel i docstrings."

#: ../../library/doctest.rst:1824
msgid "Regression testing."
msgstr "Regressionstestning."

#: ../../library/doctest.rst:1826
msgid "Executable documentation / literate testing."
msgstr "Exekverbar dokumentation / litterat test."

#: ../../library/doctest.rst:1828
msgid ""
"These uses have different requirements, and it is important to distinguish "
"them. In particular, filling your docstrings with obscure test cases makes "
"for bad documentation."
msgstr ""
"Dessa användningsområden har olika krav, och det är viktigt att skilja dem "
"åt. Framför allt blir dokumentationen dålig om man fyller den med obskyra "
"testfall."

#: ../../library/doctest.rst:1832
msgid ""
"When writing a docstring, choose docstring examples with care. There's an "
"art to this that needs to be learned---it may not be natural at first.  "
"Examples should add genuine value to the documentation.  A good example can "
"often be worth many words. If done with care, the examples will be "
"invaluable for your users, and will pay back the time it takes to collect "
"them many times over as the years go by and things change.  I'm still amazed "
"at how often one of my :mod:`doctest` examples stops working after a "
"\"harmless\" change."
msgstr ""
"När du skriver en docstring ska du välja docstring-exempel med omsorg. Det "
"här är en konst som måste läras - det kanske inte är naturligt i början.  "
"Exemplen bör tillföra dokumentationen ett verkligt värde.  Ett bra exempel "
"kan ofta vara värt många ord. Om du gör det med omsorg kommer exemplen att "
"vara ovärderliga för dina användare och betala tillbaka den tid det tar att "
"samla in dem många gånger om när åren går och saker och ting förändras.  Jag "
"är fortfarande förvånad över hur ofta ett av mina :mod:`doctest`\\-exempel "
"slutar fungera efter en \"harmlös\" förändring."

#: ../../library/doctest.rst:1840
msgid ""
"Doctest also makes an excellent tool for regression testing, especially if "
"you don't skimp on explanatory text.  By interleaving prose and examples, it "
"becomes much easier to keep track of what's actually being tested, and why.  "
"When a test fails, good prose can make it much easier to figure out what the "
"problem is, and how it should be fixed.  It's true that you could write "
"extensive comments in code-based testing, but few programmers do. Many have "
"found that using doctest approaches instead leads to much clearer tests.  "
"Perhaps this is simply because doctest makes writing prose a little easier "
"than writing code, while writing comments in code is a little harder.  I "
"think it goes deeper than just that: the natural attitude when writing a "
"doctest-based test is that you want to explain the fine points of your "
"software, and illustrate them with examples. This in turn naturally leads to "
"test files that start with the simplest features, and logically progress to "
"complications and edge cases.  A coherent narrative is the result, instead "
"of a collection of isolated functions that test isolated bits of "
"functionality seemingly at random.  It's a different attitude, and produces "
"different results, blurring the distinction between testing and explaining."
msgstr ""
"Doctest är också ett utmärkt verktyg för regressionstestning, särskilt om "
"man inte snålar med den förklarande texten.  Genom att varva prosa och "
"exempel blir det mycket lättare att hålla reda på vad som faktiskt testas "
"och varför.  När ett test misslyckas kan bra prosa göra det mycket lättare "
"att räkna ut vad problemet är och hur det ska åtgärdas.  Det är sant att man "
"kan skriva omfattande kommentarer i kodbaserade tester, men det är få "
"programmerare som gör det. Många har upptäckt att man får mycket tydligare "
"tester om man istället använder sig av doctest-metoder.  Kanske beror det "
"helt enkelt på att doctest gör det lite enklare att skriva prosa än att "
"skriva kod, medan det är lite svårare att skriva kommentarer i kod.  Jag "
"tror att det går djupare än så: den naturliga inställningen när man skriver "
"ett doctest-baserat test är att man vill förklara de små detaljerna i sin "
"programvara och illustrera dem med exempel. Detta leder i sin tur naturligt "
"till testfiler som börjar med de enklaste funktionerna och logiskt går "
"vidare till komplikationer och kantfall.  Resultatet blir en sammanhängande "
"berättelse i stället för en samling isolerade funktioner som testar "
"isolerade bitar av funktionalitet till synes slumpmässigt.  Det är en annan "
"attityd som ger andra resultat och suddar ut skillnaden mellan att testa och "
"att förklara."

#: ../../library/doctest.rst:1858
msgid ""
"Regression testing is best confined to dedicated objects or files.  There "
"are several options for organizing tests:"
msgstr ""
"Regressionstester bör helst begränsas till särskilda objekt eller filer.  "
"Det finns flera alternativ för att organisera tester:"

#: ../../library/doctest.rst:1861
msgid ""
"Write text files containing test cases as interactive examples, and test the "
"files using :func:`testfile` or :func:`DocFileSuite`.  This is recommended, "
"although is easiest to do for new projects, designed from the start to use "
"doctest."
msgstr ""
"Skriv textfiler som innehåller testfall som interaktiva exempel och testa "
"filerna med :func:`testfile` eller :func:`DocFileSuite`.  Detta "
"rekommenderas, men är lättast att göra för nya projekt som redan från början "
"är utformade för att använda doctest."

#: ../../library/doctest.rst:1866
msgid ""
"Define functions named ``_regrtest_topic`` that consist of single "
"docstrings, containing test cases for the named topics.  These functions can "
"be included in the same file as the module, or separated out into a separate "
"test file."
msgstr ""
"Definiera funktioner med namnet ``_regrtest_topic`` som består av enskilda "
"dokumentsträngar som innehåller testfall för de namngivna ämnena.  Dessa "
"funktioner kan inkluderas i samma fil som modulen, eller separeras till en "
"separat testfil."

#: ../../library/doctest.rst:1870
msgid ""
"Define a ``__test__`` dictionary mapping from regression test topics to "
"docstrings containing test cases."
msgstr ""

#: ../../library/doctest.rst:1873
msgid ""
"When you have placed your tests in a module, the module can itself be the "
"test runner.  When a test fails, you can arrange for your test runner to re-"
"run only the failing doctest while you debug the problem.  Here is a minimal "
"example of such a test runner::"
msgstr ""
"När du har placerat dina tester i en modul kan modulen själv vara "
"testköraren.  När ett test misslyckas kan du ordna så att din testkörare "
"bara kör om det misslyckade testet medan du felsöker problemet.  Här är ett "
"minimalt exempel på en sådan testlöpare::"

#: ../../library/doctest.rst:1895
msgid "Footnotes"
msgstr "Fotnoter"

#: ../../library/doctest.rst:1896
msgid ""
"Examples containing both expected output and an exception are not supported. "
"Trying to guess where one ends and the other begins is too error-prone, and "
"that also makes for a confusing test."
msgstr ""
"Exempel som innehåller både förväntad utdata och ett undantag stöds inte. "
"Att försöka gissa var det ena slutar och det andra börjar är alltför "
"felbenäget, och det ger också ett förvirrande test."

#: ../../library/doctest.rst:339
msgid ">>>"
msgstr ">>>"

#: ../../library/doctest.rst:339
msgid "interpreter prompt"
msgstr "tolkprompt"

#: ../../library/doctest.rst:339 ../../library/doctest.rst:575
msgid "..."
msgstr "..."

#: ../../library/doctest.rst:503
msgid "^ (caret)"
msgstr "^ (caret)"

#: ../../library/doctest.rst:503
msgid "marker"
msgstr "markör"

#: ../../library/doctest.rst:555
msgid "<BLANKLINE>"
msgstr "<BLANKLINE>"

#: ../../library/doctest.rst:575 ../../library/doctest.rst:705
msgid "in doctests"
msgstr "i doctests"

#: ../../library/doctest.rst:705
msgid "# (hash)"
msgstr "# (hash)"

#: ../../library/doctest.rst:705
msgid "+ (plus)"
msgstr "+ (plus)"

#: ../../library/doctest.rst:705
msgid "- (minus)"
msgstr "- (minus)"
