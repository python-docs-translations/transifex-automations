# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# python-doc bot, 2025
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.9\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-10-17 18:07+0000\n"
"PO-Revision-Date: 2025-09-22 17:54+0000\n"
"Last-Translator: python-doc bot, 2025\n"
"Language-Team: Swedish (https://app.transifex.com/python-doc/teams/5390/"
"sv/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: sv\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"

#: ../../library/base64.rst:2
msgid ":mod:`base64` --- Base16, Base32, Base64, Base85 Data Encodings"
msgstr ""

#: ../../library/base64.rst:8
msgid "**Source code:** :source:`Lib/base64.py`"
msgstr "**Källkod:** :source:`Lib/base64.py`"

#: ../../library/base64.rst:16
msgid ""
"This module provides functions for encoding binary data to printable ASCII "
"characters and decoding such encodings back to binary data. It provides "
"encoding and decoding functions for the encodings specified in :rfc:`3548`, "
"which defines the Base16, Base32, and Base64 algorithms, and for the de-"
"facto standard Ascii85 and Base85 encodings."
msgstr ""

#: ../../library/base64.rst:22
msgid ""
"The :rfc:`3548` encodings are suitable for encoding binary data so that it "
"can safely sent by email, used as parts of URLs, or included as part of an "
"HTTP POST request.  The encoding algorithm is not the same as the :program:"
"`uuencode` program."
msgstr ""

#: ../../library/base64.rst:27
msgid ""
"There are two interfaces provided by this module.  The modern interface "
"supports encoding :term:`bytes-like objects <bytes-like object>` to ASCII :"
"class:`bytes`, and decoding :term:`bytes-like objects <bytes-like object>` "
"or strings containing ASCII to :class:`bytes`.  Both base-64 alphabets "
"defined in :rfc:`3548` (normal, and URL- and filesystem-safe) are supported."
msgstr ""

#: ../../library/base64.rst:33
msgid ""
"The legacy interface does not support decoding from strings, but it does "
"provide functions for encoding and decoding to and from :term:`file objects "
"<file object>`.  It only supports the Base64 standard alphabet, and it adds "
"newlines every 76 characters as per :rfc:`2045`.  Note that if you are "
"looking for :rfc:`2045` support you probably want to be looking at the :mod:"
"`email` package instead."
msgstr ""

#: ../../library/base64.rst:41
msgid ""
"ASCII-only Unicode strings are now accepted by the decoding functions of the "
"modern interface."
msgstr ""
"Unicode-strängar som bara innehåller ASCII accepteras nu av "
"avkodningsfunktionerna i det moderna gränssnittet."

#: ../../library/base64.rst:45
msgid ""
"Any :term:`bytes-like objects <bytes-like object>` are now accepted by all "
"encoding and decoding functions in this module.  Ascii85/Base85 support "
"added."
msgstr ""
"Alla :term:`bytesliknande objekt <bytes-like object>` accepteras nu av alla "
"kodnings- och avkodningsfunktioner i den här modulen.  Stöd för Ascii85/"
"Base85 har lagts till."

#: ../../library/base64.rst:49
msgid "The modern interface provides:"
msgstr ""

#: ../../library/base64.rst:53
msgid ""
"Encode the :term:`bytes-like object` *s* using Base64 and return the "
"encoded :class:`bytes`."
msgstr ""
"Kodar :term:`bytesliknande objekt` *s* med Base64 och returnerar den kodade :"
"class:`bytes`."

#: ../../library/base64.rst:56
msgid ""
"Optional *altchars* must be a :term:`bytes-like object` of at least length 2 "
"(additional characters are ignored) which specifies an alternative alphabet "
"for the ``+`` and ``/`` characters.  This allows an application to e.g. "
"generate URL or filesystem safe Base64 strings.  The default is ``None``, "
"for which the standard Base64 alphabet is used."
msgstr ""

#: ../../library/base64.rst:65
msgid ""
"Decode the Base64 encoded :term:`bytes-like object` or ASCII string *s* and "
"return the decoded :class:`bytes`."
msgstr ""
"Avkodar den Base64-kodade :term:`bytesliknande objekt` eller ASCII-strängen "
"*s* och returnerar den avkodade :class:`bytes`."

#: ../../library/base64.rst:68
msgid ""
"Optional *altchars* must be a :term:`bytes-like object` or ASCII string of "
"at least length 2 (additional characters are ignored) which specifies the "
"alternative alphabet used instead of the ``+`` and ``/`` characters."
msgstr ""

#: ../../library/base64.rst:72
msgid ""
"A :exc:`binascii.Error` exception is raised if *s* is incorrectly padded."
msgstr ""
"Ett :exc:`binascii.Error`\\-undantag uppstår om *s* är felaktigt utfylld."

#: ../../library/base64.rst:75
msgid ""
"If *validate* is ``False`` (the default), characters that are neither in the "
"normal base-64 alphabet nor the alternative alphabet are discarded prior to "
"the padding check.  If *validate* is ``True``, these non-alphabet characters "
"in the input result in a :exc:`binascii.Error`."
msgstr ""
"Om *validate* är ``False`` (standard), kasseras tecken som varken finns i "
"det normala bas-64-alfabetet eller i det alternativa alfabetet före "
"utfyllnadskontrollen.  Om *validate* är ``True`` resulterar dessa icke-"
"alfabetiska tecken i indata i ett :exc:`binascii.Error`."

#: ../../library/base64.rst:84
msgid ""
"Encode :term:`bytes-like object` *s* using the standard Base64 alphabet and "
"return the encoded :class:`bytes`."
msgstr ""
"Kodar :term:`bytesliknande objekt` *s* med hjälp av standard Base64-"
"alfabetet och returnerar den kodade :class:`bytes`."

#: ../../library/base64.rst:90
msgid ""
"Decode :term:`bytes-like object` or ASCII string *s* using the standard "
"Base64 alphabet and return the decoded :class:`bytes`."
msgstr ""
"Avkodar :term:`bytesliknande objekt` eller ASCII-sträng *s* med hjälp av "
"standard Base64-alfabetet och returnerar den avkodade :class:`bytes`."

#: ../../library/base64.rst:96
msgid ""
"Encode :term:`bytes-like object` *s* using the URL- and filesystem-safe "
"alphabet, which substitutes ``-`` instead of ``+`` and ``_`` instead of ``/"
"`` in the standard Base64 alphabet, and return the encoded :class:`bytes`.  "
"The result can still contain ``=``."
msgstr ""
"Kodar :term:`bytesliknande objekt` *s* med det URL- och filsystemssäkra "
"alfabetet, som ersätter ``\\-`` istället för ``+`` och ``_`` istället för ``/"
"`` i standard Base64-alfabetet, och returnerar den kodade :class:`bytes`.  "
"Resultatet kan fortfarande innehålla ``=``."

#: ../../library/base64.rst:105
msgid ""
"Decode :term:`bytes-like object` or ASCII string *s* using the URL- and "
"filesystem-safe alphabet, which substitutes ``-`` instead of ``+`` and ``_`` "
"instead of ``/`` in the standard Base64 alphabet, and return the decoded :"
"class:`bytes`."
msgstr ""
"Avkoda :term:`bytesliknande objekt` eller ASCII-sträng *s* med URL- och "
"filsystemssäkert alfabet, som ersätter ``\\-`` istället för ``+`` och ``_`` "
"istället för ``/`` i standard Base64-alfabetet, och returnera den avkodade :"
"class:`bytes`."

#: ../../library/base64.rst:114
msgid ""
"Encode the :term:`bytes-like object` *s* using Base32 and return the "
"encoded :class:`bytes`."
msgstr ""
"Kodar :term:`bytesliknande objekt` *s* med Base32 och returnerar den kodade :"
"class:`bytes`."

#: ../../library/base64.rst:120
msgid ""
"Decode the Base32 encoded :term:`bytes-like object` or ASCII string *s* and "
"return the decoded :class:`bytes`."
msgstr ""
"Avkodar den Base32-kodade :term:`bytesliknande objekt` eller ASCII-strängen "
"*s* och returnerar den avkodade :class:`bytes`."

#: ../../library/base64.rst:123 ../../library/base64.rst:150
msgid ""
"Optional *casefold* is a flag specifying whether a lowercase alphabet is "
"acceptable as input.  For security purposes, the default is ``False``."
msgstr ""
"Valfritt *casefold* är en flagga som anger om ett alfabet med små bokstäver "
"kan accepteras som indata.  Av säkerhetsskäl är standardinställningen "
"``False``."

#: ../../library/base64.rst:127
msgid ""
":rfc:`3548` allows for optional mapping of the digit 0 (zero) to the letter "
"O (oh), and for optional mapping of the digit 1 (one) to either the letter I "
"(eye) or letter L (el).  The optional argument *map01* when not ``None``, "
"specifies which letter the digit 1 should be mapped to (when *map01* is not "
"``None``, the digit 0 is always mapped to the letter O).  For security "
"purposes the default is ``None``, so that 0 and 1 are not allowed in the "
"input."
msgstr ""

#: ../../library/base64.rst:134 ../../library/base64.rst:154
msgid ""
"A :exc:`binascii.Error` is raised if *s* is incorrectly padded or if there "
"are non-alphabet characters present in the input."
msgstr ""
"Ett :exc:`binascii.Error` uppstår om *s* är felaktigt utfylld eller om det "
"finns tecken som inte är alfabetiska i indata."

#: ../../library/base64.rst:141
msgid ""
"Encode the :term:`bytes-like object` *s* using Base16 and return the "
"encoded :class:`bytes`."
msgstr ""
"Kodar :term:`bytesliknande objekt` *s* med Base16 och returnerar den kodade :"
"class:`bytes`."

#: ../../library/base64.rst:147
msgid ""
"Decode the Base16 encoded :term:`bytes-like object` or ASCII string *s* and "
"return the decoded :class:`bytes`."
msgstr ""
"Avkodar den Base16-kodade :term:`bytesliknande objekt` eller ASCII-strängen "
"*s* och returnerar den avkodade :class:`bytes`."

#: ../../library/base64.rst:161
msgid ""
"Encode the :term:`bytes-like object` *b* using Ascii85 and return the "
"encoded :class:`bytes`."
msgstr ""
"Koda :term:`bytesliknande objekt` *b* med Ascii85 och returnera den kodade :"
"class:`bytes`."

#: ../../library/base64.rst:164
msgid ""
"*foldspaces* is an optional flag that uses the special short sequence 'y' "
"instead of 4 consecutive spaces (ASCII 0x20) as supported by 'btoa'. This "
"feature is not supported by the \"standard\" Ascii85 encoding."
msgstr ""
"*foldspaces* är en valfri flagga som använder den speciella kortsekvensen "
"'y' istället för 4 på varandra följande mellanslag (ASCII 0x20) som stöds av "
"'btoa'. Denna funktion stöds inte av \"standard\" Ascii85-kodningen."

#: ../../library/base64.rst:168
msgid ""
"*wrapcol* controls whether the output should have newline (``b'\\n'``) "
"characters added to it. If this is non-zero, each output line will be at "
"most this many characters long."
msgstr ""

#: ../../library/base64.rst:172
msgid ""
"*pad* controls whether the input is padded to a multiple of 4 before "
"encoding. Note that the ``btoa`` implementation always pads."
msgstr ""
"*pad* styr om indata ska fyllas i till en multipel av 4 före kodning. "
"Observera att ``btoa``\\-implementationen alltid paddar."

#: ../../library/base64.rst:175
msgid ""
"*adobe* controls whether the encoded byte sequence is framed with ``<~`` and "
"``~>``, which is used by the Adobe implementation."
msgstr ""
"*adobe* styr om den kodade byte-sekvensen ska ramas in med ``<~`` och "
"``~>``, vilket används av Adobe-implementationen."

#: ../../library/base64.rst:183
msgid ""
"Decode the Ascii85 encoded :term:`bytes-like object` or ASCII string *b* and "
"return the decoded :class:`bytes`."
msgstr ""
"Avkodar den Ascii85-kodade :term:`bytesliknande objekt` eller ASCII-strängen "
"*b* och returnerar den avkodade :class:`bytes`."

#: ../../library/base64.rst:186
msgid ""
"*foldspaces* is a flag that specifies whether the 'y' short sequence should "
"be accepted as shorthand for 4 consecutive spaces (ASCII 0x20). This feature "
"is not supported by the \"standard\" Ascii85 encoding."
msgstr ""
"*foldspaces* är en flagga som anger om kortsekvensen 'y' ska accepteras som "
"kortform för 4 på varandra följande mellanslag (ASCII 0x20). Denna funktion "
"stöds inte av \"standard\" Ascii85-kodningen."

#: ../../library/base64.rst:190
msgid ""
"*adobe* controls whether the input sequence is in Adobe Ascii85 format (i.e. "
"is framed with <~ and ~>)."
msgstr ""
"*adobe* kontrollerar om inmatningssekvensen är i Adobe Ascii85-format (dvs. "
"är inramad med <~ och ~>)."

#: ../../library/base64.rst:193
msgid ""
"*ignorechars* should be a :term:`bytes-like object` or ASCII string "
"containing characters to ignore from the input. This should only contain "
"whitespace characters, and by default contains all whitespace characters in "
"ASCII."
msgstr ""
"*ignorechars* ska vara en :term:`bytesliknande objekt` eller ASCII-sträng "
"som innehåller tecken som ska ignoreras från indata. Den bör endast "
"innehålla blanksteg och innehåller som standard alla blanksteg i ASCII."

#: ../../library/base64.rst:203
msgid ""
"Encode the :term:`bytes-like object` *b* using base85 (as used in e.g. git-"
"style binary diffs) and return the encoded :class:`bytes`."
msgstr ""
"Kodar :term:`bytesliknande objekt` *b* med base85 (som används i t.ex. "
"binära diffar i git-stil) och returnerar den kodade :class:`bytes`."

#: ../../library/base64.rst:206
msgid ""
"If *pad* is true, the input is padded with ``b'\\0'`` so its length is a "
"multiple of 4 bytes before encoding."
msgstr ""
"Om *pad* är true, fylls indata på med ``b'\\0'`` så att dess längd blir en "
"multipel av 4 byte före kodning."

#: ../../library/base64.rst:214
msgid ""
"Decode the base85-encoded :term:`bytes-like object` or ASCII string *b* and "
"return the decoded :class:`bytes`.  Padding is implicitly removed, if "
"necessary."
msgstr ""
"Avkodar den base85-kodade :term:`bytesliknande objekt` eller ASCII-strängen "
"*b* och returnerar den avkodade :class:`bytes`.  Utfyllnad tas bort "
"implicit, om nödvändigt."

#: ../../library/base64.rst:221
msgid "The legacy interface:"
msgstr ""

#: ../../library/base64.rst:225
msgid ""
"Decode the contents of the binary *input* file and write the resulting "
"binary data to the *output* file. *input* and *output* must be :term:`file "
"objects <file object>`. *input* will be read until ``input.readline()`` "
"returns an empty bytes object."
msgstr ""
"Avkodar innehållet i den binära filen *input* och skriver den resulterande "
"binära datan till filen *output*. *input* och *output* måste vara :term:"
"`filobjekt <file object>`. *input* kommer att läsas tills ``input."
"readline()`` returnerar ett tomt bytes-objekt."

#: ../../library/base64.rst:233
msgid ""
"Decode the :term:`bytes-like object` *s*, which must contain one or more "
"lines of base64 encoded data, and return the decoded :class:`bytes`."
msgstr ""
"Avkodar :term:`bytes-like object` *s*, som måste innehålla en eller flera "
"rader med base64-kodade data, och returnerar den avkodade :class:`bytes`."

#: ../../library/base64.rst:241
msgid ""
"Encode the contents of the binary *input* file and write the resulting "
"base64 encoded data to the *output* file. *input* and *output* must be :term:"
"`file objects <file object>`. *input* will be read until ``input.read()`` "
"returns an empty bytes object. :func:`encode` inserts a newline character "
"(``b'\\n'``) after every 76 bytes of the output, as well as ensuring that "
"the output always ends with a newline, as per :rfc:`2045` (MIME)."
msgstr ""
"Kodar innehållet i den binära *input*-filen och skriver de resulterande "
"base64-kodade data till *output*-filen. *input* och *output* måste vara :"
"term:`filobjekt <file object>`. *input* kommer att läsas tills ``input."
"read()`` returnerar ett tomt bytesobjekt. :func:`encode` infogar en ny rad "
"(``b'\\n'``) efter var 76:e byte i utdata, samt säkerställer att utdata "
"alltid slutar med en ny rad, enligt :rfc:`2045` (MIME)."

#: ../../library/base64.rst:251
msgid ""
"Encode the :term:`bytes-like object` *s*, which can contain arbitrary binary "
"data, and return :class:`bytes` containing the base64-encoded data, with "
"newlines (``b'\\n'``) inserted after every 76 bytes of output, and ensuring "
"that there is a trailing newline, as per :rfc:`2045` (MIME)."
msgstr ""
"Koda :term:`bytes-like object` *s*, som kan innehålla godtyckliga binära "
"data, och returnera :class:`bytes` som innehåller base64-kodade data, med "
"nya rader (``b'\\n'``) infogade efter var 76:e bytes utdata, och se till att "
"det finns en efterföljande ny rad, enligt :rfc:`2045` (MIME)."

#: ../../library/base64.rst:259
msgid "An example usage of the module:"
msgstr "Ett exempel på användning av modulen:"

#: ../../library/base64.rst:273
msgid "Module :mod:`binascii`"
msgstr "Modul :mod:`binascii`"

#: ../../library/base64.rst:273
msgid ""
"Support module containing ASCII-to-binary and binary-to-ASCII conversions."
msgstr ""
"Stödmodul som innehåller konvertering av ASCII till binär och binär till "
"ASCII."

#: ../../library/base64.rst:276
msgid ""
":rfc:`1521` - MIME (Multipurpose Internet Mail Extensions) Part One: "
"Mechanisms for Specifying and Describing the Format of Internet Message "
"Bodies"
msgstr ""
":rfc:`1521` - MIME (Multipurpose Internet Mail Extensions) Del 1: Mekanismer "
"för att specificera och beskriva formatet för Internetmeddelanden"

#: ../../library/base64.rst:276
msgid ""
"Section 5.2, \"Base64 Content-Transfer-Encoding,\" provides the definition "
"of the base64 encoding."
msgstr ""
"Avsnitt 5.2, \"Base64 Content-Transfer-Encoding\", innehåller en definition "
"av base64-kodningen."
