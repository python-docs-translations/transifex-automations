# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# python-doc bot, 2025
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.13\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-25 15:05+0000\n"
"PO-Revision-Date: 2025-09-15 01:04+0000\n"
"Last-Translator: python-doc bot, 2025\n"
"Language-Team: Swedish (https://app.transifex.com/python-doc/teams/5390/sv/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: sv\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"

#: ../../library/symtable.rst:2
msgid ":mod:`!symtable` --- Access to the compiler's symbol tables"
msgstr ":mod:`!symtable` --- Tillgång till kompilatorns symboltabeller"

#: ../../library/symtable.rst:7
msgid "**Source code:** :source:`Lib/symtable.py`"
msgstr "**Källkod:** :source:`Lib/symtable.py`"

#: ../../library/symtable.rst:15
msgid ""
"Symbol tables are generated by the compiler from AST just before bytecode is"
" generated.  The symbol table is responsible for calculating the scope of "
"every identifier in the code.  :mod:`symtable` provides an interface to "
"examine these tables."
msgstr ""
"Symboltabeller genereras av kompilatorn från AST strax innan bytecode "
"genereras.  Symboltabellen är ansvarig för att beräkna omfattningen av varje"
" identifierare i koden. :mod:`symtable` tillhandahåller ett gränssnitt för "
"att undersöka dessa tabeller."

#: ../../library/symtable.rst:22
msgid "Generating Symbol Tables"
msgstr "Generera symboltabeller"

#: ../../library/symtable.rst:26
msgid ""
"Return the toplevel :class:`SymbolTable` for the Python source *code*. "
"*filename* is the name of the file containing the code.  *compile_type* is "
"like the *mode* argument to :func:`compile`."
msgstr ""
"Returnerar toplevel :class:`SymbolTable` för Python-källan *code*. "
"*filename* är namnet på filen som innehåller koden.  *compile_type* är som "
"*mode*-argumentet till :func:`compile`."

#: ../../library/symtable.rst:32
msgid "Examining Symbol Tables"
msgstr "Undersökning av symboltabeller"

#: ../../library/symtable.rst:36
msgid "An enumeration indicating the type of a :class:`SymbolTable` object."
msgstr "En uppräkning som anger typen av ett :class:`SymbolTable`\\-objekt."

#: ../../library/symtable.rst:41
msgid "Used for the symbol table of a module."
msgstr "Används för symboltabellen för en modul."

#: ../../library/symtable.rst:46
msgid "Used for the symbol table of a function."
msgstr "Används för symboltabellen för en funktion."

#: ../../library/symtable.rst:51
msgid "Used for the symbol table of a class."
msgstr "Används för symboltabellen för en klass."

#: ../../library/symtable.rst:53
msgid ""
"The following members refer to different flavors of :ref:`annotation scopes "
"<annotation-scopes>`."
msgstr ""
"Följande medlemmar refererar till olika varianter av :ref:`annotation scopes"
" <annotation-scopes>`."

#: ../../library/symtable.rst:59
msgid ""
"Used for annotations if ``from __future__ import annotations`` is active."
msgstr ""
"Används för anteckningar om ``from __future__ import annotations`` är aktiv."

#: ../../library/symtable.rst:64
msgid "Used for the symbol table of :keyword:`type` constructions."
msgstr "Används för symboltabellen för :keyword:`type`\\-konstruktioner."

#: ../../library/symtable.rst:69
msgid ""
"Used for the symbol table of :ref:`generic functions <generic-functions>` or"
" :ref:`generic classes <generic-classes>`."
msgstr ""
"Används för symboltabellen i :ref:`generiska funktioner <generic-functions>`"
" eller :ref:`generiska klasser <generic-classes>`."

#: ../../library/symtable.rst:75
msgid ""
"Used for the symbol table of the bound, the constraint tuple or the default "
"value of a single type variable in the formal sense, i.e., a TypeVar, a "
"TypeVarTuple or a ParamSpec object (the latter two do not support a bound or"
" a constraint tuple)."
msgstr ""
"Används för symboltabellen för bound, constraint-tupeln eller standardvärdet"
" för en enda typvariabel i formell mening, dvs. en TypeVar, en TypeVarTuple "
"eller ett ParamSpec-objekt (de två senare stöder inte en bound eller en "
"constraint-tuple)."

#: ../../library/symtable.rst:84
msgid "A namespace table for a block.  The constructor is not public."
msgstr "En namnrymdstabell för ett block.  Konstruktören är inte publik."

#: ../../library/symtable.rst:88
msgid ""
"Return the type of the symbol table.  Possible values are members of the "
":class:`SymbolTableType` enumeration."
msgstr ""
"Returnerar typen av symboltabell.  Möjliga värden är medlemmar i "
"uppräkningen :class:`SymbolTableType`."

#: ../../library/symtable.rst:91
msgid ""
"Added ``'annotation'``,  ``'TypeVar bound'``, ``'type alias'``, and ``'type "
"parameter'`` as possible return values."
msgstr ""
"Lagt till ``'annotation'``, ``'TypeVar bound'``, ``'type alias'`` och "
"``'type parameter'`` som möjliga returvärden."

#: ../../library/symtable.rst:95
msgid "Return values are members of the :class:`SymbolTableType` enumeration."
msgstr "Returvärdena är medlemmar i uppräkningen :class:`SymbolTableType`."

#: ../../library/symtable.rst:98
msgid ""
"The exact values of the returned string may change in the future, and thus, "
"it is recommended to use :class:`SymbolTableType` members instead of hard-"
"coded strings."
msgstr ""
"De exakta värdena i den returnerade strängen kan ändras i framtiden, och "
"därför rekommenderas det att använda :class:`SymbolTableType`\\-medlemmar i "
"stället för hårdkodade strängar."

#: ../../library/symtable.rst:104
msgid "Return the table's identifier."
msgstr "Returnerar tabellens identifierare."

#: ../../library/symtable.rst:108
msgid ""
"Return the table's name.  This is the name of the class if the table is for "
"a class, the name of the function if the table is for a function, or "
"``'top'`` if the table is global (:meth:`get_type` returns ``'module'``). "
"For type parameter scopes (which are used for generic classes, functions, "
"and type aliases), it is the name of the underlying class, function, or type"
" alias. For type alias scopes, it is the name of the type alias. For "
":class:`~typing.TypeVar` bound scopes, it is the name of the ``TypeVar``."
msgstr ""
"Returnerar tabellens namn.  Detta är klassens namn om tabellen är för en "
"klass, funktionens namn om tabellen är för en funktion, eller ``'top'`` om "
"tabellen är global (:meth:`get_type` returnerar ``'module'``). För "
"typparameterscopes (som används för generiska klasser, funktioner och "
"typalias) är det namnet på den underliggande klassen, funktionen eller "
"typaliaset. För scope för typalias är det namnet på typaliaset. För "
":class:`~typing.TypeVar` bound scopes är det namnet på ``TypeVar``."

#: ../../library/symtable.rst:118
msgid ""
"Return the number of the first line in the block this table represents."
msgstr ""
"Returnera numret på den första raden i det block som denna tabell "
"representerar."

#: ../../library/symtable.rst:122
msgid "Return ``True`` if the locals in this table can be optimized."
msgstr "Returnerar ``True`` om lokalavdelningarna i tabellen kan optimeras."

#: ../../library/symtable.rst:126
msgid "Return ``True`` if the block is a nested class or function."
msgstr "Returnerar ``True`` om blocket är en nästlad klass eller funktion."

#: ../../library/symtable.rst:130
msgid ""
"Return ``True`` if the block has nested namespaces within it.  These can be "
"obtained with :meth:`get_children`."
msgstr ""
"Returnerar ``True`` om blocket har nästlade namnrymder inom sig.  Dessa kan "
"erhållas med :meth:`get_children`."

#: ../../library/symtable.rst:135
msgid ""
"Return a view object containing the names of symbols in the table. See the "
":ref:`documentation of view objects <dict-views>`."
msgstr ""
"Returnerar ett view-objekt som innehåller namnen på symbolerna i tabellen. "
"Se :ref:`dokumentation av view-objekt <dict-views>`."

#: ../../library/symtable.rst:140
msgid "Lookup *name* in the table and return a :class:`Symbol` instance."
msgstr "Leta upp *namn* i tabellen och returnera en :class:`Symbol`\\-instans."

#: ../../library/symtable.rst:144
msgid "Return a list of :class:`Symbol` instances for names in the table."
msgstr ""
"Returnerar en lista med :class:`Symbol`\\-instanser för namn i tabellen."

#: ../../library/symtable.rst:148
msgid "Return a list of the nested symbol tables."
msgstr "Returnerar en lista över de nästlade symboltabellerna."

#: ../../library/symtable.rst:153
msgid ""
"A namespace for a function or method.  This class inherits from "
":class:`SymbolTable`."
msgstr ""
"En namnrymd för en funktion eller metod.  Denna klass ärver från "
":class:`SymbolTable`."

#: ../../library/symtable.rst:158
msgid "Return a tuple containing names of parameters to this function."
msgstr ""
"Returnerar en tupel som innehåller namn på parametrar till denna funktion."

#: ../../library/symtable.rst:162
msgid "Return a tuple containing names of locals in this function."
msgstr ""
"Returnerar en tupel som innehåller namn på lokala platser i denna funktion."

#: ../../library/symtable.rst:166
msgid "Return a tuple containing names of globals in this function."
msgstr "Returnerar en tupel som innehåller namn på globaler i denna funktion."

#: ../../library/symtable.rst:170
msgid ""
"Return a tuple containing names of explicitly declared nonlocals in this "
"function."
msgstr ""
"Returnerar en tupel som innehåller namn på explicit deklarerade nonlocals i "
"denna funktion."

#: ../../library/symtable.rst:174
msgid ""
"Return a tuple containing names of :term:`free (closure) variables <closure "
"variable>` in this function."
msgstr ""
"Returnera en tupel som innehåller namn på :term:`fria (stängda) variabler "
"<closure variable>` i denna funktion."

#: ../../library/symtable.rst:180
msgid ""
"A namespace of a class.  This class inherits from :class:`SymbolTable`."
msgstr ""
"Ett namnrymd för en klass.  Denna klass ärver från :class:`SymbolTable`."

#: ../../library/symtable.rst:184
msgid ""
"Return a tuple containing the names of method-like functions declared in the"
" class."
msgstr ""
"Returnerar en tupel som innehåller namnen på de metodliknande funktioner som"
" deklarerats i klassen."

#: ../../library/symtable.rst:187
msgid ""
"Here, the term 'method' designates *any* function defined in the class body "
"via :keyword:`def` or :keyword:`async def`."
msgstr ""
"Här betecknar termen \"metod\" *alla* funktioner som definieras i klassens "
"kropp via :keyword:`def` eller :keyword:`async def`."

#: ../../library/symtable.rst:190
msgid ""
"Functions defined in a deeper scope (e.g., in an inner class) are not picked"
" up by :meth:`get_methods`."
msgstr ""
"Funktioner som definieras i ett djupare scope (t.ex. i en inre klass) fångas"
" inte upp av :meth:`get_methods`."

#: ../../library/symtable.rst:193
msgid "For example:"
msgstr "Till exempel:"

#: ../../library/symtable.rst:215
msgid ""
"Although ``A().f()`` raises :exc:`TypeError` at runtime, ``A.f`` is still "
"considered as a method-like function."
msgstr ""
"Även om ``A().f()`` ger upphov till :exc:`TypeError` vid körning, betraktas "
"``A.f`` fortfarande som en metodliknande funktion."

#: ../../library/symtable.rst:220
msgid ""
"An entry in a :class:`SymbolTable` corresponding to an identifier in the "
"source.  The constructor is not public."
msgstr ""
"En post i en :class:`SymbolTable` som motsvarar en identifierare i källan.  "
"Konstruktören är inte publik."

#: ../../library/symtable.rst:225
msgid "Return the symbol's name."
msgstr "Returnera symbolens namn."

#: ../../library/symtable.rst:229
msgid "Return ``True`` if the symbol is used in its block."
msgstr "Returnerar ``True`` om symbolen används i sitt block."

#: ../../library/symtable.rst:233
msgid "Return ``True`` if the symbol is created from an import statement."
msgstr "Returnerar ``True`` om symbolen är skapad från en importförklaring."

#: ../../library/symtable.rst:237
msgid "Return ``True`` if the symbol is a parameter."
msgstr "Returnerar ``True`` om symbolen är en parameter."

#: ../../library/symtable.rst:241
msgid "Return ``True`` if the symbol is global."
msgstr "Returnerar ``True`` om symbolen är global."

#: ../../library/symtable.rst:245
msgid "Return ``True`` if the symbol is nonlocal."
msgstr "Returnerar ``True`` om symbolen är icke-lokal."

#: ../../library/symtable.rst:249
msgid ""
"Return ``True`` if the symbol is declared global with a global statement."
msgstr ""
"Returnerar ``True`` om symbolen är globalförklarad med en global-sats."

#: ../../library/symtable.rst:253
msgid "Return ``True`` if the symbol is local to its block."
msgstr "Returnerar ``True`` om symbolen är lokal för sitt block."

#: ../../library/symtable.rst:257
msgid "Return ``True`` if the symbol is annotated."
msgstr "Returnerar ``True`` om symbolen är annoterad."

#: ../../library/symtable.rst:263
msgid ""
"Return ``True`` if the symbol is referenced in its block, but not assigned "
"to."
msgstr ""
"Returnerar ``True`` om symbolen är refererad i sitt block, men inte "
"tilldelad."

#: ../../library/symtable.rst:268
msgid "Return ``True`` if the symbol is assigned to in its block."
msgstr "Returnerar ``True`` om symbolen är tilldelad i sitt block."

#: ../../library/symtable.rst:272
msgid "Return ``True`` if name binding introduces new namespace."
msgstr "Returnerar ``True`` om namnbindningen introducerar en ny namnrymd."

#: ../../library/symtable.rst:274
msgid ""
"If the name is used as the target of a function or class statement, this "
"will be true."
msgstr ""
"Om namnet används som mål för en funktions- eller klassangivelse kommer "
"detta att vara sant."

#: ../../library/symtable.rst:277
msgid "For example::"
msgstr "Till exempel::"

#: ../../library/symtable.rst:279
msgid ""
">>> table = symtable.symtable(\"def some_func(): pass\", \"string\", \"exec\")\n"
">>> table.lookup(\"some_func\").is_namespace()\n"
"True"
msgstr ""
">>> table = symtable.symtable(\"def some_func(): pass\", \"string\", \"exec\")\n"
">>> table.lookup(\"some_func\").is_namespace()\n"
"True"

#: ../../library/symtable.rst:283
msgid ""
"Note that a single name can be bound to multiple objects.  If the result is "
"``True``, the name may also be bound to other objects, like an int or list, "
"that does not introduce a new namespace."
msgstr ""
"Observera att ett enda namn kan vara bundet till flera objekt.  Om "
"resultatet är ``True`` kan namnet också bindas till andra objekt, t.ex. en "
"int eller list, vilket inte innebär att ett nytt namnrymd introduceras."

#: ../../library/symtable.rst:289
msgid "Return a list of namespaces bound to this name."
msgstr "Returnerar en lista över namnrymder som är bundna till detta namn."

#: ../../library/symtable.rst:293
msgid ""
"Return the namespace bound to this name. If more than one or no namespace is"
" bound to this name, a :exc:`ValueError` is raised."
msgstr ""
"Returnerar namnrymden som är knuten till detta namn. Om mer än en eller "
"ingen namnrymd är bunden till detta namn, kommer ett :exc:`ValueError` att "
"uppstå."

#: ../../library/symtable.rst:300
msgid "Command-Line Usage"
msgstr "Användning av kommandoraden"

#: ../../library/symtable.rst:304
msgid ""
"The :mod:`symtable` module can be executed as a script from the command "
"line."
msgstr "Modulen :mod:`symtable` kan köras som ett skript från kommandoraden."

#: ../../library/symtable.rst:306
msgid "python -m symtable [infile...]"
msgstr "python -m symtable [infile...]"

#: ../../library/symtable.rst:310
msgid ""
"Symbol tables are generated for the specified Python source files and dumped"
" to stdout. If no input file is specified, the content is read from stdin."
msgstr ""
"Symboltabeller genereras för de angivna Python-källfilerna och dumpas till "
"stdout. Om ingen indatafil anges läses innehållet från stdin."
