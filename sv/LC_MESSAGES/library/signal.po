# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# python-doc bot, 2025
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.10\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-10-17 17:19+0000\n"
"PO-Revision-Date: 2025-09-22 15:58+0000\n"
"Last-Translator: python-doc bot, 2025\n"
"Language-Team: Swedish (https://app.transifex.com/python-doc/teams/5390/"
"sv/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: sv\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"

#: ../../library/signal.rst:2
msgid ":mod:`signal` --- Set handlers for asynchronous events"
msgstr ""

#: ../../library/signal.rst:7
msgid "**Source code:** :source:`Lib/signal.py`"
msgstr "**Källkod:** :source:`Lib/signal.py`"

#: ../../library/signal.rst:11
msgid "This module provides mechanisms to use signal handlers in Python."
msgstr ""
"Denna modul tillhandahåller mekanismer för att använda signalhanterare i "
"Python."

#: ../../library/signal.rst:15
msgid "General rules"
msgstr "Allmänna regler"

#: ../../library/signal.rst:17
msgid ""
"The :func:`signal.signal` function allows defining custom handlers to be "
"executed when a signal is received.  A small number of default handlers are "
"installed: :const:`SIGPIPE` is ignored (so write errors on pipes and sockets "
"can be reported as ordinary Python exceptions) and :const:`SIGINT` is "
"translated into a :exc:`KeyboardInterrupt` exception if the parent process "
"has not changed it."
msgstr ""
"Funktionen :func:`signal.signal` gör det möjligt att definiera anpassade "
"hanterare som ska köras när en signal tas emot.  Ett litet antal "
"standardhanterare är installerade: :const:`SIGPIPE` ignoreras (så att "
"skrivfel på pipes och sockets kan rapporteras som vanliga Python-undantag) "
"och :const:`SIGINT` översätts till ett :exc:`KeyboardInterrupt`\\-undantag "
"om den överordnade processen inte har ändrat det."

#: ../../library/signal.rst:24
msgid ""
"A handler for a particular signal, once set, remains installed until it is "
"explicitly reset (Python emulates the BSD style interface regardless of the "
"underlying implementation), with the exception of the handler for :const:"
"`SIGCHLD`, which follows the underlying implementation."
msgstr ""
"En hanterare för en viss signal, när den väl är inställd, förblir "
"installerad tills den uttryckligen återställs (Python emulerar BSD-"
"stilgränssnittet oavsett den underliggande implementeringen), med undantag "
"för hanteraren för :const:`SIGCHLD`, som följer den underliggande "
"implementeringen."

#: ../../library/signal.rst:31
msgid "Execution of Python signal handlers"
msgstr "Exekvering av Python-signalhanterare"

#: ../../library/signal.rst:33
msgid ""
"A Python signal handler does not get executed inside the low-level (C) "
"signal handler.  Instead, the low-level signal handler sets a flag which "
"tells the :term:`virtual machine` to execute the corresponding Python signal "
"handler at a later point(for example at the next :term:`bytecode` "
"instruction). This has consequences:"
msgstr ""
"En Python-signalhanterare exekveras inte inuti lågnivåsignalhanteraren (C).  "
"Istället sätter signalhanteraren på låg nivå en flagga som talar om för :"
"term:`virtual machine` att exekvera motsvarande Python-signalhanterare vid "
"ett senare tillfälle (till exempel vid nästa :term:`bytecode`\\-"
"instruktion). Detta har konsekvenser:"

#: ../../library/signal.rst:39
msgid ""
"It makes little sense to catch synchronous errors like :const:`SIGFPE` or :"
"const:`SIGSEGV` that are caused by an invalid operation in C code.  Python "
"will return from the signal handler to the C code, which is likely to raise "
"the same signal again, causing Python to apparently hang.  From Python 3.3 "
"onwards, you can use the :mod:`faulthandler` module to report on synchronous "
"errors."
msgstr ""
"Det är meningslöst att fånga synkrona fel som :const:`SIGFPE` eller :const:"
"`SIGSEGV` som orsakas av en ogiltig operation i C-koden.  Python kommer att "
"återvända från signalhanteraren till C-koden, som sannolikt kommer att ge "
"upphov till samma signal igen, vilket gör att Python uppenbarligen hänger "
"sig.  Från och med Python 3.3 och framåt kan du använda modulen :mod:"
"`faulthandler` för att rapportera synkrona fel."

#: ../../library/signal.rst:46
msgid ""
"A long-running calculation implemented purely in C (such as regular "
"expression matching on a large body of text) may run uninterrupted for an "
"arbitrary amount of time, regardless of any signals received.  The Python "
"signal handlers will be called when the calculation finishes."
msgstr ""
"En långdragen beräkning som implementeras enbart i C (t.ex. matchning av "
"reguljära uttryck i en stor textmassa) kan köras oavbrutet under godtycklig "
"tid, oavsett vilka signaler som tas emot.  Pythons signalhanterare kommer "
"att anropas när beräkningen är klar."

#: ../../library/signal.rst:51
msgid ""
"If the handler raises an exception, it will be raised \"out of thin air\" in "
"the main thread. See the :ref:`note below <handlers-and-exceptions>` for a "
"discussion."
msgstr ""
"Om hanteraren skapar ett undantag kommer det att skapas \"ur tomma intet\" i "
"huvudtråden. Se :ref:`noten nedan <handlers-and-exceptions>` för en "
"diskussion."

#: ../../library/signal.rst:59
msgid "Signals and threads"
msgstr "Signaler och trådar"

#: ../../library/signal.rst:61
msgid ""
"Python signal handlers are always executed in the main Python thread of the "
"main interpreter, even if the signal was received in another thread.  This "
"means that signals can't be used as a means of inter-thread communication.  "
"You can use the synchronization primitives from the :mod:`threading` module "
"instead."
msgstr ""
"Pythons signalhanterare exekveras alltid i huvudtolkens Python-tråd, även om "
"signalen mottogs i en annan tråd.  Detta innebär att signaler inte kan "
"användas som ett medel för kommunikation mellan trådar.  Du kan använda "
"synkroniseringsprimitiven från modulen :mod:`threading` istället."

#: ../../library/signal.rst:66
msgid ""
"Besides, only the main thread of the main interpreter is allowed to set a "
"new signal handler."
msgstr ""
"Dessutom är det bara huvudtråden i huvudtolken som får ställa in en ny "
"signalhanterare."

#: ../../library/signal.rst:70
msgid "Module contents"
msgstr "Modulens innehåll"

#: ../../library/signal.rst:72
msgid ""
"signal (SIG*), handler (:const:`SIG_DFL`, :const:`SIG_IGN`) and sigmask (:"
"const:`SIG_BLOCK`, :const:`SIG_UNBLOCK`, :const:`SIG_SETMASK`) related "
"constants listed below were turned into :class:`enums <enum.IntEnum>`. :func:"
"`getsignal`, :func:`pthread_sigmask`, :func:`sigpending` and :func:`sigwait` "
"functions return human-readable :class:`enums <enum.IntEnum>`."
msgstr ""

#: ../../library/signal.rst:82
msgid "The variables defined in the :mod:`signal` module are:"
msgstr "De variabler som definieras i modulen :mod:`signal` är:"

#: ../../library/signal.rst:87
msgid ""
"This is one of two standard signal handling options; it will simply perform "
"the default function for the signal.  For example, on most systems the "
"default action for :const:`SIGQUIT` is to dump core and exit, while the "
"default action for :const:`SIGCHLD` is to simply ignore it."
msgstr ""
"Detta är ett av två standardalternativ för signalhantering; det kommer helt "
"enkelt att utföra standardfunktionen för signalen.  På de flesta system är "
"till exempel standardåtgärden för :const:`SIGQUIT` att dumpa kärnan och "
"avsluta, medan standardåtgärden för :const:`SIGCHLD` är att helt enkelt "
"ignorera den."

#: ../../library/signal.rst:95
msgid ""
"This is another standard signal handler, which will simply ignore the given "
"signal."
msgstr ""
"Detta är en annan standardsignalhanterare, som helt enkelt ignorerar den "
"givna signalen."

#: ../../library/signal.rst:101
msgid "Abort signal from :manpage:`abort(3)`."
msgstr "Avbrottssignal från :manpage:`abort(3)`."

#: ../../library/signal.rst:105
msgid "Timer signal from :manpage:`alarm(2)`."
msgstr "Timersignal från :manpage:`alarm(2)`."

#: ../../library/signal.rst:107 ../../library/signal.rst:119
#: ../../library/signal.rst:125 ../../library/signal.rst:135
#: ../../library/signal.rst:149 ../../library/signal.rst:167
#: ../../library/signal.rst:175 ../../library/signal.rst:189
#: ../../library/signal.rst:195 ../../library/signal.rst:201
#: ../../library/signal.rst:452 ../../library/signal.rst:459
msgid ":ref:`Availability <availability>`: Unix."
msgstr ""

#: ../../library/signal.rst:111
msgid "Interrupt from keyboard (CTRL + BREAK)."
msgstr "Avbrott från tangentbordet (CTRL + BREAK)."

#: ../../library/signal.rst:113 ../../library/signal.rst:220
#: ../../library/signal.rst:230
msgid ":ref:`Availability <availability>`: Windows."
msgstr ""

#: ../../library/signal.rst:117
msgid "Bus error (bad memory access)."
msgstr "Bussfel (dålig minnesåtkomst)."

#: ../../library/signal.rst:123
msgid "Child process stopped or terminated."
msgstr "Barnprocessen stoppades eller avslutades."

#: ../../library/signal.rst:129
msgid "Alias to :data:`SIGCHLD`."
msgstr "Alias till :data:`SIGCHLD`."

#: ../../library/signal.rst:133
msgid "Continue the process if it is currently stopped"
msgstr "Fortsätt processen om den för närvarande är stoppad"

#: ../../library/signal.rst:139
msgid "Floating-point exception. For example, division by zero."
msgstr "Undantag för flyttal. Till exempel division med noll."

#: ../../library/signal.rst:142
msgid ""
":exc:`ZeroDivisionError` is raised when the second argument of a division or "
"modulo operation is zero."
msgstr ""
":exc:`ZeroDivisionError` uppstår när det andra argumentet i en divisions- "
"eller modulooperation är noll."

#: ../../library/signal.rst:147
msgid ""
"Hangup detected on controlling terminal or death of controlling process."
msgstr ""
"Upphängning upptäckt på styrande terminal eller död i styrande process."

#: ../../library/signal.rst:153
msgid "Illegal instruction."
msgstr "Olaglig instruktion."

#: ../../library/signal.rst:157
msgid "Interrupt from keyboard (CTRL + C)."
msgstr "Avbrott från tangentbordet (CTRL + C)."

#: ../../library/signal.rst:159
msgid "Default action is to raise :exc:`KeyboardInterrupt`."
msgstr "Standardåtgärden är att skapa :exc:`KeyboardInterrupt`."

#: ../../library/signal.rst:163
msgid "Kill signal."
msgstr "Dödssignal."

#: ../../library/signal.rst:165
msgid "It cannot be caught, blocked, or ignored."
msgstr "Den kan inte fångas, blockeras eller ignoreras."

#: ../../library/signal.rst:171
msgid "Broken pipe: write to pipe with no readers."
msgstr "Trasigt rör: skriv till ett rör utan läsare."

#: ../../library/signal.rst:173
msgid "Default action is to ignore the signal."
msgstr "Standardåtgärden är att ignorera signalen."

#: ../../library/signal.rst:179
msgid "Segmentation fault: invalid memory reference."
msgstr "Segmenteringsfel: ogiltig minnesreferens."

#: ../../library/signal.rst:183
msgid "Termination signal."
msgstr "Signal för avslutning."

#: ../../library/signal.rst:187
msgid "User-defined signal 1."
msgstr "Användardefinierad signal 1."

#: ../../library/signal.rst:193
msgid "User-defined signal 2."
msgstr "Användardefinierad signal 2."

#: ../../library/signal.rst:199
msgid "Window resize signal."
msgstr "Signal för ändring av fönsterstorlek."

#: ../../library/signal.rst:205
msgid ""
"All the signal numbers are defined symbolically.  For example, the hangup "
"signal is defined as :const:`signal.SIGHUP`; the variable names are "
"identical to the names used in C programs, as found in ``<signal.h>``.  The "
"Unix man page for ':c:func:`signal`' lists the existing signals (on some "
"systems this is :manpage:`signal(2)`, on others the list is in :manpage:"
"`signal(7)`). Note that not all systems define the same set of signal names; "
"only those names defined by the system are defined by this module."
msgstr ""
"Alla signalnummer är symboliskt definierade.  Till exempel definieras hangup-"
"signalen som :const:`signal.SIGHUP`; variabelnamnen är identiska med de namn "
"som används i C-program och som finns i ``<signal.h>``.  Unix man page för ':"
"c:func:`signal`' listar de befintliga signalerna (på vissa system är detta :"
"manpage:`signal(2)`, på andra finns listan i :manpage:`signal(7)`). "
"Observera att inte alla system definierar samma uppsättning signalnamn; "
"endast de namn som definieras av systemet definieras av den här modulen."

#: ../../library/signal.rst:216
msgid ""
"The signal corresponding to the :kbd:`Ctrl+C` keystroke event. This signal "
"can only be used with :func:`os.kill`."
msgstr ""
"Den signal som motsvarar händelsen :kbd:`Ctrl+C` tangenttryckning. Denna "
"signal kan endast användas med :func:`os.kill`."

#: ../../library/signal.rst:226
msgid ""
"The signal corresponding to the :kbd:`Ctrl+Break` keystroke event. This "
"signal can only be used with :func:`os.kill`."
msgstr ""
"Den signal som motsvarar händelsen :kbd:`Ctrl+Break` tangenttryckning. Denna "
"signal kan endast användas med :func:`os.kill`."

#: ../../library/signal.rst:236
msgid "One more than the number of the highest signal number."
msgstr ""

#: ../../library/signal.rst:241
msgid ""
"Decrements interval timer in real time, and delivers :const:`SIGALRM` upon "
"expiration."
msgstr ""
"Minskar intervalltimern i realtid och levererar :const:`SIGALRM` när den "
"löper ut."

#: ../../library/signal.rst:247
msgid ""
"Decrements interval timer only when the process is executing, and delivers "
"SIGVTALRM upon expiration."
msgstr ""
"Minskar intervalltimern endast när processen körs och levererar SIGVTALRM "
"när den löper ut."

#: ../../library/signal.rst:253
msgid ""
"Decrements interval timer both when the process executes and when the system "
"is executing on behalf of the process. Coupled with ITIMER_VIRTUAL, this "
"timer is usually used to profile the time spent by the application in user "
"and kernel space. SIGPROF is delivered upon expiration."
msgstr ""
"Minskar intervalltimern både när processen körs och när systemet körs på "
"uppdrag av processen. Tillsammans med ITIMER_VIRTUAL används den här timern "
"vanligtvis för att profilera den tid som programmet spenderar i användar- "
"och kärnutrymmet. SIGPROF levereras när den löper ut."

#: ../../library/signal.rst:261
msgid ""
"A possible value for the *how* parameter to :func:`pthread_sigmask` "
"indicating that signals are to be blocked."
msgstr ""
"Ett möjligt värde för parametern *how* i :func:`pthread_sigmask` som anger "
"att signaler ska blockeras."

#: ../../library/signal.rst:268
msgid ""
"A possible value for the *how* parameter to :func:`pthread_sigmask` "
"indicating that signals are to be unblocked."
msgstr ""
"Ett möjligt värde för *how*-parametern till :func:`pthread_sigmask` som "
"anger att signaler ska avblockeras."

#: ../../library/signal.rst:275
msgid ""
"A possible value for the *how* parameter to :func:`pthread_sigmask` "
"indicating that the signal mask is to be replaced."
msgstr ""
"Ett möjligt värde för *how*-parametern till :func:`pthread_sigmask` som "
"anger att signalmasken ska ersättas."

#: ../../library/signal.rst:281
msgid "The :mod:`signal` module defines one exception:"
msgstr "Modulen :mod:`signal` definierar ett undantag:"

#: ../../library/signal.rst:285
msgid ""
"Raised to signal an error from the underlying :func:`setitimer` or :func:"
"`getitimer` implementation. Expect this error if an invalid interval timer "
"or a negative time is passed to :func:`setitimer`. This error is a subtype "
"of :exc:`OSError`."
msgstr ""
"Utlöses för att signalera ett fel från den underliggande :func:`setitimer` "
"eller :func:`getitimer` implementationen. Förvänta dig detta fel om en "
"ogiltig intervalltimer eller en negativ tid skickas till :func:`setitimer`. "
"Detta fel är en subtyp av :exc:`OSError`."

#: ../../library/signal.rst:290
msgid ""
"This error used to be a subtype of :exc:`IOError`, which is now an alias of :"
"exc:`OSError`."
msgstr ""
"Detta fel var tidigare en subtyp av :exc:`IOError`, som nu är ett alias av :"
"exc:`OSError`."

#: ../../library/signal.rst:295
msgid "The :mod:`signal` module defines the following functions:"
msgstr "Modulen :mod:`signal` definierar följande funktioner:"

#: ../../library/signal.rst:300
msgid ""
"If *time* is non-zero, this function requests that a :const:`SIGALRM` signal "
"be sent to the process in *time* seconds. Any previously scheduled alarm is "
"canceled (only one alarm can be scheduled at any time).  The returned value "
"is then the number of seconds before any previously set alarm was to have "
"been delivered. If *time* is zero, no alarm is scheduled, and any scheduled "
"alarm is canceled.  If the return value is zero, no alarm is currently "
"scheduled."
msgstr ""
"Om *time* inte är noll, begär denna funktion att en :const:`SIGALRM`\\-"
"signal skickas till processen om *time* sekunder. Eventuella tidigare "
"schemalagda larm avbryts (endast ett larm kan schemaläggas åt gången).  Det "
"returnerade värdet är då antalet sekunder innan något tidigare inställt larm "
"skulle ha levererats. Om *time* är noll är inget larm schemalagt och ett "
"eventuellt schemalagt larm avbryts.  Om returvärdet är noll är inget larm "
"för närvarande schemalagt."

#: ../../library/signal.rst:308
msgid ""
":ref:`Availability <availability>`: Unix.  See the man page :manpage:"
"`alarm(2)` for further information."
msgstr ""

#: ../../library/signal.rst:313
msgid ""
"Return the current signal handler for the signal *signalnum*. The returned "
"value may be a callable Python object, or one of the special values :const:"
"`signal.SIG_IGN`, :const:`signal.SIG_DFL` or :const:`None`.  Here, :const:"
"`signal.SIG_IGN` means that the signal was previously ignored, :const:"
"`signal.SIG_DFL` means that the default way of handling the signal was "
"previously in use, and ``None`` means that the previous signal handler was "
"not installed from Python."
msgstr ""
"Returnerar den aktuella signalhanteraren för signalen *signalnum*. Det "
"returnerade värdet kan vara ett anropbart Python-objekt eller ett av "
"specialvärdena :const:`signal.SIG_IGN`, :const:`signal.SIG_DFL` eller :const:"
"`None`.  Här betyder :const:`signal.SIG_IGN` att signalen tidigare "
"ignorerades, :const:`signal.SIG_DFL` betyder att standardmetoden för att "
"hantera signalen tidigare användes och ``None`` betyder att den tidigare "
"signalhanteraren inte installerades från Python."

#: ../../library/signal.rst:324
msgid ""
"Return the system description of the signal *signalnum*, such as "
"\"Interrupt\", \"Segmentation fault\", etc. Returns :const:`None` if the "
"signal is not recognized."
msgstr ""

#: ../../library/signal.rst:333
msgid ""
"Return the set of valid signal numbers on this platform.  This can be less "
"than ``range(1, NSIG)`` if some signals are reserved by the system for "
"internal use."
msgstr ""
"Returnerar uppsättningen av giltiga signalnummer på denna plattform.  Detta "
"kan vara mindre än ``range(1, NSIG)`` om vissa signaler är reserverade av "
"systemet för internt bruk."

#: ../../library/signal.rst:342
msgid ""
"Cause the process to sleep until a signal is received; the appropriate "
"handler will then be called.  Returns nothing."
msgstr ""
"Får processen att sova tills en signal tas emot; lämplig hanterare kommer då "
"att anropas.  Returnerar ingenting."

#: ../../library/signal.rst:347
msgid ""
":ref:`Availability <availability>`: Unix.  See the man page :manpage:"
"`signal(2)` for further information."
msgstr ""

#: ../../library/signal.rst:348
msgid ""
"See also :func:`sigwait`, :func:`sigwaitinfo`, :func:`sigtimedwait` and :"
"func:`sigpending`."
msgstr ""
"Se även :func:`sigwait`, :func:`sigwaitinfo`, :func:`sigtimedwait` och :func:"
"`sigpending`."

#: ../../library/signal.rst:354
msgid "Sends a signal to the calling process. Returns nothing."
msgstr "Skickar en signal till den anropande processen. Returnerar ingenting."

#: ../../library/signal.rst:361
msgid ""
"Send signal *sig* to the process referred to by file descriptor *pidfd*. "
"Python does not currently support the *siginfo* parameter; it must be "
"``None``.  The *flags* argument is provided for future extensions; no flag "
"values are currently defined."
msgstr ""
"Skicka signalen *sig* till den process som filbeskrivaren *pidfd* refererar "
"till. Python har för närvarande inte stöd för parametern *siginfo*; den "
"måste vara ``None``.  Argumentet *flags* tillhandahålls för framtida "
"tillägg; inga flaggvärden är för närvarande definierade."

#: ../../library/signal.rst:366
msgid "See the :manpage:`pidfd_send_signal(2)` man page for more information."
msgstr "Se :manpage:`pidfd_send_signal(2)` man page för mer information."

#: ../../library/signal.rst:368
msgid ":ref:`Availability <availability>`: Linux 5.1+"
msgstr ""

#: ../../library/signal.rst:374
msgid ""
"Send the signal *signalnum* to the thread *thread_id*, another thread in the "
"same process as the caller.  The target thread can be executing any code "
"(Python or not).  However, if the target thread is executing the Python "
"interpreter, the Python signal handlers will be :ref:`executed by the main "
"thread of the main interpreter <signals-and-threads>`.  Therefore, the only "
"point of sending a signal to a particular Python thread would be to force a "
"running system call to fail with :exc:`InterruptedError`."
msgstr ""
"Skicka signalen *signalnum* till tråden *thread_id*, en annan tråd i samma "
"process som anroparen.  Måltråden kan exekvera vilken kod som helst (Python "
"eller inte).  Men om måltråden exekverar Python-tolken kommer Python-"
"signalhanterarna att :ref:`exekveras av huvudtråden i huvudtolken <signals-"
"and-threads>`.  Därför skulle den enda poängen med att skicka en signal till "
"en viss Python-tråd vara att tvinga ett pågående systemanrop att misslyckas "
"med :exc:`InterruptedError`."

#: ../../library/signal.rst:382
msgid ""
"Use :func:`threading.get_ident()` or the :attr:`~threading.Thread.ident` "
"attribute of :class:`threading.Thread` objects to get a suitable value for "
"*thread_id*."
msgstr ""

#: ../../library/signal.rst:386
msgid ""
"If *signalnum* is 0, then no signal is sent, but error checking is still "
"performed; this can be used to check if the target thread is still running."
msgstr ""
"Om *signalnum* är 0 skickas ingen signal, men felkontroll utförs ändå; detta "
"kan användas för att kontrollera om måltråden fortfarande körs."

#: ../../library/signal.rst:389
msgid ""
"Raises an :ref:`auditing event <auditing>` ``signal.pthread_kill`` with "
"arguments ``thread_id``, ``signalnum``."
msgstr ""
"Utlöser en :ref:`auditing event <auditing>` ``signal.pthread_kill`` med "
"argumenten ``thread_id``, ``signalnum``."

#: ../../library/signal.rst:393
msgid ""
":ref:`Availability <availability>`: Unix.  See the man page :manpage:"
"`pthread_kill(3)` for further information."
msgstr ""

#: ../../library/signal.rst:394
msgid "See also :func:`os.kill`."
msgstr "Se även :func:`os.kill`."

#: ../../library/signal.rst:401
msgid ""
"Fetch and/or change the signal mask of the calling thread.  The signal mask "
"is the set of signals whose delivery is currently blocked for the caller. "
"Return the old signal mask as a set of signals."
msgstr ""
"Hämta och/eller ändra signalmasken för den anropande tråden.  Signalmasken "
"är den uppsättning signaler vars leverans för närvarande är blockerad för "
"den anropande tråden. Returnera den gamla signalmasken som en uppsättning "
"signaler."

#: ../../library/signal.rst:405
msgid ""
"The behavior of the call is dependent on the value of *how*, as follows."
msgstr "Anropets beteende är beroende av värdet på *how*, enligt följande."

#: ../../library/signal.rst:407
msgid ""
":data:`SIG_BLOCK`: The set of blocked signals is the union of the current "
"set and the *mask* argument."
msgstr ""
":data:`SIG_BLOCK`: Uppsättningen av blockerade signaler är en förening av "
"den aktuella uppsättningen och argumentet *mask*."

#: ../../library/signal.rst:409
msgid ""
":data:`SIG_UNBLOCK`: The signals in *mask* are removed from the current set "
"of blocked signals.  It is permissible to attempt to unblock a signal which "
"is not blocked."
msgstr ""
":data:`SIG_UNBLOCK`: Signalerna i *mask* tas bort från den aktuella "
"uppsättningen av blockerade signaler.  Det är tillåtet att försöka "
"avblockera en signal som inte är blockerad."

#: ../../library/signal.rst:412
msgid ""
":data:`SIG_SETMASK`: The set of blocked signals is set to the *mask* "
"argument."
msgstr ""
":data:`SIG_SETMASK`: Uppsättningen av blockerade signaler ställs in till "
"argumentet *mask*."

#: ../../library/signal.rst:415
msgid ""
"*mask* is a set of signal numbers (e.g. {:const:`signal.SIGINT`, :const:"
"`signal.SIGTERM`}). Use :func:`~signal.valid_signals` for a full mask "
"including all signals."
msgstr ""
"*mask* är en uppsättning signalnummer (t.ex. {:const:`signal.SIGINT`, :const:"
"`signal.SIGTERM`}). Använd :func:`~signal.valid_signals` för en fullständig "
"mask som inkluderar alla signaler."

#: ../../library/signal.rst:419
msgid ""
"For example, ``signal.pthread_sigmask(signal.SIG_BLOCK, [])`` reads the "
"signal mask of the calling thread."
msgstr ""
"Till exempel läser ``signal.pthread_sigmask(signal.SIG_BLOCK, [])`` "
"signalmasken för den anropande tråden."

#: ../../library/signal.rst:422
msgid ":data:`SIGKILL` and :data:`SIGSTOP` cannot be blocked."
msgstr ":data:`SIGKILL` och :data:`SIGSTOP` kan inte blockeras."

#: ../../library/signal.rst:426
msgid ""
":ref:`Availability <availability>`: Unix.  See the man page :manpage:"
"`sigprocmask(2)` and :manpage:`pthread_sigmask(3)` for further information."
msgstr ""

#: ../../library/signal.rst:427
msgid "See also :func:`pause`, :func:`sigpending` and :func:`sigwait`."
msgstr "Se även :func:`pause`, :func:`sigpending` och :func:`sigwait`."

#: ../../library/signal.rst:434
msgid ""
"Sets given interval timer (one of :const:`signal.ITIMER_REAL`, :const:"
"`signal.ITIMER_VIRTUAL` or :const:`signal.ITIMER_PROF`) specified by *which* "
"to fire after *seconds* (float is accepted, different from :func:`alarm`) "
"and after that every *interval* seconds (if *interval* is non-zero). The "
"interval timer specified by *which* can be cleared by setting *seconds* to "
"zero."
msgstr ""
"Ställer in en given intervalltimer (en av :const:`signal.ITIMER_REAL`, :"
"const:`signal.ITIMER_VIRTUAL` eller :const:`signal.ITIMER_PROF`) "
"specificerad av *which* att starta efter *seconds* (float accepteras, "
"skiljer sig från :func:`alarm`) och därefter var *intervall* sekund (om "
"*intervall* inte är noll). Intervalltimern som anges av *which* kan rensas "
"genom att *seconds* sätts till noll."

#: ../../library/signal.rst:441
msgid ""
"When an interval timer fires, a signal is sent to the process. The signal "
"sent is dependent on the timer being used; :const:`signal.ITIMER_REAL` will "
"deliver :const:`SIGALRM`, :const:`signal.ITIMER_VIRTUAL` sends :const:"
"`SIGVTALRM`, and :const:`signal.ITIMER_PROF` will deliver :const:`SIGPROF`."
msgstr ""
"När en intervalltimer startar skickas en signal till processen. Signalen som "
"skickas beror på vilken timer som används; :const:`signal.ITIMER_REAL` "
"kommer att leverera :const:`SIGALRM`, :const:`signal.ITIMER_VIRTUAL` "
"skickar :const:`SIGVTALRM`, och :const:`signal.ITIMER_PROF` kommer att "
"leverera :const:`SIGPROF`."

#: ../../library/signal.rst:447
msgid "The old values are returned as a tuple: (delay, interval)."
msgstr "De gamla värdena returneras som en tupel: (delay, interval)."

#: ../../library/signal.rst:449
msgid ""
"Attempting to pass an invalid interval timer will cause an :exc:"
"`ItimerError`."
msgstr ""
"Försök att skicka en ogiltig intervalltimer kommer att orsaka ett :exc:"
"`ItimerError`."

#: ../../library/signal.rst:457
msgid "Returns current value of a given interval timer specified by *which*."
msgstr ""
"Returnerar aktuellt värde för en given intervalltimer som specificeras av "
"*which*."

#: ../../library/signal.rst:464
msgid ""
"Set the wakeup file descriptor to *fd*.  When a signal is received, the "
"signal number is written as a single byte into the fd.  This can be used by "
"a library to wakeup a poll or select call, allowing the signal to be fully "
"processed."
msgstr ""

#: ../../library/signal.rst:469
msgid ""
"The old wakeup fd is returned (or -1 if file descriptor wakeup was not "
"enabled).  If *fd* is -1, file descriptor wakeup is disabled. If not -1, "
"*fd* must be non-blocking.  It is up to the library to remove any bytes from "
"*fd* before calling poll or select again."
msgstr ""
"Den gamla wakeup fd returneras (eller -1 om wakeup för filbeskrivare inte "
"var aktiverad).  Om *fd* är -1 inaktiveras väckning av filbeskrivare. Om "
"*fd* inte är -1 måste den vara icke-blockerande.  Det är upp till "
"biblioteket att ta bort eventuella byte från *fd* innan poll eller select "
"anropas igen."

#: ../../library/signal.rst:474 ../../library/signal.rst:528
msgid ""
"When threads are enabled, this function can only be called from :ref:`the "
"main thread of the main interpreter <signals-and-threads>`; attempting to "
"call it from other threads will cause a :exc:`ValueError` exception to be "
"raised."
msgstr ""
"När trådar är aktiverade kan den här funktionen endast anropas från :ref:"
"`huvudtråden i huvudtolken <signals-and-threads>`; om du försöker anropa den "
"från andra trådar kommer ett :exc:`ValueError`\\-undantag att uppstå."

#: ../../library/signal.rst:479
msgid ""
"There are two common ways to use this function. In both approaches, you use "
"the fd to wake up when a signal arrives, but then they differ in how they "
"determine *which* signal or signals have arrived."
msgstr ""
"Det finns två vanliga sätt att använda den här funktionen. I båda fallen "
"använder man fd för att vakna när en signal kommer, men sedan skiljer de sig "
"åt i hur de avgör *vilken* signal eller vilka signaler som har kommit."

#: ../../library/signal.rst:484
msgid ""
"In the first approach, we read the data out of the fd's buffer, and the byte "
"values give you the signal numbers. This is simple, but in rare cases it can "
"run into a problem: generally the fd will have a limited amount of buffer "
"space, and if too many signals arrive too quickly, then the buffer may "
"become full, and some signals may be lost. If you use this approach, then "
"you should set ``warn_on_full_buffer=True``, which will at least cause a "
"warning to be printed to stderr when signals are lost."
msgstr ""
"I den första metoden läser vi ut data ur fd:ns buffert, och bytevärdena ger "
"dig signalnumren. Det här är enkelt, men i sällsynta fall kan det uppstå "
"problem: i allmänhet har fd en begränsad mängd buffertutrymme, och om för "
"många signaler kommer för snabbt kan bufferten bli full och vissa signaler "
"kan gå förlorade. Om du använder det här tillvägagångssättet bör du ställa "
"in ``warn_on_full_buffer=True``, vilket åtminstone kommer att leda till att "
"en varning skrivs ut till stderr när signaler går förlorade."

#: ../../library/signal.rst:493
msgid ""
"In the second approach, we use the wakeup fd *only* for wakeups, and ignore "
"the actual byte values. In this case, all we care about is whether the fd's "
"buffer is empty or non-empty; a full buffer doesn't indicate a problem at "
"all. If you use this approach, then you should set "
"``warn_on_full_buffer=False``, so that your users are not confused by "
"spurious warning messages."
msgstr ""
"I det andra tillvägagångssättet använder vi wakeup fd *endast* för "
"väckningar och ignorerar de faktiska bytevärdena. I det här fallet är allt "
"vi bryr oss om huruvida fd:s buffert är tom eller inte; en full buffert "
"indikerar inte alls något problem. Om du använder det här "
"tillvägagångssättet bör du ställa in ``warn_on_full_buffer=False``, så att "
"dina användare inte förvirras av falska varningsmeddelanden."

#: ../../library/signal.rst:500
msgid "On Windows, the function now also supports socket handles."
msgstr "I Windows stöder funktionen nu även socket-handtag."

#: ../../library/signal.rst:503
msgid "Added ``warn_on_full_buffer`` parameter."
msgstr "Lagt till parametern ``warn_on_full_buffer``."

#: ../../library/signal.rst:508
msgid ""
"Change system call restart behaviour: if *flag* is :const:`False`, system "
"calls will be restarted when interrupted by signal *signalnum*, otherwise "
"system calls will be interrupted.  Returns nothing."
msgstr ""
"Ändra beteende för omstart av systemanrop: om *flag* är :const:`False`, "
"kommer systemanrop att startas om när de avbryts av signal *signalnum*, "
"annars kommer systemanrop att avbrytas.  Returnerar ingenting."

#: ../../library/signal.rst:514
msgid ""
":ref:`Availability <availability>`: Unix.  See the man page :manpage:"
"`siginterrupt(3)` for further information."
msgstr ""

#: ../../library/signal.rst:515
msgid ""
"Note that installing a signal handler with :func:`signal` will reset the "
"restart behaviour to interruptible by implicitly calling :c:func:"
"`siginterrupt` with a true *flag* value for the given signal."
msgstr ""

#: ../../library/signal.rst:522
msgid ""
"Set the handler for signal *signalnum* to the function *handler*.  *handler* "
"can be a callable Python object taking two arguments (see below), or one of "
"the special values :const:`signal.SIG_IGN` or :const:`signal.SIG_DFL`.  The "
"previous signal handler will be returned (see the description of :func:"
"`getsignal` above).  (See the Unix man page :manpage:`signal(2)` for further "
"information.)"
msgstr ""
"Ställ in hanteraren för signalen *signalnum* till funktionen *handler*.  "
"*handler* kan vara ett anropbart Python-objekt som tar två argument (se "
"nedan), eller ett av specialvärdena :const:`signal.SIG_IGN` eller :const:"
"`signal.SIG_DFL`.  Den föregående signalhanteraren kommer att returneras (se "
"beskrivningen av :func:`getsignal` ovan).  (Se Unix man page :manpage:"
"`signal(2)` för ytterligare information)"

#: ../../library/signal.rst:533
msgid ""
"The *handler* is called with two arguments: the signal number and the "
"current stack frame (``None`` or a frame object; for a description of frame "
"objects, see the :ref:`description in the type hierarchy <frame-objects>` or "
"see the attribute descriptions in the :mod:`inspect` module)."
msgstr ""
"*Handler* anropas med två argument: signalnumret och den aktuella stackramen "
"(``None`` eller ett ramobjekt; för en beskrivning av ramobjekt, se :ref:"
"`description i typhierarkin <frame-objects>` eller se "
"attributbeskrivningarna i modulen :mod:`inspect`)."

#: ../../library/signal.rst:538
msgid ""
"On Windows, :func:`signal` can only be called with :const:`SIGABRT`, :const:"
"`SIGFPE`, :const:`SIGILL`, :const:`SIGINT`, :const:`SIGSEGV`, :const:"
"`SIGTERM`, or :const:`SIGBREAK`. A :exc:`ValueError` will be raised in any "
"other case. Note that not all systems define the same set of signal names; "
"an :exc:`AttributeError` will be raised if a signal name is not defined as "
"``SIG*`` module level constant."
msgstr ""
"I Windows kan :func:`signal` endast anropas med :const:`SIGABRT`, :const:"
"`SIGFPE`, :const:`SIGILL`, :const:`SIGINT`, :const:`SIGSEGV`, :const:"
"`SIGTERM` eller :const:`SIGBREAK`. Ett :exc:`ValueError` kommer att uppstå i "
"alla andra fall. Observera att inte alla system definierar samma uppsättning "
"signalnamn; ett :exc:`AttributeError` kommer att uppstå om ett signalnamn "
"inte är definierat som ``SIG*`` konstant på modulnivå."

#: ../../library/signal.rst:549
msgid ""
"Examine the set of signals that are pending for delivery to the calling "
"thread (i.e., the signals which have been raised while blocked).  Return the "
"set of the pending signals."
msgstr ""
"Undersök uppsättningen signaler som väntar på att levereras till den "
"anropande tråden (dvs. de signaler som har skapats medan de blockerats).  "
"Returnera uppsättningen av de väntande signalerna."

#: ../../library/signal.rst:555
msgid ""
":ref:`Availability <availability>`: Unix.  See the man page :manpage:"
"`sigpending(2)` for further information."
msgstr ""

#: ../../library/signal.rst:556
msgid "See also :func:`pause`, :func:`pthread_sigmask` and :func:`sigwait`."
msgstr "Se även :func:`pause`, :func:`pthread_sigmask` och :func:`sigwait`."

#: ../../library/signal.rst:563
msgid ""
"Suspend execution of the calling thread until the delivery of one of the "
"signals specified in the signal set *sigset*.  The function accepts the "
"signal (removes it from the pending list of signals), and returns the signal "
"number."
msgstr ""
"Avbryter exekveringen av den anropande tråden tills en av de signaler som "
"anges i signaluppsättningen *sigset* har levererats.  Funktionen accepterar "
"signalen (tar bort den från listan över väntande signaler) och returnerar "
"signalnumret."

#: ../../library/signal.rst:569
msgid ""
":ref:`Availability <availability>`: Unix.  See the man page :manpage:"
"`sigwait(3)` for further information."
msgstr ""

#: ../../library/signal.rst:570
msgid ""
"See also :func:`pause`, :func:`pthread_sigmask`, :func:`sigpending`, :func:"
"`sigwaitinfo` and :func:`sigtimedwait`."
msgstr ""
"Se även :func:`pause`, :func:`pthread_sigmask`, :func:`sigpending`, :func:"
"`sigwaitinfo` och :func:`sigtimedwait`."

#: ../../library/signal.rst:578
msgid ""
"Suspend execution of the calling thread until the delivery of one of the "
"signals specified in the signal set *sigset*.  The function accepts the "
"signal and removes it from the pending list of signals. If one of the "
"signals in *sigset* is already pending for the calling thread, the function "
"will return immediately with information about that signal. The signal "
"handler is not called for the delivered signal. The function raises an :exc:"
"`InterruptedError` if it is interrupted by a signal that is not in *sigset*."
msgstr ""
"Avbryt exekveringen av den anropande tråden tills en av de signaler som "
"anges i signaluppsättningen *sigset* har levererats.  Funktionen accepterar "
"signalen och tar bort den från listan över väntande signaler. Om en av "
"signalerna i *sigset* redan är väntande för den anropande tråden, kommer "
"funktionen att returnera omedelbart med information om den signalen. "
"Signalhanteraren anropas inte för den levererade signalen. Funktionen ger "
"upphov till ett :exc:`InterruptedError` om den avbryts av en signal som inte "
"finns i *sigset*."

#: ../../library/signal.rst:587
msgid ""
"The return value is an object representing the data contained in the :c:type:"
"`siginfo_t` structure, namely: :attr:`si_signo`, :attr:`si_code`, :attr:"
"`si_errno`, :attr:`si_pid`, :attr:`si_uid`, :attr:`si_status`, :attr:"
"`si_band`."
msgstr ""
"Returvärdet är ett objekt som representerar de data som finns i strukturen :"
"c:type:`siginfo_t`, nämligen: :attr:`si_signo`, :attr:`si_code`, :attr:"
"`si_errno`, :attr:`si_pid`, :attr:`si_uid`, :attr:`si_status`, :attr:"
"`si_band`."

#: ../../library/signal.rst:594
msgid ""
":ref:`Availability <availability>`: Unix.  See the man page :manpage:"
"`sigwaitinfo(2)` for further information."
msgstr ""

#: ../../library/signal.rst:595
msgid "See also :func:`pause`, :func:`sigwait` and :func:`sigtimedwait`."
msgstr "Se även :func:`pause`, :func:`sigwait` och :func:`sigtimedwait`."

#: ../../library/signal.rst:599
msgid ""
"The function is now retried if interrupted by a signal not in *sigset* and "
"the signal handler does not raise an exception (see :pep:`475` for the "
"rationale)."
msgstr ""
"Funktionen prövas nu igen om den avbryts av en signal som inte finns i "
"*sigset* och signalhanteraren inte ger upphov till ett undantag (se :pep:"
"`475` för motivering)."

#: ../../library/signal.rst:607
msgid ""
"Like :func:`sigwaitinfo`, but takes an additional *timeout* argument "
"specifying a timeout. If *timeout* is specified as :const:`0`, a poll is "
"performed. Returns :const:`None` if a timeout occurs."
msgstr ""

#: ../../library/signal.rst:613
msgid ""
":ref:`Availability <availability>`: Unix.  See the man page :manpage:"
"`sigtimedwait(2)` for further information."
msgstr ""

#: ../../library/signal.rst:614
msgid "See also :func:`pause`, :func:`sigwait` and :func:`sigwaitinfo`."
msgstr "Se även :func:`pause`, :func:`sigwait` och :func:`sigwaitinfo`."

#: ../../library/signal.rst:618
msgid ""
"The function is now retried with the recomputed *timeout* if interrupted by "
"a signal not in *sigset* and the signal handler does not raise an exception "
"(see :pep:`475` for the rationale)."
msgstr ""
"Funktionen försöker nu igen med den omräknade *timeout* om den avbryts av en "
"signal som inte finns i *sigset* och signalhanteraren inte gör ett undantag "
"(se :pep:`475` för motivering)."

#: ../../library/signal.rst:627
msgid "Example"
msgstr "Exempel"

#: ../../library/signal.rst:629
msgid ""
"Here is a minimal example program. It uses the :func:`alarm` function to "
"limit the time spent waiting to open a file; this is useful if the file is "
"for a serial device that may not be turned on, which would normally cause "
"the :func:`os.open` to hang indefinitely.  The solution is to set a 5-second "
"alarm before opening the file; if the operation takes too long, the alarm "
"signal will be sent, and the handler raises an exception. ::"
msgstr ""
"Här är ett minimalt exempelprogram. Det använder funktionen :func:`alarm` "
"för att begränsa väntetiden för att öppna en fil; detta är användbart om "
"filen är för en seriell enhet som kanske inte är påslagen, vilket normalt "
"skulle få :func:`os.open` att hänga sig på obestämd tid.  Lösningen är att "
"ställa in ett 5-sekunders alarm innan filen öppnas; om operationen tar för "
"lång tid skickas alarmsignalen och hanteraren gör ett undantag. ::"

#: ../../library/signal.rst:652
msgid "Note on SIGPIPE"
msgstr "Anmärkning om SIGPIPE"

#: ../../library/signal.rst:654
msgid ""
"Piping output of your program to tools like :manpage:`head(1)` will cause a :"
"const:`SIGPIPE` signal to be sent to your process when the receiver of its "
"standard output closes early.  This results in an exception like :code:"
"`BrokenPipeError: [Errno 32] Broken pipe`.  To handle this case, wrap your "
"entry point to catch this exception as follows::"
msgstr ""
"Att pipa utdata från ditt program till verktyg som :manpage:`head(1)` kommer "
"att orsaka att en :const:`SIGPIPE`\\-signal skickas till din process när "
"mottagaren av dess standardutdata stängs tidigt.  Detta resulterar i ett "
"undantag som :code:`BrokenPipeError: [Errno 32] Broken pipe`.  För att "
"hantera det här fallet, linda in din ingångspunkt för att fånga det här "
"undantaget enligt följande::"

#: ../../library/signal.rst:681
msgid ""
"Do not set :const:`SIGPIPE`'s disposition to :const:`SIG_DFL` in order to "
"avoid :exc:`BrokenPipeError`.  Doing that would cause your program to exit "
"unexpectedly whenever any socket connection is interrupted while your "
"program is still writing to it."
msgstr ""
"Ställ inte in :const:`SIGPIPE` disposition till :const:`SIG_DFL` för att "
"undvika :exc:`BrokenPipeError`.  Om du gör det kommer ditt program att "
"avslutas oväntat när en socketanslutning avbryts medan ditt program "
"fortfarande skriver till den."

#: ../../library/signal.rst:690
msgid "Note on Signal Handlers and Exceptions"
msgstr "Anmärkning om signalhanterare och undantag"

#: ../../library/signal.rst:692
msgid ""
"If a signal handler raises an exception, the exception will be propagated to "
"the main thread and may be raised after any :term:`bytecode` instruction. "
"Most notably, a :exc:`KeyboardInterrupt` may appear at any point during "
"execution. Most Python code, including the standard library, cannot be made "
"robust against this, and so a :exc:`KeyboardInterrupt` (or any other "
"exception resulting from a signal handler) may on rare occasions put the "
"program in an unexpected state."
msgstr ""
"Om en signalhanterare ger upphov till ett undantag, kommer undantaget att "
"spridas till huvudtråden och kan ges upphov till efter varje :term:"
"`bytecode`\\-instruktion. Mest anmärkningsvärt är att ett :exc:"
"`KeyboardInterrupt` kan dyka upp när som helst under exekveringen. Den mesta "
"Python-koden, inklusive standardbiblioteket, kan inte göras robust mot "
"detta, och därför kan ett :exc:`KeyboardInterrupt` (eller något annat "
"undantag som härrör från en signalhanterare) vid sällsynta tillfällen "
"försätta programmet i ett oväntat tillstånd."

#: ../../library/signal.rst:699
msgid "To illustrate this issue, consider the following code::"
msgstr "För att illustrera detta problem kan du titta på följande kod::"

#: ../../library/signal.rst:716
msgid ""
"For many programs, especially those that merely want to exit on :exc:"
"`KeyboardInterrupt`, this is not a problem, but applications that are "
"complex or require high reliability should avoid raising exceptions from "
"signal handlers. They should also avoid catching :exc:`KeyboardInterrupt` as "
"a means of gracefully shutting down.  Instead, they should install their "
"own :const:`SIGINT` handler. Below is an example of an HTTP server that "
"avoids :exc:`KeyboardInterrupt`::"
msgstr ""
"För många program, speciellt de som bara vill avsluta på :exc:"
"`KeyboardInterrupt`, är detta inget problem, men applikationer som är "
"komplexa eller kräver hög tillförlitlighet bör undvika att skapa undantag "
"från signalhanterare. De bör också undvika att fånga :exc:"
"`KeyboardInterrupt` som ett sätt att stänga av på ett elegant sätt.  "
"Istället bör de installera sin egen :const:`SIGINT`\\-hanterare. Nedan "
"följer ett exempel på en HTTP-server som undviker :exc:`KeyboardInterrupt`::"
