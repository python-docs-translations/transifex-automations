# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# Rafael Fontenelle <rffontenelle@gmail.com>, 2024
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.11\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-01-03 15:28+0000\n"
"PO-Revision-Date: 2023-05-24 02:23+0000\n"
"Last-Translator: Rafael Fontenelle <rffontenelle@gmail.com>, 2024\n"
"Language-Team: Russian (https://app.transifex.com/python-doc/teams/5390/"
"ru/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ru\n"
"Plural-Forms: nplurals=4; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && "
"n%10<=4 && (n%100<12 || n%100>14) ? 1 : n%10==0 || (n%10>=5 && n%10<=9) || "
"(n%100>=11 && n%100<=14)? 2 : 3);\n"

#: ../../whatsnew/3.4.rst:3
msgid "What's New In Python 3.4"
msgstr "Что нового в Python 3.4"

#: ../../whatsnew/3.4.rst:0
msgid "Author"
msgstr "Автор"

#: ../../whatsnew/3.4.rst:5
msgid "R. David Murray <rdmurray@bitdance.com> (Editor)"
msgstr "Р. Дэвид Мюррей <rdmurray@bitdance.com> (редактор)"

#: ../../whatsnew/3.4.rst:63
msgid ""
"This article explains the new features in Python 3.4, compared to 3.3. "
"Python 3.4 was released on March 16, 2014.  For full details, see the "
"`changelog <https://docs.python.org/3.4/whatsnew/changelog.html>`_."
msgstr ""
"В этой статье объясняются новые возможности Python 3.4 по сравнению с "
"версией 3.3. Python 3.4 был выпущен 16 марта 2014 г. Подробную информацию "
"см. в журнале изменений <https://docs.python.org/3.4/whatsnew/changelog."
"html>`_."

#: ../../whatsnew/3.4.rst:70
msgid ":pep:`429` -- Python 3.4 Release Schedule"
msgstr ":pep:`429` -- График выпуска Python 3.4"

#: ../../whatsnew/3.4.rst:75
msgid "Summary -- Release Highlights"
msgstr "Резюме: основные моменты выпуска"

#: ../../whatsnew/3.4.rst:80
msgid "New syntax features:"
msgstr "Новые возможности синтаксиса:"

#: ../../whatsnew/3.4.rst:82
msgid "No new syntax features were added in Python 3.4."
msgstr "В Python 3.4 не было добавлено никаких новых синтаксических функций."

#: ../../whatsnew/3.4.rst:84
msgid "Other new features:"
msgstr "Другие новые функции:"

#: ../../whatsnew/3.4.rst:86
msgid ":ref:`pip should always be available <whatsnew-pep-453>` (:pep:`453`)."
msgstr ""
":ref:`pip всегда должен быть доступен <whatsnew-pep-453>` (:pep:`453`)."

#: ../../whatsnew/3.4.rst:87
msgid ""
":ref:`Newly created file descriptors are non-inheritable <whatsnew-pep-446>` "
"(:pep:`446`)."
msgstr ""
":ref:`Вновь созданные файловые дескрипторы не наследуются <whatsnew-"
"pep-446>` (:pep:`446`)."

#: ../../whatsnew/3.4.rst:89
msgid ""
"command line option for :ref:`isolated mode <whatsnew-isolated-mode>` (:"
"issue:`16499`)."
msgstr ""
"опция командной строки для :ref:`изолированного режима <whatsnew-isolated-"
"mode>` (:issue:`16499`)."

#: ../../whatsnew/3.4.rst:91
msgid ""
":ref:`improvements in the handling of codecs <codec-handling-improvements>` "
"that are not text encodings (multiple issues)."
msgstr ""
":ref:`улучшения в обработке кодеков <codec-handling-improvements>`, которые "
"не являются текстовыми кодировками (множественные проблемы)."

#: ../../whatsnew/3.4.rst:93
msgid ""
":ref:`A ModuleSpec Type <whatsnew-pep-451>` for the Import System (:pep:"
"`451`).  (Affects importer authors.)"
msgstr ""
":ref:`Тип ModuleSpec <whatsnew-pep-451>` для системы импорта (:pep:`451`). "
"(Касается авторов-импортеров.)"

#: ../../whatsnew/3.4.rst:95
msgid ""
"The :mod:`marshal` format has been made :ref:`more compact and efficient "
"<whatsnew-marshal-3>` (:issue:`16475`)."
msgstr ""
"Следующие устаревшие и ранее не рекомендуемые API и функции были удалены:"

#: ../../whatsnew/3.4.rst:98
msgid "New library modules:"
msgstr "Новые библиотечные модули:"

#: ../../whatsnew/3.4.rst:100
msgid ""
":mod:`asyncio`: :ref:`New provisional API for asynchronous IO <whatsnew-"
"asyncio>` (:pep:`3156`)."
msgstr ""
":mod:`asyncio`: :ref:`Новый временный API для асинхронного ввода-вывода "
"<whatsnew-asyncio>` (:pep:`3156`)."

#: ../../whatsnew/3.4.rst:102
msgid ""
":mod:`ensurepip`: :ref:`Bootstrapping the pip installer <whatsnew-"
"ensurepip>` (:pep:`453`)."
msgstr ""
":mod:`ensurepip`: :ref:`Загрузка установщика pip <whatsnew-ensurepip>` (:pep:"
"`453`)."

#: ../../whatsnew/3.4.rst:104
msgid ""
":mod:`enum`: :ref:`Support for enumeration types <whatsnew-enum>` (:pep:"
"`435`)."
msgstr ""
":mod:`enum`: :ref:`Поддержка типов перечисления <whatsnew-enum>` (:pep:"
"`435`)."

#: ../../whatsnew/3.4.rst:106
msgid ""
":mod:`pathlib`: :ref:`Object-oriented filesystem paths <whatsnew-pathlib>` (:"
"pep:`428`)."
msgstr ""
":mod:`pathlib`: :ref:`Пути к объектно-ориентированной файловой системе "
"<whatsnew-pathlib>` (:pep:`428`)."

#: ../../whatsnew/3.4.rst:108
msgid ""
":mod:`selectors`: :ref:`High-level and efficient I/O multiplexing <whatsnew-"
"selectors>`, built upon the :mod:`select` module primitives (part of :pep:"
"`3156`)."
msgstr ""
":mod:`selectors`: :ref:`Высокоуровневое и эффективное мультиплексирование "
"ввода-вывода <whatsnew-selectors>`, построенное на примитивах модуля :mod:"
"`select` (часть :pep:`3156`)."

#: ../../whatsnew/3.4.rst:111
msgid ""
":mod:`statistics`: A basic :ref:`numerically stable statistics library "
"<whatsnew-statistics>` (:pep:`450`)."
msgstr ""
":mod:`statistics`: Базовая :ref:`библиотека численно стабильной статистики "
"<whatsnew-statistics>` (:pep:`450`)."

#: ../../whatsnew/3.4.rst:113
msgid ""
":mod:`tracemalloc`: :ref:`Trace Python memory allocations <whatsnew-"
"tracemalloc>` (:pep:`454`)."
msgstr ""
":mod:`tracemalloc`: :ref:`Отслеживание распределения памяти Python <whatsnew-"
"tracemalloc>` (:pep:`454`)."

#: ../../whatsnew/3.4.rst:116
msgid "Significantly improved library modules:"
msgstr "Значительно улучшены библиотечные модули:"

#: ../../whatsnew/3.4.rst:118
msgid ""
":ref:`Single-dispatch generic functions <whatsnew-singledispatch>` in :mod:"
"`functools` (:pep:`443`)."
msgstr ""
":ref:`Общие функции для одиночной диспетчеризации <whatsnew-singledispatch>` "
"в :mod:`functools` (:pep:`443`)."

#: ../../whatsnew/3.4.rst:120
msgid ""
"New :mod:`pickle` :ref:`protocol 4 <whatsnew-protocol-4>` (:pep:`3154`)."
msgstr ""
"Новый :mod:`pickle` :ref:`protocol 4 <whatsnew-protocol-4>` (:pep:`3154`)."

#: ../../whatsnew/3.4.rst:121
msgid ""
":mod:`multiprocessing` now has :ref:`an option to avoid using os.fork on "
"Unix <whatsnew-multiprocessing-no-fork>` (:issue:`8713`)."
msgstr ""
":mod:`multiprocessing` теперь имеет :ref:`возможность избежать использования "
"os.fork в Unix <whatsnew-multiprocessing-no-fork>` (:issue:`8713`)."

#: ../../whatsnew/3.4.rst:123
msgid ""
":mod:`email` has a new submodule, :mod:`~email.contentmanager`, and a new :"
"mod:`~email.message.Message` subclass (:class:`~email.contentmanager."
"EmailMessage`) that :ref:`simplify MIME handling "
"<whatsnew_email_contentmanager>` (:issue:`18891`)."
msgstr ""
":mod:`email` имеет новый подмодуль :mod:`~email.contentmanager` и новый "
"подкласс :mod:`~email.message.Message` (:class:`~email.contentmanager."
"EmailMessage`), который :ref:`упростить обработку MIME "
"<whatsnew_email_contentmanager>` (:issue:`18891`)."

#: ../../whatsnew/3.4.rst:127
msgid ""
"The :mod:`inspect` and :mod:`pydoc` modules are now capable of correct "
"introspection of a much wider variety of callable objects, which improves "
"the output of the Python :func:`help` system."
msgstr ""
"Модули :mod:`inspect` и :mod:`pydoc` теперь способны корректно анализировать "
"гораздо более широкий спектр вызываемых объектов, что улучшает результаты "
"работы системы Python :func:`help`."

#: ../../whatsnew/3.4.rst:130
msgid "The :mod:`ipaddress` module API has been declared stable"
msgstr "API модуля :mod:`ipaddress` объявлен стабильным."

#: ../../whatsnew/3.4.rst:132
msgid "Security improvements:"
msgstr "Улучшения безопасности:"

#: ../../whatsnew/3.4.rst:134
msgid ""
":ref:`Secure and interchangeable hash algorithm <whatsnew-pep-456>` (:pep:"
"`456`)."
msgstr ""
":ref:`Безопасный и взаимозаменяемый алгоритм хеширования <whatsnew-pep-456>` "
"(:pep:`456`)."

#: ../../whatsnew/3.4.rst:136
msgid ""
":ref:`Make newly created file descriptors non-inheritable <whatsnew-"
"pep-446>` (:pep:`446`) to avoid leaking file descriptors to child processes."
msgstr ""
":ref:`Сделать вновь созданные файловые дескрипторы ненаследуемыми <whatsnew-"
"pep-446>` (:pep:`446`), чтобы избежать утечки файловых дескрипторов в "
"дочерние процессы."

#: ../../whatsnew/3.4.rst:138
msgid ""
"New command line option for :ref:`isolated mode <whatsnew-isolated-mode>`, (:"
"issue:`16499`)."
msgstr ""
"Новая опция командной строки для :ref:`изолированного режима <whatsnew-"
"isolated-mode>`, (:issue:`16499`)."

#: ../../whatsnew/3.4.rst:140
msgid ""
":mod:`multiprocessing` now has :ref:`an option to avoid using os.fork on "
"Unix <whatsnew-multiprocessing-no-fork>`.  *spawn* and *forkserver* are more "
"secure because they avoid sharing data with child processes."
msgstr ""
":mod:`multiprocessing` теперь имеет :ref:`возможность избежать использования "
"os.fork в Unix <whatsnew-multiprocessing-no-fork>`. *spawn* и *forkserver* "
"более безопасны, поскольку избегают обмена данными с дочерними процессами."

#: ../../whatsnew/3.4.rst:143
msgid ""
":mod:`multiprocessing` child processes on Windows no longer inherit all of "
"the parent's inheritable handles, only the necessary ones."
msgstr ""
":mod:`multiprocessing` дочерние процессы в Windows больше не наследуют все "
"наследуемые дескрипторы родительского процесса, а только необходимые."

#: ../../whatsnew/3.4.rst:145
msgid ""
"A new :func:`hashlib.pbkdf2_hmac` function provides the `PKCS#5 password-"
"based key derivation function 2 <https://en.wikipedia.org/wiki/PBKDF2>`_."
msgstr ""
"Новая функция :func:`hashlib.pbkdf2_hmac` обеспечивает функцию деривации "
"ключей на основе пароля PKCS#5 2 <https://en.wikipedia.org/wiki/PBKDF2>`_."

#: ../../whatsnew/3.4.rst:148
msgid ":ref:`TLSv1.1 and TLSv1.2 support <whatsnew-tls-11-12>` for :mod:`ssl`."
msgstr ""
":ref:`TLSv1.1 и TLSv1.2 поддерживают <whatsnew-tls-11-12>` для :mod:`ssl`."

#: ../../whatsnew/3.4.rst:149
msgid ""
":ref:`Retrieving certificates from the Windows system cert store support "
"<whatsnew34-win-cert-store>` for :mod:`ssl`."
msgstr ""
":ref:`Получение сертификатов из хранилища системных сертификатов Windows "
"поддерживает <whatsnew34-win-cert-store>` для :mod:`ssl`."

#: ../../whatsnew/3.4.rst:151
msgid ""
":ref:`Server-side SNI (Server Name Indication) support <whatsnew34-sni>` "
"for :mod:`ssl`."
msgstr ""
":ref:`SNI на стороне сервера (индикация имени сервера) поддерживает "
"<whatsnew34-sni>` для :mod:`ssl`."

#: ../../whatsnew/3.4.rst:153
msgid ""
"The :class:`ssl.SSLContext` class has a :ref:`lot of improvements "
"<whatsnew34-sslcontext>`."
msgstr ""
"Класс :class:`ssl.SSLContext` имеет :ref:`множество улучшений <whatsnew34-"
"sslcontext>`."

#: ../../whatsnew/3.4.rst:155
msgid ""
"All modules in the standard library that support SSL now support server "
"certificate verification, including hostname matching (:func:`ssl."
"match_hostname`) and CRLs (Certificate Revocation lists, see :func:`ssl."
"SSLContext.load_verify_locations`)."
msgstr ""
"Все модули стандартной библиотеки, поддерживающие SSL, теперь поддерживают "
"проверку сертификата сервера, включая сопоставление имен хостов (:func:`ssl."
"match_hostname`) и CRL (списки отзыва сертификатов, см. :func:`ssl."
"SSLContext.load_verify_locations`)."

#: ../../whatsnew/3.4.rst:160
msgid "CPython implementation improvements:"
msgstr "Улучшения в реализации CPython:"

#: ../../whatsnew/3.4.rst:162
msgid ":ref:`Safe object finalization <whatsnew-pep-442>` (:pep:`442`)."
msgstr ":ref:`Безопасная финализация объекта <whatsnew-pep-442>` (:pep:`442`)."

#: ../../whatsnew/3.4.rst:163
msgid ""
"Leveraging :pep:`442`, in most cases :ref:`module globals are no longer set "
"to None during finalization <whatsnew-pep-442>` (:issue:`18214`)."
msgstr ""
"Используя :pep:`442`, в большинстве случаев :ref:`глобальные переменные "
"модуля больше не устанавливаются в значение None во время финализации "
"<whatsnew-pep-442>` (:issue:`18214`)."

#: ../../whatsnew/3.4.rst:165
msgid ":ref:`Configurable memory allocators <whatsnew-pep-445>` (:pep:`445`)."
msgstr ""
":ref:`Настраиваемые распределители памяти <whatsnew-pep-445>` (:pep:`445`)."

#: ../../whatsnew/3.4.rst:166
msgid ":ref:`Argument Clinic <whatsnew-pep-436>` (:pep:`436`)."
msgstr ":ref:`Клиника аргументов <whatsnew-pep-436>` (:pep:`436`)."

#: ../../whatsnew/3.4.rst:168
msgid ""
"Please read on for a comprehensive list of user-facing changes, including "
"many other smaller improvements, CPython optimizations, deprecations, and "
"potential porting issues."
msgstr ""
"Пожалуйста, прочтите полный список изменений, с которыми сталкиваются "
"пользователи, включая множество других небольших улучшений, оптимизацию "
"CPython, прекращение поддержки и потенциальные проблемы с портированием."

#: ../../whatsnew/3.4.rst:175
msgid "New Features"
msgstr "Новые особенности"

#: ../../whatsnew/3.4.rst:180
msgid "PEP 453: Explicit Bootstrapping of PIP in Python Installations"
msgstr "PEP 453: Явная загрузка PIP в установках Python"

#: ../../whatsnew/3.4.rst:183
msgid "Bootstrapping pip By Default"
msgstr "Начальная загрузка по умолчанию"

#: ../../whatsnew/3.4.rst:185
msgid ""
"The new :mod:`ensurepip` module (defined in :pep:`453`) provides a standard "
"cross-platform mechanism to bootstrap the pip installer into Python "
"installations and virtual environments. The version of ``pip`` included with "
"Python 3.4.0 is ``pip`` 1.5.4, and future 3.4.x maintenance releases will "
"update the bundled version to the latest version of ``pip`` that is "
"available at the time of creating the release candidate."
msgstr ""
"Новый модуль :mod:`ensurepip` (определенный в :pep:`453`) предоставляет "
"стандартный кросс-платформенный механизм для загрузки установщика pip в "
"установки Python и виртуальные среды. Версия pip, включенная в Python 3.4.0, "
"— это pip 1.5.4, а в будущих выпусках обслуживания 3.4.x включенная в "
"комплект версия будет обновлена ​​до последней версии pip, доступной по адресу "
"время создания релиз-кандидата."

#: ../../whatsnew/3.4.rst:192
msgid ""
"By default, the commands ``pipX`` and ``pipX.Y`` will be installed on all "
"platforms (where X.Y stands for the version of the Python installation), "
"along with the ``pip`` Python package and its dependencies. On Windows and "
"in virtual environments on all platforms, the unversioned ``pip`` command "
"will also be installed. On other platforms, the system wide unversioned "
"``pip`` command typically refers to the separately installed Python 2 "
"version."
msgstr ""
"По умолчанию команды pipX и pipX.Y будут установлены на всех платформах (где "
"XY означает версию установки Python) вместе с пакетом Python pip и его "
"зависимостями. . В Windows и в виртуальных средах на всех платформах также "
"будет установлена ​​неверсированная команда pip. На других платформах "
"общесистемная неверсированная команда pip обычно относится к отдельно "
"установленной версии Python 2."

#: ../../whatsnew/3.4.rst:200
msgid ""
"The ``pyvenv`` command line utility and the :mod:`venv` module make use of "
"the :mod:`ensurepip` module to make ``pip`` readily available in virtual "
"environments. When using the command line utility, ``pip`` is installed by "
"default, while when using the :mod:`venv` module :ref:`venv-api` "
"installation of ``pip`` must be requested explicitly."
msgstr ""
"Утилита командной строки ``pyvenv`` и модуль :mod:`venv` используют модуль :"
"mod:`ensurepip`, чтобы сделать ``pip`` легко доступным в виртуальных средах. "
"При использовании утилиты командной строки ``pip`` устанавливается по "
"умолчанию, а при использовании модуля :mod:`venv` установка ``pip`` должна "
"быть запрошена явно."

#: ../../whatsnew/3.4.rst:206
msgid ""
"For CPython :ref:`source builds on POSIX systems <building-python-on-unix>`, "
"the ``make install`` and ``make altinstall`` commands bootstrap ``pip`` by "
"default.  This behaviour can be controlled through configure options, and "
"overridden through Makefile options."
msgstr ""
"Для CPython :ref:`source, построенного на системах POSIX <building-python-on-"
"unix>`, команды ``make install`` и ``make altinstall`` по умолчанию "
"загружают ``pip``. Этим поведением можно управлять с помощью параметров "
"конфигурации и переопределить с помощью параметров Makefile."

#: ../../whatsnew/3.4.rst:211
msgid ""
"On Windows and Mac OS X, the CPython installers now default to installing "
"``pip`` along with CPython itself (users may opt out of installing it during "
"the installation process). Window users will need to opt in to the automatic "
"``PATH`` modifications to have ``pip`` available from the command line by "
"default, otherwise it can still be accessed through the Python launcher for "
"Windows as ``py -m pip``."
msgstr ""
"В Windows и Mac OS X установщики CPython теперь по умолчанию устанавливают "
"pip вместе с самим CPython (пользователи могут отказаться от его установки в "
"процессе установки). Пользователям Windows необходимо будет согласиться на "
"автоматические изменения PATH, чтобы pip был доступен из командной строки по "
"умолчанию, в противном случае к нему все равно можно будет получить доступ "
"через панель запуска Python для Windows как py -m pip. ``."

#: ../../whatsnew/3.4.rst:218
msgid ""
"As `discussed in the PEP`__, platform packagers may choose not to install "
"these commands by default, as long as, when invoked, they provide clear and "
"simple directions on how to install them on that platform (usually using the "
"system package manager)."
msgstr ""

#: ../../whatsnew/3.4.rst:227
msgid ""
"To avoid conflicts between parallel Python 2 and Python 3 installations, "
"only the versioned ``pip3`` and ``pip3.4`` commands are bootstrapped by "
"default when ``ensurepip`` is invoked directly - the ``--default-pip`` "
"option is needed to also request the unversioned ``pip`` command. ``pyvenv`` "
"and the Windows installer ensure that the unqualified ``pip`` command is "
"made available in those environments, and ``pip`` can always be invoked via "
"the ``-m`` switch rather than directly to avoid ambiguity on systems with "
"multiple Python installations."
msgstr ""
"Чтобы избежать конфликтов между параллельными установками Python 2 и Python "
"3, только версионные команды pip3 и pip3.4 загружаются по умолчанию, когда "
"ensurepip вызывается напрямую - команда ``--default- Опция pip необходима "
"для запроса неверсионной команды pip. ``pyvenv`` и установщик Windows "
"гарантируют, что неполная команда ``pip`` доступна в этих средах, и ``pip`` "
"всегда можно вызвать через ключ ``-m``, а не напрямую, чтобы избежать "
"неоднозначность в системах с несколькими установками Python."

#: ../../whatsnew/3.4.rst:238
msgid "Documentation Changes"
msgstr "Изменения в документации"

#: ../../whatsnew/3.4.rst:240
msgid ""
"As part of this change, the :ref:`installing-index` and :ref:`distributing-"
"index` sections of the documentation have been completely redesigned as "
"short getting started and FAQ documents. Most packaging documentation has "
"now been moved out to the Python Packaging Authority maintained `Python "
"Packaging User Guide <https://packaging.python.org>`__ and the documentation "
"of the individual projects."
msgstr ""
"В рамках этого изменения разделы документации :ref:`installing-index` и :ref:"
"`distributing-index` были полностью переработаны и теперь представляют собой "
"краткие инструкции по началу работы и документы с часто задаваемыми "
"вопросами. Большая часть документации по упаковке теперь перенесена в "
"Управление по упаковке Python, где хранится «Руководство пользователя по "
"упаковке Python <https://packaging.python.org>»__ и документация по "
"отдельным проектам."

#: ../../whatsnew/3.4.rst:248
msgid ""
"However, as this migration is currently still incomplete, the legacy "
"versions of those guides remaining available as :ref:`install-index` and :"
"ref:`distutils-index`."
msgstr ""

#: ../../whatsnew/3.4.rst:255
msgid ":pep:`453` -- Explicit bootstrapping of pip in Python installations"
msgstr ":pep:`453` -- Явная загрузка pip в установках Python"

#: ../../whatsnew/3.4.rst:255
msgid ""
"PEP written by Donald Stufft and Nick Coghlan, implemented by Donald Stufft, "
"Nick Coghlan, Martin von Löwis and Ned Deily."
msgstr ""
"PEP написан Дональдом Стаффтом и Ником Когланом и реализован Дональдом "
"Стаффтом, Ником Когланом, Мартином фон Лёвисом и Недом Дейли."

#: ../../whatsnew/3.4.rst:262
msgid "PEP 446: Newly Created File Descriptors Are Non-Inheritable"
msgstr "PEP 446: вновь созданные дескрипторы файлов не наследуются"

#: ../../whatsnew/3.4.rst:264
msgid ""
":pep:`446` makes newly created file descriptors :ref:`non-inheritable "
"<fd_inheritance>`.  In general, this is the behavior an application will "
"want: when launching a new process, having currently open files also open in "
"the new process can lead to all sorts of hard to find bugs, and potentially "
"to security issues."
msgstr ""
":pep:`446` делает вновь созданные файловые дескрипторы :ref:`ненаследуемыми "
"<fd_inheritance>`. В общем, это именно то поведение, которое нужно "
"приложению: при запуске нового процесса наличие открытых в данный момент "
"файлов также открытых в новом процессе может привести ко всем видам "
"труднообнаружимых ошибок и, возможно, к проблемам безопасности."

#: ../../whatsnew/3.4.rst:270
msgid ""
"However, there are occasions when inheritance is desired.  To support these "
"cases, the following new functions and methods are available:"
msgstr ""
"Однако бывают случаи, когда наследование желательно. Для поддержки этих "
"случаев доступны следующие новые функции и методы:"

#: ../../whatsnew/3.4.rst:273
msgid ":func:`os.get_inheritable`, :func:`os.set_inheritable`"
msgstr ":func:`os.get_inheritable`, :func:`os.set_inheritable`"

#: ../../whatsnew/3.4.rst:274
msgid ":func:`os.get_handle_inheritable`, :func:`os.set_handle_inheritable`"
msgstr ":func:`os.get_handle_inheritable`, :func:`os.set_handle_inheritable`"

#: ../../whatsnew/3.4.rst:275
msgid ""
":meth:`socket.socket.get_inheritable`, :meth:`socket.socket.set_inheritable`"
msgstr ""
":meth:`socket.socket.get_inheritable`, :meth:`socket.socket.set_inheritable`"

#: ../../whatsnew/3.4.rst:279
msgid ":pep:`446` -- Make newly created file descriptors non-inheritable"
msgstr ""
":pep:`446` -- Делает вновь созданные файловые дескрипторы ненаследуемыми"

#: ../../whatsnew/3.4.rst:280 ../../whatsnew/3.4.rst:1812
msgid "PEP written and implemented by Victor Stinner."
msgstr "PEP написан и реализован Виктором Стиннером."

#: ../../whatsnew/3.4.rst:286
msgid "Improvements to Codec Handling"
msgstr "Улучшения в обработке кодеков"

#: ../../whatsnew/3.4.rst:288
msgid ""
"Since it was first introduced, the :mod:`codecs` module has always been "
"intended to operate as a type-neutral dynamic encoding and decoding system. "
"However, its close coupling with the Python text model, especially the type "
"restricted convenience methods on the builtin :class:`str`, :class:`bytes` "
"and :class:`bytearray` types, has historically obscured that fact."
msgstr ""
"С момента своего первого появления модуль :mod:`codecs` всегда "
"предназначался для работы в качестве нейтральной по типу системы "
"динамического кодирования и декодирования. Однако его тесная связь с "
"текстовой моделью Python, особенно с удобными методами с ограниченным типом "
"во встроенных типах :class:`str`, :class:`bytes` и :class:`bytearray`, "
"исторически скрывала этот факт."

#: ../../whatsnew/3.4.rst:295
msgid ""
"As a key step in clarifying the situation, the :meth:`codecs.encode` and :"
"meth:`codecs.decode` convenience functions are now properly documented in "
"Python 2.7, 3.3 and 3.4. These functions have existed in the :mod:`codecs` "
"module (and have been covered by the regression test suite) since Python "
"2.4, but were previously only discoverable through runtime introspection."
msgstr ""
"Ключевым шагом в прояснении ситуации стало то, что удобные функции :meth:"
"`codecs.encode` и :meth:`codecs.decode` теперь правильно документированы в "
"Python 2.7, 3.3 и 3.4. Эти функции существовали в модуле :mod:`codecs` (и "
"были включены в набор регрессионных тестов) начиная с Python 2.4, но ранее "
"их можно было обнаружить только посредством самоанализа во время выполнения."

#: ../../whatsnew/3.4.rst:301
msgid ""
"Unlike the convenience methods on :class:`str`, :class:`bytes` and :class:"
"`bytearray`, the :mod:`codecs` convenience functions support arbitrary "
"codecs in both Python 2 and Python 3, rather than being limited to Unicode "
"text encodings (in Python 3) or ``basestring`` <-> ``basestring`` "
"conversions (in Python 2)."
msgstr ""
"В отличие от удобных методов :class:`str`, :class:`bytes` и :class:"
"`bytearray`, удобные функции :mod:`codecs` поддерживают произвольные кодеки "
"как в Python 2, так и в Python 3, а не ограничены в текстовые кодировки "
"Unicode (в Python 3) или преобразования ``basestring`` <-> ``basestring`` (в "
"Python 2)."

#: ../../whatsnew/3.4.rst:307
msgid ""
"In Python 3.4, the interpreter is able to identify the known non-text "
"encodings provided in the standard library and direct users towards these "
"general purpose convenience functions when appropriate::"
msgstr ""
"В Python 3.4 интерпретатор может идентифицировать известные нетекстовые "
"кодировки, представленные в стандартной библиотеке, и при необходимости "
"направлять пользователей к этим удобным функциям общего назначения:"

#: ../../whatsnew/3.4.rst:326
msgid ""
"In a related change, whenever it is feasible without breaking backwards "
"compatibility, exceptions raised during encoding and decoding operations are "
"wrapped in a chained exception of the same type that mentions the name of "
"the codec responsible for producing the error::"
msgstr ""
"В соответствующем изменении, если это возможно без нарушения обратной "
"совместимости, исключения, возникающие во время операций кодирования и "
"декодирования, оборачиваются цепочкой исключений того же типа, в которой "
"упоминается имя кодека, ответственного за возникновение ошибки:"

#: ../../whatsnew/3.4.rst:359
msgid ""
"Finally, as the examples above show, these improvements have permitted the "
"restoration of the convenience aliases for the non-Unicode codecs that were "
"themselves restored in Python 3.2. This means that encoding binary data to "
"and from its hexadecimal representation (for example) can now be written as::"
msgstr ""
"Наконец, как показывают приведенные выше примеры, эти улучшения позволили "
"восстановить удобные псевдонимы для кодеков, отличных от Unicode, которые "
"сами были восстановлены в Python 3.2. Это означает, что кодирование двоичных "
"данных в их шестнадцатеричное представление и обратно (например) теперь "
"можно записать как:"

#: ../../whatsnew/3.4.rst:371
msgid ""
"The binary and text transforms provided in the standard library are detailed "
"in :ref:`binary-transforms` and :ref:`text-transforms`."
msgstr ""
"Бинарные и текстовые преобразования, представленные в стандартной "
"библиотеке, подробно описаны в разделах :ref:`binary-transforms` и :ref:"
"`text-transforms`."

#: ../../whatsnew/3.4.rst:374
msgid ""
"(Contributed by Nick Coghlan in :issue:`7475`, :issue:`17827`, :issue:"
"`17828` and :issue:`19619`.)"
msgstr ""
"(Внесено Ником Когланом в :issue:`7475`, :issue:`17827`, :issue:`17828` и :"
"issue:`19619`.)"

#: ../../whatsnew/3.4.rst:381
msgid "PEP 451: A ModuleSpec Type for the Import System"
msgstr "PEP 451: тип ModuleSpec для системы импорта"

#: ../../whatsnew/3.4.rst:383
msgid ""
":pep:`451` provides an encapsulation of the information about a module that "
"the import machinery will use to load it (that is, a module specification).  "
"This helps simplify both the import implementation and several import-"
"related APIs. The change is also a stepping stone for `several future import-"
"related improvements`__."
msgstr ""
":pep:`451` обеспечивает инкапсуляцию информации о модуле, которую механизм "
"импорта будет использовать для его загрузки (то есть спецификация модуля). "
"Это помогает упростить как реализацию импорта, так и некоторые API, "
"связанные с импортом. Это изменение также является трамплином для "
"«нескольких будущих улучшений, связанных с импортом»."

#: ../../whatsnew/3.4.rst:391
msgid ""
"The public-facing changes from the PEP are entirely backward-compatible. "
"Furthermore, they should be transparent to everyone but importer authors.  "
"Key finder and loader methods have been deprecated, but they will continue "
"working. New importers should use the new methods described in the PEP.  "
"Existing importers should be updated to implement the new methods.  See the :"
"ref:`deprecated-3.4` section for a list of methods that should be replaced "
"and their replacements."
msgstr ""
"Публичные изменения PEP полностью обратно совместимы. Более того, они должны "
"быть прозрачными для всех, кроме авторов-импортеров. Методы поиска ключей и "
"загрузчика устарели, но они продолжат работать. Новым импортерам следует "
"использовать новые методы, описанные в PEP. Существующие импортеры должны "
"быть обновлены для внедрения новых методов. См. раздел :ref:`deprecated-3.4` "
"для получения списка методов, которые следует заменить, и их замен."

#: ../../whatsnew/3.4.rst:401
msgid "Other Language Changes"
msgstr "Другие языковые изменения"

#: ../../whatsnew/3.4.rst:403
msgid "Some smaller changes made to the core Python language are:"
msgstr "Некоторые небольшие изменения, внесенные в основной язык Python:"

#: ../../whatsnew/3.4.rst:405
msgid "Unicode database updated to UCD version 6.3."
msgstr "База данных Unicode обновлена ​​до версии UCD 6.3."

#: ../../whatsnew/3.4.rst:407
msgid ""
":func:`min` and :func:`max` now accept a *default* keyword-only argument "
"that can be used to specify the value they return if the iterable they are "
"evaluating has no elements.  (Contributed by Julian Berman in :issue:"
"`18111`.)"
msgstr ""
":func:`min` и :func:`max` теперь принимают аргумент *default*, содержащий "
"только ключевые слова, который можно использовать для указания возвращаемого "
"значения, если оцениваемая итерация не имеет элементов. (Предоставлено "
"Джулианом Берманом в :issue:`18111`.)"

#: ../../whatsnew/3.4.rst:412
msgid "Module objects are now :ref:`weakly referenceable <mod-weakref>`."
msgstr "Объекты модуля теперь :ref:`слабо доступны для ссылок <mod-weakref>`."

#: ../../whatsnew/3.4.rst:414
msgid ""
"Module ``__file__`` attributes (and related values) should now always "
"contain absolute paths by default, with the sole exception of ``__main__."
"__file__`` when a script has been executed directly using a relative path.  "
"(Contributed by Brett Cannon in :issue:`18416`.)"
msgstr ""
"Атрибуты модуля ``__file__`` (и связанные значения) теперь по умолчанию "
"всегда должны содержать абсолютные пути, за единственным исключением "
"``__main__.__file__``, когда скрипт выполнялся напрямую с использованием "
"относительного пути. (Предоставлено Бреттом Кэнноном в :issue:`18416`.)"

#: ../../whatsnew/3.4.rst:419
msgid ""
"All the UTF-\\* codecs (except UTF-7) now reject surrogates during both "
"encoding and decoding unless the ``surrogatepass`` error handler is used, "
"with the exception of the UTF-16 decoder (which accepts valid surrogate "
"pairs) and the UTF-16 encoder (which produces them while encoding non-BMP "
"characters). (Contributed by Victor Stinner, Kang-Hao (Kenny) Lu and Serhiy "
"Storchaka in :issue:`12892`.)"
msgstr ""
"Все кодеки UTF-\\* (кроме UTF-7) теперь отклоняют суррогатные пары как во "
"время кодирования, так и декодирования, если не используется обработчик "
"ошибок surrogatepass, за исключением декодера UTF-16 (который принимает "
"действительные суррогатные пары) и кодировщик UTF-16 (который создает их при "
"кодировании символов, отличных от BMP). (Предоставлено Виктором Стиннером, "
"Кан-Хао (Кенни) Лу и Сергеем Сторчакой в ​​:issue:`12892`.)"

#: ../../whatsnew/3.4.rst:426
msgid ""
"New German EBCDIC :ref:`codec <standard-encodings>` ``cp273``.  (Contributed "
"by Michael Bierenfeld and Andrew Kuchling in :issue:`1097797`.)"
msgstr ""
"Новый немецкий EBCDIC :ref:`codec <standard-encodings>` ``cp273``. "
"(Предоставлено Майклом Биренфельдом и Эндрю Кучлингом в :issue:`1097797`.)"

#: ../../whatsnew/3.4.rst:429
msgid ""
"New Ukrainian :ref:`codec <standard-encodings>` ``cp1125``.  (Contributed by "
"Serhiy Storchaka in :issue:`19668`.)"
msgstr ""
"Новый украинский :ref:`codec <standard-encodings>` ``cp1125``. "
"(Предоставлено Сергеем Сторчакой в ​​:issue:`19668`.)"

#: ../../whatsnew/3.4.rst:432
msgid ""
":class:`bytes`.join() and :class:`bytearray`.join() now accept arbitrary "
"buffer objects as arguments.  (Contributed by Antoine Pitrou in :issue:"
"`15958`.)"
msgstr ""
":class:`bytes`.join() и :class:`bytearray`.join() теперь принимают в "
"качестве аргументов произвольные объекты буфера. (Предоставлено Антуаном "
"Питру в :issue:`15958`.)"

#: ../../whatsnew/3.4.rst:436
msgid ""
"The :class:`int` constructor now accepts any object that has an "
"``__index__`` method for its *base* argument.  (Contributed by Mark "
"Dickinson in :issue:`16772`.)"
msgstr ""
"Конструктор :class:`int` теперь принимает любой объект, имеющий метод "
"__index__`` в качестве аргумента *base*. (Предоставлено Марком Дикинсоном в :"
"issue:`16772`.)"

#: ../../whatsnew/3.4.rst:440
msgid ""
"Frame objects now have a :func:`~frame.clear` method that clears all "
"references to local variables from the frame.  (Contributed by Antoine "
"Pitrou in :issue:`17934`.)"
msgstr ""
"Объекты фреймов теперь имеют метод :func:`~frame.clear`, который удаляет из "
"фрейма все ссылки на локальные переменные. (Предоставлено Антуаном Питру в :"
"issue:`17934`.)"

#: ../../whatsnew/3.4.rst:444
msgid ""
":class:`memoryview` is now registered as a :class:`Sequence <collections."
"abc>`, and supports the :func:`reversed` builtin.  (Contributed by Nick "
"Coghlan and Claudiu Popa in :issue:`18690` and :issue:`19078`.)"
msgstr ""
":class:`memoryview` теперь зарегистрирован как :class:`Sequence <collections."
"abc>` и поддерживает встроенную функцию :func:`reversed`. (Предоставлено "
"Ником Когланом и Клаудиу Попа в :issue:`18690` и :issue:`19078`.)"

#: ../../whatsnew/3.4.rst:448
msgid ""
"Signatures reported by :func:`help` have been modified and improved in "
"several cases as a result of the introduction of Argument Clinic and other "
"changes to the :mod:`inspect` and :mod:`pydoc` modules."
msgstr ""
"Сигнатуры, о которых сообщает :func:`help`, были изменены и улучшены в "
"нескольких случаях в результате внедрения Argument Clinic и других изменений "
"в модулях :mod:`inspect` и :mod:`pydoc`."

#: ../../whatsnew/3.4.rst:452
msgid ""
":meth:`~object.__length_hint__` is now part of the formal language "
"specification (see :pep:`424`).  (Contributed by Armin Ronacher in :issue:"
"`16148`.)"
msgstr ""
":meth:`~object.__length_hint__` теперь является частью формальной "
"спецификации языка (см. :pep:`424`). (Предоставлено Армином Ронахером в :"
"issue:`16148`.)"

#: ../../whatsnew/3.4.rst:458
msgid "New Modules"
msgstr "Новые модули"

#: ../../whatsnew/3.4.rst:464
msgid "asyncio"
msgstr "asyncio"

#: ../../whatsnew/3.4.rst:466
msgid ""
"The new :mod:`asyncio` module (defined in :pep:`3156`) provides a standard "
"pluggable event loop model for Python, providing solid asynchronous IO "
"support in the standard library, and making it easier for other event loop "
"implementations to interoperate with the standard library and each other."
msgstr ""
"Новый модуль :mod:`asyncio` (определенный в :pep:`3156`) предоставляет "
"стандартную подключаемую модель цикла событий для Python, обеспечивая "
"надежную поддержку асинхронного ввода-вывода в стандартной библиотеке и "
"упрощая взаимодействие других реализаций цикла событий. со стандартной "
"библиотекой и друг с другом."

#: ../../whatsnew/3.4.rst:471 ../../whatsnew/3.4.rst:534
msgid "For Python 3.4, this module is considered a :term:`provisional API`."
msgstr "Для Python 3.4 этот модуль считается :term:`предварительным API`."

#: ../../whatsnew/3.4.rst:475
msgid ":pep:`3156` -- Asynchronous IO Support Rebooted: the \"asyncio\" Module"
msgstr ""
":pep:`3156` -- Перезагрузка поддержки асинхронного ввода-вывода: модуль "
"\"asyncio\""

#: ../../whatsnew/3.4.rst:476
msgid "PEP written and implementation led by Guido van Rossum."
msgstr "PEP написан и реализован под руководством Гвидо ван Россума."

#: ../../whatsnew/3.4.rst:482
msgid "ensurepip"
msgstr "ensurepip"

#: ../../whatsnew/3.4.rst:484
msgid ""
"The new :mod:`ensurepip` module is the primary infrastructure for the :pep:"
"`453` implementation.  In the normal course of events end users will not "
"need to interact with this module, but it can be used to manually bootstrap "
"``pip`` if the automated bootstrapping into an installation or virtual "
"environment was declined."
msgstr ""
"Новый модуль :mod:`ensurepip` является основной инфраструктурой для "
"реализации :pep:`453`. При обычном ходе событий конечным пользователям не "
"нужно будет взаимодействовать с этим модулем, но его можно использовать для "
"ручной загрузки pip, если автоматическая загрузка в установочную или "
"виртуальную среду была отклонена."

#: ../../whatsnew/3.4.rst:490
msgid ""
":mod:`ensurepip` includes a bundled copy of ``pip``, up-to-date as of the "
"first release candidate of the release of CPython with which it ships (this "
"applies to both maintenance releases and feature releases).  ``ensurepip`` "
"does not access the internet.  If the installation has internet access, "
"after ``ensurepip`` is run the bundled ``pip`` can be used to upgrade "
"``pip`` to a more recent release than the bundled one.  (Note that such an "
"upgraded version of ``pip`` is considered to be a separately installed "
"package and will not be removed if Python is uninstalled.)"
msgstr ""
":mod:`ensurepip` включает в себя связанную копию ``pip``, актуальную на "
"момент первого кандидата на выпуск версии CPython, с которой он поставляется "
"(это относится как к служебным выпускам, так и к выпускам функций). "
"``ensurepip`` не имеет доступа к Интернету. Если установка имеет доступ к "
"Интернету, после запуска ensurepip входящий в комплект pip можно "
"использовать для обновления pip до более свежей версии, чем входящий в "
"комплект. (Обратите внимание, что такая обновленная версия ``pip`` считается "
"отдельно установленным пакетом и не будет удалена при удалении Python.)"

#: ../../whatsnew/3.4.rst:499
msgid ""
"The module is named *ensure*\\ pip because if called when ``pip`` is already "
"installed, it does nothing.  It also has an ``--upgrade`` option that will "
"cause it to install the bundled copy of ``pip`` if the existing installed "
"version of ``pip`` is older than the bundled copy."
msgstr ""
"Модуль называется *ensure*\\pip, потому что если его вызвать, когда ``pip`` "
"уже установлен, он ничего не делает. У него также есть опция ``--upgrade``, "
"которая заставит его установить связанную копию ``pip``, если существующая "
"установленная версия ``pip`` старше, чем связанная копия."

#: ../../whatsnew/3.4.rst:508
msgid "enum"
msgstr "enum"

#: ../../whatsnew/3.4.rst:510
msgid ""
"The new :mod:`enum` module (defined in :pep:`435`) provides a standard "
"implementation of enumeration types, allowing other modules (such as :mod:"
"`socket`) to provide more informative error messages and better debugging "
"support by replacing opaque integer constants with backwards compatible "
"enumeration values."
msgstr ""
"Новый модуль :mod:`enum` (определенный в :pep:`435`) обеспечивает "
"стандартную реализацию типов перечисления, позволяя другим модулям (таким "
"как :mod:`socket`) предоставлять более информативные сообщения об ошибках и "
"лучшую поддержку отладки. путем замены непрозрачных целочисленных констант "
"обратно совместимыми значениями перечисления."

#: ../../whatsnew/3.4.rst:519
msgid ":pep:`435` -- Adding an Enum type to the Python standard library"
msgstr ":pep:`435` -- Добавление типа Enum в стандартную библиотеку Python"

#: ../../whatsnew/3.4.rst:519
msgid ""
"PEP written by Barry Warsaw, Eli Bendersky and Ethan Furman, implemented by "
"Ethan Furman."
msgstr ""
"PEP, написанный Барри Варшавой, Эли Бендерски и Итаном Фурманом, реализован "
"Итаном Фурманом."

#: ../../whatsnew/3.4.rst:526
msgid "pathlib"
msgstr "pathlib"

#: ../../whatsnew/3.4.rst:528
msgid ""
"The new :mod:`pathlib` module offers classes representing filesystem paths "
"with semantics appropriate for different operating systems.  Path classes "
"are divided between *pure paths*, which provide purely computational "
"operations without I/O, and *concrete paths*, which inherit from pure paths "
"but also provide I/O operations."
msgstr ""
"Новый модуль :mod:`pathlib` предлагает классы, представляющие пути файловой "
"системы с семантикой, подходящей для различных операционных систем. Классы "
"путей делятся на *чистые пути*, которые обеспечивают чисто вычислительные "
"операции без ввода-вывода, и *конкретные пути*, которые наследуются от "
"чистых путей, но также обеспечивают операции ввода-вывода."

#: ../../whatsnew/3.4.rst:538
msgid ":pep:`428` -- The pathlib module -- object-oriented filesystem paths"
msgstr ""
":pep:`428` -- Модуль pathlib -- пути к объектно-ориентированной файловой "
"системе"

#: ../../whatsnew/3.4.rst:539 ../../whatsnew/3.4.rst:1835
msgid "PEP written and implemented by Antoine Pitrou."
msgstr "PEP написан и реализован Антуаном Питру."

#: ../../whatsnew/3.4.rst:545
msgid "selectors"
msgstr "селекторы"

#: ../../whatsnew/3.4.rst:547
msgid ""
"The new :mod:`selectors` module (created as part of implementing :pep:"
"`3156`) allows high-level and efficient I/O multiplexing, built upon the :"
"mod:`select` module primitives."
msgstr ""
"Новый модуль :mod:`selectors` (созданный как часть реализации :pep:`3156`) "
"обеспечивает высокоуровневое и эффективное мультиплексирование ввода-вывода, "
"основанное на примитивах модуля :mod:`select`."

#: ../../whatsnew/3.4.rst:555
msgid "statistics"
msgstr "статистика"

#: ../../whatsnew/3.4.rst:557
msgid ""
"The new :mod:`statistics` module (defined in :pep:`450`) offers some core "
"statistics functionality directly in the standard library. This module "
"supports calculation of the mean, median, mode, variance and standard "
"deviation of a data series."
msgstr ""
"Новый модуль :mod:`statistics` (определенный в :pep:`450`) предлагает "
"некоторые основные статистические функции непосредственно в стандартной "
"библиотеке. Этот модуль поддерживает расчет среднего значения, медианы, "
"моды, дисперсии и стандартного отклонения ряда данных."

#: ../../whatsnew/3.4.rst:564
msgid ":pep:`450` -- Adding A Statistics Module To The Standard Library"
msgstr ":pep:`450` -- Добавление модуля статистики в стандартную библиотеку"

#: ../../whatsnew/3.4.rst:565
msgid "PEP written and implemented by Steven D'Aprano"
msgstr "PEP написан и реализован Стивеном Д'Апрано"

#: ../../whatsnew/3.4.rst:571
msgid "tracemalloc"
msgstr "tracemalloc"

#: ../../whatsnew/3.4.rst:573
msgid ""
"The new :mod:`tracemalloc` module (defined in :pep:`454`) is a debug tool to "
"trace memory blocks allocated by Python. It provides the following "
"information:"
msgstr ""
"Новый модуль :mod:`tracemalloc` (определенный в :pep:`454`) — это инструмент "
"отладки для отслеживания блоков памяти, выделенных Python. Он предоставляет "
"следующую информацию:"

#: ../../whatsnew/3.4.rst:576
msgid "Trace where an object was allocated"
msgstr "Отследить, где был выделен объект"

#: ../../whatsnew/3.4.rst:577
msgid ""
"Statistics on allocated memory blocks per filename and per line number: "
"total size, number and average size of allocated memory blocks"
msgstr ""
"Статистика по выделенным блокам памяти по имени файла и по номеру строки: "
"общий размер, количество и средний размер выделенных блоков памяти."

#: ../../whatsnew/3.4.rst:579
msgid "Compute the differences between two snapshots to detect memory leaks"
msgstr ""
"Вычисление различий между двумя снимками для обнаружения утечек памяти."

#: ../../whatsnew/3.4.rst:583
msgid ""
":pep:`454` -- Add a new tracemalloc module to trace Python memory allocations"
msgstr ""
":pep:`454` -- Добавьте новый модуль Tracemalloc для отслеживания "
"распределения памяти Python."

#: ../../whatsnew/3.4.rst:584
msgid "PEP written and implemented by Victor Stinner"
msgstr "PEP написан и реализован Виктором Стиннером"

#: ../../whatsnew/3.4.rst:589
msgid "Improved Modules"
msgstr "Улучшенные модули"

#: ../../whatsnew/3.4.rst:593
msgid "abc"
msgstr "abc"

#: ../../whatsnew/3.4.rst:595
msgid ""
"New function :func:`abc.get_cache_token` can be used to know when to "
"invalidate caches that are affected by changes in the object graph.  "
"(Contributed by Łukasz Langa in :issue:`16832`.)"
msgstr ""
"Новую функцию :func:`abc.get_cache_token` можно использовать, чтобы узнать, "
"когда делать недействительными кеши, на которые влияют изменения в графе "
"объектов. (Предоставлено Лукашом Лангой в :issue:`16832`.)"

#: ../../whatsnew/3.4.rst:599
msgid ""
"New class :class:`~abc.ABC` has :class:`~abc.ABCMeta` as its meta class. "
"Using ``ABC`` as a base class has essentially the same effect as specifying "
"``metaclass=abc.ABCMeta``, but is simpler to type and easier to read. "
"(Contributed by Bruno Dupuis in :issue:`16049`.)"
msgstr ""
"Новый класс :class:`~abc.ABC` имеет :class:`~abc.ABCMeta` в качестве "
"метакласса. Использование ABC в качестве базового класса имеет по существу "
"тот же эффект, что и указание Metaclass=abc.ABCMeta, но его проще набирать и "
"легче читать. (Предоставлено Бруно Дюпюи в :issue:`16049`.)"

#: ../../whatsnew/3.4.rst:606
msgid "aifc"
msgstr "aifc"

#: ../../whatsnew/3.4.rst:608
msgid ""
"The :meth:`~aifc.aifc.getparams` method now returns a namedtuple rather than "
"a plain tuple.  (Contributed by Claudiu Popa in :issue:`17818`.)"
msgstr ""
"Метод :meth:`~aifc.aifc.getparams` теперь возвращает именованный кортеж, а "
"не простой кортеж. (Предоставлено Клаудиу Попа в :issue:`17818`.)"

#: ../../whatsnew/3.4.rst:611
msgid ""
":func:`aifc.open` now supports the context management protocol: when used in "
"a :keyword:`with` block, the :meth:`~aifc.aifc.close` method of the returned "
"object will be called automatically at the end of the block.  (Contributed "
"by Serhiy Storchacha in :issue:`16486`.)"
msgstr ""
":func:`aifc.open` теперь поддерживает протокол управления контекстом: при "
"использовании в блоке :keyword:`with` метод :meth:`~aifc.aifc.close` "
"возвращаемого объекта будет вызываться автоматически в конец блока. (Внесено "
"Сергеем Сторчачей в :issue:`16486`.)"

#: ../../whatsnew/3.4.rst:616
msgid ""
"The :meth:`~aifc.aifc.writeframesraw` and :meth:`~aifc.aifc.writeframes` "
"methods now accept any :term:`bytes-like object`.  (Contributed by Serhiy "
"Storchaka in :issue:`8311`.)"
msgstr ""
"Методы :meth:`~aifc.aifc.writeframesraw` и :meth:`~aifc.aifc.writeframes` "
"теперь принимают любой :term:`байтовый объект`. (Предоставлено Сергеем "
"Сторчакой в ​​:issue:`8311`.)"

#: ../../whatsnew/3.4.rst:622
msgid "argparse"
msgstr "argparse"

#: ../../whatsnew/3.4.rst:624
msgid ""
"The :class:`~argparse.FileType` class now accepts *encoding* and *errors* "
"arguments, which are passed through to :func:`open`.  (Contributed by Lucas "
"Maystre in :issue:`11175`.)"
msgstr ""
"Класс :class:`~argparse.FileType` теперь принимает аргументы *encoding* и "
"*errors*, которые передаются в :func:`open`. (Предоставлено Лукасом Майстре "
"в :issue:`11175`.)"

#: ../../whatsnew/3.4.rst:630
msgid "audioop"
msgstr "audioop"

#: ../../whatsnew/3.4.rst:632
msgid ""
":mod:`audioop` now supports 24-bit samples.  (Contributed by Serhiy "
"Storchaka in :issue:`12866`.)"
msgstr ""
":mod:`audioop` теперь поддерживает 24-битные сэмплы. (Добавлен Сергеем "
"Сторчакой в ​​:issue:`12866`.)"

#: ../../whatsnew/3.4.rst:635
msgid ""
"New :func:`~audioop.byteswap` function converts big-endian samples to little-"
"endian and vice versa.  (Contributed by Serhiy Storchaka in :issue:`19641`.)"
msgstr ""
"Новая функция :func:`~audioop.byteswap` преобразует сэмплы с прямым порядком "
"байтов в семплы с прямым порядком байтов и наоборот. (Предоставлено Сергеем "
"Сторчакой в ​​:issue:`19641`.)"

#: ../../whatsnew/3.4.rst:639
msgid ""
"All :mod:`audioop` functions now accept any :term:`bytes-like object`.  "
"Strings are not accepted: they didn't work before, now they raise an error "
"right away. (Contributed by Serhiy Storchaka in :issue:`16685`.)"
msgstr ""
"Все функции :mod:`audioop` теперь принимают любой :term:`байтовый объект`. "
"Строки не принимаются: раньше не работали, теперь сразу выдают ошибку. "
"(Добавлен Сергеем Сторчакой в ​​:issue:`16685`.)"

#: ../../whatsnew/3.4.rst:645
msgid "base64"
msgstr "base64"

#: ../../whatsnew/3.4.rst:647
msgid ""
"The encoding and decoding functions in :mod:`base64` now accept any :term:"
"`bytes-like object` in cases where it previously required a :class:`bytes` "
"or :class:`bytearray` instance.  (Contributed by Nick Coghlan in :issue:"
"`17839`.)"
msgstr ""
"Функции кодирования и декодирования в :mod:`base64` теперь принимают любой :"
"term:`bytes-подобный объект` в тех случаях, когда ранее для него требовался "
"экземпляр :class:`bytes` или :class:`bytearray`. (Предоставлено Ником "
"Когланом в :issue:`17839`.)"

#: ../../whatsnew/3.4.rst:652
msgid ""
"New functions :func:`~base64.a85encode`, :func:`~base64.a85decode`, :func:"
"`~base64.b85encode`, and :func:`~base64.b85decode` provide the ability to "
"encode and decode binary data from and to ``Ascii85`` and the git/mercurial "
"``Base85`` formats, respectively.  The ``a85`` functions have options that "
"can be used to make them compatible with the variants of the ``Ascii85`` "
"encoding, including the Adobe variant.  (Contributed by Martin Morrison, the "
"Mercurial project, Serhiy Storchaka, and Antoine Pitrou in :issue:`17618`.)"
msgstr ""
"Новые функции :func:`~base64.a85encode`, :func:`~base64.a85decode`, :func:"
"`~base64.b85encode` и :func:`~base64.b85decode` предоставляют возможность "
"кодировать и декодировать двоичные файлы. данные из и в форматы Ascii85 и "
"git/mercurial Base85 соответственно. Функции ``a85`` имеют параметры, "
"которые можно использовать для обеспечения их совместимости с вариантами "
"кодировки ``Ascii85``, включая вариант Adobe. (Предоставлено Мартином "
"Моррисоном, проект Mercurial, Сергеем Сторчакой и Антуаном Питру в :issue:"
"`17618`.)"

#: ../../whatsnew/3.4.rst:662
msgid "collections"
msgstr "коллекции"

#: ../../whatsnew/3.4.rst:664
msgid ""
"The :meth:`.ChainMap.new_child` method now accepts an *m* argument "
"specifying the child map to add to the chain.  This allows an existing "
"mapping and/or a custom mapping type to be used for the child.  (Contributed "
"by Vinay Sajip in :issue:`16613`.)"
msgstr ""
"Метод :meth:`.ChainMap.new_child` теперь принимает аргумент *m*, указывающий "
"дочернюю карту, добавляемую в цепочку. Это позволяет использовать "
"существующее сопоставление и/или пользовательский тип сопоставления для "
"дочернего элемента. (Предоставлено Винаем Саджипом в :issue:`16613`.)"

#: ../../whatsnew/3.4.rst:671
msgid "colorsys"
msgstr "colorsys"

#: ../../whatsnew/3.4.rst:673
msgid ""
"The number of digits in the coefficients for the RGB --- YIQ conversions "
"have been expanded so that they match the FCC NTSC versions.  The change in "
"results should be less than 1% and may better match results found elsewhere. "
"(Contributed by Brian Landers and Serhiy Storchaka in :issue:`14323`.)"
msgstr ""
"Количество цифр в коэффициентах для преобразований RGB --- YIQ было "
"расширено, чтобы они соответствовали версиям FCC NTSC. Изменение результатов "
"должно составлять менее 1% и может лучше соответствовать результатам, "
"полученным в других местах. (Предоставлено Брайаном Ландерсом и Сергеем "
"Сторчакой в ​​:issue:`14323`.)"

#: ../../whatsnew/3.4.rst:680
msgid "contextlib"
msgstr "contextlib"

#: ../../whatsnew/3.4.rst:682
msgid ""
"The new :class:`contextlib.suppress` context manager helps to clarify the "
"intent of code that deliberately suppresses exceptions from a single "
"statement.  (Contributed by Raymond Hettinger in :issue:`15806` and Zero "
"Piraeus in :issue:`19266`.)"
msgstr ""
"Новый контекстный менеджер :class:`contextlib.suppress` помогает прояснить "
"назначение кода, который намеренно подавляет исключения из одного оператора. "
"(Предоставлено Раймондом Хеттингером в :issue:`15806` и Zero Piraeus в :"
"issue:`19266`.)"

#: ../../whatsnew/3.4.rst:687
msgid ""
"The new :func:`contextlib.redirect_stdout` context manager makes it easier "
"for utility scripts to handle inflexible APIs that write their output to :"
"data:`sys.stdout` and don't provide any options to redirect it.  Using the "
"context manager, the :data:`sys.stdout` output can be redirected to any "
"other stream or, in conjunction with :class:`io.StringIO`, to a string. The "
"latter can be especially useful, for example, to capture output from a "
"function that was written to implement a command line interface. It is "
"recommended only for utility scripts because it affects the global state of :"
"data:`sys.stdout`.  (Contributed by Raymond Hettinger in :issue:`15805`.)"
msgstr ""
"Новый контекстный менеджер :func:`contextlib.redirect_stdout` упрощает "
"служебным сценариям обработку негибких API, которые записывают свои выходные "
"данные в :data:`sys.stdout` и не предоставляют никаких возможностей для их "
"перенаправления. С помощью диспетчера контекста вывод :data:`sys.stdout` "
"можно перенаправить в любой другой поток или, в сочетании с :class:`io."
"StringIO`, в строку. Последнее может быть особенно полезно, например, для "
"захвата вывода функции, написанной для реализации интерфейса командной "
"строки. Рекомендуется только для служебных сценариев, поскольку влияет на "
"глобальное состояние :data:`sys.stdout`. (Предоставлено Рэймондом "
"Хеттингером в :issue:`15805`.)"

#: ../../whatsnew/3.4.rst:698
msgid ""
"The :mod:`contextlib` documentation has also been updated to include a :ref:"
"`discussion <single-use-reusable-and-reentrant-cms>` of the differences "
"between single use, reusable and reentrant context managers."
msgstr ""
"Документация :mod:`contextlib` также была обновлена ​​и теперь включает :ref:"
"`обсуждение <single-use-reusable-and-reentrant-cms>` различий между "
"одноразовыми, многоразовыми и реентерабельными контекстными менеджерами."

#: ../../whatsnew/3.4.rst:704
msgid "dbm"
msgstr "dbm"

#: ../../whatsnew/3.4.rst:706
msgid ""
":func:`dbm.open` objects now support the context management protocol.  When "
"used in a :keyword:`with` statement, the ``close`` method of the database "
"object will be called automatically at the end of the block.  (Contributed "
"by Claudiu Popa and Nick Coghlan in :issue:`19282`.)"
msgstr ""
"Объекты :func:`dbm.open` теперь поддерживают протокол управления контекстом. "
"При использовании в операторе :keyword:`with` метод close объекта базы "
"данных будет вызываться автоматически в конце блока. (Предоставлено Клаудиу "
"Попа и Ником Когланом в :issue:`19282`.)"

#: ../../whatsnew/3.4.rst:713
msgid "dis"
msgstr "dis"

#: ../../whatsnew/3.4.rst:715
msgid ""
"Functions :func:`~dis.show_code`, :func:`~dis.dis`, :func:`~dis.distb`, and :"
"func:`~dis.disassemble` now accept a keyword-only *file* argument that "
"controls where they write their output."
msgstr ""
"Функции :func:`~dis.show_code`, :func:`~dis.dis`, :func:`~dis.distb` и :func:"
"`~dis.disassemble` теперь принимают файл *file*, содержащий только ключевые "
"слова. аргумент, который контролирует, куда они записывают свои выходные "
"данные."

#: ../../whatsnew/3.4.rst:719
msgid ""
"The :mod:`dis` module is now built around an :class:`~dis.Instruction` class "
"that provides object oriented access to the details of each individual "
"bytecode operation."
msgstr ""
"Модуль :mod:`dis` теперь построен на основе класса :class:`~dis."
"Instruction`, который обеспечивает объектно-ориентированный доступ к деталям "
"каждой отдельной операции с байт-кодом."

#: ../../whatsnew/3.4.rst:723
msgid ""
"A new method, :func:`~dis.get_instructions`, provides an iterator that emits "
"the Instruction stream for a given piece of Python code.  Thus it is now "
"possible to write a program that inspects and manipulates a bytecode object "
"in ways different from those provided by the :mod:`~dis` module itself.  For "
"example::"
msgstr ""
"Новый метод :func:`~dis.get_instructions` предоставляет итератор, который "
"генерирует поток инструкций для заданного фрагмента кода Python. Таким "
"образом, теперь можно написать программу, которая проверяет и манипулирует "
"объектом байт-кода способами, отличными от тех, которые предусмотрены самим "
"модулем :mod:`~dis`. Например::"

#: ../../whatsnew/3.4.rst:737
msgid ""
"The various display tools in the :mod:`dis` module have been rewritten to "
"use these new components."
msgstr ""
"Различные инструменты отображения в модуле :mod:`dis` были переписаны для "
"использования этих новых компонентов."

#: ../../whatsnew/3.4.rst:740
msgid ""
"In addition, a new application-friendly class :class:`~dis.Bytecode` "
"provides an object-oriented API for inspecting bytecode in both in human-"
"readable form and for iterating over instructions.  The :class:`~dis."
"Bytecode` constructor takes the same arguments that :func:`~dis."
"get_instruction` does (plus an optional *current_offset*), and the resulting "
"object can be iterated to produce :class:`~dis.Instruction` objects.  But it "
"also has a :mod:`~dis.Bytecode.dis` method, equivalent to calling :mod:`~dis."
"dis` on the constructor argument, but returned as a multi-line string::"
msgstr ""
"Кроме того, новый удобный для приложений класс :class:`~dis.Bytecode` "
"предоставляет объектно-ориентированный API для проверки байт-кода как в "
"удобочитаемой форме, так и для перебора инструкций. Конструктор :class:`~dis."
"Bytecode` принимает те же аргументы, что и :func:`~dis.get_instruction` "
"(плюс необязательный *current_offset*), и полученный объект можно перебирать "
"для создания :class:`~dis Объекты .Instruction. Но у него также есть метод :"
"mod:`~dis.Bytecode.dis`, эквивалентный вызову :mod:`~dis.dis` для аргумента "
"конструктора, но возвращаемый в виде многострочной строки::"

#: ../../whatsnew/3.4.rst:762
msgid ""
":class:`~dis.Bytecode` also has a class method, :meth:`~dis.Bytecode."
"from_traceback`, that provides the ability to manipulate a traceback (that "
"is, ``print(Bytecode.from_traceback(tb).dis())`` is equivalent to "
"``distb(tb)``)."
msgstr ""
":class:`~dis.Bytecode` также имеет метод класса :meth:`~dis.Bytecode."
"from_traceback`, который предоставляет возможность манипулировать обратной "
"трассировкой (то есть ``print(Bytecode.from_traceback(tb). dis())`` "
"эквивалентен ``distb(tb)``)."

#: ../../whatsnew/3.4.rst:767
msgid ""
"(Contributed by Nick Coghlan, Ryan Kelly and Thomas Kluyver in :issue:"
"`11816` and Claudiu Popa in :issue:`17916`.)"
msgstr ""
"(Сообщили Ник Коглан, Райан Келли и Томас Клюйвер в :issue:`11816` и Клаудиу "
"Попа в :issue:`17916`.)"

#: ../../whatsnew/3.4.rst:770
msgid ""
"New function :func:`~dis.stack_effect` computes the effect on the Python "
"stack of a given opcode and argument, information that is not otherwise "
"available. (Contributed by Larry Hastings in :issue:`19722`.)"
msgstr ""
"Новая функция :func:`~dis.stack_effect` вычисляет влияние на стек Python "
"заданного кода операции и аргумента, информация, которая иначе недоступна. "
"(Предоставлено Ларри Гастингсом в :issue:`19722`.)"

#: ../../whatsnew/3.4.rst:776
msgid "doctest"
msgstr "doctest"

#: ../../whatsnew/3.4.rst:778
msgid ""
"A new :ref:`option flag <doctest-options>`, :const:`~doctest.FAIL_FAST`, "
"halts test running as soon as the first failure is detected.  (Contributed "
"by R. David Murray and Daniel Urban in :issue:`16522`.)"
msgstr ""
"Новый флаг опции <doctest-options>`, :const:`~doctest.FAIL_FAST`, "
"останавливает выполнение теста, как только обнаруживается первый сбой. "
"(Предоставлено Р. Дэвидом Мюрреем и Дэниелом Урбаном в :issue:`16522`.)"

#: ../../whatsnew/3.4.rst:782
msgid ""
"The :mod:`doctest` command line interface now uses :mod:`argparse`, and has "
"two new options, ``-o`` and ``-f``.  ``-o`` allows :ref:`doctest options "
"<doctest-options>` to be specified on the command line, and ``-f`` is a "
"shorthand for ``-o FAIL_FAST`` (to parallel the similar option supported by "
"the :mod:`unittest` CLI).  (Contributed by R. David Murray in :issue:"
"`11390`.)"
msgstr ""
"Интерфейс командной строки :mod:`doctest` теперь использует :mod:`argparse` "
"и имеет две новые опции: ``-o`` и ``-f``. ``-o`` позволяет указывать опции "
"doctest <doctest-options>` в командной строке, а ``-f`` является сокращением "
"для ``-o FAIL_FAST`` (для параллельного выполнения аналогичного опция, "
"поддерживаемая CLI :mod:`unittest`). (Предоставлено Р. Дэвидом Мюрреем в :"
"issue:`11390`.)"

#: ../../whatsnew/3.4.rst:788
msgid ""
":mod:`doctest` will now find doctests in extension module ``__doc__`` "
"strings. (Contributed by Zachary Ware in :issue:`3158`.)"
msgstr ""
":mod:`doctest` теперь будет искать доктесты в строках модуля расширения "
"``__doc__``. (Предоставлено Закари Уэром в :issue:`3158`.)"

#: ../../whatsnew/3.4.rst:793
msgid "email"
msgstr "электронная почта"

#: ../../whatsnew/3.4.rst:795
msgid ""
":meth:`~email.message.Message.as_string` now accepts a *policy* argument to "
"override the default policy of the message when generating a string "
"representation of it.  This means that ``as_string`` can now be used in more "
"circumstances, instead of having to create and use a :mod:`~email.generator` "
"in order to pass formatting parameters to its ``flatten`` method.  "
"(Contributed by R. David Murray in :issue:`18600`.)"
msgstr ""
":meth:`~email.message.Message.as_string` теперь принимает аргумент *policy* "
"для переопределения политики сообщения по умолчанию при создании его "
"строкового представления. Это означает, что ``as_string`` теперь можно "
"использовать в большем количестве случаев, вместо того, чтобы создавать и "
"использовать :mod:`~email.generator` для передачи параметров форматирования "
"в его `` Flatten`` метод. (Предоставлено Р. Дэвидом Мюрреем в :issue:"
"`18600`.)"

#: ../../whatsnew/3.4.rst:802
msgid ""
"New method :meth:`~email.message.Message.as_bytes` added to produce a bytes "
"representation of the message in a fashion similar to how ``as_string`` "
"produces a string representation.  It does not accept the *maxheaderlen* "
"argument, but does accept the *unixfrom* and *policy* arguments. The :class:"
"`~email.message.Message` :meth:`~email.message.Message.__bytes__` method "
"calls it, meaning that ``bytes(mymsg)`` will now produce the intuitive "
"result:  a bytes object containing the fully formatted message.  "
"(Contributed by R. David Murray in :issue:`18600`.)"
msgstr ""
"Добавлен новый метод :meth:`~email.message.Message.as_bytes` для создания "
"байтового представления сообщения аналогично тому, как ``as_string`` создает "
"строковое представление. Он не принимает аргумент *maxheaderlen*, но "
"принимает аргументы *unixfrom* и *policy*. Метод :class:`~email.message."
"Message` :meth:`~email.message.Message.__bytes__` вызывает его, а это "
"означает, что ``bytes(mymsg)`` теперь выдаст интуитивно понятный результат: "
"объект bytes, содержащий полностью отформатированное сообщение. "
"(Предоставлено Р. Дэвидом Мюрреем в :issue:`18600`.)"

#: ../../whatsnew/3.4.rst:811
msgid ""
"The :meth:`.Message.set_param` message now accepts a *replace* keyword "
"argument. When specified, the associated header will be updated without "
"changing its location in the list of headers.  For backward compatibility, "
"the default is ``False``.  (Contributed by R. David Murray in :issue:"
"`18891`.)"
msgstr ""
"Сообщение :meth:`.Message.set_param` теперь принимает аргумент ключевого "
"слова *replace*. Если указано, связанный заголовок будет обновлен без "
"изменения его местоположения в списке заголовков. Для обратной совместимости "
"по умолчанию установлено значение «False». (Предоставлено Р. Дэвидом Мюрреем "
"в :issue:`18891`.)"

#: ../../whatsnew/3.4.rst:819
msgid ""
"A pair of new subclasses of :class:`~email.message.Message` have been added "
"(:class:`.EmailMessage` and :class:`.MIMEPart`), along with a new sub-"
"module, :mod:`~email.contentmanager` and a new :mod:`~email.policy` "
"attribute :attr:`~email.policy.EmailPolicy.content_manager`.  All "
"documentation is currently in the new module, which is being added as part "
"of email's new :term:`provisional API`.  These classes provide a number of "
"new methods that make extracting content from and inserting content into "
"email messages much easier.  For details, see the :mod:`~email."
"contentmanager` documentation and the :ref:`email-examples`.  These API "
"additions complete the bulk of the work that was planned as part of the "
"email6 project.  The currently provisional API is scheduled to become final "
"in Python 3.5 (possibly with a few minor additions in the area of error "
"handling).  (Contributed by R. David Murray in :issue:`18891`.)"
msgstr ""
"Была добавлена ​​пара новых подклассов :class:`~email.message.Message` (:class:"
"`.EmailMessage` и :class:`.MIMEPart`), а также новый подмодуль :mod:` ~email."
"contentmanager` и новый атрибут :mod:`~email.policy` :attr:`~email.policy."
"EmailPolicy.content_manager`. Вся документация в настоящее время находится в "
"новом модуле, который добавляется как часть нового :term:`предварительного "
"API` электронной почты. Эти классы предоставляют ряд новых методов, которые "
"значительно упрощают извлечение содержимого и вставку содержимого в "
"сообщения электронной почты. Подробности смотрите в документации :mod:"
"`~email.contentmanager` и :ref:`email-examples`. Эти дополнения API "
"завершают основную часть работы, запланированной в рамках проекта email6. "
"Планируется, что нынешний предварительный API станет окончательным в Python "
"3.5 (возможно, с несколькими незначительными дополнениями в области "
"обработки ошибок). (Предоставлено Р. Дэвидом Мюрреем в :issue:`18891`.)"

#: ../../whatsnew/3.4.rst:835
msgid "filecmp"
msgstr "filecmp"

#: ../../whatsnew/3.4.rst:837
msgid ""
"A new :func:`~filecmp.clear_cache` function provides the ability to clear "
"the :mod:`filecmp` comparison cache, which uses :func:`os.stat` information "
"to determine if the file has changed since the last compare.  This can be "
"used, for example, if the file might have been changed and re-checked in "
"less time than the resolution of a particular filesystem's file modification "
"time field. (Contributed by Mark Levitt in :issue:`18149`.)"
msgstr ""
"Новая функция :func:`~filecmp.clear_cache` обеспечивает возможность очистки "
"кэша сравнения :mod:`filecmp`, который использует информацию :func:`os.stat` "
"для определения того, изменился ли файл с момента последнего сравнения. Это "
"можно использовать, например, если файл мог быть изменен и перепроверен за "
"меньшее время, чем разрешение поля времени модификации файла конкретной "
"файловой системы. (Предоставлено Марком Левиттом в :issue:`18149`.)"

#: ../../whatsnew/3.4.rst:844
msgid ""
"New module attribute :const:`~filecmp.DEFAULT_IGNORES` provides the list of "
"directories that are used as the default value for the *ignore* parameter of "
"the :func:`~filecmp.dircmp` function.  (Contributed by Eli Bendersky in :"
"issue:`15442`.)"
msgstr ""
"Новый атрибут модуля :const:`~filecmp.DEFAULT_IGNORES` предоставляет список "
"каталогов, которые используются в качестве значения по умолчанию для "
"параметра *ignore* функции :func:`~filecmp.dircmp`. (Предоставлено Эли "
"Бендерским в :issue:`15442`.)"

#: ../../whatsnew/3.4.rst:851
msgid "functools"
msgstr "functools"

#: ../../whatsnew/3.4.rst:853
msgid ""
"The new :func:`~functools.partialmethod` descriptor brings partial argument "
"application to descriptors, just as :func:`~functools.partial` provides for "
"normal callables. The new descriptor also makes it easier to get arbitrary "
"callables (including :func:`~functools.partial` instances) to behave like "
"normal instance methods when included in a class definition. (Contributed by "
"Alon Horev and Nick Coghlan in :issue:`4331`.)"
msgstr ""
"Новый дескриптор :func:`~functools.partialmethod` обеспечивает применение "
"частичных аргументов к дескрипторам, точно так же, как :func:`~functools."
"partial` обеспечивает обычные вызываемые объекты. Новый дескриптор также "
"упрощает получение произвольных вызываемых объектов (включая экземпляры :"
"func:`~functools.partial`), которые будут вести себя как обычные методы "
"экземпляра при включении в определение класса. (Предоставлено Алоном Хоревом "
"и Ником Когланом в :issue:`4331`.)"

#: ../../whatsnew/3.4.rst:862
msgid ""
"The new :func:`~functools.singledispatch` decorator brings support for "
"single-dispatch generic functions to the Python standard library. Where "
"object oriented programming focuses on grouping multiple operations on a "
"common set of data into a class, a generic function focuses on grouping "
"multiple implementations of an operation that allows it to work with "
"*different* kinds of data."
msgstr ""
"Новый декоратор :func:`~functools.singledispatch` обеспечивает поддержку "
"универсальных функций с одной отправкой в ​​стандартной библиотеке Python. В "
"то время как объектно-ориентированное программирование фокусируется на "
"группировке нескольких операций над общим набором данных в класс, "
"универсальная функция фокусируется на группировке нескольких реализаций "
"операции, что позволяет ей работать с *разными* типами данных."

#: ../../whatsnew/3.4.rst:871
msgid ":pep:`443` -- Single-dispatch generic functions"
msgstr ":pep:`443` -- Общие функции для одной отправки"

#: ../../whatsnew/3.4.rst:872
msgid "PEP written and implemented by Łukasz Langa."
msgstr "PEP написан и реализован Лукашом Лангой."

#: ../../whatsnew/3.4.rst:874
msgid ""
":func:`~functools.total_ordering` now supports a return value of :data:"
"`NotImplemented` from the underlying comparison function.  (Contributed by "
"Katie Miller in :issue:`10042`.)"
msgstr ""
":func:`~functools.total_ordering` теперь поддерживает возвращаемое значение :"
"data:`NotImplemented` из базовой функции сравнения. (Предоставлено Кэти "
"Миллер в :issue:`10042`.)"

#: ../../whatsnew/3.4.rst:878
msgid ""
"A pure-python version of the :func:`~functools.partial` function is now in "
"the stdlib; in CPython it is overridden by the C accelerated version, but it "
"is available for other implementations to use.  (Contributed by Brian Thorne "
"in :issue:`12428`.)"
msgstr ""
"Версия функции :func:`~functools.partial`, написанная на чистом Python, "
"теперь находится в стандартной библиотеке; в CPython он переопределяется "
"ускоренной версией C, но доступен для использования в других реализациях. "
"(Предоставлено Брайаном Торном в :issue:`12428`.)"

#: ../../whatsnew/3.4.rst:885
msgid "gc"
msgstr "gc"

#: ../../whatsnew/3.4.rst:887
msgid ""
"New function :func:`~gc.get_stats` returns a list of three per-generation "
"dictionaries containing the collections statistics since interpreter "
"startup. (Contributed by Antoine Pitrou in :issue:`16351`.)"
msgstr ""
"Новая функция :func:`~gc.get_stats` возвращает список из трёх словарей "
"каждого поколения, содержащий статистику коллекций с момента запуска "
"интерпретатора. (Предоставлено Антуаном Питру в :issue:`16351`.)"

#: ../../whatsnew/3.4.rst:893
msgid "glob"
msgstr "glob"

#: ../../whatsnew/3.4.rst:895
msgid ""
"A new function :func:`~glob.escape` provides a way to escape special "
"characters in a filename so that they do not become part of the globbing "
"expansion but are instead matched literally.  (Contributed by Serhiy "
"Storchaka in :issue:`8402`.)"
msgstr ""
"Новая функция :func:`~glob.escape` предоставляет возможность экранировать "
"специальные символы в имени файла, чтобы они не становились частью "
"подстановочного расширения, а вместо этого сопоставлялись буквально. "
"(Внесено Сергеем Сторчакой в ​​:issue:`8402`.)"

#: ../../whatsnew/3.4.rst:901
msgid "hashlib"
msgstr "hashlib"

#: ../../whatsnew/3.4.rst:903
msgid ""
"A new :func:`hashlib.pbkdf2_hmac` function provides the `PKCS#5 password-"
"based key derivation function 2 <https://en.wikipedia.org/wiki/PBKDF2>`_.  "
"(Contributed by Christian Heimes in :issue:`18582`.)"
msgstr ""
"Новая функция :func:`hashlib.pbkdf2_hmac` обеспечивает функцию деривации "
"ключей на основе пароля PKCS#5 2 <https://en.wikipedia.org/wiki/PBKDF2>`_. "
"(Предоставлено Кристианом Хаймсом в :issue:`18582`.)"

#: ../../whatsnew/3.4.rst:908
msgid ""
"The :attr:`~hashlib.hash.name` attribute of :mod:`hashlib` hash objects is "
"now a formally supported interface.  It has always existed in CPython's :mod:"
"`hashlib` (although it did not return lower case names for all supported "
"hashes), but it was not a public interface and so some other Python "
"implementations have not previously supported it.  (Contributed by Jason R. "
"Coombs in :issue:`18532`.)"
msgstr ""
"Атрибут :attr:`~hashlib.hash.name` хеш-объектов :mod:`hashlib` теперь "
"является официально поддерживаемым интерфейсом. Он всегда существовал в :mod:"
"`hashlib` CPython (хотя он не возвращал имена в нижнем регистре для всех "
"поддерживаемых хешей), но он не был общедоступным интерфейсом, и поэтому "
"некоторые другие реализации Python ранее его не поддерживали. (Предоставлено "
"Джейсоном Р. Кумбсом в :issue:`18532`.)"

#: ../../whatsnew/3.4.rst:917
msgid "hmac"
msgstr "hmac"

#: ../../whatsnew/3.4.rst:919
msgid ""
":mod:`hmac` now accepts ``bytearray`` as well as ``bytes`` for the *key* "
"argument to the :func:`~hmac.new` function, and the *msg* parameter to both "
"the :func:`~hmac.new` function and the :meth:`~hmac.HMAC.update` method now "
"accepts any type supported by the :mod:`hashlib` module.  (Contributed by "
"Jonas Borgström in :issue:`18240`.)"
msgstr ""
":mod:`hmac` теперь принимает ``bytearray``, а также ``bytes`` в качестве "
"аргумента *key* для функции :func:`~hmac.new`, а также параметр *msg* для "
"обоих: func:`~hmac.new` и метод :meth:`~hmac.HMAC.update` теперь принимают "
"любой тип, поддерживаемый модулем :mod:`hashlib`. (Предоставлено Йонасом "
"Боргстремом в :issue:`18240`.)"

#: ../../whatsnew/3.4.rst:925
msgid ""
"The *digestmod* argument to the :func:`hmac.new` function may now be any "
"hash digest name recognized by :mod:`hashlib`.  In addition, the current "
"behavior in which the value of *digestmod* defaults to ``MD5`` is "
"deprecated: in a future version of Python there will be no default value.  "
"(Contributed by Christian Heimes in :issue:`17276`.)"
msgstr ""
"Аргументом *digestmod* функции :func:`hmac.new` теперь может быть любое имя "
"хеш-дайджеста, распознаваемое :mod:`hashlib`. Кроме того, текущее поведение, "
"при котором значение *digestmod* по умолчанию равно MD5, устарело: в будущей "
"версии Python не будет значения по умолчанию. (Предоставлено Кристианом "
"Хаймсом в :issue:`17276`.)"

#: ../../whatsnew/3.4.rst:931
msgid ""
"With the addition of :attr:`~hmac.HMAC.block_size` and :attr:`~hmac.HMAC."
"name` attributes (and the formal documentation of the :attr:`~hmac.HMAC."
"digest_size` attribute), the :mod:`hmac` module now conforms fully to the :"
"pep:`247` API. (Contributed by Christian Heimes in :issue:`18775`.)"
msgstr ""
"С добавлением атрибутов :attr:`~hmac.HMAC.block_size` и :attr:`~hmac.HMAC."
"name` (и официальной документации атрибута :attr:`~hmac.HMAC.digest_size`) "
"Модуль :mod:`hmac` теперь полностью соответствует API :pep:`247`. "
"(Предоставлено Кристианом Хаймсом в :issue:`18775`.)"

#: ../../whatsnew/3.4.rst:938
msgid "html"
msgstr "html"

#: ../../whatsnew/3.4.rst:940
msgid ""
"New function :func:`~html.unescape` function converts HTML5 character "
"references to the corresponding Unicode characters.  (Contributed by Ezio "
"Melotti in :issue:`2927`.)"
msgstr ""
"Новая функция :func:`~html.unescape` преобразует ссылки на символы HTML5 в "
"соответствующие символы Юникода. (Предоставлено Эцио Мелотти в :issue:"
"`2927`.)"

#: ../../whatsnew/3.4.rst:944
msgid ""
":class:`~html.parser.HTMLParser` accepts a new keyword argument "
"*convert_charrefs* that, when ``True``, automatically converts all character "
"references.  For backward-compatibility, its value defaults to ``False``, "
"but it will change to ``True`` in a future version of Python, so you are "
"invited to set it explicitly and update your code to use this new feature.  "
"(Contributed by Ezio Melotti in :issue:`13633`.)"
msgstr ""
":class:`~html.parser.HTMLParser` принимает новый аргумент ключевого слова "
"*convert_charrefs*, который, когда ``True``, автоматически преобразует все "
"ссылки на символы. Для обеспечения обратной совместимости его значение по "
"умолчанию равно «False», но в будущей версии Python оно изменится на «True», "
"поэтому вам предлагается установить его явно и обновить свой код для "
"использования этой новой функции. (Предоставлено Эцио Мелотти в :issue:"
"`13633`.)"

#: ../../whatsnew/3.4.rst:951
msgid ""
"The *strict* argument of :class:`~html.parser.HTMLParser` is now deprecated. "
"(Contributed by Ezio Melotti in :issue:`15114`.)"
msgstr ""
"Аргумент *strict* :class:`~html.parser.HTMLParser` устарел. (Предоставлено "
"Эцио Мелотти в :issue:`15114`.)"

#: ../../whatsnew/3.4.rst:956
msgid "http"
msgstr "http"

#: ../../whatsnew/3.4.rst:958
msgid ""
":meth:`~http.server.BaseHTTPRequestHandler.send_error` now accepts an "
"optional additional *explain* parameter which can be used to provide an "
"extended error description, overriding the hardcoded default if there is "
"one. This extended error description will be formatted using the :attr:"
"`~http.server.HTTP.error_message_format` attribute and sent as the body of "
"the error response.  (Contributed by Karl Cow in :issue:`12921`.)"
msgstr ""
":meth:`~http.server.BaseHTTPRequestHandler.send_error` теперь принимает "
"необязательный дополнительный параметр *explain*, который можно использовать "
"для предоставления расширенного описания ошибки, переопределяя жестко "
"запрограммированное значение по умолчанию, если таковое имеется. Это "
"расширенное описание ошибки будет отформатировано с использованием атрибута :"
"attr:`~http.server.HTTP.error_message_format` и отправлено как тело ответа "
"об ошибке. (Предоставлено Карлом Коу в :issue:`12921`.)"

#: ../../whatsnew/3.4.rst:965
msgid ""
"The :mod:`http.server` :ref:`command line interface <http-server-cli>` now "
"has a ``-b/--bind`` option that causes the server to listen on a specific "
"address. (Contributed by Malte Swart in :issue:`17764`.)"
msgstr ""
"Интерфейс командной строки :mod:`http.server` :ref:`<http-server-cli>` "
"теперь имеет опцию ``-b/--bind``, которая заставляет сервер прослушивать "
"определенный адрес. (Предоставлено Мальте Свартом в :issue:`17764`.)"

#: ../../whatsnew/3.4.rst:971
msgid "idlelib and IDLE"
msgstr "idlelib и IDLE"

#: ../../whatsnew/3.4.rst:973
msgid ""
"Since idlelib implements the IDLE shell and editor and is not intended for "
"import by other programs, it gets improvements with every release. See :file:"
"`Lib/idlelib/NEWS.txt` for a cumulative list of changes since 3.3.0, as well "
"as changes made in future 3.4.x releases. This file is also available from "
"the IDLE :menuselection:`Help --> About IDLE` dialog."
msgstr ""
"Поскольку Idlelib реализует оболочку и редактор IDLE и не предназначен для "
"импорта другими программами, он совершенствуется с каждым выпуском. См. :"
"file:`Lib/idlelib/NEWS.txt` для получения совокупного списка изменений, "
"начиная с версии 3.3.0, а также изменений, внесенных в будущие выпуски 3.4."
"x. Этот файл также доступен в диалоговом окне IDLE :menuselection:`Справка --"
"> О IDLE`."

#: ../../whatsnew/3.4.rst:981
msgid "importlib"
msgstr "importlib"

#: ../../whatsnew/3.4.rst:983
msgid ""
"The :class:`~importlib.abc.InspectLoader` ABC defines a new method, :meth:"
"`~importlib.abc.InspectLoader.source_to_code` that accepts source data and a "
"path and returns a code object.  The default implementation is equivalent to "
"``compile(data, path, 'exec', dont_inherit=True)``. (Contributed by Eric "
"Snow and Brett Cannon in :issue:`15627`.)"
msgstr ""
":class:`~importlib.abc.InspectLoader` ABC определяет новый метод :meth:"
"`~importlib.abc.InspectLoader.source_to_code`, который принимает исходные "
"данные и путь и возвращает объект кода. Реализация по умолчанию эквивалентна "
"``compile(data, path, 'exec', dont_inherit=True)``. (Предоставлено Эриком "
"Сноу и Бреттом Кэнноном в :issue:`15627`.)"

#: ../../whatsnew/3.4.rst:989
msgid ""
":class:`~importlib.abc.InspectLoader` also now has a default implementation "
"for the :meth:`~importlib.abc.InspectLoader.get_code` method.  However, it "
"will normally be desirable to override the default implementation for "
"performance reasons.  (Contributed by Brett Cannon in :issue:`18072`.)"
msgstr ""
":class:`~importlib.abc.InspectLoader` также теперь имеет реализацию по "
"умолчанию для метода :meth:`~importlib.abc.InspectLoader.get_code`. Однако "
"обычно желательно переопределить реализацию по умолчанию из соображений "
"производительности. (Предоставлено Бреттом Кэнноном в :issue:`18072`.)"

#: ../../whatsnew/3.4.rst:994
msgid ""
"The :func:`~importlib.reload` function has been moved from :mod:`imp` to :"
"mod:`importlib` as part of the :mod:`imp` module deprecation.  (Contributed "
"by Berker Peksag in :issue:`18193`.)"
msgstr ""

#: ../../whatsnew/3.4.rst:998
msgid ""
":mod:`importlib.util` now has a :data:`~importlib.util.MAGIC_NUMBER` "
"attribute providing access to the bytecode version number.  This replaces "
"the :func:`~imp.get_magic` function in the deprecated :mod:`imp` module. "
"(Contributed by Brett Cannon in :issue:`18192`.)"
msgstr ""

#: ../../whatsnew/3.4.rst:1003
msgid ""
"New :mod:`importlib.util` functions :func:`~importlib.util."
"cache_from_source` and :func:`~importlib.util.source_from_cache` replace the "
"same-named functions in the deprecated :mod:`imp` module.  (Contributed by "
"Brett Cannon in :issue:`18194`.)"
msgstr ""

#: ../../whatsnew/3.4.rst:1008
msgid ""
"The :mod:`importlib` bootstrap :class:`.NamespaceLoader` now conforms to "
"the :class:`.InspectLoader` ABC, which means that ``runpy`` and ``python -"
"m`` can now be used with namespace packages.  (Contributed by Brett Cannon "
"in :issue:`18058`.)"
msgstr ""
"Загрузочный файл :mod:`importlib` :class:`.NamespaceLoader` теперь "
"соответствует :class:`.InspectLoader` ABC, что означает, что ``runpy`` и "
"``python -m`` теперь можно использовать с пространством имен. пакеты. "
"(Предоставлено Бреттом Кэнноном в :issue:`18058`.)"

#: ../../whatsnew/3.4.rst:1013
msgid ""
":mod:`importlib.util` has a new function :func:`~importlib.util."
"decode_source` that decodes source from bytes using universal newline "
"processing.  This is useful for implementing :meth:`.InspectLoader."
"get_source` methods."
msgstr ""
":mod:`importlib.util` имеет новую функцию :func:`~importlib.util."
"decode_source`, которая декодирует исходный код из байтов, используя "
"универсальную обработку новой строки. Это полезно для реализации методов :"
"meth:`.InspectLoader.get_source`."

#: ../../whatsnew/3.4.rst:1017
msgid ""
":class:`importlib.machinery.ExtensionFileLoader` now has a :meth:`~importlib."
"machinery.ExtensionFileLoader.get_filename` method.  This was inadvertently "
"omitted in the original implementation.  (Contributed by Eric Snow in :issue:"
"`19152`.)"
msgstr ""
":class:`importlib.machinery.ExtensionFileLoader` теперь имеет метод :meth:"
"`~importlib.machinery.ExtensionFileLoader.get_filename`. В исходной "
"реализации это было случайно опущено. (Предоставлено Эриком Сноу в :issue:"
"`19152`.)"

#: ../../whatsnew/3.4.rst:1024
msgid "inspect"
msgstr "inspect"

#: ../../whatsnew/3.4.rst:1026
msgid ""
"The :mod:`inspect` module now offers a basic :ref:`command line interface "
"<inspect-module-cli>` to quickly display source code and other information "
"for modules, classes and functions.  (Contributed by Claudiu Popa and Nick "
"Coghlan in :issue:`18626`.)"
msgstr ""
"Модуль :mod:`inspect` теперь предлагает базовый :ref:`интерфейс командной "
"строки <inspect-module-cli>` для быстрого отображения исходного кода и "
"другой информации для модулей, классов и функций. (Предоставлено Клаудиу "
"Попа и Ником Когланом в :issue:`18626`.)"

#: ../../whatsnew/3.4.rst:1031
msgid ""
":func:`~inspect.unwrap` makes it easy to unravel wrapper function chains "
"created by :func:`functools.wraps` (and any other API that sets the "
"``__wrapped__`` attribute on a wrapper function).  (Contributed by Daniel "
"Urban, Aaron Iles and Nick Coghlan in :issue:`13266`.)"
msgstr ""
":func:`~inspect.unwrap` позволяет легко распутывать цепочки функций-"
"оболочек, созданных :func:`functools.wraps` (и любым другим API, который "
"устанавливает атрибут ``__wrapped__`` для функции-обертки). (Предоставлено "
"Дэниелом Урбаном, Аароном Айлсом и Ником Когланом в :issue:`13266`.)"

#: ../../whatsnew/3.4.rst:1036
msgid ""
"As part of the implementation of the new :mod:`enum` module, the :mod:"
"`inspect` module now has substantially better support for custom ``__dir__`` "
"methods and dynamic class attributes provided through metaclasses.  "
"(Contributed by Ethan Furman in :issue:`18929` and :issue:`19030`.)"
msgstr ""
"В рамках реализации нового модуля :mod:`enum` модуль :mod:`inspect` теперь "
"имеет существенно лучшую поддержку пользовательских методов ``__dir__`` и "
"атрибутов динамического класса, предоставляемых через метаклассы. (Внесено "
"Итаном Фурманом в :issue:`18929` и :issue:`19030`.)"

#: ../../whatsnew/3.4.rst:1042
msgid ""
":func:`~inspect.getfullargspec` and :func:`~inspect.getargspec` now use the :"
"func:`~inspect.signature` API. This allows them to support a much broader "
"range of callables, including those with ``__signature__`` attributes, those "
"with metadata provided by argument clinic, :func:`functools.partial` objects "
"and more. Note that, unlike :func:`~inspect.signature`, these functions "
"still ignore ``__wrapped__`` attributes, and report the already bound first "
"argument for bound methods, so it is still necessary to update your code to "
"use :func:`~inspect.signature` directly if those features are desired. "
"(Contributed by Yury Selivanov in :issue:`17481`.)"
msgstr ""
":func:`~inspect.getfullargspec` и :func:`~inspect.getargspec` теперь "
"используют API :func:`~inspect.signature`. Это позволяет им поддерживать "
"гораздо более широкий спектр вызываемых объектов, включая те, которые имеют "
"атрибуты ``__signature__``, метаданные, предоставленные аргументом клиники, "
"объекты :func:`functools.partial` и многое другое. Обратите внимание, что, в "
"отличие от :func:`~inspect.signature`, эти функции по-прежнему игнорируют "
"атрибуты ``__wrapped__`` и сообщают уже связанный первый аргумент для "
"связанных методов, поэтому все равно необходимо обновить свой код для "
"использования :func: `~inspect.signature` напрямую, если эти функции "
"желательны. (Добавлен Юрием Селивановым в :issue:`17481`.)"

#: ../../whatsnew/3.4.rst:1053
msgid ""
":func:`~inspect.signature` now supports duck types of CPython functions, "
"which adds support for functions compiled with Cython.  (Contributed by "
"Stefan Behnel and Yury Selivanov in :issue:`17159`.)"
msgstr ""
":func:`~inspect.signature` теперь поддерживает утиные типы функций CPython, "
"что добавляет поддержку функций, скомпилированных с помощью Cython. "
"(Предоставлено Стефаном Бенелем и Юрием Селивановым в :issue:`17159`.)"

#: ../../whatsnew/3.4.rst:1059
msgid "ipaddress"
msgstr "ipaddress"

#: ../../whatsnew/3.4.rst:1061
msgid ""
":mod:`ipaddress` was added to the standard library in Python 3.3 as a :term:"
"`provisional API`. With the release of Python 3.4, this qualification has "
"been removed: :mod:`ipaddress` is now considered a stable API, covered by "
"the normal standard library requirements to maintain backwards compatibility."
msgstr ""
":mod:`ipaddress` был добавлен в стандартную библиотеку Python 3.3 как :term:"
"`предварительный API`. С выпуском Python 3.4 это условие было удалено: :mod:"
"`ipaddress` теперь считается стабильным API, на который распространяются "
"обычные требования стандартной библиотеки для обеспечения обратной "
"совместимости."

#: ../../whatsnew/3.4.rst:1067
msgid ""
"A new :attr:`~ipaddress.IPv4Address.is_global` property is ``True`` if an "
"address is globally routeable.  (Contributed by Peter Moody in :issue:"
"`17400`.)"
msgstr ""
"Новое свойство :attr:`~ipaddress.IPv4Address.is_global` имеет значение True, "
"если адрес является глобально маршрутизируемым. (Предоставлено Питером Муди "
"в :issue:`17400`.)"

#: ../../whatsnew/3.4.rst:1073
msgid "logging"
msgstr "логирование"

#: ../../whatsnew/3.4.rst:1075
msgid ""
"The :class:`~logging.handlers.TimedRotatingFileHandler` has a new *atTime* "
"parameter that can be used to specify the time of day when rollover should "
"happen.  (Contributed by Ronald Oussoren in :issue:`9556`.)"
msgstr ""
":class:`~logging.handlers.TimedRotatingFileHandler` имеет новый параметр "
"*atTime*, который можно использовать для указания времени суток, когда "
"должен произойти ролловер. (Предоставлено Рональдом Уссореном в :issue:"
"`9556`.)"

#: ../../whatsnew/3.4.rst:1079
msgid ""
":class:`~logging.handlers.SocketHandler` and :class:`~logging.handlers."
"DatagramHandler` now support Unix domain sockets (by setting *port* to "
"``None``).  (Contributed by Vinay Sajip in commit ce46195b56a9.)"
msgstr ""
":class:`~logging.handlers.SocketHandler` и :class:`~logging.handlers."
"DatagramHandler` теперь поддерживают сокеты домена Unix (путем установки для "
"*port* значения ``None``). (Внесено Винаем Саджипом в коммит ce46195b56a9.)"

#: ../../whatsnew/3.4.rst:1084
msgid ""
":func:`~logging.config.fileConfig` now accepts a :class:`configparser."
"RawConfigParser` subclass instance for the *fname* parameter.  This "
"facilitates using a configuration file when logging configuration is just a "
"part of the overall application configuration, or where the application "
"modifies the configuration before passing it to :func:`~logging.config."
"fileConfig`.  (Contributed by Vinay Sajip in :issue:`16110`.)"
msgstr ""
":func:`~logging.config.fileConfig` теперь принимает экземпляр подкласса :"
"class:`configparser.RawConfigParser` для параметра *fname*. Это облегчает "
"использование файла конфигурации, когда конфигурация журнала является лишь "
"частью общей конфигурации приложения или когда приложение изменяет "
"конфигурацию перед передачей ее в :func:`~logging.config.fileConfig`. "
"(Предоставлено Винаем Саджипом в :issue:`16110`.)"

#: ../../whatsnew/3.4.rst:1092
msgid ""
"Logging configuration data received from a socket via the :func:`logging."
"config.listen` function can now be validated before being processed by "
"supplying a verification function as the argument to the new *verify* "
"keyword argument.  (Contributed by Vinay Sajip in :issue:`15452`.)"
msgstr ""
"Данные конфигурации журнала, полученные из сокета через функцию :func:"
"`logging.config.listen`, теперь можно проверить перед обработкой, указав "
"функцию проверки в качестве аргумента нового аргумента ключевого слова "
"*verify*. (Предоставлено Винаем Саджипом в :issue:`15452`.)"

#: ../../whatsnew/3.4.rst:1101
msgid "marshal"
msgstr "marshal"

#: ../../whatsnew/3.4.rst:1103
msgid ""
"The default :mod:`marshal` version has been bumped to 3.  The code "
"implementing the new version restores the Python2 behavior of recording only "
"one copy of interned strings and preserving the interning on "
"deserialization, and extends this \"one copy\" ability to any object type "
"(including handling recursive references).  This reduces both the size of ``."
"pyc`` files and the amount of memory a module occupies in memory when it is "
"loaded from a ``.pyc`` (or ``.pyo``) file.  (Contributed by Kristján Valur "
"Jónsson in :issue:`16475`, with additional speedups by Antoine Pitrou in :"
"issue:`19219`.)"
msgstr ""
"Версия :mod:`marshal` по умолчанию увеличена до 3. Код, реализующий новую "
"версию, восстанавливает поведение Python2, заключающееся в записи только "
"одной копии интернированных строк и сохранении интернирования при "
"десериализации, а также расширяет эту возможность \"одной копии\" на любую "
"тип объекта (включая обработку рекурсивных ссылок). Это уменьшает как размер "
"файлов ``.pyc``, так и объем памяти, занимаемый модулем в памяти при его "
"загрузке из файла ``.pyc`` (или ``.pyo``). (Предоставлено Кристьяном Валюром "
"Йонссоном в :issue:`16475`, с дополнительными ускорениями Антуаном Питру в :"
"issue:`19219`.)"

#: ../../whatsnew/3.4.rst:1114
msgid "mmap"
msgstr "mmap"

#: ../../whatsnew/3.4.rst:1116
msgid ""
"mmap objects are now :ref:`weakly referenceable <mod-weakref>`. (Contributed "
"by Valerie Lambert in :issue:`4885`.)"
msgstr ""
"Объекты mmap теперь :ref:`слабо доступны для ссылок <mod-weakref>`. "
"(Предоставлено Валери Ламберт в :issue:`4885`.)"

#: ../../whatsnew/3.4.rst:1121
msgid "multiprocessing"
msgstr "multiprocessing"

#: ../../whatsnew/3.4.rst:1125
msgid ""
"On Unix two new :ref:`start methods <multiprocessing-start-methods>`, "
"``spawn`` and ``forkserver``, have been added for starting processes using :"
"mod:`multiprocessing`.  These make the mixing of processes with threads more "
"robust, and the ``spawn`` method matches the semantics that multiprocessing "
"has always used on Windows.  New function :func:`~multiprocessing."
"get_all_start_methods` reports all start methods available on the platform, :"
"func:`~multiprocessing.get_start_method` reports the current start method, "
"and :func:`~multiprocessing.set_start_method` sets the start method.  "
"(Contributed by Richard Oudkerk in :issue:`8713`.)"
msgstr ""
"В Unix добавлены два новых метода start <multiprocessing-start-methods>, "
"spawn и forkserver для запуска процессов с использованием multiprocessing. "
"Это делает смешивание процессов с потоками более надежным, а метод spawn "
"соответствует семантике, которую всегда использовала многопроцессорность в "
"Windows. Новая функция :func:`~multiprocessing.get_all_start_methods` "
"сообщает обо всех методах запуска, доступных на платформе, :func:"
"`~multiprocessing.get_start_method` сообщает о текущем методе запуска, а :"
"func:`~multiprocessing.set_start_method` устанавливает метод запуска. "
"(Предоставлено Ричардом Оудкерком в :issue:`8713`.)"

#: ../../whatsnew/3.4.rst:1135
msgid ""
":mod:`multiprocessing` also now has the concept of a ``context``, which "
"determines how child processes are created.  New function :func:"
"`~multiprocessing.get_context` returns a context that uses a specified start "
"method.  It has the same API as the :mod:`multiprocessing` module itself, so "
"you can use it to create :class:`~multiprocessing.pool.Pool`\\ s and other "
"objects that will operate within that context.  This allows a framework and "
"an application or different parts of the same application to use "
"multiprocessing without interfering with each other.  (Contributed by "
"Richard Oudkerk in :issue:`18999`.)"
msgstr ""
":mod:`multiprocessing` также теперь имеет концепцию ``контекста``, которая "
"определяет, как создаются дочерние процессы. Новая функция :func:"
"`~multiprocessing.get_context` возвращает контекст, который использует "
"указанный метод запуска. Он имеет тот же API, что и сам модуль :mod:"
"`multiprocessing`, поэтому вы можете использовать его для создания :class:"
"`~multiprocessing.pool.Pool`\\ и других объектов, которые будут работать в "
"этом контексте. Это позволяет платформе и приложению или различным частям "
"одного и того же приложения использовать многопроцессорную обработку, не "
"мешая друг другу. (Предоставлено Ричардом Оудкерком в :issue:`18999`.)"

#: ../../whatsnew/3.4.rst:1145
msgid ""
"Except when using the old *fork* start method, child processes no longer "
"inherit unneeded handles/file descriptors from their parents (part of :issue:"
"`8713`)."
msgstr ""
"За исключением использования старого метода запуска *fork*, дочерние "
"процессы больше не наследуют ненужные дескрипторы/дескрипторы файлов от "
"своих родителей (часть :issue:`8713`)."

#: ../../whatsnew/3.4.rst:1149
msgid ""
":mod:`multiprocessing` now relies on :mod:`runpy` (which implements the ``-"
"m`` switch) to initialise ``__main__`` appropriately in child processes when "
"using the ``spawn`` or ``forkserver`` start methods. This resolves some edge "
"cases where combining multiprocessing, the ``-m`` command line switch, and "
"explicit relative imports could cause obscure failures in child processes.  "
"(Contributed by Nick Coghlan in :issue:`19946`.)"
msgstr ""
":mod:`multiprocessing` теперь полагается на :mod:`runpy` (который реализует "
"переключатель ``-m``) для правильной инициализации ``__main__`` в дочерних "
"процессах при использовании ``spawn`` или ``forkserver`` `` методы запуска. "
"Это устраняет некоторые крайние случаи, когда сочетание многопроцессорности, "
"переключателя командной строки ``-m`` и явного относительного импорта могло "
"привести к неявным сбоям в дочерних процессах. (Предоставлено Ником Когланом "
"в :issue:`19946`.)"

#: ../../whatsnew/3.4.rst:1158
msgid "operator"
msgstr "оператор"

#: ../../whatsnew/3.4.rst:1160
msgid ""
"New function :func:`~operator.length_hint` provides an implementation of the "
"specification for how the :meth:`~object.__length_hint__` special method "
"should be used, as part of the :pep:`424` formal specification of this "
"language feature.  (Contributed by Armin Ronacher in :issue:`16148`.)"
msgstr ""
"Новая функция :func:`~operator.length_hint` обеспечивает реализацию "
"спецификации того, как следует использовать специальный метод :meth:`~object."
"__length_hint__`, как часть формальной спецификации :pep:`424` этого языка. "
"особенность. (Предоставлено Армином Ронахером в :issue:`16148`.)"

#: ../../whatsnew/3.4.rst:1165
msgid ""
"There is now a pure-python version of the :mod:`operator` module available "
"for reference and for use by alternate implementations of Python.  "
"(Contributed by Zachary Ware in :issue:`16694`.)"
msgstr ""
"Теперь существует версия модуля :mod:`operator`, написанная на чистом "
"Python, доступная для справки и для использования альтернативными "
"реализациями Python. (Предоставлено Закари Уэром в :issue:`16694`.)"

#: ../../whatsnew/3.4.rst:1171
msgid "os"
msgstr "os"

#: ../../whatsnew/3.4.rst:1173
msgid ""
"There are new functions to get and set the :ref:`inheritable flag "
"<fd_inheritance>` of a file descriptor (:func:`os.get_inheritable`, :func:"
"`os.set_inheritable`) or a Windows handle (:func:`os."
"get_handle_inheritable`, :func:`os.set_handle_inheritable`)."
msgstr ""
"Появились новые функции для получения и установки :ref:`inheritable флага "
"<fd_inheritance>` дескриптора файла (:func:`os.get_inheritable`, :func:`os."
"set_inheritable`) или дескриптора Windows (:func: `os."
"get_handle_inheritable`, :func:`os.set_handle_inheritable`)."

#: ../../whatsnew/3.4.rst:1178
msgid ""
"New function :func:`~os.cpu_count` reports the number of CPUs available on "
"the platform on which Python is running (or ``None`` if the count can't be "
"determined).  The :func:`multiprocessing.cpu_count` function is now "
"implemented in terms of this function).  (Contributed by Trent Nelson, "
"Yogesh Chaudhari, Victor Stinner, and Charles-François Natali in :issue:"
"`17914`.)"
msgstr ""
"Новая функция :func:`~os.cpu_count` сообщает количество процессоров, "
"доступных на платформе, на которой работает Python (или ``Нет``, если число "
"невозможно определить). Функция :func:`multiprocessing.cpu_count` теперь "
"реализована на основе этой функции). (Предоставлено Трентом Нельсоном, "
"Йогешем Чаудхари, Виктором Стиннером и Шарлем-Франсуа Натали в :issue:"
"`17914`.)"

#: ../../whatsnew/3.4.rst:1184
msgid ""
":func:`os.path.samestat` is now available on the Windows platform (and the :"
"func:`os.path.samefile` implementation is now shared between Unix and "
"Windows).  (Contributed by Brian Curtin in :issue:`11939`.)"
msgstr ""
":func:`os.path.samestat` теперь доступен на платформе Windows (а реализация :"
"func:`os.path.samefile` теперь используется совместно Unix и Windows). "
"(Предоставлено Брайаном Кертином в :issue:`11939`.)"

#: ../../whatsnew/3.4.rst:1188
msgid ""
":func:`os.path.ismount` now recognizes volumes mounted below a drive root on "
"Windows.  (Contributed by Tim Golden in :issue:`9035`.)"
msgstr ""
":func:`os.path.ismount` теперь распознает тома, смонтированные ниже корня "
"диска в Windows. (Предоставлено Тимом Голденом в :issue:`9035`.)"

#: ../../whatsnew/3.4.rst:1191
msgid ""
":func:`os.open` supports two new flags on platforms that provide them, :"
"const:`~os.O_PATH` (un-opened file descriptor), and :const:`~os.O_TMPFILE` "
"(unnamed temporary file; as of 3.4.0 release available only on Linux systems "
"with a kernel version of 3.11 or newer that have uapi headers).  "
"(Contributed by Christian Heimes in :issue:`18673` and Benjamin Peterson, "
"respectively.)"
msgstr ""
":func:`os.open` поддерживает два новых флага на платформах, которые их "
"предоставляют: :const:`~os.O_PATH` (дескриптор неоткрытого файла) и :const:"
"`~os.O_TMPFILE` (безымянный временный файл; начиная с версии 3.4.0, "
"доступной только в системах Linux с версией ядра 3.11 или новее, имеющими "
"заголовки uapi). (Предоставлено Кристианом Хеймсом в :issue:`18673` и "
"Бенджамином Петерсоном соответственно.)"

#: ../../whatsnew/3.4.rst:1199
msgid "pdb"
msgstr "pdb"

#: ../../whatsnew/3.4.rst:1201
msgid ""
":mod:`pdb` has been enhanced to handle generators, :keyword:`yield`, and "
"``yield from`` in a more useful fashion.  This is especially helpful when "
"debugging :mod:`asyncio` based programs.  (Contributed by Andrew Svetlov and "
"Xavier de Gaye in :issue:`16596`.)"
msgstr ""
":mod:`pdb` был улучшен для более удобной обработки генераторов, :keyword:"
"`yield` и ``yield from``. Это особенно полезно при отладке программ на "
"основе :mod:`asyncio`. (Предоставлено Андреем Светловым и Ксавье де Гаем в :"
"issue:`16596`.)"

#: ../../whatsnew/3.4.rst:1206
msgid ""
"The ``print`` command has been removed from :mod:`pdb`, restoring access to "
"the Python :func:`print` function from the pdb command line.  Python2's "
"``pdb`` did not have a ``print`` command; instead, entering ``print`` "
"executed the ``print`` statement.  In Python3 ``print`` was mistakenly made "
"an alias for the pdb :pdbcmd:`p` command.  ``p``, however, prints the "
"``repr`` of its argument, not the ``str`` like the Python2 ``print`` command "
"did.  Worse, the Python3 ``pdb print`` command shadowed the Python3 "
"``print`` function, making it inaccessible at the ``pdb`` prompt.  "
"(Contributed by Connor Osborn in :issue:`18764`.)"
msgstr ""
"Команда ``print`` была удалена из :mod:`pdb`, восстанавливая доступ к "
"функции Python :func:`print` из командной строки pdb. В Python2 «pdb» не "
"имел команды «print»; вместо этого ввод ``print`` запускал оператор "
"``print``. В Python3 print по ошибке стал псевдонимом для команды pdb :"
"pdbcmd:`p`. Однако ``p`` печатает ``repr`` своего аргумента, а не ``str``, "
"как это сделала команда Python2 ``print``. Хуже того, команда Python3 ``pdb "
"print`` дублировала функцию Python3 ``print``, делая ее недоступной в "
"командной строке ``pdb``. (Предоставлено Коннором Осборном в :issue:`18764`.)"

#: ../../whatsnew/3.4.rst:1220
msgid "pickle"
msgstr "pickle"

#: ../../whatsnew/3.4.rst:1222
msgid ""
":mod:`pickle` now supports (but does not use by default) a new pickle "
"protocol, protocol 4.  This new protocol addresses a number of issues that "
"were present in previous protocols, such as the serialization of nested "
"classes, very large strings and containers, and classes whose :meth:"
"`__new__` method takes keyword-only arguments.  It also provides some "
"efficiency improvements."
msgstr ""
":mod:`pickle` теперь поддерживает (но не использует по умолчанию) новый "
"протокол Pickle, протокол 4. Этот новый протокол решает ряд проблем, которые "
"присутствовали в предыдущих протоколах, таких как сериализация вложенных "
"классов, очень большие строки. и контейнеры, и классы, чей метод :meth:"
"`__new__` принимает аргументы, содержащие только ключевые слова. Это также "
"обеспечивает некоторое повышение эффективности."

#: ../../whatsnew/3.4.rst:1230
msgid ":pep:`3154` -- Pickle protocol 4"
msgstr ":pep:`3154` -- Протокол Pickle 4"

#: ../../whatsnew/3.4.rst:1231
msgid "PEP written by Antoine Pitrou and implemented by Alexandre Vassalotti."
msgstr "PEP написан Антуаном Питру и реализован Александром Вассалотти."

#: ../../whatsnew/3.4.rst:1235
msgid "plistlib"
msgstr "plistlib"

#: ../../whatsnew/3.4.rst:1237
msgid ""
":mod:`plistlib` now has an API that is similar to the standard pattern for "
"stdlib serialization protocols, with new :func:`~plistlib.load`, :func:"
"`~plistlib.dump`, :func:`~plistlib.loads`, and :func:`~plistlib.dumps` "
"functions.  (The older API is now deprecated.)  In addition to the already "
"supported XML plist format (:const:`~plistlib.FMT_XML`), it also now "
"supports the binary plist format (:const:`~plistlib.FMT_BINARY`).  "
"(Contributed by Ronald Oussoren and others in :issue:`14455`.)"
msgstr ""
":mod:`plistlib` теперь имеет API, аналогичный стандартному шаблону для "
"протоколов сериализации stdlib, с новыми :func:`~plistlib.load`, :func:"
"`~plistlib.dump`, :func:`~plistlib` .loads` и :func:`~plistlib.dumps`. "
"(Старый API устарел.) В дополнение к уже поддерживаемому формату списка XML "
"(:const:`~plistlib.FMT_XML`) он также теперь поддерживает формат двоичного "
"списка (:const:`~plistlib.FMT_BINARY`). (Предоставлено Рональдом Уссореном и "
"другими в :issue:`14455`.)"

#: ../../whatsnew/3.4.rst:1247
msgid "poplib"
msgstr "poplib"

#: ../../whatsnew/3.4.rst:1249
msgid ""
"Two new methods have been added to :mod:`poplib`: :meth:`~poplib.POP3.capa`, "
"which returns the list of capabilities advertised by the POP server, and :"
"meth:`~poplib.POP3.stls`, which switches a clear-text POP3 session into an "
"encrypted POP3 session if the POP server supports it.  (Contributed by "
"Lorenzo Catucci in :issue:`4473`.)"
msgstr ""
"В :mod:`poplib` добавлены два новых метода: :meth:`~poplib.POP3.capa`, "
"который возвращает список возможностей, объявленных POP-сервером, и :meth:"
"`~poplib.POP3.stls` , который переключает сеанс POP3 с открытым текстом на "
"зашифрованный сеанс POP3, если POP-сервер поддерживает это. (Предоставлено "
"Лоренцо Катуччи в :issue:`4473`.)"

#: ../../whatsnew/3.4.rst:1257
msgid "pprint"
msgstr "pprint"

#: ../../whatsnew/3.4.rst:1259
msgid ""
"The :mod:`pprint` module's :class:`~pprint.PrettyPrinter` class and its :"
"func:`~pprint.pformat`, and :func:`~pprint.pprint` functions have a new "
"option, *compact*, that controls how the output is formatted.  Currently "
"setting *compact* to ``True`` means that sequences will be printed with as "
"many sequence elements as will fit within *width* on each (indented) line. "
"(Contributed by Serhiy Storchaka in :issue:`19132`.)"
msgstr ""
"Класс :class:`~pprint.PrettyPrinter` модуля :mod:`pprint` и его функции :"
"func:`~pprint.pformat` и :func:`~pprint.pprint` имеют новую опцию *compact*, "
"который контролирует форматирование вывода. В настоящее время установка для "
"*compact* значения ``True`` означает, что последовательности будут "
"печататься с таким количеством элементов последовательности, которое "
"уместится в *ширине* каждой (с отступом) строки. (Предоставлено Сергеем "
"Сторчакой в ​​:issue:`19132`.)"

#: ../../whatsnew/3.4.rst:1266
msgid ""
"Long strings are now wrapped using Python's normal line continuation "
"syntax.  (Contributed by Antoine Pitrou in :issue:`17150`.)"
msgstr ""
"Длинные строки теперь переносятся с использованием обычного синтаксиса "
"продолжения строки Python. (Предоставлено Антуаном Питру в :issue:`17150`.)"

#: ../../whatsnew/3.4.rst:1271
msgid "pty"
msgstr "pty"

#: ../../whatsnew/3.4.rst:1273
msgid ""
":func:`pty.spawn` now returns the status value from :func:`os.waitpid` on "
"the child process, instead of ``None``.  (Contributed by Gregory P. Smith.)"
msgstr ""
":func:`pty.spawn` теперь возвращает значение статуса из :func:`os.waitpid` "
"дочернего процесса вместо ``None``. (Предоставлено Грегори П. Смитом.)"

#: ../../whatsnew/3.4.rst:1278
msgid "pydoc"
msgstr "pydoc"

#: ../../whatsnew/3.4.rst:1280
msgid ""
"The :mod:`pydoc` module is now based directly on the :func:`inspect."
"signature` introspection API, allowing it to provide signature information "
"for a wider variety of callable objects. This change also means that "
"``__wrapped__`` attributes are now taken into account when displaying help "
"information. (Contributed by Larry Hastings in :issue:`19674`.)"
msgstr ""
"Модуль :mod:`pydoc` теперь основан непосредственно на API интроспекции :func:"
"`inspect.signature`, что позволяет ему предоставлять информацию о подписи "
"для более широкого спектра вызываемых объектов. Это изменение также "
"означает, что атрибуты ``__wrapped__`` теперь учитываются при отображении "
"справочной информации. (Предоставлено Ларри Гастингсом в :issue:`19674`.)"

#: ../../whatsnew/3.4.rst:1286
msgid ""
"The :mod:`pydoc` module no longer displays the ``self`` parameter for "
"already bound methods. Instead, it aims to always display the exact current "
"signature of the supplied callable.  (Contributed by Larry Hastings in :"
"issue:`20710`.)"
msgstr ""
"Модуль :mod:`pydoc` больше не отображает параметр ``self`` для уже связанных "
"методов. Вместо этого он стремится всегда отображать точную текущую подпись "
"предоставленного вызываемого объекта. (Предоставлено Ларри Гастингсом в :"
"issue:`20710`.)"

#: ../../whatsnew/3.4.rst:1291
msgid ""
"In addition to the changes that have been made to :mod:`pydoc` directly, its "
"handling of custom ``__dir__`` methods and various descriptor behaviours has "
"also been improved substantially by the underlying changes in the :mod:"
"`inspect` module."
msgstr ""
"В дополнение к изменениям, внесенным непосредственно в :mod:`pydoc`, его "
"обработка пользовательских методов ``__dir__`` и различного поведения "
"дескрипторов также была существенно улучшена за счет базовых изменений в "
"модуле :mod:`inspect` ."

#: ../../whatsnew/3.4.rst:1296
msgid ""
"As the :func:`help` builtin is based on :mod:`pydoc`, the above changes also "
"affect the behaviour of :func:`help`."
msgstr ""
"Поскольку встроенная функция :func:`help` основана на :mod:`pydoc`, "
"вышеуказанные изменения также влияют на поведение :func:`help`."

#: ../../whatsnew/3.4.rst:1301
msgid "re"
msgstr "re"

#: ../../whatsnew/3.4.rst:1303
msgid ""
"New :func:`~re.fullmatch` function and :meth:`.regex.fullmatch` method "
"anchor the pattern at both ends of the string to match.  This provides a way "
"to be explicit about the goal of the match, which avoids a class of subtle "
"bugs where ``$`` characters get lost during code changes or the addition of "
"alternatives to an existing regular expression.  (Contributed by Matthew "
"Barnett in :issue:`16203`.)"
msgstr ""
"Новая функция :func:`~re.fullmatch` и метод :meth:`.regex.fullmatch` "
"закрепляют шаблон на обоих концах совпадающей строки. Это дает возможность "
"явно указать цель сопоставления, что позволяет избежать класса тонких "
"ошибок, когда символы ``$`` теряются во время изменений кода или добавления "
"альтернатив к существующему регулярному выражению. (Предоставлено Мэтью "
"Барнеттом в :issue:`16203`.)"

#: ../../whatsnew/3.4.rst:1310
msgid ""
"The repr of :ref:`regex objects <re-objects>` now includes the pattern and "
"the flags; the repr of :ref:`match objects <match-objects>` now includes the "
"start, end, and the part of the string that matched.  (Contributed by Hugo "
"Lopes Tavares and Serhiy Storchaka in :issue:`13592` and :issue:`17087`.)"
msgstr ""
"Воспроизведение :ref:`regex объектов <re-objects>` теперь включает в себя "
"шаблон и флаги; воспроизведение :ref:`matchobjects <match-objects>` теперь "
"включает начало, конец и часть совпавшей строки. (Предоставлено Уго Лопесом "
"Таваресом и Сергеем Сторчакой в ​​:issue:`13592` и :issue:`17087`.)"

#: ../../whatsnew/3.4.rst:1318
msgid "resource"
msgstr "ресурс"

#: ../../whatsnew/3.4.rst:1320
msgid ""
"New :func:`~resource.prlimit` function, available on Linux platforms with a "
"kernel version of 2.6.36 or later and glibc of 2.13 or later, provides the "
"ability to query or set the resource limits for processes other than the one "
"making the call.  (Contributed by Christian Heimes in :issue:`16595`.)"
msgstr ""
"Новая функция :func:`~resource.prlimit`, доступная на платформах Linux с "
"версией ядра 2.6.36 или новее и glibc 2.13 или новее, предоставляет "
"возможность запрашивать или устанавливать ограничения ресурсов для "
"процессов, отличных от того, который создает звонок. (Предоставлено "
"Кристианом Хаймсом в :issue:`16595`.)"

#: ../../whatsnew/3.4.rst:1325
msgid ""
"On Linux kernel version 2.6.36 or later, there are also some new Linux "
"specific constants: :const:`~resource.RLIMIT_MSGQUEUE`, :const:`~resource."
"RLIMIT_NICE`, :const:`~resource.RLIMIT_RTPRIO`, :const:`~resource."
"RLIMIT_RTTIME`, and :const:`~resource.RLIMIT_SIGPENDING`. (Contributed by "
"Christian Heimes in :issue:`19324`.)"
msgstr ""
"В ядре Linux версии 2.6.36 или новее также появились некоторые новые "
"константы, специфичные для Linux: :const:`~resource.RLIMIT_MSGQUEUE`, :const:"
"`~resource.RLIMIT_NICE`, :const:`~resource.RLIMIT_RTPRIO`, : const:"
"`~resource.RLIMIT_RTTIME` и :const:`~resource.RLIMIT_SIGPENDING`. "
"(Предоставлено Кристианом Хаймсом в :issue:`19324`.)"

#: ../../whatsnew/3.4.rst:1331
msgid ""
"On FreeBSD version 9 and later, there some new FreeBSD specific constants: :"
"const:`~resource.RLIMIT_SBSIZE`, :const:`~resource.RLIMIT_SWAP`, and :const:"
"`~resource.RLIMIT_NPTS`.  (Contributed by Claudiu Popa in :issue:`19343`.)"
msgstr ""
"В FreeBSD версии 9 и более поздних версиях появилось несколько новых "
"констант, специфичных для FreeBSD: :const:`~resource.RLIMIT_SBSIZE`, :const:"
"`~resource.RLIMIT_SWAP` и :const:`~resource.RLIMIT_NPTS`. (Предоставлено "
"Клаудиу Попа в :issue:`19343`.)"

#: ../../whatsnew/3.4.rst:1338
msgid "select"
msgstr "select"

#: ../../whatsnew/3.4.rst:1340
msgid ""
":class:`~select.epoll` objects now support the context management protocol. "
"When used in a :keyword:`with` statement, the :meth:`~select.epoll.close` "
"method will be called automatically at the end of the block.  (Contributed "
"by Serhiy Storchaka in :issue:`16488`.)"
msgstr ""
"Объекты :class:`~select.epoll` теперь поддерживают протокол управления "
"контекстом. При использовании в операторе :keyword:`with` метод :meth:"
"`~select.epoll.close` будет вызываться автоматически в конце блока. "
"(Предоставлено Сергеем Сторчакой в ​​:issue:`16488`.)"

#: ../../whatsnew/3.4.rst:1345
msgid ""
":class:`~select.devpoll` objects now have :meth:`~select.devpoll.fileno` "
"and :meth:`~select.devpoll.close` methods, as well as a new attribute :attr:"
"`~select.devpoll.closed`.  (Contributed by Victor Stinner in :issue:`18794`.)"
msgstr ""
"Объекты :class:`~select.devpoll` теперь имеют методы :meth:`~select.devpoll."
"fileno` и :meth:`~select.devpoll.close`, а также новый атрибут :attr:"
"`~select. devpoll.закрытый`. (Предоставлено Виктором Стиннером в :issue:"
"`18794`.)"

#: ../../whatsnew/3.4.rst:1352
msgid "shelve"
msgstr "полка"

#: ../../whatsnew/3.4.rst:1354
msgid ""
":class:`~shelve.Shelf` instances may now be used in :keyword:`with` "
"statements, and will be automatically closed at the end of the :keyword:`!"
"with` block. (Contributed by Filip Gruszczyński in :issue:`13896`.)"
msgstr ""
"Экземпляры :class:`~shelve.Shelf` теперь можно использовать в операторах :"
"keyword:`with` и будут автоматически закрываться в конце блока :keyword:`!"
"with`. (Предоставлено Филипом Грущиньским в :issue:`13896`.)"

#: ../../whatsnew/3.4.rst:1360
msgid "shutil"
msgstr "shutil"

#: ../../whatsnew/3.4.rst:1362
msgid ""
":func:`~shutil.copyfile` now raises a specific :exc:`~shutil.Error` "
"subclass, :exc:`~shutil.SameFileError`, when the source and destination are "
"the same file, which allows an application to take appropriate action on "
"this specific error.  (Contributed by Atsuo Ishimoto and Hynek Schlawack in :"
"issue:`1492704`.)"
msgstr ""
":func:`~shutil.copyfile` теперь вызывает конкретный подкласс :exc:`~shutil."
"Error`, :exc:`~shutil.SameFileError`, когда источником и местом назначения "
"являются один и тот же файл, что позволяет приложению принимать "
"соответствующие действия в отношении этой конкретной ошибки. (Предоставлено "
"Ацуо Ишимото и Хайнеком Шлаваком в :issue:`1492704`.)"

#: ../../whatsnew/3.4.rst:1370
msgid "smtpd"
msgstr "smtpd"

#: ../../whatsnew/3.4.rst:1372
msgid ""
"The :class:`~smtpd.SMTPServer` and :class:`~smtpd.SMTPChannel` classes now "
"accept a *map* keyword argument which, if specified, is passed in to :class:"
"`asynchat.async_chat` as its *map* argument.  This allows an application to "
"avoid affecting the global socket map.  (Contributed by Vinay Sajip in :"
"issue:`11959`.)"
msgstr ""

#: ../../whatsnew/3.4.rst:1380
msgid "smtplib"
msgstr "smtplib"

#: ../../whatsnew/3.4.rst:1382
msgid ""
":exc:`~smtplib.SMTPException` is now a subclass of :exc:`OSError`, which "
"allows both socket level errors and SMTP protocol level errors to be caught "
"in one try/except statement by code that only cares whether or not an error "
"occurred. (Contributed by Ned Jackson Lovely in :issue:`2118`.)"
msgstr ""
":exc:`~smtplib.SMTPException` теперь является подклассом :exc:`OSError`, "
"который позволяет перехватывать как ошибки уровня сокета, так и ошибки "
"уровня протокола SMTP в одном операторе try/Exception с помощью кода, "
"который заботится только о том, была ли произошла ошибка. (Предоставлено "
"Недом Джексоном Лавли в :issue:`2118`.)"

#: ../../whatsnew/3.4.rst:1389
msgid "socket"
msgstr "сокет"

#: ../../whatsnew/3.4.rst:1391
msgid ""
"The socket module now supports the :const:`~socket.CAN_BCM` protocol on "
"platforms that support it.  (Contributed by Brian Thorne in :issue:`15359`.)"
msgstr ""
"Модуль сокета теперь поддерживает протокол :const:`~socket.CAN_BCM` на "
"платформах, которые его поддерживают. (Предоставлено Брайаном Торном в :"
"issue:`15359`.)"

#: ../../whatsnew/3.4.rst:1394
msgid ""
"Socket objects have new methods to get or set their :ref:`inheritable flag "
"<fd_inheritance>`, :meth:`~socket.socket.get_inheritable` and :meth:`~socket."
"socket.set_inheritable`."
msgstr ""
"У объектов сокетов появились новые методы для получения или установки их :"
"ref:`наследуемого флага <fd_inheritance>`, :meth:`~socket.socket."
"get_inheritable` и :meth:`~socket.socket.set_inheritable`."

#: ../../whatsnew/3.4.rst:1398
msgid ""
"The ``socket.AF_*`` and ``socket.SOCK_*`` constants are now enumeration "
"values using the new :mod:`enum` module.  This allows meaningful names to be "
"printed during debugging, instead of integer \"magic numbers\"."
msgstr ""
"Константы ``socket.AF_*`` и ``socket.SOCK_*`` теперь являются значениями "
"перечисления с использованием нового модуля :mod:`enum`. Это позволяет "
"печатать осмысленные имена во время отладки вместо целых «магических чисел»."

#: ../../whatsnew/3.4.rst:1402
msgid "The :const:`~socket.AF_LINK` constant is now available on BSD and OSX."
msgstr "Константа :const:`~socket.AF_LINK` теперь доступна в BSD и OSX."

#: ../../whatsnew/3.4.rst:1404
msgid ""
":func:`~socket.inet_pton` and :func:`~socket.inet_ntop` are now supported on "
"Windows.  (Contributed by Atsuo Ishimoto in :issue:`7171`.)"
msgstr ""
":func:`~socket.inet_pton` и :func:`~socket.inet_ntop` теперь поддерживаются "
"в Windows. (Предоставлено Ацуо Ишимото в :issue:`7171`.)"

#: ../../whatsnew/3.4.rst:1409
msgid "sqlite3"
msgstr "sqlite3"

#: ../../whatsnew/3.4.rst:1411
msgid ""
"A new boolean parameter to the :func:`~sqlite3.connect` function, *uri*, can "
"be used to indicate that the *database* parameter is a ``uri`` (see the "
"`SQLite URI documentation <https://www.sqlite.org/uri.html>`_).  "
"(Contributed by poq in :issue:`13773`.)"
msgstr ""
"Новый логический параметр функции :func:`~sqlite3.connect`, *uri*, можно "
"использовать для указания того, что параметр *database* является ``uri`` "
"(см. документацию ``SQLite URI'` <https:/ /www.sqlite.org/uri.html>`_). "
"(Внесено пользователем poq в :issue:`13773`.)"

#: ../../whatsnew/3.4.rst:1418
msgid "ssl"
msgstr "ssl"

#: ../../whatsnew/3.4.rst:1422
msgid ""
":data:`~ssl.PROTOCOL_TLSv1_1` and :data:`~ssl.PROTOCOL_TLSv1_2` (TLSv1.1 and "
"TLSv1.2 support) have been added; support for these protocols is only "
"available if Python is linked with OpenSSL 1.0.1 or later.  (Contributed by "
"Michele Orrù and Antoine Pitrou in :issue:`16692`.)"
msgstr ""
"добавлены :data:`~ssl.PROTOCOL_TLSv1_1` и :data:`~ssl.PROTOCOL_TLSv1_2` "
"(поддержка TLSv1.1 и TLSv1.2); поддержка этих протоколов доступна только в "
"том случае, если Python связан с OpenSSL 1.0.1 или более поздней версии. "
"(Предоставлено Мишелем Орру и Антуаном Питру в :issue:`16692`.)"

#: ../../whatsnew/3.4.rst:1429
msgid ""
"New function :func:`~ssl.create_default_context` provides a standard way to "
"obtain an :class:`~ssl.SSLContext` whose settings are intended to be a "
"reasonable balance between compatibility and security.  These settings are "
"more stringent than the defaults provided by the :class:`~ssl.SSLContext` "
"constructor, and may be adjusted in the future, without prior deprecation, "
"if best-practice security requirements change.  The new recommended best "
"practice for using stdlib libraries that support SSL is to use :func:`~ssl."
"create_default_context` to obtain an :class:`~ssl.SSLContext` object, modify "
"it if needed, and then pass it as the *context* argument of the appropriate "
"stdlib API.  (Contributed by Christian Heimes in :issue:`19689`.)"
msgstr ""
"Новая функция :func:`~ssl.create_default_context` предоставляет стандартный "
"способ получения :class:`~ssl.SSLContext`, настройки которого предназначены "
"для обеспечения разумного баланса между совместимостью и безопасностью. Эти "
"настройки более строгие, чем значения по умолчанию, предоставляемые "
"конструктором :class:`~ssl.SSLContext`, и могут быть скорректированы в "
"будущем без предварительного прекращения поддержки, если изменятся передовые "
"требования безопасности. Новая рекомендуемая лучшая практика использования "
"библиотек stdlib, поддерживающих SSL, — использовать :func:`~ssl."
"create_default_context` для получения объекта :class:`~ssl.SSLContext`, "
"изменить его при необходимости и затем передать как * аргумент context* "
"соответствующего API stdlib. (Предоставлено Кристианом Хаймсом в :issue:"
"`19689`.)"

#: ../../whatsnew/3.4.rst:1441
msgid ""
":class:`~ssl.SSLContext` method :meth:`~ssl.SSLContext."
"load_verify_locations` accepts a new optional argument *cadata*, which can "
"be used to provide PEM or DER encoded certificates directly via strings or "
"bytes, respectively. (Contributed by Christian Heimes in :issue:`18138`.)"
msgstr ""
":class:`~ssl.SSLContext` Метод :meth:`~ssl.SSLContext.load_verify_locations` "
"принимает новый необязательный аргумент *cadata*, который можно использовать "
"для предоставления сертификатов в кодировке PEM или DER напрямую через "
"строки или байты соответственно. (Предоставлено Кристианом Хаймсом в :issue:"
"`18138`.)"

#: ../../whatsnew/3.4.rst:1446
msgid ""
"New function :func:`~ssl.get_default_verify_paths` returns a named tuple of "
"the paths and environment variables that the :meth:`~ssl.SSLContext."
"set_default_verify_paths` method uses to set OpenSSL's default ``cafile`` "
"and ``capath``.  This can be an aid in debugging default verification "
"issues.  (Contributed by Christian Heimes in :issue:`18143`.)"
msgstr ""
"Новая функция :func:`~ssl.get_default_verify_paths` возвращает именованный "
"кортеж путей и переменных среды, которые метод :meth:`~ssl.SSLContext."
"set_default_verify_paths` использует для установки ``cafile`` и ``capath` "
"OpenSSL по умолчанию. `. Это может помочь в устранении проблем с проверкой "
"по умолчанию. (Предоставлено Кристианом Хаймсом в :issue:`18143`.)"

#: ../../whatsnew/3.4.rst:1453
msgid ""
":class:`~ssl.SSLContext` has a new method, :meth:`~ssl.SSLContext."
"cert_store_stats`, that reports the number of loaded ``X.509`` certs, "
"``X.509 CA`` certs, and certificate revocation lists (``crl``\\ s), as well "
"as a :meth:`~ssl.SSLContext.get_ca_certs` method that returns a list of the "
"loaded ``CA`` certificates.  (Contributed by Christian Heimes in :issue:"
"`18147`.)"
msgstr ""
":class:`~ssl.SSLContext` имеет новый метод :meth:`~ssl.SSLContext."
"cert_store_stats`, который сообщает количество загруженных сертификатов "
"``X.509``, сертификатов ``X.509 CA``. и списки отзыва сертификатов "
"(``crl``\\ s), а также метод :meth:`~ssl.SSLContext.get_ca_certs`, который "
"возвращает список загруженных сертификатов ``CA``. (Предоставлено Кристианом "
"Хаймсом в :issue:`18147`.)"

#: ../../whatsnew/3.4.rst:1460
msgid ""
"If OpenSSL 0.9.8 or later is available, :class:`~ssl.SSLContext` has a new "
"attribute :attr:`~ssl.SSLContext.verify_flags` that can be used to control "
"the certificate verification process by setting it to some combination of "
"the new constants :const:`~ssl.VERIFY_DEFAULT`, :const:`~ssl."
"VERIFY_CRL_CHECK_LEAF`, :const:`~ssl.VERIFY_CRL_CHECK_CHAIN`, or :const:"
"`~ssl.VERIFY_X509_STRICT`. OpenSSL does not do any CRL verification by "
"default.  (Contributed by Christien Heimes in :issue:`8813`.)"
msgstr ""
"Если доступен OpenSSL 0.9.8 или новее, :class:`~ssl.SSLContext` имеет новый "
"атрибут :attr:`~ssl.SSLContext.verify_flags`, который можно использовать для "
"управления процессом проверки сертификата, установив для него некоторую "
"комбинацию новых констант :const:`~ssl.VERIFY_DEFAULT`, :const:`~ssl."
"VERIFY_CRL_CHECK_LEAF`, :const:`~ssl.VERIFY_CRL_CHECK_CHAIN` или :const:"
"`~ssl.VERIFY_X509_STRICT`. OpenSSL по умолчанию не выполняет проверку CRL. "
"(Предоставлено Кристианом Хаймсом в :issue:`8813`.)"

#: ../../whatsnew/3.4.rst:1468
msgid ""
"New :class:`~ssl.SSLContext` method :meth:`~ssl.SSLContext."
"load_default_certs` loads a set of default \"certificate authority\" (CA) "
"certificates from default locations, which vary according to the platform.  "
"It can be used to load both TLS web server authentication certificates "
"(``purpose=``:data:`~ssl.Purpose.SERVER_AUTH`) for a client to use to verify "
"a server, and certificates for a server to use in verifying client "
"certificates (``purpose=``:data:`~ssl.Purpose.CLIENT_AUTH`).  (Contributed "
"by Christian Heimes in :issue:`19292`.)"
msgstr ""
"Новый метод :class:`~ssl.SSLContext` :meth:`~ssl.SSLContext."
"load_default_certs` загружает набор сертификатов «центра сертификации» (CA) "
"по умолчанию из мест по умолчанию, которые различаются в зависимости от "
"платформы. Его можно использовать для загрузки как сертификатов "
"аутентификации веб-сервера TLS (``member=``:data:`~ssl.Purpose."
"SERVER_AUTH`), которые клиент будет использовать для проверки сервера, так и "
"сертификатов, которые сервер будет использовать при проверке. клиентские "
"сертификаты (``member=``:data:`~ssl.Purpose.CLIENT_AUTH`). (Предоставлено "
"Кристианом Хаймсом в :issue:`19292`.)"

#: ../../whatsnew/3.4.rst:1479
msgid ""
"Two new windows-only functions, :func:`~ssl.enum_certificates` and :func:"
"`~ssl.enum_crls` provide the ability to retrieve certificates, certificate "
"information, and CRLs from the Windows cert store.  (Contributed by "
"Christian Heimes in :issue:`17134`.)"
msgstr ""
"Две новые функции только для Windows, :func:`~ssl.enum_certificates` и :func:"
"`~ssl.enum_crls`, предоставляют возможность получать сертификаты, информацию "
"о сертификатах и ​​списки отзыва сертификатов из хранилища сертификатов "
"Windows. (Предоставлено Кристианом Хаймсом в :issue:`17134`.)"

#: ../../whatsnew/3.4.rst:1486
msgid ""
"Support for server-side SNI (Server Name Indication) using the new :meth:"
"`ssl.SSLContext.set_servername_callback` method. (Contributed by Daniel "
"Black in :issue:`8109`.)"
msgstr ""
"Поддержка SNI на стороне сервера (указание имени сервера) с использованием "
"нового метода :meth:`ssl.SSLContext.set_servername_callback`. (Предоставлено "
"Дэниелом Блэком в :issue:`8109`.)"

#: ../../whatsnew/3.4.rst:1490
msgid ""
"The dictionary returned by :meth:`.SSLSocket.getpeercert` contains "
"additional ``X509v3`` extension items: ``crlDistributionPoints``, "
"``calIssuers``, and ``OCSP`` URIs.  (Contributed by Christian Heimes in :"
"issue:`18379`.)"
msgstr ""
"Словарь, возвращаемый :meth:`.SSLSocket.getpeercert`, содержит "
"дополнительные элементы расширения ``X509v3``: ``crlDistributionPoints``, "
"``calIssuers`` и ``OCSP`` URI. (Предоставлено Кристианом Хаймсом в :issue:"
"`18379`.)"

#: ../../whatsnew/3.4.rst:1496
msgid "stat"
msgstr "stat"

#: ../../whatsnew/3.4.rst:1498
msgid ""
"The :mod:`stat` module is now backed by a C implementation in :mod:`_stat`. "
"A C implementation is required as most of the values aren't standardized and "
"are platform-dependent.  (Contributed by Christian Heimes in :issue:`11016`.)"
msgstr ""

#: ../../whatsnew/3.4.rst:1502
msgid ""
"The module supports new :mod:`~stat.ST_MODE` flags, :mod:`~stat.S_IFDOOR`, :"
"const:`~stat.S_IFPORT`, and :const:`~stat.S_IFWHT`.  (Contributed by "
"Christian Hiemes in :issue:`11016`.)"
msgstr ""
"Модуль поддерживает новые флаги :mod:`~stat.ST_MODE`, :mod:`~stat."
"S_IFDOOR`, :const:`~stat.S_IFPORT` и :const:`~stat.S_IFWHT`. (Предоставлено "
"Кристианом Химсом в :issue:`11016`.)"

#: ../../whatsnew/3.4.rst:1508
msgid "struct"
msgstr "struct"

#: ../../whatsnew/3.4.rst:1510
msgid ""
"New function :mod:`~struct.iter_unpack` and a new :meth:`struct.Struct."
"iter_unpack` method on compiled formats provide streamed unpacking of a "
"buffer containing repeated instances of a given format of data. (Contributed "
"by Antoine Pitrou in :issue:`17804`.)"
msgstr ""
"Новая функция :mod:`~struct.iter_unpack` и новый метод :meth:`struct.Struct."
"iter_unpack` для скомпилированных форматов обеспечивают потоковую распаковку "
"буфера, содержащего повторяющиеся экземпляры данного формата данных. "
"(Предоставлено Антуаном Питру в :issue:`17804`.)"

#: ../../whatsnew/3.4.rst:1517
msgid "subprocess"
msgstr "subprocess"

#: ../../whatsnew/3.4.rst:1519
msgid ""
":func:`~subprocess.check_output` now accepts an *input* argument that can be "
"used to provide the contents of ``stdin`` for the command that is run. "
"(Contributed by Zack Weinberg in :issue:`16624`.)"
msgstr ""
":func:`~subprocess.check_output` теперь принимает аргумент *input*, который "
"можно использовать для предоставления содержимого ``stdin`` для запускаемой "
"команды. (Предоставлено Заком Вайнбергом в :issue:`16624`.)"

#: ../../whatsnew/3.4.rst:1523
msgid ""
":func:`~subprocess.getstatus` and :func:`~subprocess.getstatusoutput` now "
"work on Windows.  This change was actually inadvertently made in 3.3.4. "
"(Contributed by Tim Golden in :issue:`10197`.)"
msgstr ""
":func:`~subprocess.getstatus` и :func:`~subprocess.getstatusoutput` теперь "
"работают в Windows. На самом деле это изменение было случайно сделано в "
"версии 3.3.4. (Предоставлено Тимом Голденом в :issue:`10197`.)"

#: ../../whatsnew/3.4.rst:1529
msgid "sunau"
msgstr "sunau"

#: ../../whatsnew/3.4.rst:1531
msgid ""
"The :meth:`~sunau.getparams` method now returns a namedtuple rather than a "
"plain tuple.  (Contributed by Claudiu Popa in :issue:`18901`.)"
msgstr ""
"Метод :meth:`~sunau.getparams` теперь возвращает именованный кортеж, а не "
"простой кортеж. (Предоставлено Клаудиу Попа в :issue:`18901`.)"

#: ../../whatsnew/3.4.rst:1534
msgid ""
":meth:`sunau.open` now supports the context management protocol: when used "
"in a :keyword:`with` block, the ``close`` method of the returned object will "
"be called automatically at the end of the block.  (Contributed by Serhiy "
"Storchaka in :issue:`18878`.)"
msgstr ""
":meth:`sunau.open` теперь поддерживает протокол управления контекстом: при "
"использовании в блоке :keyword:`with` метод close возвращаемого объекта "
"будет вызываться автоматически в конце блока. (Добавлен Сергеем Сторчакой в ​​:"
"issue:`18878`.)"

#: ../../whatsnew/3.4.rst:1539
msgid ""
":meth:`.AU_write.setsampwidth` now supports 24 bit samples, thus adding "
"support for writing 24 sample using the module.  (Contributed by Serhiy "
"Storchaka in :issue:`19261`.)"
msgstr ""
":meth:`.AU_write.setsampwidth` теперь поддерживает 24-битные сэмплы, что "
"добавляет поддержку записи 24-битных сэмплов с использованием модуля. "
"(Предоставлено Сергеем Сторчакой в ​​:issue:`19261`.)"

#: ../../whatsnew/3.4.rst:1543
msgid ""
"The :meth:`~sunau.AU_write.writeframesraw` and :meth:`~sunau.AU_write."
"writeframes` methods now accept any :term:`bytes-like object`.  (Contributed "
"by Serhiy Storchaka in :issue:`8311`.)"
msgstr ""
"Методы :meth:`~sunau.AU_write.writeframesraw` и :meth:`~sunau.AU_write."
"writeframes` теперь принимают любой :term:`байтовый объект`. (Предоставлено "
"Сергеем Сторчакой в ​​:issue:`8311`.)"

#: ../../whatsnew/3.4.rst:1549
msgid "sys"
msgstr "sys"

#: ../../whatsnew/3.4.rst:1551
msgid ""
"New function :func:`sys.getallocatedblocks` returns the current number of "
"blocks allocated by the interpreter.  (In CPython with the default ``--with-"
"pymalloc`` setting, this is allocations made through the :c:func:"
"`PyObject_Malloc` API.)  This can be useful for tracking memory leaks, "
"especially if automated via a test suite.  (Contributed by Antoine Pitrou "
"in :issue:`13390`.)"
msgstr ""
"Новая функция :func:`sys.getallocatedblocks` возвращает текущее количество "
"блоков, выделенных интерпретатором. (В CPython с настройкой по умолчанию ``--"
"with-pymalloc`` это распределение осуществляется через API :c:func:` PyObj "
"ect_Malloc`.) Это может быть полезно для отслеживания утечек памяти, "
"особенно если это автоматизировано с помощью теста. люкс. (Предоставлено "
"Антуаном Питру в :issue:`13390`.)"

#: ../../whatsnew/3.4.rst:1558
msgid ""
"When the Python interpreter starts in :ref:`interactive mode <tut-"
"interactive>`, it checks for an :data:`~sys.__interactivehook__` attribute "
"on the :mod:`sys` module.  If the attribute exists, its value is called with "
"no arguments just before interactive mode is started.  The check is made "
"after the :envvar:`PYTHONSTARTUP` file is read, so it can be set there.  "
"The :mod:`site` module :ref:`sets it <rlcompleter-config>` to a function "
"that enables tab completion and history saving (in :file:`~/.python-"
"history`) if the platform supports :mod:`readline`.  If you do not want this "
"(new) behavior, you can override it in :envvar:`PYTHONSTARTUP`, :mod:"
"`sitecustomize`, or :mod:`usercustomize` by deleting this attribute from :"
"mod:`sys` (or setting it to some other callable).  (Contributed by Éric "
"Araujo and Antoine Pitrou in :issue:`5845`.)"
msgstr ""
"Когда интерпретатор Python запускается в интерактивном режиме <tut-"
"interactive>`, он проверяет наличие атрибута :data:`~sys."
"__interactivehook__` в модуле :mod:`sys`. Если атрибут существует, его "
"значение вызывается без аргументов непосредственно перед запуском "
"интерактивного режима. Проверка производится после чтения файла :envvar:"
"`PYTHONSTARTUP`, поэтому ее можно установить там. Модуль :mod:`site` :ref:"
"`устанавливает для него <rlcompleter-config>` функцию, которая включает "
"завершение табуляции и сохранение истории (в :file:`~/.python-history`), "
"если платформа поддерживает :mod :`readline`. Если вам не нужно это (новое) "
"поведение, вы можете переопределить его в :envvar:`PYTHONSTARTUP`, :mod:"
"`sitecustomize` или :mod:`usercustomize`, удалив этот атрибут из :mod:`sys` "
"(или установка его на какой-либо другой вызываемый объект). (Предоставлено "
"Эриком Араужо и Антуаном Питру в :issue:`5845`.)"

#: ../../whatsnew/3.4.rst:1573
msgid "tarfile"
msgstr "tarfile"

#: ../../whatsnew/3.4.rst:1575
msgid ""
"The :mod:`tarfile` module now supports a simple :ref:`tarfile-commandline` "
"when called as a script directly or via ``-m``.  This can be used to create "
"and extract tarfile archives.  (Contributed by Berker Peksag in :issue:"
"`13477`.)"
msgstr ""
"Модуль :mod:`tarfile` теперь поддерживает простую :ref:`tarfile-commandline` "
"при вызове из скрипта напрямую или через ``-m``. Это можно использовать для "
"создания и извлечения архивов tarfile. (Предоставлено Беркером Пексагом в :"
"issue:`13477`.)"

#: ../../whatsnew/3.4.rst:1581
msgid "textwrap"
msgstr "textwrap"

#: ../../whatsnew/3.4.rst:1583
msgid ""
"The :class:`~textwrap.TextWrapper` class has two new attributes/constructor "
"arguments: :attr:`~textwrap.TextWrapper.max_lines`, which limits the number "
"of lines in the output, and :attr:`~textwrap.TextWrapper.placeholder`, which "
"is a string that will appear at the end of the output if it has been "
"truncated because of *max_lines*.  Building on these capabilities, a new "
"convenience function :func:`~textwrap.shorten` collapses all of the "
"whitespace in the input to single spaces and produces a single line of a "
"given *width* that ends with the *placeholder* (by default, ``[...]``).  "
"(Contributed by Antoine Pitrou and Serhiy Storchaka in :issue:`18585` and :"
"issue:`18725`.)"
msgstr ""
"Класс :class:`~textwrap.TextWrapper` имеет два новых атрибута/аргумента "
"конструктора: :attr:`~textwrap.TextWrapper.max_lines`, который ограничивает "
"количество строк в выводе, и :attr:`~textwrap.TextWrapper` .placeholder` — "
"строка, которая появится в конце вывода, если она была обрезана из-за "
"*max_lines*. Основываясь на этих возможностях, новая удобная функция :func:"
"`~textwrap.shorten` сжимает все пробелы во входных данных до одиночных "
"пробелов и создает одну строку заданной *ширины*, которая заканчивается "
"*заполнителем* (по умолчанию , ``[...]``). (Предоставлено Антуаном Питру и "
"Сергеем Сторчакой в ​​:issue:`18585` и :issue:`18725`.)"

#: ../../whatsnew/3.4.rst:1595
msgid "threading"
msgstr "threading"

#: ../../whatsnew/3.4.rst:1597
msgid ""
"The :class:`~threading.Thread` object representing the main thread can be "
"obtained from the new :func:`~threading.main_thread` function.  In normal "
"conditions this will be the thread from which the Python interpreter was "
"started.  (Contributed by Andrew Svetlov in :issue:`18882`.)"
msgstr ""
"Объект :class:`~threading.Thread`, представляющий основной поток, можно "
"получить из новой функции :func:`~threading.main_thread`. В обычных условиях "
"это будет поток, из которого был запущен интерпретатор Python. "
"(Предоставлено Андреем Светловым в :issue:`18882`.)"

#: ../../whatsnew/3.4.rst:1604
msgid "traceback"
msgstr "трассировка"

#: ../../whatsnew/3.4.rst:1606
msgid ""
"A new :func:`traceback.clear_frames` function takes a traceback object and "
"clears the local variables in all of the frames it references, reducing the "
"amount of memory consumed.  (Contributed by Andrew Kuchling in :issue:"
"`1565525`.)"
msgstr ""
"Новая функция :func:`traceback.clear_frames` принимает объект трассировки и "
"очищает локальные переменные во всех кадрах, на которые он ссылается, "
"уменьшая объем потребляемой памяти. (Предоставлено Эндрю Кучлингом в :issue:"
"`1565525`.)"

#: ../../whatsnew/3.4.rst:1613
msgid "types"
msgstr "типы"

#: ../../whatsnew/3.4.rst:1615
msgid ""
"A new :func:`~types.DynamicClassAttribute` descriptor provides a way to "
"define an attribute that acts normally when looked up through an instance "
"object, but which is routed to the *class* ``__getattr__`` when looked up "
"through the class.  This allows one to have properties active on a class, "
"and have virtual attributes on the class with the same name (see :mod:`Enum` "
"for an example). (Contributed by Ethan Furman in :issue:`19030`.)"
msgstr ""
"Новый :func:`~types.DynamicClassAttribute` дескриптор предоставляет способ "
"определения атрибута, который работает нормально при поиске через объект "
"экземпляра, но который направляется в *class* ``__getattr__`` при поиске "
"через класс . Это позволяет иметь активные свойства класса и виртуальные "
"атрибуты класса с тем же именем (пример см. в :mod:`Enum`). (Предоставлено "
"Итаном Фурманом в :issue:`19030`.)"

#: ../../whatsnew/3.4.rst:1624
msgid "urllib"
msgstr "urllib"

#: ../../whatsnew/3.4.rst:1626
msgid ""
":mod:`urllib.request` now supports ``data:`` URLs via the :class:`~urllib."
"request.DataHandler` class.  (Contributed by Mathias Panzenböck in :issue:"
"`16423`.)"
msgstr ""
":mod:`urllib.request` теперь поддерживает URL-адреса ``data:`` через класс :"
"class:`~urllib.request.DataHandler`. (Предоставлено Матиасом Панценбеком в :"
"issue:`16423`.)"

#: ../../whatsnew/3.4.rst:1630
msgid ""
"The http method that will be used by a :class:`~urllib.request.Request` "
"class can now be specified by setting a :class:`~urllib.request.Request."
"method` class attribute on the subclass.  (Contributed by Jason R Coombs in :"
"issue:`18978`.)"
msgstr ""
"Метод http, который будет использоваться классом :class:`~urllib.request."
"Request`, теперь можно указать, установив атрибут класса :class:`~urllib."
"request.Request.method` в подклассе. (Предоставлено Джейсоном Р. Кумбсом в :"
"issue:`18978`.)"

#: ../../whatsnew/3.4.rst:1635
msgid ""
":class:`~urllib.request.Request` objects are now reusable: if the :attr:"
"`~urllib.request.Request.full_url` or :attr:`~urllib.request.Request.data` "
"attributes are modified, all relevant internal properties are updated.  This "
"means, for example, that it is now possible to use the same :class:`~urllib."
"request.Request` object in more than one :meth:`.OpenerDirector.open` call "
"with different *data* arguments, or to modify a :class:`~urllib.request."
"Request`\\ 's ``url`` rather than recomputing it from scratch.  There is "
"also a new :meth:`~urllib.request.Request.remove_header` method that can be "
"used to remove headers from a :class:`~urllib.request.Request`.  "
"(Contributed by Alexey Kachayev in :issue:`16464`, Daniel Wozniak in :issue:"
"`17485`, and Damien Brecht and Senthil Kumaran in :issue:`17272`.)"
msgstr ""
"Объекты :class:`~urllib.request.Request` теперь можно использовать повторно: "
"если атрибуты :attr:`~urllib.request.Request.full_url` или :attr:`~urllib."
"request.Request.data` изменены, все соответствующие внутренние свойства "
"обновляются. Это означает, например, что теперь можно использовать один и "
"тот же объект :class:`~urllib.request.Request` более чем в одном вызове :"
"meth:`.OpenerDirector.open` с разными аргументами *data* или измените "
"``url`` :class:`~urllib.request.Request`\\ вместо того, чтобы пересчитывать "
"его с нуля. Существует также новый метод :meth:`~urllib.request.Request."
"remove_header`, который можно использовать для удаления заголовков из :class:"
"`~urllib.request.Request`. (Предоставлено Алексеем Качаевым в :issue:"
"`16464`, Дэниелом Возняком в :issue:`17485`, а также Дэмиеном Брехтом и "
"Сентилом Кумараном в :issue:`17272`.)"

#: ../../whatsnew/3.4.rst:1648
msgid ""
":class:`~urllib.error.HTTPError` objects now have a :attr:`~urllib.error."
"HTTPError.headers` attribute that provides access to the HTTP response "
"headers associated with the error.  (Contributed by Berker Peksag in :issue:"
"`15701`.)"
msgstr ""
"Объекты :class:`~urllib.error.HTTPError` теперь имеют атрибут :attr:`~urllib."
"error.HTTPError.headers`, который обеспечивает доступ к заголовкам HTTP-"
"ответа, связанным с ошибкой. (Предоставлено Беркером Пексагом в :issue:"
"`15701`.)"

#: ../../whatsnew/3.4.rst:1655
msgid "unittest"
msgstr "unittest"

#: ../../whatsnew/3.4.rst:1657
msgid ""
"The :class:`~unittest.TestCase` class has a new method, :meth:`~unittest."
"TestCase.subTest`, that produces a context manager whose :keyword:`with` "
"block becomes a \"sub-test\".  This context manager allows a test method to "
"dynamically generate subtests  by, say, calling the ``subTest`` context "
"manager inside a loop.  A single test method can thereby produce an "
"indefinite number of separately identified and separately counted tests, all "
"of which will run even if one or more of them fail.  For example::"
msgstr ""
"Класс :class:`~unittest.TestCase` имеет новый метод :meth:`~unittest."
"TestCase.subTest`, который создает контекстный менеджер, блок :keyword:"
"`with` становится \"подтестом\". Этот контекстный менеджер позволяет методу "
"тестирования динамически генерировать подтесты, скажем, вызывая контекстный "
"менеджер ``subTest`` внутри цикла. Таким образом, один метод тестирования "
"может создать неопределенное количество отдельно идентифицированных и "
"отдельно подсчитанных тестов, все из которых будут выполнены, даже если один "
"или несколько из них не пройдут. Например::"

#: ../../whatsnew/3.4.rst:1671
msgid ""
"will result in six subtests, each identified in the unittest verbose output "
"with a label consisting of the variable name ``i`` and a particular value "
"for that variable (``i=0``, ``i=1``, etc).  See :ref:`subtests` for the full "
"version of this example.  (Contributed by Antoine Pitrou in :issue:`16997`.)"
msgstr ""
"приведет к шести подтестам, каждый из которых указан в подробном выводе "
"unittest с меткой, состоящей из имени переменной ``i`` и конкретного "
"значения для этой переменной (``i=0``, ``i=1``, и т. д). Полную версию этого "
"примера см. в разделе :ref:`subtests`. (Предоставлено Антуаном Питру в :"
"issue:`16997`.)"

#: ../../whatsnew/3.4.rst:1676
msgid ""
":func:`unittest.main` now accepts an iterable of test names for "
"*defaultTest*, where previously it only accepted a single test name as a "
"string.  (Contributed by Jyrki Pulliainen in :issue:`15132`.)"
msgstr ""
":func:`unittest.main` теперь принимает итерацию имен тестов для "
"*defaultTest*, тогда как раньше он принимал только одно имя теста в виде "
"строки. (Предоставлено Юрки Пуллиайненом в :issue:`15132`.)"

#: ../../whatsnew/3.4.rst:1680
msgid ""
"If :class:`~unittest.SkipTest` is raised during test discovery (that is, at "
"the module level in the test file), it is now reported as a skip instead of "
"an error.  (Contributed by Zach Ware in :issue:`16935`.)"
msgstr ""
"Если :class:`~unittest.SkipTest` возникает во время обнаружения теста (то "
"есть на уровне модуля в тестовом файле), теперь об этом сообщается как о "
"пропуске, а не об ошибке. (Предоставлено Заком Уэром в :issue:`16935`.)"

#: ../../whatsnew/3.4.rst:1684
msgid ""
":meth:`~unittest.TestLoader.discover` now sorts the discovered files to "
"provide consistent test ordering.  (Contributed by Martin Melin and Jeff "
"Ramnani in :issue:`16709`.)"
msgstr ""
":meth:`~unittest.TestLoader.discover` теперь сортирует обнаруженные файлы, "
"чтобы обеспечить единообразный порядок тестов. (Предоставлено Мартином "
"Мелином и Джеффом Рамнани в :issue:`16709`.)"

#: ../../whatsnew/3.4.rst:1688
msgid ""
":class:`~unittest.TestSuite` now drops references to tests as soon as the "
"test has been run, if the test is successful.  On Python interpreters that "
"do garbage collection, this allows the tests to be garbage collected if "
"nothing else is holding a reference to the test.  It is possible to override "
"this behavior by creating a :class:`~unittest.TestSuite` subclass that "
"defines a custom ``_removeTestAtIndex`` method.  (Contributed by Tom "
"Wardill, Matt McClure, and Andrew Svetlov in :issue:`11798`.)"
msgstr ""
":class:`~unittest.TestSuite` теперь удаляет ссылки на тесты сразу после "
"запуска теста, если тест прошел успешно. В интерпретаторах Python, "
"выполняющих сбор мусора, это позволяет выполнять сбор мусора в тестах, если "
"ничто другое не содержит ссылку на тест. Это поведение можно переопределить, "
"создав подкласс :class:`~unittest.TestSuite`, который определяет собственный "
"метод _removeTestAtIndex``. (Предоставлено Томом Уордиллом, Мэттом МакКлюром "
"и Эндрю Светловым в :issue:`11798`.)"

#: ../../whatsnew/3.4.rst:1696
msgid ""
"A new test assertion context-manager, :meth:`~unittest.TestCase.assertLogs`, "
"will ensure that a given block of code emits a log message using the :mod:"
"`logging` module.  By default the message can come from any logger and have "
"a priority of ``INFO`` or higher, but both the logger name and an "
"alternative minimum logging level may be specified.  The object returned by "
"the context manager can be queried for the :class:`~logging.LogRecord`\\ s "
"and/or formatted messages that were logged.  (Contributed by Antoine Pitrou "
"in :issue:`18937`.)"
msgstr ""
"Новый контекстный менеджер тестовых утверждений, :meth:`~unittest.TestCase."
"assertLogs`, гарантирует, что данный блок кода выдает сообщение журнала, "
"используя модуль :mod:`logging`. По умолчанию сообщение может исходить от "
"любого регистратора и иметь приоритет INFO или выше, но можно указать как "
"имя регистратора, так и альтернативный минимальный уровень протоколирования. "
"Объект, возвращаемый менеджером контекста, может быть запрошен для :class:"
"`~logging.LogRecord`\\ и/или форматированных сообщений, которые были "
"зарегистрированы. (Предоставлено Антуаном Питру в :issue:`18937`.)"

#: ../../whatsnew/3.4.rst:1705
msgid ""
"Test discovery now works with namespace packages (Contributed by Claudiu "
"Popa in :issue:`17457`.)"
msgstr ""
"Обнаружение тестов теперь работает с пакетами пространства имен "
"(предоставлен Клаудиу Попа в :issue:`17457`.)"

#: ../../whatsnew/3.4.rst:1708
msgid ""
":mod:`unittest.mock` objects now inspect their specification signatures when "
"matching calls, which means an argument can now be matched by either "
"position or name, instead of only by position.  (Contributed by Antoine "
"Pitrou in :issue:`17015`.)"
msgstr ""
"Объекты :mod:`unittest.mock` теперь проверяют свои сигнатуры спецификаций "
"при сопоставлении вызовов, что означает, что аргумент теперь может "
"сопоставляться либо по позиции, либо по имени, а не только по позиции. "
"(Предоставлено Антуаном Питру в :issue:`17015`.)"

#: ../../whatsnew/3.4.rst:1713
msgid ""
":func:`~mock.mock_open` objects now have ``readline`` and ``readlines`` "
"methods.  (Contributed by Toshio Kuratomi in :issue:`17467`.)"
msgstr ""
":func:`~mock.mock_open` Объекты теперь имеют методы ``readline`` и "
"``readlines``. (Предоставлено Тосио Куратоми в :issue:`17467`.)"

#: ../../whatsnew/3.4.rst:1718
msgid "venv"
msgstr "venv"

#: ../../whatsnew/3.4.rst:1720
msgid ""
":mod:`venv` now includes activation scripts for the ``csh`` and ``fish`` "
"shells.  (Contributed by Andrew Svetlov in :issue:`15417`.)"
msgstr ""
":mod:`venv` теперь включает сценарии активации для оболочек ``csh`` и "
"``fish``. (Предоставлено Андреем Светловым в :issue:`15417`.)"

#: ../../whatsnew/3.4.rst:1723
msgid ""
":class:`~venv.EnvBuilder` and the :func:`~venv.create` convenience function "
"take a new keyword argument *with_pip*, which defaults to ``False``, that "
"controls whether or not :class:`~venv.EnvBuilder` ensures that ``pip`` is "
"installed in the virtual environment.  (Contributed by Nick Coghlan in :"
"issue:`19552` as part of the :pep:`453` implementation.)"
msgstr ""
":class:`~venv.EnvBuilder` и удобная функция :func:`~venv.create` принимают "
"новый аргумент ключевого слова *with_pip*, который по умолчанию имеет "
"значение ``False``, который контролирует, будет ли :class:`~ venv.EnvBuilder "
"гарантирует, что pip установлен в виртуальной среде. (Внесено Ником Когланом "
"в :issue:`19552` как часть реализации :pep:`453`.)"

#: ../../whatsnew/3.4.rst:1731
msgid "wave"
msgstr "wave"

#: ../../whatsnew/3.4.rst:1733
msgid ""
"The :meth:`~wave.getparams` method now returns a namedtuple rather than a "
"plain tuple.  (Contributed by Claudiu Popa in :issue:`17487`.)"
msgstr ""
"Метод :meth:`~wave.getparams` теперь возвращает именованный кортеж, а не "
"простой кортеж. (Предоставлено Клаудиу Попа в :issue:`17487`.)"

#: ../../whatsnew/3.4.rst:1736
msgid ""
":meth:`wave.open` now supports the context management protocol.  "
"(Contributed by Claudiu Popa in :issue:`17616`.)"
msgstr ""
":meth:`wave.open` теперь поддерживает протокол управления контекстом. "
"(Предоставлено Клаудиу Попа в :issue:`17616`.)"

#: ../../whatsnew/3.4.rst:1739
msgid ""
":mod:`wave` can now :ref:`write output to unseekable files <wave-write-"
"objects>`.  (Contributed by David Jones, Guilherme Polo, and Serhiy "
"Storchaka in :issue:`5202`.)"
msgstr ""
":mod:`wave` теперь может :ref:`записывать вывод в недоступные для поиска "
"файлы <wave-write-objects>`. (Предоставлено Дэвидом Джонсом, Гильерме Поло и "
"Сергеем Сторчакой в ​​:issue:`5202`.)"

#: ../../whatsnew/3.4.rst:1743
msgid ""
"The :meth:`~wave.Wave_write.writeframesraw` and :meth:`~wave.Wave_write."
"writeframes` methods now accept any :term:`bytes-like object`.  (Contributed "
"by Serhiy Storchaka in :issue:`8311`.)"
msgstr ""
"Методы :meth:`~wave.Wave_write.writeframesraw` и :meth:`~wave.Wave_write."
"writeframes` теперь принимают любой :term:`байтоподобный объект`. "
"(Предоставлено Сергеем Сторчакой в ​​:issue:`8311`.)"

#: ../../whatsnew/3.4.rst:1749
msgid "weakref"
msgstr "weakref"

#: ../../whatsnew/3.4.rst:1751
msgid ""
"New :class:`~weakref.WeakMethod` class simulates weak references to bound "
"methods.  (Contributed by Antoine Pitrou in :issue:`14631`.)"
msgstr ""
"Новый класс :class:`~weakref.WeakMethod` имитирует слабые ссылки на "
"связанные методы. (Предоставлено Антуаном Питру в :issue:`14631`.)"

#: ../../whatsnew/3.4.rst:1754
msgid ""
"New :class:`~weakref.finalize` class makes it possible to register a "
"callback to be invoked when an object is garbage collected, without needing "
"to carefully manage the lifecycle of the weak reference itself.  "
"(Contributed by Richard Oudkerk in :issue:`15528`.)"
msgstr ""
"Новый класс :class:`~weakref.finalize` позволяет зарегистрировать обратный "
"вызов, который будет вызываться при сборке мусора объекта, без необходимости "
"тщательного управления жизненным циклом самой слабой ссылки. (Предоставлено "
"Ричардом Оудкерком в :issue:`15528`.)"

#: ../../whatsnew/3.4.rst:1759
msgid ""
"The callback, if any, associated with a :class:`~weakref.ref` is now exposed "
"via the :attr:`~weakref.ref.__callback__` attribute.  (Contributed by Mark "
"Dickinson in :issue:`17643`.)"
msgstr ""
"Обратный вызов, если таковой имеется, связанный с :class:`~weakref.ref`, "
"теперь предоставляется через атрибут :attr:`~weakref.ref.__callback__`. "
"(Предоставлено Марком Дикинсоном в :issue:`17643`.)"

#: ../../whatsnew/3.4.rst:1765
msgid "xml.etree"
msgstr "xml.etree"

#: ../../whatsnew/3.4.rst:1767
msgid ""
"A new parser, :class:`~xml.etree.ElementTree.XMLPullParser`, allows a non-"
"blocking applications to parse XML documents.  An example can be seen at :"
"ref:`elementtree-pull-parsing`.  (Contributed by Antoine Pitrou in :issue:"
"`17741`.)"
msgstr ""
"Новый парсер :class:`~xml.etree.ElementTree.XMLPullParser` позволяет "
"неблокирующим приложениям анализировать XML-документы. Пример можно увидеть "
"на странице :ref:`elementtree-pull-parsing`. (Предоставлено Антуаном Питру "
"в :issue:`17741`.)"

#: ../../whatsnew/3.4.rst:1772
msgid ""
"The :mod:`xml.etree.ElementTree` :func:`~xml.etree.ElementTree.tostring` "
"and :func:`~xml.etree.ElementTree.tostringlist` functions, and the :class:"
"`~xml.etree.ElementTree.ElementTree` :meth:`~xml.etree.ElementTree."
"ElementTree.write` method, now have a *short_empty_elements* :ref:`keyword-"
"only parameter <keyword-only_parameter>` providing control over whether "
"elements with no content are written in abbreviated (``<tag />``) or "
"expanded (``<tag></tag>``) form.  (Contributed by Ariel Poliak and Serhiy "
"Storchaka in :issue:`14377`.)"
msgstr ""
"Функции :mod:`xml.etree.ElementTree` :func:`~xml.etree.ElementTree.tostring` "
"и :func:`~xml.etree.ElementTree.tostringlist`, а также функции :class:`~xml."
"etree .ElementTree.ElementTree` :meth:`~xml.etree.ElementTree.ElementTree."
"write` метод, теперь имеет *short_empty_elements* :ref:`keyword-only "
"параметр <keyword-only_parameter>`, обеспечивающий контроль над тем, "
"являются ли элементы без содержимого записываются в сокращенном (``<tag /"
">``) или расширенном (``<tag></tag>``) виде. (Предоставлено Ариэлем Поляком "
"и Сергеем Сторчакой в ​​:issue:`14377`.)"

#: ../../whatsnew/3.4.rst:1783
msgid "zipfile"
msgstr "zip-файл"

#: ../../whatsnew/3.4.rst:1785
msgid ""
"The :meth:`~zipfile.PyZipFile.writepy` method of the :class:`~zipfile."
"PyZipFile` class has a new *filterfunc* option that can be used to control "
"which directories and files are added to the archive.  For example, this "
"could be used to exclude test files from the archive. (Contributed by "
"Christian Tismer in :issue:`19274`.)"
msgstr ""
"Метод :meth:`~zipfile.PyZipFile.writepy` класса :class:`~zipfile.PyZipFile` "
"имеет новую опцию *filterfunc*, которую можно использовать для управления "
"тем, какие каталоги и файлы добавляются в архив. Например, это можно "
"использовать для исключения тестовых файлов из архива. (Предоставлено "
"Кристианом Тисмером в :issue:`19274`.)"

#: ../../whatsnew/3.4.rst:1791
msgid ""
"The *allowZip64* parameter to :class:`~zipfile.ZipFile` and :class:`~zipfile."
"PyZipfile` is now ``True`` by default.  (Contributed by William Mallard in :"
"issue:`17201`.)"
msgstr ""
"Параметр *allowZip64* для :class:`~zipfile.ZipFile` и :class:`~zipfile."
"PyZipfile` теперь по умолчанию имеет значение ``True``. (Предоставлено "
"Уильямом Маллардом в :issue:`17201`.)"

#: ../../whatsnew/3.4.rst:1798
msgid "CPython Implementation Changes"
msgstr "Изменения в реализации CPython"

#: ../../whatsnew/3.4.rst:1804
msgid "PEP 445: Customization of CPython Memory Allocators"
msgstr "PEP 445: настройка распределителей памяти CPython"

#: ../../whatsnew/3.4.rst:1806
msgid ""
":pep:`445` adds new C level interfaces to customize memory allocation in the "
"CPython interpreter."
msgstr ""
":pep:`445` добавляет новые интерфейсы уровня C для настройки распределения "
"памяти в интерпретаторе CPython."

#: ../../whatsnew/3.4.rst:1811
msgid ":pep:`445` -- Add new APIs to customize Python memory allocators"
msgstr ""
":pep:`445` -- Добавление новых API для настройки распределителей памяти "
"Python."

#: ../../whatsnew/3.4.rst:1818
msgid "PEP 442: Safe Object Finalization"
msgstr "PEP 442: завершение безопасного объекта"

#: ../../whatsnew/3.4.rst:1820
msgid ""
":pep:`442` removes the current limitations and quirks of object finalization "
"in CPython. With it, objects with :meth:`__del__` methods, as well as "
"generators with :keyword:`finally` clauses, can be finalized when they are "
"part of a reference cycle."
msgstr ""
":pep:`442` устраняет текущие ограничения и особенности финализации объектов "
"в CPython. С его помощью объекты с методами :meth:`__del__`, а также "
"генераторы с предложениями :keyword:`finally` могут быть финализированы, "
"когда они являются частью ссылочного цикла."

#: ../../whatsnew/3.4.rst:1825
msgid ""
"As part of this change, module globals are no longer forcibly set to :const:"
"`None` during interpreter shutdown in most cases, instead relying on the "
"normal operation of the cyclic garbage collector.  This avoids a whole class "
"of interpreter-shutdown-time errors, usually involving ``__del__`` methods, "
"that have plagued Python since the cyclic GC was first introduced."
msgstr ""
"В рамках этого изменения глобальные переменные модуля больше не "
"устанавливаются принудительно в :const:`None` во время завершения работы "
"интерпретатора в большинстве случаев, вместо этого они полагаются на "
"нормальную работу циклического сборщика мусора. Это позволяет избежать "
"целого класса ошибок, связанных с завершением работы интерпретатора, обычно "
"связанных с методами ``__del__``, которые преследовали Python с момента "
"первого появления циклического сбора мусора."

#: ../../whatsnew/3.4.rst:1834
msgid ":pep:`442` -- Safe object finalization"
msgstr ":pep:`442` -- Безопасная финализация объекта"

#: ../../whatsnew/3.4.rst:1841
msgid "PEP 456: Secure and Interchangeable Hash Algorithm"
msgstr "PEP 456: безопасный и взаимозаменяемый алгоритм хеширования"

#: ../../whatsnew/3.4.rst:1843
msgid ""
":pep:`456` follows up on earlier security fix work done on Python's hash "
"algorithm to address certain DOS attacks to which public facing APIs backed "
"by dictionary lookups may be subject.  (See :issue:`14621` for the start of "
"the current round of improvements.)  The PEP unifies CPython's hash code to "
"make it easier for a packager to substitute a different hash algorithm, and "
"switches Python's default implementation to a SipHash implementation on "
"platforms that have a 64 bit data type.  Any performance differences in "
"comparison with the older FNV algorithm are trivial."
msgstr ""
":pep:`456` является продолжением предыдущей работы по исправлению "
"безопасности, проделанной в хеш-алгоритме Python для борьбы с определенными "
"DOS-атаками, которым могут быть подвержены общедоступные API, поддерживаемые "
"поиском по словарю. (См.:issue:`14621`, чтобы узнать о начале текущего "
"раунда улучшений.) PEP унифицирует хеш-код CPython, чтобы упаковщику было "
"проще заменить другой хэш-алгоритм, и переключает реализацию Python по "
"умолчанию на реализацию SipHash на платформах. которые имеют 64-битный тип "
"данных. Любые различия в производительности по сравнению со старым "
"алгоритмом FNV тривиальны."

#: ../../whatsnew/3.4.rst:1852
msgid ""
"The PEP adds additional fields to the :data:`sys.hash_info` named tuple to "
"describe the hash algorithm in use by the currently executing binary.  "
"Otherwise, the PEP does not alter any existing CPython APIs."
msgstr ""
"PEP добавляет дополнительные поля в именованный кортеж :data:`sys.hash_info` "
"для описания алгоритма хэширования, используемого исполняемым в данный "
"момент двоичным файлом. В противном случае PEP не изменяет существующие API "
"CPython."

#: ../../whatsnew/3.4.rst:1860
msgid "PEP 436: Argument Clinic"
msgstr "PEP 436: Клиника аргументов"

#: ../../whatsnew/3.4.rst:1862
msgid ""
"\"Argument Clinic\" (:pep:`436`) is now part of the CPython build process "
"and can be used to simplify the process of defining and maintaining accurate "
"signatures for builtins and standard library extension modules implemented "
"in C."
msgstr ""
"«Клиника аргументов» (:pep:`436`) теперь является частью процесса сборки "
"CPython и может использоваться для упрощения процесса определения и "
"поддержания точных подписей для встроенных функций и модулей расширения "
"стандартной библиотеки, реализованных на C."

#: ../../whatsnew/3.4.rst:1867
msgid ""
"Some standard library extension modules have been converted to use Argument "
"Clinic in Python 3.4, and :mod:`pydoc` and :mod:`inspect` have been updated "
"accordingly."
msgstr ""
"Некоторые модули расширения стандартной библиотеки были преобразованы для "
"использования Argument Clinic в Python 3.4, а :mod:`pydoc` и :mod:`inspect` "
"были обновлены соответствующим образом."

#: ../../whatsnew/3.4.rst:1871
msgid ""
"It is expected that signature metadata for programmatic introspection will "
"be added to additional callables implemented in C as part of Python 3.4 "
"maintenance releases."
msgstr ""
"Ожидается, что метаданные сигнатур для программного самоанализа будут "
"добавлены к дополнительным вызываемым объектам, реализованным на C, как "
"часть обновлений Python 3.4."

#: ../../whatsnew/3.4.rst:1876
msgid ""
"The Argument Clinic PEP is not fully up to date with the state of the "
"implementation. This has been deemed acceptable by the release manager and "
"core development team in this case, as Argument Clinic will not be made "
"available as a public API for third party use in Python 3.4."
msgstr ""
"PEP клиники «Аргумент» не полностью в курсе состояния реализации. В данном "
"случае менеджер выпуска и основная группа разработчиков сочли это "
"приемлемым, поскольку Argument Clinic не будет доступен в качестве "
"общедоступного API для использования третьими лицами в Python 3.4."

#: ../../whatsnew/3.4.rst:1883
msgid ":pep:`436` -- The Argument Clinic DSL"
msgstr ":pep:`436` -- The Argument Clinic DSL"

#: ../../whatsnew/3.4.rst:1884
msgid "PEP written and implemented by Larry Hastings."
msgstr "PEP написан и реализован Ларри Гастингсом."

#: ../../whatsnew/3.4.rst:1888
msgid "Other Build and C API Changes"
msgstr "Другие изменения в API сборки и C"

#: ../../whatsnew/3.4.rst:1890
msgid ""
"The new :c:func:`PyType_GetSlot` function has been added to the stable ABI, "
"allowing retrieval of function pointers from named type slots when using the "
"limited API.  (Contributed by Martin von Löwis in :issue:`17162`.)"
msgstr ""
"В стабильный ABI была добавлена ​​новая функция :c:func:`PyType_GetSlot`, "
"позволяющая извлекать указатели функций из слотов именованных типов при "
"использовании ограниченного API. (Предоставлено Мартином фон Лёвисом в :"
"issue:`17162`.)"

#: ../../whatsnew/3.4.rst:1894
msgid ""
"The new :c:func:`Py_SetStandardStreamEncoding` pre-initialization API allows "
"applications embedding the CPython interpreter to reliably force a "
"particular encoding and error handler for the standard streams. (Contributed "
"by Bastien Montagne and Nick Coghlan in :issue:`16129`.)"
msgstr ""
"Новый API предварительной инициализации :c:func:"
"`Py_SetStandardStreamEncoding` позволяет приложениям, встраивающим "
"интерпретатор CPython, надежно принудительно принудительно использовать "
"определенную кодировку и обработчик ошибок для стандартных потоков. "
"(Предоставлено Бастьеном Монтаньем и Ником Когланом в :issue:`16129`.)"

#: ../../whatsnew/3.4.rst:1899
msgid ""
"Most Python C APIs that don't mutate string arguments are now correctly "
"marked as accepting ``const char *`` rather than ``char *``.  (Contributed "
"by Serhiy Storchaka in :issue:`1772673`.)"
msgstr ""
"Большинство API Python C, которые не изменяют строковые аргументы, теперь "
"правильно помечены как принимающие ``const char *``, а не ``char *``. "
"(Добавлен Сергеем Сторчакой в ​​:issue:`1772673`.)"

#: ../../whatsnew/3.4.rst:1903
msgid ""
"A new shell version of ``python-config`` can be used even when a python "
"interpreter is not available (for example, in cross compilation scenarios)."
msgstr ""
"Новую версию оболочки ``python-config`` можно использовать, даже если "
"интерпретатор Python недоступен (например, в сценариях кросс-компиляции)."

#: ../../whatsnew/3.4.rst:1906
msgid ""
":c:func:`PyUnicode_FromFormat` now supports width and precision "
"specifications for ``%s``, ``%A``, ``%U``, ``%V``, ``%S``, and ``%R``. "
"(Contributed by Ysj Ray and Victor Stinner in :issue:`7330`.)"
msgstr ""
":c:func:`PyUnicode_FromFormat` теперь поддерживает спецификации ширины и "
"точности для `` %s ``, `` %А ``, ``%U``, ``%V``, ``%S`` и ``%R``. "
"(Предоставлено Ysj Ray и Виктором Стиннером в :issue:`7330`.)"

#: ../../whatsnew/3.4.rst:1910
msgid ""
"New function :c:func:`PyStructSequence_InitType2` supplements the existing :"
"c:func:`PyStructSequence_InitType` function.  The difference is that it "
"returns ``0`` on success and ``-1`` on failure."
msgstr ""
"Новая функция :c:func:`PyStructSequence_InitType2` дополняет существующую "
"функцию :c:func:`PyStructSequence_InitType`. Разница в том, что он "
"возвращает «0» в случае успеха и «-1» в случае неудачи."

#: ../../whatsnew/3.4.rst:1914
msgid ""
"The CPython source can now be compiled using the address sanity checking "
"features of recent versions of GCC and clang:  the false alarms in the small "
"object allocator have been silenced.  (Contributed by Dhiru Kholia in :issue:"
"`18596`.)"
msgstr ""
"Исходный код CPython теперь можно скомпилировать с использованием функций "
"проверки правильности адресов последних версий GCC и clang: ложные тревоги в "
"распределителе небольших объектов отключены. (Предоставлено Дхиру Холией в :"
"issue:`18596`.)"

#: ../../whatsnew/3.4.rst:1919
msgid ""
"The Windows build now uses `Address Space Layout Randomization <https://en."
"wikipedia.org/wiki/Address_space_layout_randomization>`_ and `Data Execution "
"Prevention <https://en.wikipedia.org/wiki/Data_Execution_Prevention>`_.  "
"(Contributed by Christian Heimes in :issue:`16632`.)"
msgstr ""
"В сборке Windows теперь используются `Рандомизация макета адресного "
"пространства <https://en.wikipedia.org/wiki/"
"Address_space_layout_randomization>`_ и `Предотвращение выполнения данных "
"<https://en.wikipedia.org/wiki/Data_Execution_Prevention>`_. (Предоставлено "
"Кристианом Хаймсом в :issue:`16632`.)"

#: ../../whatsnew/3.4.rst:1924
msgid ""
"New function :c:func:`PyObject_LengthHint` is the C API equivalent of :func:"
"`operator.length_hint`.  (Contributed by Armin Ronacher in :issue:`16148`.)"
msgstr ""
"Новая функция :c:func:` PyObj ect_LengthHint` является эквивалентом C API :"
"func:`operator.length_hint`. (Предоставлено Армином Ронахером в :issue:"
"`16148`.)"

#: ../../whatsnew/3.4.rst:1932
msgid "Other Improvements"
msgstr "Другие улучшения"

#: ../../whatsnew/3.4.rst:1936
msgid ""
"The :ref:`python <using-on-cmdline>` command has a new :ref:`option <using-"
"on-misc-options>`, ``-I``, which causes it to run in \"isolated mode\", "
"which means that :data:`sys.path` contains neither the script's directory "
"nor the user's ``site-packages`` directory, and all :envvar:`!PYTHON*` "
"environment variables are ignored (it implies both ``-s`` and ``-E``).  "
"Other restrictions may also be applied in the future, with the goal being to "
"isolate the execution of a script from the user's environment.  This is "
"appropriate, for example, when Python is used to run a system script.  On "
"most POSIX systems it can and should be used in the ``#!`` line of system "
"scripts.  (Contributed by Christian Heimes in :issue:`16499`.)"
msgstr ""
"Команда :ref:`python <using-on-cmdline>` имеет новую :ref:`option <using-on-"
"misc-options>`, ``-I``, которая заставляет ее работать в «изолированном "
"режиме». \", что означает, что :data:`sys.path` не содержит ни каталога "
"сценария, ни пользовательского каталога ``site-packages``, и все переменные "
"среды :envvar:`!PYTHON*` игнорируются (это подразумевает оба `` -s`` и ``-"
"E``). В будущем могут быть применены и другие ограничения с целью "
"изолировать выполнение сценария от среды пользователя. Это подходит, "
"например, когда Python используется для запуска системного сценария. В "
"большинстве систем POSIX его можно и нужно использовать в строке системных "
"сценариев ``#!``. (Предоставлено Кристианом Хаймсом в :issue:`16499`.)"

#: ../../whatsnew/3.4.rst:1947
msgid ""
"Tab-completion is now enabled by default in the interactive interpreter on "
"systems that support :mod:`readline`.  History is also enabled by default, "
"and is written to (and read from) the file :file:`~/.python-history`. "
"(Contributed by Antoine Pitrou and Éric Araujo in :issue:`5845`.)"
msgstr ""
"Завершение табуляции теперь включено по умолчанию в интерактивном "
"интерпретаторе в системах, поддерживающих :mod:`readline`. История также "
"включена по умолчанию и записывается (и считывается) из файла :file:`~/."
"python-history`. (Предоставлено Антуаном Питру и Эриком Араужо в :issue:"
"`5845`.)"

#: ../../whatsnew/3.4.rst:1952
msgid ""
"Invoking the Python interpreter with ``--version`` now outputs the version "
"to standard output instead of standard error (:issue:`18338`). Similar "
"changes were made to :mod:`argparse` (:issue:`18920`) and other modules that "
"have script-like invocation capabilities (:issue:`18922`)."
msgstr ""
"Вызов интерпретатора Python с ``--version`` теперь выводит версию на "
"стандартный вывод вместо стандартной ошибки (:issue:`18338`). Аналогичные "
"изменения были внесены в :mod:`argparse` (:issue:`18920`) и другие модули, "
"имеющие возможности вызова, подобные сценариям (:issue:`18922`)."

#: ../../whatsnew/3.4.rst:1957
msgid ""
"The CPython Windows installer now adds ``.py`` to the :envvar:`PATHEXT` "
"variable when extensions are registered, allowing users to run a python "
"script at the windows command prompt by just typing its name without the ``."
"py`` extension.  (Contributed by Paul Moore in :issue:`18569`.)"
msgstr ""
"Установщик CPython для Windows теперь добавляет ``.py`` в переменную :envvar:"
"`PATHEXT` при регистрации расширений, что позволяет пользователям запускать "
"скрипт Python в командной строке Windows, просто введя его имя без ``.py` "
"`расширение. (Предоставлено Полом Муром в :issue:`18569`.)"

#: ../../whatsnew/3.4.rst:1962
msgid ""
"A new ``make`` target `coverage-report <https://devguide.python.org/coverage/"
"#measuring-coverage-of-c-code-with-gcov-and-lcov>`_ will build python, run "
"the test suite, and generate an HTML coverage report for the C codebase "
"using ``gcov`` and `lcov <https://ltp.sourceforge.net/coverage/lcov.php>`_."
msgstr ""

#: ../../whatsnew/3.4.rst:1968
msgid ""
"The ``-R`` option to the :ref:`python regression test suite <regrtest>` now "
"also checks for memory allocation leaks, using :func:`sys."
"getallocatedblocks()`.  (Contributed by Antoine Pitrou in :issue:`13390`.)"
msgstr ""

#: ../../whatsnew/3.4.rst:1973
msgid "``python -m`` now works with namespace packages."
msgstr "``python -m`` теперь работает с пакетами пространства имен."

#: ../../whatsnew/3.4.rst:1975
msgid ""
"The :mod:`stat` module is now implemented in C, which means it gets the "
"values for its constants from the C header files, instead of having the "
"values hard-coded in the python module as was previously the case."
msgstr ""
"Модуль :mod:`stat` теперь реализован на C, что означает, что он получает "
"значения своих констант из заголовочных файлов C, вместо того, чтобы "
"значения были жестко запрограммированы в модуле Python, как это было раньше."

#: ../../whatsnew/3.4.rst:1979
msgid ""
"Loading multiple python modules from a single OS module (``.so``, ``.dll``) "
"now works correctly (previously it silently returned the first python module "
"in the file).  (Contributed by Václav Šmilauer in :issue:`16421`.)"
msgstr ""
"Загрузка нескольких модулей Python из одного модуля ОС (``.so``, ``.dll``) "
"теперь работает правильно (ранее она автоматически возвращала первый модуль "
"Python в файле). (Предоставлено Вацлавом Шмилауэром в :issue:`16421`.)"

#: ../../whatsnew/3.4.rst:1983
msgid ""
"A new opcode, :opcode:`LOAD_CLASSDEREF`, has been added to fix a bug in the "
"loading of free variables in class bodies that could be triggered by certain "
"uses of :ref:`__prepare__ <prepare>`.  (Contributed by Benjamin Peterson in :"
"issue:`17853`.)"
msgstr ""
"Новый код операции :opcode:`LOAD_CLASSDEREF` был добавлен для исправления "
"ошибки при загрузке свободных переменных в телах классов, которая могла быть "
"вызвана определенным использованием :ref:`__prepare__ <prepare>`. "
"(Предоставлено Бенджамином Петерсоном в :issue:`17853`.)"

#: ../../whatsnew/3.4.rst:1988
msgid ""
"A number of MemoryError-related crashes were identified and fixed by Victor "
"Stinner using his :pep:`445`-based ``pyfailmalloc`` tool (:issue:`18408`, :"
"issue:`18520`)."
msgstr ""
"Виктор Стиннер обнаружил и исправил ряд сбоев, связанных с MemoryError, с "
"помощью своего инструмента ``pyfailmalloc``, основанного на :pep:`445` (:"
"issue:`18408`, :issue:`18520`)."

#: ../../whatsnew/3.4.rst:1992
msgid ""
"The ``pyvenv`` command now accepts a ``--copies`` option to use copies "
"rather than symlinks even on systems where symlinks are the default.  "
"(Contributed by Vinay Sajip in :issue:`18807`.)"
msgstr ""
"Команда ``pyvenv`` теперь принимает опцию ``--copies`` для использования "
"копий вместо символических ссылок даже в системах, где символические ссылки "
"используются по умолчанию. (Предоставлено Винаем Саджипом в :issue:`18807`.)"

#: ../../whatsnew/3.4.rst:1996
msgid ""
"The ``pyvenv`` command also accepts a ``--without-pip`` option to suppress "
"the otherwise-automatic bootstrapping of pip into the virtual environment.  "
"(Contributed by Nick Coghlan in :issue:`19552` as part of the :pep:`453` "
"implementation.)"
msgstr ""
"Команда pyvenv также принимает опцию --without-pip для подавления "
"автоматической загрузки pip в виртуальную среду. (Внесено Ником Когланом в :"
"issue:`19552` как часть реализации :pep:`453`.)"

#: ../../whatsnew/3.4.rst:2001
msgid ""
"The encoding name is now optional in the value set for the :envvar:"
"`PYTHONIOENCODING` environment variable.  This makes it possible to set just "
"the error handler, without changing the default encoding. (Contributed by "
"Serhiy Storchaka in :issue:`18818`.)"
msgstr ""
"Имя кодировки теперь является необязательным в значении, установленном для "
"переменной среды :envvar:`PYTHONIOENCODING`. Это позволяет установить только "
"обработчик ошибок, не меняя кодировку по умолчанию. (Предоставлено Сергеем "
"Сторчакой в ​​:issue:`18818`.)"

#: ../../whatsnew/3.4.rst:2006
msgid ""
"The :mod:`bz2`, :mod:`lzma`, and :mod:`gzip` module ``open`` functions now "
"support ``x`` (exclusive creation) mode.  (Contributed by Tim Heaney and "
"Vajrasky Kok in :issue:`19201`, :issue:`19222`, and :issue:`19223`.)"
msgstr ""
"Функции ``open`` модулей :mod:`bz2`, :mod:`lzma` и :mod:`gzip` теперь "
"поддерживают режим ``x`` (эксклюзивное создание). (Внесено Тимом Хини и "
"Ваджраски Коком в :issue:`19201`, :issue:`19222` и :issue:`19223`.)"

#: ../../whatsnew/3.4.rst:2012
msgid "Significant Optimizations"
msgstr "Значительные оптимизации"

#: ../../whatsnew/3.4.rst:2014
msgid ""
"The UTF-32 decoder is now 3x to 4x faster.  (Contributed by Serhiy Storchaka "
"in :issue:`14625`.)"
msgstr ""
"Декодер UTF-32 теперь работает в 3–4 раза быстрее. (Добавлен Сергеем "
"Сторчакой в ​​:issue:`14625`.)"

#: ../../whatsnew/3.4.rst:2017
msgid ""
"The cost of hash collisions for sets is now reduced.  Each hash table probe "
"now checks a series of consecutive, adjacent key/hash pairs before "
"continuing to make random probes through the hash table.  This exploits "
"cache locality to make collision resolution less expensive. The collision "
"resolution scheme can be described as a hybrid of linear probing and open "
"addressing.  The number of additional linear probes defaults to nine.  This "
"can be changed at compile-time by defining LINEAR_PROBES to be any value.  "
"Set LINEAR_PROBES=0 to turn-off linear probing entirely.  (Contributed by "
"Raymond Hettinger in :issue:`18771`.)"
msgstr ""
"Стоимость коллизий хэшей для наборов теперь снижена. Каждый зонд хеш-таблицы "
"теперь проверяет серию последовательных соседних пар ключ/хеш, прежде чем "
"продолжить выполнение случайных зондирований по хеш-таблице. При этом "
"используется локальность кэша, чтобы сделать разрешение коллизий менее "
"затратным. Схему разрешения коллизий можно описать как гибрид линейного "
"зондирования и открытой адресации. Количество дополнительных линейных "
"датчиков по умолчанию равно девяти. Это можно изменить во время компиляции, "
"определив для LINEAR_PROBES любое значение. Установите LINEAR_PROBES=0, "
"чтобы полностью отключить линейное зондирование. (Предоставлено Рэймондом "
"Хеттингером в :issue:`18771`.)"

#: ../../whatsnew/3.4.rst:2028
msgid ""
"The interpreter starts about 30% faster. A couple of measures lead to the "
"speedup. The interpreter loads fewer modules on startup, e.g. the :mod:"
"`re`, :mod:`collections` and :mod:`locale` modules and their dependencies "
"are no longer imported by default. The marshal module has been improved to "
"load compiled Python code faster.  (Contributed by Antoine Pitrou, Christian "
"Heimes and Victor Stinner in :issue:`19219`, :issue:`19218`, :issue:"
"`19209`, :issue:`19205` and :issue:`9548`.)"
msgstr ""
"Интерпретатор запускается примерно на 30% быстрее. Несколько мер приводят к "
"ускорению. Интерпретатор загружает меньше модулей при запуске, например, "
"модули :mod:`re`, :mod:`collections` и :mod:`locale`, и их зависимости "
"больше не импортируются по умолчанию. Модуль маршала был улучшен для более "
"быстрой загрузки скомпилированного кода Python. (Внесено Антуаном Питру, "
"Кристианом Хаймсом и Виктором Стиннером в :issue:`19219`, :issue:`19218`, :"
"issue:`19209`, :issue:`19205` и :issue:`9548`.)"

#: ../../whatsnew/3.4.rst:2036
msgid ""
":class:`bz2.BZ2File` is now as fast or faster than the Python2 version for "
"most cases.  :class:`lzma.LZMAFile` has also been optimized.  (Contributed "
"by Serhiy Storchaka and Nadeem Vawda in :issue:`16034`.)"
msgstr ""
":class:`bz2.BZ2File` в большинстве случаев теперь работает так же быстро или "
"даже быстрее, чем версия Python2. :class:`lzma.LZMAFile` также был "
"оптимизирован. (Предоставлено Сергеем Сторчакой и Надимом Вавдой в :issue:"
"`16034`.)"

#: ../../whatsnew/3.4.rst:2040
msgid ""
":func:`random.getrandbits` is 20%-40% faster for small integers (the most "
"common use case).  (Contributed by Serhiy Storchaka in :issue:`16674`.)"
msgstr ""
":func:`random.getrandbits` работает на 20-40% быстрее для маленьких целых "
"чисел (наиболее распространенный вариант использования). (Добавлен Сергеем "
"Сторчакой в ​​:issue:`16674`.)"

#: ../../whatsnew/3.4.rst:2043
msgid ""
"By taking advantage of the new storage format for strings, pickling of "
"strings is now significantly faster.  (Contributed by Victor Stinner and "
"Antoine Pitrou in :issue:`15596`.)"
msgstr ""
"Благодаря новому формату хранения строк травление строк теперь происходит "
"значительно быстрее. (Предоставлено Виктором Стиннером и Антуаном Питру в :"
"issue:`15596`.)"

#: ../../whatsnew/3.4.rst:2047
msgid ""
"A performance issue in :meth:`io.FileIO.readall` has been solved.  This "
"particularly affects Windows, and significantly speeds up the case of piping "
"significant amounts of data through :mod:`subprocess`.  (Contributed by "
"Richard Oudkerk in :issue:`15758`.)"
msgstr ""
"Проблема с производительностью в :meth:`io.FileIO.readall` решена. Это "
"особенно влияет на Windows и значительно ускоряет передачу значительных "
"объемов данных через :mod:`subprocess`. (Предоставлено Ричардом Оудкерком в :"
"issue:`15758`.)"

#: ../../whatsnew/3.4.rst:2052
msgid ""
":func:`html.escape` is now 10x faster.  (Contributed by Matt Bryant in :"
"issue:`18020`.)"
msgstr ""
":func:`html.escape` теперь работает в 10 раз быстрее. (Предоставлено Мэттом "
"Брайантом в :issue:`18020`.)"

#: ../../whatsnew/3.4.rst:2055
msgid ""
"On Windows, the native ``VirtualAlloc`` is now used instead of the CRT "
"``malloc`` in ``obmalloc``.  Artificial benchmarks show about a 3% memory "
"savings."
msgstr ""
"В Windows теперь вместо CRT malloc в obmalloc используется собственный "
"VirtualAlloc. Искусственные тесты показывают экономию памяти примерно на 3%."

#: ../../whatsnew/3.4.rst:2059
msgid ""
":func:`os.urandom` now uses a lazily opened persistent file descriptor so as "
"to avoid using many file descriptors when run in parallel from multiple "
"threads.  (Contributed by Antoine Pitrou in :issue:`18756`.)"
msgstr ""
":func:`os.urandom` теперь использует лениво открываемый постоянный файловый "
"дескриптор, чтобы избежать использования множества файловых дескрипторов при "
"параллельном запуске из нескольких потоков. (Предоставлено Антуаном Питру в :"
"issue:`18756`.)"

#: ../../whatsnew/3.4.rst:2067
msgid "Deprecated"
msgstr "Устарел"

#: ../../whatsnew/3.4.rst:2069
msgid ""
"This section covers various APIs and other features that have been "
"deprecated in Python 3.4, and will be removed in Python 3.5 or later.  In "
"most (but not all) cases, using the deprecated APIs will produce a :exc:"
"`DeprecationWarning` when the interpreter is run with deprecation warnings "
"enabled (for example, by using ``-Wd``)."
msgstr ""
"В этом разделе рассматриваются различные API и другие функции, которые "
"устарели в Python 3.4 и будут удалены в Python 3.5 или более поздних "
"версиях. В большинстве (но не во всех) случаях использование устаревших API "
"приведет к появлению :exc:`DeprecationWarning`, когда интерпретатор "
"запускается с включенными предупреждениями об устаревании (например, с "
"помощью ``-Wd``)."

#: ../../whatsnew/3.4.rst:2077
msgid "Deprecations in the Python API"
msgstr "Устаревшие API Python"

#: ../../whatsnew/3.4.rst:2079
msgid ""
"As mentioned in :ref:`whatsnew-pep-451`, a number of :mod:`importlib` "
"methods and functions are deprecated: :meth:`importlib.find_loader` is "
"replaced by :func:`importlib.util.find_spec`; :meth:`importlib.machinery."
"PathFinder.find_module` is replaced by :meth:`importlib.machinery.PathFinder."
"find_spec`; :meth:`importlib.abc.MetaPathFinder.find_module` is replaced by :"
"meth:`importlib.abc.MetaPathFinder.find_spec`; :meth:`importlib.abc."
"PathEntryFinder.find_loader` and :meth:`~importlib.abc.PathEntryFinder."
"find_module` are replaced by :meth:`importlib.abc.PathEntryFinder."
"find_spec`; all of the :samp:`{xxx}Loader` ABC ``load_module`` methods (:"
"meth:`importlib.abc.Loader.load_module`, :meth:`importlib.abc.InspectLoader."
"load_module`, :meth:`importlib.abc.FileLoader.load_module`, :meth:`importlib."
"abc.SourceLoader.load_module`) should no longer be implemented, instead "
"loaders should implement an ``exec_module`` method (:meth:`importlib.abc."
"Loader.exec_module`, :meth:`importlib.abc.InspectLoader.exec_module` :meth:"
"`importlib.abc.SourceLoader.exec_module`) and let the import system take "
"care of the rest; and :meth:`importlib.abc.Loader.module_repr`, :meth:"
"`importlib.util.module_for_loader`, :meth:`importlib.util.set_loader`, and :"
"meth:`importlib.util.set_package` are no longer needed because their "
"functions are now handled automatically by the import system."
msgstr ""

#: ../../whatsnew/3.4.rst:2104
msgid ""
"The :mod:`imp` module is pending deprecation. To keep compatibility with "
"Python 2/3 code bases, the module's removal is currently not scheduled."
msgstr ""

#: ../../whatsnew/3.4.rst:2107
msgid ""
"The :mod:`formatter` module is pending deprecation and is slated for removal "
"in Python 3.6."
msgstr ""
"Модуль :mod:`formatter` ожидает прекращения поддержки и планируется удалить "
"в Python 3.6."

#: ../../whatsnew/3.4.rst:2110
msgid ""
"``MD5`` as the default *digestmod* for the :func:`hmac.new` function is "
"deprecated.  Python 3.6 will require an explicit digest name or constructor "
"as *digestmod* argument."
msgstr ""
"``MD5`` в качестве *digestmod* по умолчанию для функции :func:`hmac.new` "
"устарел. Python 3.6 потребует явного имени или конструктора дайджеста в "
"качестве аргумента *digestmod*."

#: ../../whatsnew/3.4.rst:2114
msgid ""
"The internal ``Netrc`` class in the :mod:`ftplib` module has been documented "
"as deprecated in its docstring for quite some time.  It now emits a :exc:"
"`DeprecationWarning` and will be removed completely in Python 3.5."
msgstr ""
"Внутренний класс ``Netrc`` в модуле :mod:`ftplib` уже довольно давно "
"задокументирован как устаревший в строке документации. Теперь он выдает :exc:"
"`DeprecationWarning` и будет полностью удален в Python 3.5."

#: ../../whatsnew/3.4.rst:2118
msgid ""
"The undocumented *endtime* argument to :meth:`subprocess.Popen.wait` should "
"not have been exposed and is hopefully not in use; it is deprecated and will "
"mostly likely be removed in Python 3.5."
msgstr ""
"Недокументированный аргумент *endtime* для :meth:`subprocess.Popen.wait` не "
"должен был быть раскрыт и, надеюсь, не используется; он устарел и, скорее "
"всего, будет удален в Python 3.5."

#: ../../whatsnew/3.4.rst:2122
msgid ""
"The *strict* argument of :class:`~html.parser.HTMLParser` is deprecated."
msgstr "Аргумент *strict* :class:`~html.parser.HTMLParser` устарел."

#: ../../whatsnew/3.4.rst:2124
msgid ""
"The :mod:`plistlib` :func:`~plistlib.readPlist`, :func:`~plistlib."
"writePlist`, :func:`~plistlib.readPlistFromBytes`, and :func:`~plistlib."
"writePlistToBytes` functions are deprecated in favor of the corresponding "
"new functions :func:`~plistlib.load`, :func:`~plistlib.dump`, :func:"
"`~plistlib.loads`, and :func:`~plistlib.dumps`.  :func:`~plistlib.Data` is "
"deprecated in favor of just using the :class:`bytes` constructor."
msgstr ""
"Функции :mod:`plistlib` :func:`~plistlib.readPlist`, :func:`~plistlib."
"writePlist`, :func:`~plistlib.readPlistFromBytes` и :func:`~plistlib."
"writePlistToBytes` считаются устаревшими. в пользу соответствующих новых "
"функций :func:`~plistlib.load`, :func:`~plistlib.dump`, :func:`~plistlib."
"loads` и :func:`~plistlib.dumps`. :func:`~plistlib.Data` устарел в пользу "
"использования только конструктора :class:`bytes`."

#: ../../whatsnew/3.4.rst:2131
msgid ""
"The :mod:`sysconfig` key ``SO`` is deprecated, it has been replaced by "
"``EXT_SUFFIX``."
msgstr "Ключ :mod:`sysconfig``SO`` устарел, он заменен на ``EXT_SUFFIX``."

#: ../../whatsnew/3.4.rst:2134
msgid ""
"The ``U`` mode accepted by various ``open`` functions is deprecated. In "
"Python3 it does not do anything useful, and should be replaced by "
"appropriate uses of :class:`io.TextIOWrapper` (if needed) and its *newline* "
"argument."
msgstr ""
"Режим ``U``, принимаемый различными ``открытыми`` функциями, устарел. В "
"Python3 он не делает ничего полезного и должен быть заменен соответствующим "
"использованием :class:`io.TextIOWrapper` (при необходимости) и его аргумента "
"*newline*."

#: ../../whatsnew/3.4.rst:2139
msgid ""
"The *parser* argument of :func:`xml.etree.ElementTree.iterparse` has been "
"deprecated, as has the *html* argument of :func:`~xml.etree.ElementTree."
"XMLParser`.  To prepare for the removal of the latter, all arguments to "
"``XMLParser`` should be passed by keyword."
msgstr ""
"Аргумент *parser* для :func:`xml.etree.ElementTree.iterparse` устарел, как и "
"аргумент *html* для :func:`~xml.etree.ElementTree.XMLParser`. Чтобы "
"подготовиться к удалению последнего, все аргументы XMLParser должны "
"передаваться по ключевому слову."

#: ../../whatsnew/3.4.rst:2146
msgid "Deprecated Features"
msgstr "Устаревшие функции"

#: ../../whatsnew/3.4.rst:2148
msgid ""
"Running :ref:`idle` with the ``-n`` flag (no subprocess) is deprecated. "
"However, the feature will not be removed until :issue:`18823` is resolved."
msgstr ""
"Запуск :ref:`idle` с флагом ``-n`` (без подпроцесса) считается устаревшим. "
"Однако эта функция не будет удалена до тех пор, пока не будет решена "
"проблема:`18823`."

#: ../../whatsnew/3.4.rst:2151
msgid ""
"The site module adding a \"site-python\" directory to sys.path, if it "
"exists, is deprecated (:issue:`19375`)."
msgstr ""
"Модуль сайта, добавляющий каталог «site-python» в sys.path, если он "
"существует, устарел (:issue:`19375`)."

#: ../../whatsnew/3.4.rst:2157
msgid "Removed"
msgstr "Удалено"

#: ../../whatsnew/3.4.rst:2161
msgid "Operating Systems No Longer Supported"
msgstr "Операционные системы больше не поддерживаются"

#: ../../whatsnew/3.4.rst:2163
msgid ""
"Support for the following operating systems has been removed from the source "
"and build tools:"
msgstr ""
"Поддержка следующих операционных систем удалена из исходного кода и "
"инструментов сборки:"

#: ../../whatsnew/3.4.rst:2166
msgid "OS/2 (:issue:`16135`)."
msgstr "OS/2 (:issue:`16135`)."

#: ../../whatsnew/3.4.rst:2167
msgid "Windows 2000 (changeset e52df05b496a)."
msgstr "Windows 2000 (набор изменений e52df05b496a)."

#: ../../whatsnew/3.4.rst:2168
msgid ""
"Windows systems where ``COMSPEC`` points to ``command.com`` (:issue:`14470`)."
msgstr ""
"Системы Windows, где COMSPEC указывает на command.com (:issue:`14470`)."

#: ../../whatsnew/3.4.rst:2169
msgid "VMS (:issue:`16136`)."
msgstr "VMS (:issue:`16136`)."

#: ../../whatsnew/3.4.rst:2173
msgid "API and Feature Removals"
msgstr "Удаление API и функций"

#: ../../whatsnew/3.4.rst:2175
msgid ""
"The following obsolete and previously deprecated APIs and features have been "
"removed:"
msgstr ""
"Следующие устаревшие и ранее не рекомендуемые API и функции были удалены:"

#: ../../whatsnew/3.4.rst:2178
msgid ""
"The unmaintained ``Misc/TextMate`` and ``Misc/vim`` directories have been "
"removed (see the `devguide <https://devguide.python.org>`_ for suggestions "
"on what to use instead)."
msgstr ""
"Неподдерживаемые каталоги «Misc/TextMate» и «Misc/vim» были удалены "
"(предложения о том, что использовать вместо них, см. в «devguide <https://"
"devguide.python.org>»)."

#: ../../whatsnew/3.4.rst:2182
msgid ""
"The ``SO`` makefile macro is removed (it was replaced by the "
"``SHLIB_SUFFIX`` and ``EXT_SUFFIX`` macros) (:issue:`16754`)."
msgstr ""
"Макрос makefile ``SO`` удален (он заменен макросами ``SHLIB_SUFFIX`` и "
"``EXT_SUFFIX``) (:issue:`16754`)."

#: ../../whatsnew/3.4.rst:2185
msgid ""
"The ``PyThreadState.tick_counter`` field has been removed; its value has "
"been meaningless since Python 3.2, when the \"new GIL\" was introduced (:"
"issue:`19199`)."
msgstr ""
"Поле PyThreadState.tick_counter было удалено; его значение стало "
"бессмысленным с момента появления Python 3.2, когда был представлен «новый "
"GIL» (:issue:`19199`)."

#: ../../whatsnew/3.4.rst:2189
msgid ""
"``PyLoader`` and ``PyPycLoader`` have been removed from :mod:`importlib`. "
"(Contributed by Taras Lyapun in :issue:`15641`.)"
msgstr ""
"``PyLoader`` и ``PyPycLoader`` были удалены из :mod:`importlib`. (Добавлен "
"Тарасом Ляпуном в :issue:`15641`.)"

#: ../../whatsnew/3.4.rst:2192
msgid ""
"The *strict* argument to :class:`~http.client.HTTPConnection` and :class:"
"`~http.client.HTTPSConnection` has been removed.  HTTP 0.9-style \"Simple "
"Responses\" are no longer supported."
msgstr ""
"Аргумент *strict* для :class:`~http.client.HTTPConnection` и :class:`~http."
"client.HTTPSConnection` был удален. «Простые ответы» в стиле HTTP 0.9 больше "
"не поддерживаются."

#: ../../whatsnew/3.4.rst:2196
msgid ""
"The deprecated :mod:`urllib.request.Request` getter and setter methods "
"``add_data``, ``has_data``, ``get_data``, ``get_type``, ``get_host``, "
"``get_selector``, ``set_proxy``, ``get_origin_req_host``, and "
"``is_unverifiable`` have been removed (use direct attribute access instead)."
msgstr ""
"Устаревшие методы получения и установки :mod:`urllib.request.Request` "
"``add_data``, ``has_data``, ``get_data``, ``get_type``, ``get_host``, "
"``get_selector` `, ``set_proxy``, ``get_origin_req_host`` и "
"``is_unverifying`` были удалены (вместо этого используйте прямой доступ к "
"атрибутам)."

#: ../../whatsnew/3.4.rst:2201
msgid ""
"Support for loading the deprecated ``TYPE_INT64`` has been removed from :mod:"
"`marshal`.  (Contributed by Dan Riti in :issue:`15480`.)"
msgstr ""
"Поддержка загрузки устаревшего ``TYPE_INT64`` была удалена из :mod:"
"`marshal`. (Предоставлено Дэном Рити в :issue:`15480`.)"

#: ../../whatsnew/3.4.rst:2204
msgid ""
":class:`inspect.Signature`: positional-only parameters are now required to "
"have a valid name."
msgstr ""
":class:`inspect.Signature`: позиционные параметры теперь должны иметь "
"допустимое имя."

#: ../../whatsnew/3.4.rst:2207
msgid ""
":meth:`object.__format__` no longer accepts non-empty format strings, it now "
"raises a :exc:`TypeError` instead.  Using a non-empty string has been "
"deprecated since Python 3.2.  This change has been made to prevent a "
"situation where previously working (but incorrect) code would start failing "
"if an object gained a __format__ method, which means that your code may now "
"raise a :exc:`TypeError` if you are using an ``'s'`` format code with "
"objects that do not have a __format__ method that handles it.  See :issue:"
"`7994` for background."
msgstr ""
":meth:`object.__format__` больше не принимает непустые строки формата, "
"вместо этого он теперь вызывает :exc:`TypeError`. Использование непустой "
"строки устарело начиная с Python 3.2. Это изменение было сделано, чтобы "
"предотвратить ситуацию, когда ранее работающий (но неправильный) код начинал "
"давать сбой, если объект получил метод __format__, что означает, что ваш код "
"теперь может вызвать :exc:`TypeError`, если вы используете `` 's'`` код "
"формата с объектами, у которых нет метода __format__, который его "
"обрабатывает. Дополнительную информацию см. в :issue:`7994`."

#: ../../whatsnew/3.4.rst:2216
msgid ""
":meth:`difflib.SequenceMatcher.isbjunk` and :meth:`difflib.SequenceMatcher."
"isbpopular` were deprecated in 3.2, and have now been removed: use ``x in sm."
"bjunk`` and ``x in sm.bpopular``, where *sm* is a :class:`~difflib."
"SequenceMatcher` object (:issue:`13248`)."
msgstr ""
":meth:`difflib.SequenceMatcher.isbjunk` и :meth:`difflib.SequenceMatcher."
"isbpopular` устарели в версии 3.2 и теперь удалены: используйте ``x в sm."
"bjunk`` и ``x в sm.bpopular ``, где *sm* — это объект :class:`~difflib."
"SequenceMatcher` (:issue:`13248`)."

#: ../../whatsnew/3.4.rst:2224
msgid "Code Cleanups"
msgstr "Очистка кода"

#: ../../whatsnew/3.4.rst:2226
msgid ""
"The unused and undocumented internal ``Scanner`` class has been removed from "
"the :mod:`pydoc` module."
msgstr ""
"Неиспользуемый и недокументированный внутренний класс Scanner был удален из "
"модуля :mod:`pydoc`."

#: ../../whatsnew/3.4.rst:2229
msgid ""
"The private and effectively unused ``_gestalt`` module has been removed, "
"along with the private :mod:`platform` functions ``_mac_ver_lookup``, "
"``_mac_ver_gstalt``, and ``_bcd2str``, which would only have ever been "
"called on badly broken OSX systems (see :issue:`18393`)."
msgstr ""
"Частный и фактически неиспользуемый модуль _gestalt был удален вместе с "
"частными функциями :mod:`platform` _mac_ver_lookup``, ``_mac_ver_gstalt`` и "
"``_bcd2str``, которые когда-либо использовались только вызывался на сильно "
"сломанных системах OSX (см.:issue:`18393`)."

#: ../../whatsnew/3.4.rst:2234
msgid ""
"The hardcoded copies of certain :mod:`stat` constants that were included in "
"the :mod:`tarfile` module namespace have been removed."
msgstr ""
"Жестко закодированные копии некоторых констант :mod:`stat`, которые были "
"включены в пространство имен модуля :mod:`tarfile`, были удалены."

#: ../../whatsnew/3.4.rst:2240
msgid "Porting to Python 3.4"
msgstr "Портирование на Python 3.4"

#: ../../whatsnew/3.4.rst:2242
msgid ""
"This section lists previously described changes and other bugfixes that may "
"require changes to your code."
msgstr ""
"В этом разделе перечислены ранее описанные изменения и другие исправления "
"ошибок, которые могут потребовать внесения изменений в ваш код."

#: ../../whatsnew/3.4.rst:2247
msgid "Changes in 'python' Command Behavior"
msgstr "Изменения в поведении команды Python"

#: ../../whatsnew/3.4.rst:2249
msgid ""
"In a posix shell, setting the :envvar:`PATH` environment variable to an "
"empty value is equivalent to not setting it at all.  However, setting :"
"envvar:`PYTHONPATH` to an empty value was *not* equivalent to not setting it "
"at all: setting :envvar:`PYTHONPATH` to an empty value was equivalent to "
"setting it to ``.``, which leads to confusion when reasoning by analogy to "
"how :envvar:`PATH` works.  The behavior now conforms to the posix convention "
"for :envvar:`PATH`."
msgstr ""
"В оболочке posix установка переменной среды :envvar:`PATH` пустого значения "
"эквивалентна ее полному отсутствию установки. Однако установка :envvar:"
"`PYTHONPATH` в пустое значение *не* эквивалентна его полному отсутствию "
"установки: установка :envvar:`PYTHONPATH` в пустое значение была "
"эквивалентна установке его в ``.``, что приводит к к путанице при "
"рассуждениях по аналогии с тем, как работает :envvar:`PATH`. Поведение "
"теперь соответствует соглашению posix для :envvar:`PATH`."

#: ../../whatsnew/3.4.rst:2257
msgid ""
"The [X refs, Y blocks] output of a debug (``--with-pydebug``) build of the "
"CPython interpreter is now off by default.  It can be re-enabled using the "
"``-X showrefcount`` option.  (Contributed by Ezio Melotti in :issue:`17323`.)"
msgstr ""
"Вывод [X refs, Yblocks] отладочной (``--with-pydebug``) сборки "
"интерпретатора CPython теперь по умолчанию отключен. Его можно повторно "
"включить с помощью опции ``-X showrefcount``. (Предоставлено Эцио Мелотти в :"
"issue:`17323`.)"

#: ../../whatsnew/3.4.rst:2261
msgid ""
"The python command and most stdlib scripts (as well as :mod:`argparse`) now "
"output ``--version`` information to ``stdout`` instead of ``stderr`` (for "
"issue list see :ref:`other-improvements-3.4` above)."
msgstr ""
"Команда python и большинство сценариев stdlib (а также :mod:`argparse`) "
"теперь выводят информацию ``--version`` в ``stdout`` вместо ``stderr`` "
"(список проблем см. в :ref:` другие-улучшения-3.4` выше)."

#: ../../whatsnew/3.4.rst:2267
msgid "Changes in the Python API"
msgstr "Изменения в API Python"

#: ../../whatsnew/3.4.rst:2269
msgid ""
"The ABCs defined in :mod:`importlib.abc` now either raise the appropriate "
"exception or return a default value instead of raising :exc:"
"`NotImplementedError` blindly. This will only affect code calling :func:"
"`super` and falling through all the way to the ABCs. For compatibility, "
"catch both :exc:`NotImplementedError` or the appropriate exception as needed."
msgstr ""
"ABC, определенные в :mod:`importlib.abc`, теперь либо вызывают "
"соответствующее исключение, либо возвращают значение по умолчанию вместо "
"того, чтобы слепо вызывать :exc:`NotImplementedError`. Это повлияет только "
"на вызов кода :func:`super` и попадание в ABC. Для совместимости перехватите "
"как :exc:`NotImplementedError`, так и соответствующее исключение, если "
"необходимо."

#: ../../whatsnew/3.4.rst:2275
msgid ""
"The module type now initializes the :attr:`__package__` and :attr:"
"`__loader__` attributes to ``None`` by default. To determine if these "
"attributes were set in a backwards-compatible fashion, use e.g. "
"``getattr(module, '__loader__', None) is not None``.  (:issue:`17115`.)"
msgstr ""

#: ../../whatsnew/3.4.rst:2280
msgid ""
":meth:`importlib.util.module_for_loader` now sets ``__loader__`` and "
"``__package__`` unconditionally to properly support reloading. If this is "
"not desired then you will need to set these attributes manually. You can "
"use :func:`importlib.util.module_to_load` for module management."
msgstr ""

#: ../../whatsnew/3.4.rst:2285
msgid ""
"Import now resets relevant attributes (e.g. ``__name__``, ``__loader__``, "
"``__package__``, ``__file__``, ``__cached__``) unconditionally when "
"reloading. Note that this restores a pre-3.3 behavior in that it means a "
"module is re-found when re-loaded (:issue:`19413`)."
msgstr ""
"Импорт теперь сбрасывает соответствующие атрибуты (например, ``__name__``, "
"``__loader__``, ``__package__``, ``__file__``, ``__cached__``) безоговорочно "
"при перезагрузке. Обратите внимание, что это восстанавливает поведение до "
"версии 3.3, то есть модуль перенаходится при повторной загрузке (:issue:"
"`19413`)."

#: ../../whatsnew/3.4.rst:2290
msgid ""
"Frozen packages no longer set ``__path__`` to a list containing the package "
"name, they now set it to an empty list.  The previous behavior could cause "
"the import system to do the wrong thing on submodule imports if there was "
"also a directory with the same name as the frozen package.  The correct way "
"to determine if a module is a package or not is to use ``hasattr(module, "
"'__path__')`` (:issue:`18065`)."
msgstr ""
"Замороженные пакеты больше не устанавливают ``__path__`` в список, "
"содержащий имя пакета, теперь они устанавливают его в пустой список. "
"Предыдущее поведение могло привести к тому, что система импорта выполняла "
"неправильные действия при импорте подмодуля, если существовал каталог с тем "
"же именем, что и у замороженного пакета. Правильный способ определить, "
"является ли модуль пакетом или нет, — использовать hasattr(module, "
"'__path__')`` (:issue:`18065`)."

#: ../../whatsnew/3.4.rst:2297
msgid ""
"Frozen modules no longer define a ``__file__`` attribute. It's semantically "
"incorrect for frozen modules to set the attribute as they are not loaded "
"from any explicit location. If you must know that a module comes from frozen "
"code then you can see if the module's ``__spec__.location`` is set to "
"``'frozen'``, check if the loader is a subclass of :class:`importlib."
"machinery.FrozenImporter`, or if Python 2 compatibility is necessary you can "
"use :func:`imp.is_frozen`."
msgstr ""

#: ../../whatsnew/3.4.rst:2305
msgid ""
":func:`py_compile.compile` now raises :exc:`FileExistsError` if the file "
"path it would write to is a symlink or a non-regular file. This is to act as "
"a warning that import will overwrite those files with a regular file "
"regardless of what type of file path they were originally."
msgstr ""
":func:`py_compile.compile` теперь вызывает :exc:`FileExistsError`, если путь "
"к файлу, в который он будет записывать, является символической ссылкой или "
"нестандартным файлом. Это предупреждение о том, что импорт перезапишет эти "
"файлы обычным файлом независимо от того, какой тип пути к файлу они имели "
"изначально."

#: ../../whatsnew/3.4.rst:2310
msgid ""
":meth:`importlib.abc.SourceLoader.get_source` no longer raises :exc:"
"`ImportError` when the source code being loaded triggers a :exc:"
"`SyntaxError` or :exc:`UnicodeDecodeError`. As :exc:`ImportError` is meant "
"to be raised only when source code cannot be found but it should, it was "
"felt to be over-reaching/overloading of that meaning when the source code is "
"found but improperly structured. If you were catching ImportError before and "
"wish to continue to ignore syntax or decoding issues, catch all three "
"exceptions now."
msgstr ""
":meth:`importlib.abc.SourceLoader.get_source` больше не вызывает :exc:"
"`ImportError`, когда загружаемый исходный код вызывает :exc:`SyntaxError` "
"или :exc:`UnicodeDecodeError`. Поскольку :exc:`ImportError` предназначен для "
"вызова только тогда, когда исходный код не может быть найден, но это должно "
"быть, было сочтено, что это перегружает это значение, когда исходный код "
"найден, но неправильно структурирован. Если вы раньше ловили ImportError и "
"хотите продолжать игнорировать проблемы синтаксиса или декодирования, "
"перехватите все три исключения сейчас."

#: ../../whatsnew/3.4.rst:2319
msgid ""
":func:`functools.update_wrapper` and :func:`functools.wraps` now correctly "
"set the ``__wrapped__`` attribute to the function being wrapped, even if "
"that function also had its ``__wrapped__`` attribute set. This means "
"``__wrapped__`` attributes now correctly link a stack of decorated functions "
"rather than every ``__wrapped__`` attribute in the chain referring to the "
"innermost function. Introspection libraries that assumed the previous "
"behaviour was intentional can use :func:`inspect.unwrap` to access the first "
"function in the chain that has no ``__wrapped__`` attribute."
msgstr ""
":func:`functools.update_wrapper` и :func:`functools.wraps` теперь правильно "
"устанавливают атрибут ``__wrapped__`` для оборачиваемой функции, даже если "
"для этой функции также был установлен атрибут ``__wrapped__``. Это означает, "
"что атрибуты ``__wrapped__`` теперь правильно связывают стек декорированных "
"функций, а не каждый атрибут ``__wrapped__`` в цепочке, ссылающийся на самую "
"внутреннюю функцию. Библиотеки интроспекции, которые предполагали, что "
"предыдущее поведение было преднамеренным, могут использовать :func:`inspect."
"unwrap` для доступа к первой функции в цепочке, которая не имеет атрибута "
"``__wrapped__``."

#: ../../whatsnew/3.4.rst:2329
msgid ""
":func:`inspect.getfullargspec` has been reimplemented on top of :func:"
"`inspect.signature` and hence handles a much wider variety of callable "
"objects than it did in the past. It is expected that additional builtin and "
"extension module callables will gain signature metadata over the course of "
"the Python 3.4 series. Code that assumes that :func:`inspect.getfullargspec` "
"will fail on non-Python callables may need to be adjusted accordingly."
msgstr ""
":func:`inspect.getfullargspec` был переопределен поверх :func:`inspect."
"signature` и, следовательно, обрабатывает гораздо более широкий спектр "
"вызываемых объектов, чем раньше. Ожидается, что дополнительные встроенные и "
"вызываемые модули модулей получат метаданные подписи в ходе серии Python "
"3.4. Код, который предполагает, что :func:`inspect.getfullargspec` не будет "
"работать при вызовах, отличных от Python, возможно, придется соответствующим "
"образом скорректировать."

#: ../../whatsnew/3.4.rst:2337
msgid ""
":class:`importlib.machinery.PathFinder` now passes on the current working "
"directory to objects in :data:`sys.path_hooks` for the empty string. This "
"results in :data:`sys.path_importer_cache` never containing ``''``, thus "
"iterating through :data:`sys.path_importer_cache` based on :data:`sys.path` "
"will not find all keys. A module's ``__file__`` when imported in the current "
"working directory will also now have an absolute path, including when using "
"``-m`` with the interpreter (except for ``__main__.__file__`` when a script "
"has been executed directly using a relative path) (Contributed by Brett "
"Cannon in :issue:`18416`).  is specified on the command-line) (:issue:"
"`18416`)."
msgstr ""
":class:`importlib.machinery.PathFinder` теперь передает текущий рабочий "
"каталог объектам в :data:`sys.path_hooks` для пустой строки. В результате :"
"data:`sys.path_importer_cache` никогда не содержит ``''``, таким образом, "
"перебор :data:`sys.path_importer_cache` на основе :data:`sys.path` не "
"приведет к поиску всех ключей. ``__file__`` модуля при импорте в текущий "
"рабочий каталог теперь также будет иметь абсолютный путь, в том числе при "
"использовании ``-m`` с интерпретатором (за исключением ``__main__."
"__file__``, когда скрипт был выполнен. напрямую, используя относительный "
"путь) (предоставлен Бреттом Кэнноном в :issue:`18416`). указывается в "
"командной строке) (:issue:`18416`)."

#: ../../whatsnew/3.4.rst:2348
msgid ""
"The removal of the *strict* argument to :class:`~http.client.HTTPConnection` "
"and :class:`~http.client.HTTPSConnection` changes the meaning of the "
"remaining arguments if you are specifying them positionally rather than by "
"keyword.  If you've been paying attention to deprecation warnings your code "
"should already be specifying any additional arguments via keywords."
msgstr ""
"Удаление аргумента *strict* в :class:`~http.client.HTTPConnection` и :class:"
"`~http.client.HTTPSConnection` меняет значение остальных аргументов, если вы "
"указываете их позиционно, а не по ключевому слову. Если вы обращали внимание "
"на предупреждения об устаревании, в вашем коде уже должны быть указаны "
"дополнительные аргументы с помощью ключевых слов."

#: ../../whatsnew/3.4.rst:2354
msgid ""
"Strings between ``from __future__ import ...`` statements now *always* raise "
"a :exc:`SyntaxError`.  Previously if there was no leading docstring, an "
"interstitial string would sometimes be ignored.  This brings CPython into "
"compliance with the language spec; Jython and PyPy already were. (:issue:"
"`17434`)."
msgstr ""
"Строки между операторами ``from __future__ import ...`` теперь *всегда* "
"вызывают :exc:`SyntaxError`. Раньше, если не было ведущей строки "
"документации, промежуточная строка иногда игнорировалась. Это приводит "
"CPython в соответствие со спецификацией языка; Jython и PyPy уже были. (:"
"issue:`17434`)."

#: ../../whatsnew/3.4.rst:2360
msgid ""
":meth:`ssl.SSLSocket.getpeercert` and :meth:`ssl.SSLSocket.do_handshake` now "
"raise an :exc:`OSError` with ``ENOTCONN`` when the ``SSLSocket`` is not "
"connected, instead of the previous behavior of raising an :exc:"
"`AttributeError`.  In addition, :meth:`~ssl.SSLSocket.getpeercert` will "
"raise a :exc:`ValueError` if the handshake has not yet been done."
msgstr ""
":meth:`ssl.SSLSocket.getpeercert` и :meth:`ssl.SSLSocket.do_handshake` "
"теперь вызывают :exc:`OSError` с ``ENOTCONN``, когда ``SSLSocket`` не "
"подключен, вместо предыдущее поведение при вызове :exc:`AttributeError`. "
"Кроме того, :meth:`~ssl.SSLSocket.getpeercert` выдаст :exc:`ValueError`, "
"если рукопожатие еще не было выполнено."

#: ../../whatsnew/3.4.rst:2366
msgid ""
":func:`base64.b32decode` now raises a :exc:`binascii.Error` when the input "
"string contains non-b32-alphabet characters, instead of a :exc:`TypeError`.  "
"This particular :exc:`TypeError` was missed when the other :exc:"
"`TypeError`\\ s were converted.  (Contributed by Serhiy Storchaka in :issue:"
"`18011`.)  Note: this change was also inadvertently applied in Python 3.3.3."
msgstr ""
":func:`base64.b32decode` теперь вызывает :exc:`binascii.Error`, когда "
"входная строка содержит символы алфавита, отличные от b32, вместо :exc:"
"`TypeError`. Этот конкретный :exc:`TypeError` был пропущен при "
"преобразовании других :exc:`TypeError`\\. (Внесено Сергеем Сторчакой в ​​:"
"issue:`18011`.) Примечание: это изменение также было случайно применено в "
"Python 3.3.3."

#: ../../whatsnew/3.4.rst:2373
msgid ""
"The :attr:`~cgi.FieldStorage.file` attribute is now automatically closed "
"when the creating :class:`cgi.FieldStorage` instance is garbage collected. "
"If you were pulling the file object out separately from the :class:`cgi."
"FieldStorage` instance and not keeping the instance alive, then you should "
"either store the entire :class:`cgi.FieldStorage` instance or read the "
"contents of the file before the :class:`cgi.FieldStorage` instance is "
"garbage collected."
msgstr ""
"Атрибут :attr:`~cgi.FieldStorage.file` теперь автоматически закрывается, "
"когда создаваемый экземпляр :class:`cgi.FieldStorage` подвергается сборке "
"мусора. Если вы извлекали файловый объект отдельно из экземпляра :class:`cgi."
"FieldStorage` и не поддерживали работу экземпляра, то вам следует либо "
"сохранить весь экземпляр :class:`cgi.FieldStorage`, либо прочитать "
"содержимое файла. до того, как экземпляр :class:`cgi.FieldStorage` будет "
"собран мусором."

#: ../../whatsnew/3.4.rst:2380
msgid ""
"Calling ``read`` or ``write`` on a closed SSL socket now raises an "
"informative :exc:`ValueError` rather than the previous more mysterious :exc:"
"`AttributeError` (:issue:`9177`)."
msgstr ""
"Вызов ``read`` или ``write`` в закрытом сокете SSL теперь вызывает "
"информативный :exc:`ValueError`, а не предыдущий, более загадочный :exc:"
"`AttributeError` (:issue:`9177`)."

#: ../../whatsnew/3.4.rst:2384
msgid ""
":meth:`slice.indices` no longer produces an :exc:`OverflowError` for huge "
"values.  As a consequence of this fix, :meth:`slice.indices` now raises a :"
"exc:`ValueError` if given a negative length; previously it returned nonsense "
"values (:issue:`14794`)."
msgstr ""
":meth:`slice.indices` больше не выдает :exc:`OverflowError` для огромных "
"значений. В результате этого исправления :meth:`slice.indices` теперь "
"вызывает :exc:`ValueError`, если ему присвоена отрицательная длина; ранее он "
"возвращал бессмысленные значения (:issue:`14794`)."

#: ../../whatsnew/3.4.rst:2389
msgid ""
"The :class:`complex` constructor, unlike the :mod:`cmath` functions, was "
"incorrectly accepting :class:`float` values if an object's ``__complex__`` "
"special method returned one.  This now raises a :exc:`TypeError`. (:issue:"
"`16290`.)"
msgstr ""
"Конструктор :class:`complex`, в отличие от функций :mod:`cmath`, неправильно "
"принимал значения :class:`float`, если специальный метод объекта "
"``__complex__`` возвращал их. Теперь это вызывает :exc:`TypeError`. (:issue:"
"`16290`.)"

#: ../../whatsnew/3.4.rst:2394
msgid ""
"The :class:`int` constructor in 3.2 and 3.3 erroneously accepts :class:"
"`float` values for the *base* parameter.  It is unlikely anyone was doing "
"this, but if so, it will now raise a :exc:`TypeError` (:issue:`16772`)."
msgstr ""
"Конструктор :class:`int` в версиях 3.2 и 3.3 ошибочно принимает значения :"
"class:`float` для параметра *base*. Вряд ли кто-то это делал, но если это "
"так, то теперь будет выдано :exc:`TypeError` (:issue:`16772`)."

#: ../../whatsnew/3.4.rst:2398
msgid ""
"Defaults for keyword-only arguments are now evaluated *after* defaults for "
"regular keyword arguments, instead of before.  Hopefully no one wrote any "
"code that depends on the previous buggy behavior (:issue:`16967`)."
msgstr ""
"Значения по умолчанию для аргументов, содержащих только ключевые слова, "
"теперь оцениваются *после* значений по умолчанию для обычных аргументов "
"ключевых слов, а не до. Надеюсь, никто не написал кода, который зависит от "
"предыдущего поведения ошибок (:issue:`16967`)."

#: ../../whatsnew/3.4.rst:2402
msgid ""
"Stale thread states are now cleared after :func:`~os.fork`.  This may cause "
"some system resources to be released that previously were incorrectly kept "
"perpetually alive (for example, database connections kept in thread-local "
"storage).  (:issue:`17094`.)"
msgstr ""
"Устаревшие состояния потоков теперь очищаются после :func:`~os.fork`. Это "
"может привести к освобождению некоторых системных ресурсов, которые ранее "
"неправильно поддерживались постоянно активными (например, соединения с базой "
"данных, хранившиеся в локальном хранилище потоков). (:issue:`17094`.)"

#: ../../whatsnew/3.4.rst:2407
msgid ""
"Parameter names in ``__annotations__`` dicts are now mangled properly, "
"similarly to :attr:`~function.__kwdefaults__`. (Contributed by Yury "
"Selivanov in :issue:`20625`.)"
msgstr ""
"Имена параметров в словарях ``__annotations__`` теперь корректно искажаются, "
"аналогично :attr:`~function.__kwdefaults__`. (Добавлен Юрием Селивановым в :"
"issue:`20625`.)"

#: ../../whatsnew/3.4.rst:2411
msgid ""
":attr:`hashlib.hash.name` now always returns the identifier in lower case. "
"Previously some builtin hashes had uppercase names, but now that it is a "
"formal public interface the naming has been made consistent (:issue:`18532`)."
msgstr ""
":attr:`hashlib.hash.name` теперь всегда возвращает идентификатор в нижнем "
"регистре. Раньше некоторые встроенные хеши имели имена в верхнем регистре, "
"но теперь, когда это формальный общедоступный интерфейс, имена стали "
"согласованными (:issue:`18532`)."

#: ../../whatsnew/3.4.rst:2415
msgid ""
"Because :mod:`unittest.TestSuite` now drops references to tests after they "
"are run, test harnesses that re-use a :class:`~unittest.TestSuite` to re-run "
"a set of tests may fail.   Test suites should not be re-used in this fashion "
"since it means state is retained between test runs, breaking the test "
"isolation that :mod:`unittest` is designed to provide.  However, if the lack "
"of isolation is considered acceptable, the old behavior can be restored by "
"creating a :mod:`~unittest.TestSuite` subclass that defines a "
"``_removeTestAtIndex`` method that does nothing (see :meth:`.TestSuite."
"__iter__`) (:issue:`11798`)."
msgstr ""

#: ../../whatsnew/3.4.rst:2425
msgid ""
":mod:`unittest` now uses :mod:`argparse` for command line parsing.  There "
"are certain invalid command forms that used to work that are no longer "
"allowed; in theory this should not cause backward compatibility issues since "
"the disallowed command forms didn't make any sense and are unlikely to be in "
"use."
msgstr ""
":mod:`unittest` теперь использует :mod:`argparse` для анализа командной "
"строки. Существуют определенные недопустимые формы команд, которые раньше "
"работали, но которые больше не разрешены; теоретически это не должно "
"вызывать проблем с обратной совместимостью, поскольку запрещенные формы "
"команд не имеют никакого смысла и вряд ли будут использоваться."

#: ../../whatsnew/3.4.rst:2430
msgid ""
"The :func:`re.split`, :func:`re.findall`, and :func:`re.sub` functions, and "
"the :meth:`~re.match.group` and :meth:`~re.match.groups` methods of "
"``match`` objects now always return a *bytes* object when the string to be "
"matched is a :term:`bytes-like object`.  Previously the return type matched "
"the input type, so if your code was depending on the return value being, "
"say, a ``bytearray``, you will need to change your code."
msgstr ""
"Функции :func:`re.split`, :func:`re.findall` и :func:`re.sub`, а также :meth:"
"`~re.match.group` и :meth:`~re Методы .match.groups объектов match теперь "
"всегда возвращают объект *bytes*, если сопоставляемая строка является "
"объектом, подобным :term:`bytes`. Раньше тип возвращаемого значения "
"соответствовал типу ввода, поэтому, если ваш код зависел от возвращаемого "
"значения, например, ``bytearray``, вам нужно будет изменить свой код."

#: ../../whatsnew/3.4.rst:2437
msgid ""
":mod:`audioop` functions now raise an error immediately if passed string "
"input, instead of failing randomly later on (:issue:`16685`)."
msgstr ""
"Функции :mod:`audioop` теперь немедленно выдают ошибку при передаче "
"строкового ввода, а не в случайном порядке позже (:issue:`16685`)."

#: ../../whatsnew/3.4.rst:2440
msgid ""
"The new *convert_charrefs* argument to :class:`~html.parser.HTMLParser` "
"currently defaults to ``False`` for backward compatibility, but will "
"eventually be changed to default to ``True``.  It is recommended that you "
"add this keyword, with the appropriate value, to any :class:`~html.parser."
"HTMLParser` calls in your code (:issue:`13633`)."
msgstr ""
"Новый аргумент *convert_charrefs* для :class:`~html.parser.HTMLParser` в "
"настоящее время по умолчанию имеет значение ``False`` для обратной "
"совместимости, но со временем будет изменен на ``True``. Рекомендуется "
"добавлять это ключевое слово с соответствующим значением ко всем вызовам :"
"class:`~html.parser.HTMLParser` в вашем коде (:issue:`13633`)."

#: ../../whatsnew/3.4.rst:2446
msgid ""
"Since the *digestmod* argument to the :func:`hmac.new` function will in the "
"future have no default, all calls to :func:`hmac.new` should be changed to "
"explicitly specify a *digestmod* (:issue:`17276`)."
msgstr ""
"Поскольку аргумент *digestmod* функции :func:`hmac.new` в будущем не будет "
"иметь значения по умолчанию, все вызовы :func:`hmac.new` должны быть "
"изменены, чтобы явно указать *digestmod* (:issue: `17276`)."

#: ../../whatsnew/3.4.rst:2450
msgid ""
"Calling :func:`sysconfig.get_config_var` with the ``SO`` key, or looking "
"``SO`` up in the results of a call to :func:`sysconfig.get_config_vars` is "
"deprecated.  This key should be replaced by ``EXT_SUFFIX`` or "
"``SHLIB_SUFFIX``, depending on the context (:issue:`19555`)."
msgstr ""
"Вызов :func:`sysconfig.get_config_var` с ключом ``SO`` или поиск ``SO`` в "
"результатах вызова :func:`sysconfig.get_config_vars` считается устаревшим. "
"Этот ключ следует заменить на EXT_SUFFIX или SHLIB_SUFFIX, в зависимости от "
"контекста (:issue:`19555`)."

#: ../../whatsnew/3.4.rst:2455
msgid ""
"Any calls to ``open`` functions that specify ``U`` should be modified. ``U`` "
"is ineffective in Python3 and will eventually raise an error if used. "
"Depending on the function, the equivalent of its old Python2 behavior can be "
"achieved using either a *newline* argument, or if necessary by wrapping the "
"stream in :mod:`~io.TextIOWrapper` to use its *newline* argument (:issue:"
"`15204`)."
msgstr ""
"Любые вызовы функций ``open``, которые указывают ``U``, должны быть "
"изменены. ``U`` неэффективен в Python3 и в конечном итоге вызовет ошибку, "
"если его использовать. В зависимости от функции эквивалент ее старого "
"поведения Python2 может быть достигнут с использованием аргумента *newline* "
"или, если необходимо, обертыванием потока в :mod:`~io.TextIOWrapper` для "
"использования его аргумента *newline* (:issue :`15204`)."

#: ../../whatsnew/3.4.rst:2462
msgid ""
"If you use ``pyvenv`` in a script and desire that pip *not* be installed, "
"you must add ``--without-pip`` to your command invocation."
msgstr ""
"Если вы используете ``pyvenv`` в скрипте и хотите, чтобы pip *not* был "
"установлен, вы должны добавить ``--without-pip`` к вызову команды."

#: ../../whatsnew/3.4.rst:2466
msgid ""
"The default behavior of :func:`json.dump` and :func:`json.dumps` when an "
"indent is specified has changed: it no longer produces trailing spaces after "
"the item separating commas at the ends of lines.  This will matter only if "
"you have tests that are doing white-space-sensitive comparisons of such "
"output (:issue:`16333`)."
msgstr ""
"Поведение по умолчанию :func:`json.dump` и :func:`json.dumps` при указании "
"отступа изменилось: больше не создаются конечные пробелы после элемента, "
"разделяющие запятые на концах строк. Это будет иметь значение только в том "
"случае, если у вас есть тесты, которые выполняют сравнение таких выходных "
"данных с учетом пробелов (:issue:`16333`)."

#: ../../whatsnew/3.4.rst:2472
msgid ""
":mod:`doctest` now looks for doctests in extension module ``__doc__`` "
"strings, so if your doctest test discovery includes extension modules that "
"have things that look like doctests in them you may see test failures you've "
"never seen before when running your tests (:issue:`3158`)."
msgstr ""
":mod:`doctest` теперь ищет доктесты в строках модуля расширения ``__doc__``, "
"поэтому, если ваше обнаружение теста доктеста включает в себя модули "
"расширения, в которых есть что-то похожее на доктесты, вы можете увидеть "
"сбои тестов, которых вы никогда раньше не видели, когда запуск тестов (:"
"issue:`3158`)."

#: ../../whatsnew/3.4.rst:2477
msgid ""
"The :mod:`collections.abc` module has been slightly refactored as part of "
"the Python startup improvements.  As a consequence of this, it is no longer "
"the case that importing :mod:`collections` automatically imports :mod:"
"`collections.abc`.  If your program depended on the (undocumented) implicit "
"import, you will need to add an explicit ``import collections.abc`` (:issue:"
"`20784`)."
msgstr ""
"Модуль :mod:`collections.abc` был немного переработан в рамках улучшения "
"запуска Python. Как следствие этого, импорт :mod:`collections` больше не "
"приводит к автоматическому импорту :mod:`collections.abc`. Если ваша "
"программа зависит от (недокументированного) неявного импорта, вам нужно "
"будет добавить явный импорт коллекций.abc (:issue:`20784`)."

#: ../../whatsnew/3.4.rst:2486
msgid "Changes in the C API"
msgstr "Изменения в C API"

#: ../../whatsnew/3.4.rst:2488
msgid ""
":c:func:`PyEval_EvalFrameEx`, :c:func:`PyObject_Repr`, and :c:func:"
"`PyObject_Str`, along with some other internal C APIs, now include a "
"debugging assertion that ensures they are not used in situations where they "
"may silently discard a currently active exception. In cases where discarding "
"the active exception is expected and desired (for example, because it has "
"already been saved locally with :c:func:`PyErr_Fetch` or is being "
"deliberately replaced with a different exception), an explicit :c:func:"
"`PyErr_Clear` call will be needed to avoid triggering the assertion when "
"invoking these operations (directly or indirectly) and running against a "
"version of Python that is compiled with assertions enabled."
msgstr ""
":c:func:`PyEval_EvalFrameEx`, :c:func:` PyObj ect_Repr` и :c:func:` PyObj "
"ect_Str`, а также некоторые другие внутренние API C теперь включают "
"утверждение отладки, гарантирующее, что они не будут использоваться в "
"ситуации, когда они могут молча отбросить активное в данный момент "
"исключение. В случаях, когда ожидается и желательно отбрасывание активного "
"исключения (например, потому что оно уже было сохранено локально с помощью :"
"c:func:`PyErr_Fetch` или намеренно заменяется другим исключением), явное :c:"
"func:` Вызов PyErr_Clear` понадобится, чтобы избежать срабатывания "
"утверждения при вызове этих операций (прямо или косвенно) и запуске версии "
"Python, скомпилированной с включенными утверждениями."

#: ../../whatsnew/3.4.rst:2500
msgid ""
":c:func:`PyErr_SetImportError` now sets :exc:`TypeError` when its **msg** "
"argument is not set. Previously only ``NULL`` was returned with no exception "
"set."
msgstr ""
":c:func:`PyErr_SetImportError` теперь устанавливает :exc:`TypeError`, когда "
"его аргумент **msg** не установлен. Раньше возвращалось только ``NULL`` без "
"каких-либо исключений."

#: ../../whatsnew/3.4.rst:2504
msgid ""
"The result of the :c:data:`PyOS_ReadlineFunctionPointer` callback must now "
"be a string allocated by :c:func:`PyMem_RawMalloc` or :c:func:"
"`PyMem_RawRealloc`, or ``NULL`` if an error occurred, instead of a string "
"allocated by :c:func:`PyMem_Malloc` or :c:func:`PyMem_Realloc` (:issue:"
"`16742`)"
msgstr ""
"Результатом обратного вызова :c:data:`PyOS_ReadlineFunctionPointer` теперь "
"должна быть строка, выделенная :c:func:`PyMem_RawMalloc` или :c:func:"
"`PyMem_RawRealloc`, или ``NULL``, если произошла ошибка. строки, выделенной :"
"c:func:`PyMem_Malloc` или :c:func:`PyMem_Realloc` (:issue:`16742`)"

#: ../../whatsnew/3.4.rst:2510
msgid ""
":c:func:`PyThread_set_key_value` now always set the value. In Python 3.3, "
"the function did nothing if the key already exists (if the current value is "
"a non-``NULL`` pointer)."
msgstr ""
":c:func:`PyThread_set_key_value` теперь всегда устанавливает значение. В "
"Python 3.3 функция ничего не делала, если ключ уже существует (если текущее "
"значение не является указателем NULL)."

#: ../../whatsnew/3.4.rst:2514
msgid ""
"The ``f_tstate`` (thread state) field of the :c:type:`PyFrameObject` "
"structure has been removed to fix a bug: see :issue:`14432` for the "
"rationale."
msgstr ""
"Поле ``f_tstate`` (состояние потока) структуры :c:type:`PyFrameObject` было "
"удалено, чтобы исправить ошибку: обоснование см. в :issue:`14432`."

#: ../../whatsnew/3.4.rst:2519
msgid "Changed in 3.4.3"
msgstr "Изменения в версии 3.4.3"

#: ../../whatsnew/3.4.rst:2524
msgid ""
"PEP 476: Enabling certificate verification by default for stdlib http clients"
msgstr ""
"PEP 476: включение проверки сертификата по умолчанию для http-клиентов stdlib"

#: ../../whatsnew/3.4.rst:2526
msgid ""
":mod:`http.client` and modules which use it, such as :mod:`urllib.request` "
"and :mod:`xmlrpc.client`, will now verify that the server presents a "
"certificate which is signed by a CA in the platform trust store and whose "
"hostname matches the hostname being requested by default, significantly "
"improving security for many applications."
msgstr ""
":mod:`http.client` и модули, которые его используют, такие как :mod:`urllib."
"request` и :mod:`xmlrpc.client`, теперь будут проверять, предоставляет ли "
"сервер сертификат, подписанный центром сертификации в хранилище доверенных "
"сертификатов платформы и чье имя хоста соответствует имени хоста, "
"запрошенному по умолчанию, что значительно повышает безопасность многих "
"приложений."

#: ../../whatsnew/3.4.rst:2532
msgid ""
"For applications which require the old previous behavior, they can pass an "
"alternate context::"
msgstr ""
"Для приложений, которым требуется старое предыдущее поведение, они могут "
"передавать альтернативный контекст:"
