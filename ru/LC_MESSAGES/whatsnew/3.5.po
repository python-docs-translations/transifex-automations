# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# Rafael Fontenelle <rffontenelle@gmail.com>, 2024
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.11\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-01-03 15:28+0000\n"
"PO-Revision-Date: 2023-05-24 02:23+0000\n"
"Last-Translator: Rafael Fontenelle <rffontenelle@gmail.com>, 2024\n"
"Language-Team: Russian (https://app.transifex.com/python-doc/teams/5390/"
"ru/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ru\n"
"Plural-Forms: nplurals=4; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && "
"n%10<=4 && (n%100<12 || n%100>14) ? 1 : n%10==0 || (n%10>=5 && n%10<=9) || "
"(n%100>=11 && n%100<=14)? 2 : 3);\n"

#: ../../whatsnew/3.5.rst:3
msgid "What's New In Python 3.5"
msgstr "Что нового в Python 3.5"

#: ../../whatsnew/3.5.rst:0
msgid "Editors"
msgstr "Редакция"

#: ../../whatsnew/3.5.rst:5
msgid "Elvis Pranskevichus <elvis@magic.io>, Yury Selivanov <yury@magic.io>"
msgstr "Elvis Pranskevichus <elvis@magic.io>, Yury Selivanov <yury@magic.io>"

#: ../../whatsnew/3.5.rst:47
msgid ""
"This article explains the new features in Python 3.5, compared to 3.4. "
"Python 3.5 was released on September 13, 2015.  See the `changelog <https://"
"docs.python.org/3.5/whatsnew/changelog.html>`_ for a full list of changes."
msgstr ""
"В этой статье объясняются новые возможности Python 3.5 по сравнению с "
"версией 3.4. Python 3.5 был выпущен 13 сентября 2015 года.  Полный список "
"изменений см. в журнале изменений <https://docs.python.org/3.5/whatsnew/"
"changelog.html>`_."

#: ../../whatsnew/3.5.rst:54
msgid ":pep:`478` - Python 3.5 Release Schedule"
msgstr ":pep:`478` - График выпуска Python 3.5"

#: ../../whatsnew/3.5.rst:58
msgid "Summary -- Release highlights"
msgstr "Краткое описание - Основные моменты релиза"

#: ../../whatsnew/3.5.rst:60
msgid "New syntax features:"
msgstr "Новые возможности синтаксиса:"

#: ../../whatsnew/3.5.rst:62
msgid ""
":ref:`PEP 492 <whatsnew-pep-492>`, coroutines with async and await syntax."
msgstr ""
":ref:`PEP 492 <whatsnew-pep-492>`, сопрограммы с синтаксисом async и await."

#: ../../whatsnew/3.5.rst:63
msgid ""
":ref:`PEP 465 <whatsnew-pep-465>`, a new matrix multiplication operator: ``a "
"@ b``."
msgstr ""
":ref:`PEP 465 <whatsnew-pep-465>`, новый оператор матричного умножения: ``a "
"@ b``."

#: ../../whatsnew/3.5.rst:64
msgid ""
":ref:`PEP 448 <whatsnew-pep-448>`, additional unpacking generalizations."
msgstr ""
":ref:`PEP 448 <whatsnew-pep-448>`, дополнительные обобщения по распаковке."

#: ../../whatsnew/3.5.rst:67
msgid "New library modules:"
msgstr "Новые библиотечные модули:"

#: ../../whatsnew/3.5.rst:69
msgid ":mod:`typing`: :ref:`PEP 484 -- Type Hints <whatsnew-pep-484>`."
msgstr ":mod:`typing`: :ref:`PEP 484 -- Подсказки по типу <whatsnew-pep-484>`."

#: ../../whatsnew/3.5.rst:70
msgid ""
":mod:`zipapp`: :ref:`PEP 441 Improving Python ZIP Application Support "
"<whatsnew-zipapp>`."
msgstr ""
":mod:`zipapp`: :ref:`PEP 441 Улучшение поддержки приложений Python ZIP "
"<whatsnew-zipapp>`."

#: ../../whatsnew/3.5.rst:74
msgid "New built-in features:"
msgstr "Новые встроенные функции:"

#: ../../whatsnew/3.5.rst:76
msgid ""
"``bytes % args``, ``bytearray % args``: :ref:`PEP 461 <whatsnew-pep-461>` -- "
"Adding ``%`` formatting to bytes and bytearray."
msgstr ""
"``bytes % args``, ``bytearray % args``: :ref:`PEP 461 <whatsnew-pep-461>` -- "
"Добавление форматирования ``%`` к байтам и bytearray."

#: ../../whatsnew/3.5.rst:79
msgid ""
"New :meth:`bytes.hex`, :meth:`bytearray.hex` and :meth:`memoryview.hex` "
"methods. (Contributed by Arnon Yaari in :issue:`9951`.)"
msgstr ""
"Новые методы :meth:`bytes.hex`, :meth:`bytearray.hex` и :meth:`memoryview."
"hex`. (Предоставлено Арноном Яари в :issue:`9951`.)"

#: ../../whatsnew/3.5.rst:82
msgid ""
":class:`memoryview` now supports tuple indexing (including multi-"
"dimensional). (Contributed by Antoine Pitrou in :issue:`23632`.)"
msgstr ""
":class:`memoryview` теперь поддерживает индексацию кортежей (в том числе "
"многомерную). (Предоставлено Антуаном Питру в :issue:`23632`.)"

#: ../../whatsnew/3.5.rst:85
msgid ""
"Generators have a new ``gi_yieldfrom`` attribute, which returns the object "
"being iterated by ``yield from`` expressions. (Contributed by Benno Leslie "
"and Yury Selivanov in :issue:`24450`.)"
msgstr ""
"Генераторы имеют новый атрибут ``gi_yieldfrom``, который возвращает объект, "
"который итерируется с помощью выражений ``yield from``. (Предоставлено Бенно "
"Лесли и Юрием Селивановым в :issue:`24450`.)"

#: ../../whatsnew/3.5.rst:89
msgid ""
"A new :exc:`RecursionError` exception is now raised when maximum recursion "
"depth is reached.  (Contributed by Georg Brandl in :issue:`19235`.)"
msgstr ""
"Новое исключение :exc:`RecursionError` теперь вызывается при достижении "
"максимальной глубины рекурсии. (Предоставлено Георгом Брандлом в :issue:"
"`19235`.)"

#: ../../whatsnew/3.5.rst:94
msgid "CPython implementation improvements:"
msgstr "Улучшения в реализации CPython:"

#: ../../whatsnew/3.5.rst:96
msgid ""
"When the ``LC_TYPE`` locale is the POSIX locale (``C`` locale), :py:data:"
"`sys.stdin` and :py:data:`sys.stdout` now use the ``surrogateescape`` error "
"handler, instead of the ``strict`` error handler. (Contributed by Victor "
"Stinner in :issue:`19977`.)"
msgstr ""
"Если локаль ``LC_TYPE`` является локалью POSIX (локаль ``C``), :py:data:`sys."
"stdin` и :py:data:`sys.stdout` теперь используют ``surrogateescape`` "
"обработчик ошибок вместо ``строгого`` обработчика ошибок. (Предоставлено "
"Виктором Стиннером в :issue:`19977`.)"

#: ../../whatsnew/3.5.rst:101
msgid ""
"``.pyo`` files are no longer used and have been replaced by a more flexible "
"scheme that includes the optimization level explicitly in ``.pyc`` name. "
"(See :ref:`PEP 488 overview <whatsnew-pep-488>`.)"
msgstr ""
"Файлы ``.pyo`` больше не используются и были заменены более гибкой схемой, "
"которая явно включает уровень оптимизации в имя ``.pyc``. (См. :ref:`Обзор "
"PEP 488 <whatsnew-pep-488>`.)"

#: ../../whatsnew/3.5.rst:105
msgid ""
"Builtin and extension modules are now initialized in a multi-phase process, "
"which is similar to how Python modules are loaded. (See :ref:`PEP 489 "
"overview <whatsnew-pep-489>`.)"
msgstr ""
"Встроенные модули и модули расширения теперь инициализируются в многоэтапный "
"процесс, аналогичный загрузке модулей Python. (См. :ref:`Обзор PEP 489 "
"<whatsnew-pep-489>`.)"

#: ../../whatsnew/3.5.rst:110
msgid "Significant improvements in the standard library:"
msgstr "Значительные улучшения в стандартной библиотеке:"

#: ../../whatsnew/3.5.rst:112
msgid ""
":class:`collections.OrderedDict` is now :ref:`implemented in C <whatsnew-"
"ordereddict>`, which makes it 4 to 100 times faster."
msgstr ""
":class:`collections.OrderedDict` теперь :ref:`реализован на C <whatsnew-"
"ordereddict>`, что делает его в 4–100 раз быстрее."

#: ../../whatsnew/3.5.rst:116
msgid ""
"The :mod:`ssl` module gained :ref:`support for Memory BIO <whatsnew-"
"sslmemorybio>`, which decouples SSL protocol handling from network IO."
msgstr ""
"Модуль :mod:`ssl` получил :ref:`поддержку Memory BIO <whatsnew-"
"sslmemorybio>`, которая отделяет обработку протокола SSL от сетевого ввода-"
"вывода."

#: ../../whatsnew/3.5.rst:120
msgid ""
"The new :func:`os.scandir` function provides a :ref:`better and "
"significantly faster way <whatsnew-pep-471>` of directory traversal."
msgstr ""
"Новая функция :func:`os.scandir` обеспечивает :ref:`лучший и значительно "
"более быстрый способ <whatsnew-pep-471>` обхода каталогов."

#: ../../whatsnew/3.5.rst:124
msgid ""
":func:`functools.lru_cache` has been mostly :ref:`reimplemented in C "
"<whatsnew-lrucache>`, yielding much better performance."
msgstr ""
":func:`functools.lru_cache` в основном :ref:`переписан в C <whatsnew-"
"lrucache>`, что обеспечивает гораздо лучшую производительность."

#: ../../whatsnew/3.5.rst:128
msgid ""
"The new :func:`subprocess.run` function provides a :ref:`streamlined way to "
"run subprocesses <whatsnew-subprocess>`."
msgstr ""
"Новая функция :func:`subprocess.run` обеспечивает :ref:`упрощенный способ "
"запуска подпроцессов <whatsnew-subprocess>`."

#: ../../whatsnew/3.5.rst:131
msgid ""
"The :mod:`traceback` module has been significantly :ref:`enhanced <whatsnew-"
"traceback>` for improved performance and developer convenience."
msgstr ""
"Модуль :mod:`traceback` был значительно :ref:`улучшен <whatsnew-traceback>` "
"для повышения производительности и удобства разработчиков."

#: ../../whatsnew/3.5.rst:136
msgid "Security improvements:"
msgstr "Улучшения безопасности:"

#: ../../whatsnew/3.5.rst:138
msgid ""
"SSLv3 is now disabled throughout the standard library. It can still be "
"enabled by instantiating a :class:`ssl.SSLContext` manually.  (See :issue:"
"`22638` for more details; this change was backported to CPython 3.4 and 2.7.)"
msgstr ""
"SSLv3 теперь отключен во всей стандартной библиотеке. Его все еще можно "
"включить, создав экземпляр :class:`ssl.SSLContext` вручную. (Подробнее см. "
"в :issue:`22638`; это изменение было перенесено в CPython 3.4 и 2.7.)"

#: ../../whatsnew/3.5.rst:143
msgid ""
"HTTP cookie parsing is now stricter, in order to protect against potential "
"injection attacks. (Contributed by Antoine Pitrou in :issue:`22796`.)"
msgstr ""
"Анализ файлов cookie HTTP теперь стал более строгим, чтобы защититься от "
"потенциальных атак путем внедрения. (Предоставлено Антуаном Питру в :issue:"
"`22796`.)"

#: ../../whatsnew/3.5.rst:148
msgid "Windows improvements:"
msgstr "Улучшения Windows:"

#: ../../whatsnew/3.5.rst:150
msgid ""
"A new installer for Windows has replaced the old MSI. See :ref:`using-on-"
"windows` for more information."
msgstr ""
"Новый установщик для Windows заменил старый MSI. Дополнительную информацию "
"см. в разделе :ref:`using-on-windows`."

#: ../../whatsnew/3.5.rst:153
msgid ""
"Windows builds now use Microsoft Visual C++ 14.0, and extension modules "
"should use the same."
msgstr ""
"Сборки Windows теперь используют Microsoft Visual C++ 14.0, и модули "
"расширения должны использовать то же самое."

#: ../../whatsnew/3.5.rst:157
msgid ""
"Please read on for a comprehensive list of user-facing changes, including "
"many other smaller improvements, CPython optimizations, deprecations, and "
"potential porting issues."
msgstr ""
"Пожалуйста, прочтите полный список изменений, с которыми сталкиваются "
"пользователи, включая множество других небольших улучшений, оптимизацию "
"CPython, прекращение поддержки и потенциальные проблемы с портированием."

#: ../../whatsnew/3.5.rst:163
msgid "New Features"
msgstr "Новые особенности"

#: ../../whatsnew/3.5.rst:168
msgid "PEP 492 - Coroutines with async and await syntax"
msgstr "PEP 492 — сопрограммы с синтаксисом async и await"

#: ../../whatsnew/3.5.rst:170
msgid ""
":pep:`492` greatly improves support for asynchronous programming in Python "
"by adding :term:`awaitable objects <awaitable>`, :term:`coroutine functions "
"<coroutine function>`, :term:`asynchronous iteration <asynchronous "
"iterable>`, and :term:`asynchronous context managers <asynchronous context "
"manager>`."
msgstr ""
":pep:`492` значительно улучшает поддержку асинхронного программирования на "
"Python, добавляя :term:`awaitable объекты <awaitable>`, :term:`coroutine "
"function <coroutine function>`, :term:`asynchronous iteration <asynchronous "
"iterable>` и :term:`асинхронные контекстные менеджеры <асинхронный "
"контекстный менеджер>`."

#: ../../whatsnew/3.5.rst:176
msgid ""
"Coroutine functions are declared using the new :keyword:`async def` syntax::"
msgstr ""
"Функции сопрограммы объявляются с использованием нового синтаксиса :keyword:"
"`async def`::"

#: ../../whatsnew/3.5.rst:181
msgid ""
"Inside a coroutine function, the new :keyword:`await` expression can be used "
"to suspend coroutine execution until the result is available.  Any object "
"can be *awaited*, as long as it implements the :term:`awaitable` protocol by "
"defining the :meth:`__await__` method."
msgstr ""
"Внутри функции сопрограммы можно использовать новое выражение :keyword:"
"`await` для приостановки выполнения сопрограммы до тех пор, пока не будет "
"доступен результат. Любой объект может быть *ожидаемым*, если он реализует "
"протокол :term:`awaitable` путем определения метода :meth:`__await__`."

#: ../../whatsnew/3.5.rst:186
msgid ""
"PEP 492 also adds :keyword:`async for` statement for convenient iteration "
"over asynchronous iterables."
msgstr ""
"PEP 492 также добавляет оператор :keyword:`async for` для удобной итерации "
"по асинхронным итерациям."

#: ../../whatsnew/3.5.rst:189
msgid "An example of a rudimentary HTTP client written using the new syntax::"
msgstr ""
"Пример элементарного HTTP-клиента, написанного с использованием нового "
"синтаксиса:"

#: ../../whatsnew/3.5.rst:215
msgid ""
"Similarly to asynchronous iteration, there is a new syntax for asynchronous "
"context managers.  The following script::"
msgstr ""
"Как и в случае с асинхронной итерацией, для асинхронных менеджеров контекста "
"существует новый синтаксис. Следующий скрипт::"

#: ../../whatsnew/3.5.rst:235
msgid "will output::"
msgstr "выведет::"

#: ../../whatsnew/3.5.rst:244
msgid ""
"Note that both :keyword:`async for` and :keyword:`async with` can only be "
"used inside a coroutine function declared with :keyword:`async def`."
msgstr ""
"Обратите внимание, что оба :keyword:`async for` и :keyword:`async with` "
"могут использоваться только внутри функции сопрограммы, объявленной с "
"помощью :keyword:`async def`."

#: ../../whatsnew/3.5.rst:247
msgid ""
"Coroutine functions are intended to be run inside a compatible event loop, "
"such as the :ref:`asyncio loop <asyncio-event-loop>`."
msgstr ""
"Функции сопрограммы предназначены для запуска внутри совместимого цикла "
"событий, такого как цикл asyncio <asyncio-event-loop>."

#: ../../whatsnew/3.5.rst:253
msgid ""
"Starting with CPython 3.5.2, ``__aiter__`` can directly return :term:"
"`asynchronous iterators <asynchronous iterator>`.  Returning an :term:"
"`awaitable` object will result in a :exc:`PendingDeprecationWarning`."
msgstr ""
"Начиная с CPython 3.5.2, ``__aiter__`` может напрямую возвращать :term:"
"`асинхронные итераторы <asynchronous iterator>`. Возврат объекта :term:"
"`awaitable` приведет к появлению :exc:`PendingDeprecationWarning`."

#: ../../whatsnew/3.5.rst:259
msgid "See more details in the :ref:`async-iterators` documentation section."
msgstr "Подробности смотрите в разделе документации async-iterators."

#: ../../whatsnew/3.5.rst:265
msgid ":pep:`492` -- Coroutines with async and await syntax"
msgstr ":pep:`492` -- Сопрограммы с синтаксисом async и await"

#: ../../whatsnew/3.5.rst:266
msgid "PEP written and implemented by Yury Selivanov."
msgstr "PEP written and implemented by Yury Selivanov."

#: ../../whatsnew/3.5.rst:272
msgid "PEP 465 - A dedicated infix operator for matrix multiplication"
msgstr "PEP 465 — специальный инфиксный оператор для умножения матриц."

#: ../../whatsnew/3.5.rst:274
msgid ""
":pep:`465` adds the ``@`` infix operator for matrix multiplication. "
"Currently, no builtin Python types implement the new operator, however, it "
"can be implemented by defining :meth:`__matmul__`, :meth:`__rmatmul__`, and :"
"meth:`__imatmul__` for regular, reflected, and in-place matrix "
"multiplication.  The semantics of these methods is similar to that of "
"methods defining other infix arithmetic operators."
msgstr ""
":pep:`465` добавляет инфиксный оператор ``@`` для умножения матриц. В "
"настоящее время ни один из встроенных типов Python не реализует новый "
"оператор, однако его можно реализовать, определив :meth:`__matmul__`, :meth:"
"`__rmatmul__` и :meth:`__imatmul__` для обычной, отраженной матрицы и "
"матрицы на месте. умножение. Семантика этих методов аналогична семантике "
"методов, определяющих другие инфиксные арифметические операторы."

#: ../../whatsnew/3.5.rst:281
msgid ""
"Matrix multiplication is a notably common operation in many fields of "
"mathematics, science, engineering, and the addition of ``@`` allows writing "
"cleaner code::"
msgstr ""
"Умножение матриц — весьма распространенная операция во многих областях "
"математики, науки, техники, а добавление @ позволяет писать более чистый код:"

#: ../../whatsnew/3.5.rst:287
msgid "instead of::"
msgstr "вместо::"

#: ../../whatsnew/3.5.rst:292
msgid "NumPy 1.10 has support for the new operator::"
msgstr "В NumPy 1.10 есть поддержка нового оператора::"

#: ../../whatsnew/3.5.rst:312
msgid ":pep:`465` -- A dedicated infix operator for matrix multiplication"
msgstr ":pep:`465` -- Специальный инфиксный оператор для умножения матриц."

#: ../../whatsnew/3.5.rst:313
msgid "PEP written by Nathaniel J. Smith; implemented by Benjamin Peterson."
msgstr ""
"PEP, написанный Натаниэлем Дж. Смитом; реализован Бенджамином Петерсоном."

#: ../../whatsnew/3.5.rst:319
msgid "PEP 448 - Additional Unpacking Generalizations"
msgstr "PEP 448 — Дополнительные обобщения распаковки"

#: ../../whatsnew/3.5.rst:321
msgid ""
":pep:`448` extends the allowed uses of the ``*`` iterable unpacking operator "
"and ``**`` dictionary unpacking operator.  It is now possible to use an "
"arbitrary number of unpackings in :ref:`function calls <calls>`::"
msgstr ""
":pep:`448` расширяет возможности использования итерируемого оператора "
"распаковки ``*`` и оператора распаковки словаря ``**``. Теперь можно "
"использовать произвольное количество распаковок в :ref:`вызовах функций "
"<calls>`::"

#: ../../whatsnew/3.5.rst:335
msgid ""
"Similarly, tuple, list, set, and dictionary displays allow multiple "
"unpackings (see :ref:`exprlists` and :ref:`dict`)::"
msgstr ""
"Аналогично, отображение кортежа, списка, набора и словаря допускает "
"множественную распаковку (см. :ref:`exprlists` и :ref:`dict`)::"

#: ../../whatsnew/3.5.rst:353
msgid ":pep:`448` -- Additional Unpacking Generalizations"
msgstr ":pep:`448` -- Дополнительные обобщения распаковки"

#: ../../whatsnew/3.5.rst:353
msgid ""
"PEP written by Joshua Landau; implemented by Neil Girdhar, Thomas Wouters, "
"and Joshua Landau."
msgstr ""
"PEP, написанный Джошуа Ландау; реализовано Нилом Гирдхаром, Томасом "
"Воутерсом и Джошуа Ландау."

#: ../../whatsnew/3.5.rst:360
msgid "PEP 461 - percent formatting support for bytes and bytearray"
msgstr ""
"PEP 461 — поддержка процентного форматирования байтов и байтовых массивов."

#: ../../whatsnew/3.5.rst:362
msgid ""
":pep:`461` adds support for the ``%`` :ref:`interpolation operator <bytes-"
"formatting>` to :class:`bytes` and :class:`bytearray`."
msgstr ""
":pep:`461` добавляет поддержку оператора интерполяции ``%`` :ref:`<bytes-"
"formatting>` в :class:`bytes` и :class:`bytearray`."

#: ../../whatsnew/3.5.rst:366
msgid ""
"While interpolation is usually thought of as a string operation, there are "
"cases where interpolation on ``bytes`` or ``bytearrays`` makes sense, and "
"the work needed to make up for this missing functionality detracts from the "
"overall readability of the code.  This issue is particularly important when "
"dealing with wire format protocols, which are often a mixture of binary and "
"ASCII compatible text."
msgstr ""
"Хотя интерполяцию обычно рассматривают как строковую операцию, бывают "
"случаи, когда интерполяция на ``байтах`` или ``байтовых массивах`` имеет "
"смысл, и работа, необходимая для восполнения этой недостающей "
"функциональности, ухудшает общую читаемость кода. . Эта проблема особенно "
"важна при работе с протоколами проводного формата, которые часто "
"представляют собой смесь двоичного и ASCII-совместимого текста."

#: ../../whatsnew/3.5.rst:373 ../../whatsnew/3.5.rst:1848
msgid "Examples::"
msgstr "Примеры::"

#: ../../whatsnew/3.5.rst:381
msgid ""
"Unicode is not allowed for ``%b``, but it is accepted by ``%a`` (equivalent "
"of ``repr(obj).encode('ascii', 'backslashreplace')``)::"
msgstr ""
"Юникод не поддерживается для ``%b``, но он принимается `` %а `` (эквивалент "
"``repr(obj).encode('ascii', 'backslashreplace')``)::"

#: ../../whatsnew/3.5.rst:392
msgid ""
"Note that ``%s`` and ``%r`` conversion types, although supported, should "
"only be used in codebases that need compatibility with Python 2."
msgstr ""
"Обратите внимание, что `` %s Типы преобразования `` и ``%r``, хотя и "
"поддерживаются, должны использоваться только в тех базах кода, которым "
"необходима совместимость с Python 2."

#: ../../whatsnew/3.5.rst:398
msgid ":pep:`461` -- Adding % formatting to bytes and bytearray"
msgstr ":pep:`461` -- Добавление % форматирования к байтам и байтаррайю"

#: ../../whatsnew/3.5.rst:398
msgid ""
"PEP written by Ethan Furman; implemented by Neil Schemenauer and Ethan "
"Furman."
msgstr ""
"PEP, написанный Итаном Фурманом; реализовано Нилом Шеменауэром и Итаном "
"Фурманом."

#: ../../whatsnew/3.5.rst:405
msgid "PEP 484 - Type Hints"
msgstr "PEP 484 — Подсказки по типам"

#: ../../whatsnew/3.5.rst:407
msgid ""
"Function annotation syntax has been a Python feature since version 3.0 (:pep:"
"`3107`), however the semantics of annotations has been left undefined."
msgstr ""
"Синтаксис аннотаций функций является функцией Python начиная с версии 3.0 (:"
"pep:`3107`), однако семантика аннотаций осталась неопределенной."

#: ../../whatsnew/3.5.rst:410
msgid ""
"Experience has shown that the majority of function annotation uses were to "
"provide type hints to function parameters and return values.  It became "
"evident that it would be beneficial for Python users, if the standard "
"library included the base definitions and tools for type annotations."
msgstr ""
"Опыт показал, что большинство аннотаций функций используются для "
"предоставления подсказок типа для параметров функции и возвращаемых "
"значений. Стало очевидно, что для пользователей Python было бы полезно, если "
"бы стандартная библиотека включала базовые определения и инструменты для "
"аннотаций типов."

#: ../../whatsnew/3.5.rst:415
msgid ""
":pep:`484` introduces a :term:`provisional module <provisional API>` to "
"provide these standard definitions and tools, along with some conventions "
"for situations where annotations are not available."
msgstr ""
":pep:`484` представляет :term:`предварительный модуль <предварительный API>` "
"для предоставления этих стандартных определений и инструментов, а также "
"некоторых соглашений для ситуаций, когда аннотации недоступны."

#: ../../whatsnew/3.5.rst:419
msgid ""
"For example, here is a simple function whose argument and return type are "
"declared in the annotations::"
msgstr ""
"Например, вот простая функция, аргумент и тип возвращаемого значения которой "
"объявлены в аннотациях:"

#: ../../whatsnew/3.5.rst:425
msgid ""
"While these annotations are available at runtime through the usual :attr:"
"`__annotations__` attribute, *no automatic type checking happens at "
"runtime*.  Instead, it is assumed that a separate off-line type checker (e."
"g. `mypy <https://mypy-lang.org>`_) will be used for on-demand source code "
"analysis."
msgstr ""

#: ../../whatsnew/3.5.rst:431
msgid ""
"The type system supports unions, generic types, and a special type named :"
"class:`~typing.Any` which is consistent with (i.e. assignable to and from) "
"all types."
msgstr ""
"Система типов поддерживает объединения, универсальные типы и специальный тип "
"с именем :class:`~typing.Any`, который совместим со всеми типами (т. е. "
"может быть присвоен и из них)."

#: ../../whatsnew/3.5.rst:437
msgid ":mod:`typing` module documentation"
msgstr "Документация по модулю :mod:`typing`"

#: ../../whatsnew/3.5.rst:439
msgid ":pep:`484` -- Type Hints"
msgstr ":pep:`484` -- Подсказки по типам"

#: ../../whatsnew/3.5.rst:439
msgid ""
"PEP written by Guido van Rossum, Jukka Lehtosalo, and Łukasz Langa; "
"implemented by Guido van Rossum."
msgstr ""
"PEP, написанный Гвидо ван Россумом, Юккой Лехтосало и Лукашом Лангой; "
"реализован Гвидо ван Россумом."

#: ../../whatsnew/3.5.rst:441
msgid ":pep:`483` -- The Theory of Type Hints"
msgstr ":pep:`483` -- Теория подсказок типов"

#: ../../whatsnew/3.5.rst:442
msgid "PEP written by Guido van Rossum"
msgstr "PEP, автор: Гвидо ван Россум"

#: ../../whatsnew/3.5.rst:448
msgid ""
"PEP 471 - os.scandir() function -- a better and faster directory iterator"
msgstr "PEP 471 — функция os.scandir() — лучший и быстрый итератор каталогов"

#: ../../whatsnew/3.5.rst:450
msgid ""
":pep:`471` adds a new directory iteration function, :func:`os.scandir`, to "
"the standard library.  Additionally, :func:`os.walk` is now implemented "
"using ``scandir``, which makes it 3 to 5 times faster on POSIX systems and 7 "
"to 20 times faster on Windows systems.  This is largely achieved by greatly "
"reducing the number of calls to :func:`os.stat` required to walk a directory "
"tree."
msgstr ""
":pep:`471` добавляет в стандартную библиотеку новую функцию итерации "
"каталогов, :func:`os.scandir`. Кроме того, :func:`os.walk` теперь реализован "
"с использованием ``scandir``, что делает его в 3–5 раз быстрее в системах "
"POSIX и в 7–20 раз быстрее в системах Windows. Во многом это достигается за "
"счет значительного сокращения количества вызовов :func:`os.stat`, "
"необходимых для обхода дерева каталогов."

#: ../../whatsnew/3.5.rst:457
msgid ""
"Additionally, ``scandir`` returns an iterator, as opposed to returning a "
"list of file names, which improves memory efficiency when iterating over "
"very large directories."
msgstr ""
"Кроме того, scandir возвращает итератор, а не список имен файлов, что "
"повышает эффективность использования памяти при переборе очень больших "
"каталогов."

#: ../../whatsnew/3.5.rst:461
msgid ""
"The following example shows a simple use of :func:`os.scandir` to display "
"all the files (excluding directories) in the given *path* that don't start "
"with ``'.'``. The :meth:`entry.is_file() <os.DirEntry.is_file>` call will "
"generally not make an additional system call::"
msgstr ""
"В следующем примере показано простое использование :func:`os.scandir` для "
"отображения всех файлов (за исключением каталогов) по заданному *пути*, "
"которые не начинаются с ``'.'``. Вызов :meth:`entry.is_file() <os.DirEntry."
"is_file>` обычно не выполняет дополнительный системный вызов::"

#: ../../whatsnew/3.5.rst:472
msgid ""
":pep:`471` -- os.scandir() function -- a better and faster directory iterator"
msgstr ""
":pep:`471` -- функция os.scandir() -- лучший и быстрый итератор каталогов"

#: ../../whatsnew/3.5.rst:473
msgid ""
"PEP written and implemented by Ben Hoyt with the help of Victor Stinner."
msgstr "PEP написан и реализован Беном Хойтом при помощи Виктора Стиннера."

#: ../../whatsnew/3.5.rst:479
msgid "PEP 475: Retry system calls failing with EINTR"
msgstr "PEP 475: повторение системных вызовов завершилось неудачей с EINTR"

#: ../../whatsnew/3.5.rst:481
msgid ""
"An :py:const:`errno.EINTR` error code is returned whenever a system call, "
"that is waiting for I/O, is interrupted by a signal.  Previously, Python "
"would raise :exc:`InterruptedError` in such cases.  This meant that, when "
"writing a Python application, the developer had two choices:"
msgstr ""
"Код ошибки :py:const:`errno.EINTR` возвращается всякий раз, когда системный "
"вызов, ожидающий ввода-вывода, прерывается сигналом. Раньше Python в таких "
"случаях вызывал :exc:`InterruptedError`. Это означало, что при написании "
"приложения Python у разработчика было два варианта:"

#: ../../whatsnew/3.5.rst:486
msgid "Ignore the ``InterruptedError``."
msgstr "Не обращайте внимания на ``InterruptedError``."

#: ../../whatsnew/3.5.rst:487
msgid ""
"Handle the ``InterruptedError`` and attempt to restart the interrupted "
"system call at every call site."
msgstr ""
"Обработайте InterruptedError и попытайтесь перезапустить прерванный "
"системный вызов на каждом месте вызова."

#: ../../whatsnew/3.5.rst:490
msgid ""
"The first option makes an application fail intermittently. The second option "
"adds a large amount of boilerplate that makes the code nearly unreadable.  "
"Compare::"
msgstr ""
"Первый вариант приводит к периодическому сбою приложения. Второй вариант "
"добавляет большое количество шаблонного кода, который делает код практически "
"нечитаемым. Сравнивать::"

#: ../../whatsnew/3.5.rst:496
msgid "and::"
msgstr "и::"

#: ../../whatsnew/3.5.rst:505
msgid ""
":pep:`475` implements automatic retry of system calls on ``EINTR``.  This "
"removes the burden of dealing with ``EINTR`` or :exc:`InterruptedError` in "
"user code in most situations and makes Python programs, including the "
"standard library, more robust.  Note that the system call is only retried if "
"the signal handler does not raise an exception."
msgstr ""
":pep:`475` реализует автоматический повтор системных вызовов ``EINTR``. Это "
"устраняет необходимость работы с ``EINTR`` или :exc:`InterruptedError` в "
"пользовательском коде в большинстве ситуаций и делает программы Python, "
"включая стандартную библиотеку, более надежными. Обратите внимание, что "
"системный вызов повторяется только в том случае, если обработчик сигнала не "
"вызывает исключение."

#: ../../whatsnew/3.5.rst:512
msgid ""
"Below is a list of functions which are now retried when interrupted by a "
"signal:"
msgstr ""
"Ниже приведен список функций, которые теперь повторяются при прерывании "
"сигналом:"

#: ../../whatsnew/3.5.rst:515
msgid ":func:`open` and :func:`io.open`;"
msgstr ":func:`open` и :func:`io.open`;"

#: ../../whatsnew/3.5.rst:517
msgid "functions of the :mod:`faulthandler` module;"
msgstr "функции модуля :mod:`faulthandler`;"

#: ../../whatsnew/3.5.rst:519
msgid ""
":mod:`os` functions: :func:`~os.fchdir`, :func:`~os.fchmod`, :func:`~os."
"fchown`, :func:`~os.fdatasync`, :func:`~os.fstat`, :func:`~os.fstatvfs`, :"
"func:`~os.fsync`, :func:`~os.ftruncate`, :func:`~os.mkfifo`, :func:`~os."
"mknod`, :func:`~os.open`, :func:`~os.posix_fadvise`, :func:`~os."
"posix_fallocate`, :func:`~os.pread`, :func:`~os.pwrite`, :func:`~os.read`, :"
"func:`~os.readv`, :func:`~os.sendfile`, :func:`~os.wait3`, :func:`~os."
"wait4`, :func:`~os.wait`, :func:`~os.waitid`, :func:`~os.waitpid`, :func:"
"`~os.write`, :func:`~os.writev`;"
msgstr ""
":mod:`os` функции: :func:`~os.fchdir`, :func:`~os.fchmod`, :func:`~os."
"fchown`, :func:`~os.fdatasync`, :func :`~os.fstat`, :func:`~os.fstatvfs`, :"
"func:`~os.fsync`, :func:`~os.ftruncate`, :func:`~os.mkfifo`, :func :`~os."
"mknod`, :func:`~os.open`, :func:`~os.posix_fadvise`, :func:`~os."
"posix_fallocate`, :func:`~os.pread`, :func :`~os.pwrite`, :func:`~os.read`, :"
"func:`~os.readv`, :func:`~os.sendfile`, :func:`~os.wait3`, :func :`~os."
"wait4`, :func:`~os.wait`, :func:`~os.waitid`, :func:`~os.waitpid`, :func:"
"`~os.write`, :func :`~os.writev`;"

#: ../../whatsnew/3.5.rst:529
msgid ""
"special cases: :func:`os.close` and :func:`os.dup2` now ignore :py:const:"
"`~errno.EINTR` errors; the syscall is not retried (see the PEP for the "
"rationale);"
msgstr ""
"особые случаи: :func:`os.close` и :func:`os.dup2` теперь игнорируют ошибки :"
"py:const:`~errno.EINTR`; системный вызов не повторяется (обоснование см. в "
"PEP);"

#: ../../whatsnew/3.5.rst:533
msgid ""
":mod:`select` functions: :func:`devpoll.poll() <select.devpoll.poll>`, :func:"
"`epoll.poll() <select.epoll.poll>`, :func:`kqueue.control() <select.kqueue."
"control>`, :func:`poll.poll() <select.poll.poll>`, :func:`~select.select`;"
msgstr ""
":mod:`select` функции: :func:`devpoll.poll() <select.devpoll.poll>`, :func:"
"`epoll.poll() <select.epoll.poll>`, :func:`kqueue. control() <select.kqueue."
"control>`, :func:`poll.poll() <select.poll.poll>`, :func:`~select.select`;"

#: ../../whatsnew/3.5.rst:538
msgid ""
"methods of the :class:`~socket.socket` class: :meth:`~socket.socket."
"accept`, :meth:`~socket.socket.connect` (except for non-blocking sockets), :"
"meth:`~socket.socket.recv`, :meth:`~socket.socket.recvfrom`, :meth:`~socket."
"socket.recvmsg`, :meth:`~socket.socket.send`, :meth:`~socket.socket."
"sendall`, :meth:`~socket.socket.sendmsg`, :meth:`~socket.socket.sendto`;"
msgstr ""
"методы класса :class:`~socket.socket`: :meth:`~socket.socket.accept`, :meth:"
"`~socket.socket.connect` (кроме неблокирующих сокетов), :meth:` ~socket."
"socket.recv`, :meth:`~socket.socket.recvfrom`, :meth:`~socket.socket."
"recvmsg`, :meth:`~socket.socket.send`, :meth:`~socket .socket.sendall`, :"
"meth:`~socket.socket.sendmsg`, :meth:`~socket.socket.sendto`;"

#: ../../whatsnew/3.5.rst:545
msgid ":func:`signal.sigtimedwait` and :func:`signal.sigwaitinfo`;"
msgstr ":func:`signal.sigtimedwait` и :func:`signal.sigwaitinfo`;"

#: ../../whatsnew/3.5.rst:547
msgid ":func:`time.sleep`."
msgstr ":func:`time.sleep`."

#: ../../whatsnew/3.5.rst:552
msgid ":pep:`475` -- Retry system calls failing with EINTR"
msgstr ":pep:`475` -- Повторить неудачные системные вызовы с EINTR"

#: ../../whatsnew/3.5.rst:552
msgid ""
"PEP and implementation written by Charles-François Natali and Victor "
"Stinner, with the help of Antoine Pitrou (the French connection)."
msgstr ""
"PEP и реализация написаны Шарлем-Франсуа Натали и Виктором Стиннером при "
"помощи Антуана Питру (связь с Францией)."

#: ../../whatsnew/3.5.rst:559
msgid "PEP 479: Change StopIteration handling inside generators"
msgstr "PEP 479: изменение обработки StopIteration внутри генераторов"

#: ../../whatsnew/3.5.rst:561
msgid ""
"The interaction of generators and :exc:`StopIteration` in Python 3.4 and "
"earlier was sometimes surprising, and could conceal obscure bugs.  "
"Previously, ``StopIteration`` raised accidentally inside a generator "
"function was interpreted as the end of the iteration by the loop construct "
"driving the generator."
msgstr ""
"Взаимодействие генераторов и :exc:`StopIteration` в Python 3.4 и более "
"ранних версиях иногда вызывало удивление и могло скрывать неясные ошибки. "
"Раньше StopIteration, случайно вызываемый внутри функции-генератора, "
"интерпретировался как конец итерации конструкцией цикла, управляющей "
"генератором."

#: ../../whatsnew/3.5.rst:567
msgid ""
":pep:`479` changes the behavior of generators: when a ``StopIteration`` "
"exception is raised inside a generator, it is replaced with a :exc:"
"`RuntimeError` before it exits the generator frame.  The main goal of this "
"change is to ease debugging in the situation where an unguarded :func:`next` "
"call raises ``StopIteration`` and causes the iteration controlled by the "
"generator to terminate silently. This is particularly pernicious in "
"combination with the ``yield from`` construct."
msgstr ""
":pep:`479` изменяет поведение генераторов: когда внутри генератора возникает "
"исключение ``StopIteration``, оно заменяется на :exc:`RuntimeError` перед "
"выходом из кадра генератора. Основная цель этого изменения — облегчить "
"отладку в ситуации, когда незащищенный вызов :func:`next` вызывает "
"``StopIteration`` и вызывает молчаливое завершение итерации, управляемой "
"генератором. Это особенно губительно в сочетании с конструкцией «доходность "
"от»."

#: ../../whatsnew/3.5.rst:575
msgid ""
"This is a backwards incompatible change, so to enable the new behavior, a :"
"term:`__future__` import is necessary::"
msgstr ""
"Это обратно несовместимое изменение, поэтому для включения нового поведения "
"необходим импорт :term:`__future__`::"

#: ../../whatsnew/3.5.rst:595
msgid ""
"Without a ``__future__`` import, a :exc:`PendingDeprecationWarning` will be "
"raised whenever a :exc:`StopIteration` exception is raised inside a "
"generator."
msgstr ""
"Без импорта ``__future__`` :exc:`PendingDeprecationWarning` будет вызываться "
"всякий раз, когда внутри генератора возникает исключение :exc:"
"`StopIteration`."

#: ../../whatsnew/3.5.rst:601
msgid ":pep:`479` -- Change StopIteration handling inside generators"
msgstr ":pep:`479` -- Изменить обработку StopIteration внутри генераторов."

#: ../../whatsnew/3.5.rst:601
msgid ""
"PEP written by Chris Angelico and Guido van Rossum. Implemented by Chris "
"Angelico, Yury Selivanov and Nick Coghlan."
msgstr ""
"PEP, написанный Крисом Анджелико и Гвидо ван Россумом. Реализовано Крисом "
"Анжелико, Юрием Селивановым и Ником Когланом."

#: ../../whatsnew/3.5.rst:608
msgid "PEP 485: A function for testing approximate equality"
msgstr "PEP 485: функция для проверки приблизительного равенства."

#: ../../whatsnew/3.5.rst:610
msgid ""
":pep:`485` adds the :func:`math.isclose` and :func:`cmath.isclose` functions "
"which tell whether two values are approximately equal or \"close\" to each "
"other.  Whether or not two values are considered close is determined "
"according to given absolute and relative tolerances. Relative tolerance is "
"the maximum allowed difference between ``isclose`` arguments, relative to "
"the larger absolute value::"
msgstr ""
":pep:`485` добавляет функции :func:`math.isclose` и :func:`cmath.isclose`, "
"которые сообщают, являются ли два значения приблизительно равными или "
"\"близкими\" друг к другу. Считаются ли два значения близкими или нет, "
"определяется в соответствии с заданными абсолютными и относительными "
"допусками. Относительный допуск — это максимально допустимая разница между "
"аргументами ``isclose`` относительно большего абсолютного значения::"

#: ../../whatsnew/3.5.rst:625
msgid ""
"It is also possible to compare two values using absolute tolerance, which "
"must be a non-negative value::"
msgstr ""
"Также можно сравнить два значения, используя абсолютный допуск, который "
"должен быть неотрицательным значением:"

#: ../../whatsnew/3.5.rst:639
msgid ":pep:`485` -- A function for testing approximate equality"
msgstr ":pep:`485` -- Функция для проверки приблизительного равенства"

#: ../../whatsnew/3.5.rst:639
msgid ""
"PEP written by Christopher Barker; implemented by Chris Barker and Tal Einat."
msgstr ""
"PEP, написанный Кристофером Баркером; реализовано Крисом Баркером и Талом "
"Эйнатом."

#: ../../whatsnew/3.5.rst:646
msgid "PEP 486: Make the Python Launcher aware of virtual environments"
msgstr "PEP 486: информируйте Python Launcher о виртуальных средах"

#: ../../whatsnew/3.5.rst:648
msgid ""
":pep:`486` makes the Windows launcher (see :pep:`397`) aware of an active "
"virtual environment. When the default interpreter would be used and the "
"``VIRTUAL_ENV`` environment variable is set, the interpreter in the virtual "
"environment will be used."
msgstr ""
":pep:`486` сообщает средству запуска Windows (см. :pep:`397`) об активной "
"виртуальной среде. Если будет использоваться интерпретатор по умолчанию и "
"установлена ​​переменная среды VIRTUAL_ENV, будет использоваться интерпретатор "
"в виртуальной среде."

#: ../../whatsnew/3.5.rst:655
msgid ":pep:`486` -- Make the Python Launcher aware of virtual environments"
msgstr ""
":pep:`486` -- Включите в Python Launcher информацию о виртуальных средах."

#: ../../whatsnew/3.5.rst:656
msgid "PEP written and implemented by Paul Moore."
msgstr "PEP написан и реализован Полом Муром."

#: ../../whatsnew/3.5.rst:662
msgid "PEP 488: Elimination of PYO files"
msgstr "PEP 488: Удаление файлов PYO"

#: ../../whatsnew/3.5.rst:664
msgid ""
":pep:`488` does away with the concept of ``.pyo`` files. This means that ``."
"pyc`` files represent both unoptimized and optimized bytecode. To prevent "
"the need to constantly regenerate bytecode files, ``.pyc`` files now have an "
"optional ``opt-`` tag in their name when the bytecode is optimized. This has "
"the side-effect of no more bytecode file name clashes when running under "
"either :option:`-O` or :option:`-OO`. Consequently, bytecode files generated "
"from :option:`-O`, and :option:`-OO` may now exist simultaneously. :func:"
"`importlib.util.cache_from_source` has an updated API to help with this "
"change."
msgstr ""
":pep:`488` покончит с концепцией файлов ``.pyo``. Это означает, что файлы ``."
"pyc`` представляют собой как неоптимизированный, так и оптимизированный байт-"
"код. Чтобы предотвратить необходимость постоянной регенерации файлов байт-"
"кода, файлы .pyc теперь имеют в своем имени дополнительный тег opt-, когда "
"байт-код оптимизирован. Побочным эффектом этого является отсутствие "
"конфликтов имен файлов байт-кода при работе с :option:`-O` или :option:`-"
"OO`. Следовательно, файлы байт-кода, созданные с помощью :option:`-O` и :"
"option:`-OO`, теперь могут существовать одновременно. :func:`importlib.util."
"cache_from_source` имеет обновленный API, который поможет с этим изменением."

#: ../../whatsnew/3.5.rst:676
msgid ":pep:`488` -- Elimination of PYO files"
msgstr ":pep:`488` -- Удаление файлов PYO"

#: ../../whatsnew/3.5.rst:677
msgid "PEP written and implemented by Brett Cannon."
msgstr "PEP написан и реализован Бреттом Кэнноном."

#: ../../whatsnew/3.5.rst:683
msgid "PEP 489: Multi-phase extension module initialization"
msgstr "PEP 489: инициализация многофазного модуля расширения."

#: ../../whatsnew/3.5.rst:685
msgid ""
":pep:`489` updates extension module initialization to take advantage of the "
"two step module loading mechanism introduced by :pep:`451` in Python 3.4."
msgstr ""
":pep:`489` обновляет инициализацию модуля расширения, чтобы воспользоваться "
"преимуществами двухэтапного механизма загрузки модуля, представленного :pep:"
"`451` в Python 3.4."

#: ../../whatsnew/3.5.rst:688
msgid ""
"This change brings the import semantics of extension modules that opt-in to "
"using the new mechanism much closer to those of Python source and bytecode "
"modules, including the ability to use any valid identifier as a module name, "
"rather than being restricted to ASCII."
msgstr ""
"Это изменение приближает семантику импорта модулей расширения, которые "
"соглашаются на использование нового механизма, к семантике импорта модулей "
"исходного кода и байт-кода Python, включая возможность использовать любой "
"действительный идентификатор в качестве имени модуля, а не ограничиваться "
"ASCII."

#: ../../whatsnew/3.5.rst:696
msgid ":pep:`489` -- Multi-phase extension module initialization"
msgstr ":pep:`489` -- Многофазная инициализация модуля расширения"

#: ../../whatsnew/3.5.rst:696
msgid ""
"PEP written by Petr Viktorin, Stefan Behnel, and Nick Coghlan; implemented "
"by Petr Viktorin."
msgstr ""
"PEP, написанный Петром Викторином, Стефаном Бенелем и Ником Когланом; "
"реализовал Петр Викторин."

#: ../../whatsnew/3.5.rst:701
msgid "Other Language Changes"
msgstr "Другие языковые изменения"

#: ../../whatsnew/3.5.rst:703
msgid "Some smaller changes made to the core Python language are:"
msgstr "Некоторые небольшие изменения, внесенные в основной язык Python:"

#: ../../whatsnew/3.5.rst:705
msgid ""
"Added the ``\"namereplace\"`` error handlers.  The ``\"backslashreplace\"`` "
"error handlers now work with decoding and translating. (Contributed by "
"Serhiy Storchaka in :issue:`19676` and :issue:`22286`.)"
msgstr ""
"Добавлены обработчики ошибок ``namereplace``. Обработчики ошибок "
"``\"backslashreplace\"`` теперь работают с декодированием и переводом. "
"(Внесено Сергеем Сторчакой в ​​:issue:`19676` и :issue:`22286`.)"

#: ../../whatsnew/3.5.rst:709
msgid ""
"The :option:`-b` option now affects comparisons of :class:`bytes` with :"
"class:`int`.  (Contributed by Serhiy Storchaka in :issue:`23681`.)"
msgstr ""
"Опция :option:`-b` теперь влияет на сравнение :class:`bytes` с :class:`int`. "
"(Добавлен Сергеем Сторчакой в ​​:issue:`23681`.)"

#: ../../whatsnew/3.5.rst:712
msgid ""
"New Kazakh ``kz1048`` and Tajik ``koi8_t`` :ref:`codecs <standard-"
"encodings>`. (Contributed by Serhiy Storchaka in :issue:`22682` and :issue:"
"`22681`.)"
msgstr ""
"Новые казахские ``kz1048`` и таджикские ``koi8_t`` :ref:`кодеки <standard-"
"encodings>`. (Внесено Сергеем Сторчакой в ​​:issue:`22682` и :issue:`22681`.)"

#: ../../whatsnew/3.5.rst:715
msgid ""
"Property docstrings are now writable. This is especially useful for :func:"
"`collections.namedtuple` docstrings. (Contributed by Berker Peksag in :issue:"
"`24064`.)"
msgstr ""
"Строки документации свойств теперь доступны для записи. Это особенно полезно "
"для строк документации :func:`collections.namedtuple`. (Предоставлено "
"Беркером Пексагом в :issue:`24064`.)"

#: ../../whatsnew/3.5.rst:719
msgid ""
"Circular imports involving relative imports are now supported. (Contributed "
"by Brett Cannon and Antoine Pitrou in :issue:`17636`.)"
msgstr ""
"Теперь поддерживается циклический импорт, включающий относительный импорт. "
"(Предоставлено Бреттом Кэнноном и Антуаном Питру в :issue:`17636`.)"

#: ../../whatsnew/3.5.rst:724
msgid "New Modules"
msgstr "Новые модули"

#: ../../whatsnew/3.5.rst:727
msgid "typing"
msgstr "печатание"

#: ../../whatsnew/3.5.rst:729
msgid ""
"The new :mod:`typing` :term:`provisional <provisional API>` module provides "
"standard definitions and tools for function type annotations. See :ref:`Type "
"Hints <whatsnew-pep-484>` for more information."
msgstr ""
"Новый модуль :mod:`typing` :term:`provisional <provisional API>` "
"предоставляет стандартные определения и инструменты для аннотаций типов "
"функций. См. :ref:`Подсказки по типу <whatsnew-pep-484>` для получения "
"дополнительной информации."

#: ../../whatsnew/3.5.rst:736
msgid "zipapp"
msgstr "zipapp"

#: ../../whatsnew/3.5.rst:738
msgid ""
"The new :mod:`zipapp` module (specified in :pep:`441`) provides an API and "
"command line tool for creating executable Python Zip Applications, which "
"were introduced in Python 2.6 in :issue:`1739468`, but which were not well "
"publicized, either at the time or since."
msgstr ""
"Новый модуль :mod:`zipapp` (указанный в :pep:`441`) предоставляет API и "
"инструмент командной строки для создания исполняемых Zip-приложений Python, "
"которые были представлены в Python 2.6 в :issue:`1739468`, но которые были "
"не получил широкой огласки ни в то время, ни после."

#: ../../whatsnew/3.5.rst:743
msgid ""
"With the new module, bundling your application is as simple as putting all "
"the files, including a ``__main__.py`` file, into a directory ``myapp`` and "
"running:"
msgstr ""
"С новым модулем объединить ваше приложение так же просто, как поместить все "
"файлы, включая файл ``__main__.py``, в каталог ``myapp`` и запустить:"

#: ../../whatsnew/3.5.rst:752
msgid ""
"The module implementation has been contributed by Paul Moore in :issue:"
"`23491`."
msgstr "Реализация модуля была предоставлена ​​Полом Муром в :issue:`23491`."

#: ../../whatsnew/3.5.rst:757
msgid ":pep:`441` -- Improving Python ZIP Application Support"
msgstr ":pep:`441` -- Улучшение поддержки ZIP-приложений Python"

#: ../../whatsnew/3.5.rst:761
msgid "Improved Modules"
msgstr "Улучшенные модули"

#: ../../whatsnew/3.5.rst:764
msgid "argparse"
msgstr "argparse"

#: ../../whatsnew/3.5.rst:766
msgid ""
"The :class:`~argparse.ArgumentParser` class now allows disabling :ref:"
"`abbreviated usage <prefix-matching>` of long options by setting :ref:"
"`allow_abbrev` to ``False``.  (Contributed by Jonathan Paugh, Steven "
"Bethard, paul j3 and Daniel Eriksson in :issue:`14910`.)"
msgstr ""
"Класс :class:`~argparse.ArgumentParser` теперь позволяет отключать :ref:"
"`сокращенное использование <prefix-matching>` длинных опций, установив :ref:"
"`allow_abbrev` в ``False``. (Предоставлено Джонатаном По, Стивеном "
"Бетхардом, Полом j3 и Дэниелом Эрикссоном в :issue:`14910`.)"

#: ../../whatsnew/3.5.rst:773
msgid "asyncio"
msgstr "asyncio"

#: ../../whatsnew/3.5.rst:775
msgid ""
"Since the :mod:`asyncio` module is :term:`provisional <provisional API>`, "
"all changes introduced in Python 3.5 have also been backported to Python 3.4."
"x."
msgstr ""
"Поскольку модуль :mod:`asyncio` является :term:`provisional <provisional "
"API>`, все изменения, внесенные в Python 3.5, также были перенесены в Python "
"3.4.x."

#: ../../whatsnew/3.5.rst:778
msgid "Notable changes in the :mod:`asyncio` module since Python 3.4.0:"
msgstr ""
"Заметные изменения в модуле :mod:`asyncio` по сравнению с Python 3.4.0:"

#: ../../whatsnew/3.5.rst:780
msgid ""
"New debugging APIs: :meth:`loop.set_debug() <asyncio.loop.set_debug>` and :"
"meth:`loop.get_debug() <asyncio.loop.get_debug>` methods. (Contributed by "
"Victor Stinner.)"
msgstr ""
"Новые API отладки: методы :meth:`loop.set_debug() <asyncio.loop.set_debug>` "
"и :meth:`loop.get_debug() <asyncio.loop.get_debug>`. (Предоставлено Виктором "
"Стиннером.)"

#: ../../whatsnew/3.5.rst:784
msgid ""
"The proactor event loop now supports SSL. (Contributed by Antoine Pitrou and "
"Victor Stinner in :issue:`22560`.)"
msgstr ""
"Цикл событий proactor теперь поддерживает SSL. (Предоставлено Антуаном Питру "
"и Виктором Стиннером в :issue:`22560`.)"

#: ../../whatsnew/3.5.rst:787
msgid ""
"A new :meth:`loop.is_closed() <asyncio.loop.is_closed>` method to check if "
"the event loop is closed. (Contributed by Victor Stinner in :issue:`21326`.)"
msgstr ""
"Новый метод :meth:`loop.is_closed() <asyncio.loop.is_closed>` для проверки "
"закрытия цикла событий. (Предоставлено Виктором Стиннером в :issue:`21326`.)"

#: ../../whatsnew/3.5.rst:791
msgid ""
"A new :meth:`loop.create_task() <asyncio.loop.create_task>` to conveniently "
"create and schedule a new :class:`~asyncio.Task` for a coroutine.  The "
"``create_task`` method is also used by all asyncio functions that wrap "
"coroutines into tasks, such as :func:`asyncio.wait`, :func:`asyncio.gather`, "
"etc. (Contributed by Victor Stinner.)"
msgstr ""
"Новый :meth:`loop.create_task() <asyncio.loop.create_task>` для удобного "
"создания и планирования нового :class:`~asyncio.Task` для сопрограммы. Метод "
"create_task также используется всеми функциями asyncio, которые оборачивают "
"сопрограммы в задачи, например :func:`asyncio.wait`, :func:`asyncio.gather` "
"и т. д. (Внесено Виктором Стиннером.)"

#: ../../whatsnew/3.5.rst:798
msgid ""
"A new :meth:`transport.get_write_buffer_limits() <asyncio.WriteTransport."
"get_write_buffer_limits>` method to inquire for *high-* and *low-* water "
"limits of the flow control. (Contributed by Victor Stinner.)"
msgstr ""
"Новый метод :meth:`transport.get_write_buffer_limits() <asyncio."
"WriteTransport.get_write_buffer_limits>` для запроса *высоких* и *низких* "
"пределов воды для управления потоком. (Предоставлено Виктором Стиннером.)"

#: ../../whatsnew/3.5.rst:803
msgid ""
"The :func:`~asyncio.async` function is deprecated in favor of :func:"
"`~asyncio.ensure_future`. (Contributed by Yury Selivanov.)"
msgstr ""
"Функция :func:`~asyncio.async` устарела в пользу :func:`~asyncio."
"ensure_future`. (Сообщил Юрий Селиванов.)"

#: ../../whatsnew/3.5.rst:807
msgid ""
"New :meth:`loop.set_task_factory() <asyncio.loop.set_task_factory>` and :"
"meth:`loop.get_task_factory() <asyncio.loop.get_task_factory>` methods to "
"customize the task factory that :meth:`loop.create_task() <asyncio.loop."
"create_task>` method uses.  (Contributed by Yury Selivanov.)"
msgstr ""
"Новые методы :meth:`loop.set_task_factory() <asyncio.loop.set_task_factory>` "
"и :meth:`loop.get_task_factory() <asyncio.loop.get_task_factory>` для "
"настройки фабрики задач, которая :meth:`loop.create_task () <asyncio.loop."
"create_task>` использует метод. (Сообщил Юрий Селиванов.)"

#: ../../whatsnew/3.5.rst:814
msgid ""
"New :meth:`Queue.join() <asyncio.Queue.join>` and :meth:`Queue.task_done() "
"<asyncio.Queue.task_done>` queue methods. (Contributed by Victor Stinner.)"
msgstr ""
"Новые методы очереди :meth:`Queue.join() <asyncio.Queue.join>` и :meth:"
"`Queue.task_done() <asyncio.Queue.task_done>`. (Предоставлено Виктором "
"Стиннером.)"

#: ../../whatsnew/3.5.rst:818
msgid ""
"The ``JoinableQueue`` class was removed, in favor of the :class:`asyncio."
"Queue` class. (Contributed by Victor Stinner.)"
msgstr ""
"Класс JoinableQueue был удален в пользу класса :class:`asyncio.Queue`. "
"(Предоставлено Виктором Стиннером.)"

#: ../../whatsnew/3.5.rst:822
msgid "Updates in 3.5.1:"
msgstr "Обновления в версии 3.5.1:"

#: ../../whatsnew/3.5.rst:824
msgid ""
"The :func:`~asyncio.ensure_future` function and all functions that use it, "
"such as :meth:`loop.run_until_complete() <asyncio.loop.run_until_complete>`, "
"now accept all kinds of :term:`awaitable objects <awaitable>`. (Contributed "
"by Yury Selivanov.)"
msgstr ""
"Функция :func:`~asyncio.ensure_future` и все функции, которые ее используют, "
"такие как :meth:`loop.run_until_complete() <asyncio.loop."
"run_until_complete>`, теперь принимают все виды :term:`ожидаемых объектов < "
"ожидается>`. (Сообщил Юрий Селиванов.)"

#: ../../whatsnew/3.5.rst:829
msgid ""
"New :func:`~asyncio.run_coroutine_threadsafe` function to submit coroutines "
"to event loops from other threads. (Contributed by Vincent Michel.)"
msgstr ""
"Новая функция :func:`~asyncio.run_coroutine_threadsafe` для отправки "
"сопрограмм в циклы событий из других потоков. (Предоставлено Винсентом "
"Мишелем.)"

#: ../../whatsnew/3.5.rst:833
msgid ""
"New :meth:`Transport.is_closing() <asyncio.BaseTransport.is_closing>` method "
"to check if the transport is closing or closed. (Contributed by Yury "
"Selivanov.)"
msgstr ""
"Новый метод :meth:`Transport.is_closing() <asyncio.BaseTransport."
"is_closing>` для проверки закрытия или закрытия транспорта. (Сообщил Юрий "
"Селиванов.)"

#: ../../whatsnew/3.5.rst:837
msgid ""
"The :meth:`loop.create_server() <asyncio.loop.create_server>` method can now "
"accept a list of hosts. (Contributed by Yann Sionneau.)"
msgstr ""
"Метод :meth:`loop.create_server() <asyncio.loop.create_server>` теперь может "
"принимать список хостов. (Предоставлено Янном Сионно.)"

#: ../../whatsnew/3.5.rst:841
msgid "Updates in 3.5.2:"
msgstr "Обновления в версии 3.5.2:"

#: ../../whatsnew/3.5.rst:843
msgid ""
"New :meth:`loop.create_future() <asyncio.loop.create_future>` method to "
"create Future objects.  This allows alternative event loop implementations, "
"such as `uvloop <https://github.com/MagicStack/uvloop>`_, to provide a "
"faster :class:`asyncio.Future` implementation. (Contributed by Yury "
"Selivanov.)"
msgstr ""
"Новый метод :meth:`loop.create_future() <asyncio.loop.create_future>` для "
"создания объектов Future. Это позволяет альтернативным реализациям цикла "
"событий, таким как `uvloop <https://github.com/MagicStack/uvloop>`_, "
"обеспечить более быструю реализацию :class:`asyncio.Future`. (Сообщил Юрий "
"Селиванов.)"

#: ../../whatsnew/3.5.rst:850
msgid ""
"New :meth:`loop.get_exception_handler() <asyncio.loop."
"get_exception_handler>` method to get the current exception handler. "
"(Contributed by Yury Selivanov.)"
msgstr ""
"Новый метод :meth:`loop.get_Exception_handler() <asyncio.loop."
"get_Exception_handler>` для получения текущего обработчика исключений. "
"(Сообщил Юрий Селиванов.)"

#: ../../whatsnew/3.5.rst:854
msgid ""
"New :meth:`StreamReader.readuntil() <asyncio.StreamReader.readuntil>` method "
"to read data from the stream until a separator bytes sequence appears. "
"(Contributed by Mark Korenberg.)"
msgstr ""
"Новый метод :meth:`StreamReader.readuntil() <asyncio.StreamReader."
"readuntil>` для чтения данных из потока до тех пор, пока не появится "
"последовательность байтов-разделителей. (Предоставлено Марком Коренбергом.)"

#: ../../whatsnew/3.5.rst:859
msgid ""
"The :meth:`loop.create_connection() <asyncio.loop.create_connection>` and :"
"meth:`loop.create_server() <asyncio.loop.create_server>` methods are "
"optimized to avoid calling the system ``getaddrinfo`` function if the "
"address is already resolved. (Contributed by A. Jesse Jiryu Davis.)"
msgstr ""
"Методы :meth:`loop.create_connection() <asyncio.loop.create_connection>` и :"
"meth:`loop.create_server() <asyncio.loop.create_server>` оптимизированы, "
"чтобы избежать вызова системной функции ``getaddrinfo``. если адрес уже "
"разрешен. (Предоставлено А. Джесси Джирю Дэвисом.)"

#: ../../whatsnew/3.5.rst:865
msgid ""
"The :meth:`loop.sock_connect(sock, address) <asyncio.loop.sock_connect>` no "
"longer requires the *address* to be resolved prior to the call. (Contributed "
"by A. Jesse Jiryu Davis.)"
msgstr ""
":meth:`loop.sock_connect(sock, адрес) <asyncio.loop.sock_connect>` больше не "
"требует разрешения *адреса* перед вызовом. (Предоставлено А. Джесси Джирю "
"Дэвисом.)"

#: ../../whatsnew/3.5.rst:871
msgid "bz2"
msgstr "bz2"

#: ../../whatsnew/3.5.rst:873
msgid ""
"The :meth:`BZ2Decompressor.decompress <bz2.BZ2Decompressor.decompress>` "
"method now accepts an optional *max_length* argument to limit the maximum "
"size of decompressed data. (Contributed by Nikolaus Rath in :issue:`15955`.)"
msgstr ""
"Метод :meth:`BZ2Decompressor.decompress <bz2.BZ2Decompressor.decompress>` "
"теперь принимает необязательный аргумент *max_length* для ограничения "
"максимального размера распакованных данных. (Предоставлено Николаусом Ратом "
"в :issue:`15955`.)"

#: ../../whatsnew/3.5.rst:879
msgid "cgi"
msgstr "cgi"

#: ../../whatsnew/3.5.rst:881
msgid ""
"The :class:`~cgi.FieldStorage` class now supports the :term:`context "
"manager` protocol.  (Contributed by Berker Peksag in :issue:`20289`.)"
msgstr ""
"Класс :class:`~cgi.FieldStorage` теперь поддерживает протокол :term:"
"`контекстного менеджера`. (Предоставлено Беркером Пексагом в :issue:`20289`.)"

#: ../../whatsnew/3.5.rst:886
msgid "cmath"
msgstr "cmath"

#: ../../whatsnew/3.5.rst:888
msgid ""
"A new function :func:`~cmath.isclose` provides a way to test for approximate "
"equality.  (Contributed by Chris Barker and Tal Einat in :issue:`24270`.)"
msgstr ""
"Новая функция :func:`~cmath.isclose` позволяет проверить приблизительное "
"равенство. (Предоставлено Крисом Баркером и Талом Эйнатом в :issue:`24270`.)"

#: ../../whatsnew/3.5.rst:893
msgid "code"
msgstr "код"

#: ../../whatsnew/3.5.rst:895
msgid ""
"The :func:`InteractiveInterpreter.showtraceback() <code."
"InteractiveInterpreter.showtraceback>` method now prints the full chained "
"traceback, just like the interactive interpreter.  (Contributed by Claudiu "
"Popa in :issue:`17442`.)"
msgstr ""
"Метод :func:`InteractiveInterpreter.showtraceback() <code."
"InteractiveInterpreter.showtraceback>` теперь печатает полную цепочку "
"трассировки, как и интерактивный интерпретатор. (Предоставлено Клаудиу Попа "
"в :issue:`17442`.)"

#: ../../whatsnew/3.5.rst:901
msgid "collections"
msgstr "коллекции"

#: ../../whatsnew/3.5.rst:905
msgid ""
"The :class:`~collections.OrderedDict` class is now implemented in C, which "
"makes it 4 to 100 times faster.  (Contributed by Eric Snow in :issue:"
"`16991`.)"
msgstr ""
"Класс :class:`~collections.OrderedDict` теперь реализован на языке C, что "
"делает его работу в 4–100 раз быстрее. (Предоставлено Эриком Сноу в :issue:"
"`16991`.)"

#: ../../whatsnew/3.5.rst:908
msgid ""
":meth:`OrderedDict.items() <collections.OrderedDict.items>`, :meth:"
"`OrderedDict.keys() <collections.OrderedDict.keys>`, :meth:`OrderedDict."
"values() <collections.OrderedDict.values>` views now support :func:"
"`reversed` iteration. (Contributed by Serhiy Storchaka in :issue:`19505`.)"
msgstr ""
":meth:`OrderedDict.items() <collections.OrderedDict.items>`, :meth:"
"`OrderedDict.keys() <collections.OrderedDict.keys>`, :meth:`OrderedDict."
"values() <collections.OrderedDict. Представления значений>` теперь "
"поддерживают :func:`reversed` итерацию. (Предоставлено Сергеем Сторчакой в ​​:"
"issue:`19505`.)"

#: ../../whatsnew/3.5.rst:914
msgid ""
"The :class:`~collections.deque` class now defines :meth:`~collections.deque."
"index`, :meth:`~collections.deque.insert`, and :meth:`~collections.deque."
"copy`, and supports the ``+`` and ``*`` operators. This allows deques to be "
"recognized as a :class:`~collections.abc.MutableSequence` and improves their "
"substitutability for lists. (Contributed by Raymond Hettinger in :issue:"
"`23704`.)"
msgstr ""
"Класс :class:`~collections.deque` теперь определяет :meth:`~collections."
"deque.index`, :meth:`~collections.deque.insert` и :meth:`~collections.deque."
"copy`, и поддерживает операторы ``+`` и ``*``. Это позволяет распознавать "
"деки как :class:`~collections.abc.MutableSequence` и улучшает их "
"заменяемость списками. (Предоставлено Рэймондом Хеттингером в :issue:"
"`23704`.)"

#: ../../whatsnew/3.5.rst:921
msgid ""
"Docstrings produced by :func:`~collections.namedtuple` can now be updated::"
msgstr ""
"Строки документации, созданные :func:`~collections.namedtuple`, теперь можно "
"обновлять::"

#: ../../whatsnew/3.5.rst:928
msgid "(Contributed by Berker Peksag in :issue:`24064`.)"
msgstr "(Предоставлено Беркером Пексагом в :issue:`24064`.)"

#: ../../whatsnew/3.5.rst:930
msgid ""
"The :class:`~collections.UserString` class now implements the :meth:"
"`__getnewargs__`, :meth:`__rmod__`, :meth:`~str.casefold`, :meth:`~str."
"format_map`, :meth:`~str.isprintable`, and :meth:`~str.maketrans` methods to "
"match the corresponding methods of :class:`str`. (Contributed by Joe Jevnik "
"in :issue:`22189`.)"
msgstr ""
"Класс :class:`~collections.UserString` теперь реализует :meth:"
"`__getnewargs__`, :meth:`__rmod__`, :meth:`~str.casefold`, :meth:`~str."
"format_map`, :meth :`~str.isprintable` и :meth:`~str.maketrans` для "
"соответствия соответствующим методам :class:`str`. (Внесено Джо Джевником в :"
"issue:`22189`.)"

#: ../../whatsnew/3.5.rst:938
msgid "collections.abc"
msgstr "collections.abc"

#: ../../whatsnew/3.5.rst:940
msgid ""
"The :meth:`Sequence.index() <collections.abc.Sequence.index>` method now "
"accepts *start* and *stop* arguments to match the corresponding methods of :"
"class:`tuple`, :class:`list`, etc. (Contributed by Devin Jeanpierre in :"
"issue:`23086`.)"
msgstr ""
"Метод :meth:`Sequence.index() <collections.abc.Sequence.index>` теперь "
"принимает аргументы *start* и *stop*, соответствующие соответствующим "
"методам :class:`tuple`, :class:`list` и т. д. (Предоставлено Девином "
"Жанпьером в :issue:`23086`.)"

#: ../../whatsnew/3.5.rst:945
msgid ""
"A new :class:`~collections.abc.Generator` abstract base class. (Contributed "
"by Stefan Behnel in :issue:`24018`.)"
msgstr ""
"Новый абстрактный базовый класс :class:`~collections.abc.Generator`. "
"(Предоставлено Стефаном Бенелем в :issue:`24018`.)"

#: ../../whatsnew/3.5.rst:948
msgid ""
"New :class:`~collections.abc.Awaitable`, :class:`~collections.abc."
"Coroutine`, :class:`~collections.abc.AsyncIterator`, and :class:"
"`~collections.abc.AsyncIterable` abstract base classes. (Contributed by Yury "
"Selivanov in :issue:`24184`.)"
msgstr ""
"Новые :class:`~collections.abc.Awaitable`, :class:`~collections.abc."
"Coroutine`, :class:`~collections.abc.AsyncIterator` и :class:`~collections."
"abc.AsyncIterable` абстрактные. базовые классы. (Добавлен Юрием Селивановым "
"в :issue:`24184`.)"

#: ../../whatsnew/3.5.rst:953
msgid ""
"For earlier Python versions, a backport of the new ABCs is available in an "
"external `PyPI package <https://pypi.org/project/backports_abc>`_."
msgstr ""

#: ../../whatsnew/3.5.rst:958
msgid "compileall"
msgstr "compileall"

#: ../../whatsnew/3.5.rst:960
msgid ""
"A new :mod:`compileall` option, :samp:`-j {N}`, allows running *N* workers "
"simultaneously to perform parallel bytecode compilation. The :func:"
"`~compileall.compile_dir` function has a corresponding ``workers`` "
"parameter.  (Contributed by Claudiu Popa in :issue:`16104`.)"
msgstr ""
"Новая опция :mod:`compileall`, :samp:`-j {N}`, позволяет одновременно "
"запускать *N* воркеры для выполнения параллельной компиляции байт-кода. "
"Функция :func:`~compileall.compile_dir` имеет соответствующий параметр "
"``workers``. (Предоставлено Клаудиу Попа в :issue:`16104`.)"

#: ../../whatsnew/3.5.rst:965
msgid ""
"Another new option, ``-r``, allows controlling the maximum recursion level "
"for subdirectories.  (Contributed by Claudiu Popa in :issue:`19628`.)"
msgstr ""
"Другая новая опция, ``-r``, позволяет контролировать максимальный уровень "
"рекурсии для подкаталогов. (Предоставлено Клаудиу Попа в :issue:`19628`.)"

#: ../../whatsnew/3.5.rst:968
msgid ""
"The ``-q`` command line option can now be specified more than once, in which "
"case all output, including errors, will be suppressed.  The corresponding "
"``quiet`` parameter in :func:`~compileall.compile_dir`, :func:`~compileall."
"compile_file`, and :func:`~compileall.compile_path` can now accept an "
"integer value indicating the level of output suppression. (Contributed by "
"Thomas Kluyver in :issue:`21338`.)"
msgstr ""
"Опцию командной строки ``-q`` теперь можно указать более одного раза, и в "
"этом случае весь вывод, включая ошибки, будет подавлен. Соответствующий "
"параметр ``quiet`` в :func:`~compileall.compile_dir`, :func:`~compileall."
"compile_file` и :func:`~compileall.compile_path` теперь может принимать "
"целочисленное значение, указывающее уровень вывода. подавление. "
"(Предоставлено Томасом Клюйвером в :issue:`21338`.)"

#: ../../whatsnew/3.5.rst:977
msgid "concurrent.futures"
msgstr "concurrent.futures"

#: ../../whatsnew/3.5.rst:979
msgid ""
"The :meth:`Executor.map() <concurrent.futures.Executor.map>` method now "
"accepts a *chunksize* argument to allow batching of tasks to improve "
"performance when :meth:`~concurrent.futures.ProcessPoolExecutor` is used. "
"(Contributed by Dan O'Reilly in :issue:`11271`.)"
msgstr ""
"Метод :meth:`Executor.map() <concurrent.futures.Executor.map>` теперь "
"принимает аргумент *chunksize*, позволяющий группировать задачи для "
"повышения производительности при использовании :meth:`~concurrent.futures."
"ProcessPoolExecutor` . (Предоставлено Дэном О'Рейли в :issue:`11271`.)"

#: ../../whatsnew/3.5.rst:984
msgid ""
"The number of workers in the :class:`~concurrent.futures.ThreadPoolExecutor` "
"constructor is optional now.  The default value is 5 times the number of "
"CPUs. (Contributed by Claudiu Popa in :issue:`21527`.)"
msgstr ""
"Количество рабочих в конструкторе :class:`~concurrent.futures."
"ThreadPoolExecutor` теперь не является обязательным. Значение по умолчанию — "
"в 5 раз больше количества процессоров. (Предоставлено Клаудиу Попа в :issue:"
"`21527`.)"

#: ../../whatsnew/3.5.rst:990
msgid "configparser"
msgstr "configparser"

#: ../../whatsnew/3.5.rst:992
msgid ""
":mod:`configparser` now provides a way to customize the conversion of values "
"by specifying a dictionary of converters in the :class:`~configparser."
"ConfigParser` constructor, or by defining them as methods in "
"``ConfigParser`` subclasses.  Converters defined in a parser instance are "
"inherited by its section proxies."
msgstr ""
":mod:`configparser` теперь предоставляет возможность настроить "
"преобразование значений, указав словарь преобразователей в конструкторе :"
"class:`~configparser.ConfigParser` или определив их как методы в подклассах "
"``ConfigParser``. Преобразователи, определенные в экземпляре анализатора, "
"наследуются его прокси-серверами раздела."

#: ../../whatsnew/3.5.rst:998
msgid "Example::"
msgstr "Пример::"

#: ../../whatsnew/3.5.rst:1016
msgid "(Contributed by Łukasz Langa in :issue:`18159`.)"
msgstr "(Предоставлено Лукашом Лангой в :issue:`18159`.)"

#: ../../whatsnew/3.5.rst:1020
msgid "contextlib"
msgstr "contextlib"

#: ../../whatsnew/3.5.rst:1022
msgid ""
"The new :func:`~contextlib.redirect_stderr` :term:`context manager` (similar "
"to :func:`~contextlib.redirect_stdout`) makes it easier for utility scripts "
"to handle inflexible APIs that write their output to :data:`sys.stderr` and "
"don't provide any options to redirect it::"
msgstr ""
"Новый :func:`~contextlib.redirect_stderr` :term:`контекстный менеджер` "
"(похожий на :func:`~contextlib.redirect_stdout`) упрощает служебным "
"сценариям обработку негибких API, которые записывают свои выходные данные в :"
"data:` sys.stderr` и не предоставляйте никаких возможностей для его "
"перенаправления::"

#: ../../whatsnew/3.5.rst:1035
msgid "(Contributed by Berker Peksag in :issue:`22389`.)"
msgstr "(Предоставлено Беркером Пексагом в :issue:`22389`.)"

#: ../../whatsnew/3.5.rst:1039
msgid "csv"
msgstr "csv"

#: ../../whatsnew/3.5.rst:1041
msgid ""
"The :meth:`~csv.csvwriter.writerow` method now supports arbitrary iterables, "
"not just sequences.  (Contributed by Serhiy Storchaka in :issue:`23171`.)"
msgstr ""
"Метод :meth:`~csv.csvwriter.writerow` теперь поддерживает произвольные "
"итерации, а не только последовательности. (Предоставлено Сергеем Сторчакой в ​​"
":issue:`23171`.)"

#: ../../whatsnew/3.5.rst:1046
msgid "curses"
msgstr "curses"

#: ../../whatsnew/3.5.rst:1048
msgid ""
"The new :func:`~curses.update_lines_cols` function updates the :data:`LINES` "
"and :data:`COLS` module variables.  This is useful for detecting manual "
"screen resizing.  (Contributed by Arnon Yaari in :issue:`4254`.)"
msgstr ""
"Новая функция :func:`~curses.update_lines_cols` обновляет переменные модуля :"
"data:`LINES` и :data:`COLS`. Это полезно для обнаружения изменения размера "
"экрана вручную. (Предоставлено Арноном Яари в :issue:`4254`.)"

#: ../../whatsnew/3.5.rst:1054
msgid "dbm"
msgstr "dbm"

#: ../../whatsnew/3.5.rst:1056
msgid ""
":func:`dumb.open <dbm.dumb.open>` always creates a new database when the "
"flag has the value ``\"n\"``.  (Contributed by Claudiu Popa in :issue:"
"`18039`.)"
msgstr ""
":func:`dumb.open <dbm.dumb.open>` всегда создает новую базу данных, если "
"флаг имеет значение ``\"n\"``. (Предоставлено Клаудиу Попа в :issue:`18039`.)"

#: ../../whatsnew/3.5.rst:1061
msgid "difflib"
msgstr "difflib"

#: ../../whatsnew/3.5.rst:1063
msgid ""
"The charset of HTML documents generated by :meth:`HtmlDiff.make_file() "
"<difflib.HtmlDiff.make_file>` can now be customized by using a new *charset* "
"keyword-only argument. The default charset of HTML document changed from "
"``\"ISO-8859-1\"`` to ``\"utf-8\"``. (Contributed by Berker Peksag in :issue:"
"`2052`.)"
msgstr ""
"Кодировку HTML-документов, созданных с помощью :meth:`HtmlDiff.make_file() "
"<difflib.HtmlDiff.make_file>`, теперь можно настроить с помощью нового "
"аргумента *charset*, содержащего только ключевые слова. Кодировка HTML-"
"документа по умолчанию изменена с «ISO-8859-1» на «utf-8». (Предоставлено "
"Беркером Пексагом в :issue:`2052`.)"

#: ../../whatsnew/3.5.rst:1070
msgid ""
"The :func:`~difflib.diff_bytes` function can now compare lists of byte "
"strings.  This fixes a regression from Python 2. (Contributed by Terry J. "
"Reedy and Greg Ward in :issue:`17445`.)"
msgstr ""
"Функция :func:`~difflib.diff_bytes` теперь может сравнивать списки байтовых "
"строк. Это исправляет регрессию по сравнению с Python 2. (Предоставлено "
"Терри Дж. Риди и Грегом Уордом в :issue:`17445`.)"

#: ../../whatsnew/3.5.rst:1076
msgid "distutils"
msgstr "distutils"

#: ../../whatsnew/3.5.rst:1078
msgid ""
"Both the ``build`` and ``build_ext`` commands now accept a ``-j`` option to "
"enable parallel building of extension modules. (Contributed by Antoine "
"Pitrou in :issue:`5309`.)"
msgstr ""
"Обе команды ``build`` и ``build_ext`` теперь принимают опцию ``-j`` для "
"включения параллельной сборки модулей расширения. (Предоставлено Антуаном "
"Питру в :issue:`5309`.)"

#: ../../whatsnew/3.5.rst:1082
msgid ""
"The :mod:`distutils` module now supports ``xz`` compression, and can be "
"enabled by passing ``xztar`` as an argument to ``bdist --format``. "
"(Contributed by Serhiy Storchaka in :issue:`16314`.)"
msgstr ""

#: ../../whatsnew/3.5.rst:1088
msgid "doctest"
msgstr "doctest"

#: ../../whatsnew/3.5.rst:1090
msgid ""
"The :func:`~doctest.DocTestSuite` function returns an empty :class:`unittest."
"TestSuite` if *module* contains no docstrings, instead of raising :exc:"
"`ValueError`.  (Contributed by Glenn Jones in :issue:`15916`.)"
msgstr ""
"Функция :func:`~doctest.DocTestSuite` возвращает пустой :class:`unittest."
"TestSuite`, если *module* не содержит строк документации, вместо вызова :exc:"
"`ValueError`. (Предоставлено Гленном Джонсом в :issue:`15916`.)"

#: ../../whatsnew/3.5.rst:1096
msgid "email"
msgstr "электронная почта"

#: ../../whatsnew/3.5.rst:1098
msgid ""
"A new policy option :attr:`Policy.mangle_from_ <email.policy.Policy."
"mangle_from_>` controls whether or not lines that start with ``\"From \"`` "
"in email bodies are prefixed with a ``\">\"`` character by generators.  The "
"default is ``True`` for :attr:`~email.policy.compat32` and ``False`` for all "
"other policies. (Contributed by Milan Oberkirch in :issue:`20098`.)"
msgstr ""
"Новый параметр политики :attr:`Policy.mangle_from_ <email.policy.Policy."
"mangle_from_>` контролирует, будут ли строки, начинающиеся с ``\"From \"`` в "
"тексте электронного письма, иметь префикс ``\">\"`` символ с помощью "
"генераторов. По умолчанию установлено ``True`` для :attr:`~email.policy."
"compat32` и ``False`` для всех остальных политик. (Предоставлено Миланом "
"Оберкирхом в :issue:`20098`.)"

#: ../../whatsnew/3.5.rst:1104
msgid ""
"A new :meth:`Message.get_content_disposition() <email.message.Message."
"get_content_disposition>` method provides easy access to a canonical value "
"for the :mailheader:`Content-Disposition` header. (Contributed by Abhilash "
"Raj in :issue:`21083`.)"
msgstr ""
"Новый метод :meth:`Message.get_content_disposition() <email.message.Message."
"get_content_disposition>` обеспечивает легкий доступ к каноническому "
"значению заголовка :mailheader:`Content-Disposition`. (Предоставлено "
"Абхилашем Раджем в :issue:`21083`.)"

#: ../../whatsnew/3.5.rst:1110
msgid ""
"A new policy option :attr:`EmailPolicy.utf8 <email.policy.EmailPolicy.utf8>` "
"can be set to ``True`` to encode email headers using the UTF-8 charset "
"instead of using encoded words.  This allows ``Messages`` to be formatted "
"according to :rfc:`6532` and used with an SMTP server that supports the :rfc:"
"`6531` ``SMTPUTF8`` extension.  (Contributed by R. David Murray in :issue:"
"`24211`.)"
msgstr ""
"Для нового параметра политики :attr:`EmailPolicy.utf8 <email.policy."
"EmailPolicy.utf8>` можно установить значение ``True`` для кодирования "
"заголовков электронной почты с использованием кодировки UTF-8 вместо "
"использования закодированных слов. Это позволяет форматировать «Сообщения» в "
"соответствии с :rfc:`6532` и использовать их с SMTP-сервером, который "
"поддерживает расширение :rfc:`6531```SMTPUTF8``. (Предоставлено Р. Дэвидом "
"Мюрреем в :issue:`24211`.)"

#: ../../whatsnew/3.5.rst:1117
msgid ""
"The :class:`mime.text.MIMEText <email.mime.text.MIMEText>` constructor now "
"accepts a :class:`charset.Charset <email.charset.Charset>` instance. "
"(Contributed by Claude Paroz and Berker Peksag in :issue:`16324`.)"
msgstr ""
"Конструктор :class:`mime.text.MIMEText <email.mime.text.MIMEText>` теперь "
"принимает экземпляр :class:`charset.Charset <email.charset.Charset>`. "
"(Предоставлено Клодом Парозом и Беркером Пексагом в :issue:`16324`.)"

#: ../../whatsnew/3.5.rst:1123
msgid "enum"
msgstr "enum"

#: ../../whatsnew/3.5.rst:1125
msgid ""
"The :class:`~enum.Enum` callable has a new parameter *start* to specify the "
"initial number of enum values if only *names* are provided::"
msgstr ""
"Вызываемая функция :class:`~enum.Enum` имеет новый параметр *start* для "
"указания начального количества значений перечисления, если указаны только "
"*names*:"

#: ../../whatsnew/3.5.rst:1134
msgid "(Contributed by Ethan Furman in :issue:`21706`.)"
msgstr "(Предоставлено Итаном Фурманом в :issue:`21706`.)"

#: ../../whatsnew/3.5.rst:1138
msgid "faulthandler"
msgstr "faulthandler"

#: ../../whatsnew/3.5.rst:1140
msgid ""
"The :func:`~faulthandler.enable`, :func:`~faulthandler.register`, :func:"
"`~faulthandler.dump_traceback` and :func:`~faulthandler."
"dump_traceback_later` functions now accept file descriptors in addition to "
"file-like objects. (Contributed by Wei Wu in :issue:`23566`.)"
msgstr ""
"Функции :func:`~faulthandler.enable`, :func:`~faulthandler.register`, :func:"
"`~faulthandler.dump_traceback` и :func:`~faulthandler.dump_traceback_later` "
"теперь принимают файловые дескрипторы в дополнение к файловым дескрипторам. "
"как предметы. (Предоставлено Вэй Ву в :issue:`23566`.)"

#: ../../whatsnew/3.5.rst:1148
msgid "functools"
msgstr "functools"

#: ../../whatsnew/3.5.rst:1152
msgid ""
"Most of the :func:`~functools.lru_cache` machinery is now implemented in C, "
"making it significantly faster.  (Contributed by Matt Joiner, Alexey "
"Kachayev, and Serhiy Storchaka in :issue:`14373`.)"
msgstr ""
"Большая часть механизма :func:`~functools.lru_cache` теперь реализована на "
"C, что значительно ускоряет работу. (Предоставлено Мэттом Джойнером, "
"Алексеем Качаевым и Сергеем Сторчакой в ​​:issue:`14373`.)"

#: ../../whatsnew/3.5.rst:1158
msgid "glob"
msgstr "glob"

#: ../../whatsnew/3.5.rst:1160
msgid ""
"The :func:`~glob.iglob` and :func:`~glob.glob` functions now support "
"recursive search in subdirectories, using the ``\"**\"`` pattern. "
"(Contributed by Serhiy Storchaka in :issue:`13968`.)"
msgstr ""
"Функции :func:`~glob.iglob` и :func:`~glob.glob` теперь поддерживают "
"рекурсивный поиск в подкаталогах, используя шаблон ``\"**\"``. "
"(Предоставлено Сергеем Сторчакой в ​​:issue:`13968`.)"

#: ../../whatsnew/3.5.rst:1166
msgid "gzip"
msgstr "gzip"

#: ../../whatsnew/3.5.rst:1168
msgid ""
"The *mode* argument of the :class:`~gzip.GzipFile` constructor now accepts "
"``\"x\"`` to request exclusive creation. (Contributed by Tim Heaney in :"
"issue:`19222`.)"
msgstr ""
"Аргумент *mode* конструктора :class:`~gzip.GzipFile` теперь принимает "
"``\"x\"`` для запроса эксклюзивного создания. (Предоставлено Тимом Хини в :"
"issue:`19222`.)"

#: ../../whatsnew/3.5.rst:1174
msgid "heapq"
msgstr "heapq"

#: ../../whatsnew/3.5.rst:1176
msgid ""
"Element comparison in :func:`~heapq.merge` can now be customized by passing "
"a :term:`key function` in a new optional *key* keyword argument, and a new "
"optional *reverse* keyword argument can be used to reverse element "
"comparison::"
msgstr ""
"Сравнение элементов в :func:`~heapq.merge` теперь можно настроить, передав :"
"term:`key function` в новом необязательном аргументе ключевого слова *key*, "
"а для обратного изменения можно использовать новый необязательный аргумент "
"ключевого слова *reverse*. сравнение элементов::"

#: ../../whatsnew/3.5.rst:1189
msgid "(Contributed by Raymond Hettinger in :issue:`13742`.)"
msgstr "(Предоставлено Рэймондом Хеттингером в :issue:`13742`.)"

#: ../../whatsnew/3.5.rst:1193
msgid "http"
msgstr "http"

#: ../../whatsnew/3.5.rst:1195
msgid ""
"A new :class:`HTTPStatus <http.HTTPStatus>` enum that defines a set of HTTP "
"status codes, reason phrases and long descriptions written in English. "
"(Contributed by Demian Brecht in :issue:`21793`.)"
msgstr ""
"Новое перечисление :class:`HTTPStatus <http.HTTPStatus>`, которое определяет "
"набор кодов состояния HTTP, фраз-причин и длинных описаний, написанных на "
"английском языке. (Предоставлено Демианом Брехтом в :issue:`21793`.)"

#: ../../whatsnew/3.5.rst:1201
msgid "http.client"
msgstr "http.client"

#: ../../whatsnew/3.5.rst:1203
msgid ""
":meth:`HTTPConnection.getresponse() <http.client.HTTPConnection."
"getresponse>` now raises a :exc:`~http.client.RemoteDisconnected` exception "
"when a remote server connection is closed unexpectedly.  Additionally, if a :"
"exc:`ConnectionError` (of which ``RemoteDisconnected`` is a subclass) is "
"raised, the client socket is now closed automatically, and will reconnect on "
"the next request::"
msgstr ""
":meth:`HTTPConnection.getresponse() <http.client.HTTPConnection."
"getresponse>` теперь вызывает исключение :exc:`~http.client."
"RemoteDisconnected`, когда соединение с удаленным сервером неожиданно "
"закрывается. Кроме того, если возникает :exc:`ConnectionError` (подклассом "
"которого является ``RemoteDisconnected``), клиентский сокет теперь "
"закрывается автоматически и будет повторно подключаться при следующем "
"запросе:"

#: ../../whatsnew/3.5.rst:1219
msgid "(Contributed by Martin Panter in :issue:`3566`.)"
msgstr "(Предоставлено Мартином Пантером в :issue:`3566`.)"

#: ../../whatsnew/3.5.rst:1223
msgid "idlelib and IDLE"
msgstr "idlelib и IDLE"

#: ../../whatsnew/3.5.rst:1225
msgid ""
"Since idlelib implements the IDLE shell and editor and is not intended for "
"import by other programs, it gets improvements with every release.  See :"
"file:`Lib/idlelib/NEWS.txt` for a cumulative list of changes since 3.4.0, as "
"well as changes made in future 3.5.x releases. This file is also available "
"from the IDLE :menuselection:`Help --> About IDLE` dialog."
msgstr ""
"Поскольку Idlelib реализует оболочку и редактор IDLE и не предназначен для "
"импорта другими программами, он совершенствуется с каждым выпуском. См. :"
"file:`Lib/idlelib/NEWS.txt` для получения совокупного списка изменений, "
"начиная с версии 3.4.0, а также изменений, внесенных в будущие выпуски 3.5."
"x. Этот файл также доступен в диалоговом окне IDLE :menuselection:`Справка --"
"> О IDLE`."

#: ../../whatsnew/3.5.rst:1233
msgid "imaplib"
msgstr "imaplib"

#: ../../whatsnew/3.5.rst:1235
msgid ""
"The :class:`~imaplib.IMAP4` class now supports the :term:`context manager` "
"protocol. When used in a :keyword:`with` statement, the IMAP4 ``LOGOUT`` "
"command will be called automatically at the end of the block. (Contributed "
"by Tarek Ziadé and Serhiy Storchaka in :issue:`4972`.)"
msgstr ""
"Класс :class:`~imaplib.IMAP4` теперь поддерживает протокол :term:"
"`контекстного менеджера`. При использовании в операторе :keyword:`with` "
"команда IMAP4 ``LOGOUT`` будет вызываться автоматически в конце блока. "
"(Предоставлено Тарек Зиаде и Сергей Сторчака в :issue:`4972`.)"

#: ../../whatsnew/3.5.rst:1240
msgid ""
"The :mod:`imaplib` module now supports :rfc:`5161` (ENABLE Extension) and :"
"rfc:`6855` (UTF-8 Support) via the :meth:`IMAP4.enable() <imaplib.IMAP4."
"enable>` method.  A new :attr:`IMAP4.utf8_enabled <imaplib.IMAP4."
"utf8_enabled>` attribute tracks whether or not :rfc:`6855` support is "
"enabled. (Contributed by Milan Oberkirch, R. David Murray, and Maciej Szulik "
"in :issue:`21800`.)"
msgstr ""
"Модуль :mod:`imaplib` теперь поддерживает :rfc:`5161` (расширение ENABLE) и :"
"rfc:`6855` (поддержка UTF-8) через :meth:`IMAP4.enable() <imaplib.IMAP4."
"enable >` метод. Новый атрибут :attr:`IMAP4.utf8_enabled <imaplib.IMAP4."
"utf8_enabled>` отслеживает, включена ли поддержка :rfc:`6855`. "
"(Предоставлено Миланом Оберкирхом, Р. Дэвидом Мюрреем и Мацеем Шуликом в :"
"issue:`21800`.)"

#: ../../whatsnew/3.5.rst:1247
msgid ""
"The :mod:`imaplib` module now automatically encodes non-ASCII string "
"usernames and passwords using UTF-8, as recommended by the RFCs.  "
"(Contributed by Milan Oberkirch in :issue:`21800`.)"
msgstr ""
"Модуль :mod:`imaplib` теперь автоматически кодирует имена пользователей и "
"пароли в виде строк, отличных от ASCII, с использованием UTF-8, как "
"рекомендовано RFC. (Предоставлено Миланом Оберкирхом в :issue:`21800`.)"

#: ../../whatsnew/3.5.rst:1253
msgid "imghdr"
msgstr "imghdr"

#: ../../whatsnew/3.5.rst:1255
msgid ""
"The :func:`~imghdr.what` function now recognizes the `OpenEXR <https://www."
"openexr.com>`_ format (contributed by Martin Vignali and Claudiu Popa in :"
"issue:`20295`), and the `WebP <https://en.wikipedia.org/wiki/WebP>`_ format "
"(contributed by Fabrice Aneche and Claudiu Popa in :issue:`20197`.)"
msgstr ""
"Функция :func:`~imghdr.what` теперь распознаёт формат `OpenEXR <https://www."
"openexr.com>`_ (предоставленный Мартином Виньяли и Клаудиу Попа в :issue:"
"`20295`), а также формат ` Формат WebP <https://en.wikipedia.org/wiki/"
"WebP>`_ (предоставлен Фабрисом Анеше и Клаудиу Попа в :issue:`20197`.)"

#: ../../whatsnew/3.5.rst:1263
msgid "importlib"
msgstr "importlib"

#: ../../whatsnew/3.5.rst:1265
msgid ""
"The :class:`util.LazyLoader <importlib.util.LazyLoader>` class allows for "
"lazy loading of modules in applications where startup time is important. "
"(Contributed by Brett Cannon in :issue:`17621`.)"
msgstr ""
"Класс :class:`util.LazyLoader <importlib.util.LazyLoader>` позволяет "
"выполнять отложенную загрузку модулей в приложениях, где время запуска "
"важно. (Предоставлено Бреттом Кэнноном в :issue:`17621`.)"

#: ../../whatsnew/3.5.rst:1269
msgid ""
"The :func:`abc.InspectLoader.source_to_code() <importlib.abc.InspectLoader."
"source_to_code>` method is now a static method.  This makes it easier to "
"initialize a module object with code compiled from a string by running "
"``exec(code, module.__dict__)``. (Contributed by Brett Cannon in :issue:"
"`21156`.)"
msgstr ""
"Метод :func:`abc.InspectLoader.source_to_code() <importlib.abc.InspectLoader."
"source_to_code>` теперь является статическим методом. Это упрощает "
"инициализацию объекта модуля с помощью кода, скомпилированного из строки, "
"запустив ``exec(code, Module.__dict__)``. (Предоставлено Бреттом Кэнноном в :"
"issue:`21156`.)"

#: ../../whatsnew/3.5.rst:1275
msgid ""
"The new :func:`util.module_from_spec() <importlib.util.module_from_spec>` "
"function is now the preferred way to create a new module.  As opposed to "
"creating a :class:`types.ModuleType` instance directly, this new function "
"will set the various import-controlled attributes based on the passed-in "
"spec object.  (Contributed by Brett Cannon in :issue:`20383`.)"
msgstr ""
"Новая функция :func:`util.module_from_spec() <importlib.util."
"module_from_spec>` теперь является предпочтительным способом создания нового "
"модуля. В отличие от непосредственного создания экземпляра :class:`types."
"ModuleType`, эта новая функция будет устанавливать различные атрибуты, "
"управляемые импортом, на основе переданного объекта спецификации. "
"(Предоставлено Бреттом Кэнноном в :issue:`20383`.)"

#: ../../whatsnew/3.5.rst:1283
msgid "inspect"
msgstr "inspect"

#: ../../whatsnew/3.5.rst:1285
msgid ""
"Both the :class:`~inspect.Signature` and :class:`~inspect.Parameter` classes "
"are now picklable and hashable.  (Contributed by Yury Selivanov in :issue:"
"`20726` and :issue:`20334`.)"
msgstr ""
"Оба класса :class:`~inspect.Signature` и :class:`~inspect.Parameter` теперь "
"можно выбирать и хешировать. (Добавлено Юрием Селивановым в :issue:`20726` "
"и :issue:`20334`.)"

#: ../../whatsnew/3.5.rst:1289
msgid ""
"A new :meth:`BoundArguments.apply_defaults() <inspect.BoundArguments."
"apply_defaults>` method provides a way to set default values for missing "
"arguments::"
msgstr ""
"Новый метод :meth:`BoundArguments.apply_defaults() <inspect.BoundArguments."
"apply_defaults>` предоставляет возможность установить значения по умолчанию "
"для отсутствующих аргументов:"

#: ../../whatsnew/3.5.rst:1299
msgid "(Contributed by Yury Selivanov in :issue:`24190`.)"
msgstr "(Contributed by Yury Selivanov in :issue:`24190`.)"

#: ../../whatsnew/3.5.rst:1301
msgid ""
"A new class method :meth:`Signature.from_callable() <inspect.Signature."
"from_callable>` makes subclassing of :class:`~inspect.Signature` easier.  "
"(Contributed by Yury Selivanov and Eric Snow in :issue:`17373`.)"
msgstr ""
"Новый метод класса :meth:`Signature.from_callable() <inspect.Signature."
"from_callable>` упрощает создание подклассов :class:`~inspect.Signature`. "
"(Предоставлено Юрием Селивановым и Эриком Сноу в :issue:`17373`.)"

#: ../../whatsnew/3.5.rst:1306
msgid ""
"The :func:`~inspect.signature` function now accepts a *follow_wrapped* "
"optional keyword argument, which, when set to ``False``, disables automatic "
"following of ``__wrapped__`` links. (Contributed by Yury Selivanov in :issue:"
"`20691`.)"
msgstr ""
"Функция :func:`~inspect.signature` теперь принимает необязательный аргумент "
"ключевого слова *follow_wrapped*, который, если установлено значение "
"``False``, отключает автоматическое следование по ссылкам ``__wrapped__``. "
"(Добавлен Юрием Селивановым в :issue:`20691`.)"

#: ../../whatsnew/3.5.rst:1311
msgid ""
"A set of new functions to inspect :term:`coroutine functions <coroutine "
"function>` and :term:`coroutine objects <coroutine>` has been added: :func:"
"`~inspect.iscoroutine`, :func:`~inspect.iscoroutinefunction`, :func:"
"`~inspect.isawaitable`, :func:`~inspect.getcoroutinelocals`, and :func:"
"`~inspect.getcoroutinestate`. (Contributed by Yury Selivanov in :issue:"
"`24017` and :issue:`24400`.)"
msgstr ""
"Добавлен набор новых функций для проверки :term:`coroutine function "
"<coroutine function>` и :term:`coroutine object <coroutine>`: :func:"
"`~inspect.iscoroutine`, :func:`~inspect. iscoroutinefunction`, :func:"
"`~inspect.isawaitable`, :func:`~inspect.getcoroutinelocals` и :func:"
"`~inspect.getcoroutinestate`. (Добавлено Юрием Селивановым в :issue:`24017` "
"и :issue:`24400`.)"

#: ../../whatsnew/3.5.rst:1319
msgid ""
"The :func:`~inspect.stack`, :func:`~inspect.trace`, :func:`~inspect."
"getouterframes`, and :func:`~inspect.getinnerframes` functions now return a "
"list of named tuples. (Contributed by Daniel Shahaf in :issue:`16808`.)"
msgstr ""
"Функции :func:`~inspect.stack`, :func:`~inspect.trace`, :func:`~inspect."
"getouterframes` и :func:`~inspect.getinnerframes` теперь возвращают список "
"именованных кортежей. (Предоставлено Дэниелом Шахафом в :issue:`16808`.)"

#: ../../whatsnew/3.5.rst:1326
msgid "io"
msgstr "io"

#: ../../whatsnew/3.5.rst:1328
msgid ""
"A new :meth:`BufferedIOBase.readinto1() <io.BufferedIOBase.readinto1>` "
"method, that uses at most one call to the underlying raw stream's :meth:"
"`RawIOBase.read() <io.RawIOBase.read>` or :meth:`RawIOBase.readinto() <io."
"RawIOBase.readinto>` methods. (Contributed by Nikolaus Rath in :issue:"
"`20578`.)"
msgstr ""
"Новый метод :meth:`BufferedIOBase.readinto1() <io.BufferedIOBase."
"readinto1>`, который использует не более одного вызова :meth:`RawIOBase."
"read() базового необработанного потока <io.RawIOBase.read>` или :meth:"
"`RawIOBase.readinto() <io.RawIOBase.readinto>` методы. (Предоставлено "
"Николаусом Ратом в :issue:`20578`.)"

#: ../../whatsnew/3.5.rst:1336
msgid "ipaddress"
msgstr "ipaddress"

#: ../../whatsnew/3.5.rst:1338
msgid ""
"Both the :class:`~ipaddress.IPv4Network` and :class:`~ipaddress.IPv6Network` "
"classes now accept an ``(address, netmask)`` tuple argument, so as to easily "
"construct network objects from existing addresses::"
msgstr ""
"Оба класса :class:`~ipaddress.IPv4Network` и :class:`~ipaddress.IPv6Network` "
"теперь принимают аргумент-кортеж ``(адрес, сетевая маска)``, чтобы можно "
"было легко создавать сетевые объекты из существующих адресов:"

#: ../../whatsnew/3.5.rst:1348
msgid "(Contributed by Peter Moody and Antoine Pitrou in :issue:`16531`.)"
msgstr "(Предоставлено Питером Муди и Антуаном Питру в :issue:`16531`.)"

#: ../../whatsnew/3.5.rst:1350
msgid ""
"A new :attr:`~ipaddress.IPv4Network.reverse_pointer` attribute for the :"
"class:`~ipaddress.IPv4Network` and :class:`~ipaddress.IPv6Network` classes "
"returns the name of the reverse DNS PTR record::"
msgstr ""
"Новый атрибут :attr:`~ipaddress.IPv4Network.reverse_pointer` для классов :"
"class:`~ipaddress.IPv4Network` и :class:`~ipaddress.IPv6Network` возвращает "
"имя обратной DNS-записи PTR::"

#: ../../whatsnew/3.5.rst:1362
msgid "(Contributed by Leon Weber in :issue:`20480`.)"
msgstr "(Предоставлено Леоном Вебером в :issue:`20480`.)"

#: ../../whatsnew/3.5.rst:1366
msgid "json"
msgstr "json"

#: ../../whatsnew/3.5.rst:1368
msgid ""
"The :mod:`json.tool` command line interface now preserves the order of keys "
"in JSON objects passed in input.  The new ``--sort-keys`` option can be used "
"to sort the keys alphabetically. (Contributed by Berker Peksag in :issue:"
"`21650`.)"
msgstr ""
"Интерфейс командной строки :mod:`json.tool` теперь сохраняет порядок ключей "
"в объектах JSON, передаваемых на входе. Новую опцию ``--sort-keys`` можно "
"использовать для сортировки ключей в алфавитном порядке. (Предоставлено "
"Беркером Пексагом в :issue:`21650`.)"

#: ../../whatsnew/3.5.rst:1373
msgid ""
"JSON decoder now raises :exc:`~json.JSONDecodeError` instead of :exc:"
"`ValueError` to provide better context information about the error. "
"(Contributed by Serhiy Storchaka in :issue:`19361`.)"
msgstr ""
"Декодер JSON теперь вызывает :exc:`~json.JSONDecodeError` вместо :exc:"
"`ValueError`, чтобы предоставить более точную контекстную информацию об "
"ошибке. (Предоставлено Сергеем Сторчакой в ​​:issue:`19361`.)"

#: ../../whatsnew/3.5.rst:1379
msgid "linecache"
msgstr "linecache"

#: ../../whatsnew/3.5.rst:1381
msgid ""
"A new :func:`~linecache.lazycache` function can be used to capture "
"information about a non-file-based module to permit getting its lines later "
"via :func:`~linecache.getline`. This avoids doing I/O until a line is "
"actually needed, without having to carry the module globals around "
"indefinitely. (Contributed by Robert Collins in :issue:`17911`.)"
msgstr ""
"Новую функцию :func:`~linecache.lazycache` можно использовать для сбора "
"информации о модуле, не основанном на файлах, чтобы можно было получить его "
"строки позже через :func:`~linecache.getline`. Это позволяет избежать ввода-"
"вывода до тех пор, пока строка действительно не понадобится, без "
"необходимости бесконечно переносить глобальные переменные модуля. "
"(Предоставлено Робертом Коллинзом в :issue:`17911`.)"

#: ../../whatsnew/3.5.rst:1389
msgid "locale"
msgstr "локаль"

#: ../../whatsnew/3.5.rst:1391
msgid ""
"A new :func:`~locale.delocalize` function can be used to convert a string "
"into a normalized number string, taking the ``LC_NUMERIC`` settings into "
"account::"
msgstr ""
"Новую функцию :func:`~locale.delocalize` можно использовать для "
"преобразования строки в нормализованную числовую строку с учетом настроек "
"``LC_NUMERIC``:"

#: ../../whatsnew/3.5.rst:1404
msgid "(Contributed by Cédric Krier in :issue:`13918`.)"
msgstr "(Предоставлено Седриком Криером в :issue:`13918`.)"

#: ../../whatsnew/3.5.rst:1408
msgid "logging"
msgstr "логирование"

#: ../../whatsnew/3.5.rst:1410
msgid ""
"All logging methods (:class:`~logging.Logger` :meth:`~logging.Logger.log`, :"
"meth:`~logging.Logger.exception`, :meth:`~logging.Logger.critical`, :meth:"
"`~logging.Logger.debug`, etc.), now accept exception instances as an "
"*exc_info* argument, in addition to boolean values and exception tuples::"
msgstr ""
"Все методы журналирования (:class:`~logging.Logger` :meth:`~logging.Logger."
"log`, :meth:`~logging.Logger.Exception`, :meth:`~logging.Logger.critical`, : "
"meth:`~logging.Logger.debug` и т. д.), теперь принимают экземпляры "
"исключений в качестве аргумента *exc_info* в дополнение к логическим "
"значениям и кортежам исключений::"

#: ../../whatsnew/3.5.rst:1423
msgid "(Contributed by Yury Selivanov in :issue:`20537`.)"
msgstr "(Contributed by Yury Selivanov in :issue:`20537`.)"

#: ../../whatsnew/3.5.rst:1425
msgid ""
"The :class:`handlers.HTTPHandler <logging.handlers.HTTPHandler>` class now "
"accepts an optional :class:`ssl.SSLContext` instance to configure SSL "
"settings used in an HTTP connection. (Contributed by Alex Gaynor in :issue:"
"`22788`.)"
msgstr ""
"Класс :class:`handlers.HTTPHandler <logging.handlers.HTTPHandler>` теперь "
"принимает необязательный экземпляр :class:`ssl.SSLContext` для настройки "
"параметров SSL, используемых в HTTP-соединении. (Предоставлено Алексом "
"Гейнором в :issue:`22788`.)"

#: ../../whatsnew/3.5.rst:1430
msgid ""
"The :class:`handlers.QueueListener <logging.handlers.QueueListener>` class "
"now takes a *respect_handler_level* keyword argument which, if set to "
"``True``, will pass messages to handlers taking handler levels into account. "
"(Contributed by Vinay Sajip.)"
msgstr ""
"Класс :class:`handlers.QueueListener <logging.handlers.QueueListener>` "
"теперь принимает аргумент ключевого слова *respect_handler_level*, который, "
"если установлено значение ``True``, будет передавать сообщения обработчикам "
"с учетом уровней обработчиков. (Предоставлено Винаем Саджипом.)"

#: ../../whatsnew/3.5.rst:1437
msgid "lzma"
msgstr "lzma"

#: ../../whatsnew/3.5.rst:1439
msgid ""
"The :meth:`LZMADecompressor.decompress() <lzma.LZMADecompressor.decompress>` "
"method now accepts an optional *max_length* argument to limit the maximum "
"size of decompressed data. (Contributed by Martin Panter in :issue:`15955`.)"
msgstr ""
"Метод :meth:`LZMADecompressor.decompress() <lzma.LZMADecompressor."
"decompress>` теперь принимает необязательный аргумент *max_length* для "
"ограничения максимального размера распакованных данных. (Предоставлено "
"Мартином Пантером в :issue:`15955`.)"

#: ../../whatsnew/3.5.rst:1446
msgid "math"
msgstr "математика"

#: ../../whatsnew/3.5.rst:1448
msgid ""
"Two new constants have been added to the :mod:`math` module: :data:`~math."
"inf` and :data:`~math.nan`.  (Contributed by Mark Dickinson in :issue:"
"`23185`.)"
msgstr ""
"В модуль :mod:`math` были добавлены две новые константы: :data:`~math.inf` "
"и :data:`~math.nan`. (Предоставлено Марком Дикинсоном в :issue:`23185`.)"

#: ../../whatsnew/3.5.rst:1451
msgid ""
"A new function :func:`~math.isclose` provides a way to test for approximate "
"equality. (Contributed by Chris Barker and Tal Einat in :issue:`24270`.)"
msgstr ""
"Новая функция :func:`~math.isclose` позволяет проверить приблизительное "
"равенство. (Предоставлено Крисом Баркером и Талом Эйнатом в :issue:`24270`.)"

#: ../../whatsnew/3.5.rst:1454
msgid ""
"A new :func:`~math.gcd` function has been added.  The :func:`fractions.gcd` "
"function is now deprecated. (Contributed by Mark Dickinson and Serhiy "
"Storchaka in :issue:`22486`.)"
msgstr ""
"Добавлена ​​новая функция :func:`~math.gcd`. Функция :func:`fractions.gcd` "
"устарела. (Предоставлено Марком Дикинсоном и Сергеем Сторчакой в ​​:issue:"
"`22486`.)"

#: ../../whatsnew/3.5.rst:1460
msgid "multiprocessing"
msgstr "multiprocessing"

#: ../../whatsnew/3.5.rst:1462
msgid ""
":func:`sharedctypes.synchronized() <multiprocessing.sharedctypes."
"synchronized>` objects now support the :term:`context manager` protocol. "
"(Contributed by Charles-François Natali in :issue:`21565`.)"
msgstr ""
"Объекты :func:`sharedctypes.synchronized() <multiprocessing.sharedctypes."
"synchronized>` теперь поддерживают протокол :term:`context Manager`. "
"(Предоставлено Шарлем-Франсуа Натали в :issue:`21565`.)"

#: ../../whatsnew/3.5.rst:1468
msgid "operator"
msgstr "оператор"

#: ../../whatsnew/3.5.rst:1470
msgid ""
":func:`~operator.attrgetter`, :func:`~operator.itemgetter`, and :func:"
"`~operator.methodcaller` objects now support pickling. (Contributed by Josh "
"Rosenberg and Serhiy Storchaka in :issue:`22955`.)"
msgstr ""
"Объекты :func:`~operator.attrgetter`, :func:`~operator.itemgetter` и :func:"
"`~operator.methodcaller` теперь поддерживают травление. (Предоставлено "
"Джошем Розенбергом и Сергеем Сторчакой в ​​:issue:`22955`.)"

#: ../../whatsnew/3.5.rst:1474
msgid ""
"New :func:`~operator.matmul` and :func:`~operator.imatmul` functions to "
"perform matrix multiplication. (Contributed by Benjamin Peterson in :issue:"
"`21176`.)"
msgstr ""
"Новые функции :func:`~operator.matmul` и :func:`~operator.imatmul` для "
"выполнения умножения матриц. (Предоставлено Бенджамином Петерсоном в :issue:"
"`21176`.)"

#: ../../whatsnew/3.5.rst:1480
msgid "os"
msgstr "os"

#: ../../whatsnew/3.5.rst:1482
msgid ""
"The new :func:`~os.scandir` function returning an iterator of :class:`~os."
"DirEntry` objects has been added.  If possible, :func:`~os.scandir` extracts "
"file attributes while scanning a directory, removing the need to perform "
"subsequent system calls to determine file type or attributes, which may "
"significantly improve performance.  (Contributed by Ben Hoyt with the help "
"of Victor Stinner in :issue:`22524`.)"
msgstr ""
"Добавлена ​​новая функция :func:`~os.scandir`, возвращающая итератор объектов :"
"class:`~os.DirEntry`. Если возможно, :func:`~os.scandir` извлекает атрибуты "
"файла при сканировании каталога, устраняя необходимость выполнения "
"последующих системных вызовов для определения типа или атрибутов файла, что "
"может значительно повысить производительность. (Предоставлено Беном Хойтом "
"при помощи Виктора Стиннера в :issue:`22524`.)"

#: ../../whatsnew/3.5.rst:1489
msgid ""
"On Windows, a new :attr:`stat_result.st_file_attributes <os.stat_result."
"st_file_attributes>` attribute is now available.  It corresponds to the "
"``dwFileAttributes`` member of the ``BY_HANDLE_FILE_INFORMATION`` structure "
"returned by ``GetFileInformationByHandle()``.  (Contributed by Ben Hoyt in :"
"issue:`21719`.)"
msgstr ""
"В Windows теперь доступен новый атрибут :attr:`stat_result."
"st_file_attributes <os.stat_result.st_file_attributes>`. Он соответствует "
"члену dwFileAttributes структуры BY_HANDLE_FILE_INFORMATION, возвращаемой "
"функцией GetFileInformationByHandle(). (Предоставлено Беном Хойтом в :issue:"
"`21719`.)"

#: ../../whatsnew/3.5.rst:1495
msgid ""
"The :func:`~os.urandom` function now uses the ``getrandom()`` syscall on "
"Linux 3.17 or newer, and ``getentropy()`` on OpenBSD 5.6 and newer, removing "
"the need to use ``/dev/urandom`` and avoiding failures due to potential file "
"descriptor exhaustion.  (Contributed by Victor Stinner in :issue:`22181`.)"
msgstr ""
"Функция :func:`~os.urandom` теперь использует системный вызов "
"``getrandom()`` в Linux 3.17 или новее и ``getentropy()`` в OpenBSD 5.6 и "
"новее, устраняя необходимость использования ``/ dev/urandom`` и избежать "
"сбоев из-за потенциального исчерпания файлового дескриптора. (Предоставлено "
"Виктором Стиннером в :issue:`22181`.)"

#: ../../whatsnew/3.5.rst:1500
msgid ""
"New :func:`~os.get_blocking` and :func:`~os.set_blocking` functions allow "
"getting and setting a file descriptor's blocking mode (:const:`~os."
"O_NONBLOCK`.) (Contributed by Victor Stinner in :issue:`22054`.)"
msgstr ""
"Новые функции :func:`~os.get_blocking` и :func:`~os.set_blocking` позволяют "
"получать и устанавливать режим блокировки файлового дескриптора (:const:`~os."
"O_NONBLOCK`.) (Внесено Виктором Стиннером в :issue :`22054`.)"

#: ../../whatsnew/3.5.rst:1504
msgid ""
"The :func:`~os.truncate` and :func:`~os.ftruncate` functions are now "
"supported on Windows.  (Contributed by Steve Dower in :issue:`23668`.)"
msgstr ""
"Функции :func:`~os.truncate` и :func:`~os.ftruncate` теперь поддерживаются в "
"Windows. (Предоставлено Стивом Дауэром в :issue:`23668`.)"

#: ../../whatsnew/3.5.rst:1507
msgid ""
"There is a new :func:`os.path.commonpath` function returning the longest "
"common sub-path of each passed pathname.  Unlike the :func:`os.path."
"commonprefix` function, it always returns a valid path::"
msgstr ""
"Появилась новая функция :func:`os.path.commonpath`, возвращающая самый "
"длинный общий подпуть каждого переданного пути. В отличие от функции :func:"
"`os.path.commonprefix`, она всегда возвращает действительный путь::"

#: ../../whatsnew/3.5.rst:1518
msgid "(Contributed by Rafik Draoui and Serhiy Storchaka in :issue:`10395`.)"
msgstr "(Предоставлено Рафиком Драуи и Сергеем Сторчакой в ​​:issue:`10395`.)"

#: ../../whatsnew/3.5.rst:1522
msgid "pathlib"
msgstr "pathlib"

#: ../../whatsnew/3.5.rst:1524
msgid ""
"The new :meth:`Path.samefile() <pathlib.Path.samefile>` method can be used "
"to check whether the path points to the same file as another path, which can "
"be either another :class:`~pathlib.Path` object, or a string::"
msgstr ""
"Новый метод :meth:`Path.samefile() <pathlib.Path.samefile>` можно "
"использовать для проверки того, указывает ли путь на тот же файл, что и "
"другой путь, который может быть либо другим :class:`~pathlib.Path ` объект "
"или строка::"

#: ../../whatsnew/3.5.rst:1534
msgid "(Contributed by Vajrasky Kok and Antoine Pitrou in :issue:`19775`.)"
msgstr "(Предоставлено Ваджраски Коком и Антуаном Питру в :issue:`19775`.)"

#: ../../whatsnew/3.5.rst:1536
msgid ""
"The :meth:`Path.mkdir() <pathlib.Path.mkdir>` method now accepts a new "
"optional *exist_ok* argument to match ``mkdir -p`` and :func:`os.makedirs` "
"functionality.  (Contributed by Berker Peksag in :issue:`21539`.)"
msgstr ""
"Метод :meth:`Path.mkdir() <pathlib.Path.mkdir>` теперь принимает новый "
"необязательный аргумент *exist_ok*, соответствующий функциональности ``mkdir "
"-p`` и :func:`os.madeirs`. (Предоставлено Беркером Пексагом в :issue:"
"`21539`.)"

#: ../../whatsnew/3.5.rst:1540
msgid ""
"There is a new :meth:`Path.expanduser() <pathlib.Path.expanduser>` method to "
"expand ``~`` and ``~user`` prefixes.  (Contributed by Serhiy Storchaka and "
"Claudiu Popa in :issue:`19776`.)"
msgstr ""
"Появился новый метод :meth:`Path.expanduser() <pathlib.Path.expanduser>` для "
"расширения префиксов ``~`` и ``~user``. (Предоставлено Сергеем Сторчакой и "
"Клаудиу Попа в :issue:`19776`.)"

#: ../../whatsnew/3.5.rst:1544
msgid ""
"A new :meth:`Path.home() <pathlib.Path.home>` class method can be used to "
"get a :class:`~pathlib.Path` instance representing the user’s home "
"directory. (Contributed by Victor Salgado and Mayank Tripathi in :issue:"
"`19777`.)"
msgstr ""
"Новый метод класса :meth:`Path.home() <pathlib.Path.home>` можно "
"использовать для получения экземпляра :class:`~pathlib.Path`, "
"представляющего домашний каталог пользователя. (Предоставлено Виктором "
"Сальгадо и Маянк Трипати в :issue:`19777`.)"

#: ../../whatsnew/3.5.rst:1549
msgid ""
"New :meth:`Path.write_text() <pathlib.Path.write_text>`, :meth:`Path."
"read_text() <pathlib.Path.read_text>`, :meth:`Path.write_bytes() <pathlib."
"Path.write_bytes>`, :meth:`Path.read_bytes() <pathlib.Path.read_bytes>` "
"methods to simplify read/write operations on files."
msgstr ""
"Новые :meth:`Path.write_text() <pathlib.Path.write_text>`, :meth:`Path."
"read_text() <pathlib.Path.read_text>`, :meth:`Path.write_bytes() <pathlib."
"Path .write_bytes>`, :meth:`Path.read_bytes() <pathlib.Path.read_bytes>` "
"методы для упрощения операций чтения/записи файлов."

#: ../../whatsnew/3.5.rst:1555
msgid ""
"The following code snippet will create or rewrite existing file ``~/"
"spam42``::"
msgstr ""
"Следующий фрагмент кода создаст или перезапишет существующий файл ``~/"
"spam42``::"

#: ../../whatsnew/3.5.rst:1563
msgid "(Contributed by Christopher Welborn in :issue:`20218`.)"
msgstr "(Предоставлено Кристофером Велборном в :issue:`20218`.)"

#: ../../whatsnew/3.5.rst:1567
msgid "pickle"
msgstr "pickle"

#: ../../whatsnew/3.5.rst:1569
msgid ""
"Nested objects, such as unbound methods or nested classes, can now be "
"pickled using :ref:`pickle protocols <pickle-protocols>` older than protocol "
"version 4. Protocol version 4 already supports these cases.  (Contributed by "
"Serhiy Storchaka in :issue:`23611`.)"
msgstr ""
"Вложенные объекты, такие как несвязанные методы или вложенные классы, теперь "
"можно пиклировать с помощью :ref:`pickle протоколов <pickle-protocols>` "
"старше версии протокола 4. Протокол версии 4 уже поддерживает эти случаи. "
"(Предоставлено Сергеем Сторчакой в ​​:issue:`23611`.)"

#: ../../whatsnew/3.5.rst:1576
msgid "poplib"
msgstr "poplib"

#: ../../whatsnew/3.5.rst:1578
msgid ""
"A new :meth:`POP3.utf8() <poplib.POP3.utf8>` command enables :rfc:`6856` "
"(Internationalized Email) support, if a POP server supports it. (Contributed "
"by Milan OberKirch in :issue:`21804`.)"
msgstr ""
"Новая команда :meth:`POP3.utf8() <poplib.POP3.utf8>` включает поддержку :rfc:"
"`6856` (международная электронная почта), если POP-сервер поддерживает ее. "
"(Предоставлено Миланом ОберКирхом в :issue:`21804`.)"

#: ../../whatsnew/3.5.rst:1584
msgid "re"
msgstr "re"

#: ../../whatsnew/3.5.rst:1586
msgid ""
"References and conditional references to groups with fixed length are now "
"allowed in lookbehind assertions::"
msgstr ""
"Ссылки и условные ссылки на группы фиксированной длины теперь разрешены в "
"утверждениях просмотра назад:"

#: ../../whatsnew/3.5.rst:1596
msgid "(Contributed by Serhiy Storchaka in :issue:`9179`.)"
msgstr "(Предоставлено Сергеем Сторчакой в ​​:issue:`9179`.)"

#: ../../whatsnew/3.5.rst:1598
msgid ""
"The number of capturing groups in regular expressions is no longer limited "
"to 100.  (Contributed by Serhiy Storchaka in :issue:`22437`.)"
msgstr ""
"Количество групп захвата в регулярных выражениях больше не ограничивается "
"100. (Размещено Сергеем Сторчакой в ​​:issue:`22437`.)"

#: ../../whatsnew/3.5.rst:1601
msgid ""
"The :func:`~re.sub` and :func:`~re.subn` functions now replace unmatched "
"groups with empty strings instead of raising an exception. (Contributed by "
"Serhiy Storchaka in :issue:`1519638`.)"
msgstr ""
"Функции :func:`~re.sub` и :func:`~re.subn` теперь заменяют несовпадающие "
"группы пустыми строками вместо того, чтобы вызывать исключение. "
"(Предоставлено Сергеем Сторчакой в ​​:issue:`1519638`.)"

#: ../../whatsnew/3.5.rst:1605
msgid ""
"The :class:`re.error` exceptions have new attributes, :attr:`~re.error."
"msg`, :attr:`~re.error.pattern`, :attr:`~re.error.pos`, :attr:`~re.error."
"lineno`, and :attr:`~re.error.colno`, that provide better context "
"information about the error::"
msgstr ""
"Исключения :class:`re.error` имеют новые атрибуты: :attr:`~re.error.msg`, :"
"attr:`~re.error.pattern`, :attr:`~re.error.pos`, :attr:`~re.error.lineno` и :"
"attr:`~re.error.colno`, которые предоставляют более точную контекстную "
"информацию об ошибке::"

#: ../../whatsnew/3.5.rst:1619
msgid "(Contributed by Serhiy Storchaka in :issue:`22578`.)"
msgstr "(Предоставлено Сергеем Сторчакой в ​​:issue:`22578`.)"

#: ../../whatsnew/3.5.rst:1623
msgid "readline"
msgstr "readline"

#: ../../whatsnew/3.5.rst:1625
msgid ""
"A new :func:`~readline.append_history_file` function can be used to append "
"the specified number of trailing elements in history to the given file. "
"(Contributed by Bruno Cauet in :issue:`22940`.)"
msgstr ""
"Новую функцию :func:`~readline.append_history_file` можно использовать для "
"добавления указанного количества конечных элементов истории в данный файл. "
"(Предоставлено Бруно Коэ в :issue:`22940`.)"

#: ../../whatsnew/3.5.rst:1631
msgid "selectors"
msgstr "селекторы"

#: ../../whatsnew/3.5.rst:1633
msgid ""
"The new :class:`~selectors.DevpollSelector` supports efficient ``/dev/poll`` "
"polling on Solaris. (Contributed by Giampaolo Rodola' in :issue:`18931`.)"
msgstr ""
"Новый :class:`~selectors.DevpollSelector` поддерживает эффективный опрос ``/"
"dev/poll`` в Solaris. (Предоставлено Джампаоло Родолой в :issue:`18931`.)"

#: ../../whatsnew/3.5.rst:1639
msgid "shutil"
msgstr "shutil"

#: ../../whatsnew/3.5.rst:1641
msgid ""
"The :func:`~shutil.move` function now accepts a *copy_function* argument, "
"allowing, for example, the :func:`~shutil.copy` function to be used instead "
"of the default :func:`~shutil.copy2` if there is a need to ignore file "
"metadata when moving. (Contributed by Claudiu Popa in :issue:`19840`.)"
msgstr ""
"Функция :func:`~shutil.move` теперь принимает аргумент *copy_function*, что "
"позволяет, например, использовать функцию :func:`~shutil.copy` вместо "
"стандартной :func:`~shutil.copy2. ` если есть необходимость игнорировать "
"метаданные файла при перемещении. (Предоставлено Клаудиу Попа в :issue:"
"`19840`.)"

#: ../../whatsnew/3.5.rst:1647
msgid ""
"The :func:`~shutil.make_archive` function now supports the *xztar* format. "
"(Contributed by Serhiy Storchaka in :issue:`5411`.)"
msgstr ""
"Функция :func:`~shutil.make_archive` теперь поддерживает формат *xztar*. "
"(Предоставлено Сергеем Сторчакой в ​​:issue:`5411`.)"

#: ../../whatsnew/3.5.rst:1652
msgid "signal"
msgstr "сигнал"

#: ../../whatsnew/3.5.rst:1654
msgid ""
"On Windows, the :func:`~signal.set_wakeup_fd` function now also supports "
"socket handles.  (Contributed by Victor Stinner in :issue:`22018`.)"
msgstr ""
"В Windows функция :func:`~signal.set_wakeup_fd` теперь также поддерживает "
"дескрипторы сокетов. (Предоставлено Виктором Стиннером в :issue:`22018`.)"

#: ../../whatsnew/3.5.rst:1657
msgid ""
"Various ``SIG*`` constants in the :mod:`signal` module have been converted "
"into :mod:`Enums <enum>`.  This allows meaningful names to be printed during "
"debugging, instead of integer \"magic numbers\". (Contributed by Giampaolo "
"Rodola' in :issue:`21076`.)"
msgstr ""
"Различные константы ``SIG*`` в модуле :mod:`signal` были преобразованы в :"
"mod:`Enums <enum>`. Это позволяет печатать осмысленные имена во время "
"отладки вместо целых «магических чисел». (Предоставлено Джампаоло Родолой в :"
"issue:`21076`.)"

#: ../../whatsnew/3.5.rst:1664
msgid "smtpd"
msgstr "smtpd"

#: ../../whatsnew/3.5.rst:1666
msgid ""
"Both the :class:`~smtpd.SMTPServer` and :class:`~smtpd.SMTPChannel` classes "
"now accept a *decode_data* keyword argument to determine if the ``DATA`` "
"portion of the SMTP transaction is decoded using the ``\"utf-8\"`` codec or "
"is instead provided to the :meth:`SMTPServer.process_message() <smtpd."
"SMTPServer.process_message>` method as a byte string.  The default is "
"``True`` for backward compatibility reasons, but will change to ``False`` in "
"Python 3.6.  If *decode_data* is set to ``False``, the ``process_message`` "
"method must be prepared to accept keyword arguments. (Contributed by Maciej "
"Szulik in :issue:`19662`.)"
msgstr ""

#: ../../whatsnew/3.5.rst:1677
msgid ""
"The :class:`~smtpd.SMTPServer` class now advertises the ``8BITMIME`` "
"extension (:rfc:`6152`) if *decode_data* has been set ``True``.  If the "
"client specifies ``BODY=8BITMIME`` on the ``MAIL`` command, it is passed to :"
"meth:`SMTPServer.process_message() <smtpd.SMTPServer.process_message>` via "
"the *mail_options* keyword. (Contributed by Milan Oberkirch and R.  David "
"Murray in :issue:`21795`.)"
msgstr ""

#: ../../whatsnew/3.5.rst:1684
msgid ""
"The :class:`~smtpd.SMTPServer` class now also supports the ``SMTPUTF8`` "
"extension (:rfc:`6531`: Internationalized Email).  If the client specified "
"``SMTPUTF8 BODY=8BITMIME`` on the ``MAIL`` command, they are passed to :meth:"
"`SMTPServer.process_message() <smtpd.SMTPServer.process_message>` via the "
"*mail_options* keyword.  It is the responsibility of the ``process_message`` "
"method to correctly handle the ``SMTPUTF8`` data. (Contributed by Milan "
"Oberkirch in :issue:`21725`.)"
msgstr ""

#: ../../whatsnew/3.5.rst:1692
msgid ""
"It is now possible to provide, directly or via name resolution, IPv6 "
"addresses in the :class:`~smtpd.SMTPServer` constructor, and have it "
"successfully connect.  (Contributed by Milan Oberkirch in :issue:`14758`.)"
msgstr ""

#: ../../whatsnew/3.5.rst:1698
msgid "smtplib"
msgstr "smtplib"

#: ../../whatsnew/3.5.rst:1700
msgid ""
"A new :meth:`SMTP.auth() <smtplib.SMTP.auth>` method provides a convenient "
"way to implement custom authentication mechanisms. (Contributed by Milan "
"Oberkirch in :issue:`15014`.)"
msgstr ""
"Новый метод :meth:`SMTP.auth() <smtplib.SMTP.auth>` предоставляет удобный "
"способ реализации пользовательских механизмов аутентификации. (Предоставлено "
"Миланом Оберкирхом в :issue:`15014`.)"

#: ../../whatsnew/3.5.rst:1704
msgid ""
"The :meth:`SMTP.set_debuglevel() <smtplib.SMTP.set_debuglevel>` method now "
"accepts an additional debuglevel (2), which enables timestamps in debug "
"messages. (Contributed by Gavin Chappell and Maciej Szulik in :issue:"
"`16914`.)"
msgstr ""
"Метод :meth:`SMTP.set_debuglevel() <smtplib.SMTP.set_debuglevel>` теперь "
"принимает дополнительный уровень отладки (2), который включает метки времени "
"в сообщениях отладки. (Предоставлено Гэвином Чаппеллом и Мацеем Шуликом в :"
"issue:`16914`.)"

#: ../../whatsnew/3.5.rst:1708
msgid ""
"Both the :meth:`SMTP.sendmail() <smtplib.SMTP.sendmail>` and :meth:`SMTP."
"send_message() <smtplib.SMTP.send_message>` methods now support :rfc:`6531` "
"(SMTPUTF8). (Contributed by Milan Oberkirch and R. David Murray in :issue:"
"`22027`.)"
msgstr ""
"Оба метода :meth:`SMTP.sendmail() <smtplib.SMTP.sendmail>` и :meth:`SMTP."
"send_message() <smtplib.SMTP.send_message>` теперь поддерживают :rfc:`6531` "
"(SMTPUTF8). (Предоставлено Миланом Оберкирхом и Р. Дэвидом Мюрреем в :issue:"
"`22027`.)"

#: ../../whatsnew/3.5.rst:1715
msgid "sndhdr"
msgstr "sndhdr"

#: ../../whatsnew/3.5.rst:1717
msgid ""
"The :func:`~sndhdr.what` and :func:`~sndhdr.whathdr` functions  now return "
"a :func:`~collections.namedtuple`.  (Contributed by Claudiu Popa in :issue:"
"`18615`.)"
msgstr ""
"Функции :func:`~sndhdr.what` и :func:`~sndhdr.whathdr` теперь возвращают :"
"func:`~collections.namedtuple`. (Предоставлено Клаудиу Попа в :issue:"
"`18615`.)"

#: ../../whatsnew/3.5.rst:1723
msgid "socket"
msgstr "сокет"

#: ../../whatsnew/3.5.rst:1725
msgid ""
"Functions with timeouts now use a monotonic clock, instead of a system "
"clock. (Contributed by Victor Stinner in :issue:`22043`.)"
msgstr ""
"Функции с таймаутами теперь используют монотонные часы вместо системных "
"часов. (Предоставлено Виктором Стиннером в :issue:`22043`.)"

#: ../../whatsnew/3.5.rst:1728
msgid ""
"A new :meth:`socket.sendfile() <socket.socket.sendfile>` method allows "
"sending a file over a socket by using the high-performance :func:`os."
"sendfile` function on UNIX, resulting in uploads being from 2 to 3 times "
"faster than when using plain :meth:`socket.send() <socket.socket.send>`. "
"(Contributed by Giampaolo Rodola' in :issue:`17552`.)"
msgstr ""
"Новый метод :meth:`socket.sendfile() <socket.socket.sendfile>` позволяет "
"отправлять файл через сокет с помощью высокопроизводительной функции :func:"
"`os.sendfile` в UNIX, в результате чего загрузка осуществляется из В 2–3 "
"раза быстрее, чем при использовании обычного :meth:`socket.send() <socket."
"socket.send>`. (Предоставлено Джампаоло Родолой в :issue:`17552`.)"

#: ../../whatsnew/3.5.rst:1734
msgid ""
"The :meth:`socket.sendall() <socket.socket.sendall>` method no longer resets "
"the socket timeout every time bytes are received or sent.  The socket "
"timeout is now the maximum total duration to send all data. (Contributed by "
"Victor Stinner in :issue:`23853`.)"
msgstr ""
"Метод :meth:`socket.sendall() <socket.socket.sendall>` больше не сбрасывает "
"таймаут сокета каждый раз, когда принимаются или отправляются байты. Тайм-"
"аут сокета теперь равен максимальной общей продолжительности отправки всех "
"данных. (Предоставлено Виктором Стиннером в :issue:`23853`.)"

#: ../../whatsnew/3.5.rst:1739
msgid ""
"The *backlog* argument of the :meth:`socket.listen() <socket.socket.listen>` "
"method is now optional.  By default it is set to :data:`SOMAXCONN <socket."
"SOMAXCONN>` or to ``128``, whichever is less. (Contributed by Charles-"
"François Natali in :issue:`21455`.)"
msgstr ""
"Аргумент *backlog* метода :meth:`socket.listen() <socket.socket.listen>` "
"теперь является необязательным. По умолчанию для него установлено значение :"
"data:`SOMAXCONN <socket.SOMAXCONN>` или ``128``, в зависимости от того, "
"какое значение меньше. (Предоставлено Шарлем-Франсуа Натали в :issue:"
"`21455`.)"

#: ../../whatsnew/3.5.rst:1746
msgid "ssl"
msgstr "ssl"

#: ../../whatsnew/3.5.rst:1751
msgid "Memory BIO Support"
msgstr "Поддержка памяти BIO"

#: ../../whatsnew/3.5.rst:1753
msgid "(Contributed by Geert Jansen in :issue:`21965`.)"
msgstr "(Предоставлено Гертом Янсеном в :issue:`21965`.)"

#: ../../whatsnew/3.5.rst:1755
msgid ""
"The new :class:`~ssl.SSLObject` class has been added to provide SSL protocol "
"support for cases when the network I/O capabilities of :class:`~ssl."
"SSLSocket` are not necessary or are suboptimal.  ``SSLObject`` represents an "
"SSL protocol instance, but does not implement any network I/O methods, and "
"instead provides a memory buffer interface.  The new :class:`~ssl.MemoryBIO` "
"class can be used to pass data between Python and an SSL protocol instance."
msgstr ""
"Новый класс :class:`~ssl.SSLObject` был добавлен для обеспечения поддержки "
"протокола SSL в случаях, когда возможности сетевого ввода-вывода :class:"
"`~ssl.SSLSocket` не нужны или неоптимальны. ``SSLObject`` представляет собой "
"экземпляр протокола SSL, но не реализует никаких сетевых методов ввода-"
"вывода, а вместо этого предоставляет интерфейс буфера памяти. Новый класс :"
"class:`~ssl.MemoryBIO` можно использовать для передачи данных между Python и "
"экземпляром протокола SSL."

#: ../../whatsnew/3.5.rst:1762
msgid ""
"The memory BIO SSL support is primarily intended to be used in frameworks "
"implementing asynchronous I/O for which :class:`~ssl.SSLSocket`'s readiness "
"model (\"select/poll\") is inefficient."
msgstr ""
"Поддержка BIO SSL в памяти в первую очередь предназначена для использования "
"в средах, реализующих асинхронный ввод-вывод, для которых модель готовности :"
"class:`~ssl.SSLSocket` («выбор/опрос») неэффективна."

#: ../../whatsnew/3.5.rst:1766
msgid ""
"A new :meth:`SSLContext.wrap_bio() <ssl.SSLContext.wrap_bio>` method can be "
"used to create a new ``SSLObject`` instance."
msgstr ""
"Новый метод :meth:`SSLContext.wrap_bio() <ssl.SSLContext.wrap_bio>` можно "
"использовать для создания нового экземпляра ``SSLObject``."

#: ../../whatsnew/3.5.rst:1771
msgid "Application-Layer Protocol Negotiation Support"
msgstr "Поддержка согласования протоколов уровня приложений"

#: ../../whatsnew/3.5.rst:1773
msgid "(Contributed by Benjamin Peterson in :issue:`20188`.)"
msgstr "(Предоставлено Бенджамином Петерсоном в :issue:`20188`.)"

#: ../../whatsnew/3.5.rst:1775
msgid ""
"Where OpenSSL support is present, the :mod:`ssl` module now implements the "
"*Application-Layer Protocol Negotiation* TLS extension as described in :rfc:"
"`7301`."
msgstr ""
"Там, где присутствует поддержка OpenSSL, модуль :mod:`ssl` теперь реализует "
"расширение TLS *Application-Layer Protocol Negotiation*, как описано в :rfc:"
"`7301`."

#: ../../whatsnew/3.5.rst:1779
msgid ""
"The new :meth:`SSLContext.set_alpn_protocols() <ssl.SSLContext."
"set_alpn_protocols>` can be used to specify which protocols a socket should "
"advertise during the TLS handshake."
msgstr ""
"Новый :meth:`SSLContext.set_alpn_protocols() <ssl.SSLContext."
"set_alpn_protocols>` можно использовать для указания того, какие протоколы "
"сокет должен объявлять во время установления связи TLS."

#: ../../whatsnew/3.5.rst:1783
msgid ""
"The new :meth:`SSLSocket.selected_alpn_protocol() <ssl.SSLSocket."
"selected_alpn_protocol>` returns the protocol that was selected during the "
"TLS handshake. The :const:`~ssl.HAS_ALPN` flag indicates whether ALPN "
"support is present."
msgstr ""
"Новый :meth:`SSLSocket.selected_alpn_protocol() <ssl.SSLSocket."
"selected_alpn_protocol>` возвращает протокол, который был выбран во время "
"установления связи TLS. Флаг :const:`~ssl.HAS_ALPN` указывает, присутствует "
"ли поддержка ALPN."

#: ../../whatsnew/3.5.rst:1790
msgid "Other Changes"
msgstr "Другие изменения"

#: ../../whatsnew/3.5.rst:1792
msgid ""
"There is a new :meth:`SSLSocket.version() <ssl.SSLSocket.version>` method to "
"query the actual protocol version in use. (Contributed by Antoine Pitrou in :"
"issue:`20421`.)"
msgstr ""
"Появился новый метод :meth:`SSLSocket.version() <ssl.SSLSocket.version>` для "
"запроса фактической используемой версии протокола. (Предоставлено Антуаном "
"Питру в :issue:`20421`.)"

#: ../../whatsnew/3.5.rst:1796
msgid ""
"The :class:`~ssl.SSLSocket` class now implements a :meth:`SSLSocket."
"sendfile() <ssl.SSLSocket.sendfile>` method. (Contributed by Giampaolo "
"Rodola' in :issue:`17552`.)"
msgstr ""
"Класс :class:`~ssl.SSLSocket` теперь реализует метод :meth:`SSLSocket."
"sendfile() <ssl.SSLSocket.sendfile>`. (Предоставлено Джампаоло Родолой в :"
"issue:`17552`.)"

#: ../../whatsnew/3.5.rst:1800
msgid ""
"The :meth:`SSLSocket.send() <ssl.SSLSocket.send>` method now raises either "
"the :exc:`ssl.SSLWantReadError` or :exc:`ssl.SSLWantWriteError` exception on "
"a non-blocking socket if the operation would block. Previously, it would "
"return ``0``.  (Contributed by Nikolaus Rath in :issue:`20951`.)"
msgstr ""
"Метод :meth:`SSLSocket.send() <ssl.SSLSocket.send>` теперь вызывает "
"исключение :exc:`ssl.SSLWantReadError` или :exc:`ssl.SSLWantWriteError` для "
"неблокирующего сокета, если операция заблокировал бы. Раньше он возвращал "
"``0``. (Предоставлено Николаусом Ратом в :issue:`20951`.)"

#: ../../whatsnew/3.5.rst:1805
msgid ""
"The :func:`~ssl.cert_time_to_seconds` function now interprets the input time "
"as UTC and not as local time, per :rfc:`5280`.  Additionally, the return "
"value is always an :class:`int`. (Contributed by Akira Li in :issue:`19940`.)"
msgstr ""
"Функция :func:`~ssl.cert_time_to_секундs` теперь интерпретирует входное "
"время как время в формате UTC, а не как местное время, согласно :rfc:`5280`. "
"Кроме того, возвращаемым значением всегда является :class:`int`. "
"(Предоставлено Акирой Ли в :issue:`19940`.)"

#: ../../whatsnew/3.5.rst:1809
msgid ""
"New :meth:`SSLObject.shared_ciphers() <ssl.SSLObject.shared_ciphers>` and :"
"meth:`SSLSocket.shared_ciphers() <ssl.SSLSocket.shared_ciphers>` methods "
"return the list of ciphers sent by the client during the handshake. "
"(Contributed by Benjamin Peterson in :issue:`23186`.)"
msgstr ""
"Новые методы :meth:`SSLObject.shared_ciphers() <ssl.SSLObject."
"shared_ciphers>` и :meth:`SSLSocket.shared_ciphers() <ssl.SSLSocket."
"shared_ciphers>` возвращают список шифров, отправленных клиентом во время "
"рукопожатия. (Предоставлено Бенджамином Петерсоном в :issue:`23186`.)"

#: ../../whatsnew/3.5.rst:1814
msgid ""
"The :meth:`SSLSocket.do_handshake() <ssl.SSLSocket.do_handshake>`, :meth:"
"`SSLSocket.read() <ssl.SSLSocket.read>`, :meth:`SSLSocket.shutdown() <ssl."
"SSLSocket.shutdown>`, and :meth:`SSLSocket.write() <ssl.SSLSocket.write>` "
"methods of the :class:`~ssl.SSLSocket` class no longer reset the socket "
"timeout every time bytes are received or sent. The socket timeout is now the "
"maximum total duration of the method. (Contributed by Victor Stinner in :"
"issue:`23853`.)"
msgstr ""
":meth:`SSLSocket.do_handshake() <ssl.SSLSocket.do_handshake>`, :meth:"
"`SSLSocket.read() <ssl.SSLSocket.read>`, :meth:`SSLSocket.shutdown() <ssl."
"SSLSocket Методы .shutdown>` и :meth:`SSLSocket.write() <ssl.SSLSocket."
"write>` класса :class:`~ssl.SSLSocket` больше не сбрасывают тайм-аут сокета "
"каждый раз, когда принимаются или отправляются байты. Тайм-аут сокета теперь "
"равен максимальной общей продолжительности метода. (Предоставлено Виктором "
"Стиннером в :issue:`23853`.)"

#: ../../whatsnew/3.5.rst:1822
msgid ""
"The :func:`~ssl.match_hostname` function now supports matching of IP "
"addresses. (Contributed by Antoine Pitrou in :issue:`23239`.)"
msgstr ""
"Функция :func:`~ssl.match_hostname` теперь поддерживает сопоставление IP-"
"адресов. (Предоставлено Антуаном Питру в :issue:`23239`.)"

#: ../../whatsnew/3.5.rst:1827
msgid "sqlite3"
msgstr "sqlite3"

#: ../../whatsnew/3.5.rst:1829
msgid ""
"The :class:`~sqlite3.Row` class now fully supports the sequence protocol, in "
"particular :func:`reversed` iteration and slice indexing. (Contributed by "
"Claudiu Popa in :issue:`10203`; by Lucas Sinclair, Jessica McKellar, and  "
"Serhiy Storchaka in :issue:`13583`.)"
msgstr ""
"Класс :class:`~sqlite3.Row` теперь полностью поддерживает протокол "
"последовательности, в частности :func:`reversed` итерацию и индексацию "
"срезов. (Предоставлено Клаудиу Попа в :issue:`10203`; Лукасом Синклером, "
"Джессикой МакКеллар и Сергеем Сторчакой в ​​:issue:`13583`.)"

#: ../../whatsnew/3.5.rst:1838
msgid "subprocess"
msgstr "subprocess"

#: ../../whatsnew/3.5.rst:1840
msgid ""
"The new :func:`~subprocess.run` function has been added. It runs the "
"specified command and returns a :class:`~subprocess.CompletedProcess` "
"object, which describes a finished process.  The new API is more consistent "
"and is the recommended approach to invoking subprocesses in Python code that "
"does not need to maintain compatibility with earlier Python versions. "
"(Contributed by Thomas Kluyver in :issue:`23342`.)"
msgstr ""
"Добавлена ​​новая функция :func:`~subprocess.run`. Он запускает указанную "
"команду и возвращает объект :class:`~subprocess.CompletedProcess`, который "
"описывает завершенный процесс. Новый API более последователен и является "
"рекомендуемым подходом к вызову подпроцессов в коде Python, который не "
"требует обеспечения совместимости с более ранними версиями Python. "
"(Предоставлено Томасом Клюйвером в :issue:`23342`.)"

#: ../../whatsnew/3.5.rst:1864
msgid "sys"
msgstr "sys"

#: ../../whatsnew/3.5.rst:1866
msgid ""
"A new :func:`~sys.set_coroutine_wrapper` function allows setting a global "
"hook that will be called whenever a :term:`coroutine object <coroutine>` is "
"created by an :keyword:`async def` function.  A corresponding :func:`~sys."
"get_coroutine_wrapper` can be used to obtain a currently set wrapper.  Both "
"functions are :term:`provisional <provisional API>`, and are intended for "
"debugging purposes only.  (Contributed by Yury Selivanov in :issue:`24017`.)"
msgstr ""
"Новая функция :func:`~sys.set_coroutine_wrapper` позволяет установить "
"глобальный перехватчик, который будет вызываться всякий раз, когда :term:"
"`объект сопрограммы <coroutine>` создается функцией :keyword:`async def`. "
"Соответствующий :func:`~sys.get_coroutine_wrapper` можно использовать для "
"получения текущей установленной оболочки. Обе функции являются :term:"
"`provisional <provisional API>` и предназначены только для целей отладки. "
"(Добавлен Юрием Селивановым в :issue:`24017`.)"

#: ../../whatsnew/3.5.rst:1874
msgid ""
"A new :func:`~sys.is_finalizing` function can be used to check if the Python "
"interpreter is :term:`shutting down <interpreter shutdown>`. (Contributed by "
"Antoine Pitrou in :issue:`22696`.)"
msgstr ""
"Новую функцию :func:`~sys.is_finalizing` можно использовать для проверки "
"того, :term:`выключается ли интерпретатор Python <интерпретатор завершение "
"работы>`. (Предоставлено Антуаном Питру в :issue:`22696`.)"

#: ../../whatsnew/3.5.rst:1880
msgid "sysconfig"
msgstr "sysconfig"

#: ../../whatsnew/3.5.rst:1882
msgid ""
"The name of the user scripts directory on Windows now includes the first two "
"components of the Python version. (Contributed by Paul Moore in :issue:"
"`23437`.)"
msgstr ""
"Имя каталога пользовательских сценариев в Windows теперь включает первые два "
"компонента версии Python. (Предоставлено Полом Муром в :issue:`23437`.)"

#: ../../whatsnew/3.5.rst:1888
msgid "tarfile"
msgstr "tarfile"

#: ../../whatsnew/3.5.rst:1890
msgid ""
"The *mode* argument of the :func:`~tarfile.open` function now accepts "
"``\"x\"`` to request exclusive creation.  (Contributed by Berker Peksag in :"
"issue:`21717`.)"
msgstr ""
"Аргумент *mode* функции :func:`~tarfile.open` теперь принимает ``\"x\"`` для "
"запроса эксклюзивного создания. (Предоставлено Беркером Пексагом в :issue:"
"`21717`.)"

#: ../../whatsnew/3.5.rst:1893
msgid ""
"The :meth:`TarFile.extractall() <tarfile.TarFile.extractall>` and :meth:"
"`TarFile.extract() <tarfile.TarFile.extract>` methods now take a keyword "
"argument *numeric_owner*.  If set to ``True``, the extracted files and "
"directories will be owned by the numeric ``uid`` and ``gid`` from the "
"tarfile. If set to ``False`` (the default, and the behavior in versions "
"prior to 3.5), they will be owned by the named user and group in the "
"tarfile. (Contributed by Michael Vogt and Eric Smith in :issue:`23193`.)"
msgstr ""
"Методы :meth:`TarFile.extractall() <tarfile.TarFile.extractall>` и :meth:"
"`TarFile.extract() <tarfile.TarFile.extract>` теперь принимают аргумент "
"ключевого слова *numeric_owner*. Если установлено значение True, извлеченные "
"файлы и каталоги будут принадлежать числовым идентификаторам uid и gid из "
"tar-файла. Если установлено значение «False» (по умолчанию и поведение в "
"версиях до 3.5), они будут принадлежать указанному пользователю и группе в "
"tar-файле. (Предоставлено Майклом Фогтом и Эриком Смитом в :issue:`23193`.)"

#: ../../whatsnew/3.5.rst:1901
msgid ""
"The :meth:`TarFile.list() <tarfile.TarFile.list>` now accepts an optional "
"*members* keyword argument that can be set to a subset of the list returned "
"by :meth:`TarFile.getmembers() <tarfile.TarFile.getmembers>`. (Contributed "
"by Serhiy Storchaka in :issue:`21549`.)"
msgstr ""
":meth:`TarFile.list() <tarfile.TarFile.list>` теперь принимает "
"необязательный аргумент ключевого слова *members*, который может быть "
"установлен в подмножество списка, возвращаемого :meth:`TarFile.getmembers() "
"<tarfile .TarFile.getmembers>`. (Добавлен Сергеем Сторчакой в ​​:issue:"
"`21549`.)"

#: ../../whatsnew/3.5.rst:1908
msgid "threading"
msgstr "threading"

#: ../../whatsnew/3.5.rst:1910
msgid ""
"Both the :meth:`Lock.acquire() <threading.Lock.acquire>` and :meth:`RLock."
"acquire() <threading.RLock.acquire>` methods now use a monotonic clock for "
"timeout management. (Contributed by Victor Stinner in :issue:`22043`.)"
msgstr ""
"Оба метода :meth:`Lock.acquire() <threading.Lock.acquire>` и :meth:`RLock."
"acquire() <threading.RLock.acquire>` теперь используют монотонные часы для "
"управления тайм-аутом. (Предоставлено Виктором Стиннером в :issue:`22043`.)"

#: ../../whatsnew/3.5.rst:1917
msgid "time"
msgstr "время"

#: ../../whatsnew/3.5.rst:1919
msgid ""
"The :func:`~time.monotonic` function is now always available. (Contributed "
"by Victor Stinner in :issue:`22043`.)"
msgstr ""
"Функция :func:`~time.monotonic` теперь всегда доступна. (Предоставлено "
"Виктором Стиннером в :issue:`22043`.)"

#: ../../whatsnew/3.5.rst:1924
msgid "timeit"
msgstr "timeit"

#: ../../whatsnew/3.5.rst:1926
msgid ""
"A new command line option ``-u`` or :samp:`--unit={U}` can be used to "
"specify the time unit for the timer output.  Supported options are ``usec``, "
"``msec``, or ``sec``.  (Contributed by Julian Gindi in :issue:`18983`.)"
msgstr ""
"Новая опция командной строки ``-u`` или :samp:`--unit={U}` может "
"использоваться для указания единицы времени для вывода таймера. "
"Поддерживаемые параметры: usec, msec или sec. (Предоставлено Джулианом Гинди "
"в :issue:`18983`.)"

#: ../../whatsnew/3.5.rst:1930
msgid ""
"The :func:`~timeit.timeit` function has a new *globals* parameter for "
"specifying the namespace in which the code will be running. (Contributed by "
"Ben Roberts in :issue:`2527`.)"
msgstr ""
"Функция :func:`~timeit.timeit` имеет новый параметр *globals* для указания "
"пространства имен, в котором будет выполняться код. (Предоставлено Беном "
"Робертсом в :issue:`2527`.)"

#: ../../whatsnew/3.5.rst:1936
msgid "tkinter"
msgstr "tkinter"

#: ../../whatsnew/3.5.rst:1938
msgid ""
"The :mod:`tkinter._fix` module used for setting up the Tcl/Tk environment on "
"Windows has been replaced by a private function in the :mod:`_tkinter` "
"module which makes no permanent changes to environment variables. "
"(Contributed by Zachary Ware in :issue:`20035`.)"
msgstr ""

#: ../../whatsnew/3.5.rst:1947
msgid "traceback"
msgstr "трассировка"

#: ../../whatsnew/3.5.rst:1949
msgid ""
"New :func:`~traceback.walk_stack` and :func:`~traceback.walk_tb` functions "
"to conveniently traverse frame and :ref:`traceback objects <traceback-"
"objects>`. (Contributed by Robert Collins in :issue:`17911`.)"
msgstr ""
"Новые функции :func:`~traceback.walk_stack` и :func:`~traceback.walk_tb` для "
"удобного перемещения по кадру и :ref:`объектов трассировки <traceback-"
"objects>`. (Предоставлено Робертом Коллинзом в :issue:`17911`.)"

#: ../../whatsnew/3.5.rst:1954
msgid ""
"New lightweight classes: :class:`~traceback.TracebackException`, :class:"
"`~traceback.StackSummary`, and :class:`~traceback.FrameSummary`. "
"(Contributed by Robert Collins in :issue:`17911`.)"
msgstr ""
"Новые облегченные классы: :class:`~traceback.TracebackException`, :class:"
"`~traceback.StackSummary` и :class:`~traceback.FrameSummary`. (Предоставлено "
"Робертом Коллинзом в :issue:`17911`.)"

#: ../../whatsnew/3.5.rst:1958
msgid ""
"Both the :func:`~traceback.print_tb` and :func:`~traceback.print_stack` "
"functions now support negative values for the *limit* argument. (Contributed "
"by Dmitry Kazakov in :issue:`22619`.)"
msgstr ""
"Обе функции :func:`~traceback.print_tb` и :func:`~traceback.print_stack` "
"теперь поддерживают отрицательные значения для аргумента *limit*. (Внесено "
"Дмитрием Казаковым в :issue:`22619`.)"

#: ../../whatsnew/3.5.rst:1964
msgid "types"
msgstr "типы"

#: ../../whatsnew/3.5.rst:1966
msgid ""
"A new :func:`~types.coroutine` function to transform :term:`generator "
"<generator iterator>` and :class:`generator-like <collections.abc."
"Generator>` objects into :term:`awaitables <awaitable>`. (Contributed by "
"Yury Selivanov in :issue:`24017`.)"
msgstr ""
"Новая функция :func:`~types.coroutine` для преобразования :term:`generator "
"<generator iterator>` и :class:`generator-like <collections.abc.Generator>` "
"в :term:`awaitables <awaitable> `. (Добавлен Юрием Селивановым в :issue:"
"`24017`.)"

#: ../../whatsnew/3.5.rst:1972
msgid ""
"A new type called :class:`~types.CoroutineType`, which is used for :term:"
"`coroutine` objects created by :keyword:`async def` functions. (Contributed "
"by Yury Selivanov in :issue:`24400`.)"
msgstr ""
"Новый тип под названием :class:`~types.CoroutineType`, который используется "
"для объектов :term:`coroutine`, созданных функциями :keyword:`async def`. "
"(Добавлен Юрием Селивановым в :issue:`24400`.)"

#: ../../whatsnew/3.5.rst:1978
msgid "unicodedata"
msgstr "unicodedata"

#: ../../whatsnew/3.5.rst:1980
msgid ""
"The :mod:`unicodedata` module now uses data from `Unicode 8.0.0 <https://"
"unicode.org/versions/Unicode8.0.0/>`_."
msgstr ""
"Модуль :mod:`unicodedata` теперь использует данные из `Unicode 8.0.0 "
"<https://unicode.org/versions/Unicode8.0.0/>`_."

#: ../../whatsnew/3.5.rst:1985
msgid "unittest"
msgstr "unittest"

#: ../../whatsnew/3.5.rst:1987
msgid ""
"The :meth:`TestLoader.loadTestsFromModule() <unittest.TestLoader."
"loadTestsFromModule>` method now accepts a keyword-only argument *pattern* "
"which is passed to ``load_tests`` as the third argument.  Found packages are "
"now checked for ``load_tests`` regardless of whether their path matches "
"*pattern*, because it is impossible for a package name to match the default "
"pattern. (Contributed by Robert Collins and Barry A. Warsaw in :issue:"
"`16662`.)"
msgstr ""
"Метод :meth:`TestLoader.loadTestsFromModule() <unittest.TestLoader."
"loadTestsFromModule>` теперь принимает аргумент, содержащий только ключевые "
"слова, *pattern*, который передается в ``load_tests`` в качестве третьего "
"аргумента. Найденные пакеты теперь проверяются на предмет ``load_tests`` "
"независимо от того, соответствует ли их путь *шаблону*, поскольку "
"невозможно, чтобы имя пакета соответствовало шаблону по умолчанию. "
"(Предоставлено Робертом Коллинзом и Барри А. Варшавой в :issue:`16662`.)"

#: ../../whatsnew/3.5.rst:1994
msgid ""
"Unittest discovery errors now are exposed in the :data:`TestLoader.errors "
"<unittest.TestLoader.errors>` attribute of the :class:`~unittest.TestLoader` "
"instance. (Contributed by Robert Collins in :issue:`19746`.)"
msgstr ""
"Ошибки обнаружения Unittest теперь отображаются в атрибуте :data:`TestLoader."
"errors <unittest.TestLoader.errors>` экземпляра :class:`~unittest."
"TestLoader`. (Предоставлено Робертом Коллинзом в :issue:`19746`.)"

#: ../../whatsnew/3.5.rst:1999
msgid ""
"A new command line option ``--locals`` to show local variables in "
"tracebacks.  (Contributed by Robert Collins in :issue:`22936`.)"
msgstr ""
"Новая опция командной строки ``--locals`` для отображения локальных "
"переменных в обратных трассировках. (Предоставлено Робертом Коллинзом в :"
"issue:`22936`.)"

#: ../../whatsnew/3.5.rst:2004
msgid "unittest.mock"
msgstr "unittest.mock"

#: ../../whatsnew/3.5.rst:2006
msgid "The :class:`~unittest.mock.Mock` class has the following improvements:"
msgstr "Класс :class:`~unittest.mock.Mock` имеет следующие улучшения:"

#: ../../whatsnew/3.5.rst:2008
msgid ""
"The class constructor has a new *unsafe* parameter, which causes mock "
"objects to raise :exc:`AttributeError` on attribute names starting with "
"``\"assert\"``. (Contributed by Kushal Das in :issue:`21238`.)"
msgstr ""
"Конструктор класса имеет новый параметр *unsafe*, который заставляет "
"фиктивные объекты вызывать :exc:`AttributeError` для имен атрибутов, "
"начинающихся с ``\"assert\"``. (Предоставлено Кушалом Дасом в :issue:"
"`21238`.)"

#: ../../whatsnew/3.5.rst:2013
msgid ""
"A new :meth:`Mock.assert_not_called() <unittest.mock.Mock."
"assert_not_called>` method to check if the mock object was called. "
"(Contributed by Kushal Das in :issue:`21262`.)"
msgstr ""
"Новый метод :meth:`Mock.assert_not_ Called() <unittest.mock.Mock.assert_not_ "
"Called>` для проверки того, был ли вызван макетный объект. (Предоставлено "
"Кушалом Дасом в :issue:`21262`.)"

#: ../../whatsnew/3.5.rst:2017
msgid ""
"The :class:`~unittest.mock.MagicMock` class now supports :meth:"
"`__truediv__`, :meth:`__divmod__` and :meth:`__matmul__` operators. "
"(Contributed by Johannes Baiter in :issue:`20968`, and Håkan Lövdahl in :"
"issue:`23581` and :issue:`23568`.)"
msgstr ""
"Класс :class:`~unittest.mock.MagicMock` теперь поддерживает операторы :meth:"
"`__truediv__`, :meth:`__divmod__` и :meth:`__matmul__`. (Предоставлено "
"Йоханнесом Байтером в :issue:`20968` и Хоканом Лёвдалом в :issue:`23581` и :"
"issue:`23568`.)"

#: ../../whatsnew/3.5.rst:2022
msgid ""
"It is no longer necessary to explicitly pass ``create=True`` to the :func:"
"`~unittest.mock.patch` function when patching builtin names. (Contributed by "
"Kushal Das in :issue:`17660`.)"
msgstr ""
"Больше нет необходимости явно передавать ``create=True`` в функцию :func:"
"`~unittest.mock.patch` при исправлении встроенных имен. (Предоставлено "
"Кушалом Дасом в :issue:`17660`.)"

#: ../../whatsnew/3.5.rst:2028
msgid "urllib"
msgstr "urllib"

#: ../../whatsnew/3.5.rst:2030
msgid ""
"A new :class:`request.HTTPPasswordMgrWithPriorAuth <urllib.request."
"HTTPPasswordMgrWithPriorAuth>` class allows HTTP Basic Authentication "
"credentials to be managed so as to eliminate unnecessary ``401`` response "
"handling, or to unconditionally send credentials on the first request in "
"order to communicate with servers that return a ``404`` response instead of "
"a ``401`` if the ``Authorization`` header is not sent. (Contributed by Matej "
"Cepl in :issue:`19494` and Akshit Khurana in :issue:`7159`.)"
msgstr ""
"Новый класс :class:`request.HTTPPasswordMgrWithPriorAuth <urllib.request."
"HTTPPasswordMgrWithPriorAuth>` позволяет управлять учетными данными базовой "
"аутентификации HTTP, чтобы исключить ненужную обработку ответа ``401`` или "
"безоговорочно отправлять учетные данные при первом запросе по порядку. для "
"связи с серверами, которые возвращают ответ «404» вместо «401», если "
"заголовок «Authorization» не отправлен. (Предоставлено Матеем Чеплом в :"
"issue:`19494` и Акшитом Хураной в :issue:`7159`.)"

#: ../../whatsnew/3.5.rst:2039
msgid ""
"A new *quote_via* argument for the :func:`parse.urlencode() <urllib.parse."
"urlencode>` function provides a way to control the encoding of query parts "
"if needed. (Contributed by Samwyse and Arnon Yaari in :issue:`13866`.)"
msgstr ""
"Новый аргумент *quote_via* для функции :func:`parse.urlencode() <urllib."
"parse.urlencode>` обеспечивает способ управления кодировкой частей запроса, "
"если это необходимо. (Предоставлено Сэмвайсом и Арноном Яари в :issue:"
"`13866`.)"

#: ../../whatsnew/3.5.rst:2044
msgid ""
"The :func:`request.urlopen() <urllib.request.urlopen>` function accepts an :"
"class:`ssl.SSLContext` object as a *context* argument, which will be used "
"for the HTTPS connection.  (Contributed by Alex Gaynor in :issue:`22366`.)"
msgstr ""
"Функция :func:`request.urlopen() <urllib.request.urlopen>` принимает объект :"
"class:`ssl.SSLContext` в качестве аргумента *context*, который будет "
"использоваться для HTTPS-соединения. (Предоставлено Алексом Гейнором в :"
"issue:`22366`.)"

#: ../../whatsnew/3.5.rst:2048
msgid ""
"The :func:`parse.urljoin() <urllib.parse.urljoin>` was updated to use the :"
"rfc:`3986` semantics for the resolution of relative URLs, rather than :rfc:"
"`1808` and :rfc:`2396`. (Contributed by Demian Brecht and Senthil Kumaran "
"in :issue:`22118`.)"
msgstr ""
":func:`parse.urljoin() <urllib.parse.urljoin>` был обновлен для "
"использования семантики :rfc:`3986` для разрешения относительных URL-"
"адресов, а не :rfc:`1808` и :rfc:` 2396`. (Предоставлено Демианом Брехтом и "
"Сентилом Кумараном в :issue:`22118`.)"

#: ../../whatsnew/3.5.rst:2055
msgid "wsgiref"
msgstr "wsgiref"

#: ../../whatsnew/3.5.rst:2057
msgid ""
"The *headers* argument of the :class:`headers.Headers <wsgiref.headers."
"Headers>` class constructor is now optional. (Contributed by Pablo Torres "
"Navarrete and SilentGhost in :issue:`5800`.)"
msgstr ""
"Аргумент *headers* конструктора класса :class:`headers.Headers <wsgiref."
"headers.Headers>` теперь является необязательным. (Предоставлено Пабло "
"Торресом Наваррете и SilentGhost в :issue:`5800`.)"

#: ../../whatsnew/3.5.rst:2063
msgid "xmlrpc"
msgstr "xmlrpc"

#: ../../whatsnew/3.5.rst:2065
msgid ""
"The :class:`client.ServerProxy <xmlrpc.client.ServerProxy>` class now "
"supports the :term:`context manager` protocol. (Contributed by Claudiu Popa "
"in :issue:`20627`.)"
msgstr ""
"Класс :class:`client.ServerProxy <xmlrpc.client.ServerProxy>` теперь "
"поддерживает протокол :term:`контекстного менеджера`. (Предоставлено Клаудиу "
"Попа в :issue:`20627`.)"

#: ../../whatsnew/3.5.rst:2069
msgid ""
"The :class:`client.ServerProxy <xmlrpc.client.ServerProxy>` constructor now "
"accepts an optional :class:`ssl.SSLContext` instance. (Contributed by Alex "
"Gaynor in :issue:`22960`.)"
msgstr ""
"Конструктор :class:`client.ServerProxy <xmlrpc.client.ServerProxy>` теперь "
"принимает необязательный экземпляр :class:`ssl.SSLContext`. (Предоставлено "
"Алексом Гейнором в :issue:`22960`.)"

#: ../../whatsnew/3.5.rst:2075
msgid "xml.sax"
msgstr "xml.sax"

#: ../../whatsnew/3.5.rst:2077
msgid ""
"SAX parsers now support a character stream of the :class:`xmlreader."
"InputSource <xml.sax.xmlreader.InputSource>` object. (Contributed by Serhiy "
"Storchaka in :issue:`2175`.)"
msgstr ""
"Анализаторы SAX теперь поддерживают поток символов объекта :class:`xmlreader."
"InputSource <xml.sax.xmlreader.InputSource>`. (Предоставлено Сергеем "
"Сторчакой в ​​:issue:`2175`.)"

#: ../../whatsnew/3.5.rst:2081
msgid ""
":func:`~xml.sax.parseString` now accepts a :class:`str` instance. "
"(Contributed by Serhiy Storchaka in :issue:`10590`.)"
msgstr ""
":func:`~xml.sax.parseString` теперь принимает экземпляр :class:`str`. "
"(Предоставлено Сергеем Сторчакой в ​​:issue:`10590`.)"

#: ../../whatsnew/3.5.rst:2086
msgid "zipfile"
msgstr "zip-файл"

#: ../../whatsnew/3.5.rst:2088
msgid ""
"ZIP output can now be written to unseekable streams. (Contributed by Serhiy "
"Storchaka in :issue:`23252`.)"
msgstr ""
"Вывод ZIP теперь можно записывать в недоступные для поиска потоки. "
"(Предоставлено Сергеем Сторчакой в ​​:issue:`23252`.)"

#: ../../whatsnew/3.5.rst:2091
msgid ""
"The *mode* argument of :meth:`ZipFile.open() <zipfile.ZipFile.open>` method "
"now accepts ``\"x\"`` to request exclusive creation. (Contributed by Serhiy "
"Storchaka in :issue:`21717`.)"
msgstr ""
"Аргумент *mode* метода :meth:`ZipFile.open() <zipfile.ZipFile.open>` теперь "
"принимает ``\"x\"`` для запроса эксклюзивного создания. (Добавлен Сергеем "
"Сторчакой в ​​:issue:`21717`.)"

#: ../../whatsnew/3.5.rst:2097
msgid "Other module-level changes"
msgstr "Другие изменения на уровне модуля"

#: ../../whatsnew/3.5.rst:2099
msgid ""
"Many functions in the :mod:`mmap`, :mod:`ossaudiodev`, :mod:`socket`, :mod:"
"`ssl`, and :mod:`codecs` modules now accept writable :term:`bytes-like "
"objects <bytes-like object>`. (Contributed by Serhiy Storchaka in :issue:"
"`23001`.)"
msgstr ""
"Многие функции в модулях :mod:`mmap`, :mod:`ossaudiodev`, :mod:`socket`, :"
"mod:`ssl` и :mod:`codecs` теперь принимают записываемые :term:`байтовые "
"файлы объекты <байтовый объект>`. (Предоставлено Сергеем Сторчакой в ​​:issue:"
"`23001`.)"

#: ../../whatsnew/3.5.rst:2106
msgid "Optimizations"
msgstr "Оптимизации"

#: ../../whatsnew/3.5.rst:2108
msgid ""
"The :func:`os.walk` function has been sped up by 3 to 5 times on POSIX "
"systems, and by 7 to 20 times on Windows.  This was done using the new :func:"
"`os.scandir` function, which exposes file information from the underlying "
"``readdir`` or ``FindFirstFile``/``FindNextFile`` system calls.  "
"(Contributed by Ben Hoyt with help from Victor Stinner in :issue:`23605`.)"
msgstr ""
"Функция :func:`os.walk` ускорена в системах POSIX от 3 до 5 раз и в Windows "
"от 7 до 20 раз. Это было сделано с помощью новой функции :func:`os.scandir`, "
"которая предоставляет информацию о файле из базовых системных вызовов "
"``readdir`` или ``FindFirstFile``/``FindNextFile``. (Предоставлено Беном "
"Хойтом при помощи Виктора Стиннера в :issue:`23605`.)"

#: ../../whatsnew/3.5.rst:2114
msgid ""
"Construction of ``bytes(int)`` (filled by zero bytes) is faster and uses "
"less memory for large objects. ``calloc()`` is used instead of ``malloc()`` "
"to allocate memory for these objects. (Contributed by Victor Stinner in :"
"issue:`21233`.)"
msgstr ""
"Создание ``bytes(int)`` (заполненного нулевыми байтами) происходит быстрее и "
"использует меньше памяти для больших объектов. ``calloc()`` используется "
"вместо ``malloc()`` для выделения памяти для этих объектов. (Предоставлено "
"Виктором Стиннером в :issue:`21233`.)"

#: ../../whatsnew/3.5.rst:2119
msgid ""
"Some operations on :mod:`ipaddress` :class:`~ipaddress.IPv4Network` and :"
"class:`~ipaddress.IPv6Network` have been massively sped up, such as :meth:"
"`~ipaddress.IPv4Network.subnets`, :meth:`~ipaddress.IPv4Network.supernet`, :"
"func:`~ipaddress.summarize_address_range`, :func:`~ipaddress."
"collapse_addresses`. The speed up can range from 3 to 15 times. (Contributed "
"by Antoine Pitrou, Michel Albert, and Markus in :issue:`21486`, :issue:"
"`21487`, :issue:`20826`, :issue:`23266`.)"
msgstr ""
"Некоторые операции на :mod:`ipaddress` :class:`~ipaddress.IPv4Network` и :"
"class:`~ipaddress.IPv6Network` значительно ускорены, например :meth:"
"`~ipaddress.IPv4Network.subnets`, :meth :`~ipaddress.IPv4Network.supernet`, :"
"func:`~ipaddress.summarize_address_range`, :func:`~ipaddress."
"collapse_addresses`. Ускорение может варьироваться от 3 до 15 раз. (Внесено "
"Антуаном Питру, Мишелем Альбером и Маркусом в :issue:`21486`, :issue:"
"`21487`, :issue:`20826`, :issue:`23266`.)"

#: ../../whatsnew/3.5.rst:2127
msgid ""
"Pickling of :mod:`ipaddress` objects was optimized to produce significantly "
"smaller output.  (Contributed by Serhiy Storchaka in :issue:`23133`.)"
msgstr ""
"Консервация объектов :mod:`ipaddress` была оптимизирована для получения "
"значительно меньшего результата. (Предоставлено Сергеем Сторчакой в ​​:issue:"
"`23133`.)"

#: ../../whatsnew/3.5.rst:2130
msgid ""
"Many operations on :class:`io.BytesIO` are now 50% to 100% faster. "
"(Contributed by Serhiy Storchaka in :issue:`15381` and David Wilson in :"
"issue:`22003`.)"
msgstr ""
"Многие операции над :class:`io.BytesIO` теперь выполняются на 50–100 % "
"быстрее. (Предоставлено Сергеем Сторчакой в ​​:issue:`15381` и Дэвидом "
"Уилсоном в :issue:`22003`.)"

#: ../../whatsnew/3.5.rst:2134
msgid ""
"The :func:`marshal.dumps` function is now faster: 65--85% with versions 3 "
"and 4, 20--25% with versions 0 to 2 on typical data, and up to 5 times in "
"best cases. (Contributed by Serhiy Storchaka in :issue:`20416` and :issue:"
"`23344`.)"
msgstr ""
"Функция :func:`marshal.dumps` теперь работает быстрее: 65--85% с версиями 3 "
"и 4, 20--25% с версиями 0-2 на типичных данных и до 5 раз в лучших случаях. "
"(Внесено Сергеем Сторчакой в ​​:issue:`20416` и :issue:`23344`.)"

#: ../../whatsnew/3.5.rst:2139
msgid ""
"The UTF-32 encoder is now 3 to 7 times faster. (Contributed by Serhiy "
"Storchaka in :issue:`15027`.)"
msgstr ""
"Кодировщик UTF-32 теперь работает в 3–7 раз быстрее. (Предоставлено Сергеем "
"Сторчакой в ​​:issue:`15027`.)"

#: ../../whatsnew/3.5.rst:2142
msgid ""
"Regular expressions are now parsed up to 10% faster. (Contributed by Serhiy "
"Storchaka in :issue:`19380`.)"
msgstr ""
"Регулярные выражения теперь анализируются до 10% быстрее. (Предоставлено "
"Сергеем Сторчакой в ​​:issue:`19380`.)"

#: ../../whatsnew/3.5.rst:2145
msgid ""
"The :func:`json.dumps` function was optimized to run with "
"``ensure_ascii=False`` as fast as with ``ensure_ascii=True``. (Contributed "
"by Naoki Inada in :issue:`23206`.)"
msgstr ""
"Функция :func:`json.dumps` была оптимизирована для работы с ``ensure_ascii = "
"False`` так же быстро, как с ``ensure_ascii = True``. (Предоставлено Наоки "
"Инада в :issue:`23206`.)"

#: ../../whatsnew/3.5.rst:2149
msgid ""
"The :c:func:`PyObject_IsInstance` and :c:func:`PyObject_IsSubclass` "
"functions have been sped up in the common case that the second argument has :"
"class:`type` as its metaclass. (Contributed Georg Brandl by in :issue:"
"`22540`.)"
msgstr ""
"Функции :c:func:` PyObj ect_IsInstance` и :c:func:` PyObj ect_IsSubclass` "
"были ускорены в обычном случае, когда второй аргумент имеет :class:`type` в "
"качестве метакласса. (Внесено Георгом Брандлом в :issue:`22540`.)"

#: ../../whatsnew/3.5.rst:2154
msgid ""
"Method caching was slightly improved, yielding up to 5% performance "
"improvement in some benchmarks. (Contributed by Antoine Pitrou in :issue:"
"`22847`.)"
msgstr ""
"Кэширование методов было немного улучшено, что привело к увеличению "
"производительности до 5% в некоторых тестах. (Предоставлено Антуаном Питру "
"в :issue:`22847`.)"

#: ../../whatsnew/3.5.rst:2158
msgid ""
"Objects from the :mod:`random` module now use 50% less memory on 64-bit "
"builds.  (Contributed by Serhiy Storchaka in :issue:`23488`.)"
msgstr ""
"Объекты из модуля :mod:`random` теперь используют на 50% меньше памяти в 64-"
"битных сборках. (Предоставлено Сергеем Сторчакой в ​​:issue:`23488`.)"

#: ../../whatsnew/3.5.rst:2161
msgid ""
"The :func:`property` getter calls are up to 25% faster. (Contributed by Joe "
"Jevnik in :issue:`23910`.)"
msgstr ""
"Вызовы метода получения :func:`property` выполняются до 25% быстрее. "
"(Внесено Джо Джевником в :issue:`23910`.)"

#: ../../whatsnew/3.5.rst:2164
msgid ""
"Instantiation of :class:`fractions.Fraction` is now up to 30% faster. "
"(Contributed by Stefan Behnel in :issue:`22464`.)"
msgstr ""
"Создание экземпляра :class:`fractions.Fraction` теперь происходит на 30 % "
"быстрее. (Предоставлено Стефаном Бенелем в :issue:`22464`.)"

#: ../../whatsnew/3.5.rst:2167
msgid ""
"String methods :meth:`~str.find`, :meth:`~str.rfind`, :meth:`~str.split`, :"
"meth:`~str.partition` and the :keyword:`in` string operator are now "
"significantly faster for searching 1-character substrings. (Contributed by "
"Serhiy Storchaka in :issue:`23573`.)"
msgstr ""
"Строковые методы :meth:`~str.find`, :meth:`~str.rfind`, :meth:`~str.split`, :"
"meth:`~str.partition` и строка :keyword:`in` Оператор теперь значительно "
"быстрее выполняет поиск односимвольных подстрок. (Предоставлено Сергеем "
"Сторчакой в ​​:issue:`23573`.)"

#: ../../whatsnew/3.5.rst:2174
msgid "Build and C API Changes"
msgstr "Изменения API сборки и C"

#: ../../whatsnew/3.5.rst:2176
msgid "New ``calloc`` functions were added:"
msgstr "Добавлены новые функции calloc:"

#: ../../whatsnew/3.5.rst:2178
msgid ":c:func:`PyMem_RawCalloc`,"
msgstr ":c:func:`PyMem_RawCalloc`,"

#: ../../whatsnew/3.5.rst:2179
msgid ":c:func:`PyMem_Calloc`,"
msgstr ":c:func:`PyMem_Calloc`,"

#: ../../whatsnew/3.5.rst:2180
msgid ":c:func:`PyObject_Calloc`."
msgstr ":c:func:`PyObject_Calloc`."

#: ../../whatsnew/3.5.rst:2182
msgid "(Contributed by Victor Stinner in :issue:`21233`.)"
msgstr "(Предоставлено Виктором Стиннером в :issue:`21233`.)"

#: ../../whatsnew/3.5.rst:2184
msgid "New encoding/decoding helper functions:"
msgstr "Новые вспомогательные функции кодирования/декодирования:"

#: ../../whatsnew/3.5.rst:2186
msgid ":c:func:`Py_DecodeLocale` (replaced ``_Py_char2wchar()``),"
msgstr ":c:func:`Py_DecodeLocale` (заменено на ``_Py_char2wchar()``),"

#: ../../whatsnew/3.5.rst:2187
msgid ":c:func:`Py_EncodeLocale` (replaced ``_Py_wchar2char()``)."
msgstr ":c:func:`Py_EncodeLocale` (заменено на ``_Py_wchar2char()``)."

#: ../../whatsnew/3.5.rst:2189
msgid "(Contributed by Victor Stinner in :issue:`18395`.)"
msgstr "(Предоставлено Виктором Стиннером в :issue:`18395`.)"

#: ../../whatsnew/3.5.rst:2191
msgid ""
"A new :c:func:`PyCodec_NameReplaceErrors` function to replace the unicode "
"encode error with ``\\N{...}`` escapes. (Contributed by Serhiy Storchaka in :"
"issue:`19676`.)"
msgstr ""
"Новая функция :c:func:`PyCodec_NameReplaceErrors` для замены ошибки "
"кодирования Юникода на escape-символ ``\\N{...}``. (Предоставлено Сергеем "
"Сторчакой в ​​:issue:`19676`.)"

#: ../../whatsnew/3.5.rst:2195
msgid ""
"A new :c:func:`PyErr_FormatV` function similar to :c:func:`PyErr_Format`, "
"but accepts a :c:type:`va_list` argument. (Contributed by Antoine Pitrou in :"
"issue:`18711`.)"
msgstr ""
"Новая функция :c:func:`PyErr_FormatV`, похожая на :c:func:`PyErr_Format`, но "
"принимает аргумент :c:type:`va_list`. (Предоставлено Антуаном Питру в :issue:"
"`18711`.)"

#: ../../whatsnew/3.5.rst:2199
msgid ""
"A new :c:data:`PyExc_RecursionError` exception. (Contributed by Georg Brandl "
"in :issue:`19235`.)"
msgstr ""
"Новое исключение :c:data:`PyExc_RecursionError`. (Предоставлено Георгом "
"Брандлом в :issue:`19235`.)"

#: ../../whatsnew/3.5.rst:2202
msgid ""
"New :c:func:`PyModule_FromDefAndSpec`, :c:func:`PyModule_FromDefAndSpec2`, "
"and :c:func:`PyModule_ExecDef` functions introduced by :pep:`489` -- multi-"
"phase extension module initialization. (Contributed by Petr Viktorin in :"
"issue:`24268`.)"
msgstr ""
"Новые функции :c:func:`PyModule_FromDefAndSpec`, :c:func:"
"`PyModule_FromDefAndSpec` и :c:func:`PyModule_ExecDef`, представленные :pep:"
"`489` -- многофазной инициализацией модуля расширения. (Предоставлено Петром "
"Викториным в :issue:`24268`.)"

#: ../../whatsnew/3.5.rst:2207
msgid ""
"New :c:func:`PyNumber_MatrixMultiply` and :c:func:"
"`PyNumber_InPlaceMatrixMultiply` functions to perform matrix multiplication. "
"(Contributed by Benjamin Peterson in :issue:`21176`.  See also :pep:`465` "
"for details.)"
msgstr ""
"Новые функции :c:func:`PyNumber_MatrixMultiply` и :c:func:"
"`PyNumber_InPlaceMatrixMultiply` для выполнения матричного умножения. "
"(Предоставлено Бенджамином Петерсоном в :issue:`21176`. Подробности см. "
"также :pep:`465`.)"

#: ../../whatsnew/3.5.rst:2213
msgid ""
"The :c:member:`PyTypeObject.tp_finalize` slot is now part of the stable ABI."
msgstr ""
"Слот :c:member:`PyTypeObject.tp_finalize` теперь является частью стабильного "
"ABI."

#: ../../whatsnew/3.5.rst:2215
msgid ""
"Windows builds now require Microsoft Visual C++ 14.0, which is available as "
"part of `Visual Studio 2015 <https://visualstudio.microsoft.com/en/vs/older-"
"downloads/#visual-studio-2015-and-other-products>`_."
msgstr ""
"Для сборок Windows теперь требуется Microsoft Visual C++ 14.0, который "
"доступен как часть Visual Studio 2015 <https://visualstudio.microsoft.com/en/"
"vs/older-downloads/#visual-studio-2015-and-other-products >`_."

#: ../../whatsnew/3.5.rst:2218
msgid ""
"Extension modules now include a platform information tag in their filename "
"on some platforms (the tag is optional, and CPython will import extensions "
"without it, although if the tag is present and mismatched, the extension "
"won't be loaded):"
msgstr ""
"Модули расширений теперь включают тег информации о платформе в свое имя "
"файла на некоторых платформах (тег не является обязательным, и CPython будет "
"импортировать расширения без него, хотя, если тег присутствует и не "
"соответствует, расширение не будет загружено):"

#: ../../whatsnew/3.5.rst:2223
msgid ""
"On Linux, extension module filenames end with ``.cpython-<major><minor>m-"
"<architecture>-<os>.pyd``:"
msgstr ""
"В Linux имена файлов модулей расширения заканчиваются на ``.cpython-"
"<major><minor>m-<architecture>-<os>.pyd``:"

#: ../../whatsnew/3.5.rst:2226 ../../whatsnew/3.5.rst:2243
msgid ""
"``<major>`` is the major number of the Python version; for Python 3.5 this "
"is ``3``."
msgstr "``<major>`` — старший номер версии Python; для Python 3.5 это ``3``."

#: ../../whatsnew/3.5.rst:2229 ../../whatsnew/3.5.rst:2246
msgid ""
"``<minor>`` is the minor number of the Python version; for Python 3.5 this "
"is ``5``."
msgstr ""
"``<minor>`` — это младший номер версии Python; для Python 3.5 это ``5``."

#: ../../whatsnew/3.5.rst:2232
msgid ""
"``<architecture>`` is the hardware architecture the extension module was "
"built to run on. It's most commonly either ``i386`` for 32-bit Intel "
"platforms or ``x86_64`` for 64-bit Intel (and AMD) platforms."
msgstr ""
"``<architecture>`` — это аппаратная архитектура, для работы на которой "
"создан модуль расширения. Чаще всего это либо ``i386`` для 32-битных "
"платформ Intel, либо ``x86_64`` для 64-битных платформ Intel (и AMD)."

#: ../../whatsnew/3.5.rst:2236
msgid ""
"``<os>`` is always ``linux-gnu``, except for extensions built to talk to the "
"32-bit ABI on 64-bit platforms, in which case it is ``linux-gnu32`` (and "
"``<architecture>`` will be ``x86_64``)."
msgstr ""
"``<os>`` всегда называется ``linux-gnu``, за исключением расширений, "
"созданных для взаимодействия с 32-битным ABI на 64-битных платформах, и в "
"этом случае это ``linux-gnu32`` (и ``<os>`` `<архитектура>`` будет "
"``x86_64``)."

#: ../../whatsnew/3.5.rst:2240
msgid ""
"On Windows, extension module filenames end with ``<debug>.cp<major><minor>-"
"<platform>.pyd``:"
msgstr ""
"В Windows имена файлов модулей расширения заканчиваются на ``<debug>."
"cp<major><minor>-<platform>.pyd``:"

#: ../../whatsnew/3.5.rst:2249
msgid ""
"``<platform>`` is the platform the extension module was built for, either "
"``win32`` for Win32, ``win_amd64`` for Win64, ``win_ia64`` for Windows "
"Itanium 64, and ``win_arm`` for Windows on ARM."
msgstr ""
"``<platform>`` — это платформа, для которой был создан модуль расширения: "
"``win32`` для Win32, ``win_amd64`` для Win64, ``win_ia64`` для Windows "
"Itanium 64 и ``win_arm`` для Windows на ARM."

#: ../../whatsnew/3.5.rst:2253
msgid ""
"If built in debug mode, ``<debug>`` will be ``_d``, otherwise it will be "
"blank."
msgstr ""
"Если он создан в режиме отладки, ``<debug>`` будет ``_d``, в противном "
"случае он будет пустым."

#: ../../whatsnew/3.5.rst:2256
msgid ""
"On OS X platforms, extension module filenames now end with ``-darwin.so``."
msgstr ""
"На платформах OS X имена файлов модулей расширения теперь заканчиваются на "
"``-darwin.so``."

#: ../../whatsnew/3.5.rst:2258
msgid ""
"On all other platforms, extension module filenames are the same as they were "
"with Python 3.4."
msgstr ""
"На всех других платформах имена файлов модулей расширения такие же, как и в "
"Python 3.4."

#: ../../whatsnew/3.5.rst:2263
msgid "Deprecated"
msgstr "Устарел"

#: ../../whatsnew/3.5.rst:2266
msgid "New Keywords"
msgstr "Новые ключевые слова"

#: ../../whatsnew/3.5.rst:2268
msgid ""
"``async`` and ``await`` are not recommended to be used as variable, class, "
"function or module names.  Introduced by :pep:`492` in Python 3.5, they will "
"become proper keywords in Python 3.7."
msgstr ""
"``async`` и ``await`` не рекомендуется использовать в качестве имен "
"переменных, классов, функций или модулей. Представленные :pep:`492` в Python "
"3.5, они станут полноценными ключевыми словами в Python 3.7."

#: ../../whatsnew/3.5.rst:2274
msgid "Deprecated Python Behavior"
msgstr "Устаревшее поведение Python"

#: ../../whatsnew/3.5.rst:2276
msgid ""
"Raising the :exc:`StopIteration` exception inside a generator will now "
"generate a silent :exc:`PendingDeprecationWarning`, which will become a non-"
"silent deprecation warning in Python 3.6 and will trigger a :exc:"
"`RuntimeError` in Python 3.7. See :ref:`PEP 479: Change StopIteration "
"handling inside generators <whatsnew-pep-479>` for details."
msgstr ""
"Вызов исключения :exc:`StopIteration` внутри генератора теперь будет "
"генерировать молчаливое :exc:`PendingDeprecationWarning`, которое станет не-"
"тихим предупреждением об устаревании в Python 3.6 и вызовет :exc:"
"`RuntimeError` в Python 3.7. Подробности см. в разделе :ref:`PEP 479: "
"изменение обработки StopIteration внутри генераторов <whatsnew-pep-479>`."

#: ../../whatsnew/3.5.rst:2284
msgid "Unsupported Operating Systems"
msgstr "Неподдерживаемые операционные системы"

#: ../../whatsnew/3.5.rst:2286
msgid ""
"Windows XP is no longer supported by Microsoft, thus, per :PEP:`11`, CPython "
"3.5 is no longer officially supported on this OS."
msgstr ""
"Windows XP больше не поддерживается Microsoft, поэтому, согласно :PEP:`11`, "
"CPython 3.5 больше официально не поддерживается в этой ОС."

#: ../../whatsnew/3.5.rst:2291
msgid "Deprecated Python modules, functions and methods"
msgstr "Устаревшие модули, функции и методы Python"

#: ../../whatsnew/3.5.rst:2293
msgid ""
"The :mod:`formatter` module has now graduated to full deprecation and is "
"still slated for removal in Python 3.6."
msgstr ""
"Модуль :mod:`formatter` полностью устарел и его по-прежнему планируется "
"удалить в Python 3.6."

#: ../../whatsnew/3.5.rst:2296
msgid ""
"The :func:`asyncio.async` function is deprecated in favor of :func:`~asyncio."
"ensure_future`."
msgstr ""
"Функция :func:`asyncio.async` устарела в пользу :func:`~asyncio."
"ensure_future`."

#: ../../whatsnew/3.5.rst:2299
msgid ""
"The :mod:`smtpd` module has in the past always decoded the DATA portion of "
"email messages using the ``utf-8`` codec.  This can now be controlled by the "
"new *decode_data* keyword to :class:`~smtpd.SMTPServer`.  The default value "
"is ``True``, but this default is deprecated.  Specify the *decode_data* "
"keyword with an appropriate value to avoid the deprecation warning."
msgstr ""

#: ../../whatsnew/3.5.rst:2305
msgid ""
"Directly assigning values to the :attr:`~http.cookies.Morsel.key`, :attr:"
"`~http.cookies.Morsel.value` and :attr:`~http.cookies.Morsel.coded_value` "
"of :class:`http.cookies.Morsel` objects is deprecated.  Use the :meth:`~http."
"cookies.Morsel.set` method instead.  In addition, the undocumented "
"*LegalChars* parameter of :meth:`~http.cookies.Morsel.set` is deprecated, "
"and is now ignored."
msgstr ""
"Непосредственное присвоение значений :attr:`~http.cookies.Morsel.key`, :attr:"
"`~http.cookies.Morsel.value` и :attr:`~http.cookies.Morsel.coded_value` из :"
"class: Объекты `http.cookies.Morsel` устарели. Вместо этого используйте "
"метод :meth:`~http.cookies.Morsel.set`. Кроме того, недокументированный "
"параметр *LegalChars* файла :meth:`~http.cookies.Morsel.set` устарел и "
"теперь игнорируется."

#: ../../whatsnew/3.5.rst:2312
msgid ""
"Passing a format string as keyword argument *format_string* to the :meth:"
"`~string.Formatter.format` method of the :class:`string.Formatter` class has "
"been deprecated. (Contributed by Serhiy Storchaka in :issue:`23671`.)"
msgstr ""
"Передача строки формата в качестве аргумента ключевого слова *format_string* "
"в метод :meth:`~string.Formatter.format` класса :class:`string.Formatter` "
"устарела. (Предоставлено Сергеем Сторчакой в ​​:issue:`23671`.)"

#: ../../whatsnew/3.5.rst:2317
msgid ""
"The :func:`platform.dist` and :func:`platform.linux_distribution` functions "
"are now deprecated.  Linux distributions use too many different ways of "
"describing themselves, so the functionality is left to a package. "
"(Contributed by Vajrasky Kok and Berker Peksag in :issue:`1322`.)"
msgstr ""
"Функции :func:`platform.dist` и :func:`platform.linux_distribution` "
"объявлены устаревшими. Дистрибутивы Linux используют слишком много разных "
"способов описания себя, поэтому функциональность оставлена ​​на усмотрение "
"пакета. (Предоставлено Ваджраски Коком и Беркером Пексагом в :issue:`1322`.)"

#: ../../whatsnew/3.5.rst:2322
msgid ""
"The previously undocumented ``from_function`` and ``from_builtin`` methods "
"of :class:`inspect.Signature` are deprecated.  Use the new :meth:`Signature."
"from_callable() <inspect.Signature.from_callable>` method instead. "
"(Contributed by Yury Selivanov in :issue:`24248`.)"
msgstr ""
"Ранее недокументированные методы from_function и from_builtin :class:inspect."
"Signature устарели. Вместо этого используйте новый метод :meth:`Signature."
"from_callable() <inspect.Signature.from_callable>`. (Автор: Юрий Селиванов "
"в :issue:`24248`.)"

#: ../../whatsnew/3.5.rst:2327
msgid ""
"The :func:`inspect.getargspec` function is deprecated and scheduled to be "
"removed in Python 3.6.  (See :issue:`20438` for details.)"
msgstr ""
"Функция :func:`inspect.getargspec` устарела и ее планируется удалить в "
"Python 3.6. (Подробности см. в :issue:`20438`.)"

#: ../../whatsnew/3.5.rst:2330
msgid ""
"The :mod:`inspect` :func:`~inspect.getfullargspec`, :func:`~inspect."
"getcallargs`, and :func:`~inspect.formatargspec` functions are deprecated in "
"favor of the :func:`inspect.signature` API. (Contributed by Yury Selivanov "
"in :issue:`20438`.)"
msgstr ""
"Функции :mod:`inspect` :func:`~inspect.getfullargspec`, :func:`~inspect."
"getcallargs` и :func:`~inspect.formatargspec` устарели в пользу :func:"
"`inspect. подпись` API. (Добавлен Юрием Селивановым в :issue:`20438`.)"

#: ../../whatsnew/3.5.rst:2335
msgid ""
":func:`~inspect.getargvalues` and :func:`~inspect.formatargvalues` functions "
"were inadvertently marked as deprecated with the release of Python 3.5.0."
msgstr ""
"Функции :func:`~inspect.getargvalues` и :func:`~inspect.formatargvalues` "
"были случайно помечены как устаревшие в выпуске Python 3.5.0."

#: ../../whatsnew/3.5.rst:2338
msgid ""
"Use of :const:`re.LOCALE` flag with str patterns or :const:`re.ASCII` is now "
"deprecated.  (Contributed by Serhiy Storchaka in :issue:`22407`.)"
msgstr ""
"Использование флага :const:`re.LOCALE` с шаблонами str или :const:`re.ASCII` "
"больше не рекомендуется. (Добавлен Сергеем Сторчакой в ​​:issue:`22407`.)"

#: ../../whatsnew/3.5.rst:2341
msgid ""
"Use of unrecognized special sequences consisting of ``'\\'`` and an ASCII "
"letter in regular expression patterns and replacement patterns now raises a "
"deprecation warning and will be forbidden in Python 3.6. (Contributed by "
"Serhiy Storchaka in :issue:`23622`.)"
msgstr ""
"Использование нераспознанных специальных последовательностей, состоящих из "
"``'\\'`` и буквы ASCII в шаблонах регулярных выражений и шаблонах замены, "
"теперь вызывает предупреждение об устаревании и будет запрещено в Python "
"3.6. (Предоставлено Сергеем Сторчакой в ​​:issue:`23622`.)"

#: ../../whatsnew/3.5.rst:2346
msgid ""
"The undocumented and unofficial *use_load_tests* default argument of the :"
"meth:`unittest.TestLoader.loadTestsFromModule` method now is deprecated and "
"ignored. (Contributed by Robert Collins and Barry A. Warsaw in :issue:"
"`16662`.)"
msgstr ""
"Недокументированный и неофициальный аргумент по умолчанию *use_load_tests* "
"метода :meth:`unittest.TestLoader.loadTestsFromModule` теперь считается "
"устаревшим и игнорируется. (Предоставлено Робертом Коллинзом и Барри А. "
"Варшавой в :issue:`16662`.)"

#: ../../whatsnew/3.5.rst:2353
msgid "Removed"
msgstr "Удалено"

#: ../../whatsnew/3.5.rst:2356
msgid "API and Feature Removals"
msgstr "Удаление API и функций"

#: ../../whatsnew/3.5.rst:2358
msgid ""
"The following obsolete and previously deprecated APIs and features have been "
"removed:"
msgstr ""
"Следующие устаревшие и ранее не рекомендуемые API и функции были удалены:"

#: ../../whatsnew/3.5.rst:2361
msgid ""
"The ``__version__`` attribute has been dropped from the email package.  The "
"email code hasn't been shipped separately from the stdlib for a long time, "
"and the ``__version__`` string was not updated in the last few releases."
msgstr ""
"Атрибут ``__version__`` был удален из пакета электронной почты. Код "
"электронной почты уже давно не поставляется отдельно от стандартной "
"библиотеки, а строка ``__version__`` не обновлялась в последних нескольких "
"выпусках."

#: ../../whatsnew/3.5.rst:2365
msgid ""
"The internal ``Netrc`` class in the :mod:`ftplib` module was deprecated in "
"3.4, and has now been removed. (Contributed by Matt Chaput in :issue:`6623`.)"
msgstr ""
"The internal ``Netrc`` class in the :mod:`ftplib` module was deprecated in "
"3.4, and has now been removed. (Contributed by Matt Chaput in :issue:`6623`.)"

#: ../../whatsnew/3.5.rst:2369
msgid "The concept of ``.pyo`` files has been removed."
msgstr "Концепция файлов ``.pyo`` была удалена."

#: ../../whatsnew/3.5.rst:2371
msgid ""
"The JoinableQueue class in the provisional :mod:`asyncio` module was "
"deprecated in 3.4.4 and is now removed. (Contributed by A. Jesse Jiryu Davis "
"in :issue:`23464`.)"
msgstr ""
"Класс JoinableQueue во временном модуле :mod:`asyncio` устарел в версии "
"3.4.4 и теперь удален. (Предоставлено А. Джесси Джирю Дэвисом в :issue:"
"`23464`.)"

#: ../../whatsnew/3.5.rst:2377
msgid "Porting to Python 3.5"
msgstr "Портирование на Python 3.5"

#: ../../whatsnew/3.5.rst:2379
msgid ""
"This section lists previously described changes and other bugfixes that may "
"require changes to your code."
msgstr ""
"В этом разделе перечислены ранее описанные изменения и другие исправления "
"ошибок, которые могут потребовать внесения изменений в ваш код."

#: ../../whatsnew/3.5.rst:2384
msgid "Changes in Python behavior"
msgstr "Изменения в поведении Python"

#: ../../whatsnew/3.5.rst:2386
msgid ""
"Due to an oversight, earlier Python versions erroneously accepted the "
"following syntax::"
msgstr ""
"Из-за недосмотра более ранние версии Python ошибочно принимали следующий "
"синтаксис:"

#: ../../whatsnew/3.5.rst:2392
msgid ""
"Python 3.5 now correctly raises a :exc:`SyntaxError`, as generator "
"expressions must be put in parentheses if not a sole argument to a function."
msgstr ""
"Python 3.5 теперь корректно вызывает ошибку :exc:`SyntaxError`, поскольку "
"выражения генератора должны быть заключены в круглые скобки, если они не "
"являются единственным аргументом функции."

#: ../../whatsnew/3.5.rst:2397
msgid "Changes in the Python API"
msgstr "Изменения в API Python"

#: ../../whatsnew/3.5.rst:2399
msgid ""
":pep:`475`: System calls are now retried when interrupted by a signal "
"instead of raising :exc:`InterruptedError` if the Python signal handler does "
"not raise an exception."
msgstr ""
":pep:`475`: Системные вызовы теперь повторяются при прерывании сигналом, а "
"не вызывают :exc:`InterruptedError`, если обработчик сигнала Python не "
"вызывает исключение."

#: ../../whatsnew/3.5.rst:2403
msgid ""
"Before Python 3.5, a :class:`datetime.time` object was considered to be "
"false if it represented midnight in UTC.  This behavior was considered "
"obscure and error-prone and has been removed in Python 3.5.  See :issue:"
"`13936` for full details."
msgstr ""
"До Python 3.5 объект :class:`datetime.time` считался ложным, если он "
"представлял полночь в формате UTC. Такое поведение считалось непонятным и "
"подверженным ошибкам, и оно было удалено в Python 3.5. Подробности смотрите "
"в :issue:`13936`."

#: ../../whatsnew/3.5.rst:2408
msgid ""
"The :meth:`ssl.SSLSocket.send()` method now raises either :exc:`ssl."
"SSLWantReadError` or :exc:`ssl.SSLWantWriteError` on a non-blocking socket "
"if the operation would block.  Previously, it would return ``0``.  "
"(Contributed by Nikolaus Rath in :issue:`20951`.)"
msgstr ""

#: ../../whatsnew/3.5.rst:2413
msgid ""
"The ``__name__`` attribute of generators is now set from the function name, "
"instead of being set from the code name. Use ``gen.gi_code.co_name`` to "
"retrieve the code name. Generators also have a new ``__qualname__`` "
"attribute, the qualified name, which is now used for the representation of a "
"generator (``repr(gen)``). (Contributed by Victor Stinner in :issue:`21205`.)"
msgstr ""
"Атрибут генераторов ``__name__`` теперь устанавливается по имени функции, а "
"не по кодовому имени. Используйте ``gen.gi_code.co_name`` для получения "
"кодового имени. Генераторы также имеют новый атрибут ``__qualname__``, "
"квалифицированное имя, которое теперь используется для представления "
"генератора (``repr(gen)``). (Предоставлено Виктором Стиннером в :issue:"
"`21205`.)"

#: ../../whatsnew/3.5.rst:2420
msgid ""
"The deprecated \"strict\" mode and argument of :class:`~html.parser."
"HTMLParser`, :meth:`!HTMLParser.error`, and the :exc:`!HTMLParserError` "
"exception have been removed.  (Contributed by Ezio Melotti in :issue:"
"`15114`.) The *convert_charrefs* argument of :class:`~html.parser."
"HTMLParser` is now ``True`` by default.  (Contributed by Berker Peksag in :"
"issue:`21047`.)"
msgstr ""
"Устаревший «строгий» режим и аргумент :class:`~html.parser.HTMLParser`, :"
"meth:`!HTMLParser.error` и исключение :exc:`!HTMLParserError` были удалены. "
"(Внесено Эцио Мелотти в :issue:`15114`.) Аргумент *convert_charrefs* :class:"
"`~html.parser.HTMLParser` теперь по умолчанию имеет значение ``True``. "
"(Предоставлено Беркером Пексагом в :issue:`21047`.)"

#: ../../whatsnew/3.5.rst:2426
msgid ""
"Although it is not formally part of the API, it is worth noting for porting "
"purposes (ie: fixing tests) that error messages that were previously of the "
"form \"'sometype' does not support the buffer protocol\" are now of the form "
"\"a :term:`bytes-like object` is required, not 'sometype'\". (Contributed by "
"Ezio Melotti in :issue:`16518`.)"
msgstr ""
"Хотя формально это не является частью API, стоит отметить, что в целях "
"портирования (т. е. исправления тестов) сообщения об ошибках, которые раньше "
"имели форму «sometype не поддерживает протокол буфера», теперь имеют форму "
"«a». :term:`Требуется `байтовый объект`, а не `sometype'\". (Предоставлено "
"Эцио Мелотти в :issue:`16518`.)"

#: ../../whatsnew/3.5.rst:2432
msgid ""
"If the current directory is set to a directory that no longer exists then :"
"exc:`FileNotFoundError` will no longer be raised and instead :meth:"
"`~importlib.machinery.FileFinder.find_spec` will return ``None`` **without** "
"caching ``None`` in :data:`sys.path_importer_cache`, which is different than "
"the typical case (:issue:`22834`)."
msgstr ""
"Если текущий каталог установлен в каталог, который больше не существует, то :"
"exc:`FileNotFoundError` больше не будет вызываться и вместо этого :meth:"
"`~importlib.machinery.FileFinder.find_spec` вернет ``None`` **без ** "
"кэширование ``None`` в :data:`sys.path_importer_cache`, что отличается от "
"типичного случая (:issue:`22834`)."

#: ../../whatsnew/3.5.rst:2438
msgid ""
"HTTP status code and messages from :mod:`http.client` and :mod:`http.server` "
"were refactored into a common :class:`~http.HTTPStatus` enum.  The values "
"in :mod:`http.client` and :mod:`http.server` remain available for backwards "
"compatibility.  (Contributed by Demian Brecht in :issue:`21793`.)"
msgstr ""
"Код состояния HTTP и сообщения от :mod:`http.client` и :mod:`http.server` "
"были преобразованы в общее перечисление :class:`~http.HTTPStatus`. Значения "
"в :mod:`http.client` и :mod:`http.server` остаются доступными для обратной "
"совместимости. (Предоставлено Демианом Брехтом в :issue:`21793`.)"

#: ../../whatsnew/3.5.rst:2443
msgid ""
"When an import loader defines :meth:`importlib.machinery.Loader.exec_module` "
"it is now expected to also define :meth:`~importlib.machinery.Loader."
"create_module` (raises a :exc:`DeprecationWarning` now, will be an error in "
"Python 3.6). If the loader inherits from :class:`importlib.abc.Loader` then "
"there is nothing to do, else simply define :meth:`~importlib.machinery."
"Loader.create_module` to return ``None``.  (Contributed by Brett Cannon in :"
"issue:`23014`.)"
msgstr ""
"Когда загрузчик импорта определяет :meth:`importlib.machinery.Loader."
"exec_module`, теперь ожидается, что он также определит :meth:`~importlib."
"machinery.Loader.create_module` (вызывает :exc:`DeprecationWarning`, будет "
"ошибка в Python 3.6). Если загрузчик наследует от :class:`importlib.abc."
"Loader`, то делать нечего, иначе просто определите :meth:`~importlib."
"machinery.Loader.create_module`, чтобы он возвращал ``None``. (Предоставлено "
"Бреттом Кэнноном в :issue:`23014`.)"

#: ../../whatsnew/3.5.rst:2451
msgid ""
"The :func:`re.split` function always ignored empty pattern matches, so the "
"``\"x*\"`` pattern worked the same as ``\"x+\"``, and the ``\"\\b\"`` "
"pattern never worked.  Now :func:`re.split` raises a warning if the pattern "
"could match an empty string.  For compatibility, use patterns that never "
"match an empty string (e.g. ``\"x+\"`` instead of ``\"x*\"``).  Patterns "
"that could only match an empty string (such as ``\"\\b\"``) now raise an "
"error. (Contributed by Serhiy Storchaka in :issue:`22818`.)"
msgstr ""
"Функция :func:`re.split` всегда игнорировала пустые совпадения с шаблонами, "
"поэтому шаблон ``\"x*\"`` работал так же, как ``\"x+\"``, а шаблон "
"``\"\\b\"`` никогда не работал. Теперь :func:`re.split` выдает "
"предупреждение, если шаблон может соответствовать пустой строке. Для "
"совместимости используйте шаблоны, которые никогда не соответствуют пустой "
"строке (например, ``\"x+\"`` вместо ``\"x*\"``. Шаблоны, которые могут "
"соответствовать только пустой строке (например, ``\"\\b\"``), теперь "
"вызывают ошибку. (Предоставлено Сергеем Сторчакой в ​​:issue:`22818`.)"

#: ../../whatsnew/3.5.rst:2459
msgid ""
"The :class:`http.cookies.Morsel` dict-like interface has been made self "
"consistent:  morsel comparison now takes the :attr:`~http.cookies.Morsel."
"key` and :attr:`~http.cookies.Morsel.value` into account, :meth:`~http."
"cookies.Morsel.copy` now results in a :class:`~http.cookies.Morsel` instance "
"rather than a :class:`dict`, and :meth:`~http.cookies.Morsel.update` will "
"now raise an exception if any of the keys in the update dictionary are "
"invalid.  In addition, the undocumented *LegalChars* parameter of :func:"
"`~http.cookies.Morsel.set` is deprecated and is now ignored.  (Contributed "
"by Demian Brecht in :issue:`2211`.)"
msgstr ""
"Диктообразный интерфейс :class:`http.cookies.Morsel` стал самосогласованным: "
"сравнение кусочков теперь использует :attr:`~http.cookies.Morsel.key` и :"
"attr:`~http.cookies.Morsel` .value`, :meth:`~http.cookies.Morsel.copy` "
"теперь приводит к созданию экземпляра :class:`~http.cookies.Morsel` вместо :"
"class:`dict` и :meth:` ~http.cookies.Morsel.update` теперь будет вызывать "
"исключение, если какой-либо из ключей в словаре обновления недействителен. "
"Кроме того, недокументированный параметр *LegalChars* файла :func:`~http."
"cookies.Morsel.set` устарел и теперь игнорируется. (Предоставлено Демианом "
"Брехтом в :issue:`2211`.)"

#: ../../whatsnew/3.5.rst:2469
msgid ""
":pep:`488` has removed ``.pyo`` files from Python and introduced the "
"optional ``opt-`` tag in ``.pyc`` file names. The :func:`importlib.util."
"cache_from_source` has gained an *optimization* parameter to help control "
"the ``opt-`` tag. Because of this, the *debug_override* parameter of the "
"function is now deprecated. ``.pyo`` files are also no longer supported as a "
"file argument to the Python interpreter and thus serve no purpose when "
"distributed on their own (i.e. sourceless code distribution). Due to the "
"fact that the magic number for bytecode has changed in Python 3.5, all old "
"``.pyo`` files from previous versions of Python are invalid regardless of "
"this PEP."
msgstr ""
":pep:`488` удалил файлы ``.pyo`` из Python и добавил дополнительный тег "
"``opt-`` в имена файлов ``.pyc``. :func:`importlib.util.cache_from_source` "
"получил параметр *optimization*, помогающий управлять тегом ``opt-``. По "
"этой причине параметр *debug_override* функции объявлен устаревшим. Файлы ``."
"pyo`` также больше не поддерживаются в качестве файлового аргумента "
"интерпретатора Python и, таким образом, не имеют смысла при распространении "
"самостоятельно (т. е. при распространении кода без исходного кода). В связи "
"с тем, что магическое число байт-кода изменилось в Python 3.5, все старые "
"файлы ``.pyo`` из предыдущих версий Python недействительны независимо от "
"этого PEP."

#: ../../whatsnew/3.5.rst:2480
msgid ""
"The :mod:`socket` module now exports the :const:`~socket.CAN_RAW_FD_FRAMES` "
"constant on linux 3.6 and greater."
msgstr ""
"Модуль :mod:`socket` теперь экспортирует константу :const:`~socket."
"CAN_RAW_FD_FRAMES` в Linux 3.6 и более поздних версиях."

#: ../../whatsnew/3.5.rst:2483
msgid ""
"The :func:`ssl.cert_time_to_seconds` function now interprets the input time "
"as UTC and not as local time, per :rfc:`5280`.  Additionally, the return "
"value is always an :class:`int`. (Contributed by Akira Li in :issue:`19940`.)"
msgstr ""
"Функция :func:`ssl.cert_time_to_секундs` теперь интерпретирует входное время "
"как время в формате UTC, а не как местное время, согласно :rfc:`5280`. Кроме "
"того, возвращаемым значением всегда является :class:`int`. (Предоставлено "
"Акирой Ли в :issue:`19940`.)"

#: ../../whatsnew/3.5.rst:2487
msgid ""
"The ``pygettext.py`` Tool now uses the standard +NNNN format for timezones "
"in the POT-Creation-Date header."
msgstr ""
"Инструмент ``pygettext.py`` теперь использует стандартный формат +NNNN для "
"часовых поясов в заголовке POT-Creation-Date."

#: ../../whatsnew/3.5.rst:2490
msgid ""
"The :mod:`smtplib` module now uses :data:`sys.stderr` instead of the "
"previous module-level :data:`stderr` variable for debug output.  If your "
"(test) program depends on patching the module-level variable to capture the "
"debug output, you will need to update it to capture sys.stderr instead."
msgstr ""
"Модуль :mod:`smtplib` теперь использует :data:`sys.stderr` вместо предыдущей "
"переменной :data:`stderr` уровня модуля для вывода отладочных данных. Если "
"ваша (тестовая) программа зависит от исправления переменной уровня модуля "
"для захвата выходных данных отладки, вам потребуется обновить ее, чтобы "
"вместо этого записывать sys.stderr."

#: ../../whatsnew/3.5.rst:2495
msgid ""
"The :meth:`str.startswith` and :meth:`str.endswith` methods no longer return "
"``True`` when finding the empty string and the indexes are completely out of "
"range.  (Contributed by Serhiy Storchaka in :issue:`24284`.)"
msgstr ""
"Методы :meth:`str.startswith` и :meth:`str.endswith` больше не возвращают "
"``True`` при обнаружении пустой строки, а индексы полностью выходят за "
"пределы допустимого диапазона. (Предоставлено Сергеем Сторчакой в ​​:issue:"
"`24284`.)"

#: ../../whatsnew/3.5.rst:2499
msgid ""
"The :func:`inspect.getdoc` function now returns documentation strings "
"inherited from base classes.  Documentation strings no longer need to be "
"duplicated if the inherited documentation is appropriate.  To suppress an "
"inherited string, an empty string must be specified (or the documentation "
"may be filled in).  This change affects the output of the :mod:`pydoc` "
"module and the :func:`help` function. (Contributed by Serhiy Storchaka in :"
"issue:`15582`.)"
msgstr ""
"Функция :func:`inspect.getdoc` теперь возвращает строки документации, "
"унаследованные от базовых классов. Строки документации больше не нужно "
"дублировать, если унаследованная документация подходит. Чтобы подавить "
"унаследованную строку, необходимо указать пустую строку (или можно заполнить "
"документацию). Это изменение влияет на вывод модуля :mod:`pydoc` и функции :"
"func:`help`. (Предоставлено Сергеем Сторчакой в ​​:issue:`15582`.)"

#: ../../whatsnew/3.5.rst:2507
msgid ""
"Nested :func:`functools.partial` calls are now flattened.  If you were "
"relying on the previous behavior, you can now either add an attribute to a :"
"func:`functools.partial` object or you can create a subclass of :func:"
"`functools.partial`. (Contributed by Alexander Belopolsky in :issue:`7830`.)"
msgstr ""
"Вложенные вызовы :func:`functools.partial` теперь сглажены. Если вы "
"полагались на предыдущее поведение, теперь вы можете либо добавить атрибут к "
"объекту :func:`functools.partial`, либо создать подкласс :func:`functools."
"partial`. (Предоставлено Александром Белопольским в :issue:`7830`.)"

#: ../../whatsnew/3.5.rst:2514
msgid "Changes in the C API"
msgstr "Изменения в C API"

#: ../../whatsnew/3.5.rst:2516
msgid ""
"The undocumented :c:member:`!format` member of the (non-public) :c:type:"
"`PyMemoryViewObject` structure has been removed. All extensions relying on "
"the relevant parts in ``memoryobject.h`` must be rebuilt."
msgstr ""
"Недокументированный член :c:member:`!format` (непубличной) структуры :c:type:"
"`PyMemoryViewObject` был удален. Все расширения, использующие "
"соответствующие части memoryobject.h, должны быть пересобраны."

#: ../../whatsnew/3.5.rst:2521
msgid ""
"The :c:type:`PyMemAllocator` structure was renamed to :c:type:"
"`PyMemAllocatorEx` and a new ``calloc`` field was added."
msgstr ""
"Структура :c:type:`PyMemAllocator` была переименована в :c:type:"
"`PyMemAllocatorEx` и было добавлено новое поле ``calloc``."

#: ../../whatsnew/3.5.rst:2524
msgid ""
"Removed non-documented macro :c:macro:`!PyObject_REPR()` which leaked "
"references. Use format character ``%R`` in :c:func:`PyUnicode_FromFormat`-"
"like functions to format the :func:`repr` of the object. (Contributed by "
"Serhiy Storchaka in :issue:`22453`.)"
msgstr ""
"Удален недокументированный макрос :c:macro:`! PyObject_REPR ()`, из-за "
"которого произошла утечка ссылок. Используйте символ форматирования ``%R`` в "
"функциях, подобных :c:func:`PyUnicode_FromFormat`, для форматирования :func:"
"`repr` объекта. (Предоставлено Сергеем Сторчакой в ​​:issue:`22453`.)"

#: ../../whatsnew/3.5.rst:2529
msgid ""
"Because the lack of the :attr:`__module__` attribute breaks pickling and "
"introspection, a deprecation warning is now raised for builtin types without "
"the :attr:`__module__` attribute.  This would be an AttributeError in the "
"future. (Contributed by Serhiy Storchaka in :issue:`20204`.)"
msgstr ""

#: ../../whatsnew/3.5.rst:2535
msgid ""
"As part of the :pep:`492` implementation, the ``tp_reserved`` slot of :c:"
"type:`PyTypeObject` was replaced with a :c:member:`~PyTypeObject."
"tp_as_async` slot.  Refer to :ref:`coro-objects` for new types, structures "
"and functions."
msgstr ""
"В рамках реализации :pep:`492` слот ``tp_reserved`` :c:type:`PyTypeObject` "
"был заменен слотом :c:member:`~PyTypeObject.tp_as_async`. Обратитесь к :ref:"
"`coro-objects` для получения информации о новых типах, структурах и функциях."

#: ../../whatsnew/3.5.rst:2542
msgid "Notable changes in Python 3.5.4"
msgstr "Заметные изменения в Python 3.5.4"

#: ../../whatsnew/3.5.rst:2545
msgid "New ``make regen-all`` build target"
msgstr "Новая цель сборки make regen-all"

#: ../../whatsnew/3.5.rst:2547
msgid ""
"To simplify cross-compilation, and to ensure that CPython can reliably be "
"compiled without requiring an existing version of Python to already be "
"available, the autotools-based build system no longer attempts to implicitly "
"recompile generated files based on file modification times."
msgstr ""
"Чтобы упростить кросс-компиляцию и гарантировать, что CPython может быть "
"надежно скомпилирован без необходимости наличия существующей версии Python, "
"система сборки на основе autotools больше не пытается неявно "
"перекомпилировать сгенерированные файлы на основе времени их изменения."

#: ../../whatsnew/3.5.rst:2552
msgid ""
"Instead, a new ``make regen-all`` command has been added to force "
"regeneration of these files when desired (e.g. after an initial version of "
"Python has already been built based on the pregenerated versions)."
msgstr ""
"Вместо этого была добавлена ​​новая команда make regen-all для принудительной "
"регенерации этих файлов при необходимости (например, после того, как "
"начальная версия Python уже была собрана на основе предварительно "
"сгенерированных версий)."

#: ../../whatsnew/3.5.rst:2556
msgid ""
"More selective regeneration targets are also defined - see :source:`Makefile."
"pre.in` for details."
msgstr ""
"Также определены более выборочные цели регенерации — подробности см. в :"
"source:`Makefile.pre.in`."

#: ../../whatsnew/3.5.rst:2559 ../../whatsnew/3.5.rst:2572
msgid "(Contributed by Victor Stinner in :issue:`23404`.)"
msgstr "(Предоставлено Виктором Стиннером в :issue:`23404`.)"

#: ../../whatsnew/3.5.rst:2565
msgid "Removal of ``make touch`` build target"
msgstr "Удаление цели сборки ``make touch``."

#: ../../whatsnew/3.5.rst:2567
msgid ""
"The ``make touch`` build target previously used to request implicit "
"regeneration of generated files by updating their modification times has "
"been removed."
msgstr ""
"Цель сборки make touch, ранее использовавшаяся для запроса неявной "
"регенерации сгенерированных файлов путем обновления времени их модификации, "
"была удалена."

#: ../../whatsnew/3.5.rst:2570
msgid "It has been replaced by the new ``make regen-all`` target."
msgstr "Он был заменен новой целью make regen-all."
