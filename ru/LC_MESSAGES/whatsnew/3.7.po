# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# Rafael Fontenelle <rffontenelle@gmail.com>, 2024
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.10\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-01-10 16:06+0000\n"
"PO-Revision-Date: 2022-11-05 17:23+0000\n"
"Last-Translator: Rafael Fontenelle <rffontenelle@gmail.com>, 2024\n"
"Language-Team: Russian (https://app.transifex.com/python-doc/teams/5390/"
"ru/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ru\n"
"Plural-Forms: nplurals=4; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && "
"n%10<=4 && (n%100<12 || n%100>14) ? 1 : n%10==0 || (n%10>=5 && n%10<=9) || "
"(n%100>=11 && n%100<=14)? 2 : 3);\n"

#: ../../whatsnew/3.7.rst:3
msgid "What's New In Python 3.7"
msgstr "Что нового в Python 3.7"

#: ../../whatsnew/3.7.rst:0
msgid "Editor"
msgstr "Редактор"

#: ../../whatsnew/3.7.rst:5
msgid "Elvis Pranskevichus <elvis@magic.io>"
msgstr "Elvis Pranskevichus <elvis@magic.io>"

#: ../../whatsnew/3.7.rst:47
msgid ""
"This article explains the new features in Python 3.7, compared to 3.6. "
"Python 3.7 was released on June 27, 2018. For full details, see the :ref:"
"`changelog <changelog>`."
msgstr ""
"В этой статье объясняются новые возможности Python 3.7 по сравнению с "
"версией 3.6. Python 3.7 был выпущен 27 июня 2018 г. Подробную информацию см. "
"в журнале изменений <changelog>`."

#: ../../whatsnew/3.7.rst:53
msgid "Summary -- Release Highlights"
msgstr "Резюме: основные моменты выпуска"

#: ../../whatsnew/3.7.rst:58
msgid "New syntax features:"
msgstr "Новые возможности синтаксиса:"

#: ../../whatsnew/3.7.rst:60
msgid ""
":ref:`PEP 563 <whatsnew37-pep563>`, postponed evaluation of type annotations."
msgstr ":ref:`PEP 563 <whatsnew37-pep563>`, отложенная оценка аннотаций типов."

#: ../../whatsnew/3.7.rst:62
msgid "Backwards incompatible syntax changes:"
msgstr "Изменения синтаксиса обратной несовместимости:"

#: ../../whatsnew/3.7.rst:64
msgid ":keyword:`async` and :keyword:`await` are now reserved keywords."
msgstr ""
":keyword:`async` и :keyword:`await` теперь являются зарезервированными "
"ключевыми словами."

#: ../../whatsnew/3.7.rst:66
msgid "New library modules:"
msgstr "Новые библиотечные модули:"

#: ../../whatsnew/3.7.rst:68
msgid ""
":mod:`contextvars`: :ref:`PEP 567 -- Context Variables <whatsnew37-pep567>`"
msgstr ""
":mod:`contextvars`: :ref:`PEP 567 -- Переменные контекста <whatsnew37-"
"pep567>`"

#: ../../whatsnew/3.7.rst:69
msgid ":mod:`dataclasses`: :ref:`PEP 557 -- Data Classes <whatsnew37-pep557>`"
msgstr ""
":mod:`dataclasses`: :ref:`PEP 557 -- Классы данных <whatsnew37-pep557>`"

#: ../../whatsnew/3.7.rst:70
msgid ":ref:`whatsnew37_importlib_resources`"
msgstr ":ref:`whatsnew37_importlib_resources`"

#: ../../whatsnew/3.7.rst:72
msgid "New built-in features:"
msgstr "Новые встроенные функции:"

#: ../../whatsnew/3.7.rst:74
msgid ""
":ref:`PEP 553 <whatsnew37-pep553>`, the new :func:`breakpoint` function."
msgstr ":ref:`PEP 553 <whatsnew37-pep553>`, новая функция :func:`breakpoint`."

#: ../../whatsnew/3.7.rst:76
msgid "Python data model improvements:"
msgstr "Улучшения модели данных Python:"

#: ../../whatsnew/3.7.rst:78
msgid ""
":ref:`PEP 562 <whatsnew37-pep562>`, customization of access to module "
"attributes."
msgstr ""
":ref:`PEP 562 <whatsnew37-pep562>`, настройка доступа к атрибутам модуля."

#: ../../whatsnew/3.7.rst:81
msgid ""
":ref:`PEP 560 <whatsnew37-pep560>`, core support for typing module and "
"generic types."
msgstr ""
":ref:`PEP 560 <whatsnew37-pep560>`, основная поддержка модуля типизации и "
"универсальных типов."

#: ../../whatsnew/3.7.rst:84
msgid ""
"the insertion-order preservation nature of :ref:`dict <typesmapping>` "
"objects `has been declared`_ to be an official part of the Python language "
"spec."
msgstr ""
"природа сохранения порядка вставки объектов :ref:`dict <typesmapping>` была "
"объявлена ​​`_ официальной частью спецификации языка Python."

#: ../../whatsnew/3.7.rst:90
msgid "Significant improvements in the standard library:"
msgstr "Значительные улучшения в стандартной библиотеке:"

#: ../../whatsnew/3.7.rst:92
msgid ""
"The :mod:`asyncio` module has received new features, significant :ref:"
"`usability and performance improvements <whatsnew37_asyncio>`."
msgstr ""
"Модуль :mod:`asyncio` получил новые функции, значительные улучшения :ref:"
"`удобства использования и производительности <whatsnew37_asyncio>`."

#: ../../whatsnew/3.7.rst:95
msgid ""
"The :mod:`time` module gained support for :ref:`functions with nanosecond "
"resolution <whatsnew37-pep564>`."
msgstr ""
"Модуль :mod:`time` получил поддержку :ref:`функций с наносекундным "
"разрешением <whatsnew37-pep564>`."

#: ../../whatsnew/3.7.rst:98
msgid "CPython implementation improvements:"
msgstr "Улучшения в реализации CPython:"

#: ../../whatsnew/3.7.rst:100
msgid "Avoiding the use of ASCII as a default text encoding:"
msgstr "Отказ от использования ASCII в качестве кодировки текста по умолчанию:"

#: ../../whatsnew/3.7.rst:102
msgid ":ref:`PEP 538 <whatsnew37-pep538>`, legacy C locale coercion"
msgstr ":ref:`PEP 538 <whatsnew37-pep538>`, устаревшее приведение локали C"

#: ../../whatsnew/3.7.rst:103
msgid ":ref:`PEP 540 <whatsnew37-pep540>`, forced UTF-8 runtime mode"
msgstr ""
":ref:`PEP 540 <whatsnew37-pep540>`, принудительный режим выполнения UTF-8"

#: ../../whatsnew/3.7.rst:104
msgid ":ref:`PEP 552 <whatsnew37-pep552>`, deterministic .pycs"
msgstr ":ref:`PEP 552 <whatsnew37-pep552>`, детерминированный .pycs"

#: ../../whatsnew/3.7.rst:105
msgid ":ref:`New Python Development Mode <whatsnew37-devmode>`"
msgstr ":ref:`Новый режим разработки Python <whatsnew37-devmode>`"

#: ../../whatsnew/3.7.rst:106
msgid ""
":ref:`PEP 565 <whatsnew37-pep565>`, improved :exc:`DeprecationWarning` "
"handling"
msgstr ""
":ref:`PEP 565 <whatsnew37-pep565>`, улучшена обработка :exc:"
"`DeprecationWarning`"

#: ../../whatsnew/3.7.rst:109
msgid "C API improvements:"
msgstr "Улучшения в C API:"

#: ../../whatsnew/3.7.rst:111
msgid ":ref:`PEP 539 <whatsnew37-pep539>`, new C API for thread-local storage"
msgstr ""
":ref:`PEP 539 <whatsnew37-pep539>`, новый C API для локального хранилища "
"потоков"

#: ../../whatsnew/3.7.rst:113
msgid "Documentation improvements:"
msgstr "Улучшение документации:"

#: ../../whatsnew/3.7.rst:115
msgid ":ref:`PEP 545 <whatsnew37-pep545>`, Python documentation translations"
msgstr ":ref:`PEP 545 <whatsnew37-pep545>`, переводы документации Python"

#: ../../whatsnew/3.7.rst:116
msgid ""
"New documentation translations: `Japanese <https://docs.python.org/ja/>`_, "
"`French <https://docs.python.org/fr/>`_, and `Korean <https://docs.python."
"org/ko/>`_."
msgstr ""
"Новые переводы документации: `_ японский <https://docs.python.org/ja/>`_, "
"`французский <https://docs.python.org/fr/>`_ и `корейский <https:// docs."
"python.org/ko/>`_."

#: ../../whatsnew/3.7.rst:120
msgid ""
"This release features notable performance improvements in many areas. The :"
"ref:`whatsnew37-perf` section lists them in detail."
msgstr ""
"Этот выпуск содержит заметные улучшения производительности во многих "
"областях. В разделе :ref:`whatsnew37-perf` они перечислены подробно."

#: ../../whatsnew/3.7.rst:123
msgid ""
"For a list of changes that may affect compatibility with previous Python "
"releases please refer to the :ref:`porting-to-python-37` section."
msgstr ""
"Список изменений, которые могут повлиять на совместимость с предыдущими "
"выпусками Python, см. в разделе :ref:`porting-to-python-37`."

#: ../../whatsnew/3.7.rst:128
msgid "New Features"
msgstr "Новые особенности"

#: ../../whatsnew/3.7.rst:133
msgid "PEP 563: Postponed Evaluation of Annotations"
msgstr "PEP 563: Отложенная оценка аннотаций"

#: ../../whatsnew/3.7.rst:135
msgid ""
"The advent of type hints in Python uncovered two glaring usability issues "
"with the functionality of annotations added in :pep:`3107` and refined "
"further in :pep:`526`:"
msgstr ""
"Появление подсказок типов в Python выявило две явные проблемы с удобством "
"использования функциональности аннотаций, добавленных в :pep:`3107` и "
"доработанных в :pep:`526`:"

#: ../../whatsnew/3.7.rst:139
msgid ""
"annotations could only use names which were already available in the current "
"scope, in other words they didn't support forward references of any kind; and"
msgstr ""
"аннотации могли использовать только имена, которые уже были доступны в "
"текущей области, другими словами, они не поддерживали никаких прямых ссылок; "
"и"

#: ../../whatsnew/3.7.rst:143
msgid ""
"annotating source code had adverse effects on startup time of Python "
"programs."
msgstr ""
"аннотирование исходного кода отрицательно сказалось на времени запуска "
"программ Python."

#: ../../whatsnew/3.7.rst:146
msgid ""
"Both of these issues are fixed by postponing the evaluation of annotations.  "
"Instead of compiling code which executes expressions in annotations at their "
"definition time, the compiler stores the annotation in a string form "
"equivalent to the AST of the expression in question. If needed, annotations "
"can be resolved at runtime using :func:`typing.get_type_hints`.  In the "
"common case where this is not required, the annotations are cheaper to store "
"(since short strings are interned by the interpreter) and make startup time "
"faster."
msgstr ""
"Обе эти проблемы решаются путем отсрочки оценки аннотаций. Вместо компиляции "
"кода, который выполняет выражения в аннотациях во время их определения, "
"компилятор сохраняет аннотацию в строковой форме, эквивалентной AST "
"рассматриваемого выражения. При необходимости аннотации можно разрешить во "
"время выполнения с помощью :func:`typing.get_type_hints`. В обычном случае, "
"когда это не требуется, аннотации дешевле хранить (поскольку короткие строки "
"интерпретируются интерпретатором) и ускоряют время запуска."

#: ../../whatsnew/3.7.rst:155
msgid ""
"Usability-wise, annotations now support forward references, making the "
"following syntax valid::"
msgstr ""
"С точки зрения удобства использования аннотации теперь поддерживают прямые "
"ссылки, что делает допустимым следующий синтаксис:"

#: ../../whatsnew/3.7.rst:169
msgid ""
"Since this change breaks compatibility, the new behavior needs to be enabled "
"on a per-module basis in Python 3.7 using a :mod:`__future__` import::"
msgstr ""
"Поскольку это изменение нарушает совместимость, новое поведение необходимо "
"включить для каждого модуля в Python 3.7 с помощью :mod:`__future__` import::"

#: ../../whatsnew/3.7.rst:174
msgid "It will become the default in Python 3.10."
msgstr "В Python 3.10 он станет значением по умолчанию."

#: ../../whatsnew/3.7.rst:178
msgid ":pep:`563` -- Postponed evaluation of annotations"
msgstr ":pep:`563` -- Отложенная оценка аннотаций"

#: ../../whatsnew/3.7.rst:179
msgid "PEP written and implemented by Łukasz Langa."
msgstr "PEP написан и реализован Лукашом Лангой."

#: ../../whatsnew/3.7.rst:185
msgid "PEP 538: Legacy C Locale Coercion"
msgstr "PEP 538: устаревшее принуждение локали C"

#: ../../whatsnew/3.7.rst:187
msgid ""
"An ongoing challenge within the Python 3 series has been determining a "
"sensible default strategy for handling the \"7-bit ASCII\" text encoding "
"assumption currently implied by the use of the default C or POSIX locale on "
"non-Windows platforms."
msgstr ""
"Постоянной проблемой в серии Python 3 было определение разумной стратегии по "
"умолчанию для обработки предположения о кодировке текста «7-битный ASCII», "
"которое в настоящее время подразумевается использованием локали C или POSIX "
"по умолчанию на платформах, отличных от Windows."

#: ../../whatsnew/3.7.rst:192
msgid ""
":pep:`538` updates the default interpreter command line interface to "
"automatically coerce that locale to an available UTF-8 based locale as "
"described in the documentation of the new :envvar:`PYTHONCOERCECLOCALE` "
"environment variable. Automatically setting ``LC_CTYPE`` this way means that "
"both the core interpreter and locale-aware C extensions (such as :mod:"
"`readline`) will assume the use of UTF-8 as the default text encoding, "
"rather than ASCII."
msgstr ""
":pep:`538` обновляет интерфейс командной строки интерпретатора по умолчанию, "
"чтобы автоматически привести эту локаль к доступной локали на основе UTF-8, "
"как описано в документации новой переменной среды :envvar:"
"`PYTHONCOERCECLOCALE`. Автоматическая установка LC_CTYPE таким образом "
"означает, что как основной интерпретатор, так и расширения C с учетом локали "
"(такие как :mod:`readline`) будут предполагать использование UTF-8 в "
"качестве кодировки текста по умолчанию, а не ASCII."

#: ../../whatsnew/3.7.rst:200
msgid ""
"The platform support definition in :pep:`11` has also been updated to limit "
"full text handling support to suitably configured non-ASCII based locales."
msgstr ""
"Определение поддержки платформы в :pep:`11` также было обновлено, чтобы "
"ограничить поддержку полнотекстовой обработки правильно настроенными "
"локалями, не основанными на ASCII."

#: ../../whatsnew/3.7.rst:203
msgid ""
"As part of this change, the default error handler for :data:`~sys.stdin` "
"and :data:`~sys.stdout` is now ``surrogateescape`` (rather than ``strict``) "
"when using any of the defined coercion target locales (currently ``C."
"UTF-8``, ``C.utf8``, and ``UTF-8``).  The default error handler for :data:"
"`~sys.stderr` continues to be ``backslashreplace``, regardless of locale."
msgstr ""
"В рамках этого изменения обработчиком ошибок по умолчанию для :data:`~sys."
"stdin` и :data:`~sys.stdout` теперь является ``surrogateescape`` (а не "
"``strict``) при использовании любого из определенные целевые локали "
"приведения (в настоящее время C.UTF-8, C.utf8 и UTF-8). Обработчиком ошибок "
"по умолчанию для :data:`~sys.stderr` продолжает оставаться "
"``backslashreplace``, независимо от локали."

#: ../../whatsnew/3.7.rst:209
msgid ""
"Locale coercion is silent by default, but to assist in debugging potentially "
"locale related integration problems, explicit warnings (emitted directly on :"
"data:`~sys.stderr`) can be requested by setting "
"``PYTHONCOERCECLOCALE=warn``. This setting will also cause the Python "
"runtime to emit a warning if the legacy C locale remains active when the "
"core interpreter is initialized."
msgstr ""
"По умолчанию принуждение к локали происходит беззвучно, но для помощи в "
"отладке потенциально связанных с локалью проблем интеграции можно запросить "
"явные предупреждения (выдаваемые непосредственно в :data:`~sys.stderr`), "
"установив ``PYTHONCOERCECLOCALE=warn``. Этот параметр также приведет к тому, "
"что среда выполнения Python выдаст предупреждение, если устаревшая локаль C "
"остается активной при инициализации основного интерпретатора."

#: ../../whatsnew/3.7.rst:215
msgid ""
"While :pep:`538`'s locale coercion has the benefit of also affecting "
"extension modules (such as GNU ``readline``), as well as child processes "
"(including those running non-Python applications and older versions of "
"Python), it has the downside of requiring that a suitable target locale be "
"present on the running system. To better handle the case where no suitable "
"target locale is available (as occurs on RHEL/CentOS 7, for example), Python "
"3.7 also implements :ref:`whatsnew37-pep540`."
msgstr ""
"Хотя принуждение локали :pep:`538` имеет то преимущество, что оно также "
"влияет на модули расширения (такие как GNU ``readline``), а также на "
"дочерние процессы (включая те, которые запускают приложения, отличные от "
"Python, и более старые версии Python), у него есть обратная сторона: "
"требуется, чтобы в работающей системе присутствовала подходящая целевая "
"локаль. Чтобы лучше обрабатывать случай, когда подходящая целевая локаль "
"недоступна (как это происходит, например, в RHEL/CentOS 7), Python 3.7 также "
"реализует :ref:`whatsnew37-pep540`."

#: ../../whatsnew/3.7.rst:225
msgid ":pep:`538` -- Coercing the legacy C locale to a UTF-8 based locale"
msgstr ":pep:`538` -- Приведение устаревшей локали C к локали на основе UTF-8."

#: ../../whatsnew/3.7.rst:226
msgid "PEP written and implemented by Nick Coghlan."
msgstr "PEP написан и реализован Ником Когланом."

#: ../../whatsnew/3.7.rst:232
msgid "PEP 540: Forced UTF-8 Runtime Mode"
msgstr "PEP 540: принудительный режим выполнения UTF-8"

#: ../../whatsnew/3.7.rst:234
msgid ""
"The new :option:`-X` ``utf8`` command line option and :envvar:`PYTHONUTF8` "
"environment variable can be used to enable the :ref:`Python UTF-8 Mode <utf8-"
"mode>`."
msgstr ""
"Новый параметр командной строки :option:`-X` ``utf8`` и переменная среды :"
"envvar:`PYTHONUTF8` могут использоваться для включения режима :ref:`Python "
"UTF-8 <utf8-mode>`."

#: ../../whatsnew/3.7.rst:238
msgid ""
"When in UTF-8 mode, CPython ignores the locale settings, and uses the UTF-8 "
"encoding by default.  The error handlers for :data:`sys.stdin` and :data:"
"`sys.stdout` streams are set to ``surrogateescape``."
msgstr ""
"В режиме UTF-8 CPython игнорирует настройки локали и по умолчанию использует "
"кодировку UTF-8. Обработчики ошибок для потоков :data:`sys.stdin` и :data:"
"`sys.stdout` установлены в ``surrogateescape``."

#: ../../whatsnew/3.7.rst:242
msgid ""
"The forced UTF-8 mode can be used to change the text handling behavior in an "
"embedded Python interpreter without changing the locale settings of an "
"embedding application."
msgstr ""
"Принудительный режим UTF-8 можно использовать для изменения поведения "
"обработки текста во встроенном интерпретаторе Python без изменения настроек "
"локали внедряемого приложения."

#: ../../whatsnew/3.7.rst:246
msgid ""
"While :pep:`540`'s UTF-8 mode has the benefit of working regardless of which "
"locales are available on the running system, it has the downside of having "
"no effect on extension modules (such as GNU ``readline``), child processes "
"running non-Python applications, and child processes running older versions "
"of Python. To reduce the risk of corrupting text data when communicating "
"with such components, Python 3.7 also implements :ref:`whatsnew37-pep540`)."
msgstr ""
"Хотя режим UTF-8 в :pep:`540` имеет то преимущество, что работает независимо "
"от того, какие локали доступны в работающей системе, у него есть и обратная "
"сторона: он не влияет на модули расширения (такие как GNU ``readline``). , "
"дочерние процессы, выполняющие приложения, отличные от Python, и дочерние "
"процессы, выполняющие более старые версии Python. Чтобы снизить риск "
"повреждения текстовых данных при взаимодействии с такими компонентами, "
"Python 3.7 также реализует :ref:`whatsnew37-pep540`)."

#: ../../whatsnew/3.7.rst:253
msgid ""
"The UTF-8 mode is enabled by default when the locale is ``C`` or ``POSIX``, "
"and the :pep:`538` locale coercion feature fails to change it to a UTF-8 "
"based alternative (whether that failure is due to ``PYTHONCOERCECLOCALE=0`` "
"being set, ``LC_ALL`` being set, or the lack of a suitable target locale)."
msgstr ""
"Режим UTF-8 включается по умолчанию, когда языковым стандартом является "
"``C`` или ``POSIX``, а функция приведения локали :pep:`538` не может "
"изменить его на альтернативу на основе UTF-8 (независимо от того, сбой "
"вызван установкой ``PYTHONCOERCECLOCALE=0``, установкой ``LC_ALL`` или "
"отсутствием подходящей целевой локали)."

#: ../../whatsnew/3.7.rst:260
msgid ":pep:`540` -- Add a new UTF-8 mode"
msgstr ":pep:`540` -- Добавьте новый режим UTF-8."

#: ../../whatsnew/3.7.rst:261 ../../whatsnew/3.7.rst:363
msgid "PEP written and implemented by Victor Stinner"
msgstr "PEP написан и реализован Виктором Стиннером"

#: ../../whatsnew/3.7.rst:267
msgid "PEP 553: Built-in ``breakpoint()``"
msgstr "PEP 553: встроенная ``breakpoint()``"

#: ../../whatsnew/3.7.rst:269
msgid ""
"Python 3.7 includes the new built-in :func:`breakpoint` function as an easy "
"and consistent way to enter the Python debugger."
msgstr ""
"Python 3.7 включает новую встроенную функцию :func:`breakpoint` как простой "
"и последовательный способ входа в отладчик Python."

#: ../../whatsnew/3.7.rst:272
msgid ""
"Built-in ``breakpoint()`` calls :func:`sys.breakpointhook`.  By default, the "
"latter imports :mod:`pdb` and then calls ``pdb.set_trace()``, but by binding "
"``sys.breakpointhook()`` to the function of your choosing, ``breakpoint()`` "
"can enter any debugger. Additionally, the environment variable :envvar:"
"`PYTHONBREAKPOINT` can be set to the callable of your debugger of choice.  "
"Set ``PYTHONBREAKPOINT=0`` to completely disable built-in ``breakpoint()``."
msgstr ""
"Встроенная ``breakpoint()`` вызывает :func:`sys.breakpointhook`. По "
"умолчанию последний импортирует :mod:`pdb`, а затем вызывает ``pdb."
"set_trace()``, но путем привязки ``sys.breakpointhook()`` к выбранной вами "
"функции ``breakpoint()` `может войти в любой отладчик. Кроме того, "
"переменная среды :envvar:`PYTHONBREAKPOINT` может быть установлена ​​в "
"вызываемый объект выбранного вами отладчика. Установите PYTHONBREAKPOINT=0, "
"чтобы полностью отключить встроенную точку останова()."

#: ../../whatsnew/3.7.rst:282
msgid ":pep:`553` -- Built-in breakpoint()"
msgstr ":pep:`553` -- Встроенная точка останова()"

#: ../../whatsnew/3.7.rst:283
msgid "PEP written and implemented by Barry Warsaw"
msgstr "PEP написан и реализован Барри Варшавой"

#: ../../whatsnew/3.7.rst:289
msgid "PEP 539: New C API for Thread-Local Storage"
msgstr "PEP 539: новый C API для локального хранилища потоков"

#: ../../whatsnew/3.7.rst:291
msgid ""
"While Python provides a C API for thread-local storage support; the "
"existing :ref:`Thread Local Storage (TLS) API <thread-local-storage-api>` "
"has used :c:expr:`int` to represent TLS keys across all platforms.  This has "
"not generally been a problem for officially support platforms, but that is "
"neither POSIX-compliant, nor portable in any practical sense."
msgstr ""
"Хотя Python предоставляет C API для поддержки локального хранилища потоков; "
"существующий :ref:`Thread Local Storage (TLS) API <thread-local-storage-"
"api>` использует :c:expr:`int` для представления ключей TLS на всех "
"платформах. Обычно это не является проблемой для официально поддерживаемых "
"платформ, но это не является ни POSIX-совместимым, ни переносимым в каком-"
"либо практическом смысле."

#: ../../whatsnew/3.7.rst:297
msgid ""
":pep:`539` changes this by providing a new :ref:`Thread Specific Storage "
"(TSS) API <thread-specific-storage-api>` to CPython which supersedes use of "
"the existing TLS API within the CPython interpreter, while deprecating the "
"existing API.  The TSS API uses a new type :c:type:`Py_tss_t` instead of :c:"
"expr:`int` to represent TSS keys--an opaque type the definition of which may "
"depend on the underlying TLS implementation.  Therefore, this will allow to "
"build CPython on platforms where the native TLS key is defined in a way that "
"cannot be safely cast to :c:expr:`int`."
msgstr ""
":pep:`539` меняет это, предоставляя новый :ref:`Thread-Specific Storage "
"(TSS) API <thread-special-storage-api>` для CPython, который заменяет "
"использование существующего TLS API в интерпретаторе CPython, но при этом "
"объявляется устаревшим. существующий API. API TSS использует новый тип :c:"
"type:`Py_tss_t` вместо :c:expr:`int` для представления ключей TSS — "
"непрозрачный тип, определение которого может зависеть от базовой реализации "
"TLS. Следовательно, это позволит создавать CPython на платформах, где "
"собственный ключ TLS определен таким образом, что его невозможно безопасно "
"привести к :c:expr:`int`."

#: ../../whatsnew/3.7.rst:306
msgid ""
"Note that on platforms where the native TLS key is defined in a way that "
"cannot be safely cast to :c:expr:`int`, all functions of the existing TLS "
"API will be no-op and immediately return failure. This indicates clearly "
"that the old API is not supported on platforms where it cannot be used "
"reliably, and that no effort will be made to add such support."
msgstr ""
"Обратите внимание, что на платформах, где собственный ключ TLS определен "
"таким образом, что его нельзя безопасно привести к :c:expr:`int`, все "
"функции существующего API TLS будут неактивными и немедленно вернут ошибку. "
"Это ясно указывает на то, что старый API не поддерживается на платформах, "
"где его нельзя надежно использовать, и что никаких усилий по добавлению "
"такой поддержки предприниматься не будет."

#: ../../whatsnew/3.7.rst:314
msgid ":pep:`539` -- A New C-API for Thread-Local Storage in CPython"
msgstr ":pep:`539` -- Новый C-API для локального хранилища потоков в CPython"

#: ../../whatsnew/3.7.rst:315
msgid "PEP written by Erik M. Bray; implementation by Masayuki Yamamoto."
msgstr "PEP, написанный Эриком М. Бреем; реализация Масаюки Ямамото."

#: ../../whatsnew/3.7.rst:321
msgid "PEP 562: Customization of Access to Module Attributes"
msgstr "PEP 562: настройка доступа к атрибутам модуля"

#: ../../whatsnew/3.7.rst:323
msgid ""
"Python 3.7 allows defining :meth:`__getattr__` on modules and will call it "
"whenever a module attribute is otherwise not found.  Defining :meth:"
"`__dir__` on modules is now also allowed."
msgstr ""
"Python 3.7 позволяет определять :meth:`__getattr__` для модулей и будет "
"вызывать его всякий раз, когда атрибут модуля не найден. Определение :meth:"
"`__dir__` для модулей теперь также разрешено."

#: ../../whatsnew/3.7.rst:327
msgid ""
"A typical example of where this may be useful is module attribute "
"deprecation and lazy loading."
msgstr ""
"Типичным примером того, где это может быть полезно, является устаревание "
"атрибутов модуля и отложенная загрузка."

#: ../../whatsnew/3.7.rst:332
msgid ":pep:`562` -- Module ``__getattr__`` and ``__dir__``"
msgstr ":pep:`562` -- Модуль ``__getattr__`` и ``__dir__``"

#: ../../whatsnew/3.7.rst:333 ../../whatsnew/3.7.rst:422
msgid "PEP written and implemented by Ivan Levkivskyi"
msgstr "PEP написан и реализован Иваном Левкивским."

#: ../../whatsnew/3.7.rst:339
msgid "PEP 564: New Time Functions With Nanosecond Resolution"
msgstr "PEP 564: новые функции времени с наносекундным разрешением"

#: ../../whatsnew/3.7.rst:341
msgid ""
"The resolution of clocks in modern systems can exceed the limited precision "
"of a floating point number returned by the :func:`time.time` function and "
"its variants.  To avoid loss of precision, :pep:`564` adds six new "
"\"nanosecond\" variants of the existing timer functions to the :mod:`time` "
"module:"
msgstr ""

#: ../../whatsnew/3.7.rst:347 ../../whatsnew/3.7.rst:1447
msgid ":func:`time.clock_gettime_ns`"
msgstr ":func:`time.clock_gettime_ns`"

#: ../../whatsnew/3.7.rst:348 ../../whatsnew/3.7.rst:1448
msgid ":func:`time.clock_settime_ns`"
msgstr ":func:`time.clock_settime_ns`"

#: ../../whatsnew/3.7.rst:349 ../../whatsnew/3.7.rst:1449
msgid ":func:`time.monotonic_ns`"
msgstr ":func:`time.monotonic_ns`"

#: ../../whatsnew/3.7.rst:350 ../../whatsnew/3.7.rst:1450
msgid ":func:`time.perf_counter_ns`"
msgstr ":func:`time.perf_counter_ns`"

#: ../../whatsnew/3.7.rst:351 ../../whatsnew/3.7.rst:1451
msgid ":func:`time.process_time_ns`"
msgstr ":func:`time.process_time_ns`"

#: ../../whatsnew/3.7.rst:352 ../../whatsnew/3.7.rst:1452
msgid ":func:`time.time_ns`"
msgstr ":func:`time.time_ns`"

#: ../../whatsnew/3.7.rst:354
msgid "The new functions return the number of nanoseconds as an integer value."
msgstr ""
"Новые функции возвращают количество наносекунд в виде целочисленного "
"значения."

#: ../../whatsnew/3.7.rst:356
msgid ""
"`Measurements <https://www.python.org/dev/peps/pep-0564/#annex-clocks-"
"resolution-in-python>`_ show that on Linux and Windows the resolution of :"
"func:`time.time_ns` is approximately 3 times better than that of :func:`time."
"time`."
msgstr ""

#: ../../whatsnew/3.7.rst:362
msgid ":pep:`564` -- Add new time functions with nanosecond resolution"
msgstr ""
":pep:`564` -- Добавлены новые функции времени с наносекундным разрешением."

#: ../../whatsnew/3.7.rst:369
msgid "PEP 565: Show DeprecationWarning in ``__main__``"
msgstr "PEP 565: показывать предупреждение об устаревании в ``__main__``"

#: ../../whatsnew/3.7.rst:371
msgid ""
"The default handling of :exc:`DeprecationWarning` has been changed such that "
"these warnings are once more shown by default, but only when the code "
"triggering them is running directly in the :mod:`__main__` module.  As a "
"result, developers of single file scripts and those using Python "
"interactively should once again start seeing deprecation warnings for the "
"APIs they use, but deprecation warnings triggered by imported application, "
"library and framework modules will continue to be hidden by default."
msgstr ""
"Обработка :exc:`DeprecationWarning` по умолчанию была изменена таким "
"образом, что эти предупреждения снова отображаются по умолчанию, но только "
"тогда, когда код, вызывающий их, выполняется непосредственно в модуле :mod:"
"`__main__`. В результате разработчики однофайловых сценариев и те, кто "
"использует Python в интерактивном режиме, должны снова начать видеть "
"предупреждения об устаревании используемых ими API, но предупреждения об "
"устаревании, вызываемые импортированными модулями приложений, библиотек и "
"фреймворков, будут по-прежнему скрыты по умолчанию."

#: ../../whatsnew/3.7.rst:379
msgid ""
"As a result of this change, the standard library now allows developers to "
"choose between three different deprecation warning behaviours:"
msgstr ""
"В результате этого изменения стандартная библиотека теперь позволяет "
"разработчикам выбирать между тремя различными вариантами поведения "
"предупреждения об устаревании:"

#: ../../whatsnew/3.7.rst:382
msgid ""
":exc:`FutureWarning`: always displayed by default, recommended for warnings "
"intended to be seen by application end users (e.g. for deprecated "
"application configuration settings)."
msgstr ""
":exc:`FutureWarning`: всегда отображается по умолчанию, рекомендуется для "
"предупреждений, предназначенных для просмотра конечными пользователями "
"приложения (например, для устаревших настроек конфигурации приложения)."

#: ../../whatsnew/3.7.rst:385
msgid ""
":exc:`DeprecationWarning`: displayed by default only in :mod:`__main__` and "
"when running tests, recommended for warnings intended to be seen by other "
"Python developers where a version upgrade may result in changed behaviour or "
"an error."
msgstr ""
":exc:`DeprecationWarning`: отображается по умолчанию только в :mod:"
"`__main__` и при запуске тестов, рекомендуется для предупреждений, "
"предназначенных для просмотра другими разработчиками Python, когда "
"обновление версии может привести к изменению поведения или ошибке."

#: ../../whatsnew/3.7.rst:389
msgid ""
":exc:`PendingDeprecationWarning`: displayed by default only when running "
"tests, intended for cases where a future version upgrade will change the "
"warning category to :exc:`DeprecationWarning` or :exc:`FutureWarning`."
msgstr ""
":exc:`PendingDeprecationWarning`: отображается по умолчанию только при "
"запуске тестов, предназначенных для случаев, когда будущее обновление версии "
"изменит категорию предупреждения на :exc:`DeprecationWarning` или :exc:"
"`FutureWarning`."

#: ../../whatsnew/3.7.rst:393
msgid ""
"Previously both :exc:`DeprecationWarning` and :exc:"
"`PendingDeprecationWarning` were only visible when running tests, which "
"meant that developers primarily writing single file scripts or using Python "
"interactively could be surprised by breaking changes in the APIs they used."
msgstr ""
"Раньше оба :exc:`DeprecationWarning` и :exc:`PendingDeprecationWarning` были "
"видны только при запуске тестов, а это означало, что разработчики, в "
"основном пишущие однофайловые скрипты или интерактивно использующие Python, "
"могли быть удивлены, обнаружив серьезные изменения в используемых ими API."

#: ../../whatsnew/3.7.rst:400
msgid ":pep:`565` -- Show DeprecationWarning in ``__main__``"
msgstr ":pep:`565` -- Показать предупреждение об устаревании в ``__main__``"

#: ../../whatsnew/3.7.rst:401
msgid "PEP written and implemented by Nick Coghlan"
msgstr "PEP написан и реализован Ником Когланом"

#: ../../whatsnew/3.7.rst:407
msgid "PEP 560: Core Support for ``typing`` module and Generic Types"
msgstr "PEP 560: Базовая поддержка модуля типизации и универсальных типов."

#: ../../whatsnew/3.7.rst:409
msgid ""
"Initially :pep:`484` was designed in such way that it would not introduce "
"*any* changes to the core CPython interpreter. Now type hints and the :mod:"
"`typing` module are extensively used by the community, so this restriction "
"is removed. The PEP introduces two special methods :meth:`__class_getitem__` "
"and ``__mro_entries__``, these methods are now used by most classes and "
"special constructs in :mod:`typing`. As a result, the speed of various "
"operations with types increased up to 7 times, the generic types can be used "
"without metaclass conflicts, and several long standing bugs in :mod:`typing` "
"module are fixed."
msgstr ""
"Изначально :pep:`484` был разработан таким образом, чтобы не вносить *каких-"
"либо* изменений в основной интерпретатор CPython. Теперь подсказки по типу и "
"модуль :mod:`typing` широко используются сообществом, поэтому это "
"ограничение снято. PEP вводит два специальных метода :meth:"
"`__class_getitem__` и ``__mro_entries__``, эти методы теперь используются "
"большинством классов и специальных конструкций в :mod:`typing`. В результате "
"скорость различных операций с типами увеличена до 7 раз, обобщенные типы "
"можно использовать без конфликтов метаклассов, а также исправлено несколько "
"давних ошибок в модуле :mod:`typing`."

#: ../../whatsnew/3.7.rst:421
msgid ":pep:`560` -- Core support for typing module and generic types"
msgstr ""
":pep:`560` -- Базовая поддержка модуля типизации и универсальных типов."

#: ../../whatsnew/3.7.rst:428
msgid "PEP 552: Hash-based .pyc Files"
msgstr "PEP 552: файлы .pyc на основе хеша"

#: ../../whatsnew/3.7.rst:430
msgid ""
"Python has traditionally checked the up-to-dateness of bytecode cache files "
"(i.e., ``.pyc`` files) by comparing the source metadata (last-modified "
"timestamp and size) with source metadata saved in the cache file header when "
"it was generated. While effective, this invalidation method has its "
"drawbacks.  When filesystem timestamps are too coarse, Python can miss "
"source updates, leading to user confusion. Additionally, having a timestamp "
"in the cache file is problematic for `build reproducibility <https://"
"reproducible-builds.org/>`_ and content-based build systems."
msgstr ""
"Python традиционно проверял актуальность файлов кэша байт-кода (т. е. "
"файлов .pyc) путем сравнения метаданных источника (временной метки и размера "
"последнего изменения) с метаданными источника, сохраненными в заголовке "
"файла кэша при его создании. генерируется. Несмотря на свою эффективность, "
"этот метод аннулирования имеет свои недостатки. Если временные метки "
"файловой системы слишком грубы, Python может пропустить обновления исходного "
"кода, что приведет к путанице пользователей. Кроме того, наличие временной "
"метки в файле кэша проблематично для `воспроизводимости сборки <https://"
"reproducible-builds.org/>`_ и систем сборки на основе содержимого."

#: ../../whatsnew/3.7.rst:439
msgid ""
":pep:`552` extends the pyc format to allow the hash of the source file to be "
"used for invalidation instead of the source timestamp. Such ``.pyc`` files "
"are called \"hash-based\". By default, Python still uses timestamp-based "
"invalidation and does not generate hash-based ``.pyc`` files at runtime. "
"Hash-based ``.pyc`` files may be generated with :mod:`py_compile` or :mod:"
"`compileall`."
msgstr ""
":pep:`552` расширяет формат pyc, позволяя использовать хэш исходного файла "
"для аннулирования вместо исходной временной метки. Такие файлы ``.pyc`` "
"называются \"хеш-основанными\". По умолчанию Python по-прежнему использует "
"недействительность на основе временных меток и не генерирует файлы ``.pyc`` "
"на основе хеша во время выполнения. Файлы ``.pyc`` на основе хеша могут быть "
"созданы с помощью :mod:`py_compile` или :mod:`compileall`."

#: ../../whatsnew/3.7.rst:445
msgid ""
"Hash-based ``.pyc`` files come in two variants: checked and unchecked. "
"Python validates checked hash-based ``.pyc`` files against the corresponding "
"source files at runtime but doesn't do so for unchecked hash-based pycs. "
"Unchecked hash-based ``.pyc`` files are a useful performance optimization "
"for environments where a system external to Python (e.g., the build system) "
"is responsible for keeping ``.pyc`` files up-to-date."
msgstr ""
"Файлы ``.pyc``, основанные на хеше, бывают двух вариантов: отмеченные и "
"непроверенные. Python проверяет проверенные файлы ``.pyc`` на основе хэша по "
"сравнению с соответствующими исходными файлами во время выполнения, но не "
"делает этого для непроверенных pycs на основе хеша. Непроверяемые файлы ``."
"pyc`` на основе хэша являются полезной оптимизацией производительности для "
"сред, где внешняя по отношению к Python система (например, система сборки) "
"отвечает за поддержание актуальности файлов ``.pyc``."

#: ../../whatsnew/3.7.rst:452
msgid "See :ref:`pyc-invalidation` for more information."
msgstr "См. :ref:`pyc-invalidation` для получения дополнительной информации."

#: ../../whatsnew/3.7.rst:456
msgid ":pep:`552` -- Deterministic pycs"
msgstr ":pep:`552` -- Детерминированные цифры"

#: ../../whatsnew/3.7.rst:457
msgid "PEP written and implemented by Benjamin Peterson"
msgstr "PEP написан и реализован Бенджамином Петерсоном"

#: ../../whatsnew/3.7.rst:463
msgid "PEP 545: Python Documentation Translations"
msgstr "PEP 545: Переводы документации Python"

#: ../../whatsnew/3.7.rst:465
msgid ""
":pep:`545` describes the process of creating and maintaining Python "
"documentation translations."
msgstr ""
":pep:`545` описывает процесс создания и поддержки переводов документации "
"Python."

#: ../../whatsnew/3.7.rst:468
msgid "Three new translations have been added:"
msgstr "Добавлено три новых перевода:"

#: ../../whatsnew/3.7.rst:470
msgid "Japanese: https://docs.python.org/ja/"
msgstr "Японский: https://docs.python.org/ja/"

#: ../../whatsnew/3.7.rst:471
msgid "French: https://docs.python.org/fr/"
msgstr "Французский: https://docs.python.org/fr/"

#: ../../whatsnew/3.7.rst:472
msgid "Korean: https://docs.python.org/ko/"
msgstr "Корейский: https://docs.python.org/ko/"

#: ../../whatsnew/3.7.rst:477
msgid ":pep:`545` -- Python Documentation Translations"
msgstr ":pep:`545` -- Переводы документации Python"

#: ../../whatsnew/3.7.rst:477
msgid ""
"PEP written and implemented by Julien Palard, Inada Naoki, and Victor "
"Stinner."
msgstr ""
"PEP написан и реализован Жюльеном Паларом, Инадой Наоки и Виктором Стиннером."

#: ../../whatsnew/3.7.rst:484
msgid "Python Development Mode (-X dev)"
msgstr "Режим разработки Python (-X dev)"

#: ../../whatsnew/3.7.rst:486
msgid ""
"The new :option:`-X` ``dev`` command line option or the new :envvar:"
"`PYTHONDEVMODE` environment variable can be used to enable :ref:`Python "
"Development Mode <devmode>`.  When in development mode, Python performs "
"additional runtime checks that are too expensive to be enabled by default. "
"See :ref:`Python Development Mode <devmode>` documentation for the full "
"description."
msgstr ""
"Для включения режима разработки Python <devmode> можно использовать новый "
"параметр командной строки :option:`-X` ``dev`` или новую переменную среды :"
"envvar:`PYTHONDEVMODE`. В режиме разработки Python выполняет дополнительные "
"проверки во время выполнения, которые слишком затратны, чтобы их можно было "
"включить по умолчанию. Полное описание смотрите в документации по режиму "
"разработки Python <devmode>."

#: ../../whatsnew/3.7.rst:495
msgid "Other Language Changes"
msgstr "Другие языковые изменения"

#: ../../whatsnew/3.7.rst:497
msgid ""
"An :keyword:`await` expression and comprehensions containing an :keyword:"
"`async for` clause were illegal in the expressions in :ref:`formatted string "
"literals <f-strings>` due to a problem with the implementation.  In Python "
"3.7 this restriction was lifted."
msgstr ""
"Выражение :keyword:`await` и выражения, содержащие предложение :keyword:"
"`async for`, были недопустимы в выражениях в :ref:`форматированных строковых "
"литералах <f-strings>` из-за проблем с реализацией. В Python 3.7 это "
"ограничение было снято."

#: ../../whatsnew/3.7.rst:502
msgid ""
"More than 255 arguments can now be passed to a function, and a function can "
"now have more than 255 parameters. (Contributed by Serhiy Storchaka in :"
"issue:`12844` and :issue:`18896`.)"
msgstr ""
"В функцию теперь можно передать более 255 аргументов, а функция теперь может "
"иметь более 255 параметров. (Внесено Сергеем Сторчакой в ​​:issue:`12844` и :"
"issue:`18896`.)"

#: ../../whatsnew/3.7.rst:506
msgid ""
":meth:`bytes.fromhex` and :meth:`bytearray.fromhex` now ignore all ASCII "
"whitespace, not only spaces. (Contributed by Robert Xiao in :issue:`28927`.)"
msgstr ""
":meth:`bytes.fromhex` и :meth:`bytearray.fromhex` теперь игнорируют все "
"пробелы ASCII, а не только пробелы. (Предоставлено Робертом Сяо в :issue:"
"`28927`.)"

#: ../../whatsnew/3.7.rst:509
msgid ""
":class:`str`, :class:`bytes`, and :class:`bytearray` gained support for the "
"new :meth:`isascii() <str.isascii>` method, which can be used to test if a "
"string or bytes contain only the ASCII characters. (Contributed by INADA "
"Naoki in :issue:`32677`.)"
msgstr ""
":class:`str`, :class:`bytes` и :class:`bytearray` получили поддержку нового "
"метода :meth:`isascii() <str.isascii>`, который можно использовать для "
"проверки того, является ли строка или байты содержат только символы ASCII. "
"(Предоставлено ИНАДА Наоки в :issue:`32677`.)"

#: ../../whatsnew/3.7.rst:514
msgid ""
":exc:`ImportError` now displays module name and module ``__file__`` path "
"when ``from ... import ...`` fails. (Contributed by Matthias Bussonnier in :"
"issue:`29546`.)"
msgstr ""
":exc:`ImportError` теперь отображает имя модуля и путь к модулю "
"``__file__``, когда ``from ... import ...`` завершается неудачно. "
"(Предоставлено Маттиасом Бюссонье в :issue:`29546`.)"

#: ../../whatsnew/3.7.rst:518
msgid ""
"Circular imports involving absolute imports with binding a submodule to a "
"name are now supported. (Contributed by Serhiy Storchaka in :issue:`30024`.)"
msgstr ""
"Теперь поддерживается циклический импорт, включающий абсолютный импорт с "
"привязкой подмодуля к имени. (Предоставлено Сергеем Сторчакой в ​​:issue:"
"`30024`.)"

#: ../../whatsnew/3.7.rst:522
msgid ""
"``object.__format__(x, '')`` is now equivalent to ``str(x)`` rather than "
"``format(str(self), '')``. (Contributed by Serhiy Storchaka in :issue:"
"`28974`.)"
msgstr ""
"``object.__format__(x, '')`` теперь эквивалентен ``str(x)``, а не "
"``format(str(self), '')``. (Добавлен Сергеем Сторчакой в ​​:issue:`28974`.)"

#: ../../whatsnew/3.7.rst:526
msgid ""
"In order to better support dynamic creation of stack traces, :class:`types."
"TracebackType` can now be instantiated from Python code, and the ``tb_next`` "
"attribute on :ref:`tracebacks <traceback-objects>` is now writable. "
"(Contributed by Nathaniel J. Smith in :issue:`30579`.)"
msgstr ""

#: ../../whatsnew/3.7.rst:532
msgid ""
"When using the :option:`-m` switch, ``sys.path[0]`` is now eagerly expanded "
"to the full starting directory path, rather than being left as the empty "
"directory (which allows imports from the *current* working directory at the "
"time when an import occurs) (Contributed by Nick Coghlan in :issue:`33053`.)"
msgstr ""
"При использовании переключателя :option:`-m` ``sys.path[0]`` теперь быстро "
"расширяется до полного начального пути к каталогу, а не остается пустым "
"каталогом (что позволяет импортировать из *текущего* каталога). рабочий "
"каталог в момент импорта) (предоставлен Ником Когланом в :issue:`33053`.)"

#: ../../whatsnew/3.7.rst:538
msgid ""
"The new :option:`-X` ``importtime`` option or the :envvar:"
"`PYTHONPROFILEIMPORTTIME` environment variable can be used to show the "
"timing of each module import. (Contributed by Inada Naoki in :issue:`31415`.)"
msgstr ""
"Новая опция :option:`-X` ``importtime`` или переменная среды :envvar:"
"`PYTHONPROFILEIMPORTTIME` может использоваться для отображения времени "
"импорта каждого модуля. (Предоставлено Инадой Наоки в :issue:`31415`.)"

#: ../../whatsnew/3.7.rst:545
msgid "New Modules"
msgstr "Новые модули"

#: ../../whatsnew/3.7.rst:550
msgid "contextvars"
msgstr "contextvars"

#: ../../whatsnew/3.7.rst:552
msgid ""
"The new :mod:`contextvars` module and a set of :ref:`new C APIs "
"<contextvarsobjects>` introduce support for *context variables*.  Context "
"variables are conceptually similar to thread-local variables.  Unlike TLS, "
"context variables support asynchronous code correctly."
msgstr ""
"Новый модуль :mod:`contextvars` и набор :ref:`новых API C "
"<contextvarsobjects>` обеспечивают поддержку *контекстных переменных*. "
"Контекстные переменные концептуально аналогичны локальным переменным потока. "
"В отличие от TLS, контекстные переменные корректно поддерживают асинхронный "
"код."

#: ../../whatsnew/3.7.rst:558
msgid ""
"The :mod:`asyncio` and :mod:`decimal` modules have been updated to use and "
"support context variables out of the box.  Particularly the active decimal "
"context is now stored in a context variable, which allows decimal operations "
"to work with the correct context in asynchronous code."
msgstr ""
"Модули :mod:`asyncio` и :mod:`decimal` были обновлены для использования и "
"поддержки контекстных переменных \"из коробки\". В частности, активный "
"десятичный контекст теперь хранится в контекстной переменной, что позволяет "
"десятичным операциям работать с правильным контекстом в асинхронном коде."

#: ../../whatsnew/3.7.rst:565
msgid ":pep:`567` -- Context Variables"
msgstr ":pep:`567` -- Контекстные переменные"

#: ../../whatsnew/3.7.rst:566
msgid "PEP written and implemented by Yury Selivanov"
msgstr "PEP written and implemented by Yury Selivanov"

#: ../../whatsnew/3.7.rst:572
msgid "dataclasses"
msgstr "классы данных"

#: ../../whatsnew/3.7.rst:574
msgid ""
"The new :func:`~dataclasses.dataclass` decorator provides a way to declare "
"*data classes*.  A data class describes its attributes using class variable "
"annotations.  Its constructor and other magic methods, such as :meth:"
"`~object.__repr__`, :meth:`~object.__eq__`, and :meth:`~object.__hash__` are "
"generated automatically."
msgstr ""
"Новый декоратор :func:`~dataclasses.dataclass` позволяет объявлять *классы "
"данных*. Класс данных описывает свои атрибуты с помощью аннотаций переменных "
"класса. Его конструктор и другие магические методы, такие как :meth:`~object."
"__repr__`, :meth:`~object.__eq__` и :meth:`~object.__hash__`, генерируются "
"автоматически."

#: ../../whatsnew/3.7.rst:580
msgid "Example::"
msgstr "Пример::"

#: ../../whatsnew/3.7.rst:593
msgid ":pep:`557` -- Data Classes"
msgstr ":pep:`557` -- Классы данных"

#: ../../whatsnew/3.7.rst:594
msgid "PEP written and implemented by Eric V. Smith"
msgstr "PEP написан и реализован Эриком В. Смитом."

#: ../../whatsnew/3.7.rst:600
msgid "importlib.resources"
msgstr "importlib.resources"

#: ../../whatsnew/3.7.rst:602
msgid ""
"The new :mod:`importlib.resources` module provides several new APIs and one "
"new ABC for access to, opening, and reading *resources* inside packages. "
"Resources are roughly similar to files inside packages, but they needn't be "
"actual files on the physical file system.  Module loaders can provide a :"
"meth:`get_resource_reader()` function which returns a :class:`importlib.abc."
"ResourceReader` instance to support this new API.  Built-in file path "
"loaders and zip file loaders both support this."
msgstr ""

#: ../../whatsnew/3.7.rst:610
msgid "Contributed by Barry Warsaw and Brett Cannon in :issue:`32248`."
msgstr "Предоставлено Барри Варшавой и Бреттом Кэнноном в :issue:`32248`."

#: ../../whatsnew/3.7.rst:614
msgid ""
"`importlib_resources <https://importlib-resources.readthedocs.io/en/latest/"
">`_ -- a PyPI backport for earlier Python versions."
msgstr ""
"`importlib_resources <https://importlib-resources.readthedocs.io/en/latest/"
">`_ — резервный порт PyPI для более ранних версий Python."

#: ../../whatsnew/3.7.rst:619
msgid "Improved Modules"
msgstr "Улучшенные модули"

#: ../../whatsnew/3.7.rst:623
msgid "argparse"
msgstr "argparse"

#: ../../whatsnew/3.7.rst:625
msgid ""
"The new :meth:`ArgumentParser.parse_intermixed_args() <argparse."
"ArgumentParser.parse_intermixed_args>` method allows intermixing options and "
"positional arguments. (Contributed by paul.j3 in :issue:`14191`.)"
msgstr ""
"Новый метод :meth:`ArgumentParser.parse_intermixed_args() <argparse."
"ArgumentParser.parse_intermixed_args>` позволяет смешивать параметры и "
"позиционные аргументы. (Добавлен paul.j3 в :issue:`14191`.)"

#: ../../whatsnew/3.7.rst:634 ../../whatsnew/3.7.rst:1951
msgid "asyncio"
msgstr "asyncio"

#: ../../whatsnew/3.7.rst:636
msgid ""
"The :mod:`asyncio` module has received many new features, usability and :ref:"
"`performance improvements <whatsnew37-asyncio-perf>`.  Notable changes "
"include:"
msgstr ""
"Модуль :mod:`asyncio` получил множество новых функций, удобства "
"использования и :ref:`улучшений производительности <whatsnew37-asyncio-"
"perf>`. Заметные изменения включают в себя:"

#: ../../whatsnew/3.7.rst:640
msgid ""
"The new :term:`provisional <provisional API>` :func:`asyncio.run` function "
"can be used to run a coroutine from synchronous code by automatically "
"creating and destroying the event loop. (Contributed by Yury Selivanov in :"
"issue:`32314`.)"
msgstr ""
"Новую функцию :term:`provisional <provisional API>` :func:`asyncio.run` "
"можно использовать для запуска сопрограммы из синхронного кода путем "
"автоматического создания и уничтожения цикла событий. (Добавлен Юрием "
"Селивановым в :issue:`32314`.)"

#: ../../whatsnew/3.7.rst:645
msgid ""
"asyncio gained support for :mod:`contextvars`. :meth:`loop.call_soon() "
"<asyncio.loop.call_soon>`, :meth:`loop.call_soon_threadsafe() <asyncio.loop."
"call_soon_threadsafe>`, :meth:`loop.call_later() <asyncio.loop."
"call_later>`, :meth:`loop.call_at() <asyncio.loop.call_at>`, and :meth:"
"`Future.add_done_callback() <asyncio.Future.add_done_callback>` have a new "
"optional keyword-only *context* parameter. :class:`Tasks <asyncio.Task>` now "
"track their context automatically. See :pep:`567` for more details. "
"(Contributed by Yury Selivanov in :issue:`32436`.)"
msgstr ""
"asyncio получила поддержку :mod:`contextvars`. :meth:`loop.call_soon() "
"<asyncio.loop.call_soon>`, :meth:`loop.call_soon_threadsafe() <asyncio.loop."
"call_soon_threadsafe>`, :meth:`loop.call_later() <asyncio.loop. "
"call_later>`, :meth:`loop.call_at() <asyncio.loop.call_at>` и :meth:`Future."
"add_done_callback() <asyncio.Future.add_done_callback>` имеют новое "
"необязательное ключевое слово *context* параметр. :class:`Задачи <asyncio."
"Task>` теперь автоматически отслеживают свой контекст. См. :pep:`567` для "
"более подробной информации. (Добавлен Юрием Селивановым в :issue:`32436`.)"

#: ../../whatsnew/3.7.rst:656
msgid ""
"The new :func:`asyncio.create_task` function has been added as a shortcut to "
"``asyncio.get_event_loop().create_task()``. (Contributed by Andrew Svetlov "
"in :issue:`32311`.)"
msgstr ""
"Новая функция :func:`asyncio.create_task` была добавлена ​​как ярлык для "
"``asyncio.get_event_loop().create_task()``. (Предоставлено Андреем Светловым "
"в :issue:`32311`.)"

#: ../../whatsnew/3.7.rst:660
msgid ""
"The new :meth:`loop.start_tls() <asyncio.loop.start_tls>` method can be used "
"to upgrade an existing connection to TLS. (Contributed by Yury Selivanov in :"
"issue:`23749`.)"
msgstr ""
"Новый метод :meth:`loop.start_tls() <asyncio.loop.start_tls>` можно "
"использовать для обновления существующего соединения до TLS. (Добавлен Юрием "
"Селивановым в :issue:`23749`.)"

#: ../../whatsnew/3.7.rst:664
msgid ""
"The new :meth:`loop.sock_recv_into() <asyncio.loop.sock_recv_into>` method "
"allows reading data from a socket directly into a provided buffer making it "
"possible to reduce data copies. (Contributed by Antoine Pitrou in :issue:"
"`31819`.)"
msgstr ""
"Новый метод :meth:`loop.sock_recv_into() <asyncio.loop.sock_recv_into>` "
"позволяет считывать данные из сокета непосредственно в предоставленный "
"буфер, что позволяет уменьшить количество копий данных. (Предоставлено "
"Антуаном Питру в :issue:`31819`.)"

#: ../../whatsnew/3.7.rst:669
msgid ""
"The new :func:`asyncio.current_task` function returns the currently running :"
"class:`~asyncio.Task` instance, and the new :func:`asyncio.all_tasks` "
"function returns a set of all existing ``Task`` instances in a given loop. "
"The :meth:`Task.current_task() <asyncio.Task.current_task>` and :meth:`Task."
"all_tasks() <asyncio.Task.all_tasks>` methods have been deprecated. "
"(Contributed by Andrew Svetlov in :issue:`32250`.)"
msgstr ""

#: ../../whatsnew/3.7.rst:676
msgid ""
"The new *provisional* :class:`~asyncio.BufferedProtocol` class allows "
"implementing streaming protocols with manual control over the receive "
"buffer. (Contributed by Yury Selivanov in :issue:`32251`.)"
msgstr ""
"Новый *предварительный* класс :class:`~asyncio.BufferedProtocol` позволяет "
"реализовать протоколы потоковой передачи с ручным управлением буфером "
"приема. (Добавлен Юрием Селивановым в :issue:`32251`.)"

#: ../../whatsnew/3.7.rst:680
msgid ""
"The new :func:`asyncio.get_running_loop` function returns the currently "
"running loop, and raises a :exc:`RuntimeError` if no loop is running. This "
"is in contrast with :func:`asyncio.get_event_loop`, which will *create* a "
"new event loop if none is running. (Contributed by Yury Selivanov in :issue:"
"`32269`.)"
msgstr ""
"Новая функция :func:`asyncio.get_running_loop` возвращает текущий "
"выполняющийся цикл и вызывает :exc:`RuntimeError`, если ни один цикл не "
"выполняется. Это контрастирует с :func:`asyncio.get_event_loop`, который "
"*создает* новый цикл событий, если ни один из них не запущен. (Добавлен "
"Юрием Селивановым в :issue:`32269`.)"

#: ../../whatsnew/3.7.rst:686
msgid ""
"The new :meth:`StreamWriter.wait_closed() <asyncio.StreamWriter."
"wait_closed>` coroutine method allows waiting until the stream writer is "
"closed.  The new :meth:`StreamWriter.is_closing() <asyncio.StreamWriter."
"is_closing>` method can be used to determine if the writer is closing. "
"(Contributed by Andrew Svetlov in :issue:`32391`.)"
msgstr ""
"Новый метод сопрограммы :meth:`StreamWriter.wait_closed() <asyncio."
"StreamWriter.wait_closed>` позволяет ждать, пока средство записи потока не "
"закроется. Новый метод :meth:`StreamWriter.is_closing() <asyncio."
"StreamWriter.is_closing>` можно использовать для определения того, "
"закрывается ли средство записи. (Предоставлено Андреем Светловым в :issue:"
"`32391`.)"

#: ../../whatsnew/3.7.rst:692
msgid ""
"The new :meth:`loop.sock_sendfile() <asyncio.loop.sock_sendfile>` coroutine "
"method allows sending files using :mod:`os.sendfile` when possible. "
"(Contributed by Andrew Svetlov in :issue:`32410`.)"
msgstr ""
"Новый метод сопрограммы :meth:`loop.sock_sendfile() <asyncio.loop."
"sock_sendfile>` позволяет отправлять файлы с использованием :mod:`os."
"sendfile`, когда это возможно. (Предоставлено Андреем Светловым в :issue:"
"`32410`.)"

#: ../../whatsnew/3.7.rst:696
msgid ""
"The new :meth:`Future.get_loop() <asyncio.Future.get_loop>` and ``Task."
"get_loop()`` methods return the instance of the loop on which a task or a "
"future were created. :meth:`Server.get_loop() <asyncio.Server.get_loop>` "
"allows doing the same for :class:`asyncio.Server` objects. (Contributed by "
"Yury Selivanov in :issue:`32415` and Srinivas Reddy Thatiparthy in :issue:"
"`32418`.)"
msgstr ""
"Новые методы :meth:`Future.get_loop() <asyncio.Future.get_loop>` и ``Task."
"get_loop()`` возвращают экземпляр цикла, в котором была создана задача или "
"будущее. :meth:`Server.get_loop() <asyncio.Server.get_loop>` позволяет "
"делать то же самое для объектов :class:`asyncio.Server`. (Предоставлено "
"Юрием Селивановым в :issue:`32415` и Шринивасом Редди Татипарти в :issue:"
"`32418`.)"

#: ../../whatsnew/3.7.rst:704
msgid ""
"It is now possible to control how instances of :class:`asyncio.Server` begin "
"serving.  Previously, the server would start serving immediately when "
"created. The new *start_serving* keyword argument to :meth:`loop."
"create_server() <asyncio.loop.create_server>` and :meth:`loop."
"create_unix_server() <asyncio.loop.create_unix_server>`, as well as :meth:"
"`Server.start_serving() <asyncio.Server.start_serving>`, and :meth:`Server."
"serve_forever() <asyncio.Server.serve_forever>` can be used to decouple "
"server instantiation and serving.  The new :meth:`Server.is_serving() "
"<asyncio.Server.is_serving>` method returns ``True`` if the server is "
"serving.  :class:`~asyncio.Server` objects are now asynchronous context "
"managers::"
msgstr ""
"Теперь можно контролировать, как начинают обслуживаться экземпляры :class:"
"`asyncio.Server`. Раньше сервер начинал обслуживаться сразу после создания. "
"Новый аргумент ключевого слова *start_serving* для :meth:`loop."
"create_server() <asyncio.loop.create_server>` и :meth:`loop."
"create_unix_server() <asyncio.loop.create_unix_server>`, а также :meth: "
"`Server.start_serving() <asyncio.Server.start_serving>` и :meth:`Server."
"serve_forever() <asyncio.Server.serve_forever>` можно использовать для "
"разделения создания и обслуживания сервера. Новый метод :meth:`Server."
"is_serving() <asyncio.Server.is_serving>` возвращает ``True``, если сервер "
"обслуживает. Объекты :class:`~asyncio.Server` теперь являются асинхронными "
"менеджерами контекста::"

#: ../../whatsnew/3.7.rst:723
msgid "(Contributed by Yury Selivanov in :issue:`32662`.)"
msgstr "(Contributed by Yury Selivanov in :issue:`32662`.)"

#: ../../whatsnew/3.7.rst:725
msgid ""
"Callback objects returned by :func:`loop.call_later() <asyncio.loop."
"call_later>` gained the new :meth:`when() <asyncio.TimerHandle.when>` method "
"which returns an absolute scheduled callback timestamp. (Contributed by "
"Andrew Svetlov in :issue:`32741`.)"
msgstr ""
"Объекты обратного вызова, возвращаемые :func:`loop.call_later() <asyncio."
"loop.call_later>`, получили новый метод :meth:`when() <asyncio.TimerHandle."
"when>`, который возвращает абсолютную временную метку запланированного "
"обратного вызова. (Предоставлено Андреем Светловым в :issue:`32741`.)"

#: ../../whatsnew/3.7.rst:731
msgid ""
"The :meth:`loop.create_datagram_endpoint() \\ <asyncio.loop."
"create_datagram_endpoint>` method gained support for Unix sockets. "
"(Contributed by Quentin Dawans in :issue:`31245`.)"
msgstr ""
"Метод :meth:`loop.create_datagram_endpoint() \\ <asyncio.loop."
"create_datagram_endpoint>` получил поддержку сокетов Unix. (Предоставлено "
"Квентином Давансом в :issue:`31245`.)"

#: ../../whatsnew/3.7.rst:736
msgid ""
"The :func:`asyncio.open_connection`, :func:`asyncio.start_server` "
"functions, :meth:`loop.create_connection() <asyncio.loop."
"create_connection>`, :meth:`loop.create_server() <asyncio.loop."
"create_server>`, :meth:`loop.create_accepted_socket() <asyncio.loop."
"connect_accepted_socket>` methods and their corresponding UNIX socket "
"variants now accept the *ssl_handshake_timeout* keyword argument. "
"(Contributed by Neil Aspinall in :issue:`29970`.)"
msgstr ""
"Функции :func:`asyncio.open_connection`, :func:`asyncio.start_server`, :meth:"
"`loop.create_connection() <asyncio.loop.create_connection>`, :meth:`loop."
"create_server() <asyncio. Методы loop.create_server>`, :meth:`loop."
"create_accepted_socket() <asyncio.loop.connect_accepted_socket>` и "
"соответствующие им варианты сокетов UNIX теперь принимают аргумент ключевого "
"слова *ssl_handshake_timeout*. (Предоставлено Нилом Аспиналлом в :issue:"
"`29970`.)"

#: ../../whatsnew/3.7.rst:744
msgid ""
"The new :meth:`Handle.cancelled() <asyncio.Handle.cancelled>` method returns "
"``True`` if the callback was cancelled. (Contributed by Marat Sharafutdinov "
"in :issue:`31943`.)"
msgstr ""
"Новый метод :meth:`Handle.cancelled() <asyncio.Handle.cancelled>` возвращает "
"``True``, если обратный вызов был отменен. (Предоставлено Маратом "
"Шарафутдиновым в :issue:`31943`.)"

#: ../../whatsnew/3.7.rst:748
msgid ""
"The asyncio source has been converted to use the :keyword:`async`/:keyword:"
"`await` syntax. (Contributed by Andrew Svetlov in :issue:`32193`.)"
msgstr ""
"Исходный код asyncio был преобразован для использования синтаксиса :keyword:"
"`async`/:keyword:`await`. (Предоставлено Андреем Светловым в :issue:`32193`.)"

#: ../../whatsnew/3.7.rst:752
msgid ""
"The new :meth:`ReadTransport.is_reading() <asyncio.ReadTransport."
"is_reading>` method can be used to determine the reading state of the "
"transport. Additionally, calls to :meth:`ReadTransport.resume_reading() "
"<asyncio.ReadTransport.resume_reading>` and :meth:`ReadTransport."
"pause_reading() <asyncio.ReadTransport.pause_reading>` are now idempotent. "
"(Contributed by Yury Selivanov in :issue:`32356`.)"
msgstr ""
"Новый метод :meth:`ReadTransport.is_reading() <asyncio.ReadTransport."
"is_reading>` можно использовать для определения состояния чтения транспорта. "
"Кроме того, вызовы :meth:`ReadTransport.resume_reading() <asyncio."
"ReadTransport.resume_reading>` и :meth:`ReadTransport.pause_reading() "
"<asyncio.ReadTransport.pause_reading>` теперь являются идемпотентными. "
"(Добавлен Юрием Селивановым в :issue:`32356`.)"

#: ../../whatsnew/3.7.rst:760
msgid ""
"Loop methods which accept socket paths now support passing :term:`path-like "
"objects <path-like object>`. (Contributed by Yury Selivanov in :issue:"
"`32066`.)"
msgstr ""
"Методы цикла, которые принимают пути к сокетам, теперь поддерживают "
"передачу :term:`path-like object <path-like object>`. (Добавлен Юрием "
"Селивановым в :issue:`32066`.)"

#: ../../whatsnew/3.7.rst:764
msgid ""
"In :mod:`asyncio` TCP sockets on Linux are now created with ``TCP_NODELAY`` "
"flag set by default. (Contributed by Yury Selivanov and Victor Stinner in :"
"issue:`27456`.)"
msgstr ""
"В :mod:`asyncio` TCP-сокеты в Linux теперь создаются с флагом "
"``TCP_NODELAY``, установленным по умолчанию. (Предоставлено Юрием "
"Селивановым и Виктором Стиннером в :issue:`27456`.)"

#: ../../whatsnew/3.7.rst:768
msgid ""
"Exceptions occurring in cancelled tasks are no longer logged. (Contributed "
"by Yury Selivanov in :issue:`30508`.)"
msgstr ""
"Исключения, возникающие в отмененных задачах, больше не регистрируются. "
"(Добавлен Юрием Селивановым в :issue:`30508`.)"

#: ../../whatsnew/3.7.rst:771
msgid ""
"New ``WindowsSelectorEventLoopPolicy`` and "
"``WindowsProactorEventLoopPolicy`` classes. (Contributed by Yury Selivanov "
"in :issue:`33792`.)"
msgstr ""
"Новые классы WindowsSelectorEventLoopPolicy и "
"WindowsProactorEventLoopPolicy. (Добавлен Юрием Селивановым в :issue:"
"`33792`.)"

#: ../../whatsnew/3.7.rst:775
msgid ""
"Several ``asyncio`` APIs have been :ref:`deprecated <whatsnew37-asyncio-"
"deprecated>`."
msgstr ""
"Несколько ``asyncio`` API :ref:`устарели <whatsnew37-asyncio-deprecated>`."

#: ../../whatsnew/3.7.rst:780
msgid "binascii"
msgstr "binascii"

#: ../../whatsnew/3.7.rst:782
msgid ""
"The :func:`~binascii.b2a_uu` function now accepts an optional *backtick* "
"keyword argument.  When it's true, zeros are represented by ``'`'`` instead "
"of spaces.  (Contributed by Xiang Zhang in :issue:`30103`.)"
msgstr ""
"Функция :func:`~binascii.b2a_uu` теперь принимает необязательный аргумент "
"ключевого слова *backtick*. Когда это правда, нули представлены ``'`'`` "
"вместо пробелов. (Предоставлено Сян Чжаном в :issue:`30103`.)"

#: ../../whatsnew/3.7.rst:788
msgid "calendar"
msgstr "календарь"

#: ../../whatsnew/3.7.rst:790
msgid ""
"The :class:`~calendar.HTMLCalendar` class has new class attributes which "
"ease the customization of CSS classes in the produced HTML calendar. "
"(Contributed by Oz Tiram in :issue:`30095`.)"
msgstr ""
"Класс :class:`~calendar.HTMLCalendar` имеет новые атрибуты класса, которые "
"упрощают настройку классов CSS в созданном календаре HTML. (Предоставлено "
"Озом Тирамом в :issue:`30095`.)"

#: ../../whatsnew/3.7.rst:796 ../../whatsnew/3.7.rst:1965
msgid "collections"
msgstr "коллекции"

#: ../../whatsnew/3.7.rst:798
msgid ""
"``collections.namedtuple()`` now supports default values. (Contributed by "
"Raymond Hettinger in :issue:`32320`.)"
msgstr ""
"``collections.namedtuple()`` теперь поддерживает значения по умолчанию. "
"(Предоставлено Рэймондом Хеттингером в :issue:`32320`.)"

#: ../../whatsnew/3.7.rst:803
msgid "compileall"
msgstr "compileall"

#: ../../whatsnew/3.7.rst:805
msgid ""
":func:`compileall.compile_dir` learned the new *invalidation_mode* "
"parameter, which can be used to enable :ref:`hash-based .pyc invalidation "
"<whatsnew37-pep552>`.  The invalidation mode can also be specified on the "
"command line using the new ``--invalidation-mode`` argument. (Contributed by "
"Benjamin Peterson in :issue:`31650`.)"
msgstr ""
":func:`compileall.compile_dir` узнал новый параметр *invalidation_mode*, "
"который можно использовать для включения :ref:`инвалидации .pyc на основе "
"хэша <whatsnew37-pep552>`. Режим недействительности также можно указать в "
"командной строке, используя новый аргумент ``--invalidation-mode``. "
"(Предоставлено Бенджамином Петерсоном в :issue:`31650`.)"

#: ../../whatsnew/3.7.rst:814
msgid "concurrent.futures"
msgstr "concurrent.futures"

#: ../../whatsnew/3.7.rst:816
msgid ""
":class:`ProcessPoolExecutor <concurrent.futures.ProcessPoolExecutor>` and :"
"class:`ThreadPoolExecutor <concurrent.futures.ThreadPoolExecutor>` now "
"support the new *initializer* and *initargs* constructor arguments. "
"(Contributed by Antoine Pitrou in :issue:`21423`.)"
msgstr ""
":class:`ProcessPoolExecutor <concurrent.futures.ProcessPoolExecutor>` и :"
"class:`ThreadPoolExecutor <concurrent.futures.ThreadPoolExecutor>` теперь "
"поддерживают новые аргументы конструктора *initializer* и *initargs*. "
"(Предоставлено Антуаном Питру в :issue:`21423`.)"

#: ../../whatsnew/3.7.rst:821
msgid ""
"The :class:`ProcessPoolExecutor <concurrent.futures.ProcessPoolExecutor>` "
"can now take the multiprocessing context via the new *mp_context* argument. "
"(Contributed by Thomas Moreau in :issue:`31540`.)"
msgstr ""
":class:`ProcessPoolExecutor <concurrent.futures.ProcessPoolExecutor>` теперь "
"может принимать контекст многопроцессорной обработки через новый аргумент "
"*mp_context*. (Предоставлено Томасом Моро в :issue:`31540`.)"

#: ../../whatsnew/3.7.rst:827
msgid "contextlib"
msgstr "contextlib"

#: ../../whatsnew/3.7.rst:829
msgid ""
"The new :func:`~contextlib.nullcontext` is a simpler and faster no-op "
"context manager than :class:`~contextlib.ExitStack`. (Contributed by Jesse-"
"Bakker in :issue:`10049`.)"
msgstr ""
"Новый :func:`~contextlib.nullcontext` — это более простой и быстрый "
"неактивный контекстный менеджер, чем :class:`~contextlib.ExitStack`. "
"(Предоставлено Джесси-Баккером в :issue:`10049`.)"

#: ../../whatsnew/3.7.rst:833
msgid ""
"The new :func:`~contextlib.asynccontextmanager`, :class:`~contextlib."
"AbstractAsyncContextManager`, and :class:`~contextlib.AsyncExitStack` have "
"been added to complement their synchronous counterparts.  (Contributed by "
"Jelle Zijlstra in :issue:`29679` and :issue:`30241`, and by Alexander Mohr "
"and Ilya Kulakov in :issue:`29302`.)"
msgstr ""
"Новые :func:`~contextlib.asynccontextmanager`, :class:`~contextlib."
"AbstractAsyncContextManager` и :class:`~contextlib.AsyncExitStack` были "
"добавлены в дополнение к своим синхронным аналогам. (Сообщено Йелле Зийлстра "
"в :issue:`29679` и :issue:`30241`, а также Александром Мором и Ильей "
"Кулаковым в :issue:`29302`.)"

#: ../../whatsnew/3.7.rst:842
msgid "cProfile"
msgstr "cProfile"

#: ../../whatsnew/3.7.rst:844
msgid ""
"The :mod:`cProfile` command line now accepts ``-m module_name`` as an "
"alternative to script path.  (Contributed by Sanyam Khurana in :issue:"
"`21862`.)"
msgstr ""
"Командная строка :mod:`cProfile` теперь принимает ``-m имя_модуля`` в "
"качестве альтернативы пути к скрипту. (Предоставлено Саньямом Хураной в :"
"issue:`21862`.)"

#: ../../whatsnew/3.7.rst:849
msgid "crypt"
msgstr "crypt"

#: ../../whatsnew/3.7.rst:851
msgid ""
"The :mod:`crypt` module now supports the Blowfish hashing method. "
"(Contributed by Serhiy Storchaka in :issue:`31664`.)"
msgstr ""
"Модуль :mod:`crypt` теперь поддерживает метод хеширования Blowfish. "
"(Предоставлено Сергеем Сторчакой в ​​:issue:`31664`.)"

#: ../../whatsnew/3.7.rst:854
msgid ""
"The :func:`~crypt.mksalt` function now allows specifying the number of "
"rounds for hashing.  (Contributed by Serhiy Storchaka in :issue:`31702`.)"
msgstr ""
"Функция :func:`~crypt.mksalt` теперь позволяет указать количество раундов "
"хеширования. (Предоставлено Сергеем Сторчакой в ​​:issue:`31702`.)"

#: ../../whatsnew/3.7.rst:859
msgid "datetime"
msgstr "datetime"

#: ../../whatsnew/3.7.rst:861
msgid ""
"The new :meth:`datetime.fromisoformat() <datetime.datetime.fromisoformat>` "
"method constructs a :class:`~datetime.datetime` object from a string in one "
"of the formats output by :meth:`datetime.isoformat() <datetime.datetime."
"isoformat>`. (Contributed by Paul Ganssle in :issue:`15873`.)"
msgstr ""
"Новый метод :meth:`datetime.fromisoformat() <datetime.datetime."
"fromisoformat>` конструирует объект :class:`~datetime.datetime` из строки в "
"одном из форматов, выводимых :meth:`datetime.isoformat( ) <datetime.datetime."
"isoformat>`. (Предоставлено Полом Гансслом в :issue:`15873`.)"

#: ../../whatsnew/3.7.rst:867
msgid ""
"The :class:`tzinfo <datetime.tzinfo>` class now supports sub-minute offsets. "
"(Contributed by Alexander Belopolsky in :issue:`5288`.)"
msgstr ""
"Класс :class:`tzinfo <datetime.tzinfo>` теперь поддерживает субминутные "
"смещения. (Предоставлено Александром Белопольским в :issue:`5288`.)"

#: ../../whatsnew/3.7.rst:872 ../../whatsnew/3.7.rst:1975
msgid "dbm"
msgstr "dbm"

#: ../../whatsnew/3.7.rst:874
msgid ""
":mod:`dbm.dumb` now supports reading read-only files and no longer writes "
"the index file when it is not changed."
msgstr ""
":mod:`dbm.dumb` теперь поддерживает чтение файлов, доступных только для "
"чтения, и больше не записывает индексный файл, если он не изменен."

#: ../../whatsnew/3.7.rst:879
msgid "decimal"
msgstr "десятичный"

#: ../../whatsnew/3.7.rst:881
msgid ""
"The :mod:`decimal` module now uses :ref:`context variables <whatsnew37-"
"pep567>` to store the decimal context. (Contributed by Yury Selivanov in :"
"issue:`32630`.)"
msgstr ""
"Модуль :mod:`decimal` теперь использует :ref:`контекстные переменные "
"<whatsnew37-pep567>` для хранения десятичного контекста. (Добавлен Юрием "
"Селивановым в :issue:`32630`.)"

#: ../../whatsnew/3.7.rst:887
msgid "dis"
msgstr "dis"

#: ../../whatsnew/3.7.rst:889
msgid ""
"The :func:`~dis.dis` function is now able to disassemble nested code objects "
"(the code of comprehensions, generator expressions and nested functions, and "
"the code used for building nested classes).  The maximum depth of "
"disassembly recursion is controlled by the new *depth* parameter. "
"(Contributed by Serhiy Storchaka in :issue:`11822`.)"
msgstr ""
"Функция :func:`~dis.dis` теперь способна дизассемблировать вложенные объекты "
"кода (код понятий, выражений-генераторов и вложенных функций, а также код, "
"используемый для построения вложенных классов). Максимальная глубина "
"рекурсии дизассемблирования контролируется новым параметром *глубина*. "
"(Предоставлено Сергеем Сторчакой в ​​:issue:`11822`.)"

#: ../../whatsnew/3.7.rst:898
msgid "distutils"
msgstr "distutils"

#: ../../whatsnew/3.7.rst:900
msgid ""
"``README.rst`` is now included in the list of distutils standard READMEs and "
"therefore included in source distributions. (Contributed by Ryan Gonzalez "
"in :issue:`11913`.)"
msgstr ""
"``README.rst`` теперь включен в список стандартных файлов README distutils "
"и, следовательно, включен в исходные дистрибутивы. (Предоставлено Райаном "
"Гонсалесом в :issue:`11913`.)"

#: ../../whatsnew/3.7.rst:906 ../../whatsnew/3.7.rst:1985
msgid "enum"
msgstr "enum"

#: ../../whatsnew/3.7.rst:908
msgid ""
"The :class:`Enum <enum.Enum>` learned the new ``_ignore_`` class property, "
"which allows listing the names of properties which should not become enum "
"members. (Contributed by Ethan Furman in :issue:`31801`.)"
msgstr ""
":class:`Enum <enum.Enum>` узнал новое свойство класса ``_ignore_``, которое "
"позволяет перечислять имена свойств, которые не должны становиться членами "
"перечисления. (Предоставлено Итаном Фурманом в :issue:`31801`.)"

#: ../../whatsnew/3.7.rst:913
msgid ""
"In Python 3.8, attempting to check for non-Enum objects in :class:`Enum` "
"classes will raise a :exc:`TypeError` (e.g. ``1 in Color``); similarly, "
"attempting to check for non-Flag objects in a :class:`Flag` member will "
"raise :exc:`TypeError` (e.g. ``1 in Perm.RW``); currently, both operations "
"return :const:`False` instead and are deprecated. (Contributed by Ethan "
"Furman in :issue:`33217`.)"
msgstr ""
"В Python 3.8 попытка проверки объектов, отличных от Enum, в классах :class:"
"`Enum` вызовет ошибку :exc:`TypeError` (например, ``1 in Color``); "
"аналогично, попытка проверить наличие объектов, не являющихся флагами, в "
"члене :class:`Flag` приведет к возникновению :exc:`TypeError` (например, ``1 "
"в Perm.RW``); в настоящее время обе операции вместо этого возвращают :const:"
"`False` и считаются устаревшими. (Предоставлено Итаном Фурманом в :issue:"
"`33217`.)"

#: ../../whatsnew/3.7.rst:922
msgid "functools"
msgstr "functools"

#: ../../whatsnew/3.7.rst:924
msgid ""
":func:`functools.singledispatch` now supports registering implementations "
"using type annotations. (Contributed by Łukasz Langa in :issue:`32227`.)"
msgstr ""
":func:`functools.singledispatch` теперь поддерживает регистрацию реализаций "
"с использованием аннотаций типов. (Предоставлено Лукашом Лангой в :issue:"
"`32227`.)"

#: ../../whatsnew/3.7.rst:930
msgid "gc"
msgstr "gc"

#: ../../whatsnew/3.7.rst:932
msgid ""
"The new :func:`gc.freeze` function allows freezing all objects tracked by "
"the garbage collector and excluding them from future collections. This can "
"be used before a POSIX ``fork()`` call to make the GC copy-on-write friendly "
"or to speed up collection.  The new :func:`gc.unfreeze` functions reverses "
"this operation.  Additionally, :func:`gc.get_freeze_count` can be used to "
"obtain the number of frozen objects. (Contributed by Li Zekun in :issue:"
"`31558`.)"
msgstr ""
"Новая функция :func:`gc.freeze` позволяет заморозить все объекты, "
"отслеживаемые сборщиком мусора, и исключить их из будущих коллекций. Это "
"можно использовать перед вызовом POSIX fork(), чтобы сделать сборщик мусора "
"дружественным к копированию при записи или ускорить сбор. Новые функции :"
"func:`gc.unfreeze` отменяют эту операцию. Кроме того, :func:`gc."
"get_freeze_count` можно использовать для получения количества замороженных "
"объектов. (Предоставлено Ли Зекуном в :issue:`31558`.)"

#: ../../whatsnew/3.7.rst:942
msgid "hmac"
msgstr "hmac"

#: ../../whatsnew/3.7.rst:944
msgid ""
"The :mod:`hmac` module now has an optimized one-shot :func:`~hmac.digest` "
"function, which is up to three times faster than :func:`~hmac.HMAC`. "
"(Contributed by Christian Heimes in :issue:`32433`.)"
msgstr ""
"Модуль :mod:`hmac` теперь имеет оптимизированную одноразовую функцию :func:"
"`~hmac.digest`, которая работает до трёх раз быстрее, чем :func:`~hmac."
"HMAC`. (Предоставлено Кристианом Хаймсом в :issue:`32433`.)"

#: ../../whatsnew/3.7.rst:950
msgid "http.client"
msgstr "http.client"

#: ../../whatsnew/3.7.rst:952
msgid ""
":class:`~http.client.HTTPConnection` and :class:`~http.client."
"HTTPSConnection` now support the new *blocksize* argument for improved "
"upload throughput. (Contributed by Nir Soffer in :issue:`31945`.)"
msgstr ""
":class:`~http.client.HTTPConnection` и :class:`~http.client.HTTPSConnection` "
"теперь поддерживают новый аргумент *blocksize* для повышения пропускной "
"способности загрузки. (Предоставлено Ниром Соффером в :issue:`31945`.)"

#: ../../whatsnew/3.7.rst:958
msgid "http.server"
msgstr "http.server"

#: ../../whatsnew/3.7.rst:960
msgid ""
":class:`~http.server.SimpleHTTPRequestHandler` now supports the HTTP ``If-"
"Modified-Since`` header.  The server returns the 304 response status if the "
"target file was not modified after the time specified in the header. "
"(Contributed by Pierre Quentel in :issue:`29654`.)"
msgstr ""
":class:`~http.server.SimpleHTTPRequestHandler` теперь поддерживает HTTP-"
"заголовок ``If-Modified-Since``. Сервер возвращает статус ответа 304, если "
"целевой файл не был изменен по истечении времени, указанного в заголовке. "
"(Предоставлено Пьером Квентелем в :issue:`29654`.)"

#: ../../whatsnew/3.7.rst:965
msgid ""
":class:`~http.server.SimpleHTTPRequestHandler` accepts the new *directory* "
"argument, in addition to the new ``--directory`` command line argument. With "
"this parameter, the server serves the specified directory, by default it "
"uses the current working directory. (Contributed by Stéphane Wirtel and "
"Julien Palard in :issue:`28707`.)"
msgstr ""
":class:`~http.server.SimpleHTTPRequestHandler` принимает новый аргумент "
"*directory* в дополнение к новому аргументу командной строки ``--"
"directory``. С помощью этого параметра сервер обслуживает указанный каталог, "
"по умолчанию он использует текущий рабочий каталог. (Предоставлено Стефаном "
"Виртелем и Жюльеном Паларом в :issue:`28707`.)"

#: ../../whatsnew/3.7.rst:971
msgid ""
"The new :class:`ThreadingHTTPServer <http.server.ThreadingHTTPServer>` class "
"uses threads to handle requests using :class:`~socketserver.ThreadingMixin`. "
"It is used when ``http.server`` is run with ``-m``. (Contributed by Julien "
"Palard in :issue:`31639`.)"
msgstr ""
"Новый класс :class:`ThreadingHTTPServer <http.server.ThreadingHTTPServer>` "
"использует потоки для обработки запросов с помощью :class:`~socketserver."
"ThreadingMixin`. Он используется, когда ``http.server`` запускается с ``-"
"m``. (Предоставлено Жюльеном Паларом в :issue:`31639`.)"

#: ../../whatsnew/3.7.rst:978
msgid "idlelib and IDLE"
msgstr "idlelib и IDLE"

#: ../../whatsnew/3.7.rst:980
msgid ""
"Multiple fixes for autocompletion. (Contributed by Louie Lu in :issue:"
"`15786`.)"
msgstr ""
"Множество исправлений автозаполнения. (Предоставлено Луи Лу в :issue:"
"`15786`.)"

#: ../../whatsnew/3.7.rst:982
msgid ""
"Module Browser (on the File menu, formerly called Class Browser), now "
"displays nested functions and classes in addition to top-level functions and "
"classes. (Contributed by Guilherme Polo, Cheryl Sabella, and Terry Jan Reedy "
"in :issue:`1612262`.)"
msgstr ""
"Обозреватель модулей (в меню «Файл», ранее называвшийся «Обозреватель "
"классов») теперь отображает вложенные функции и классы в дополнение к "
"функциям и классам верхнего уровня. (Сообщили Гильерме Поло, Шерил Сабелла и "
"Терри Ян Риди в :issue:`1612262`.)"

#: ../../whatsnew/3.7.rst:988
msgid ""
"The Settings dialog (Options, Configure IDLE) has been partly rewritten to "
"improve both appearance and function. (Contributed by Cheryl Sabella and "
"Terry Jan Reedy in multiple issues.)"
msgstr ""
"Диалоговое окно «Настройки» («Параметры», «Настроить IDLE») было частично "
"переписано для улучшения внешнего вида и функциональности. (Представлено "
"Шерил Сабеллой и Терри Джен Риди в нескольких выпусках.)"

#: ../../whatsnew/3.7.rst:992
msgid ""
"The font sample now includes a selection of non-Latin characters so that "
"users can better see the effect of selecting a particular font. (Contributed "
"by Terry Jan Reedy in :issue:`13802`.) The sample can be edited to include "
"other characters. (Contributed by Serhiy Storchaka in :issue:`31860`.)"
msgstr ""
"Образец шрифта теперь включает набор нелатинских символов, чтобы "
"пользователи могли лучше видеть эффект от выбора определенного шрифта. "
"(Предоставлено Терри Джен Риди в :issue:`13802`.) Образец можно "
"отредактировать, включив в него другие символы. (Предоставлено Сергеем "
"Сторчакой в ​​:issue:`31860`.)"

#: ../../whatsnew/3.7.rst:998
msgid ""
"The IDLE features formerly implemented as extensions have been reimplemented "
"as normal features.  Their settings have been moved from the Extensions tab "
"to other dialog tabs. (Contributed by Charles Wohlganger and Terry Jan Reedy "
"in :issue:`27099`.)"
msgstr ""
"Функции IDLE, ранее реализованные как расширения, теперь реализованы как "
"обычные функции. Их настройки перенесены с вкладки «Расширения» на другие "
"вкладки диалога. (Предоставлено Чарльзом Вольгангером и Терри Яном Риди в :"
"issue:`27099`.)"

#: ../../whatsnew/3.7.rst:1003
msgid ""
"Editor code context option revised.  Box displays all context lines up to "
"maxlines.  Clicking on a context line jumps the editor to that line.  "
"Context colors for custom themes is added to Highlights tab of Settings "
"dialog. (Contributed by Cheryl Sabella and Terry Jan Reedy in :issue:"
"`33642`, :issue:`33768`, and :issue:`33679`.)"
msgstr ""
"Пересмотрена опция контекста кода редактора. В поле отображаются все строки "
"контекста до maxlines. Щелчок по строке контекста переводит редактор на эту "
"строку. Цвета контекста для пользовательских тем добавлены на вкладку "
"«Основные моменты» диалогового окна «Настройки». (Внесено Шерил Сабеллой и "
"Терри Джен Риди в :issue:`33642`, :issue:`33768` и :issue:`33679`.)"

#: ../../whatsnew/3.7.rst:1009
msgid ""
"On Windows, a new API call tells Windows that tk scales for DPI. On Windows "
"8.1+ or 10, with DPI compatibility properties of the Python binary "
"unchanged, and a monitor resolution greater than 96 DPI, this should make "
"text and lines sharper.  It should otherwise have no effect. (Contributed by "
"Terry Jan Reedy in :issue:`33656`.)"
msgstr ""
"В Windows новый вызов API сообщает Windows, что tk масштабируется в "
"соответствии с DPI. В Windows 8.1+ или 10 с неизмененными свойствами "
"совместимости DPI двоичного файла Python и разрешением монитора более 96 DPI "
"это должно сделать текст и линии более четкими. В противном случае это не "
"должно иметь никакого эффекта. (Предоставлено Терри Джен Риди в :issue:"
"`33656`.)"

#: ../../whatsnew/3.7.rst:1015
msgid "New in 3.7.1:"
msgstr "Новое в версии 3.7.1:"

#: ../../whatsnew/3.7.rst:1017
msgid ""
"Output over N lines (50 by default) is squeezed down to a button. N can be "
"changed in the PyShell section of the General page of the Settings dialog.  "
"Fewer, but possibly extra long, lines can be squeezed by right clicking on "
"the output.  Squeezed output can be expanded in place by double-clicking the "
"button or into the clipboard or a separate window by right-clicking the "
"button.  (Contributed by Tal Einat in :issue:`1529353`.)"
msgstr ""
"Вывод в N строк (по умолчанию 50) сжимается до кнопки. N можно изменить в "
"разделе PyShell на странице «Общие» диалогового окна «Настройки». Меньшее "
"количество, но, возможно, более длинные строки можно сжать, щелкнув правой "
"кнопкой мыши по выходным данным. Сжатый вывод можно развернуть на месте, "
"дважды щелкнув кнопку, или в буфер обмена или в отдельное окно, щелкнув "
"кнопку правой кнопкой мыши. (Предоставлено Талом Эйнатом в :issue:`1529353`.)"

#: ../../whatsnew/3.7.rst:1024
msgid "The changes above have been backported to 3.6 maintenance releases."
msgstr "Вышеупомянутые изменения были перенесены в сервисные выпуски 3.6."

#: ../../whatsnew/3.7.rst:1026
msgid "NEW in 3.7.4:"
msgstr "НОВОЕ в версии 3.7.4:"

#: ../../whatsnew/3.7.rst:1028
msgid ""
"Add \"Run Customized\" to the Run menu to run a module with customized "
"settings. Any command line arguments entered are added to sys.argv. They re-"
"appear in the box for the next customized run.  One can also suppress the "
"normal Shell main module restart.  (Contributed by Cheryl Sabella, Terry Jan "
"Reedy, and others in :issue:`5680` and :issue:`37627`.)"
msgstr ""
"Добавьте «Запустить по индивидуальному заказу» в меню «Выполнить», чтобы "
"запустить модуль с настроенными настройками. Все введенные аргументы "
"командной строки добавляются в sys.argv. Они снова появятся в поле для "
"следующего индивидуального запуска. Также можно запретить обычный перезапуск "
"основного модуля Shell. (Внесено Шерил Сабеллой, Терри Джен Риди и другими "
"в :issue:`5680` и :issue:`37627`.)"

#: ../../whatsnew/3.7.rst:1034
msgid "New in 3.7.5:"
msgstr "Новое в версии 3.7.5:"

#: ../../whatsnew/3.7.rst:1036
msgid ""
"Add optional line numbers for IDLE editor windows. Windows open without line "
"numbers unless set otherwise in the General tab of the configuration "
"dialog.  Line numbers for an existing window are shown and hidden in the "
"Options menu. (Contributed by Tal Einat and Saimadhav Heblikar in :issue:"
"`17535`.)"
msgstr ""
"Добавьте дополнительные номера строк для окон редактора IDLE. Окна "
"открываются без номеров строк, если иное не установлено на вкладке «Общие» "
"диалогового окна конфигурации. Номера строк существующего окна отображаются "
"и скрываются в меню «Параметры». (Предоставлено Талом Эйнатом и Саймадхавом "
"Хебликаром в :issue:`17535`.)"

#: ../../whatsnew/3.7.rst:1044 ../../whatsnew/3.7.rst:2004
msgid "importlib"
msgstr "importlib"

#: ../../whatsnew/3.7.rst:1046
msgid ""
"The :class:`importlib.abc.ResourceReader` ABC was introduced to support the "
"loading of resources from packages.  See also :ref:"
"`whatsnew37_importlib_resources`. (Contributed by Barry Warsaw, Brett Cannon "
"in :issue:`32248`.)"
msgstr ""
"ABC :class:`importlib.abc.ResourceReader` был введен для поддержки загрузки "
"ресурсов из пакетов. См. также:ref:`whatsnew37_importlib_resources`. "
"(Предоставлено Барри Варшавой и Бреттом Кэнноном в :issue:`32248`.)"

#: ../../whatsnew/3.7.rst:1051
msgid ""
":func:`importlib.reload` now raises :exc:`ModuleNotFoundError` if the module "
"lacks a spec. (Contributed by Garvit Khatri in :issue:`29851`.)"
msgstr ""
":func:`importlib.reload` теперь вызывает :exc:`ModuleNotFoundError`, если у "
"модуля отсутствует спецификация. (Предоставлено Гарвитом Хатри в :issue:"
"`29851`.)"

#: ../../whatsnew/3.7.rst:1055
msgid ""
":func:`importlib.find_spec` now raises :exc:`ModuleNotFoundError` instead "
"of :exc:`AttributeError` if the specified parent module is not a package (i."
"e. lacks a ``__path__`` attribute). (Contributed by Milan Oberkirch in :"
"issue:`30436`.)"
msgstr ""
":func:`importlib.find_spec` теперь вызывает :exc:`ModuleNotFoundError` "
"вместо :exc:`AttributeError`, если указанный родительский модуль не является "
"пакетом (т.е. не имеет атрибута ``__path__``). (Предоставлено Миланом "
"Оберкирхом в :issue:`30436`.)"

#: ../../whatsnew/3.7.rst:1060
msgid ""
"The new :func:`importlib.source_hash` can be used to compute the hash of the "
"passed source.  A :ref:`hash-based .pyc file <whatsnew37-pep552>` embeds the "
"value returned by this function."
msgstr ""
"Новый :func:`importlib.source_hash` можно использовать для вычисления хеша "
"переданного источника. Файл .pyc на основе хеша <whatsnew37-pep552> включает "
"значение, возвращаемое этой функцией."

#: ../../whatsnew/3.7.rst:1066
msgid "io"
msgstr "io"

#: ../../whatsnew/3.7.rst:1068
msgid ""
"The new :meth:`TextIOWrapper.reconfigure() <io.TextIOWrapper.reconfigure>` "
"method can be used to reconfigure the text stream with the new settings. "
"(Contributed by Antoine Pitrou in :issue:`30526` and INADA Naoki in :issue:"
"`15216`.)"
msgstr ""
"Новый метод :meth:`TextIOWrapper.reconfigure() <io.TextIOWrapper."
"reconfigure>` можно использовать для перенастройки текстового потока с "
"новыми настройками. (Предоставлено Антуаном Питру в :issue:`30526` и INADA "
"Наоки в :issue:`15216`.)"

#: ../../whatsnew/3.7.rst:1075
msgid "ipaddress"
msgstr "ipaddress"

#: ../../whatsnew/3.7.rst:1077
msgid ""
"The new ``subnet_of()`` and ``supernet_of()`` methods of :class:`ipaddress."
"IPv6Network` and :class:`ipaddress.IPv4Network` can be used for network "
"containment tests. (Contributed by Michel Albert and Cheryl Sabella in :"
"issue:`20825`.)"
msgstr ""
"Новые методы subnet_of() и supernet_of() :class:`ipaddress.IPv6Network` и :"
"class:`ipaddress.IPv4Network` могут использоваться для тестов сдерживания "
"сети. (Предоставлено Мишелем Альбертом и Шерил Сабеллой в :issue:`20825`.)"

#: ../../whatsnew/3.7.rst:1084
msgid "itertools"
msgstr "itertools"

#: ../../whatsnew/3.7.rst:1086
msgid ""
":func:`itertools.islice` now accepts :meth:`integer-like objects <object."
"__index__>` as start, stop, and slice arguments. (Contributed by Will "
"Roberts in :issue:`30537`.)"
msgstr ""
":func:`itertools.islice` теперь принимает :meth:`целочисленные объекты "
"<object.__index__>` в качестве аргументов запуска, остановки и среза. "
"(Предоставлено Уиллом Робертсом в :issue:`30537`.)"

#: ../../whatsnew/3.7.rst:1093 ../../whatsnew/3.7.rst:2022
msgid "locale"
msgstr "локаль"

#: ../../whatsnew/3.7.rst:1095
msgid ""
"The new *monetary* argument to :func:`locale.format_string` can be used to "
"make the conversion use monetary thousands separators and grouping strings.  "
"(Contributed by Garvit in :issue:`10379`.)"
msgstr ""
"Новый аргумент *monetary* для :func:`locale.format_string` можно "
"использовать для преобразования с использованием денежных разделителей тысяч "
"и строк группировки. (Предоставлено Гарвитом в :issue:`10379`.)"

#: ../../whatsnew/3.7.rst:1099
msgid ""
"The :func:`locale.getpreferredencoding` function now always returns "
"``'UTF-8'`` on Android or when in the :ref:`forced UTF-8 mode <whatsnew37-"
"pep540>`."
msgstr ""
"Функция :func:`locale.getpreferredencoding` теперь всегда возвращает "
"``'UTF-8'`` на Android или в :ref:`принудительном режиме UTF-8 <whatsnew37-"
"pep540>`."

#: ../../whatsnew/3.7.rst:1104
msgid "logging"
msgstr "логирование"

#: ../../whatsnew/3.7.rst:1106
msgid ""
":class:`~logging.Logger` instances can now be pickled. (Contributed by Vinay "
"Sajip in :issue:`30520`.)"
msgstr ""
"Экземпляры :class:`~logging.Logger` теперь можно мариновать. (Предоставлено "
"Винаем Саджипом в :issue:`30520`.)"

#: ../../whatsnew/3.7.rst:1109
msgid ""
"The new :meth:`StreamHandler.setStream() <logging.StreamHandler.setStream>` "
"method can be used to replace the logger stream after handler creation. "
"(Contributed by Vinay Sajip in :issue:`30522`.)"
msgstr ""
"Новый метод :meth:`StreamHandler.setStream() <logging.StreamHandler."
"setStream>` можно использовать для замены потока регистратора после создания "
"обработчика. (Предоставлено Винаем Саджипом в :issue:`30522`.)"

#: ../../whatsnew/3.7.rst:1113
msgid ""
"It is now possible to specify keyword arguments to handler constructors in "
"configuration passed to :func:`logging.config.fileConfig`. (Contributed by "
"Preston Landers in :issue:`31080`.)"
msgstr ""
"Теперь можно указать аргументы ключевых слов для конструкторов обработчиков "
"в конфигурации, передаваемой в :func:`logging.config.fileConfig`. "
"(Предоставлено Престоном Ландерсом в :issue:`31080`.)"

#: ../../whatsnew/3.7.rst:1119
msgid "math"
msgstr "математика"

#: ../../whatsnew/3.7.rst:1121
msgid ""
"The new :func:`math.remainder` function implements the IEEE 754-style "
"remainder operation.  (Contributed by Mark Dickinson in :issue:`29962`.)"
msgstr ""
"Новая функция :func:`math.remainder` реализует операцию остатка в стиле IEEE "
"754. (Предоставлено Марком Дикинсоном в :issue:`29962`.)"

#: ../../whatsnew/3.7.rst:1126
msgid "mimetypes"
msgstr "mimetypes"

#: ../../whatsnew/3.7.rst:1128
msgid ""
"The MIME type of .bmp has been changed from ``'image/x-ms-bmp'`` to ``'image/"
"bmp'``. (Contributed by Nitish Chandra in :issue:`22589`.)"
msgstr ""
"MIME-тип файла .bmp был изменен с ``'image/x-ms-bmp'`` на ``'image/bmp'``. "
"(Предоставлено Нитишем Чандрой в :issue:`22589`.)"

#: ../../whatsnew/3.7.rst:1134
msgid "msilib"
msgstr "msilib"

#: ../../whatsnew/3.7.rst:1136
msgid ""
"The new :meth:`Database.Close() <msilib.Database.Close>` method can be used "
"to close the :abbr:`MSI` database. (Contributed by Berker Peksag in :issue:"
"`20486`.)"
msgstr ""
"Новый метод :meth:`Database.Close() <msilib.Database.Close>` можно "
"использовать для закрытия базы данных :abbr:`MSI`. (Предоставлено Беркером "
"Пексагом в :issue:`20486`.)"

#: ../../whatsnew/3.7.rst:1142
msgid "multiprocessing"
msgstr "multiprocessing"

#: ../../whatsnew/3.7.rst:1144
msgid ""
"The new :meth:`Process.close() <multiprocessing.Process.close>` method "
"explicitly closes the process object and releases all resources associated "
"with it.  :exc:`ValueError` is raised if the underlying process is still "
"running. (Contributed by Antoine Pitrou in :issue:`30596`.)"
msgstr ""
"Новый метод :meth:`Process.close() <multiprocessing.Process.close>` явно "
"закрывает объект процесса и освобождает все связанные с ним ресурсы. :exc:"
"`ValueError` возникает, если базовый процесс все еще работает. "
"(Предоставлено Антуаном Питру в :issue:`30596`.)"

#: ../../whatsnew/3.7.rst:1150
msgid ""
"The new :meth:`Process.kill() <multiprocessing.Process.kill>` method can be "
"used to terminate the process using the :data:`SIGKILL` signal on Unix. "
"(Contributed by Vitor Pereira in :issue:`30794`.)"
msgstr ""
"Новый метод :meth:`Process.kill() <multiprocessing.Process.kill>` можно "
"использовать для завершения процесса с помощью сигнала :data:`SIGKILL` в "
"Unix. (Предоставлено Витором Перейрой в :issue:`30794`.)"

#: ../../whatsnew/3.7.rst:1154
msgid ""
"Non-daemonic threads created by :class:`~multiprocessing.Process` are now "
"joined on process exit. (Contributed by Antoine Pitrou in :issue:`18966`.)"
msgstr ""
"Недемонические потоки, созданные :class:`~multiprocessing.Process`, теперь "
"объединяются при выходе из процесса. (Предоставлено Антуаном Питру в :issue:"
"`18966`.)"

#: ../../whatsnew/3.7.rst:1160
msgid "os"
msgstr "os"

#: ../../whatsnew/3.7.rst:1162
msgid ""
":func:`os.fwalk` now accepts the *path* argument as :class:`bytes`. "
"(Contributed by Serhiy Storchaka in :issue:`28682`.)"
msgstr ""
":func:`os.fwalk` теперь принимает аргумент *path* как :class:`bytes`. "
"(Предоставлено Сергеем Сторчакой в ​​:issue:`28682`.)"

#: ../../whatsnew/3.7.rst:1165
msgid ""
":func:`os.scandir` gained support for :ref:`file descriptors <path_fd>`. "
"(Contributed by Serhiy Storchaka in :issue:`25996`.)"
msgstr ""
":func:`os.scandir` получил поддержку :ref:`дескрипторов файлов <path_fd>`. "
"(Добавлен Сергеем Сторчакой в ​​:issue:`25996`.)"

#: ../../whatsnew/3.7.rst:1168
msgid ""
"The new :func:`~os.register_at_fork` function allows registering Python "
"callbacks to be executed at process fork. (Contributed by Antoine Pitrou in :"
"issue:`16500`.)"
msgstr ""
"Новая функция :func:`~os.register_at_fork` позволяет регистрировать обратные "
"вызовы Python, которые будут выполняться при разветвлении процесса. "
"(Предоставлено Антуаном Питру в :issue:`16500`.)"

#: ../../whatsnew/3.7.rst:1172
msgid ""
"Added :func:`os.preadv` (combine the functionality of :func:`os.readv` and :"
"func:`os.pread`) and :func:`os.pwritev` functions (combine the functionality "
"of :func:`os.writev` and :func:`os.pwrite`). (Contributed by Pablo Galindo "
"in :issue:`31368`.)"
msgstr ""
"Добавлены функции :func:`os.preadv` (объединяют функциональность :func:`os."
"readv` и :func:`os.pread`) и :func:`os.pwritev` (объединяют "
"функциональность :func: `os.writev` и :func:`os.pwrite`). (Предоставлено "
"Пабло Галиндо в :issue:`31368`.)"

#: ../../whatsnew/3.7.rst:1177
msgid ""
"The mode argument of :func:`os.makedirs` no longer affects the file "
"permission bits of newly created intermediate-level directories. "
"(Contributed by Serhiy Storchaka in :issue:`19930`.)"
msgstr ""
"Аргумент режима :func:`os.madeirs` больше не влияет на биты прав доступа к "
"файлам вновь созданных каталогов промежуточного уровня. (Предоставлено "
"Сергеем Сторчакой в ​​:issue:`19930`.)"

#: ../../whatsnew/3.7.rst:1181
msgid ""
":func:`os.dup2` now returns the new file descriptor.  Previously, ``None`` "
"was always returned. (Contributed by Benjamin Peterson in :issue:`32441`.)"
msgstr ""
":func:`os.dup2` теперь возвращает новый дескриптор файла. Раньше всегда "
"возвращалось значение None. (Предоставлено Бенджамином Петерсоном в :issue:"
"`32441`.)"

#: ../../whatsnew/3.7.rst:1185
msgid ""
"The structure returned by :func:`os.stat` now contains the :attr:`~os."
"stat_result.st_fstype` attribute on Solaris and its derivatives. "
"(Contributed by Jesús Cea Avión in :issue:`32659`.)"
msgstr ""
"Структура, возвращаемая :func:`os.stat`, теперь содержит атрибут :attr:`~os."
"stat_result.st_fstype` в Solaris и его производных. (Предоставлено Хесусом "
"Сеа Авионом в :issue:`32659`.)"

#: ../../whatsnew/3.7.rst:1191
msgid "pathlib"
msgstr "pathlib"

#: ../../whatsnew/3.7.rst:1193
msgid ""
"The new :meth:`Path.is_mount() <pathlib.Path.is_mount>` method is now "
"available on POSIX systems and can be used to determine whether a path is a "
"mount point. (Contributed by Cooper Ry Lees in :issue:`30897`.)"
msgstr ""
"Новый метод :meth:`Path.is_mount() <pathlib.Path.is_mount>` теперь доступен "
"в системах POSIX и может использоваться для определения того, является ли "
"путь точкой монтирования. (Предоставлено Купером Рай Лизом в :issue:`30897`.)"

#: ../../whatsnew/3.7.rst:1199
msgid "pdb"
msgstr "pdb"

#: ../../whatsnew/3.7.rst:1201
msgid ""
":func:`pdb.set_trace` now takes an optional *header* keyword-only argument.  "
"If given, it is printed to the console just before debugging begins.  "
"(Contributed by Barry Warsaw in :issue:`31389`.)"
msgstr ""
":func:`pdb.set_trace` теперь принимает необязательный аргумент *header*, "
"содержащий только ключевое слово. Если он задан, он выводится на консоль "
"непосредственно перед началом отладки. (Предоставлено Барри Варшавой в :"
"issue:`31389`.)"

#: ../../whatsnew/3.7.rst:1205
msgid ""
":mod:`pdb` command line now accepts ``-m module_name`` as an alternative to "
"script file.  (Contributed by Mario Corchero in :issue:`32206`.)"
msgstr ""
"Командная строка :mod:`pdb` теперь принимает ``-m имя_модуля`` в качестве "
"альтернативы файлу сценария. (Предоставлено Марио Корчеро в :issue:`32206`.)"

#: ../../whatsnew/3.7.rst:1210
msgid "py_compile"
msgstr "py_compile"

#: ../../whatsnew/3.7.rst:1212
msgid ""
":func:`py_compile.compile` -- and by extension, :mod:`compileall` -- now "
"respects the :envvar:`SOURCE_DATE_EPOCH` environment variable by "
"unconditionally creating ``.pyc`` files for hash-based validation. This "
"allows for guaranteeing `reproducible builds <https://reproducible-builds."
"org/>`_ of ``.pyc`` files when they are created eagerly. (Contributed by "
"Bernhard M. Wiedemann in :issue:`29708`.)"
msgstr ""
":func:`py_compile.compile` -- и, как следствие, :mod:`compileall` -- теперь "
"учитывает переменную среды :envvar:`SOURCE_DATE_EPOCH`, безоговорочно "
"создавая файлы ``.pyc`` для проверки на основе хеша. Это позволяет "
"гарантировать `воспроизводимые сборки <https://reproducible-builds.org/>`_ "
"файлов ``.pyc``, когда они создаются с готовностью. (Предоставлено "
"Бернхардом М. Видеманном в :issue:`29708`.)"

#: ../../whatsnew/3.7.rst:1222
msgid "pydoc"
msgstr "pydoc"

#: ../../whatsnew/3.7.rst:1224
msgid ""
"The pydoc server can now bind to an arbitrary hostname specified by the new "
"``-n`` command-line argument. (Contributed by Feanil Patel in :issue:"
"`31128`.)"
msgstr ""
"Сервер pydoc теперь может привязываться к произвольному имени хоста, "
"указанному в новом аргументе командной строки ``-n``. (Предоставлено "
"Феанилом Пателем в :issue:`31128`.)"

#: ../../whatsnew/3.7.rst:1230
msgid "queue"
msgstr "очередь"

#: ../../whatsnew/3.7.rst:1232
msgid ""
"The new :class:`~queue.SimpleQueue` class is an unbounded :abbr:`FIFO` "
"queue. (Contributed by Antoine Pitrou in :issue:`14976`.)"
msgstr ""
"Новый класс :class:`~queue.SimpleQueue` представляет собой неограниченную "
"очередь :abbr:`FIFO`. (Предоставлено Антуаном Питру в :issue:`14976`.)"

#: ../../whatsnew/3.7.rst:1237
msgid "re"
msgstr "re"

#: ../../whatsnew/3.7.rst:1239
msgid ""
"The flags :const:`re.ASCII`, :const:`re.LOCALE` and :const:`re.UNICODE` can "
"be set within the scope of a group. (Contributed by Serhiy Storchaka in :"
"issue:`31690`.)"
msgstr ""
"Флаги :const:`re.ASCII`, :const:`re.LOCALE` и :const:`re.UNICODE` могут быть "
"установлены в пределах группы. (Предоставлено Сергеем Сторчакой в ​​:issue:"
"`31690`.)"

#: ../../whatsnew/3.7.rst:1243
msgid ""
":func:`re.split` now supports splitting on a pattern like ``r'\\b'``, "
"``'^$'`` or ``(?=-)`` that matches an empty string. (Contributed by Serhiy "
"Storchaka in :issue:`25054`.)"
msgstr ""
":func:`re.split` теперь поддерживает разделение по шаблону типа ``r'\\b'``, "
"``'^ $ '`` или ``(?=-)``, который соответствует пустой строке. (Добавлен "
"Сергеем Сторчакой в ​​:issue:`25054`.)"

#: ../../whatsnew/3.7.rst:1247
msgid ""
"Regular expressions compiled with the :const:`re.LOCALE` flag no longer "
"depend on the locale at compile time.  Locale settings are applied only when "
"the compiled regular expression is used. (Contributed by Serhiy Storchaka "
"in :issue:`30215`.)"
msgstr ""
"Регулярные выражения, скомпилированные с флагом :const:`re.LOCALE`, больше "
"не зависят от локали во время компиляции. Настройки локали применяются "
"только при использовании скомпилированного регулярного выражения. "
"(Предоставлено Сергеем Сторчакой в ​​:issue:`30215`.)"

#: ../../whatsnew/3.7.rst:1252
msgid ""
":exc:`FutureWarning` is now emitted if a regular expression contains "
"character set constructs that will change semantically in the future, such "
"as nested sets and set operations. (Contributed by Serhiy Storchaka in :"
"issue:`30349`.)"
msgstr ""
":exc:`FutureWarning` теперь генерируется, если регулярное выражение содержит "
"конструкции набора символов, которые семантически изменятся в будущем, "
"например вложенные наборы и операции над множествами. (Предоставлено Сергеем "
"Сторчакой в ​​:issue:`30349`.)"

#: ../../whatsnew/3.7.rst:1257
msgid ""
"Compiled regular expression and match objects can now be copied using :func:"
"`copy.copy` and :func:`copy.deepcopy`. (Contributed by Serhiy Storchaka in :"
"issue:`10076`.)"
msgstr ""
"Скомпилированные регулярные выражения и объекты сопоставления теперь можно "
"копировать с помощью :func:`copy.copy` и :func:`copy.deepcopy`. (Размещено "
"Сергеем Сторчакой в ​​:issue:`10076`.)"

#: ../../whatsnew/3.7.rst:1263
msgid "signal"
msgstr "сигнал"

#: ../../whatsnew/3.7.rst:1265
msgid ""
"The new *warn_on_full_buffer* argument to the :func:`signal.set_wakeup_fd` "
"function makes it possible to specify whether Python prints a warning on "
"stderr when the wakeup buffer overflows. (Contributed by Nathaniel J. Smith "
"in :issue:`30050`.)"
msgstr ""
"Новый аргумент *warn_on_full_buffer* функции :func:`signal.set_wakeup_fd` "
"позволяет указать, будет ли Python печатать предупреждение на stderr при "
"переполнении буфера пробуждения. (Предоставлено Натаниэлем Дж. Смитом в :"
"issue:`30050`.)"

#: ../../whatsnew/3.7.rst:1272 ../../whatsnew/3.7.rst:2045
msgid "socket"
msgstr "сокет"

#: ../../whatsnew/3.7.rst:1274
msgid ""
"The new :func:`socket.getblocking() <socket.socket.getblocking>` method "
"returns ``True`` if the socket is in blocking mode and ``False`` otherwise. "
"(Contributed by Yury Selivanov in :issue:`32373`.)"
msgstr ""
"Новый метод :func:`socket.getblocking() <socket.socket.getblocking>` "
"возвращает ``True``, если сокет находится в режиме блокировки, и ``False`` в "
"противном случае. (Добавлен Юрием Селивановым в :issue:`32373`.)"

#: ../../whatsnew/3.7.rst:1278
msgid ""
"The new :func:`socket.close` function closes the passed socket file "
"descriptor. This function should be used instead of :func:`os.close` for "
"better compatibility across platforms. (Contributed by Christian Heimes in :"
"issue:`32454`.)"
msgstr ""
"Новая функция :func:`socket.close` закрывает переданный дескриптор файла "
"сокета. Эту функцию следует использовать вместо :func:`os.close` для лучшей "
"совместимости между платформами. (Предоставлено Кристианом Хаймсом в :issue:"
"`32454`.)"

#: ../../whatsnew/3.7.rst:1283
msgid ""
"The :mod:`socket` module now exposes the :data:`socket.TCP_CONGESTION` "
"(Linux 2.6.13), :data:`socket.TCP_USER_TIMEOUT` (Linux 2.6.37), and :data:"
"`socket.TCP_NOTSENT_LOWAT` (Linux 3.12) constants. (Contributed by Omar "
"Sandoval in :issue:`26273` and Nathaniel J. Smith in :issue:`29728`.)"
msgstr ""

#: ../../whatsnew/3.7.rst:1289
msgid ""
"Support for :data:`socket.AF_VSOCK` sockets has been added to allow "
"communication between virtual machines and their hosts. (Contributed by "
"Cathy Avery in :issue:`27584`.)"
msgstr ""

#: ../../whatsnew/3.7.rst:1293
msgid ""
"Sockets now auto-detect family, type and protocol from file descriptor by "
"default. (Contributed by Christian Heimes in :issue:`28134`.)"
msgstr ""
"Сокеты теперь по умолчанию автоматически определяют семейство, тип и "
"протокол по файловому дескриптору. (Предоставлено Кристианом Хаймсом в :"
"issue:`28134`.)"

#: ../../whatsnew/3.7.rst:1299
msgid "socketserver"
msgstr "socketserver"

#: ../../whatsnew/3.7.rst:1301
msgid ""
":meth:`socketserver.ThreadingMixIn.server_close` now waits until all non-"
"daemon threads complete. :meth:`socketserver.ForkingMixIn.server_close` now "
"waits until all child processes complete."
msgstr ""
":meth:`socketserver.ThreadingMixIn.server_close` теперь ожидает завершения "
"всех потоков, не являющихся демонами. :meth:`socketserver.ForkingMixIn."
"server_close` теперь ожидает завершения всех дочерних процессов."

#: ../../whatsnew/3.7.rst:1305
msgid ""
"Add a new :attr:`socketserver.ForkingMixIn.block_on_close` class attribute "
"to :class:`socketserver.ForkingMixIn` and :class:`socketserver."
"ThreadingMixIn` classes. Set the class attribute to ``False`` to get the "
"pre-3.7 behaviour."
msgstr ""
"Добавьте новый атрибут класса :attr:`socketserver.ForkingMixIn."
"block_on_close` к классам :class:`socketserver.ForkingMixIn` и :class:"
"`socketserver.ThreadingMixIn`. Установите для атрибута класса значение "
"False, чтобы получить поведение версии до версии 3.7."

#: ../../whatsnew/3.7.rst:1311
msgid "sqlite3"
msgstr "sqlite3"

#: ../../whatsnew/3.7.rst:1313
msgid ""
":class:`sqlite3.Connection` now exposes the :meth:`~sqlite3.Connection."
"backup` method when the underlying SQLite library is at version 3.6.11 or "
"higher. (Contributed by Lele Gaifax in :issue:`27645`.)"
msgstr ""
":class:`sqlite3.Connection` теперь предоставляет метод :meth:`~sqlite3."
"Connection.backup`, если базовая библиотека SQLite имеет версию 3.6.11 или "
"выше. (Предоставлено Леле Гайфакс в :issue:`27645`.)"

#: ../../whatsnew/3.7.rst:1317
msgid ""
"The *database* argument of :func:`sqlite3.connect` now accepts any :term:"
"`path-like object`, instead of just a string. (Contributed by Anders "
"Lorentsen in :issue:`31843`.)"
msgstr ""
"Аргумент *database* :func:`sqlite3.connect` теперь принимает любой :term:"
"`path-подобный объект`, а не просто строку. (Предоставлено Андерсом "
"Лорентсеном в :issue:`31843`.)"

#: ../../whatsnew/3.7.rst:1323 ../../whatsnew/3.7.rst:2054
msgid "ssl"
msgstr "ssl"

#: ../../whatsnew/3.7.rst:1325
msgid ""
"The :mod:`ssl` module now uses OpenSSL's builtin API instead of :func:`~ssl."
"match_hostname` to check a host name or an IP address.  Values are validated "
"during TLS handshake.  Any certificate validation error including failing "
"the host name check now raises :exc:`~ssl.SSLCertVerificationError` and "
"aborts the handshake with a proper TLS Alert message.  The new exception "
"contains additional information. Host name validation can be customized "
"with :attr:`SSLContext.hostname_checks_common_name <ssl.SSLContext."
"hostname_checks_common_name>`. (Contributed by Christian Heimes in :issue:"
"`31399`.)"
msgstr ""
"Модуль :mod:`ssl` теперь использует встроенный API OpenSSL вместо :func:"
"`~ssl.match_hostname` для проверки имени хоста или IP-адреса. Значения "
"проверяются во время установления связи TLS. Любая ошибка проверки "
"сертификата, включая неудачную проверку имени хоста, теперь вызывает ошибку :"
"exc:`~ssl.SSLCertVerificationError` и прерывает рукопожатие с "
"соответствующим сообщением TLS Alert. Новое исключение содержит "
"дополнительную информацию. Проверку имени хоста можно настроить с помощью :"
"attr:`SSLContext.hostname_checks_common_name <ssl.SSLContext."
"hostname_checks_common_name>`. (Предоставлено Кристианом Хаймсом в :issue:"
"`31399`.)"

#: ../../whatsnew/3.7.rst:1336
msgid ""
"The improved host name check requires a *libssl* implementation compatible "
"with OpenSSL 1.0.2 or 1.1.  Consequently, OpenSSL 0.9.8 and 1.0.1 are no "
"longer supported (see :ref:`37-platform-support-removals` for more details). "
"The ssl module is mostly compatible with LibreSSL 2.7.2 and newer."
msgstr ""
"Для улучшенной проверки имени хоста требуется реализация *libssl*, "
"совместимая с OpenSSL 1.0.2 или 1.1. Следовательно, OpenSSL 0.9.8 и 1.0.1 "
"больше не поддерживаются (более подробную информацию см. в разделе :ref:`37-"
"platform-support-removals`). Модуль SSL в основном совместим с LibreSSL "
"2.7.2 и новее."

#: ../../whatsnew/3.7.rst:1341
msgid ""
"The ``ssl`` module no longer sends IP addresses in SNI TLS extension. "
"(Contributed by Christian Heimes in :issue:`32185`.)"
msgstr ""
"Модуль SSL больше не отправляет IP-адреса в расширении SNI TLS. "
"(Предоставлено Кристианом Хаймсом в :issue:`32185`.)"

#: ../../whatsnew/3.7.rst:1344
msgid ""
":func:`~ssl.match_hostname` no longer supports partial wildcards like ``www*."
"example.org``. (Contributed by Mandeep Singh in :issue:`23033` and Christian "
"Heimes in :issue:`31399`.)"
msgstr ""
":func:`~ssl.match_hostname` больше не поддерживает частичные подстановочные "
"знаки, такие как ``www*.example.org``. (Предоставлено Мандипом Сингхом в :"
"issue:`23033` и Кристианом Хаймсом в :issue:`31399`.)"

#: ../../whatsnew/3.7.rst:1349
msgid ""
"The default cipher suite selection of the ``ssl`` module now uses a "
"blacklist approach rather than a hard-coded whitelist.  Python no longer re-"
"enables ciphers that have been blocked by OpenSSL security updates.  Default "
"cipher suite selection can be configured at compile time. (Contributed by "
"Christian Heimes in :issue:`31429`.)"
msgstr ""
"Выбор набора шифров по умолчанию для модуля SSL теперь использует подход с "
"черным списком, а не с жестко запрограммированным белым списком. Python "
"больше не включает повторно шифры, заблокированные обновлениями безопасности "
"OpenSSL. Выбор набора шифров по умолчанию можно настроить во время "
"компиляции. (Предоставлено Кристианом Хаймсом в :issue:`31429`.)"

#: ../../whatsnew/3.7.rst:1355
msgid ""
"Validation of server certificates containing internationalized domain names "
"(IDNs) is now supported.  As part of this change, the :attr:`SSLSocket."
"server_hostname <ssl.SSLSocket.server_hostname>` attribute now stores the "
"expected hostname in A-label form (``\"xn--pythn-mua.org\"``), rather than "
"the U-label form (``\"pythön.org\"``).  (Contributed by Nathaniel J. Smith "
"and Christian Heimes in :issue:`28414`.)"
msgstr ""
"Теперь поддерживается проверка сертификатов сервера, содержащих "
"интернационализированные доменные имена (IDN). В рамках этого изменения "
"атрибут :attr:`SSLSocket.server_hostname <ssl.SSLSocket.server_hostname>` "
"теперь сохраняет ожидаемое имя хоста в форме A-метки (``\"xn--pythn-mua."
"org\"``), а не в форме U-метки (``\"pythön.org\"``). (Предоставлено "
"Натаниэлем Дж. Смитом и Кристианом Хаймсом в :issue:`28414`.)"

#: ../../whatsnew/3.7.rst:1362
msgid ""
"The ``ssl`` module has preliminary and experimental support for TLS 1.3 and "
"OpenSSL 1.1.1.  At the time of Python 3.7.0 release, OpenSSL 1.1.1 is still "
"under development and TLS 1.3 hasn't been finalized yet.  The TLS 1.3 "
"handshake and protocol behaves slightly differently than TLS 1.2 and "
"earlier, see :ref:`ssl-tlsv1_3`. (Contributed by Christian Heimes in :issue:"
"`32947`, :issue:`20995`, :issue:`29136`, :issue:`30622` and :issue:`33618`)"
msgstr ""
"Модуль SSL имеет предварительную и экспериментальную поддержку TLS 1.3 и "
"OpenSSL 1.1.1. На момент выпуска Python 3.7.0 OpenSSL 1.1.1 все еще "
"находился в стадии разработки, а TLS 1.3 еще не был завершен. Подтверждение "
"и протокол TLS 1.3 ведут себя немного иначе, чем TLS 1.2 и более ранние "
"версии, см. :ref:`ssl-tlsv1_3`. (Внесено Кристианом Хаймсом в :issue:"
"`32947`, :issue:`20995`, :issue:`29136`, :issue:`30622` и :issue:`33618`)"

#: ../../whatsnew/3.7.rst:1370
msgid ""
":class:`~ssl.SSLSocket` and :class:`~ssl.SSLObject` no longer have a public "
"constructor.  Direct instantiation was never a documented and supported "
"feature.  Instances must be created with :class:`~ssl.SSLContext` methods :"
"meth:`~ssl.SSLContext.wrap_socket` and :meth:`~ssl.SSLContext.wrap_bio`. "
"(Contributed by Christian Heimes in :issue:`32951`)"
msgstr ""
":class:`~ssl.SSLSocket` и :class:`~ssl.SSLObject` больше не имеют открытого "
"конструктора. Прямое создание экземпляров никогда не было документированной "
"и поддерживаемой функцией. Экземпляры должны быть созданы с помощью методов :"
"class:`~ssl.SSLContext` :meth:`~ssl.SSLContext.wrap_socket` и :meth:`~ssl."
"SSLContext.wrap_bio`. (Предоставлено Кристианом Хаймсом в :issue:`32951`)"

#: ../../whatsnew/3.7.rst:1376
msgid ""
"OpenSSL 1.1 APIs for setting the minimum and maximum TLS protocol version "
"are available as :attr:`SSLContext.minimum_version <ssl.SSLContext."
"minimum_version>` and :attr:`SSLContext.maximum_version <ssl.SSLContext."
"maximum_version>`. Supported protocols are indicated by several new flags, "
"such as :data:`~ssl.HAS_TLSv1_1`. (Contributed by Christian Heimes in :issue:"
"`32609`.)"
msgstr ""
"API OpenSSL 1.1 для установки минимальной и максимальной версии протокола "
"TLS доступны как :attr:`SSLContext.minimum_version <ssl.SSLContext."
"minimum_version>` и :attr:`SSLContext.maximum_version <ssl.SSLContext."
"maximum_version>`. Поддерживаемые протоколы обозначаются несколькими новыми "
"флагами, такими как :data:`~ssl.HAS_TLSv1_1`. (Предоставлено Кристианом "
"Хаймсом в :issue:`32609`.)"

#: ../../whatsnew/3.7.rst:1385
msgid "string"
msgstr "строка"

#: ../../whatsnew/3.7.rst:1387
msgid ""
":class:`string.Template` now lets you to optionally modify the regular "
"expression pattern for braced placeholders and non-braced placeholders "
"separately.  (Contributed by Barry Warsaw in :issue:`1198569`.)"
msgstr ""
":class:`string.Template` теперь позволяет вам при необходимости изменять "
"шаблон регулярного выражения для заполнителей в фигурных скобках и "
"заполнителей без фигурных скобок отдельно. (Предоставлено Барри Варшавой в :"
"issue:`1198569`.)"

#: ../../whatsnew/3.7.rst:1393
msgid "subprocess"
msgstr "subprocess"

#: ../../whatsnew/3.7.rst:1395
msgid ""
"The :func:`subprocess.run` function accepts the new *capture_output* keyword "
"argument.  When true, stdout and stderr will be captured. This is equivalent "
"to passing :data:`subprocess.PIPE` as *stdout* and *stderr* arguments. "
"(Contributed by Bo Bayles in :issue:`32102`.)"
msgstr ""

#: ../../whatsnew/3.7.rst:1401
msgid ""
"The ``subprocess.run`` function and the :class:`subprocess.Popen` "
"constructor now accept the *text* keyword argument as an alias to "
"*universal_newlines*. (Contributed by Andrew Clegg in :issue:`31756`.)"
msgstr ""
"Функция ``subprocess.run`` и конструктор :class:`subprocess.Popen` теперь "
"принимают аргумент ключевого слова *text* в качестве псевдонима для "
"*universal_newlines*. (Предоставлено Эндрю Клеггом в :issue:`31756`.)"

#: ../../whatsnew/3.7.rst:1406
msgid ""
"On Windows the default for *close_fds* was changed from ``False`` to "
"``True`` when redirecting the standard handles.  It's now possible to set "
"*close_fds* to true when redirecting the standard handles.  See :class:"
"`subprocess.Popen`.  This means that *close_fds* now defaults to ``True`` on "
"all supported platforms. (Contributed by Segev Finer in :issue:`19764`.)"
msgstr ""
"В Windows значение по умолчанию для *close_fds* было изменено с ``False`` на "
"``True`` при перенаправлении стандартных дескрипторов. Теперь можно "
"установить для *close_fds* значение true при перенаправлении стандартных "
"дескрипторов. См. :class:`subprocess.Popen`. Это означает, что *close_fds* "
"теперь по умолчанию имеет значение True на всех поддерживаемых платформах. "
"(Предоставлено Сегевым Файнером в :issue:`19764`.)"

#: ../../whatsnew/3.7.rst:1413
msgid ""
"The subprocess module is now more graceful when handling :exc:"
"`KeyboardInterrupt` during :func:`subprocess.call`, :func:`subprocess.run`, "
"or in a :class:`~subprocess.Popen` context manager.  It now waits a short "
"amount of time for the child to exit, before continuing the handling of the "
"``KeyboardInterrupt`` exception. (Contributed by Gregory P. Smith in :issue:"
"`25942`.)"
msgstr ""
"Модуль подпроцесса теперь более изящно обрабатывает :exc:`KeyboardInterrupt` "
"во время :func:`subprocess.call`, :func:`subprocess.run` или в контекстном "
"менеджере :class:`~subprocess.Popen`. Теперь он некоторое время ждет выхода "
"дочернего элемента, прежде чем продолжить обработку исключения "
"``KeyboardInterrupt``. (Предоставлено Грегори П. Смитом в :issue:`25942`.)"

#: ../../whatsnew/3.7.rst:1423 ../../whatsnew/3.7.rst:2070
msgid "sys"
msgstr "sys"

#: ../../whatsnew/3.7.rst:1425
msgid ""
"The new :func:`sys.breakpointhook` hook function is called by the built-in :"
"func:`breakpoint`. (Contributed by Barry Warsaw in :issue:`31353`.)"
msgstr ""
"Новая функция-перехватчик :func:`sys.breakpointhook` вызывается встроенной "
"функцией :func:`breakpoint`. (Предоставлено Барри Варшавой в :issue:`31353`.)"

#: ../../whatsnew/3.7.rst:1429
msgid ""
"On Android, the new :func:`sys.getandroidapilevel` returns the build-time "
"Android API version. (Contributed by Victor Stinner in :issue:`28740`.)"
msgstr ""
"В Android новый :func:`sys.getandroidapilevel` возвращает версию Android API "
"времени сборки. (Предоставлено Виктором Стиннером в :issue:`28740`.)"

#: ../../whatsnew/3.7.rst:1433
msgid ""
"The new :func:`sys.get_coroutine_origin_tracking_depth` function returns the "
"current coroutine origin tracking depth, as set by the new :func:`sys."
"set_coroutine_origin_tracking_depth`.  :mod:`asyncio` has been converted to "
"use this new API instead of the deprecated :func:`sys."
"set_coroutine_wrapper`. (Contributed by Nathaniel J. Smith in :issue:"
"`32591`.)"
msgstr ""
"Новая функция :func:`sys.get_coroutine_origin_tracking_length` возвращает "
"текущую глубину отслеживания начала координат сопрограммы, как установлено "
"новой :func:`sys.set_coroutine_origin_tracking_length`. :mod:`asyncio` был "
"преобразован для использования этого нового API вместо устаревшего :func:"
"`sys.set_coroutine_wrapper`. (Предоставлено Натаниэлем Дж. Смитом в :issue:"
"`32591`.)"

#: ../../whatsnew/3.7.rst:1442
msgid "time"
msgstr "время"

#: ../../whatsnew/3.7.rst:1444
msgid ""
":pep:`564` adds six new functions with nanosecond resolution to the :mod:"
"`time` module:"
msgstr ""
":pep:`564` добавляет в модуль :mod:`time` шесть новых функций с "
"наносекундным разрешением:"

#: ../../whatsnew/3.7.rst:1454
msgid "New clock identifiers have been added:"
msgstr "Добавлены новые идентификаторы часов:"

#: ../../whatsnew/3.7.rst:1456
msgid ""
":data:`time.CLOCK_BOOTTIME` (Linux): Identical to :data:`time."
"CLOCK_MONOTONIC`, except it also includes any time that the system is "
"suspended."
msgstr ""

#: ../../whatsnew/3.7.rst:1459
msgid ""
":data:`time.CLOCK_PROF` (FreeBSD, NetBSD and OpenBSD): High-resolution per-"
"process CPU timer."
msgstr ""

#: ../../whatsnew/3.7.rst:1461
msgid ""
":data:`time.CLOCK_UPTIME` (FreeBSD, OpenBSD): Time whose absolute value is "
"the time the system has been running and not suspended, providing accurate "
"uptime measurement."
msgstr ""

#: ../../whatsnew/3.7.rst:1465
msgid ""
"The new :func:`time.thread_time` and :func:`time.thread_time_ns` functions "
"can be used to get per-thread CPU time measurements. (Contributed by Antoine "
"Pitrou in :issue:`32025`.)"
msgstr ""
"Новые функции :func:`time.thread_time` и :func:`time.thread_time_ns` можно "
"использовать для получения измерений времени процессора для каждого потока. "
"(Предоставлено Антуаном Питру в :issue:`32025`.)"

#: ../../whatsnew/3.7.rst:1469
msgid ""
"The new :func:`time.pthread_getcpuclockid` function returns the clock ID of "
"the thread-specific CPU-time clock."
msgstr ""
"Новая функция :func:`time.pthread_getcpulockid` возвращает идентификатор "
"часов процессорного времени для конкретного потока."

#: ../../whatsnew/3.7.rst:1474
msgid "tkinter"
msgstr "tkinter"

#: ../../whatsnew/3.7.rst:1476
msgid ""
"The new :class:`tkinter.ttk.Spinbox` class is now available. (Contributed by "
"Alan Moore in :issue:`32585`.)"
msgstr ""
"Новый класс :class:`tkinter.ttk.Spinbox` теперь доступен. (Предоставлено "
"Аланом Муром в :issue:`32585`.)"

#: ../../whatsnew/3.7.rst:1481
msgid "tracemalloc"
msgstr "tracemalloc"

#: ../../whatsnew/3.7.rst:1483
msgid ""
":class:`tracemalloc.Traceback` behaves more like regular tracebacks, sorting "
"the frames from oldest to most recent. :meth:`Traceback.format() "
"<tracemalloc.Traceback.format>` now accepts negative *limit*, truncating the "
"result to the ``abs(limit)`` oldest frames.  To get the old behaviour, use "
"the new *most_recent_first* argument to ``Traceback.format()``. (Contributed "
"by Jesse Bakker in :issue:`32121`.)"
msgstr ""
":class:`tracemalloc.Traceback` ведет себя скорее как обычная обратная "
"трассировка, сортируя кадры от самых старых до самых последних. :meth:"
"`Traceback.format() <tracemalloc.Traceback.format>` теперь принимает "
"отрицательный *limit*, усекая результат до самых старых кадров "
"``abs(limit)``. Чтобы получить старое поведение, используйте новый аргумент "
"*most_recent_first* для ``Traceback.format()``. (Предоставлено Джесси "
"Баккером в :issue:`32121`.)"

#: ../../whatsnew/3.7.rst:1493
msgid "types"
msgstr "типы"

#: ../../whatsnew/3.7.rst:1495
msgid ""
"The new :class:`~types.WrapperDescriptorType`, :class:`~types."
"MethodWrapperType`, :class:`~types.MethodDescriptorType`, and :class:`~types."
"ClassMethodDescriptorType` classes are now available. (Contributed by Manuel "
"Krebber and Guido van Rossum in :issue:`29377`, and Serhiy Storchaka in :"
"issue:`32265`.)"
msgstr ""
"Теперь доступны новые классы :class:`~types.WrapperDescriptorType`, :class:"
"`~types.MethodWrapperType`, :class:`~types.MethodDescriptorType` и :class:"
"`~types.ClassMethodDescriptorType`. (Предоставлено Мануэлем Креббером и "
"Гвидо ван Россумом в :issue:`29377` и Сергеем Сторчакой в ​​:issue:`32265`.)"

#: ../../whatsnew/3.7.rst:1501
msgid ""
"The new :func:`types.resolve_bases` function resolves MRO entries "
"dynamically as specified by :pep:`560`. (Contributed by Ivan Levkivskyi in :"
"issue:`32717`.)"
msgstr ""
"Новая функция :func:`types.resolve_bases` динамически разрешает записи MRO, "
"как указано в :pep:`560`. (Предоставлено Иваном Левковским в :issue:`32717`.)"

#: ../../whatsnew/3.7.rst:1507
msgid "unicodedata"
msgstr "unicodedata"

#: ../../whatsnew/3.7.rst:1509
msgid ""
"The internal :mod:`unicodedata` database has been upgraded to use `Unicode "
"11 <https://www.unicode.org/versions/Unicode11.0.0/>`_. (Contributed by "
"Benjamin Peterson.)"
msgstr ""
"Внутренняя база данных :mod:`unicodedata` была обновлена ​​для использования "
"`Unicode 11 <https://www.unicode.org/versions/Unicode11.0.0/>`_. "
"(Предоставлено Бенджамином Петерсоном.)"

#: ../../whatsnew/3.7.rst:1515
msgid "unittest"
msgstr "unittest"

#: ../../whatsnew/3.7.rst:1517
msgid ""
"The new ``-k`` command-line option allows filtering tests by a name "
"substring or a Unix shell-like pattern. For example, ``python -m unittest -k "
"foo`` runs ``foo_tests.SomeTest.test_something``, ``bar_tests.SomeTest."
"test_foo``, but not ``bar_tests.FooTest.test_something``. (Contributed by "
"Jonas Haag in :issue:`32071`.)"
msgstr ""
"Новая опция командной строки ``-k`` позволяет фильтровать тесты по подстроке "
"имени или шаблону, подобному оболочке Unix. Например, ``python -m unittest -"
"k foo`` запускает ``foo_tests.SomeTest.test_something``, ``bar_tests."
"SomeTest.test_foo``, но не ``bar_tests.FooTest.test_something``. "
"(Предоставлено Йонасом Хаагом в :issue:`32071`.)"

#: ../../whatsnew/3.7.rst:1526
msgid "unittest.mock"
msgstr "unittest.mock"

#: ../../whatsnew/3.7.rst:1528
msgid ""
"The :const:`~unittest.mock.sentinel` attributes now preserve their identity "
"when they are :mod:`copied <copy>` or :mod:`pickled <pickle>`. (Contributed "
"by Serhiy Storchaka in :issue:`20804`.)"
msgstr ""
"Атрибуты :const:`~unittest.mock.sentinel` теперь сохраняют свою "
"идентичность, когда они :mod:`скопированы <copy>` или :mod:`маринованы "
"<pickle>`. (Предоставлено Сергеем Сторчакой в ​​:issue:`20804`.)"

#: ../../whatsnew/3.7.rst:1532
msgid ""
"The new :func:`~unittest.mock.seal` function allows sealing :class:"
"`~unittest.mock.Mock` instances, which will disallow further creation of "
"attribute mocks.  The seal is applied recursively to all attributes that are "
"themselves mocks. (Contributed by Mario Corchero in :issue:`30541`.)"
msgstr ""
"Новая функция :func:`~unittest.mock.seal` позволяет запечатывать экземпляры :"
"class:`~unittest.mock.Mock`, что запрещает дальнейшее создание макетов "
"атрибутов. Печать рекурсивно применяется ко всем атрибутам, которые сами "
"являются макетами. (Предоставлено Марио Корчеро в :issue:`30541`.)"

#: ../../whatsnew/3.7.rst:1540
msgid "urllib.parse"
msgstr "urllib.parse"

#: ../../whatsnew/3.7.rst:1542
msgid ""
":func:`urllib.parse.quote` has been updated from :rfc:`2396` to :rfc:`3986`, "
"adding ``~`` to the set of characters that are never quoted by default. "
"(Contributed by Christian Theune and Ratnadeep Debnath in :issue:`16285`.)"
msgstr ""
":func:`urllib.parse.quote` был обновлен с :rfc:`2396` до :rfc:`3986`, "
"добавлен ``~`` к набору символов, которые по умолчанию никогда не "
"заключаются в кавычки. (Предоставлено Кристианом Теуном и Ратнадипом "
"Дебнатом в :issue:`16285`.)"

#: ../../whatsnew/3.7.rst:1548
msgid "uu"
msgstr "uu"

#: ../../whatsnew/3.7.rst:1550
msgid ""
"The :func:`uu.encode` function now accepts an optional *backtick* keyword "
"argument.  When it's true, zeros are represented by ``'`'`` instead of "
"spaces.  (Contributed by Xiang Zhang in :issue:`30103`.)"
msgstr ""
"Функция :func:`uu.encode` теперь принимает необязательный аргумент ключевого "
"слова *backtick*. Когда это правда, нули представлены ``'`'`` вместо "
"пробелов. (Предоставлено Сян Чжаном в :issue:`30103`.)"

#: ../../whatsnew/3.7.rst:1556
msgid "uuid"
msgstr "uuid"

#: ../../whatsnew/3.7.rst:1558
msgid ""
"The new :attr:`UUID.is_safe <uuid.UUID.is_safe>` attribute relays "
"information from the platform about whether generated UUIDs are generated "
"with a multiprocessing-safe method. (Contributed by Barry Warsaw in :issue:"
"`22807`.)"
msgstr ""
"Новый атрибут :attr:`UUID.is_safe <uuid.UUID.is_safe>` передает информацию с "
"платформы о том, генерируются ли сгенерированные UUID методом, безопасным "
"для многопроцессорной обработки. (Предоставлено Барри Варшавой в :issue:"
"`22807`.)"

#: ../../whatsnew/3.7.rst:1563
msgid ""
":func:`uuid.getnode` now prefers universally administered MAC addresses over "
"locally administered MAC addresses. This makes a better guarantee for global "
"uniqueness of UUIDs returned from :func:`uuid.uuid1`.  If only locally "
"administered MAC addresses are available, the first such one found is "
"returned. (Contributed by Barry Warsaw in :issue:`32107`.)"
msgstr ""
":func:`uuid.getnode` теперь предпочитает универсально администрируемые MAC-"
"адреса локально администрируемым MAC-адресам. Это дает лучшую гарантию "
"глобальной уникальности UUID, возвращаемых из :func:`uuid.uuid1`. Если "
"доступны только локально администрируемые MAC-адреса, возвращается первый "
"найденный такой. (Предоставлено Барри Варшавой в :issue:`32107`.)"

#: ../../whatsnew/3.7.rst:1572
msgid "warnings"
msgstr "предупреждения"

#: ../../whatsnew/3.7.rst:1574
msgid ""
"The initialization of the default warnings filters has changed as follows:"
msgstr ""
"Инициализация фильтров предупреждений по умолчанию изменилась следующим "
"образом:"

#: ../../whatsnew/3.7.rst:1576
msgid ""
"warnings enabled via command line options (including those for :option:`-b` "
"and the new CPython-specific :option:`-X` ``dev`` option) are always passed "
"to the warnings machinery via the :data:`sys.warnoptions` attribute."
msgstr ""
"предупреждения, включенные с помощью параметров командной строки (включая "
"предупреждения для :option:`-b` и новую специфичную для CPython опцию :"
"option:`-X` ``dev``), всегда передаются в механизм предупреждений через :"
"data:` Атрибут sys.warnooptions."

#: ../../whatsnew/3.7.rst:1580
msgid ""
"warnings filters enabled via the command line or the environment now have "
"the following order of precedence:"
msgstr ""
"Фильтры предупреждений, активируемые через командную строку или среду, "
"теперь имеют следующий порядок приоритета:"

#: ../../whatsnew/3.7.rst:1583
msgid "the ``BytesWarning`` filter for :option:`-b` (or ``-bb``)"
msgstr "фильтр ``BytesWarning`` для :option:`-b` (или ``-bb``)"

#: ../../whatsnew/3.7.rst:1584
msgid "any filters specified with the :option:`-W` option"
msgstr "любые фильтры, указанные с опцией :option:`-W`"

#: ../../whatsnew/3.7.rst:1585
msgid ""
"any filters specified with the :envvar:`PYTHONWARNINGS` environment variable"
msgstr "любые фильтры, указанные в переменной среды :envvar:`PYTHONWARNINGS`"

#: ../../whatsnew/3.7.rst:1587
msgid ""
"any other CPython specific filters (e.g. the ``default`` filter added for "
"the new ``-X dev`` mode)"
msgstr ""
"любые другие фильтры, специфичные для CPython (например, фильтр «default», "
"добавленный для нового режима «-X dev»)"

#: ../../whatsnew/3.7.rst:1589
msgid "any implicit filters defined directly by the warnings machinery"
msgstr ""
"любые неявные фильтры, определенные непосредственно механизмом предупреждений"

#: ../../whatsnew/3.7.rst:1591
msgid ""
"in :ref:`CPython debug builds <debug-build>`, all warnings are now displayed "
"by default (the implicit filter list is empty)"
msgstr ""
"в :ref:`CPython debug builds <debug-build>` все предупреждения теперь "
"отображаются по умолчанию (список неявных фильтров пуст)"

#: ../../whatsnew/3.7.rst:1594
msgid ""
"(Contributed by Nick Coghlan and Victor Stinner in :issue:`20361`, :issue:"
"`32043`, and :issue:`32230`.)"
msgstr ""
"(Внесено Ником Когланом и Виктором Стиннером в :issue:`20361`, :issue:"
"`32043` и :issue:`32230`.)"

#: ../../whatsnew/3.7.rst:1597
msgid ""
"Deprecation warnings are once again shown by default in single-file scripts "
"and at the interactive prompt.  See :ref:`whatsnew37-pep565` for details. "
"(Contributed by Nick Coghlan in :issue:`31975`.)"
msgstr ""
"Предупреждения об устаревании снова отображаются по умолчанию в однофайловых "
"сценариях и в интерактивной подсказке. Подробности смотрите в :ref:"
"`whatsnew37-pep565`. (Предоставлено Ником Когланом в :issue:`31975`.)"

#: ../../whatsnew/3.7.rst:1603
msgid "xml.etree"
msgstr "xml.etree"

#: ../../whatsnew/3.7.rst:1605
msgid ""
":ref:`ElementPath <elementtree-xpath>` predicates in the :meth:`find` "
"methods can now compare text of the current node with ``[. = \"text\"]``, "
"not only text in children.  Predicates also allow adding spaces for better "
"readability.  (Contributed by Stefan Behnel in :issue:`31648`.)"
msgstr ""
"Предикаты :ref:`ElementPath <elementtree-xpath>` в методах :meth:`find` "
"теперь могут сравнивать текст текущего узла с ``[. = \"text\"]``, не только "
"текст в дочерних элементах. Предикаты также позволяют добавлять пробелы для "
"лучшей читаемости. (Предоставлено Стефаном Бенелем в :issue:`31648`.)"

#: ../../whatsnew/3.7.rst:1612
msgid "xmlrpc.server"
msgstr "xmlrpc.server"

#: ../../whatsnew/3.7.rst:1614
msgid ""
":meth:`SimpleXMLRPCDispatcher.register_function <xmlrpc.server."
"SimpleXMLRPCDispatcher>` can now be used as a decorator.  (Contributed by "
"Xiang Zhang in :issue:`7769`.)"
msgstr ""
":meth:`SimpleXMLRPCDispatcher.register_function <xmlrpc.server."
"SimpleXMLRPCDispatcher>` теперь можно использовать в качестве декоратора. "
"(Предоставлено Сян Чжаном в :issue:`7769`.)"

#: ../../whatsnew/3.7.rst:1620
msgid "zipapp"
msgstr "zipapp"

#: ../../whatsnew/3.7.rst:1622
msgid ""
"Function :func:`~zipapp.create_archive` now accepts an optional *filter* "
"argument to allow the user to select which files should be included in the "
"archive.  (Contributed by Irmen de Jong in :issue:`31072`.)"
msgstr ""
"Функция :func:`~zipapp.create_archive` теперь принимает необязательный "
"аргумент *filter*, позволяющий пользователю выбирать, какие файлы следует "
"включить в архив. (Предоставлено Ирмен де Йонг в :issue:`31072`.)"

#: ../../whatsnew/3.7.rst:1626
msgid ""
"Function :func:`~zipapp.create_archive` now accepts an optional *compressed* "
"argument to generate a compressed archive.  A command line option ``--"
"compress`` has also been added to support compression. (Contributed by "
"Zhiming Wang in :issue:`31638`.)"
msgstr ""
"Функция :func:`~zipapp.create_archive` теперь принимает необязательный "
"аргумент *compressed* для создания сжатого архива. Также была добавлена ​​"
"опция командной строки ``--compress`` для поддержки сжатия. (Предоставлено "
"Чжимином Ваном в :issue:`31638`.)"

#: ../../whatsnew/3.7.rst:1633
msgid "zipfile"
msgstr "zip-файл"

#: ../../whatsnew/3.7.rst:1635
msgid ""
":class:`~zipfile.ZipFile` now accepts the new *compresslevel* parameter to "
"control the compression level. (Contributed by Bo Bayles in :issue:`21417`.)"
msgstr ""
":class:`~zipfile.ZipFile` теперь принимает новый параметр *compresslevel* "
"для управления уровнем сжатия. (Предоставлено Бо Бейлсом в :issue:`21417`.)"

#: ../../whatsnew/3.7.rst:1639
msgid ""
"Subdirectories in archives created by ``ZipFile`` are now stored in "
"alphabetical order. (Contributed by Bernhard M. Wiedemann in :issue:`30693`.)"
msgstr ""
"Подкаталоги в архивах, созданных с помощью ``ZipFile``, теперь хранятся в "
"алфавитном порядке. (Предоставлено Бернхардом М. Видеманном в :issue:"
"`30693`.)"

#: ../../whatsnew/3.7.rst:1645
msgid "C API Changes"
msgstr "Изменения в C API"

#: ../../whatsnew/3.7.rst:1647
msgid ""
"A new API for thread-local storage has been implemented.  See :ref:"
"`whatsnew37-pep539` for an overview and :ref:`thread-specific-storage-api` "
"for a complete reference. (Contributed by Masayuki Yamamoto in :issue:"
"`25658`.)"
msgstr ""
"Реализован новый API для локального хранилища потоков. См. :ref:`whatsnew37-"
"pep539` для обзора и :ref:`thread-special-storage-api` для получения полной "
"информации. (Предоставлено Масаюки Ямамото в :issue:`25658`.)"

#: ../../whatsnew/3.7.rst:1652
msgid ""
"The new :ref:`context variables <whatsnew37-pep567>` functionality exposes a "
"number of :ref:`new C APIs <contextvarsobjects>`."
msgstr ""
"Новая :ref:`функциональность контекстных переменных <whatsnew37-pep567>` "
"предоставляет ряд :ref:`новых API C <contextvarsobjects>`."

#: ../../whatsnew/3.7.rst:1655
msgid ""
"The new :c:func:`PyImport_GetModule` function returns the previously "
"imported module with the given name. (Contributed by Eric Snow in :issue:"
"`28411`.)"
msgstr ""
"Новая функция :c:func:`PyImport_GetModule` возвращает ранее импортированный "
"модуль с заданным именем. (Предоставлено Эриком Сноу в :issue:`28411`.)"

#: ../../whatsnew/3.7.rst:1659
msgid ""
"The new :c:macro:`Py_RETURN_RICHCOMPARE` macro eases writing rich comparison "
"functions. (Contributed by Petr Victorin in :issue:`23699`.)"
msgstr ""
"Новый макрос :c:macro:`Py_RETURN_RICHCOMPARE` упрощает написание расширенных "
"функций сравнения. (Предоставлено Петром Викторином в :issue:`23699`.)"

#: ../../whatsnew/3.7.rst:1663
msgid ""
"The new :c:macro:`Py_UNREACHABLE` macro can be used to mark unreachable code "
"paths. (Contributed by Barry Warsaw in :issue:`31338`.)"
msgstr ""
"Новый макрос :c:macro:`Py_UNREACHABLE` можно использовать для обозначения "
"недоступных путей кода. (Предоставлено Барри Варшавой в :issue:`31338`.)"

#: ../../whatsnew/3.7.rst:1667
msgid ""
"The :mod:`tracemalloc` now exposes a C API through the new :c:func:"
"`PyTraceMalloc_Track` and :c:func:`PyTraceMalloc_Untrack` functions. "
"(Contributed by Victor Stinner in :issue:`30054`.)"
msgstr ""
":mod:`tracemalloc` теперь предоставляет C API через новые функции :c:func:"
"`PyTraceMalloc_Track` и :c:func:`PyTraceMalloc_Untrack`. (Предоставлено "
"Виктором Стиннером в :issue:`30054`.)"

#: ../../whatsnew/3.7.rst:1672
msgid ""
"The new :c:func:`import__find__load__start` and :c:func:"
"`import__find__load__done` static markers can be used to trace module "
"imports. (Contributed by Christian Heimes in :issue:`31574`.)"
msgstr ""
"Новые статические маркеры :c:func:`import__find__load__start` и :c:func:"
"`import__find__load__done` можно использовать для отслеживания импорта "
"модулей. (Предоставлено Кристианом Хаймсом в :issue:`31574`.)"

#: ../../whatsnew/3.7.rst:1677
msgid ""
"The fields :c:member:`name` and :c:member:`doc` of structures :c:type:"
"`PyMemberDef`, :c:type:`PyGetSetDef`, :c:type:`PyStructSequence_Field`, :c:"
"type:`PyStructSequence_Desc`, and :c:type:`wrapperbase` are now of type "
"``const char *`` rather of ``char *``.  (Contributed by Serhiy Storchaka in :"
"issue:`28761`.)"
msgstr ""

#: ../../whatsnew/3.7.rst:1683
msgid ""
"The result of :c:func:`PyUnicode_AsUTF8AndSize` and :c:func:"
"`PyUnicode_AsUTF8` is now of type ``const char *`` rather of ``char *``. "
"(Contributed by Serhiy Storchaka in :issue:`28769`.)"
msgstr ""
"Результат :c:func:`PyUnicode_AsUTF8AndSize` и :c:func:`PyUnicode_AsUTF8` "
"теперь имеет тип ``const char *``, а не ``char *``. (Предоставлено Сергеем "
"Сторчакой в ​​:issue:`28769`.)"

#: ../../whatsnew/3.7.rst:1687
msgid ""
"The result of :c:func:`PyMapping_Keys`, :c:func:`PyMapping_Values` and :c:"
"func:`PyMapping_Items` is now always a list, rather than a list or a tuple. "
"(Contributed by Oren Milman in :issue:`28280`.)"
msgstr ""
"Результатом :c:func:`PyMapping_Keys`, :c:func:`PyMapping_Values` и :c:func:"
"`PyMapping_Items` теперь всегда является список, а не список или кортеж. "
"(Предоставлено Ореном Милманом в :issue:`28280`.)"

#: ../../whatsnew/3.7.rst:1691
msgid ""
"Added functions :c:func:`PySlice_Unpack` and :c:func:"
"`PySlice_AdjustIndices`. (Contributed by Serhiy Storchaka in :issue:`27867`.)"
msgstr ""
"Добавлены функции :c:func:`PySlice_Unpack` и :c:func:"
"`PySlice_AdjustIndices`. (Предоставлено Сергеем Сторчакой в ​​:issue:`27867`.)"

#: ../../whatsnew/3.7.rst:1694
msgid ""
":c:func:`PyOS_AfterFork` is deprecated in favour of the new functions :c:"
"func:`PyOS_BeforeFork`, :c:func:`PyOS_AfterFork_Parent` and :c:func:"
"`PyOS_AfterFork_Child`.  (Contributed by Antoine Pitrou in :issue:`16500`.)"
msgstr ""
":c:func:`PyOS_AfterFork` устарел в пользу новых функций :c:func:"
"`PyOS_BeforeFork`, :c:func:`PyOS_AfterFork_Parent` и :c:func:"
"`PyOS_AfterFork_Child`. (Предоставлено Антуаном Питру в :issue:`16500`.)"

#: ../../whatsnew/3.7.rst:1699
msgid ""
"The ``PyExc_RecursionErrorInst`` singleton that was part of the public API "
"has been removed as its members being never cleared may cause a segfault "
"during finalization of the interpreter. Contributed by Xavier de Gaye in :"
"issue:`22898` and :issue:`30697`."
msgstr ""
"Синглтон ``PyExc_RecursionErrorInst``, который был частью общедоступного "
"API, был удален, поскольку его члены, которые никогда не очищаются, могут "
"вызвать ошибку сегмента во время завершения интерпретатора. Предоставлено "
"Ксавье де Гайе в :issue:`22898` и :issue:`30697`."

#: ../../whatsnew/3.7.rst:1704
msgid ""
"Added C API support for timezones with timezone constructors :c:func:"
"`PyTimeZone_FromOffset` and :c:func:`PyTimeZone_FromOffsetAndName`, and "
"access to the UTC singleton with :c:data:`PyDateTime_TimeZone_UTC`. "
"Contributed by Paul Ganssle in :issue:`10381`."
msgstr ""
"Добавлена ​​поддержка C API для часовых поясов с помощью конструкторов часовых "
"поясов :c:func:`PyTimeZone_FromOffset` и :c:func:"
"`PyTimeZone_FromOffsetAndName`, а также доступ к синглтону UTC с помощью :c:"
"data:`PyDateTime_TimeZone_UTC`. Предоставлено Полом Ганссле в :issue:`10381`."

#: ../../whatsnew/3.7.rst:1709
msgid ""
"The type of results of :c:func:`PyThread_start_new_thread` and :c:func:"
"`PyThread_get_thread_ident`, and the *id* parameter of :c:func:"
"`PyThreadState_SetAsyncExc` changed from :c:expr:`long` to :c:expr:`unsigned "
"long`. (Contributed by Serhiy Storchaka in :issue:`6532`.)"
msgstr ""
"Тип результатов :c:func:`PyThread_start_new_thread` и :c:func:"
"`PyThread_get_thread_ident`, а также параметр *id* :c:func:"
"`PyThreadState_SetAsyncExc` изменился с :c:expr:`long` на : c:expr:`unsigned "
"long`. (Предоставлено Сергеем Сторчакой в ​​:issue:`6532`.)"

#: ../../whatsnew/3.7.rst:1715
msgid ""
":c:func:`PyUnicode_AsWideCharString` now raises a :exc:`ValueError` if the "
"second argument is ``NULL`` and the :c:expr:`wchar_t*` string contains null "
"characters.  (Contributed by Serhiy Storchaka in :issue:`30708`.)"
msgstr ""
":c:func:`PyUnicode_AsWideCharString` теперь вызывает :exc:`ValueError`, если "
"второй аргумент равен ``NULL`` и строка :c:expr:`wchar_t*` содержит нулевые "
"символы. (Предоставлено Сергеем Сторчакой в ​​:issue:`30708`.)"

#: ../../whatsnew/3.7.rst:1719
msgid ""
"Changes to the startup sequence and the management of dynamic memory "
"allocators mean that the long documented requirement to call :c:func:"
"`Py_Initialize` before calling most C API functions is now relied on more "
"heavily, and failing to abide by it may lead to segfaults in embedding "
"applications. See the :ref:`porting-to-python-37` section in this document "
"and the :ref:`pre-init-safe` section in the C API documentation for more "
"details."
msgstr ""
"Изменения в последовательности запуска и управлении распределителями "
"динамической памяти означают, что давно задокументированное требование "
"вызывать :c:func:`Py_Initialize` перед вызовом большинства функций C API "
"теперь применяется в большей степени, и несоблюдение этого требования может "
"привести к segfaults при внедрении приложений. Дополнительные сведения см. в "
"разделе :ref:`porting-to-python-37` в этом документе и в разделе :ref:`pre-"
"init-safe` в документации по C API."

#: ../../whatsnew/3.7.rst:1727
msgid ""
"The new :c:func:`PyInterpreterState_GetID` returns the unique ID for a given "
"interpreter. (Contributed by Eric Snow in :issue:`29102`.)"
msgstr ""
"Новый :c:func:`PyInterpreterState_GetID` возвращает уникальный идентификатор "
"для данного интерпретатора. (Предоставлено Эриком Сноу в :issue:`29102`.)"

#: ../../whatsnew/3.7.rst:1731
msgid ""
":c:func:`Py_DecodeLocale`, :c:func:`Py_EncodeLocale` now use the UTF-8 "
"encoding when the :ref:`UTF-8 mode <whatsnew37-pep540>` is enabled. "
"(Contributed by Victor Stinner in :issue:`29240`.)"
msgstr ""
":c:func:`Py_DecodeLocale`, :c:func:`Py_EncodeLocale` теперь используют "
"кодировку UTF-8, когда включен режим :ref:`UTF-8 <whatsnew37-pep540>`. "
"(Предоставлено Виктором Стиннером в :issue:`29240`.)"

#: ../../whatsnew/3.7.rst:1735
msgid ""
":c:func:`PyUnicode_DecodeLocaleAndSize` and :c:func:`PyUnicode_EncodeLocale` "
"now use the current locale encoding for ``surrogateescape`` error handler. "
"(Contributed by Victor Stinner in :issue:`29240`.)"
msgstr ""
":c:func:`PyUnicode_DecodeLocaleAndSize` и :c:func:`PyUnicode_EncodeLocale` "
"теперь используют текущую кодировку локали для обработчика ошибок "
"``surrogateescape``. (Предоставлено Виктором Стиннером в :issue:`29240`.)"

#: ../../whatsnew/3.7.rst:1739
msgid ""
"The *start* and *end* parameters of :c:func:`PyUnicode_FindChar` are now "
"adjusted to behave like string slices. (Contributed by Xiang Zhang in :issue:"
"`28822`.)"
msgstr ""
"Параметры *start* и *end* :c:func:`PyUnicode_FindChar` теперь настроены так, "
"чтобы вести себя как фрагменты строки. (Предоставлено Сян Чжаном в :issue:"
"`28822`.)"

#: ../../whatsnew/3.7.rst:1745
msgid "Build Changes"
msgstr "Изменения сборки"

#: ../../whatsnew/3.7.rst:1747
msgid ""
"Support for building ``--without-threads`` has been removed.  The :mod:"
"`threading` module is now always available. (Contributed by Antoine Pitrou "
"in :issue:`31370`.)."
msgstr ""
"Поддержка построения ``--without-threads`` была удалена. Модуль :mod:"
"`threading` теперь всегда доступен. (Предоставлено Антуаном Питру в :issue:"
"`31370`.)."

#: ../../whatsnew/3.7.rst:1751
msgid ""
"A full copy of libffi is no longer bundled for use when building the :mod:"
"`_ctypes <ctypes>` module on non-OSX UNIX platforms.  An installed copy of "
"libffi is now required when building ``_ctypes`` on such platforms. "
"(Contributed by Zachary Ware in :issue:`27979`.)"
msgstr ""
"Полная копия libffi больше не поставляется для использования при сборке "
"модуля :mod:`_ctypes <ctypes>` на платформах UNIX, отличных от OSX. "
"Установленная копия libffi теперь требуется при сборке ``_ctypes`` на таких "
"платформах. (Предоставлено Закари Уэром в :issue:`27979`.)"

#: ../../whatsnew/3.7.rst:1756
msgid ""
"The Windows build process no longer depends on Subversion to pull in "
"external sources, a Python script is used to download zipfiles from GitHub "
"instead. If Python 3.6 is not found on the system (via ``py -3.6``), NuGet "
"is used to download a copy of 32-bit Python for this purpose.  (Contributed "
"by Zachary Ware in :issue:`30450`.)"
msgstr ""
"Процесс сборки Windows больше не зависит от Subversion для получения внешних "
"источников, вместо этого для загрузки zip-файлов с GitHub используется "
"сценарий Python. Если Python 3.6 не найден в системе (через ``py -3.6``), "
"для этой цели используется NuGet для загрузки копии 32-битного Python. "
"(Предоставлено Закари Уэром в :issue:`30450`.)"

#: ../../whatsnew/3.7.rst:1762
msgid ""
"The :mod:`ssl` module requires OpenSSL 1.0.2 or 1.1 compatible libssl. "
"OpenSSL 1.0.1 has reached end of lifetime on 2016-12-31 and is no longer "
"supported. LibreSSL is temporarily not supported as well. LibreSSL releases "
"up to version 2.6.4 are missing required OpenSSL 1.0.2 APIs."
msgstr ""
"Для модуля :mod:`ssl` требуется библиотека libssl, совместимая с OpenSSL "
"1.0.2 или 1.1. Срок службы OpenSSL 1.0.1 истек 31 декабря 2016 г., и он "
"больше не поддерживается. LibreSSL также временно не поддерживается. В "
"выпусках LibreSSL до версии 2.6.4 отсутствуют необходимые API OpenSSL 1.0.2."

#: ../../whatsnew/3.7.rst:1771
msgid "Optimizations"
msgstr "Оптимизации"

#: ../../whatsnew/3.7.rst:1773
msgid ""
"The overhead of calling many methods of various standard library classes "
"implemented in C has been significantly reduced by porting more code to use "
"the ``METH_FASTCALL`` convention. (Contributed by Victor Stinner in :issue:"
"`29300`, :issue:`29507`, :issue:`29452`, and :issue:`29286`.)"
msgstr ""
"Накладные расходы на вызов многих методов различных классов стандартной "
"библиотеки, реализованных на C, были значительно уменьшены за счет переноса "
"большего количества кода для использования соглашения METH_FASTCALL. "
"(Внесено Виктором Стиннером в :issue:`29300`, :issue:`29507`, :issue:`29452` "
"и :issue:`29286`.)"

#: ../../whatsnew/3.7.rst:1779
msgid ""
"Various optimizations have reduced Python startup time by 10% on Linux and "
"up to 30% on macOS. (Contributed by Victor Stinner, INADA Naoki in :issue:"
"`29585`, and Ivan Levkivskyi in :issue:`31333`.)"
msgstr ""
"Различные оптимизации сократили время запуска Python на 10 % в Linux и до "
"30 % в macOS. (Предоставлено Виктором Стиннером, INADA Наоки в :issue:"
"`29585` и Иваном Левковским в :issue:`31333`.)"

#: ../../whatsnew/3.7.rst:1784
msgid ""
"Method calls are now up to 20% faster due to the bytecode changes which "
"avoid creating bound method instances. (Contributed by Yury Selivanov and "
"INADA Naoki in :issue:`26110`.)"
msgstr ""
"Вызовы методов теперь выполняются на 20 % быстрее благодаря изменениям байт-"
"кода, которые позволяют избежать создания связанных экземпляров метода. "
"(Предоставлено Юрием Селивановым и INADA Naoki в :issue:`26110`.)"

#: ../../whatsnew/3.7.rst:1790
msgid ""
"The :mod:`asyncio` module received a number of notable optimizations for "
"commonly used functions:"
msgstr ""
"Модуль :mod:`asyncio` получил ряд заметных оптимизаций для часто "
"используемых функций:"

#: ../../whatsnew/3.7.rst:1793
msgid ""
"The :func:`asyncio.get_event_loop` function has been reimplemented in C to "
"make it up to 15 times faster. (Contributed by Yury Selivanov in :issue:"
"`32296`.)"
msgstr ""
"Функция :func:`asyncio.get_event_loop` была переопределена в C, чтобы "
"сделать ее до 15 раз быстрее. (Добавлен Юрием Селивановым в :issue:`32296`.)"

#: ../../whatsnew/3.7.rst:1797
msgid ""
":class:`asyncio.Future` callback management has been optimized. (Contributed "
"by Yury Selivanov in :issue:`32348`.)"
msgstr ""
":class:`asyncio.Future` управление обратными вызовами было оптимизировано. "
"(Автор: Юрий Селиванов в :issue:`32348`.)"

#: ../../whatsnew/3.7.rst:1800
msgid ""
":func:`asyncio.gather` is now up to 15% faster. (Contributed by Yury "
"Selivanov in :issue:`32355`.)"
msgstr ""
":func:`asyncio.gather` теперь работает до 15% быстрее. (Добавлен Юрием "
"Селивановым в :issue:`32355`.)"

#: ../../whatsnew/3.7.rst:1803
msgid ""
":func:`asyncio.sleep` is now up to 2 times faster when the *delay* argument "
"is zero or negative. (Contributed by Andrew Svetlov in :issue:`32351`.)"
msgstr ""
":func:`asyncio.sleep` теперь работает до 2 раз быстрее, если аргумент "
"*delay* равен нулю или имеет отрицательное значение. (Предоставлено Андреем "
"Светловым в :issue:`32351`.)"

#: ../../whatsnew/3.7.rst:1807
msgid ""
"The performance overhead of asyncio debug mode has been reduced. "
"(Contributed by Antoine Pitrou in :issue:`31970`.)"
msgstr ""
"Накладные расходы на производительность в режиме отладки asyncio были "
"уменьшены. (Предоставлено Антуаном Питру в :issue:`31970`.)"

#: ../../whatsnew/3.7.rst:1810
msgid ""
"As a result of :ref:`PEP 560 work <whatsnew37-pep560>`, the import time of :"
"mod:`typing` has been reduced by a factor of 7, and many typing operations "
"are now faster. (Contributed by Ivan Levkivskyi in :issue:`32226`.)"
msgstr ""
"В результате работы :ref:`PEP 560 <whatsnew37-pep560>` время импорта :mod:"
"`typing` сократилось в 7 раз, и многие операции ввода теперь выполняются "
"быстрее. (Предоставлено Иваном Левковским в :issue:`32226`.)"

#: ../../whatsnew/3.7.rst:1815
msgid ""
":func:`sorted` and :meth:`list.sort` have been optimized for common cases to "
"be up to 40-75% faster. (Contributed by Elliot Gorokhovsky in :issue:"
"`28685`.)"
msgstr ""
":func:`sorted` и :meth:`list.sort` оптимизированы для обычных случаев и "
"теперь работают на 40–75 % быстрее. (Предоставлено Эллиотом Гороховским в :"
"issue:`28685`.)"

#: ../../whatsnew/3.7.rst:1819
msgid ""
":meth:`dict.copy` is now up to 5.5 times faster. (Contributed by Yury "
"Selivanov in :issue:`31179`.)"
msgstr ""
":meth:`dict.copy` теперь работает до 5,5 раз быстрее. (Добавлен Юрием "
"Селивановым в :issue:`31179`.)"

#: ../../whatsnew/3.7.rst:1822
msgid ""
":func:`hasattr` and :func:`getattr` are now about 4 times faster when *name* "
"is not found and *obj* does not override :meth:`object.__getattr__` or :meth:"
"`object.__getattribute__`. (Contributed by INADA Naoki in :issue:`32544`.)"
msgstr ""
":func:`hasattr` и :func:`getattr` теперь работают примерно в 4 раза быстрее, "
"если *name* не найдено и *obj* не переопределяет :meth:`object.__getattr__` "
"или :meth:`object.__getattribute__` . (Предоставлено ИНАДА Наоки в :issue:"
"`32544`.)"

#: ../../whatsnew/3.7.rst:1827
msgid ""
"Searching for certain Unicode characters (like Ukrainian capital \"Є\") in a "
"string was up to 25 times slower than searching for other characters. It is "
"now only 3 times slower in the worst case. (Contributed by Serhiy Storchaka "
"in :issue:`24821`.)"
msgstr ""
"Поиск определенных символов Юникода (например, украинской заглавной буквы "
"«Є») в строке был до 25 раз медленнее, чем поиск других символов. Теперь в "
"худшем случае он медленнее всего в 3 раза. (Предоставлено Сергеем Сторчакой "
"в ​​:issue:`24821`.)"

#: ../../whatsnew/3.7.rst:1832
msgid ""
"The :func:`collections.namedtuple` factory has been reimplemented to make "
"the creation of named tuples 4 to 6 times faster. (Contributed by Jelle "
"Zijlstra with further improvements by INADA Naoki, Serhiy Storchaka, and "
"Raymond Hettinger in :issue:`28638`.)"
msgstr ""
"Фабрика :func:`collections.namedtuple` была переопределена, чтобы ускорить "
"создание именованных кортежей в 4–6 раз. (Внесено Джелле Зийлстра, "
"дальнейшие улучшения внесены Инадой Наоки, Сергеем Сторчакой и Раймондом "
"Хеттингером в :issue:`28638`.)"

#: ../../whatsnew/3.7.rst:1837
msgid ""
":meth:`date.fromordinal` and :meth:`date.fromtimestamp` are now up to 30% "
"faster in the common case. (Contributed by Paul Ganssle in :issue:`32403`.)"
msgstr ""
":meth:`date.fromordinal` и :meth:`date.fromtimestamp` теперь в обычном "
"случае работают до 30 % быстрее. (Предоставлено Полом Гансслом в :issue:"
"`32403`.)"

#: ../../whatsnew/3.7.rst:1841
msgid ""
"The :func:`os.fwalk` function is now up to 2 times faster thanks to the use "
"of :func:`os.scandir`. (Contributed by Serhiy Storchaka in :issue:`25996`.)"
msgstr ""
"Функция :func:`os.fwalk` теперь работает до 2 раз быстрее благодаря "
"использованию :func:`os.scandir`. (Добавлен Сергеем Сторчакой в ​​:issue:"
"`25996`.)"

#: ../../whatsnew/3.7.rst:1845
msgid ""
"The speed of the :func:`shutil.rmtree` function has been improved by 20--40% "
"thanks to the use of the :func:`os.scandir` function. (Contributed by Serhiy "
"Storchaka in :issue:`28564`.)"
msgstr ""
"Скорость работы функции :func:`shutil.rmtree` увеличена на 20--40% благодаря "
"использованию функции :func:`os.scandir`. (Предоставлено Сергеем Сторчакой в ​​"
":issue:`28564`.)"

#: ../../whatsnew/3.7.rst:1849
msgid ""
"Optimized case-insensitive matching and searching of :mod:`regular "
"expressions <re>`.  Searching some patterns can now be up to 20 times "
"faster. (Contributed by Serhiy Storchaka in :issue:`30285`.)"
msgstr ""
"Оптимизировано сопоставление и поиск по :mod:`регулярным выражениям <re>` "
"без учета регистра. Поиск некоторых шаблонов теперь может выполняться до 20 "
"раз быстрее. (Предоставлено Сергеем Сторчакой в ​​:issue:`30285`.)"

#: ../../whatsnew/3.7.rst:1853
msgid ""
":func:`re.compile` now converts ``flags`` parameter to int object if it is "
"``RegexFlag``.  It is now as fast as Python 3.5, and faster than Python 3.6 "
"by about 10% depending on the pattern. (Contributed by INADA Naoki in :issue:"
"`31671`.)"
msgstr ""
":func:`re.compile` теперь преобразует параметр ``flags`` в объект int, если "
"это ``RegexFlag``. Теперь он так же быстр, как Python 3.5, и быстрее Python "
"3.6 примерно на 10 % в зависимости от шаблона. (Предоставлено ИНАДА Наоки в :"
"issue:`31671`.)"

#: ../../whatsnew/3.7.rst:1858
msgid ""
"The :meth:`~selectors.BaseSelector.modify` methods of classes :class:"
"`selectors.EpollSelector`, :class:`selectors.PollSelector` and :class:"
"`selectors.DevpollSelector` may be around 10% faster under heavy loads.  "
"(Contributed by Giampaolo Rodola' in :issue:`30014`)"
msgstr ""
"Методы :meth:`~selectors.BaseSelector.modify` классов :class:`selectors."
"EpollSelector`, :class:`selectors.PollSelector` и :class:`selectors."
"DevpollSelector` могут работать примерно на 10 % быстрее при больших "
"нагрузках. . (Предоставлено Джампаоло Родолой в :issue:`30014`)"

#: ../../whatsnew/3.7.rst:1863
msgid ""
"Constant folding has been moved from the peephole optimizer to the new AST "
"optimizer, which is able perform optimizations more consistently. "
"(Contributed by Eugene Toder and INADA Naoki in :issue:`29469` and :issue:"
"`11549`.)"
msgstr ""
"Свертывание констант было перенесено из оптимизатора глазка в новый "
"оптимизатор AST, который может выполнять оптимизацию более последовательно. "
"(Предоставлено Юджином Тодером и INADA Наоки в :issue:`29469` и :issue:"
"`11549`.)"

#: ../../whatsnew/3.7.rst:1868
msgid ""
"Most functions and methods in :mod:`abc` have been rewritten in C. This "
"makes creation of abstract base classes, and calling :func:`isinstance` and :"
"func:`issubclass` on them 1.5x faster.  This also reduces Python start-up "
"time by up to 10%. (Contributed by Ivan Levkivskyi and INADA Naoki in :issue:"
"`31333`)"
msgstr ""
"Большинство функций и методов в :mod:`abc` были переписаны на C. Это делает "
"создание абстрактных базовых классов и вызов :func:`isinstance` и :func:"
"`issubclass` для них в 1,5 раза быстрее. Это также сокращает время запуска "
"Python почти на 10%. (Предоставлено Иваном Левковским и ИНАДА Наоки в :issue:"
"`31333`)"

#: ../../whatsnew/3.7.rst:1874
msgid ""
"Significant speed improvements to alternate constructors for :class:"
"`datetime.date` and :class:`datetime.datetime` by using fast-path "
"constructors when not constructing subclasses. (Contributed by Paul Ganssle "
"in :issue:`32403`)"
msgstr ""
"Значительное повышение скорости альтернативных конструкторов для :class:"
"`datetime.date` и :class:`datetime.datetime` за счет использования "
"конструкторов быстрого пути, когда не создаются подклассы. (Предоставлено "
"Полом Гансслом в :issue:`32403`)"

#: ../../whatsnew/3.7.rst:1879
msgid ""
"The speed of comparison of :class:`array.array` instances has been improved "
"considerably in certain cases.  It is now from 10x to 70x faster when "
"comparing arrays holding values of the same integer type. (Contributed by "
"Adrian Wielgosik in :issue:`24700`.)"
msgstr ""
"Скорость сравнения экземпляров :class:`array.array` в некоторых случаях "
"значительно улучшена. Теперь сравнение массивов, содержащих значения одного "
"целочисленного типа, происходит в 10–70 раз быстрее. (Предоставлено Адрианом "
"Вельгосиком в :issue:`24700`.)"

#: ../../whatsnew/3.7.rst:1884
msgid ""
"The :func:`math.erf` and :func:`math.erfc` functions now use the (faster) C "
"library implementation on most platforms. (Contributed by Serhiy Storchaka "
"in :issue:`26121`.)"
msgstr ""
"Функции :func:`math.erf` и :func:`math.erfc` теперь используют (более "
"быструю) реализацию библиотеки C на большинстве платформ. (Предоставлено "
"Сергеем Сторчакой в ​​:issue:`26121`.)"

#: ../../whatsnew/3.7.rst:1890
msgid "Other CPython Implementation Changes"
msgstr "Другие изменения реализации CPython"

#: ../../whatsnew/3.7.rst:1892
msgid ""
"Trace hooks may now opt out of receiving the ``line`` and opt into receiving "
"the ``opcode`` events from the interpreter by setting the corresponding new "
"``f_trace_lines`` and ``f_trace_opcodes`` attributes on the frame being "
"traced. (Contributed by Nick Coghlan in :issue:`31344`.)"
msgstr ""

#: ../../whatsnew/3.7.rst:1897
msgid ""
"Fixed some consistency problems with namespace package module attributes. "
"Namespace module objects now have an ``__file__`` that is set to ``None`` "
"(previously unset), and their ``__spec__.origin`` is also set to ``None`` "
"(previously the string ``\"namespace\"``).  See :issue:`32305`.  Also, the "
"namespace module object's ``__spec__.loader`` is set to the same value as "
"``__loader__`` (previously, the former was set to ``None``).  See :issue:"
"`32303`."
msgstr ""
"Исправлены некоторые проблемы согласованности атрибутов модуля пакета "
"пространства имен. Объекты модуля пространства имен теперь имеют "
"``__file__``, для которого установлено значение ``None`` (ранее не было "
"установлено), а их ``__spec__.origin`` также установлено в ``None`` (ранее "
"строка ``\" пространство имен\"``). См. :issue:`32305`. Кроме того, для "
"объекта модуля пространства имен ``__spec__.loader`` установлено то же "
"значение, что и для ``__loader__`` (ранее для первого было установлено "
"значение ``None``). См. :issue:`32303`."

#: ../../whatsnew/3.7.rst:1905
msgid ""
"The :func:`locals` dictionary now displays in the lexical order that "
"variables were defined.  Previously, the order was undefined. (Contributed "
"by Raymond Hettinger in :issue:`32690`.)"
msgstr ""
"Словарь :func:`locals` теперь отображается в том лексическом порядке, в "
"котором были определены переменные. Раньше порядок был неопределенным. "
"(Предоставлено Рэймондом Хеттингером в :issue:`32690`.)"

#: ../../whatsnew/3.7.rst:1909
msgid ""
"The :mod:`distutils` ``upload`` command no longer tries to change CR end-of-"
"line characters to CRLF.  This fixes a corruption issue with sdists that "
"ended with a byte equivalent to CR. (Contributed by Bo Bayles in :issue:"
"`32304`.)"
msgstr ""

#: ../../whatsnew/3.7.rst:1916
msgid "Deprecated Python Behavior"
msgstr "Устаревшее поведение Python"

#: ../../whatsnew/3.7.rst:1918
msgid ""
"Yield expressions (both ``yield`` and ``yield from`` clauses) are now "
"deprecated in comprehensions and generator expressions (aside from the "
"iterable expression in the leftmost :keyword:`!for` clause). This ensures "
"that comprehensions always immediately return a container of the appropriate "
"type (rather than potentially returning a :term:`generator iterator` "
"object), while generator expressions won't attempt to interleave their "
"implicit output with the output from any explicit yield expressions.  In "
"Python 3.7, such expressions emit :exc:`DeprecationWarning` when compiled, "
"in Python 3.8 this will be a :exc:`SyntaxError`. (Contributed by Serhiy "
"Storchaka in :issue:`10544`.)"
msgstr ""
"Выражения доходности (как предложения ``yield``, так и ``yield from``) "
"теперь считаются устаревшими в генераторных выражениях и генераторах (за "
"исключением итерируемого выражения в крайнем левом предложении :keyword:`!"
"for`). Это гарантирует, что понимания всегда немедленно возвращают контейнер "
"соответствующего типа (вместо того, чтобы потенциально возвращать объект :"
"term:`generator iterator`), в то время как выражения генератора не будут "
"пытаться чередовать свой неявный вывод с выводом любых явных выражений "
"доходности. В Python 3.7 такие выражения при компиляции выдают :exc:"
"`DeprecationWarning`, в Python 3.8 это будет :exc:`SyntaxError`. "
"(Предоставлено Сергеем Сторчакой в ​​:issue:`10544`.)"

#: ../../whatsnew/3.7.rst:1929
msgid ""
"Returning a subclass of :class:`complex` from :meth:`object.__complex__` is "
"deprecated and will be an error in future Python versions.  This makes "
"``__complex__()`` consistent with :meth:`object.__int__` and :meth:`object."
"__float__`. (Contributed by Serhiy Storchaka in :issue:`28894`.)"
msgstr ""
"Возврат подкласса :class:`complex` из :meth:`object.__complex__` устарел и "
"будет ошибкой в ​​будущих версиях Python. Это делает ``__complex__()`` "
"совместимым с :meth:`object.__int__` и :meth:`object.__float__`. "
"(Предоставлено Сергеем Сторчакой в ​​:issue:`28894`.)"

#: ../../whatsnew/3.7.rst:1938
msgid "Deprecated Python modules, functions and methods"
msgstr "Устаревшие модули, функции и методы Python"

#: ../../whatsnew/3.7.rst:1941
msgid "aifc"
msgstr "aifc"

#: ../../whatsnew/3.7.rst:1943
msgid ""
":func:`aifc.openfp` has been deprecated and will be removed in Python 3.9. "
"Use :func:`aifc.open` instead. (Contributed by Brian Curtin in :issue:"
"`31985`.)"
msgstr ""
":func:`aifc.openfp` устарел и будет удален в Python 3.9. Вместо этого "
"используйте :func:`aifc.open`. (Предоставлено Брайаном Кертином в :issue:"
"`31985`.)"

#: ../../whatsnew/3.7.rst:1953
msgid ""
"Support for directly ``await``-ing instances of :class:`asyncio.Lock` and "
"other asyncio synchronization primitives has been deprecated.  An "
"asynchronous context manager must be used in order to acquire and release "
"the synchronization resource. (Contributed by Andrew Svetlov in :issue:"
"`32253`.)"
msgstr ""
"Поддержка прямого ожидания экземпляров :class:`asyncio.Lock` и других "
"примитивов синхронизации asyncio устарела. Для получения и освобождения "
"ресурса синхронизации необходимо использовать асинхронный менеджер "
"контекста. (Предоставлено Андреем Светловым в :issue:`32253`.)"

#: ../../whatsnew/3.7.rst:1959
msgid ""
"The :meth:`asyncio.Task.current_task` and :meth:`asyncio.Task.all_tasks` "
"methods have been deprecated. (Contributed by Andrew Svetlov in :issue:"
"`32250`.)"
msgstr ""

#: ../../whatsnew/3.7.rst:1967
msgid ""
"In Python 3.8, the abstract base classes in :mod:`collections.abc` will no "
"longer be exposed in the regular :mod:`collections` module.  This will help "
"create a clearer distinction between the concrete classes and the abstract "
"base classes. (Contributed by Serhiy Storchaka in :issue:`25988`.)"
msgstr ""
"В Python 3.8 абстрактные базовые классы в :mod:`collections.abc` больше не "
"будут отображаться в обычном модуле :mod:`collections`. Это поможет создать "
"более четкое различие между конкретными классами и абстрактными базовыми "
"классами. (Предоставлено Сергеем Сторчакой в ​​:issue:`25988`.)"

#: ../../whatsnew/3.7.rst:1977
msgid ""
":mod:`dbm.dumb` now supports reading read-only files and no longer writes "
"the index file when it is not changed.  A deprecation warning is now emitted "
"if the index file is missing and recreated in the ``'r'`` and ``'w'`` modes "
"(this will be an error in future Python releases). (Contributed by Serhiy "
"Storchaka in :issue:`28847`.)"
msgstr ""
":mod:`dbm.dumb` теперь поддерживает чтение файлов, доступных только для "
"чтения, и больше не записывает индексный файл, если он не изменен. "
"Предупреждение об устаревании теперь выдается, если индексный файл "
"отсутствует и создается заново в режимах ``'r'`` и ``'w'`` (в будущих "
"выпусках Python это будет ошибкой). (Предоставлено Сергеем Сторчакой в ​​:"
"issue:`28847`.)"

#: ../../whatsnew/3.7.rst:1987
msgid ""
"In Python 3.8, attempting to check for non-Enum objects in :class:`Enum` "
"classes will raise a :exc:`TypeError` (e.g. ``1 in Color``); similarly, "
"attempting to check for non-Flag objects in a :class:`Flag` member will "
"raise :exc:`TypeError` (e.g. ``1 in Perm.RW``); currently, both operations "
"return :const:`False` instead. (Contributed by Ethan Furman in :issue:"
"`33217`.)"
msgstr ""
"В Python 3.8 попытка проверки объектов, отличных от Enum, в классах :class:"
"`Enum` вызовет ошибку :exc:`TypeError` (например, ``1 in Color``); "
"аналогично, попытка проверить наличие объектов, не являющихся флагами, в "
"члене :class:`Flag` приведет к возникновению :exc:`TypeError` (например, ``1 "
"в Perm.RW``); в настоящее время обе операции вместо этого возвращают :const:"
"`False`. (Предоставлено Итаном Фурманом в :issue:`33217`.)"

#: ../../whatsnew/3.7.rst:1996
msgid "gettext"
msgstr "gettext"

#: ../../whatsnew/3.7.rst:1998
msgid ""
"Using non-integer value for selecting a plural form in :mod:`gettext` is now "
"deprecated.  It never correctly worked. (Contributed by Serhiy Storchaka in :"
"issue:`28692`.)"
msgstr ""
"Использование нецелого значения для выбора формы множественного числа в :mod:"
"`gettext` теперь устарело. Это никогда не работало правильно. (Предоставлено "
"Сергеем Сторчакой в ​​:issue:`28692`.)"

#: ../../whatsnew/3.7.rst:2006
msgid ""
"Methods :meth:`MetaPathFinder.find_module() <importlib.abc.MetaPathFinder."
"find_module>` (replaced by :meth:`MetaPathFinder.find_spec() <importlib.abc."
"MetaPathFinder.find_spec>`) and :meth:`PathEntryFinder.find_loader() "
"<importlib.abc.PathEntryFinder.find_loader>` (replaced by :meth:"
"`PathEntryFinder.find_spec() <importlib.abc.PathEntryFinder.find_spec>`) "
"both deprecated in Python 3.4 now emit :exc:`DeprecationWarning`. "
"(Contributed by Matthias Bussonnier in :issue:`29576`)"
msgstr ""

#: ../../whatsnew/3.7.rst:2017
msgid ""
"The :class:`importlib.abc.ResourceLoader` ABC has been deprecated in favour "
"of :class:`importlib.abc.ResourceReader`."
msgstr ""
":class:`importlib.abc.ResourceLoader` ABC устарел в пользу :class:`importlib."
"abc.ResourceReader`."

#: ../../whatsnew/3.7.rst:2024
msgid ""
":func:`locale.format` has been deprecated, use :meth:`locale.format_string` "
"instead.  (Contributed by Garvit in :issue:`10379`.)"
msgstr ""
":func:`locale.format` устарел, используйте вместо него :meth:`locale."
"format_string`. (Предоставлено Гарвитом в :issue:`10379`.)"

#: ../../whatsnew/3.7.rst:2029
msgid "macpath"
msgstr "macpath"

#: ../../whatsnew/3.7.rst:2031
msgid ""
"The :mod:`macpath` is now deprecated and will be removed in Python 3.8. "
"(Contributed by Chi Hsuan Yen in :issue:`9850`.)"
msgstr ""
":mod:`macpath` устарел и будет удален в Python 3.8. (Предоставлено Чи Сюань "
"Йеном в :issue:`9850`.)"

#: ../../whatsnew/3.7.rst:2036
msgid "threading"
msgstr "threading"

#: ../../whatsnew/3.7.rst:2038
msgid ""
":mod:`dummy_threading` and :mod:`_dummy_thread` have been deprecated.  It is "
"no longer possible to build Python with threading disabled. Use :mod:"
"`threading` instead. (Contributed by Antoine Pitrou in :issue:`31370`.)"
msgstr ""

#: ../../whatsnew/3.7.rst:2047
msgid ""
"The silent argument value truncation in :func:`socket.htons` and :func:"
"`socket.ntohs` has been deprecated.  In future versions of Python, if the "
"passed argument is larger than 16 bits, an exception will be raised. "
"(Contributed by Oren Milman in :issue:`28332`.)"
msgstr ""
"Усечение значения тихого аргумента в :func:`socket.htons` и :func:`socket."
"ntohs` устарело. В будущих версиях Python, если переданный аргумент "
"превышает 16 бит, будет возбуждено исключение. (Предоставлено Ореном "
"Милманом в :issue:`28332`.)"

#: ../../whatsnew/3.7.rst:2056
msgid ""
":func:`ssl.wrap_socket` is deprecated.  Use :meth:`ssl.SSLContext."
"wrap_socket` instead. (Contributed by Christian Heimes in :issue:`28124`.)"
msgstr ""
":func:`ssl.wrap_socket` устарел. Вместо этого используйте :meth:`ssl."
"SSLContext.wrap_socket`. (Предоставлено Кристианом Хаймсом в :issue:`28124`.)"

#: ../../whatsnew/3.7.rst:2062
msgid "sunau"
msgstr "sunau"

#: ../../whatsnew/3.7.rst:2064
msgid ""
":func:`sunau.openfp` has been deprecated and will be removed in Python 3.9. "
"Use :func:`sunau.open` instead. (Contributed by Brian Curtin in :issue:"
"`31985`.)"
msgstr ""
":func:`sunau.openfp` устарел и будет удален в Python 3.9. Вместо этого "
"используйте :func:`sunau.open`. (Предоставлено Брайаном Кертином в :issue:"
"`31985`.)"

#: ../../whatsnew/3.7.rst:2072
msgid ""
"Deprecated :func:`sys.set_coroutine_wrapper` and :func:`sys."
"get_coroutine_wrapper`."
msgstr ""
"Устарели :func:`sys.set_coroutine_wrapper` и :func:`sys."
"get_coroutine_wrapper`."

#: ../../whatsnew/3.7.rst:2075
msgid ""
"The undocumented ``sys.callstats()`` function has been deprecated and will "
"be removed in a future Python version. (Contributed by Victor Stinner in :"
"issue:`28799`.)"
msgstr ""
"Недокументированная функция ``sys.callstats()`` устарела и будет удалена в "
"будущей версии Python. (Предоставлено Виктором Стиннером в :issue:`28799`.)"

#: ../../whatsnew/3.7.rst:2081
msgid "wave"
msgstr "wave"

#: ../../whatsnew/3.7.rst:2083
msgid ""
":func:`wave.openfp` has been deprecated and will be removed in Python 3.9. "
"Use :func:`wave.open` instead. (Contributed by Brian Curtin in :issue:"
"`31985`.)"
msgstr ""
":func:`wave.openfp` устарел и будет удален в Python 3.9. Вместо этого "
"используйте :func:`wave.open`. (Предоставлено Брайаном Кертином в :issue:"
"`31985`.)"

#: ../../whatsnew/3.7.rst:2089
msgid "Deprecated functions and types of the C API"
msgstr "Устаревшие функции и типы C API"

#: ../../whatsnew/3.7.rst:2091
msgid ""
"Function :c:func:`PySlice_GetIndicesEx` is deprecated and replaced with a "
"macro if ``Py_LIMITED_API`` is not set or set to a value in the range "
"between ``0x03050400`` and ``0x03060000`` (not inclusive), or is "
"``0x03060100`` or higher.  (Contributed by Serhiy Storchaka in :issue:"
"`27867`.)"
msgstr ""
"Функция :c:func:`PySlice_GetIndicesEx` устарела и заменена макросом, если "
"``Py_LIMITED_API`` не установлен или ему присвоено значение в диапазоне от "
"``0x03050400`` до ``0x03060000`` (не включительно), или ``0x03060100`` или "
"выше. (Предоставлено Сергеем Сторчакой в ​​:issue:`27867`.)"

#: ../../whatsnew/3.7.rst:2096
msgid ""
":c:func:`PyOS_AfterFork` has been deprecated.  Use :c:func:"
"`PyOS_BeforeFork`, :c:func:`PyOS_AfterFork_Parent` or :c:func:"
"`PyOS_AfterFork_Child()` instead. (Contributed by Antoine Pitrou in :issue:"
"`16500`.)"
msgstr ""
":c:func:`PyOS_AfterFork` устарел. Вместо этого используйте :c:func:"
"`PyOS_BeforeFork`, :c:func:`PyOS_AfterFork_Parent` или :c:func:"
"`PyOS_AfterFork_Child()`. (Предоставлено Антуаном Питру в :issue:`16500`.)"

#: ../../whatsnew/3.7.rst:2104
msgid "Platform Support Removals"
msgstr "Удаление поддержки платформы"

#: ../../whatsnew/3.7.rst:2106
msgid "FreeBSD 9 and older are no longer officially supported."
msgstr "FreeBSD 9 и более ранние версии официально больше не поддерживаются."

#: ../../whatsnew/3.7.rst:2107
msgid ""
"For full Unicode support, including within extension modules, \\*nix "
"platforms are now expected to provide at least one of ``C.UTF-8`` (full "
"locale), ``C.utf8`` (full locale) or ``UTF-8`` (``LC_CTYPE``-only locale) as "
"an alternative to the legacy ``ASCII``-based ``C`` locale."
msgstr ""
"Для полной поддержки Unicode, в том числе в модулях расширения, платформы "
"\\*nix теперь должны предоставлять как минимум один из ``C.UTF-8`` (полный "
"языковой стандарт), ``C.utf8`` (полный языковой стандарт) или ``C.utf8`` "
"(полный языковой стандарт) или ``C.UTF-8`` (полный языковой стандарт) "
"`UTF-8`` (только локаль ``LC_CTYPE``) как альтернатива устаревшей локали "
"``ASCII`` на основе ``C``."

#: ../../whatsnew/3.7.rst:2111
msgid ""
"OpenSSL 0.9.8 and 1.0.1 are no longer supported, which means building "
"CPython 3.7 with SSL/TLS support on older platforms still using these "
"versions requires custom build options that link to a more recent version of "
"OpenSSL."
msgstr ""
"OpenSSL 0.9.8 и 1.0.1 больше не поддерживаются, а это означает, что для "
"сборки CPython 3.7 с поддержкой SSL/TLS на старых платформах, которые все "
"еще используют эти версии, требуются специальные параметры сборки, связанные "
"с более поздней версией OpenSSL."

#: ../../whatsnew/3.7.rst:2115
msgid ""
"Notably, this issue affects the Debian 8 (aka \"jessie\") and Ubuntu 14.04 "
"(aka \"Trusty\") LTS Linux distributions, as they still use OpenSSL 1.0.1 by "
"default."
msgstr ""
"Примечательно, что эта проблема затрагивает дистрибутивы Debian 8 (также "
"известные как «Джесси») и Ubuntu 14.04 (также известные как «Надежный») LTS "
"Linux, поскольку они по-прежнему используют OpenSSL 1.0.1 по умолчанию."

#: ../../whatsnew/3.7.rst:2119
msgid ""
"Debian 9 (\"stretch\") and Ubuntu 16.04 (\"xenial\"), as well as recent "
"releases of other LTS Linux releases (e.g. RHEL/CentOS 7.5, SLES 12-SP3), "
"use OpenSSL 1.0.2 or later, and remain supported in the default build "
"configuration."
msgstr ""
"Debian 9 («stretch») и Ubuntu 16.04 («xenial»), а также недавние выпуски "
"других выпусков LTS Linux (например, RHEL/CentOS 7.5, SLES 12-SP3) "
"используют OpenSSL 1.0.2 или новее и продолжают поддерживаться. в "
"конфигурации сборки по умолчанию."

#: ../../whatsnew/3.7.rst:2123
msgid ""
"CPython's own `CI configuration file <https://github.com/python/cpython/blob/"
"v3.7.13/.travis.yml>`_ provides an example of using the SSL :source:"
"`compatibility testing infrastructure <Tools/ssl/multissltests.py>` in "
"CPython's test suite to build and link against OpenSSL 1.1.0 rather than an "
"outdated system provided OpenSSL."
msgstr ""
"Собственный `файл конфигурации CI CPython <https://github.com/python/cpython/"
"blob/v3.7.13/.travis.yml>`_ представляет собой пример использования "
"инфраструктуры тестирования совместимости SSL <Tools/ssl /multissltests.py>` "
"в наборе тестов CPython для сборки и связывания с OpenSSL 1.1.0, а не с "
"устаревшей системой, предоставляющей OpenSSL."

#: ../../whatsnew/3.7.rst:2132
msgid "API and Feature Removals"
msgstr "Удаление API и функций"

#: ../../whatsnew/3.7.rst:2134
msgid "The following features and APIs have been removed from Python 3.7:"
msgstr "Следующие функции и API были удалены из Python 3.7:"

#: ../../whatsnew/3.7.rst:2136
msgid ""
"The ``os.stat_float_times()`` function has been removed. It was introduced "
"in Python 2.3 for backward compatibility with Python 2.2, and was deprecated "
"since Python 3.1."
msgstr ""
"Функция ``os.stat_float_times()`` была удалена. Он был введен в Python 2.3 "
"для обратной совместимости с Python 2.2 и устарел с Python 3.1."

#: ../../whatsnew/3.7.rst:2140
msgid ""
"Unknown escapes consisting of ``'\\'`` and an ASCII letter in replacement "
"templates for :func:`re.sub` were deprecated in Python 3.5, and will now "
"cause an error."
msgstr ""
"Неизвестные escape-символы, состоящие из ``'\\'`` и буквы ASCII в шаблонах "
"замены :func:`re.sub`, устарели в Python 3.5 и теперь вызывают ошибку."

#: ../../whatsnew/3.7.rst:2144
msgid ""
"Removed support of the *exclude* argument in :meth:`tarfile.TarFile.add`. It "
"was deprecated in Python 2.7 and 3.2.  Use the *filter* argument instead."
msgstr ""
"Удалена поддержка аргумента *exclude* в :meth:`tarfile.TarFile.add`. Он "
"устарел в Python 2.7 и 3.2. Вместо этого используйте аргумент *filter*."

#: ../../whatsnew/3.7.rst:2147
msgid ""
"The ``splitunc()`` function in the :mod:`ntpath` module was deprecated in "
"Python 3.1, and has now been removed.  Use the :func:`~os.path.splitdrive` "
"function instead."
msgstr ""

#: ../../whatsnew/3.7.rst:2151
msgid ""
":func:`collections.namedtuple` no longer supports the *verbose* parameter or "
"``_source`` attribute which showed the generated source code for the named "
"tuple class.  This was part of an optimization designed to speed-up class "
"creation.  (Contributed by Jelle Zijlstra with further improvements by INADA "
"Naoki, Serhiy Storchaka, and Raymond Hettinger in :issue:`28638`.)"
msgstr ""
":func:`collections.namedtuple` больше не поддерживает параметр *verbose* или "
"атрибут ``_source``, который отображал сгенерированный исходный код для "
"именованного класса кортежа. Это было частью оптимизации, призванной "
"ускорить создание классов. (Внесено Йелле Зийлстра, дальнейшие улучшения "
"внесены INADA Naoki, Сергеем Сторчакой и Раймондом Хеттингером в :issue:"
"`28638`.)"

#: ../../whatsnew/3.7.rst:2157
msgid ""
"Functions :func:`bool`, :func:`float`, :func:`list` and :func:`tuple` no "
"longer take keyword arguments.  The first argument of :func:`int` can now be "
"passed only as positional argument."
msgstr ""
"Функции :func:`bool`, :func:`float`, :func:`list` и :func:`tuple` больше не "
"принимают ключевые слова в качестве аргументов. Первый аргумент :func:`int` "
"теперь можно передавать только как позиционный аргумент."

#: ../../whatsnew/3.7.rst:2161
msgid ""
"Removed previously deprecated in Python 2.4 classes ``Plist``, ``Dict`` and "
"``_InternalDict`` in the :mod:`plistlib` module.  Dict values in the result "
"of functions :func:`~plistlib.readPlist` and :func:`~plistlib."
"readPlistFromBytes` are now normal dicts.  You no longer can use attribute "
"access to access items of these dictionaries."
msgstr ""
"В модуле :mod:`plistlib` удалены ранее устаревшие классы Python 2.4 "
"``Plist``, ``Dict`` и ``_InternalDict``. Значения Dict в результате функций :"
"func:`~plistlib.readPlist` и :func:`~plistlib.readPlistFromBytes` теперь "
"являются обычными словарями. Вы больше не можете использовать доступ к "
"атрибутам для доступа к элементам этих словарей."

#: ../../whatsnew/3.7.rst:2167
msgid ""
"The ``asyncio.windows_utils.socketpair()`` function has been removed.  Use "
"the :func:`socket.socketpair` function instead, it is available on all "
"platforms since Python 3.5. ``asyncio.windows_utils.socketpair`` was just an "
"alias to ``socket.socketpair`` on Python 3.5 and newer."
msgstr ""
"Функция asyncio.windows_utils.socketpair() была удалена. Вместо этого "
"используйте функцию :func:`socket.socketpair`, она доступна на всех "
"платформах, начиная с Python 3.5. ``asyncio.windows_utils.socketpair`` был "
"просто псевдонимом ``socket.socketpair`` в Python 3.5 и новее."

#: ../../whatsnew/3.7.rst:2173
msgid ""
":mod:`asyncio` no longer exports the :mod:`selectors` and :mod:`_overlapped` "
"modules as ``asyncio.selectors`` and ``asyncio._overlapped``. Replace ``from "
"asyncio import selectors`` with ``import selectors``."
msgstr ""

#: ../../whatsnew/3.7.rst:2178
msgid ""
"Direct instantiation of :class:`ssl.SSLSocket` and :class:`ssl.SSLObject` "
"objects is now prohibited. The constructors were never documented, tested, "
"or designed as public constructors.  Users were supposed to use :func:`ssl."
"wrap_socket` or :class:`ssl.SSLContext`. (Contributed by Christian Heimes "
"in :issue:`32951`.)"
msgstr ""
"Прямое создание объектов :class:`ssl.SSLSocket` и :class:`ssl.SSLObject` "
"теперь запрещено. Конструкторы никогда не документировались, не "
"тестировались и не разрабатывались как общедоступные конструкторы. "
"Пользователи должны были использовать :func:`ssl.wrap_socket` или :class:"
"`ssl.SSLContext`. (Предоставлено Кристианом Хаймсом в :issue:`32951`.)"

#: ../../whatsnew/3.7.rst:2184
msgid ""
"The unused :mod:`distutils` ``install_misc`` command has been removed. "
"(Contributed by Eric N. Vander Weele in :issue:`29218`.)"
msgstr ""

#: ../../whatsnew/3.7.rst:2189
msgid "Module Removals"
msgstr "Удаление модулей"

#: ../../whatsnew/3.7.rst:2191
msgid ""
"The ``fpectl`` module has been removed.  It was never enabled by default, "
"never worked correctly on x86-64, and it changed the Python ABI in ways that "
"caused unexpected breakage of C extensions. (Contributed by Nathaniel J. "
"Smith in :issue:`29137`.)"
msgstr ""
"Модуль ``fpectl`` был удален. Он никогда не был включен по умолчанию, "
"никогда не работал корректно на x86-64 и изменял ABI Python таким образом, "
"что приводил к неожиданной поломке расширений C. (Предоставлено Натаниэлем "
"Дж. Смитом в :issue:`29137`.)"

#: ../../whatsnew/3.7.rst:2198 ../../whatsnew/3.7.rst:2474
msgid "Windows-only Changes"
msgstr "Изменения только для Windows"

#: ../../whatsnew/3.7.rst:2200
msgid ""
"The python launcher, (py.exe), can accept 32 & 64 bit specifiers **without** "
"having to specify a minor version as well. So ``py -3-32`` and ``py -3-64`` "
"become valid as well as ``py -3.7-32``, also the -*m*-64 and -*m.n*-64 forms "
"are now accepted to force 64 bit python even if 32 bit would have otherwise "
"been used. If the specified version is not available py.exe will error exit. "
"(Contributed by Steve Barnes in :issue:`30291`.)"
msgstr ""
"Средство запуска Python (py.exe) может принимать 32- и 64-битные "
"спецификаторы **без** необходимости указывать также дополнительную версию. "
"Таким образом, ``py -3-32`` и ``py -3-64`` становятся действительными, а "
"также ``py -3.7-32``, а также -*m*-64 и -*mn*-64. формы теперь принимаются "
"для принудительного использования 64-битного Python, даже если в противном "
"случае использовался бы 32-битный. Если указанная версия недоступна, py.exe "
"завершит работу по ошибке. (Предоставлено Стивом Барнсом в :issue:`30291`.)"

#: ../../whatsnew/3.7.rst:2207
msgid ""
"The launcher can be run as ``py -0`` to produce a list of the installed "
"pythons, *with default marked with an asterisk*. Running ``py -0p`` will "
"include the paths. If py is run with a version specifier that cannot be "
"matched it will also print the *short form* list of available specifiers. "
"(Contributed by Steve Barnes in :issue:`30362`.)"
msgstr ""
"Программу запуска можно запустить как ``py -0`` для создания списка "
"установленных питонов, *по умолчанию отмечено звездочкой*. Запуск ``py -0p`` "
"включит пути. Если py запускается со спецификатором версии, который не может "
"быть сопоставлен, он также распечатает *краткий* список доступных "
"спецификаторов. (Предоставлено Стивом Барнсом в :issue:`30362`.)"

#: ../../whatsnew/3.7.rst:2217
msgid "Porting to Python 3.7"
msgstr "Портирование на Python 3.7"

#: ../../whatsnew/3.7.rst:2219
msgid ""
"This section lists previously described changes and other bugfixes that may "
"require changes to your code."
msgstr ""
"В этом разделе перечислены ранее описанные изменения и другие исправления "
"ошибок, которые могут потребовать внесения изменений в ваш код."

#: ../../whatsnew/3.7.rst:2224
msgid "Changes in Python Behavior"
msgstr "Изменения в поведении Python"

#: ../../whatsnew/3.7.rst:2226
msgid ""
":keyword:`async` and :keyword:`await` names are now reserved keywords. Code "
"using these names as identifiers will now raise a :exc:`SyntaxError`. "
"(Contributed by Jelle Zijlstra in :issue:`30406`.)"
msgstr ""
"Имена :keyword:`async` и :keyword:`await` теперь являются зарезервированными "
"ключевыми словами. Код, использующий эти имена в качестве идентификаторов, "
"теперь будет вызывать ошибку :exc:`SyntaxError`. (Предоставлено Джелле "
"Зийлстра в :issue:`30406`.)"

#: ../../whatsnew/3.7.rst:2230
msgid ""
":pep:`479` is enabled for all code in Python 3.7, meaning that :exc:"
"`StopIteration` exceptions raised directly or indirectly in coroutines and "
"generators are transformed into :exc:`RuntimeError` exceptions. (Contributed "
"by Yury Selivanov in :issue:`32670`.)"
msgstr ""
":pep:`479` включен для всего кода в Python 3.7, а это означает, что "
"исключения :exc:`StopIteration`, возникающие прямо или косвенно в "
"сопрограммах и генераторах, преобразуются в исключения :exc:`RuntimeError`. "
"(Добавлен Юрием Селивановым в :issue:`32670`.)"

#: ../../whatsnew/3.7.rst:2236
msgid ""
":meth:`object.__aiter__` methods can no longer be declared as asynchronous.  "
"(Contributed by Yury Selivanov in :issue:`31709`.)"
msgstr ""
"Методы :meth:`object.__aiter__` больше нельзя объявлять как асинхронные. "
"(Добавлен Юрием Селивановым в :issue:`31709`.)"

#: ../../whatsnew/3.7.rst:2239
msgid ""
"Due to an oversight, earlier Python versions erroneously accepted the "
"following syntax::"
msgstr ""
"Из-за недосмотра более ранние версии Python ошибочно принимали следующий "
"синтаксис:"

#: ../../whatsnew/3.7.rst:2247
msgid ""
"Python 3.7 now correctly raises a :exc:`SyntaxError`, as a generator "
"expression always needs to be directly inside a set of parentheses and "
"cannot have a comma on either side, and the duplication of the parentheses "
"can be omitted only on calls. (Contributed by Serhiy Storchaka in :issue:"
"`32012` and :issue:`32023`.)"
msgstr ""
"Python 3.7 теперь правильно вызывает :exc:`SyntaxError`, поскольку выражение "
"генератора всегда должно находиться непосредственно внутри набора круглых "
"скобок и не может иметь запятую с обеих сторон, а дублирование круглых "
"скобок можно опустить только при вызовах. (Внесено Сергеем Сторчакой в ​​:"
"issue:`32012` и :issue:`32023`.)"

#: ../../whatsnew/3.7.rst:2253
msgid ""
"When using the :option:`-m` switch, the initial working directory is now "
"added to :data:`sys.path`, rather than an empty string (which dynamically "
"denoted the current working directory at the time of each import). Any "
"programs that are checking for the empty string, or otherwise relying on the "
"previous behaviour, will need to be updated accordingly (e.g. by also "
"checking for ``os.getcwd()`` or ``os.path.dirname(__main__.__file__)``, "
"depending on why the code was checking for the empty string in the first "
"place)."
msgstr ""
"При использовании переключателя :option:`-m` начальный рабочий каталог "
"теперь добавляется в :data:`sys.path`, а не пустая строка (которая "
"динамически обозначает текущий рабочий каталог во время каждого импорта). "
"Любые программы, которые проверяют пустую строку или иным образом полагаются "
"на предыдущее поведение, должны быть соответствующим образом обновлены "
"(например, путем проверки ``os.getcwd()`` или ``os.path.dirname(__main__. "
"__file__)``, в зависимости от того, почему код вообще проверял наличие "
"пустой строки)."

#: ../../whatsnew/3.7.rst:2263
msgid "Changes in the Python API"
msgstr "Изменения в API Python"

#: ../../whatsnew/3.7.rst:2265
msgid ""
":meth:`socketserver.ThreadingMixIn.server_close` now waits until all non-"
"daemon threads complete.  Set the new :attr:`socketserver.ThreadingMixIn."
"block_on_close` class attribute to ``False`` to get the pre-3.7 behaviour. "
"(Contributed by Victor Stinner in :issue:`31233` and :issue:`33540`.)"
msgstr ""
":meth:`socketserver.ThreadingMixIn.server_close` теперь ожидает завершения "
"всех потоков, не являющихся демонами. Установите для нового атрибута класса :"
"attr:`socketserver.ThreadingMixIn.block_on_close` значение ``False``, чтобы "
"получить поведение версии до версии 3.7. (Предоставлено Виктором Стиннером "
"в :issue:`31233` и :issue:`33540`.)"

#: ../../whatsnew/3.7.rst:2271
msgid ""
":meth:`socketserver.ForkingMixIn.server_close` now waits until all child "
"processes complete. Set the new :attr:`socketserver.ForkingMixIn."
"block_on_close` class attribute to ``False`` to get the pre-3.7 behaviour. "
"(Contributed by Victor Stinner in :issue:`31151` and :issue:`33540`.)"
msgstr ""
":meth:`socketserver.ForkingMixIn.server_close` теперь ожидает завершения "
"всех дочерних процессов. Установите для нового атрибута класса :attr:"
"`socketserver.ForkingMixIn.block_on_close` значение ``False``, чтобы "
"получить поведение версии до версии 3.7. (Предоставлено Виктором Стиннером "
"в :issue:`31151` и :issue:`33540`.)"

#: ../../whatsnew/3.7.rst:2277
msgid ""
"The :func:`locale.localeconv` function now temporarily sets the ``LC_CTYPE`` "
"locale to the value of ``LC_NUMERIC`` in some cases. (Contributed by Victor "
"Stinner in :issue:`31900`.)"
msgstr ""
"Функция :func:`locale.localeconv` теперь временно устанавливает для локали "
"``LC_CTYPE`` значение ``LC_NUMERIC`` в некоторых случаях. (Предоставлено "
"Виктором Стиннером в :issue:`31900`.)"

#: ../../whatsnew/3.7.rst:2281
msgid ""
":meth:`pkgutil.walk_packages` now raises a :exc:`ValueError` if *path* is a "
"string.  Previously an empty list was returned. (Contributed by Sanyam "
"Khurana in :issue:`24744`.)"
msgstr ""
":meth:`pkgutil.walk_packages` теперь вызывает :exc:`ValueError`, если *path* "
"является строкой. Ранее возвращался пустой список. (Предоставлено Саньямом "
"Хураной в :issue:`24744`.)"

#: ../../whatsnew/3.7.rst:2285
msgid ""
"A format string argument for :meth:`string.Formatter.format` is now :ref:"
"`positional-only <positional-only_parameter>`. Passing it as a keyword "
"argument was deprecated in Python 3.5. (Contributed by Serhiy Storchaka in :"
"issue:`29193`.)"
msgstr ""
"Аргумент строки формата для :meth:`string.Formatter.format` теперь имеет "
"вид :ref:`positional-only <positional-only_parameter>`. Передача его в "
"качестве аргумента ключевого слова устарела в Python 3.5. (Предоставлено "
"Сергеем Сторчакой в ​​:issue:`29193`.)"

#: ../../whatsnew/3.7.rst:2290
msgid ""
"Attributes :attr:`~http.cookies.Morsel.key`, :attr:`~http.cookies.Morsel."
"value` and :attr:`~http.cookies.Morsel.coded_value` of class :class:`http."
"cookies.Morsel` are now read-only. Assigning to them was deprecated in "
"Python 3.5. Use the :meth:`~http.cookies.Morsel.set` method for setting "
"them. (Contributed by Serhiy Storchaka in :issue:`29192`.)"
msgstr ""
"Атрибуты :attr:`~http.cookies.Morsel.key`, :attr:`~http.cookies.Morsel."
"value` и :attr:`~http.cookies.Morsel.coded_value` класса :class:`http. "
"cookie.Morsel` теперь доступны только для чтения. Назначение им устарело в "
"Python 3.5. Используйте метод :meth:`~http.cookies.Morsel.set` для их "
"установки. (Предоставлено Сергеем Сторчакой в ​​:issue:`29192`.)"

#: ../../whatsnew/3.7.rst:2298
msgid ""
"The *mode* argument of :func:`os.makedirs` no longer affects the file "
"permission bits of newly created intermediate-level directories. To set "
"their file permission bits you can set the umask before invoking "
"``makedirs()``. (Contributed by Serhiy Storchaka in :issue:`19930`.)"
msgstr ""
"Аргумент *mode* :func:`os.madeirs` больше не влияет на биты прав доступа к "
"файлам вновь созданных каталогов промежуточного уровня. Чтобы установить "
"биты прав доступа к файлам, вы можете установить umask перед вызовом "
"makedirs(). (Предоставлено Сергеем Сторчакой в ​​:issue:`19930`.)"

#: ../../whatsnew/3.7.rst:2304
msgid ""
"The :attr:`struct.Struct.format` type is now :class:`str` instead of :class:"
"`bytes`. (Contributed by Victor Stinner in :issue:`21071`.)"
msgstr ""
"Тип :attr:`struct.Struct.format` теперь имеет вид :class:`str` вместо :class:"
"`bytes`. (Предоставлено Виктором Стиннером в :issue:`21071`.)"

#: ../../whatsnew/3.7.rst:2307
msgid ""
":func:`~cgi.parse_multipart` now accepts the *encoding* and *errors* "
"arguments and returns the same results as :class:`~FieldStorage`: for non-"
"file fields, the value associated to a key is a list of strings, not bytes. "
"(Contributed by Pierre Quentel in :issue:`29979`.)"
msgstr ""

#: ../../whatsnew/3.7.rst:2313
msgid ""
"Due to internal changes in :mod:`socket`, calling :func:`socket.fromshare` "
"on a socket created by :func:`socket.share <socket.socket.share>` in older "
"Python versions is not supported."
msgstr ""
"Из-за внутренних изменений в :mod:`socket` вызов :func:`socket.fromshare` "
"для сокета, созданного :func:`socket.share <socket.socket.share>` в старых "
"версиях Python, не поддерживается."

#: ../../whatsnew/3.7.rst:2317
msgid ""
"``repr`` for :exc:`BaseException` has changed to not include the trailing "
"comma.  Most exceptions are affected by this change. (Contributed by Serhiy "
"Storchaka in :issue:`30399`.)"
msgstr ""
"``repr`` для :exc:`BaseException` изменен и теперь не содержит завершающую "
"запятую. Это изменение затронуло большинство исключений. (Предоставлено "
"Сергеем Сторчакой в ​​:issue:`30399`.)"

#: ../../whatsnew/3.7.rst:2321
msgid ""
"``repr`` for :class:`datetime.timedelta` has changed to include the keyword "
"arguments in the output. (Contributed by Utkarsh Upadhyay in :issue:`30302`.)"
msgstr ""
"``repr`` для :class:`datetime.timedelta` был изменен и включает в вывод "
"аргументы ключевого слова. (Предоставлено Уткаршем Упадхьяем в :issue:"
"`30302`.)"

#: ../../whatsnew/3.7.rst:2324
msgid ""
"Because :func:`shutil.rmtree` is now implemented using the :func:`os."
"scandir` function, the user specified handler *onerror* is now called with "
"the first argument ``os.scandir`` instead of ``os.listdir`` when listing the "
"directory is failed."
msgstr ""
"Поскольку :func:`shutil.rmtree` теперь реализован с использованием функции :"
"func:`os.scandir`, указанный пользователем обработчик *onerror* теперь "
"вызывается с первым аргументом ``os.scandir`` вместо ``os .listdir`` при "
"неудачном перечислении каталога."

#: ../../whatsnew/3.7.rst:2329
msgid ""
"Support for nested sets and set operations in regular expressions as in "
"`Unicode Technical Standard #18`_ might be added in the future.  This would "
"change the syntax.  To facilitate this future change a :exc:`FutureWarning` "
"will be raised in ambiguous cases for the time being. That include sets "
"starting with a literal ``'['`` or containing literal character sequences "
"``'--'``, ``'&&'``, ``'~~'``, and ``'||'``.  To avoid a warning, escape them "
"with a backslash. (Contributed by Serhiy Storchaka in :issue:`30349`.)"
msgstr ""
"В будущем может быть добавлена ​​поддержка вложенных наборов и операций над "
"множествами в регулярных выражениях, как в «Техническом стандарте Unicode "
"#18». Это изменит синтаксис. Чтобы облегчить это будущее изменение, в "
"настоящее время в неоднозначных случаях будет вызываться :exc:"
"`FutureWarning`. Сюда входят наборы, начинающиеся с литерала ``'['`` или "
"содержащие литеральные последовательности символов ``'--'``, ``'&&'``, "
"``'~~'`` и ``'| |'``. Чтобы избежать предупреждения, экранируйте их обратной "
"косой чертой. (Предоставлено Сергеем Сторчакой в ​​:issue:`30349`.)"

#: ../../whatsnew/3.7.rst:2340
msgid ""
"The result of splitting a string on a :mod:`regular expression <re>` that "
"could match an empty string has been changed.  For example splitting on "
"``r'\\s*'`` will now split not only on whitespaces as it did previously, but "
"also on empty strings before all non-whitespace characters and just before "
"the end of the string. The previous behavior can be restored by changing the "
"pattern to ``r'\\s+'``.  A :exc:`FutureWarning` was emitted for such "
"patterns since Python 3.5."
msgstr ""
"Изменен результат разделения строки на :mod:`регулярное выражение <re>`, "
"которое могло соответствовать пустой строке. Например, разделение на "
"``r'\\s*'`` теперь будет разделяться не только по пробелам, как это было "
"раньше, но также и по пустым строкам перед всеми символами, не являющимися "
"пробелами, и непосредственно перед концом строки. Предыдущее поведение можно "
"восстановить, изменив шаблон на ``r'\\s+'``. Для таких шаблонов начиная с "
"версии Python 3.5 выдавалось сообщение :exc:`FutureWarning`."

#: ../../whatsnew/3.7.rst:2349
msgid ""
"For patterns that match both empty and non-empty strings, the result of "
"searching for all matches may also be changed in other cases.  For example "
"in the string ``'a\\n\\n'``, the pattern ``r'(?m)^\\s*?$'`` will not only "
"match empty strings at positions 2 and 3, but also the string ``'\\n'`` at "
"positions 2--3.  To match only blank lines, the pattern should be rewritten "
"as ``r'(?m)^[^\\S\\n]*$'``."
msgstr ""
"Для шаблонов, соответствующих как пустым, так и непустым строкам, результат "
"поиска всех совпадений также может быть изменен в других случаях. Например, "
"в строке ``'a\\n\\n'`` шаблон ``r'(?m)^\\s*?$'`` будет не только "
"соответствовать пустым строкам в позициях 2 и 3, но и строка ``'\\n'`` в "
"позициях 2--3. Чтобы соответствовать только пустым строкам, шаблон следует "
"переписать как ``r'(?m)^[^\\S\\n]*$'``."

#: ../../whatsnew/3.7.rst:2356
msgid ""
":func:`re.sub()` now replaces empty matches adjacent to a previous non-empty "
"match.  For example ``re.sub('x*', '-', 'abxd')`` returns now ``'-a-b--d-'`` "
"instead of ``'-a-b-d-'`` (the first minus between 'b' and 'd' replaces 'x', "
"and the second minus replaces an empty string between 'x' and 'd')."
msgstr ""

#: ../../whatsnew/3.7.rst:2362
msgid "(Contributed by Serhiy Storchaka in :issue:`25054` and :issue:`32308`.)"
msgstr "(Внесено Сергеем Сторчакой в ​​:issue:`25054` и :issue:`32308`.)"

#: ../../whatsnew/3.7.rst:2364
msgid ""
"Change :func:`re.escape` to only escape regex special characters instead of "
"escaping all characters other than ASCII letters, numbers, and ``'_'``. "
"(Contributed by Serhiy Storchaka in :issue:`29995`.)"
msgstr ""
"Измените :func:`re.escape`, чтобы экранировать только специальные символы "
"регулярных выражений вместо экранирования всех символов, кроме букв ASCII, "
"цифр и ``'_'``. (Предоставлено Сергеем Сторчакой в ​​:issue:`29995`.)"

#: ../../whatsnew/3.7.rst:2368
msgid ""
":class:`tracemalloc.Traceback` frames are now sorted from oldest to most "
"recent to be more consistent with :mod:`traceback`. (Contributed by Jesse "
"Bakker in :issue:`32121`.)"
msgstr ""
"Кадры :class:`tracemalloc.Traceback` теперь сортируются от самых старых к "
"самым последним, чтобы лучше соответствовать :mod:`traceback`. "
"(Предоставлено Джесси Баккером в :issue:`32121`.)"

#: ../../whatsnew/3.7.rst:2372
msgid ""
"On OSes that support :const:`socket.SOCK_NONBLOCK` or :const:`socket."
"SOCK_CLOEXEC` bit flags, the :attr:`socket.type <socket.socket.type>` no "
"longer has them applied. Therefore, checks like ``if sock.type == socket."
"SOCK_STREAM`` work as expected on all platforms. (Contributed by Yury "
"Selivanov in :issue:`32331`.)"
msgstr ""
"В ОС, которые поддерживают битовые флаги :const:`socket.SOCK_NONBLOCK` или :"
"const:`socket.SOCK_CLOEXEC`, :attr:`socket.type <socket.socket.type>` больше "
"не применяется. Таким образом, проверки типа ``if sock.type == socket."
"SOCK_STREAM`` работают должным образом на всех платформах. (Добавлен Юрием "
"Селивановым в :issue:`32331`.)"

#: ../../whatsnew/3.7.rst:2379
msgid ""
"On Windows the default for the *close_fds* argument of :class:`subprocess."
"Popen` was changed from :const:`False` to :const:`True` when redirecting the "
"standard handles. If you previously depended on handles being inherited when "
"using :class:`subprocess.Popen` with standard io redirection, you will have "
"to pass ``close_fds=False`` to preserve the previous behaviour, or use :attr:"
"`STARTUPINFO.lpAttributeList <subprocess.STARTUPINFO.lpAttributeList>`."
msgstr ""
"В Windows значение по умолчанию для аргумента *close_fds* :class:`subprocess."
"Popen` было изменено с :const:`False` на :const:`True` при перенаправлении "
"стандартных дескрипторов. Если вы ранее зависели от наследования "
"дескрипторов при использовании :class:`subprocess.Popen` со стандартным "
"перенаправлением ввода-вывода, вам нужно будет передать ``close_fds=False``, "
"чтобы сохранить предыдущее поведение, или использовать :attr:`STARTUPINFO."
"lpAttributeList <subprocess.STARTUPINFO.lpAttributeList>`."

#: ../../whatsnew/3.7.rst:2387
msgid ""
":meth:`importlib.machinery.PathFinder.invalidate_caches` -- which implicitly "
"affects :func:`importlib.invalidate_caches` -- now deletes entries in :data:"
"`sys.path_importer_cache` which are set to ``None``. (Contributed by Brett "
"Cannon in :issue:`33169`.)"
msgstr ""
":meth:`importlib.machinery.PathFinder.invalidate_caches` -- который неявно "
"влияет на :func:`importlib.invalidate_caches` -- теперь удаляет записи в :"
"data:`sys.path_importer_cache`, для которых установлено значение ``None``. "
"(Предоставлено Бреттом Кэнноном в :issue:`33169`.)"

#: ../../whatsnew/3.7.rst:2392
msgid ""
"In :mod:`asyncio`, :meth:`loop.sock_recv() <asyncio.loop.sock_recv>`, :meth:"
"`loop.sock_sendall() <asyncio.loop.sock_sendall>`, :meth:`loop.sock_accept() "
"<asyncio.loop.sock_accept>`, :meth:`loop.getaddrinfo() <asyncio.loop."
"getaddrinfo>`, :meth:`loop.getnameinfo() <asyncio.loop.getnameinfo>` have "
"been changed to be proper coroutine methods to match their documentation.  "
"Previously, these methods returned :class:`asyncio.Future` instances. "
"(Contributed by Yury Selivanov in :issue:`32327`.)"
msgstr ""
"В :mod:`asyncio`, :meth:`loop.sock_recv() <asyncio.loop.sock_recv>`, :meth:"
"`loop.sock_sendall() <asyncio.loop.sock_sendall>`, :meth:`loop. "
"sock_accept() <asyncio.loop.sock_accept>`, :meth:`loop.getaddrinfo() "
"<asyncio.loop.getaddrinfo>`, :meth:`loop.getnameinfo() <asyncio.loop."
"getnameinfo>` были изменены быть правильными методами сопрограммы, "
"соответствующими их документации. Раньше эти методы возвращали экземпляры :"
"class:`asyncio.Future`. (Добавлен Юрием Селивановым в :issue:`32327`.)"

#: ../../whatsnew/3.7.rst:2403
msgid ""
":attr:`asyncio.Server.sockets` now returns a copy of the internal list of "
"server sockets, instead of returning it directly. (Contributed by Yury "
"Selivanov in :issue:`32662`.)"
msgstr ""
":attr:`asyncio.Server.sockets` теперь возвращает копию внутреннего списка "
"сокетов сервера вместо того, чтобы возвращать его напрямую. (Добавлен Юрием "
"Селивановым в :issue:`32662`.)"

#: ../../whatsnew/3.7.rst:2407
msgid ""
":attr:`Struct.format <struct.Struct.format>` is now a :class:`str` instance "
"instead of a :class:`bytes` instance. (Contributed by Victor Stinner in :"
"issue:`21071`.)"
msgstr ""
":attr:`Struct.format <struct.Struct.format>` теперь является экземпляром :"
"class:`str` вместо экземпляра :class:`bytes`. (Предоставлено Виктором "
"Стиннером в :issue:`21071`.)"

#: ../../whatsnew/3.7.rst:2411
msgid ""
":mod:`argparse` subparsers can now be made mandatory by passing "
"``required=True`` to :meth:`ArgumentParser.add_subparsers() <argparse."
"ArgumentParser.add_subparsers>`. (Contributed by Anthony Sottile in :issue:"
"`26510`.)"
msgstr ""
"Субпарсеры :mod:`argparse` теперь можно сделать обязательными, передав "
"``required=True`` в :meth:`ArgumentParser.add_subparsers() <argparse."
"ArgumentParser.add_subparsers>`. (Предоставлено Энтони Соттайлом в :issue:"
"`26510`.)"

#: ../../whatsnew/3.7.rst:2415
msgid ""
":meth:`ast.literal_eval()` is now stricter.  Addition and subtraction of "
"arbitrary numbers are no longer allowed. (Contributed by Serhiy Storchaka "
"in :issue:`31778`.)"
msgstr ""

#: ../../whatsnew/3.7.rst:2419
msgid ""
":meth:`Calendar.itermonthdates <calendar.Calendar.itermonthdates>` will now "
"consistently raise an exception when a date falls outside of the "
"``0001-01-01`` through ``9999-12-31`` range.  To support applications that "
"cannot tolerate such exceptions, the new :meth:`Calendar.itermonthdays3 "
"<calendar.Calendar.itermonthdays3>` and :meth:`Calendar.itermonthdays4 "
"<calendar.Calendar.itermonthdays4>` can be used. The new methods return "
"tuples and are not restricted by the range supported by :class:`datetime."
"date`. (Contributed by Alexander Belopolsky in :issue:`28292`.)"
msgstr ""
":meth:`Calendar.itermonthdates <calendar.Calendar.itermonthdates>` теперь "
"будет постоянно вызывать исключение, когда дата выходит за пределы диапазона "
"от ``0001-01-01`` до ``9999-12-31``. Для поддержки приложений, которые не "
"допускают таких исключений, можно использовать новые :meth:`Calendar."
"itermonthdays3 <calendar.Calendar.itermonthdays3>` и :meth:`Calendar."
"itermonthdays4 <calendar.Calendar.itermonthdays4>`. Новые методы возвращают "
"кортежи и не ограничены диапазоном, поддерживаемым :class:`datetime.date`. "
"(Предоставлено Александром Белопольским в :issue:`28292`.)"

#: ../../whatsnew/3.7.rst:2429
msgid ""
":class:`collections.ChainMap` now preserves the order of the underlying "
"mappings.  (Contributed by Raymond Hettinger in :issue:`32792`.)"
msgstr ""
":class:`collections.ChainMap` теперь сохраняет порядок базовых отображений. "
"(Предоставлено Рэймондом Хеттингером в :issue:`32792`.)"

#: ../../whatsnew/3.7.rst:2432
msgid ""
"The ``submit()`` method of :class:`concurrent.futures.ThreadPoolExecutor` "
"and :class:`concurrent.futures.ProcessPoolExecutor` now raises a :exc:"
"`RuntimeError` if called during interpreter shutdown. (Contributed by Mark "
"Nemec in :issue:`33097`.)"
msgstr ""
"Метод ``submit()`` для :class:`concurrent.futures.ThreadPoolExecutor` и :"
"class:`concurrent.futures.ProcessPoolExecutor` теперь вызывает :exc:"
"`RuntimeError`, если он вызывается во время завершения работы "
"интерпретатора. (Предоставлено Марком Немеком в :issue:`33097`.)"

#: ../../whatsnew/3.7.rst:2437
msgid ""
"The :class:`configparser.ConfigParser` constructor now uses ``read_dict()`` "
"to process the default values, making its behavior consistent with the rest "
"of the parser.  Non-string keys and values in the defaults dictionary are "
"now being implicitly converted to strings. (Contributed by James Tocknell "
"in :issue:`23835`.)"
msgstr ""
"Конструктор :class:`configparser.ConfigParser` теперь использует "
"``read_dict()`` для обработки значений по умолчанию, что делает его "
"поведение согласованным с остальной частью парсера. Нестроковые ключи и "
"значения в словаре по умолчанию теперь неявно преобразуются в строки. "
"(Предоставлено Джеймсом Токнеллом в :issue:`23835`.)"

#: ../../whatsnew/3.7.rst:2443
msgid ""
"Several undocumented internal imports were removed. One example is that ``os."
"errno`` is no longer available; use ``import errno`` directly instead. Note "
"that such undocumented internal imports may be removed any time without "
"notice, even in micro version releases."
msgstr ""
"Несколько недокументированных внутренних импортных товаров были удалены. "
"Одним из примеров является то, что ``os.errno`` больше не доступен; вместо "
"этого используйте ``import errno`` напрямую. Обратите внимание, что такой "
"недокументированный внутренний импорт может быть удален в любое время без "
"предварительного уведомления, даже в микроверсиях."

#: ../../whatsnew/3.7.rst:2451
msgid "Changes in the C API"
msgstr "Изменения в C API"

#: ../../whatsnew/3.7.rst:2453
msgid ""
"The function :c:func:`PySlice_GetIndicesEx` is considered unsafe for "
"resizable sequences.  If the slice indices are not instances of :class:"
"`int`, but objects that implement the :meth:`!__index__` method, the "
"sequence can be resized after passing its length to :c:func:`!"
"PySlice_GetIndicesEx`.  This can lead to returning indices out of the length "
"of the sequence.  For avoiding possible problems use new functions :c:func:"
"`PySlice_Unpack` and :c:func:`PySlice_AdjustIndices`. (Contributed by Serhiy "
"Storchaka in :issue:`27867`.)"
msgstr ""
"Функция :c:func:`PySlice_GetIndicesEx` считается небезопасной для "
"последовательностей с изменяемым размером. Если индексы срезов не являются "
"экземплярами :class:`int`, а являются объектами, реализующими метод :meth:`!"
"__index__`, размер последовательности можно изменить после передачи ее длины "
"в :c:func:`!PySlice_GetIndicesEx`. Это может привести к возврату индексов за "
"пределами длины последовательности. Чтобы избежать возможных проблем, "
"используйте новые функции :c:func:`PySlice_Unpack` и :c:func:"
"`PySlice_AdjustIndices`. (Предоставлено Сергеем Сторчакой в ​​:issue:`27867`.)"

#: ../../whatsnew/3.7.rst:2464
msgid "CPython bytecode changes"
msgstr "Изменения в байт-коде CPython"

#: ../../whatsnew/3.7.rst:2466
msgid ""
"There are two new opcodes: :opcode:`LOAD_METHOD` and :opcode:`CALL_METHOD`. "
"(Contributed by Yury Selivanov and INADA Naoki in :issue:`26110`.)"
msgstr ""
"Появилось два новых кода операции: :opcode:`LOAD_METHOD` и :opcode:"
"`CALL_METHOD`. (Предоставлено Юрием Селивановым и INADA Naoki в :issue:"
"`26110`.)"

#: ../../whatsnew/3.7.rst:2469
msgid ""
"The :opcode:`STORE_ANNOTATION` opcode has been removed. (Contributed by Mark "
"Shannon in :issue:`32550`.)"
msgstr ""
"Опкод :opcode:`STORE_ANNOTATION` был удален. (Предоставлено Марком Шенноном "
"в :issue:`32550`.)"

#: ../../whatsnew/3.7.rst:2476
msgid ""
"The file used to override :data:`sys.path` is now called ``<python-"
"executable>._pth`` instead of ``'sys.path'``. See :ref:`finding_modules` for "
"more information. (Contributed by Steve Dower in :issue:`28137`.)"
msgstr ""

#: ../../whatsnew/3.7.rst:2483
msgid "Other CPython implementation changes"
msgstr "Другие изменения реализации CPython"

#: ../../whatsnew/3.7.rst:2485
msgid ""
"In preparation for potential future changes to the public CPython runtime "
"initialization API (see :pep:`432` for an initial, but somewhat outdated, "
"draft), CPython's internal startup and configuration management logic has "
"been significantly refactored. While these updates are intended to be "
"entirely transparent to both embedding applications and users of the regular "
"CPython CLI, they're being mentioned here as the refactoring changes the "
"internal order of various operations during interpreter startup, and hence "
"may uncover previously latent defects, either in embedding applications, or "
"in CPython itself. (Initially contributed by Nick Coghlan and Eric Snow as "
"part of :issue:`22257`, and further updated by Nick, Eric, and Victor "
"Stinner in a number of other issues). Some known details affected:"
msgstr ""
"В рамках подготовки к возможным будущим изменениям общедоступного API "
"инициализации среды выполнения CPython (первоначальный, но несколько "
"устаревший проект см. в :pep:`432`), внутренняя логика управления запуском и "
"конфигурацией CPython была значительно переработана. Хотя эти обновления "
"должны быть полностью прозрачными как для встраиваемых приложений, так и для "
"пользователей обычного интерфейса командной строки CPython, они упоминаются "
"здесь, поскольку рефакторинг меняет внутренний порядок различных операций во "
"время запуска интерпретатора и, следовательно, может выявить ранее скрытые "
"дефекты, либо при внедрении приложений или в самом CPython. (Первоначально "
"предоставлено Ником Когланом и Эриком Сноу как часть :issue:`22257`, а затем "
"обновлено Ником, Эриком и Виктором Стиннером в ряде других выпусков). "
"Затронули некоторые известные детали:"

#: ../../whatsnew/3.7.rst:2498
msgid ""
":c:func:`PySys_AddWarnOptionUnicode` is not currently usable by embedding "
"applications due to the requirement to create a Unicode object prior to "
"calling ``Py_Initialize``. Use :c:func:`PySys_AddWarnOption` instead."
msgstr ""
":c:func:`PySys_AddWarnOptionUnicode` в настоящее время нельзя использовать "
"для встраивания приложений из-за требования создания объекта Unicode перед "
"вызовом ``Py_Initialize``. Вместо этого используйте :c:func:"
"`PySys_AddWarnOption`."

#: ../../whatsnew/3.7.rst:2502
msgid ""
"warnings filters added by an embedding application with :c:func:"
"`PySys_AddWarnOption` should now more consistently take precedence over the "
"default filters set by the interpreter"
msgstr ""
"Фильтры предупреждений, добавленные приложением для внедрения с помощью :c:"
"func:`PySys_AddWarnOption`, теперь должны более последовательно иметь "
"приоритет над фильтрами по умолчанию, установленными интерпретатором."

#: ../../whatsnew/3.7.rst:2506
msgid ""
"Due to changes in the way the default warnings filters are configured, "
"setting :c:data:`Py_BytesWarningFlag` to a value greater than one is no "
"longer sufficient to both emit :exc:`BytesWarning` messages and have them "
"converted to exceptions.  Instead, the flag must be set (to cause the "
"warnings to be emitted in the first place), and an explicit ``error::"
"BytesWarning`` warnings filter added to convert them to exceptions."
msgstr ""
"Из-за изменений в способе настройки фильтров предупреждений по умолчанию "
"установка :c:data:`Py_BytesWarningFlag` на значение больше единицы больше не "
"является достаточным для отправки сообщений :exc:`BytesWarning` и их "
"преобразования в исключения. Вместо этого необходимо установить флаг (чтобы "
"в первую очередь вызвать выдачу предупреждений) и добавить явный фильтр "
"предупреждений error::BytesWarning для преобразования их в исключения."

#: ../../whatsnew/3.7.rst:2513
msgid ""
"Due to a change in the way docstrings are handled by the compiler, the "
"implicit ``return None`` in a function body consisting solely of a docstring "
"is now marked as occurring on the same line as the docstring, not on the "
"function's header line."
msgstr ""
"Из-за изменения способа обработки строк документации компилятором неявный "
"возврат None в теле функции, состоящей исключительно из строки документации, "
"теперь помечается как происходящий в той же строке, что и строка "
"документации, а не в строке заголовка функции. ."

#: ../../whatsnew/3.7.rst:2518
msgid ""
"The current exception state has been moved from the frame object to the co-"
"routine. This simplified the interpreter and fixed a couple of obscure bugs "
"caused by having swap exception state when entering or exiting a generator. "
"(Contributed by Mark Shannon in :issue:`25612`.)"
msgstr ""
"Текущее состояние исключения было перенесено из объекта фрейма в "
"сопрограмму. Это упростило интерпретатор и исправило пару малоизвестных "
"ошибок, вызванных сменой состояния исключения при входе в генератор или "
"выходе из него. (Предоставлено Марком Шенноном в :issue:`25612`.)"

#: ../../whatsnew/3.7.rst:2524
msgid "Notable changes in Python 3.7.1"
msgstr "Заметные изменения в Python 3.7.1"

#: ../../whatsnew/3.7.rst:2526
msgid ""
"Starting in 3.7.1, :c:func:`Py_Initialize` now consistently reads and "
"respects all of the same environment settings as :c:func:`Py_Main` (in "
"earlier Python versions, it respected an ill-defined subset of those "
"environment variables, while in Python 3.7.0 it didn't read any of them due "
"to :issue:`34247`). If this behavior is unwanted, set :c:data:"
"`Py_IgnoreEnvironmentFlag` to 1 before calling :c:func:`Py_Initialize`."
msgstr ""
"Начиная с версии 3.7.1, :c:func:`Py_Initialize` теперь последовательно "
"считывает и учитывает все те же настройки среды, что и :c:func:`Py_Main` (в "
"более ранних версиях Python он учитывал плохо определенное подмножество этой "
"среды). переменных, тогда как в Python 3.7.0 он не читал ни одну из них из-"
"за :issue:`34247`). Если такое поведение нежелательно, установите для :c:"
"data:`Py_IgnoreEnvironmentFlag` значение 1 перед вызовом :c:func:"
"`Py_Initialize`."

#: ../../whatsnew/3.7.rst:2533
msgid ""
"In 3.7.1 the C API for Context Variables :ref:`was updated "
"<contextvarsobjects_pointertype_change>` to use :c:type:`PyObject` "
"pointers.  See also :issue:`34762`."
msgstr ""
"В версии 3.7.1 API C для контекстных переменных :ref:`был обновлен "
"<contextvarsobjects_pointertype_change>` для использования :c:type:` PyObj "
"ect` указателей. См. также :issue:`34762`."

#: ../../whatsnew/3.7.rst:2537
msgid ""
"In 3.7.1 the :mod:`tokenize` module now implicitly emits a ``NEWLINE`` token "
"when provided with input that does not have a trailing new line.  This "
"behavior now matches what the C tokenizer does internally. (Contributed by "
"Ammar Askar in :issue:`33899`.)"
msgstr ""
"В версии 3.7.1 модуль :mod:`tokenize` теперь неявно выдаёт токен ``NEWLINE`` "
"при вводе, который не имеет завершающей новой строки. Теперь это поведение "
"соответствует тому, что делает токенизатор C внутри. (Предоставлено Аммаром "
"Аскаром в :issue:`33899`.)"

#: ../../whatsnew/3.7.rst:2543
msgid "Notable changes in Python 3.7.2"
msgstr "Заметные изменения в Python 3.7.2"

#: ../../whatsnew/3.7.rst:2545
msgid ""
"In 3.7.2, :mod:`venv` on Windows no longer copies the original binaries, but "
"creates redirector scripts named ``python.exe`` and ``pythonw.exe`` instead. "
"This resolves a long standing issue where all virtual environments would "
"have to be upgraded or recreated with each Python update. However, note that "
"this release will still require recreation of virtual environments in order "
"to get the new scripts."
msgstr ""
"В версии 3.7.2 :mod:`venv` в Windows больше не копирует исходные двоичные "
"файлы, а вместо этого создаёт сценарии перенаправления с именами ``python."
"exe`` и ``pythonw.exe``. Это решает давнюю проблему, когда все виртуальные "
"среды необходимо обновлять или воссоздавать при каждом обновлении Python. "
"Однако обратите внимание, что в этом выпуске по-прежнему потребуется "
"воссоздание виртуальных сред для получения новых сценариев."

#: ../../whatsnew/3.7.rst:2553
msgid "Notable changes in Python 3.7.6"
msgstr "Заметные изменения в Python 3.7.6"

#: ../../whatsnew/3.7.rst:2555
msgid ""
"Due to significant security concerns, the *reuse_address* parameter of :meth:"
"`asyncio.loop.create_datagram_endpoint` is no longer supported. This is "
"because of the behavior of the socket option ``SO_REUSEADDR`` in UDP. For "
"more details, see the documentation for ``loop.create_datagram_endpoint()``. "
"(Contributed by Kyle Stanley, Antoine Pitrou, and Yury Selivanov in :issue:"
"`37228`.)"
msgstr ""
"Из соображений безопасности параметр *reuse_address* :meth:`asyncio.loop."
"create_datagram_endpoint` больше не поддерживается. Это связано с поведением "
"опции сокета SO_REUSEADDR в UDP. Более подробную информацию смотрите в "
"документации по ``loop.create_datagram_endpoint()``. (Предоставлено Кайлом "
"Стэнли, Антуаном Питру и Юрием Селивановым в :issue:`37228`.)"

#: ../../whatsnew/3.7.rst:2563
msgid "Notable changes in Python 3.7.10"
msgstr "Заметные изменения в Python 3.7.10"

#: ../../whatsnew/3.7.rst:2565
msgid ""
"Earlier Python versions allowed using both ``;`` and ``&`` as query "
"parameter separators in :func:`urllib.parse.parse_qs` and :func:`urllib."
"parse.parse_qsl`.  Due to security concerns, and to conform with newer W3C "
"recommendations, this has been changed to allow only a single separator key, "
"with ``&`` as the default.  This change also affects :func:`cgi.parse` and :"
"func:`cgi.parse_multipart` as they use the affected functions internally. "
"For more details, please see their respective documentation. (Contributed by "
"Adam Goldschmidt, Senthil Kumaran and Ken Jin in :issue:`42967`.)"
msgstr ""
"Более ранние версии Python позволяли использовать как ``;``, так и ``&`` в "
"качестве разделителей параметров запроса в :func:`urllib.parse.parse_qs` и :"
"func:`urllib.parse.parse_qsl`. Из соображений безопасности и в соответствии "
"с новыми рекомендациями W3C это было изменено, чтобы разрешить только один "
"ключ-разделитель с ``&`` по умолчанию. Это изменение также затрагивает :func:"
"`cgi.parse` и :func:`cgi.parse_multipart`, поскольку они используют "
"затронутые функции внутри себя. Более подробную информацию можно найти в "
"соответствующей документации. (Предоставлено Адамом Гольдшмидтом, Сентилом "
"Кумараном и Кеном Джином в :issue:`42967`.)"
