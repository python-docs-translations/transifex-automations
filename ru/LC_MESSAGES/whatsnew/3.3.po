# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# Roustam Khamidoulline, 2024
# Rafael Fontenelle <rffontenelle@gmail.com>, 2024
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.12\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-01-03 14:53+0000\n"
"PO-Revision-Date: 2024-05-11 00:34+0000\n"
"Last-Translator: Rafael Fontenelle <rffontenelle@gmail.com>, 2024\n"
"Language-Team: Russian (https://app.transifex.com/python-doc/teams/5390/"
"ru/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ru\n"
"Plural-Forms: nplurals=4; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && "
"n%10<=4 && (n%100<12 || n%100>14) ? 1 : n%10==0 || (n%10>=5 && n%10<=9) || "
"(n%100>=11 && n%100<=14)? 2 : 3);\n"

#: ../../whatsnew/3.3.rst:3
msgid "What's New In Python 3.3"
msgstr "Что нового в Python 3.3"

#: ../../whatsnew/3.3.rst:45
msgid ""
"This article explains the new features in Python 3.3, compared to 3.2. "
"Python 3.3 was released on September 29, 2012.  For full details, see the "
"`changelog <https://docs.python.org/3.3/whatsnew/changelog.html>`_."
msgstr ""
"В этой статье описываются новые возможности Python 3.3 по сравнению с "
"версией 3.2. Версия Python 3.3 была выпущена 29 сентября 2012 года. Более "
"подробную информацию смотрите в `Списке изменений <https://docs.python."
"org/3.3/whatsnew/changelog.html>`_."

#: ../../whatsnew/3.3.rst:51
msgid ":pep:`398` - Python 3.3 Release Schedule"
msgstr ":pep:`398` - Расписание выхода Python 3.3"

#: ../../whatsnew/3.3.rst:55
msgid "Summary -- Release highlights"
msgstr "Краткое описание - Основные моменты релиза"

#: ../../whatsnew/3.3.rst:60
msgid "New syntax features:"
msgstr "Новые возможности синтаксиса:"

#: ../../whatsnew/3.3.rst:62
msgid ""
"New ``yield from`` expression for :ref:`generator delegation <pep-380>`."
msgstr ""
"Новое выражение ``yield from`` для :ref:`делегирования генератора <pep-380>`."

#: ../../whatsnew/3.3.rst:63
msgid "The ``u'unicode'`` syntax is accepted again for :class:`str` objects."
msgstr "Синтаксис ``u'unicode'`` снова принимается для объектов :class:`str`."

#: ../../whatsnew/3.3.rst:65
msgid "New library modules:"
msgstr "Новые библиотечные модули:"

#: ../../whatsnew/3.3.rst:67
msgid ":mod:`faulthandler` (helps debugging low-level crashes)"
msgstr ":mod:`faulthandler` (помогает отлаживать низкоуровневые сбои)"

#: ../../whatsnew/3.3.rst:68
msgid ""
":mod:`ipaddress` (high-level objects representing IP addresses and masks)"
msgstr ""
":mod:`ipaddress` (объекты высокого уровня, представляющие IP-адреса и маски)"

#: ../../whatsnew/3.3.rst:69
msgid ":mod:`lzma` (compress data using the XZ / LZMA algorithm)"
msgstr ":mod:`lzma` (сжимать данные по алгоритму XZ/LZMA)"

#: ../../whatsnew/3.3.rst:70
msgid ""
":mod:`unittest.mock` (replace parts of your system under test with mock "
"objects)"
msgstr ""
":mod:`unittest.mock` (замените части тестируемой системы фиктивными "
"объектами)"

#: ../../whatsnew/3.3.rst:71
msgid ""
":mod:`venv` (Python :ref:`virtual environments <pep-405>`, as in the popular "
"``virtualenv`` package)"
msgstr ""
":mod:`venv` (Python :ref:`виртуальные среды <pep-405>`, как в популярном "
"пакете ``virtualenv``)"

#: ../../whatsnew/3.3.rst:74
msgid "New built-in features:"
msgstr "Новые встроенные функции:"

#: ../../whatsnew/3.3.rst:76
msgid "Reworked :ref:`I/O exception hierarchy <pep-3151>`."
msgstr "Переработана :ref:`Иерархия исключений ввода-вывода <pep-3151>`."

#: ../../whatsnew/3.3.rst:78
msgid "Implementation improvements:"
msgstr "Улучшения реализации:"

#: ../../whatsnew/3.3.rst:80
msgid ""
"Rewritten :ref:`import machinery <importlib>` based on :mod:`importlib`."
msgstr ""
"Переписано импортное оборудование <importlib>` на основе :mod:`importlib`."

#: ../../whatsnew/3.3.rst:81
msgid "More compact :ref:`unicode strings <pep-393>`."
msgstr "Более компактные :ref:`строки Юникода <pep-393>`."

#: ../../whatsnew/3.3.rst:82
msgid "More compact :ref:`attribute dictionaries <pep-412>`."
msgstr "Более компактные :ref:`словари атрибутов <pep-412>`."

#: ../../whatsnew/3.3.rst:84
msgid "Significantly Improved Library Modules:"
msgstr "Значительно улучшенные библиотечные модули:"

#: ../../whatsnew/3.3.rst:86
msgid "C Accelerator for the :ref:`decimal <new-decimal>` module."
msgstr "Ускоритель C для модуля :ref:`decimal <new-decimal>`."

#: ../../whatsnew/3.3.rst:87
msgid ""
"Better unicode handling in the :ref:`email <new-email>` module (:term:"
"`provisional <provisional package>`)."
msgstr ""
"Улучшена обработка юникода в модуле :ref:`email <new-email>` (:term:"
"`provisional <provisional package>`)."

#: ../../whatsnew/3.3.rst:90
msgid "Security improvements:"
msgstr "Улучшения безопасности:"

#: ../../whatsnew/3.3.rst:92
msgid "Hash randomization is switched on by default."
msgstr "Рандомизация хеша включена по умолчанию."

#: ../../whatsnew/3.3.rst:94
msgid "Please read on for a comprehensive list of user-facing changes."
msgstr ""
"Пожалуйста, прочтите полный список изменений, с которыми сталкиваются "
"пользователи."

#: ../../whatsnew/3.3.rst:100
msgid "PEP 405: Virtual Environments"
msgstr "PEP 405: Виртуальные среды"

#: ../../whatsnew/3.3.rst:102
msgid ""
"Virtual environments help create separate Python setups while sharing a "
"system-wide base install, for ease of maintenance.  Virtual environments "
"have their own set of private site packages (i.e. locally installed "
"libraries), and are optionally segregated from the system-wide site "
"packages.  Their concept and implementation are inspired by the popular "
"``virtualenv`` third-party package, but benefit from tighter integration "
"with the interpreter core."
msgstr ""
"Виртуальные среды помогают создавать отдельные установки Python, "
"одновременно используя общесистемную базовую установку для упрощения "
"обслуживания. Виртуальные среды имеют собственный набор пакетов частного "
"сайта (т. е. локально установленных библиотек) и могут быть отделены от "
"общесистемных пакетов сайта. Их концепция и реализация вдохновлены "
"популярным сторонним пакетом virtualenv, но выигрывают от более тесной "
"интеграции с ядром интерпретатора."

#: ../../whatsnew/3.3.rst:110
msgid ""
"This PEP adds the :mod:`venv` module for programmatic access, and the "
"``pyvenv`` script for command-line access and administration.  The Python "
"interpreter checks for a ``pyvenv.cfg``, file whose existence signals the "
"base of a virtual environment's directory tree."
msgstr ""
"Этот PEP добавляет модуль :mod:`venv` для программного доступа и скрипт "
"pyvenv для доступа и администрирования из командной строки. Интерпретатор "
"Python проверяет наличие файла ``pyvenv.cfg``, существование которого "
"сигнализирует о базе дерева каталогов виртуальной среды."

#: ../../whatsnew/3.3.rst:118
msgid ":pep:`405` - Python Virtual Environments"
msgstr ":pep:`405` - Виртуальные среды Python"

#: ../../whatsnew/3.3.rst:119
msgid "PEP written by Carl Meyer; implementation by Carl Meyer and Vinay Sajip"
msgstr ""
"PEP, написанный Карлом Мейером; реализация Карла Мейера и Виная Саджипа"

#: ../../whatsnew/3.3.rst:123
msgid "PEP 420: Implicit Namespace Packages"
msgstr "PEP 420: пакеты неявного пространства имен"

#: ../../whatsnew/3.3.rst:125
msgid ""
"Native support for package directories that don't require ``__init__.py`` "
"marker files and can automatically span multiple path segments (inspired by "
"various third party approaches to namespace packages, as described in :pep:"
"`420`)"
msgstr ""
"Встроенная поддержка каталогов пакетов, которые не требуют файлов маркеров "
"``__init__.py`` и могут автоматически охватывать несколько сегментов пути "
"(на основе различных сторонних подходов к пакетам пространства имен, как "
"описано в :pep:`420`)"

#: ../../whatsnew/3.3.rst:132
msgid ":pep:`420` - Implicit Namespace Packages"
msgstr ":pep:`420` - Пакеты неявного пространства имен"

#: ../../whatsnew/3.3.rst:133
msgid ""
"PEP written by Eric V. Smith; implementation by Eric V. Smith and Barry "
"Warsaw"
msgstr ""
"PEP, написанный Эриком В. Смитом; реализация Эрика В. Смита и Барри Варшавы"

#: ../../whatsnew/3.3.rst:140
msgid ""
"PEP 3118: New memoryview implementation and buffer protocol documentation"
msgstr ""
"PEP 3118: новая реализация MemoryView и документация по протоколу буфера."

#: ../../whatsnew/3.3.rst:142
msgid "The implementation of :pep:`3118` has been significantly improved."
msgstr "Реализация :pep:`3118` была значительно улучшена."

#: ../../whatsnew/3.3.rst:144
msgid ""
"The new memoryview implementation comprehensively fixes all ownership and "
"lifetime issues of dynamically allocated fields in the Py_buffer struct that "
"led to multiple crash reports. Additionally, several functions that crashed "
"or returned incorrect results for non-contiguous or multi-dimensional input "
"have been fixed."
msgstr ""
"Новая реализация Memoryview полностью устраняет все проблемы владения и "
"срока службы динамически выделяемых полей в структуре Py_buffer, которые "
"приводили к множественным отчетам о сбоях. Кроме того, исправлено несколько "
"функций, которые приводили к сбою или возвращали неправильные результаты для "
"несмежных или многомерных входных данных."

#: ../../whatsnew/3.3.rst:150
msgid ""
"The memoryview object now has a PEP-3118 compliant getbufferproc() that "
"checks the consumer's request type. Many new features have been added, most "
"of them work in full generality for non-contiguous arrays and arrays with "
"suboffsets."
msgstr ""
"Объект Memoryview теперь имеет функцию getbufferproc(), совместимую с "
"PEP-3118, которая проверяет тип запроса потребителя. Было добавлено "
"множество новых функций, большинство из которых в целом работают для "
"несмежных массивов и массивов с подсмещениями."

#: ../../whatsnew/3.3.rst:155
msgid ""
"The documentation has been updated, clearly spelling out responsibilities "
"for both exporters and consumers. Buffer request flags are grouped into "
"basic and compound flags. The memory layout of non-contiguous and multi-"
"dimensional NumPy-style arrays is explained."
msgstr ""
"Документация была обновлена, в ней четко прописаны обязанности как "
"экспортеров, так и потребителей. Флаги запроса буфера сгруппированы в "
"базовые и составные флаги. Объясняется расположение памяти несмежных и "
"многомерных массивов в стиле NumPy."

#: ../../whatsnew/3.3.rst:161 ../../whatsnew/3.3.rst:1125
msgid "Features"
msgstr "Особенности"

#: ../../whatsnew/3.3.rst:163
msgid ""
"All native single character format specifiers in struct module syntax "
"(optionally prefixed with '@') are now supported."
msgstr ""
"Теперь поддерживаются все собственные спецификаторы односимвольного формата "
"в синтаксисе модуля структуры (необязательно с префиксом «@»)."

#: ../../whatsnew/3.3.rst:166
msgid ""
"With some restrictions, the cast() method allows changing of format and "
"shape of C-contiguous arrays."
msgstr ""
"С некоторыми ограничениями метод cast() позволяет изменять формат и форму C-"
"непрерывных массивов."

#: ../../whatsnew/3.3.rst:169
msgid ""
"Multi-dimensional list representations are supported for any array type."
msgstr ""
"Представления многомерных списков поддерживаются для любого типа массива."

#: ../../whatsnew/3.3.rst:171
msgid "Multi-dimensional comparisons are supported for any array type."
msgstr "Многомерные сравнения поддерживаются для любого типа массива."

#: ../../whatsnew/3.3.rst:173
msgid ""
"One-dimensional memoryviews of hashable (read-only) types with formats B, b "
"or c are now hashable.  (Contributed by Antoine Pitrou in :issue:`13411`.)"
msgstr ""
"Одномерные представления памяти хешируемых типов (только для чтения) с "
"форматами B, b или c теперь являются хэшируемыми. (Предоставлено Антуаном "
"Питру в :issue:`13411`.)"

#: ../../whatsnew/3.3.rst:176
msgid ""
"Arbitrary slicing of any 1-D arrays type is supported. For example, it is "
"now possible to reverse a memoryview in *O*\\ (1) by using a negative step."
msgstr ""
"Поддерживается произвольная нарезка любого типа одномерных массивов. "
"Например, теперь можно перевернуть представление памяти в *O*\\ (1), "
"используя отрицательный шаг."

#: ../../whatsnew/3.3.rst:180 ../../whatsnew/3.3.rst:1135
msgid "API changes"
msgstr "Изменения API"

#: ../../whatsnew/3.3.rst:182
msgid "The maximum number of dimensions is officially limited to 64."
msgstr "Максимальное количество измерений официально ограничено 64."

#: ../../whatsnew/3.3.rst:184
msgid ""
"The representation of empty shape, strides and suboffsets is now an empty "
"tuple instead of ``None``."
msgstr ""
"Представление пустой формы, шагов и подсмещений теперь представляет собой "
"пустой кортеж вместо «Нет»."

#: ../../whatsnew/3.3.rst:187
msgid ""
"Accessing a memoryview element with format 'B' (unsigned bytes) now returns "
"an integer (in accordance with the struct module syntax). For returning a "
"bytes object the view must be cast to 'c' first."
msgstr ""
"Доступ к элементу MemoryView в формате «B» (беззнаковые байты) теперь "
"возвращает целое число (в соответствии с синтаксисом модуля struct). Для "
"возврата объекта байтов представление сначала должно быть приведено к «c»."

#: ../../whatsnew/3.3.rst:191
msgid ""
"memoryview comparisons now use the logical structure of the operands and "
"compare all array elements by value. All format strings in struct module "
"syntax are supported. Views with unrecognised format strings are still "
"permitted, but will always compare as unequal, regardless of view contents."
msgstr ""
"Сравнения MemoryView теперь используют логическую структуру операндов и "
"сравнивают все элементы массива по значению. Поддерживаются все строки "
"формата в синтаксисе модуля struct. Представления с нераспознанными строками "
"формата по-прежнему разрешены, но всегда будут сравниваться как неравные, "
"независимо от содержимого представления."

#: ../../whatsnew/3.3.rst:197
msgid ""
"For further changes see `Build and C API Changes`_ and `Porting C code`_."
msgstr ""
"Дополнительные изменения см. в разделах «Изменения API сборки и C» и "
"«Перенос кода C»."

#: ../../whatsnew/3.3.rst:199
msgid "(Contributed by Stefan Krah in :issue:`10181`.)"
msgstr "(Предоставлено Стефаном Кра в :issue:`10181`.)"

#: ../../whatsnew/3.3.rst:203
msgid ":pep:`3118` - Revising the Buffer Protocol"
msgstr ":pep:`3118` - Пересмотр протокола буфера"

#: ../../whatsnew/3.3.rst:209
msgid "PEP 393: Flexible String Representation"
msgstr "PEP 393: гибкое строковое представление"

#: ../../whatsnew/3.3.rst:211
msgid ""
"The Unicode string type is changed to support multiple internal "
"representations, depending on the character with the largest Unicode ordinal "
"(1, 2, or 4 bytes) in the represented string.  This allows a space-efficient "
"representation in common cases, but gives access to full UCS-4 on all "
"systems.  For compatibility with existing APIs, several representations may "
"exist in parallel; over time, this compatibility should be phased out."
msgstr ""
"Тип строки Юникода изменен для поддержки нескольких внутренних представлений "
"в зависимости от символа с наибольшим порядковым номером Юникода (1, 2 или 4 "
"байта) в представляемой строке. Это обеспечивает эффективное представление в "
"общих случаях, но дает доступ к полной версии UCS-4 во всех системах. Для "
"совместимости с существующими API несколько представлений могут существовать "
"параллельно; со временем от этой совместимости следует отказаться."

#: ../../whatsnew/3.3.rst:218
msgid "On the Python side, there should be no downside to this change."
msgstr "Со стороны Python у этого изменения не должно быть недостатков."

#: ../../whatsnew/3.3.rst:220
msgid ""
"On the C API side, :pep:`393` is fully backward compatible.  The legacy API "
"should remain available at least five years.  Applications using the legacy "
"API will not fully benefit of the memory reduction, or - worse - may use a "
"bit more memory, because Python may have to maintain two versions of each "
"string (in the legacy format and in the new efficient storage)."
msgstr ""
"Что касается C API, :pep:`393` полностью обратно совместим. Устаревший API "
"должен оставаться доступным как минимум пять лет. Приложения, использующие "
"устаревший API, не получат полной выгоды от сокращения памяти или, что еще "
"хуже, могут использовать немного больше памяти, поскольку Python, возможно, "
"придется поддерживать две версии каждой строки (в устаревшем формате и в "
"новом эффективном хранилище)."

#: ../../whatsnew/3.3.rst:227
msgid "Functionality"
msgstr "Функциональность"

#: ../../whatsnew/3.3.rst:229
msgid "Changes introduced by :pep:`393` are the following:"
msgstr "Изменения, внесенные :pep:`393`, следующие:"

#: ../../whatsnew/3.3.rst:231
msgid ""
"Python now always supports the full range of Unicode code points, including "
"non-BMP ones (i.e. from ``U+0000`` to ``U+10FFFF``).  The distinction "
"between narrow and wide builds no longer exists and Python now behaves like "
"a wide build, even under Windows."
msgstr ""
"Python теперь всегда поддерживает полный диапазон кодовых точек Unicode, "
"включая коды, отличные от BMP (т.е. от ``U+0000`` до ``U+10FFFF``). Различия "
"между узкими и широкими сборками больше не существует, и Python теперь ведет "
"себя как широкая сборка, даже под Windows."

#: ../../whatsnew/3.3.rst:236
msgid ""
"With the death of narrow builds, the problems specific to narrow builds have "
"also been fixed, for example:"
msgstr ""
"С прекращением узких сборок были исправлены и проблемы, характерные для "
"узких сборок, например:"

#: ../../whatsnew/3.3.rst:239
msgid ""
":func:`len` now always returns 1 for non-BMP characters, so "
"``len('\\U0010FFFF') == 1``;"
msgstr ""
":func:`len` теперь всегда возвращает 1 для символов, отличных от BMP, "
"поэтому ``len('\\U0010FFFF') == 1``;"

#: ../../whatsnew/3.3.rst:242
msgid ""
"surrogate pairs are not recombined in string literals, so "
"``'\\uDBFF\\uDFFF' != '\\U0010FFFF'``;"
msgstr ""
"суррогатные пары не объединяются в строковые литералы, поэтому "
"``'\\uDBFF\\uDFFF' != '\\U0010FFFF'``;"

#: ../../whatsnew/3.3.rst:245
msgid ""
"indexing or slicing non-BMP characters returns the expected value, so "
"``'\\U0010FFFF'[0]`` now returns ``'\\U0010FFFF'`` and not ``'\\uDBFF'``;"
msgstr ""
"индексирование или нарезка символов, отличных от BMP, возвращает ожидаемое "
"значение, поэтому ``'\\U0010FFFF'[0]`` теперь возвращает ``'\\U0010FFFF'``, "
"а не ``'\\uDBFF'``;"

#: ../../whatsnew/3.3.rst:248
msgid ""
"all other functions in the standard library now correctly handle non-BMP "
"code points."
msgstr ""
"все остальные функции стандартной библиотеки теперь правильно обрабатывают "
"кодовые точки, отличные от BMP."

#: ../../whatsnew/3.3.rst:251
msgid ""
"The value of :data:`sys.maxunicode` is now always ``1114111`` (``0x10FFFF`` "
"in hexadecimal).  The :c:func:`!PyUnicode_GetMax` function still returns "
"either ``0xFFFF`` or ``0x10FFFF`` for backward compatibility, and it should "
"not be used with the new Unicode API (see :issue:`13054`)."
msgstr ""
"Значение :data:`sys.maxunicode` теперь всегда равно ``1114111`` "
"(``0x10FFFF`` в шестнадцатеричном формате). Функция :c:func:`!"
"PyUnicode_GetMax` по-прежнему возвращает либо ``0xFFFF``, либо ``0x10FFFF`` "
"для обратной совместимости, и ее не следует использовать с новым Unicode API "
"(см. :issue:`13054`)."

#: ../../whatsnew/3.3.rst:256
msgid "The :file:`./configure` flag ``--with-wide-unicode`` has been removed."
msgstr "Флаг :file:`./configure` ``--with-wide-unicode`` был удален."

#: ../../whatsnew/3.3.rst:259
msgid "Performance and resource usage"
msgstr "Производительность и использование ресурсов"

#: ../../whatsnew/3.3.rst:261
msgid ""
"The storage of Unicode strings now depends on the highest code point in the "
"string:"
msgstr ""
"Хранение строк Юникода теперь зависит от наивысшей кодовой точки в строке:"

#: ../../whatsnew/3.3.rst:263
msgid ""
"pure ASCII and Latin1 strings (``U+0000-U+00FF``) use 1 byte per code point;"
msgstr ""
"Строки чистого ASCII и Latin1 (``U+0000-U+00FF``) используют 1 байт на "
"кодовую точку;"

#: ../../whatsnew/3.3.rst:265
msgid "BMP strings (``U+0000-U+FFFF``) use 2 bytes per code point;"
msgstr "Строки BMP (``U+0000-U+FFFF``) используют 2 байта на кодовую точку;"

#: ../../whatsnew/3.3.rst:267
msgid "non-BMP strings (``U+10000-U+10FFFF``) use 4 bytes per code point."
msgstr ""
"Строки, отличные от BMP (``U+10000-U+10FFFF``), используют 4 байта на "
"кодовую точку."

#: ../../whatsnew/3.3.rst:269
msgid ""
"The net effect is that for most applications, memory usage of string storage "
"should decrease significantly - especially compared to former wide unicode "
"builds - as, in many cases, strings will be pure ASCII even in international "
"contexts (because many strings store non-human language data, such as XML "
"fragments, HTTP headers, JSON-encoded data, etc.).  We also hope that it "
"will, for the same reasons, increase CPU cache efficiency on non-trivial "
"applications. The memory usage of Python 3.3 is two to three times smaller "
"than Python 3.2, and a little bit better than Python 2.7, on a Django "
"benchmark (see the PEP for details)."
msgstr ""
"Конечным эффектом является то, что для большинства приложений использование "
"памяти для хранения строк должно значительно уменьшиться - особенно по "
"сравнению с предыдущими широкими сборками Unicode - поскольку во многих "
"случаях строки будут чистыми ASCII даже в международных контекстах "
"(поскольку многие строки хранят нечеловеческий язык). данные, такие как "
"фрагменты XML, заголовки HTTP, данные в формате JSON и т. д.). Мы также "
"надеемся, что по тем же причинам это повысит эффективность кэша ЦП в "
"нетривиальных приложениях. Использование памяти Python 3.3 в два-три раза "
"меньше, чем Python 3.2, и немного лучше, чем Python 2.7, в тесте Django "
"(подробности см. в PEP)."

#: ../../whatsnew/3.3.rst:282
msgid ":pep:`393` - Flexible String Representation"
msgstr ":pep:`393` - Гибкое строковое представление"

#: ../../whatsnew/3.3.rst:283
msgid ""
"PEP written by Martin von Löwis; implementation by Torsten Becker and Martin "
"von Löwis."
msgstr ""
"PEP, написанный Мартином фон Лёвисом; реализация Торстена Беккера и Мартина "
"фон Лёвиса."

#: ../../whatsnew/3.3.rst:290
msgid "PEP 397: Python Launcher for Windows"
msgstr "PEP 397: Программа запуска Python для Windows"

#: ../../whatsnew/3.3.rst:292
msgid ""
"The Python 3.3 Windows installer now includes a ``py`` launcher application "
"that can be used to launch Python applications in a version independent "
"fashion."
msgstr ""
"Установщик Python 3.3 для Windows теперь включает в себя приложение запуска "
"``py``, которое можно использовать для запуска приложений Python независимо "
"от версии."

#: ../../whatsnew/3.3.rst:296
msgid ""
"This launcher is invoked implicitly when double-clicking ``*.py`` files. If "
"only a single Python version is installed on the system, that version will "
"be used to run the file. If multiple versions are installed, the most recent "
"version is used by default, but this can be overridden by including a Unix-"
"style \"shebang line\" in the Python script."
msgstr ""
"Эта программа запуска вызывается неявно при двойном щелчке по файлам ``*."
"py``. Если в системе установлена ​​только одна версия Python, эта версия будет "
"использоваться для запуска файла. Если установлено несколько версий, по "
"умолчанию используется самая последняя версия, но ее можно переопределить, "
"включив в сценарий Python «строку shebang» в стиле Unix."

#: ../../whatsnew/3.3.rst:302
msgid ""
"The launcher can also be used explicitly from the command line as the ``py`` "
"application. Running ``py`` follows the same version selection rules as "
"implicitly launching scripts, but a more specific version can be selected by "
"passing appropriate arguments (such as ``-3`` to request Python 3 when "
"Python 2 is also installed, or ``-2.6`` to specifically request an earlier "
"Python version when a more recent version is installed)."
msgstr ""
"Средство запуска также можно использовать явно из командной строки как "
"приложение ``py``. Запуск ``py`` следует тем же правилам выбора версии, что "
"и неявный запуск скриптов, но можно выбрать более конкретную версию, передав "
"соответствующие аргументы (например, ``-3`` для запроса Python 3, когда "
"также установлен Python 2, или ``-2.6`` для запроса более ранней версии "
"Python при установке более новой версии)."

#: ../../whatsnew/3.3.rst:309
msgid ""
"In addition to the launcher, the Windows installer now includes an option to "
"add the newly installed Python to the system PATH.  (Contributed by Brian "
"Curtin in :issue:`3561`.)"
msgstr ""
"В дополнение к средству запуска установщик Windows теперь включает "
"возможность добавления вновь установленного Python в системную переменную "
"PATH. (Предоставлено Брайаном Кертином в :issue:`3561`.)"

#: ../../whatsnew/3.3.rst:315
msgid ":pep:`397` - Python Launcher for Windows"
msgstr ":pep:`397` - Программа запуска Python для Windows"

#: ../../whatsnew/3.3.rst:316
msgid ""
"PEP written by Mark Hammond and Martin v. Löwis; implementation by Vinay "
"Sajip."
msgstr ""
"PEP, написанное Марком Хаммондом и Мартином против Лёвиса; реализация Виная "
"Саджипа."

#: ../../whatsnew/3.3.rst:319
msgid "Launcher documentation: :ref:`launcher`"
msgstr "Документация по лаунчеру: :ref:`launcher`"

#: ../../whatsnew/3.3.rst:321
msgid "Installer PATH modification: :ref:`windows-path-mod`"
msgstr "Изменение PATH установщика: :ref:`windows-path-mod`"

#: ../../whatsnew/3.3.rst:327
msgid "PEP 3151: Reworking the OS and IO exception hierarchy"
msgstr "PEP 3151: переработка иерархии исключений ОС и ввода-вывода"

#: ../../whatsnew/3.3.rst:329
msgid ""
"The hierarchy of exceptions raised by operating system errors is now both "
"simplified and finer-grained."
msgstr ""
"Иерархия исключений, вызываемых ошибками операционной системы, теперь "
"упрощена и детализирована."

#: ../../whatsnew/3.3.rst:332
msgid ""
"You don't have to worry anymore about choosing the appropriate exception "
"type between :exc:`OSError`, :exc:`IOError`, :exc:`EnvironmentError`, :exc:"
"`WindowsError`, :exc:`mmap.error`, :exc:`socket.error` or :exc:`select."
"error`.  All these exception types are now only one: :exc:`OSError`.  The "
"other names are kept as aliases for compatibility reasons."
msgstr ""
"Вам больше не нужно беспокоиться о выборе подходящего типа исключения между :"
"exc:`OSError`, :exc:`IOError`, :exc:`EnvironmentError`, :exc:"
"`WindowsError`, :exc:`mmap.error` `, :exc:`socket.error` или :exc:`select."
"error`. Все эти типы исключений теперь только один: :exc:`OSError`. "
"Остальные имена сохраняются как псевдонимы по соображениям совместимости."

#: ../../whatsnew/3.3.rst:339
msgid ""
"Also, it is now easier to catch a specific error condition.  Instead of "
"inspecting the ``errno`` attribute (or ``args[0]``) for a particular "
"constant from the :mod:`errno` module, you can catch the adequate :exc:"
"`OSError` subclass.  The available subclasses are the following:"
msgstr ""
"Кроме того, теперь стало легче обнаружить конкретную ошибку. Вместо проверки "
"атрибута ``errno`` (или ``args[0]``) на наличие конкретной константы из "
"модуля :mod:`errno`, вы можете перехватить соответствующий подкласс :exc:"
"`OSError`. Доступны следующие подклассы:"

#: ../../whatsnew/3.3.rst:344
msgid ":exc:`BlockingIOError`"
msgstr ":exc:`BlockingIOError`"

#: ../../whatsnew/3.3.rst:345
msgid ":exc:`ChildProcessError`"
msgstr ":exc:`ChildProcessError`"

#: ../../whatsnew/3.3.rst:346
msgid ":exc:`ConnectionError`"
msgstr ":exc:`ConnectionError`"

#: ../../whatsnew/3.3.rst:347
msgid ":exc:`FileExistsError`"
msgstr ":exc:`FileExistsError`"

#: ../../whatsnew/3.3.rst:348
msgid ":exc:`FileNotFoundError`"
msgstr ":exc:`FileNotFoundError`"

#: ../../whatsnew/3.3.rst:349
msgid ":exc:`InterruptedError`"
msgstr ":exc:`InterruptedError`"

#: ../../whatsnew/3.3.rst:350
msgid ":exc:`IsADirectoryError`"
msgstr ":exc:`IsADirectoryError`"

#: ../../whatsnew/3.3.rst:351
msgid ":exc:`NotADirectoryError`"
msgstr ":exc:`NotADirectoryError`"

#: ../../whatsnew/3.3.rst:352
msgid ":exc:`PermissionError`"
msgstr ":exc:`PermissionError`"

#: ../../whatsnew/3.3.rst:353
msgid ":exc:`ProcessLookupError`"
msgstr ":exc:`ProcessLookupError`"

#: ../../whatsnew/3.3.rst:354
msgid ":exc:`TimeoutError`"
msgstr ":exc:`TimeoutError`"

#: ../../whatsnew/3.3.rst:356
msgid "And the :exc:`ConnectionError` itself has finer-grained subclasses:"
msgstr "А сам :exc:`ConnectionError` имеет более мелкие подклассы:"

#: ../../whatsnew/3.3.rst:358
msgid ":exc:`BrokenPipeError`"
msgstr ":exc:`BrokenPipeError`"

#: ../../whatsnew/3.3.rst:359
msgid ":exc:`ConnectionAbortedError`"
msgstr ":exc:`ConnectionAbortedError`"

#: ../../whatsnew/3.3.rst:360
msgid ":exc:`ConnectionRefusedError`"
msgstr ":exc:`ConnectionRefusedError`"

#: ../../whatsnew/3.3.rst:361
msgid ":exc:`ConnectionResetError`"
msgstr ":exc:`ConnectionResetError`"

#: ../../whatsnew/3.3.rst:363
msgid ""
"Thanks to the new exceptions, common usages of the :mod:`errno` can now be "
"avoided.  For example, the following code written for Python 3.2::"
msgstr ""
"Благодаря новым исключениям теперь можно избежать распространенного "
"использования :mod:`errno`. Например, следующий код, написанный для Python "
"3.2:"

#: ../../whatsnew/3.3.rst:366
msgid ""
"from errno import ENOENT, EACCES, EPERM\n"
"\n"
"try:\n"
"    with open(\"document.txt\") as f:\n"
"        content = f.read()\n"
"except IOError as err:\n"
"    if err.errno == ENOENT:\n"
"        print(\"document.txt file is missing\")\n"
"    elif err.errno in (EACCES, EPERM):\n"
"        print(\"You are not allowed to read document.txt\")\n"
"    else:\n"
"        raise"
msgstr ""
"from errno import ENOENT, EACCES, EPERM\n"
"\n"
"try:\n"
"    with open(\"document.txt\") as f:\n"
"        content = f.read()\n"
"except IOError as err:\n"
"    if err.errno == ENOENT:\n"
"        print(\"document.txt file is missing\")\n"
"    elif err.errno in (EACCES, EPERM):\n"
"        print(\"You are not allowed to read document.txt\")\n"
"    else:\n"
"        raise"

#: ../../whatsnew/3.3.rst:379
msgid ""
"can now be written without the :mod:`errno` import and without manual "
"inspection of exception attributes::"
msgstr ""
"теперь можно писать без импорта :mod:`errno` и без ручной проверки атрибутов "
"исключений::"

#: ../../whatsnew/3.3.rst:382
msgid ""
"try:\n"
"    with open(\"document.txt\") as f:\n"
"        content = f.read()\n"
"except FileNotFoundError:\n"
"    print(\"document.txt file is missing\")\n"
"except PermissionError:\n"
"    print(\"You are not allowed to read document.txt\")"
msgstr ""
"try:\n"
"    with open(\"document.txt\") as f:\n"
"        content = f.read()\n"
"except FileNotFoundError:\n"
"    print(\"document.txt file is missing\")\n"
"except PermissionError:\n"
"    print(\"You are not allowed to read document.txt\")"

#: ../../whatsnew/3.3.rst:392
msgid ":pep:`3151` - Reworking the OS and IO Exception Hierarchy"
msgstr ":pep:`3151` - Переработка иерархии исключений ОС и ввода-вывода."

#: ../../whatsnew/3.3.rst:393
msgid "PEP written and implemented by Antoine Pitrou"
msgstr "PEP написан и реализован Антуаном Питру."

#: ../../whatsnew/3.3.rst:402
msgid "PEP 380: Syntax for Delegating to a Subgenerator"
msgstr "PEP 380: Синтаксис делегирования подгенератору"

#: ../../whatsnew/3.3.rst:404
msgid ""
"PEP 380 adds the ``yield from`` expression, allowing a :term:`generator` to "
"delegate part of its operations to another generator. This allows a section "
"of code containing :keyword:`yield` to be factored out and placed in another "
"generator. Additionally, the subgenerator is allowed to return with a value, "
"and the value is made available to the delegating generator."
msgstr ""
"PEP 380 добавляет выражение «yield from», позволяющее генератору "
"делегировать часть своих операций другому генератору. Это позволяет вынести "
"часть кода, содержащую :keyword:`yield`, и поместить в другой генератор. "
"Кроме того, подгенератору разрешено возвращать значение, и это значение "
"становится доступным генератору, делегирующему делегирование."

#: ../../whatsnew/3.3.rst:411
msgid ""
"While designed primarily for use in delegating to a subgenerator, the "
"``yield from`` expression actually allows delegation to arbitrary "
"subiterators."
msgstr ""
"Хотя выражение «yield from» разработано в первую очередь для использования "
"при делегировании подгенератору, оно фактически позволяет делегировать "
"произвольным подитераторам."

#: ../../whatsnew/3.3.rst:414
msgid ""
"For simple iterators, ``yield from iterable`` is essentially just a "
"shortened form of ``for item in iterable: yield item``::"
msgstr ""
"Для простых итераторов «yield from iterable» — это, по сути, просто "
"сокращенная форма «for item in iterable: yield item»::"

#: ../../whatsnew/3.3.rst:417
msgid ""
">>> def g(x):\n"
"...     yield from range(x, 0, -1)\n"
"...     yield from range(x)\n"
"...\n"
">>> list(g(5))\n"
"[5, 4, 3, 2, 1, 0, 1, 2, 3, 4]"
msgstr ""
">>> def g(x):\n"
"...     yield from range(x, 0, -1)\n"
"...     yield from range(x)\n"
"...\n"
">>> list(g(5))\n"
"[5, 4, 3, 2, 1, 0, 1, 2, 3, 4]"

#: ../../whatsnew/3.3.rst:424
msgid ""
"However, unlike an ordinary loop, ``yield from`` allows subgenerators to "
"receive sent and thrown values directly from the calling scope, and return a "
"final value to the outer generator::"
msgstr ""
"Однако, в отличие от обычного цикла, «yield from» позволяет подгенераторам "
"получать отправленные и выброшенные значения непосредственно из вызывающей "
"области и возвращать окончательное значение внешнему генератору:"

#: ../../whatsnew/3.3.rst:428
msgid ""
">>> def accumulate():\n"
"...     tally = 0\n"
"...     while 1:\n"
"...         next = yield\n"
"...         if next is None:\n"
"...             return tally\n"
"...         tally += next\n"
"...\n"
">>> def gather_tallies(tallies):\n"
"...     while 1:\n"
"...         tally = yield from accumulate()\n"
"...         tallies.append(tally)\n"
"...\n"
">>> tallies = []\n"
">>> acc = gather_tallies(tallies)\n"
">>> next(acc)  # Ensure the accumulator is ready to accept values\n"
">>> for i in range(4):\n"
"...     acc.send(i)\n"
"...\n"
">>> acc.send(None)  # Finish the first tally\n"
">>> for i in range(5):\n"
"...     acc.send(i)\n"
"...\n"
">>> acc.send(None)  # Finish the second tally\n"
">>> tallies\n"
"[6, 10]"
msgstr ""
">>> def accumulate():\n"
"...     tally = 0\n"
"...     while 1:\n"
"...         next = yield\n"
"...         if next is None:\n"
"...             return tally\n"
"...         tally += next\n"
"...\n"
">>> def gather_tallies(tallies):\n"
"...     while 1:\n"
"...         tally = yield from accumulate()\n"
"...         tallies.append(tally)\n"
"...\n"
">>> tallies = []\n"
">>> acc = gather_tallies(tallies)\n"
">>> next(acc)  # Ensure the accumulator is ready to accept values\n"
">>> for i in range(4):\n"
"...     acc.send(i)\n"
"...\n"
">>> acc.send(None)  # Finish the first tally\n"
">>> for i in range(5):\n"
"...     acc.send(i)\n"
"...\n"
">>> acc.send(None)  # Finish the second tally\n"
">>> tallies\n"
"[6, 10]"

#: ../../whatsnew/3.3.rst:455
msgid ""
"The main principle driving this change is to allow even generators that are "
"designed to be used with the ``send`` and ``throw`` methods to be split into "
"multiple subgenerators as easily as a single large function can be split "
"into multiple subfunctions."
msgstr ""
"Основной принцип, лежащий в основе этого изменения, заключается в том, чтобы "
"позволить даже генераторам, которые предназначены для использования с "
"методами send и throw, разделяться на несколько подгенераторов так же легко, "
"как одну большую функцию можно разделить на несколько подфункций. ."

#: ../../whatsnew/3.3.rst:462
msgid ":pep:`380` - Syntax for Delegating to a Subgenerator"
msgstr ":pep:`380` - Синтаксис делегирования подгенератору"

#: ../../whatsnew/3.3.rst:463
msgid ""
"PEP written by Greg Ewing; implementation by Greg Ewing, integrated into 3.3 "
"by Renaud Blanch, Ryan Kelly and Nick Coghlan; documentation by Zbigniew "
"Jędrzejewski-Szmek and Nick Coghlan"
msgstr ""
"PEP, написанный Грегом Юингом; реализация Грега Юинга, интегрированная в 3.3 "
"Рено Бланшем, Райаном Келли и Ником Когланом; документация Збигнева "
"Енджеевского-Шмека и Ника Коглана"

#: ../../whatsnew/3.3.rst:469
msgid "PEP 409: Suppressing exception context"
msgstr "PEP 409: Подавление контекста исключения"

#: ../../whatsnew/3.3.rst:471
msgid ""
"PEP 409 introduces new syntax that allows the display of the chained "
"exception context to be disabled. This allows cleaner error messages in "
"applications that convert between exception types::"
msgstr ""
"PEP 409 представляет новый синтаксис, который позволяет отключить "
"отображение связанного контекста исключения. Это позволяет более четко "
"отображать сообщения об ошибках в приложениях, которые преобразуют типы "
"исключений:"

#: ../../whatsnew/3.3.rst:475
msgid ""
">>> class D:\n"
"...     def __init__(self, extra):\n"
"...         self._extra_attributes = extra\n"
"...     def __getattr__(self, attr):\n"
"...         try:\n"
"...             return self._extra_attributes[attr]\n"
"...         except KeyError:\n"
"...             raise AttributeError(attr) from None\n"
"...\n"
">>> D({}).x\n"
"Traceback (most recent call last):\n"
"  File \"<stdin>\", line 1, in <module>\n"
"  File \"<stdin>\", line 8, in __getattr__\n"
"AttributeError: x"
msgstr ""
">>> class D:\n"
"...     def __init__(self, extra):\n"
"...         self._extra_attributes = extra\n"
"...     def __getattr__(self, attr):\n"
"...         try:\n"
"...             return self._extra_attributes[attr]\n"
"...         except KeyError:\n"
"...             raise AttributeError(attr) from None\n"
"...\n"
">>> D({}).x\n"
"Traceback (most recent call last):\n"
"  File \"<stdin>\", line 1, in <module>\n"
"  File \"<stdin>\", line 8, in __getattr__\n"
"AttributeError: x"

#: ../../whatsnew/3.3.rst:490
msgid ""
"Without the ``from None`` suffix to suppress the cause, the original "
"exception would be displayed by default::"
msgstr ""
"Без суффикса from None для подавления причины исходное исключение будет "
"отображаться по умолчанию:"

#: ../../whatsnew/3.3.rst:493
msgid ""
">>> class C:\n"
"...     def __init__(self, extra):\n"
"...         self._extra_attributes = extra\n"
"...     def __getattr__(self, attr):\n"
"...         try:\n"
"...             return self._extra_attributes[attr]\n"
"...         except KeyError:\n"
"...             raise AttributeError(attr)\n"
"...\n"
">>> C({}).x\n"
"Traceback (most recent call last):\n"
"  File \"<stdin>\", line 6, in __getattr__\n"
"KeyError: 'x'\n"
"\n"
"During handling of the above exception, another exception occurred:\n"
"\n"
"Traceback (most recent call last):\n"
"  File \"<stdin>\", line 1, in <module>\n"
"  File \"<stdin>\", line 8, in __getattr__\n"
"AttributeError: x"
msgstr ""
">>> class C:\n"
"...     def __init__(self, extra):\n"
"...         self._extra_attributes = extra\n"
"...     def __getattr__(self, attr):\n"
"...         try:\n"
"...             return self._extra_attributes[attr]\n"
"...         except KeyError:\n"
"...             raise AttributeError(attr)\n"
"...\n"
">>> C({}).x\n"
"Traceback (most recent call last):\n"
"  File \"<stdin>\", line 6, in __getattr__\n"
"KeyError: 'x'\n"
"\n"
"During handling of the above exception, another exception occurred:\n"
"\n"
"Traceback (most recent call last):\n"
"  File \"<stdin>\", line 1, in <module>\n"
"  File \"<stdin>\", line 8, in __getattr__\n"
"AttributeError: x"

#: ../../whatsnew/3.3.rst:514
msgid ""
"No debugging capability is lost, as the original exception context remains "
"available if needed (for example, if an intervening library has incorrectly "
"suppressed valuable underlying details)::"
msgstr ""
"Возможность отладки не теряется, поскольку исходный контекст исключения "
"остается доступным при необходимости (например, если промежуточная "
"библиотека неправильно подавила ценные базовые сведения)::"

#: ../../whatsnew/3.3.rst:518
msgid ""
">>> try:\n"
"...     D({}).x\n"
"... except AttributeError as exc:\n"
"...     print(repr(exc.__context__))\n"
"...\n"
"KeyError('x',)"
msgstr ""
">>> try:\n"
"...     D({}).x\n"
"... except AttributeError as exc:\n"
"...     print(repr(exc.__context__))\n"
"...\n"
"KeyError('x',)"

#: ../../whatsnew/3.3.rst:527
msgid ":pep:`409` - Suppressing exception context"
msgstr ":pep:`409` - Подавление контекста исключения"

#: ../../whatsnew/3.3.rst:528
msgid ""
"PEP written by Ethan Furman; implemented by Ethan Furman and Nick Coghlan."
msgstr ""
"PEP, написанный Итаном Фурманом; реализован Итаном Фурманом и Ником Когланом."

#: ../../whatsnew/3.3.rst:533
msgid "PEP 414: Explicit Unicode literals"
msgstr "PEP 414: явные литералы Юникода"

#: ../../whatsnew/3.3.rst:535
msgid ""
"To ease the transition from Python 2 for Unicode aware Python applications "
"that make heavy use of Unicode literals, Python 3.3 once again supports the "
"\"``u``\" prefix for string literals. This prefix has no semantic "
"significance in Python 3, it is provided solely to reduce the number of "
"purely mechanical changes in migrating to Python 3, making it easier for "
"developers to focus on the more significant semantic changes (such as the "
"stricter default separation of binary and text data)."
msgstr ""
"Чтобы облегчить переход от Python 2 к приложениям Python, поддерживающим "
"Unicode, которые интенсивно используют литералы Unicode, Python 3.3 снова "
"поддерживает префикс «``u``» для строковых литералов. Этот префикс не имеет "
"семантического значения в Python 3, он предусмотрен исключительно для "
"уменьшения количества чисто механических изменений при переходе на Python 3, "
"что позволяет разработчикам сосредоточиться на более значимых семантических "
"изменениях (таких как более строгое разделение двоичных файлов по "
"умолчанию). и текстовые данные)."

#: ../../whatsnew/3.3.rst:545
msgid ":pep:`414` - Explicit Unicode literals"
msgstr ":pep:`414` - Явные литералы Юникода"

#: ../../whatsnew/3.3.rst:546
msgid "PEP written by Armin Ronacher."
msgstr "PEP, написанный Армином Ронахером."

#: ../../whatsnew/3.3.rst:550
msgid "PEP 3155: Qualified name for classes and functions"
msgstr "PEP 3155: Полное имя для классов и функций."

#: ../../whatsnew/3.3.rst:552
msgid ""
"Functions and class objects have a new :attr:`~definition.__qualname__` "
"attribute representing the \"path\" from the module top-level to their "
"definition.  For global functions and classes, this is the same as :attr:"
"`~definition.__name__`. For other functions and classes, it provides better "
"information about where they were actually defined, and how they might be "
"accessible from the global scope."
msgstr ""
"Функции и объекты классов имеют новый атрибут :attr:`~definition."
"__qualname__`, представляющий «путь» от верхнего уровня модуля до их "
"определения. Для глобальных функций и классов это то же самое, что :attr:"
"`~definition.__name__`. Для других функций и классов он предоставляет более "
"подробную информацию о том, где они были фактически определены и как к ним "
"можно получить доступ из глобальной области видимости."

#: ../../whatsnew/3.3.rst:560
msgid "Example with (non-bound) methods::"
msgstr "Пример с (несвязанными) методами::"

#: ../../whatsnew/3.3.rst:562
msgid ""
">>> class C:\n"
"...     def meth(self):\n"
"...         pass\n"
"...\n"
">>> C.meth.__name__\n"
"'meth'\n"
">>> C.meth.__qualname__\n"
"'C.meth'"
msgstr ""
">>> class C:\n"
"...     def meth(self):\n"
"...         pass\n"
"...\n"
">>> C.meth.__name__\n"
"'meth'\n"
">>> C.meth.__qualname__\n"
"'C.meth'"

#: ../../whatsnew/3.3.rst:571
msgid "Example with nested classes::"
msgstr "Пример с вложенными классами::"

#: ../../whatsnew/3.3.rst:573
msgid ""
">>> class C:\n"
"...     class D:\n"
"...         def meth(self):\n"
"...             pass\n"
"...\n"
">>> C.D.__name__\n"
"'D'\n"
">>> C.D.__qualname__\n"
"'C.D'\n"
">>> C.D.meth.__name__\n"
"'meth'\n"
">>> C.D.meth.__qualname__\n"
"'C.D.meth'"
msgstr ""
">>> class C:\n"
"...     class D:\n"
"...         def meth(self):\n"
"...             pass\n"
"...\n"
">>> C.D.__name__\n"
"'D'\n"
">>> C.D.__qualname__\n"
"'C.D'\n"
">>> C.D.meth.__name__\n"
"'meth'\n"
">>> C.D.meth.__qualname__\n"
"'C.D.meth'"

#: ../../whatsnew/3.3.rst:587
msgid "Example with nested functions::"
msgstr "Пример с вложенными функциями::"

#: ../../whatsnew/3.3.rst:589
msgid ""
">>> def outer():\n"
"...     def inner():\n"
"...         pass\n"
"...     return inner\n"
"...\n"
">>> outer().__name__\n"
"'inner'\n"
">>> outer().__qualname__\n"
"'outer.<locals>.inner'"
msgstr ""
">>> def outer():\n"
"...     def inner():\n"
"...         pass\n"
"...     return inner\n"
"...\n"
">>> outer().__name__\n"
"'inner'\n"
">>> outer().__qualname__\n"
"'outer.<locals>.inner'"

#: ../../whatsnew/3.3.rst:599
msgid ""
"The string representation of those objects is also changed to include the "
"new, more precise information::"
msgstr ""
"Строковое представление этих объектов также изменено и включает новую, более "
"точную информацию:"

#: ../../whatsnew/3.3.rst:602
msgid ""
">>> str(C.D)\n"
"\"<class '__main__.C.D'>\"\n"
">>> str(C.D.meth)\n"
"'<function C.D.meth at 0x7f46b9fe31e0>'"
msgstr ""
">>> str(C.D)\n"
"\"<class '__main__.C.D'>\"\n"
">>> str(C.D.meth)\n"
"'<function C.D.meth at 0x7f46b9fe31e0>'"

#: ../../whatsnew/3.3.rst:609
msgid ":pep:`3155` - Qualified name for classes and functions"
msgstr ":pep:`3155` - Полное имя для классов и функций."

#: ../../whatsnew/3.3.rst:610
msgid "PEP written and implemented by Antoine Pitrou."
msgstr "PEP написан и реализован Антуаном Питру."

#: ../../whatsnew/3.3.rst:616
msgid "PEP 412: Key-Sharing Dictionary"
msgstr "PEP 412: словарь совместного использования ключей"

#: ../../whatsnew/3.3.rst:618
msgid ""
"Dictionaries used for the storage of objects' attributes are now able to "
"share part of their internal storage between each other (namely, the part "
"which stores the keys and their respective hashes).  This reduces the memory "
"consumption of programs creating many instances of non-builtin types."
msgstr ""
"Словари, используемые для хранения атрибутов объектов, теперь могут "
"совместно использовать часть своей внутренней памяти (а именно ту часть, в "
"которой хранятся ключи и соответствующие им хеши). Это снижает потребление "
"памяти программами, создающими множество экземпляров невстроенных типов."

#: ../../whatsnew/3.3.rst:625
msgid ":pep:`412` - Key-Sharing Dictionary"
msgstr ":pep:`412` - Словарь совместного использования ключей"

#: ../../whatsnew/3.3.rst:626
msgid "PEP written and implemented by Mark Shannon."
msgstr "PEP написан и реализован Марком Шенноном."

#: ../../whatsnew/3.3.rst:630
msgid "PEP 362: Function Signature Object"
msgstr "PEP 362: Объект сигнатуры функции"

#: ../../whatsnew/3.3.rst:632
msgid ""
"A new function :func:`inspect.signature` makes introspection of python "
"callables easy and straightforward.  A broad range of callables is "
"supported: python functions, decorated or not, classes, and :func:`functools."
"partial` objects.  New classes :class:`inspect.Signature`, :class:`inspect."
"Parameter` and :class:`inspect.BoundArguments` hold information about the "
"call signatures, such as, annotations, default values, parameters kinds, and "
"bound arguments, which considerably simplifies writing decorators and any "
"code that validates or amends calling signatures or arguments."
msgstr ""
"Новая функция :func:`inspect.signature` делает самоанализ вызываемых "
"объектов Python простым и понятным. Поддерживается широкий спектр вызываемых "
"объектов: функции Python, декорированные или нет, классы и объекты :func:"
"`functools.partial`. Новые классы :class:`inspect.Signature`, :class:"
"`inspect.Parameter` и :class:`inspect.BoundArguments` содержат информацию о "
"сигнатурах вызовов, такую ​​как аннотации, значения по умолчанию, типы "
"параметров и связанные аргументы. что значительно упрощает написание "
"декораторов и любого кода, который проверяет или изменяет сигнатуры вызова "
"или аргументы."

#: ../../whatsnew/3.3.rst:643
msgid ":pep:`362`: -  Function Signature Object"
msgstr ":pep:`362`: - Объект сигнатуры функции"

#: ../../whatsnew/3.3.rst:644
msgid ""
"PEP written by Brett Cannon, Yury Selivanov, Larry Hastings, Jiwon Seo; "
"implemented by Yury Selivanov."
msgstr ""
"PEP written by Brett Cannon, Yury Selivanov, Larry Hastings, Jiwon Seo; "
"implemented by Yury Selivanov."

#: ../../whatsnew/3.3.rst:649
msgid "PEP 421: Adding sys.implementation"
msgstr "PEP 421: Добавление sys.implementation"

#: ../../whatsnew/3.3.rst:651
msgid ""
"A new attribute on the :mod:`sys` module exposes details specific to the "
"implementation of the currently running interpreter.  The initial set of "
"attributes on :data:`sys.implementation` are ``name``, ``version``, "
"``hexversion``, and ``cache_tag``."
msgstr ""
"Новый атрибут модуля :mod:`sys` раскрывает подробности, относящиеся к "
"реализации текущего интерпретатора. Исходный набор атрибутов :data:`sys."
"implementation`: ``name``, ``version``, ``hexversion`` и ``cache_tag``."

#: ../../whatsnew/3.3.rst:656
msgid ""
"The intention of ``sys.implementation`` is to consolidate into one namespace "
"the implementation-specific data used by the standard library.  This allows "
"different Python implementations to share a single standard library code "
"base much more easily.  In its initial state, ``sys.implementation`` holds "
"only a small portion of the implementation-specific data.  Over time that "
"ratio will shift in order to make the standard library more portable."
msgstr ""
"Целью ``sys.implementation`` является объединение в одно пространство имен "
"данных, специфичных для реализации, используемых стандартной библиотекой. "
"Это позволяет различным реализациям Python гораздо проще использовать одну "
"базу кода стандартной библиотеки. В своем начальном состоянии ``sys."
"implementation`` содержит лишь небольшую часть данных, специфичных для "
"реализации. Со временем это соотношение изменится, чтобы стандартная "
"библиотека стала более портативной."

#: ../../whatsnew/3.3.rst:663
msgid ""
"One example of improved standard library portability is ``cache_tag``.  As "
"of Python 3.3, ``sys.implementation.cache_tag`` is used by :mod:`importlib` "
"to support :pep:`3147` compliance.  Any Python implementation that uses "
"``importlib`` for its built-in import system may use ``cache_tag`` to "
"control the caching behavior for modules."
msgstr ""
"Одним из примеров улучшенной переносимости стандартной библиотеки является "
"``cache_tag``. Начиная с Python 3.3, ``sys.implementation.cache_tag`` "
"используется :mod:`importlib` для поддержки соответствия :pep:`3147`. Любая "
"реализация Python, использующая importlib для встроенной системы импорта, "
"может использоватьcache_tag для управления поведением кэширования модулей."

#: ../../whatsnew/3.3.rst:670
msgid "SimpleNamespace"
msgstr "SimpleNamespace"

#: ../../whatsnew/3.3.rst:672
msgid ""
"The implementation of ``sys.implementation`` also introduces a new type to "
"Python: :class:`types.SimpleNamespace`.  In contrast to a mapping-based "
"namespace, like :class:`dict`, ``SimpleNamespace`` is attribute-based, like :"
"class:`object`.  However, unlike ``object``, ``SimpleNamespace`` instances "
"are writable.  This means that you can add, remove, and modify the namespace "
"through normal attribute access."
msgstr ""
"Реализация ``sys.implementation`` также вводит в Python новый тип: :class:"
"`types.SimpleNamespace`. В отличие от пространства имен, основанного на "
"сопоставлении, такого как :class:`dict`, ``SimpleNamespace`` основано на "
"атрибутах, например :class:`object`. Однако, в отличие от объекта, "
"экземпляры SimpleNamespace доступны для записи. Это означает, что вы можете "
"добавлять, удалять и изменять пространство имен посредством обычного доступа "
"к атрибутам."

#: ../../whatsnew/3.3.rst:681
msgid ":pep:`421` - Adding sys.implementation"
msgstr ":pep:`421` - Добавление sys.implementation"

#: ../../whatsnew/3.3.rst:682
msgid "PEP written and implemented by Eric Snow."
msgstr "PEP написан и реализован Эриком Сноу."

#: ../../whatsnew/3.3.rst:688
msgid "Using importlib as the Implementation of Import"
msgstr "Использование importlib в качестве реализации импорта"

#: ../../whatsnew/3.3.rst:689
msgid ""
":issue:`2377` - Replace __import__ w/ importlib.__import__ :issue:`13959` - "
"Re-implement parts of :mod:`!imp` in pure Python :issue:`14605` - Make "
"import machinery explicit :issue:`14646` - Require loaders set __loader__ "
"and __package__"
msgstr ""
":issue:`2377` - Замените __import__ на importlib.__import__ :issue:`13959` - "
"Повторно реализуйте части :mod:`!imp` в чистом Python :issue:`14605` - "
"Сделайте механизм импорта явным :issue: `14646` — Требуются наборы "
"загрузчиков __loader__ и __package__."

#: ../../whatsnew/3.3.rst:694
msgid ""
"The :func:`__import__` function is now powered by :func:`importlib."
"__import__`. This work leads to the completion of \"phase 2\" of :pep:`302`. "
"There are multiple benefits to this change. First, it has allowed for more "
"of the machinery powering import to be exposed instead of being implicit and "
"hidden within the C code. It also provides a single implementation for all "
"Python VMs supporting Python 3.3 to use, helping to end any VM-specific "
"deviations in import semantics. And finally it eases the maintenance of "
"import, allowing for future growth to occur."
msgstr ""
"Функция :func:`__import__` теперь поддерживается :func:`importlib."
"__import__`. Эта работа приводит к завершению «фазы 2» :pep:`302`. Это "
"изменение имеет множество преимуществ. Во-первых, это позволило сделать "
"больше механизмов, обеспечивающих импорт, открытыми, а не скрытыми в коде C. "
"Он также предоставляет единую реализацию для всех виртуальных машин Python, "
"поддерживающих Python 3.3, что помогает устранить любые отклонения в "
"семантике импорта, специфичные для виртуальных машин. И, наконец, это "
"облегчает поддержание импорта, позволяя обеспечить будущий рост."

#: ../../whatsnew/3.3.rst:703
msgid ""
"For the common user, there should be no visible change in semantics.  For "
"those whose code currently manipulates import or calls import "
"programmatically, the code changes that might possibly be required are "
"covered in the `Porting Python code`_ section of this document."
msgstr ""
"Для обычного пользователя не должно быть видимых изменений в семантике. Для "
"тех, чей код в настоящее время управляет импортом или вызывает импорт "
"программно, возможные изменения кода описаны в разделе «Перенос кода Python» "
"этого документа."

#: ../../whatsnew/3.3.rst:709
msgid "New APIs"
msgstr "Новые API"

#: ../../whatsnew/3.3.rst:710
msgid ""
"One of the large benefits of this work is the exposure of what goes into "
"making the import statement work. That means the various importers that were "
"once implicit are now fully exposed as part of the :mod:`importlib` package."
msgstr ""
"Одним из больших преимуществ этой работы является раскрытие того, как "
"заставить работать оператор импорта. Это означает, что различные импортеры, "
"которые когда-то были неявными, теперь полностью доступны как часть пакета :"
"mod:`importlib`."

#: ../../whatsnew/3.3.rst:714
msgid ""
"The abstract base classes defined in :mod:`importlib.abc` have been expanded "
"to properly delineate between :term:`meta path finders <meta path finder>` "
"and :term:`path entry finders <path entry finder>` by introducing :class:"
"`importlib.abc.MetaPathFinder` and :class:`importlib.abc.PathEntryFinder`, "
"respectively. The old ABC of :class:`!importlib.abc.Finder` is now only "
"provided for backwards-compatibility and does not enforce any method "
"requirements."
msgstr ""
"Абстрактные базовые классы, определенные в :mod:`importlib.abc`, были "
"расширены для правильного разграничения между :term:`мета-поисками пути "
"<мета-поиск пути>` и :term:`поискателями записей пути <поиск записей пути>` "
"путем введения :class:`importlib.abc.MetaPathFinder` и :class:`importlib.abc."
"PathEntryFinder` соответственно. Старая азбука :class:`!importlib.abc."
"Finder` теперь предоставляется только для обратной совместимости и не "
"налагает никаких требований к методам."

#: ../../whatsnew/3.3.rst:722
msgid ""
"In terms of finders, :class:`importlib.machinery.FileFinder` exposes the "
"mechanism used to search for source and bytecode files of a module. "
"Previously this class was an implicit member of :data:`sys.path_hooks`."
msgstr ""
"Что касается средств поиска, :class:`importlib.machinery.FileFinder` "
"предоставляет механизм, используемый для поиска исходных файлов и файлов "
"байт-кода модуля. Ранее этот класс был неявным членом :data:`sys.path_hooks`."

#: ../../whatsnew/3.3.rst:726
msgid ""
"For loaders, the new abstract base class :class:`importlib.abc.FileLoader` "
"helps write a loader that uses the file system as the storage mechanism for "
"a module's code. The loader for source files (:class:`importlib.machinery."
"SourceFileLoader`), sourceless bytecode files (:class:`importlib.machinery."
"SourcelessFileLoader`), and extension modules (:class:`importlib.machinery."
"ExtensionFileLoader`) are now available for direct use."
msgstr ""
"Для загрузчиков новый абстрактный базовый класс :class:`importlib.abc."
"FileLoader` помогает написать загрузчик, который использует файловую систему "
"в качестве механизма хранения кода модуля. Загрузчик для исходных файлов (:"
"class:`importlib.machinery.SourceFileLoader`), файлов байт-кода без "
"исходного кода (:class:`importlib.machinery.SourcelessFileLoader`) и модулей "
"расширения (:class:`importlib.machinery.ExtensionFileLoader`) теперь "
"доступен для прямого использования."

#: ../../whatsnew/3.3.rst:734
msgid ""
":exc:`ImportError` now has ``name`` and ``path`` attributes which are set "
"when there is relevant data to provide. The message for failed imports will "
"also provide the full name of the module now instead of just the tail end of "
"the module's name."
msgstr ""
":exc:`ImportError` теперь имеет атрибуты ``name`` и ``path``, которые "
"устанавливаются при наличии соответствующих данных для предоставления. В "
"сообщении о неудачном импорте теперь также будет указано полное имя модуля, "
"а не только его окончание."

#: ../../whatsnew/3.3.rst:739
msgid ""
"The :func:`importlib.invalidate_caches` function will now call the method "
"with the same name on all finders cached in :data:`sys.path_importer_cache` "
"to help clean up any stored state as necessary."
msgstr ""
"Функция :func:`importlib.invalidate_caches` теперь будет вызывать метод с "
"тем же именем во всех средствах поиска, кэшированных в :data:`sys."
"path_importer_cache`, чтобы при необходимости очистить любое сохраненное "
"состояние."

#: ../../whatsnew/3.3.rst:744
msgid "Visible Changes"
msgstr "Видимые изменения"

#: ../../whatsnew/3.3.rst:746
msgid ""
"For potential required changes to code, see the `Porting Python code`_ "
"section."
msgstr ""
"Информацию о возможных необходимых изменениях кода см. в разделе «Перенос "
"кода Python»."

#: ../../whatsnew/3.3.rst:749
msgid ""
"Beyond the expanse of what :mod:`importlib` now exposes, there are other "
"visible changes to import. The biggest is that :data:`sys.meta_path` and :"
"data:`sys.path_hooks` now store all of the meta path finders and path entry "
"hooks used by import.  Previously the finders were implicit and hidden "
"within the C code of import instead of being directly exposed. This means "
"that one can now easily remove or change the order of the various finders to "
"fit one's needs."
msgstr ""
"Помимо того, что теперь предоставляет :mod:`importlib`, есть и другие "
"видимые изменения для импорта. Самым большим из них является то, что :data:"
"`sys.meta_path` и :data:`sys.path_hooks` теперь хранят все средства поиска "
"метапутей и перехватчики ввода путей, используемые при импорте. Раньше "
"средства поиска были неявными и скрытыми в коде импорта C, а не открывались "
"напрямую. Это означает, что теперь можно легко удалить или изменить порядок "
"различных средств поиска в соответствии со своими потребностями."

#: ../../whatsnew/3.3.rst:756
msgid ""
"Another change is that all modules have a ``__loader__`` attribute, storing "
"the loader used to create the module. :pep:`302` has been updated to make "
"this attribute mandatory for loaders to implement, so in the future once 3rd-"
"party loaders have been updated people will be able to rely on the existence "
"of the attribute. Until such time, though, import is setting the module post-"
"load."
msgstr ""
"Еще одно изменение заключается в том, что все модули имеют атрибут "
"``__loader__``, в котором хранится загрузчик, использованный для создания "
"модуля. :pep:`302` был обновлен, чтобы сделать этот атрибут обязательным для "
"реализации загрузчиками, поэтому в будущем, когда сторонние загрузчики будут "
"обновлены, люди смогут полагаться на существование атрибута. Однако до этого "
"времени импорт устанавливает пост-загрузку модуля."

#: ../../whatsnew/3.3.rst:762
msgid ""
"Loaders are also now expected to set the ``__package__`` attribute from :pep:"
"`366`. Once again, import itself is already setting this on all loaders "
"from :mod:`importlib` and import itself is setting the attribute post-load."
msgstr ""
"Ожидается, что загрузчики также установят атрибут ``__package__`` из :pep:"
"`366`. Опять же, сам импорт уже устанавливает это для всех загрузчиков из :"
"mod:`importlib`, а сам импорт устанавливает атрибут post-load."

#: ../../whatsnew/3.3.rst:766
msgid ""
"``None`` is now inserted into :data:`sys.path_importer_cache` when no finder "
"can be found on :data:`sys.path_hooks`. Since :class:`!imp.NullImporter` is "
"not directly exposed on :data:`sys.path_hooks` it could no longer be relied "
"upon to always be available to use as a value representing no finder found."
msgstr ""
"``None`` теперь вставляется в :data:`sys.path_importer_cache`, если в :data:"
"`sys.path_hooks` не найден поисковик. Поскольку :class:`!imp.NullImporter` "
"не отображается напрямую в :data:`sys.path_hooks`, больше нельзя полагаться "
"на его постоянную доступность для использования в качестве значения, "
"представляющего отсутствие найденного средства поиска."

#: ../../whatsnew/3.3.rst:771
msgid ""
"All other changes relate to semantic changes which should be taken into "
"consideration when updating code for Python 3.3, and thus should be read "
"about in the `Porting Python code`_ section of this document."
msgstr ""
"Все остальные изменения относятся к семантическим изменениям, которые "
"следует учитывать при обновлении кода для Python 3.3, и поэтому о них "
"следует прочитать в разделе «Перенос кода Python» этого документа."

#: ../../whatsnew/3.3.rst:775
msgid "(Implementation by Brett Cannon)"
msgstr "(Реализация Бретта Кэннона)"

#: ../../whatsnew/3.3.rst:779
msgid "Other Language Changes"
msgstr "Другие языковые изменения"

#: ../../whatsnew/3.3.rst:781
msgid "Some smaller changes made to the core Python language are:"
msgstr "Некоторые небольшие изменения, внесенные в основной язык Python:"

#: ../../whatsnew/3.3.rst:783
msgid ""
"Added support for Unicode name aliases and named sequences. Both :func:"
"`unicodedata.lookup` and ``'\\N{...}'`` now resolve name aliases, and :func:"
"`unicodedata.lookup` resolves named sequences too."
msgstr ""
"Добавлена ​​поддержка псевдонимов имен Unicode и именованных "
"последовательностей. И :func:`unicodedata.lookup`, и ``'\\N{...}'`` теперь "
"разрешают псевдонимы имен, а :func:`unicodedata.lookup` также разрешает "
"именованные последовательности."

#: ../../whatsnew/3.3.rst:787
msgid "(Contributed by Ezio Melotti in :issue:`12753`.)"
msgstr "(Предоставлено Эцио Мелотти в :issue:`12753`.)"

#: ../../whatsnew/3.3.rst:789
msgid "Unicode database updated to UCD version 6.1.0"
msgstr "База данных Unicode обновлена ​​до версии UCD 6.1.0."

#: ../../whatsnew/3.3.rst:791
msgid ""
"Equality comparisons on :func:`range` objects now return a result reflecting "
"the equality of the underlying sequences generated by those range objects. (:"
"issue:`13201`)"
msgstr ""
"Сравнения на равенство объектов :func:`range` теперь возвращают результат, "
"отражающий равенство базовых последовательностей, сгенерированных этими "
"объектами диапазона. (:issue:`13201`)"

#: ../../whatsnew/3.3.rst:795
msgid ""
"The ``count()``, ``find()``, ``rfind()``, ``index()`` and ``rindex()`` "
"methods of :class:`bytes` and :class:`bytearray` objects now accept an "
"integer between 0 and 255 as their first argument."
msgstr ""
"Методы count(), find(), rfind(), index() иrindex() классов :class:bytes и : "
"Объекты class:`bytearray` теперь принимают целое число от 0 до 255 в "
"качестве первого аргумента."

#: ../../whatsnew/3.3.rst:799
msgid "(Contributed by Petri Lehtinen in :issue:`12170`.)"
msgstr "(Предоставлено Петри Лехтиненом в :issue:`12170`.)"

#: ../../whatsnew/3.3.rst:801
msgid ""
"The ``rjust()``, ``ljust()``, and ``center()`` methods of :class:`bytes` "
"and :class:`bytearray` now accept a :class:`bytearray` for the ``fill`` "
"argument.  (Contributed by Petri Lehtinen in :issue:`12380`.)"
msgstr ""
"Методы ``rjust()``, ``ljust()`` и ``center()`` из :class:`bytes` и :class:"
"`bytearray` теперь принимают :class:`bytearray` в качестве аргумента "
"``fill``. (Автор Petri Lehtinen в :issue:`12380`.)"

#: ../../whatsnew/3.3.rst:805
msgid ""
"New methods have been added to :class:`list` and :class:`bytearray`: "
"``copy()`` and ``clear()`` (:issue:`10516`).  Consequently, :class:"
"`~collections.abc.MutableSequence` now also defines a :meth:`~collections."
"abc.MutableSequence.clear` method (:issue:`11388`)."
msgstr ""
"В :class:`list` и :class:`bytearray` были добавлены новые методы: "
"``копировать()`` и ``очистить()`` (:issue:`10516`). Следовательно, :class:"
"`~collections.abc.MutableSequence` теперь также определяет метод :meth:"
"`~collections.abc.MutableSequence.clear` (:issue:`11388`)."

#: ../../whatsnew/3.3.rst:810
msgid ""
"Raw bytes literals can now be written ``rb\"...\"`` as well as ``br\"...\"``."
msgstr ""
"Необработанные байтовые литералы теперь могут быть записаны как ``rb\"...."
"\"``, так и ``br\"....\"``."

#: ../../whatsnew/3.3.rst:812
msgid "(Contributed by Antoine Pitrou in :issue:`13748`.)"
msgstr "(Предоставлено Антуаном Питру в :issue:`13748`.)"

#: ../../whatsnew/3.3.rst:814
msgid ""
":meth:`dict.setdefault` now does only one lookup for the given key, making "
"it atomic when used with built-in types."
msgstr ""
":meth:`dict.setdefault` теперь выполняет только один поиск по заданному "
"ключу, что делает его атомарным при использовании со встроенными типами."

#: ../../whatsnew/3.3.rst:817
msgid "(Contributed by Filip Gruszczyński in :issue:`13521`.)"
msgstr "(Предоставлено Филипом Грущиньским в :issue:`13521`.)"

#: ../../whatsnew/3.3.rst:819
msgid ""
"The error messages produced when a function call does not match the function "
"signature have been significantly improved."
msgstr ""
"Сообщения об ошибках, выводимые, когда вызов функции не соответствует "
"сигнатуре функции, были значительно улучшены."

#: ../../whatsnew/3.3.rst:822
msgid "(Contributed by Benjamin Peterson.)"
msgstr "(Предоставлено Бенджамином Петерсоном.)"

#: ../../whatsnew/3.3.rst:826
msgid "A Finer-Grained Import Lock"
msgstr "Более детальная блокировка импорта"

#: ../../whatsnew/3.3.rst:828
msgid ""
"Previous versions of CPython have always relied on a global import lock. "
"This led to unexpected annoyances, such as deadlocks when importing a module "
"would trigger code execution in a different thread as a side-effect. Clumsy "
"workarounds were sometimes employed, such as the :c:func:"
"`PyImport_ImportModuleNoBlock` C API function."
msgstr ""
"Предыдущие версии CPython всегда полагались на глобальную блокировку "
"импорта. Это приводило к неожиданным неприятностям, например, к "
"взаимоблокировкам при импорте модуля, которые в качестве побочного эффекта "
"приводили к выполнению кода в другом потоке. Иногда использовались неуклюжие "
"обходные пути, такие как функция C API :c:func:"
"`PyImport_ImportModuleNoBlock`."

#: ../../whatsnew/3.3.rst:834
msgid ""
"In Python 3.3, importing a module takes a per-module lock.  This correctly "
"serializes importation of a given module from multiple threads (preventing "
"the exposure of incompletely initialized modules), while eliminating the "
"aforementioned annoyances."
msgstr ""
"В Python 3.3 импорт модуля требует блокировки для каждого модуля. Это "
"правильно сериализует импорт данного модуля из нескольких потоков "
"(предотвращая раскрытие неполностью инициализированных модулей), устраняя "
"при этом вышеупомянутые неприятности."

#: ../../whatsnew/3.3.rst:839
msgid "(Contributed by Antoine Pitrou in :issue:`9260`.)"
msgstr "(Предоставлено Антуаном Питру в :issue:`9260`.)"

#: ../../whatsnew/3.3.rst:843
msgid "Builtin functions and types"
msgstr "Встроенные функции и типы"

#: ../../whatsnew/3.3.rst:845
msgid ""
":func:`open` gets a new *opener* parameter: the underlying file descriptor "
"for the file object is then obtained by calling *opener* with (*file*, "
"*flags*). It can be used to use custom flags like :const:`os.O_CLOEXEC` for "
"example. The ``'x'`` mode was added: open for exclusive creation, failing if "
"the file already exists."
msgstr ""
":func:`open` получает новый параметр *opener*: базовый файловый дескриптор "
"для файлового объекта затем получается путем вызова *opener* с (*file*, "
"*flags*). Его можно использовать, например, для использования "
"пользовательских флагов, таких как :const:`os.O_CLOEXEC`. Был добавлен режим "
"``'x'``: открыт для эксклюзивного создания, проваливается, если файл уже "
"существует."

#: ../../whatsnew/3.3.rst:850
msgid ""
":func:`print`: added the *flush* keyword argument. If the *flush* keyword "
"argument is true, the stream is forcibly flushed."
msgstr ""
":func:`print`: добавлен аргумент ключевого слова *flush*. Если аргумент "
"ключевого слова *flush* имеет значение true, поток принудительно "
"сбрасывается."

#: ../../whatsnew/3.3.rst:852
msgid ""
":func:`hash`: hash randomization is enabled by default, see :meth:`object."
"__hash__` and :envvar:`PYTHONHASHSEED`."
msgstr ""
":func:`hash`: рандомизация хеша включена по умолчанию, см. :meth:`object."
"__hash__` и :envvar:`PYTHONHASHSEED`."

#: ../../whatsnew/3.3.rst:854
msgid ""
"The :class:`str` type gets a new :meth:`~str.casefold` method: return a "
"casefolded copy of the string, casefolded strings may be used for caseless "
"matching. For example, ``'ß'.casefold()`` returns ``'ss'``."
msgstr ""
"Тип :class:`str` получает новый метод :meth:`~str.casefold`: возвращает "
"копию строки в свёрнутом регистре, строки с свёрнутым регистром могут "
"использоваться для сопоставления без регистра. Например, ``'ß'.casefold()`` "
"возвращает ``'ss'``."

#: ../../whatsnew/3.3.rst:857
msgid ""
"The sequence documentation has been substantially rewritten to better "
"explain the binary/text sequence distinction and to provide specific "
"documentation sections for the individual builtin sequence types (:issue:"
"`4966`)."
msgstr ""
"Документация по последовательности была существенно переписана, чтобы лучше "
"объяснить различие между двоичной и текстовой последовательностями и "
"предоставить специальные разделы документации для отдельных встроенных типов "
"последовательностей (:issue:`4966`)."

#: ../../whatsnew/3.3.rst:864
msgid "New Modules"
msgstr "Новые модули"

#: ../../whatsnew/3.3.rst:867
msgid "faulthandler"
msgstr "faulthandler"

#: ../../whatsnew/3.3.rst:869
msgid ""
"This new debug module :mod:`faulthandler` contains functions to dump Python "
"tracebacks explicitly, on a fault (a crash like a segmentation fault), after "
"a timeout, or on a user signal. Call :func:`faulthandler.enable` to install "
"fault handlers for the :const:`SIGSEGV`, :const:`SIGFPE`, :const:`SIGABRT`, :"
"const:`SIGBUS`, and :const:`SIGILL` signals. You can also enable them at "
"startup by setting the :envvar:`PYTHONFAULTHANDLER` environment variable or "
"by using :option:`-X` ``faulthandler`` command line option."
msgstr ""
"Этот новый модуль отладки :mod:`faulthandler` содержит функции для явного "
"сброса обратных трассировок Python, при ошибке (сбой, такой как ошибка "
"сегментации), после тайм-аута или по сигналу пользователя. Вызовите :func:"
"`faulthandler.enable`, чтобы установить обработчики ошибок для :const:"
"`SIGSEGV`, :const:`SIGFPE`, :const:`SIGABRT`, :const:`SIGBUS` и :const:"
"`SIGILL` сигналы. Вы также можете включить их при запуске, установив "
"переменную среды :envvar:`PYTHONFAULTHANDLER` или используя параметр "
"командной строки :option:`-X` ``faulthandler``."

#: ../../whatsnew/3.3.rst:877
msgid "Example of a segmentation fault on Linux:"
msgstr "Пример ошибки сегментации в Linux:"

#: ../../whatsnew/3.3.rst:879
msgid ""
"$ python -q -X faulthandler\n"
">>> import ctypes\n"
">>> ctypes.string_at(0)\n"
"Fatal Python error: Segmentation fault\n"
"\n"
"Current thread 0x00007fb899f39700:\n"
"  File \"/home/python/cpython/Lib/ctypes/__init__.py\", line 486 in "
"string_at\n"
"  File \"<stdin>\", line 1 in <module>\n"
"Segmentation fault"
msgstr ""
"$ python -q -X faulthandler\n"
">>> import ctypes\n"
">>> ctypes.string_at(0)\n"
"Fatal Python error: Segmentation fault\n"
"\n"
"Current thread 0x00007fb899f39700:\n"
"  File \"/home/python/cpython/Lib/ctypes/__init__.py\", line 486 in "
"string_at\n"
"  File \"<stdin>\", line 1 in <module>\n"
"Segmentation fault"

#: ../../whatsnew/3.3.rst:893
msgid "ipaddress"
msgstr "ipaddress"

#: ../../whatsnew/3.3.rst:895
msgid ""
"The new :mod:`ipaddress` module provides tools for creating and manipulating "
"objects representing IPv4 and IPv6 addresses, networks and interfaces (i.e. "
"an IP address associated with a specific IP subnet)."
msgstr ""
"Новый модуль :mod: `ipaddress` предоставляет инструменты для создания и "
"управления объектами, представляющими адреса IPv4 и IPv6, сети и интерфейсы "
"(т.е. IP-адрес, связанный с определенной IP-подсетью)."

#: ../../whatsnew/3.3.rst:899
msgid "(Contributed by Google and Peter Moody in :pep:`3144`.)"
msgstr "(Предоставлено Google и Peter Moody в :pep:`3144`.)"

#: ../../whatsnew/3.3.rst:902
msgid "lzma"
msgstr "lzma"

#: ../../whatsnew/3.3.rst:904
msgid ""
"The newly added :mod:`lzma` module provides data compression and "
"decompression using the LZMA algorithm, including support for the ``.xz`` "
"and ``.lzma`` file formats."
msgstr ""
"Недавно добавленный модуль :mod:`lzma` обеспечивает сжатие и распаковку "
"данных с использованием алгоритма LZMA, включая поддержку форматов файлов ``."
"xz`` и ``.lzma``."

#: ../../whatsnew/3.3.rst:908
msgid "(Contributed by Nadeem Vawda and Per Øyvind Karlsen in :issue:`6715`.)"
msgstr ""
"(Предоставлено Надимом Вавдой и Пером Ойвиндом Карлсеном в :issue:`6715`.)"

#: ../../whatsnew/3.3.rst:912
msgid "Improved Modules"
msgstr "Улучшенные модули"

#: ../../whatsnew/3.3.rst:915
msgid "abc"
msgstr "abc"

#: ../../whatsnew/3.3.rst:917
msgid ""
"Improved support for abstract base classes containing descriptors composed "
"with abstract methods. The recommended approach to declaring abstract "
"descriptors is now to provide :attr:`__isabstractmethod__` as a dynamically "
"updated property. The built-in descriptors have been updated accordingly."
msgstr ""
"Улучшена поддержка абстрактных базовых классов, содержащих дескрипторы, "
"состоящие из абстрактных методов. Рекомендуемый подход к объявлению "
"абстрактных дескрипторов теперь заключается в предоставлении :attr:"
"`__isabstractmethod__` в качестве динамически обновляемого свойства. "
"Встроенные дескрипторы были соответствующим образом обновлены."

#: ../../whatsnew/3.3.rst:922 ../../whatsnew/3.3.rst:2248
msgid ""
":class:`abc.abstractproperty` has been deprecated, use :class:`property` "
"with :func:`abc.abstractmethod` instead."
msgstr ""
":class:`abc.abstractproperty` устарел, вместо этого используйте :class:"
"`property` с :func:`abc.abstractmethod`."

#: ../../whatsnew/3.3.rst:924 ../../whatsnew/3.3.rst:2250
msgid ""
":class:`abc.abstractclassmethod` has been deprecated, use :class:"
"`classmethod` with :func:`abc.abstractmethod` instead."
msgstr ""
":class:`abc.abstractclassmethod` has been deprecated, use :class:"
"`classmethod` with :func:`abc.abstractmethod` instead."

#: ../../whatsnew/3.3.rst:926 ../../whatsnew/3.3.rst:2252
msgid ""
":class:`abc.abstractstaticmethod` has been deprecated, use :class:"
"`staticmethod` with :func:`abc.abstractmethod` instead."
msgstr ""
":class:`abc.abstractstaticmethod` устарел, вместо этого используйте :class:"
"`staticmethod` с :func:`abc.abstractmethod`."

#: ../../whatsnew/3.3.rst:929
msgid "(Contributed by Darren Dale in :issue:`11610`.)"
msgstr "(Предоставлено Дарреном Дейлом в :issue:`11610`.)"

#: ../../whatsnew/3.3.rst:931
msgid ""
":meth:`abc.ABCMeta.register` now returns the registered subclass, which "
"means it can now be used as a class decorator (:issue:`10868`)."
msgstr ""
":meth:`abc.ABCMeta.register` теперь возвращает зарегистрированный подкласс, "
"что означает, что теперь его можно использовать в качестве декоратора класса "
"(:issue:`10868`)."

#: ../../whatsnew/3.3.rst:936
msgid "array"
msgstr "array"

#: ../../whatsnew/3.3.rst:938
msgid ""
"The :mod:`array` module supports the :c:expr:`long long` type using ``q`` "
"and ``Q`` type codes."
msgstr ""
"Модуль :mod:`array` поддерживает тип :c:expr:`long long` с использованием "
"кодов типов ``q`` и ``Q``."

#: ../../whatsnew/3.3.rst:941
msgid "(Contributed by Oren Tirosh and Hirokazu Yamamoto in :issue:`1172711`.)"
msgstr "(Предоставлено Орен Тирош и Хирокадзу Ямамото в :issue:`1172711`.)"

#: ../../whatsnew/3.3.rst:945
msgid "base64"
msgstr "base64"

#: ../../whatsnew/3.3.rst:947
msgid ""
"ASCII-only Unicode strings are now accepted by the decoding functions of "
"the :mod:`base64` modern interface. For example, ``base64."
"b64decode('YWJj')`` returns ``b'abc'``.  (Contributed by Catalin Iacob in :"
"issue:`13641`.)"
msgstr ""
"Функции декодирования в современном интерфейсе :mod:`base64` теперь "
"принимают строки Юникода, содержащие только ASCII. Например, ``base64."
"b64decode('YWJj')`` возвращает ``b'abc``. (Автор: Catalin Iacob в :issue:"
"`13641`.)"

#: ../../whatsnew/3.3.rst:953
msgid "binascii"
msgstr "binascii"

#: ../../whatsnew/3.3.rst:955
msgid ""
"In addition to the binary objects they normally accept, the ``a2b_`` "
"functions now all also accept ASCII-only strings as input.  (Contributed by "
"Antoine Pitrou in :issue:`13637`.)"
msgstr ""
"В дополнение к двоичным объектам, которые они обычно принимают, функции a2b_ "
"теперь также принимают в качестве входных данных строки только ASCII. "
"(Предоставлено Антуаном Питру в :issue:`13637`.)"

#: ../../whatsnew/3.3.rst:961
msgid "bz2"
msgstr "bz2"

#: ../../whatsnew/3.3.rst:963
msgid ""
"The :mod:`bz2` module has been rewritten from scratch. In the process, "
"several new features have been added:"
msgstr ""
"Модуль :mod:`bz2` был переписан с нуля. В процессе было добавлено несколько "
"новых функций:"

#: ../../whatsnew/3.3.rst:966
msgid ""
"New :func:`bz2.open` function: open a bzip2-compressed file in binary or "
"text mode."
msgstr ""
"Новая функция :func:`bz2.open`: открывает файл, сжатый с помощью bzip2, в "
"двоичном или текстовом режиме."

#: ../../whatsnew/3.3.rst:969
msgid ""
":class:`bz2.BZ2File` can now read from and write to arbitrary file-like "
"objects, by means of its constructor's *fileobj* argument."
msgstr ""
":class:`bz2.BZ2File` теперь может читать и записывать в произвольные "
"файловые объекты с помощью аргумента *fileobj* своего конструктора."

#: ../../whatsnew/3.3.rst:972
msgid "(Contributed by Nadeem Vawda in :issue:`5863`.)"
msgstr "(Предоставлено Надимом Вавдой в :issue:`5863`.)"

#: ../../whatsnew/3.3.rst:974
msgid ""
":class:`bz2.BZ2File` and :func:`bz2.decompress` can now decompress multi-"
"stream inputs (such as those produced by the :program:`pbzip2` tool). :class:"
"`bz2.BZ2File` can now also be used to create this type of file, using the "
"``'a'`` (append) mode."
msgstr ""
":class:`bz2.BZ2File` и :func:`bz2.decompress` теперь могут распаковывать "
"многопоточные входные данные (например, созданные инструментом :program:"
"`pbzip2`). :class:`bz2.BZ2File` теперь также можно использовать для создания "
"файлов этого типа, используя режим ``'a'`` (добавление)."

#: ../../whatsnew/3.3.rst:979
msgid "(Contributed by Nir Aides in :issue:`1625`.)"
msgstr "(Предоставлено Ниром Эйдесом в :issue:`1625`.)"

#: ../../whatsnew/3.3.rst:981
msgid ""
":class:`bz2.BZ2File` now implements all of the :class:`io.BufferedIOBase` "
"API, except for the :meth:`detach` and :meth:`truncate` methods."
msgstr ""
":class:`bz2.BZ2File` теперь реализует весь API :class:`io.BufferedIOBase`, "
"за исключением методов :meth:`detach` и :meth:`truncate`."

#: ../../whatsnew/3.3.rst:986
msgid "codecs"
msgstr "кодеки"

#: ../../whatsnew/3.3.rst:988
msgid ""
"The :mod:`~encodings.mbcs` codec has been rewritten to handle correctly "
"``replace`` and ``ignore`` error handlers on all Windows versions.  The :mod:"
"`~encodings.mbcs` codec now supports all error handlers, instead of only "
"``replace`` to encode and ``ignore`` to decode."
msgstr ""
"Кодек :mod:`~encodings.mbcs` был переписан для правильной обработки "
"обработчиков ошибок ``replace`` и ``ignore`` во всех версиях Windows. Кодек :"
"mod:`~encodings.mbcs` теперь поддерживает все обработчики ошибок, а не "
"только ``replace`` для кодирования и ``игнорировать`` для декодирования."

#: ../../whatsnew/3.3.rst:993
msgid ""
"A new Windows-only codec has been added: ``cp65001`` (:issue:`13216`). It is "
"the Windows code page 65001 (Windows UTF-8, ``CP_UTF8``).  For example, it "
"is used by ``sys.stdout`` if the console output code page is set to cp65001 "
"(e.g., using ``chcp 65001`` command)."
msgstr ""
"Был добавлен новый кодек только для Windows: ``cp65001`` (:issue:`13216`). "
"Это кодовая страница Windows 65001 (Windows UTF-8, ``CP_UTF8``). Например, "
"он используется ``sys.stdout``, если кодовая страница вывода консоли "
"установлена ​​на cp65001 (например, с помощью команды ``chcp 65001``)."

#: ../../whatsnew/3.3.rst:998
msgid ""
"Multibyte CJK decoders now resynchronize faster.  They only ignore the first "
"byte of an invalid byte sequence. For example, ``b'\\xff\\n'."
"decode('gb2312', 'replace')`` now returns a ``\\n`` after the replacement "
"character."
msgstr ""
"PEP 409 представляет новый синтаксис, который позволяет отключить "
"отображение связанного контекста исключения. Это позволяет более четко "
"отображать сообщения об ошибках в приложениях, которые преобразуют типы "
"исключений:"

#: ../../whatsnew/3.3.rst:1002
msgid "(:issue:`12016`)"
msgstr "(:issue:`12016`)"

#: ../../whatsnew/3.3.rst:1004
msgid ""
"Incremental CJK codec encoders are no longer reset at each call to their "
"encode() methods. For example::"
msgstr ""
"Кодеры инкрементального кодека CJK больше не сбрасываются при каждом вызове "
"их методов encode(). Например::"

#: ../../whatsnew/3.3.rst:1007
msgid ""
">>> import codecs\n"
">>> encoder = codecs.getincrementalencoder('hz')('strict')\n"
">>> b''.join(encoder.encode(x) for x in '\\u52ff\\u65bd\\u65bc\\u4eba\\u3002 "
"Bye.')\n"
"b'~{NpJ)l6HK!#~} Bye.'"
msgstr ""
">>> import codecs\n"
">>> encoder = codecs.getincrementalencoder('hz')('strict')\n"
">>> b''.join(encoder.encode(x) for x in '\\u52ff\\u65bd\\u65bc\\u4eba\\u3002 "
"Bye.')\n"
"b'~{NpJ)l6HK!#~} Bye.'"

#: ../../whatsnew/3.3.rst:1012
msgid ""
"This example gives ``b'~{Np~}~{J)~}~{l6~}~{HK~}~{!#~} Bye.'`` with older "
"Python versions."
msgstr ""
"В этом примере выдается ``b'~{Np~}~{J)~}~{l6~}~{HK~}~{!#~} Bye.'`` со "
"старыми версиями Python."

#: ../../whatsnew/3.3.rst:1015
msgid "(:issue:`12100`)"
msgstr "(:issue:`12100`)"

#: ../../whatsnew/3.3.rst:1017
msgid "The ``unicode_internal`` codec has been deprecated."
msgstr "Кодек ``unicode_internal`` устарел."

#: ../../whatsnew/3.3.rst:1021
msgid "collections"
msgstr "коллекции"

#: ../../whatsnew/3.3.rst:1023
msgid ""
"Addition of a new :class:`~collections.ChainMap` class to allow treating a "
"number of mappings as a single unit.  (Written by Raymond Hettinger for :"
"issue:`11089`, made public in :issue:`11297`.)"
msgstr ""
"Добавлен новый класс :class:`~collections.ChainMap`, позволяющий "
"обрабатывать несколько отображений как единое целое. (Написано Рэймондом "
"Хеттингером для :issue:`11089`, опубликовано в :issue:`11297`.)"

#: ../../whatsnew/3.3.rst:1027
msgid ""
"The abstract base classes have been moved in a new :mod:`collections.abc` "
"module, to better differentiate between the abstract and the concrete "
"collections classes.  Aliases for ABCs are still present in the :mod:"
"`collections` module to preserve existing imports.  (:issue:`11085`)"
msgstr ""
"Абстрактные базовые классы были перенесены в новый модуль :mod:`collections."
"abc`, чтобы лучше различать абстрактные и конкретные классы коллекций. "
"Псевдонимы для ABC по-прежнему присутствуют в модуле :mod:`collections` для "
"сохранения существующего импорта. (:issue:`11085`)"

#: ../../whatsnew/3.3.rst:1034
msgid ""
"The :class:`~collections.Counter` class now supports the unary ``+`` and ``-"
"`` operators, as well as the in-place operators ``+=``, ``-=``, ``|=``, and "
"``&=``.  (Contributed by Raymond Hettinger in :issue:`13121`.)"
msgstr ""
"Класс :class:`~collections.Counter` теперь поддерживает унарные операторы "
"``+`` и ``-``, а также операторы ``+=``, ``-=``, ``|=`` и ``&=``. "
"(Предоставлено Рэймондом Хеттингером в :issue:`13121`.)"

#: ../../whatsnew/3.3.rst:1040
msgid "contextlib"
msgstr "contextlib"

#: ../../whatsnew/3.3.rst:1042
msgid ""
":class:`~contextlib.ExitStack` now provides a solid foundation for "
"programmatic manipulation of context managers and similar cleanup "
"functionality. Unlike the previous ``contextlib.nested`` API (which was "
"deprecated and removed), the new API is designed to work correctly "
"regardless of whether context managers acquire their resources in their "
"``__init__`` method (for example, file objects) or in their ``__enter__`` "
"method (for example, synchronisation objects from the :mod:`threading` "
"module)."
msgstr ""
":class:`~contextlib.ExitStack` теперь обеспечивает прочную основу для "
"программного манипулирования менеджерами контекста и аналогичных функций "
"очистки. В отличие от предыдущего API contextlib.nested (который устарел и "
"был удален), новый API предназначен для корректной работы независимо от "
"того, получают ли менеджеры контекста свои ресурсы в методе __init__ "
"(например, файловые объекты). или в их методе ``__enter__`` (например, "
"объекты синхронизации из модуля :mod:`threading`)."

#: ../../whatsnew/3.3.rst:1051
msgid "(:issue:`13585`)"
msgstr "(:issue:`13585`)"

#: ../../whatsnew/3.3.rst:1055
msgid "crypt"
msgstr "crypt"

#: ../../whatsnew/3.3.rst:1057
msgid ""
"Addition of salt and modular crypt format (hashing method) and the :func:"
"`~crypt.mksalt` function to the :mod:`crypt` module."
msgstr ""
"Добавление соли и модульного формата шифрования (метода хеширования) и "
"функции :func:`~crypt.mksalt` в модуль :mod:`crypt`."

#: ../../whatsnew/3.3.rst:1060
msgid "(:issue:`10924`)"
msgstr "(:issue:`10924`)"

#: ../../whatsnew/3.3.rst:1063
msgid "curses"
msgstr "curses"

#: ../../whatsnew/3.3.rst:1065
msgid ""
"If the :mod:`curses` module is linked to the ncursesw library, use Unicode "
"functions when Unicode strings or characters are passed (e.g. :c:func:"
"`waddwstr`), and bytes functions otherwise (e.g. :c:func:`waddstr`)."
msgstr ""
"Если модуль :mod:`curses` связан с библиотекой ncursesw, используйте функции "
"Unicode, когда передаются строки или символы Unicode (например, :c:func:"
"`waddwstr`), и функции bytes в противном случае (например, :c:func:` "
"ваддстр`)."

#: ../../whatsnew/3.3.rst:1068
msgid "Use the locale encoding instead of ``utf-8`` to encode Unicode strings."
msgstr ""
"Используйте кодировку локали вместо ``utf-8`` для кодирования строк Unicode."

#: ../../whatsnew/3.3.rst:1069
msgid ""
":class:`curses.window` has a new :attr:`curses.window.encoding` attribute."
msgstr ""
":class:`curses.window` имеет новый атрибут :attr:`curses.window.encoding`."

#: ../../whatsnew/3.3.rst:1070
msgid ""
"The :class:`curses.window` class has a new :meth:`~curses.window.get_wch` "
"method to get a wide character"
msgstr ""
"Класс :class:`curses.window` имеет новый метод :meth:`~curses.window."
"get_wch` для получения широкого символа."

#: ../../whatsnew/3.3.rst:1072
msgid ""
"The :mod:`curses` module has a new :meth:`~curses.unget_wch` function to "
"push a wide character so the next :meth:`~curses.window.get_wch` will return "
"it"
msgstr ""
"В модуле :mod:`curses` есть новая функция :meth:`~curses.unget_wch` для "
"ввода широкого символа, поэтому следующий :meth:`~curses.window.get_wch` "
"вернет его."

#: ../../whatsnew/3.3.rst:1076
msgid "(Contributed by Iñigo Serna in :issue:`6755`.)"
msgstr "(Предоставлено Иньиго Серной в :issue:`6755`.)"

#: ../../whatsnew/3.3.rst:1079
msgid "datetime"
msgstr "datetime"

#: ../../whatsnew/3.3.rst:1081
msgid ""
"Equality comparisons between naive and aware :class:`~datetime.datetime` "
"instances now return :const:`False` instead of raising :exc:`TypeError` (:"
"issue:`15006`)."
msgstr ""
"Сравнения на равенство между наивными и осведомленными экземплярами :class:"
"`~datetime.datetime` теперь возвращают :const:`False` вместо вызова :exc:"
"`TypeError` (:issue:`15006`)."

#: ../../whatsnew/3.3.rst:1084
msgid ""
"New :meth:`datetime.datetime.timestamp` method: Return POSIX timestamp "
"corresponding to the :class:`~datetime.datetime` instance."
msgstr ""
"Новый метод :meth:`datetime.datetime.timestamp`: возвращает временную метку "
"POSIX, соответствующую экземпляру :class:`~datetime.datetime`."

#: ../../whatsnew/3.3.rst:1086
msgid ""
"The :meth:`datetime.datetime.strftime` method supports formatting years "
"older than 1000."
msgstr ""
"Метод :meth:`datetime.datetime.strftime` поддерживает форматирование лет "
"старше 1000."

#: ../../whatsnew/3.3.rst:1088
msgid ""
"The :meth:`datetime.datetime.astimezone` method can now be called without "
"arguments to convert datetime instance to the system timezone."
msgstr ""
"Метод :meth:`datetime.datetime.astimezone` теперь можно вызывать без "
"аргументов для преобразования экземпляра datetime в системный часовой пояс."

#: ../../whatsnew/3.3.rst:1096
msgid "decimal"
msgstr "десятичный"

#: ../../whatsnew/3.3.rst:1098
msgid ":issue:`7652` - integrate fast native decimal arithmetic."
msgstr ":issue:`7652` - интеграция быстрой встроенной десятичной арифметики."

#: ../../whatsnew/3.3.rst:1099
msgid "C-module and libmpdec written by Stefan Krah."
msgstr "C-модуль и libmpdec, написанные Stefan Krah."

#: ../../whatsnew/3.3.rst:1101
msgid ""
"The new C version of the decimal module integrates the high speed libmpdec "
"library for arbitrary precision correctly rounded decimal floating-point "
"arithmetic. libmpdec conforms to IBM's General Decimal Arithmetic "
"Specification."
msgstr ""
"Новая версия C-модуля decimal объединяет высокоскоростную библиотеку "
"libmpdec для произвольной точности и правильного округления десятичных "
"арифметических операций с плавающей запятой. libmpdec соответствует Общей "
"спецификации десятичной арифметики IBM."

#: ../../whatsnew/3.3.rst:1105
msgid ""
"Performance gains range from 10x for database applications to 100x for "
"numerically intensive applications. These numbers are expected gains for "
"standard precisions used in decimal floating-point arithmetic. Since the "
"precision is user configurable, the exact figures may vary. For example, in "
"integer bignum arithmetic the differences can be significantly higher."
msgstr ""
"Прирост производительности варьируется от 10-кратного для приложений баз "
"данных до 100-кратного для приложений с интенсивным числом вычислений. Эти "
"числа являются ожидаемым увеличением стандартной точности, используемой в "
"десятичной арифметике с плавающей запятой. Поскольку точность настраивается "
"пользователем, точные цифры могут отличаться. Например, в целочисленной "
"арифметике bignum различия могут быть значительно выше."

#: ../../whatsnew/3.3.rst:1111
msgid ""
"The following table is meant as an illustration. Benchmarks are available at "
"https://www.bytereef.org/mpdecimal/quickstart.html."
msgstr ""
"Следующая таблица предназначена для иллюстрации. Контрольные показатели "
"доступны по адресу https://www.bytereef.org/mpdecimal/quickstart.html."

#: ../../whatsnew/3.3.rst:1115
msgid "decimal.py"
msgstr "decimal.py"

#: ../../whatsnew/3.3.rst:1115
msgid "_decimal"
msgstr "_decimal"

#: ../../whatsnew/3.3.rst:1115
msgid "speedup"
msgstr "ускорение"

#: ../../whatsnew/3.3.rst:1117
msgid "pi"
msgstr "pi"

#: ../../whatsnew/3.3.rst:1117
msgid "42.02s"
msgstr "42.02c"

#: ../../whatsnew/3.3.rst:1117
msgid "0.345s"
msgstr "0.345с"

#: ../../whatsnew/3.3.rst:1117
msgid "120x"
msgstr "120x"

#: ../../whatsnew/3.3.rst:1119
msgid "telco"
msgstr "telco"

#: ../../whatsnew/3.3.rst:1119
msgid "172.19s"
msgstr "172.19с"

#: ../../whatsnew/3.3.rst:1119
msgid "5.68s"
msgstr "5.68с"

#: ../../whatsnew/3.3.rst:1119
msgid "30x"
msgstr "30x"

#: ../../whatsnew/3.3.rst:1121
msgid "psycopg"
msgstr "psycopg"

#: ../../whatsnew/3.3.rst:1121
msgid "3.57s"
msgstr "3.57с"

#: ../../whatsnew/3.3.rst:1121
msgid "0.29s"
msgstr "0.29с"

#: ../../whatsnew/3.3.rst:1121
msgid "12x"
msgstr "12x"

#: ../../whatsnew/3.3.rst:1127
msgid ""
"The :exc:`~decimal.FloatOperation` signal optionally enables stricter "
"semantics for mixing floats and Decimals."
msgstr ""
"Сигнал :exc:`~decimal.FloatOperation` дополнительно включает более строгую "
"семантику для смешивания чисел с плавающей запятой и десятичных дробей."

#: ../../whatsnew/3.3.rst:1130
msgid ""
"If Python is compiled without threads, the C version automatically disables "
"the expensive thread local context machinery. In this case, the variable :"
"const:`~decimal.HAVE_THREADS` is set to ``False``."
msgstr ""
"Если Python скомпилирован без потоков, версия C автоматически отключает "
"дорогостоящий механизм локального контекста потока. В этом случае для "
"переменной :const:`~decimal.HAVE_THREADS` установлено значение ``False``."

#: ../../whatsnew/3.3.rst:1137
msgid ""
"The C module has the following context limits, depending on the machine "
"architecture:"
msgstr ""
"Модуль C имеет следующие ограничения контекста, в зависимости от архитектуры "
"машины:"

#: ../../whatsnew/3.3.rst:1141
msgid "32-bit"
msgstr "32-бит"

#: ../../whatsnew/3.3.rst:1141
msgid "64-bit"
msgstr "64-бит"

#: ../../whatsnew/3.3.rst:1143
msgid ":const:`MAX_PREC`"
msgstr ":const:`MAX_PREC`"

#: ../../whatsnew/3.3.rst:1143 ../../whatsnew/3.3.rst:1145
msgid "``425000000``"
msgstr "``425000000``"

#: ../../whatsnew/3.3.rst:1143 ../../whatsnew/3.3.rst:1145
msgid "``999999999999999999``"
msgstr "``999999999999999999``"

#: ../../whatsnew/3.3.rst:1145
msgid ":const:`MAX_EMAX`"
msgstr ":const:`MAX_EMAX`"

#: ../../whatsnew/3.3.rst:1147
msgid ":const:`MIN_EMIN`"
msgstr ":const:`MIN_EMIN`"

#: ../../whatsnew/3.3.rst:1147
msgid "``-425000000``"
msgstr "``-425000000``"

#: ../../whatsnew/3.3.rst:1147
msgid "``-999999999999999999``"
msgstr "``-999999999999999999``"

#: ../../whatsnew/3.3.rst:1150
msgid ""
"In the context templates (:const:`~decimal.DefaultContext`, :const:`~decimal."
"BasicContext` and :const:`~decimal.ExtendedContext`) the magnitude of :attr:"
"`~decimal.Context.Emax` and :attr:`~decimal.Context.Emin` has changed to "
"``999999``."
msgstr ""

#: ../../whatsnew/3.3.rst:1155
msgid ""
"The :class:`~decimal.Decimal` constructor in decimal.py does not observe the "
"context limits and converts values with arbitrary exponents or precision "
"exactly. Since the C version has internal limits, the following scheme is "
"used: If possible, values are converted exactly, otherwise :exc:`~decimal."
"InvalidOperation` is raised and the result is NaN. In the latter case it is "
"always possible to use :meth:`~decimal.Context.create_decimal` in order to "
"obtain a rounded or inexact value."
msgstr ""
"Конструктор :class:`~decimal.Decimal` в decimal.py не учитывает ограничения "
"контекста и точно преобразует значения с произвольными показателями степени "
"или точностью. Поскольку версия C имеет внутренние ограничения, используется "
"следующая схема: если возможно, значения преобразуются точно, в противном "
"случае возникает :exc:`~decimal.InvalidOperation` и результатом является "
"NaN. В последнем случае всегда можно использовать :meth:`~decimal.Context."
"create_decimal`, чтобы получить округленное или неточное значение."

#: ../../whatsnew/3.3.rst:1164
msgid ""
"The power function in decimal.py is always correctly rounded. In the C "
"version, it is defined in terms of the correctly rounded :meth:`~decimal."
"Decimal.exp` and :meth:`~decimal.Decimal.ln` functions, but the final result "
"is only \"almost always correctly rounded\"."
msgstr ""
"Степенная функция в decimal.py всегда правильно округляется. В версии C он "
"определяется в терминах правильно округленных функций :meth:`~decimal."
"Decimal.exp` и :meth:`~decimal.Decimal.ln`, но окончательный результат "
"\"почти всегда правильно округлен\". \"."

#: ../../whatsnew/3.3.rst:1170
msgid ""
"In the C version, the context dictionary containing the signals is a :class:"
"`~collections.abc.MutableMapping`.  For speed reasons, :attr:`~decimal."
"Context.flags` and :attr:`~decimal.Context.traps` always refer to the same :"
"class:`~collections.abc.MutableMapping` that the context was initialized "
"with. If a new signal dictionary is assigned, :attr:`~decimal.Context.flags` "
"and :attr:`~decimal.Context.traps` are updated with the new values, but they "
"do not reference the RHS dictionary."
msgstr ""
"В версии C контекстный словарь, содержащий сигналы, представляет собой :"
"class:`~collections.abc.MutableMapping`. Из соображений скорости :attr:"
"`~decimal.Context.flags` и :attr:`~decimal.Context.traps` всегда ссылаются "
"на тот же :class:`~collections.abc.MutableMapping`, которым был "
"инициализирован контекст. Если назначен новый словарь сигналов, :attr:"
"`~decimal.Context.flags` и :attr:`~decimal.Context.traps` обновляются новыми "
"значениями, но они не ссылаются на словарь RHS."

#: ../../whatsnew/3.3.rst:1180
msgid ""
"Pickling a :class:`~decimal.Context` produces a different output in order to "
"have a common interchange format for the Python and C versions."
msgstr ""
"Выбор :class:`~decimal.Context` дает другой вывод, чтобы иметь общий формат "
"обмена для версий Python и C."

#: ../../whatsnew/3.3.rst:1184
msgid ""
"The order of arguments in the :class:`~decimal.Context` constructor has been "
"changed to match the order displayed by :func:`repr`."
msgstr ""
"Порядок аргументов в конструкторе :class:`~decimal.Context` был изменен, "
"чтобы соответствовать порядку, отображаемому :func:`repr`."

#: ../../whatsnew/3.3.rst:1188
msgid ""
"The ``watchexp`` parameter in the :meth:`~decimal.Decimal.quantize` method "
"is deprecated."
msgstr "Параметр watchexp в методе :meth:`~decimal.Decimal.quantize` устарел."

#: ../../whatsnew/3.3.rst:1195
msgid "email"
msgstr "электронная почта"

#: ../../whatsnew/3.3.rst:1198
msgid "Policy Framework"
msgstr "Рамочная политика"

#: ../../whatsnew/3.3.rst:1200
msgid ""
"The email package now has a :mod:`~email.policy` framework.  A :class:"
"`~email.policy.Policy` is an object with several methods and properties that "
"control how the email package behaves.  The primary policy for Python 3.3 is "
"the :class:`~email.policy.Compat32` policy, which provides backward "
"compatibility with the email package in Python 3.2.  A ``policy`` can be "
"specified when an email message is parsed by a :mod:`~email.parser`, or when "
"a :class:`~email.message.Message` object is created, or when an email is "
"serialized using a :mod:`~email.generator`.  Unless overridden, a policy "
"passed to a ``parser`` is inherited by all the ``Message`` object and sub-"
"objects created by the ``parser``.  By default a ``generator`` will use the "
"policy of the ``Message`` object it is serializing.  The default policy is :"
"data:`~email.policy.compat32`."
msgstr ""
"Пакет электронной почты теперь имеет структуру :mod:`~email.policy`. :class:"
"`~email.policy.Policy` — это объект с несколькими методами и свойствами, "
"которые контролируют поведение пакета электронной почты. Основной политикой "
"Python 3.3 является политика :class:`~email.policy.Compat32`, которая "
"обеспечивает обратную совместимость с пакетом электронной почты в Python "
"3.2. ``Политика`` может быть указана, когда сообщение электронной почты "
"анализируется с помощью :mod:`~email.parser`, или когда создается объект :"
"class:`~email.message.Message`, или когда электронное письмо сериализуется с "
"помощью :mod:`~email.generator`. Если не переопределено, политика, "
"передаваемая в ``парсер``, наследуется всеми объектом ``Сообщение`` и "
"подобъектами, созданными ``парсером``. По умолчанию ``генератор`` будет "
"использовать политику объекта ``Message``, который он сериализует. Политика "
"по умолчанию: data:`~email.policy.compat32`."

#: ../../whatsnew/3.3.rst:1213
msgid "The minimum set of controls implemented by all ``policy`` objects are:"
msgstr ""
"Минимальный набор элементов управления, реализованный всеми объектами "
"политики:"

#: ../../whatsnew/3.3.rst:1218
msgid "max_line_length"
msgstr "max_line_length"

#: ../../whatsnew/3.3.rst:1218
msgid ""
"The maximum length, excluding the linesep character(s), individual lines may "
"have when a ``Message`` is serialized.  Defaults to 78."
msgstr ""
"Максимальная длина, исключая символы linesep, которую могут иметь отдельные "
"строки при сериализации сообщения. По умолчанию 78."

#: ../../whatsnew/3.3.rst:1222
msgid "linesep"
msgstr "linesep"

#: ../../whatsnew/3.3.rst:1222
msgid ""
"The character used to separate individual lines when a ``Message`` is "
"serialized.  Defaults to ``\\n``."
msgstr ""
"Символ, используемый для разделения отдельных строк при сериализации "
"сообщения. По умолчанию ``\\n``."

#: ../../whatsnew/3.3.rst:1225
msgid "cte_type"
msgstr "cte_type"

#: ../../whatsnew/3.3.rst:1225
msgid ""
"``7bit`` or ``8bit``.  ``8bit`` applies only to a ``Bytes`` ``generator``, "
"and means that non-ASCII may be used where allowed by the protocol (or where "
"it exists in the original input)."
msgstr ""
"``7бит`` или ``8бит``. ``8bit`` применяется только к ``Bytes`` "
"``генератору`` и означает, что код, отличный от ASCII, может использоваться "
"там, где это разрешено протоколом (или там, где он существует в исходном "
"вводе)."

#: ../../whatsnew/3.3.rst:1230
msgid "raise_on_defect"
msgstr "raise_on_defect"

#: ../../whatsnew/3.3.rst:1230
msgid ""
"Causes a ``parser`` to raise error when defects are encountered instead of "
"adding them to the ``Message`` object's ``defects`` list."
msgstr ""
"Заставляет ``парсер`` выдавать ошибку при обнаружении дефектов вместо "
"добавления их в список ``дефектов`` объекта ``Сообщение``."

#: ../../whatsnew/3.3.rst:1235
msgid ""
"A new policy instance, with new settings, is created using the :meth:`~email."
"policy.Policy.clone` method of policy objects.  ``clone`` takes any of the "
"above controls as keyword arguments.  Any control not specified in the call "
"retains its default value.  Thus you can create a policy that uses "
"``\\r\\n`` linesep characters like this::"
msgstr ""
"Новый экземпляр политики с новыми настройками создается с использованием "
"метода объектов политики :meth:`~email.policy.Policy.clone`. ``clone`` "
"принимает любой из вышеперечисленных элементов управления в качестве "
"аргументов ключевого слова. Любой элемент управления, не указанный в вызове, "
"сохраняет значение по умолчанию. Таким образом, вы можете создать политику, "
"которая использует символы строки ``\\r\\n``, например:"

#: ../../whatsnew/3.3.rst:1241
msgid "mypolicy = compat32.clone(linesep='\\r\\n')"
msgstr "mypolicy = compat32.clone(linesep='\\r\\n')"

#: ../../whatsnew/3.3.rst:1243
msgid ""
"Policies can be used to make the generation of messages in the format needed "
"by your application simpler.  Instead of having to remember to specify "
"``linesep='\\r\\n'`` in all the places you call a ``generator``, you can "
"specify it once, when you set the policy used by the ``parser`` or the "
"``Message``, whichever your program uses to create ``Message`` objects.  On "
"the other hand, if you need to generate messages in multiple forms, you can "
"still specify the parameters in the appropriate ``generator`` call.  Or you "
"can have custom policy instances for your different cases, and pass those in "
"when you create the ``generator``."
msgstr ""
"Политики можно использовать для упрощения генерации сообщений в формате, "
"необходимом вашему приложению. Вместо того, чтобы помнить об указании "
"``linesep='\\r\\n'`` во всех местах, где вы вызываете ``генератор``, вы "
"можете указать его один раз, когда вы устанавливаете политику, используемую "
"``парсером`` `или ``Message``, в зависимости от того, что ваша программа "
"использует для создания объектов ``Message``. С другой стороны, если вам "
"нужно генерировать сообщения в нескольких формах, вы все равно можете "
"указать параметры в соответствующем вызове генератора. Или вы можете иметь "
"собственные экземпляры политики для разных случаев и передавать их при "
"создании ``генератора``."

#: ../../whatsnew/3.3.rst:1255
msgid "Provisional Policy with New Header API"
msgstr "Предварительная политика с новым API заголовка"

#: ../../whatsnew/3.3.rst:1257
msgid ""
"While the policy framework is worthwhile all by itself, the main motivation "
"for introducing it is to allow the creation of new policies that implement "
"new features for the email package in a way that maintains backward "
"compatibility for those who do not use the new policies.  Because the new "
"policies introduce a new API, we are releasing them in Python 3.3 as a :term:"
"`provisional policy <provisional package>`.  Backwards incompatible changes "
"(up to and including removal of the code) may occur if deemed necessary by "
"the core developers."
msgstr ""
"Хотя структура политики сама по себе заслуживает внимания, основной "
"мотивацией ее внедрения является возможность создания новых политик, которые "
"реализуют новые функции для пакета электронной почты таким образом, чтобы "
"поддерживать обратную совместимость для тех, кто не использует новые "
"политики. Поскольку новые политики вводят новый API, мы выпускаем их в "
"Python 3.3 как :term:`предварительная политика <предварительный пакет>`. "
"Обратная несовместимость изменений (вплоть до удаления кода) может "
"произойти, если основные разработчики сочтут это необходимым."

#: ../../whatsnew/3.3.rst:1265
msgid ""
"The new policies are instances of :class:`~email.policy.EmailPolicy`, and "
"add the following additional controls:"
msgstr ""
"Новые политики являются экземплярами :class:`~email.policy.EmailPolicy` и "
"добавляют следующие дополнительные элементы управления:"

#: ../../whatsnew/3.3.rst:1271
msgid "refold_source"
msgstr "refold_source"

#: ../../whatsnew/3.3.rst:1271
msgid ""
"Controls whether or not headers parsed by a :mod:`~email.parser` are "
"refolded by the :mod:`~email.generator`.  It can be ``none``, ``long``, or "
"``all``.  The default is ``long``, which means that source headers with a "
"line longer than ``max_line_length`` get refolded.  ``none`` means no line "
"get refolded, and ``all`` means that all lines get refolded."
msgstr ""
"Определяет, будут ли заголовки, проанализированные :mod:`~email.parser`, "
"сворачиваться :mod:`~email.generator`. Это может быть ``none``, ``long`` или "
"``all``. По умолчанию установлено ``long``, что означает, что заголовки "
"источника со строкой длиной, превышающей ``max_line_length``, сворачиваются "
"заново. ``none`` означает, что ни одна строка не переворачивается, а ``all`` "
"означает, что все строки переворачиваются."

#: ../../whatsnew/3.3.rst:1280
msgid "header_factory"
msgstr "header_factory"

#: ../../whatsnew/3.3.rst:1280
msgid ""
"A callable that take a ``name`` and ``value`` and produces a custom header "
"object."
msgstr ""
"Вызываемый объект, который принимает ``имя`` и ``значение`` и создает "
"собственный объект заголовка."

#: ../../whatsnew/3.3.rst:1284
msgid ""
"The ``header_factory`` is the key to the new features provided by the new "
"policies.  When one of the new policies is used, any header retrieved from a "
"``Message`` object is an object produced by the ``header_factory``, and any "
"time you set a header on a ``Message`` it becomes an object produced by "
"``header_factory``.  All such header objects have a ``name`` attribute equal "
"to the header name.  Address and Date headers have additional attributes "
"that give you access to the parsed data of the header.  This means you can "
"now do things like this::"
msgstr ""
"«header_factory» — это ключ к новым функциям, предоставляемым новыми "
"политиками. Когда используется одна из новых политик, любой заголовок, "
"полученный из объекта ``Message``, является объектом, созданным "
"``header_factory``, и каждый раз, когда вы устанавливаете заголовок для "
"``Message``, он становится объектом. произведено ``header_factory``. Все "
"такие объекты заголовков имеют атрибут ``name``, равный имени заголовка. "
"Заголовки «Адрес» и «Дата» имеют дополнительные атрибуты, которые "
"предоставляют доступ к анализируемым данным заголовка. Это означает, что "
"теперь вы можете делать такие вещи::"

#: ../../whatsnew/3.3.rst:1293
msgid ""
">>> m = Message(policy=SMTP)\n"
">>> m['To'] = 'Éric <foo@example.com>'\n"
">>> m['to']\n"
"'Éric <foo@example.com>'\n"
">>> m['to'].addresses\n"
"(Address(display_name='Éric', username='foo', domain='example.com'),)\n"
">>> m['to'].addresses[0].username\n"
"'foo'\n"
">>> m['to'].addresses[0].display_name\n"
"'Éric'\n"
">>> m['Date'] = email.utils.localtime()\n"
">>> m['Date'].datetime\n"
"datetime.datetime(2012, 5, 25, 21, 39, 24, 465484, tzinfo=datetime."
"timezone(datetime.timedelta(-1, 72000), 'EDT'))\n"
">>> m['Date']\n"
"'Fri, 25 May 2012 21:44:27 -0400'\n"
">>> print(m)\n"
"To: =?utf-8?q?=C3=89ric?= <foo@example.com>\n"
"Date: Fri, 25 May 2012 21:44:27 -0400"
msgstr ""
">>> m = Message(policy=SMTP)\n"
">>> m['To'] = 'Éric <foo@example.com>'\n"
">>> m['to']\n"
"'Éric <foo@example.com>'\n"
">>> m['to'].addresses\n"
"(Address(display_name='Éric', username='foo', domain='example.com'),)\n"
">>> m['to'].addresses[0].username\n"
"'foo'\n"
">>> m['to'].addresses[0].display_name\n"
"'Éric'\n"
">>> m['Date'] = email.utils.localtime()\n"
">>> m['Date'].datetime\n"
"datetime.datetime(2012, 5, 25, 21, 39, 24, 465484, tzinfo=datetime."
"timezone(datetime.timedelta(-1, 72000), 'EDT'))\n"
">>> m['Date']\n"
"'Fri, 25 May 2012 21:44:27 -0400'\n"
">>> print(m)\n"
"To: =?utf-8?q?=C3=89ric?= <foo@example.com>\n"
"Date: Fri, 25 May 2012 21:44:27 -0400"

#: ../../whatsnew/3.3.rst:1312
msgid ""
"You will note that the unicode display name is automatically encoded as "
"``utf-8`` when the message is serialized, but that when the header is "
"accessed directly, you get the unicode version.  This eliminates any need to "
"deal with the :mod:`email.header` :meth:`~email.header.decode_header` or :"
"meth:`~email.header.make_header` functions."
msgstr ""
"Вы заметите, что отображаемое имя в Юникоде автоматически кодируется как "
"«utf-8» при сериализации сообщения, но при прямом доступе к заголовку вы "
"получаете версию в Юникоде. Это устраняет необходимость иметь дело с "
"функциями :mod:`email.header` :meth:`~email.header.decode_header` или :meth:"
"`~email.header.make_header`."

#: ../../whatsnew/3.3.rst:1318
msgid "You can also create addresses from parts::"
msgstr "Вы также можете создавать адреса из частей::"

#: ../../whatsnew/3.3.rst:1320
msgid ""
">>> m['cc'] = [Group('pals', [Address('Bob', 'bob', 'example.com'),\n"
"...                           Address('Sally', 'sally', 'example.com')]),\n"
"...            Address('Bonzo', addr_spec='bonz@laugh.com')]\n"
">>> print(m)\n"
"To: =?utf-8?q?=C3=89ric?= <foo@example.com>\n"
"Date: Fri, 25 May 2012 21:44:27 -0400\n"
"cc: pals: Bob <bob@example.com>, Sally <sally@example.com>;, Bonzo "
"<bonz@laugh.com>"
msgstr ""
">>> m['cc'] = [Group('pals', [Address('Bob', 'bob', 'example.com'),\n"
"...                           Address('Sally', 'sally', 'example.com')]),\n"
"...            Address('Bonzo', addr_spec='bonz@laugh.com')]\n"
">>> print(m)\n"
"To: =?utf-8?q?=C3=89ric?= <foo@example.com>\n"
"Date: Fri, 25 May 2012 21:44:27 -0400\n"
"cc: pals: Bob <bob@example.com>, Sally <sally@example.com>;, Bonzo "
"<bonz@laugh.com>"

#: ../../whatsnew/3.3.rst:1328
msgid "Decoding to unicode is done automatically::"
msgstr "Декодирование в юникод происходит автоматически:"

#: ../../whatsnew/3.3.rst:1330
msgid ""
">>> m2 = message_from_string(str(m))\n"
">>> m2['to']\n"
"'Éric <foo@example.com>'"
msgstr ""
">>> m2 = message_from_string(str(m))\n"
">>> m2['to']\n"
"'Éric <foo@example.com>'"

#: ../../whatsnew/3.3.rst:1334
msgid ""
"When you parse a message, you can use the ``addresses`` and ``groups`` "
"attributes of the header objects to access the groups and individual "
"addresses::"
msgstr ""
"При анализе сообщения вы можете использовать атрибуты ``addresses`` и "
"``groups`` объектов заголовка для доступа к группам и отдельным адресам:"

#: ../../whatsnew/3.3.rst:1338
msgid ""
">>> m2['cc'].addresses\n"
"(Address(display_name='Bob', username='bob', domain='example.com'), "
"Address(display_name='Sally', username='sally', domain='example.com'), "
"Address(display_name='Bonzo', username='bonz', domain='laugh.com'))\n"
">>> m2['cc'].groups\n"
"(Group(display_name='pals', addresses=(Address(display_name='Bob', "
"username='bob', domain='example.com'), Address(display_name='Sally', "
"username='sally', domain='example.com')), Group(display_name=None, "
"addresses=(Address(display_name='Bonzo', username='bonz', domain='laugh."
"com'),))"
msgstr ""
">>> m2['cc'].addresses\n"
"(Address(display_name='Bob', username='bob', domain='example.com'), "
"Address(display_name='Sally', username='sally', domain='example.com'), "
"Address(display_name='Bonzo', username='bonz', domain='laugh.com'))\n"
">>> m2['cc'].groups\n"
"(Group(display_name='pals', addresses=(Address(display_name='Bob', "
"username='bob', domain='example.com'), Address(display_name='Sally', "
"username='sally', domain='example.com')), Group(display_name=None, "
"addresses=(Address(display_name='Bonzo', username='bonz', domain='laugh."
"com'),))"

#: ../../whatsnew/3.3.rst:1343
msgid ""
"In summary, if you use one of the new policies, header manipulation works "
"the way it ought to:  your application works with unicode strings, and the "
"email package transparently encodes and decodes the unicode to and from the "
"RFC standard Content Transfer Encodings."
msgstr ""
"Таким образом, если вы используете одну из новых политик, манипулирование "
"заголовками работает так, как должно: ваше приложение работает со строками в "
"Юникоде, а пакет электронной почты прозрачно кодирует и декодирует Юникод в "
"стандартные кодировки передачи контента RFC и обратно."

#: ../../whatsnew/3.3.rst:1349
msgid "Other API Changes"
msgstr "Другие изменения в API"

#: ../../whatsnew/3.3.rst:1351
msgid ""
"New :class:`~email.parser.BytesHeaderParser`, added to the :mod:`~email."
"parser` module to complement :class:`~email.parser.HeaderParser` and "
"complete the Bytes API."
msgstr ""
"Новый :class:`~email.parser.BytesHeaderParser`, добавленный в модуль :mod:"
"`~email.parser` для дополнения :class:`~email.parser.HeaderParser` и "
"завершения API Bytes."

#: ../../whatsnew/3.3.rst:1355
msgid "New utility functions:"
msgstr "Новые полезные функции:"

#: ../../whatsnew/3.3.rst:1357
msgid ""
":func:`~email.utils.format_datetime`: given a :class:`~datetime.datetime`, "
"produce a string formatted for use in an email header."
msgstr ""
":func:`~email.utils.format_datetime`: учитывая :class:`~datetime.datetime`, "
"создайте строку, отформатированную для использования в заголовке "
"электронного письма."

#: ../../whatsnew/3.3.rst:1360
msgid ""
":func:`~email.utils.parsedate_to_datetime`: given a date string from an "
"email header, convert it into an aware :class:`~datetime.datetime`, or a "
"naive :class:`~datetime.datetime` if the offset is ``-0000``."
msgstr ""
":func:`~email.utils.parsedate_to_datetime`: получив строку даты из заголовка "
"электронного письма, преобразуйте ее в понятный :class:`~datetime.datetime` "
"или наивный :class:`~datetime.datetime`, если смещение равно ``-0000``."

#: ../../whatsnew/3.3.rst:1364
msgid ""
":func:`~email.utils.localtime`: With no argument, returns the current local "
"time as an aware :class:`~datetime.datetime` using the local :class:"
"`~datetime.timezone`.  Given an aware :class:`~datetime.datetime`, converts "
"it into an aware :class:`~datetime.datetime` using the local :class:"
"`~datetime.timezone`."
msgstr ""
":func:`~email.utils.localtime`: Без аргументов возвращает текущее местное "
"время как известное :class:`~datetime.datetime` с использованием локального :"
"class:`~datetime.timezone`. Учитывая известный :class:`~datetime.datetime`, "
"преобразует его в известный :class:`~datetime.datetime`, используя "
"локальный :class:`~datetime.timezone`."

#: ../../whatsnew/3.3.rst:1372
msgid "ftplib"
msgstr "ftplib"

#: ../../whatsnew/3.3.rst:1374
msgid ""
":class:`ftplib.FTP` now accepts a ``source_address`` keyword argument to "
"specify the ``(host, port)`` to use as the source address in the bind call "
"when creating the outgoing socket.  (Contributed by Giampaolo Rodolà in :"
"issue:`8594`.)"
msgstr ""
":class:`ftplib.FTP` теперь принимает аргумент ключевого слова "
"``source_address``, чтобы указать ``(хост, порт)``, который будет "
"использоваться в качестве исходного адреса в вызове связывания при создании "
"исходящего сокета. (Предоставлено Джампаоло Родола в :issue:`8594`.)"

#: ../../whatsnew/3.3.rst:1379
msgid ""
"The :class:`~ftplib.FTP_TLS` class now provides a new :func:`~ftplib.FTP_TLS."
"ccc` function to revert control channel back to plaintext.  This can be "
"useful to take advantage of firewalls that know how to handle NAT with non-"
"secure FTP without opening fixed ports.  (Contributed by Giampaolo Rodolà "
"in :issue:`12139`.)"
msgstr ""
"Класс :class:`~ftplib.FTP_TLS` теперь предоставляет новую функцию :func:"
"`~ftplib.FTP_TLS.ccc` для возврата канала управления обратно в открытый "
"текст. Это может быть полезно для использования брандмауэров, которые умеют "
"обрабатывать NAT с незащищенным FTP без открытия фиксированных портов. "
"(Предоставлено Джампаоло Родола в :issue:`12139`.)"

#: ../../whatsnew/3.3.rst:1385
msgid ""
"Added :meth:`ftplib.FTP.mlsd` method which provides a parsable directory "
"listing format and deprecates :meth:`ftplib.FTP.nlst` and :meth:`ftplib.FTP."
"dir`.  (Contributed by Giampaolo Rodolà in :issue:`11072`.)"
msgstr ""
"Добавлен метод :meth:`ftplib.FTP.mlsd`, который предоставляет анализируемый "
"формат списка каталогов и объявляет устаревшим :meth:`ftplib.FTP.nlst` и :"
"meth:`ftplib.FTP.dir`. (Предоставлено Джампаоло Родола в :issue:`11072`.)"

#: ../../whatsnew/3.3.rst:1391
msgid "functools"
msgstr "functools"

#: ../../whatsnew/3.3.rst:1393
msgid ""
"The :func:`functools.lru_cache` decorator now accepts a ``typed`` keyword "
"argument (that defaults to ``False`` to ensure that it caches values of "
"different types that compare equal in separate cache slots.  (Contributed by "
"Raymond Hettinger in :issue:`13227`.)"
msgstr ""
"Декоратор :func:`functools.lru_cache` теперь принимает аргумент ключевого "
"слова ``typed`` (который по умолчанию имеет значение ``False``, чтобы "
"гарантировать, что он кэширует значения разных типов, которые сравниваются "
"равными, в отдельных слотах кэша. (Разработано Рэймондом) Хеттингер в :issue:"
"`13227`.)"

#: ../../whatsnew/3.3.rst:1400
msgid "gc"
msgstr "gc"

#: ../../whatsnew/3.3.rst:1402
msgid ""
"It is now possible to register callbacks invoked by the garbage collector "
"before and after collection using the new :data:`~gc.callbacks` list."
msgstr ""
"Теперь можно регистрировать обратные вызовы, вызываемые сборщиком мусора до "
"и после сбора, используя новый список :data:`~gc.callbacks`."

#: ../../whatsnew/3.3.rst:1407
msgid "hmac"
msgstr "hmac"

#: ../../whatsnew/3.3.rst:1409
msgid ""
"A new :func:`~hmac.compare_digest` function has been added to prevent side "
"channel attacks on digests through timing analysis.  (Contributed by Nick "
"Coghlan and Christian Heimes in :issue:`15061`.)"
msgstr ""
"Была добавлена ​​новая функция :func:`~hmac.compare_digest` для предотвращения "
"атак по побочным каналам на дайджесты посредством временного анализа. "
"(Предоставлено Ником Когланом и Кристианом Хаймсом в :issue:`15061`.)"

#: ../../whatsnew/3.3.rst:1415
msgid "http"
msgstr "http"

#: ../../whatsnew/3.3.rst:1417
msgid ""
":class:`http.server.BaseHTTPRequestHandler` now buffers the headers and "
"writes them all at once when :meth:`~http.server.BaseHTTPRequestHandler."
"end_headers` is called.  A new method :meth:`~http.server."
"BaseHTTPRequestHandler.flush_headers` can be used to directly manage when "
"the accumulated headers are sent. (Contributed by Andrew Schaaf in :issue:"
"`3709`.)"
msgstr ""
":class:`http.server.BaseHTTPRequestHandler` теперь буферизует заголовки и "
"записывает их все одновременно при вызове :meth:`~http.server."
"BaseHTTPRequestHandler.end_headers`. Новый метод :meth:`~http.server."
"BaseHTTPRequestHandler.flush_headers` можно использовать для "
"непосредственного управления отправкой накопленных заголовков. "
"(Предоставлено Эндрю Шаафом в :issue:`3709`.)"

#: ../../whatsnew/3.3.rst:1423
msgid ""
":class:`http.server` now produces valid ``HTML 4.01 strict`` output. "
"(Contributed by Ezio Melotti in :issue:`13295`.)"
msgstr ""
":class:`http.server` теперь выдаёт корректный вывод ``HTML 4.01 strict``. "
"(Предоставлено Эцио Мелотти в :issue:`13295`.)"

#: ../../whatsnew/3.3.rst:1426
msgid ""
":class:`http.client.HTTPResponse` now has a :meth:`~http.client.HTTPResponse."
"readinto` method, which means it can be used as an :class:`io.RawIOBase` "
"class.  (Contributed by John Kuhn in :issue:`13464`.)"
msgstr ""
":class:`http.client.HTTPResponse` теперь имеет метод :meth:`~http.client."
"HTTPResponse.readinto`, что означает, что его можно использовать как класс :"
"class:`io.RawIOBase`. (Предоставлено Джоном Куном в :issue:`13464`.)"

#: ../../whatsnew/3.3.rst:1433
msgid "html"
msgstr "html"

#: ../../whatsnew/3.3.rst:1435
msgid ""
":class:`html.parser.HTMLParser` is now able to parse broken markup without "
"raising errors, therefore the *strict* argument of the constructor and the :"
"exc:`~html.parser.HTMLParseError` exception are now deprecated. The ability "
"to parse broken markup is the result of a number of bug fixes that are also "
"available on the latest bug fix releases of Python 2.7/3.2. (Contributed by "
"Ezio Melotti in :issue:`15114`, and :issue:`14538`, :issue:`13993`, :issue:"
"`13960`, :issue:`13358`, :issue:`1745761`, :issue:`755670`, :issue:`13357`, :"
"issue:`12629`, :issue:`1200313`, :issue:`670664`, :issue:`13273`, :issue:"
"`12888`, :issue:`7311`.)"
msgstr ""
":class:`html.parser.HTMLParser` теперь может анализировать сломанную "
"разметку, не вызывая ошибок, поэтому аргумент *strict* конструктора и "
"исключение :exc:`~html.parser.HTMLParser` теперь устарели. Возможность "
"анализировать сломанную разметку является результатом ряда исправлений "
"ошибок, которые также доступны в последних версиях Python 2.7/3.2 с "
"исправлениями ошибок. (Внесено Эцио Мелотти в :issue:`15114`, :issue:"
"`14538`, :issue:`13993`, :issue:`13960`, :issue:`13358`, :issue:`1745761`, : "
"Issue:`755670`, :issue:`13357`, :issue:`12629`, :issue:`1200313`, :issue:"
"`670664`, :issue:`13273`, :issue:`12888`, :issue :`7311`.)"

#: ../../whatsnew/3.3.rst:1445
msgid ""
"A new :data:`~html.entities.html5` dictionary that maps HTML5 named "
"character references to the equivalent Unicode character(s) (e.g. "
"``html5['gt;'] == '>'``) has been added to the :mod:`html.entities` module.  "
"The dictionary is now also used by :class:`~html.parser.HTMLParser`.  "
"(Contributed by Ezio Melotti in :issue:`11113` and :issue:`15156`.)"
msgstr ""
"Добавлен новый словарь :data:`~html.entities.html5`, который сопоставляет "
"ссылки на именованные символы HTML5 с эквивалентными символами Юникода "
"(например, ``html5['gt;'] == '>'``). в модуль :mod:`html.entities`. Словарь "
"теперь также используется :class:`~html.parser.HTMLParser`. (Внесено Эцио "
"Мелотти в :issue:`11113` и :issue:`15156`.)"

#: ../../whatsnew/3.3.rst:1453
msgid "imaplib"
msgstr "imaplib"

#: ../../whatsnew/3.3.rst:1455
msgid ""
"The :class:`~imaplib.IMAP4_SSL` constructor now accepts an SSLContext "
"parameter to control parameters of the secure channel."
msgstr ""
"Конструктор :class:`~imaplib.IMAP4_SSL` теперь принимает параметр SSLContext "
"для управления параметрами безопасного канала."

#: ../../whatsnew/3.3.rst:1458
msgid "(Contributed by Sijin Joseph in :issue:`8808`.)"
msgstr "(Внесено Сиджином Джозефом в :issue:`8808`.)"

#: ../../whatsnew/3.3.rst:1462
msgid "inspect"
msgstr "inspect"

#: ../../whatsnew/3.3.rst:1464
msgid ""
"A new :func:`~inspect.getclosurevars` function has been added. This function "
"reports the current binding of all names referenced from the function body "
"and where those names were resolved, making it easier to verify correct "
"internal state when testing code that relies on stateful closures."
msgstr ""
"Добавлена ​​новая функция :func:`~inspect.getclosurevars`. Эта функция "
"сообщает о текущей привязке всех имен, на которые есть ссылки из тела "
"функции, и о том, где эти имена были разрешены, что упрощает проверку "
"правильного внутреннего состояния при тестировании кода, основанного на "
"замыканиях с отслеживанием состояния."

#: ../../whatsnew/3.3.rst:1469
msgid "(Contributed by Meador Inge and Nick Coghlan in :issue:`13062`.)"
msgstr "(Предоставлено Мидором Инге и Ником Когланом в :issue:`13062`.)"

#: ../../whatsnew/3.3.rst:1471
msgid ""
"A new :func:`~inspect.getgeneratorlocals` function has been added. This "
"function reports the current binding of local variables in the generator's "
"stack frame, making it easier to verify correct internal state when testing "
"generators."
msgstr ""
"Добавлена ​​новая функция :func:`~inspect.getgeneratorlocals`. Эта функция "
"сообщает о текущей привязке локальных переменных в кадре стека генератора, "
"что упрощает проверку правильного внутреннего состояния при тестировании "
"генераторов."

#: ../../whatsnew/3.3.rst:1476
msgid "(Contributed by Meador Inge in :issue:`15153`.)"
msgstr "(Предоставлено Мидором Инге в :issue:`15153`.)"

#: ../../whatsnew/3.3.rst:1479
msgid "io"
msgstr "io"

#: ../../whatsnew/3.3.rst:1481
msgid ""
"The :func:`~io.open` function has a new ``'x'`` mode that can be used to "
"exclusively create a new file, and raise a :exc:`FileExistsError` if the "
"file already exists. It is based on the C11 'x' mode to fopen()."
msgstr ""
"Функция :func:`~io.open` имеет новый режим ``'x'``, который можно "
"использовать исключительно для создания нового файла и вызова :exc:"
"`FileExistsError`, если файл уже существует. Он основан на режиме C11 'x' "
"для fopen()."

#: ../../whatsnew/3.3.rst:1485
msgid "(Contributed by David Townshend in :issue:`12760`.)"
msgstr "(Предоставлено Дэвидом Тауншендом в :issue:`12760`.)"

#: ../../whatsnew/3.3.rst:1487
msgid ""
"The constructor of the :class:`~io.TextIOWrapper` class has a new "
"*write_through* optional argument. If *write_through* is ``True``, calls to :"
"meth:`~io.TextIOWrapper.write` are guaranteed not to be buffered: any data "
"written on the :class:`~io.TextIOWrapper` object is immediately handled to "
"its underlying binary buffer."
msgstr ""
"Конструктор класса :class:`~io.TextIOWrapper` имеет новый необязательный "
"аргумент *write_through*. Если *write_through* имеет значение True, вызовы :"
"meth:`~io.TextIOWrapper.write` гарантированно не будут буферизованы: любые "
"данные, записанные в объекте :class:`~io.TextIOWrapper`, немедленно "
"обрабатываются его базовый двоичный буфер."

#: ../../whatsnew/3.3.rst:1495
msgid "itertools"
msgstr "itertools"

#: ../../whatsnew/3.3.rst:1497
msgid ""
":func:`~itertools.accumulate` now takes an optional ``func`` argument for "
"providing a user-supplied binary function."
msgstr ""
":func:`~itertools.accumulate` теперь принимает необязательный аргумент func "
"для предоставления двоичной функции, предоставляемой пользователем."

#: ../../whatsnew/3.3.rst:1502
msgid "logging"
msgstr "логирование"

#: ../../whatsnew/3.3.rst:1504
msgid ""
"The :func:`~logging.basicConfig` function now supports an optional "
"``handlers`` argument taking an iterable of handlers to be added to the root "
"logger."
msgstr ""
"Функция :func:`~logging.basicConfig` теперь поддерживает необязательный "
"аргумент ``handlers``, принимающий итерацию обработчиков, которые будут "
"добавлены в корневой регистратор."

#: ../../whatsnew/3.3.rst:1507
msgid ""
"A class level attribute :attr:`~logging.handlers.SysLogHandler.append_nul` "
"has been added to :class:`~logging.handlers.SysLogHandler` to allow control "
"of the appending of the ``NUL`` (``\\000``) byte to syslog records, since "
"for some daemons it is required while for others it is passed through to the "
"log."
msgstr ""
"Атрибут уровня класса :attr:`~logging.handlers.SysLogHandler.append_nul` был "
"добавлен в :class:`~logging.handlers.SysLogHandler`, чтобы позволить "
"контролировать добавление ``NUL`` (``\\000 ``) байт в записи системного "
"журнала, поскольку для некоторых демонов он требуется, а для других он "
"передается в журнал."

#: ../../whatsnew/3.3.rst:1515
msgid "math"
msgstr "математика"

#: ../../whatsnew/3.3.rst:1517
msgid ""
"The :mod:`math` module has a new function, :func:`~math.log2`,  which "
"returns the base-2 logarithm of *x*."
msgstr ""
"В модуле :mod:`math` появилась новая функция :func:`~math.log2`, которая "
"возвращает логарифм по основанию 2 от *x*."

#: ../../whatsnew/3.3.rst:1520
msgid "(Written by Mark Dickinson in :issue:`11888`.)"
msgstr "(Написано Марком Дикинсоном в :issue:`11888`.)"

#: ../../whatsnew/3.3.rst:1524
msgid "mmap"
msgstr "mmap"

#: ../../whatsnew/3.3.rst:1526
msgid ""
"The :meth:`~mmap.mmap.read` method is now more compatible with other file-"
"like objects: if the argument is omitted or specified as ``None``, it "
"returns the bytes from the current file position to the end of the mapping.  "
"(Contributed by Petri Lehtinen in :issue:`12021`.)"
msgstr ""
"Метод :meth:`~mmap.mmap.read` теперь более совместим с другими "
"файлоподобными объектами: если аргумент опущен или указан как ``None``, он "
"возвращает байты от текущей позиции файла до конца. картографии. "
"(Предоставлено Петри Лехтиненом в :issue:`12021`.)"

#: ../../whatsnew/3.3.rst:1533
msgid "multiprocessing"
msgstr "multiprocessing"

#: ../../whatsnew/3.3.rst:1535
msgid ""
"The new :func:`multiprocessing.connection.wait` function allows polling "
"multiple objects (such as connections, sockets and pipes) with a timeout. "
"(Contributed by Richard Oudkerk in :issue:`12328`.)"
msgstr ""
"Новая функция multiprocessing.connection.wait позволяет опрашивать несколько "
"объектов (таких как соединения, сокеты и каналы) с таймаутом. (Предоставлено "
"Ричардом Оудкерком в :issue:`12328`.)"

#: ../../whatsnew/3.3.rst:1539
msgid ""
":class:`multiprocessing.Connection` objects can now be transferred over "
"multiprocessing connections. (Contributed by Richard Oudkerk in :issue:"
"`4892`.)"
msgstr ""
"Объекты :class:`multiprocessing.Connection` теперь можно передавать через "
"многопроцессорные соединения. (Предоставлено Ричардом Оудкерком в :issue:"
"`4892`.)"

#: ../../whatsnew/3.3.rst:1543
msgid ""
":class:`multiprocessing.Process` now accepts a ``daemon`` keyword argument "
"to override the default behavior of inheriting the ``daemon`` flag from the "
"parent process (:issue:`6064`)."
msgstr ""
":class:`multiprocessing.Process` теперь принимает аргумент ключевого слова "
"``daemon``, чтобы переопределить поведение по умолчанию, заключающееся в "
"наследовании флага ``daemon`` от родительского процесса (:issue:`6064`)."

#: ../../whatsnew/3.3.rst:1547
msgid ""
"New attribute :data:`multiprocessing.Process.sentinel` allows a program to "
"wait on multiple :class:`~multiprocessing.Process` objects at one time using "
"the appropriate OS primitives (for example, :mod:`select` on posix systems)."
msgstr ""
"Новый атрибут :data:`multiprocessing.Process.sentinel` позволяет программе "
"одновременно ожидать обработки нескольких объектов :class:`~multiprocessing."
"Process`, используя соответствующие примитивы ОС (например, :mod:`select` в "
"системах posix )."

#: ../../whatsnew/3.3.rst:1552
msgid ""
"New methods :meth:`multiprocessing.pool.Pool.starmap` and :meth:"
"`~multiprocessing.pool.Pool.starmap_async` provide :func:`itertools.starmap` "
"equivalents to the existing :meth:`multiprocessing.pool.Pool.map` and :meth:"
"`~multiprocessing.pool.Pool.map_async` functions.  (Contributed by Hynek "
"Schlawack in :issue:`12708`.)"
msgstr ""
"Новые методы :meth:`multiprocessing.pool.Pool.starmap` и :meth:"
"`~multiprocessing.pool.Pool.starmap_async` предоставляют :func:`itertools."
"starmap` эквиваленты существующего :meth:`multiprocessing.pool.Pool Функции ."
"map` и :meth:`~multiprocessing.pool.Pool.map_async`. (Предоставлено Хайнеком "
"Шлаваком в :issue:`12708`.)"

#: ../../whatsnew/3.3.rst:1561
msgid "nntplib"
msgstr "nntplib"

#: ../../whatsnew/3.3.rst:1563
msgid ""
"The :class:`nntplib.NNTP` class now supports the context management protocol "
"to unconditionally consume :exc:`socket.error` exceptions and to close the "
"NNTP connection when done::"
msgstr ""
"Класс :class:`nntplib.NNTP` теперь поддерживает протокол управления "
"контекстом для безусловного использования исключений :exc:`socket.error` и "
"закрытия NNTP-соединения после завершения::"

#: ../../whatsnew/3.3.rst:1567
msgid ""
">>> from nntplib import NNTP\n"
">>> with NNTP('news.gmane.org') as n:\n"
"...     n.group('gmane.comp.python.committers')\n"
"...\n"
"('211 1755 1 1755 gmane.comp.python.committers', 1755, 1, 1755, 'gmane.comp."
"python.committers')\n"
">>>"
msgstr ""
">>> from nntplib import NNTP\n"
">>> with NNTP('news.gmane.org') as n:\n"
"...     n.group('gmane.comp.python.committers')\n"
"...\n"
"('211 1755 1 1755 gmane.comp.python.committers', 1755, 1, 1755, 'gmane.comp."
"python.committers')\n"
">>>"

#: ../../whatsnew/3.3.rst:1574
msgid "(Contributed by Giampaolo Rodolà in :issue:`9795`.)"
msgstr "(Предоставлено Джампаоло Родола в :issue:`9795`.)"

#: ../../whatsnew/3.3.rst:1578
msgid "os"
msgstr "os"

#: ../../whatsnew/3.3.rst:1580
msgid ""
"The :mod:`os` module has a new :func:`~os.pipe2` function that makes it "
"possible to create a pipe with :const:`~os.O_CLOEXEC` or :const:`~os."
"O_NONBLOCK` flags set atomically. This is especially useful to avoid race "
"conditions in multi-threaded programs."
msgstr ""
"Модуль :mod:`os` имеет новую функцию :func:`~os.pipe2`, которая позволяет "
"создавать канал с флагами :const:`~os.O_CLOEXEC` или :const:`~os."
"O_NONBLOCK`. установить атомарно. Это особенно полезно для предотвращения "
"состояний гонки в многопоточных программах."

#: ../../whatsnew/3.3.rst:1585
msgid ""
"The :mod:`os` module has a new :func:`~os.sendfile` function which provides "
"an efficient \"zero-copy\" way for copying data from one file (or socket) "
"descriptor to another. The phrase \"zero-copy\" refers to the fact that all "
"of the copying of data between the two descriptors is done entirely by the "
"kernel, with no copying of data into userspace buffers. :func:`~os.sendfile` "
"can be used to efficiently copy data from a file on disk to a network "
"socket, e.g. for downloading a file."
msgstr ""
"Модуль :mod:`os` имеет новую функцию :func:`~os.sendfile`, которая "
"обеспечивает эффективный способ копирования данных из одного дескриптора "
"файла (или сокета) с «нулевым копированием» в другой. Фраза «нулевое "
"копирование» относится к тому факту, что все копирование данных между двумя "
"дескрипторами полностью выполняется ядром, без копирования данных в буферы "
"пользовательского пространства. :func:`~os.sendfile` можно использовать для "
"эффективного копирования данных из файла на диске в сетевой сокет, например, "
"для загрузки файла."

#: ../../whatsnew/3.3.rst:1593
msgid ""
"(Patch submitted by Ross Lagerwall and Giampaolo Rodolà in :issue:`10882`.)"
msgstr ""
"(Патч представлен Россом Лагерволлом и Джампаоло Родоло в :issue:`10882`.)"

#: ../../whatsnew/3.3.rst:1595
msgid ""
"To avoid race conditions like symlink attacks and issues with temporary "
"files and directories, it is more reliable (and also faster) to manipulate "
"file descriptors instead of file names. Python 3.3 enhances existing "
"functions and introduces new functions to work on file descriptors (:issue:"
"`4761`, :issue:`10755` and :issue:`14626`)."
msgstr ""
"Чтобы избежать состояний гонки, таких как атаки по символическим ссылкам и "
"проблемы с временными файлами и каталогами, надежнее (и быстрее) "
"манипулировать дескрипторами файлов, а не именами файлов. Python 3.3 "
"расширяет существующие функции и вводит новые функции для работы с файловыми "
"дескрипторами (:issue:`4761`, :issue:`10755` и :issue:`14626`)."

#: ../../whatsnew/3.3.rst:1601
msgid ""
"The :mod:`os` module has a new :func:`~os.fwalk` function similar to :func:"
"`~os.walk` except that it also yields file descriptors referring to the "
"directories visited. This is especially useful to avoid symlink races."
msgstr ""
"Модуль :mod:`os` имеет новую функцию :func:`~os.fwalk`, аналогичную :func:"
"`~os.walk`, за исключением того, что она также возвращает файловые "
"дескрипторы, ссылающиеся на посещенные каталоги. Это особенно полезно, чтобы "
"избежать гонок по символическим ссылкам."

#: ../../whatsnew/3.3.rst:1605
msgid ""
"The following functions get new optional *dir_fd* (:ref:`paths relative to "
"directory descriptors <dir_fd>`) and/or *follow_symlinks* (:ref:`not "
"following symlinks <follow_symlinks>`): :func:`~os.access`, :func:`~os."
"chflags`, :func:`~os.chmod`, :func:`~os.chown`, :func:`~os.link`, :func:`~os."
"lstat`, :func:`~os.mkdir`, :func:`~os.mkfifo`, :func:`~os.mknod`, :func:`~os."
"open`, :func:`~os.readlink`, :func:`~os.remove`, :func:`~os.rename`, :func:"
"`~os.replace`, :func:`~os.rmdir`, :func:`~os.stat`, :func:`~os.symlink`, :"
"func:`~os.unlink`, :func:`~os.utime`.  Platform support for using these "
"parameters can be checked via the sets :data:`os.supports_dir_fd` and :data:"
"`os.supports_follows_symlinks`."
msgstr ""
"Следующие функции получают новые дополнительные *dir_fd* (:ref:`пути "
"относительно дескрипторов каталогов <dir_fd>`) и/или *follow_symlinks* (:ref:"
"`не следующие символические ссылки <follow_symlinks>`): :func:`~os ."
"access`, :func:`~os.chflags`, :func:`~os.chmod`, :func:`~os.chown`, :func:"
"`~os.link`, :func:`~os .lstat`, :func:`~os.mkdir`, :func:`~os.mkfifo`, :func:"
"`~os.mknod`, :func:`~os.open`, :func:`~os .readlink`, :func:`~os.remove`, :"
"func:`~os.rename`, :func:`~os.replace`, :func:`~os.rmdir`, :func:`~os ."
"stat`, :func:`~os.symlink`, :func:`~os.unlink`, :func:`~os.utime`. Поддержка "
"платформы для использования этих параметров можно проверить с помощью "
"наборов :data:`os.supports_dir_fd` и :data:`os.supports_follows_symlinks`."

#: ../../whatsnew/3.3.rst:1616
msgid ""
"The following functions now support a file descriptor for their path "
"argument: :func:`~os.chdir`, :func:`~os.chmod`, :func:`~os.chown`, :func:"
"`~os.execve`, :func:`~os.listdir`, :func:`~os.pathconf`, :func:`~os.path."
"exists`, :func:`~os.stat`, :func:`~os.statvfs`, :func:`~os.utime`.  Platform "
"support for this can be checked via the :data:`os.supports_fd` set."
msgstr ""
"Следующие функции теперь поддерживают дескриптор файла в качестве аргумента "
"пути: :func:`~os.chdir`, :func:`~os.chmod`, :func:`~os.chown`, :func:`~os. "
"execve`, :func:`~os.listdir`, :func:`~os.pathconf`, :func:`~os.path."
"exists`, :func:`~os.stat`, :func:`~ os.statvfs`, :func:`~os.utime`. "
"Поддержка платформы для этого может быть проверена с помощью набора :data:"
"`os.supports_fd`."

#: ../../whatsnew/3.3.rst:1622
msgid ""
":func:`~os.access` accepts an ``effective_ids`` keyword argument to turn on "
"using the effective uid/gid rather than the real uid/gid in the access "
"check. Platform support for this can be checked via the :data:`~os."
"supports_effective_ids` set."
msgstr ""
":func:`~os.access` принимает аргумент ключевого слова ``efficient_ids`` для "
"включения использования эффективного uid/gid, а не реального uid/gid при "
"проверке доступа. Поддержка платформы для этого может быть проверена с "
"помощью набора :data:`~os.supports_efficient_ids`."

#: ../../whatsnew/3.3.rst:1627
msgid ""
"The :mod:`os` module has two new functions: :func:`~os.getpriority` and :"
"func:`~os.setpriority`. They can be used to get or set process niceness/"
"priority in a fashion similar to :func:`os.nice` but extended to all "
"processes instead of just the current one."
msgstr ""
"Модуль :mod:`os` имеет две новые функции: :func:`~os.getpriority` и :func:"
"`~os.setpriority`. Их можно использовать для получения или установки "
"приоритета/приятности процесса аналогично :func:`os.nice`, но "
"распространяется на все процессы, а не только на текущий."

#: ../../whatsnew/3.3.rst:1632
msgid "(Patch submitted by Giampaolo Rodolà in :issue:`10784`.)"
msgstr "(Патч предоставлен Джампаоло Родолом в :issue:`10784`.)"

#: ../../whatsnew/3.3.rst:1634
msgid ""
"The new :func:`os.replace` function allows cross-platform renaming of a file "
"with overwriting the destination.  With :func:`os.rename`, an existing "
"destination file is overwritten under POSIX, but raises an error under "
"Windows. (Contributed by Antoine Pitrou in :issue:`8828`.)"
msgstr ""
"Новая функция :func:`os.replace` позволяет кросс-платформенное "
"переименование файла с перезаписью места назначения. При использовании :func:"
"`os.rename` существующий файл назначения перезаписывается в POSIX, но "
"вызывает ошибку в Windows. (Предоставлено Антуаном Питру в :issue:`8828`.)"

#: ../../whatsnew/3.3.rst:1640
msgid ""
"The stat family of functions (:func:`~os.stat`, :func:`~os.fstat`, and :func:"
"`~os.lstat`) now support reading a file's timestamps with nanosecond "
"precision.  Symmetrically, :func:`~os.utime` can now write file timestamps "
"with nanosecond precision.  (Contributed by Larry Hastings in :issue:"
"`14127`.)"
msgstr ""
"Семейство функций stat (:func:`~os.stat`, :func:`~os.fstat` и :func:`~os."
"lstat`) теперь поддерживает чтение временных меток файла с точностью до "
"наносекунды. Симметрично, :func:`~os.utime` теперь может записывать "
"временные метки файлов с точностью до наносекунды. (Предоставлено Ларри "
"Гастингсом в :issue:`14127`.)"

#: ../../whatsnew/3.3.rst:1646
msgid ""
"The new :func:`os.get_terminal_size` function queries the size of the "
"terminal attached to a file descriptor. See also :func:`shutil."
"get_terminal_size`. (Contributed by Zbigniew Jędrzejewski-Szmek in :issue:"
"`13609`.)"
msgstr ""
"Новая функция :func:`os.get_terminal_size` запрашивает размер терминала, "
"прикрепленного к файловому дескриптору. См. также :func:`shutil."
"get_terminal_size`. (Предоставлено Збигневом Енджеевским-Шмеком в :issue:"
"`13609`.)"

#: ../../whatsnew/3.3.rst:1653
msgid ""
"New functions to support Linux extended attributes (:issue:`12720`): :func:"
"`~os.getxattr`, :func:`~os.listxattr`, :func:`~os.removexattr`, :func:`~os."
"setxattr`."
msgstr ""
"Новые функции для поддержки расширенных атрибутов Linux (:issue:`12720`): :"
"func:`~os.getxattr`, :func:`~os.listxattr`, :func:`~os.removexattr`, :func:` "
"~os.setxattr`."

#: ../../whatsnew/3.3.rst:1657
msgid ""
"New interface to the scheduler. These functions control how a process is "
"allocated CPU time by the operating system. New functions: :func:`~os."
"sched_get_priority_max`, :func:`~os.sched_get_priority_min`, :func:`~os."
"sched_getaffinity`, :func:`~os.sched_getparam`, :func:`~os."
"sched_getscheduler`, :func:`~os.sched_rr_get_interval`, :func:`~os."
"sched_setaffinity`, :func:`~os.sched_setparam`, :func:`~os."
"sched_setscheduler`, :func:`~os.sched_yield`,"
msgstr ""
"Новый интерфейс планировщика. Эти функции управляют тем, как операционная "
"система распределяет процессорное время процессу. Новые функции: :func:`~os."
"sched_get_priority_max`, :func:`~os.sched_get_priority_min`, :func:`~os."
"sched_getaffinity`, :func:`~os.sched_getparam`, :func:`~os. "
"sched_getscheduler`, :func:`~os.sched_rr_get_interval`, :func:`~os."
"sched_setaffinity`, :func:`~os.sched_setparam`, :func:`~os."
"sched_setscheduler`, :func:`~os. план_доходности`,"

#: ../../whatsnew/3.3.rst:1666
msgid "New functions to control the file system:"
msgstr "Новые функции для управления файловой системой:"

#: ../../whatsnew/3.3.rst:1668
msgid ""
":func:`~os.posix_fadvise`: Announces an intention to access data in a "
"specific pattern thus allowing the kernel to make optimizations."
msgstr ""
":func:`~os.posix_fadvise`: Объявляет о намерении получить доступ к данным по "
"определенному шаблону, что позволяет ядру выполнять оптимизацию."

#: ../../whatsnew/3.3.rst:1670
msgid ""
":func:`~os.posix_fallocate`: Ensures that enough disk space is allocated for "
"a file."
msgstr ""
":func:`~os.posix_fallocate`: Гарантирует, что для файла выделено достаточно "
"места на диске."

#: ../../whatsnew/3.3.rst:1672
msgid ":func:`~os.sync`: Force write of everything to disk."
msgstr ":func:`~os.sync`: Принудительная запись всего на диск."

#: ../../whatsnew/3.3.rst:1674
msgid "Additional new  posix functions:"
msgstr "Дополнительные новые функции posix:"

#: ../../whatsnew/3.3.rst:1676
msgid ""
":func:`~os.lockf`: Apply, test or remove a POSIX lock on an open file "
"descriptor."
msgstr ""
":func:`~os.lockf`: Применить, проверить или удалить блокировку POSIX для "
"открытого файлового дескриптора."

#: ../../whatsnew/3.3.rst:1677
msgid ""
":func:`~os.pread`: Read from a file descriptor at an offset, the file offset "
"remains unchanged."
msgstr ""
":func:`~os.pread`: Читается из дескриптора файла по смещению, смещение файла "
"остается неизменным."

#: ../../whatsnew/3.3.rst:1679
msgid ""
":func:`~os.pwrite`: Write to a file descriptor from an offset, leaving the "
"file offset unchanged."
msgstr ""
":func:`~os.pwrite`: Запись в дескриптор файла по смещению, оставляя смещение "
"файла неизменным."

#: ../../whatsnew/3.3.rst:1681
msgid ""
":func:`~os.readv`: Read from a file descriptor into a number of writable "
"buffers."
msgstr ""
":func:`~os.readv`: Чтение из файлового дескриптора в несколько записываемых "
"буферов."

#: ../../whatsnew/3.3.rst:1682
msgid ""
":func:`~os.truncate`: Truncate the file corresponding to *path*, so that it "
"is at most *length* bytes in size."
msgstr ""
":func:`~os.truncate`: Усекает файл, соответствующий *path*, чтобы его размер "
"не превышал *length* байт."

#: ../../whatsnew/3.3.rst:1684
msgid ""
":func:`~os.waitid`: Wait for the completion of one or more child processes."
msgstr ""
":func:`~os.waitid`: Дождитесь завершения одного или нескольких дочерних "
"процессов."

#: ../../whatsnew/3.3.rst:1685
msgid ""
":func:`~os.writev`: Write the contents of *buffers* to a file descriptor, "
"where *buffers* is an arbitrary sequence of buffers."
msgstr ""
":func:`~os.writev`: Записывает содержимое *buffers* в файловый дескриптор, "
"где *buffers* — это произвольная последовательность буферов."

#: ../../whatsnew/3.3.rst:1687
msgid ""
":func:`~os.getgrouplist` (:issue:`9344`): Return list of group ids that "
"specified user belongs to."
msgstr ""
":func:`~os.getgrouplist` (:issue:`9344`): Возвращает список идентификаторов "
"групп, к которым принадлежит указанный пользователь."

#: ../../whatsnew/3.3.rst:1690
msgid ""
":func:`~os.times` and :func:`~os.uname`: Return type changed from a tuple to "
"a tuple-like object with named attributes."
msgstr ""
":func:`~os.times` и :func:`~os.uname`: тип возвращаемого значения изменен с "
"кортежа на объект, подобный кортежу, с именованными атрибутами."

#: ../../whatsnew/3.3.rst:1693
msgid ""
"Some platforms now support additional constants for the :func:`~os.lseek` "
"function, such as ``os.SEEK_HOLE`` and ``os.SEEK_DATA``."
msgstr ""
"Некоторые платформы теперь поддерживают дополнительные константы для "
"функции :func:`~os.lseek`, такие как os.SEEK_HOLE и os.SEEK_DATA."

#: ../../whatsnew/3.3.rst:1696
msgid ""
"New constants :const:`~os.RTLD_LAZY`, :const:`~os.RTLD_NOW`, :const:`~os."
"RTLD_GLOBAL`, :const:`~os.RTLD_LOCAL`, :const:`~os.RTLD_NODELETE`, :const:"
"`~os.RTLD_NOLOAD`, and :const:`~os.RTLD_DEEPBIND` are available on platforms "
"that support them.   These are for use with the :func:`sys.setdlopenflags` "
"function, and supersede the similar constants defined in :mod:`ctypes` and :"
"mod:`DLFCN`.  (Contributed by Victor Stinner in :issue:`13226`.)"
msgstr ""
"Новые константы :const:`~os.RTLD_LAZY`, :const:`~os.RTLD_NOW`, :const:`~os."
"RTLD_GLOBAL`, :const:`~os.RTLD_LOCAL`, :const:`~os.RTLD_NODELETE `, :const:"
"`~os.RTLD_NOLOAD` и :const:`~os.RTLD_DEEPBIND` доступны на платформах, "
"которые их поддерживают. Они предназначены для использования с функцией :"
"func:`sys.setdlopenflags` и заменяют аналогичные константы, определенные в :"
"mod:`ctypes` и :mod:`DLFCN`. (Предоставлено Виктором Стиннером в :issue:"
"`13226`.)"

#: ../../whatsnew/3.3.rst:1704
msgid ""
":func:`os.symlink` now accepts (and ignores) the ``target_is_directory`` "
"keyword argument on non-Windows platforms, to ease cross-platform support."
msgstr ""
":func:`os.symlink` теперь принимает (и игнорирует) аргумент ключевого слова "
"``target_is_directory`` на платформах, отличных от Windows, чтобы облегчить "
"кросс-платформенную поддержку."

#: ../../whatsnew/3.3.rst:1709
msgid "pdb"
msgstr "pdb"

#: ../../whatsnew/3.3.rst:1711
msgid ""
"Tab-completion is now available not only for command names, but also their "
"arguments.  For example, for the ``break`` command, function and file names "
"are completed."
msgstr ""
"Дополнение по табуляции теперь доступно не только для имен команд, но и для "
"их аргументов. Например, для команды «break» имена функций и файлов "
"дополняются."

#: ../../whatsnew/3.3.rst:1715
msgid "(Contributed by Georg Brandl in :issue:`14210`)"
msgstr "(Предоставлено Георгом Брандлом в :issue:`14210`)"

#: ../../whatsnew/3.3.rst:1719
msgid "pickle"
msgstr "pickle"

#: ../../whatsnew/3.3.rst:1721
msgid ""
":class:`pickle.Pickler` objects now have an optional :attr:`~pickle.Pickler."
"dispatch_table` attribute allowing per-pickler reduction functions to be set."
msgstr ""
"Объекты :class:`pickle.Pickler` теперь имеют дополнительный атрибут :attr:"
"`~pickle.Pickler.dispatch_table`, позволяющий устанавливать функции "
"сокращения для каждого пиклера."

#: ../../whatsnew/3.3.rst:1725
msgid "(Contributed by Richard Oudkerk in :issue:`14166`.)"
msgstr "(Предоставлено Ричардом Оудкерком в :issue:`14166`.)"

#: ../../whatsnew/3.3.rst:1729
msgid "pydoc"
msgstr "pydoc"

#: ../../whatsnew/3.3.rst:1731
msgid ""
"The Tk GUI and the :func:`~pydoc.serve` function have been removed from the :"
"mod:`pydoc` module: ``pydoc -g`` and :func:`~pydoc.serve` have been "
"deprecated in Python 3.2."
msgstr ""
"Графический интерфейс Tk и функция :func:`~pydoc.serve` были удалены из "
"модуля :mod:`pydoc`: ``pydoc -g`` и :func:`~pydoc.serve` устарели в Python. "
"3.2."

#: ../../whatsnew/3.3.rst:1737
msgid "re"
msgstr "re"

#: ../../whatsnew/3.3.rst:1739
msgid ""
":class:`str` regular expressions now support ``\\u`` and ``\\U`` escapes."
msgstr ""
":class:`str` Регулярные выражения теперь поддерживают escape-символы ``\\u`` "
"и ``\\U``."

#: ../../whatsnew/3.3.rst:1741
msgid "(Contributed by Serhiy Storchaka in :issue:`3665`.)"
msgstr "(Предоставлено Сергеем Сторчакой в ​​:issue:`3665`.)"

#: ../../whatsnew/3.3.rst:1745
msgid "sched"
msgstr "sched"

#: ../../whatsnew/3.3.rst:1747
msgid ""
":meth:`~sched.scheduler.run` now accepts a *blocking* parameter which when "
"set to false makes the method execute the scheduled events due to expire "
"soonest (if any) and then return immediately. This is useful in case you "
"want to use the :class:`~sched.scheduler` in non-blocking applications.  "
"(Contributed by Giampaolo Rodolà in :issue:`13449`.)"
msgstr ""
":meth:`~sched.scheduler.run` теперь принимает параметр *blocking*, который, "
"если ему присвоено значение false, заставляет метод выполнять "
"запланированные события, срок действия которых истекает раньше всего (если "
"таковые имеются), а затем немедленно возвращаться. Это полезно, если вы "
"хотите использовать :class:`~sched.scheduler` в неблокирующих приложениях. "
"(Предоставлено Джампаоло Родола в :issue:`13449`.)"

#: ../../whatsnew/3.3.rst:1753
msgid ""
":class:`~sched.scheduler` class can now be safely used in multi-threaded "
"environments.  (Contributed by Josiah Carlson and Giampaolo Rodolà in :issue:"
"`8684`.)"
msgstr ""
"Класс :class:`~sched.scheduler` теперь можно безопасно использовать в "
"многопоточных средах. (Предоставлено Джозайей Карлсоном и Джампаоло Родола "
"в :issue:`8684`.)"

#: ../../whatsnew/3.3.rst:1757
msgid ""
"*timefunc* and *delayfunct* parameters of :class:`~sched.scheduler` class "
"constructor are now optional and defaults to :func:`time.time` and :func:"
"`time.sleep` respectively.  (Contributed by Chris Clark in :issue:`13245`.)"
msgstr ""
"Параметры *timefunc* и *delayfunct* конструктора класса :class:`~sched."
"scheduler` теперь являются необязательными и по умолчанию имеют значения :"
"func:`time.time` и :func:`time.sleep` соответственно. (Предоставлено Крисом "
"Кларком в :issue:`13245`.)"

#: ../../whatsnew/3.3.rst:1762
msgid ""
":meth:`~sched.scheduler.enter` and :meth:`~sched.scheduler.enterabs` "
"*argument* parameter is now optional.  (Contributed by Chris Clark in :issue:"
"`13245`.)"
msgstr ""
"Параметр *argument* :meth:`~sched.scheduler.enter` и :meth:`~sched.scheduler."
"enterabs` теперь является необязательным. (Предоставлено Крисом Кларком в :"
"issue:`13245`.)"

#: ../../whatsnew/3.3.rst:1766
msgid ""
":meth:`~sched.scheduler.enter` and :meth:`~sched.scheduler.enterabs` now "
"accept a *kwargs* parameter.  (Contributed by Chris Clark in :issue:`13245`.)"
msgstr ""
":meth:`~sched.scheduler.enter` и :meth:`~sched.scheduler.enterabs` теперь "
"принимают параметр *kwargs*. (Предоставлено Крисом Кларком в :issue:`13245`.)"

#: ../../whatsnew/3.3.rst:1772
msgid "select"
msgstr "select"

#: ../../whatsnew/3.3.rst:1774
msgid ""
"Solaris and derivative platforms have a new class :class:`select.devpoll` "
"for high performance asynchronous sockets via :file:`/dev/poll`. "
"(Contributed by Jesús Cea Avión in :issue:`6397`.)"
msgstr ""
"Solaris и производные платформы имеют новый класс :class:`select.devpoll` "
"для высокопроизводительных асинхронных сокетов через :file:`/dev/poll`. "
"(Предоставлено Хесусом Сеа Авионом в :issue:`6397`.)"

#: ../../whatsnew/3.3.rst:1780
msgid "shlex"
msgstr "shlex"

#: ../../whatsnew/3.3.rst:1782
msgid ""
"The previously undocumented helper function ``quote`` from the :mod:`pipes` "
"modules has been moved to the :mod:`shlex` module and documented.  :func:"
"`~shlex.quote` properly escapes all characters in a string that might be "
"otherwise given special meaning by the shell."
msgstr ""
"Ранее недокументированная вспомогательная функция ``quote`` из модулей :mod:"
"`pipes` была перенесена в модуль :mod:`shlex` и задокументирована. :func:"
"`~shlex.quote` правильно экранирует все символы в строке, которым в "
"противном случае оболочка могла бы придать особое значение."

#: ../../whatsnew/3.3.rst:1789
msgid "shutil"
msgstr "shutil"

#: ../../whatsnew/3.3.rst:1791
msgid "New functions:"
msgstr "Новые функции:"

#: ../../whatsnew/3.3.rst:1793
msgid ""
":func:`~shutil.disk_usage`: provides total, used and free disk space "
"statistics.  (Contributed by Giampaolo Rodolà in :issue:`12442`.)"
msgstr ""
":func:`~shutil.disk_usage`: предоставляет статистику общего, использованного "
"и свободного дискового пространства. (Предоставлено Джампаоло Родола в :"
"issue:`12442`.)"

#: ../../whatsnew/3.3.rst:1795
msgid ""
":func:`~shutil.chown`: allows one to change user and/or group of the given "
"path also specifying the user/group names and not only their numeric ids.  "
"(Contributed by Sandro Tosi in :issue:`12191`.)"
msgstr ""
":func:`~shutil.chown`: позволяет изменить пользователя и/или группу по "
"заданному пути, также указав имена пользователей/групп, а не только их "
"числовые идентификаторы. (Предоставлено Сандро Този в :issue:`12191`.)"

#: ../../whatsnew/3.3.rst:1798
msgid ""
":func:`shutil.get_terminal_size`: returns the size of the terminal window to "
"which the interpreter is attached.  (Contributed by Zbigniew Jędrzejewski-"
"Szmek in :issue:`13609`.)"
msgstr ""
":func:`shutil.get_terminal_size`: возвращает размер окна терминала, к "
"которому подключен интерпретатор. (Предоставлено Збигневом Енджеевским-"
"Шмеком в :issue:`13609`.)"

#: ../../whatsnew/3.3.rst:1802
msgid ""
":func:`~shutil.copy2` and :func:`~shutil.copystat` now preserve file "
"timestamps with nanosecond precision on platforms that support it. They also "
"preserve file \"extended attributes\" on Linux.  (Contributed by Larry "
"Hastings in :issue:`14127` and  :issue:`15238`.)"
msgstr ""
":func:`~shutil.copy2` и :func:`~shutil.copystat` теперь сохраняют временные "
"метки файлов с точностью до наносекунды на платформах, которые это "
"поддерживают. Они также сохраняют «расширенные атрибуты» файлов в Linux. "
"(Предоставлено Ларри Гастингсом в :issue:`14127` и :issue:`15238`.)"

#: ../../whatsnew/3.3.rst:1807
msgid ""
"Several functions now take an optional ``symlinks`` argument: when that "
"parameter is true, symlinks aren't dereferenced and the operation instead "
"acts on the symlink itself (or creates one, if relevant). (Contributed by "
"Hynek Schlawack in :issue:`12715`.)"
msgstr ""
"Некоторые функции теперь принимают необязательный аргумент ``symlinks``: "
"если этот параметр имеет значение true, символические ссылки не "
"разыменовываются, а операция вместо этого воздействует на саму символическую "
"ссылку (или создает ее, если это необходимо). (Предоставлено Хайнеком "
"Шлаваком в :issue:`12715`.)"

#: ../../whatsnew/3.3.rst:1812
msgid ""
"When copying files to a different file system, :func:`~shutil.move` now "
"handles symlinks the way the posix ``mv`` command does, recreating the "
"symlink rather than copying the target file contents.  (Contributed by "
"Jonathan Niehof in :issue:`9993`.)  :func:`~shutil.move` now also returns "
"the ``dst`` argument as its result."
msgstr ""
"При копировании файлов в другую файловую систему :func:`~shutil.move` теперь "
"обрабатывает символические ссылки так же, как это делает команда posix "
"``mv``, воссоздавая символическую ссылку, а не копируя содержимое целевого "
"файла. (Внесено Джонатаном Нихофом в :issue:`9993`.) :func:`~shutil.move` "
"теперь также возвращает в качестве результата аргумент ``dst``."

#: ../../whatsnew/3.3.rst:1818
msgid ""
":func:`~shutil.rmtree` is now resistant to symlink attacks on platforms "
"which support the new ``dir_fd`` parameter in :func:`os.open` and :func:`os."
"unlink`.  (Contributed by Martin von Löwis and Hynek Schlawack in :issue:"
"`4489`.)"
msgstr ""
":func:`~shutil.rmtree` теперь устойчив к атакам по символическим ссылкам на "
"платформах, которые поддерживают новый параметр ``dir_fd`` в :func:`os.open` "
"и :func:`os.unlink`. (Предоставлено Мартином фон Лёвисом и Хайнеком Шлаваком "
"в :issue:`4489`.)"

#: ../../whatsnew/3.3.rst:1825
msgid "signal"
msgstr "сигнал"

#: ../../whatsnew/3.3.rst:1827
msgid "The :mod:`signal` module has new functions:"
msgstr "Модуль :mod:`signal` имеет новые функции:"

#: ../../whatsnew/3.3.rst:1829
msgid ""
":func:`~signal.pthread_sigmask`: fetch and/or change the signal mask of the "
"calling thread (Contributed by Jean-Paul Calderone in :issue:`8407`);"
msgstr ""
":func:`~signal.pthread_sigmask`: извлекает и/или изменяет маску сигнала "
"вызывающего потока (предоставлен Жан-Полем Кальдероном в :issue:`8407`);"

#: ../../whatsnew/3.3.rst:1831
msgid ":func:`~signal.pthread_kill`: send a signal to a thread;"
msgstr ":func:`~signal.pthread_kill`: отправить сигнал потоку;"

#: ../../whatsnew/3.3.rst:1832
msgid ":func:`~signal.sigpending`: examine pending functions;"
msgstr ":func:`~signal.sigpending`: проверить ожидающие функции;"

#: ../../whatsnew/3.3.rst:1833
msgid ":func:`~signal.sigwait`: wait a signal;"
msgstr ":func:`~signal.sigwait`: дождаться сигнала;"

#: ../../whatsnew/3.3.rst:1834
msgid ""
":func:`~signal.sigwaitinfo`: wait for a signal, returning detailed "
"information about it;"
msgstr ""
":func:`~signal.sigwaitinfo`: ожидание сигнала, возвращающее подробную "
"информацию о нем;"

#: ../../whatsnew/3.3.rst:1836
msgid ""
":func:`~signal.sigtimedwait`: like :func:`~signal.sigwaitinfo` but with a "
"timeout."
msgstr ""
":func:`~signal.sigtimedwait`: аналогично :func:`~signal.sigwaitinfo`, но с "
"таймаутом."

#: ../../whatsnew/3.3.rst:1839
msgid ""
"The signal handler writes the signal number as a single byte instead of a "
"nul byte into the wakeup file descriptor. So it is possible to wait more "
"than one signal and know which signals were raised."
msgstr ""
"Обработчик сигнала записывает номер сигнала в дескриптор файла пробуждения в "
"виде одного байта вместо нулевого байта. Таким образом, можно дождаться "
"более одного сигнала и узнать, какие сигналы были подняты."

#: ../../whatsnew/3.3.rst:1843
msgid ""
":func:`signal.signal` and :func:`signal.siginterrupt` raise an OSError, "
"instead of a RuntimeError: OSError has an errno attribute."
msgstr ""
":func:`signal.signal` и :func:`signal.siginterrupt` вызывают OSError вместо "
"RuntimeError: OSError имеет атрибут errno."

#: ../../whatsnew/3.3.rst:1848
msgid "smtpd"
msgstr "smtpd"

#: ../../whatsnew/3.3.rst:1850
msgid ""
"The :mod:`!smtpd` module now supports :rfc:`5321` (extended SMTP) and :rfc:"
"`1870` (size extension).  Per the standard, these extensions are enabled if "
"and only if the client initiates the session with an ``EHLO`` command."
msgstr ""
"Модуль :mod:`!smtpd` теперь поддерживает :rfc:`5321` (расширенный SMTP) и :"
"rfc:`1870` (расширение размера). Согласно стандарту, эти расширения включены "
"тогда и только тогда, когда клиент инициирует сеанс с помощью команды EHLO."

#: ../../whatsnew/3.3.rst:1854
msgid ""
"(Initial ``ELHO`` support by Alberto Trevino.  Size extension by Juhana "
"Jauhiainen.  Substantial additional work on the patch contributed by Michele "
"Orrù and Dan Boswell.  :issue:`8739`)"
msgstr ""
"(Первоначальная поддержка «ELHO» — Альберто Тревино. Расширение размера — "
"Юхана Яухиайнен. Значительную дополнительную работу над патчем внесли Мишель "
"Орру и Дэн Босуэлл. :issue:`8739`)"

#: ../../whatsnew/3.3.rst:1860
msgid "smtplib"
msgstr "smtplib"

#: ../../whatsnew/3.3.rst:1862
msgid ""
"The :class:`~smtplib.SMTP`, :class:`~smtplib.SMTP_SSL`, and :class:`~smtplib."
"LMTP` classes now accept a ``source_address`` keyword argument to specify "
"the ``(host, port)`` to use as the source address in the bind call when "
"creating the outgoing socket.  (Contributed by Paulo Scardine in :issue:"
"`11281`.)"
msgstr ""
"Классы :class:`~smtplib.SMTP`, :class:`~smtplib.SMTP_SSL` и :class:`~smtplib."
"LMTP` теперь принимают аргумент ключевого слова ``source_address`` для "
"указания ``(host, port)`` для использования в качестве исходного адреса в "
"вызове привязки при создании исходящего сокета. (Предоставлено Пауло "
"Скардином в :issue:`11281`.)"

#: ../../whatsnew/3.3.rst:1868
msgid ""
":class:`~smtplib.SMTP` now supports the context management protocol, "
"allowing an ``SMTP`` instance to be used in a ``with`` statement.  "
"(Contributed by Giampaolo Rodolà in :issue:`11289`.)"
msgstr ""
":class:`~smtplib.SMTP` теперь поддерживает протокол управления контекстом, "
"позволяя использовать экземпляр ``SMTP`` в операторе ``with``. "
"(Предоставлено Джампаоло Родола в :issue:`11289`.)"

#: ../../whatsnew/3.3.rst:1872
msgid ""
"The :class:`~smtplib.SMTP_SSL` constructor and the :meth:`~smtplib.SMTP."
"starttls` method now accept an SSLContext parameter to control parameters of "
"the secure channel.  (Contributed by Kasun Herath in :issue:`8809`.)"
msgstr ""
"Конструктор :class:`~smtplib.SMTP_SSL` и метод :meth:`~smtplib.SMTP."
"starttls` теперь принимают параметр SSLContext для управления параметрами "
"безопасного канала. (Предоставлено Касуном Хератом в :issue:`8809`.)"

#: ../../whatsnew/3.3.rst:1878
msgid "socket"
msgstr "сокет"

#: ../../whatsnew/3.3.rst:1880
msgid ""
"The :class:`~socket.socket` class now exposes additional methods to process "
"ancillary data when supported by the underlying platform:"
msgstr ""
"Класс :class:`~socket.socket` теперь предоставляет дополнительные методы для "
"обработки вспомогательных данных, если они поддерживаются базовой платформой:"

#: ../../whatsnew/3.3.rst:1883
msgid ":func:`~socket.socket.sendmsg`"
msgstr ":func:`~socket.socket.sendmsg`"

#: ../../whatsnew/3.3.rst:1884
msgid ":func:`~socket.socket.recvmsg`"
msgstr ":func:`~socket.socket.recvmsg`"

#: ../../whatsnew/3.3.rst:1885
msgid ":func:`~socket.socket.recvmsg_into`"
msgstr ":func:`~socket.socket.recvmsg_into`"

#: ../../whatsnew/3.3.rst:1887
msgid ""
"(Contributed by David Watson in :issue:`6560`, based on an earlier patch by "
"Heiko Wundram)"
msgstr ""
"(Предоставлено Дэвидом Уотсоном в :issue:`6560`, на основе более раннего "
"патча Хейко Вундрама)"

#: ../../whatsnew/3.3.rst:1890
msgid ""
"The :class:`~socket.socket` class now supports the PF_CAN protocol family "
"(https://en.wikipedia.org/wiki/Socketcan), on Linux (https://lwn.net/"
"Articles/253425)."
msgstr ""
"Класс :class:`~socket.socket` теперь поддерживает семейство протоколов "
"PF_CAN (https://en.wikipedia.org/wiki/Socketcan) в Linux (https://lwn.net/"
"Articles/253425)."

#: ../../whatsnew/3.3.rst:1894
msgid ""
"(Contributed by Matthias Fuchs, updated by Tiago Gonçalves in :issue:"
"`10141`.)"
msgstr ""
"(Предоставлено Матиасом Фуксом, обновлено Тьяго Гонсалвесом в :issue:"
"`10141`.)"

#: ../../whatsnew/3.3.rst:1896
msgid ""
"The :class:`~socket.socket` class now supports the PF_RDS protocol family "
"(https://en.wikipedia.org/wiki/Reliable_Datagram_Sockets and `https://oss."
"oracle.com/projects/rds <https://web.archive.org/web/20130115155505/https://"
"oss.oracle.com/projects/rds/>`__)."
msgstr ""
"Класс :class:`~socket.socket` теперь поддерживает семейство протоколов "
"PF_RDS (https://en.wikipedia.org/wiki/Reliable_Datagram_Sockets и `https://"
"oss.oracle.com/projects/rds <https:/ /web.archive.org/web/20130115155505/"
"https://oss.oracle.com/projects/rds/>`__)."

#: ../../whatsnew/3.3.rst:1900
msgid ""
"The :class:`~socket.socket` class now supports the ``PF_SYSTEM`` protocol "
"family on OS X.  (Contributed by Michael Goderbauer in :issue:`13777`.)"
msgstr ""
"Класс :class:`~socket.socket` теперь поддерживает семейство протоколов "
"``PF_SYSTEM`` в OS X. (Внесено Майклом Годербауэром в :issue:`13777`.)"

#: ../../whatsnew/3.3.rst:1903
msgid ""
"New function :func:`~socket.sethostname` allows the hostname to be set on "
"Unix systems if the calling process has sufficient privileges. (Contributed "
"by Ross Lagerwall in :issue:`10866`.)"
msgstr ""
"Новая функция :func:`~socket.sethostname` позволяет устанавливать имя хоста "
"в системах Unix, если вызывающий процесс имеет достаточные привилегии. "
"(Предоставлено Россом Лагерволлом в :issue:`10866`.)"

#: ../../whatsnew/3.3.rst:1909
msgid "socketserver"
msgstr "socketserver"

#: ../../whatsnew/3.3.rst:1911
msgid ""
":class:`~socketserver.BaseServer` now has an overridable method :meth:"
"`~socketserver.BaseServer.service_actions` that is called by the :meth:"
"`~socketserver.BaseServer.serve_forever` method in the service loop. :class:"
"`~socketserver.ForkingMixIn` now uses this to clean up zombie child "
"processes.  (Contributed by Justin Warkentin in :issue:`11109`.)"
msgstr ""
":class:`~socketserver.BaseServer` теперь имеет переопределяемый метод :meth:"
"`~socketserver.BaseServer.service_actions`, который вызывается методом :meth:"
"`~socketserver.BaseServer.serve_forever` в цикле обслуживания. :class:"
"`~socketserver.ForkingMixIn` теперь использует это для очистки дочерних "
"процессов-зомби. (Предоставлено Джастином Варкентином в :issue:`11109`.)"

#: ../../whatsnew/3.3.rst:1919
msgid "sqlite3"
msgstr "sqlite3"

#: ../../whatsnew/3.3.rst:1921
msgid ""
"New :class:`sqlite3.Connection` method :meth:`~sqlite3.Connection."
"set_trace_callback` can be used to capture a trace of all sql commands "
"processed by sqlite.  (Contributed by Torsten Landschoff in :issue:`11688`.)"
msgstr ""
"Новый метод :class:`sqlite3.Connection` :meth:`~sqlite3.Connection."
"set_trace_callback` можно использовать для захвата трассировки всех команд "
"sql, обрабатываемых sqlite. (Предоставлено Торстеном Ландшоффом в :issue:"
"`11688`.)"

#: ../../whatsnew/3.3.rst:1928
msgid "ssl"
msgstr "ssl"

#: ../../whatsnew/3.3.rst:1930
msgid "The :mod:`ssl` module has two new random generation functions:"
msgstr "Модуль :mod:`ssl` имеет две новые функции случайной генерации:"

#: ../../whatsnew/3.3.rst:1932
msgid ""
":func:`~ssl.RAND_bytes`: generate cryptographically strong pseudo-random "
"bytes."
msgstr ""
":func:`~ssl.RAND_bytes`: генерирует криптостойкие псевдослучайные байты."

#: ../../whatsnew/3.3.rst:1934
msgid ":func:`~ssl.RAND_pseudo_bytes`: generate pseudo-random bytes."
msgstr ":func:`~ssl.RAND_pseudo_bytes`: генерировать псевдослучайные байты."

#: ../../whatsnew/3.3.rst:1936
msgid "(Contributed by Victor Stinner in :issue:`12049`.)"
msgstr "(Предоставлено Виктором Стиннером в :issue:`12049`.)"

#: ../../whatsnew/3.3.rst:1938
msgid ""
"The :mod:`ssl` module now exposes a finer-grained exception hierarchy in "
"order to make it easier to inspect the various kinds of errors. (Contributed "
"by Antoine Pitrou in :issue:`11183`.)"
msgstr ""
"Модуль :mod:`ssl` теперь предоставляет более детальную иерархию исключений, "
"чтобы упростить проверку различных типов ошибок. (Предоставлено Антуаном "
"Питру в :issue:`11183`.)"

#: ../../whatsnew/3.3.rst:1942
msgid ""
":meth:`~ssl.SSLContext.load_cert_chain` now accepts a *password* argument to "
"be used if the private key is encrypted. (Contributed by Adam Simpkins in :"
"issue:`12803`.)"
msgstr ""
":meth:`~ssl.SSLContext.load_cert_chain` теперь принимает аргумент *пароль*, "
"который будет использоваться, если закрытый ключ зашифрован. (Предоставлено "
"Адамом Симпкинсом в :issue:`12803`.)"

#: ../../whatsnew/3.3.rst:1946
msgid ""
"Diffie-Hellman key exchange, both regular and Elliptic Curve-based, is now "
"supported through the :meth:`~ssl.SSLContext.load_dh_params` and :meth:`~ssl."
"SSLContext.set_ecdh_curve` methods. (Contributed by Antoine Pitrou in :issue:"
"`13626` and :issue:`13627`.)"
msgstr ""
"Обмен ключами Диффи-Хеллмана, как обычный, так и на основе эллиптической "
"кривой, теперь поддерживается с помощью методов :meth:`~ssl.SSLContext."
"load_dh_params` и :meth:`~ssl.SSLContext.set_ecdh_curve`. (Внесено Антуаном "
"Питру в :issue:`13626` и :issue:`13627`.)"

#: ../../whatsnew/3.3.rst:1951
msgid ""
"SSL sockets have a new :meth:`~ssl.SSLSocket.get_channel_binding` method "
"allowing the implementation of certain authentication mechanisms such as "
"SCRAM-SHA-1-PLUS.  (Contributed by Jacek Konieczny in :issue:`12551`.)"
msgstr ""
"Сокеты SSL имеют новый метод :meth:`~ssl.SSLSocket.get_channel_binding`, "
"позволяющий реализовать определенные механизмы аутентификации, такие как "
"SCRAM-SHA-1-PLUS. (Предоставлено Яцеком Конечным в :issue:`12551`.)"

#: ../../whatsnew/3.3.rst:1955
msgid ""
"You can query the SSL compression algorithm used by an SSL socket, thanks to "
"its new :meth:`~ssl.SSLSocket.compression` method.  The new attribute :const:"
"`~ssl.OP_NO_COMPRESSION` can be used to disable compression. (Contributed by "
"Antoine Pitrou in :issue:`13634`.)"
msgstr ""
"Вы можете запросить алгоритм сжатия SSL, используемый сокетом SSL, благодаря "
"новому методу :meth:`~ssl.SSLSocket.compression`. Новый атрибут :const:`~ssl."
"OP_NO_COMPRESSION` можно использовать для отключения сжатия. (Предоставлено "
"Антуаном Питру в :issue:`13634`.)"

#: ../../whatsnew/3.3.rst:1960
msgid ""
"Support has been added for the Next Protocol Negotiation extension using "
"the :meth:`ssl.SSLContext.set_npn_protocols` method. (Contributed by Colin "
"Marc in :issue:`14204`.)"
msgstr ""
"Добавлена ​​поддержка расширения Next Protocol Negotiation с использованием "
"метода :meth:`ssl.SSLContext.set_npn_protocols`. (Предоставлено Колином "
"Марком в :issue:`14204`.)"

#: ../../whatsnew/3.3.rst:1964
msgid ""
"SSL errors can now be introspected more easily thanks to :attr:`~ssl."
"SSLError.library` and :attr:`~ssl.SSLError.reason` attributes. (Contributed "
"by Antoine Pitrou in :issue:`14837`.)"
msgstr ""
"Ошибки SSL теперь можно легче анализировать благодаря атрибутам :attr:`~ssl."
"SSLError.library` и :attr:`~ssl.SSLError.reason`. (Предоставлено Антуаном "
"Питру в :issue:`14837`.)"

#: ../../whatsnew/3.3.rst:1968
msgid ""
"The :func:`~ssl.get_server_certificate` function now supports IPv6. "
"(Contributed by Charles-François Natali in :issue:`11811`.)"
msgstr ""
"Функция :func:`~ssl.get_server_certificate` теперь поддерживает IPv6. "
"(Предоставлено Шарлем-Франсуа Натали в :issue:`11811`.)"

#: ../../whatsnew/3.3.rst:1971
msgid ""
"New attribute :const:`~ssl.OP_CIPHER_SERVER_PREFERENCE` allows setting SSLv3 "
"server sockets to use the server's cipher ordering preference rather than "
"the client's (:issue:`13635`)."
msgstr ""
"Новый атрибут :const:`~ssl.OP_CIPHER_SERVER_PREFERENCE` позволяет настроить "
"сокеты сервера SSLv3 для использования предпочтений порядка шифрования "
"сервера, а не клиента (:issue:`13635`)."

#: ../../whatsnew/3.3.rst:1977
msgid "stat"
msgstr "stat"

#: ../../whatsnew/3.3.rst:1979
msgid ""
"The undocumented tarfile.filemode function has been moved to :func:`stat."
"filemode`. It can be used to convert a file's mode to a string of the form '-"
"rwxrwxrwx'."
msgstr ""
"Недокументированная функция tarfile.filemode была перенесена в :func:`stat."
"filemode`. Его можно использовать для преобразования режима файла в строку "
"вида «-rwxrwxrwx»."

#: ../../whatsnew/3.3.rst:1983
msgid "(Contributed by Giampaolo Rodolà in :issue:`14807`.)"
msgstr "(Предоставлено Джампаоло Родола в :issue:`14807`.)"

#: ../../whatsnew/3.3.rst:1987
msgid "struct"
msgstr "struct"

#: ../../whatsnew/3.3.rst:1989
msgid ""
"The :mod:`struct` module now supports :c:type:`ssize_t` and :c:type:`size_t` "
"via the new codes ``n`` and ``N``, respectively.  (Contributed by Antoine "
"Pitrou in :issue:`3163`.)"
msgstr ""
"Модуль :mod:`struct` теперь поддерживает :c:type:`ssize_t` и :c:type:"
"`size_t` через новые коды ``n`` и ``N`` соответственно. (Предоставлено "
"Антуаном Питру в :issue:`3163`.)"

#: ../../whatsnew/3.3.rst:1995
msgid "subprocess"
msgstr "subprocess"

#: ../../whatsnew/3.3.rst:1997
msgid ""
"Command strings can now be bytes objects on posix platforms.  (Contributed "
"by Victor Stinner in :issue:`8513`.)"
msgstr ""
"Командные строки теперь могут быть байтовыми объектами на платформах posix. "
"(Предоставлено Виктором Стиннером в :issue:`8513`.)"

#: ../../whatsnew/3.3.rst:2000
msgid ""
"A new constant :const:`~subprocess.DEVNULL` allows suppressing output in a "
"platform-independent fashion.  (Contributed by Ross Lagerwall in :issue:"
"`5870`.)"
msgstr ""
"Новая константа :const:`~subprocess.DEVNULL` позволяет подавлять вывод "
"независимо от платформы. (Предоставлено Россом Лагерволлом в :issue:`5870`.)"

#: ../../whatsnew/3.3.rst:2006
msgid "sys"
msgstr "sys"

#: ../../whatsnew/3.3.rst:2008
msgid ""
"The :mod:`sys` module has a new :data:`~sys.thread_info` :term:`named tuple` "
"holding information about the thread implementation (:issue:`11223`)."
msgstr ""
"Модуль :mod:`sys` имеет новый :data:`~sys.thread_info` :term:`named tuple`, "
"содержащий информацию о реализации потока (:issue:`11223`)."

#: ../../whatsnew/3.3.rst:2014
msgid "tarfile"
msgstr "tarfile"

#: ../../whatsnew/3.3.rst:2016
msgid ""
":mod:`tarfile` now supports ``lzma`` encoding via the :mod:`lzma` module. "
"(Contributed by Lars Gustäbel in :issue:`5689`.)"
msgstr ""
":mod:`tarfile` теперь поддерживает кодирование ``lzma`` через модуль :mod:"
"`lzma`. (Предоставлено Ларсом Густебелем в :issue:`5689`.)"

#: ../../whatsnew/3.3.rst:2021
msgid "tempfile"
msgstr "tempfile"

#: ../../whatsnew/3.3.rst:2023
msgid ""
":class:`tempfile.SpooledTemporaryFile`\\'s :meth:`~tempfile."
"SpooledTemporaryFile.truncate` method now accepts a ``size`` parameter.  "
"(Contributed by Ryan Kelly in :issue:`9957`.)"
msgstr ""
"Метод :class:`tempfile.SpooledTemporaryFile`` :meth:`~tempfile."
"SpooledTemporaryFile.truncate` теперь принимает параметр ``size``. "
"(Предоставлено Райаном Келли в :issue:`9957`.)"

#: ../../whatsnew/3.3.rst:2029
msgid "textwrap"
msgstr "textwrap"

#: ../../whatsnew/3.3.rst:2031
msgid ""
"The :mod:`textwrap` module has a new :func:`~textwrap.indent` that makes it "
"straightforward to add a common prefix to selected lines in a block of text  "
"(:issue:`13857`)."
msgstr ""
"Модуль :mod:`textwrap` имеет новый :func:`~textwrap.indent`, который "
"упрощает добавление общего префикса к выбранным строкам в блоке текста (:"
"issue:`13857`)."

#: ../../whatsnew/3.3.rst:2037
msgid "threading"
msgstr "threading"

#: ../../whatsnew/3.3.rst:2039
msgid ""
":class:`threading.Condition`, :class:`threading.Semaphore`, :class:"
"`threading.BoundedSemaphore`, :class:`threading.Event`, and :class:"
"`threading.Timer`, all of which used to be factory functions returning a "
"class instance, are now classes and may be subclassed.  (Contributed by Éric "
"Araujo in :issue:`10968`.)"
msgstr ""
":class:`threading.Condition`, :class:`threading.Semaphore`, :class:"
"`threading.BoundedSemaphore`, :class:`threading.Event` и :class:`threading."
"Timer`, все из которых используются будучи фабричными функциями, "
"возвращающими экземпляр класса, теперь являются классами и могут быть "
"подклассами. (Предоставлено Эриком Араужо в :issue:`10968`.)"

#: ../../whatsnew/3.3.rst:2045
msgid ""
"The :class:`threading.Thread` constructor now accepts a ``daemon`` keyword "
"argument to override the default behavior of inheriting the ``daemon`` flag "
"value from the parent thread (:issue:`6064`)."
msgstr ""
"Конструктор :class:`threading.Thread` теперь принимает аргумент ключевого "
"слова ``daemon`` для переопределения поведения по умолчанию, наследующего "
"значение флага ``daemon`` от родительского потока (:issue:`6064`)."

#: ../../whatsnew/3.3.rst:2049
msgid ""
"The formerly private function ``_thread.get_ident`` is now available as the "
"public function :func:`threading.get_ident`.  This eliminates several cases "
"of direct access to the ``_thread`` module in the stdlib.  Third party code "
"that used ``_thread.get_ident`` should likewise be changed to use the new "
"public interface."
msgstr ""
"Ранее частная функция ``_thread.get_ident`` теперь доступна как "
"общедоступная функция :func:`threading.get_ident`. Это исключает несколько "
"случаев прямого доступа к модулю ``_thread`` в stdlib. Сторонний код, "
"который использовал ``_thread.get_ident``, также должен быть изменен для "
"использования нового общедоступного интерфейса."

#: ../../whatsnew/3.3.rst:2057
msgid "time"
msgstr "время"

#: ../../whatsnew/3.3.rst:2059
msgid "The :pep:`418` added new functions to the :mod:`time` module:"
msgstr ":pep:`418` добавил новые функции в модуль :mod:`time`:"

#: ../../whatsnew/3.3.rst:2061
msgid ":func:`~time.get_clock_info`: Get information on a clock."
msgstr ":func:`~time.get_clock_info`: Получить информацию о часах."

#: ../../whatsnew/3.3.rst:2062
msgid ""
":func:`~time.monotonic`: Monotonic clock (cannot go backward), not affected "
"by system clock updates."
msgstr ""
":func:`~time.monotonic`: Монотонные часы (не могут двигаться назад), на них "
"не влияют обновления системных часов."

#: ../../whatsnew/3.3.rst:2064
msgid ""
":func:`~time.perf_counter`: Performance counter with the highest available "
"resolution to measure a short duration."
msgstr ""
":func:`~time.perf_counter`: Счетчик производительности с максимально "
"доступным разрешением для измерения короткой продолжительности."

#: ../../whatsnew/3.3.rst:2066
msgid ""
":func:`~time.process_time`: Sum of the system and user CPU time of the "
"current process."
msgstr ""
":func:`~time.process_time`: Сумма системного и пользовательского времени "
"процессора текущего процесса."

#: ../../whatsnew/3.3.rst:2069
msgid "Other new functions:"
msgstr "Другие новые функции:"

#: ../../whatsnew/3.3.rst:2071
msgid ""
":func:`~time.clock_getres`, :func:`~time.clock_gettime` and :func:`~time."
"clock_settime` functions with :samp:`CLOCK_{xxx}` constants. (Contributed by "
"Victor Stinner in :issue:`10278`.)"
msgstr ""
":func:`~time.clock_getres`, :func:`~time.clock_gettime` и :func:`~time."
"clock_settime` с константами :samp:`CLOCK_{xxx}`. (Предоставлено Виктором "
"Стиннером в :issue:`10278`.)"

#: ../../whatsnew/3.3.rst:2075
msgid ""
"To improve cross platform consistency, :func:`~time.sleep` now raises a :exc:"
"`ValueError` when passed a negative sleep value.  Previously this was an "
"error on posix, but produced an infinite sleep on Windows."
msgstr ""
"Чтобы улучшить межплатформенную согласованность, :func:`~time.sleep` теперь "
"вызывает :exc:`ValueError` при передаче отрицательного значения сна. Раньше "
"это была ошибка в posix, но приводила к бесконечному спящему режиму в "
"Windows."

#: ../../whatsnew/3.3.rst:2081
msgid "types"
msgstr "типы"

#: ../../whatsnew/3.3.rst:2083
msgid ""
"Add a new :class:`types.MappingProxyType` class: Read-only proxy of a "
"mapping. (:issue:`14386`)"
msgstr ""
"Добавьте новый класс :class:`types.MappingProxyType`: прокси-сервер "
"сопоставления, доступный только для чтения. (:issue:`14386`)"

#: ../../whatsnew/3.3.rst:2087
msgid ""
"The new functions :func:`types.new_class` and :func:`types.prepare_class` "
"provide support for :pep:`3115` compliant dynamic type creation. (:issue:"
"`14588`)"
msgstr ""
"Новые функции :func:`types.new_class` и :func:`types.prepare_class` "
"обеспечивают поддержку создания динамических типов, совместимых с :pep:"
"`3115`. (:issue:`14588`)"

#: ../../whatsnew/3.3.rst:2092
msgid "unittest"
msgstr "unittest"

#: ../../whatsnew/3.3.rst:2094
msgid ""
":meth:`.assertRaises`, :meth:`.assertRaisesRegex`, :meth:`.assertWarns`, "
"and :meth:`.assertWarnsRegex` now accept a keyword argument *msg* when used "
"as context managers.  (Contributed by Ezio Melotti and Winston Ewert in :"
"issue:`10775`.)"
msgstr ""
":meth:`.assertRaises`, :meth:`.assertRaisesRegex`, :meth:`.assertWarns` и :"
"meth:`.assertWarnsRegex` теперь принимают аргумент ключевого слова *msg* при "
"использовании в качестве контекстных менеджеров. (Предоставлено Эцио Мелотти "
"и Уинстоном Эвертом в :issue:`10775`.)"

#: ../../whatsnew/3.3.rst:2099
msgid ""
":meth:`unittest.TestCase.run` now returns the :class:`~unittest.TestResult` "
"object."
msgstr ""
":meth:`unittest.TestCase.run` теперь возвращает объект :class:`~unittest."
"TestResult`."

#: ../../whatsnew/3.3.rst:2104
msgid "urllib"
msgstr "urllib"

#: ../../whatsnew/3.3.rst:2106
msgid ""
"The :class:`~urllib.request.Request` class, now accepts a *method* argument "
"used by :meth:`~urllib.request.Request.get_method` to determine what HTTP "
"method should be used.  For example, this will send a ``'HEAD'`` request::"
msgstr ""
"Класс :class:`~urllib.request.Request` теперь принимает аргумент *method*, "
"используемый :meth:`~urllib.request.Request.get_method` для определения "
"того, какой метод HTTP следует использовать. Например, это отправит запрос "
"HEAD::"

#: ../../whatsnew/3.3.rst:2110
msgid ">>> urlopen(Request('https://www.python.org', method='HEAD'))"
msgstr ">>> urlopen(Request('https://www.python.org', method='HEAD'))"

#: ../../whatsnew/3.3.rst:2112
msgid "(:issue:`1673007`)"
msgstr "(:issue:`1673007`)"

#: ../../whatsnew/3.3.rst:2116
msgid "webbrowser"
msgstr "веб-браузер"

#: ../../whatsnew/3.3.rst:2118
msgid ""
"The :mod:`webbrowser` module supports more \"browsers\": Google Chrome "
"(named :program:`chrome`, :program:`chromium`, :program:`chrome-browser` or :"
"program:`chromium-browser` depending on the version and operating system), "
"and the generic launchers :program:`xdg-open`, from the FreeDesktop.org "
"project, and :program:`gvfs-open`, which is the default URI handler for "
"GNOME 3.  (The former contributed by Arnaud Calmettes in :issue:`13620`, the "
"latter by Matthias Klose in :issue:`14493`.)"
msgstr ""
"Модуль :mod:`webbrowser` поддерживает больше \"браузеров\": Google Chrome "
"(названный :program:`chrome`, :program:`chromium`, :program:`chrome-browser` "
"или :program:`chromium-browser` в зависимости от в зависимости от версии и "
"операционной системы), а также общие средства запуска :program:`xdg-open` из "
"проекта FreeDesktop.org и :program:`gvfs-open`, который является "
"обработчиком URI по умолчанию для GNOME 3. ( первый предоставлен Арно "
"Кальметтом в :issue:`13620`, второй - Маттиасом Клозе в :issue:`14493`.)"

#: ../../whatsnew/3.3.rst:2128
msgid "xml.etree.ElementTree"
msgstr "xml.etree.ElementTree"

#: ../../whatsnew/3.3.rst:2130
msgid ""
"The :mod:`xml.etree.ElementTree` module now imports its C accelerator by "
"default; there is no longer a need to explicitly import :mod:`xml.etree."
"cElementTree` (this module stays for backwards compatibility, but is now "
"deprecated).  In addition,  the ``iter`` family of methods of :class:`~xml."
"etree.ElementTree.Element` has been optimized (rewritten in C). The module's "
"documentation has also been greatly improved with added examples and a more "
"detailed reference."
msgstr ""
"Модуль :mod:`xml.etree.ElementTree` теперь по умолчанию импортирует свой "
"ускоритель C; больше нет необходимости явно импортировать :mod:`xml.etree."
"cElementTree` (этот модуль остался для обратной совместимости, но теперь "
"устарел). Кроме того, было оптимизировано (переписано на C) семейство "
"методов ``iter`` :class:`~xml.etree.ElementTree.Element`. Документация "
"модуля также была значительно улучшена: добавлены примеры и более подробная "
"ссылка."

#: ../../whatsnew/3.3.rst:2140
msgid "zlib"
msgstr "zlib"

#: ../../whatsnew/3.3.rst:2142
msgid ""
"New attribute :attr:`zlib.Decompress.eof` makes it possible to distinguish "
"between a properly formed compressed stream and an incomplete or truncated "
"one. (Contributed by Nadeem Vawda in :issue:`12646`.)"
msgstr ""
"Новый атрибут :attr:`zlib.Decompress.eof` позволяет отличить правильно "
"сформированный сжатый поток от неполного или усеченного. (Предоставлено "
"Надимом Вавдой в :issue:`12646`.)"

#: ../../whatsnew/3.3.rst:2146
msgid ""
"New attribute :const:`zlib.ZLIB_RUNTIME_VERSION` reports the version string "
"of the underlying ``zlib`` library that is loaded at runtime.  (Contributed "
"by Torsten Landschoff in :issue:`12306`.)"
msgstr ""
"Новый атрибут :const:`zlib.ZLIB_RUNTIME_VERSION` сообщает строку версии "
"базовой библиотеки ``zlib``, которая загружается во время выполнения. "
"(Предоставлено Торстеном Ландшоффом в :issue:`12306`.)"

#: ../../whatsnew/3.3.rst:2152
msgid "Optimizations"
msgstr "Оптимизации"

#: ../../whatsnew/3.3.rst:2154
msgid "Major performance enhancements have been added:"
msgstr "Были добавлены важные улучшения производительности:"

#: ../../whatsnew/3.3.rst:2156
msgid ""
"Thanks to :pep:`393`, some operations on Unicode strings have been optimized:"
msgstr ""
"Благодаря :pep:`393` некоторые операции со строками Unicode были "
"оптимизированы:"

#: ../../whatsnew/3.3.rst:2158
msgid "the memory footprint is divided by 2 to 4 depending on the text"
msgstr "объем памяти делится от 2 до 4 в зависимости от текста"

#: ../../whatsnew/3.3.rst:2159
msgid ""
"encode an ASCII string to UTF-8 doesn't need to encode characters anymore, "
"the UTF-8 representation is shared with the ASCII representation"
msgstr ""
"кодировать строку ASCII в UTF-8 больше не нужно кодировать символы, "
"представление UTF-8 используется совместно с представлением ASCII"

#: ../../whatsnew/3.3.rst:2161
msgid "the UTF-8 encoder has been optimized"
msgstr "кодировщик UTF-8 был оптимизирован"

#: ../../whatsnew/3.3.rst:2162
msgid ""
"repeating a single ASCII letter and getting a substring of an ASCII string "
"is 4 times faster"
msgstr ""
"повтор одной буквы ASCII и получение подстроки строки ASCII происходит в 4 "
"раза быстрее"

#: ../../whatsnew/3.3.rst:2165
msgid "UTF-8 is now 2x to 4x faster.  UTF-16 encoding is now up to 10x faster."
msgstr ""
"UTF-8 теперь работает в 2–4 раза быстрее. Кодировка UTF-16 теперь работает "
"до 10 раз быстрее."

#: ../../whatsnew/3.3.rst:2167
msgid ""
"(Contributed by Serhiy Storchaka, :issue:`14624`, :issue:`14738` and :issue:"
"`15026`.)"
msgstr ""
"(Предоставлено Сергеем Сторчакой, :issue:`14624`, :issue:`14738` и :issue:"
"`15026`.)"

#: ../../whatsnew/3.3.rst:2172
msgid "Build and C API Changes"
msgstr "Изменения API сборки и C"

#: ../../whatsnew/3.3.rst:2174
msgid "Changes to Python's build process and to the C API include:"
msgstr "Изменения в процессе сборки Python и C API включают в себя:"

#: ../../whatsnew/3.3.rst:2176
msgid "New :pep:`3118` related function:"
msgstr "Новая функция, связанная с :pep:`3118`:"

#: ../../whatsnew/3.3.rst:2178
msgid ":c:func:`PyMemoryView_FromMemory`"
msgstr ":c:func:`PyMemoryView_FromMemory`"

#: ../../whatsnew/3.3.rst:2180
msgid ":pep:`393` added new Unicode types, macros and functions:"
msgstr ":pep:`393` добавил новые типы Unicode, макросы и функции:"

#: ../../whatsnew/3.3.rst:2182
msgid "High-level API:"
msgstr "Высокоуровневый API:"

#: ../../whatsnew/3.3.rst:2184
msgid ":c:func:`PyUnicode_CopyCharacters`"
msgstr ":c:func:`PyUnicode_CopyCharacters`"

#: ../../whatsnew/3.3.rst:2185
msgid ":c:func:`PyUnicode_FindChar`"
msgstr ":c:func:`PyUnicode_FindChar`"

#: ../../whatsnew/3.3.rst:2186
msgid ":c:func:`PyUnicode_GetLength`, :c:macro:`PyUnicode_GET_LENGTH`"
msgstr ":c:func:`PyUnicode_GetLength`, :c:macro:`PyUnicode_GET_LENGTH`"

#: ../../whatsnew/3.3.rst:2187
msgid ":c:func:`PyUnicode_New`"
msgstr ":c:func:`PyUnicode_New`"

#: ../../whatsnew/3.3.rst:2188
msgid ":c:func:`PyUnicode_Substring`"
msgstr ":c:func:`PyUnicode_Substring`"

#: ../../whatsnew/3.3.rst:2189
msgid ":c:func:`PyUnicode_ReadChar`, :c:func:`PyUnicode_WriteChar`"
msgstr ":c:func:`PyUnicode_ReadChar`, :c:func:`PyUnicode_WriteChar`"

#: ../../whatsnew/3.3.rst:2191
msgid "Low-level API:"
msgstr "низкоуровневый API:"

#: ../../whatsnew/3.3.rst:2193
msgid ":c:type:`Py_UCS1`, :c:type:`Py_UCS2`, :c:type:`Py_UCS4` types"
msgstr "Типы :c:type:`Py_UCS1`, :c:type:`Py_UCS2`, :c:type:`Py_UCS4`"

#: ../../whatsnew/3.3.rst:2194
msgid ":c:type:`PyASCIIObject` and :c:type:`PyCompactUnicodeObject` structures"
msgstr "Структуры :c:type:`PyASCIIObject` и :c:type:`PyCompactUnicodeObject`"

#: ../../whatsnew/3.3.rst:2195
msgid ":c:macro:`PyUnicode_READY`"
msgstr ":c:macro:`PyUnicode_READY`"

#: ../../whatsnew/3.3.rst:2196
msgid ":c:func:`PyUnicode_FromKindAndData`"
msgstr ":c:func:`PyUnicode_FromKindAndData`"

#: ../../whatsnew/3.3.rst:2197
msgid ":c:func:`PyUnicode_AsUCS4`, :c:func:`PyUnicode_AsUCS4Copy`"
msgstr ":c:func:`PyUnicode_AsUCS4`, :c:func:`PyUnicode_AsUCS4Copy`"

#: ../../whatsnew/3.3.rst:2198
msgid ""
":c:macro:`PyUnicode_DATA`, :c:macro:`PyUnicode_1BYTE_DATA`, :c:macro:"
"`PyUnicode_2BYTE_DATA`, :c:macro:`PyUnicode_4BYTE_DATA`"
msgstr ""
":c:macro:`PyUnicode_DATA`, :c:macro:`PyUnicode_1BYTE_DATA`, :c:macro:"
"`PyUnicode_2BYTE_DATA`, :c:macro:`PyUnicode_4BYTE_DATA`"

#: ../../whatsnew/3.3.rst:2200
msgid ""
":c:macro:`PyUnicode_KIND` with :c:enum:`PyUnicode_Kind` enum: :c:data:`!"
"PyUnicode_WCHAR_KIND`, :c:data:`PyUnicode_1BYTE_KIND`, :c:data:"
"`PyUnicode_2BYTE_KIND`, :c:data:`PyUnicode_4BYTE_KIND`"
msgstr ""
":c:macro:`PyUnicode_KIND` с :c:enum:`PyUnicode_Kind` enum: :c:data:`!"
"PyUnicode_WCHAR_KIND`, :c:data:`PyUnicode_1BYTE_KIND`, :c:data:"
"`PyUnicode_2BYTE_KIND`, :c:data:`PyUnicode_4BYTE_KIND`"

#: ../../whatsnew/3.3.rst:2203
msgid ""
":c:macro:`PyUnicode_READ`, :c:macro:`PyUnicode_READ_CHAR`, :c:macro:"
"`PyUnicode_WRITE`"
msgstr ""
":c:macro:`PyUnicode_READ`, :c:macro:`PyUnicode_READ_CHAR`, :c:macro:"
"`PyUnicode_WRITE`"

#: ../../whatsnew/3.3.rst:2204
msgid ":c:macro:`PyUnicode_MAX_CHAR_VALUE`"
msgstr ":c:macro:`PyUnicode_MAX_CHAR_VALUE`"

#: ../../whatsnew/3.3.rst:2206
msgid ""
":c:macro:`PyArg_ParseTuple` now accepts a :class:`bytearray` for the ``c`` "
"format (:issue:`12380`)."
msgstr ""
":c:macro:`PyArg_ParseTuple` теперь принимает :class:`bytearray` для формата "
"``c`` (:issue:`12380`)."

#: ../../whatsnew/3.3.rst:2212
msgid "Deprecated"
msgstr "Устарел"

#: ../../whatsnew/3.3.rst:2215
msgid "Unsupported Operating Systems"
msgstr "Неподдерживаемые операционные системы"

#: ../../whatsnew/3.3.rst:2217
msgid "OS/2 and VMS are no longer supported due to the lack of a maintainer."
msgstr "OS/2 и VMS больше не поддерживаются из-за отсутствия сопровождающего."

#: ../../whatsnew/3.3.rst:2219
msgid ""
"Windows 2000 and Windows platforms which set ``COMSPEC`` to ``command.com`` "
"are no longer supported due to maintenance burden."
msgstr ""
"Платформы Windows 2000 и Windows, для которых для COMSPEC установлено "
"значение «command.com», больше не поддерживаются из-за необходимости "
"обслуживания."

#: ../../whatsnew/3.3.rst:2222
msgid "OSF support, which was deprecated in 3.2, has been completely removed."
msgstr "Поддержка OSF, устаревшая в версии 3.2, полностью удалена."

#: ../../whatsnew/3.3.rst:2226
msgid "Deprecated Python modules, functions and methods"
msgstr "Устаревшие модули, функции и методы Python"

#: ../../whatsnew/3.3.rst:2228
msgid ""
"Passing a non-empty string to ``object.__format__()`` is deprecated, and "
"will produce a :exc:`TypeError` in Python 3.4 (:issue:`9856`)."
msgstr ""
"Передача непустой строки в ``object.__format__()`` устарела и приведет к "
"возникновению ошибки :exc:`TypeError` в Python 3.4 (:issue:`9856`)."

#: ../../whatsnew/3.3.rst:2230
msgid ""
"The ``unicode_internal`` codec has been deprecated because of the :pep:"
"`393`, use UTF-8, UTF-16 (``utf-16-le`` or ``utf-16-be``), or UTF-32 "
"(``utf-32-le`` or ``utf-32-be``)"
msgstr ""
"Кодек ``unicode_internal`` устарел из-за :pep:`393`, используйте UTF-8, "
"UTF-16 (``utf-16-le`` или ``utf-16-be``), или UTF-32 (``utf-32-le`` или "
"``utf-32-be``)"

#: ../../whatsnew/3.3.rst:2233
msgid ""
":meth:`ftplib.FTP.nlst` and :meth:`ftplib.FTP.dir`: use :meth:`ftplib.FTP."
"mlsd`"
msgstr ""
":meth:`ftplib.FTP.nlst` и :meth:`ftplib.FTP.dir`: используйте :meth:`ftplib."
"FTP.mlsd`"

#: ../../whatsnew/3.3.rst:2235
msgid ""
":func:`platform.popen`: use the :mod:`subprocess` module. Check especially "
"the :ref:`subprocess-replacements` section (:issue:`11377`)."
msgstr ""
":func:`platform.popen`: используйте модуль :mod:`subprocess`. Особенно "
"проверьте раздел :ref:`subprocess-replacements` (:issue:`11377`)."

#: ../../whatsnew/3.3.rst:2237
msgid ""
":issue:`13374`: The Windows bytes API has been deprecated in the :mod:`os` "
"module. Use Unicode filenames, instead of bytes filenames, to not depend on "
"the ANSI code page anymore and to support any filename."
msgstr ""
":issue:`13374`: API-интерфейс Windows bytes устарел в модуле :mod:`os`. "
"Используйте имена файлов в Юникоде вместо байтовых имен файлов, чтобы больше "
"не зависеть от кодовой страницы ANSI и поддерживать любое имя файла."

#: ../../whatsnew/3.3.rst:2240
msgid ""
":issue:`13988`: The :mod:`xml.etree.cElementTree` module is deprecated.  The "
"accelerator is used automatically whenever available."
msgstr ""
":issue:`13988`: Модуль :mod:`xml.etree.cElementTree` устарел. Ускоритель "
"используется автоматически, когда он доступен."

#: ../../whatsnew/3.3.rst:2242
msgid ""
"The behaviour of :func:`time.clock` depends on the platform: use the new :"
"func:`time.perf_counter` or :func:`time.process_time` function instead, "
"depending on your requirements, to have a well defined behaviour."
msgstr ""
"Поведение :func:`time.clock` зависит от платформы: вместо этого используйте "
"новую функцию :func:`time.perf_counter` или :func:`time.process_time`, в "
"зависимости от ваших требований, чтобы иметь четко определенное поведение. ."

#: ../../whatsnew/3.3.rst:2245
msgid "The :func:`os.stat_float_times` function is deprecated."
msgstr "Функция :func:`os.stat_float_times` устарела."

#: ../../whatsnew/3.3.rst:2246
msgid ":mod:`abc` module:"
msgstr "Модуль :mod:`abc`:"

#: ../../whatsnew/3.3.rst:2255
msgid ":mod:`importlib` package:"
msgstr "Пакет :mod:`importlib`:"

#: ../../whatsnew/3.3.rst:2257
msgid ""
":meth:`importlib.abc.SourceLoader.path_mtime` is now deprecated in favour "
"of :meth:`importlib.abc.SourceLoader.path_stats` as bytecode files now store "
"both the modification time and size of the source file the bytecode file was "
"compiled from."
msgstr ""
":meth:`importlib.abc.SourceLoader.path_mtime` теперь устарел в пользу :meth:"
"`importlib.abc.SourceLoader.path_stats`, поскольку файлы байт-кода теперь "
"хранят как время модификации, так и размер исходного файла, в котором был "
"скомпилирован файл байт-кода. от."

#: ../../whatsnew/3.3.rst:2267
msgid "Deprecated functions and types of the C API"
msgstr "Устаревшие функции и типы C API"

#: ../../whatsnew/3.3.rst:2269
msgid ""
"The :c:type:`Py_UNICODE` has been deprecated by :pep:`393` and will be "
"removed in Python 4. All functions using this type are deprecated:"
msgstr ""
"Параметр :c:type:`Py_UNICODE` признан устаревшим по :pep:`393` и будет "
"удален в Python 4. Все функции, использующие этот тип, являются устаревшими:"

#: ../../whatsnew/3.3.rst:2272
msgid ""
"Unicode functions and methods using :c:type:`Py_UNICODE` and :c:expr:"
"`Py_UNICODE*` types:"
msgstr ""
"Функции и методы Unicode, использующие типы :c:type:`Py_UNICODE` и :c:expr:"
"`Py_UNICODE*`:"

#: ../../whatsnew/3.3.rst:2275
msgid ""
":c:macro:`!PyUnicode_FromUnicode`: use :c:func:`PyUnicode_FromWideChar` or :"
"c:func:`PyUnicode_FromKindAndData`"
msgstr ""
":c:macro:`!PyUnicode_FromUnicode`: использует:c:func:"
"`PyUnicode_FromWideChar` или :c:func:`PyUnicode_FromKindAndData`"

#: ../../whatsnew/3.3.rst:2277
msgid ""
":c:macro:`!PyUnicode_AS_UNICODE`, :c:func:`!PyUnicode_AsUnicode`, :c:func:`!"
"PyUnicode_AsUnicodeAndSize`: use :c:func:`PyUnicode_AsWideCharString`"
msgstr ""
":c:macro:`!PyUnicode_AS_UNICODE`, :c:func:`!PyUnicode_AsUnicode`, :c:func:`!"
"PyUnicode_AsUnicodeAndSize`: используют:c:func:`PyUnicode_AsWideCharString`"

#: ../../whatsnew/3.3.rst:2279
msgid ""
":c:macro:`!PyUnicode_AS_DATA`: use :c:macro:`PyUnicode_DATA` with :c:macro:"
"`PyUnicode_READ` and :c:macro:`PyUnicode_WRITE`"
msgstr ""
":c:macro:`!PyUnicode_AS_DATA`: использует :c:macro:`PyUnicode_DATA` с :c:"
"macro:`PyUnicode_READ` и :c:macro:`PyUnicode_WRITE`"

#: ../../whatsnew/3.3.rst:2281
msgid ""
":c:macro:`!PyUnicode_GET_SIZE`, :c:func:`!PyUnicode_GetSize`: use :c:macro:"
"`PyUnicode_GET_LENGTH` or :c:func:`PyUnicode_GetLength`"
msgstr ""
":c:macro:`!PyUnicode_GET_SIZE`, :c:func:`!PyUnicode_GetSize`: используют :c:"
"macro:`PyUnicode_GET_LENGTH` или :c:func:`PyUnicode_GetLength`"

#: ../../whatsnew/3.3.rst:2283
msgid ""
":c:macro:`!PyUnicode_GET_DATA_SIZE`: use ``PyUnicode_GET_LENGTH(str) * "
"PyUnicode_KIND(str)`` (only work on ready strings)"
msgstr ""
":c:macro:`!PyUnicode_GET_DATA_SIZE`: использует ``PyUnicode_GET_LENGTH(str) "
"* PyUnicode_KIND(str)`` (работает только с готовыми строки)"

#: ../../whatsnew/3.3.rst:2286
msgid ""
":c:func:`!PyUnicode_AsUnicodeCopy`: use :c:func:`PyUnicode_AsUCS4Copy` or :c:"
"func:`PyUnicode_AsWideCharString`"
msgstr ""
":c:func:`!PyUnicode_AsUnicodeCopy`: использует :c:func:"
"`PyUnicode_AsUCS4Copy` или :c:func:`PyUnicode_AsWideCharString`"

#: ../../whatsnew/3.3.rst:2288
msgid ":c:func:`!PyUnicode_GetMax`"
msgstr ":c:func:`!PyUnicode_GetMax`"

#: ../../whatsnew/3.3.rst:2291
msgid "Functions and macros manipulating Py_UNICODE* strings:"
msgstr "Функции и макросы, манипулирующие строками Py_UNICODE*:"

#: ../../whatsnew/3.3.rst:2293
msgid ""
":c:macro:`!Py_UNICODE_strlen()`: use :c:func:`PyUnicode_GetLength` or :c:"
"macro:`PyUnicode_GET_LENGTH`"
msgstr ""
":c:macro:`!Py_UNICODE_strlen()`: использует :c:func:`PyUnicode_GetLength` "
"или :c:macro:`PyUnicode_GET_LENGTH`"

#: ../../whatsnew/3.3.rst:2295
msgid ""
":c:macro:`!Py_UNICODE_strcat()`: use :c:func:`PyUnicode_CopyCharacters` or :"
"c:func:`PyUnicode_FromFormat`"
msgstr ""
":c:macro:`!Py_UNICODE_strcat()`: использует :c:func:"
"`PyUnicode_CopyCharacters` или :c:func:`PyUnicode_FromFormat`"

#: ../../whatsnew/3.3.rst:2297
msgid ""
":c:macro:`!Py_UNICODE_strcpy()`, :c:macro:`!Py_UNICODE_strncpy()`, :c:macro:"
"`!Py_UNICODE_COPY()`: use :c:func:`PyUnicode_CopyCharacters` or :c:func:"
"`PyUnicode_Substring`"
msgstr ""
":c:macro:`!Py_UNICODE_strcpy()`, :c:macro:`!Py_UNICODE_strncpy()`, :c:macro:"
"`!Py_UNICODE_COPY()`: используют :c:func:`PyUnicode_CopyCharacters` или :c:"
"func:`PyUnicode_Substring`"

#: ../../whatsnew/3.3.rst:2300
msgid ":c:macro:`!Py_UNICODE_strcmp()`: use :c:func:`PyUnicode_Compare`"
msgstr ""
":c:macro:`!Py_UNICODE_strcmp()`: использует :c:func:`PyUnicode_Compare`"

#: ../../whatsnew/3.3.rst:2301
msgid ":c:macro:`!Py_UNICODE_strncmp()`: use :c:func:`PyUnicode_Tailmatch`"
msgstr ""
":c:macro:`!Py_UNICODE_strncmp()`: использует :c:func:`PyUnicode_Tailmatch`"

#: ../../whatsnew/3.3.rst:2302
msgid ""
":c:macro:`!Py_UNICODE_strchr()`, :c:macro:`!Py_UNICODE_strrchr()`: use :c:"
"func:`PyUnicode_FindChar`"
msgstr ""
":c:macro:`!Py_UNICODE_strchr()`, :c:macro:`!Py_UNICODE_strrchr()`: "
"используют :c:func:`PyUnicode_FindChar`"

#: ../../whatsnew/3.3.rst:2304
msgid ":c:macro:`!Py_UNICODE_FILL()`: use :c:func:`PyUnicode_Fill`"
msgstr ":c:macro:`!Py_UNICODE_FILL()`: использует :c:func:`PyUnicode_Fill`"

#: ../../whatsnew/3.3.rst:2305
msgid ":c:macro:`!Py_UNICODE_MATCH`"
msgstr ":c:macro:`!Py_UNICODE_MATCH`"

#: ../../whatsnew/3.3.rst:2307
msgid "Encoders:"
msgstr "Кодировщики:"

#: ../../whatsnew/3.3.rst:2309
msgid ":c:func:`!PyUnicode_Encode`: use :c:func:`!PyUnicode_AsEncodedObject`"
msgstr ""
":c:func:`!PyUnicode_Encode`: использует:c:func:`!PyUnicode_AsEncodedObject`"

#: ../../whatsnew/3.3.rst:2310
msgid ":c:func:`!PyUnicode_EncodeUTF7`"
msgstr ":c:func:`!PyUnicode_EncodeUTF7`"

#: ../../whatsnew/3.3.rst:2311
msgid ""
":c:func:`!PyUnicode_EncodeUTF8`: use :c:func:`PyUnicode_AsUTF8` or :c:func:"
"`PyUnicode_AsUTF8String`"
msgstr ""
":c:func:`!PyUnicode_EncodeUTF8`: использует :c:func:`PyUnicode_AsUTF8` или :"
"c:func:`PyUnicode_AsUTF8String`"

#: ../../whatsnew/3.3.rst:2313
msgid ":c:func:`!PyUnicode_EncodeUTF32`"
msgstr ":c:func:`!PyUnicode_EncodeUTF32`"

#: ../../whatsnew/3.3.rst:2314
msgid ":c:func:`!PyUnicode_EncodeUTF16`"
msgstr ":c:func:`!PyUnicode_EncodeUTF16`"

#: ../../whatsnew/3.3.rst:2315
msgid ""
":c:func:`!PyUnicode_EncodeUnicodeEscape` use :c:func:"
"`PyUnicode_AsUnicodeEscapeString`"
msgstr ""
":c:func:`!PyUnicode_EncodeUnicodeEscape` использует :c:func:"
"`PyUnicode_AsUnicodeEscapeString`"

#: ../../whatsnew/3.3.rst:2317
msgid ""
":c:func:`!PyUnicode_EncodeRawUnicodeEscape` use :c:func:"
"`PyUnicode_AsRawUnicodeEscapeString`"
msgstr ""
":c:func:`!PyUnicode_EncodeRawUnicodeEscape` использует :c:func:"
"`PyUnicode_AsRawUnicodeEscapeString`"

#: ../../whatsnew/3.3.rst:2319
msgid ""
":c:func:`!PyUnicode_EncodeLatin1`: use :c:func:`PyUnicode_AsLatin1String`"
msgstr ""
":c:func:`!PyUnicode_EncodeLatin1`: использует :c:func:"
"`PyUnicode_AsLatin1String`"

#: ../../whatsnew/3.3.rst:2320
msgid ":c:func:`!PyUnicode_EncodeASCII`: use :c:func:`PyUnicode_AsASCIIString`"
msgstr ""
":c:func:`!PyUnicode_EncodeASCII`: использует :c:func:"
"`PyUnicode_AsASCIIString`"

#: ../../whatsnew/3.3.rst:2321
msgid ":c:func:`!PyUnicode_EncodeCharmap`"
msgstr ":c:func:`!PyUnicode_EncodeCharmap`"

#: ../../whatsnew/3.3.rst:2322
msgid ":c:func:`!PyUnicode_TranslateCharmap`"
msgstr ":c:func:`!PyUnicode_TranslateCharmap`"

#: ../../whatsnew/3.3.rst:2323
msgid ""
":c:func:`!PyUnicode_EncodeMBCS`: use :c:func:`PyUnicode_AsMBCSString` or :c:"
"func:`PyUnicode_EncodeCodePage` (with ``CP_ACP`` code_page)"
msgstr ""
":c:func:`!PyUnicode_EncodeMBCS`: использует :c:func:`PyUnicode_AsMBCSString` "
"или :c:func:`PyUnicode_EncodeCodePage` (с кодовой_страницей ``CP_ACP`` )"

#: ../../whatsnew/3.3.rst:2325
msgid ""
":c:func:`!PyUnicode_EncodeDecimal`, :c:func:`!"
"PyUnicode_TransformDecimalToASCII`"
msgstr ""
":c:func:`!PyUnicode_EncodeDecimal`, :c:func:`!"
"PyUnicode_TransformDecimalToASCII`"

#: ../../whatsnew/3.3.rst:2330
msgid "Deprecated features"
msgstr "Устаревшие функции"

#: ../../whatsnew/3.3.rst:2332
msgid ""
"The :mod:`array` module's ``'u'`` format code is now deprecated and will be "
"removed in Python 4 together with the rest of the (:c:type:`Py_UNICODE`) API."
msgstr ""
"Код формата ``'u'`` модуля :mod:`array` теперь устарел и будет удален в "
"Python 4 вместе с остальной частью API (:c:type:`Py_UNICODE`)."

#: ../../whatsnew/3.3.rst:2337
msgid "Porting to Python 3.3"
msgstr "Портирование на Python 3.3"

#: ../../whatsnew/3.3.rst:2339
msgid ""
"This section lists previously described changes and other bugfixes that may "
"require changes to your code."
msgstr ""
"В этом разделе перечислены ранее описанные изменения и другие исправления "
"ошибок, которые могут потребовать внесения изменений в ваш код."

#: ../../whatsnew/3.3.rst:2345
msgid "Porting Python code"
msgstr "Перенос кода на Python"

#: ../../whatsnew/3.3.rst:2347
msgid ""
"Hash randomization is enabled by default. Set the :envvar:`PYTHONHASHSEED` "
"environment variable to ``0`` to disable hash randomization. See also the :"
"meth:`object.__hash__` method."
msgstr ""
"Рандомизация хеша включена по умолчанию. Установите для переменной среды :"
"envvar:`PYTHONHASHSEED` значение ``0``, чтобы отключить рандомизацию хеша. "
"См. также метод :meth:`object.__hash__`."

#: ../../whatsnew/3.3.rst:2351
msgid ""
":issue:`12326`: On Linux, sys.platform doesn't contain the major version "
"anymore. It is now always 'linux', instead of 'linux2' or 'linux3' depending "
"on the Linux version used to build Python. Replace sys.platform == 'linux2' "
"with sys.platform.startswith('linux'), or directly sys.platform == 'linux' "
"if you don't need to support older Python versions."
msgstr ""
":issue:`12326`: В Linux sys.platform больше не содержит основной версии. "
"Теперь это всегда «linux», а не «linux2» или «linux3» в зависимости от "
"версии Linux, использованной для сборки Python. Замените sys.platform == "
"'linux2' на sys.platform.startswith('linux') или напрямую sys.platform == "
"'linux', если вам не нужна поддержка более старых версий Python."

#: ../../whatsnew/3.3.rst:2357
msgid ""
":issue:`13847`, :issue:`14180`: :mod:`time` and :mod:`datetime`: :exc:"
"`OverflowError` is now raised instead of :exc:`ValueError` if a timestamp is "
"out of range. :exc:`OSError` is now raised if C functions :c:func:`gmtime` "
"or :c:func:`localtime` failed."
msgstr ""
":issue:`13847`, :issue:`14180`: :mod:`time` и :mod:`datetime`: :exc:"
"`OverflowError` теперь вызывается вместо :exc:`ValueError`, если метка "
"времени отсутствует диапазона. :exc:`OSError` теперь вызывается в случае "
"сбоя функций C :c:func:`gmtime` или :c:func:`localtime`."

#: ../../whatsnew/3.3.rst:2362
msgid ""
"The default finders used by import now utilize a cache of what is contained "
"within a specific directory. If you create a Python source file or "
"sourceless bytecode file, make sure to call :func:`importlib."
"invalidate_caches` to clear out the cache for the finders to notice the new "
"file."
msgstr ""
"Средства поиска по умолчанию, используемые при импорте, теперь используют "
"кеш содержимого определенного каталога. Если вы создаете исходный файл "
"Python или файл байт-кода без исходного кода, обязательно вызовите :func:"
"`importlib.invalidate_caches`, чтобы очистить кеш, чтобы средства поиска "
"могли заметить новый файл."

#: ../../whatsnew/3.3.rst:2367
msgid ""
":exc:`ImportError` now uses the full name of the module that was attempted "
"to be imported. Doctests that check ImportErrors' message will need to be "
"updated to use the full name of the module instead of just the tail of the "
"name."
msgstr ""
":exc:`ImportError` теперь использует полное имя модуля, который пытались "
"импортировать. Документы, проверяющие сообщение ImportErrors, необходимо "
"будет обновить, чтобы использовать полное имя модуля, а не только хвостовую "
"часть имени."

#: ../../whatsnew/3.3.rst:2372
msgid ""
"The *index* argument to :func:`__import__` now defaults to 0 instead of -1 "
"and no longer support negative values. It was an oversight when :pep:`328` "
"was implemented that the default value remained -1. If you need to continue "
"to perform a relative import followed by an absolute import, then perform "
"the relative import using an index of 1, followed by another import using an "
"index of 0. It is preferred, though, that you use :func:`importlib."
"import_module` rather than call :func:`__import__` directly."
msgstr ""
"Аргумент *index* функции :func:`__import__` теперь по умолчанию имеет "
"значение 0 вместо -1 и больше не поддерживает отрицательные значения. При "
"внедрении :pep:`328` было допущено упущение, что значение по умолчанию "
"осталось -1. Если вам необходимо продолжить выполнение относительного "
"импорта, за которым следует абсолютный импорт, выполните относительный "
"импорт с индексом 1, а затем еще один импорт с индексом 0. Однако "
"предпочтительно использовать :func:` importlib.import_module`, а не "
"вызывать :func:`__import__` напрямую."

#: ../../whatsnew/3.3.rst:2380
msgid ""
":func:`__import__` no longer allows one to use an index value other than 0 "
"for top-level modules. E.g. ``__import__('sys', level=1)`` is now an error."
msgstr ""
":func:`__import__` больше не позволяет использовать значение индекса, "
"отличное от 0, для модулей верхнего уровня. Например, ``__import__('sys', "
"level=1)`` теперь является ошибкой."

#: ../../whatsnew/3.3.rst:2383
msgid ""
"Because :data:`sys.meta_path` and :data:`sys.path_hooks` now have finders on "
"them by default, you will most likely want to use :meth:`list.insert` "
"instead of :meth:`list.append` to add to those lists."
msgstr ""
"Поскольку :data:`sys.meta_path` и :data:`sys.path_hooks` теперь имеют "
"средства поиска по умолчанию, вы, скорее всего, захотите использовать :meth:"
"`list.insert` вместо :meth:`list.append `, чтобы добавить в эти списки."

#: ../../whatsnew/3.3.rst:2387
msgid ""
"Because ``None`` is now inserted into :data:`sys.path_importer_cache`, if "
"you are clearing out entries in the dictionary of paths that do not have a "
"finder, you will need to remove keys paired with values of ``None`` **and** :"
"class:`!imp.NullImporter` to be backwards-compatible. This will lead to "
"extra overhead on older versions of Python that re-insert ``None`` into :"
"data:`sys.path_importer_cache` where it represents the use of implicit "
"finders, but semantically it should not change anything."
msgstr ""
"Поскольку ``None`` теперь вставлен в :data:`sys.path_importer_cache`, если "
"вы удаляете записи в словаре путей, у которых нет средства поиска, вам нужно "
"будет удалить ключи, связанные со значениями ``None `` **and** :class:`!imp."
"NullImporter` для обратной совместимости. Это приведет к дополнительным "
"накладным расходам в старых версиях Python, которые повторно вставляют "
"``None`` в :data:`sys.path_importer_cache`, где это представляет собой "
"использование неявных средств поиска, но семантически это не должно ничего "
"менять."

#: ../../whatsnew/3.3.rst:2395
msgid ""
":class:`!importlib.abc.Finder` no longer specifies a ``find_module()`` "
"abstract method that must be implemented. If you were relying on subclasses "
"to implement that method, make sure to check for the method's existence "
"first. You will probably want to check for ``find_loader()`` first, though, "
"in the case of working with :term:`path entry finders <path entry finder>`."
msgstr ""
":class:`!importlib.abc.Finder` больше не определяет абстрактный метод "
"``find_module()``, который должен быть реализован. Если для реализации этого "
"метода вы полагались на подклассы, обязательно сначала проверьте "
"существование метода. Однако вы, вероятно, захотите сначала проверить "
"``find_loader()`` в случае работы с :term:`поискателями записей пути <path "
"input finder>`."

#: ../../whatsnew/3.3.rst:2401
msgid ""
":mod:`pkgutil` has been converted to use :mod:`importlib` internally. This "
"eliminates many edge cases where the old behaviour of the :pep:`302` import "
"emulation failed to match the behaviour of the real import system. The "
"import emulation itself is still present, but is now deprecated. The :func:"
"`pkgutil.iter_importers` and :func:`pkgutil.walk_packages` functions special "
"case the standard import hooks so they are still supported even though they "
"do not provide the non-standard ``iter_modules()`` method."
msgstr ""
":mod:`pkgutil` был преобразован для внутреннего использования :mod:"
"`importlib`. Это исключает многие крайние случаи, когда старое поведение "
"эмуляции импорта :pep:`302` не соответствовало поведению реальной системы "
"импорта. Сама эмуляция импорта все еще присутствует, но сейчас устарела. "
"Функции :func:`pkgutil.iter_importers` и :func:`pkgutil.walk_packages` "
"представляют собой особый случай стандартных перехватчиков импорта, поэтому "
"они по-прежнему поддерживаются, даже если они не предоставляют нестандартный "
"метод ``iter_modules()``."

#: ../../whatsnew/3.3.rst:2409
msgid ""
"A longstanding RFC-compliance bug (:issue:`1079`) in the parsing done by :"
"func:`email.header.decode_header` has been fixed.  Code that uses the "
"standard idiom to convert encoded headers into unicode "
"(``str(make_header(decode_header(h))``) will see no change, but code that "
"looks at the individual tuples returned by decode_header will see that "
"whitespace that precedes or follows ``ASCII`` sections is now included in "
"the ``ASCII`` section.  Code that builds headers using ``make_header`` "
"should also continue to work without change, since ``make_header`` continues "
"to add whitespace between ``ASCII`` and non-``ASCII`` sections if it is not "
"already present in the input strings."
msgstr ""
"Исправлена ​​давняя ошибка соответствия RFC (:issue:`1079`) при синтаксическом "
"анализе, выполняемом :func:`email.header.decode_header`. Код, который "
"использует стандартную идиому для преобразования закодированных заголовков в "
"Юникод (``str(make_header(decode_header(h))``), не увидит никаких изменений, "
"но код, который просматривает отдельные кортежи, возвращаемые decode_header, "
"увидит пробелы, которые предшествуют или Следующие разделы ``ASCII`` теперь "
"включены в раздел ``ASCII``. Код, который создает заголовки с использованием "
"``make_header``, также должен продолжать работать без изменений, поскольку "
"``make_header`` продолжает добавлять пробелы между `` Разделы ASCII и не-"
"ASCII, если они еще не присутствуют во входных строках."

#: ../../whatsnew/3.3.rst:2420
msgid ""
":func:`email.utils.formataddr` now does the correct content transfer "
"encoding when passed non-``ASCII`` display names.  Any code that depended on "
"the previous buggy behavior that preserved the non-``ASCII`` unicode in the "
"formatted output string will need to be changed (:issue:`1690608`)."
msgstr ""
":func:`email.utils.formataddr` теперь выполняет правильное кодирование "
"передачи контента при передаче отображаемых имен, отличных от ``ASCII``. "
"Любой код, который зависел от предыдущего ошибочного поведения и сохранял в "
"форматированной выходной строке юникод, отличный от ``ASCII``, необходимо "
"будет изменить (:issue:`1690608`)."

#: ../../whatsnew/3.3.rst:2425
msgid ""
":meth:`poplib.POP3.quit` may now raise protocol errors like all other "
"``poplib`` methods.  Code that assumes ``quit`` does not raise :exc:`poplib."
"error_proto` errors may need to be changed if errors on ``quit`` are "
"encountered by a particular application (:issue:`11291`)."
msgstr ""
":meth:`poplib.POP3.quit` теперь может вызывать ошибки протокола, как и все "
"другие методы ``poplib``. Код, предполагающий, что ``quit`` не вызывает "
"ошибок :exc:`poplib.error_proto`, возможно, придется изменить, если ошибки "
"при ``quit`` обнаружены конкретным приложением (:issue:`11291`)."

#: ../../whatsnew/3.3.rst:2430
msgid ""
"The ``strict`` argument to :class:`email.parser.Parser`, deprecated since "
"Python 2.4, has finally been removed."
msgstr ""
"Аргумент ``strict`` для :class:`email.parser.Parser`, устаревший, начиная с "
"Python 2.4, наконец-то удален."

#: ../../whatsnew/3.3.rst:2433
msgid ""
"The deprecated method ``unittest.TestCase.assertSameElements`` has been "
"removed."
msgstr "Устаревший метод unittest.TestCase.assertSameElements был удален."

#: ../../whatsnew/3.3.rst:2436
msgid "The deprecated variable ``time.accept2dyear`` has been removed."
msgstr "Устаревшая переменная time.accept2dyear была удалена."

#: ../../whatsnew/3.3.rst:2438
msgid ""
"The deprecated ``Context._clamp`` attribute has been removed from the :mod:"
"`decimal` module.  It was previously replaced by the public attribute :attr:"
"`~decimal.Context.clamp`.  (See :issue:`8540`.)"
msgstr ""
"Устаревший атрибут Context._clamp был удален из модуля :mod:`decimal`. Ранее "
"он был заменен общедоступным атрибутом :attr:`~decimal.Context.clamp`. (См.:"
"issue:`8540`.)"

#: ../../whatsnew/3.3.rst:2442
msgid ""
"The undocumented internal helper class ``SSLFakeFile`` has been removed "
"from :mod:`smtplib`, since its functionality has long been provided directly "
"by :meth:`socket.socket.makefile`."
msgstr ""
"Недокументированный внутренний вспомогательный класс SSLFakeFile был удален "
"из :mod:`smtplib`, поскольку его функциональность уже давно обеспечивается "
"непосредственно :meth:`socket.socket.makefile`."

#: ../../whatsnew/3.3.rst:2446
msgid ""
"Passing a negative value to :func:`time.sleep` on Windows now raises an "
"error instead of sleeping forever.  It has always raised an error on posix."
msgstr ""
"Передача отрицательного значения в :func:`time.sleep` в Windows теперь "
"вызывает ошибку, а не вечный сон. В posix всегда возникала ошибка."

#: ../../whatsnew/3.3.rst:2449
msgid ""
"The ``ast.__version__`` constant has been removed.  If you need to make "
"decisions affected by the AST version, use :data:`sys.version_info` to make "
"the decision."
msgstr ""
"Константа ``ast.__version__`` была удалена. Если вам нужно принять решения, "
"на которые влияет версия AST, используйте :data:`sys.version_info` для "
"принятия решения."

#: ../../whatsnew/3.3.rst:2453
msgid ""
"Code that used to work around the fact that the :mod:`threading` module used "
"factory functions by subclassing the private classes will need to change to "
"subclass the now-public classes."
msgstr ""
"Код, который раньше обходил тот факт, что модуль :mod:`threading` "
"использовал фабричные функции путем создания подклассов частных классов, "
"необходимо будет изменить на подклассы теперь общедоступных классов."

#: ../../whatsnew/3.3.rst:2457
msgid ""
"The undocumented debugging machinery in the threading module has been "
"removed, simplifying the code.  This should have no effect on production "
"code, but is mentioned here in case any application debug frameworks were "
"interacting with it (:issue:`13550`)."
msgstr ""
"Недокументированный механизм отладки в модуле потоков был удален, что "
"упростило код. Это не должно влиять на рабочий код, но упоминается здесь на "
"случай, если с ним взаимодействовали какие-либо платформы отладки приложений "
"(:issue:`13550`)."

#: ../../whatsnew/3.3.rst:2464
msgid "Porting C code"
msgstr "Перенос кода на C"

#: ../../whatsnew/3.3.rst:2466
msgid ""
"In the course of changes to the buffer API the undocumented :c:member:`!"
"smalltable` member of the :c:type:`Py_buffer` structure has been removed and "
"the layout of the :c:type:`PyMemoryViewObject` has changed."
msgstr ""
"В ходе изменений в API буфера был удален недокументированный член :c:member:"
"`!smalltable` структуры :c:type:`Py_buffer` и изменилось расположение :c:"
"type:`PyMemoryViewObject`. ."

#: ../../whatsnew/3.3.rst:2471
msgid ""
"All extensions relying on the relevant parts in ``memoryobject.h`` or "
"``object.h`` must be rebuilt."
msgstr ""
"Все расширения, использующие соответствующие части в ``memoryobject.h`` или "
"``object.h``, должны быть перестроены."

#: ../../whatsnew/3.3.rst:2474
msgid ""
"Due to :ref:`PEP 393 <pep-393>`, the :c:type:`Py_UNICODE` type and all "
"functions using this type are deprecated (but will stay available for at "
"least five years).  If you were using low-level Unicode APIs to construct "
"and access unicode objects and you want to benefit of the memory footprint "
"reduction provided by :pep:`393`, you have to convert your code to the new :"
"doc:`Unicode API <../c-api/unicode>`."
msgstr ""
"Из-за :ref:`PEP 393 <pep-393>` тип :c:type:`Py_UNICODE` и все функции, "
"использующие этот тип, устарели (но останутся доступными в течение как "
"минимум пяти лет). Если вы использовали низкоуровневые API-интерфейсы "
"Unicode для создания объектов Unicode и доступа к ним и хотите получить "
"выгоду от сокращения объема памяти, обеспечиваемого :pep:`393`, вам "
"необходимо преобразовать свой код в новый :doc:`Unicode API < ../c-api/"
"unicode>`."

#: ../../whatsnew/3.3.rst:2481
msgid ""
"However, if you only have been using high-level functions such as :c:func:"
"`PyUnicode_Concat()`, :c:func:`PyUnicode_Join` or :c:func:"
"`PyUnicode_FromFormat()`, your code will automatically take advantage of the "
"new unicode representations."
msgstr ""
"Однако если вы использовали только функции высокого уровня, такие как :c:"
"func:`PyUnicode_Concat()`, :c:func:`PyUnicode_Join` или :c:func:"
"`PyUnicode_FromFormat()`, ваш код автоматически примет преимущества новых "
"представлений Юникода."

#: ../../whatsnew/3.3.rst:2486
msgid ":c:func:`PyImport_GetMagicNumber` now returns ``-1`` upon failure."
msgstr ""
":c:func:`PyImport_GetMagicNumber` теперь возвращает ``-1`` в случае неудачи."

#: ../../whatsnew/3.3.rst:2488
msgid ""
"As a negative value for the *level* argument to :func:`__import__` is no "
"longer valid, the same now holds for :c:func:`PyImport_ImportModuleLevel`. "
"This also means that the value of *level* used by :c:func:"
"`PyImport_ImportModuleEx` is now ``0`` instead of ``-1``."
msgstr ""
"Поскольку отрицательное значение аргумента *level* для :func:`__import__` "
"больше не является допустимым, то же самое теперь справедливо и для :c:func:"
"`PyImport_ImportModuleLevel`. Это также означает, что значение *level*, "
"используемое :c:func:`PyImport_ImportModuleEx`, теперь равно ``0`` вместо "
"``-1``."

#: ../../whatsnew/3.3.rst:2495
msgid "Building C extensions"
msgstr "Создание расширений C"

#: ../../whatsnew/3.3.rst:2497
msgid ""
"The range of possible file names for C extensions has been narrowed. Very "
"rarely used spellings have been suppressed: under POSIX, files named "
"``xxxmodule.so``, ``xxxmodule.abi3.so`` and ``xxxmodule.cpython-*.so`` are "
"no longer recognized as implementing the ``xxx`` module.  If you had been "
"generating such files, you have to switch to the other spellings (i.e., "
"remove the ``module`` string from the file names)."
msgstr ""
"Диапазон возможных имен файлов для расширений C сужен. Очень редко "
"используемые варианты написания были подавлены: в POSIX файлы с именами "
"``xxxmodule.so``, ``xxxmodule.abi3.so`` и ``xxxmodule.cpython-*.so`` больше "
"не распознаются как реализация `` `xxx`` модуль. Если вы создавали такие "
"файлы, вам придется переключиться на другое написание (т. е. удалить строку "
"``module`` из имен файлов)."

#: ../../whatsnew/3.3.rst:2505
msgid "(implemented in :issue:`14040`.)"
msgstr "(реализовано в :issue:`14040`.)"

#: ../../whatsnew/3.3.rst:2509
msgid "Command Line Switch Changes"
msgstr "Изменения переключателей командной строки"

#: ../../whatsnew/3.3.rst:2511
msgid ""
"The -Q command-line flag and related artifacts have been removed.  Code "
"checking sys.flags.division_warning will need updating."
msgstr ""
"Флаг командной строки -Q и связанные с ним артефакты были удалены. Код "
"проверки sys.flags.division_warning потребует обновления."

#: ../../whatsnew/3.3.rst:2514
msgid "(:issue:`10998`, contributed by Éric Araujo.)"
msgstr "(:issue:`10998`, предоставлено Эриком Араужо.)"

#: ../../whatsnew/3.3.rst:2516
msgid ""
"When :program:`python` is started with :option:`-S`, ``import site`` will no "
"longer add site-specific paths to the module search paths.  In previous "
"versions, it did."
msgstr ""
"Когда :program:`python` запускается с :option:`-S`, ``import site`` больше "
"не будет добавлять пути, специфичные для сайта, в пути поиска модуля. В "
"предыдущих версиях так и было."

#: ../../whatsnew/3.3.rst:2520
msgid ""
"(:issue:`11591`, contributed by Carl Meyer with editions by Éric Araujo.)"
msgstr "(:issue:`11591`, предоставлено Карлом Мейером, редакция Эрика Араужо.)"

#: ../../whatsnew/3.3.rst:396
msgid "yield"
msgstr "yield"

#: ../../whatsnew/3.3.rst:396
msgid "yield from (in What's New)"
msgstr "yield  (в разделе «Что нового») "
