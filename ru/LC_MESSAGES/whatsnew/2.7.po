# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# Rafael Fontenelle <rffontenelle@gmail.com>, 2024
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.10\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-01-10 16:06+0000\n"
"PO-Revision-Date: 2022-11-05 17:23+0000\n"
"Last-Translator: Rafael Fontenelle <rffontenelle@gmail.com>, 2024\n"
"Language-Team: Russian (https://app.transifex.com/python-doc/teams/5390/"
"ru/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ru\n"
"Plural-Forms: nplurals=4; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && "
"n%10<=4 && (n%100<12 || n%100>14) ? 1 : n%10==0 || (n%10>=5 && n%10<=9) || "
"(n%100>=11 && n%100<=14)? 2 : 3);\n"

#: ../../whatsnew/2.7.rst:3
msgid "What's New in Python 2.7"
msgstr "Что нового в Python 2.7"

#: ../../whatsnew/2.7.rst:0
msgid "Author"
msgstr "Автор"

#: ../../whatsnew/2.7.rst:5
msgid "A.M. Kuchling (amk at amk.ca)"
msgstr "А. М. Кучлинг (amk на amk.ca)"

#: ../../whatsnew/2.7.rst:52
msgid ""
"This article explains the new features in Python 2.7.  Python 2.7 was "
"released on July 3, 2010."
msgstr ""
"В этой статье объясняются новые возможности Python 2.7. Python 2.7 был "
"выпущен 3 июля 2010 года."

#: ../../whatsnew/2.7.rst:55
msgid ""
"Numeric handling has been improved in many ways, for both floating-point "
"numbers and for the :class:`~decimal.Decimal` class. There are some useful "
"additions to the standard library, such as a greatly enhanced :mod:"
"`unittest` module, the :mod:`argparse` module for parsing command-line "
"options, convenient :class:`~collections.OrderedDict` and :class:"
"`~collections.Counter` classes in the :mod:`collections` module, and many "
"other improvements."
msgstr ""
"Обработка чисел была улучшена во многих отношениях, как для чисел с "
"плавающей запятой, так и для класса :class:`~decimal.Decimal`. К стандартной "
"библиотеке есть несколько полезных дополнений, таких как значительно "
"улучшенный модуль :mod:`unittest`, модуль :mod:`argparse` для анализа "
"параметров командной строки, удобные :class:`~collections.OrderedDict` и : "
"class:`~collections.Counter` в модуле :mod:`collections` и многие другие "
"улучшения."

#: ../../whatsnew/2.7.rst:63
msgid ""
"Python 2.7 is planned to be the last of the 2.x releases, so we worked on "
"making it a good release for the long term.  To help with porting to Python "
"3, several new features from the Python 3.x series have been included in 2.7."
msgstr ""
"Планируется, что Python 2.7 станет последним из выпусков 2.x, поэтому мы "
"работали над тем, чтобы сделать его хорошим выпуском в долгосрочной "
"перспективе. Чтобы облегчить портирование на Python 3, в версию 2.7 было "
"включено несколько новых функций из серии Python 3.x."

#: ../../whatsnew/2.7.rst:68
msgid ""
"This article doesn't attempt to provide a complete specification of the new "
"features, but instead provides a convenient overview.  For full details, you "
"should refer to the documentation for Python 2.7 at https://docs.python.org. "
"If you want to understand the rationale for the design and implementation, "
"refer to the PEP for a particular new feature or the issue on https://bugs."
"python.org in which a change was discussed.  Whenever possible, \"What's New "
"in Python\" links to the bug/patch item for each change."
msgstr ""
"В этой статье не делается попытка предоставить полную спецификацию новых "
"функций, а вместо этого представлен удобный обзор. Для получения полной "
"информации обратитесь к документации Python 2.7 по адресу https://docs."
"python.org. Если вы хотите понять обоснование проектирования и реализации, "
"обратитесь к PEP для конкретной новой функции или проблемы на https://bugs."
"python.org, в которой обсуждалось изменение. По возможности, «Что нового в "
"Python» содержит ссылку на ошибку/исправление для каждого изменения."

#: ../../whatsnew/2.7.rst:80
msgid "The Future for Python 2.x"
msgstr "Будущее Python 2.x"

#: ../../whatsnew/2.7.rst:82
msgid ""
"Python 2.7 is the last major release in the 2.x series, as the Python "
"maintainers have shifted the focus of their new feature development efforts "
"to the Python 3.x series. This means that while Python 2 continues to "
"receive bug fixes, and to be updated to build correctly on new hardware and "
"versions of supported operated systems, there will be no new full feature "
"releases for the language or standard library."
msgstr ""
"Python 2.7 — последняя крупная версия серии 2.x, поскольку разработчики "
"Python сместили фокус своих усилий по разработке новых функций на серию "
"Python 3.x. Это означает, что, хотя Python 2 продолжает получать исправления "
"ошибок и обновляться для правильной сборки на новом оборудовании и версиях "
"поддерживаемых операционных систем, новых полнофункциональных выпусков для "
"языка или стандартной библиотеки не будет."

#: ../../whatsnew/2.7.rst:89
msgid ""
"However, while there is a large common subset between Python 2.7 and Python "
"3, and many of the changes involved in migrating to that common subset, or "
"directly to Python 3, can be safely automated, some other changes (notably "
"those associated with Unicode handling) may require careful consideration, "
"and preferably robust automated regression test suites, to migrate "
"effectively."
msgstr ""
"Однако, хотя между Python 2.7 и Python 3 существует большое общее "
"подмножество, и многие изменения, связанные с переходом к этому общему "
"подмножеству или непосредственно к Python 3, могут быть безопасно "
"автоматизированы, некоторые другие изменения (особенно те, которые связаны с "
"обработкой Unicode) ) может потребовать тщательного рассмотрения и, "
"желательно, надежных наборов автоматических регрессионных тестов для "
"эффективной миграции."

#: ../../whatsnew/2.7.rst:96
msgid ""
"This means that Python 2.7 will remain in place for a long time, providing a "
"stable and supported base platform for production systems that have not yet "
"been ported to Python 3. The full expected lifecycle of the Python 2.7 "
"series is detailed in :pep:`373`."
msgstr ""
"Это означает, что Python 2.7 останется на месте в течение длительного "
"времени, обеспечивая стабильную и поддерживаемую базовую платформу для "
"производственных систем, которые еще не были портированы на Python 3. Полный "
"ожидаемый жизненный цикл серии Python 2.7 подробно описан в :pep:` 373`."

#: ../../whatsnew/2.7.rst:101
msgid "Some key consequences of the long-term significance of 2.7 are:"
msgstr "Некоторые ключевые последствия долгосрочного значения 2.7:"

#: ../../whatsnew/2.7.rst:103
msgid ""
"As noted above, the 2.7 release has a much longer period of maintenance when "
"compared to earlier 2.x versions. Python 2.7 is currently expected to remain "
"supported by the core development team (receiving security updates and other "
"bug fixes) until at least 2020 (10 years after its initial release, compared "
"to the more typical support period of 18--24 months)."
msgstr ""
"Как отмечалось выше, период обслуживания версии 2.7 гораздо дольше по "
"сравнению с более ранними версиями 2.x. В настоящее время ожидается, что "
"Python 2.7 будет поддерживаться основной командой разработчиков (получая "
"обновления безопасности и другие исправления ошибок) как минимум до 2020 "
"года (через 10 лет после его первоначального выпуска по сравнению с более "
"типичным периодом поддержки в 18–24 месяца)."

#: ../../whatsnew/2.7.rst:109
msgid ""
"As the Python 2.7 standard library ages, making effective use of the Python "
"Package Index (either directly or via a redistributor) becomes more "
"important for Python 2 users. In addition to a wide variety of third party "
"packages for various tasks, the available packages include backports of new "
"modules and features from the Python 3 standard library that are compatible "
"with Python 2, as well as various tools and libraries that can make it "
"easier to migrate to Python 3. The `Python Packaging User Guide <https://"
"packaging.python.org>`__ provides guidance on downloading and installing "
"software from the Python Package Index."
msgstr ""
"По мере старения стандартной библиотеки Python 2.7 эффективное использование "
"индекса пакетов Python (напрямую или через распространителя) становится все "
"более важным для пользователей Python 2. В дополнение к широкому спектру "
"сторонних пакетов для различных задач, доступные пакеты включают резервные "
"копии новых модулей и функций из стандартной библиотеки Python 3, "
"совместимых с Python 2, а также различные инструменты и библиотеки, которые "
"могут упростить перейдите на Python 3. `Руководство пользователя упаковки "
"Python <https://packaging.python.org>`__ содержит рекомендации по загрузке и "
"установке программного обеспечения из указателя пакетов Python."

#: ../../whatsnew/2.7.rst:119
msgid ""
"While the preferred approach to enhancing Python 2 is now the publication of "
"new packages on the Python Package Index, this approach doesn't necessarily "
"work in all cases, especially those related to network security. In "
"exceptional cases that cannot be handled adequately by publishing new or "
"updated packages on PyPI, the Python Enhancement Proposal process may be "
"used to make the case for adding new features directly to the Python 2 "
"standard library. Any such additions, and the maintenance releases where "
"they were added, will be noted in the :ref:`py27-maintenance-enhancements` "
"section below."
msgstr ""
"Хотя сейчас предпочтительным подходом к улучшению Python 2 является "
"публикация новых пакетов в Индексе пакетов Python, этот подход не "
"обязательно работает во всех случаях, особенно в тех, которые связаны с "
"сетевой безопасностью. В исключительных случаях, которые невозможно "
"адекватно обработать путем публикации новых или обновленных пакетов в PyPI, "
"можно использовать процесс предложения по расширению Python, чтобы "
"обосновать добавление новых функций непосредственно в стандартную библиотеку "
"Python 2. Любые такие дополнения, а также версии обслуживания, в которые они "
"были добавлены, будут указаны в разделе :ref:`py27-maintenance-enhancements` "
"ниже."

#: ../../whatsnew/2.7.rst:129
msgid ""
"For projects wishing to migrate from Python 2 to Python 3, or for library "
"and framework developers wishing to support users on both Python 2 and "
"Python 3, there are a variety of tools and guides available to help decide "
"on a suitable approach and manage some of the technical details involved. "
"The recommended starting point is the :ref:`pyporting-howto` HOWTO guide."
msgstr ""
"Для проектов, желающих перейти с Python 2 на Python 3, или для разработчиков "
"библиотек и платформ, желающих поддерживать пользователей как на Python 2, "
"так и на Python 3, существует множество инструментов и руководств, которые "
"помогут выбрать подходящий подход и управлять некоторыми из них. технические "
"детали. Рекомендуемой отправной точкой является руководство :ref:`pyporting-"
"howto` HOWTO."

#: ../../whatsnew/2.7.rst:137
msgid "Changes to the Handling of Deprecation Warnings"
msgstr "Изменения в обработке предупреждений об устаревании"

#: ../../whatsnew/2.7.rst:139
msgid ""
"For Python 2.7, a policy decision was made to silence warnings only of "
"interest to developers by default.  :exc:`DeprecationWarning` and its "
"descendants are now ignored unless otherwise requested, preventing users "
"from seeing warnings triggered by an application.  This change was also made "
"in the branch that became Python 3.2. (Discussed on stdlib-sig and carried "
"out in :issue:`7319`.)"
msgstr ""
"В Python 2.7 было принято политическое решение по умолчанию отключить "
"предупреждения, представляющие интерес только для разработчиков. :exc:"
"`DeprecationWarning` и его потомки теперь игнорируются, если не запрошено "
"иное, что не позволяет пользователям видеть предупреждения, вызванные "
"приложением. Это изменение также было сделано в ветке, которая стала Python "
"3.2. (Обсуждается в stdlib-sig и выполняется в :issue:`7319`.)"

#: ../../whatsnew/2.7.rst:146
msgid ""
"In previous releases, :exc:`DeprecationWarning` messages were enabled by "
"default, providing Python developers with a clear indication of where their "
"code may break in a future major version of Python."
msgstr ""
"В предыдущих выпусках сообщения :exc:`DeprecationWarning` были включены по "
"умолчанию, предоставляя разработчикам Python четкое указание о том, где их "
"код может сломаться в будущей основной версии Python."

#: ../../whatsnew/2.7.rst:151
msgid ""
"However, there are increasingly many users of Python-based applications who "
"are not directly involved in the development of those applications.  :exc:"
"`DeprecationWarning` messages are irrelevant to such users, making them "
"worry about an application that's actually working correctly and burdening "
"application developers with responding to these concerns."
msgstr ""
"Однако становится все больше пользователей приложений на основе Python, "
"которые не участвуют непосредственно в разработке этих приложений. "
"Сообщения :exc:`DeprecationWarning` не имеют значения для таких "
"пользователей, заставляя их беспокоиться о том, что приложение на самом деле "
"работает правильно, и обременяя разработчиков приложений реагированием на "
"эти проблемы."

#: ../../whatsnew/2.7.rst:158
msgid ""
"You can re-enable display of :exc:`DeprecationWarning` messages by running "
"Python with the :option:`-Wdefault <-W>` (short form: :option:`-Wd <-W>`) "
"switch, or by setting the :envvar:`PYTHONWARNINGS` environment variable to "
"``\"default\"`` (or ``\"d\"``) before running Python.  Python code can also "
"re-enable them by calling ``warnings.simplefilter('default')``."
msgstr ""
"Вы можете повторно включить отображение сообщений :exc:`DeprecationWarning`, "
"запустив Python с переключателем :option:`-Wdefault <-W>` (краткая форма: :"
"option:`-Wd <-W>`) или установка переменной среды :envvar:`PYTHONWARNINGS` в "
"значение ``\"default\"`` (или ``\"d\"``) перед запуском Python. Код Python "
"также может повторно включить их, вызвав alerts.simplefilter('default')``."

#: ../../whatsnew/2.7.rst:165
msgid ""
"The ``unittest`` module also automatically reenables deprecation warnings "
"when running tests."
msgstr ""
"Модуль unittest также автоматически включает предупреждения об устаревании "
"при запуске тестов."

#: ../../whatsnew/2.7.rst:170
msgid "Python 3.1 Features"
msgstr "Особенности Python 3.1"

#: ../../whatsnew/2.7.rst:172
msgid ""
"Much as Python 2.6 incorporated features from Python 3.0, version 2.7 "
"incorporates some of the new features in Python 3.1.  The 2.x series "
"continues to provide tools for migrating to the 3.x series."
msgstr ""
"Подобно тому, как Python 2.6 включает в себя функции Python 3.0, версия 2.7 "
"включает в себя некоторые новые функции Python 3.1. Серия 2.x продолжает "
"предоставлять инструменты для перехода на серию 3.x."

#: ../../whatsnew/2.7.rst:177
msgid "A partial list of 3.1 features that were backported to 2.7:"
msgstr ""
"Неполный список функций версии 3.1, которые были перенесены в версию 2.7:"

#: ../../whatsnew/2.7.rst:179
msgid "The syntax for set literals (``{1,2,3}`` is a mutable set)."
msgstr "Синтаксис для литералов множества (``{1,2,3}`` — изменяемый набор)."

#: ../../whatsnew/2.7.rst:180
msgid "Dictionary and set comprehensions (``{i: i*2 for i in range(3)}``)."
msgstr "Словарь и понимание множеств (``{i: i*2 for i in range(3)}``)."

#: ../../whatsnew/2.7.rst:181
msgid "Multiple context managers in a single :keyword:`with` statement."
msgstr "Несколько менеджеров контекста в одном операторе :keyword:`with`."

#: ../../whatsnew/2.7.rst:182
msgid "A new version of the :mod:`io` library, rewritten in C for performance."
msgstr ""
"Новая версия библиотеки :mod:`io`, переписанная на C для повышения "
"производительности."

#: ../../whatsnew/2.7.rst:183
msgid "The ordered-dictionary type described in :ref:`pep-0372`."
msgstr "Тип упорядоченного словаря, описанный в :ref:`pep-0372`."

#: ../../whatsnew/2.7.rst:184
msgid "The new ``\",\"`` format specifier described in :ref:`pep-0378`."
msgstr "Новый спецификатор формата ``\",\"`` описан в :ref:`pep-0378`."

#: ../../whatsnew/2.7.rst:185
msgid "The :class:`memoryview` object."
msgstr "Объект :class:`memoryview`."

#: ../../whatsnew/2.7.rst:186
msgid ""
"A small subset of the :mod:`importlib` module, `described below <#importlib-"
"section>`__."
msgstr ""
"Небольшое подмножество модуля :mod:`importlib`, `описанное ниже <#importlib-"
"section>`__."

#: ../../whatsnew/2.7.rst:188
msgid ""
"The :func:`repr` of a float ``x`` is shorter in many cases: it's now based "
"on the shortest decimal string that's guaranteed to round back to ``x``.  As "
"in previous versions of Python, it's guaranteed that ``float(repr(x))`` "
"recovers ``x``."
msgstr ""
":func:`repr` числа с плавающей запятой ``x`` во многих случаях короче: "
"теперь оно основано на самой короткой десятичной строке, которая "
"гарантированно округляется до ``x``. Как и в предыдущих версиях Python, "
"гарантированно, что float(repr(x)) восстанавливает x."

#: ../../whatsnew/2.7.rst:192
msgid ""
"Float-to-string and string-to-float conversions are correctly rounded. The :"
"func:`round` function is also now correctly rounded."
msgstr ""
"Преобразования чисел с плавающей запятой в строку и строку в число с "
"плавающей запятой округляются правильно. Функция :func:`round` теперь также "
"правильно округляется."

#: ../../whatsnew/2.7.rst:194
msgid ""
"The :c:type:`PyCapsule` type, used to provide a C API for extension modules."
msgstr ""
"Тип :c:type:`PyCapsule`, используемый для предоставления C API для модулей "
"расширения."

#: ../../whatsnew/2.7.rst:195
msgid "The :c:func:`PyLong_AsLongAndOverflow` C API function."
msgstr "Функция C API :c:func:`PyLong_AsLongAndOverflow`."

#: ../../whatsnew/2.7.rst:197
msgid "Other new Python3-mode warnings include:"
msgstr "Другие новые предупреждения режима Python3 включают в себя:"

#: ../../whatsnew/2.7.rst:199
msgid ""
":func:`operator.isCallable` and :func:`operator.sequenceIncludes`, which are "
"not supported in 3.x, now trigger warnings."
msgstr ""

#: ../../whatsnew/2.7.rst:201
msgid ""
"The :option:`!-3` switch now automatically enables the :option:`!-Qwarn` "
"switch that causes warnings about using classic division with integers and "
"long integers."
msgstr ""
"Переключатель :option:`!-3` теперь автоматически включает переключатель :"
"option:`!-Qwarn`, который вызывает предупреждения об использовании "
"классического деления целых и длинных целых чисел."

#: ../../whatsnew/2.7.rst:214
msgid "PEP 372: Adding an Ordered Dictionary to collections"
msgstr "PEP 372: добавление упорядоченного словаря в коллекции"

#: ../../whatsnew/2.7.rst:216
msgid ""
"Regular Python dictionaries iterate over key/value pairs in arbitrary order. "
"Over the years, a number of authors have written alternative implementations "
"that remember the order that the keys were originally inserted.  Based on "
"the experiences from those implementations, 2.7 introduces a new :class:"
"`~collections.OrderedDict` class in the :mod:`collections` module."
msgstr ""
"Обычные словари Python перебирают пары ключ/значение в произвольном порядке. "
"За прошедшие годы ряд авторов написали альтернативные реализации, "
"запоминающие порядок первоначальной вставки ключей. Основываясь на опыте "
"этих реализаций, в версии 2.7 представлен новый класс :class:`~collections."
"OrderedDict` в модуле :mod:`collections`."

#: ../../whatsnew/2.7.rst:222
msgid ""
"The :class:`~collections.OrderedDict` API provides the same interface as "
"regular dictionaries but iterates over keys and values in a guaranteed order "
"depending on when a key was first inserted::"
msgstr ""
"API :class:`~collections.OrderedDict` предоставляет тот же интерфейс, что и "
"обычные словари, но выполняет итерацию по ключам и значениям в "
"гарантированном порядке в зависимости от того, когда ключ был впервые "
"вставлен::"

#: ../../whatsnew/2.7.rst:233
msgid ""
"If a new entry overwrites an existing entry, the original insertion position "
"is left unchanged::"
msgstr ""
"Если новая запись перезаписывает существующую, исходная позиция вставки "
"остается неизменной::"

#: ../../whatsnew/2.7.rst:240
msgid "Deleting an entry and reinserting it will move it to the end::"
msgstr "Удаление записи и повторная вставка переместит ее в конец::"

#: ../../whatsnew/2.7.rst:247
msgid ""
"The :meth:`~collections.OrderedDict.popitem` method has an optional *last* "
"argument that defaults to ``True``.  If *last* is true, the most recently "
"added key is returned and removed; if it's false, the oldest key is "
"selected::"
msgstr ""
"Метод :meth:`~collections.OrderedDict.popitem` имеет необязательный аргумент "
"*last*, который по умолчанию имеет значение ``True``. Если *last* имеет "
"значение true, возвращается и удаляется последний добавленный ключ; если оно "
"ложно, выбирается самый старый ключ::"

#: ../../whatsnew/2.7.rst:262
msgid ""
"Comparing two ordered dictionaries checks both the keys and values, and "
"requires that the insertion order was the same::"
msgstr ""
"При сравнении двух упорядоченных словарей проверяются как ключи, так и "
"значения, а также требуется, чтобы порядок вставки был одинаковым:"

#: ../../whatsnew/2.7.rst:278
msgid ""
"Comparing an :class:`~collections.OrderedDict` with a regular dictionary "
"ignores the insertion order and just compares the keys and values."
msgstr ""
"Сравнение :class:`~collections.OrderedDict` с обычным словарем игнорирует "
"порядок вставки и просто сравнивает ключи и значения."

#: ../../whatsnew/2.7.rst:281
msgid ""
"How does the :class:`~collections.OrderedDict` work?  It maintains a doubly "
"linked list of keys, appending new keys to the list as they're inserted. A "
"secondary dictionary maps keys to their corresponding list node, so deletion "
"doesn't have to traverse the entire linked list and therefore remains O(1)."
msgstr ""

#: ../../whatsnew/2.7.rst:287
msgid ""
"The standard library now supports use of ordered dictionaries in several "
"modules."
msgstr ""
"Стандартная библиотека теперь поддерживает использование упорядоченных "
"словарей в нескольких модулях."

#: ../../whatsnew/2.7.rst:290
msgid ""
"The :mod:`ConfigParser` module uses them by default, meaning that "
"configuration files can now be read, modified, and then written back in "
"their original order."
msgstr ""

#: ../../whatsnew/2.7.rst:294
msgid ""
"The :meth:`~collections.somenamedtuple._asdict()` method for :func:"
"`collections.namedtuple` now returns an ordered dictionary with the values "
"appearing in the same order as the underlying tuple indices."
msgstr ""

#: ../../whatsnew/2.7.rst:298
msgid ""
"The :mod:`json` module's :class:`~json.JSONDecoder` class constructor was "
"extended with an *object_pairs_hook* parameter to allow :class:`OrderedDict` "
"instances to be built by the decoder. Support was also added for third-party "
"tools like `PyYAML <https://pyyaml.org/>`_."
msgstr ""
"Конструктор класса :class:`~json.JSONDecoder` модуля :mod:`json` был "
"расширен с помощью параметра *object_pairs_hook*, позволяющего создавать "
"экземпляры :class:`OrderedDict` декодером. Также была добавлена ​​поддержка "
"сторонних инструментов, таких как `PyYAML <https://pyyaml.org/>`_."

#: ../../whatsnew/2.7.rst:307
msgid ":pep:`372` - Adding an ordered dictionary to collections"
msgstr ":pep:`372` - Добавление упорядоченного словаря в коллекции"

#: ../../whatsnew/2.7.rst:307
msgid ""
"PEP written by Armin Ronacher and Raymond Hettinger; implemented by Raymond "
"Hettinger."
msgstr ""
"PEP, написанный Армином Ронахером и Раймондом Хеттингером; реализован "
"Раймондом Хеттингером."

#: ../../whatsnew/2.7.rst:313
msgid "PEP 378: Format Specifier for Thousands Separator"
msgstr "PEP 378: спецификатор формата для разделителя тысяч"

#: ../../whatsnew/2.7.rst:315
msgid ""
"To make program output more readable, it can be useful to add separators to "
"large numbers, rendering them as 18,446,744,073,709,551,616 instead of "
"18446744073709551616."
msgstr ""
"Чтобы сделать вывод программы более читаемым, может быть полезно добавлять "
"разделители к большим числам, отображая их как 18 446 744 073 709 551 616 "
"вместо 18446744073709551616."

#: ../../whatsnew/2.7.rst:319
msgid ""
"The fully general solution for doing this is the :mod:`locale` module, which "
"can use different separators (\",\" in North America, \".\" in Europe) and "
"different grouping sizes, but :mod:`locale` is complicated to use and "
"unsuitable for multi-threaded applications where different threads are "
"producing output for different locales."
msgstr ""
"Полностью общим решением для этого является модуль :mod:`locale`, который "
"может использовать разные разделители (\",\" в Северной Америке, \".\" в "
"Европе) и разные размеры группировки, но :mod:`locale` усложняется. "
"использовать и непригоден для многопоточных приложений, где разные потоки "
"создают выходные данные для разных локалей."

#: ../../whatsnew/2.7.rst:325
msgid ""
"Therefore, a simple comma-grouping mechanism has been added to the mini-"
"language used by the :meth:`str.format` method.  When formatting a floating-"
"point number, simply include a comma between the width and the precision::"
msgstr ""
"Поэтому в мини-язык, используемый методом :meth:`str.format`, был добавлен "
"простой механизм группировки запятых. При форматировании числа с плавающей "
"запятой просто поставьте запятую между шириной и точностью:"

#: ../../whatsnew/2.7.rst:333
msgid "When formatting an integer, include the comma after the width:"
msgstr "При форматировании целого числа поставьте запятую после ширины:"

#: ../../whatsnew/2.7.rst:338
msgid ""
"This mechanism is not adaptable at all; commas are always used as the "
"separator and the grouping is always into three-digit groups.  The comma-"
"formatting mechanism isn't as general as the :mod:`locale` module, but it's "
"easier to use."
msgstr ""
"Этот механизм вообще не поддается адаптации; в качестве разделителя всегда "
"используются запятые, а группировка всегда осуществляется по группам из трех "
"цифр. Механизм форматирования запятых не такой общий, как модуль :mod:"
"`locale`, но его проще использовать."

#: ../../whatsnew/2.7.rst:345
msgid ":pep:`378` - Format Specifier for Thousands Separator"
msgstr ":pep:`378` - Описатель формата для разделителя тысяч"

#: ../../whatsnew/2.7.rst:346
msgid "PEP written by Raymond Hettinger; implemented by Eric Smith."
msgstr "PEP, написанный Раймондом Хеттингером; реализован Эриком Смитом."

#: ../../whatsnew/2.7.rst:349
msgid "PEP 389: The argparse Module for Parsing Command Lines"
msgstr "PEP 389: модуль argparse для анализа командных строк"

#: ../../whatsnew/2.7.rst:351
msgid ""
"The :mod:`argparse` module for parsing command-line arguments was added as a "
"more powerful replacement for the :mod:`optparse` module."
msgstr ""
"Модуль :mod:`argparse` для анализа аргументов командной строки был добавлен "
"как более мощная замена модуля :mod:`optparse`."

#: ../../whatsnew/2.7.rst:355
msgid ""
"This means Python now supports three different modules for parsing command-"
"line arguments: :mod:`getopt`, :mod:`optparse`, and :mod:`argparse`.  The :"
"mod:`getopt` module closely resembles the C library's :c:func:`getopt` "
"function, so it remains useful if you're writing a Python prototype that "
"will eventually be rewritten in C. :mod:`optparse` becomes redundant, but "
"there are no plans to remove it because there are many scripts still using "
"it, and there's no automated way to update these scripts.  (Making the :mod:"
"`argparse` API consistent with :mod:`optparse`'s interface was discussed but "
"rejected as too messy and difficult.)"
msgstr ""

#: ../../whatsnew/2.7.rst:366
msgid ""
"In short, if you're writing a new script and don't need to worry about "
"compatibility with earlier versions of Python, use :mod:`argparse` instead "
"of :mod:`optparse`."
msgstr ""
"Короче говоря, если вы пишете новый скрипт и вам не нужно беспокоиться о "
"совместимости с более ранними версиями Python, используйте :mod:`argparse` "
"вместо :mod:`optparse`."

#: ../../whatsnew/2.7.rst:370
msgid "Here's an example::"
msgstr "Вот пример::"

#: ../../whatsnew/2.7.rst:393
msgid ""
"Unless you override it, :option:`!-h` and :option:`!--help` switches are "
"automatically added, and produce neatly formatted output::"
msgstr ""
"Если вы не переопределите его, переключатели :option:`!-h` и :option:`!--"
"help` добавляются автоматически и выдают аккуратно отформатированный вывод::"

#: ../../whatsnew/2.7.rst:410
msgid ""
"As with :mod:`optparse`, the command-line switches and arguments are "
"returned as an object with attributes named by the *dest* parameters::"
msgstr ""
"Как и в случае с :mod:`optparse`, ключи и аргументы командной строки "
"возвращаются как объект с атрибутами, указанными в параметрах *dest*::"

#: ../../whatsnew/2.7.rst:425
msgid ""
":mod:`argparse` has much fancier validation than :mod:`optparse`; you can "
"specify an exact number of arguments as an integer, 0 or more arguments by "
"passing ``'*'``, 1 or more by passing ``'+'``, or an optional argument with "
"``'?'``.  A top-level parser can contain sub-parsers to define subcommands "
"that have different sets of switches, as in ``svn commit``, ``svn "
"checkout``, etc.  You can specify an argument's type as :class:`~argparse."
"FileType`, which will automatically open files for you and understands that "
"``'-'`` means standard input or output."
msgstr ""
":mod:`argparse` имеет гораздо более сложную проверку, чем :mod:`optparse`; "
"вы можете указать точное количество аргументов в виде целого числа, 0 или "
"более аргументов, передав ``'*'``, 1 или более, передав ``'+'``, или "
"необязательный аргумент с помощью ``'?'` `. Парсер верхнего уровня может "
"содержать поданализаторы для определения подкоманд с разными наборами "
"переключателей, например, ``svn commit``, ``svn checkout`` и т. д. Вы можете "
"указать тип аргумента как :class:`~ argparse.FileType`, который "
"автоматически открывает для вас файлы и понимает, что ``'-'`` означает "
"стандартный ввод или вывод."

#: ../../whatsnew/2.7.rst:438
msgid ":mod:`argparse` documentation"
msgstr "Документация :mod:`argparse`"

#: ../../whatsnew/2.7.rst:438
msgid "The documentation page of the argparse module."
msgstr "Страница документации модуля argparse."

#: ../../whatsnew/2.7.rst:442
msgid ":ref:`upgrading-optparse-code`"
msgstr ":ref:`upgrading-optparse-code`"

#: ../../whatsnew/2.7.rst:441
msgid ""
"Part of the Python documentation, describing how to convert code that uses :"
"mod:`optparse`."
msgstr ""
"Часть документации Python, описывающая, как преобразовать код, использующий :"
"mod:`optparse`."

#: ../../whatsnew/2.7.rst:444
msgid ":pep:`389` - argparse - New Command Line Parsing Module"
msgstr ":pep:`389` - argparse - Новый модуль анализа командной строки"

#: ../../whatsnew/2.7.rst:445
msgid "PEP written and implemented by Steven Bethard."
msgstr "PEP написан и реализован Стивеном Бетхардом."

#: ../../whatsnew/2.7.rst:448
msgid "PEP 391: Dictionary-Based Configuration For Logging"
msgstr "PEP 391: конфигурация для ведения журнала на основе словаря"

#: ../../whatsnew/2.7.rst:450
msgid ""
"The :mod:`logging` module is very flexible; applications can define a tree "
"of logging subsystems, and each logger in this tree can filter out certain "
"messages, format them differently, and direct messages to a varying number "
"of handlers."
msgstr ""
"Модуль :mod:`logging` очень гибок; приложения могут определять дерево "
"подсистем журналирования, и каждый регистратор в этом дереве может "
"фильтровать определенные сообщения, форматировать их по-разному и направлять "
"сообщения различному количеству обработчиков."

#: ../../whatsnew/2.7.rst:455
msgid ""
"All this flexibility can require a lot of configuration.  You can write "
"Python statements to create objects and set their properties, but a complex "
"set-up requires verbose but boring code. :mod:`logging` also supports a :"
"func:`~logging.fileConfig` function that parses a file, but the file format "
"doesn't support configuring filters, and it's messier to generate "
"programmatically."
msgstr ""

#: ../../whatsnew/2.7.rst:462
msgid ""
"Python 2.7 adds a :func:`~logging.dictConfig` function that uses a "
"dictionary to configure logging.  There are many ways to produce a "
"dictionary from different sources: construct one with code; parse a file "
"containing JSON; or use a YAML parsing library if one is installed.  For "
"more information see :ref:`logging-config-api`."
msgstr ""

#: ../../whatsnew/2.7.rst:468
msgid ""
"The following example configures two loggers, the root logger and a logger "
"named \"network\".  Messages sent to the root logger will be sent to the "
"system log using the syslog protocol, and messages to the \"network\" logger "
"will be written to a :file:`network.log` file that will be rotated once the "
"log reaches 1MB."
msgstr ""
"В следующем примере настраиваются два средства ведения журнала: корневой "
"регистратор и регистратор с именем «сеть». Сообщения, отправленные в "
"корневой регистратор, будут отправляться в системный журнал с использованием "
"протокола системного журнала, а сообщения в «сетевой» регистратор будут "
"записываться в файл :file:`network.log`, который будет ротироваться, как "
"только размер журнала достигнет 1 МБ."

#: ../../whatsnew/2.7.rst:518
msgid ""
"Three smaller enhancements to the :mod:`logging` module, all implemented by "
"Vinay Sajip, are:"
msgstr ""
"Три небольших улучшения модуля :mod:`logging`, реализованные Винаем Саджипом:"

#: ../../whatsnew/2.7.rst:523
msgid ""
"The :class:`~logging.handlers.SysLogHandler` class now supports syslogging "
"over TCP.  The constructor has a *socktype* parameter giving the type of "
"socket to use, either :const:`socket.SOCK_DGRAM` for UDP or :const:`socket."
"SOCK_STREAM` for TCP.  The default protocol remains UDP."
msgstr ""
"Класс :class:`~logging.handlers.SysLogHandler` теперь поддерживает системную "
"регистрацию через TCP. Конструктор имеет параметр *socktype*, задающий тип "
"используемого сокета: const:`socket.SOCK_DGRAM` для UDP или :const:`socket."
"SOCK_STREAM` для TCP. Протоколом по умолчанию остается UDP."

#: ../../whatsnew/2.7.rst:529
msgid ""
":class:`~logging.Logger` instances gained a :meth:`~logging.Logger.getChild` "
"method that retrieves a descendant logger using a relative path. For "
"example, once you retrieve a logger by doing ``log = getLogger('app')``, "
"calling ``log.getChild('network.listen')`` is equivalent to ``getLogger('app."
"network.listen')``."
msgstr ""
"Экземпляры :class:`~logging.Logger` получили метод :meth:`~logging.Logger."
"getChild`, который извлекает дочерний регистратор, используя относительный "
"путь. Например, как только вы получаете средство ведения журнала, выполнив "
"``log = getLogger('app')``, вызов ``log.getChild('network.listen')`` "
"эквивалентен ``getLogger('app.network. слушай')``."

#: ../../whatsnew/2.7.rst:535
msgid ""
"The :class:`~logging.LoggerAdapter` class gained an :meth:`~logging."
"LoggerAdapter.isEnabledFor` method that takes a *level* and returns whether "
"the underlying logger would process a message of that level of importance."
msgstr ""

#: ../../whatsnew/2.7.rst:544
msgid ":pep:`391` - Dictionary-Based Configuration For Logging"
msgstr ":pep:`391` — конфигурация для ведения журнала на основе словаря"

#: ../../whatsnew/2.7.rst:545
msgid "PEP written and implemented by Vinay Sajip."
msgstr "PEP написан и реализован Винаем Саджипом."

#: ../../whatsnew/2.7.rst:548
msgid "PEP 3106: Dictionary Views"
msgstr "PEP 3106: Просмотры словаря"

#: ../../whatsnew/2.7.rst:550
msgid ""
"The dictionary methods :meth:`~dict.keys`, :meth:`~dict.values`, and :meth:"
"`~dict.items` are different in Python 3.x.  They return an object called a :"
"dfn:`view` instead of a fully materialized list."
msgstr ""
"Словарные методы :meth:`~dict.keys`, :meth:`~dict.values` и :meth:`~dict."
"items` в Python 3.x отличаются. Они возвращают объект под названием :dfn:"
"`view` вместо полностью материализованного списка."

#: ../../whatsnew/2.7.rst:554
msgid ""
"It's not possible to change the return values of :meth:`~dict.keys`, :meth:"
"`~dict.values`, and :meth:`~dict.items` in Python 2.7 because too much code "
"would break.  Instead the 3.x versions were added under the new names :meth:"
"`~dict.viewkeys`, :meth:`~dict.viewvalues`, and :meth:`~dict.viewitems`."
msgstr ""

#: ../../whatsnew/2.7.rst:568
msgid ""
"Views can be iterated over, but the key and item views also behave like "
"sets.  The ``&`` operator performs intersection, and ``|`` performs a union::"
msgstr ""
"Представления можно перебирать, но представления ключей и элементов также "
"ведут себя как множества. Оператор ``&`` выполняет пересечение, а ``|`` "
"выполняет объединение::"

#: ../../whatsnew/2.7.rst:579
msgid ""
"The view keeps track of the dictionary and its contents change as the "
"dictionary is modified::"
msgstr ""
"Представление отслеживает словарь, и его содержимое изменяется по мере "
"изменения словаря::"

#: ../../whatsnew/2.7.rst:589
msgid ""
"However, note that you can't add or remove keys while you're iterating over "
"the view::"
msgstr ""
"Однако обратите внимание, что вы не можете добавлять или удалять ключи во "
"время итерации по представлению::"

#: ../../whatsnew/2.7.rst:599
msgid ""
"You can use the view methods in Python 2.x code, and the 2to3 converter will "
"change them to the standard :meth:`~dict.keys`, :meth:`~dict.values`, and :"
"meth:`~dict.items` methods."
msgstr ""
"Вы можете использовать методы представления в коде Python 2.x, а "
"преобразователь 2to3 изменит их на стандартные :meth:`~dict.keys`, :meth:"
"`~dict.values` и :meth:`~dict .items` методы."

#: ../../whatsnew/2.7.rst:606
msgid ":pep:`3106` - Revamping dict.keys(), .values() and .items()"
msgstr ":pep:`3106` - Обновление dict.keys(), .values() и .items()."

#: ../../whatsnew/2.7.rst:606
msgid ""
"PEP written by Guido van Rossum. Backported to 2.7 by Alexandre Vassalotti; :"
"issue:`1967`."
msgstr ""
"PEP, написанный Гвидо ван Россумом. Перенесено в версию 2.7 Александром "
"Вассалотти; :выпуск:`1967`."

#: ../../whatsnew/2.7.rst:611
msgid "PEP 3137: The memoryview Object"
msgstr "PEP 3137: объект MemoryView"

#: ../../whatsnew/2.7.rst:613
msgid ""
"The :class:`memoryview` object provides a view of another object's memory "
"content that matches the :class:`bytes` type's interface."
msgstr ""
"Объект :class:`memoryview` предоставляет представление содержимого памяти "
"другого объекта, которое соответствует интерфейсу типа :class:`bytes`."

#: ../../whatsnew/2.7.rst:631
msgid ""
"The content of the view can be converted to a string of bytes or a list of "
"integers:"
msgstr ""
"Содержимое представления можно преобразовать в строку байтов или список "
"целых чисел:"

#: ../../whatsnew/2.7.rst:643
msgid ""
":class:`memoryview` objects allow modifying the underlying object if it's a "
"mutable object."
msgstr ""
"Объекты :class:`memoryview` позволяют изменять базовый объект, если это "
"изменяемый объект."

#: ../../whatsnew/2.7.rst:666
msgid ":pep:`3137` - Immutable Bytes and Mutable Buffer"
msgstr ":pep:`3137` - Неизменяемые байты и изменяемый буфер"

#: ../../whatsnew/2.7.rst:665
msgid ""
"PEP written by Guido van Rossum. Implemented by Travis Oliphant, Antoine "
"Pitrou and others. Backported to 2.7 by Antoine Pitrou; :issue:`2396`."
msgstr ""
"PEP, написанный Гвидо ван Россумом. Реализовано Трэвисом Олифантом, Антуаном "
"Питру и другими. Перенесено в версию 2.7 Антуаном Питру; :issue:`2396`."

#: ../../whatsnew/2.7.rst:672
msgid "Other Language Changes"
msgstr "Другие языковые изменения"

#: ../../whatsnew/2.7.rst:674
msgid "Some smaller changes made to the core Python language are:"
msgstr "Некоторые небольшие изменения, внесенные в основной язык Python:"

#: ../../whatsnew/2.7.rst:676
msgid ""
"The syntax for set literals has been backported from Python 3.x. Curly "
"brackets are used to surround the contents of the resulting mutable set; set "
"literals are distinguished from dictionaries by not containing colons and "
"values. ``{}`` continues to represent an empty dictionary; use ``set()`` for "
"an empty set."
msgstr ""
"Синтаксис для литералов множества был перенесен из Python 3.x. Фигурные "
"скобки используются для заключения содержимого результирующего изменяемого "
"набора; литералы множества отличаются от словарей тем, что не содержат "
"двоеточий и значений. ``{}`` продолжает представлять пустой словарь; "
"используйте ``set()`` для пустого набора."

#: ../../whatsnew/2.7.rst:693
msgid "Backported by Alexandre Vassalotti; :issue:`2335`."
msgstr "Поддерживается Александром Вассалотти; :issue:`2335`."

#: ../../whatsnew/2.7.rst:695
msgid ""
"Dictionary and set comprehensions are another feature backported from 3.x, "
"generalizing list/generator comprehensions to use the literal syntax for "
"sets and dictionaries."
msgstr ""
"Понимание словарей и множеств — это еще одна функция, перенесенная из 3.x, "
"которая обобщает понимание списков/генераторов для использования буквального "
"синтаксиса для множеств и словарей."

#: ../../whatsnew/2.7.rst:707
msgid "Backported by Alexandre Vassalotti; :issue:`2333`."
msgstr "Поддерживается Александром Вассалотти; :issue:`2333`."

#: ../../whatsnew/2.7.rst:709
msgid ""
"The :keyword:`with` statement can now use multiple context managers in one "
"statement.  Context managers are processed from left to right and each one "
"is treated as beginning a new :keyword:`!with` statement. This means that::"
msgstr ""
"Оператор :keyword:`with` теперь может использовать несколько менеджеров "
"контекста в одном операторе. Менеджеры контекста обрабатываются слева "
"направо, и каждый из них рассматривается как начало нового оператора :"
"keyword:`!with`. Это означает, что::"

#: ../../whatsnew/2.7.rst:717
msgid "is equivalent to::"
msgstr "эквивалентно::"

#: ../../whatsnew/2.7.rst:723
msgid ""
"The :func:`contextlib.nested` function provides a very similar function, so "
"it's no longer necessary and has been deprecated."
msgstr ""

#: ../../whatsnew/2.7.rst:726
msgid ""
"(Proposed in https://codereview.appspot.com/53094; implemented by Georg "
"Brandl.)"
msgstr ""
"(Предложено в https://codereview.appspot.com/53094; реализовано Георгом "
"Брандлом.)"

#: ../../whatsnew/2.7.rst:729
msgid ""
"Conversions between floating-point numbers and strings are now correctly "
"rounded on most platforms.  These conversions occur in many different "
"places: :func:`str` on floats and complex numbers; the :class:`float` and :"
"class:`complex` constructors; numeric formatting; serializing and "
"deserializing floats and complex numbers using the :mod:`marshal`, :mod:"
"`pickle` and :mod:`json` modules; parsing of float and imaginary literals in "
"Python code; and :class:`~decimal.Decimal`-to-float conversion."
msgstr ""
"Преобразования между числами с плавающей запятой и строками теперь правильно "
"округляются на большинстве платформ. Эти преобразования происходят в разных "
"местах: :func:`str` для чисел с плавающей запятой и комплексных чисел; "
"конструкторы :class:`float` и :class:`complex`; числовое форматирование; "
"сериализация и десериализация чисел с плавающей запятой и комплексных чисел "
"с использованием модулей :mod:`marshal`, :mod:`pickle` и :mod:`json`; "
"синтаксический анализ float и мнимых литералов в коде Python; и "
"преобразование :class:`~decimal.Decimal` в числа с плавающей запятой."

#: ../../whatsnew/2.7.rst:741
msgid ""
"Related to this, the :func:`repr` of a floating-point number *x* now returns "
"a result based on the shortest decimal string that's guaranteed to round "
"back to *x* under correct rounding (with round-half-to-even rounding mode).  "
"Previously it gave a string based on rounding x to 17 decimal digits."
msgstr ""
"В связи с этим функция :func:`repr` числа с плавающей запятой *x* теперь "
"возвращает результат, основанный на самой короткой десятичной строке, "
"которая гарантированно округляется до *x* при правильном округлении (с "
"округлением от половины до даже режим округления). Ранее он давал строку, "
"основанную на округлении x до 17 десятичных цифр."

#: ../../whatsnew/2.7.rst:749
msgid ""
"The rounding library responsible for this improvement works on Windows and "
"on Unix platforms using the gcc, icc, or suncc compilers.  There may be a "
"small number of platforms where correct operation of this code cannot be "
"guaranteed, so the code is not used on such systems.  You can find out which "
"code is being used by checking :data:`sys.float_repr_style`,  which will be "
"``short`` if the new code is in use and ``legacy`` if it isn't."
msgstr ""
"Библиотека округления, ответственная за это улучшение, работает на "
"платформах Windows и Unix с использованием компиляторов gcc, icc или suncc. "
"Может существовать небольшое количество платформ, на которых правильная "
"работа этого кода не может быть гарантирована, поэтому код не используется в "
"таких системах. Вы можете узнать, какой код используется, проверив :data:"
"`sys.float_repr_style`, который будет ``short``, если используется новый "
"код, и ``устаревшим``, если нет."

#: ../../whatsnew/2.7.rst:757
msgid ""
"Implemented by Eric Smith and Mark Dickinson, using David Gay's :file:`dtoa."
"c` library; :issue:`7117`."
msgstr ""
"Реализовано Эриком Смитом и Марком Дикинсоном с использованием библиотеки :"
"file:`dtoa.c` Дэвида Гэя; :issue:`7117`."

#: ../../whatsnew/2.7.rst:760
msgid ""
"Conversions from long integers and regular integers to floating point now "
"round differently, returning the floating-point number closest to the "
"number.  This doesn't matter for small integers that can be converted "
"exactly, but for large numbers that will unavoidably lose precision, Python "
"2.7 now approximates more closely.  For example, Python 2.6 computed the "
"following::"
msgstr ""
"Преобразования длинных целых чисел и обычных целых чисел в числа с плавающей "
"запятой теперь округляются по-другому, возвращая число с плавающей запятой, "
"ближайшее к числу. Это не имеет значения для небольших целых чисел, которые "
"можно точно преобразовать, но для больших чисел, которые неизбежно потеряют "
"точность, Python 2.7 теперь приближается более точно. Например, Python 2.6 "
"вычислил следующее:"

#: ../../whatsnew/2.7.rst:773
msgid ""
"Python 2.7's floating-point result is larger, but much closer to the true "
"value::"
msgstr ""
"Результат с плавающей запятой в Python 2.7 больше, но гораздо ближе к "
"истинному значению:"

#: ../../whatsnew/2.7.rst:782
msgid "(Implemented by Mark Dickinson; :issue:`3166`.)"
msgstr "(Реализовано Марком Дикинсоном; :issue:`3166`.)"

#: ../../whatsnew/2.7.rst:784
msgid ""
"Integer division is also more accurate in its rounding behaviours.  (Also "
"implemented by Mark Dickinson; :issue:`1811`.)"
msgstr ""
"Целочисленное деление также более точно обеспечивает округление. (Также "
"реализовано Марком Дикинсоном; :issue:`1811`.)"

#: ../../whatsnew/2.7.rst:787
msgid ""
"Implicit coercion for complex numbers has been removed; the interpreter will "
"no longer ever attempt to call a :meth:`__coerce__` method on complex "
"objects.  (Removed by Meador Inge and Mark Dickinson; :issue:`5211`.)"
msgstr ""

#: ../../whatsnew/2.7.rst:791
msgid ""
"The :meth:`str.format` method now supports automatic numbering of the "
"replacement fields.  This makes using :meth:`str.format` more closely "
"resemble using ``%s`` formatting::"
msgstr ""
"Метод :meth:`str.format` теперь поддерживает автоматическую нумерацию полей "
"замены. Это делает использование :meth:`str.format` более похожим на "
"использование `` %s `` форматирование::"

#: ../../whatsnew/2.7.rst:800
msgid ""
"The auto-numbering takes the fields from left to right, so the first ``{...}"
"`` specifier will use the first argument to :meth:`str.format`, the next "
"specifier will use the next argument, and so on.  You can't mix auto-"
"numbering and explicit numbering -- either number all of your specifier "
"fields or none of them -- but you can mix auto-numbering and named fields, "
"as in the second example above.  (Contributed by Eric Smith; :issue:`5237`.)"
msgstr ""
"При автоматической нумерации поля располагаются слева направо, поэтому "
"первый спецификатор ``{...}`` будет использовать первый аргумент :meth:`str."
"format`, следующий спецификатор будет использовать следующий аргумент, а "
"скоро. Вы не можете совмещать автоматическую и явную нумерацию — либо "
"пронумеруйте все поля спецификатора, либо ни одно из них — но вы можете "
"смешивать автоматическую нумерацию и именованные поля, как во втором примере "
"выше. (Предоставлено Эриком Смитом; :issue:`5237`.)"

#: ../../whatsnew/2.7.rst:807
msgid ""
"Complex numbers now correctly support usage with :func:`format`, and default "
"to being right-aligned. Specifying a precision or comma-separation applies "
"to both the real and imaginary parts of the number, but a specified field "
"width and alignment is applied to the whole of the resulting ``1.5+3j`` "
"output.  (Contributed by Eric Smith; :issue:`1588` and :issue:`7988`.)"
msgstr ""
"Комплексные числа теперь корректно поддерживают использование с :func:"
"`format` и по умолчанию выравниваются по правому краю. Указание точности или "
"разделения запятыми применяется как к действительной, так и к мнимой части "
"числа, но указанная ширина поля и выравнивание применяются ко всему "
"результирующему выводу ``1.5+3j``. (Предоставлено Эриком Смитом; :issue:"
"`1588` и :issue:`7988`.)"

#: ../../whatsnew/2.7.rst:814
msgid ""
"The 'F' format code now always formats its output using uppercase "
"characters, so it will now produce 'INF' and 'NAN'. (Contributed by Eric "
"Smith; :issue:`3382`.)"
msgstr ""
"Код формата «F» теперь всегда форматирует вывод с использованием символов "
"верхнего регистра, поэтому теперь он будет выдавать «INF» и «NAN». "
"(Предоставлено Эриком Смитом; :issue:`3382`.)"

#: ../../whatsnew/2.7.rst:818
msgid ""
"A low-level change: the :meth:`object.__format__` method now triggers a :exc:"
"`PendingDeprecationWarning` if it's passed a format string, because the :"
"meth:`__format__` method for :class:`object` converts the object to a string "
"representation and formats that.  Previously the method silently applied the "
"format string to the string representation, but that could hide mistakes in "
"Python code.  If you're supplying formatting information such as an "
"alignment or precision, presumably you're expecting the formatting to be "
"applied in some object-specific way.  (Fixed by Eric Smith; :issue:`7994`.)"
msgstr ""

#: ../../whatsnew/2.7.rst:828
msgid ""
"The :func:`int` and :func:`long` types gained a ``bit_length`` method that "
"returns the number of bits necessary to represent its argument in binary::"
msgstr ""

#: ../../whatsnew/2.7.rst:843
msgid "(Contributed by Fredrik Johansson and Victor Stinner; :issue:`3439`.)"
msgstr ""
"(Предоставлено Фредриком Йоханссоном и Виктором Стиннером; :issue:`3439`.)"

#: ../../whatsnew/2.7.rst:845
msgid ""
"The :keyword:`import` statement will no longer try an absolute import if a "
"relative import (e.g. ``from .os import sep``) fails.  This fixes a bug, but "
"could possibly break certain :keyword:`!import` statements that were only "
"working by accident.  (Fixed by Meador Inge; :issue:`7902`.)"
msgstr ""
"Оператор :keyword:`import` больше не будет пытаться выполнить абсолютный "
"импорт, если относительный импорт (например, ``from .os import sep``) не "
"удался. Это исправляет ошибку, но может привести к поломке некоторых "
"операторов :keyword:`!import`, которые работали только случайно. (Исправлено "
"Мидором Инге; :issue:`7902`.)"

#: ../../whatsnew/2.7.rst:851
msgid ""
"It's now possible for a subclass of the built-in :class:`unicode` type to "
"override the :meth:`__unicode__` method.  (Implemented by Victor Stinner; :"
"issue:`1583863`.)"
msgstr ""

#: ../../whatsnew/2.7.rst:855
msgid ""
"The :class:`bytearray` type's :meth:`~bytearray.translate` method now "
"accepts ``None`` as its first argument.  (Fixed by Georg Brandl; :issue:"
"`4759`.)"
msgstr ""
"Метод :meth:`~bytearray.translate` типа :class:`bytearray` теперь принимает "
"``None`` в качестве первого аргумента. (Исправлено Георгом Брандлом; :issue:"
"`4759`.)"

#: ../../whatsnew/2.7.rst:861
msgid ""
"When using ``@classmethod`` and ``@staticmethod`` to wrap methods as class "
"or static methods, the wrapper object now exposes the wrapped function as "
"their :attr:`__func__` attribute. (Contributed by Amaury Forgeot d'Arc, "
"after a suggestion by George Sakkis; :issue:`5982`.)"
msgstr ""

#: ../../whatsnew/2.7.rst:867 ../../whatsnew/2.7.rst:2462
msgid ""
"When a restricted set of attributes were set using ``__slots__``, deleting "
"an unset attribute would not raise :exc:`AttributeError` as you would "
"expect.  Fixed by Benjamin Peterson; :issue:`7604`.)"
msgstr ""
"Когда с помощью ``__slots__`` был установлен ограниченный набор атрибутов, "
"удаление неустановленного атрибута не вызовет ошибку :exc:`AttributeError`, "
"как можно было бы ожидать. Исправлено Бенджамином Петерсоном; :issue:`7604`.)"

#: ../../whatsnew/2.7.rst:871
msgid ""
"Two new encodings are now supported: \"cp720\", used primarily for Arabic "
"text; and \"cp858\", a variant of CP 850 that adds the euro symbol.  (CP720 "
"contributed by Alexander Belchenko and Amaury Forgeot d'Arc in :issue:"
"`1616979`; CP858 contributed by Tim Hatch in :issue:`8016`.)"
msgstr ""
"Теперь поддерживаются две новые кодировки: «cp720», используемая в основном "
"для арабского текста; и «cp858», вариант CP 850, в который добавлен символ "
"евро. (CP720 предоставлен Александром Бельченко и Амори Форжо д'Арк в :issue:"
"`1616979`; CP858 предоставлен Тимом Хэтчем в :issue:`8016`.)"

#: ../../whatsnew/2.7.rst:877
msgid ""
"The :class:`file` object will now set the :attr:`filename` attribute on the :"
"exc:`IOError` exception when trying to open a directory on POSIX platforms "
"(noted by Jan Kaliszewski; :issue:`4764`), and now explicitly checks for and "
"forbids writing to read-only file objects instead of trusting the C library "
"to catch and report the error (fixed by Stefan Krah; :issue:`5677`)."
msgstr ""

#: ../../whatsnew/2.7.rst:884
msgid ""
"The Python tokenizer now translates line endings itself, so the :func:"
"`compile` built-in function now accepts code using any line-ending "
"convention.  Additionally, it no longer requires that the code end in a "
"newline."
msgstr ""
"Токенизатор Python теперь сам транслирует окончания строк, поэтому "
"встроенная функция :func:`compile` теперь принимает код, использующий любое "
"соглашение об окончании строк. Кроме того, больше не требуется, чтобы код "
"заканчивался новой строкой."

#: ../../whatsnew/2.7.rst:889
msgid ""
"Extra parentheses in function definitions are illegal in Python 3.x, meaning "
"that you get a syntax error from ``def f((x)): pass``.  In Python3-warning "
"mode, Python 2.7 will now warn about this odd usage. (Noted by James "
"Lingard; :issue:`7362`.)"
msgstr ""
"Дополнительные круглые скобки в определениях функций недопустимы в Python 3."
"x, а это означает, что вы получите синтаксическую ошибку из ``def f((x)): "
"pass``. В режиме предупреждения Python3 Python 2.7 теперь будет "
"предупреждать об этом странном использовании. (Примечание Джеймса Лингарда; :"
"issue:`7362`.)"

#: ../../whatsnew/2.7.rst:894
msgid ""
"It's now possible to create weak references to old-style class objects.  New-"
"style classes were always weak-referenceable.  (Fixed by Antoine Pitrou; :"
"issue:`8268`.)"
msgstr ""
"Теперь можно создавать слабые ссылки на объекты классов старого стиля. "
"Классы нового стиля всегда были слабыми. (Исправлено Антуаном Питру; :issue:"
"`8268`.)"

#: ../../whatsnew/2.7.rst:898
msgid ""
"When a module object is garbage-collected, the module's dictionary is now "
"only cleared if no one else is holding a reference to the dictionary (:issue:"
"`7140`)."
msgstr ""
"Когда объект модуля подвергается сборке мусора, словарь модуля теперь "
"очищается только в том случае, если никто больше не хранит ссылку на словарь "
"(:issue:`7140`)."

#: ../../whatsnew/2.7.rst:907
msgid "Interpreter Changes"
msgstr "Изменения интерпретатора"

#: ../../whatsnew/2.7.rst:909
msgid ""
"A new environment variable, :envvar:`PYTHONWARNINGS`, allows controlling "
"warnings.  It should be set to a string containing warning settings, "
"equivalent to those used with the :option:`-W` switch, separated by commas. "
"(Contributed by Brian Curtin; :issue:`7301`.)"
msgstr ""
"Новая переменная среды :envvar:`PYTHONWARNINGS` позволяет управлять "
"предупреждениями. Должна быть установлена ​​строка, содержащая настройки "
"предупреждений, эквивалентные тем, которые используются с переключателем :"
"option:`-W`, разделенные запятыми. (Предоставлено Брайаном Кертином; :issue:"
"`7301`.)"

#: ../../whatsnew/2.7.rst:915
msgid ""
"For example, the following setting will print warnings every time they "
"occur, but turn warnings from the :mod:`Cookie` module into an error.  (The "
"exact syntax for setting an environment variable varies across operating "
"systems and shells.)"
msgstr ""

#: ../../whatsnew/2.7.rst:928
msgid "Optimizations"
msgstr "Оптимизации"

#: ../../whatsnew/2.7.rst:930
msgid "Several performance enhancements have been added:"
msgstr "Добавлено несколько улучшений производительности:"

#: ../../whatsnew/2.7.rst:932
msgid ""
"A new opcode was added to perform the initial setup for :keyword:`with` "
"statements, looking up the :meth:`__enter__` and :meth:`__exit__` methods.  "
"(Contributed by Benjamin Peterson.)"
msgstr ""

#: ../../whatsnew/2.7.rst:936
msgid ""
"The garbage collector now performs better for one common usage pattern: when "
"many objects are being allocated without deallocating any of them.  This "
"would previously take quadratic time for garbage collection, but now the "
"number of full garbage collections is reduced as the number of objects on "
"the heap grows. The new logic only performs a full garbage collection pass "
"when the middle generation has been collected 10 times and when the number "
"of survivor objects from the middle generation exceeds 10% of the number of "
"objects in the oldest generation.  (Suggested by Martin von Löwis and "
"implemented by Antoine Pitrou; :issue:`4074`.)"
msgstr ""
"Сборщик мусора теперь работает лучше для одного распространенного шаблона "
"использования: когда выделяется много объектов без освобождения ни одного из "
"них. Раньше на сбор мусора требовалось квадратичное время, но теперь "
"количество полных сборок мусора уменьшается по мере роста количества "
"объектов в куче. Новая логика выполняет полный проход сборки мусора только в "
"том случае, если среднее поколение было собрано 10 раз и когда количество "
"выживших объектов среднего поколения превышает 10% от количества объектов в "
"самом старом поколении. (Предложено Мартином фон Лёвисом и реализовано "
"Антуаном Питру; :issue:`4074`.)"

#: ../../whatsnew/2.7.rst:947
msgid ""
"The garbage collector tries to avoid tracking simple containers which can't "
"be part of a cycle. In Python 2.7, this is now true for tuples and dicts "
"containing atomic types (such as ints, strings, etc.). Transitively, a dict "
"containing tuples of atomic types won't be tracked either. This helps reduce "
"the cost of each garbage collection by decreasing the number of objects to "
"be considered and traversed by the collector. (Contributed by Antoine "
"Pitrou; :issue:`4688`.)"
msgstr ""
"Сборщик мусора пытается избежать отслеживания простых контейнеров, которые "
"не могут быть частью цикла. В Python 2.7 это теперь справедливо для кортежей "
"и диктовок, содержащих атомарные типы (такие как целые числа, строки и т. "
"д.). Транзитивно, словарь, содержащий кортежи атомарных типов, также не "
"будет отслеживаться. Это помогает снизить стоимость каждой сборки мусора за "
"счет уменьшения количества объектов, которые необходимо учитывать и обходить "
"сборщику. (Предоставлено Антуаном Питру; :issue:`4688`.)"

#: ../../whatsnew/2.7.rst:956
msgid ""
"Long integers are now stored internally either in base ``2**15`` or in base "
"``2**30``, the base being determined at build time.  Previously, they were "
"always stored in base ``2**15``.  Using base ``2**30`` gives significant "
"performance improvements on 64-bit machines, but benchmark results on 32-bit "
"machines have been mixed.  Therefore, the default is to use base ``2**30`` "
"on 64-bit machines and base ``2**15`` on 32-bit machines; on Unix, there's a "
"new configure option :option:`!--enable-big-digits` that can be used to "
"override this default."
msgstr ""
"Длинные целые числа теперь хранятся внутри либо в базе ``2**15``, либо в "
"базе ``2**30``, причем база определяется во время сборки. Раньше они всегда "
"хранились в базе ``2**15``. Использование базы «2**30» дает значительный "
"прирост производительности на 64-битных машинах, но результаты тестов на 32-"
"битных машинах неоднозначны. Поэтому по умолчанию используется база «2**30» "
"на 64-битных машинах и база «2**15» на 32-битных машинах; в Unix появилась "
"новая опция конфигурации :option:`!--enable-big-digits`, которую можно "
"использовать для переопределения этого значения по умолчанию."

#: ../../whatsnew/2.7.rst:965
msgid ""
"Apart from the performance improvements this change should be invisible to "
"end users, with one exception: for testing and debugging purposes there's a "
"new structseq :data:`sys.long_info` that provides information about the "
"internal format, giving the number of bits per digit and the size in bytes "
"of the C type used to store each digit::"
msgstr ""

#: ../../whatsnew/2.7.rst:976
msgid "(Contributed by Mark Dickinson; :issue:`4258`.)"
msgstr "(Предоставлено Марком Дикинсоном; :issue:`4258`.)"

#: ../../whatsnew/2.7.rst:978
msgid ""
"Another set of changes made long objects a few bytes smaller: 2 bytes "
"smaller on 32-bit systems and 6 bytes on 64-bit. (Contributed by Mark "
"Dickinson; :issue:`5260`.)"
msgstr ""
"Другой набор изменений уменьшил длинные объекты на несколько байт: на 2 "
"байта меньше в 32-битных системах и на 6 байтов в 64-битных. (Предоставлено "
"Марком Дикинсоном; :issue:`5260`.)"

#: ../../whatsnew/2.7.rst:982
msgid ""
"The division algorithm for long integers has been made faster by tightening "
"the inner loop, doing shifts instead of multiplications, and fixing an "
"unnecessary extra iteration. Various benchmarks show speedups of between 50% "
"and 150% for long integer divisions and modulo operations. (Contributed by "
"Mark Dickinson; :issue:`5512`.) Bitwise operations are also significantly "
"faster (initial patch by Gregory Smith; :issue:`1087418`)."
msgstr ""
"Алгоритм деления длинных целых чисел стал быстрее за счет сокращения "
"внутреннего цикла, выполнения сдвигов вместо умножения и исправления "
"ненужной дополнительной итерации. Различные тесты показывают ускорение от "
"50% до 150% для деления длинных целых чисел и операций по модулю. "
"(Разработано Марком Дикинсоном; :issue:`5512`.) Побитовые операции также "
"выполняются значительно быстрее (первоначальный патч Грегори Смита; :issue:"
"`1087418`)."

#: ../../whatsnew/2.7.rst:991
msgid ""
"The implementation of ``%`` checks for the left-side operand being a Python "
"string and special-cases it; this results in a 1--3% performance increase "
"for applications that frequently use ``%`` with strings, such as templating "
"libraries. (Implemented by Collin Winter; :issue:`5176`.)"
msgstr ""
"Реализация ``%`` проверяет, является ли левый операнд строкой Python, и "
"обрабатывает его в особых случаях; это приводит к увеличению "
"производительности на 1–3 % для приложений, которые часто используют ``%`` "
"со строками, таких как библиотеки шаблонов. (Реализован Коллином Уинтером; :"
"issue:`5176`.)"

#: ../../whatsnew/2.7.rst:997
msgid ""
"List comprehensions with an ``if`` condition are compiled into faster "
"bytecode.  (Patch by Antoine Pitrou, back-ported to 2.7 by Jeffrey Yasskin; :"
"issue:`4715`.)"
msgstr ""
"Понимания списков с условием if компилируются в более быстрый байт-код. "
"(Патч Антуана Питру, перенесенный на версию 2.7 Джеффри Ясскиным; :issue:"
"`4715`.)"

#: ../../whatsnew/2.7.rst:1001
msgid ""
"Converting an integer or long integer to a decimal string was made faster by "
"special-casing base 10 instead of using a generalized conversion function "
"that supports arbitrary bases. (Patch by Gawain Bolton; :issue:`6713`.)"
msgstr ""
"Преобразование целого или длинного целого числа в десятичную строку стало "
"быстрее благодаря использованию специального основания 10 вместо "
"использования обобщенной функции преобразования, поддерживающей произвольные "
"основания. (Патч от Гавейна Болтона; :issue:`6713`.)"

#: ../../whatsnew/2.7.rst:1006
msgid ""
"The :meth:`split`, :meth:`replace`, :meth:`rindex`, :meth:`rpartition`, and :"
"meth:`rsplit` methods of string-like types (strings, Unicode strings, and :"
"class:`bytearray` objects) now use a fast reverse-search algorithm instead "
"of a character-by-character scan.  This is sometimes faster by a factor of "
"10.  (Added by Florent Xicluna; :issue:`7462` and :issue:`7622`.)"
msgstr ""

#: ../../whatsnew/2.7.rst:1013
msgid ""
"The :mod:`pickle` and :mod:`cPickle` modules now automatically intern the "
"strings used for attribute names, reducing memory usage of the objects "
"resulting from unpickling.  (Contributed by Jake McGuire; :issue:`5084`.)"
msgstr ""

#: ../../whatsnew/2.7.rst:1018
msgid ""
"The :mod:`cPickle` module now special-cases dictionaries, nearly halving the "
"time required to pickle them. (Contributed by Collin Winter; :issue:`5670`.)"
msgstr ""

#: ../../whatsnew/2.7.rst:1025
msgid "New and Improved Modules"
msgstr "Новые и улучшенные модули"

#: ../../whatsnew/2.7.rst:1027
msgid ""
"As in every release, Python's standard library received a number of "
"enhancements and bug fixes.  Here's a partial list of the most notable "
"changes, sorted alphabetically by module name. Consult the :file:`Misc/NEWS` "
"file in the source tree for a more complete list of changes, or look through "
"the Subversion logs for all the details."
msgstr ""
"Как и в каждом выпуске, стандартная библиотека Python получила ряд улучшений "
"и исправлений ошибок. Вот неполный список наиболее заметных изменений, "
"отсортированный в алфавитном порядке по названию модуля. Обратитесь к файлу :"
"file:`Misc/NEWS` в дереве исходного кода для получения более полного списка "
"изменений или просмотрите журналы Subversion для получения всех подробностей."

#: ../../whatsnew/2.7.rst:1033
msgid ""
"The :mod:`bdb` module's base debugging class :class:`~bdb.Bdb` gained a "
"feature for skipping modules.  The constructor now takes an iterable "
"containing glob-style patterns such as ``django.*``; the debugger will not "
"step into stack frames from a module that matches one of these patterns. "
"(Contributed by Maru Newby after a suggestion by Senthil Kumaran; :issue:"
"`5142`.)"
msgstr ""
"Базовый класс отладки модуля :mod:`bdb` :class:`~bdb.Bdb` получил "
"возможность пропуска модулей. Конструктор теперь принимает итерацию, "
"содержащую шаблоны в стиле glob, такие как ``django.*``; отладчик не будет "
"входить в кадры стека из модуля, который соответствует одному из этих "
"шаблонов. (Предоставлено Мару Ньюби по предложению Сентила Кумарана; :issue:"
"`5142`.)"

#: ../../whatsnew/2.7.rst:1041
msgid ""
"The :mod:`binascii` module now supports the buffer API, so it can be used "
"with :class:`memoryview` instances and other similar buffer objects. "
"(Backported from 3.x by Florent Xicluna; :issue:`7703`.)"
msgstr ""
"Модуль :mod:`binascii` теперь поддерживает API буфера, поэтому его можно "
"использовать с экземплярами :class:`memoryview` и другими подобными "
"буферными объектами. (Бэкпортировано из версии 3.x Флораном Ксиклюной; :"
"issue:`7703`.)"

#: ../../whatsnew/2.7.rst:1045
msgid ""
"Updated module: the :mod:`bsddb` module has been updated from 4.7.2devel9 to "
"version 4.8.4 of `the pybsddb package <https://www.jcea.es/programacion/"
"pybsddb.htm>`__. The new version features better Python 3.x compatibility, "
"various bug fixes, and adds several new BerkeleyDB flags and methods. "
"(Updated by Jesús Cea Avión; :issue:`8156`.  The pybsddb changelog can be "
"read at https://hg.jcea.es/pybsddb/file/tip/ChangeLog.)"
msgstr ""

#: ../../whatsnew/2.7.rst:1053
msgid ""
"The :mod:`bz2` module's :class:`~bz2.BZ2File` now supports the context "
"management protocol, so you can write ``with bz2.BZ2File(...) as f:``. "
"(Contributed by Hagen Fürstenau; :issue:`3860`.)"
msgstr ""
":class:`~bz2.BZ2File` модуля :mod:`bz2` теперь поддерживает протокол "
"управления контекстом, поэтому вы можете написать ``with bz2.BZ2File(...) "
"как f:``. (Предоставлено Хагеном Фюрстенау; :issue:`3860`.)"

#: ../../whatsnew/2.7.rst:1057
msgid ""
"New class: the :class:`~collections.Counter` class in the :mod:`collections` "
"module is useful for tallying data.  :class:`~collections.Counter` instances "
"behave mostly like dictionaries but return zero for missing keys instead of "
"raising a :exc:`KeyError`:"
msgstr ""
"Новый класс: класс :class:`~collections.Counter` в модуле :mod:`collections` "
"полезен для подсчета данных. Экземпляры :class:`~collections.Counter` ведут "
"себя в основном как словари, но возвращают ноль в случае отсутствующих "
"ключей вместо выдачи :exc:`KeyError`:"

#: ../../whatsnew/2.7.rst:1079
msgid ""
"There are three additional :class:`~collections.Counter` methods. :meth:"
"`~collections.Counter.most_common` returns the N most common elements and "
"their counts.  :meth:`~collections.Counter.elements` returns an iterator "
"over the contained elements, repeating each element as many times as its "
"count. :meth:`~collections.Counter.subtract` takes an iterable and subtracts "
"one for each element instead of adding; if the argument is a dictionary or "
"another :class:`Counter`, the counts are subtracted. ::"
msgstr ""
"Есть три дополнительных метода :class:`~collections.Counter`. :meth:"
"`~collections.Counter.most_common` возвращает N наиболее распространенных "
"элементов и их количество. :meth:`~collections.Counter.elements` возвращает "
"итератор по содержащимся элементам, повторяя каждый элемент столько раз, "
"сколько его счетчик. :meth:`~collections.Counter.subtract` принимает "
"итерируемое значение и вычитает его для каждого элемента вместо сложения; "
"если аргументом является словарь или другой :class:`Counter`, счетчики "
"вычитаются. ::"

#: ../../whatsnew/2.7.rst:1102
msgid "Contributed by Raymond Hettinger; :issue:`1696199`."
msgstr "Предоставлено Раймондом Хеттингером; :issue:`1696199`."

#: ../../whatsnew/2.7.rst:1106
msgid ""
"New class: :class:`~collections.OrderedDict` is described in the earlier "
"section :ref:`pep-0372`."
msgstr ""
"Новый класс: :class:`~collections.OrderedDict` описан в предыдущем разделе :"
"ref:`pep-0372`."

#: ../../whatsnew/2.7.rst:1109
msgid ""
"New method: The :class:`~collections.deque` data type now has a :meth:"
"`~collections.deque.count` method that returns the number of contained "
"elements equal to the supplied argument *x*, and a :meth:`~collections.deque."
"reverse` method that reverses the elements of the deque in-place.  :class:"
"`~collections.deque` also exposes its maximum length as the read-only :attr:"
"`~collections.deque.maxlen` attribute. (Both features added by Raymond "
"Hettinger.)"
msgstr ""
"Новый метод: тип данных :class:`~collections.deque` теперь имеет метод :meth:"
"`~collections.deque.count`, который возвращает количество содержащихся "
"элементов, равное предоставленному аргументу *x*, и метод :meth. :"
"`~collections.deque.reverse` метод, который меняет местами элементы дека. :"
"class:`~collections.deque` также предоставляет свою максимальную длину как "
"атрибут :attr:`~collections.deque.maxlen`, доступный только для чтения. (Обе "
"функции добавлены Раймондом Хеттингером.)"

#: ../../whatsnew/2.7.rst:1117
msgid ""
"The :class:`~collections.namedtuple` class now has an optional *rename* "
"parameter. If *rename* is true, field names that are invalid because they've "
"been repeated or aren't legal Python identifiers will be renamed to legal "
"names that are derived from the field's position within the list of fields:"
msgstr ""
"Класс :class:`~collections.namedtuple` теперь имеет необязательный параметр "
"*rename*. Если *rename* имеет значение true, имена полей, которые являются "
"недопустимыми, поскольку они повторяются или не являются допустимыми "
"идентификаторами Python, будут переименованы в допустимые имена, полученные "
"из позиции поля в списке полей:"

#: ../../whatsnew/2.7.rst:1128
msgid "(Added by Raymond Hettinger; :issue:`1818`.)"
msgstr "(Добавлено Рэймондом Хеттингером; :issue:`1818`.)"

#: ../../whatsnew/2.7.rst:1130
msgid ""
"Finally, the :class:`~collections.Mapping` abstract base class now returns :"
"const:`NotImplemented` if a mapping is compared to another type that isn't "
"a :class:`Mapping`. (Fixed by Daniel Stutzbach; :issue:`8729`.)"
msgstr ""

#: ../../whatsnew/2.7.rst:1135
msgid ""
"Constructors for the parsing classes in the :mod:`ConfigParser` module now "
"take an *allow_no_value* parameter, defaulting to false; if true, options "
"without values will be allowed.  For example::"
msgstr ""

#: ../../whatsnew/2.7.rst:1157
msgid "(Contributed by Mats Kindahl; :issue:`7005`.)"
msgstr "(Предоставлено Матсом Киндалем; :issue:`7005`.)"

#: ../../whatsnew/2.7.rst:1159
msgid ""
"Deprecated function: :func:`contextlib.nested`, which allows handling more "
"than one context manager with a single :keyword:`with` statement, has been "
"deprecated, because the :keyword:`!with` statement now supports multiple "
"context managers."
msgstr ""

#: ../../whatsnew/2.7.rst:1164
msgid ""
"The :mod:`cookielib` module now ignores cookies that have an invalid version "
"field, one that doesn't contain an integer value.  (Fixed by John J. Lee; :"
"issue:`3924`.)"
msgstr ""

#: ../../whatsnew/2.7.rst:1168
msgid ""
"The :mod:`copy` module's :func:`~copy.deepcopy` function will now correctly "
"copy bound instance methods.  (Implemented by Robert Collins; :issue:`1515`.)"
msgstr ""
"Функция :func:`~copy.deepcopy` модуля :mod:`copy` теперь правильно копирует "
"связанные методы экземпляра. (Реализовано Робертом Коллинзом; :issue:`1515`.)"

#: ../../whatsnew/2.7.rst:1172
msgid ""
"The :mod:`ctypes` module now always converts ``None`` to a C ``NULL`` "
"pointer for arguments declared as pointers.  (Changed by Thomas Heller; :"
"issue:`4606`.)  The underlying `libffi library <https://sourceware.org/"
"libffi/>`__ has been updated to version 3.0.9, containing various fixes for "
"different platforms.  (Updated by Matthias Klose; :issue:`8142`.)"
msgstr ""
"Модуль :mod:`ctypes` теперь всегда преобразует ``None`` в указатель C "
"``NULL`` для аргументов, объявленных как указатели. (Изменено Томасом "
"Хеллером; :issue:`4606`.) Базовая `libffi библиотека <https://sourceware.org/"
"libffi/>`__ была обновлена ​​до версии 3.0.9, содержащей различные исправления "
"для разных платформ. (Обновлено Маттиасом Клозе; :issue:`8142`.)"

#: ../../whatsnew/2.7.rst:1179
msgid ""
"New method: the :mod:`datetime` module's :class:`~datetime.timedelta` class "
"gained a :meth:`~datetime.timedelta.total_seconds` method that returns the "
"number of seconds in the duration.  (Contributed by Brian Quinlan; :issue:"
"`5788`.)"
msgstr ""
"Новый метод: класс :class:`~datetime.timedelta` модуля :mod:`datetime` "
"получил метод :meth:`~datetime.timedelta.total_секунды`, который возвращает "
"количество секунд в продолжительности. (Предоставлено Брайаном Куинланом; :"
"issue:`5788`.)"

#: ../../whatsnew/2.7.rst:1183
msgid ""
"New method: the :class:`~decimal.Decimal` class gained a :meth:`~decimal."
"Decimal.from_float` class method that performs an exact conversion of a "
"floating-point number to a :class:`~decimal.Decimal`. This exact conversion "
"strives for the closest decimal approximation to the floating-point "
"representation's value; the resulting decimal value will therefore still "
"include the inaccuracy, if any. For example, ``Decimal.from_float(0.1)`` "
"returns "
"``Decimal('0.1000000000000000055511151231257827021181583404541015625')``. "
"(Implemented by Raymond Hettinger; :issue:`4796`.)"
msgstr ""

#: ../../whatsnew/2.7.rst:1194
msgid ""
"Comparing instances of :class:`~decimal.Decimal` with floating-point numbers "
"now produces sensible results based on the numeric values of the operands.  "
"Previously such comparisons would fall back to Python's default rules for "
"comparing objects, which produced arbitrary results based on their type.  "
"Note that you still cannot combine :class:`Decimal` and floating-point in "
"other operations such as addition, since you should be explicitly choosing "
"how to convert between float and :class:`~decimal.Decimal`.  (Fixed by Mark "
"Dickinson; :issue:`2531`.)"
msgstr ""

#: ../../whatsnew/2.7.rst:1203
msgid ""
"The constructor for :class:`~decimal.Decimal` now accepts floating-point "
"numbers (added by Raymond Hettinger; :issue:`8257`) and non-European Unicode "
"characters such as Arabic-Indic digits (contributed by Mark Dickinson; :"
"issue:`6595`)."
msgstr ""
"Конструктор :class:`~decimal.Decimal` теперь принимает числа с плавающей "
"запятой (добавленные Рэймондом Хеттингером; :issue:`8257`) и неевропейские "
"символы Юникода, такие как арабско-индийские цифры (предоставлены Марком "
"Дикинсоном; : выпуск:`6595`)."

#: ../../whatsnew/2.7.rst:1208
msgid ""
"Most of the methods of the :class:`~decimal.Context` class now accept "
"integers as well as :class:`~decimal.Decimal` instances; the only exceptions "
"are the :meth:`~decimal.Context.canonical` and :meth:`~decimal.Context."
"is_canonical` methods.  (Patch by Juan José Conti; :issue:`7633`.)"
msgstr ""
"Большинство методов класса :class:`~decimal.Context` теперь принимают целые "
"числа, а также экземпляры :class:`~decimal.Decimal`; единственными "
"исключениями являются методы :meth:`~decimal.Context.canonical` и :meth:"
"`~decimal.Context.is_canonical`. (Патч Хуана Хосе Конти; :issue:`7633`.)"

#: ../../whatsnew/2.7.rst:1213
msgid ""
"When using :class:`~decimal.Decimal` instances with a string's :meth:`~str."
"format` method, the default alignment was previously left-alignment.  This "
"has been changed to right-alignment, which is more sensible for numeric "
"types.  (Changed by Mark Dickinson; :issue:`6857`.)"
msgstr ""
"При использовании экземпляров :class:`~decimal.Decimal` с методом строки :"
"meth:`~str.format` выравнивание по умолчанию ранее было выравниванием по "
"левому краю. Это было изменено на выравнивание по правому краю, что более "
"разумно для числовых типов. (Изменено Марком Дикинсоном; :issue:`6857`.)"

#: ../../whatsnew/2.7.rst:1218
msgid ""
"Comparisons involving a signaling NaN value (or ``sNAN``) now signal :const:"
"`InvalidOperation` instead of silently returning a true or false value "
"depending on the comparison operator.  Quiet NaN values (or ``NaN``) are now "
"hashable.  (Fixed by Mark Dickinson; :issue:`7279`.)"
msgstr ""

#: ../../whatsnew/2.7.rst:1224
msgid ""
"The :mod:`difflib` module now produces output that is more compatible with "
"modern :command:`diff`/:command:`patch` tools through one small change, "
"using a tab character instead of spaces as a separator in the header giving "
"the filename.  (Fixed by Anatoly Techtonik; :issue:`7585`.)"
msgstr ""
"Модуль :mod:`difflib` теперь выдаёт выходные данные, более совместимые с "
"современными инструментами :command:`diff`/:command:`patch`, за счёт одного "
"небольшого изменения: в качестве разделителя в заголовке используется символ "
"табуляции вместо пробелов. имя файла. (Исправлено Анатолием Техтоником; :"
"issue:`7585`.)"

#: ../../whatsnew/2.7.rst:1230
msgid ""
"The Distutils ``sdist`` command now always regenerates the :file:`MANIFEST` "
"file, since even if the :file:`MANIFEST.in` or :file:`setup.py` files "
"haven't been modified, the user might have created some new files that "
"should be included. (Fixed by Tarek Ziadé; :issue:`8688`.)"
msgstr ""
"Команда Distutils ``sdist`` теперь всегда заново создает файл :file:"
"`MANIFEST`, поскольку даже если файлы :file:`MANIFEST.in` или :file:`setup."
"py` не были изменены, пользователь возможно, были созданы новые файлы, "
"которые следует включить. (Исправлено Тареком Зиаде; :issue:`8688`.)"

#: ../../whatsnew/2.7.rst:1236
msgid ""
"The :mod:`doctest` module's :const:`IGNORE_EXCEPTION_DETAIL` flag will now "
"ignore the name of the module containing the exception being tested.  (Patch "
"by Lennart Regebro; :issue:`7490`.)"
msgstr ""

#: ../../whatsnew/2.7.rst:1240
msgid ""
"The :mod:`email` module's :class:`~email.message.Message` class will now "
"accept a Unicode-valued payload, automatically converting the payload to the "
"encoding specified by :attr:`output_charset`. (Added by R. David Murray; :"
"issue:`1368247`.)"
msgstr ""

#: ../../whatsnew/2.7.rst:1245
msgid ""
"The :class:`~fractions.Fraction` class now accepts a single float or :class:"
"`~decimal.Decimal` instance, or two rational numbers, as arguments to its "
"constructor.  (Implemented by Mark Dickinson; rationals added in :issue:"
"`5812`, and float/decimal in :issue:`8294`.)"
msgstr ""
"Класс :class:`~fractions.Fraction` теперь принимает один экземпляр :class:"
"`~decimal.Decimal` или два рациональных числа в качестве аргументов своего "
"конструктора. (Реализовано Марком Дикинсоном; рациональные числа добавлены "
"в :issue:`5812`, а числа с плавающей запятой/десятичным числом в :issue:"
"`8294`.)"

#: ../../whatsnew/2.7.rst:1251
msgid ""
"Ordering comparisons (``<``, ``<=``, ``>``, ``>=``) between fractions and "
"complex numbers now raise a :exc:`TypeError`. This fixes an oversight, "
"making the :class:`~fractions.Fraction` match the other numeric types."
msgstr ""
"Сравнения по порядку (``<``, ``<=``, ``>``, ``>=``) между дробями и "
"комплексными числами теперь вызывают ошибку :exc:`TypeError`. Это исправляет "
"оплошность, благодаря чему :class:`~fractions.Fraction` соответствует другим "
"числовым типам."

#: ../../whatsnew/2.7.rst:1258
msgid ""
"New class: :class:`~ftplib.FTP_TLS` in the :mod:`ftplib` module provides "
"secure FTP connections using TLS encapsulation of authentication as well as "
"subsequent control and data transfers. (Contributed by Giampaolo Rodola; :"
"issue:`2054`.)"
msgstr ""
"Новый класс: :class:`~ftplib.FTP_TLS` в модуле :mod:`ftplib` обеспечивает "
"безопасные FTP-соединения с использованием TLS-инкапсуляции аутентификации, "
"а также последующего управления и передачи данных. (Предоставлено Джампаоло "
"Родолой; :issue:`2054`.)"

#: ../../whatsnew/2.7.rst:1264
msgid ""
"The :meth:`~ftplib.FTP.storbinary` method for binary uploads can now restart "
"uploads thanks to an added *rest* parameter (patch by Pablo Mouzo; :issue:"
"`6845`.)"
msgstr ""
"Метод :meth:`~ftplib.FTP.storbinary` для двоичной загрузки теперь может "
"перезапускать загрузку благодаря добавленному параметру *rest* (исправление "
"Пабло Моузо; :issue:`6845`.)"

#: ../../whatsnew/2.7.rst:1268
msgid ""
"New class decorator: :func:`~functools.total_ordering` in the :mod:"
"`functools` module takes a class that defines an :meth:`__eq__` method and "
"one of :meth:`__lt__`, :meth:`__le__`, :meth:`__gt__`, or :meth:`__ge__`, "
"and generates the missing comparison methods.  Since the :meth:`__cmp__` "
"method is being deprecated in Python 3.x, this decorator makes it easier to "
"define ordered classes. (Added by Raymond Hettinger; :issue:`5479`.)"
msgstr ""

#: ../../whatsnew/2.7.rst:1276
msgid ""
"New function: :func:`~functools.cmp_to_key` will take an old-style "
"comparison function that expects two arguments and return a new callable "
"that can be used as the *key* parameter to functions such as :func:"
"`sorted`, :func:`min` and :func:`max`, etc.  The primary intended use is to "
"help with making code compatible with Python 3.x. (Added by Raymond "
"Hettinger.)"
msgstr ""
"Новая функция: :func:`~functools.cmp_to_key` примет функцию сравнения "
"старого стиля, которая ожидает два аргумента, и вернет новый вызываемый "
"объект, который можно использовать в качестве параметра *key* для таких "
"функций, как :func:`sorted`, :func:`min` и :func:`max` и т. д. Основное "
"назначение — помочь сделать код совместимым с Python 3.x. (Добавлено "
"Рэймондом Хеттингером.)"

#: ../../whatsnew/2.7.rst:1283
msgid ""
"New function: the :mod:`gc` module's :func:`~gc.is_tracked` returns true if "
"a given instance is tracked by the garbage collector, false otherwise. "
"(Contributed by Antoine Pitrou; :issue:`4688`.)"
msgstr ""
"Новая функция: :func:`~gc.is_tracked` модуля :mod:`gc` возвращает true, если "
"данный экземпляр отслеживается сборщиком мусора, и false в противном случае. "
"(Предоставлено Антуаном Питру; :issue:`4688`.)"

#: ../../whatsnew/2.7.rst:1287
msgid ""
"The :mod:`gzip` module's :class:`~gzip.GzipFile` now supports the context "
"management protocol, so you can write ``with gzip.GzipFile(...) as f:`` "
"(contributed by Hagen Fürstenau; :issue:`3860`), and it now implements the :"
"class:`io.BufferedIOBase` ABC, so you can wrap it with :class:`io."
"BufferedReader` for faster processing (contributed by Nir Aides; :issue:"
"`7471`). It's also now possible to override the modification time recorded "
"in a gzipped file by providing an optional timestamp to the constructor.  "
"(Contributed by Jacques Frechet; :issue:`4272`.)"
msgstr ""
"Модуль :mod:`gzip` :class:`~gzip.GzipFile` теперь поддерживает протокол "
"управления контекстом, поэтому вы можете писать ``с gzip.GzipFile(...) как f:"
"`` (предоставлен Хагеном Фюрстенау; :issue:`3860`), и теперь он реализует :"
"class:`io.BufferedIOBase` ABC, так что вы можете обернуть его :class:`io."
"BufferedReader` для более быстрой обработки (предоставлен Ниром Эйдесом; :"
"issue:` 7471`). Также теперь можно переопределить время модификации, "
"записанное в сжатом файле, предоставив конструктору дополнительную метку "
"времени. (Предоставлено Жаком Фреше; :issue:`4272`.)"

#: ../../whatsnew/2.7.rst:1297
msgid ""
"Files in gzip format can be padded with trailing zero bytes; the :mod:`gzip` "
"module will now consume these trailing bytes.  (Fixed by Tadek Pietraszek "
"and Brian Curtin; :issue:`2846`.)"
msgstr ""
"Файлы в формате gzip могут быть дополнены конечными нулевыми байтами; "
"модуль :mod:`gzip` теперь будет использовать эти конечные байты. (Исправлено "
"Тадеком Петрашеком и Брайаном Кертином; :issue:`2846`.)"

#: ../../whatsnew/2.7.rst:1301
msgid ""
"New attribute: the :mod:`hashlib` module now has an :attr:`~hashlib.hashlib."
"algorithms` attribute containing a tuple naming the supported algorithms. In "
"Python 2.7, ``hashlib.algorithms`` contains ``('md5', 'sha1', 'sha224', "
"'sha256', 'sha384', 'sha512')``. (Contributed by Carl Chenet; :issue:`7418`.)"
msgstr ""

#: ../../whatsnew/2.7.rst:1307
msgid ""
"The default :class:`~httplib.HTTPResponse` class used by the :mod:`httplib` "
"module now supports buffering, resulting in much faster reading of HTTP "
"responses. (Contributed by Kristján Valur Jónsson; :issue:`4879`.)"
msgstr ""

#: ../../whatsnew/2.7.rst:1311
msgid ""
"The :class:`~httplib.HTTPConnection` and :class:`~httplib.HTTPSConnection` "
"classes now support a *source_address* parameter, a ``(host, port)`` 2-tuple "
"giving the source address that will be used for the connection. (Contributed "
"by Eldon Ziegler; :issue:`3972`.)"
msgstr ""

#: ../../whatsnew/2.7.rst:1316
msgid ""
"The :mod:`ihooks` module now supports relative imports.  Note that :mod:"
"`ihooks` is an older module for customizing imports, superseded by the :mod:"
"`imputil` module added in Python 2.0. (Relative import support added by Neil "
"Schemenauer.)"
msgstr ""

#: ../../whatsnew/2.7.rst:1323
msgid ""
"The :mod:`imaplib` module now supports IPv6 addresses. (Contributed by Derek "
"Morr; :issue:`1655`.)"
msgstr ""
"Модуль :mod:`imaplib` теперь поддерживает адреса IPv6. (Предоставлено "
"Дереком Морром; :issue:`1655`.)"

#: ../../whatsnew/2.7.rst:1326
msgid ""
"New function: the :mod:`inspect` module's :func:`~inspect.getcallargs` takes "
"a callable and its positional and keyword arguments, and figures out which "
"of the callable's parameters will receive each argument, returning a "
"dictionary mapping argument names to their values.  For example::"
msgstr ""
"Новая функция: модуль :mod:`inspect` :func:`~inspect.getcallargs` принимает "
"вызываемый объект, его позиционные и ключевые аргументы и определяет, какой "
"из параметров вызываемого объекта получит каждый аргумент, возвращая имена "
"аргументов сопоставления словаря. их ценности. Например::"

#: ../../whatsnew/2.7.rst:1343
msgid "Contributed by George Sakkis; :issue:`3135`."
msgstr "Предоставлено Джорджем Саккисом; :issue:`3135`."

#: ../../whatsnew/2.7.rst:1345
msgid ""
"Updated module: The :mod:`io` library has been upgraded to the version "
"shipped with Python 3.1.  For 3.1, the I/O library was entirely rewritten in "
"C and is 2 to 20 times faster depending on the task being performed.  The "
"original Python version was renamed to the :mod:`_pyio` module."
msgstr ""

#: ../../whatsnew/2.7.rst:1350
msgid ""
"One minor resulting change: the :class:`io.TextIOBase` class now has an :"
"attr:`errors` attribute giving the error setting used for encoding and "
"decoding errors (one of ``'strict'``, ``'replace'``, ``'ignore'``)."
msgstr ""

#: ../../whatsnew/2.7.rst:1355
msgid ""
"The :class:`io.FileIO` class now raises an :exc:`OSError` when passed an "
"invalid file descriptor.  (Implemented by Benjamin Peterson; :issue:"
"`4991`.)  The :meth:`~io.IOBase.truncate` method now preserves the file "
"position; previously it would change the file position to the end of the new "
"file.  (Fixed by Pascal Chambon; :issue:`6939`.)"
msgstr ""
"Класс :class:`io.FileIO` теперь вызывает ошибку :exc:`OSError` при передаче "
"недопустимого дескриптора файла. (Реализовано Бенджамином Петерсоном; :issue:"
"`4991`.) Метод :meth:`~io.IOBase.truncate` теперь сохраняет позицию файла; "
"ранее он менял позицию файла на конец нового файла. (Исправлено Паскалем "
"Шамбоном; :issue:`6939`.)"

#: ../../whatsnew/2.7.rst:1361
msgid ""
"New function: ``itertools.compress(data, selectors)`` takes two iterators.  "
"Elements of *data* are returned if the corresponding value in *selectors* is "
"true::"
msgstr ""
"Новая функция: ``itertools.compress(data, selectors)`` принимает два "
"итератора. Элементы *data* возвращаются, если соответствующее значение в "
"*selectors* истинно::"

#: ../../whatsnew/2.7.rst:1370
msgid ""
"New function: ``itertools.combinations_with_replacement(iter, r)`` returns "
"all the possible *r*-length combinations of elements from the iterable "
"*iter*.  Unlike :func:`~itertools.combinations`, individual elements can be "
"repeated in the generated combinations::"
msgstr ""
"Новая функция: ``itertools.combinations_with_replacement(iter, r)`` "
"возвращает все возможные комбинации элементов длины *r* из итерируемого "
"*iter*. В отличие от :func:`~itertools.combinations`, отдельные элементы "
"могут повторяться в сгенерированных комбинациях::"

#: ../../whatsnew/2.7.rst:1379
msgid ""
"Note that elements are treated as unique depending on their position in the "
"input, not their actual values."
msgstr ""
"Обратите внимание, что элементы считаются уникальными в зависимости от их "
"положения во входных данных, а не от их фактических значений."

#: ../../whatsnew/2.7.rst:1382
msgid ""
"The :func:`itertools.count` function now has a *step* argument that allows "
"incrementing by values other than 1.  :func:`~itertools.count` also now "
"allows keyword arguments, and using non-integer values such as floats or :"
"class:`~decimal.Decimal` instances.  (Implemented by Raymond Hettinger; :"
"issue:`5032`.)"
msgstr ""
"Функция :func:`itertools.count` теперь имеет аргумент *step*, который "
"позволяет увеличивать значения, отличные от 1. :func:`~itertools.count` "
"также теперь допускает аргументы с ключевыми словами и использование "
"нецелочисленных значений, таких как числа с плавающей запятой. или "
"экземпляры :class:`~decimal.Decimal`. (Реализовано Рэймондом Хеттингером; :"
"issue:`5032`.)"

#: ../../whatsnew/2.7.rst:1388
msgid ""
":func:`itertools.combinations` and :func:`itertools.product` previously "
"raised :exc:`ValueError` for values of *r* larger than the input iterable.  "
"This was deemed a specification error, so they now return an empty "
"iterator.  (Fixed by Raymond Hettinger; :issue:`4816`.)"
msgstr ""
":func:`itertools.combinations` и :func:`itertools.product` ранее вызывали :"
"exc:`ValueError` для значений *r*, больших, чем входная итерация. Это было "
"сочтено ошибкой спецификации, поэтому теперь они возвращают пустой итератор. "
"(Исправлено Рэймондом Хеттингером; :issue:`4816`.)"

#: ../../whatsnew/2.7.rst:1393
msgid ""
"Updated module: The :mod:`json` module was upgraded to version 2.0.9 of the "
"simplejson package, which includes a C extension that makes encoding and "
"decoding faster. (Contributed by Bob Ippolito; :issue:`4136`.)"
msgstr ""
"Обновленный модуль: Модуль :mod:`json` был обновлен до версии 2.0.9 пакета "
"simplejson, который включает расширение C, ускоряющее кодирование и "
"декодирование. (Предоставлено Бобом Ипполито; :issue:`4136`.)"

#: ../../whatsnew/2.7.rst:1398
msgid ""
"To support the new :class:`collections.OrderedDict` type, :func:`json.load` "
"now has an optional *object_pairs_hook* parameter that will be called with "
"any object literal that decodes to a list of pairs. (Contributed by Raymond "
"Hettinger; :issue:`5381`.)"
msgstr ""
"Для поддержки нового типа :class:`collections.OrderedDict` :func:`json.load` "
"теперь имеет необязательный параметр *object_pairs_hook*, который будет "
"вызываться с любым литералом объекта, который декодирует в список пар. "
"(Предоставлено Рэймондом Хеттингером; :issue:`5381`.)"

#: ../../whatsnew/2.7.rst:1403
msgid ""
"The :mod:`mailbox` module's :class:`~mailbox.Maildir` class now records the "
"timestamp on the directories it reads, and only re-reads them if the "
"modification time has subsequently changed.  This improves performance by "
"avoiding unneeded directory scans.  (Fixed by A.M. Kuchling and Antoine "
"Pitrou; :issue:`1607951`, :issue:`6896`.)"
msgstr ""
"Класс :class:`~mailbox.Maildir` модуля :mod:`mailbox` теперь записывает "
"метку времени в читаемых каталогах и перечитывает их только в том случае, "
"если время модификации впоследствии изменилось. Это повышает "
"производительность за счет предотвращения ненужного сканирования каталогов. "
"(Исправлено AM Kuchling и Antoine Pitrou; :issue:`1607951`, :issue:`6896`.)"

#: ../../whatsnew/2.7.rst:1409
msgid ""
"New functions: the :mod:`math` module gained :func:`~math.erf` and :func:"
"`~math.erfc` for the error function and the complementary error function, :"
"func:`~math.expm1` which computes ``e**x - 1`` with more precision than "
"using :func:`~math.exp` and subtracting 1, :func:`~math.gamma` for the Gamma "
"function, and :func:`~math.lgamma` for the natural log of the Gamma "
"function. (Contributed by Mark Dickinson and nirinA raseliarison; :issue:"
"`3366`.)"
msgstr ""
"Новые функции: модуль :mod:`math` получил :func:`~math.erf` и :func:`~math."
"erfc` для функции ошибки и дополнительной функции ошибки :func:`~math.expm1` "
"который вычисляет ``e**x - 1`` с большей точностью, чем использование :func:"
"`~math.exp` и вычитание 1, :func:`~math.gamma` для функции Gamma и :func:`~ "
"math.lgamma` для натурального логарифма гамма-функции. (Предоставлено Марком "
"Дикинсоном и nirinA raseliarison; :issue:`3366`.)"

#: ../../whatsnew/2.7.rst:1417
msgid ""
"The :mod:`multiprocessing` module's :class:`Manager*` classes can now be "
"passed a callable that will be called whenever a subprocess is started, "
"along with a set of arguments that will be passed to the callable. "
"(Contributed by lekma; :issue:`5585`.)"
msgstr ""

#: ../../whatsnew/2.7.rst:1423
msgid ""
"The :class:`~multiprocessing.Pool` class, which controls a pool of worker "
"processes, now has an optional *maxtasksperchild* parameter.  Worker "
"processes will perform the specified number of tasks and then exit, causing "
"the :class:`~multiprocessing.Pool` to start a new worker.  This is useful if "
"tasks may leak memory or other resources, or if some tasks will cause the "
"worker to become very large. (Contributed by Charles Cazabon; :issue:`6963`.)"
msgstr ""

#: ../../whatsnew/2.7.rst:1431
msgid ""
"The :mod:`nntplib` module now supports IPv6 addresses. (Contributed by Derek "
"Morr; :issue:`1664`.)"
msgstr ""
"Модуль :mod:`nntplib` теперь поддерживает адреса IPv6. (Предоставлено "
"Дереком Морром; :issue:`1664`.)"

#: ../../whatsnew/2.7.rst:1434
msgid ""
"New functions: the :mod:`os` module wraps the following POSIX system calls: :"
"func:`~os.getresgid` and :func:`~os.getresuid`, which return the real, "
"effective, and saved GIDs and UIDs; :func:`~os.setresgid` and :func:`~os."
"setresuid`, which set real, effective, and saved GIDs and UIDs to new "
"values; :func:`~os.initgroups`, which initialize the group access list for "
"the current process.  (GID/UID functions contributed by Travis H.; :issue:"
"`6508`.  Support for initgroups added by Jean-Paul Calderone; :issue:`7333`.)"
msgstr ""
"Новые функции: модуль :mod:`os` содержит следующие системные вызовы POSIX: :"
"func:`~os.getresgid` и :func:`~os.getresuid`, которые возвращают реальные, "
"действующие и сохраненные GID и UID. ; :func:`~os.setresgid` и :func:`~os."
"setresuid`, которые устанавливают новые значения реальных, эффективных и "
"сохраненных GID и UID; :func:`~os.initgroups`, которые инициализируют список "
"группового доступа для текущего процесса. (Функции GID/UID предоставлены "
"Трэвисом Х.; :issue:`6508`. Поддержка групп инициализации добавлена ​​Жаном-"
"Полем Кальдероном; :issue:`7333`.)"

#: ../../whatsnew/2.7.rst:1444
msgid ""
"The :func:`os.fork` function now re-initializes the import lock in the child "
"process; this fixes problems on Solaris when :func:`~os.fork` is called from "
"a thread.  (Fixed by Zsolt Cserna; :issue:`7242`.)"
msgstr ""
"Функция :func:`os.fork` теперь повторно инициализирует блокировку импорта в "
"дочернем процессе; это устраняет проблемы в Solaris, когда :func:`~os.fork` "
"вызывается из потока. (Исправлено Жолтом Черной; :issue:`7242`.)"

#: ../../whatsnew/2.7.rst:1448
msgid ""
"In the :mod:`os.path` module, the :func:`~os.path.normpath` and :func:`~os."
"path.abspath` functions now preserve Unicode; if their input path is a "
"Unicode string, the return value is also a Unicode string. (:meth:`~os.path."
"normpath` fixed by Matt Giuca in :issue:`5827`; :meth:`~os.path.abspath` "
"fixed by Ezio Melotti in :issue:`3426`.)"
msgstr ""
"В модуле :mod:`os.path` функции :func:`~os.path.normpath` и :func:`~os.path."
"abspath` теперь сохраняют Unicode; если их входной путь представляет собой "
"строку Юникода, возвращаемое значение также является строкой Юникода. (:meth:"
"`~os.path.normpath` исправлено Мэттом Джукой в ​​:issue:`5827`; :meth:`~os."
"path.abspath` исправлено Эцио Мелотти в :issue:`3426`.)"

#: ../../whatsnew/2.7.rst:1454
msgid ""
"The :mod:`pydoc` module now has help for the various symbols that Python "
"uses.  You can now do ``help('<<')`` or ``help('@')``, for example. "
"(Contributed by David Laban; :issue:`4739`.)"
msgstr ""
"Модуль :mod:`pydoc` теперь содержит справку по различным символам, которые "
"использует Python. Теперь вы можете, например, выполнить ``help('<<')`` или "
"``help('@')``. (Предоставлено Дэвидом Лабаном; :issue:`4739`.)"

#: ../../whatsnew/2.7.rst:1458
msgid ""
"The :mod:`re` module's :func:`~re.split`, :func:`~re.sub`, and :func:`~re."
"subn` now accept an optional *flags* argument, for consistency with the "
"other functions in the module.  (Added by Gregory P. Smith.)"
msgstr ""
"Модули :mod:`re` :func:`~re.split`, :func:`~re.sub` и :func:`~re.subn` "
"теперь принимают необязательный аргумент *flags* для согласованности с "
"остальные функции модуля. (Добавлено Грегори П. Смитом.)"

#: ../../whatsnew/2.7.rst:1462
msgid ""
"New function: :func:`~runpy.run_path` in the :mod:`runpy` module will "
"execute the code at a provided *path* argument.  *path* can be the path of a "
"Python source file (:file:`example.py`), a compiled bytecode file (:file:"
"`example.pyc`), a directory (:file:`./package/`), or a zip archive (:file:"
"`example.zip`).  If a directory or zip path is provided, it will be added to "
"the front of ``sys.path`` and the module :mod:`__main__` will be imported.  "
"It's expected that the directory or zip contains a :file:`__main__.py`; if "
"it doesn't, some other :file:`__main__.py` might be imported from a location "
"later in ``sys.path``.  This makes more of the machinery of :mod:`runpy` "
"available to scripts that want to mimic the way Python's command line "
"processes an explicit path name. (Added by Nick Coghlan; :issue:`6816`.)"
msgstr ""
"Новая функция: :func:`~runpy.run_path` в модуле :mod:`runpy` выполнит код по "
"указанному аргументу *path*. *path* может быть путем к исходному файлу "
"Python (:file:`example.py`), скомпилированному файлу байт-кода (:file:"
"`example.pyc`), каталогу (:file:`./package/` ) или zip-архив (:file:`example."
"zip`). Если указан каталог или путь к почтовому индексу, он будет добавлен в "
"начало ``sys.path`` и будет импортирован модуль :mod:`__main__`. Ожидается, "
"что каталог или zip-файл содержит :file:`__main__.py`; если это не так, "
"какой-то другой :file:`__main__.py` может быть импортирован из другого места "
"в ``sys.path``. Это делает больше возможностей :mod:`runpy` доступными для "
"сценариев, которые хотят имитировать способ, которым командная строка Python "
"обрабатывает явное имя пути. (Добавлено Ником Когланом; :issue:`6816`.)"

#: ../../whatsnew/2.7.rst:1476
msgid ""
"New function: in the :mod:`shutil` module, :func:`~shutil.make_archive` "
"takes a filename, archive type (zip or tar-format), and a directory path, "
"and creates an archive containing the directory's contents. (Added by Tarek "
"Ziadé.)"
msgstr ""
"Новая функция: в модуле :mod:`shutil` :func:`~shutil.make_archive` принимает "
"имя файла, тип архива (формат zip или tar) и путь к каталогу и создает "
"архив, содержащий содержимое каталога. (Добавлено Тарек Зиаде.)"

#: ../../whatsnew/2.7.rst:1481
msgid ""
":mod:`shutil`'s :func:`~shutil.copyfile` and :func:`~shutil.copytree` "
"functions now raise a :exc:`~shutil.SpecialFileError` exception when asked "
"to copy a named pipe.  Previously the code would treat named pipes like a "
"regular file by opening them for reading, and this would block "
"indefinitely.  (Fixed by Antoine Pitrou; :issue:`3002`.)"
msgstr ""
"Функции :mod:`shutil` :func:`~shutil.copyfile` и :func:`~shutil.copytree` "
"теперь вызывают исключение :exc:`~shutil.SpecialFileError` при запросе на "
"копирование именованного канала. Раньше код обрабатывал именованные каналы "
"как обычные файлы, открывая их для чтения, и это блокировалось на "
"неопределенный срок. (Исправлено Антуаном Питру; :issue:`3002`.)"

#: ../../whatsnew/2.7.rst:1487
msgid ""
"The :mod:`signal` module no longer re-installs the signal handler unless "
"this is truly necessary, which fixes a bug that could make it impossible to "
"catch the EINTR signal robustly.  (Fixed by Charles-Francois Natali; :issue:"
"`8354`.)"
msgstr ""
"Модуль :mod:`signal` больше не переустанавливает обработчик сигнала, если в "
"этом нет действительной необходимости. Это исправляет ошибку, которая могла "
"сделать невозможным надежный перехват сигнала EINTR. (Исправлено Шарлем-"
"Франсуа Натали; :issue:`8354`.)"

#: ../../whatsnew/2.7.rst:1492
msgid ""
"New functions: in the :mod:`site` module, three new functions return various "
"site- and user-specific paths. :func:`~site.getsitepackages` returns a list "
"containing all global site-packages directories, :func:`~site."
"getusersitepackages` returns the path of the user's site-packages directory, "
"and :func:`~site.getuserbase` returns the value of the :envvar:`USER_BASE` "
"environment variable, giving the path to a directory that can be used to "
"store data. (Contributed by Tarek Ziadé; :issue:`6693`.)"
msgstr ""

#: ../../whatsnew/2.7.rst:1503
msgid ""
"The :mod:`site` module now reports exceptions occurring when the :mod:"
"`sitecustomize` module is imported, and will no longer catch and swallow "
"the :exc:`KeyboardInterrupt` exception.  (Fixed by Victor Stinner; :issue:"
"`3137`.)"
msgstr ""
"Модуль :mod:`site` теперь сообщает об исключениях, возникающих при импорте "
"модуля :mod:`sitecustomize`, и больше не будет перехватывать и поглощать "
"исключение :exc:`KeyboardInterrupt`. (Исправлено Виктором Стиннером; :issue:"
"`3137`.)"

#: ../../whatsnew/2.7.rst:1508
msgid ""
"The :func:`~socket.create_connection` function gained a *source_address* "
"parameter, a ``(host, port)`` 2-tuple giving the source address that will be "
"used for the connection. (Contributed by Eldon Ziegler; :issue:`3972`.)"
msgstr ""
"Функция :func:`~socket.create_connection` получила параметр "
"*source_address*, двухкортеж ``(host, port)``, задающий адрес источника, "
"который будет использоваться для соединения. (Предоставлено Элдоном "
"Зиглером; :issue:`3972`.)"

#: ../../whatsnew/2.7.rst:1513
msgid ""
"The :meth:`~socket.socket.recv_into` and :meth:`~socket.socket."
"recvfrom_into` methods will now write into objects that support the buffer "
"API, most usefully the :class:`bytearray` and :class:`memoryview` objects.  "
"(Implemented by Antoine Pitrou; :issue:`8104`.)"
msgstr ""
"Методы :meth:`~socket.socket.recv_into` и :meth:`~socket.socket."
"recvfrom_into` теперь будут записывать данные в объекты, поддерживающие API "
"буфера, наиболее полезными являются :class:`bytearray` и :class:` "
"MemoryView` объекты. (Реализовано Антуаном Питру; :issue:`8104`.)"

#: ../../whatsnew/2.7.rst:1518
msgid ""
"The :mod:`SocketServer` module's :class:`~SocketServer.TCPServer` class now "
"supports socket timeouts and disabling the Nagle algorithm. The :attr:"
"`~SocketServer.TCPServer.disable_nagle_algorithm` class attribute defaults "
"to ``False``; if overridden to be true, new request connections will have "
"the TCP_NODELAY option set to prevent buffering many small sends into a "
"single TCP packet. The :attr:`~SocketServer.BaseServer.timeout` class "
"attribute can hold a timeout in seconds that will be applied to the request "
"socket; if no request is received within that time, :meth:`~SocketServer."
"BaseServer.handle_timeout` will be called and :meth:`~SocketServer."
"BaseServer.handle_request` will return. (Contributed by Kristján Valur "
"Jónsson; :issue:`6192` and :issue:`6267`.)"
msgstr ""

#: ../../whatsnew/2.7.rst:1530
msgid ""
"Updated module: the :mod:`sqlite3` module has been updated to version 2.6.0 "
"of the `pysqlite package <https://github.com/ghaering/pysqlite>`__. Version "
"2.6.0 includes a number of bugfixes, and adds the ability to load SQLite "
"extensions from shared libraries. Call the ``enable_load_extension(True)`` "
"method to enable extensions, and then call :meth:`~sqlite3.Connection."
"load_extension` to load a particular shared library. (Updated by Gerhard "
"Häring.)"
msgstr ""
"Обновленный модуль: модуль :mod:`sqlite3` обновлен до версии 2.6.0 пакета "
"`pysqlite <https://github.com/ghhaering/pysqlite>`__. Версия 2.6.0 включает "
"ряд исправлений и добавляет возможность загружать расширения SQLite из общих "
"библиотек. Вызовите метод ``enable_load_extension(True)``, чтобы включить "
"расширения, а затем вызовите :meth:`~sqlite3.Connection.load_extension`, "
"чтобы загрузить определенную общую библиотеку. (Обновлено Герхардом "
"Херингом.)"

#: ../../whatsnew/2.7.rst:1537
msgid ""
"The :mod:`ssl` module's :class:`~ssl.SSLSocket` objects now support the "
"buffer API, which fixed a test suite failure (fix by Antoine Pitrou; :issue:"
"`7133`) and automatically set OpenSSL's :c:macro:`SSL_MODE_AUTO_RETRY`, "
"which will prevent an error code being returned from :meth:`recv` operations "
"that trigger an SSL renegotiation (fix by Antoine Pitrou; :issue:`8222`)."
msgstr ""

#: ../../whatsnew/2.7.rst:1544
msgid ""
"The :func:`ssl.wrap_socket` constructor function now takes a *ciphers* "
"argument that's a string listing the encryption algorithms to be allowed; "
"the format of the string is described `in the OpenSSL documentation <https://"
"www.openssl.org/docs/man1.0.2/man1/ciphers.html>`__. (Added by Antoine "
"Pitrou; :issue:`8322`.)"
msgstr ""

#: ../../whatsnew/2.7.rst:1551
msgid ""
"Another change makes the extension load all of OpenSSL's ciphers and digest "
"algorithms so that they're all available.  Some SSL certificates couldn't be "
"verified, reporting an \"unknown algorithm\" error.  (Reported by Beda "
"Kosata, and fixed by Antoine Pitrou; :issue:`8484`.)"
msgstr ""
"Еще одно изменение заставляет расширение загружать все шифры и алгоритмы "
"дайджеста OpenSSL, чтобы они все были доступны. Некоторые сертификаты SSL не "
"удалось проверить, что привело к ошибке «неизвестного алгоритма». (Сообщил "
"Беда Косата и исправил Антуан Питру; :issue:`8484`.)"

#: ../../whatsnew/2.7.rst:1557
msgid ""
"The version of OpenSSL being used is now available as the module attributes :"
"data:`ssl.OPENSSL_VERSION` (a string), :data:`ssl.OPENSSL_VERSION_INFO` (a 5-"
"tuple), and :data:`ssl.OPENSSL_VERSION_NUMBER` (an integer).  (Added by "
"Antoine Pitrou; :issue:`8321`.)"
msgstr ""

#: ../../whatsnew/2.7.rst:1563
msgid ""
"The :mod:`struct` module will no longer silently ignore overflow errors when "
"a value is too large for a particular integer format code (one of "
"``bBhHiIlLqQ``); it now always raises a :exc:`struct.error` exception.  "
"(Changed by Mark Dickinson; :issue:`1523`.)  The :func:`~struct.pack` "
"function will also attempt to use :meth:`__index__` to convert and pack non-"
"integers before trying the :meth:`__int__` method or reporting an error. "
"(Changed by Mark Dickinson; :issue:`8300`.)"
msgstr ""

#: ../../whatsnew/2.7.rst:1572
msgid ""
"New function: the :mod:`subprocess` module's :func:`~subprocess."
"check_output` runs a command with a specified set of arguments and returns "
"the command's output as a string when the command runs without error, or "
"raises a :exc:`~subprocess.CalledProcessError` exception otherwise."
msgstr ""
"Новая функция: модуль :mod:`subprocess` :func:`~subprocess.check_output` "
"запускает команду с указанным набором аргументов и возвращает выходные "
"данные команды в виде строки, когда команда выполняется без ошибок, или "
"вызывает :exc: В противном случае исключение `~subprocess."
"CalledProcessError`."

#: ../../whatsnew/2.7.rst:1587
msgid "(Contributed by Gregory P. Smith.)"
msgstr "(Предоставлено Грегори П. Смитом.)"

#: ../../whatsnew/2.7.rst:1589
msgid ""
"The :mod:`subprocess` module will now retry its internal system calls on "
"receiving an :const:`EINTR` signal.  (Reported by several people; final "
"patch by Gregory P. Smith in :issue:`1068268`.)"
msgstr ""

#: ../../whatsnew/2.7.rst:1593
msgid ""
"New function: :func:`~symtable.Symbol.is_declared_global` in the :mod:"
"`symtable` module returns true for variables that are explicitly declared to "
"be global, false for ones that are implicitly global. (Contributed by Jeremy "
"Hylton.)"
msgstr ""
"Новая функция: :func:`~symtable.Symbol.is_declared_global` в модуле :mod:"
"`symtable` возвращает true для переменных, которые явно объявлены "
"глобальными, и false для переменных, которые неявно являются глобальными. "
"(Предоставлено Джереми Хилтоном.)"

#: ../../whatsnew/2.7.rst:1598 ../../whatsnew/2.7.rst:2496
msgid ""
"The :mod:`syslog` module will now use the value of ``sys.argv[0]`` as the "
"identifier instead of the previous default value of ``'python'``. (Changed "
"by Sean Reifschneider; :issue:`8451`.)"
msgstr ""
"Модуль :mod:`syslog` теперь будет использовать значение ``sys.argv[0]`` в "
"качестве идентификатора вместо предыдущего значения по умолчанию "
"``'python'``. (Изменено Шоном Рейфшнайдером; :issue:`8451`.)"

#: ../../whatsnew/2.7.rst:1602
msgid ""
"The ``sys.version_info`` value is now a named tuple, with attributes named :"
"attr:`major`, :attr:`minor`, :attr:`micro`, :attr:`releaselevel`, and :attr:"
"`serial`.  (Contributed by Ross Light; :issue:`4285`.)"
msgstr ""

#: ../../whatsnew/2.7.rst:1607
msgid ""
":func:`sys.getwindowsversion` also returns a named tuple, with attributes "
"named :attr:`major`, :attr:`minor`, :attr:`build`, :attr:`platform`, :attr:"
"`service_pack`, :attr:`service_pack_major`, :attr:`service_pack_minor`, :"
"attr:`suite_mask`, and :attr:`product_type`.  (Contributed by Brian Curtin; :"
"issue:`7766`.)"
msgstr ""

#: ../../whatsnew/2.7.rst:1613 ../../whatsnew/2.7.rst:2500
msgid ""
"The :mod:`tarfile` module's default error handling has changed, to no longer "
"suppress fatal errors.  The default error level was previously 0, which "
"meant that errors would only result in a message being written to the debug "
"log, but because the debug log is not activated by default, these errors go "
"unnoticed.  The default error level is now 1, which raises an exception if "
"there's an error. (Changed by Lars Gustäbel; :issue:`7357`.)"
msgstr ""
"Изменена обработка ошибок по умолчанию в модуле :mod:`tarfile`, чтобы больше "
"не подавлять фатальные ошибки. Раньше уровень ошибок по умолчанию был равен "
"0, что означало, что ошибки приводили только к записи сообщения в журнал "
"отладки, но поскольку журнал отладки по умолчанию не активирован, эти ошибки "
"остаются незамеченными. Уровень ошибки по умолчанию теперь равен 1, что "
"вызывает исключение в случае ошибки. (Изменено Ларсом Густебелем; :issue:"
"`7357`.)"

#: ../../whatsnew/2.7.rst:1621
msgid ""
":mod:`tarfile` now supports filtering the :class:`~tarfile.TarInfo` objects "
"being added to a tar file.  When you call :meth:`~tarfile.TarFile.add`, you "
"may supply an optional *filter* argument that's a callable.  The *filter* "
"callable will be passed the :class:`~tarfile.TarInfo` for every file being "
"added, and can modify and return it. If the callable returns ``None``, the "
"file will be excluded from the resulting archive.  This is more powerful "
"than the existing *exclude* argument, which has therefore been deprecated. "
"(Added by Lars Gustäbel; :issue:`6856`.) The :class:`~tarfile.TarFile` class "
"also now supports the context management protocol. (Added by Lars Gustäbel; :"
"issue:`7232`.)"
msgstr ""
":mod:`tarfile` теперь поддерживает фильтрацию объектов :class:`~tarfile."
"TarInfo`, добавляемых в tar-файл. Когда вы вызываете :meth:`~tarfile.TarFile."
"add`, вы можете указать необязательный аргумент *filter*, который является "
"вызываемым. Вызываемому объекту *filter* будет передан :class:`~tarfile."
"TarInfo` для каждого добавляемого файла, и он сможет изменить и вернуть его. "
"Если вызываемый объект возвращает None, файл будет исключен из "
"результирующего архива. Это более мощный аргумент, чем существующий аргумент "
"*exclude*, который поэтому устарел. (Добавлено Ларсом Густабелем; :issue:"
"`6856`.) Класс :class:`~tarfile.TarFile` теперь также поддерживает протокол "
"управления контекстом. (Добавлено Ларсом Густебелем; :issue:`7232`.)"

#: ../../whatsnew/2.7.rst:1633
msgid ""
"The :meth:`~threading.Event.wait` method of the :class:`threading.Event` "
"class now returns the internal flag on exit.  This means the method will "
"usually return true because :meth:`~threading.Event.wait` is supposed to "
"block until the internal flag becomes true.  The return value will only be "
"false if a timeout was provided and the operation timed out. (Contributed by "
"Tim Lesher; :issue:`1674032`.)"
msgstr ""
"Метод :meth:`~threading.Event.wait` класса :class:`threading.Event` теперь "
"возвращает внутренний флаг при выходе. Это означает, что метод обычно "
"возвращает true, поскольку :meth:`~threading.Event.wait` должен "
"блокироваться до тех пор, пока внутренний флаг не станет истинным. "
"Возвращаемое значение будет ложным только в том случае, если был "
"предоставлен тайм-аут и время ожидания операции истекло. (Предоставлено "
"Тимом Лешером; :issue:`1674032`.)"

#: ../../whatsnew/2.7.rst:1640
msgid ""
"The Unicode database provided by the :mod:`unicodedata` module is now used "
"internally to determine which characters are numeric, whitespace, or "
"represent line breaks.  The database also includes information from the :"
"file:`Unihan.txt` data file (patch by Anders Chrigström and Amaury Forgeot "
"d'Arc; :issue:`1571184`) and has been updated to version 5.2.0 (updated by "
"Florent Xicluna; :issue:`8024`)."
msgstr ""
"База данных Unicode, предоставляемая модулем :mod:`unicodedata`, теперь "
"используется внутри системы для определения того, какие символы являются "
"цифрами, пробелами или представляют собой разрывы строк. База данных также "
"включает информацию из файла данных :file:`Unihan.txt` (исправление Андерса "
"Крисгстрема и Амори Форжо д'Арк; :issue:`1571184`) и обновлена ​​до версии "
"5.2.0 (обновлена ​​Флораном Ксиклюной). :issue:`8024`)."

#: ../../whatsnew/2.7.rst:1648 ../../whatsnew/2.7.rst:2508
msgid ""
"The :mod:`urlparse` module's :func:`~urlparse.urlsplit` now handles unknown "
"URL schemes in a fashion compliant with :rfc:`3986`: if the URL is of the "
"form ``\"<something>://...\"``, the text before the ``://`` is treated as "
"the scheme, even if it's a made-up scheme that the module doesn't know "
"about.  This change may break code that worked around the old behaviour.  "
"For example, Python 2.6.4 or 2.5 will return the following:"
msgstr ""

#: ../../whatsnew/2.7.rst:1663 ../../whatsnew/2.7.rst:2523
msgid "Python 2.7 (and Python 2.6.5) will return:"
msgstr "Python 2.7 (и Python 2.6.5) вернет:"

#: ../../whatsnew/2.7.rst:1672 ../../whatsnew/2.7.rst:2532
msgid ""
"(Python 2.7 actually produces slightly different output, since it returns a "
"named tuple instead of a standard tuple.)"
msgstr ""
"(Python 2.7 на самом деле выдает немного другой результат, поскольку "
"возвращает именованный кортеж вместо стандартного кортежа.)"

#: ../../whatsnew/2.7.rst:1675
msgid ""
"The :mod:`urlparse` module also supports IPv6 literal addresses as defined "
"by :rfc:`2732` (contributed by Senthil Kumaran; :issue:`2987`)."
msgstr ""

#: ../../whatsnew/2.7.rst:1685
msgid ""
"New class: the :class:`~weakref.WeakSet` class in the :mod:`weakref` module "
"is a set that only holds weak references to its elements; elements will be "
"removed once there are no references pointing to them. (Originally "
"implemented in Python 3.x by Raymond Hettinger, and backported to 2.7 by "
"Michael Foord.)"
msgstr ""
"Новый класс: класс :class:`~weakref.WeakSet` в модуле :mod:`weakref` "
"представляет собой набор, который содержит только слабые ссылки на свои "
"элементы; элементы будут удалены, как только на них не будет ссылок. "
"(Первоначально реализовано в Python 3.x Рэймондом Хеттингером и перенесено в "
"версию 2.7 Майклом Фурдом.)"

#: ../../whatsnew/2.7.rst:1691 ../../whatsnew/2.7.rst:2486
msgid ""
"The ElementTree library, :mod:`xml.etree`, no longer escapes ampersands and "
"angle brackets when outputting an XML processing instruction (which looks "
"like ``<?xml-stylesheet href=\"#style1\"?>``) or comment (which looks like "
"``<!-- comment -->``). (Patch by Neil Muller; :issue:`2746`.)"
msgstr ""

#: ../../whatsnew/2.7.rst:1697
msgid ""
"The XML-RPC client and server, provided by the :mod:`xmlrpclib` and :mod:"
"`SimpleXMLRPCServer` modules, have improved performance by supporting "
"HTTP/1.1 keep-alive and by optionally using gzip encoding to compress the "
"XML being exchanged.  The gzip compression is controlled by the :attr:"
"`encode_threshold` attribute of :class:`SimpleXMLRPCRequestHandler`, which "
"contains a size in bytes; responses larger than this will be compressed. "
"(Contributed by Kristján Valur Jónsson; :issue:`6267`.)"
msgstr ""

#: ../../whatsnew/2.7.rst:1706
msgid ""
"The :mod:`zipfile` module's :class:`~zipfile.ZipFile` now supports the "
"context management protocol, so you can write ``with zipfile.ZipFile(...) as "
"f:``. (Contributed by Brian Curtin; :issue:`5511`.)"
msgstr ""
"Модуль :mod:`zipfile` :class:`~zipfile.ZipFile` теперь поддерживает протокол "
"управления контекстом, поэтому вы можете написать ``with zipfile."
"ZipFile(...) как f:``. (Предоставлено Брайаном Кертином; :issue:`5511`.)"

#: ../../whatsnew/2.7.rst:1710
msgid ""
":mod:`zipfile` now also supports archiving empty directories and extracts "
"them correctly.  (Fixed by Kuba Wieczorek; :issue:`4710`.) Reading files out "
"of an archive is faster, and interleaving :meth:`~zipfile.ZipFile.read` and :"
"meth:`~zipfile.ZipFile.readline` now works correctly. (Contributed by Nir "
"Aides; :issue:`7610`.)"
msgstr ""

#: ../../whatsnew/2.7.rst:1716
msgid ""
"The :func:`~zipfile.is_zipfile` function now accepts a file object, in "
"addition to the path names accepted in earlier versions.  (Contributed by "
"Gabriel Genellina; :issue:`4756`.)"
msgstr ""
"Функция :func:`~zipfile.is_zipfile` теперь принимает файловый объект в "
"дополнение к именам путей, принятым в более ранних версиях. (Предоставлено "
"Габриэлем Дженеллиной; :issue:`4756`.)"

#: ../../whatsnew/2.7.rst:1720
msgid ""
"The :meth:`~zipfile.ZipFile.writestr` method now has an optional "
"*compress_type* parameter that lets you override the default compression "
"method specified in the :class:`~zipfile.ZipFile` constructor.  (Contributed "
"by Ronald Oussoren; :issue:`6003`.)"
msgstr ""
"Метод :meth:`~zipfile.ZipFile.writestr` теперь имеет дополнительный параметр "
"*compress_type*, который позволяет переопределить метод сжатия по умолчанию, "
"указанный в конструкторе :class:`~zipfile.ZipFile`. (Предоставлено Рональдом "
"Уссореном; :issue:`6003`.)"

#: ../../whatsnew/2.7.rst:1733
msgid "New module: importlib"
msgstr "Новый модуль: importlib"

#: ../../whatsnew/2.7.rst:1735
msgid ""
"Python 3.1 includes the :mod:`importlib` package, a re-implementation of the "
"logic underlying Python's :keyword:`import` statement. :mod:`importlib` is "
"useful for implementors of Python interpreters and to users who wish to "
"write new importers that can participate in the import process.  Python 2.7 "
"doesn't contain the complete :mod:`importlib` package, but instead has a "
"tiny subset that contains a single function, :func:`~importlib."
"import_module`."
msgstr ""

#: ../../whatsnew/2.7.rst:1743
msgid ""
"``import_module(name, package=None)`` imports a module.  *name* is a string "
"containing the module or package's name.  It's possible to do relative "
"imports by providing a string that begins with a ``.`` character, such as "
"``..utils.errors``.  For relative imports, the *package* argument must be "
"provided and is the name of the package that will be used as the anchor for "
"the relative import.  :func:`~importlib.import_module` both inserts the "
"imported module into ``sys.modules`` and returns the module object."
msgstr ""
"``import_module(name, package=None)`` импортирует модуль. *name* — строка, "
"содержащая имя модуля или пакета. Относительный импорт можно выполнить, "
"предоставив строку, начинающуюся с символа ``.``, например ``..utils."
"errors``. Для относительного импорта необходимо указать аргумент *package*, "
"который является именем пакета, который будет использоваться в качестве "
"привязки для относительного импорта. :func:`~importlib.import_module` "
"вставляет импортированный модуль в ``sys.modules`` и возвращает объект "
"модуля."

#: ../../whatsnew/2.7.rst:1752
msgid "Here are some examples::"
msgstr "Вот несколько примеров:"

#: ../../whatsnew/2.7.rst:1763
msgid ""
":mod:`importlib` was implemented by Brett Cannon and introduced in Python "
"3.1."
msgstr ""
":mod:`importlib` был реализован Бреттом Кэнноном и представлен в Python 3.1."

#: ../../whatsnew/2.7.rst:1768
msgid "New module: sysconfig"
msgstr "Новый модуль: sysconfig"

#: ../../whatsnew/2.7.rst:1770
msgid ""
"The :mod:`sysconfig` module has been pulled out of the Distutils package, "
"becoming a new top-level module in its own right. :mod:`sysconfig` provides "
"functions for getting information about Python's build process: compiler "
"switches, installation paths, the platform name, and whether Python is "
"running from its source directory."
msgstr ""
"Модуль :mod:`sysconfig` был исключен из пакета Distutils, став "
"самостоятельным новым модулем верхнего уровня. :mod:`sysconfig` "
"предоставляет функции для получения информации о процессе сборки Python: "
"переключатели компилятора, пути установки, имя платформы и то, запущен ли "
"Python из исходного каталога."

#: ../../whatsnew/2.7.rst:1777
msgid "Some of the functions in the module are:"
msgstr "Некоторые функции модуля:"

#: ../../whatsnew/2.7.rst:1779
msgid ""
":func:`~sysconfig.get_config_var` returns variables from Python's Makefile "
"and the :file:`pyconfig.h` file."
msgstr ""
":func:`~sysconfig.get_config_var` возвращает переменные из Makefile Python и "
"файла :file:`pyconfig.h`."

#: ../../whatsnew/2.7.rst:1781
msgid ""
":func:`~sysconfig.get_config_vars` returns a dictionary containing all of "
"the configuration variables."
msgstr ""
":func:`~sysconfig.get_config_vars` возвращает словарь, содержащий все "
"переменные конфигурации."

#: ../../whatsnew/2.7.rst:1783
msgid ""
":func:`~sysconfig.get_path` returns the configured path for a particular "
"type of module: the standard library, site-specific modules, platform-"
"specific modules, etc."
msgstr ""
":func:`~sysconfig.get_path` возвращает настроенный путь для определенного "
"типа модуля: стандартная библиотека, модули для конкретного сайта, модули "
"для конкретной платформы и т. д."

#: ../../whatsnew/2.7.rst:1786
msgid ""
":func:`~sysconfig.is_python_build` returns true if you're running a binary "
"from a Python source tree, and false otherwise."
msgstr ""
":func:`~sysconfig.is_python_build` возвращает true, если вы запускаете "
"двоичный файл из дерева исходного кода Python, и false в противном случае."

#: ../../whatsnew/2.7.rst:1789
msgid ""
"Consult the :mod:`sysconfig` documentation for more details and for a "
"complete list of functions."
msgstr ""
"Обратитесь к документации :mod:`sysconfig` для получения более подробной "
"информации и полного списка функций."

#: ../../whatsnew/2.7.rst:1792
msgid ""
"The Distutils package and :mod:`sysconfig` are now maintained by Tarek "
"Ziadé, who has also started a Distutils2 package (source repository at "
"https://hg.python.org/distutils2/) for developing a next-generation version "
"of Distutils."
msgstr ""
"Пакет Distutils и :mod:`sysconfig` теперь поддерживаются Тареком Зиаде, "
"который также запустил пакет Distutils2 (исходный репозиторий https://hg."
"python.org/distutils2/) для разработки версии Distutils следующего "
"поколения. ."

#: ../../whatsnew/2.7.rst:1799
msgid "ttk: Themed Widgets for Tk"
msgstr "ttk: Тематические виджеты для Tk"

#: ../../whatsnew/2.7.rst:1801
msgid ""
"Tcl/Tk 8.5 includes a set of themed widgets that re-implement basic Tk "
"widgets but have a more customizable appearance and can therefore more "
"closely resemble the native platform's widgets.  This widget set was "
"originally called Tile, but was renamed to Ttk (for \"themed Tk\") on being "
"added to Tcl/Tck release 8.5."
msgstr ""
"Tcl/Tk 8.5 включает набор тематических виджетов, которые повторяют базовые "
"виджеты Tk, но имеют более настраиваемый внешний вид и, следовательно, могут "
"больше напоминать виджеты собственной платформы. Этот набор виджетов "
"изначально назывался Tile, но был переименован в Ttk (что означает "
"«тематический Tk») при добавлении в Tcl/Tck версии 8.5."

#: ../../whatsnew/2.7.rst:1807
msgid ""
"To learn more, read the :mod:`ttk` module documentation.  You may also wish "
"to read the Tcl/Tk manual page describing the Ttk theme engine, available at "
"https://www.tcl.tk/man/tcl8.5/TkCmd/ttk_intro.htm. Some screenshots of the "
"Python/Ttk code in use are at https://code.google.com/archive/p/python-ttk/"
"wikis/Screenshots.wiki."
msgstr ""

#: ../../whatsnew/2.7.rst:1814
msgid ""
"The :mod:`ttk` module was written by Guilherme Polo and added in :issue:"
"`2983`.  An alternate version called ``Tile.py``, written by Martin Franklin "
"and maintained by Kevin Walzer, was proposed for inclusion in :issue:`2618`, "
"but the authors argued that Guilherme Polo's work was more comprehensive."
msgstr ""

#: ../../whatsnew/2.7.rst:1824
msgid "Updated module: unittest"
msgstr "Обновленный модуль: unittest"

#: ../../whatsnew/2.7.rst:1826
msgid ""
"The :mod:`unittest` module was greatly enhanced; many new features were "
"added.  Most of these features were implemented by Michael Foord, unless "
"otherwise noted.  The enhanced version of the module is downloadable "
"separately for use with Python versions 2.4 to 2.6, packaged as the :mod:"
"`unittest2` package, from https://pypi.org/project/unittest2."
msgstr ""

#: ../../whatsnew/2.7.rst:1833
msgid ""
"When used from the command line, the module can automatically discover "
"tests.  It's not as fancy as `py.test <https://pytest.org>`__ or `nose "
"<https://nose.readthedocs.io/>`__, but provides a simple way to run tests "
"kept within a set of package directories.  For example, the following "
"command will search the :file:`test/` subdirectory for any importable test "
"files named ``test*.py``::"
msgstr ""
"При использовании из командной строки модуль может автоматически "
"обнаруживать тесты. Это не так красиво, как `py.test <https://pytest.org>`__ "
"или `nose <https://nose.readthedocs.io/>`__, но обеспечивает простой способ "
"запуска тестов, хранящихся в наборе. каталогов пакетов. Например, следующая "
"команда будет искать в подкаталоге :file:`test/` любые импортируемые "
"тестовые файлы с именем ``test*.py``::"

#: ../../whatsnew/2.7.rst:1842
msgid ""
"Consult the :mod:`unittest` module documentation for more details. "
"(Developed in :issue:`6001`.)"
msgstr ""
"Для получения более подробной информации обратитесь к документации модуля :"
"mod:`unittest`. (Разработано в :issue:`6001`.)"

#: ../../whatsnew/2.7.rst:1845
msgid "The :func:`~unittest.main` function supports some other new options:"
msgstr ""
"Функция :func:`~unittest.main` поддерживает некоторые другие новые опции:"

#: ../../whatsnew/2.7.rst:1847
msgid ""
":option:`-b <unittest -b>` or :option:`!--buffer` will buffer the standard "
"output and standard error streams during each test.  If the test passes, any "
"resulting output will be discarded; on failure, the buffered output will be "
"displayed."
msgstr ""
":option:`-b <unittest -b>` или :option:`!--buffer` будет буферизовать потоки "
"стандартного вывода и стандартных ошибок во время каждого теста. Если тест "
"пройден успешно, любые результирующие выходные данные будут отброшены; в "
"случае неудачи будет отображен буферизованный вывод."

#: ../../whatsnew/2.7.rst:1852
msgid ""
":option:`-c <unittest -c>` or :option:`!--catch` will cause the control-C "
"interrupt to be handled more gracefully.  Instead of interrupting the test "
"process immediately, the currently running test will be completed and then "
"the partial results up to the interruption will be reported. If you're "
"impatient, a second press of control-C will cause an immediate interruption."
msgstr ""
":option:`-c <unittest -c>` или :option:`!--catch` приведет к более "
"корректной обработке прерывания control-C. Вместо немедленного прерывания "
"процесса тестирования будет завершен текущий тест, а затем будут сообщены "
"частичные результаты до прерывания. Если вы нетерпеливы, второе нажатие "
"Control-C приведет к немедленному прерыванию игры."

#: ../../whatsnew/2.7.rst:1859
msgid ""
"This control-C handler tries to avoid causing problems when the code being "
"tested or the tests being run have defined a signal handler of their own, by "
"noticing that a signal handler was already set and calling it.  If this "
"doesn't work for you, there's a :func:`~unittest.removeHandler` decorator "
"that can be used to mark tests that should have the control-C handling "
"disabled."
msgstr ""
"Этот обработчик control-C пытается избежать возникновения проблем, когда "
"тестируемый код или выполняемые тесты определили собственный обработчик "
"сигнала, замечая, что обработчик сигнала уже установлен, и вызывая его. Если "
"это вам не помогло, есть декоратор :func:`~unittest.removeHandler`, который "
"можно использовать для пометки тестов, в которых обработка control-C должна "
"быть отключена."

#: ../../whatsnew/2.7.rst:1866
msgid ""
":option:`-f <unittest -f>` or :option:`!--failfast` makes test execution "
"stop immediately when a test fails instead of continuing to execute further "
"tests.  (Suggested by Cliff Dyer and implemented by Michael Foord; :issue:"
"`8074`.)"
msgstr ""
":option:`-f <unittest -f>` или :option:`!--failfast` заставляет выполнение "
"теста немедленно останавливаться в случае сбоя теста вместо продолжения "
"выполнения дальнейших тестов. (Предложено Клиффом Дайером и реализовано "
"Майклом Фурдом; :issue:`8074`.)"

#: ../../whatsnew/2.7.rst:1871
msgid ""
"The progress messages now show 'x' for expected failures and 'u' for "
"unexpected successes when run in verbose mode. (Contributed by Benjamin "
"Peterson.)"
msgstr ""
"В сообщениях о ходе выполнения теперь отображается «x» для ожидаемых сбоев и "
"«u» для неожиданных успехов при запуске в подробном режиме. (Предоставлено "
"Бенджамином Петерсоном.)"

#: ../../whatsnew/2.7.rst:1875
msgid ""
"Test cases can raise the :exc:`~unittest.SkipTest` exception to skip a test "
"(:issue:`1034053`)."
msgstr ""
"Тестовые случаи могут вызвать исключение :exc:`~unittest.SkipTest` для "
"пропуска теста (:issue:`1034053`)."

#: ../../whatsnew/2.7.rst:1878
msgid ""
"The error messages for :meth:`~unittest.TestCase.assertEqual`, :meth:"
"`~unittest.TestCase.assertTrue`, and :meth:`~unittest.TestCase.assertFalse` "
"failures now provide more information.  If you set the :attr:`~unittest."
"TestCase.longMessage` attribute of your :class:`~unittest.TestCase` classes "
"to true, both the standard error message and any additional message you "
"provide will be printed for failures.  (Added by Michael Foord; :issue:"
"`5663`.)"
msgstr ""
"Сообщения об ошибках для сбоев :meth:`~unittest.TestCase.assertEqual`, :meth:"
"`~unittest.TestCase.assertTrue` и :meth:`~unittest.TestCase.assertFalse` "
"теперь предоставляют дополнительную информацию. Если вы установите для "
"атрибута :attr:`~unittest.TestCase.longMessage` ваших классов :class:"
"`~unittest.TestCase` значение true, в случае сбоя будет напечатано как "
"стандартное сообщение об ошибке, так и любое предоставленное вами "
"дополнительное сообщение. (Добавлено Майклом Фурдом; :issue:`5663`.)"

#: ../../whatsnew/2.7.rst:1885
msgid ""
"The :meth:`~unittest.TestCase.assertRaises` method now returns a context "
"handler when called without providing a callable object to run.  For "
"example, you can write this::"
msgstr ""
"Метод :meth:`~unittest.TestCase.assertRaises` теперь возвращает обработчик "
"контекста при вызове, не предоставляя вызываемый объект для запуска. "
"Например, вы можете написать это::"

#: ../../whatsnew/2.7.rst:1892
msgid "(Implemented by Antoine Pitrou; :issue:`4444`.)"
msgstr "(Реализовано Антуаном Питру; :issue:`4444`.)"

#: ../../whatsnew/2.7.rst:1896
msgid ""
"Module- and class-level setup and teardown fixtures are now supported. "
"Modules can contain :func:`~unittest.setUpModule` and :func:`~unittest."
"tearDownModule` functions.  Classes can have :meth:`~unittest.TestCase."
"setUpClass` and :meth:`~unittest.TestCase.tearDownClass` methods that must "
"be defined as class methods (using ``@classmethod`` or equivalent).  These "
"functions and methods are invoked when the test runner switches to a test "
"case in a different module or class."
msgstr ""
"Теперь поддерживаются приспособления для настройки и демонтажа на уровне "
"модуля и класса. Модули могут содержать функции :func:`~unittest."
"setUpModule` и :func:`~unittest.tearDownModule`. Классы могут иметь методы :"
"meth:`~unittest.TestCase.setUpClass` и :meth:`~unittest.TestCase."
"tearDownClass`, которые должны быть определены как методы класса (с "
"использованием ``@classmethod`` или его эквивалента). Эти функции и методы "
"вызываются, когда исполнитель тестов переключается на тестовый пример в "
"другом модуле или классе."

#: ../../whatsnew/2.7.rst:1904
msgid ""
"The methods :meth:`~unittest.TestCase.addCleanup` and :meth:`~unittest."
"TestCase.doCleanups` were added. :meth:`~unittest.TestCase.addCleanup` lets "
"you add cleanup functions that will be called unconditionally (after :meth:"
"`~unittest.TestCase.setUp` if :meth:`~unittest.TestCase.setUp` fails, "
"otherwise after :meth:`~unittest.TestCase.tearDown`). This allows for much "
"simpler resource allocation and deallocation during tests (:issue:`5679`)."
msgstr ""
"Были добавлены методы :meth:`~unittest.TestCase.addCleanup` и :meth:"
"`~unittest.TestCase.doCleanups`. :meth:`~unittest.TestCase.addCleanup` "
"позволяет добавлять функции очистки, которые будут вызываться безоговорочно "
"(после :meth:`~unittest.TestCase.setUp`, если :meth:`~unittest.TestCase."
"setUp` завершится неудачно, в противном случае после :meth:`~unittest."
"TestCase.tearDown`). Это позволяет значительно упростить выделение и "
"освобождение ресурсов во время тестов (:issue:`5679`)."

#: ../../whatsnew/2.7.rst:1912
msgid ""
"A number of new methods were added that provide more specialized tests.  "
"Many of these methods were written by Google engineers for use in their test "
"suites; Gregory P. Smith, Michael Foord, and GvR worked on merging them into "
"Python's version of :mod:`unittest`."
msgstr ""
"Был добавлен ряд новых методов, обеспечивающих более специализированные "
"тесты. Многие из этих методов были написаны инженерами Google для "
"использования в их наборах тестов; Грегори П. Смит, Майкл Фурд и GvR "
"работали над объединением их в версию :mod:`unittest` для Python."

#: ../../whatsnew/2.7.rst:1917
msgid ""
":meth:`~unittest.TestCase.assertIsNone` and :meth:`~unittest.TestCase."
"assertIsNotNone` take one expression and verify that the result is or is not "
"``None``."
msgstr ""
":meth:`~unittest.TestCase.assertIsNone` и :meth:`~unittest.TestCase."
"assertIsNotNone` принимают одно выражение и проверяют, является ли "
"результатом значение ``None`` или нет."

#: ../../whatsnew/2.7.rst:1920
msgid ""
":meth:`~unittest.TestCase.assertIs` and :meth:`~unittest.TestCase."
"assertIsNot` take two values and check whether the two values evaluate to "
"the same object or not. (Added by Michael Foord; :issue:`2578`.)"
msgstr ""
":meth:`~unittest.TestCase.assertIs` и :meth:`~unittest.TestCase.assertIsNot` "
"принимают два значения и проверяют, относятся ли эти два значения к одному и "
"тому же объекту или нет. (Добавлено Майклом Фурдом; :issue:`2578`.)"

#: ../../whatsnew/2.7.rst:1924
msgid ""
":meth:`~unittest.TestCase.assertIsInstance` and :meth:`~unittest.TestCase."
"assertNotIsInstance` check whether the resulting object is an instance of a "
"particular class, or of one of a tuple of classes.  (Added by Georg Brandl; :"
"issue:`7031`.)"
msgstr ""
":meth:`~unittest.TestCase.assertIsInstance` и :meth:`~unittest.TestCase."
"assertNotIsInstance` проверяют, является ли полученный объект экземпляром "
"определенного класса или одним из кортежа классов. (Добавлено Георгом "
"Брандлом; :issue:`7031`.)"

#: ../../whatsnew/2.7.rst:1929
msgid ""
":meth:`~unittest.TestCase.assertGreater`, :meth:`~unittest.TestCase."
"assertGreaterEqual`, :meth:`~unittest.TestCase.assertLess`, and :meth:"
"`~unittest.TestCase.assertLessEqual` compare two quantities."
msgstr ""
":meth:`~unittest.TestCase.assertGreater`, :meth:`~unittest.TestCase."
"assertGreaterEqual`, :meth:`~unittest.TestCase.assertLess` и :meth:"
"`~unittest.TestCase.assertLessEqual` сравнивают два количества."

#: ../../whatsnew/2.7.rst:1933
msgid ""
":meth:`~unittest.TestCase.assertMultiLineEqual` compares two strings, and if "
"they're not equal, displays a helpful comparison that highlights the "
"differences in the two strings.  This comparison is now used by default when "
"Unicode strings are compared with :meth:`~unittest.TestCase.assertEqual`."
msgstr ""
":meth:`~unittest.TestCase.assertMultiLineEqual` сравнивает две строки и, "
"если они не равны, отображает полезное сравнение, которое подчеркивает "
"различия в двух строках. Это сравнение теперь используется по умолчанию при "
"сравнении строк Юникода с :meth:`~unittest.TestCase.assertEqual`."

#: ../../whatsnew/2.7.rst:1938
msgid ""
":meth:`~unittest.TestCase.assertRegexpMatches` and :meth:`~unittest.TestCase."
"assertNotRegexpMatches` checks whether the first argument is a string "
"matching or not matching the regular expression provided as the second "
"argument (:issue:`8038`)."
msgstr ""

#: ../../whatsnew/2.7.rst:1943
msgid ""
":meth:`~unittest.TestCase.assertRaisesRegexp` checks whether a particular "
"exception is raised, and then also checks that the string representation of "
"the exception matches the provided regular expression."
msgstr ""

#: ../../whatsnew/2.7.rst:1947
msgid ""
":meth:`~unittest.TestCase.assertIn` and :meth:`~unittest.TestCase."
"assertNotIn` tests whether *first* is or is not in  *second*."
msgstr ""
":meth:`~unittest.TestCase.assertIn` и :meth:`~unittest.TestCase.assertNotIn` "
"проверяют, находится ли *first* в *втором* или нет."

#: ../../whatsnew/2.7.rst:1950
msgid ""
":meth:`~unittest.TestCase.assertItemsEqual` tests whether two provided "
"sequences contain the same elements."
msgstr ""

#: ../../whatsnew/2.7.rst:1953
msgid ""
":meth:`~unittest.TestCase.assertSetEqual` compares whether two sets are "
"equal, and only reports the differences between the sets in case of error."
msgstr ""
":meth:`~unittest.TestCase.assertSetEqual` сравнивает, равны ли два набора, и "
"сообщает о различиях между наборами только в случае ошибки."

#: ../../whatsnew/2.7.rst:1956
msgid ""
"Similarly, :meth:`~unittest.TestCase.assertListEqual` and :meth:`~unittest."
"TestCase.assertTupleEqual` compare the specified types and explain any "
"differences without necessarily printing their full values; these methods "
"are now used by default when comparing lists and tuples using :meth:"
"`~unittest.TestCase.assertEqual`. More generally, :meth:`~unittest.TestCase."
"assertSequenceEqual` compares two sequences and can optionally check whether "
"both sequences are of a particular type."
msgstr ""
"Аналогично, :meth:`~unittest.TestCase.assertListEqual` и :meth:`~unittest."
"TestCase.assertTupleEqual` сравнивают указанные типы и объясняют любые "
"различия, не обязательно выводя их полные значения; эти методы теперь "
"используются по умолчанию при сравнении списков и кортежей с помощью :meth:"
"`~unittest.TestCase.assertEqual`. В более общем смысле :meth:`~unittest."
"TestCase.assertSequenceEqual` сравнивает две последовательности и может "
"дополнительно проверить, относятся ли обе последовательности к определенному "
"типу."

#: ../../whatsnew/2.7.rst:1964
msgid ""
":meth:`~unittest.TestCase.assertDictEqual` compares two dictionaries and "
"reports the differences; it's now used by default when you compare two "
"dictionaries using :meth:`~unittest.TestCase.assertEqual`.  :meth:`~unittest."
"TestCase.assertDictContainsSubset` checks whether all of the key/value pairs "
"in *first* are found in *second*."
msgstr ""

#: ../../whatsnew/2.7.rst:1969
msgid ""
":meth:`~unittest.TestCase.assertAlmostEqual` and :meth:`~unittest.TestCase."
"assertNotAlmostEqual` test whether *first* and *second* are approximately "
"equal.  This method can either round their difference to an optionally "
"specified number of *places* (the default is 7) and compare it to zero, or "
"require the difference to be smaller than a supplied *delta* value."
msgstr ""
":meth:`~unittest.TestCase.assertAlmostEqual` и :meth:`~unittest.TestCase."
"assertNotAlmostEqual` проверяют, примерно ли равны *первый* и *секундный*. "
"Этот метод может либо округлить разницу до необязательно указанного "
"количества *мест* (по умолчанию — 7) и сравнить ее с нулем, либо "
"потребовать, чтобы разница была меньше, чем предоставленное значение "
"*дельта*."

#: ../../whatsnew/2.7.rst:1975
msgid ""
":meth:`~unittest.TestLoader.loadTestsFromName` properly honors the :attr:"
"`~unittest.TestLoader.suiteClass` attribute of the :class:`~unittest."
"TestLoader`. (Fixed by Mark Roddy; :issue:`6866`.)"
msgstr ""
":meth:`~unittest.TestLoader.loadTestsFromName` правильно учитывает атрибут :"
"attr:`~unittest.TestLoader.suiteClass` :class:`~unittest.TestLoader`. "
"(Исправлено Марком Родди; :issue:`6866`.)"

#: ../../whatsnew/2.7.rst:1979
msgid ""
"A new hook lets you extend the :meth:`~unittest.TestCase.assertEqual` method "
"to handle new data types.  The :meth:`~unittest.TestCase."
"addTypeEqualityFunc` method takes a type object and a function. The function "
"will be used when both of the objects being compared are of the specified "
"type.  This function should compare the two objects and raise an exception "
"if they don't match; it's a good idea for the function to provide additional "
"information about why the two objects aren't matching, much as the new "
"sequence comparison methods do."
msgstr ""
"Новый хук позволяет расширить метод :meth:`~unittest.TestCase.assertEqual` "
"для обработки новых типов данных. Метод :meth:`~unittest.TestCase."
"addTypeEqualityFunc` принимает объект типа и функцию. Функция будет "
"использоваться, когда оба сравниваемых объекта относятся к указанному типу. "
"Эта функция должна сравнить два объекта и вызвать исключение, если они не "
"совпадают; Было бы неплохо, если бы функция предоставила дополнительную "
"информацию о том, почему два объекта не совпадают, подобно тому, как это "
"делают новые методы сравнения последовательностей."

#: ../../whatsnew/2.7.rst:1988
msgid ""
":func:`unittest.main` now takes an optional ``exit`` argument.  If false, :"
"func:`~unittest.main` doesn't call :func:`sys.exit`, allowing :func:"
"`~unittest.main` to be used from the interactive interpreter. (Contributed "
"by J. Pablo Fernández; :issue:`3379`.)"
msgstr ""
":func:`unittest.main` теперь принимает необязательный аргумент ``exit``. "
"Если false, :func:`~unittest.main` не вызывает :func:`sys.exit`, что "
"позволяет использовать :func:`~unittest.main` из интерактивного "
"интерпретатора. (Предоставлено Х. Пабло Фернандесом; :issue:`3379`.)"

#: ../../whatsnew/2.7.rst:1993
msgid ""
":class:`~unittest.TestResult` has new :meth:`~unittest.TestResult."
"startTestRun` and :meth:`~unittest.TestResult.stopTestRun` methods that are "
"called immediately before and after a test run.  (Contributed by Robert "
"Collins; :issue:`5728`.)"
msgstr ""
":class:`~unittest.TestResult` имеет новые методы :meth:`~unittest.TestResult."
"startTestRun` и :meth:`~unittest.TestResult.stopTestRun`, которые вызываются "
"непосредственно до и после запуска теста. (Предоставлено Робертом "
"Коллинзом; :issue:`5728`.)"

#: ../../whatsnew/2.7.rst:1997
msgid ""
"With all these changes, the :file:`unittest.py` was becoming awkwardly "
"large, so the module was turned into a package and the code split into "
"several files (by Benjamin Peterson).  This doesn't affect how the module is "
"imported or used."
msgstr ""
"Со всеми этими изменениями файл :file:`unittest.py` становился неуклюже "
"большим, поэтому модуль был превращен в пакет, а код разделен на несколько "
"файлов (Бенджамин Петерсон). Это не влияет на то, как модуль импортируется "
"или используется."

#: ../../whatsnew/2.7.rst:2005
msgid ""
"https://web.archive.org/web/20210619163128/http://www.voidspace.org.uk/"
"python/articles/unittest2.shtml"
msgstr ""
"https://web.archive.org/web/20210619163128/http://www.voidspace.org.uk/"
"python/articles/unittest2.shtml"

#: ../../whatsnew/2.7.rst:2005
msgid ""
"Describes the new features, how to use them, and the rationale for various "
"design decisions.  (By Michael Foord.)"
msgstr ""
"Описывает новые функции, способы их использования и обоснование различных "
"дизайнерских решений. (Майкл Фурд.)"

#: ../../whatsnew/2.7.rst:2011
msgid "Updated module: ElementTree 1.3"
msgstr "Обновлен модуль: ElementTree 1.3."

#: ../../whatsnew/2.7.rst:2013
msgid ""
"The version of the ElementTree library included with Python was updated to "
"version 1.3.  Some of the new features are:"
msgstr ""
"Версия библиотеки ElementTree, входящая в состав Python, была обновлена ​​до "
"версии 1.3. Некоторые из новых функций:"

#: ../../whatsnew/2.7.rst:2016
msgid ""
"The various parsing functions now take a *parser* keyword argument giving "
"an :class:`~xml.etree.ElementTree.XMLParser` instance that will be used.  "
"This makes it possible to override the file's internal encoding::"
msgstr ""
"Различные функции синтаксического анализа теперь принимают аргумент "
"ключевого слова *parser*, дающий экземпляр :class:`~xml.etree.ElementTree."
"XMLParser`, который будет использоваться. Это позволяет переопределить "
"внутреннюю кодировку файла::"

#: ../../whatsnew/2.7.rst:2023
msgid ""
"Errors in parsing XML now raise a :exc:`ParseError` exception, whose "
"instances have a :attr:`position` attribute containing a (*line*, *column*) "
"tuple giving the location of the problem."
msgstr ""

#: ../../whatsnew/2.7.rst:2027
msgid ""
"ElementTree's code for converting trees to a string has been significantly "
"reworked, making it roughly twice as fast in many cases.  The :meth:"
"`ElementTree.write() <xml.etree.ElementTree.ElementTree.write>` and :meth:"
"`Element.write` methods now have a *method* parameter that can be "
"\"xml\" (the default), \"html\", or \"text\".  HTML mode will output empty "
"elements as ``<empty></empty>`` instead of ``<empty/>``, and text mode will "
"skip over elements and only output the text chunks.  If you set the :attr:"
"`tag` attribute of an element to ``None`` but leave its children in place, "
"the element will be omitted when the tree is written out, so you don't need "
"to do more extensive rearrangement to remove a single element."
msgstr ""

#: ../../whatsnew/2.7.rst:2039
msgid ""
"Namespace handling has also been improved.  All ``xmlns:<whatever>`` "
"declarations are now output on the root element, not scattered throughout "
"the resulting XML.  You can set the default namespace for a tree by setting "
"the :attr:`default_namespace` attribute and can register new prefixes with :"
"meth:`~xml.etree.ElementTree.register_namespace`.  In XML mode, you can use "
"the true/false *xml_declaration* parameter to suppress the XML declaration."
msgstr ""
"Обработка пространства имен также была улучшена. Все объявления ``xmlns:"
"<whatever>`` теперь выводятся в корневом элементе, а не разбросаны по всему "
"результирующему XML. Вы можете установить пространство имен по умолчанию для "
"дерева, установив атрибут :attr:`default_namespace`, и зарегистрировать "
"новые префиксы с помощью :meth:`~xml.etree.ElementTree.register_namespace`. "
"В режиме XML вы можете использовать параметр true/false *xml_declaration* "
"для подавления объявления XML."

#: ../../whatsnew/2.7.rst:2047
msgid ""
"New :class:`~xml.etree.ElementTree.Element` method: :meth:`~xml.etree."
"ElementTree.Element.extend` appends the items from a sequence to the "
"element's children.  Elements themselves behave like sequences, so it's easy "
"to move children from one element to another::"
msgstr ""
"Новый метод :class:`~xml.etree.ElementTree.Element`: :meth:`~xml.etree."
"ElementTree.Element.extend` добавляет элементы из последовательности к "
"дочерним элементам. Сами элементы ведут себя как последовательности, поэтому "
"дочерние элементы легко перемещать от одного элемента к другому:"

#: ../../whatsnew/2.7.rst:2064
msgid ""
"New :class:`Element` method: :meth:`~xml.etree.ElementTree.Element.iter` "
"yields the children of the element as a generator.  It's also possible to "
"write ``for child in elem:`` to loop over an element's children.  The "
"existing method :meth:`getiterator` is now deprecated, as is :meth:"
"`getchildren` which constructs and returns a list of children."
msgstr ""

#: ../../whatsnew/2.7.rst:2071
msgid ""
"New :class:`Element` method: :meth:`~xml.etree.ElementTree.Element.itertext` "
"yields all chunks of text that are descendants of the element.  For example::"
msgstr ""

#: ../../whatsnew/2.7.rst:2082
msgid ""
"Deprecated: using an element as a Boolean (i.e., ``if elem:``) would return "
"true if the element had any children, or false if there were no children.  "
"This behaviour is confusing -- ``None`` is false, but so is a childless "
"element? -- so it will now trigger a :exc:`FutureWarning`.  In your code, "
"you should be explicit: write ``len(elem) != 0`` if you're interested in the "
"number of children, or ``elem is not None``."
msgstr ""
"Устарело: использование элемента в качестве логического значения (т. е. ``if "
"elem:``) вернет true, если у элемента есть дочерние элементы, или false, "
"если дочерних элементов нет. Такое поведение сбивает с толку: ``None`` "
"является ложным, но также и бездетный элемент? -- поэтому теперь он вызовет :"
"exc:`FutureWarning`. В вашем коде вы должны указать явно: напишите "
"``len(elem) != 0``, если вас интересует количество дочерних элементов, или "
"``elem is not None``."

#: ../../whatsnew/2.7.rst:2090
msgid ""
"Fredrik Lundh develops ElementTree and produced the 1.3 version; you can "
"read his article describing 1.3 at https://web.archive.org/"
"web/20200703234532/http://effbot.org/zone/elementtree-13-intro.htm. Florent "
"Xicluna updated the version included with Python, after discussions on "
"python-dev and in :issue:`6472`.)"
msgstr ""
"Фредрик Лунд разработал ElementTree и выпустил версию 1.3; вы можете "
"прочитать его статью, описывающую 1.3, по адресу https://web.archive.org/"
"web/20200703234532/http://effbot.org/zone/elementtree-13-intro.htm. Флоран "
"Ксиклюна обновил версию, входящую в состав Python, после обсуждений на "
"python-dev и в :issue:`6472`.)"

#: ../../whatsnew/2.7.rst:2100
msgid "Build and C API Changes"
msgstr "Изменения API сборки и C"

#: ../../whatsnew/2.7.rst:2102
msgid "Changes to Python's build process and to the C API include:"
msgstr "Изменения в процессе сборки Python и C API включают в себя:"

#: ../../whatsnew/2.7.rst:2104
msgid ""
"The latest release of the GNU Debugger, GDB 7, can be `scripted using Python "
"<https://sourceware.org/gdb/current/onlinedocs/gdb/Python.html>`__. When you "
"begin debugging an executable program P, GDB will look for a file named ``P-"
"gdb.py`` and automatically read it.  Dave Malcolm contributed a :file:"
"`python-gdb.py` that adds a number of commands useful when debugging Python "
"itself.  For example, ``py-up`` and ``py-down`` go up or down one Python "
"stack frame, which usually corresponds to several C stack frames.  ``py-"
"print`` prints the value of a Python variable, and ``py-bt`` prints the "
"Python stack trace.  (Added as a result of :issue:`8032`.)"
msgstr ""

#: ../../whatsnew/2.7.rst:2116
msgid ""
"If you use the :file:`.gdbinit` file provided with Python, the \"pyo\" macro "
"in the 2.7 version now works correctly when the thread being debugged "
"doesn't hold the GIL; the macro now acquires it before printing. "
"(Contributed by Victor Stinner; :issue:`3632`.)"
msgstr ""
"Если вы используете файл :file:`.gdbinit`, поставляемый с Python, макрос "
"«pyo» в версии 2.7 теперь работает правильно, когда отлаживаемый поток не "
"содержит GIL; макрос теперь получает его перед печатью. (Предоставлено "
"Виктором Стиннером; :issue:`3632`.)"

#: ../../whatsnew/2.7.rst:2121
msgid ""
":c:func:`Py_AddPendingCall` is now thread-safe, letting any worker thread "
"submit notifications to the main Python thread.  This is particularly useful "
"for asynchronous IO operations. (Contributed by Kristján Valur Jónsson; :"
"issue:`4293`.)"
msgstr ""
":c:func:`Py_AddPendingCall` теперь является потокобезопасным, позволяя "
"любому рабочему потоку отправлять уведомления в основной поток Python. Это "
"особенно полезно для асинхронных операций ввода-вывода. (Предоставлено "
"Кристьяном Валюром Йонссоном; :issue:`4293`.)"

#: ../../whatsnew/2.7.rst:2126
msgid ""
"New function: :c:func:`PyCode_NewEmpty` creates an empty code object; only "
"the filename, function name, and first line number are required. This is "
"useful for extension modules that are attempting to construct a more useful "
"traceback stack.  Previously such extensions needed to call :c:func:"
"`PyCode_New`, which had many more arguments.  (Added by Jeffrey Yasskin.)"
msgstr ""

#: ../../whatsnew/2.7.rst:2133
msgid ""
"New function: :c:func:`PyErr_NewExceptionWithDoc` creates a new exception "
"class, just as the existing :c:func:`PyErr_NewException` does, but takes an "
"extra ``char *`` argument containing the docstring for the new exception "
"class.  (Added by 'lekma' on the Python bug tracker; :issue:`7033`.)"
msgstr ""
"Новая функция: :c:func:`PyErr_NewExceptionWithDoc` создает новый класс "
"исключений, как и существующая :c:func:`PyErr_NewException`, но принимает "
"дополнительный аргумент ``char *``, содержащий строку документации для "
"нового класса исключений. . (Добавлено пользователем «lekma» в систему "
"отслеживания ошибок Python; :issue:`7033`.)"

#: ../../whatsnew/2.7.rst:2139
msgid ""
"New function: :c:func:`PyFrame_GetLineNumber` takes a frame object and "
"returns the line number that the frame is currently executing. Previously "
"code would need to get the index of the bytecode instruction currently "
"executing, and then look up the line number corresponding to that address.  "
"(Added by Jeffrey Yasskin.)"
msgstr ""
"Новая функция: :c:func:`PyFrame_GetLineNumber` принимает объект кадра и "
"возвращает номер строки, которую кадр выполняет в данный момент. Раньше коду "
"нужно было получить индекс исполняемой в данный момент инструкции байт-кода, "
"а затем найти номер строки, соответствующий этому адресу. (Добавлено Джеффри "
"Яскином.)"

#: ../../whatsnew/2.7.rst:2145
msgid ""
"New functions: :c:func:`PyLong_AsLongAndOverflow` and :c:func:"
"`PyLong_AsLongLongAndOverflow`  approximates a Python long integer as a C :c:"
"expr:`long` or :c:expr:`long long`. If the number is too large to fit into "
"the output type, an *overflow* flag is set and returned to the caller. "
"(Contributed by Case Van Horsen; :issue:`7528` and :issue:`7767`.)"
msgstr ""
"Новые функции: :c:func:`PyLong_AsLongAndOverflow` и :c:func:"
"`PyLong_AsLongLongAndOverflow` аппроксимируют длинное целое число Python как "
"C :c:expr:`long` или :c:expr:`long long`. Если число слишком велико, чтобы "
"соответствовать типу вывода, устанавливается флаг *overflow*, который "
"возвращается вызывающей стороне. (Предоставлено Кейсом Ван Хорсеном; :issue:"
"`7528` и :issue:`7767`.)"

#: ../../whatsnew/2.7.rst:2152
msgid ""
"New function: stemming from the rewrite of string-to-float conversion, a "
"new :c:func:`PyOS_string_to_double` function was added.  The old :c:func:"
"`PyOS_ascii_strtod` and :c:func:`PyOS_ascii_atof` functions are now "
"deprecated."
msgstr ""

#: ../../whatsnew/2.7.rst:2157
msgid ""
"New function: :c:func:`PySys_SetArgvEx` sets the value of ``sys.argv`` and "
"can optionally update ``sys.path`` to include the directory containing the "
"script named by ``sys.argv[0]`` depending on the value of an *updatepath* "
"parameter."
msgstr ""
"Новая функция: :c:func:`PySys_SetArgvEx` устанавливает значение ``sys.argv`` "
"и может дополнительно обновить ``sys.path``, включив в него каталог, "
"содержащий скрипт, названный ``sys.argv[0] `` в зависимости от значения "
"параметра *updatepath*."

#: ../../whatsnew/2.7.rst:2162
msgid ""
"This function was added to close a security hole for applications that embed "
"Python.  The old function, :c:func:`PySys_SetArgv`, would always update "
"``sys.path``, and sometimes it would add the current directory.  This meant "
"that, if you ran an application embedding Python in a directory controlled "
"by someone else, attackers could put a Trojan-horse module in the directory "
"(say, a file named :file:`os.py`) that your application would then import "
"and run."
msgstr ""
"Эта функция была добавлена, чтобы закрыть дыру в безопасности для "
"приложений, встраивающих Python. Старая функция :c:func:`PySys_SetArgv` "
"всегда обновляла ``sys.path``, а иногда добавляла текущий каталог. Это "
"означало, что если вы запустили приложение, встраивающее Python, в каталог, "
"контролируемый кем-то другим, злоумышленники могли поместить в каталог "
"модуль «троянского коня» (скажем, файл с именем :file:`os.py`), который "
"затем будет использовать ваше приложение. импортируйте и запустите."

#: ../../whatsnew/2.7.rst:2170
msgid ""
"If you maintain a C/C++ application that embeds Python, check whether you're "
"calling :c:func:`PySys_SetArgv` and carefully consider whether the "
"application should be using :c:func:`PySys_SetArgvEx` with *updatepath* set "
"to false."
msgstr ""
"Если вы поддерживаете приложение C/C++ со встроенным Python, проверьте, "
"вызываете ли вы :c:func:`PySys_SetArgv`, и внимательно подумайте, должно ли "
"приложение использовать :c:func:`PySys_SetArgvEx` с параметром *updatepath*, "
"установленным в false. ."

#: ../../whatsnew/2.7.rst:2175
msgid ""
"Security issue reported as `CVE-2008-5983 <https://cve.mitre.org/cgi-bin/"
"cvename.cgi?name=CVE-2008-5983>`_; discussed in :issue:`5753`, and fixed by "
"Antoine Pitrou."
msgstr ""

#: ../../whatsnew/2.7.rst:2179
msgid ""
"New macros: the Python header files now define the following macros: :c:"
"macro:`Py_ISALNUM`, :c:macro:`Py_ISALPHA`, :c:macro:`Py_ISDIGIT`, :c:macro:"
"`Py_ISLOWER`, :c:macro:`Py_ISSPACE`, :c:macro:`Py_ISUPPER`, :c:macro:"
"`Py_ISXDIGIT`, :c:macro:`Py_TOLOWER`, and :c:macro:`Py_TOUPPER`. All of "
"these functions are analogous to the C standard macros for classifying "
"characters, but ignore the current locale setting, because in several places "
"Python needs to analyze characters in a locale-independent way.  (Added by "
"Eric Smith; :issue:`5793`.)"
msgstr ""
"Новые макросы: файлы заголовков Python теперь определяют следующие макросы: :"
"c:macro:`Py_ISALNUM`, :c:macro:`Py_ISALPHA`, :c:macro:`Py_ISDIGIT`, :c:macro:"
"`Py_ISLOWER`, : c:macro:`Py_ISSPACE`, :c:macro:`Py_ISUPPER`, :c:macro:"
"`Py_ISXDIGIT`, :c:macro:`Py_TOLOWER` и :c:macro:`Py_TOUPPER`. Все эти "
"функции аналогичны стандартным макросам C для классификации символов, но "
"игнорируют текущие настройки локали, поскольку в некоторых местах Python "
"необходимо анализировать символы независимым от локали способом. (Добавлено "
"Эриком Смитом; :issue:`5793`.)"

#: ../../whatsnew/2.7.rst:2197
msgid ""
"Removed function: :c:macro:`PyEval_CallObject` is now only available as a "
"macro.  A function version was being kept around to preserve ABI linking "
"compatibility, but that was in 1997; it can certainly be deleted by now.  "
"(Removed by Antoine Pitrou; :issue:`8276`.)"
msgstr ""

#: ../../whatsnew/2.7.rst:2202
msgid ""
"New format codes: the :c:func:`PyFormat_FromString`, :c:func:"
"`PyFormat_FromStringV`, and :c:func:`PyErr_Format` functions now accept "
"``%lld`` and ``%llu`` format codes for displaying C's :c:expr:`long long` "
"types. (Contributed by Mark Dickinson; :issue:`7228`.)"
msgstr ""

#: ../../whatsnew/2.7.rst:2208
msgid ""
"The complicated interaction between threads and process forking has been "
"changed.  Previously, the child process created by :func:`os.fork` might "
"fail because the child is created with only a single thread running, the "
"thread performing the :func:`os.fork`. If other threads were holding a lock, "
"such as Python's import lock, when the fork was performed, the lock would "
"still be marked as \"held\" in the new process.  But in the child process "
"nothing would ever release the lock, since the other threads weren't "
"replicated, and the child process would no longer be able to perform imports."
msgstr ""
"Изменено сложное взаимодействие между потоками и разветвлением процессов. "
"Раньше дочерний процесс, созданный :func:`os.fork`, мог завершиться "
"неудачей, поскольку дочерний процесс создавался только с одним работающим "
"потоком, исполняющим :func:`os.fork`. Если бы другие потоки удерживали "
"блокировку, например блокировку импорта Python, при выполнении вилки "
"блокировка все равно была бы помечена как «удерживаемая» в новом процессе. "
"Но в дочернем процессе ничто никогда не сможет снять блокировку, поскольку "
"другие потоки не реплицируются, и дочерний процесс больше не сможет "
"выполнять импорт."

#: ../../whatsnew/2.7.rst:2218
msgid ""
"Python 2.7 acquires the import lock before performing an :func:`os.fork`, "
"and will also clean up any locks created using the :mod:`threading` module.  "
"C extension modules that have internal locks, or that call :c:func:`fork()` "
"themselves, will not benefit from this clean-up."
msgstr ""
"Python 2.7 получает блокировку импорта перед выполнением :func:`os.fork`, а "
"также очищает все блокировки, созданные с помощью модуля :mod:`threading`. "
"Модули расширения C, имеющие внутренние блокировки или сами вызывающие :c:"
"func:`fork()`, не выиграют от этой очистки."

#: ../../whatsnew/2.7.rst:2224
msgid "(Fixed by Thomas Wouters; :issue:`1590864`.)"
msgstr "(Исправлено Томасом Воутерсом; :issue:`1590864`.)"

#: ../../whatsnew/2.7.rst:2226
msgid ""
"The :c:func:`Py_Finalize` function now calls the internal :func:`threading."
"_shutdown` function; this prevents some exceptions from being raised when an "
"interpreter shuts down. (Patch by Adam Olsen; :issue:`1722344`.)"
msgstr ""

#: ../../whatsnew/2.7.rst:2231
msgid ""
"When using the :c:type:`PyMemberDef` structure to define attributes of a "
"type, Python will no longer let you try to delete or set a :const:"
"`T_STRING_INPLACE` attribute."
msgstr ""

#: ../../whatsnew/2.7.rst:2237
msgid ""
"Global symbols defined by the :mod:`ctypes` module are now prefixed with "
"``Py``, or with ``_ctypes``.  (Implemented by Thomas Heller; :issue:`3102`.)"
msgstr ""
"Глобальные символы, определенные модулем :mod:`ctypes`, теперь имеют префикс "
"``Py`` или ``_ctypes``. (Реализовано Томасом Хеллером; :issue:`3102`.)"

#: ../../whatsnew/2.7.rst:2241
msgid ""
"New configure option: the :option:`!--with-system-expat` switch allows "
"building the :mod:`pyexpat` module to use the system Expat library. "
"(Contributed by Arfrever Frehtes Taifersar Arahesis; :issue:`7609`.)"
msgstr ""

#: ../../whatsnew/2.7.rst:2245
msgid ""
"New configure option: the :option:`!--with-valgrind` option will now disable "
"the pymalloc allocator, which is difficult for the Valgrind memory-error "
"detector to analyze correctly. Valgrind will therefore be better at "
"detecting memory leaks and overruns. (Contributed by James Henstridge; :"
"issue:`2422`.)"
msgstr ""
"Новая опция конфигурации: опция :option:`!--with-valgrind` теперь отключает "
"распределитель pymalloc, который трудно правильно проанализировать детектору "
"ошибок памяти Valgrind. Таким образом, Valgrind будет лучше обнаруживать "
"утечки и перерасходы памяти. (Предоставлено Джеймсом Хенстриджем; :issue:"
"`2422`.)"

#: ../../whatsnew/2.7.rst:2252
msgid ""
"New configure option: you can now supply an empty string to :option:`!--with-"
"dbmliborder=` in order to disable all of the various DBM modules.  (Added by "
"Arfrever Frehtes Taifersar Arahesis; :issue:`6491`.)"
msgstr ""
"Новая опция конфигурации: теперь вы можете указать пустую строку в :option:"
"`!--with-dbmliborder=`, чтобы отключить все различные модули DBM. (Добавил "
"Арфревер Фрехтес Тайферсар Арахесис; :issue:`6491`.)"

#: ../../whatsnew/2.7.rst:2257
msgid ""
"The :program:`configure` script now checks for floating-point rounding bugs "
"on certain 32-bit Intel chips and defines a :c:macro:`X87_DOUBLE_ROUNDING` "
"preprocessor definition.  No code currently uses this definition, but it's "
"available if anyone wishes to use it. (Added by Mark Dickinson; :issue:"
"`2937`.)"
msgstr ""
"Скрипт :program:`configure` теперь проверяет наличие ошибок округления с "
"плавающей запятой на некоторых 32-битных чипах Intel и определяет "
"определение препроцессора :c:macro:`X87_DOUBLE_ROUNDING`. Ни один код в "
"настоящее время не использует это определение, но оно доступно, если кто-то "
"захочет его использовать. (Добавлено Марком Дикинсоном; :issue:`2937`.)"

#: ../../whatsnew/2.7.rst:2263
msgid ""
":program:`configure` also now sets a :envvar:`LDCXXSHARED` Makefile variable "
"for supporting C++ linking.  (Contributed by Arfrever Frehtes Taifersar "
"Arahesis; :issue:`1222585`.)"
msgstr ""
":program:`configure` также теперь устанавливает переменную Makefile :envvar:"
"`LDCXXSHARED` для поддержки компоновки C++. (Предоставлено Арфревером "
"Фрехтесом Тайферсаром Арахесисом; :issue:`1222585`.)"

#: ../../whatsnew/2.7.rst:2267
msgid ""
"The build process now creates the necessary files for pkg-config support.  "
"(Contributed by Clinton Roy; :issue:`3585`.)"
msgstr ""
"Теперь в процессе сборки создаются необходимые файлы для поддержки pkg-"
"config. (Предоставлено Клинтоном Роем; :issue:`3585`.)"

#: ../../whatsnew/2.7.rst:2270
msgid ""
"The build process now supports Subversion 1.7.  (Contributed by Arfrever "
"Frehtes Taifersar Arahesis; :issue:`6094`.)"
msgstr ""
"Процесс сборки теперь поддерживает Subversion 1.7. (Предоставлено Арфревером "
"Фрехтесом Тайферсаром Арахесисом; :issue:`6094`.)"

#: ../../whatsnew/2.7.rst:2277
msgid "Capsules"
msgstr "Оболочки"

#: ../../whatsnew/2.7.rst:2279
msgid ""
"Python 3.1 adds a new C datatype, :c:type:`PyCapsule`, for providing a C API "
"to an extension module.  A capsule is essentially the holder of a C ``void "
"*`` pointer, and is made available as a module attribute; for example, the :"
"mod:`socket` module's API is exposed as ``socket.CAPI``, and :mod:"
"`unicodedata` exposes ``ucnhash_CAPI``.  Other extensions can import the "
"module, access its dictionary to get the capsule object, and then get the "
"``void *`` pointer, which will usually point to an array of pointers to the "
"module's various API functions."
msgstr ""
"В Python 3.1 добавлен новый тип данных C, :c:type:`PyCapsule`, для "
"предоставления C API модулю расширения. Капсула по существу является "
"держателем указателя C ``void *`` и доступна как атрибут модуля; например, "
"API модуля :mod:`socket` представлен как ``socket.CAPI``, а :mod:"
"`unicodedata` предоставляет ``ucnhash_CAPI``. Другие расширения могут "
"импортировать модуль, получить доступ к его словарю для получения объекта "
"капсулы, а затем получить указатель ``void *``, который обычно указывает на "
"массив указателей на различные функции API модуля."

#: ../../whatsnew/2.7.rst:2288
msgid ""
"There is an existing data type already used for this, :c:type:`PyCObject`, "
"but it doesn't provide type safety.  Evil code written in pure Python could "
"cause a segmentation fault by taking a :c:type:`PyCObject` from module A and "
"somehow substituting it for the :c:type:`PyCObject` in module B.   Capsules "
"know their own name, and getting the pointer requires providing the name:"
msgstr ""

#: ../../whatsnew/2.7.rst:2306
msgid ""
"You are assured that ``vtable`` points to whatever you're expecting. If a "
"different capsule was passed in, :c:func:`PyCapsule_IsValid` would detect "
"the mismatched name and return false.  Refer to :ref:`using-capsules` for "
"more information on using these objects."
msgstr ""
"Вы можете быть уверены, что ``vtable`` указывает на то, что вы ожидаете. "
"Если была передана другая капсула, :c:func:`PyCapsule_IsValid` обнаружит "
"несовпадающее имя и вернет false. Обратитесь к :ref:`using-capsules` для "
"получения дополнительной информации об использовании этих объектов."

#: ../../whatsnew/2.7.rst:2311
msgid ""
"Python 2.7 now uses capsules internally to provide various extension-module "
"APIs, but the :c:func:`PyCObject_AsVoidPtr` was modified to handle capsules, "
"preserving compile-time compatibility with the :c:type:`CObject` interface.  "
"Use of :c:func:`PyCObject_AsVoidPtr` will signal a :exc:"
"`PendingDeprecationWarning`, which is silent by default."
msgstr ""

#: ../../whatsnew/2.7.rst:2318
msgid ""
"Implemented in Python 3.1 and backported to 2.7 by Larry Hastings; discussed "
"in :issue:`5630`."
msgstr ""
"Реализовано в Python 3.1 и перенесено в версию 2.7 Ларри Гастингсом; "
"обсуждалось в :issue:`5630`."

#: ../../whatsnew/2.7.rst:2325
msgid "Port-Specific Changes: Windows"
msgstr "Изменения для конкретного порта: Windows"

#: ../../whatsnew/2.7.rst:2327
msgid ""
"The :mod:`msvcrt` module now contains some constants from the :file:"
"`crtassem.h` header file: :data:`CRT_ASSEMBLY_VERSION`, :data:"
"`VC_ASSEMBLY_PUBLICKEYTOKEN`, and :data:`LIBRARIES_ASSEMBLY_NAME_PREFIX`. "
"(Contributed by David Cournapeau; :issue:`4365`.)"
msgstr ""

#: ../../whatsnew/2.7.rst:2334
msgid ""
"The :mod:`_winreg` module for accessing the registry now implements the :"
"func:`~_winreg.CreateKeyEx` and :func:`~_winreg.DeleteKeyEx` functions, "
"extended versions of previously supported functions that take several extra "
"arguments.  The :func:`~_winreg.DisableReflectionKey`, :func:`~_winreg."
"EnableReflectionKey`, and :func:`~_winreg.QueryReflectionKey` were also "
"tested and documented. (Implemented by Brian Curtin: :issue:`7347`.)"
msgstr ""

#: ../../whatsnew/2.7.rst:2342
msgid ""
"The new :c:func:`_beginthreadex` API is used to start threads, and the "
"native thread-local storage functions are now used. (Contributed by Kristján "
"Valur Jónsson; :issue:`3582`.)"
msgstr ""

#: ../../whatsnew/2.7.rst:2346
msgid ""
"The :func:`os.kill` function now works on Windows.  The signal value can be "
"the constants :const:`CTRL_C_EVENT`, :const:`CTRL_BREAK_EVENT`, or any "
"integer.  The first two constants will send :kbd:`Control-C` and :kbd:"
"`Control-Break` keystroke events to subprocesses; any other value will use "
"the :c:func:`TerminateProcess` API.  (Contributed by Miki Tebeka; :issue:"
"`1220212`.)"
msgstr ""

#: ../../whatsnew/2.7.rst:2353
msgid ""
"The :func:`os.listdir` function now correctly fails for an empty path.  "
"(Fixed by Hirokazu Yamamoto; :issue:`5913`.)"
msgstr ""
"Функция :func:`os.listdir` теперь корректно завершается с ошибкой при пустом "
"пути. (Исправлено Хирокадзу Ямамото; :issue:`5913`.)"

#: ../../whatsnew/2.7.rst:2356
msgid ""
"The :mod:`mimelib` module will now read the MIME database from the Windows "
"registry when initializing. (Patch by Gabriel Genellina; :issue:`4969`.)"
msgstr ""

#: ../../whatsnew/2.7.rst:2363
msgid "Port-Specific Changes: Mac OS X"
msgstr "Изменения, специфичные для порта: Mac OS X"

#: ../../whatsnew/2.7.rst:2365
msgid ""
"The path ``/Library/Python/2.7/site-packages`` is now appended to ``sys."
"path``, in order to share added packages between the system installation and "
"a user-installed copy of the same version. (Changed by Ronald Oussoren; :"
"issue:`4865`.)"
msgstr ""
"Путь ``/Library/Python/2.7/site-packages`` теперь добавлен к ``sys.path``, "
"чтобы совместно использовать добавленные пакеты между установкой системы и "
"установленной пользователем копией той же версии. (Изменено Рональдом "
"Уссореном; :issue:`4865`.)"

#: ../../whatsnew/2.7.rst:2372
msgid ""
"As of 2.7.13, this change was removed. ``/Library/Python/2.7/site-"
"packages``, the site-packages directory used by the Apple-supplied system "
"Python 2.7 is no longer appended to ``sys.path`` for user-installed Pythons "
"such as from the python.org installers.  As of macOS 10.12, Apple changed "
"how the system site-packages directory is configured, which could cause "
"installation of pip components, like setuptools, to fail.  Packages "
"installed for the system Python will no longer be shared with user-installed "
"Pythons. (:issue:`28440`)"
msgstr ""
"Начиная с версии 2.7.13 это изменение было удалено. ``/Library/Python/2.7/"
"site-packages``, каталог site-packages, используемый системой Python 2.7, "
"поставляемой Apple, больше не добавляется к ``sys.path`` для установленных "
"пользователем Python, например из установщики python.org. Начиная с macOS "
"10.12, Apple изменила настройку системного каталога site-packages, что могло "
"привести к сбою установки компонентов pip, таких как setuptools. Пакеты, "
"установленные для системного Python, больше не будут доступны для Python, "
"установленных пользователем. (:issue:`28440`)"

#: ../../whatsnew/2.7.rst:2383
msgid "Port-Specific Changes: FreeBSD"
msgstr "Изменения для конкретного порта: FreeBSD"

#: ../../whatsnew/2.7.rst:2385
msgid ""
"FreeBSD 7.1's :const:`SO_SETFIB` constant, used with :func:`~socket."
"getsockopt`/:func:`~socket.setsockopt` to select an alternate routing table, "
"is now available in the :mod:`socket` module.  (Added by Kyle VanderBeek; :"
"issue:`8235`.)"
msgstr ""

#: ../../whatsnew/2.7.rst:2391
msgid "Other Changes and Fixes"
msgstr "Другие изменения и исправления"

#: ../../whatsnew/2.7.rst:2393
msgid ""
"Two benchmark scripts, :file:`iobench` and :file:`ccbench`, were added to "
"the :file:`Tools` directory.  :file:`iobench` measures the speed of the "
"built-in file I/O objects returned by :func:`open` while performing various "
"operations, and :file:`ccbench` is a concurrency benchmark that tries to "
"measure computing throughput, thread switching latency, and IO processing "
"bandwidth when performing several tasks using a varying number of threads."
msgstr ""
"Два сценария тестирования, :file:`iobench` и :file:`ccbench`, были добавлены "
"в каталог :file:`Tools`. :file:`iobench` измеряет скорость встроенных "
"файловых объектов ввода-вывода, возвращаемых :func:`open` при выполнении "
"различных операций, а :file:`ccbench` — это тест параллелизма, который "
"пытается измерить пропускную способность вычислений. задержка переключения "
"потоков и пропускная способность обработки ввода-вывода при выполнении "
"нескольких задач с использованием различного количества потоков."

#: ../../whatsnew/2.7.rst:2401
msgid ""
"The :file:`Tools/i18n/msgfmt.py` script now understands plural forms in :"
"file:`.po` files.  (Fixed by Martin von Löwis; :issue:`5464`.)"
msgstr ""
"Скрипт :file:`Tools/i18n/msgfmt.py` теперь понимает формы множественного "
"числа в файлах :file:`.po`. (Исправлено Мартином фон Лёвисом; :issue:`5464`.)"

#: ../../whatsnew/2.7.rst:2405
msgid ""
"When importing a module from a :file:`.pyc` or :file:`.pyo` file with an "
"existing :file:`.py` counterpart, the :attr:`co_filename` attributes of the "
"resulting code objects are overwritten when the original filename is "
"obsolete.  This can happen if the file has been renamed, moved, or is "
"accessed through different paths.  (Patch by Ziga Seilnacht and Jean-Paul "
"Calderone; :issue:`1180193`.)"
msgstr ""

#: ../../whatsnew/2.7.rst:2412
msgid ""
"The :file:`regrtest.py` script now takes a :option:`!--randseed=` switch "
"that takes an integer that will be used as the random seed for the :option:"
"`!-r` option that executes tests in random order. The :option:`!-r` option "
"also reports the seed that was used (Added by Collin Winter.)"
msgstr ""
"Скрипт :file:`regrtest.py` теперь использует переключатель :option:`!--"
"randseed=`, который принимает целое число, которое будет использоваться в "
"качестве случайного начального числа для опции :option:`!-r`, выполняющей "
"тесты. в случайном порядке. Параметр :option:`!-r` также сообщает об "
"использованном семени (добавлено Коллином Уинтером)."

#: ../../whatsnew/2.7.rst:2418
msgid ""
"Another :file:`regrtest.py` switch is :option:`!-j`, which takes an integer "
"specifying how many tests run in parallel. This allows reducing the total "
"runtime on multi-core machines. This option is compatible with several other "
"options, including the :option:`!-R` switch which is known to produce long "
"runtimes. (Added by Antoine Pitrou, :issue:`6152`.)  This can also be used "
"with a new :option:`!-F` switch that runs selected tests in a loop until "
"they fail.  (Added by Antoine Pitrou; :issue:`7312`.)"
msgstr ""
"Другой ключ :file:`regrtest.py` — :option:`!-j`, который принимает целое "
"число, указывающее, сколько тестов выполняется параллельно. Это позволяет "
"сократить общее время работы на многоядерных машинах. Эта опция совместима с "
"несколькими другими опциями, включая переключатель :option:`!-R`, который, "
"как известно, приводит к длительному времени работы. (Добавлено Антуаном "
"Питру, :issue:`6152`.) Это также можно использовать с новым переключателем :"
"option:`!-F`, который запускает выбранные тесты в цикле до тех пор, пока они "
"не завершатся неудачей. (Добавлено Антуаном Питру; :issue:`7312`.)"

#: ../../whatsnew/2.7.rst:2427
msgid ""
"When executed as a script, the :file:`py_compile.py` module now accepts "
"``'-'`` as an argument, which will read standard input for the list of "
"filenames to be compiled.  (Contributed by Piotr Ożarowski; :issue:`8233`.)"
msgstr ""
"При выполнении как скрипт модуль :file:`py_compile.py` теперь принимает "
"``'-'`` в качестве аргумента, который будет считывать стандартный ввод для "
"получения списка имен файлов, подлежащих компиляции. (Предоставлено Петром "
"Ожаровским; :issue:`8233`.)"

#: ../../whatsnew/2.7.rst:2435
msgid "Porting to Python 2.7"
msgstr "Портирование на Python 2.7"

#: ../../whatsnew/2.7.rst:2437
msgid ""
"This section lists previously described changes and other bugfixes that may "
"require changes to your code:"
msgstr ""
"В этом разделе перечислены ранее описанные изменения и другие исправления "
"ошибок, которые могут потребовать внесения изменений в ваш код:"

#: ../../whatsnew/2.7.rst:2440
msgid ""
"The :func:`range` function processes its arguments more consistently; it "
"will now call :meth:`__int__` on non-float, non-integer arguments that are "
"supplied to it.  (Fixed by Alexander Belopolsky; :issue:`1533`.)"
msgstr ""

#: ../../whatsnew/2.7.rst:2445
msgid ""
"The string :meth:`format` method changed the default precision used for "
"floating-point and complex numbers from 6 decimal places to 12, which "
"matches the precision used by :func:`str`. (Changed by Eric Smith; :issue:"
"`5920`.)"
msgstr ""
"Строковый метод :meth:`format` изменил точность по умолчанию, используемую "
"для чисел с плавающей запятой и комплексных чисел, с 6 десятичных знаков на "
"12, что соответствует точности, используемой :func:`str`. (Изменено Эриком "
"Смитом; :issue:`5920`.)"

#: ../../whatsnew/2.7.rst:2450
msgid ""
"Because of an optimization for the :keyword:`with` statement, the special "
"methods :meth:`__enter__` and :meth:`__exit__` must belong to the object's "
"type, and cannot be directly attached to the object's instance.  This "
"affects new-style classes (derived from :class:`object`) and C extension "
"types.  (:issue:`6101`.)"
msgstr ""

#: ../../whatsnew/2.7.rst:2456
msgid ""
"Due to a bug in Python 2.6, the *exc_value* parameter to :meth:`__exit__` "
"methods was often the string representation of the exception, not an "
"instance.  This was fixed in 2.7, so *exc_value* will be an instance as "
"expected.  (Fixed by Florent Xicluna; :issue:`7853`.)"
msgstr ""

#: ../../whatsnew/2.7.rst:2466
msgid "In the standard library:"
msgstr "В стандартной библиотеке:"

#: ../../whatsnew/2.7.rst:2468
msgid ""
"Operations with :class:`~datetime.datetime` instances that resulted in a "
"year falling outside the supported range didn't always raise :exc:"
"`OverflowError`.  Such errors are now checked more carefully and will now "
"raise the exception. (Reported by Mark Leander, patch by Anand B. Pillai and "
"Alexander Belopolsky; :issue:`7150`.)"
msgstr ""
"Операции с экземплярами :class:`~datetime.datetime`, в результате которых "
"год выходит за пределы поддерживаемого диапазона, не всегда вызывали :exc:"
"`OverflowError`. Такие ошибки теперь проверяются более тщательно и вызывают "
"исключение. (Сообщил Марк Леандер, патч Ананда Б. Пиллая и Александра "
"Белопольского; :issue:`7150`.)"

#: ../../whatsnew/2.7.rst:2474
msgid ""
"When using :class:`~decimal.Decimal` instances with a string's :meth:"
"`format` method, the default alignment was previously left-alignment.  This "
"has been changed to right-alignment, which might change the output of your "
"programs. (Changed by Mark Dickinson; :issue:`6857`.)"
msgstr ""
"При использовании экземпляров :class:`~decimal.Decimal` с методом строки :"
"meth:`format` выравнивание по умолчанию ранее было выравниванием по левому "
"краю. Это было изменено на выравнивание по правому краю, что может изменить "
"вывод ваших программ. (Изменено Марком Дикинсоном; :issue:`6857`.)"

#: ../../whatsnew/2.7.rst:2480
msgid ""
"Comparisons involving a signaling NaN value (or ``sNAN``) now signal :const:"
"`~decimal.InvalidOperation` instead of silently returning a true or false "
"value depending on the comparison operator.  Quiet NaN values (or ``NaN``) "
"are now hashable.  (Fixed by Mark Dickinson; :issue:`7279`.)"
msgstr ""
"Сравнения, включающие сигнальное значение NaN (или sNAN), теперь "
"сигнализируют :const:`~decimal.InvalidOperation` вместо того, чтобы молча "
"возвращать истинное или ложное значение в зависимости от оператора "
"сравнения. Тихие значения NaN (или NaN) теперь можно хешировать. (Исправлено "
"Марком Дикинсоном; :issue:`7279`.)"

#: ../../whatsnew/2.7.rst:2492
msgid ""
"The :meth:`~StringIO.StringIO.readline` method of :class:`~StringIO."
"StringIO` objects now does nothing when a negative length is requested, as "
"other file-like objects do.  (:issue:`7348`)."
msgstr ""

#: ../../whatsnew/2.7.rst:2535
msgid "For C extensions:"
msgstr "Для расширений на языке C:"

#: ../../whatsnew/2.7.rst:2537
msgid ""
"C extensions that use integer format codes with the ``PyArg_Parse*`` family "
"of functions will now raise a :exc:`TypeError` exception instead of "
"triggering a :exc:`DeprecationWarning` (:issue:`5080`)."
msgstr ""
"Расширения C, использующие коды целочисленного формата с семейством функций "
"``PyArg_Parse*``, теперь будут вызывать исключение :exc:`TypeError` вместо "
"запуска :exc:`DeprecationWarning` (:issue:`5080`)."

#: ../../whatsnew/2.7.rst:2541
msgid ""
"Use the new :c:func:`PyOS_string_to_double` function instead of the old :c:"
"func:`PyOS_ascii_strtod` and :c:func:`PyOS_ascii_atof` functions, which are "
"now deprecated."
msgstr ""

#: ../../whatsnew/2.7.rst:2545
msgid "For applications that embed Python:"
msgstr "Для приложений, встраивающих Python:"

#: ../../whatsnew/2.7.rst:2547
msgid ""
"The :c:func:`PySys_SetArgvEx` function was added, letting applications close "
"a security hole when the existing :c:func:`PySys_SetArgv` function was "
"used.  Check whether you're calling :c:func:`PySys_SetArgv` and carefully "
"consider whether the application should be using :c:func:`PySys_SetArgvEx` "
"with *updatepath* set to false."
msgstr ""
"Была добавлена ​​функция :c:func:`PySys_SetArgvEx`, позволяющая приложениям "
"закрывать дыры в безопасности при использовании существующей функции :c:func:"
"`PySys_SetArgv`. Проверьте, вызываете ли вы :c:func:`PySys_SetArgv`, и "
"внимательно подумайте, должно ли приложение использовать :c:func:"
"`PySys_SetArgvEx` с параметром *updatepath*, установленным в значение false."

#: ../../whatsnew/2.7.rst:2560
msgid "New Features Added to Python 2.7 Maintenance Releases"
msgstr "Новые функции, добавленные в выпуски обслуживания Python 2.7"

#: ../../whatsnew/2.7.rst:2562
msgid ""
"New features may be added to Python 2.7 maintenance releases when the "
"situation genuinely calls for it. Any such additions must go through the "
"Python Enhancement Proposal process, and make a compelling case for why they "
"can't be adequately addressed by either adding the new feature solely to "
"Python 3, or else by publishing it on the Python Package Index."
msgstr ""
"Новые функции могут быть добавлены в поддерживающие выпуски Python 2.7, "
"когда ситуация действительно этого требует. Любые такие дополнения должны "
"пройти процедуру предложения по расширению Python и привести убедительные "
"аргументы в пользу того, почему их нельзя адекватно решить, добавив новую "
"функцию исключительно в Python 3 или опубликовав ее в указателе пакетов "
"Python."

#: ../../whatsnew/2.7.rst:2568
msgid ""
"In addition to the specific proposals listed below, there is a general "
"exemption allowing new ``-3`` warnings to be added in any Python 2.7 "
"maintenance release."
msgstr ""
"В дополнение к конкретным предложениям, перечисленным ниже, существует общее "
"исключение, позволяющее добавлять новые предупреждения ``-3`` в любую версию "
"обслуживания Python 2.7."

#: ../../whatsnew/2.7.rst:2574
msgid "Two new environment variables for debug mode"
msgstr "Две новые переменные среды для режима отладки."

#: ../../whatsnew/2.7.rst:2576
msgid ""
"In debug mode, the ``[xxx refs]`` statistic is not written by default, the :"
"envvar:`PYTHONSHOWREFCOUNT` environment variable now must also be set. "
"(Contributed by Victor Stinner; :issue:`31733`.)"
msgstr ""

#: ../../whatsnew/2.7.rst:2580
msgid ""
"When Python is compiled with ``COUNT_ALLOC`` defined, allocation counts are "
"no longer dumped by default anymore: the :envvar:`PYTHONSHOWALLOCCOUNT` "
"environment variable must now also be set. Moreover, allocation counts are "
"now dumped into stderr, rather than stdout. (Contributed by Victor Stinner; :"
"issue:`31692`.)"
msgstr ""

#: ../../whatsnew/2.7.rst:2589
msgid "PEP 434: IDLE Enhancement Exception for All Branches"
msgstr "PEP 434: Исключение расширения IDLE для всех ветвей"

#: ../../whatsnew/2.7.rst:2591
msgid ""
":pep:`434` describes a general exemption for changes made to the IDLE "
"development environment shipped along with Python. This exemption makes it "
"possible for the IDLE developers to provide a more consistent user "
"experience across all supported versions of Python 2 and 3."
msgstr ""
":pep:`434` описывает общее исключение для изменений, внесенных в среду "
"разработки IDLE, поставляемую вместе с Python. Это исключение позволяет "
"разработчикам IDLE обеспечить более единообразный пользовательский интерфейс "
"во всех поддерживаемых версиях Python 2 и 3."

#: ../../whatsnew/2.7.rst:2596
msgid ""
"For details of any IDLE changes, refer to the NEWS file for the specific "
"release."
msgstr ""
"Подробную информацию обо всех изменениях IDLE см. в файле NEWS для "
"конкретной версии."

#: ../../whatsnew/2.7.rst:2601
msgid "PEP 466: Network Security Enhancements for Python 2.7"
msgstr "PEP 466: Улучшения сетевой безопасности для Python 2.7"

#: ../../whatsnew/2.7.rst:2603
msgid ""
":pep:`466` describes a number of network security enhancement proposals that "
"have been approved for inclusion in Python 2.7 maintenance releases, with "
"the first of those changes appearing in the Python 2.7.7 release."
msgstr ""
":pep:`466` описывает ряд предложений по улучшению сетевой безопасности, "
"которые были одобрены для включения в выпуски обслуживания Python 2.7, "
"причем первые из этих изменений появились в выпуске Python 2.7.7."

#: ../../whatsnew/2.7.rst:2607
msgid ":pep:`466` related features added in Python 2.7.7:"
msgstr ":pep:`466` связанные функции, добавленные в Python 2.7.7:"

#: ../../whatsnew/2.7.rst:2609
msgid ""
":func:`hmac.compare_digest` was backported from Python 3 to make a timing "
"attack resistant comparison operation available to Python 2 applications. "
"(Contributed by Alex Gaynor; :issue:`21306`.)"
msgstr ""
":func:`hmac.compare_digest` был перенесен из Python 3, чтобы сделать "
"операцию сравнения, устойчивую к временным атакам, доступной для приложений "
"Python 2. (Предоставлено Алексом Гейнором; :issue:`21306`.)"

#: ../../whatsnew/2.7.rst:2613
msgid ""
"OpenSSL 1.0.1g was upgraded in the official Windows installers published on "
"python.org. (Contributed by Zachary Ware; :issue:`21462`.)"
msgstr ""
"OpenSSL 1.0.1g был обновлен в официальных установщиках Windows, "
"опубликованных на python.org. (Предоставлено Закари Уэром; :issue:`21462`.)"

#: ../../whatsnew/2.7.rst:2616
msgid ":pep:`466` related features added in Python 2.7.8:"
msgstr ":pep:`466` связанные функции, добавленные в Python 2.7.8:"

#: ../../whatsnew/2.7.rst:2618
msgid ""
":func:`hashlib.pbkdf2_hmac` was backported from Python 3 to make a hashing "
"algorithm suitable for secure password storage broadly available to Python 2 "
"applications. (Contributed by Alex Gaynor; :issue:`21304`.)"
msgstr ""
":func:`hashlib.pbkdf2_hmac` был перенесен из Python 3, чтобы сделать "
"алгоритм хеширования, пригодный для безопасного хранения паролей, широко "
"доступным для приложений Python 2. (Предоставлено Алексом Гейнором; :issue:"
"`21304`.)"

#: ../../whatsnew/2.7.rst:2622
msgid ""
"OpenSSL 1.0.1h was upgraded for the official Windows installers published on "
"python.org. (contributed by Zachary Ware in :issue:`21671` for CVE-2014-0224)"
msgstr ""

#: ../../whatsnew/2.7.rst:2625
msgid ":pep:`466` related features added in Python 2.7.9:"
msgstr ":pep:`466` связанные функции, добавленные в Python 2.7.9:"

#: ../../whatsnew/2.7.rst:2627
msgid ""
"Most of Python 3.4's :mod:`ssl` module was backported. This means :mod:`ssl` "
"now supports Server Name Indication, TLS1.x settings, access to the platform "
"certificate store, the :class:`~ssl.SSLContext` class, and other features. "
"(Contributed by Alex Gaynor and David Reid; :issue:`21308`.)"
msgstr ""
"Большая часть модуля :mod:`ssl` Python 3.4 была перенесена обратно. Это "
"означает, что :mod:`ssl` теперь поддерживает указание имени сервера, "
"настройки TLS1.x, доступ к хранилищу сертификатов платформы, класс :class:"
"`~ssl.SSLContext` и другие функции. (Предоставлено Алексом Гейнором и "
"Дэвидом Ридом; :issue:`21308`.)"

#: ../../whatsnew/2.7.rst:2632
msgid ""
"Refer to the \"Version added: 2.7.9\" notes in the module documentation for "
"specific details."
msgstr ""
"Подробности см. в примечаниях «Добавлена ​​версия: 2.7.9» в документации "
"модуля."

#: ../../whatsnew/2.7.rst:2635
msgid ""
":func:`os.urandom` was changed to cache a file descriptor to ``/dev/"
"urandom`` instead of reopening ``/dev/urandom`` on every call. (Contributed "
"by Alex Gaynor; :issue:`21305`.)"
msgstr ""
":func:`os.urandom` был изменен для кэширования дескриптора файла в ``/dev/"
"urandom`` вместо повторного открытия ``/dev/urandom`` при каждом вызове. "
"(Предоставлено Алексом Гейнором; :issue:`21305`.)"

#: ../../whatsnew/2.7.rst:2639
msgid ""
":data:`hashlib.algorithms_guaranteed` and :data:`hashlib."
"algorithms_available` were backported from Python 3 to make it easier for "
"Python 2 applications to select the strongest available hash algorithm. "
"(Contributed by Alex Gaynor in :issue:`21307`)"
msgstr ""
":data:`hashlib.algorithms_guaranteed` и :data:`hashlib.algorithms_available` "
"были перенесены из Python 3, чтобы приложениям Python 2 было проще выбирать "
"самый сильный доступный алгоритм хеширования. (Предоставлено Алексом "
"Гейнором в :issue:`21307`)"

#: ../../whatsnew/2.7.rst:2646
msgid "PEP 477: Backport ensurepip (PEP 453) to Python 2.7"
msgstr "PEP 477: бэкпорт обеспечения pip (PEP 453) в Python 2.7."

#: ../../whatsnew/2.7.rst:2648
msgid ""
":pep:`477` approves the inclusion of the :pep:`453` ensurepip module and the "
"improved documentation that was enabled by it in the Python 2.7 maintenance "
"releases, appearing first in the Python 2.7.9 release."
msgstr ""
":pep:`477` одобряет включение модуля :pep:`453` обеспечения pip и улучшенной "
"документации, которая была включена с его помощью, в выпуски обслуживания "
"Python 2.7, впервые появившиеся в выпуске Python 2.7.9."

#: ../../whatsnew/2.7.rst:2654
msgid "Bootstrapping pip By Default"
msgstr "Начальная загрузка по умолчанию"

#: ../../whatsnew/2.7.rst:2656
msgid ""
"The new :mod:`ensurepip` module (defined in :pep:`453`) provides a standard "
"cross-platform mechanism to bootstrap the pip installer into Python "
"installations. The version of ``pip`` included with Python 2.7.9 is ``pip`` "
"1.5.6, and future 2.7.x maintenance releases will update the bundled version "
"to the latest version of ``pip`` that is available at the time of creating "
"the release candidate."
msgstr ""
"Новый модуль :mod:`ensurepip` (определенный в :pep:`453`) предоставляет "
"стандартный кросс-платформенный механизм для загрузки установщика pip в "
"установки Python. Версия pip, включенная в Python 2.7.9, — это pip 1.5.6, а "
"в будущих выпусках обслуживания 2.7.x включенная в комплект версия будет "
"обновлена ​​до последней версии pip, доступной по адресу время создания релиз-"
"кандидата."

#: ../../whatsnew/2.7.rst:2663
msgid ""
"By default, the commands ``pip``, ``pipX`` and ``pipX.Y`` will be installed "
"on all platforms (where X.Y stands for the version of the Python "
"installation), along with the ``pip`` Python package and its dependencies."
msgstr ""
"По умолчанию команды pip, pipX и pipX.Y будут установлены на всех платформах "
"(где XY означает версию установки Python) вместе с pip. ` Пакет Python и его "
"зависимости."

#: ../../whatsnew/2.7.rst:2667
msgid ""
"For CPython :ref:`source builds on POSIX systems <building-python-on-unix>`, "
"the ``make install`` and ``make altinstall`` commands do not bootstrap "
"``pip`` by default.  This behaviour can be controlled through configure "
"options, and overridden through Makefile options."
msgstr ""
"Для CPython :ref:`source, построенного на системах POSIX <building-python-on-"
"unix>`, команды ``make install`` и ``make altinstall`` по умолчанию не "
"загружают ``pip``. Этим поведением можно управлять с помощью параметров "
"конфигурации и переопределить с помощью параметров Makefile."

#: ../../whatsnew/2.7.rst:2672
msgid ""
"On Windows and Mac OS X, the CPython installers now default to installing "
"``pip`` along with CPython itself (users may opt out of installing it during "
"the installation process). Window users will need to opt in to the automatic "
"``PATH`` modifications to have ``pip`` available from the command line by "
"default, otherwise it can still be accessed through the Python launcher for "
"Windows as ``py -m pip``."
msgstr ""
"В Windows и Mac OS X установщики CPython теперь по умолчанию устанавливают "
"pip вместе с самим CPython (пользователи могут отказаться от его установки в "
"процессе установки). Пользователям Windows необходимо будет согласиться на "
"автоматические изменения PATH, чтобы pip был доступен из командной строки по "
"умолчанию, в противном случае к нему все равно можно будет получить доступ "
"через панель запуска Python для Windows как py -m pip. ``."

#: ../../whatsnew/2.7.rst:2679
msgid ""
"As `discussed in the PEP`__, platform packagers may choose not to install "
"these commands by default, as long as, when invoked, they provide clear and "
"simple directions on how to install them on that platform (usually using the "
"system package manager)."
msgstr ""

#: ../../whatsnew/2.7.rst:2688
msgid "Documentation Changes"
msgstr "Изменения в документации"

#: ../../whatsnew/2.7.rst:2690
msgid ""
"As part of this change, the :ref:`installing-index` and :ref:`distributing-"
"index` sections of the documentation have been completely redesigned as "
"short getting started and FAQ documents. Most packaging documentation has "
"now been moved out to the Python Packaging Authority maintained `Python "
"Packaging User Guide <https://packaging.python.org>`__ and the documentation "
"of the individual projects."
msgstr ""
"В рамках этого изменения разделы документации :ref:`installing-index` и :ref:"
"`distributing-index` были полностью переработаны и теперь представляют собой "
"краткие инструкции по началу работы и документы с часто задаваемыми "
"вопросами. Большая часть документации по упаковке теперь перенесена в "
"Управление по упаковке Python, где хранится «Руководство пользователя по "
"упаковке Python <https://packaging.python.org>»__ и документация по "
"отдельным проектам."

#: ../../whatsnew/2.7.rst:2698
msgid ""
"However, as this migration is currently still incomplete, the legacy "
"versions of those guides remaining available as :ref:`install-index` and :"
"ref:`distutils-index`."
msgstr ""

#: ../../whatsnew/2.7.rst:2705
msgid ":pep:`453` -- Explicit bootstrapping of pip in Python installations"
msgstr ":pep:`453` -- Явная загрузка pip в установках Python"

#: ../../whatsnew/2.7.rst:2705
msgid ""
"PEP written by Donald Stufft and Nick Coghlan, implemented by Donald Stufft, "
"Nick Coghlan, Martin von Löwis and Ned Deily."
msgstr ""
"PEP написан Дональдом Стаффтом и Ником Когланом и реализован Дональдом "
"Стаффтом, Ником Когланом, Мартином фон Лёвисом и Недом Дейли."

#: ../../whatsnew/2.7.rst:2709
msgid ""
"PEP 476: Enabling certificate verification by default for stdlib http clients"
msgstr ""
"PEP 476: включение проверки сертификата по умолчанию для http-клиентов stdlib"

#: ../../whatsnew/2.7.rst:2711
msgid ""
":pep:`476` updated :mod:`httplib` and modules which use it, such as :mod:"
"`urllib2` and :mod:`xmlrpclib`, to now verify that the server presents a "
"certificate which is signed by a Certificate Authority in the platform trust "
"store and whose hostname matches the hostname being requested by default, "
"significantly improving security for many applications. This change was made "
"in the Python 2.7.9 release."
msgstr ""

#: ../../whatsnew/2.7.rst:2718
msgid ""
"For applications which require the old previous behavior, they can pass an "
"alternate context::"
msgstr ""
"Для приложений, которым требуется старое предыдущее поведение, они могут "
"передавать альтернативный контекст:"

#: ../../whatsnew/2.7.rst:2735
msgid "PEP 493: HTTPS verification migration tools for Python 2.7"
msgstr "PEP 493: инструменты миграции проверки HTTPS для Python 2.7"

#: ../../whatsnew/2.7.rst:2737
msgid ""
":pep:`493` provides additional migration tools to support a more incremental "
"infrastructure upgrade process for environments containing applications and "
"services relying on the historically permissive processing of server "
"certificates when establishing client HTTPS connections.  These additions "
"were made in the Python 2.7.12 release."
msgstr ""
":pep:`493` предоставляет дополнительные инструменты миграции для поддержки "
"более поэтапного процесса обновления инфраструктуры для сред, содержащих "
"приложения и службы, основанных на исторически разрешенной обработке "
"сертификатов сервера при установлении клиентских HTTPS-соединений. Эти "
"дополнения были сделаны в версии Python 2.7.12."

#: ../../whatsnew/2.7.rst:2743
msgid ""
"These tools are intended for use in cases where affected applications and "
"services can't be modified to explicitly pass a more permissive SSL context "
"when establishing the connection."
msgstr ""
"Эти инструменты предназначены для использования в случаях, когда затронутые "
"приложения и службы не могут быть изменены для явной передачи более "
"разрешающего контекста SSL при установке соединения."

#: ../../whatsnew/2.7.rst:2747
msgid ""
"For applications and services which can't be modified at all, the new "
"``PYTHONHTTPSVERIFY`` environment variable may be set to ``0`` to revert an "
"entire Python process back to the default permissive behaviour of Python "
"2.7.8 and earlier."
msgstr ""
"Для приложений и служб, которые вообще невозможно изменить, новая переменная "
"среды PYTHONHTTPSVERIFY может быть установлена ​​в значение 0, чтобы вернуть "
"весь процесс Python обратно к разрешенному по умолчанию поведению Python "
"2.7.8 и более ранних версий. ."

#: ../../whatsnew/2.7.rst:2752
msgid ""
"For cases where the connection establishment code can't be modified, but the "
"overall application can be, the new :func:`ssl._https_verify_certificates` "
"function can be used to adjust the default behaviour at runtime."
msgstr ""

#: ../../whatsnew/2.7.rst:2758
msgid "New ``make regen-all`` build target"
msgstr "Новая цель сборки make regen-all"

#: ../../whatsnew/2.7.rst:2760
msgid ""
"To simplify cross-compilation, and to ensure that CPython can reliably be "
"compiled without requiring an existing version of Python to already be "
"available, the autotools-based build system no longer attempts to implicitly "
"recompile generated files based on file modification times."
msgstr ""
"Чтобы упростить кросс-компиляцию и гарантировать, что CPython может быть "
"надежно скомпилирован без необходимости наличия существующей версии Python, "
"система сборки на основе autotools больше не пытается неявно "
"перекомпилировать сгенерированные файлы на основе времени их изменения."

#: ../../whatsnew/2.7.rst:2765
msgid ""
"Instead, a new ``make regen-all`` command has been added to force "
"regeneration of these files when desired (e.g. after an initial version of "
"Python has already been built based on the pregenerated versions)."
msgstr ""
"Вместо этого была добавлена ​​новая команда make regen-all для принудительной "
"регенерации этих файлов при необходимости (например, после того, как "
"начальная версия Python уже была собрана на основе предварительно "
"сгенерированных версий)."

#: ../../whatsnew/2.7.rst:2769
msgid ""
"More selective regeneration targets are also defined - see :source:`Makefile."
"pre.in` for details."
msgstr ""
"Также определены более выборочные цели регенерации — подробности см. в :"
"source:`Makefile.pre.in`."

#: ../../whatsnew/2.7.rst:2772 ../../whatsnew/2.7.rst:2785
msgid "(Contributed by Victor Stinner in :issue:`23404`.)"
msgstr "(Предоставлено Виктором Стиннером в :issue:`23404`.)"

#: ../../whatsnew/2.7.rst:2778
msgid "Removal of ``make touch`` build target"
msgstr "Удаление цели сборки ``make touch``."

#: ../../whatsnew/2.7.rst:2780
msgid ""
"The ``make touch`` build target previously used to request implicit "
"regeneration of generated files by updating their modification times has "
"been removed."
msgstr ""
"Цель сборки make touch, ранее использовавшаяся для запроса неявной "
"регенерации сгенерированных файлов путем обновления времени их модификации, "
"была удалена."

#: ../../whatsnew/2.7.rst:2783
msgid "It has been replaced by the new ``make regen-all`` target."
msgstr "Он был заменен новой целью make regen-all."

#: ../../whatsnew/2.7.rst:2794
msgid "Acknowledgements"
msgstr "Подтверждение"

#: ../../whatsnew/2.7.rst:2796
msgid ""
"The author would like to thank the following people for offering "
"suggestions, corrections and assistance with various drafts of this article: "
"Nick Coghlan, Philip Jenvey, Ryan Lovett, R. David Murray, Hugh Secker-"
"Walker."
msgstr ""
"Автор хотел бы поблагодарить следующих людей за предложения, исправления и "
"помощь в различных черновиках этой статьи: Ника Коглана, Филипа Дженви, "
"Райана Ловетта, Р. Дэвида Мюррея, Хью Секер-Уокера."
