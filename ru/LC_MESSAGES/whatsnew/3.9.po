# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# Rafael Fontenelle <rffontenelle@gmail.com>, 2024
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.10\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-01-10 16:06+0000\n"
"PO-Revision-Date: 2022-11-05 17:23+0000\n"
"Last-Translator: Rafael Fontenelle <rffontenelle@gmail.com>, 2024\n"
"Language-Team: Russian (https://app.transifex.com/python-doc/teams/5390/"
"ru/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ru\n"
"Plural-Forms: nplurals=4; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && "
"n%10<=4 && (n%100<12 || n%100>14) ? 1 : n%10==0 || (n%10>=5 && n%10<=9) || "
"(n%100>=11 && n%100<=14)? 2 : 3);\n"

#: ../../whatsnew/3.9.rst:3
msgid "What's New In Python 3.9"
msgstr "Что нового в Python 3.9"

#: ../../whatsnew/3.9.rst:0
msgid "Editor"
msgstr "Редактор"

#: ../../whatsnew/3.9.rst:5
msgid "Łukasz Langa"
msgstr "Łukasz Langa"

#: ../../whatsnew/3.9.rst:45
msgid ""
"This article explains the new features in Python 3.9, compared to 3.8. "
"Python 3.9 was released on October 5, 2020."
msgstr ""

#: ../../whatsnew/3.9.rst:48
msgid "For full details, see the :ref:`changelog <changelog>`."
msgstr ""

#: ../../whatsnew/3.9.rst:52
msgid ":pep:`596` - Python 3.9 Release Schedule"
msgstr ":pep:`596` - График выпуска Python 3.9"

#: ../../whatsnew/3.9.rst:56
msgid "Summary -- Release highlights"
msgstr "Краткое описание - Основные моменты релиза"

#: ../../whatsnew/3.9.rst:61
msgid "New syntax features:"
msgstr "Новые возможности синтаксиса:"

#: ../../whatsnew/3.9.rst:63
msgid ":pep:`584`, union operators added to ``dict``;"
msgstr ":pep:`584`, в ``dict`` добавлены операторы объединения;"

#: ../../whatsnew/3.9.rst:64
msgid ":pep:`585`, type hinting generics in standard collections;"
msgstr ":pep:`585`, генерики хинтинга типов в стандартных коллекциях;"

#: ../../whatsnew/3.9.rst:65
msgid ":pep:`614`, relaxed grammar restrictions on decorators."
msgstr ":pep:`614`, смягчены грамматические ограничения для декораторов."

#: ../../whatsnew/3.9.rst:67
msgid "New built-in features:"
msgstr "Новые встроенные функции:"

#: ../../whatsnew/3.9.rst:69
msgid ":pep:`616`, string methods to remove prefixes and suffixes."
msgstr ":pep:`616`, строковые методы для удаления префиксов и суффиксов."

#: ../../whatsnew/3.9.rst:71
msgid "New features in the standard library:"
msgstr "Новые возможности стандартной библиотеки:"

#: ../../whatsnew/3.9.rst:73
msgid ":pep:`593`, flexible function and variable annotations;"
msgstr ":pep:`593`, гибкие функции и аннотации переменных;"

#: ../../whatsnew/3.9.rst:74
msgid ""
":func:`os.pidfd_open` added that allows process management without races and "
"signals."
msgstr ""
"Добавлен :func:`os.pidfd_open`, позволяющий управлять процессами без гонок и "
"сигналов."

#: ../../whatsnew/3.9.rst:77
msgid "Interpreter improvements:"
msgstr "Улучшения интерпретатора:"

#: ../../whatsnew/3.9.rst:79
msgid ""
":pep:`573`, fast access to module state from methods of C extension types;"
msgstr ""
":pep:`573`, быстрый доступ к состоянию модуля из методов типов расширения C;"

#: ../../whatsnew/3.9.rst:81
msgid ":pep:`617`, CPython now uses a new parser based on PEG;"
msgstr ":pep:`617`, CPython теперь использует новый парсер, основанный на PEG;"

#: ../../whatsnew/3.9.rst:82
msgid ""
"a number of Python builtins (range, tuple, set, frozenset, list, dict) are "
"now sped up using :pep:`590` vectorcall;"
msgstr ""
"ряд встроенных функций Python (range, Tuple, Set, Frozeset, List, dict) "
"теперь ускоряются с помощью :pep:`590` Vectorcall;"

#: ../../whatsnew/3.9.rst:84
msgid "garbage collection does not block on resurrected objects;"
msgstr "сборка мусора не блокируется на воскрешенных объектах;"

#: ../../whatsnew/3.9.rst:85
msgid ""
"a number of Python modules (:mod:`_abc`, :mod:`audioop`, :mod:`_bz2`, :mod:"
"`_codecs`, :mod:`_contextvars`, :mod:`_crypt`, :mod:`_functools`, :mod:"
"`_json`, :mod:`_locale`, :mod:`math`, :mod:`operator`, :mod:`resource`, :mod:"
"`time`, :mod:`_weakref`) now use multiphase initialization as defined by PEP "
"489;"
msgstr ""

#: ../../whatsnew/3.9.rst:90
msgid ""
"a number of standard library modules (:mod:`audioop`, :mod:`ast`, :mod:"
"`grp`, :mod:`_hashlib`, :mod:`pwd`, :mod:`_posixsubprocess`, :mod:`random`, :"
"mod:`select`, :mod:`struct`, :mod:`termios`, :mod:`zlib`) are now using the "
"stable ABI defined by PEP 384."
msgstr ""

#: ../../whatsnew/3.9.rst:95
msgid "New library modules:"
msgstr "Новые библиотечные модули:"

#: ../../whatsnew/3.9.rst:97
msgid ""
":pep:`615`, the IANA Time Zone Database is now present in the standard "
"library in the :mod:`zoneinfo` module;"
msgstr ""
":pep:`615`, база данных часовых поясов IANA теперь присутствует в "
"стандартной библиотеке в модуле :mod:`zoneinfo`;"

#: ../../whatsnew/3.9.rst:99
msgid ""
"an implementation of a topological sort of a graph is now provided in the "
"new :mod:`graphlib` module."
msgstr ""
"реализация топологической разновидности графа теперь представлена ​​в новом "
"модуле :mod:`graphlib`."

#: ../../whatsnew/3.9.rst:102
msgid "Release process changes:"
msgstr "Изменения в процессе выпуска:"

#: ../../whatsnew/3.9.rst:104
msgid ":pep:`602`, CPython adopts an annual release cycle."
msgstr ":pep:`602`, CPython использует годовой цикл выпуска."

#: ../../whatsnew/3.9.rst:108
msgid "You should check for DeprecationWarning in your code"
msgstr "Вам следует проверить наличие DeprecationWarning в своем коде."

#: ../../whatsnew/3.9.rst:110
msgid ""
"When Python 2.7 was still supported, a lot of functionality in Python 3 was "
"kept for backward compatibility with Python 2.7. With the end of Python 2 "
"support, these backward compatibility layers have been removed, or will be "
"removed soon. Most of them emitted a :exc:`DeprecationWarning` warning for "
"several years. For example, using ``collections.Mapping`` instead of "
"``collections.abc.Mapping`` emits a :exc:`DeprecationWarning` since Python "
"3.3, released in 2012."
msgstr ""
"Когда Python 2.7 еще поддерживался, многие функции Python 3 были сохранены "
"для обратной совместимости с Python 2.7. С прекращением поддержки Python 2 "
"эти уровни обратной совместимости были удалены или будут удалены в ближайшее "
"время. Большинство из них в течение нескольких лет выдавали предупреждение :"
"exc:`DeprecationWarning`. Например, использование Collections.Mapping вместо "
"Collections.abc.Mapping выдает :exc:DeprecationWarning, начиная с версии "
"Python 3.3, выпущенной в 2012 году."

#: ../../whatsnew/3.9.rst:118
msgid ""
"Test your application with the :option:`-W` ``default`` command-line option "
"to see :exc:`DeprecationWarning` and :exc:`PendingDeprecationWarning`, or "
"even with :option:`-W` ``error`` to treat them as errors. :ref:`Warnings "
"Filter <warning-filter>` can be used to ignore warnings from third-party "
"code."
msgstr ""
"Протестируйте свое приложение с помощью параметра командной строки :option:`-"
"W` ``default``, чтобы увидеть :exc:`DeprecationWarning` и :exc:"
"`PendingDeprecationWarning`, или даже с помощью :option:`-W` ``ошибки. `` "
"рассматривать их как ошибки. :ref:`Фильтр предупреждений <warning-filter>` "
"можно использовать для игнорирования предупреждений от стороннего кода."

#: ../../whatsnew/3.9.rst:123
msgid ""
"Python 3.9 is the last version providing those Python 2 backward "
"compatibility layers, to give more time to Python projects maintainers to "
"organize the removal of the Python 2 support and add support for Python 3.9."
msgstr ""
"Python 3.9 — последняя версия, обеспечивающая уровни обратной совместимости "
"Python 2, чтобы дать разработчикам проектов Python больше времени для "
"организации удаления поддержки Python 2 и добавления поддержки Python 3.9."

#: ../../whatsnew/3.9.rst:127
msgid ""
"Aliases to :ref:`Abstract Base Classes <collections-abstract-base-classes>` "
"in the :mod:`collections` module, like ``collections.Mapping`` alias to :"
"class:`collections.abc.Mapping`, are kept for one last release for backward "
"compatibility. They will be removed from Python 3.10."
msgstr ""
"Псевдонимы :ref:`Абстрактных базовых классов <collections-abstract-base-"
"classes>` в модуле :mod:`collections`, например псевдоним ``collections."
"Mapping`` для :class:`collections.abc.Mapping`, сохраняются для последнего "
"выпуска для обеспечения обратной совместимости. Они будут удалены из Python "
"3.10."

#: ../../whatsnew/3.9.rst:132
msgid ""
"More generally, try to run your tests in the :ref:`Python Development Mode "
"<devmode>` which helps to prepare your code to make it compatible with the "
"next Python version."
msgstr ""
"В более общем плане попробуйте запускать тесты в :ref:`Режиме разработки "
"Python <devmode>`, который помогает подготовить ваш код к совместимости со "
"следующей версией Python."

#: ../../whatsnew/3.9.rst:136
msgid ""
"Note: a number of pre-existing deprecations were removed in this version of "
"Python as well. Consult the :ref:`removed-in-python-39` section."
msgstr ""
"Примечание. В этой версии Python также был удален ряд ранее существовавших "
"устаревших возможностей. Обратитесь к разделу :ref:`removed-in-python-39`."

#: ../../whatsnew/3.9.rst:141 ../../whatsnew/3.9.rst:1274
msgid "New Features"
msgstr "Новые особенности"

#: ../../whatsnew/3.9.rst:144
msgid "Dictionary Merge & Update Operators"
msgstr "Операторы слияния и обновления словаря"

#: ../../whatsnew/3.9.rst:146
msgid ""
"Merge (``|``) and update (``|=``) operators have been added to the built-in :"
"class:`dict` class. Those complement the existing ``dict.update`` and "
"``{**d1, **d2}`` methods of merging dictionaries."
msgstr ""
"Операторы слияния (``|``) и обновления (``|=``) были добавлены во встроенный "
"класс :class:`dict`. Они дополняют существующие методы объединения словарей "
"``dict.update`` и ``{**d1, **d2}``."

#: ../../whatsnew/3.9.rst:150 ../../whatsnew/3.9.rst:283
msgid "Example::"
msgstr "Пример::"

#: ../../whatsnew/3.9.rst:159
msgid ""
"See :pep:`584` for a full description. (Contributed by Brandt Bucher in :"
"issue:`36144`.)"
msgstr ""
"См. полное описание в :pep:`584`. (Предоставлено Брандтом Бухером в :issue:"
"`36144`.)"

#: ../../whatsnew/3.9.rst:163
msgid "New String Methods to Remove Prefixes and Suffixes"
msgstr "Новые строковые методы для удаления префиксов и суффиксов"

#: ../../whatsnew/3.9.rst:165
msgid ""
":meth:`str.removeprefix(prefix)<str.removeprefix>` and :meth:`str."
"removesuffix(suffix)<str.removesuffix>` have been added to easily remove an "
"unneeded prefix or a suffix from a string. Corresponding ``bytes``, "
"``bytearray``, and ``collections.UserString`` methods have also been added. "
"See :pep:`616` for a full description. (Contributed by Dennis Sweeney in :"
"issue:`39939`.)"
msgstr ""
":meth:`str.removeprefix(prefix)<str.removeprefix>` и :meth:`str."
"removesuffix(suffix)<str.removesuffix>` были добавлены для легкого удаления "
"ненужного префикса или суффикса из строки. Также были добавлены "
"соответствующие методы «bytes», «bytearray» и «collections.UserString». См. "
"полное описание в :pep:`616`. (Предоставлено Деннисом Суини в :issue:"
"`39939`.)"

#: ../../whatsnew/3.9.rst:173
msgid "Type Hinting Generics in Standard Collections"
msgstr "Обобщенные типы хинтинга в стандартных коллекциях"

#: ../../whatsnew/3.9.rst:175
msgid ""
"In type annotations you can now use built-in collection types such as "
"``list`` and ``dict`` as generic types instead of importing the "
"corresponding capitalized types (e.g. ``List`` or ``Dict``) from "
"``typing``.  Some other types in the standard library are also now generic, "
"for example ``queue.Queue``."
msgstr ""
"В аннотациях типов теперь вы можете использовать встроенные типы коллекций, "
"такие как list и dict, в качестве универсальных типов вместо импорта "
"соответствующих типов с заглавной буквы (например, List или Dict) из "
"``печатать``. Некоторые другие типы стандартной библиотеки теперь также "
"являются универсальными, например,queue.Queue."

#: ../../whatsnew/3.9.rst:181 ../../whatsnew/3.9.rst:1162
msgid "Example:"
msgstr "Пример:"

#: ../../whatsnew/3.9.rst:189
msgid ""
"See :pep:`585` for more details.  (Contributed by Guido van Rossum, Ethan "
"Smith, and Batuhan Taşkaya in :issue:`39481`.)"
msgstr ""
"См. :pep:`585` для более подробной информации. (Предоставлено Гвидо ван "
"Россумом, Итаном Смитом и Батуханом Ташкайей в :issue:`39481`.)"

#: ../../whatsnew/3.9.rst:193
msgid "New Parser"
msgstr "Новый анализатор"

#: ../../whatsnew/3.9.rst:195
msgid ""
"Python 3.9 uses a new parser, based on `PEG <https://en.wikipedia.org/wiki/"
"Parsing_expression_grammar>`_ instead of `LL(1) <https://en.wikipedia.org/"
"wiki/LL_parser>`_.  The new parser's performance is roughly comparable to "
"that of the old parser, but the PEG formalism is more flexible than LL(1) "
"when it comes to designing new language features.  We'll start using this "
"flexibility in Python 3.10 and later."
msgstr ""
"Python 3.9 использует новый синтаксический анализатор, основанный на `PEG "
"<https://en.wikipedia.org/wiki/Parsing_expression_grammar>`_ вместо `LL(1) "
"<https://en.wikipedia.org/wiki/LL_parser> `_. Производительность нового "
"парсера примерно сопоставима с производительностью старого парсера, но "
"формализм PEG более гибок, чем LL(1), когда дело доходит до разработки новых "
"возможностей языка. Мы начнем использовать эту гибкость в Python 3.10 и "
"более поздних версиях."

#: ../../whatsnew/3.9.rst:203
msgid ""
"The :mod:`ast` module uses the new parser and produces the same AST as the "
"old parser."
msgstr ""
"Модуль :mod:`ast` использует новый парсер и создает тот же AST, что и старый "
"парсер."

#: ../../whatsnew/3.9.rst:206
msgid ""
"In Python 3.10, the old parser will be deleted and so will all functionality "
"that depends on it (primarily the :mod:`parser` module, which has long been "
"deprecated).  In Python 3.9 *only*, you can switch back to the LL(1) parser "
"using a command line switch (``-X oldparser``) or an environment variable "
"(``PYTHONOLDPARSER=1``)."
msgstr ""

#: ../../whatsnew/3.9.rst:212
msgid ""
"See :pep:`617` for more details.  (Contributed by Guido van Rossum, Pablo "
"Galindo and Lysandros Nikolaou in :issue:`40334`.)"
msgstr ""
"См. :pep:`617` для более подробной информации. (Предоставлено Гвидо ван "
"Россумом, Пабло Галиндо и Лисандросом Николау в :issue:`40334`.)"

#: ../../whatsnew/3.9.rst:217
msgid "Other Language Changes"
msgstr "Другие языковые изменения"

#: ../../whatsnew/3.9.rst:219
msgid ""
":func:`__import__` now raises :exc:`ImportError` instead of :exc:"
"`ValueError`, which used to occur when a relative import went past its top-"
"level package. (Contributed by Ngalim Siregar in :issue:`37444`.)"
msgstr ""
":func:`__import__` теперь вызывает :exc:`ImportError` вместо :exc:"
"`ValueError`, который раньше возникал, когда относительный импорт выходил за "
"пределы пакета верхнего уровня. (Предоставлено Нгалимом Сирегаром в :issue:"
"`37444`.)"

#: ../../whatsnew/3.9.rst:224
msgid ""
"Python now gets the absolute path of the script filename specified on the "
"command line (ex: ``python3 script.py``): the ``__file__`` attribute of the :"
"mod:`__main__` module became an absolute path, rather than a relative path. "
"These paths now remain valid after the current directory is changed by :func:"
"`os.chdir`. As a side effect, the traceback also displays the absolute path "
"for :mod:`__main__` module frames in this case. (Contributed by Victor "
"Stinner in :issue:`20443`.)"
msgstr ""
"Python теперь получает абсолютный путь к имени файла сценария, указанному в "
"командной строке (например: ``python3 script.py``): атрибут ``__file__`` "
"модуля :mod:`__main__` стал абсолютным путем, а не чем относительный путь. "
"Эти пути теперь остаются действительными после изменения текущего каталога с "
"помощью :func:`os.chdir`. В качестве побочного эффекта в этом случае "
"обратная трассировка также отображает абсолютный путь к кадрам модуля :mod:"
"`__main__`. (Предоставлено Виктором Стиннером в :issue:`20443`.)"

#: ../../whatsnew/3.9.rst:232
msgid ""
"In the :ref:`Python Development Mode <devmode>` and in :ref:`debug build "
"<debug-build>`, the *encoding* and *errors* arguments are now checked for "
"string encoding and decoding operations. Examples: :func:`open`, :meth:`str."
"encode` and :meth:`bytes.decode`."
msgstr ""
"В :ref:`Python Development Mode <devmode>` и в :ref:`debug build <debug-"
"build>` аргументы *encoding* и *errors* теперь проверяются на операции "
"кодирования и декодирования строк. Примеры: :func:`open`, :meth:`str.encode` "
"и :meth:`bytes.decode`."

#: ../../whatsnew/3.9.rst:237
msgid ""
"By default, for best performance, the *errors* argument is only checked at "
"the first encoding/decoding error and the *encoding* argument is sometimes "
"ignored for empty strings. (Contributed by Victor Stinner in :issue:`37388`.)"
msgstr ""
"По умолчанию для лучшей производительности аргумент *errors* проверяется "
"только при первой ошибке кодирования/декодирования, а аргумент *encoding* "
"иногда игнорируется для пустых строк. (Предоставлено Виктором Стиннером в :"
"issue:`37388`.)"

#: ../../whatsnew/3.9.rst:242
msgid ""
"``\"\".replace(\"\", s, n)`` now returns ``s`` instead of an empty string "
"for all non-zero ``n``.  It is now consistent with ``\"\".replace(\"\", "
"s)``. There are similar changes for :class:`bytes` and :class:`bytearray` "
"objects. (Contributed by Serhiy Storchaka in :issue:`28029`.)"
msgstr ""
"``\"\".replace(\"\", s, n)`` теперь возвращает ``s`` вместо пустой строки "
"для всех ненулевых ``n``. Теперь оно соответствует ``\"\".replace(\"\", "
"s)``. Аналогичные изменения есть и для объектов :class:`bytes` и :class:"
"`bytearray`. (Предоставлено Сергеем Сторчакой в ​​:issue:`28029`.)"

#: ../../whatsnew/3.9.rst:247
msgid ""
"Any valid expression can now be used as a :term:`decorator`.  Previously, "
"the grammar was much more restrictive.  See :pep:`614` for details. "
"(Contributed by Brandt Bucher in :issue:`39702`.)"
msgstr ""
"Любое допустимое выражение теперь можно использовать в качестве декоратора. "
"Раньше грамматика была гораздо более строгой. Подробности смотрите в :pep:"
"`614`. (Предоставлено Брандтом Бухером в :issue:`39702`.)"

#: ../../whatsnew/3.9.rst:251
msgid ""
"Improved help for the :mod:`typing` module. Docstrings are now shown for all "
"special forms and special generic aliases (like ``Union`` and ``List``). "
"Using :func:`help` with generic alias like ``List[int]`` will show the help "
"for the correspondent concrete type (``list`` in this case). (Contributed by "
"Serhiy Storchaka in :issue:`40257`.)"
msgstr ""
"Улучшена справка по модулю :mod:`typing`. Строки документации теперь "
"отображаются для всех специальных форм и специальных общих псевдонимов "
"(например, Union и List). Использование :func:`help` с общим псевдонимом, "
"например ``List[int]``, покажет справку для соответствующего конкретного "
"типа (в данном случае ``list``). (Предоставлено Сергеем Сторчакой в ​​:issue:"
"`40257`.)"

#: ../../whatsnew/3.9.rst:257
msgid ""
"Parallel running of :meth:`~agen.aclose` / :meth:`~agen.asend` / :meth:"
"`~agen.athrow` is now prohibited, and ``ag_running`` now reflects the actual "
"running status of the async generator. (Contributed by Yury Selivanov in :"
"issue:`30773`.)"
msgstr ""
"Параллельный запуск :meth:`~agen.aclose` / :meth:`~agen.asend` / :meth:"
"`~agen.athrow` теперь запрещен, а ``ag_running`` теперь отражает фактический "
"статус выполнения асинхронный генератор. (Добавлен Юрием Селивановым в :"
"issue:`30773`.)"

#: ../../whatsnew/3.9.rst:262
msgid ""
"Unexpected errors in calling the ``__iter__`` method are no longer masked by "
"``TypeError`` in the :keyword:`in` operator and functions :func:`~operator."
"contains`, :func:`~operator.indexOf` and :func:`~operator.countOf` of the :"
"mod:`operator` module. (Contributed by Serhiy Storchaka in :issue:`40824`.)"
msgstr ""
"Неожиданные ошибки при вызове метода ``__iter__`` больше не маскируются "
"``TypeError`` в операторе :keyword:`in` и функциях :func:`~operator."
"contains`, :func:`~operator.indexOf ` и :func:`~operator.countOf` модуля :"
"mod:`operator`. (Предоставлено Сергеем Сторчакой в ​​:issue:`40824`.)"

#: ../../whatsnew/3.9.rst:268
msgid ""
"Unparenthesized lambda expressions can no longer be the expression part in "
"an ``if`` clause in comprehensions and generator expressions. See :issue:"
"`41848` and :issue:`43755` for details."
msgstr ""
"Лямбда-выражения без скобок больше не могут быть частью выражения в "
"предложении if в выражениях-генераторах и генераторах. Подробности смотрите "
"в :issue:`41848` и :issue:`43755`."

#: ../../whatsnew/3.9.rst:274
msgid "New Modules"
msgstr "Новые модули"

#: ../../whatsnew/3.9.rst:277
msgid "zoneinfo"
msgstr "zoneinfo"

#: ../../whatsnew/3.9.rst:279
msgid ""
"The :mod:`zoneinfo` module brings support for the IANA time zone database to "
"the standard library. It adds :class:`zoneinfo.ZoneInfo`, a concrete :class:"
"`datetime.tzinfo` implementation backed by the system's time zone data."
msgstr ""
"Модуль :mod:`zoneinfo` обеспечивает поддержку базы данных часовых поясов "
"IANA в стандартной библиотеке. Он добавляет :class:`zoneinfo.ZoneInfo`, "
"конкретную реализацию :class:`datetime.tzinfo`, поддерживаемую данными о "
"часовом поясе системы."

#: ../../whatsnew/3.9.rst:303
msgid ""
"As a fall-back source of data for platforms that don't ship the IANA "
"database, the |tzdata|_ module was released as a first-party package -- "
"distributed via PyPI and maintained by the CPython core team."
msgstr ""

#: ../../whatsnew/3.9.rst:312
msgid ""
":pep:`615` -- Support for the IANA Time Zone Database in the Standard Library"
msgstr ""
":pep:`615` -- Поддержка базы данных часовых поясов IANA в стандартной "
"библиотеке."

#: ../../whatsnew/3.9.rst:313
msgid "PEP written and implemented by Paul Ganssle"
msgstr "PEP написан и реализован Полом Гансслом"

#: ../../whatsnew/3.9.rst:317
msgid "graphlib"
msgstr "graphlib"

#: ../../whatsnew/3.9.rst:319
msgid ""
"A new module, :mod:`graphlib`, was added that contains the :class:`graphlib."
"TopologicalSorter` class to offer functionality to perform topological "
"sorting of graphs. (Contributed by Pablo Galindo, Tim Peters and Larry "
"Hastings in :issue:`17005`.)"
msgstr ""
"Был добавлен новый модуль :mod:`graphlib`, который содержит класс :class:"
"`graphlib.TopologicalSorter`, предлагающий функциональные возможности для "
"выполнения топологической сортировки графов. (Предоставлено Пабло Галиндо, "
"Тимом Питерсом и Ларри Гастингсом в :issue:`17005`.)"

#: ../../whatsnew/3.9.rst:326
msgid "Improved Modules"
msgstr "Улучшенные модули"

#: ../../whatsnew/3.9.rst:329
msgid "ast"
msgstr "ast"

#: ../../whatsnew/3.9.rst:331
msgid ""
"Added the *indent* option to :func:`~ast.dump` which allows it to produce a "
"multiline indented output. (Contributed by Serhiy Storchaka in :issue:"
"`37995`.)"
msgstr ""
"В :func:`~ast.dump` добавлен параметр *indent*, который позволяет создавать "
"многострочный вывод с отступом. (Предоставлено Сергеем Сторчакой в ​​:issue:"
"`37995`.)"

#: ../../whatsnew/3.9.rst:335
msgid ""
"Added :func:`ast.unparse` as a function in the :mod:`ast` module that can be "
"used to unparse an :class:`ast.AST` object and produce a string with code "
"that would produce an equivalent :class:`ast.AST` object when parsed. "
"(Contributed by Pablo Galindo and Batuhan Taskaya in :issue:`38870`.)"
msgstr ""
"Добавлен :func:`ast.unparse` как функция в модуль :mod:`ast`, которую можно "
"использовать для разбора объекта :class:`ast.AST` и создания строки с кодом, "
"которая создаст эквивалент :class. :`ast.AST` при анализе. (Предоставлено "
"Пабло Галиндо и Батуханом Таской в ​​:issue:`38870`.)"

#: ../../whatsnew/3.9.rst:340
msgid ""
"Added docstrings to AST nodes that contains the ASDL signature used to "
"construct that node. (Contributed by Batuhan Taskaya in :issue:`39638`.)"
msgstr ""
"К узлам AST добавлены строки документации, содержащие подпись ASDL, "
"использованную для создания этого узла. (Предоставлено Батуханом Таской в ​​:"
"issue:`39638`.)"

#: ../../whatsnew/3.9.rst:344
msgid "asyncio"
msgstr "asyncio"

#: ../../whatsnew/3.9.rst:346
msgid ""
"Due to significant security concerns, the *reuse_address* parameter of :meth:"
"`asyncio.loop.create_datagram_endpoint` is no longer supported. This is "
"because of the behavior of the socket option ``SO_REUSEADDR`` in UDP. For "
"more details, see the documentation for ``loop.create_datagram_endpoint()``. "
"(Contributed by Kyle Stanley, Antoine Pitrou, and Yury Selivanov in :issue:"
"`37228`.)"
msgstr ""
"Из соображений безопасности параметр *reuse_address* :meth:`asyncio.loop."
"create_datagram_endpoint` больше не поддерживается. Это связано с поведением "
"опции сокета SO_REUSEADDR в UDP. Более подробную информацию смотрите в "
"документации по ``loop.create_datagram_endpoint()``. (Предоставлено Кайлом "
"Стэнли, Антуаном Питру и Юрием Селивановым в :issue:`37228`.)"

#: ../../whatsnew/3.9.rst:353
msgid ""
"Added a new :term:`coroutine` :meth:`~asyncio.loop."
"shutdown_default_executor` that schedules a shutdown for the default "
"executor that waits on the :class:`~concurrent.futures.ThreadPoolExecutor` "
"to finish closing. Also, :func:`asyncio.run` has been updated to use the "
"new :term:`coroutine`. (Contributed by Kyle Stanley in :issue:`34037`.)"
msgstr ""
"Добавлена ​​новая :term:`coroutine` :meth:`~asyncio.loop."
"shutdown_default_executor`, которая планирует завершение работы исполнителя "
"по умолчанию, ожидающего завершения закрытия :class:`~concurrent.futures."
"ThreadPoolExecutor`. Кроме того, :func:`asyncio.run` был обновлен для "
"использования новой :term:`coroutine`. (Предоставлено Кайлом Стэнли в :issue:"
"`34037`.)"

#: ../../whatsnew/3.9.rst:359
msgid ""
"Added :class:`asyncio.PidfdChildWatcher`, a Linux-specific child watcher "
"implementation that polls process file descriptors. (:issue:`38692`)"
msgstr ""
"Добавлен :class:`asyncio.PidfdChildWatcher`, реализация наблюдения за "
"детьми, специфичная для Linux, которая опрашивает дескрипторы файлов "
"процессов. (:issue:`38692`)"

#: ../../whatsnew/3.9.rst:362
msgid ""
"Added a new :term:`coroutine` :func:`asyncio.to_thread`. It is mainly used "
"for running IO-bound functions in a separate thread to avoid blocking the "
"event loop, and essentially works as a high-level version of :meth:`~asyncio."
"loop.run_in_executor` that can directly take keyword arguments. (Contributed "
"by Kyle Stanley and Yury Selivanov in :issue:`32309`.)"
msgstr ""
"Добавлена ​​новая :term:`coroutine` :func:`asyncio.to_thread`. В основном он "
"используется для запуска функций, связанных с вводом-выводом, в отдельном "
"потоке, чтобы избежать блокировки цикла событий, и по существу работает как "
"высокоуровневая версия :meth:`~asyncio.loop.run_in_executor`, которая может "
"напрямую принимать аргументы ключевого слова. (Предоставлено Кайлом Стэнли и "
"Юрием Селивановым в :issue:`32309`.)"

#: ../../whatsnew/3.9.rst:368
msgid ""
"When cancelling the task due to a timeout, :meth:`asyncio.wait_for` will now "
"wait until the cancellation is complete also in the case when *timeout* is "
"<= 0, like it does with positive timeouts. (Contributed by Elvis "
"Pranskevichus in :issue:`32751`.)"
msgstr ""
"При отмене задачи из-за таймаута :meth:`asyncio.wait_for` теперь будет ждать "
"завершения отмены также в случае, когда *timeout* <= 0, как это происходит с "
"положительными таймаутами. (Предоставлено Элвисом Пранскевичусом в :issue:"
"`32751`.)"

#: ../../whatsnew/3.9.rst:373
msgid ""
":mod:`asyncio` now raises :exc:`TyperError` when calling incompatible "
"methods with an :class:`ssl.SSLSocket` socket. (Contributed by Ido Michael "
"in :issue:`37404`.)"
msgstr ""

#: ../../whatsnew/3.9.rst:378
msgid "compileall"
msgstr "compileall"

#: ../../whatsnew/3.9.rst:380
msgid ""
"Added new possibility to use hardlinks for duplicated ``.pyc`` files: "
"*hardlink_dupes* parameter and --hardlink-dupes command line option. "
"(Contributed by  Lumír 'Frenzy' Balhar in :issue:`40495`.)"
msgstr ""
"Добавлена ​​новая возможность использовать жесткие ссылки для дублированных "
"файлов ``.pyc``: параметр *hardlink_dupes* и параметр командной строки --"
"hardlink-dupes. (Предоставлено Люмиром «Безумием» Балхаром в :issue:`40495`.)"

#: ../../whatsnew/3.9.rst:383
msgid ""
"Added new options for path manipulation in resulting ``.pyc`` files: "
"*stripdir*, *prependdir*, *limit_sl_dest* parameters and -s, -p, -e command "
"line options. Added the possibility to specify the option for an "
"optimization level multiple times. (Contributed by Lumír 'Frenzy' Balhar in :"
"issue:`38112`.)"
msgstr ""
"Добавлены новые параметры для манипуляций с путями в результирующих файлах "
"``.pyc``: параметры *stripdir*, *prependdir*, *limit_sl_dest* и параметры "
"командной строки -s, -p, -e. Добавлена ​​возможность указать параметр уровня "
"оптимизации несколько раз. (Предоставлено Люмиром «Безумием» Балхаром в :"
"issue:`38112`.)"

#: ../../whatsnew/3.9.rst:388
msgid "concurrent.futures"
msgstr "concurrent.futures"

#: ../../whatsnew/3.9.rst:390
msgid ""
"Added a new *cancel_futures* parameter to :meth:`concurrent.futures.Executor."
"shutdown` that cancels all pending futures which have not started running, "
"instead of waiting for them to complete before shutting down the executor. "
"(Contributed by Kyle Stanley in :issue:`39349`.)"
msgstr ""
"Добавлен новый параметр *cancel_futures* в :meth:`concurrent.futures."
"Executor.shutdown`, который отменяет все ожидающие фьючерсы, которые еще не "
"начали выполняться, вместо того, чтобы ждать их завершения перед выключением "
"исполнителя. (Предоставлено Кайлом Стэнли в :issue:`39349`.)"

#: ../../whatsnew/3.9.rst:396
msgid ""
"Removed daemon threads from :class:`~concurrent.futures.ThreadPoolExecutor` "
"and :class:`~concurrent.futures.ProcessPoolExecutor`. This improves "
"compatibility with subinterpreters and predictability in their shutdown "
"processes. (Contributed by Kyle Stanley in :issue:`39812`.)"
msgstr ""
"Удалены потоки демона из :class:`~concurrent.futures.ThreadPoolExecutor` и :"
"class:`~concurrent.futures.ProcessPoolExecutor`. Это улучшает совместимость "
"с субинтерпретаторами и предсказуемость процессов их завершения. "
"(Предоставлено Кайлом Стэнли в :issue:`39812`.)"

#: ../../whatsnew/3.9.rst:401
msgid ""
"Workers in :class:`~concurrent.futures.ProcessPoolExecutor` are now spawned "
"on demand, only when there are no available idle workers to reuse. This "
"optimizes startup overhead and reduces the amount of lost CPU time to idle "
"workers. (Contributed by Kyle Stanley in :issue:`39207`.)"
msgstr ""
"Рабочие в :class:`~concurrent.futures.ProcessPoolExecutor`теперь создаются "
"по требованию, только когда нет доступных свободных рабочих для повторного "
"использования. Это оптимизирует накладные расходы при запуске и сокращает "
"количество потерянного процессорного времени для свободных рабочих. "
"(Предоставлено Кайлом Стэнли в :issue:`39207`.)"

#: ../../whatsnew/3.9.rst:407
msgid "curses"
msgstr "curses"

#: ../../whatsnew/3.9.rst:409
msgid ""
"Added :func:`curses.get_escdelay`, :func:`curses.set_escdelay`, :func:"
"`curses.get_tabsize`, and :func:`curses.set_tabsize` functions. (Contributed "
"by Anthony Sottile in :issue:`38312`.)"
msgstr ""
"Добавлены функции :func:`curses.get_escdelay`, :func:`curses.set_escdelay`, :"
"func:`curses.get_tabsize` и :func:`curses.set_tabsize`. (Предоставлено "
"Энтони Соттайлом в :issue:`38312`.)"

#: ../../whatsnew/3.9.rst:414
msgid "datetime"
msgstr "datetime"

#: ../../whatsnew/3.9.rst:415
msgid ""
"The :meth:`~datetime.date.isocalendar()` of :class:`datetime.date` and :meth:"
"`~datetime.datetime.isocalendar()` of :class:`datetime.datetime` methods now "
"returns a :func:`~collections.namedtuple` instead of a :class:`tuple`. "
"(Contributed by Dong-hee Na in :issue:`24416`.)"
msgstr ""

#: ../../whatsnew/3.9.rst:421
msgid "distutils"
msgstr "distutils"

#: ../../whatsnew/3.9.rst:423
msgid ""
"The :command:`upload` command now creates SHA2-256 and Blake2b-256 hash "
"digests. It skips MD5 on platforms that block MD5 digest. (Contributed by "
"Christian Heimes in :issue:`40698`.)"
msgstr ""
"Команда :command:`upload` теперь создает хеш-дайджесты SHA2-256 и "
"Blake2b-256. Он пропускает MD5 на платформах, которые блокируют дайджест "
"MD5. (Предоставлено Кристианом Хаймсом в :issue:`40698`.)"

#: ../../whatsnew/3.9.rst:428
msgid "fcntl"
msgstr "fcntl"

#: ../../whatsnew/3.9.rst:430
msgid ""
"Added constants :data:`~fcntl.F_OFD_GETLK`, :data:`~fcntl.F_OFD_SETLK` and :"
"data:`~fcntl.F_OFD_SETLKW`. (Contributed by Dong-hee Na in :issue:`38602`.)"
msgstr ""

#: ../../whatsnew/3.9.rst:435
msgid "ftplib"
msgstr "ftplib"

#: ../../whatsnew/3.9.rst:437
msgid ""
":class:`~ftplib.FTP` and :class:`~ftplib.FTP_TLS` now raise a :class:"
"`ValueError` if the given timeout for their constructor is zero to prevent "
"the creation of a non-blocking socket. (Contributed by Dong-hee Na in :issue:"
"`39259`.)"
msgstr ""

#: ../../whatsnew/3.9.rst:442
msgid "gc"
msgstr "gc"

#: ../../whatsnew/3.9.rst:444
msgid ""
"When the garbage collector makes a collection in which some objects "
"resurrect (they are reachable from outside the isolated cycles after the "
"finalizers have been executed), do not block the collection of all objects "
"that are still unreachable. (Contributed by Pablo Galindo and Tim Peters in :"
"issue:`38379`.)"
msgstr ""
"Когда сборщик мусора создает сборку, в которой некоторые объекты "
"воскрешаются (они доступны извне изолированных циклов после выполнения "
"финализаторов), не блокируйте сбор всех объектов, которые все еще "
"недоступны. (Предоставлено Пабло Галиндо и Тимом Питерсом в :issue:`38379`.)"

#: ../../whatsnew/3.9.rst:449
msgid ""
"Added a new function :func:`gc.is_finalized` to check if an object has been "
"finalized by the garbage collector. (Contributed by Pablo Galindo in :issue:"
"`39322`.)"
msgstr ""
"Добавлена ​​новая функция :func:`gc.is_finalized` для проверки того, был ли "
"объект финализирован сборщиком мусора. (Предоставлено Пабло Галиндо в :issue:"
"`39322`.)"

#: ../../whatsnew/3.9.rst:454
msgid "hashlib"
msgstr "hashlib"

#: ../../whatsnew/3.9.rst:456
msgid ""
"The :mod:`hashlib` module can now use SHA3 hashes and SHAKE XOF from OpenSSL "
"when available. (Contributed by Christian Heimes in :issue:`37630`.)"
msgstr ""
"Модуль :mod:`hashlib` теперь может использовать хэши SHA3 и SHAKE XOF из "
"OpenSSL, если они доступны. (Предоставлено Кристианом Хаймсом в :issue:"
"`37630`.)"

#: ../../whatsnew/3.9.rst:460
msgid ""
"Builtin hash modules can now be disabled with ``./configure --without-"
"builtin-hashlib-hashes`` or selectively enabled with e.g. ``./configure --"
"with-builtin-hashlib-hashes=sha3,blake2`` to force use of OpenSSL based "
"implementation. (Contributed by Christian Heimes in :issue:`40479`)"
msgstr ""
"Встроенные хэш-модули теперь можно отключить с помощью ``./configure --"
"without-builtin-hashlib-hashes`` или выборочно включить, например, ``./"
"configure --with-builtin-hashlib-hashes=sha3,blake2`` для принудительное "
"использование реализации на основе OpenSSL. (Предоставлено Кристианом "
"Хаймсом в :issue:`40479`)"

#: ../../whatsnew/3.9.rst:468
msgid "http"
msgstr "http"

#: ../../whatsnew/3.9.rst:470
msgid ""
"HTTP status codes ``103 EARLY_HINTS``, ``418 IM_A_TEAPOT`` and ``425 "
"TOO_EARLY`` are added to :class:`http.HTTPStatus`. (Contributed by Dong-hee "
"Na in :issue:`39509` and Ross Rhodes in :issue:`39507`.)"
msgstr ""

#: ../../whatsnew/3.9.rst:474
msgid "IDLE and idlelib"
msgstr "IDLE и idlelib"

#: ../../whatsnew/3.9.rst:476
msgid ""
"Added option to toggle cursor blink off.  (Contributed by Zackery Spytz in :"
"issue:`4603`.)"
msgstr ""
"Добавлена ​​опция отключения мерцания курсора. (Предоставлено Закери Шпитцем "
"в :issue:`4603`.)"

#: ../../whatsnew/3.9.rst:479
msgid ""
"Escape key now closes IDLE completion windows.  (Contributed by Johnny "
"Najera in :issue:`38944`.)"
msgstr ""
"Клавиша Escape теперь закрывает окна завершения IDLE. (Предоставлено Джонни "
"Наджерой в :issue:`38944`.)"

#: ../../whatsnew/3.9.rst:482
msgid ""
"Added keywords to module name completion list.  (Contributed by Terry J. "
"Reedy in :issue:`37765`.)"
msgstr ""
"Добавлены ключевые слова в список завершения имени модуля. (Предоставлено "
"Терри Дж. Риди в :issue:`37765`.)"

#: ../../whatsnew/3.9.rst:485
msgid "New in 3.9 maintenance releases"
msgstr "Новое в обновлении 3.9 выпуска"

#: ../../whatsnew/3.9.rst:487
msgid ""
"Make IDLE invoke :func:`sys.excepthook` (when started without '-n'). User "
"hooks were previously ignored.  (Contributed by Ken Hilton in :issue:"
"`43008`.)"
msgstr ""
"Заставьте IDLE вызывать :func:`sys.excepthook` (при запуске без '-n'). "
"Пользовательские перехваты ранее игнорировались. (Предоставлено Кеном "
"Хилтоном в :issue:`43008`.)"

#: ../../whatsnew/3.9.rst:491
msgid "The changes above have been backported to 3.8 maintenance releases."
msgstr "Вышеуказанные изменения были перенесены в обновление 3.8 выпуска."

#: ../../whatsnew/3.9.rst:493
msgid ""
"Rearrange the settings dialog.  Split the General tab into Windows and Shell/"
"Ed tabs.  Move help sources, which extend the Help menu, to the Extensions "
"tab.  Make space for new options and shorten the dialog. The latter makes "
"the dialog better fit small screens.  (Contributed by Terry Jan Reedy in :"
"issue:`40468`.)  Move the indent space setting from the Font tab to the new "
"Windows tab.  (Contributed by Mark Roseman and Terry Jan Reedy in :issue:"
"`33962`.)"
msgstr ""
"Переупорядочить диалоговое окно настроек. Разделить вкладку «Общие» на "
"вкладки «Windows» и «Shell/Ed». Переместить источники справки, которые "
"расширяют меню «Справка», на вкладку «Расширения». Освободить место для "
"новых параметров и сократить диалоговое окно. Последнее позволяет лучше "
"разместить диалоговое окно на небольших экранах. (Предоставлено Терри Яном "
"Риди в :issue:`40468`.) Переместить настройку отступа с вкладки «Шрифт» на "
"новую вкладку «Windows». (Предоставлено Марком Роземаном и Терри Яном Риди "
"в :issue:`33962`.)"

#: ../../whatsnew/3.9.rst:501
msgid ""
"Apply syntax highlighting to ``.pyi`` files. (Contributed by Alex Waygood "
"and Terry Jan Reedy in :issue:`45447`.)"
msgstr ""
"Примените подсветку синтаксиса к файлам ``.pyi``. (Предоставлено Алексом "
"Вэйгудом и Терри Джен Риди в :issue:`45447`.)"

#: ../../whatsnew/3.9.rst:505
msgid "imaplib"
msgstr "imaplib"

#: ../../whatsnew/3.9.rst:507
msgid ""
":class:`~imaplib.IMAP4` and :class:`~imaplib.IMAP4_SSL` now have an optional "
"*timeout* parameter for their constructors. Also, the :meth:`~imaplib.IMAP4."
"open` method now has an optional *timeout* parameter with this change. The "
"overridden methods of :class:`~imaplib.IMAP4_SSL` and :class:`~imaplib."
"IMAP4_stream` were applied to this change. (Contributed by Dong-hee Na in :"
"issue:`38615`.)"
msgstr ""

#: ../../whatsnew/3.9.rst:514
msgid ""
":meth:`imaplib.IMAP4.unselect` is added. :meth:`imaplib.IMAP4.unselect` "
"frees server's resources associated with the selected mailbox and returns "
"the server to the authenticated state. This command performs the same "
"actions as :meth:`imaplib.IMAP4.close`, except that no messages are "
"permanently removed from the currently selected mailbox. (Contributed by "
"Dong-hee Na in :issue:`40375`.)"
msgstr ""

#: ../../whatsnew/3.9.rst:522
msgid "importlib"
msgstr "importlib"

#: ../../whatsnew/3.9.rst:524
msgid ""
"To improve consistency with import statements, :func:`importlib.util."
"resolve_name` now raises :exc:`ImportError` instead of :exc:`ValueError` for "
"invalid relative import attempts. (Contributed by Ngalim Siregar in :issue:"
"`37444`.)"
msgstr ""
"Чтобы улучшить согласованность с операторами импорта, :func:`importlib.util."
"resolve_name` теперь вызывает :exc:`ImportError` вместо :exc:`ValueError` "
"для недопустимых относительных попыток импорта. (Предоставлено Нгалимом "
"Сирегаром в :issue:`37444`.)"

#: ../../whatsnew/3.9.rst:529
msgid ""
"Import loaders which publish immutable module objects can now publish "
"immutable packages in addition to individual modules. (Contributed by Dino "
"Viehland in :issue:`39336`.)"
msgstr ""
"Загрузчики импорта, которые публикуют неизменяемые объекты модулей, теперь "
"могут публиковать неизменяемые пакеты в дополнение к отдельным модулям. "
"(Предоставлено Дино Виеландом в :issue:`39336`.)"

#: ../../whatsnew/3.9.rst:533
msgid ""
"Added :func:`importlib.resources.files` function with support for "
"subdirectories in package data, matching backport in ``importlib_resources`` "
"version 1.5. (Contributed by Jason R. Coombs in :issue:`39791`.)"
msgstr ""
"Добавлена ​​функция :func:`importlib.resources.files` с поддержкой "
"подкаталогов в данных пакета, соответствующая backport в "
"``importlib_resources`` версии 1.5. (Предоставлено Джейсоном Р. Кумбсом в :"
"issue:`39791`.)"

#: ../../whatsnew/3.9.rst:538
msgid ""
"Refreshed ``importlib.metadata`` from ``importlib_metadata`` version 1.6.1."
msgstr ""
"Обновлен ``importlib.metadata`` из ``importlib_metadata`` версии 1.6.1."

#: ../../whatsnew/3.9.rst:541
msgid "inspect"
msgstr "inspect"

#: ../../whatsnew/3.9.rst:543
msgid ""
":attr:`inspect.BoundArguments.arguments` is changed from ``OrderedDict`` to "
"regular dict.  (Contributed by Inada Naoki in :issue:`36350` and :issue:"
"`39775`.)"
msgstr ""
":attr:`inspect.BoundArguments.arguments` изменен с ``OrderedDict`` на "
"обычный dict. (Предоставлено Инадой Наоки в :issue:`36350` и :issue:`39775`.)"

#: ../../whatsnew/3.9.rst:547
msgid "ipaddress"
msgstr "ipaddress"

#: ../../whatsnew/3.9.rst:549
msgid ""
":mod:`ipaddress` now supports IPv6 Scoped Addresses (IPv6 address with "
"suffix ``%<scope_id>``)."
msgstr ""
":mod:`ipaddress` теперь поддерживает адреса с ограниченной областью действия "
"IPv6 (IPv6-адрес с суффиксом ``%<scope_id>``)."

#: ../../whatsnew/3.9.rst:551
msgid ""
"Scoped IPv6 addresses can be parsed using :class:`ipaddress.IPv6Address`. If "
"present, scope zone ID is available through the :attr:`~ipaddress."
"IPv6Address.scope_id` attribute. (Contributed by Oleksandr Pavliuk in :issue:"
"`34788`.)"
msgstr ""
"Адреса IPv6 с ограниченной областью действия можно проанализировать с "
"помощью :class:`ipaddress.IPv6Address`. Если он присутствует, идентификатор "
"зоны области доступен через атрибут :attr:`~ipaddress.IPv6Address.scope_id`. "
"(Предоставлено Александром Павлюком в :issue:`34788`.)"

#: ../../whatsnew/3.9.rst:555
msgid ""
"Starting with Python 3.9.5 the :mod:`ipaddress` module no longer accepts any "
"leading zeros in IPv4 address strings. (Contributed by Christian Heimes in :"
"issue:`36384`)."
msgstr ""
"Начиная с Python 3.9.5, модуль :mod:`ipaddress` больше не принимает ведущие "
"нули в адресных строках IPv4. (Предоставлено Кристианом Хаймсом в :issue:"
"`36384`)."

#: ../../whatsnew/3.9.rst:560
msgid "math"
msgstr "математика"

#: ../../whatsnew/3.9.rst:562
msgid ""
"Expanded the :func:`math.gcd` function to handle multiple arguments. "
"Formerly, it only supported two arguments. (Contributed by Serhiy Storchaka "
"in :issue:`39648`.)"
msgstr ""
"Расширена функция :func:`math.gcd` для обработки нескольких аргументов. "
"Раньше он поддерживал только два аргумента. (Предоставлено Сергеем Сторчакой "
"в ​​:issue:`39648`.)"

#: ../../whatsnew/3.9.rst:566
msgid ""
"Added :func:`math.lcm`: return the least common multiple of specified "
"arguments. (Contributed by Mark Dickinson, Ananthakrishnan and Serhiy "
"Storchaka in :issue:`39479` and :issue:`39648`.)"
msgstr ""
"Добавлен :func:`math.lcm`: возвращает наименьшее общее кратное указанных "
"аргументов. (Предоставлено Марком Дикинсоном, Анантакришнаном и Сергеем "
"Сторчакой в ​​:issue:`39479` и :issue:`39648`.)"

#: ../../whatsnew/3.9.rst:570
msgid ""
"Added :func:`math.nextafter`: return the next floating-point value after *x* "
"towards *y*. (Contributed by Victor Stinner in :issue:`39288`.)"
msgstr ""
"Добавлена ​​:func:`math.nextafter`: возвращает следующее значение с плавающей "
"запятой после *x* по направлению к *y*. (Предоставлено Виктором Стиннером в :"
"issue:`39288`.)"

#: ../../whatsnew/3.9.rst:574
msgid ""
"Added :func:`math.ulp`: return the value of the least significant bit of a "
"float. (Contributed by Victor Stinner in :issue:`39310`.)"
msgstr ""
"Добавлен :func:`math.ulp`: возвращает значение младшего бита числа с "
"плавающей запятой. (Предоставлено Виктором Стиннером в :issue:`39310`.)"

#: ../../whatsnew/3.9.rst:579
msgid "multiprocessing"
msgstr "multiprocessing"

#: ../../whatsnew/3.9.rst:581
msgid ""
"The :class:`multiprocessing.SimpleQueue` class has a new :meth:"
"`~multiprocessing.SimpleQueue.close` method to explicitly close the queue. "
"(Contributed by Victor Stinner in :issue:`30966`.)"
msgstr ""
"Класс :class:`multiprocessing.SimpleQueue` имеет новый метод :meth:"
"`~multiprocessing.SimpleQueue.close` для явного закрытия очереди. "
"(Предоставлено Виктором Стиннером в :issue:`30966`.)"

#: ../../whatsnew/3.9.rst:587
msgid "nntplib"
msgstr "nntplib"

#: ../../whatsnew/3.9.rst:589
msgid ""
":class:`~nntplib.NNTP` and :class:`~nntplib.NNTP_SSL` now raise a :class:"
"`ValueError` if the given timeout for their constructor is zero to prevent "
"the creation of a non-blocking socket. (Contributed by Dong-hee Na in :issue:"
"`39259`.)"
msgstr ""

#: ../../whatsnew/3.9.rst:594
msgid "os"
msgstr "os"

#: ../../whatsnew/3.9.rst:596
msgid ""
"Added :data:`~os.CLD_KILLED` and :data:`~os.CLD_STOPPED` for :attr:"
"`si_code`. (Contributed by Dong-hee Na in :issue:`38493`.)"
msgstr ""

#: ../../whatsnew/3.9.rst:599
msgid ""
"Exposed the Linux-specific :func:`os.pidfd_open` (:issue:`38692`) and :data:"
"`os.P_PIDFD` (:issue:`38713`) for process management with file descriptors."
msgstr ""

#: ../../whatsnew/3.9.rst:603
msgid ""
"The :func:`os.unsetenv` function is now also available on Windows. "
"(Contributed by Victor Stinner in :issue:`39413`.)"
msgstr ""
"Функция :func:`os.unsetenv` теперь доступна и в Windows. (Предоставлено "
"Виктором Стиннером в :issue:`39413`.)"

#: ../../whatsnew/3.9.rst:606
msgid ""
"The :func:`os.putenv` and :func:`os.unsetenv` functions are now always "
"available. (Contributed by Victor Stinner in :issue:`39395`.)"
msgstr ""
"Функции :func:`os.putenv` и :func:`os.unsetenv` теперь доступны всегда. "
"(Предоставлено Виктором Стиннером в :issue:`39395`.)"

#: ../../whatsnew/3.9.rst:610
msgid ""
"Added :func:`os.waitstatus_to_exitcode` function: convert a wait status to "
"an exit code. (Contributed by Victor Stinner in :issue:`40094`.)"
msgstr ""
"Добавлена ​​функция :func:`os.waitstatus_to_exitcode`: преобразует статус "
"ожидания в код выхода. (Предоставлено Виктором Стиннером в :issue:`40094`.)"

#: ../../whatsnew/3.9.rst:615
msgid "pathlib"
msgstr "pathlib"

#: ../../whatsnew/3.9.rst:617
msgid ""
"Added :meth:`pathlib.Path.readlink()` which acts similarly to :func:`os."
"readlink`. (Contributed by Girts Folkmanis in :issue:`30618`)"
msgstr ""

#: ../../whatsnew/3.9.rst:622
msgid "pdb"
msgstr "pdb"

#: ../../whatsnew/3.9.rst:624
msgid ""
"On Windows now :class:`~pdb.Pdb` supports ``~/.pdbrc``. (Contributed by Tim "
"Hopper and Dan Lidral-Porter in :issue:`20523`.)"
msgstr ""
"В Windows теперь :class:`~pdb.Pdb` поддерживает ``~/.pdbrc``. (Предоставлено "
"Тимом Хоппером и Дэном Лидралом-Портером в :issue:`20523`.)"

#: ../../whatsnew/3.9.rst:628
msgid "poplib"
msgstr "poplib"

#: ../../whatsnew/3.9.rst:630
msgid ""
":class:`~poplib.POP3` and :class:`~poplib.POP3_SSL` now raise a :class:"
"`ValueError` if the given timeout for their constructor is zero to prevent "
"the creation of a non-blocking socket. (Contributed by Dong-hee Na in :issue:"
"`39259`.)"
msgstr ""

#: ../../whatsnew/3.9.rst:635
msgid "pprint"
msgstr "pprint"

#: ../../whatsnew/3.9.rst:637
msgid ""
":mod:`pprint` can now pretty-print :class:`types.SimpleNamespace`. "
"(Contributed by Carl Bordum Hansen in :issue:`37376`.)"
msgstr ""
":mod:`pprint` теперь может красиво печатать :class:`types.SimpleNamespace`. "
"(Предоставлено Карлом Бордумом Хансеном в :issue:`37376`.)"

#: ../../whatsnew/3.9.rst:641
msgid "pydoc"
msgstr "pydoc"

#: ../../whatsnew/3.9.rst:643
msgid ""
"The documentation string is now shown not only for class, function, method "
"etc, but for any object that has its own ``__doc__`` attribute. (Contributed "
"by Serhiy Storchaka in :issue:`40257`.)"
msgstr ""

#: ../../whatsnew/3.9.rst:648
msgid "random"
msgstr "случайный"

#: ../../whatsnew/3.9.rst:650
msgid ""
"Added a new :attr:`random.Random.randbytes` method: generate random bytes. "
"(Contributed by Victor Stinner in :issue:`40286`.)"
msgstr ""
"Добавлен новый метод :attr:`random.Random.randbytes`: генерировать случайные "
"байты. (Предоставлено Виктором Стиннером в :issue:`40286`.)"

#: ../../whatsnew/3.9.rst:654
msgid "signal"
msgstr "сигнал"

#: ../../whatsnew/3.9.rst:656
msgid ""
"Exposed the Linux-specific :func:`signal.pidfd_send_signal` for sending to "
"signals to a process using a file descriptor instead of a pid. (:issue:"
"`38712`)"
msgstr ""
"Предоставлена ​​специфичная для Linux :func:`signal.pidfd_send_signal` для "
"отправки сигналов процессу с использованием файлового дескриптора вместо "
"pid. (:issue:`38712`)"

#: ../../whatsnew/3.9.rst:660
msgid "smtplib"
msgstr "smtplib"

#: ../../whatsnew/3.9.rst:662
msgid ""
":class:`~smtplib.SMTP` and :class:`~smtplib.SMTP_SSL` now raise a :class:"
"`ValueError` if the given timeout for their constructor is zero to prevent "
"the creation of a non-blocking socket. (Contributed by Dong-hee Na in :issue:"
"`39259`.)"
msgstr ""

#: ../../whatsnew/3.9.rst:666
msgid ""
":class:`~smtplib.LMTP` constructor  now has an optional *timeout* parameter. "
"(Contributed by Dong-hee Na in :issue:`39329`.)"
msgstr ""

#: ../../whatsnew/3.9.rst:670
msgid "socket"
msgstr "сокет"

#: ../../whatsnew/3.9.rst:672
msgid ""
"The :mod:`socket` module now exports the :data:`~socket."
"CAN_RAW_JOIN_FILTERS` constant on Linux 4.1 and greater. (Contributed by "
"Stefan Tatschner and Zackery Spytz in :issue:`25780`.)"
msgstr ""

#: ../../whatsnew/3.9.rst:676
msgid ""
"The socket module now supports the :data:`~socket.CAN_J1939` protocol on "
"platforms that support it.  (Contributed by Karl Ding in :issue:`40291`.)"
msgstr ""

#: ../../whatsnew/3.9.rst:679
msgid ""
"The socket module now has the :func:`socket.send_fds` and :func:`socket."
"recv_fds` functions. (Contributed by Joannah Nanjekye, Shinya Okano and "
"Victor Stinner in :issue:`28724`.)"
msgstr ""
"Модуль сокета теперь имеет функции :func:`socket.send_fds` и :func:`socket."
"recv_fds`. (Предоставлено Джоанной Нанджеке, Шинья Окано и Виктором "
"Стиннером в :issue:`28724`.)"

#: ../../whatsnew/3.9.rst:685
msgid "time"
msgstr "время"

#: ../../whatsnew/3.9.rst:687
msgid ""
"On AIX, :func:`~time.thread_time` is now implemented with "
"``thread_cputime()`` which has nanosecond resolution, rather than "
"``clock_gettime(CLOCK_THREAD_CPUTIME_ID)`` which has a resolution of 10 ms. "
"(Contributed by Batuhan Taskaya in :issue:`40192`)"
msgstr ""

#: ../../whatsnew/3.9.rst:693
msgid "sys"
msgstr "sys"

#: ../../whatsnew/3.9.rst:695
msgid ""
"Added a new :attr:`sys.platlibdir` attribute: name of the platform-specific "
"library directory. It is used to build the path of standard library and the "
"paths of installed extension modules. It is equal to ``\"lib\"`` on most "
"platforms.  On Fedora and SuSE, it is equal to ``\"lib64\"`` on 64-bit "
"platforms. (Contributed by Jan Matějek, Matěj Cepl, Charalampos Stratakis "
"and Victor Stinner in :issue:`1294959`.)"
msgstr ""

#: ../../whatsnew/3.9.rst:701
msgid ""
"Previously, :attr:`sys.stderr` was block-buffered when non-interactive. Now "
"``stderr`` defaults to always being line-buffered. (Contributed by Jendrik "
"Seipp in :issue:`13601`.)"
msgstr ""

#: ../../whatsnew/3.9.rst:706
msgid "tracemalloc"
msgstr "tracemalloc"

#: ../../whatsnew/3.9.rst:708
msgid ""
"Added :func:`tracemalloc.reset_peak` to set the peak size of traced memory "
"blocks to the current size, to measure the peak of specific pieces of code. "
"(Contributed by Huon Wilson in :issue:`40630`.)"
msgstr ""
"Добавлен :func:`tracemalloc.reset_peak` для установки максимального размера "
"отслеживаемых блоков памяти на текущий размер, чтобы измерить пиковый размер "
"определенных фрагментов кода. (Предоставлено Хуоном Уилсоном в :issue:"
"`40630`.)"

#: ../../whatsnew/3.9.rst:713 ../../whatsnew/3.9.rst:1496
msgid "typing"
msgstr "печатание"

#: ../../whatsnew/3.9.rst:715
msgid ""
":pep:`593` introduced an :data:`typing.Annotated` type to decorate existing "
"types with context-specific metadata and new ``include_extras`` parameter "
"to :func:`typing.get_type_hints` to access the metadata at runtime. "
"(Contributed by Till Varoquaux and Konstantin Kashin.)"
msgstr ""
":pep:`593` представил тип :data:`typing.Annotated` для украшения "
"существующих типов контекстно-зависимыми метаданными и новый параметр "
"``include_extras`` для :func:`typing.get_type_hints` для доступа к "
"метаданным во время выполнения. (Сообщили Тилль Варокво и Константин Кашин.)"

#: ../../whatsnew/3.9.rst:721
msgid "unicodedata"
msgstr "unicodedata"

#: ../../whatsnew/3.9.rst:723
msgid ""
"The Unicode database has been updated to version 13.0.0. (:issue:`39926`)."
msgstr "База данных Unicode обновлена ​​до версии 13.0.0. (:issue:`39926`)."

#: ../../whatsnew/3.9.rst:726
msgid "venv"
msgstr "venv"

#: ../../whatsnew/3.9.rst:728
msgid ""
"The activation scripts provided by :mod:`venv` now all specify their prompt "
"customization consistently by always using the value specified by "
"``__VENV_PROMPT__``. Previously some scripts unconditionally used "
"``__VENV_PROMPT__``, others only if it happened to be set (which was the "
"default case), and one used ``__VENV_NAME__`` instead. (Contributed by Brett "
"Cannon in :issue:`37663`.)"
msgstr ""
"Все сценарии активации, предоставляемые :mod:`venv`, теперь последовательно "
"определяют настройку приглашений, всегда используя значение, указанное в "
"``__VENV_PROMPT__``. Раньше некоторые скрипты использовали "
"``__VENV_PROMPT__`` безоговорочно, другие - только в том случае, если он был "
"установлен (что было по умолчанию), а один вместо этого использовал "
"``__VENV_NAME__``. (Предоставлено Бреттом Кэнноном в :issue:`37663`.)"

#: ../../whatsnew/3.9.rst:736
msgid "xml"
msgstr "xml"

#: ../../whatsnew/3.9.rst:738
msgid ""
"White space characters within attributes are now preserved when serializing :"
"mod:`xml.etree.ElementTree` to XML file. EOLNs are no longer normalized to "
"\"\\n\". This is the result of discussion about how to interpret section "
"2.11 of XML spec. (Contributed by Mefistotelis in :issue:`39011`.)"
msgstr ""
"Пробелы внутри атрибутов теперь сохраняются при сериализации :mod:`xml.etree."
"ElementTree`в XML-файл. EOLN больше не нормализуются до \"\\n\". Это "
"результат обсуждения того, как интерпретировать раздел 2.11 спецификации "
"XML. (Предоставлено Mefistotelis в :issue:`39011`.)"

#: ../../whatsnew/3.9.rst:746
msgid "Optimizations"
msgstr "Оптимизации"

#: ../../whatsnew/3.9.rst:748
msgid ""
"Optimized the idiom for assignment a temporary variable in comprehensions. "
"Now ``for y in [expr]`` in comprehensions is as fast as a simple assignment "
"``y = expr``.  For example:"
msgstr ""
"Оптимизирована идиома назначения временной переменной в понимании. Теперь "
"``for y в [expr]`` в понимании выполняется так же быстро, как простое "
"присваивание ``y = expr``. Например:"

#: ../../whatsnew/3.9.rst:752
msgid "sums = [s for s in [0] for x in data for s in [s + x]]"
msgstr "sums = [s for s in [0] for x in data for s in [s + x]]"

#: ../../whatsnew/3.9.rst:754
msgid ""
"Unlike the ``:=`` operator this idiom does not leak a variable to the outer "
"scope."
msgstr ""
"В отличие от оператора ``:=`` эта идиома не пропускает переменную во внешнюю "
"область видимости."

#: ../../whatsnew/3.9.rst:757
msgid "(Contributed by Serhiy Storchaka in :issue:`32856`.)"
msgstr "(Предоставлено Сергеем Сторчакой в :issue:`32856`.)"

#: ../../whatsnew/3.9.rst:759
msgid ""
"Optimized signal handling in multithreaded applications. If a thread "
"different than the main thread gets a signal, the bytecode evaluation loop "
"is no longer interrupted at each bytecode instruction to check for pending "
"signals which cannot be handled. Only the main thread of the main "
"interpreter can handle signals."
msgstr ""
"Оптимизированная обработка сигналов в многопоточных приложениях. Если поток, "
"отличный от основного потока, получает сигнал, цикл оценки байт-кода больше "
"не прерывается на каждой инструкции байт-кода для проверки ожидающих "
"сигналов, которые не могут быть обработаны. Обрабатывать сигналы может "
"только основной поток основного интерпретатора."

#: ../../whatsnew/3.9.rst:765
msgid ""
"Previously, the bytecode evaluation loop was interrupted at each instruction "
"until the main thread handles signals. (Contributed by Victor Stinner in :"
"issue:`40010`.)"
msgstr ""
"Раньше цикл оценки байт-кода прерывался на каждой инструкции до тех пор, "
"пока основной поток не обработает сигналы. (Предоставлено Виктором Стиннером "
"в :issue:`40010`.)"

#: ../../whatsnew/3.9.rst:769
msgid ""
"Optimized the :mod:`subprocess` module on FreeBSD using ``closefrom()``. "
"(Contributed by Ed Maste, Conrad Meyer, Kyle Evans, Kubilay Kocak and Victor "
"Stinner in :issue:`38061`.)"
msgstr ""
"Оптимизирован модуль :mod:`subprocess` во FreeBSD с помощью ``closefrom()``. "
"(Предоставлено Эдом Масте, Конрадом Мейером, Кайлом Эвансом, Кубилаем "
"Кочаком и Виктором Стиннером в :issue:`38061`.)"

#: ../../whatsnew/3.9.rst:773
msgid ""
":c:func:`PyLong_FromDouble` is now up to 1.87x faster for values that fit "
"into :c:expr:`long`. (Contributed by Sergey Fedoseev in :issue:`37986`.)"
msgstr ""
":c:func:`PyLong_FromDouble` теперь работает до 1,87 раз быстрее для "
"значений, которые соответствуют :c:expr:`long`. (Внесено Сергеем Федосеевым "
"в :issue:`37986`.)"

#: ../../whatsnew/3.9.rst:777
msgid ""
"A number of Python builtins (:class:`range`, :class:`tuple`, :class:`set`, :"
"class:`frozenset`, :class:`list`, :class:`dict`) are now sped up by using :"
"pep:`590` vectorcall protocol. (Contributed by Dong-hee Na, Mark Shannon, "
"Jeroen Demeyer and Petr Viktorin in :issue:`37207`.)"
msgstr ""

#: ../../whatsnew/3.9.rst:782
msgid ""
"Optimized :func:`~set.difference_update` for the case when the other set is "
"much larger than the base set. (Suggested by Evgeny Kapun with code "
"contributed by Michele Orrù in :issue:`8425`.)"
msgstr ""
":func:`~set.difference_update` оптимизирован для случая, когда другой набор "
"намного больше базового. (Предложено Евгением Капуном, код предоставлен "
"Мишелем Орру в :issue:`8425`.)"

#: ../../whatsnew/3.9.rst:786
msgid ""
"Python's small object allocator (``obmalloc.c``) now allows (no more than) "
"one empty arena to remain available for immediate reuse, without returning "
"it to the OS.  This prevents thrashing in simple loops where an arena could "
"be created and destroyed anew on each iteration. (Contributed by Tim Peters "
"in :issue:`37257`.)"
msgstr ""
"Распределитель небольших объектов Python (obmalloc.c) теперь позволяет (не "
"более) одной пустой арене оставаться доступной для немедленного повторного "
"использования без возврата ее в ОС. Это предотвращает возникновение простых "
"циклов, в которых арена может создаваться и уничтожаться заново на каждой "
"итерации. (Предоставлено Тимом Питерсом в :issue:`37257`.)"

#: ../../whatsnew/3.9.rst:792
msgid ""
":term:`floor division` of float operation now has a better performance. Also "
"the message of :exc:`ZeroDivisionError` for this operation is updated. "
"(Contributed by Dong-hee Na in :issue:`39434`.)"
msgstr ""

#: ../../whatsnew/3.9.rst:796
msgid ""
"Decoding short ASCII strings with UTF-8 and ascii codecs is now about 15% "
"faster.  (Contributed by Inada Naoki in :issue:`37348`.)"
msgstr ""
"Декодирование коротких строк ASCII с помощью кодеков UTF-8 и ascii теперь "
"происходит примерно на 15 % быстрее. (Предоставлено Инадой Наоки в :issue:"
"`37348`.)"

#: ../../whatsnew/3.9.rst:799
msgid ""
"Here's a summary of performance improvements from Python 3.4 through Python "
"3.9:"
msgstr ""
"Вот краткий обзор улучшений производительности с Python 3.4 по Python 3.9:"

#: ../../whatsnew/3.9.rst:846
msgid ""
"These results were generated from the variable access benchmark script at: "
"``Tools/scripts/var_access_benchmark.py``. The benchmark script displays "
"timings in nanoseconds.  The benchmarks were measured on an `Intel® Core™ "
"i7-4960HQ processor <https://ark.intel.com/content/www/us/en/ark/"
"products/76088/intel-core-i7-4960hq-processor-6m-cache-up-to-3-80-ghz."
"html>`_ running the macOS 64-bit builds found at `python.org <https://www."
"python.org/downloads/mac-osx/>`_."
msgstr ""

#: ../../whatsnew/3.9.rst:856
msgid "Deprecated"
msgstr "Устарел"

#: ../../whatsnew/3.9.rst:858
msgid ""
"The distutils ``bdist_msi`` command is now deprecated, use ``bdist_wheel`` "
"(wheel packages) instead. (Contributed by Hugo van Kemenade in :issue:"
"`39586`.)"
msgstr ""
"Команда distutils ``bdist_msi`` устарела, вместо нее используйте "
"``bdist_wheel`` (пакеты колес). (Предоставлено Хьюго ван Кеменаде в :issue:"
"`39586`.)"

#: ../../whatsnew/3.9.rst:862
msgid ""
"Currently :func:`math.factorial` accepts :class:`float` instances with non-"
"negative integer values (like ``5.0``).  It raises a :exc:`ValueError` for "
"non-integral and negative floats.  It is now deprecated.  In future Python "
"versions it will raise a :exc:`TypeError` for all floats. (Contributed by "
"Serhiy Storchaka in :issue:`37315`.)"
msgstr ""
"В настоящее время :func:`math.factorial` принимает экземпляры :class:`float` "
"с неотрицательными целочисленными значениями (например, ``5.0``). Он "
"вызывает :exc:`ValueError` для нецелых и отрицательных чисел с плавающей "
"запятой. Сейчас оно устарело. В будущих версиях Python будет выдаваться "
"ошибка :exc:`TypeError` для всех чисел с плавающей запятой. (Предоставлено "
"Сергеем Сторчакой в ​​:issue:`37315`.)"

#: ../../whatsnew/3.9.rst:868
msgid ""
"The :mod:`parser` and :mod:`symbol` modules are deprecated and will be "
"removed in future versions of Python. For the majority of use cases, users "
"can leverage the Abstract Syntax Tree (AST) generation and compilation "
"stage, using the :mod:`ast` module."
msgstr ""

#: ../../whatsnew/3.9.rst:873
msgid ""
"The Public C API functions :c:func:`PyParser_SimpleParseStringFlags`, :c:"
"func:`PyParser_SimpleParseStringFlagsFilename`, :c:func:"
"`PyParser_SimpleParseFileFlags` and :c:func:`PyNode_Compile` are deprecated "
"and will be removed in Python 3.10 together with the old parser."
msgstr ""

#: ../../whatsnew/3.9.rst:878
msgid ""
"Using :data:`NotImplemented` in a boolean context has been deprecated, as it "
"is almost exclusively the result of incorrect rich comparator "
"implementations. It will be made a :exc:`TypeError` in a future version of "
"Python. (Contributed by Josh Rosenberg in :issue:`35712`.)"
msgstr ""
"Использование :data:`NotImplemented` в логическом контексте устарело, "
"поскольку оно почти всегда является результатом неправильной реализации "
"расширенного компаратора. В будущей версии Python это будет преобразовано в :"
"exc:`TypeError`. (Предоставлено Джошем Розенбергом в :issue:`35712`.)"

#: ../../whatsnew/3.9.rst:884
msgid ""
"The :mod:`random` module currently accepts any hashable type as a possible "
"seed value.  Unfortunately, some of those types are not guaranteed to have a "
"deterministic hash value.  After Python 3.9, the module will restrict its "
"seeds to :const:`None`, :class:`int`, :class:`float`, :class:`str`, :class:"
"`bytes`, and :class:`bytearray`."
msgstr ""
"Модуль :mod:`random` в настоящее время принимает любой хэшируемый тип в "
"качестве возможного начального значения. К сожалению, некоторые из этих "
"типов не гарантированно имеют детерминированное значение хеш-функции. После "
"Python 3.9 модуль будет ограничивать свои начальные значения :const:`None`, :"
"class:`int`, :class:`float`, :class:`str`, :class:`bytes` и :class: "
"`bytearray`."

#: ../../whatsnew/3.9.rst:890
msgid ""
"Opening the :class:`~gzip.GzipFile` file for writing without specifying the "
"*mode* argument is deprecated.  In future Python versions it will always be "
"opened for reading by default.  Specify the *mode* argument for opening it "
"for writing and silencing a warning. (Contributed by Serhiy Storchaka in :"
"issue:`28286`.)"
msgstr ""
"Открытие файла :class:`~gzip.GzipFile` для записи без указания аргумента "
"*mode* устарело. В будущих версиях Python он всегда будет открыт для чтения "
"по умолчанию. Укажите аргумент *mode*, чтобы открыть его для записи и "
"отключить предупреждение. (Предоставлено Сергеем Сторчакой в ​​:issue:`28286`.)"

#: ../../whatsnew/3.9.rst:896
msgid ""
"Deprecated the ``split()`` method of :class:`_tkinter.TkappType` in favour "
"of the ``splitlist()`` method which has more consistent and predicable "
"behavior. (Contributed by Serhiy Storchaka in :issue:`38371`.)"
msgstr ""

#: ../../whatsnew/3.9.rst:901
msgid ""
"The explicit passing of coroutine objects to :func:`asyncio.wait` has been "
"deprecated and will be removed in version 3.11. (Contributed by Yury "
"Selivanov and Kyle Stanley in :issue:`34790`.)"
msgstr ""
"Явная передача объектов сопрограммы в :func:`asyncio.wait` устарела и будет "
"удалена в версии 3.11. (Предоставлено Юрием Селивановым и Кайлом Стэнли в :"
"issue:`34790`.)"

#: ../../whatsnew/3.9.rst:905
msgid ""
"binhex4 and hexbin4 standards are now deprecated. The :mod:`binhex` module "
"and the following :mod:`binascii` functions are now deprecated:"
msgstr ""

#: ../../whatsnew/3.9.rst:908
msgid ":func:`~binascii.b2a_hqx`, :func:`~binascii.a2b_hqx`"
msgstr ":func:`~binascii.b2a_hqx`, :func:`~binascii.a2b_hqx`"

#: ../../whatsnew/3.9.rst:909
msgid ":func:`~binascii.rlecode_hqx`, :func:`~binascii.rledecode_hqx`"
msgstr ":func:`~binascii.rlecode_hqx`, :func:`~binascii.rledecode_hqx`"

#: ../../whatsnew/3.9.rst:911
msgid "(Contributed by Victor Stinner in :issue:`39353`.)"
msgstr "(Предоставлено Виктором Стиннером в :issue:`39353`.)"

#: ../../whatsnew/3.9.rst:913
msgid ""
":mod:`ast` classes ``slice``, ``Index`` and ``ExtSlice`` are considered "
"deprecated and will be removed in future Python versions.  ``value`` itself "
"should be used instead of ``Index(value)``.  ``Tuple(slices, Load())`` "
"should be used instead of ``ExtSlice(slices)``. (Contributed by Serhiy "
"Storchaka in :issue:`34822`.)"
msgstr ""
":mod:`ast` Классы ``slice``, ``Index`` и ``ExtSlice`` считаются устаревшими "
"и будут удалены в будущих версиях Python. Вместо ``Index(value)`` следует "
"использовать ``value``. ``Tuple(slices, Load())`` следует использовать "
"вместо ``ExtSlice(slices)``. (Предоставлено Сергеем Сторчакой в ​​:issue:"
"`34822`.)"

#: ../../whatsnew/3.9.rst:919
msgid ""
":mod:`ast` classes ``Suite``, ``Param``, ``AugLoad`` and ``AugStore`` are "
"considered deprecated and will be removed in future Python versions. They "
"were not generated by the parser and not accepted by the code generator in "
"Python 3. (Contributed by Batuhan Taskaya in :issue:`39639` and :issue:"
"`39969` and Serhiy Storchaka in :issue:`39988`.)"
msgstr ""
":mod:`ast` Классы ``Suite``, ``Param``, ``AugLoad`` и ``AugStore`` считаются "
"устаревшими и будут удалены в будущих версиях Python. Они не были "
"сгенерированы парсером и не приняты генератором кода в Python 3."

#: ../../whatsnew/3.9.rst:926
msgid ""
"The :c:func:`PyEval_InitThreads` and :c:func:`PyEval_ThreadsInitialized` "
"functions are now deprecated and will be removed in Python 3.11. Calling :c:"
"func:`PyEval_InitThreads` now does nothing. The :term:`GIL` is initialized "
"by :c:func:`Py_Initialize()` since Python 3.7. (Contributed by Victor "
"Stinner in :issue:`39877`.)"
msgstr ""

#: ../../whatsnew/3.9.rst:932
msgid ""
"Passing ``None`` as the first argument to the :func:`shlex.split` function "
"has been deprecated.  (Contributed by Zackery Spytz in :issue:`33262`.)"
msgstr ""
"Передача None в качестве первого аргумента функции :func:`shlex.split` "
"устарела. (Предоставлено Закери Шпитцем в :issue:`33262`.)"

#: ../../whatsnew/3.9.rst:935
msgid ""
":func:`smtpd.MailmanProxy` is now deprecated as it is unusable without an "
"external module, ``mailman``.  (Contributed by Samuel Colvin in :issue:"
"`35800`.)"
msgstr ""

#: ../../whatsnew/3.9.rst:938
msgid ""
"The :mod:`lib2to3` module now emits a :exc:`PendingDeprecationWarning`. "
"Python 3.9 switched to a PEG parser (see :pep:`617`), and Python 3.10 may "
"include new language syntax that is not parsable by lib2to3's LL(1) parser. "
"The ``lib2to3`` module may be removed from the standard library in a future "
"Python version. Consider third-party alternatives such as `LibCST`_ or "
"`parso`_. (Contributed by Carl Meyer in :issue:`40360`.)"
msgstr ""
"Модуль :mod:`lib2to3` теперь выдает :exc:`PendingDeprecationWarning`. Python "
"3.9 переключился на парсер PEG (см. :pep:`617`), а Python 3.10 может "
"включать новый синтаксис языка, который не анализируется парсером LL(1) из "
"lib2to3. Модуль ``lib2to3`` может быть удален из стандартной библиотеки в "
"будущей версии Python. Рассмотрите сторонние альтернативы, такие как "
"`LibCST`_ или `parso`_. (Предоставлено Карлом Мейером в :issue:`40360`.)"

#: ../../whatsnew/3.9.rst:946
msgid ""
"The *random* parameter of :func:`random.shuffle` has been deprecated. "
"(Contributed by Raymond Hettinger in :issue:`40465`)"
msgstr ""
"Параметр *random* в :func:`random.shuffle` устарел. (Предоставлено Рэймондом "
"Хеттингером в :issue:`40465`)"

#: ../../whatsnew/3.9.rst:955 ../../whatsnew/3.9.rst:1410
msgid "Removed"
msgstr "Удалено"

#: ../../whatsnew/3.9.rst:957
msgid ""
"The erroneous version at :data:`unittest.mock.__version__` has been removed."
msgstr ""

#: ../../whatsnew/3.9.rst:959
msgid ""
":class:`nntplib.NNTP`: ``xpath()`` and ``xgtitle()`` methods have been "
"removed. These methods are deprecated since Python 3.3. Generally, these "
"extensions are not supported or not enabled by NNTP server administrators. "
"For ``xgtitle()``, please use :meth:`nntplib.NNTP.descriptions` or :meth:"
"`nntplib.NNTP.description` instead. (Contributed by Dong-hee Na in :issue:"
"`39366`.)"
msgstr ""

#: ../../whatsnew/3.9.rst:966
msgid ""
":class:`array.array`: ``tostring()`` and ``fromstring()`` methods have been "
"removed. They were aliases to ``tobytes()`` and ``frombytes()``, deprecated "
"since Python 3.2. (Contributed by Victor Stinner in :issue:`38916`.)"
msgstr ""
":class:`array.array`: методы ``tostring()`` и ``fromstring()`` были удалены. "
"Это были псевдонимы ``tobytes()`` и ``frombytes()``, устаревшие, начиная с "
"Python 3.2. (Предоставлено Виктором Стиннером в :issue:`38916`.)"

#: ../../whatsnew/3.9.rst:971
msgid ""
"The undocumented ``sys.callstats()`` function has been removed. Since Python "
"3.7, it was deprecated and always returned :const:`None`. It required a "
"special build option ``CALL_PROFILE`` which was already removed in Python "
"3.7. (Contributed by Victor Stinner in :issue:`37414`.)"
msgstr ""
"Недокументированная функция sys.callstats() была удалена. Начиная с Python "
"3.7, он устарел и всегда возвращал :const:`None`. Для этого требовался "
"специальный параметр сборки CALL_PROFILE, который уже был удален в Python "
"3.7. (Предоставлено Виктором Стиннером в :issue:`37414`.)"

#: ../../whatsnew/3.9.rst:976
msgid ""
"The ``sys.getcheckinterval()`` and ``sys.setcheckinterval()`` functions have "
"been removed. They were deprecated since Python 3.2. Use :func:`sys."
"getswitchinterval` and :func:`sys.setswitchinterval` instead. (Contributed "
"by Victor Stinner in :issue:`37392`.)"
msgstr ""
"Функции ``sys.getcheckinterval()`` и ``sys.setcheckinterval()`` были "
"удалены. Они устарели, начиная с Python 3.2. Вместо этого используйте :func:"
"`sys.getswitchinterval` и :func:`sys.setswitchinterval`. (Предоставлено "
"Виктором Стиннером в :issue:`37392`.)"

#: ../../whatsnew/3.9.rst:981
msgid ""
"The C function ``PyImport_Cleanup()`` has been removed. It was documented "
"as: \"Empty the module table.  For internal use only.\" (Contributed by "
"Victor Stinner in :issue:`36710`.)"
msgstr ""
"Функция C ``PyImport_Cleanup()`` была удалена. Это было задокументировано "
"как: «Очистить таблицу модулей. Только для внутреннего использования». "
"(Предоставлено Виктором Стиннером в :issue:`36710`.)"

#: ../../whatsnew/3.9.rst:985
msgid ""
"``_dummy_thread`` and ``dummy_threading`` modules have been removed. These "
"modules were deprecated since Python 3.7 which requires threading support. "
"(Contributed by Victor Stinner in :issue:`37312`.)"
msgstr ""
"Модули ``_dummy_thread`` и ``dummy_threading`` были удалены. Эти модули "
"устарели, начиная с версии Python 3.7, которая требует поддержки потоков. "
"(Предоставлено Виктором Стиннером в :issue:`37312`.)"

#: ../../whatsnew/3.9.rst:989
msgid ""
"``aifc.openfp()`` alias to ``aifc.open()``, ``sunau.openfp()`` alias to "
"``sunau.open()``, and ``wave.openfp()`` alias to :func:`wave.open()` have "
"been removed. They were deprecated since Python 3.7. (Contributed by Victor "
"Stinner in :issue:`37320`.)"
msgstr ""

#: ../../whatsnew/3.9.rst:994
msgid ""
"The :meth:`~threading.Thread.isAlive()` method of :class:`threading.Thread` "
"has been removed. It was deprecated since Python 3.8. Use :meth:`~threading."
"Thread.is_alive()` instead. (Contributed by Dong-hee Na in :issue:`37804`.)"
msgstr ""

#: ../../whatsnew/3.9.rst:999
msgid ""
"Methods ``getchildren()`` and ``getiterator()`` of classes :class:`~xml."
"etree.ElementTree.ElementTree` and :class:`~xml.etree.ElementTree.Element` "
"in the :mod:`~xml.etree.ElementTree` module have been removed.  They were "
"deprecated in Python 3.2. Use ``iter(x)`` or ``list(x)`` instead of ``x."
"getchildren()`` and ``x.iter()`` or ``list(x.iter())`` instead of ``x."
"getiterator()``. (Contributed by Serhiy Storchaka in :issue:`36543`.)"
msgstr ""
"Методы getchildren() и getiterator() классов :class:`~xml.etree.ElementTree."
"ElementTree` и :class:`~xml.etree.ElementTree.Element` в :mod: Модуль `~xml."
"etree.ElementTree` был удален. Они устарели в Python 3.2. Используйте "
"``iter(x)`` или ``list(x)`` вместо ``x.getchildren()`` и ``x.iter()`` или "
"``list(x.iter()) `` вместо ``x.getiterator()``. (Предоставлено Сергеем "
"Сторчакой в ​​:issue:`36543`.)"

#: ../../whatsnew/3.9.rst:1007
msgid ""
"The old :mod:`plistlib` API has been removed, it was deprecated since Python "
"3.4. Use the :func:`~plistlib.load`, :func:`~plistlib.loads`, :func:"
"`~plistlib.dump`, and :func:`~plistlib.dumps` functions. Additionally, the "
"*use_builtin_types* parameter was removed, standard :class:`bytes` objects "
"are always used instead. (Contributed by Jon Janzen in :issue:`36409`.)"
msgstr ""
"Старый API :mod:`plistlib` был удален, он устарел с версии Python 3.4. "
"Используйте функции :func:`~plistlib.load`, :func:`~plistlib.loads`, :func:"
"`~plistlib.dump` и :func:`~plistlib.dumps`. Кроме того, был удален параметр "
"*use_builtin_types*, вместо него всегда используются стандартные объекты :"
"class:`bytes`. (Предоставлено Джоном Янзеном в :issue:`36409`.)"

#: ../../whatsnew/3.9.rst:1013
msgid ""
"The C function ``PyGen_NeedsFinalizing`` has been removed. It was not "
"documented, tested, or used anywhere within CPython after the implementation "
"of :pep:`442`. Patch by Joannah Nanjekye. (Contributed by Joannah Nanjekye "
"in :issue:`15088`)"
msgstr ""
"Функция C PyGen_NeedsFinalizing была удалена. Он не документировался, не "
"тестировался и не использовался где-либо в CPython после реализации :pep:"
"`442`. Патч от Джоанны Нанджеки. (Предоставлено Джоанной Нанжекье в :issue:"
"`15088`)"

#: ../../whatsnew/3.9.rst:1018
msgid ""
"``base64.encodestring()`` and ``base64.decodestring()``, aliases deprecated "
"since Python 3.1, have been removed: use :func:`base64.encodebytes` and :"
"func:`base64.decodebytes` instead. (Contributed by Victor Stinner in :issue:"
"`39351`.)"
msgstr ""
"``base64.encodestring()`` и ``base64.decodestring()``, псевдонимы, "
"устаревшие, начиная с Python 3.1, были удалены: вместо них используйте :func:"
"`base64.encodebytes` и :func:`base64.decodebytes`. (Предоставлено Виктором "
"Стиннером в :issue:`39351`.)"

#: ../../whatsnew/3.9.rst:1023
msgid ""
"``fractions.gcd()`` function has been removed, it was deprecated since "
"Python 3.5 (:issue:`22486`): use :func:`math.gcd` instead. (Contributed by "
"Victor Stinner in :issue:`39350`.)"
msgstr ""
"Функция Fractions.gcd() удалена, она устарела начиная с Python 3.5 (:issue:"
"`22486`): вместо нее используйте :func:`math.gcd`. (Предоставлено Виктором "
"Стиннером в :issue:`39350`.)"

#: ../../whatsnew/3.9.rst:1027
msgid ""
"The *buffering* parameter of :class:`bz2.BZ2File` has been removed. Since "
"Python 3.0, it was ignored and using it emitted a :exc:`DeprecationWarning`. "
"Pass an open file object to control how the file is opened. (Contributed by "
"Victor Stinner in :issue:`39357`.)"
msgstr ""
"Параметр *buffering* файла :class:`bz2.BZ2File` был удален. Начиная с Python "
"3.0, он игнорировался, и при его использовании выдавалось :exc:"
"`DeprecationWarning`. Передайте объект открытого файла, чтобы контролировать "
"способ открытия файла. (Предоставлено Виктором Стиннером в :issue:`39357`.)"

#: ../../whatsnew/3.9.rst:1032
msgid ""
"The *encoding* parameter of :func:`json.loads` has been removed. As of "
"Python 3.1, it was deprecated and ignored; using it has emitted a :exc:"
"`DeprecationWarning` since Python 3.8. (Contributed by Inada Naoki in :issue:"
"`39377`)"
msgstr ""
"Параметр *encoding* файла :func:`json.loads` был удален. Начиная с Python "
"3.1, он устарел и игнорировался; его использование выдавало :exc:"
"`DeprecationWarning` начиная с Python 3.8. (Предоставлено Инадой Наоки в :"
"issue:`39377`)"

#: ../../whatsnew/3.9.rst:1037
msgid ""
"``with (await asyncio.lock):`` and ``with (yield from asyncio.lock):`` "
"statements are not longer supported, use ``async with lock`` instead.  The "
"same is correct for ``asyncio.Condition`` and ``asyncio.Semaphore``. "
"(Contributed by Andrew Svetlov in :issue:`34793`.)"
msgstr ""
"Операторы ``with (await asyncio.lock):`` и ``with (yield from asyncio.lock):"
"`` больше не поддерживаются, вместо этого используйте ``async with lock``. "
"То же самое верно для asyncio.Condition и asyncio.Semaphore. (Предоставлено "
"Андреем Светловым в :issue:`34793`.)"

#: ../../whatsnew/3.9.rst:1042
msgid ""
"The :func:`sys.getcounts` function, the ``-X showalloccount`` command line "
"option and the ``show_alloc_count`` field of the C structure :c:type:"
"`PyConfig` have been removed. They required a special Python build by "
"defining ``COUNT_ALLOCS`` macro. (Contributed by Victor Stinner in :issue:"
"`39489`.)"
msgstr ""

#: ../../whatsnew/3.9.rst:1048
msgid ""
"The ``_field_types`` attribute of the :class:`typing.NamedTuple` class has "
"been removed.  It was deprecated since Python 3.8.  Use the "
"``__annotations__`` attribute instead. (Contributed by Serhiy Storchaka in :"
"issue:`40182`.)"
msgstr ""
"Атрибут ``_field_types`` класса :class:`typing.NamedTuple` был удален. Он "
"устарел с Python 3.8. Вместо этого используйте атрибут ``__annotations__``. "
"(Предоставлено Сергеем Сторчакой в ​​:issue:`40182`.)"

#: ../../whatsnew/3.9.rst:1053
msgid ""
"The :meth:`symtable.SymbolTable.has_exec` method has been removed. It was "
"deprecated since 2006, and only returning ``False`` when it's called. "
"(Contributed by Batuhan Taskaya in :issue:`40208`)"
msgstr ""

#: ../../whatsnew/3.9.rst:1057
msgid ""
"The :meth:`asyncio.Task.current_task` and :meth:`asyncio.Task.all_tasks` "
"have been removed. They were deprecated since Python 3.7 and you can use :"
"func:`asyncio.current_task` and :func:`asyncio.all_tasks` instead. "
"(Contributed by Rémi Lapeyre in :issue:`40967`)"
msgstr ""

#: ../../whatsnew/3.9.rst:1062
msgid ""
"The ``unescape()`` method in the :class:`html.parser.HTMLParser` class has "
"been removed (it was deprecated since Python 3.4).  :func:`html.unescape` "
"should be used for converting character references to the corresponding "
"unicode characters."
msgstr ""
"Метод ``unescape()`` в классе :class:`html.parser.HTMLParser` был удален (он "
"устарел, начиная с Python 3.4). :func:`html.unescape` следует использовать "
"для преобразования ссылок на символы в соответствующие символы Юникода."

#: ../../whatsnew/3.9.rst:1069 ../../whatsnew/3.9.rst:1336
msgid "Porting to Python 3.9"
msgstr "Портирование на Python 3.9"

#: ../../whatsnew/3.9.rst:1071
msgid ""
"This section lists previously described changes and other bugfixes that may "
"require changes to your code."
msgstr ""
"В этом разделе перечислены ранее описанные изменения и другие исправления "
"ошибок, которые могут потребовать внесения изменений в ваш код."

#: ../../whatsnew/3.9.rst:1076
msgid "Changes in the Python API"
msgstr "Изменения в API Python"

#: ../../whatsnew/3.9.rst:1078
msgid ""
":func:`__import__` and :func:`importlib.util.resolve_name` now raise :exc:"
"`ImportError` where it previously raised :exc:`ValueError`. Callers catching "
"the specific exception type and supporting both Python 3.9 and earlier "
"versions will need to catch both using ``except (ImportError, ValueError):``."
msgstr ""
":func:`__import__` и :func:`importlib.util.resolve_name` теперь вызывают :"
"exc:`ImportError` там, где ранее вызывалось :exc:`ValueError`. Вызывающие "
"программы, перехватывающие определенный тип исключения и поддерживающие "
"Python 3.9 и более ранние версии, должны будут перехватывать оба исключения, "
"используя ``кроме (ImportError, ValueError):``."

#: ../../whatsnew/3.9.rst:1083
msgid ""
"The :mod:`venv` activation scripts no longer special-case when "
"``__VENV_PROMPT__`` is set to ``\"\"``."
msgstr ""
"Скрипты активации :mod:`venv` больше не являются особым случаем, когда для "
"``__VENV_PROMPT__`` установлено значение ``\"\"``."

#: ../../whatsnew/3.9.rst:1086
msgid ""
"The :meth:`select.epoll.unregister` method no longer ignores the :data:"
"`~errno.EBADF` error. (Contributed by Victor Stinner in :issue:`39239`.)"
msgstr ""

#: ../../whatsnew/3.9.rst:1090
msgid ""
"The *compresslevel* parameter of :class:`bz2.BZ2File` became keyword-only, "
"since the *buffering* parameter has been removed. (Contributed by Victor "
"Stinner in :issue:`39357`.)"
msgstr ""
"Параметр *compresslevel* файла :class:`bz2.BZ2File` стал доступным только по "
"ключевым словам, поскольку параметр *buffering* был удален. (Предоставлено "
"Виктором Стиннером в :issue:`39357`.)"

#: ../../whatsnew/3.9.rst:1094
msgid ""
"Simplified AST for subscription. Simple indices will be represented by their "
"value, extended slices will be represented as tuples. ``Index(value)`` will "
"return a ``value`` itself, ``ExtSlice(slices)`` will return ``Tuple(slices, "
"Load())``. (Contributed by Serhiy Storchaka in :issue:`34822`.)"
msgstr ""
"Упрощенный AST для подписки. Простые индексы будут представлены их "
"значениями, расширенные срезы — кортежами. ``Index(value)`` вернет само "
"``значение``, ``ExtSlice(slices)`` вернет ``Tuple(slices, Load())``. "
"(Предоставлено Сергеем Сторчакой в ​​:issue:`34822`.)"

#: ../../whatsnew/3.9.rst:1100
msgid ""
"The :mod:`importlib` module now ignores the :envvar:`PYTHONCASEOK` "
"environment variable when the :option:`-E` or :option:`-I` command line "
"options are being used."
msgstr ""
"Модуль :mod:`importlib` теперь игнорирует переменную среды :envvar:"
"`PYTHONCASEOK`, когда используются параметры командной строки :option:`-E` "
"или :option:`-I`."

#: ../../whatsnew/3.9.rst:1104
msgid ""
"The *encoding* parameter has been added to the classes :class:`ftplib.FTP` "
"and :class:`ftplib.FTP_TLS` as a keyword-only parameter, and the default "
"encoding is changed from Latin-1 to UTF-8 to follow :rfc:`2640`."
msgstr ""
"Параметр *encoding* был добавлен в классы :class:`ftplib.FTP` и :class:"
"`ftplib.FTP_TLS` как параметр, содержащий только ключевые слова, а кодировка "
"по умолчанию изменена с Latin-1 на UTF-8 на следуйте :rfc:`2640`."

#: ../../whatsnew/3.9.rst:1108
msgid ""
":meth:`asyncio.loop.shutdown_default_executor` has been added to :class:"
"`~asyncio.AbstractEventLoop`, meaning alternative event loops that inherit "
"from it should have this method defined. (Contributed by Kyle Stanley in :"
"issue:`34037`.)"
msgstr ""
":meth:`asyncio.loop.shutdown_default_executor` был добавлен в :class:"
"`~asyncio.AbstractEventLoop`, что означает, что альтернативные циклы "
"событий, которые наследуются от него, должны иметь этот метод. "
"(Предоставлено Кайлом Стэнли в :issue:`34037`.)"

#: ../../whatsnew/3.9.rst:1113
msgid ""
"The constant values of future flags in the :mod:`__future__` module is "
"updated in order to prevent collision with compiler flags. Previously "
"``PyCF_ALLOW_TOP_LEVEL_AWAIT`` was clashing with ``CO_FUTURE_DIVISION``. "
"(Contributed by Batuhan Taskaya in :issue:`39562`)"
msgstr ""
"Постоянные значения будущих флагов в модуле :mod:`__future__` обновляются, "
"чтобы предотвратить конфликт с флагами компилятора. Ранее "
"PyCF_ALLOW_TOP_LEVEL_AWAIT конфликтовал с CO_FUTURE_DIVISION. (Предоставлено "
"Батуханом Таской в ​​:issue:`39562`)"

#: ../../whatsnew/3.9.rst:1118
msgid ""
"``array('u')`` now uses ``wchar_t`` as C type instead of ``Py_UNICODE``. "
"This change doesn't affect to its behavior because ``Py_UNICODE`` is alias "
"of ``wchar_t`` since Python 3.3. (Contributed by Inada Naoki in :issue:"
"`34538`.)"
msgstr ""

#: ../../whatsnew/3.9.rst:1123
msgid ""
"The :func:`logging.getLogger` API now returns the root logger when passed "
"the name ``'root'``, whereas previously it returned a non-root logger named "
"``'root'``. This could affect cases where user code explicitly wants a non-"
"root logger named ``'root'``, or instantiates a logger using ``logging."
"getLogger(__name__)`` in some top-level module called ``'root.py'``. "
"(Contributed by Vinay Sajip in :issue:`37742`.)"
msgstr ""
"API :func:`logging.getLogger` теперь возвращает корневой регистратор при "
"передаче имени ``'root'``, тогда как раньше он возвращал некорневой "
"регистратор с именем ``'root'``. Это может повлиять на случаи, когда "
"пользовательский код явно требует наличия средства ведения журнала без "
"полномочий root с именем «root» или создает экземпляр средства ведения "
"журнала с помощью «logging.getLogger(__name__)» в каком-либо модуле верхнего "
"уровня под названием «root». py'``. (Предоставлено Винаем Саджипом в :issue:"
"`37742`.)"

#: ../../whatsnew/3.9.rst:1130
msgid ""
"Division handling of :class:`~pathlib.PurePath` now returns "
"``NotImplemented`` instead of raising a :exc:`TypeError` when passed "
"something other than an instance of ``str`` or :class:`~pathlib.PurePath`.  "
"This allows creating compatible classes that don't inherit from those "
"mentioned types. (Contributed by Roger Aiudi in :issue:`34775`)."
msgstr ""

#: ../../whatsnew/3.9.rst:1136
msgid ""
"Starting with Python 3.9.5 the :mod:`ipaddress` module no longer accepts any "
"leading zeros in IPv4 address strings. Leading zeros are ambiguous and "
"interpreted as octal notation by some libraries. For example the legacy "
"function :func:`socket.inet_aton` treats leading zeros as octal notatation. "
"glibc implementation of modern :func:`~socket.inet_pton` does not accept any "
"leading zeros. (Contributed by Christian Heimes in :issue:`36384`)."
msgstr ""
"Начиная с Python 3.9.5, модуль :mod:`ipaddress` больше не принимает ведущие "
"нули в строках адреса IPv4. Ведущие нули неоднозначны и некоторыми "
"библиотеками интерпретируются как восьмеричная запись. Например, устаревшая "
"функция :func:`socket.inet_aton` рассматривает ведущие нули как восьмеричную "
"запись. Реализация современного :func:`~socket.inet_pton` в glibc не "
"принимает ведущие нули. (Предоставлено Кристианом Хаймсом в :issue:`36384`)."

#: ../../whatsnew/3.9.rst:1144
msgid ""
":func:`codecs.lookup` now normalizes the encoding name the same way as :func:"
"`encodings.normalize_encoding`, except that :func:`codecs.lookup` also "
"converts the name to lower case. For example, ``\"latex+latin1\"`` encoding "
"name is now normalized to ``\"latex_latin1\"``. (Contributed by Jordon Xu "
"in :issue:`37751`.)"
msgstr ""
":func:`codecs.lookup` теперь нормализует имя кодировки так же, как :func:"
"`encodings.normalize_encoding`, за исключением того, что :func:`codecs."
"lookup` также преобразует имя в нижний регистр. Например, имя кодировки "
"``\"latex+latin1\"`` теперь нормализуется до ``\"latex_latin1\"``. "
"(Предоставлено Джорданом Сюй в :issue:`37751`.)"

#: ../../whatsnew/3.9.rst:1152
msgid "Changes in the C API"
msgstr "Изменения в C API"

#: ../../whatsnew/3.9.rst:1154
msgid ""
"Instances of :ref:`heap-allocated types <heap-types>` (such as those created "
"with :c:func:`PyType_FromSpec` and similar APIs) hold a reference to their "
"type object since Python 3.8. As indicated in the \"Changes in the C API\" "
"of Python 3.8, for the vast majority of cases, there should be no side "
"effect but for types that have a custom :c:member:`~PyTypeObject."
"tp_traverse` function, ensure that all custom ``tp_traverse`` functions of "
"heap-allocated types visit the object's type."
msgstr ""
"Экземпляры :ref:`выделенных в куче типов <heap-types>` (например, созданных "
"с помощью :c:func:`PyType_FromSpec` и подобных API) содержат ссылку на свой "
"объект типа, начиная с Python 3.8. Как указано в разделе «Изменения в C API» "
"Python 3.8, в подавляющем большинстве случаев побочных эффектов быть не "
"должно, но для типов, которые имеют специальную функцию :c:member:"
"`~PyTypeObject.tp_traverse`, убедитесь, что все пользовательские функции "
"``tp_traverse`` типов, выделяемых в куче, обращаются к типу объекта."

#: ../../whatsnew/3.9.rst:1175
msgid ""
"If your traverse function delegates to ``tp_traverse`` of its base class (or "
"another type), ensure that ``Py_TYPE(self)`` is visited only once. Note that "
"only :ref:`heap type <heap-types>` are expected to visit the type in "
"``tp_traverse``."
msgstr ""
"Если ваша функция перемещения делегирует ``tp_traverse`` своего базового "
"класса (или другого типа), убедитесь, что ``Py_TYPE(self)`` посещается "
"только один раз. Обратите внимание, что только :ref:`heap type <heap-types>` "
"должен посещать тип в ``tp_traverse``."

#: ../../whatsnew/3.9.rst:1180
msgid "For example, if your ``tp_traverse`` function includes:"
msgstr "Например, если ваша функция tp_traverse включает в себя:"

#: ../../whatsnew/3.9.rst:1186
msgid "then add:"
msgstr "затем добавьте:"

#: ../../whatsnew/3.9.rst:1199
msgid "(See :issue:`35810` and :issue:`40217` for more information.)"
msgstr "(Дополнительную информацию см. в :issue:`35810` и :issue:`40217`.)"

#: ../../whatsnew/3.9.rst:1201
msgid ""
"The functions ``PyEval_CallObject``, ``PyEval_CallFunction``, "
"``PyEval_CallMethod`` and ``PyEval_CallObjectWithKeywords`` are deprecated. "
"Use :c:func:`PyObject_Call` and its variants instead. (See more details in :"
"issue:`29548`.)"
msgstr ""
"функции ``PyEval_CallObject`` , ``PyEval_CallFunction``, "
"``PyEval_CallMethod`` и ``PyEval_CallObjectWithKeywords`` - это устарело. "
"Вместо этого используйте :c:func:`PyObject_Call` и его варианты. (Более "
"подробную информацию см. в :issue:`29548`.)"

#: ../../whatsnew/3.9.rst:1207
msgid "CPython bytecode changes"
msgstr "Изменения в байт-коде CPython"

#: ../../whatsnew/3.9.rst:1209
msgid ""
"The :opcode:`LOAD_ASSERTION_ERROR` opcode was added for handling the :"
"keyword:`assert` statement. Previously, the assert statement would not work "
"correctly if the :exc:`AssertionError` exception was being shadowed. "
"(Contributed by Zackery Spytz in :issue:`34880`.)"
msgstr ""
"Опкод :opcode:`LOAD_ASSERTION_ERROR` был добавлен для обработки оператора :"
"keyword:`assert`. Раньше оператор утверждения не работал корректно, если "
"скрывалось исключение :exc:`AssertionError`. (Предоставлено Закери Шпитцем "
"в :issue:`34880`.)"

#: ../../whatsnew/3.9.rst:1214
msgid ""
"The :opcode:`COMPARE_OP` opcode was split into four distinct instructions:"
msgstr ""
"Код операции :opcode:`COMPARE_OP` был разделен на четыре отдельные "
"инструкции:"

#: ../../whatsnew/3.9.rst:1216
msgid "``COMPARE_OP`` for rich comparisons"
msgstr "``COMPARE_OP`` для расширенных сравнений."

#: ../../whatsnew/3.9.rst:1217
msgid "``IS_OP`` for 'is' and 'is not' tests"
msgstr "``IS_OP`` для тестов \"есть\" и \"нет\""

#: ../../whatsnew/3.9.rst:1218
msgid "``CONTAINS_OP`` for 'in' and 'not in' tests"
msgstr "``CONTAINS_OP`` для тестов «в» и «не в»"

#: ../../whatsnew/3.9.rst:1219
msgid ""
"``JUMP_IF_NOT_EXC_MATCH`` for checking exceptions in 'try-except' statements."
msgstr ""
"``JUMP_IF_NOT_EXC_MATCH`` для проверки исключений в операторах Try-Exception."

#: ../../whatsnew/3.9.rst:1222
msgid "(Contributed by Mark Shannon in :issue:`39156`.)"
msgstr "(Предоставлено Марком Шенноном в :issue:`39156`.)"

#: ../../whatsnew/3.9.rst:1226
msgid "Build Changes"
msgstr "Изменения сборки"

#: ../../whatsnew/3.9.rst:1228
msgid ""
"Added ``--with-platlibdir`` option to the ``configure`` script: name of the "
"platform-specific library directory, stored in the new :attr:`sys."
"platlibdir` attribute. See :attr:`sys.platlibdir` attribute for more "
"information. (Contributed by Jan Matějek, Matěj Cepl, Charalampos Stratakis "
"and Victor Stinner in :issue:`1294959`.)"
msgstr ""

#: ../../whatsnew/3.9.rst:1234
msgid ""
"The ``COUNT_ALLOCS`` special build macro has been removed. (Contributed by "
"Victor Stinner in :issue:`39489`.)"
msgstr ""
"Специальный макрос сборки ``COUNT_ALLOCS`` был удален. (Предоставлено "
"Виктором Стиннером в :issue:`39489`.)"

#: ../../whatsnew/3.9.rst:1237
msgid ""
"On non-Windows platforms, the :c:func:`setenv` and :c:func:`unsetenv` "
"functions are now required to build Python. (Contributed by Victor Stinner "
"in :issue:`39395`.)"
msgstr ""

#: ../../whatsnew/3.9.rst:1241
msgid ""
"On non-Windows platforms, creating ``bdist_wininst`` installers is now "
"officially unsupported.  (See :issue:`10945` for more details.)"
msgstr ""
"На платформах, отличных от Windows, создание установщиков bdist_wininst "
"теперь официально не поддерживается. (Подробнее см. в :issue:`10945`.)"

#: ../../whatsnew/3.9.rst:1244
msgid ""
"When building Python on macOS from source, ``_tkinter`` now links with non-"
"system Tcl and Tk frameworks if they are installed in ``/Library/"
"Frameworks``, as had been the case on older releases of macOS. If a macOS "
"SDK is explicitly configured, by using :option:`--enable-universalsdk` or ``-"
"isysroot``, only the SDK itself is searched. The default behavior can still "
"be overridden with :option:`--with-tcltk-includes` and :option:`--with-tcltk-"
"libs`. (Contributed by Ned Deily in :issue:`34956`.)"
msgstr ""

#: ../../whatsnew/3.9.rst:1253
msgid ""
"Python can now be built for Windows 10 ARM64. (Contributed by Steve Dower "
"in :issue:`33125`.)"
msgstr ""
"Python теперь можно собрать для Windows 10 ARM64. (Предоставлено Стивом "
"Дауэром в :issue:`33125`.)"

#: ../../whatsnew/3.9.rst:1256
msgid ""
"Some individual tests are now skipped when ``--pgo`` is used.  The tests in "
"question increased the PGO task time significantly and likely didn't help "
"improve optimization of the final executable. This speeds up the task by a "
"factor of about 15x.  Running the full unit test suite is slow.  This change "
"may result in a slightly less optimized build since not as many code "
"branches will be executed.  If you are willing to wait for the much slower "
"build, the old behavior can be restored using ``./configure [..] "
"PROFILE_TASK=\"-m test --pgo-extended\"``.  We make no guarantees as to "
"which PGO task set produces a faster build.  Users who care should run their "
"own relevant benchmarks as results can depend on the environment, workload, "
"and compiler tool chain. (See :issue:`36044` and :issue:`37707` for more "
"details.)"
msgstr ""
"Некоторые отдельные тесты теперь пропускаются при использовании ``--pgo``. "
"Рассматриваемые тесты значительно увеличили время выполнения задачи PGO и, "
"вероятно, не помогли улучшить оптимизацию конечного исполняемого файла. Это "
"ускоряет задачу примерно в 15 раз. Запуск полного набора модульных тестов "
"происходит медленно. Это изменение может привести к несколько менее "
"оптимизированной сборке, поскольку будет выполняться не так много ветвей "
"кода. Если вы готовы подождать гораздо более медленной сборки, старое "
"поведение можно восстановить с помощью ``./configure [..] PROFILE_TASK=\"-m "
"test --pgo-extended\"``. Мы не даем никаких гарантий относительно того, "
"какой набор задач PGO обеспечит более быструю сборку. Заинтересованным "
"пользователям следует провести собственные соответствующие тесты, поскольку "
"результаты могут зависеть от среды, рабочей нагрузки и цепочки инструментов "
"компилятора. (Подробнее см. в :issue:`36044` и :issue:`37707`.)"

#: ../../whatsnew/3.9.rst:1271
msgid "C API Changes"
msgstr "Изменения в C API"

#: ../../whatsnew/3.9.rst:1276
msgid ""
":pep:`573`: Added :c:func:`PyType_FromModuleAndSpec` to associate a module "
"with a class; :c:func:`PyType_GetModule` and :c:func:`PyType_GetModuleState` "
"to retrieve the module and its state; and :c:data:`PyCMethod` and :c:data:"
"`METH_METHOD` to allow a method to access the class it was defined in. "
"(Contributed by Marcel Plch and Petr Viktorin in :issue:`38787`.)"
msgstr ""

#: ../../whatsnew/3.9.rst:1283
msgid ""
"Added :c:func:`PyFrame_GetCode` function: get a frame code. Added :c:func:"
"`PyFrame_GetBack` function: get the frame next outer frame. (Contributed by "
"Victor Stinner in :issue:`40421`.)"
msgstr ""
"Добавлена ​​функция :c:func:`PyFrame_GetCode`: получение кода кадра. Добавлена ​​"
"функция :c:func:`PyFrame_GetBack`: получение следующего внешнего кадра. "
"(Предоставлено Виктором Стиннером в :issue:`40421`.)"

#: ../../whatsnew/3.9.rst:1287
msgid ""
"Added :c:func:`PyFrame_GetLineNumber` to the limited C API. (Contributed by "
"Victor Stinner in :issue:`40421`.)"
msgstr ""
"Добавлен :c:func:`PyFrame_GetLineNumber` в API Limited C. (Предоставлено "
"Виктором Стиннером в :issue:`40421`.)"

#: ../../whatsnew/3.9.rst:1290
msgid ""
"Added :c:func:`PyThreadState_GetInterpreter` and :c:func:"
"`PyInterpreterState_Get` functions to get the interpreter. Added :c:func:"
"`PyThreadState_GetFrame` function to get the current frame of a Python "
"thread state. Added :c:func:`PyThreadState_GetID` function: get the unique "
"identifier of a Python thread state. (Contributed by Victor Stinner in :"
"issue:`39947`.)"
msgstr ""
"Добавлены функции :c:func:`PyThreadState_GetInterpreter` и :c:func:"
"`PyInterpreterState_Get` для получения интерпретатора. Добавлена ​​функция :c:"
"func:`PyThreadState_GetFrame` для получения текущего кадра состояния потока "
"Python. Добавлена ​​функция :c:func:`PyThreadState_GetID`: получение "
"уникального идентификатора состояния потока Python. (Предоставлено Виктором "
"Стиннером в :issue:`39947`.)"

#: ../../whatsnew/3.9.rst:1298
msgid ""
"Added a new public :c:func:`PyObject_CallNoArgs` function to the C API, "
"which calls a callable Python object without any arguments. It is the most "
"efficient way to call a callable Python object without any argument. "
"(Contributed by Victor Stinner in :issue:`37194`.)"
msgstr ""
"В API C добавлена ​​новая общедоступная функция :c:func:` PyObj "
"ect_CallNoArgs`, которая вызывает вызываемый объект Python без каких-либо "
"аргументов. Это наиболее эффективный способ вызвать вызываемый объект Python "
"без каких-либо аргументов. (Предоставлено Виктором Стиннером в :issue:"
"`37194`.)"

#: ../../whatsnew/3.9.rst:1303 ../../whatsnew/3.9.rst:1421
msgid "Changes in the limited C API (if ``Py_LIMITED_API`` macro is defined):"
msgstr "Изменения в ограниченном C API (если определен макрос Py_LIMITED_API):"

#: ../../whatsnew/3.9.rst:1305
msgid ""
"Provide :c:func:`Py_EnterRecursiveCall` and :c:func:`Py_LeaveRecursiveCall` "
"as regular functions for the limited API. Previously, there were defined as "
"macros, but these macros didn't compile with the limited C API which cannot "
"access ``PyThreadState.recursion_depth`` field (the structure is opaque in "
"the limited C API)."
msgstr ""
"Предоставьте :c:func:`Py_EnterRecursiveCall` и :c:func:"
"`Py_LeaveRecursiveCall` как обычные функции для ограниченного API. Раньше "
"они были определены как макросы, но эти макросы не компилировались с "
"ограниченным API C, который не может получить доступ к полю PyThreadState."
"recursion_length (структура непрозрачна в ограниченном API C)."

#: ../../whatsnew/3.9.rst:1311
msgid ""
"``PyObject_INIT()`` and ``PyObject_INIT_VAR()`` become regular \"opaque\" "
"function to hide implementation details."
msgstr ""
"`` PyObj ect_INIT()`` и `` PyObj ect_INIT_VAR()`` становятся обычной "
"\"непрозрачной\" функцией, чтобы скрыть детали реализации."

#: ../../whatsnew/3.9.rst:1314 ../../whatsnew/3.9.rst:1448
msgid "(Contributed by Victor Stinner in :issue:`38644` and :issue:`39542`.)"
msgstr "(Предоставлено Виктором Стиннером в :issue:`38644` и :issue:`39542`.)"

#: ../../whatsnew/3.9.rst:1316
msgid ""
"The :c:func:`PyModule_AddType` function is added to help adding a type to a "
"module. (Contributed by Dong-hee Na in :issue:`40024`.)"
msgstr ""

#: ../../whatsnew/3.9.rst:1320
msgid ""
"Added the functions :c:func:`PyObject_GC_IsTracked` and :c:func:"
"`PyObject_GC_IsFinalized` to the public API to allow to query if Python "
"objects are being currently tracked or have been already finalized by the "
"garbage collector respectively. (Contributed by Pablo Galindo Salgado in :"
"issue:`40241`.)"
msgstr ""
"В общедоступный API добавлены функции :c:func:` PyObj ect_GC_IsTracked` и :c:"
"func:` PyObj ect_GC_IsFinalized`, позволяющие запрашивать, отслеживаются ли "
"в данный момент объекты Python или они уже были финализированы сборщиком "
"мусора соответственно. (Предоставлено Пабло Галиндо Сальгадо в :issue:"
"`40241`.)"

#: ../../whatsnew/3.9.rst:1326
msgid ""
"Added :c:func:`_PyObject_FunctionStr` to get a user-friendly string "
"representation of a function-like object. (Patch by Jeroen Demeyer in :issue:"
"`37645`.)"
msgstr ""

#: ../../whatsnew/3.9.rst:1330
msgid ""
"Added :c:func:`PyObject_CallOneArg` for calling an object with one "
"positional argument (Patch by Jeroen Demeyer in :issue:`37483`.)"
msgstr ""
"Добавлен :c:func:` PyObj ect_CallOneArg` для вызова объекта с одним "
"позиционным аргументом (патч от Йеруна Демейера в :issue:`37483`.)"

#: ../../whatsnew/3.9.rst:1338
msgid ""
"``PyInterpreterState.eval_frame`` (:pep:`523`) now requires a new mandatory "
"*tstate* parameter (``PyThreadState*``). (Contributed by Victor Stinner in :"
"issue:`38500`.)"
msgstr ""
"``PyInterpreterState.eval_frame`` (:pep:`523`) теперь требует нового "
"обязательного параметра *tstate* (``PyThreadState*``). (Предоставлено "
"Виктором Стиннером в :issue:`38500`.)"

#: ../../whatsnew/3.9.rst:1342
msgid ""
"Extension modules: :c:member:`~PyModuleDef.m_traverse`, :c:member:"
"`~PyModuleDef.m_clear` and :c:member:`~PyModuleDef.m_free` functions of :c:"
"type:`PyModuleDef` are no longer called if the module state was requested "
"but is not allocated yet. This is the case immediately after the module is "
"created and before the module is executed (:c:data:`Py_mod_exec` function). "
"More precisely, these functions are not called if :c:member:`~PyModuleDef."
"m_size` is greater than 0 and the module state (as returned by :c:func:"
"`PyModule_GetState`) is ``NULL``."
msgstr ""
"Модули расширения: :c:member:`~PyModuleDef.m_traverse`, :c:member:"
"`~PyModuleDef.m_clear` и :c:member:`~PyModuleDef.m_free` функции :c:type:"
"`PyModuleDef` отсутствуют больше вызывается, если состояние модуля было "
"запрошено, но еще не выделено. Это происходит сразу после создания модуля и "
"до его выполнения (функция:c:data:`Py_mod_exec`). Точнее, эти функции не "
"вызываются, если :c:member:`~PyModuleDef.m_size` больше 0 и состояние модуля "
"(возвращаемое :c:func:`PyModule_GetState`) равно ``NULL``."

#: ../../whatsnew/3.9.rst:1351
msgid ""
"Extension modules without module state (``m_size <= 0``) are not affected."
msgstr ""
"Модули расширения без состояния модуля (``m_size <= 0``) не затрагиваются."

#: ../../whatsnew/3.9.rst:1353
msgid ""
"If :c:func:`Py_AddPendingCall` is called in a subinterpreter, the function "
"is now scheduled to be called from the subinterpreter, rather than being "
"called from the main interpreter. Each subinterpreter now has its own list "
"of scheduled calls. (Contributed by Victor Stinner in :issue:`39984`.)"
msgstr ""
"Если :c:func:`Py_AddPendingCall` вызывается в субинтерпретаторе, теперь "
"запланирован вызов функции из субинтерпретатора, а не из основного "
"интерпретатора. У каждого субпереводчика теперь есть свой список "
"запланированных вызовов. (Предоставлено Виктором Стиннером в :issue:`39984`.)"

#: ../../whatsnew/3.9.rst:1359
msgid ""
"The Windows registry is no longer used to initialize :data:`sys.path` when "
"the ``-E`` option is used (if :c:member:`PyConfig.use_environment` is set to "
"``0``). This is significant when embedding Python on Windows. (Contributed "
"by Zackery Spytz in :issue:`8901`.)"
msgstr ""
"Реестр Windows больше не используется для инициализации :data:`sys.path`, "
"когда используется опция ``-E`` (если :c:member:`PyConfig.use_environment` "
"установлен в ``0``). Это важно при встраивании Python в Windows. "
"(Предоставлено Закери Шпитцем в :issue:`8901`.)"

#: ../../whatsnew/3.9.rst:1364
msgid ""
"The global variable :c:data:`PyStructSequence_UnnamedField` is now a "
"constant and refers to a constant string. (Contributed by Serhiy Storchaka "
"in :issue:`38650`.)"
msgstr ""
"Глобальная переменная :c:data:`PyStructSequence_UnnamedField` теперь "
"является константой и ссылается на константную строку. (Предоставлено "
"Сергеем Сторчакой в ​​:issue:`38650`.)"

#: ../../whatsnew/3.9.rst:1368
msgid ""
"The :c:type:`PyGC_Head` structure is now opaque. It is only defined in the "
"internal C API (``pycore_gc.h``). (Contributed by Victor Stinner in :issue:"
"`40241`.)"
msgstr ""

#: ../../whatsnew/3.9.rst:1372
msgid ""
"The ``Py_UNICODE_COPY``, ``Py_UNICODE_FILL``, ``PyUnicode_WSTR_LENGTH``, :c:"
"func:`PyUnicode_FromUnicode`, :c:func:`PyUnicode_AsUnicode`, "
"``_PyUnicode_AsUnicode``, and :c:func:`PyUnicode_AsUnicodeAndSize` are "
"marked as deprecated in C.  They have been deprecated by :pep:`393` since "
"Python 3.3. (Contributed by Inada Naoki in :issue:`36346`.)"
msgstr ""

#: ../../whatsnew/3.9.rst:1379
msgid ""
"The :c:func:`Py_FatalError` function is replaced with a macro which logs "
"automatically the name of the current function, unless the "
"``Py_LIMITED_API`` macro is defined. (Contributed by Victor Stinner in :"
"issue:`39882`.)"
msgstr ""
"Функция :c:func:`Py_FatalError` заменяется макросом, который автоматически "
"записывает имя текущей функции, если не определен макрос ``Py_LIMITED_API``. "
"(Предоставлено Виктором Стиннером в :issue:`39882`.)"

#: ../../whatsnew/3.9.rst:1384
msgid ""
"The vectorcall protocol now requires that the caller passes only strings as "
"keyword names. (See :issue:`37540` for more information.)"
msgstr ""
"Протокол векторного вызова теперь требует, чтобы вызывающая сторона "
"передавала в качестве имен ключевых слов только строки. (Дополнительную "
"информацию см. в :issue:`37540`.)"

#: ../../whatsnew/3.9.rst:1387
msgid ""
"Implementation details of a number of macros and functions are now hidden:"
msgstr "Детали реализации ряда макросов и функций теперь скрыты:"

#: ../../whatsnew/3.9.rst:1389
msgid ":c:func:`PyObject_IS_GC` macro was converted to a function."
msgstr "Макрос :c:func:` PyObject_IS_GC` был преобразован в функцию."

#: ../../whatsnew/3.9.rst:1391
msgid ""
"The :c:func:`PyObject_NEW` macro becomes an alias to the :c:func:"
"`PyObject_New` macro, and the :c:func:`PyObject_NEW_VAR` macro becomes an "
"alias to the :c:func:`PyObject_NewVar` macro. They no longer access directly "
"the :c:member:`PyTypeObject.tp_basicsize` member."
msgstr ""

#: ../../whatsnew/3.9.rst:1396
msgid ""
":c:func:`PyObject_GET_WEAKREFS_LISTPTR` macro was converted to a function: "
"the macro accessed directly the :c:member:`PyTypeObject.tp_weaklistoffset` "
"member."
msgstr ""

#: ../../whatsnew/3.9.rst:1400
msgid ""
":c:func:`PyObject_CheckBuffer` macro was converted to a function: the macro "
"accessed directly the :c:member:`PyTypeObject.tp_as_buffer` member."
msgstr ""
"Макрос :c:func:` PyObj ect_CheckBuffer` был преобразован в функцию: макрос "
"напрямую обращался к элементу :c:member:`PyTypeObject.tp_as_buffer`."

#: ../../whatsnew/3.9.rst:1403
msgid ""
":c:func:`PyIndex_Check` is now always declared as an opaque function to hide "
"implementation details: removed the ``PyIndex_Check()`` macro. The macro "
"accessed directly the :c:member:`PyTypeObject.tp_as_number` member."
msgstr ""
":c:func:`PyIndex_Check` теперь всегда объявляется как непрозрачная функция, "
"чтобы скрыть детали реализации: удален макрос ``PyIndex_Check()``. Макрос "
"напрямую обращается к элементу :c:member:`PyTypeObject.tp_as_number`."

#: ../../whatsnew/3.9.rst:1407
msgid "(See :issue:`40170` for more details.)"
msgstr "(Подробнее см. в :issue:`40170`.)"

#: ../../whatsnew/3.9.rst:1412
msgid ""
"Excluded ``PyFPE_START_PROTECT()`` and ``PyFPE_END_PROTECT()`` macros of "
"``pyfpe.h`` from the limited C API. (Contributed by Victor Stinner in :issue:"
"`38835`.)"
msgstr ""
"Исключены макросы PyFPE_START_PROTECT() и PyFPE_END_PROTECT() для pyfpe.h из "
"ограниченного C API. (Предоставлено Виктором Стиннером в :issue:`38835`.)"

#: ../../whatsnew/3.9.rst:1416
msgid ""
"The ``tp_print`` slot of :ref:`PyTypeObject <type-structs>` has been "
"removed. It was used for printing objects to files in Python 2.7 and before. "
"Since Python 3.0, it has been ignored and unused. (Contributed by Jeroen "
"Demeyer in :issue:`36974`.)"
msgstr ""
"Слот ``tp_print`` в :ref:`PyTypeObject <type-structs>` был удален. Он "
"использовался для печати объектов в файлы в Python 2.7 и ранее. Начиная с "
"Python 3.0, он игнорировался и не использовался. (Предоставлено Йеруном "
"Демейером в :issue:`36974`.)"

#: ../../whatsnew/3.9.rst:1423
msgid "Excluded the following functions from the limited C API:"
msgstr "Из ограниченного C API исключены следующие функции:"

#: ../../whatsnew/3.9.rst:1425
msgid ""
"``PyThreadState_DeleteCurrent()`` (Contributed by Joannah Nanjekye in :issue:"
"`37878`.)"
msgstr ""
"``PyThreadState_DeleteCurrent()`` (предоставлен Джоанной Нанджеки в :issue:"
"`37878`.)"

#: ../../whatsnew/3.9.rst:1427
msgid "``_Py_CheckRecursionLimit``"
msgstr "``_Py_CheckRecursionLimit``"

#: ../../whatsnew/3.9.rst:1428
msgid "``_Py_NewReference()``"
msgstr "``_Py_NewReference()``"

#: ../../whatsnew/3.9.rst:1429
msgid "``_Py_ForgetReference()``"
msgstr "``_Py_ForgetReference()``"

#: ../../whatsnew/3.9.rst:1430
msgid "``_PyTraceMalloc_NewReference()``"
msgstr "``_PyTraceMalloc_NewReference()``"

#: ../../whatsnew/3.9.rst:1431
msgid "``_Py_GetRefTotal()``"
msgstr "``_Py_GetRefTotal()``"

#: ../../whatsnew/3.9.rst:1432
msgid "The trashcan mechanism which never worked in the limited C API."
msgstr ""
"Механизм мусорной корзины, который никогда не работал в ограниченном C API."

#: ../../whatsnew/3.9.rst:1433
msgid "``PyTrash_UNWIND_LEVEL``"
msgstr "``PyTrash_UNWIND_LEVEL``"

#: ../../whatsnew/3.9.rst:1434
msgid "``Py_TRASHCAN_BEGIN_CONDITION``"
msgstr "``Py_TRASHCAN_BEGIN_CONDITION``"

#: ../../whatsnew/3.9.rst:1435
msgid "``Py_TRASHCAN_BEGIN``"
msgstr "``Py_TRASHCAN_BEGIN``"

#: ../../whatsnew/3.9.rst:1436
msgid "``Py_TRASHCAN_END``"
msgstr "``Py_TRASHCAN_END``"

#: ../../whatsnew/3.9.rst:1437
msgid "``Py_TRASHCAN_SAFE_BEGIN``"
msgstr "``Py_TRASHCAN_SAFE_BEGIN``"

#: ../../whatsnew/3.9.rst:1438
msgid "``Py_TRASHCAN_SAFE_END``"
msgstr "``Py_TRASHCAN_SAFE_END``"

#: ../../whatsnew/3.9.rst:1440
msgid "Moved following functions and definitions to the internal C API:"
msgstr "Следующие функции и определения перенесены во внутренний API C:"

#: ../../whatsnew/3.9.rst:1442
msgid "``_PyDebug_PrintTotalRefs()``"
msgstr "``_PyDebug_PrintTotalRefs()``"

#: ../../whatsnew/3.9.rst:1443
msgid "``_Py_PrintReferences()``"
msgstr "``_Py_PrintReferences()``"

#: ../../whatsnew/3.9.rst:1444
msgid "``_Py_PrintReferenceAddresses()``"
msgstr "``_Py_PrintReferenceAddresses()``"

#: ../../whatsnew/3.9.rst:1445
msgid "``_Py_tracemalloc_config``"
msgstr "``_Py_tracemalloc_config``"

#: ../../whatsnew/3.9.rst:1446
msgid "``_Py_AddToAllObjects()`` (specific to ``Py_TRACE_REFS`` build)"
msgstr "``_Py_AddToAllObjects()`` (специфично для сборки ``Py_TRACE_REFS``)"

#: ../../whatsnew/3.9.rst:1450
msgid ""
"Removed ``_PyRuntime.getframe`` hook and removed ``_PyThreadState_GetFrame`` "
"macro which was an alias to ``_PyRuntime.getframe``. They were only exposed "
"by the internal C API. Removed also ``PyThreadFrameGetter`` type. "
"(Contributed by Victor Stinner in :issue:`39946`.)"
msgstr ""
"Удален хук ``_PyRuntime.getframe`` и удален макрос "
"``_PyThreadState_GetFrame``, который был псевдонимом ``_PyRuntime."
"getframe``. Они были доступны только внутреннему API C. Также удален тип "
"PyThreadFrameGetter. (Предоставлено Виктором Стиннером в :issue:`39946`.)"

#: ../../whatsnew/3.9.rst:1455
msgid ""
"Removed the following functions from the C API. Call :c:func:`PyGC_Collect` "
"explicitly to clear all free lists. (Contributed by Inada Naoki and Victor "
"Stinner in :issue:`37340`, :issue:`38896` and :issue:`40428`.)"
msgstr ""
"Удалены следующие функции из C API. Вызовите :c:func:`PyGC_Collect` явно, "
"чтобы очистить все свободные списки. (Внесено Инадой Наоки и Виктором "
"Стиннером в :issue:`37340`, :issue:`38896` и :issue:`40428`.)"

#: ../../whatsnew/3.9.rst:1460
msgid "``PyAsyncGen_ClearFreeLists()``"
msgstr "``PyAsyncGen_ClearFreeLists()``"

#: ../../whatsnew/3.9.rst:1461
msgid "``PyContext_ClearFreeList()``"
msgstr "``PyContext_ClearFreeList()``"

#: ../../whatsnew/3.9.rst:1462
msgid "``PyDict_ClearFreeList()``"
msgstr "``PyDict_ClearFreeList()``"

#: ../../whatsnew/3.9.rst:1463
msgid "``PyFloat_ClearFreeList()``"
msgstr "``PyFloat_ClearFreeList()``"

#: ../../whatsnew/3.9.rst:1464
msgid "``PyFrame_ClearFreeList()``"
msgstr "``PyFrame_ClearFreeList()``"

#: ../../whatsnew/3.9.rst:1465
msgid "``PyList_ClearFreeList()``"
msgstr "``PyList_ClearFreeList()``"

#: ../../whatsnew/3.9.rst:1466
msgid ""
"``PyMethod_ClearFreeList()`` and ``PyCFunction_ClearFreeList()``: the free "
"lists of bound method objects have been removed."
msgstr ""
"``PyMethod_ClearFreeList()`` и ``PyCFunction_ClearFreeList()``: свободные "
"списки связанных объектов метода были удалены."

#: ../../whatsnew/3.9.rst:1468
msgid ""
"``PySet_ClearFreeList()``: the set free list has been removed in Python 3.4."
msgstr ""
"``PySet_ClearFreeList()``: список установленных свободных мест был удален в "
"Python 3.4."

#: ../../whatsnew/3.9.rst:1470
msgid "``PyTuple_ClearFreeList()``"
msgstr "``PyTuple_ClearFreeList()``"

#: ../../whatsnew/3.9.rst:1471
msgid ""
"``PyUnicode_ClearFreeList()``: the Unicode free list has been removed in "
"Python 3.3."
msgstr ""
"``PyUnicode_ClearFreeList()``: список свободных объектов Unicode был удален "
"в Python 3.3."

#: ../../whatsnew/3.9.rst:1474
msgid ""
"Removed ``_PyUnicode_ClearStaticStrings()`` function. (Contributed by Victor "
"Stinner in :issue:`39465`.)"
msgstr ""
"Удалена функция ``_PyUnicode_ClearStaticStrings()``. (Предоставлено Виктором "
"Стиннером в :issue:`39465`.)"

#: ../../whatsnew/3.9.rst:1477
msgid ""
"Removed ``Py_UNICODE_MATCH``. It has been deprecated by :pep:`393`, and "
"broken since Python 3.3. The :c:func:`PyUnicode_Tailmatch` function can be "
"used instead. (Contributed by Inada Naoki in :issue:`36346`.)"
msgstr ""
"Удален ``Py_UNICODE_MATCH``. Он устарел :pep:`393` и не работает начиная с "
"Python 3.3. Вместо этого можно использовать функцию :c:func:"
"`PyUnicode_Tailmatch`. (Предоставлено Инадой Наоки в :issue:`36346`.)"

#: ../../whatsnew/3.9.rst:1482
msgid ""
"Cleaned header files of interfaces defined but with no implementation. The "
"public API symbols being removed are: "
"``_PyBytes_InsertThousandsGroupingLocale``, "
"``_PyBytes_InsertThousandsGrouping``, ``_Py_InitializeFromArgs``, "
"``_Py_InitializeFromWideArgs``, ``_PyFloat_Repr``, ``_PyFloat_Digits``, "
"``_PyFloat_DigitsInit``, ``PyFrame_ExtendStack``, ``_PyAIterWrapper_Type``, "
"``PyNullImporter_Type``, ``PyCmpWrapper_Type``, ``PySortWrapper_Type``, "
"``PyNoArgsFunction``. (Contributed by Pablo Galindo Salgado in :issue:"
"`39372`.)"
msgstr ""
"Очищены заголовочные файлы интерфейсов, определенных, но без реализации. "
"Удаляются следующие общедоступные символы API: "
"``_PyBytes_InsertThousandsGroupingLocale``, "
"``_PyBytes_InsertThousandsGrouping``, ``_Py_InitializeFromArgs``, "
"``_Py_InitializeFromWideArgs``, ``_PyFloat_Repr``, ``_PyFloat_Digits``, ``_ "
"PyFloat_DigitsInit``, ``PyFrame_ExtendStack``, ``_PyAIterWrapper_Type``, "
"``PyNullImporter_Type``, ``PyCmpWrapper_Type``, ``PySortWrapper_Type``, "
"``PyNoArgsFunction``. (Предоставлено Пабло Галиндо Сальгадо в :issue:"
"`39372`.)"

#: ../../whatsnew/3.9.rst:1493
msgid "Notable changes in Python 3.9.1"
msgstr "Заметные изменения в Python 3.9.1"

#: ../../whatsnew/3.9.rst:1498
msgid ""
"The behavior of :class:`typing.Literal` was changed to conform with :pep:"
"`586` and to match the behavior of static type checkers specified in the PEP."
msgstr ""
"Поведение :class:`typing.Literal` было изменено, чтобы соответствовать :pep:"
"`586` и поведению средств проверки статических типов, указанных в PEP."

#: ../../whatsnew/3.9.rst:1501
msgid "``Literal`` now de-duplicates parameters."
msgstr "``Literal`` теперь устраняет дубликаты параметров."

#: ../../whatsnew/3.9.rst:1502
msgid ""
"Equality comparisons between ``Literal`` objects are now order independent."
msgstr ""
"Сравнения на равенство между объектами Literal теперь не зависят от порядка."

#: ../../whatsnew/3.9.rst:1503
msgid ""
"``Literal`` comparisons now respect types.  For example, ``Literal[0] == "
"Literal[False]`` previously evaluated to ``True``.  It is now ``False``.  To "
"support this change, the internally used type cache now supports "
"differentiating types."
msgstr ""
"``Литеральные`` сравнения теперь учитывают типы. Например, ``Literal[0] == "
"Literal[False]`` ранее оценивалось как ``True``. Теперь это ``Ложь``. Чтобы "
"поддержать это изменение, внутренний кэш типов теперь поддерживает "
"дифференцирующие типы."

#: ../../whatsnew/3.9.rst:1507
msgid ""
"``Literal`` objects will now raise a :exc:`TypeError` exception during "
"equality comparisons if any of their parameters are not :term:`hashable`. "
"Note that declaring ``Literal`` with mutable parameters will not throw an "
"error::"
msgstr ""
"``Литеральные`` объекты теперь будут вызывать исключение :exc:`TypeError` во "
"время сравнения на равенство, если какой-либо из их параметров не является :"
"term:`hashable`. Обратите внимание, что объявление ``Literal`` с изменяемыми "
"параметрами не приведет к ошибке::"

#: ../../whatsnew/3.9.rst:1519
msgid "(Contributed by Yurii Karabas in :issue:`42345`.)"
msgstr "(Предоставлено Юрием Карабасом в :issue:`42345`.)"

#: ../../whatsnew/3.9.rst:1522
msgid "macOS 11.0 (Big Sur) and Apple Silicon Mac support"
msgstr "Поддержка macOS 11.0 (Big Sur) и Apple Silicon Mac "

#: ../../whatsnew/3.9.rst:1524
msgid ""
"As of 3.9.1, Python now fully supports building and running on macOS 11.0 "
"(Big Sur) and on Apple Silicon Macs (based on the ``ARM64`` architecture). A "
"new universal build variant, ``universal2``, is now available to natively "
"support both ``ARM64`` and ``Intel 64`` in one set of executables. Binaries "
"can also now be built on current versions of macOS to be deployed on a range "
"of older macOS versions (tested to 10.9) while making some newer OS "
"functions and options conditionally available based on the operating system "
"version in use at runtime (\"weaklinking\")."
msgstr ""
"Начиная с версии 3.9.1, Python теперь полностью поддерживает сборку и работу "
"на macOS 11.0 (Big Sur) и на компьютерах Apple Silicon Mac (на основе "
"архитектуры ARM64). Теперь доступен новый универсальный вариант сборки, "
"«universal2», который изначально поддерживает как «ARM64», так и «Intel 64» "
"в одном наборе исполняемых файлов. Двоичные файлы теперь также можно "
"создавать на текущих версиях macOS для развертывания на ряде более старых "
"версий macOS (протестировано до 10.9), при этом некоторые новые функции и "
"параметры ОС становятся условно доступными в зависимости от версии "
"операционной системы, используемой во время выполнения («слабая связь»). )."

#: ../../whatsnew/3.9.rst:1533
msgid "(Contributed by Ronald Oussoren and Lawrence D'Anna in :issue:`41100`.)"
msgstr ""
"(Предоставлено Рональдом Оусореном и Лоуренсом Д'Анна в :issue:`41100`.)"

#: ../../whatsnew/3.9.rst:1536
msgid "Notable changes in Python 3.9.2"
msgstr "Известные изменения в Python 3.9.2"

#: ../../whatsnew/3.9.rst:1539
msgid "collections.abc"
msgstr "collections.abc"

#: ../../whatsnew/3.9.rst:1541
msgid ""
":class:`collections.abc.Callable` generic now flattens type parameters, "
"similar to what :data:`typing.Callable` currently does.  This means that "
"``collections.abc.Callable[[int, str], str]`` will have ``__args__`` of "
"``(int, str, str)``; previously this was ``([int, str], str)``.  To allow "
"this change, :class:`types.GenericAlias` can now be subclassed, and a "
"subclass will be returned when subscripting the :class:`collections.abc."
"Callable` type. Code which accesses the arguments via :func:`typing."
"get_args` or ``__args__`` need to account for this change.  A :exc:"
"`DeprecationWarning` may be emitted for invalid forms of parameterizing :"
"class:`collections.abc.Callable` which may have passed silently in Python "
"3.9.1.  This :exc:`DeprecationWarning` will become a :exc:`TypeError` in "
"Python 3.10. (Contributed by Ken Jin in :issue:`42195`.)"
msgstr ""
":class:`collections.abc.Callable` универсальный теперь выравнивает параметры "
"типа, аналогично тому, что сейчас делает :data:`typing.Callable`. Это "
"означает, что ``collections.abc.Callable[[int, str], str]`` будет иметь "
"``__args__`` из ``(int, str, str)``; раньше это было ``([int, str], str)``. "
"Чтобы разрешить это изменение, :class:`types.GenericAlias` теперь может быть "
"подклассом, и подкласс будет возвращен при подписке на тип :class:"
"`collections.abc.Callable`. Код, который обращается к аргументам через :func:"
"`typing.get_args` или ``__args__``, должен учитывать это изменение. :exc:"
"`DeprecationWarning` может быть выдано для недопустимых форм параметризации :"
"class:`collections.abc.Callable`, которые могли передаваться автоматически в "
"Python 3.9.1. Это :exc:`DeprecationWarning` станет :exc:`TypeError` в Python "
"3.10. (Предоставлено Кеном Джином в :issue:`42195`.)"

#: ../../whatsnew/3.9.rst:1555
msgid "urllib.parse"
msgstr "urllib.parse"

#: ../../whatsnew/3.9.rst:1557
msgid ""
"Earlier Python versions allowed using both ``;`` and ``&`` as query "
"parameter separators in :func:`urllib.parse.parse_qs` and :func:`urllib."
"parse.parse_qsl`.  Due to security concerns, and to conform with newer W3C "
"recommendations, this has been changed to allow only a single separator key, "
"with ``&`` as the default.  This change also affects :func:`cgi.parse` and :"
"func:`cgi.parse_multipart` as they use the affected functions internally. "
"For more details, please see their respective documentation. (Contributed by "
"Adam Goldschmidt, Senthil Kumaran and Ken Jin in :issue:`42967`.)"
msgstr ""
"Более ранние версии Python позволяли использовать как ``;``, так и ``&`` в "
"качестве разделителей параметров запроса в :func:`urllib.parse.parse_qs` и :"
"func:`urllib.parse.parse_qsl`. Из соображений безопасности и в соответствии "
"с новыми рекомендациями W3C это было изменено, чтобы разрешить только один "
"ключ-разделитель с ``&`` по умолчанию. Это изменение также затрагивает :func:"
"`cgi.parse` и :func:`cgi.parse_multipart`, поскольку они используют "
"затронутые функции внутри себя. Более подробную информацию можно найти в "
"соответствующей документации. (Предоставлено Адамом Гольдшмидтом, Сентилом "
"Кумараном и Кеном Джином в :issue:`42967`.)"
