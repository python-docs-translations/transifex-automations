# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# Rafael Fontenelle <rffontenelle@gmail.com>, 2024
# Roustam Khamidoulline, 2024
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.12\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-01-03 14:53+0000\n"
"PO-Revision-Date: 2024-05-11 00:34+0000\n"
"Last-Translator: Roustam Khamidoulline, 2024\n"
"Language-Team: Russian (https://app.transifex.com/python-doc/teams/5390/"
"ru/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ru\n"
"Plural-Forms: nplurals=4; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && "
"n%10<=4 && (n%100<12 || n%100>14) ? 1 : n%10==0 || (n%10>=5 && n%10<=9) || "
"(n%100>=11 && n%100<=14)? 2 : 3);\n"

#: ../../whatsnew/2.4.rst:3
msgid "What's New in Python 2.4"
msgstr "Что нового в Python 2.4"

#: ../../whatsnew/2.4.rst:0
msgid "Author"
msgstr "Автор"

#: ../../whatsnew/2.4.rst:5
msgid "A.M. Kuchling"
msgstr "A.M. Kuchling"

#: ../../whatsnew/2.4.rst:14
msgid ""
"This article explains the new features in Python 2.4.1, released on March "
"30, 2005."
msgstr ""
"В этой статье объясняются новые возможности Python 2.4.1, выпущенного 30 "
"марта 2005 г."

#: ../../whatsnew/2.4.rst:17
msgid ""
"Python 2.4 is a medium-sized release.  It doesn't introduce as many changes "
"as the radical Python 2.2, but introduces more features than the "
"conservative 2.3 release.  The most significant new language features are "
"function decorators and generator expressions; most other changes are to the "
"standard library."
msgstr ""
"Python 2.4 — это версия среднего размера. В нем не так много изменений, как "
"в радикальной версии Python 2.2, но реализовано больше возможностей, чем в "
"консервативной версии 2.3. Наиболее важными новыми возможностями языка "
"являются декораторы функций и выражения-генераторы; большинство других "
"изменений относятся к стандартной библиотеке."

#: ../../whatsnew/2.4.rst:22
msgid ""
"According to the CVS change logs, there were 481 patches applied and 502 "
"bugs fixed between Python 2.3 and 2.4.  Both figures are likely to be "
"underestimates."
msgstr ""
"Согласно журналам изменений CVS, между Python 2.3 и 2.4 было применено 481 "
"исправление и исправлено 502 ошибки. Обе цифры, скорее всего, занижены."

#: ../../whatsnew/2.4.rst:25
msgid ""
"This article doesn't attempt to provide a complete specification of every "
"single new feature, but instead provides a brief introduction to each "
"feature.  For full details, you should refer to the documentation for Python "
"2.4, such as the Python Library Reference and the Python Reference Manual.  "
"Often you will be referred to the PEP for a particular new feature for "
"explanations of the implementation and design rationale."
msgstr ""
"В этой статье не делается попытка предоставить полную спецификацию каждой "
"новой функции, а вместо этого представлено краткое введение в каждую "
"функцию. Для получения более подробной информации вам следует обратиться к "
"документации по Python 2.4, такой как Справочник по библиотеке Python и "
"Справочное руководство по Python. Часто вас направят к PEP за конкретной "
"новой функцией для объяснения реализации и обоснования дизайна."

#: ../../whatsnew/2.4.rst:36
msgid "PEP 218: Built-In Set Objects"
msgstr "PEP 218: встроенные объекты множества"

#: ../../whatsnew/2.4.rst:38
msgid ""
"Python 2.3 introduced the :mod:`sets` module.  C implementations of set data "
"types have now been added to the Python core as two new built-in types, "
"``set(iterable)`` and ``frozenset(iterable)``.  They provide high speed "
"operations for membership testing, for eliminating duplicates from "
"sequences, and for mathematical operations like unions, intersections, "
"differences, and symmetric differences. ::"
msgstr ""
"В Python 2.3 появился модуль :mod:`sets`. Реализации C наборов типов данных "
"теперь добавлены в ядро ​​Python в виде двух новых встроенных типов: "
"``set(iterable)`` и ``frozenset(iterable)``. Они обеспечивают "
"высокоскоростные операции проверки принадлежности, исключения дубликатов из "
"последовательностей и математических операций, таких как объединения, "
"пересечения, различия и симметричные различия. ::"

#: ../../whatsnew/2.4.rst:45
msgid ""
">>> a = set('abracadabra')              # form a set from a string\n"
">>> 'z' in a                            # fast membership testing\n"
"False\n"
">>> a                                   # unique letters in a\n"
"set(['a', 'r', 'b', 'c', 'd'])\n"
">>> ''.join(a)                          # convert back into a string\n"
"'arbcd'\n"
"\n"
">>> b = set('alacazam')                 # form a second set\n"
">>> a - b                               # letters in a but not in b\n"
"set(['r', 'd', 'b'])\n"
">>> a | b                               # letters in either a or b\n"
"set(['a', 'c', 'r', 'd', 'b', 'm', 'z', 'l'])\n"
">>> a & b                               # letters in both a and b\n"
"set(['a', 'c'])\n"
">>> a ^ b                               # letters in a or b but not both\n"
"set(['r', 'd', 'b', 'm', 'z', 'l'])\n"
"\n"
">>> a.add('z')                          # add a new element\n"
">>> a.update('wxy')                     # add multiple new elements\n"
">>> a\n"
"set(['a', 'c', 'b', 'd', 'r', 'w', 'y', 'x', 'z'])\n"
">>> a.remove('x')                       # take one element out\n"
">>> a\n"
"set(['a', 'c', 'b', 'd', 'r', 'w', 'y', 'z'])"
msgstr ""
">>> a = set('abracadabra')              # form a set from a string\n"
">>> 'z' in a                            # fast membership testing\n"
"False\n"
">>> a                                   # unique letters in a\n"
"set(['a', 'r', 'b', 'c', 'd'])\n"
">>> ''.join(a)                          # convert back into a string\n"
"'arbcd'\n"
"\n"
">>> b = set('alacazam')                 # form a second set\n"
">>> a - b                               # letters in a but not in b\n"
"set(['r', 'd', 'b'])\n"
">>> a | b                               # letters in either a or b\n"
"set(['a', 'c', 'r', 'd', 'b', 'm', 'z', 'l'])\n"
">>> a & b                               # letters in both a and b\n"
"set(['a', 'c'])\n"
">>> a ^ b                               # letters in a or b but not both\n"
"set(['r', 'd', 'b', 'm', 'z', 'l'])\n"
"\n"
">>> a.add('z')                          # add a new element\n"
">>> a.update('wxy')                     # add multiple new elements\n"
">>> a\n"
"set(['a', 'c', 'b', 'd', 'r', 'w', 'y', 'x', 'z'])\n"
">>> a.remove('x')                       # take one element out\n"
">>> a\n"
"set(['a', 'c', 'b', 'd', 'r', 'w', 'y', 'z'])"

#: ../../whatsnew/2.4.rst:71
msgid ""
"The :func:`frozenset` type is an immutable version of :func:`set`. Since it "
"is immutable and hashable, it may be used as a dictionary key or as a member "
"of another set."
msgstr ""
"Тип :func:`frozenset` является неизменяемой версией :func:`set`. Поскольку "
"он неизменяем и хешируется, его можно использовать как ключ словаря или как "
"член другого набора."

#: ../../whatsnew/2.4.rst:75
msgid ""
"The :mod:`sets` module remains in the standard library, and may be useful if "
"you wish to subclass the :class:`Set` or :class:`ImmutableSet` classes.  "
"There are currently no plans to deprecate the module."
msgstr ""
"Модуль :mod:`sets` остаётся в стандартной библиотеке и может быть полезен, "
"если вы хотите создать подкласс классов :class:`Set` или :class:"
"`ImmutableSet`. В настоящее время нет планов по прекращению поддержки модуля."

#: ../../whatsnew/2.4.rst:82
msgid ":pep:`218` - Adding a Built-In Set Object Type"
msgstr ":pep:`218` - Добавление встроенного набора типов объектов"

#: ../../whatsnew/2.4.rst:83
msgid ""
"Originally proposed by Greg Wilson and ultimately implemented by Raymond "
"Hettinger."
msgstr ""
"Первоначально предложено Грегом Уилсоном и в конечном итоге реализовано "
"Рэймондом Хеттингером."

#: ../../whatsnew/2.4.rst:90
msgid "PEP 237: Unifying Long Integers and Integers"
msgstr "PEP 237: объединение длинных и целых чисел"

#: ../../whatsnew/2.4.rst:92
msgid ""
"The lengthy transition process for this PEP, begun in Python 2.2, takes "
"another step forward in Python 2.4.  In 2.3, certain integer operations that "
"would behave differently after int/long unification triggered :exc:"
"`FutureWarning` warnings and returned values limited to 32 or 64 bits "
"(depending on your platform).  In 2.4, these expressions no longer produce a "
"warning and instead produce a different result that's usually a long integer."
msgstr ""
"Длительный процесс перехода для этого PEP, начавшийся в Python 2.2, делает "
"еще один шаг вперед в Python 2.4. В версии 2.3 некоторые целочисленные "
"операции, которые вели себя по-другому после унификации int/long, вызывали "
"предупреждения :exc:`FutureWarning` и возвращали значения, ограниченные 32 "
"или 64 битами (в зависимости от вашей платформы). В версии 2.4 эти выражения "
"больше не выдают предупреждение, а вместо этого выдают другой результат, "
"который обычно представляет собой длинное целое число."

#: ../../whatsnew/2.4.rst:99
msgid ""
"The problematic expressions are primarily left shifts and lengthy "
"hexadecimal and octal constants.  For example, ``2 << 32`` results in a "
"warning in 2.3, evaluating to 0 on 32-bit platforms.  In Python 2.4, this "
"expression now returns the correct answer, 8589934592."
msgstr ""
"Проблемными выражениями являются в первую очередь сдвиги влево и длинные "
"шестнадцатеричные и восьмеричные константы. Например, ``2 << 32`` приводит к "
"предупреждению в версии 2.3, которое оценивается как 0 на 32-битных "
"платформах. В Python 2.4 это выражение теперь возвращает правильный ответ: "
"8589934592."

#: ../../whatsnew/2.4.rst:107
msgid ":pep:`237` - Unifying Long Integers and Integers"
msgstr ":pep:`237` - Объединение длинных и целых чисел"

#: ../../whatsnew/2.4.rst:108
msgid ""
"Original PEP written by Moshe Zadka and GvR.  The changes for 2.4 were "
"implemented by  Kalle Svensson."
msgstr ""
"Оригинальный PEP, написанный Моше Задкой и GvR. Изменения в версии 2.4 внес "
"Калле Свенссон."

#: ../../whatsnew/2.4.rst:115
msgid "PEP 289: Generator Expressions"
msgstr "PEP 289: Генераторные выражения"

#: ../../whatsnew/2.4.rst:117
msgid ""
"The iterator feature introduced in Python 2.2 and the :mod:`itertools` "
"module make it easier to write programs that loop through large data sets "
"without having the entire data set in memory at one time.  List "
"comprehensions don't fit into this picture very well because they produce a "
"Python list object containing all of the items.  This unavoidably pulls all "
"of the objects into memory, which can be a problem if your data set is very "
"large.  When trying to write a functionally styled program, it would be "
"natural to write something like::"
msgstr ""
"Функция итератора, представленная в Python 2.2, и модуль :mod:`itertools` "
"упрощают написание программ, которые обрабатывают большие наборы данных без "
"одновременного хранения всего набора данных в памяти. Понимания списков не "
"очень хорошо вписываются в эту картину, поскольку они создают объект списка "
"Python, содержащий все элементы. Это неизбежно затянет все объекты в память, "
"что может стать проблемой, если ваш набор данных очень велик. При попытке "
"написать программу в функциональном стиле было бы естественно написать что-"
"то вроде::"

#: ../../whatsnew/2.4.rst:125
msgid ""
"links = [link for link in get_all_links() if not link.followed]\n"
"for link in links:\n"
"    ..."
msgstr ""
"links = [link for link in get_all_links() if not link.followed]\n"
"for link in links:\n"
"    ..."

#: ../../whatsnew/2.4.rst:129
msgid "instead of  ::"
msgstr "вместо ::"

#: ../../whatsnew/2.4.rst:131
msgid ""
"for link in get_all_links():\n"
"    if link.followed:\n"
"        continue\n"
"    ..."
msgstr ""
"for link in get_all_links():\n"
"    if link.followed:\n"
"        continue\n"
"    ..."

#: ../../whatsnew/2.4.rst:136
msgid ""
"The first form is more concise and perhaps more readable, but if you're "
"dealing with a large number of link objects you'd have to write the second "
"form to avoid having all link objects in memory at the same time."
msgstr ""
"Первая форма более краткая и, возможно, более удобочитаемая, но если вы "
"имеете дело с большим количеством объектов ссылок, вам придется написать "
"вторую форму, чтобы избежать одновременного размещения всех объектов ссылок "
"в памяти."

#: ../../whatsnew/2.4.rst:140
msgid ""
"Generator expressions work similarly to list comprehensions but don't "
"materialize the entire list; instead they create a generator that will "
"return elements one by one.  The above example could be written as::"
msgstr ""
"Выражения-генераторы работают аналогично пониманию списков, но не "
"материализуют весь список; вместо этого они создают генератор, который будет "
"возвращать элементы один за другим. Приведенный выше пример можно записать "
"как::"

#: ../../whatsnew/2.4.rst:144
msgid ""
"links = (link for link in get_all_links() if not link.followed)\n"
"for link in links:\n"
"    ..."
msgstr ""
"links = (link for link in get_all_links() if not link.followed)\n"
"for link in links:\n"
"    ..."

#: ../../whatsnew/2.4.rst:148
msgid ""
"Generator expressions always have to be written inside parentheses, as in "
"the above example.  The parentheses signalling a function call also count, "
"so if you want to create an iterator that will be immediately passed to a "
"function you could write::"
msgstr ""
"Выражения-генераторы всегда нужно писать в круглых скобках, как в "
"приведенном выше примере. Круглые скобки, сигнализирующие о вызове функции, "
"также учитываются, поэтому, если вы хотите создать итератор, который будет "
"немедленно передан функции, вы можете написать::"

#: ../../whatsnew/2.4.rst:153
msgid "print sum(obj.count for obj in list_all_objects())"
msgstr "print sum(obj.count for obj in list_all_objects())"

#: ../../whatsnew/2.4.rst:155
msgid ""
"Generator expressions differ from list comprehensions in various small ways. "
"Most notably, the loop variable (*obj* in the above example) is not "
"accessible outside of the generator expression.  List comprehensions leave "
"the variable assigned to its last value; future versions of Python will "
"change this, making list comprehensions match generator expressions in this "
"respect."
msgstr ""
"Выражения-генераторы отличаются от понимания списков во многих мелких "
"отношениях. В частности, переменная цикла (*obj* в приведенном выше примере) "
"недоступна вне выражения генератора. При использовании списков переменной "
"присваивается ее последнее значение; будущие версии Python изменят это, "
"заставив в этом отношении выражения списков соответствовать выражениям "
"генератора."

#: ../../whatsnew/2.4.rst:164
msgid ":pep:`289` - Generator Expressions"
msgstr ":pep:`289` - Генератор выражений"

#: ../../whatsnew/2.4.rst:165
msgid ""
"Proposed by Raymond Hettinger and implemented by Jiwon Seo with early "
"efforts steered by Hye-Shik Chang."
msgstr ""
"Предложено Раймондом Хеттингером и реализовано Дживоном Со, первые усилия "
"проводились под руководством Хе-Шик Чанга."

#: ../../whatsnew/2.4.rst:172
msgid "PEP 292: Simpler String Substitutions"
msgstr "PEP 292: более простые замены строк"

#: ../../whatsnew/2.4.rst:174
msgid ""
"Some new classes in the standard library provide an alternative mechanism "
"for substituting variables into strings; this style of substitution may be "
"better for applications where untrained users need to edit templates."
msgstr ""
"Некоторые новые классы стандартной библиотеки предоставляют альтернативный "
"механизм замены переменных в строки; этот стиль замены может быть лучше для "
"приложений, в которых неподготовленным пользователям необходимо "
"редактировать шаблоны."

#: ../../whatsnew/2.4.rst:178
msgid "The usual way of substituting variables by name is the ``%`` operator::"
msgstr "Обычным способом замены переменных по имени является оператор ``%``::"

#: ../../whatsnew/2.4.rst:180
msgid ""
">>> '%(page)i: %(title)s' % {'page':2, 'title': 'The Best of Times'}\n"
"'2: The Best of Times'"
msgstr ""
">>> '%(page)i: %(title)s' % {'page':2, 'title': 'The Best of Times'}\n"
"'2: The Best of Times'"

#: ../../whatsnew/2.4.rst:183
msgid ""
"When writing the template string, it can be easy to forget the ``i`` or "
"``s`` after the closing parenthesis.  This isn't a big problem if the "
"template is in a Python module, because you run the code, get an "
"\"Unsupported format character\" :exc:`ValueError`, and fix the problem.  "
"However, consider an application such as Mailman where template strings or "
"translations are being edited by users who aren't aware of the Python "
"language.  The format string's syntax is complicated to explain to such "
"users, and if they make a mistake, it's difficult to provide helpful "
"feedback to them."
msgstr ""
"При написании строки шаблона можно легко забыть ``i`` или ``s`` после "
"закрывающей скобки. Это не является большой проблемой, если шаблон находится "
"в модуле Python, поскольку вы запускаете код, получаете «Символ "
"неподдерживаемого формата» :exc:`ValueError` и устраняете проблему. Однако "
"рассмотрим такое приложение, как Mailman, в котором строки шаблонов или "
"переводы редактируются пользователями, не знающими языка Python. Синтаксис "
"строки формата сложно объяснить таким пользователям, и если они допустят "
"ошибку, им будет сложно предоставить полезную обратную связь."

#: ../../whatsnew/2.4.rst:192
msgid ""
"PEP 292 adds a :class:`Template` class to the :mod:`string` module that uses "
"``$`` to indicate a substitution::"
msgstr ""
"PEP 292 добавляет класс :class:`Template` к модулю :mod:`string`, который "
"использует ``$`` для обозначения замены::"

#: ../../whatsnew/2.4.rst:195
msgid ""
">>> import string\n"
">>> t = string.Template('$page: $title')\n"
">>> t.substitute({'page':2, 'title': 'The Best of Times'})\n"
"'2: The Best of Times'"
msgstr ""
">>> import string\n"
">>> t = string.Template('$page: $title')\n"
">>> t.substitute({'page':2, 'title': 'The Best of Times'})\n"
"'2: The Best of Times'"

#: ../../whatsnew/2.4.rst:200
msgid ""
"If a key is missing from the dictionary, the :meth:`substitute` method will "
"raise a :exc:`KeyError`.  There's also a :meth:`safe_substitute` method that "
"ignores missing keys::"
msgstr ""
"Если ключ отсутствует в словаре, метод :meth:`substitute` выдаст :exc:"
"`KeyError`. Также существует метод :meth:`safe_substitute`, который "
"игнорирует отсутствующие ключи::"

#: ../../whatsnew/2.4.rst:204
msgid ""
">>> t = string.Template('$page: $title')\n"
">>> t.safe_substitute({'page':3})\n"
"'3: $title'"
msgstr ""
">>> t = string.Template('$page: $title')\n"
">>> t.safe_substitute({'page':3})\n"
"'3: $title'"

#: ../../whatsnew/2.4.rst:211
msgid ":pep:`292` - Simpler String Substitutions"
msgstr ":pep:`292` - Простые замены строк"

#: ../../whatsnew/2.4.rst:212
msgid "Written and implemented  by Barry Warsaw."
msgstr "Написано и реализовано Барри Варшавой."

#: ../../whatsnew/2.4.rst:218
msgid "PEP 318: Decorators for Functions and Methods"
msgstr "PEP 318: Декораторы для функций и методов"

#: ../../whatsnew/2.4.rst:220
msgid ""
"Python 2.2 extended Python's object model by adding static methods and class "
"methods, but it didn't extend Python's syntax to provide any new way of "
"defining static or class methods.  Instead, you had to write a :keyword:"
"`def` statement in the usual way, and pass the resulting method to a :func:"
"`staticmethod` or :func:`classmethod` function that would wrap up the "
"function as a method of the new type. Your code would look like this::"
msgstr ""
"Python 2.2 расширил объектную модель Python, добавив статические методы и "
"методы класса, но не расширил синтаксис Python, чтобы предоставить какой-"
"либо новый способ определения статических методов или методов класса. Вместо "
"этого вам нужно было написать оператор :keyword:`def` обычным способом и "
"передать полученный метод функции :func:`staticmethod` или :func:"
"`classmethod`, которая обернула бы функцию как метод новый тип. Ваш код "
"будет выглядеть так::"

#: ../../whatsnew/2.4.rst:227
msgid ""
"class C:\n"
"   def meth (cls):\n"
"       ...\n"
"\n"
"   meth = classmethod(meth)   # Rebind name to wrapped-up class method"
msgstr ""
"class C:\n"
"   def meth (cls):\n"
"       ...\n"
"\n"
"   meth = classmethod(meth)   # Rebind name to wrapped-up class method"

#: ../../whatsnew/2.4.rst:233
msgid ""
"If the method was very long, it would be easy to miss or forget the :func:"
"`classmethod` invocation after the function body."
msgstr ""
"Если бы метод был очень длинным, было бы легко пропустить или забыть вызов :"
"func:`classmethod` после тела функции."

#: ../../whatsnew/2.4.rst:236
msgid ""
"The intention was always to add some syntax to make such definitions more "
"readable, but at the time of 2.2's release a good syntax was not obvious.  "
"Today a good syntax *still* isn't obvious but users are asking for easier "
"access to the feature; a new syntactic feature has been added to meet this "
"need."
msgstr ""
"Намерением всегда было добавить некоторый синтаксис, чтобы сделать такие "
"определения более читабельными, но на момент выпуска 2.2 хороший синтаксис "
"не был очевиден. Сегодня хороший синтаксис *по-прежнему* не очевиден, но "
"пользователи просят облегчить доступ к этой функции; Для удовлетворения этой "
"потребности была добавлена ​​новая синтаксическая функция."

#: ../../whatsnew/2.4.rst:241
msgid ""
"The new feature is called \"function decorators\".  The name comes from the "
"idea that :func:`classmethod`, :func:`staticmethod`, and friends are storing "
"additional information on a function object; they're *decorating* functions "
"with more details."
msgstr ""
"Новая функция называется «декораторы функций». Название происходит от идеи, "
"что :func:`classmethod`, :func:`staticmethod` и другие хранят дополнительную "
"информацию о функциональном объекте; они *украшают* функции более подробной "
"информацией."

#: ../../whatsnew/2.4.rst:246
msgid ""
"The notation borrows from Java and uses the ``'@'`` character as an "
"indicator. Using the new syntax, the example above would be written::"
msgstr ""
"Обозначение заимствовано из Java и в качестве индикатора используется символ "
"``'@'``. Используя новый синтаксис, приведенный выше пример будет выглядеть "
"так:"

#: ../../whatsnew/2.4.rst:249
msgid ""
"class C:\n"
"\n"
"   @classmethod\n"
"   def meth (cls):\n"
"       ..."
msgstr ""
"class C:\n"
"\n"
"   @classmethod\n"
"   def meth (cls):\n"
"       ..."

#: ../../whatsnew/2.4.rst:256
msgid ""
"The ``@classmethod`` is shorthand for the ``meth=classmethod(meth)`` "
"assignment. More generally, if you have the following::"
msgstr ""
"``@classmethod`` является сокращением для ``meth=classmethod(meth)``. В "
"более общем плане, если у вас есть следующее:"

#: ../../whatsnew/2.4.rst:259
msgid ""
"@A\n"
"@B\n"
"@C\n"
"def f ():\n"
"    ..."
msgstr ""
"@A\n"
"@B\n"
"@C\n"
"def f ():\n"
"    ..."

#: ../../whatsnew/2.4.rst:265
msgid "It's equivalent to the following pre-decorator code::"
msgstr "Это эквивалентно следующему коду предварительного декоратора::"

#: ../../whatsnew/2.4.rst:267
msgid ""
"def f(): ...\n"
"f = A(B(C(f)))"
msgstr ""
"def f(): ...\n"
"f = A(B(C(f)))"

#: ../../whatsnew/2.4.rst:270
msgid ""
"Decorators must come on the line before a function definition, one decorator "
"per line, and can't be on the same line as the def statement, meaning that "
"``@A def f(): ...`` is illegal.  You can only decorate function definitions, "
"either at the module level or inside a class; you can't decorate class "
"definitions."
msgstr ""
"Декораторы должны располагаться в строке перед определением функции, по "
"одному декоратору в каждой строке, и не могут находиться в той же строке, "
"что и оператор def, а это означает, что ``@A def f(): ...`` недопустим. Вы "
"можете декорировать определения функций только на уровне модуля или внутри "
"класса; вы не можете украшать определения классов."

#: ../../whatsnew/2.4.rst:275
msgid ""
"A decorator is just a function that takes the function to be decorated as an "
"argument and returns either the same function or some new object.  The "
"return value of the decorator need not be callable (though it typically is), "
"unless further decorators will be applied to the result.  It's easy to write "
"your own decorators.  The following simple example just sets an attribute on "
"the function object::"
msgstr ""
"Декоратор — это просто функция, которая принимает декорируемую функцию в "
"качестве аргумента и возвращает либо ту же функцию, либо какой-то новый "
"объект. Возвращаемое значение декоратора не обязательно должно быть "
"вызываемым (хотя обычно это так), если к результату не будут применены "
"дополнительные декораторы. Легко написать свои собственные декораторы. "
"Следующий простой пример просто устанавливает атрибут объекта функции:"

#: ../../whatsnew/2.4.rst:282
msgid ""
">>> def deco(func):\n"
"...    func.attr = 'decorated'\n"
"...    return func\n"
"...\n"
">>> @deco\n"
"... def f(): pass\n"
"...\n"
">>> f\n"
"<function f at 0x402ef0d4>\n"
">>> f.attr\n"
"'decorated'\n"
">>>"
msgstr ""
">>> def deco(func):\n"
"...    func.attr = 'decorated'\n"
"...    return func\n"
"...\n"
">>> @deco\n"
"... def f(): pass\n"
"...\n"
">>> f\n"
"<function f at 0x402ef0d4>\n"
">>> f.attr\n"
"'decorated'\n"
">>>"

#: ../../whatsnew/2.4.rst:295
msgid ""
"As a slightly more realistic example, the following decorator checks that "
"the supplied argument is an integer::"
msgstr ""
"В качестве более реалистичного примера следующий декоратор проверяет, "
"является ли предоставленный аргумент целым числом:"

#: ../../whatsnew/2.4.rst:298
msgid ""
"def require_int (func):\n"
"    def wrapper (arg):\n"
"        assert isinstance(arg, int)\n"
"        return func(arg)\n"
"\n"
"    return wrapper\n"
"\n"
"@require_int\n"
"def p1 (arg):\n"
"    print arg\n"
"\n"
"@require_int\n"
"def p2(arg):\n"
"    print arg*2"
msgstr ""
"def require_int (func):\n"
"    def wrapper (arg):\n"
"        assert isinstance(arg, int)\n"
"        return func(arg)\n"
"\n"
"    return wrapper\n"
"\n"
"@require_int\n"
"def p1 (arg):\n"
"    print arg\n"
"\n"
"@require_int\n"
"def p2(arg):\n"
"    print arg*2"

#: ../../whatsnew/2.4.rst:313
msgid ""
"An example in :pep:`318` contains a fancier version of this idea that lets "
"you both specify the required type and check the returned type."
msgstr ""
"Пример в :pep:`318` содержит более интересную версию этой идеи, которая "
"позволяет вам указать требуемый тип и проверить возвращаемый тип."

#: ../../whatsnew/2.4.rst:316
msgid ""
"Decorator functions can take arguments.  If arguments are supplied, your "
"decorator function is called with only those arguments and must return a new "
"decorator function; this function must take a single function and return a "
"function, as previously described.  In other words, ``@A @B @C(args)`` "
"becomes::"
msgstr ""
"Функции-декораторы могут принимать аргументы. Если аргументы указаны, ваша "
"функция-декоратор вызывается только с этими аргументами и должна возвращать "
"новую функцию-декоратор; эта функция должна принимать одну функцию и "
"возвращать функцию, как описано ранее. Другими словами, ``@A @B @C(args)`` "
"становится::"

#: ../../whatsnew/2.4.rst:321
msgid ""
"def f(): ...\n"
"_deco = C(args)\n"
"f = A(B(_deco(f)))"
msgstr ""
"def f(): ...\n"
"_deco = C(args)\n"
"f = A(B(_deco(f)))"

#: ../../whatsnew/2.4.rst:325
msgid ""
"Getting this right can be slightly brain-bending, but it's not too difficult."
msgstr ""
"Сделать это правильно может быть немного сложно, но это не так уж сложно."

#: ../../whatsnew/2.4.rst:327
msgid ""
"A small related change makes the :attr:`func_name <function.__name__>` "
"attribute of functions writable.  This attribute is used to display function "
"names in tracebacks, so decorators should change the name of any new "
"function that's constructed and returned."
msgstr ""
"Небольшое связанное с этим изменение делает атрибут :attr:`func_name "
"<function.__name__>` функций доступным для записи. Этот атрибут используется "
"для отображения имен функций в обратных трассировках, поэтому декораторы "
"должны изменять имя любой новой функции, которая создается и возвращается."

#: ../../whatsnew/2.4.rst:336
msgid ":pep:`318` - Decorators for Functions, Methods and Classes"
msgstr ":pep:`318` - Декораторы для функций, методов и классов"

#: ../../whatsnew/2.4.rst:337
msgid ""
"Written  by Kevin D. Smith, Jim Jewett, and Skip Montanaro.  Several people "
"wrote patches implementing function decorators, but the one that was "
"actually checked in was patch #979728, written by Mark Russell."
msgstr ""
"Авторы сценария Кевин Д. Смит, Джим Джуэтт и Скип Монтанаро. Несколько "
"человек написали патчи, реализующие декораторы функций, но на самом деле был "
"проверен патч № 979728, написанный Марком Расселом."

#: ../../whatsnew/2.4.rst:341
msgid "https://wiki.python.org/moin/PythonDecoratorLibrary"
msgstr "https://wiki.python.org/moin/PythonDecoratorLibrary"

#: ../../whatsnew/2.4.rst:342
msgid "This Wiki page contains several examples of decorators."
msgstr "Эта Wiki-страница содержит несколько примеров декораторов."

#: ../../whatsnew/2.4.rst:348
msgid "PEP 322: Reverse Iteration"
msgstr "PEP 322: Обратная итерация"

#: ../../whatsnew/2.4.rst:350
msgid ""
"A new built-in function, ``reversed(seq)``, takes a sequence and returns an "
"iterator that loops over the elements of the sequence  in reverse order.   ::"
msgstr ""
"Новая встроенная функция reversed(seq) принимает последовательность и "
"возвращает итератор, который перебирает элементы последовательности в "
"обратном порядке. ::"

#: ../../whatsnew/2.4.rst:353
msgid ""
">>> for i in reversed(xrange(1,4)):\n"
"...    print i\n"
"...\n"
"3\n"
"2\n"
"1"
msgstr ""
">>> for i in reversed(xrange(1,4)):\n"
"...    print i\n"
"...\n"
"3\n"
"2\n"
"1"

#: ../../whatsnew/2.4.rst:360
msgid ""
"Compared to extended slicing, such as ``range(1,4)[::-1]``, :func:`reversed` "
"is easier to read, runs faster, and uses substantially less memory."
msgstr ""
"По сравнению с расширенным срезом, таким как ``range(1,4)[::-1]``, :func:"
"`reversed` легче читается, работает быстрее и использует существенно меньше "
"памяти."

#: ../../whatsnew/2.4.rst:363
msgid ""
"Note that :func:`reversed` only accepts sequences, not arbitrary iterators.  "
"If you want to reverse an iterator, first convert it to  a list with :func:"
"`list`. ::"
msgstr ""
"Обратите внимание, что :func:`reversed` принимает только последовательности, "
"а не произвольные итераторы. Если вы хотите перевернуть итератор, сначала "
"преобразуйте его в список с помощью :func:`list`. ::"

#: ../../whatsnew/2.4.rst:367
msgid ""
">>> input = open('/etc/passwd', 'r')\n"
">>> for line in reversed(list(input)):\n"
"...   print line\n"
"...\n"
"root:*:0:0:System Administrator:/var/root:/bin/tcsh\n"
"  ..."
msgstr ""
">>> input = open('/etc/passwd', 'r')\n"
">>> for line in reversed(list(input)):\n"
"...   print line\n"
"...\n"
"root:*:0:0:System Administrator:/var/root:/bin/tcsh\n"
"  ..."

#: ../../whatsnew/2.4.rst:377
msgid ":pep:`322` - Reverse Iteration"
msgstr ":pep:`322` - Обратная итерация"

#: ../../whatsnew/2.4.rst:378
msgid "Written and implemented by Raymond Hettinger."
msgstr "Написано и реализовано Раймондом Хеттингером."

#: ../../whatsnew/2.4.rst:384
msgid "PEP 324: New subprocess Module"
msgstr "PEP 324: Новый модуль подпроцесса"

#: ../../whatsnew/2.4.rst:386
msgid ""
"The standard library provides a number of ways to execute a subprocess, "
"offering different features and different levels of complexity. ``os."
"system(command)`` is easy to use, but slow (it runs a shell process which "
"executes the command) and dangerous (you have to be careful about escaping "
"the shell's metacharacters).  The :mod:`!popen2` module offers classes that "
"can capture standard output and standard error from the subprocess, but the "
"naming is confusing.  The :mod:`subprocess` module cleans  this up, "
"providing a unified interface that offers all the features you might need."
msgstr ""
"Стандартная библиотека предоставляет несколько способов выполнения "
"подпроцесса, предлагая различные функции и разные уровни сложности. ``os."
"system(command)`` прост в использовании, но медленный (он запускает процесс "
"оболочки, который выполняет команду) и опасный (вы должны быть осторожны с "
"экранированием метасимволов оболочки). Модуль :mod:`!popen2` предлагает "
"классы, которые могут захватывать стандартный вывод и стандартные ошибки из "
"подпроцесса, но их имена сбивают с толку. Модуль :mod:`subprocess` "
"исправляет это, предоставляя унифицированный интерфейс, предлагающий все "
"функции, которые могут вам понадобиться."

#: ../../whatsnew/2.4.rst:395
msgid ""
"Instead of :mod:`!popen2`'s collection of classes, :mod:`subprocess` "
"contains a single class called :class:`subprocess.Popen`  whose constructor "
"supports a number of different keyword arguments. ::"
msgstr ""
"Вместо коллекции классов :mod:`!popen2`, :mod:`subprocess` содержит один "
"класс с именем :class:`subprocess.Popen`, конструктор которого поддерживает "
"ряд различных ключевых аргументов. ::"

#: ../../whatsnew/2.4.rst:399
msgid ""
"class Popen(args, bufsize=0, executable=None,\n"
"            stdin=None, stdout=None, stderr=None,\n"
"            preexec_fn=None, close_fds=False, shell=False,\n"
"            cwd=None, env=None, universal_newlines=False,\n"
"            startupinfo=None, creationflags=0):"
msgstr ""
"class Popen(args, bufsize=0, executable=None,\n"
"            stdin=None, stdout=None, stderr=None,\n"
"            preexec_fn=None, close_fds=False, shell=False,\n"
"            cwd=None, env=None, universal_newlines=False,\n"
"            startupinfo=None, creationflags=0):"

#: ../../whatsnew/2.4.rst:405
msgid ""
"*args* is commonly a sequence of strings that will be the arguments to the "
"program executed as the subprocess.  (If the *shell* argument is true, "
"*args* can be a string which will then be passed on to the shell for "
"interpretation, just as :func:`os.system` does.)"
msgstr ""
"*args* обычно представляет собой последовательность строк, которые будут "
"аргументами программы, выполняемой как подпроцесс. (Если аргумент *shell* "
"имеет значение true, *args* может быть строкой, которая затем будет передана "
"оболочке для интерпретации, как это делает :func:`os.system`.)"

#: ../../whatsnew/2.4.rst:410
msgid ""
"*stdin*, *stdout*, and *stderr* specify what the subprocess's input, output, "
"and error streams will be.  You can provide a file object or a file "
"descriptor, or you can use the constant ``subprocess.PIPE`` to create a pipe "
"between the subprocess and the parent."
msgstr ""
"*stdin*, *stdout* и *stderr* определяют, какими будут потоки ввода, вывода и "
"ошибок подпроцесса. Вы можете предоставить файловый объект или файловый "
"дескриптор или использовать константу subprocess.PIPE для создания канала "
"между подпроцессом и родительским процессом."

#: ../../whatsnew/2.4.rst:418
msgid "The constructor has a number of handy options:"
msgstr "Конструктор имеет ряд удобных опций:"

#: ../../whatsnew/2.4.rst:420
msgid ""
"*close_fds* requests that all file descriptors be closed before running the "
"subprocess."
msgstr ""
"*close_fds* запрашивает закрытие всех файловых дескрипторов перед запуском "
"подпроцесса."

#: ../../whatsnew/2.4.rst:423
msgid ""
"*cwd* specifies the working directory in which the subprocess will be "
"executed (defaulting to whatever the parent's working directory is)."
msgstr ""
"*cwd* указывает рабочий каталог, в котором будет выполняться подпроцесс (по "
"умолчанию используется рабочий каталог родительского процесса)."

#: ../../whatsnew/2.4.rst:426
msgid "*env* is a dictionary specifying environment variables."
msgstr "*env* — словарь, определяющий переменные среды."

#: ../../whatsnew/2.4.rst:428
msgid ""
"*preexec_fn* is a function that gets called before the child is started."
msgstr ""
"*preexec_fn* — это функция, которая вызывается перед запуском дочернего "
"элемента."

#: ../../whatsnew/2.4.rst:430
msgid ""
"*universal_newlines* opens the child's input and output using Python's :term:"
"`universal newlines` feature."
msgstr ""
"*universal_newlines* открывает ввод и вывод дочернего элемента с помощью "
"функции Python :term:`universal newlines`."

#: ../../whatsnew/2.4.rst:433
msgid ""
"Once you've created the :class:`Popen` instance,  you can call its :meth:"
"`wait` method to pause until the subprocess has exited, :meth:`poll` to "
"check if it's exited without pausing,  or ``communicate(data)`` to send the "
"string *data* to the subprocess's standard input.   ``communicate(data)``  "
"then reads any data that the subprocess has sent to its standard output  or "
"standard error, returning a tuple ``(stdout_data, stderr_data)``."
msgstr ""
"После того, как вы создали экземпляр :class:`Popen`, вы можете вызвать его "
"метод :meth:`wait` для приостановки до завершения подпроцесса, :meth:`poll`, "
"чтобы проверить, завершился ли он без паузы, или `` communication(data)`` "
"для отправки строки *data* на стандартный ввод подпроцесса. "
"``communicate(data)`` затем считывает любые данные, которые подпроцесс "
"отправил на свой стандартный вывод или стандартную ошибку, возвращая кортеж "
"``(stdout_data, stderr_data)``."

#: ../../whatsnew/2.4.rst:440
msgid ""
":func:`call` is a shortcut that passes its arguments along to the :class:"
"`Popen` constructor, waits for the command to complete, and returns the "
"status code of the subprocess.  It can serve as a safer analog to :func:`os."
"system`::"
msgstr ""
":func:`call` — это ярлык, который передает свои аргументы конструктору :"
"class:`Popen`, ожидает завершения команды и возвращает код состояния "
"подпроцесса. Он может служить более безопасным аналогом :func:`os.system`::"

#: ../../whatsnew/2.4.rst:444
msgid ""
"sts = subprocess.call(['dpkg', '-i', '/tmp/new-package.deb'])\n"
"if sts == 0:\n"
"    # Success\n"
"    ...\n"
"else:\n"
"    # dpkg returned an error\n"
"    ..."
msgstr ""
"sts = subprocess.call(['dpkg', '-i', '/tmp/new-package.deb'])\n"
"if sts == 0:\n"
"    # Success\n"
"    ...\n"
"else:\n"
"    # dpkg returned an error\n"
"    ..."

#: ../../whatsnew/2.4.rst:452
msgid ""
"The command is invoked without use of the shell.  If you really do want to  "
"use the shell, you can add ``shell=True`` as a keyword argument and provide "
"a string instead of a sequence::"
msgstr ""
"Команда вызывается без использования оболочки. Если вы действительно хотите "
"использовать оболочку, вы можете добавить ``shell=True`` в качестве "
"аргумента ключевого слова и предоставить строку вместо последовательности::"

#: ../../whatsnew/2.4.rst:456
msgid "sts = subprocess.call('dpkg -i /tmp/new-package.deb', shell=True)"
msgstr "sts = subprocess.call('dpkg -i /tmp/new-package.deb', shell=True)"

#: ../../whatsnew/2.4.rst:458
msgid ""
"The PEP takes various examples of shell and Python code and shows how they'd "
"be translated into Python code that uses :mod:`subprocess`.  Reading this "
"section of the PEP is highly recommended."
msgstr ""
"PEP берет различные примеры кода оболочки и Python и показывает, как их "
"можно перевести в код Python, использующий :mod:`subprocess`. Настоятельно "
"рекомендуется прочитать этот раздел PEP."

#: ../../whatsnew/2.4.rst:465
msgid ":pep:`324` - subprocess - New process module"
msgstr ":pep:`324` - подпроцесс - Новый модуль процесса"

#: ../../whatsnew/2.4.rst:466
msgid ""
"Written and implemented by Peter Åstrand, with assistance from Fredrik Lundh "
"and others."
msgstr ""
"Написано и реализовано Питером Острандом при содействии Фредрика Лунда и "
"других."

#: ../../whatsnew/2.4.rst:473
msgid "PEP 327: Decimal Data Type"
msgstr "PEP 327: Десятичный тип данных"

#: ../../whatsnew/2.4.rst:475
msgid ""
"Python has always supported floating-point (FP) numbers, based on the "
"underlying C :c:expr:`double` type, as a data type.  However, while most "
"programming languages provide a floating-point type, many people (even "
"programmers) are unaware that floating-point numbers don't represent certain "
"decimal fractions accurately.  The new :class:`Decimal` type can represent "
"these fractions accurately, up to a user-specified precision limit."
msgstr ""
"Python всегда поддерживал числа с плавающей запятой (FP), основанные на "
"базовом типе C :c:expr:`double`, в качестве типа данных. Однако, хотя "
"большинство языков программирования предоставляют тип с плавающей запятой, "
"многие люди (даже программисты) не знают, что числа с плавающей запятой "
"неточно представляют определенные десятичные дроби. Новый тип :class:"
"`Decimal` может точно представлять эти дроби, вплоть до заданного "
"пользователем предела точности."

#: ../../whatsnew/2.4.rst:484
msgid "Why is Decimal needed?"
msgstr "Зачем нужна десятичная дробь?"

#: ../../whatsnew/2.4.rst:486
msgid ""
"The limitations arise from the representation used for floating-point "
"numbers. FP numbers are made up of three components:"
msgstr ""
"Ограничения возникают из-за представления, используемого для чисел с "
"плавающей запятой. Числа FP состоят из трех компонентов:"

#: ../../whatsnew/2.4.rst:489
msgid "The sign, which is positive or negative."
msgstr "Знак, который является положительным или отрицательным."

#: ../../whatsnew/2.4.rst:491
msgid ""
"The mantissa, which is a single-digit binary number   followed by a "
"fractional part.  For example, ``1.01`` in base-2 notation is ``1 + 0/2 + "
"1/4``, or 1.25 in decimal notation."
msgstr ""
"Мантисса — однозначное двоичное число, за которым следует дробная часть. "
"Например, «1,01» в системе счисления с основанием 2 — это «1 + 0/2 + 1/4» "
"или 1,25 в десятичной системе счисления."

#: ../../whatsnew/2.4.rst:495
msgid ""
"The exponent, which tells where the decimal point is located in the number "
"represented."
msgstr ""
"Показатель степени, указывающий, где находится десятичная точка в "
"представленном числе."

#: ../../whatsnew/2.4.rst:498
msgid ""
"For example, the number 1.25 has positive sign, a mantissa value of 1.01 (in "
"binary), and an exponent of 0 (the decimal point doesn't need to be "
"shifted). The number 5 has the same sign and mantissa, but the exponent is 2 "
"because the mantissa is multiplied by 4 (2 to the power of the exponent 2); "
"1.25 \\* 4 equals 5."
msgstr ""
"Например, число 1,25 имеет положительный знак, значение мантиссы 1,01 (в "
"двоичном формате) и показатель степени 0 (десятичную точку сдвигать не "
"нужно). Число 5 имеет тот же знак и мантиссу, но показатель степени равен 2, "
"поскольку мантисса умножается на 4 (2 в степени показателя степени 2); 1,25 "
"\\* 4 равно 5."

#: ../../whatsnew/2.4.rst:504
msgid ""
"Modern systems usually provide floating-point support that conforms to a "
"standard called IEEE 754.  C's :c:expr:`double` type is usually implemented "
"as a 64-bit IEEE 754 number, which uses 52 bits of space for the mantissa.  "
"This means that numbers can only be specified to 52 bits of precision.  If "
"you're trying to represent numbers whose expansion repeats endlessly, the "
"expansion is cut off after 52 bits. Unfortunately, most software needs to "
"produce output in base 10, and common fractions in base 10 are often "
"repeating decimals in binary. For example, 1.1 decimal is binary "
"``1.0001100110011 ...``; .1 = 1/16 + 1/32 + 1/256 plus an infinite number of "
"additional terms.  IEEE 754 has to chop off that infinitely repeated decimal "
"after 52 digits, so the representation is slightly inaccurate."
msgstr ""
"Современные системы обычно обеспечивают поддержку чисел с плавающей запятой, "
"соответствующую стандарту IEEE 754. Тип :c:expr:`double` языка C обычно "
"реализуется как 64-битное число IEEE 754, которое использует 52 бита "
"пространства для мантиссы. Это означает, что числа могут быть указаны только "
"с точностью до 52 бит. Если вы пытаетесь представить числа, расширение "
"которых повторяется бесконечно, расширение обрезается после 52 бит. К "
"сожалению, большинству программ необходимо выводить результаты в десятичной "
"системе счисления, а обычные дроби в десятичной системе часто повторяют "
"десятичные дроби в двоичном формате. Например, десятичное число 1,1 — это "
"двоичное ``1.0001100110011 ...``; .1 = 1/16 + 1/32 + 1/256 плюс бесконечное "
"количество дополнительных членов. IEEE 754 должен отсекать бесконечно "
"повторяющуюся десятичную дробь после 52 цифр, поэтому представление немного "
"неточное."

#: ../../whatsnew/2.4.rst:516
msgid "Sometimes you can see this inaccuracy when the number is printed::"
msgstr "Иногда можно увидеть такую ​​неточность при печати числа:"

#: ../../whatsnew/2.4.rst:518
msgid ""
">>> 1.1\n"
"1.1000000000000001"
msgstr ""
">>> 1.1\n"
"1.1000000000000001"

#: ../../whatsnew/2.4.rst:521
msgid ""
"The inaccuracy isn't always visible when you print the number because the FP-"
"to-decimal-string conversion is provided by the C library, and most C "
"libraries try to produce sensible output.  Even if it's not displayed, "
"however, the inaccuracy is still there and subsequent operations can magnify "
"the error."
msgstr ""
"Неточность не всегда заметна при печати числа, поскольку преобразование FP в "
"десятичную строку обеспечивается библиотекой C, а большинство библиотек C "
"пытаются выдать разумный результат. Однако даже если она не отображается, "
"неточность все равно сохраняется, и последующие операции могут увеличить "
"ошибку."

#: ../../whatsnew/2.4.rst:526
msgid ""
"For many applications this doesn't matter.  If I'm plotting points and "
"displaying them on my monitor, the difference between 1.1 and "
"1.1000000000000001 is too small to be visible.  Reports often limit output "
"to a certain number of decimal places, and if you round the number to two or "
"three or even eight decimal places, the error is never apparent.  However, "
"for applications where it does matter,  it's a lot of work to implement your "
"own custom arithmetic routines."
msgstr ""
"Для многих приложений это не имеет значения. Если я рисую точки и показываю "
"их на мониторе, разница между 1,1 и 1,1000000000000001 слишком мала, чтобы "
"ее можно было увидеть. Отчеты часто ограничивают вывод определенным "
"количеством десятичных знаков, и если вы округлите число до двух, трех или "
"даже восьми десятичных знаков, ошибка никогда не будет очевидна. Однако для "
"приложений, где это имеет значение, реализация собственных арифметических "
"процедур требует больших усилий."

#: ../../whatsnew/2.4.rst:534
msgid "Hence, the :class:`Decimal` type was created."
msgstr "Таким образом, был создан тип :class:`Decimal`."

#: ../../whatsnew/2.4.rst:538
msgid "The :class:`Decimal` type"
msgstr "Тип :class:`Decimal` "

#: ../../whatsnew/2.4.rst:540
msgid ""
"A new module, :mod:`decimal`, was added to Python's standard library.  It "
"contains two classes, :class:`Decimal` and :class:`Context`.  :class:"
"`Decimal` instances represent numbers, and :class:`Context` instances are "
"used to wrap up various settings such as the precision and default rounding "
"mode."
msgstr ""
"В стандартную библиотеку Python был добавлен новый модуль :mod:`decimal`. Он "
"содержит два класса: :class:`Decimal` и :class:`Context`. Экземпляры :class:"
"`Decimal` представляют числа, а экземпляры :class:`Context` используются для "
"реализации различных настроек, таких как точность и режим округления по "
"умолчанию."

#: ../../whatsnew/2.4.rst:545
msgid ""
":class:`Decimal` instances are immutable, like regular Python integers and "
"FP numbers; once it's been created, you can't change the value an instance "
"represents.  :class:`Decimal` instances can be created from integers or "
"strings::"
msgstr ""
"Экземпляры :class:`Decimal` неизменяемы, как обычные целые числа Python и "
"числа FP; после создания вы не сможете изменить значение, которое "
"представляет экземпляр. Экземпляры :class:`Decimal` могут быть созданы из "
"целых чисел или строк::"

#: ../../whatsnew/2.4.rst:550
msgid ""
">>> import decimal\n"
">>> decimal.Decimal(1972)\n"
"Decimal(\"1972\")\n"
">>> decimal.Decimal(\"1.1\")\n"
"Decimal(\"1.1\")"
msgstr ""
">>> import decimal\n"
">>> decimal.Decimal(1972)\n"
"Decimal(\"1972\")\n"
">>> decimal.Decimal(\"1.1\")\n"
"Decimal(\"1.1\")"

#: ../../whatsnew/2.4.rst:556
msgid ""
"You can also provide tuples containing the sign, the mantissa represented  "
"as a tuple of decimal digits, and the exponent::"
msgstr ""
"Вы также можете предоставить кортежи, содержащие знак, мантиссу, "
"представленную в виде кортежа десятичных цифр, и показатель степени::"

#: ../../whatsnew/2.4.rst:559
msgid ""
">>> decimal.Decimal((1, (1, 4, 7, 5), -2))\n"
"Decimal(\"-14.75\")"
msgstr ""
">>> decimal.Decimal((1, (1, 4, 7, 5), -2))\n"
"Decimal(\"-14.75\")"

#: ../../whatsnew/2.4.rst:562
msgid ""
"Cautionary note: the sign bit is a Boolean value, so 0 is positive and 1 is "
"negative."
msgstr ""
"Предупреждение: знаковый бит представляет собой логическое значение, поэтому "
"0 является положительным, а 1 — отрицательным."

#: ../../whatsnew/2.4.rst:565
msgid ""
"Converting from floating-point numbers poses a bit of a problem: should the "
"FP number representing 1.1 turn into the decimal number for exactly 1.1, or "
"for 1.1 plus whatever inaccuracies are introduced? The decision was to dodge "
"the issue and leave such a conversion out of the API.  Instead, you should "
"convert the floating-point number into a string using the desired precision "
"and pass the string to the :class:`Decimal` constructor::"
msgstr ""
"Преобразование чисел с плавающей запятой создает некоторую проблему: должно "
"ли число FP, представляющее 1,1, превратиться в десятичное число ровно для "
"1,1 или для 1,1 плюс все внесенные неточности? Было принято решение обойти "
"эту проблему и исключить такое преобразование из API. Вместо этого вам "
"следует преобразовать число с плавающей запятой в строку с желаемой "
"точностью и передать строку конструктору :class:`Decimal`::"

#: ../../whatsnew/2.4.rst:572
msgid ""
">>> f = 1.1\n"
">>> decimal.Decimal(str(f))\n"
"Decimal(\"1.1\")\n"
">>> decimal.Decimal('%.12f' % f)\n"
"Decimal(\"1.100000000000\")"
msgstr ""
">>> f = 1.1\n"
">>> decimal.Decimal(str(f))\n"
"Decimal(\"1.1\")\n"
">>> decimal.Decimal('%.12f' % f)\n"
"Decimal(\"1.100000000000\")"

#: ../../whatsnew/2.4.rst:578
msgid ""
"Once you have :class:`Decimal` instances, you can perform the usual "
"mathematical operations on them.  One limitation: exponentiation requires an "
"integer exponent::"
msgstr ""
"Если у вас есть экземпляры :class:`Decimal`, вы можете выполнять с ними "
"обычные математические операции. Одно ограничение: для возведения в степень "
"требуется целочисленный показатель::"

#: ../../whatsnew/2.4.rst:582
msgid ""
">>> a = decimal.Decimal('35.72')\n"
">>> b = decimal.Decimal('1.73')\n"
">>> a+b\n"
"Decimal(\"37.45\")\n"
">>> a-b\n"
"Decimal(\"33.99\")\n"
">>> a*b\n"
"Decimal(\"61.7956\")\n"
">>> a/b\n"
"Decimal(\"20.64739884393063583815028902\")\n"
">>> a ** 2\n"
"Decimal(\"1275.9184\")\n"
">>> a**b\n"
"Traceback (most recent call last):\n"
"  ...\n"
"decimal.InvalidOperation: x ** (non-integer)"
msgstr ""
">>> a = decimal.Decimal('35.72')\n"
">>> b = decimal.Decimal('1.73')\n"
">>> a+b\n"
"Decimal(\"37.45\")\n"
">>> a-b\n"
"Decimal(\"33.99\")\n"
">>> a*b\n"
"Decimal(\"61.7956\")\n"
">>> a/b\n"
"Decimal(\"20.64739884393063583815028902\")\n"
">>> a ** 2\n"
"Decimal(\"1275.9184\")\n"
">>> a**b\n"
"Traceback (most recent call last):\n"
"  ...\n"
"decimal.InvalidOperation: x ** (non-integer)"

#: ../../whatsnew/2.4.rst:599
msgid ""
"You can combine :class:`Decimal` instances with integers, but not with "
"floating-point numbers::"
msgstr ""
"Вы можете комбинировать экземпляры :class:`Decimal` с целыми числами, но не "
"с числами с плавающей запятой::"

#: ../../whatsnew/2.4.rst:602
msgid ""
">>> a + 4\n"
"Decimal(\"39.72\")\n"
">>> a + 4.5\n"
"Traceback (most recent call last):\n"
"  ...\n"
"TypeError: You can interact Decimal only with int, long or Decimal data "
"types.\n"
">>>"
msgstr ""
">>> a + 4\n"
"Decimal(\"39.72\")\n"
">>> a + 4.5\n"
"Traceback (most recent call last):\n"
"  ...\n"
"TypeError: You can interact Decimal only with int, long or Decimal data "
"types.\n"
">>>"

#: ../../whatsnew/2.4.rst:610
msgid ""
":class:`Decimal` numbers can be used with the :mod:`math` and :mod:`cmath` "
"modules, but note that they'll be immediately converted to  floating-point "
"numbers before the operation is performed, resulting in a possible loss of "
"precision and accuracy.  You'll also get back a regular floating-point "
"number and not a :class:`Decimal`.   ::"
msgstr ""
"Числа :class:`Decimal` можно использовать с модулями :mod:`math` и :mod:"
"`cmath`, но учтите, что они будут немедленно преобразованы в числа с "
"плавающей запятой перед выполнением операции, что приведет к возможна потеря "
"точности и аккуратности. Вы также получите обычное число с плавающей "
"запятой, а не :class:`Decimal`. ::"

#: ../../whatsnew/2.4.rst:616
msgid ""
">>> import math, cmath\n"
">>> d = decimal.Decimal('123456789012.345')\n"
">>> math.sqrt(d)\n"
"351364.18288201344\n"
">>> cmath.sqrt(-d)\n"
"351364.18288201344j"
msgstr ""
">>> import math, cmath\n"
">>> d = decimal.Decimal('123456789012.345')\n"
">>> math.sqrt(d)\n"
"351364.18288201344\n"
">>> cmath.sqrt(-d)\n"
"351364.18288201344j"

#: ../../whatsnew/2.4.rst:623
msgid ""
":class:`Decimal` instances have a :meth:`sqrt` method that returns a :class:"
"`Decimal`, but if you need other things such as trigonometric functions "
"you'll have to implement them. ::"
msgstr ""
"Экземпляры :class:`Decimal` имеют метод :meth:`sqrt`, который возвращает :"
"class:`Decimal`, но если вам нужны другие вещи, например, тригонометрические "
"функции, вам придется их реализовать. ::"

#: ../../whatsnew/2.4.rst:627
msgid ""
">>> d.sqrt()\n"
"Decimal(\"351364.1828820134592177245001\")"
msgstr ""
">>> d.sqrt()\n"
"Decimal(\"351364.1828820134592177245001\")"

#: ../../whatsnew/2.4.rst:632
msgid "The :class:`Context` type"
msgstr "Тип :class:`Context` "

#: ../../whatsnew/2.4.rst:634
msgid ""
"Instances of the :class:`Context` class encapsulate several settings for "
"decimal operations:"
msgstr ""
"Экземпляры класса :class:`Context` инкапсулируют несколько настроек для "
"десятичных операций:"

#: ../../whatsnew/2.4.rst:637
msgid ":attr:`prec` is the precision, the number of decimal places."
msgstr ":attr:`prec` — точность, количество десятичных знаков."

#: ../../whatsnew/2.4.rst:639
msgid ""
":attr:`rounding` specifies the rounding mode.  The :mod:`decimal` module has "
"constants for the various possibilities: :const:`ROUND_DOWN`, :const:"
"`ROUND_CEILING`,  :const:`ROUND_HALF_EVEN`, and various others."
msgstr ""
":attr:`rounding` определяет режим округления. Модуль :mod:`decimal` имеет "
"константы для различных возможностей: :const:`ROUND_DOWN`, :const:"
"`ROUND_CEILING`, :const:`ROUND_HALF_EVEN` и других."

#: ../../whatsnew/2.4.rst:643
msgid ""
":attr:`traps` is a dictionary specifying what happens on encountering "
"certain error conditions: either  an exception is raised or  a value is "
"returned.  Some examples of error conditions are division by zero, loss of "
"precision, and overflow."
msgstr ""
":attr:`traps` — это словарь, определяющий, что происходит при возникновении "
"определенных условий ошибки: либо возникает исключение, либо возвращается "
"значение. Некоторыми примерами ошибок являются деление на ноль, потеря "
"точности и переполнение."

#: ../../whatsnew/2.4.rst:648
msgid ""
"There's a thread-local default context available by calling :func:"
"`getcontext`; you can change the properties of this context to alter the "
"default precision, rounding, or trap handling.  The following example shows "
"the effect of changing the precision of the default context::"
msgstr ""
"Локальный контекст потока по умолчанию доступен при вызове :func:"
"`getcontext`; вы можете изменить свойства этого контекста, чтобы изменить "
"точность, округление или обработку ловушек по умолчанию. В следующем примере "
"показан эффект изменения точности контекста по умолчанию:"

#: ../../whatsnew/2.4.rst:653
msgid ""
">>> decimal.getcontext().prec\n"
"28\n"
">>> decimal.Decimal(1) / decimal.Decimal(7)\n"
"Decimal(\"0.1428571428571428571428571429\")\n"
">>> decimal.getcontext().prec = 9\n"
">>> decimal.Decimal(1) / decimal.Decimal(7)\n"
"Decimal(\"0.142857143\")"
msgstr ""
">>> decimal.getcontext().prec\n"
"28\n"
">>> decimal.Decimal(1) / decimal.Decimal(7)\n"
"Decimal(\"0.1428571428571428571428571429\")\n"
">>> decimal.getcontext().prec = 9\n"
">>> decimal.Decimal(1) / decimal.Decimal(7)\n"
"Decimal(\"0.142857143\")"

#: ../../whatsnew/2.4.rst:661
msgid ""
"The default action for error conditions is selectable; the module can either "
"return a special value such as infinity or not-a-number, or exceptions can "
"be raised::"
msgstr ""
"Можно выбрать действие по умолчанию для условий ошибки; модуль может либо "
"возвращать специальное значение, например бесконечность или не-число, либо "
"могут быть вызваны исключения::"

#: ../../whatsnew/2.4.rst:665
msgid ""
">>> decimal.Decimal(1) / decimal.Decimal(0)\n"
"Traceback (most recent call last):\n"
"  ...\n"
"decimal.DivisionByZero: x / 0\n"
">>> decimal.getcontext().traps[decimal.DivisionByZero] = False\n"
">>> decimal.Decimal(1) / decimal.Decimal(0)\n"
"Decimal(\"Infinity\")\n"
">>>"
msgstr ""
">>> decimal.Decimal(1) / decimal.Decimal(0)\n"
"Traceback (most recent call last):\n"
"  ...\n"
"decimal.DivisionByZero: x / 0\n"
">>> decimal.getcontext().traps[decimal.DivisionByZero] = False\n"
">>> decimal.Decimal(1) / decimal.Decimal(0)\n"
"Decimal(\"Infinity\")\n"
">>>"

#: ../../whatsnew/2.4.rst:674
msgid ""
"The :class:`Context` instance also has various methods for formatting  "
"numbers such as :meth:`to_eng_string` and :meth:`to_sci_string`."
msgstr ""
"Экземпляр :class:`Context` также имеет различные методы форматирования "
"чисел, такие как :meth:`to_eng_string` и :meth:`to_sci_string`."

#: ../../whatsnew/2.4.rst:677
msgid ""
"For more information, see the documentation for the :mod:`decimal` module, "
"which includes a quick-start tutorial and a reference."
msgstr ""
"Для получения дополнительной информации см. документацию к модулю :mod:"
"`decimal`, которая включает в себя краткое руководство и справку."

#: ../../whatsnew/2.4.rst:683
msgid ":pep:`327` - Decimal Data Type"
msgstr ":pep:`327` - Десятичный тип данных"

#: ../../whatsnew/2.4.rst:684
msgid ""
"Written by Facundo Batista and implemented by Facundo Batista, Eric Price, "
"Raymond Hettinger, Aahz, and Tim Peters."
msgstr ""
"Написано Факундо Батистой и реализовано Факундо Батистой, Эриком Прайсом, "
"Рэймондом Хеттингером, Аазом и Тимом Питерсом."

#: ../../whatsnew/2.4.rst:687
msgid ""
"`http://www.lahey.com/float.htm <https://web.archive.org/web/20230604072523/"
"http://www.lahey.com/float.htm>`__"
msgstr ""
"`http://www.lahey.com/float.htm <https://web.archive.org/web/20230604072523/"
"http://www.lahey.com/float.htm>`__"

#: ../../whatsnew/2.4.rst:688
msgid ""
"The article uses Fortran code to illustrate many of the problems that "
"floating-point inaccuracy can cause."
msgstr ""
"В статье используется код Фортрана для иллюстрации многих проблем, которые "
"может вызвать неточность чисел с плавающей запятой."

#: ../../whatsnew/2.4.rst:691
msgid "https://speleotrove.com/decimal/"
msgstr "https://speleotrove.com/decimal/"

#: ../../whatsnew/2.4.rst:692
msgid ""
"A description of a decimal-based representation.  This representation is "
"being proposed as a standard, and underlies the new Python decimal type.  "
"Much of this material was written by Mike Cowlishaw, designer of the Rexx "
"language."
msgstr ""
"Описание десятичного представления. Это представление предлагается в "
"качестве стандарта и лежит в основе нового десятичного типа Python. Большая "
"часть этого материала была написана Майком Коулишоу, разработчиком языка "
"Rexx."

#: ../../whatsnew/2.4.rst:700
msgid "PEP 328: Multi-line Imports"
msgstr "PEP 328: многострочный импорт"

#: ../../whatsnew/2.4.rst:702
msgid ""
"One language change is a small syntactic tweak aimed at making it easier to "
"import many names from a module.  In a ``from module import names`` "
"statement, *names* is a sequence of names separated by commas.  If the "
"sequence is  very long, you can either write multiple imports from the same "
"module, or you can use backslashes to escape the line endings like this::"
msgstr ""
"Одно языковое изменение — это небольшая синтаксическая настройка, призванная "
"упростить импорт многих имен из модуля. В операторе импорта имен из модуля "
"*names* представляет собой последовательность имен, разделенных запятыми. "
"Если последовательность очень длинная, вы можете либо записать несколько "
"импортов из одного и того же модуля, либо использовать обратную косую черту, "
"чтобы экранировать окончания строк, например:"

#: ../../whatsnew/2.4.rst:708
msgid ""
"from SimpleXMLRPCServer import SimpleXMLRPCServer,\\\n"
"            SimpleXMLRPCRequestHandler,\\\n"
"            CGIXMLRPCRequestHandler,\\\n"
"            resolve_dotted_attribute"
msgstr ""
"from SimpleXMLRPCServer import SimpleXMLRPCServer,\\\n"
"            SimpleXMLRPCRequestHandler,\\\n"
"            CGIXMLRPCRequestHandler,\\\n"
"            resolve_dotted_attribute"

#: ../../whatsnew/2.4.rst:713
msgid ""
"The syntactic change in Python 2.4 simply allows putting the names within "
"parentheses.  Python ignores newlines within a parenthesized expression, so "
"the backslashes are no longer needed::"
msgstr ""
"Синтаксическое изменение в Python 2.4 позволяет просто заключать имена в "
"круглые скобки. Python игнорирует символы новой строки в выражении, "
"заключенном в круглые скобки, поэтому обратная косая черта больше не нужна::"

#: ../../whatsnew/2.4.rst:717
msgid ""
"from SimpleXMLRPCServer import (SimpleXMLRPCServer,\n"
"                                SimpleXMLRPCRequestHandler,\n"
"                                CGIXMLRPCRequestHandler,\n"
"                                resolve_dotted_attribute)"
msgstr ""
"from SimpleXMLRPCServer import (SimpleXMLRPCServer,\n"
"                                SimpleXMLRPCRequestHandler,\n"
"                                CGIXMLRPCRequestHandler,\n"
"                                resolve_dotted_attribute)"

#: ../../whatsnew/2.4.rst:722
msgid ""
"The PEP also proposes that all :keyword:`import` statements be absolute "
"imports, with a leading ``.`` character to indicate a relative import.  This "
"part of the PEP was not implemented for Python 2.4, but was completed for "
"Python 2.5."
msgstr ""
"PEP также предлагает, чтобы все операторы :keyword:`import` были абсолютными "
"импортами с ведущим символом ``.`` для обозначения относительного импорта. "
"Эта часть PEP не была реализована для Python 2.4, но была завершена для "
"Python 2.5."

#: ../../whatsnew/2.4.rst:729
msgid ":pep:`328` - Imports: Multi-Line and Absolute/Relative"
msgstr ":pep:`328` - Импорт: многострочный и абсолютный/относительный"

#: ../../whatsnew/2.4.rst:730
msgid "Written by Aahz.  Multi-line imports were implemented by Dima Dorfman."
msgstr "Написал Ааз. Многострочный импорт реализовал Дима Дорфман."

#: ../../whatsnew/2.4.rst:736
msgid "PEP 331: Locale-Independent Float/String Conversions"
msgstr ""
"PEP 331: независимые от локали преобразования чисел с плавающей запятой/"
"строки"

#: ../../whatsnew/2.4.rst:738
msgid ""
"The :mod:`locale` modules lets Python software select various conversions "
"and display conventions that are localized to a particular country or "
"language. However, the module was careful to not change the numeric locale "
"because various functions in Python's implementation required that the "
"numeric locale remain set to the ``'C'`` locale.  Often this was because the "
"code was using the C library's :c:func:`atof` function."
msgstr ""
"Модули :mod:`locale` позволяют программному обеспечению Python выбирать "
"различные преобразования и правила отображения, локализованные для "
"определенной страны или языка. Однако модуль старался не менять числовой "
"локаль, поскольку различные функции в реализации Python требовали, чтобы "
"числовая локаль оставалась установленной на локаль ``'C'``. Часто это "
"происходило потому, что код использовал функцию :c:func:`atof` библиотеки C."

#: ../../whatsnew/2.4.rst:745
msgid ""
"Not setting the numeric locale caused trouble for extensions that used third-"
"party C libraries, however, because they wouldn't have the correct locale "
"set. The motivating example was GTK+, whose user interface widgets weren't "
"displaying numbers in the current locale."
msgstr ""
"Однако отсутствие числового языкового стандарта вызывало проблемы для "
"расширений, которые использовали сторонние библиотеки C, поскольку для них "
"не был установлен правильный языковой стандарт. Мотивирующим примером был "
"GTK+, виджеты пользовательского интерфейса которого не отображали числа в "
"текущей локали."

#: ../../whatsnew/2.4.rst:750
msgid ""
"The solution described in the PEP is to add three new functions to the "
"Python API that perform ASCII-only conversions, ignoring the locale setting:"
msgstr ""
"Решение, описанное в PEP, заключается в добавлении в API Python трех новых "
"функций, которые выполняют преобразования только ASCII, игнорируя настройку "
"локали:"

#: ../../whatsnew/2.4.rst:753
msgid ""
"``PyOS_ascii_strtod(str, ptr)``  and ``PyOS_ascii_atof(str, ptr)`` both "
"convert a string to a C :c:expr:`double`."
msgstr ""
"``PyOS_ascii_strtod(str, ptr)`` и ``PyOS_ascii_atof(str, ptr)`` преобразуют "
"строку в C :c:expr:`double`."

#: ../../whatsnew/2.4.rst:756
msgid ""
"``PyOS_ascii_formatd(buffer, buf_len, format, d)`` converts a :c:expr:"
"`double` to an ASCII string."
msgstr ""
"``PyOS_ascii_formatd(buffer, buf_len, format, d)`` преобразует :c:expr:"
"`double` в строку ASCII."

#: ../../whatsnew/2.4.rst:759
msgid ""
"The code for these functions came from the GLib library (`https://developer-"
"old.gnome.org/glib/2.26/ <http://web.archive.org/web/20210306104320/https://"
"developer.gnome.org/glib/2.26/>`__), whose developers kindly relicensed the "
"relevant functions and donated them to the Python Software Foundation.  The :"
"mod:`locale` module  can now change the numeric locale, letting extensions "
"such as GTK+  produce the correct results."
msgstr ""
"Код для этих функций взят из библиотеки GLib (https://developer-old.gnome."
"org/glib/2.26/ <http://web.archive.org/web/20210306104320/https://developer."
"gnome .org/glib/2.26/>`__), разработчики которого любезно лицензировали "
"соответствующие функции и передали их Python Software Foundation. Модуль :"
"mod:`locale` теперь может изменять числовой локаль, позволяя таким "
"расширениям, как GTK+, выдавать правильные результаты."

#: ../../whatsnew/2.4.rst:768
msgid ":pep:`331` - Locale-Independent Float/String Conversions"
msgstr ""
":pep:`331` - Независимые от локали преобразования чисел с плавающей запятой/"
"строки"

#: ../../whatsnew/2.4.rst:769
msgid "Written by Christian R. Reis, and implemented by Gustavo Carneiro."
msgstr "Написано Кристианом Р. Рейсом и реализовано Густаво Карнейро."

#: ../../whatsnew/2.4.rst:775
msgid "Other Language Changes"
msgstr "Другие языковые изменения"

#: ../../whatsnew/2.4.rst:777
msgid ""
"Here are all of the changes that Python 2.4 makes to the core Python "
"language."
msgstr "Вот все изменения, которые Python 2.4 вносит в основной язык Python."

#: ../../whatsnew/2.4.rst:779
msgid "Decorators for functions and methods were added (:pep:`318`)."
msgstr "Добавлены декораторы для функций и методов (:pep:`318`)."

#: ../../whatsnew/2.4.rst:781
msgid ""
"Built-in :func:`set` and :func:`frozenset` types were  added (:pep:`218`). "
"Other new built-ins include the ``reversed(seq)`` function (:pep:`322`)."
msgstr ""
"Добавлены встроенные типы :func:`set` и :func:`frozenset` (:pep:`218`). "
"Другие новые встроенные функции включают функцию reversed(seq) (:pep:`322`)."

#: ../../whatsnew/2.4.rst:784
msgid "Generator expressions were added (:pep:`289`)."
msgstr "Добавлены выражения-генераторы (:pep:`289`)."

#: ../../whatsnew/2.4.rst:786
msgid ""
"Certain numeric expressions no longer return values restricted to 32 or 64 "
"bits (:pep:`237`)."
msgstr ""
"Некоторые числовые выражения больше не возвращают значения, ограниченные 32 "
"или 64 битами (:pep:`237`)."

#: ../../whatsnew/2.4.rst:789
msgid ""
"You can now put parentheses around the list of names in a ``from module "
"import names`` statement (:pep:`328`)."
msgstr ""
"Теперь вы можете заключать список имен в круглые скобки в операторе ``from "
"Module Import Names'' (:pep:`328`)."

#: ../../whatsnew/2.4.rst:792
msgid ""
"The :meth:`dict.update` method now accepts the same argument forms as the :"
"class:`dict` constructor.  This includes any mapping, any iterable of key/"
"value pairs, and keyword arguments. (Contributed by Raymond Hettinger.)"
msgstr ""
"Метод :meth:`dict.update` теперь принимает те же формы аргументов, что и "
"конструктор :class:`dict`. Сюда входят любые сопоставления, любые итерации "
"пар ключ/значение и аргументы ключевых слов. (Предоставлено Раймондом "
"Хеттингером.)"

#: ../../whatsnew/2.4.rst:796
msgid ""
"The string methods :meth:`ljust`, :meth:`rjust`, and :meth:`center` now take "
"an optional argument for specifying a fill character other than a space. "
"(Contributed by Raymond Hettinger.)"
msgstr ""
"Строковые методы :meth:`ljust`, :meth:`rjust` и :meth:`center` теперь "
"принимают необязательный аргумент для указания символа заполнения, отличного "
"от пробела. (Предоставлено Раймондом Хеттингером.)"

#: ../../whatsnew/2.4.rst:800
msgid ""
"Strings also gained an :meth:`rsplit` method that works like the :meth:"
"`split` method but splits from the end of the string.   (Contributed by Sean "
"Reifschneider.) ::"
msgstr ""
"В строках также появился метод :meth:`rsplit`, который работает аналогично "
"методу :meth:`split`, но разбивается с конца строки. (Предоставлено Шоном "
"Рейфшнайдером.) ::"

#: ../../whatsnew/2.4.rst:804
msgid ""
">>> 'www.python.org'.split('.', 1)\n"
"['www', 'python.org']\n"
"'www.python.org'.rsplit('.', 1)\n"
"['www.python', 'org']"
msgstr ""
">>> 'www.python.org'.split('.', 1)\n"
"['www', 'python.org']\n"
"'www.python.org'.rsplit('.', 1)\n"
"['www.python', 'org']"

#: ../../whatsnew/2.4.rst:809
msgid ""
"Three keyword parameters, *cmp*, *key*, and *reverse*, were added to the :"
"meth:`sort` method of lists. These parameters make some common usages of :"
"meth:`sort` simpler. All of these parameters are optional."
msgstr ""
"В метод списков :meth:`sort` были добавлены три ключевых параметра: *cmp*, "
"*key* и *reverse*. Эти параметры упрощают некоторые распространенные способы "
"использования :meth:`sort`. Все эти параметры являются необязательными."

#: ../../whatsnew/2.4.rst:813
msgid ""
"For the *cmp* parameter, the value should be a comparison function that "
"takes two parameters and returns -1, 0, or +1 depending on how the "
"parameters compare. This function will then be used to sort the list.  "
"Previously this was the only parameter that could be provided to :meth:"
"`sort`."
msgstr ""
"Для параметра *cmp* значение должно быть функцией сравнения, которая "
"принимает два параметра и возвращает -1, 0 или +1 в зависимости от того, как "
"сравниваются параметры. Эта функция затем будет использоваться для "
"сортировки списка. Раньше это был единственный параметр, который можно было "
"передать в :meth:`sort`."

#: ../../whatsnew/2.4.rst:818
msgid ""
"*key* should be a single-parameter function that takes a list element and "
"returns a comparison key for the element.  The list is then sorted using the "
"comparison keys.  The following example sorts a list case-insensitively::"
msgstr ""
"*key* должна быть функцией с одним параметром, которая принимает элемент "
"списка и возвращает ключ сравнения для этого элемента. Затем список "
"сортируется с использованием ключей сравнения. В следующем примере список "
"сортируется без учета регистра:"

#: ../../whatsnew/2.4.rst:822
msgid ""
">>> L = ['A', 'b', 'c', 'D']\n"
">>> L.sort()                 # Case-sensitive sort\n"
">>> L\n"
"['A', 'D', 'b', 'c']\n"
">>> # Using 'key' parameter to sort list\n"
">>> L.sort(key=lambda x: x.lower())\n"
">>> L\n"
"['A', 'b', 'c', 'D']\n"
">>> # Old-fashioned way\n"
">>> L.sort(cmp=lambda x,y: cmp(x.lower(), y.lower()))\n"
">>> L\n"
"['A', 'b', 'c', 'D']"
msgstr ""
">>> L = ['A', 'b', 'c', 'D']\n"
">>> L.sort()                 # Case-sensitive sort\n"
">>> L\n"
"['A', 'D', 'b', 'c']\n"
">>> # Using 'key' parameter to sort list\n"
">>> L.sort(key=lambda x: x.lower())\n"
">>> L\n"
"['A', 'b', 'c', 'D']\n"
">>> # Old-fashioned way\n"
">>> L.sort(cmp=lambda x,y: cmp(x.lower(), y.lower()))\n"
">>> L\n"
"['A', 'b', 'c', 'D']"

#: ../../whatsnew/2.4.rst:835
msgid ""
"The last example, which uses the *cmp* parameter, is the old way to perform "
"a case-insensitive sort.  It works but is slower than using a *key* "
"parameter. Using *key* calls :meth:`lower` method once for each element in "
"the list while using *cmp* will call it twice for each comparison, so using "
"*key* saves on invocations of the :meth:`lower` method."
msgstr ""
"Последний пример, в котором используется параметр *cmp*, представляет собой "
"старый способ выполнения сортировки без учета регистра. Это работает, но "
"медленнее, чем использование параметра *key*. Использование *key* вызывает "
"метод :meth:`lower` один раз для каждого элемента в списке, а использование "
"*cmp* вызывает его дважды для каждого сравнения, поэтому использование *key* "
"экономит на вызовах метода :meth:`lower`."

#: ../../whatsnew/2.4.rst:841
msgid ""
"For simple key functions and comparison functions, it is often possible to "
"avoid a :keyword:`lambda` expression by using an unbound method instead.  "
"For example, the above case-insensitive sort is best written as::"
msgstr ""
"Для простых ключевых функций и функций сравнения часто можно избежать "
"выражения :keyword:`lambda`, используя вместо него несвязанный метод. "
"Например, приведенную выше сортировку без учета регистра лучше всего "
"записать так:"

#: ../../whatsnew/2.4.rst:845
msgid ""
">>> L.sort(key=str.lower)\n"
">>> L\n"
"['A', 'b', 'c', 'D']"
msgstr ""
">>> L.sort(key=str.lower)\n"
">>> L\n"
"['A', 'b', 'c', 'D']"

#: ../../whatsnew/2.4.rst:849
msgid ""
"Finally, the *reverse* parameter takes a Boolean value.  If the value is "
"true, the list will be sorted into reverse order. Instead of ``L.sort(); L."
"reverse()``, you can now write ``L.sort(reverse=True)``."
msgstr ""
"Наконец, параметр *reverse* принимает логическое значение. Если значение "
"истинно, список будет отсортирован в обратном порядке. Вместо ``L.sort(); L."
"reverse()``, теперь вы можете написать ``L.sort(reverse=True)``."

#: ../../whatsnew/2.4.rst:853
msgid ""
"The results of sorting are now guaranteed to be stable.  This means that two "
"entries with equal keys will be returned in the same order as they were "
"input. For example, you can sort a list of people by name, and then sort the "
"list by age, resulting in a list sorted by age where people with the same "
"age are in name-sorted order."
msgstr ""
"Результаты сортировки теперь гарантированно стабильны. Это означает, что две "
"записи с одинаковыми ключами будут возвращены в том же порядке, в котором "
"они были введены. Например, вы можете отсортировать список людей по имени, а "
"затем отсортировать его по возрасту, в результате чего получится список, "
"отсортированный по возрасту, в котором люди одного возраста будут "
"отсортированы по имени."

#: ../../whatsnew/2.4.rst:859
msgid "(All changes to :meth:`sort` contributed by Raymond Hettinger.)"
msgstr "(Все изменения в :meth:`sort` внесены Рэймондом Хеттингером.)"

#: ../../whatsnew/2.4.rst:861
msgid ""
"There is a new built-in function ``sorted(iterable)`` that works like the in-"
"place :meth:`list.sort` method but can be used in expressions.  The "
"differences are:"
msgstr ""
"Появилась новая встроенная функция sorted(iterable), которая работает как "
"локальный метод :meth:list.sort, но может использоваться в выражениях. "
"Отличия заключаются в следующем:"

#: ../../whatsnew/2.4.rst:865
msgid "the input may be any iterable;"
msgstr "входные данные могут быть любыми итерируемыми;"

#: ../../whatsnew/2.4.rst:867
msgid "a newly formed copy is sorted, leaving the original intact; and"
msgstr ""
"вновь сформированная копия сортируется, оставляя оригинал нетронутым; и"

#: ../../whatsnew/2.4.rst:869
msgid "the expression returns the new sorted copy"
msgstr "выражение возвращает новую отсортированную копию"

#: ../../whatsnew/2.4.rst:873
msgid ""
">>> L = [9,7,8,3,2,4,1,6,5]\n"
">>> [10+i for i in sorted(L)]       # usable in a list comprehension\n"
"[11, 12, 13, 14, 15, 16, 17, 18, 19]\n"
">>> L                               # original is left unchanged\n"
"[9,7,8,3,2,4,1,6,5]\n"
">>> sorted('Monty Python')          # any iterable may be an input\n"
"[' ', 'M', 'P', 'h', 'n', 'n', 'o', 'o', 't', 't', 'y', 'y']\n"
"\n"
">>> # List the contents of a dict sorted by key values\n"
">>> colormap = dict(red=1, blue=2, green=3, black=4, yellow=5)\n"
">>> for k, v in sorted(colormap.iteritems()):\n"
"...     print k, v\n"
"...\n"
"black 4\n"
"blue 2\n"
"green 3\n"
"red 1\n"
"yellow 5"
msgstr ""
">>> L = [9,7,8,3,2,4,1,6,5]\n"
">>> [10+i for i in sorted(L)]       # usable in a list comprehension\n"
"[11, 12, 13, 14, 15, 16, 17, 18, 19]\n"
">>> L                               # original is left unchanged\n"
"[9,7,8,3,2,4,1,6,5]\n"
">>> sorted('Monty Python')          # any iterable may be an input\n"
"[' ', 'M', 'P', 'h', 'n', 'n', 'o', 'o', 't', 't', 'y', 'y']\n"
"\n"
">>> # List the contents of a dict sorted by key values\n"
">>> colormap = dict(red=1, blue=2, green=3, black=4, yellow=5)\n"
">>> for k, v in sorted(colormap.iteritems()):\n"
"...     print k, v\n"
"...\n"
"black 4\n"
"blue 2\n"
"green 3\n"
"red 1\n"
"yellow 5"

#: ../../whatsnew/2.4.rst:892 ../../whatsnew/2.4.rst:920
#: ../../whatsnew/2.4.rst:1213
msgid "(Contributed by Raymond Hettinger.)"
msgstr "(Предоставлено Раймондом Хеттингером.)"

#: ../../whatsnew/2.4.rst:894 ../../whatsnew/2.4.rst:1520
msgid ""
"Integer operations will no longer trigger an :exc:`OverflowWarning`. The :"
"exc:`OverflowWarning` warning will disappear in Python 2.5."
msgstr ""
"Целочисленные операции больше не будут вызывать :exc:`OverflowWarning`. "
"Предупреждение :exc:`OverflowWarning` исчезнет в Python 2.5."

#: ../../whatsnew/2.4.rst:897
msgid ""
"The interpreter gained a new switch, :option:`-m`, that takes a name, "
"searches for the corresponding  module on ``sys.path``, and runs the module "
"as a script. For example,  you can now run the Python profiler with ``python "
"-m profile``. (Contributed by Nick Coghlan.)"
msgstr ""
"Интерпретатор получил новый ключ :option:`-m`, который принимает имя, ищет "
"соответствующий модуль в ``sys.path`` и запускает модуль как скрипт. "
"Например, теперь вы можете запустить профилировщик Python с помощью ``python "
"-m Profile``. (Предоставлено Ником Когланом.)"

#: ../../whatsnew/2.4.rst:902
msgid ""
"The ``eval(expr, globals, locals)`` and ``execfile(filename, globals, "
"locals)`` functions and the ``exec`` statement now accept any mapping type "
"for the *locals* parameter.  Previously this had to be a regular Python "
"dictionary.  (Contributed by Raymond Hettinger.)"
msgstr ""
"Функции ``eval(expr, globals, locals)`` и ``execfile(filename, globals, "
"locals)`` и оператор ``exec`` теперь принимают любой тип сопоставления для "
"параметра *locals*. Раньше это должен был быть обычный словарь Python. "
"(Предоставлено Раймондом Хеттингером.)"

#: ../../whatsnew/2.4.rst:907
msgid ""
"The :func:`zip` built-in function and :func:`itertools.izip` now return an "
"empty list if called with no arguments. Previously they raised a :exc:"
"`TypeError` exception.  This makes them more suitable for use with variable "
"length argument lists::"
msgstr ""
"Встроенная функция :func:`zip` и :func:`itertools.izip` теперь возвращают "
"пустой список, если они вызваны без аргументов. Ранее они вызвали "
"исключение :exc:`TypeError`. Это делает их более подходящими для "
"использования со списками аргументов переменной длины:"

#: ../../whatsnew/2.4.rst:912
msgid ""
">>> def transpose(array):\n"
"...    return zip(*array)\n"
"...\n"
">>> transpose([(1,2,3), (4,5,6)])\n"
"[(1, 4), (2, 5), (3, 6)]\n"
">>> transpose([])\n"
"[]"
msgstr ""
">>> def transpose(array):\n"
"...    return zip(*array)\n"
"...\n"
">>> transpose([(1,2,3), (4,5,6)])\n"
"[(1, 4), (2, 5), (3, 6)]\n"
">>> transpose([])\n"
"[]"

#: ../../whatsnew/2.4.rst:922
msgid ""
"Encountering a failure while importing a module no longer leaves a partially "
"initialized module object in ``sys.modules``.  The incomplete module object "
"left behind would fool further imports of the same module into succeeding, "
"leading to confusing errors.   (Fixed by Tim Peters.)"
msgstr ""
"В случае сбоя при импорте модуля в ``sys.modules`` больше не остается "
"частично инициализированный объект модуля. Оставленный неполный объект "
"модуля может обмануть дальнейший импорт того же модуля, что приведет к "
"запутанным ошибкам. (Исправлено Тимом Питерсом.)"

#: ../../whatsnew/2.4.rst:927
msgid ""
":const:`None` is now a constant; code that binds a new value to  the name "
"``None`` is now a syntax error. (Contributed by Raymond Hettinger.)"
msgstr ""
":const:`None` теперь является константой; код, который связывает новое "
"значение с именем None, теперь является синтаксической ошибкой. "
"(Предоставлено Раймондом Хеттингером.)"

#: ../../whatsnew/2.4.rst:934
msgid "Optimizations"
msgstr "Оптимизации"

#: ../../whatsnew/2.4.rst:936
msgid ""
"The inner loops for list and tuple slicing were optimized and now run about "
"one-third faster.  The inner loops for dictionaries were also optimized, "
"resulting in performance boosts for :meth:`keys`, :meth:`values`, :meth:"
"`items`, :meth:`iterkeys`, :meth:`itervalues`, and :meth:`iteritems`. "
"(Contributed by Raymond Hettinger.)"
msgstr ""
"Внутренние циклы нарезки списков и кортежей были оптимизированы и теперь "
"работают примерно на треть быстрее. Внутренние циклы для словарей также были "
"оптимизированы, что привело к повышению производительности для :meth:"
"`keys`, :meth:`values`, :meth:`items`, :meth:`iterkeys`, :meth:`itervalues` "
"и :meth:`iteritems`. (Предоставлено Раймондом Хеттингером.)"

#: ../../whatsnew/2.4.rst:942
msgid ""
"The machinery for growing and shrinking lists was optimized for speed and "
"for space efficiency.  Appending and popping from lists now runs faster due "
"to more efficient code paths and less frequent use of the underlying system :"
"c:func:`realloc`.  List comprehensions also benefit.   :meth:`list.extend` "
"was also optimized and no longer converts its argument into a temporary list "
"before extending the base list.  (Contributed by Raymond Hettinger.)"
msgstr ""
"Механизм увеличения и сокращения списков был оптимизирован с точки зрения "
"скорости и эффективности использования пространства. Добавление и извлечение "
"списков теперь выполняется быстрее благодаря более эффективным путям кода и "
"менее частому использованию базовой системы :c:func:`realloc`. Понимание "
"списков также приносит пользу. :meth:`list.extend` также был оптимизирован и "
"больше не преобразует свой аргумент во временный список перед расширением "
"базового списка. (Предоставлено Раймондом Хеттингером.)"

#: ../../whatsnew/2.4.rst:949
msgid ""
":func:`list`, :func:`tuple`, :func:`map`, :func:`filter`, and :func:`zip` "
"now run several times faster with non-sequence arguments that supply a :meth:"
"`__len__` method.  (Contributed by Raymond Hettinger.)"
msgstr ""
":func:`list`, :func:`tuple`, :func:`map`, :func:`filter` и :func:`zip` "
"теперь выполняются в несколько раз быстрее с аргументами, не являющимися "
"последовательностями, которые предоставляют :meth :`__len__` метод. "
"(Предоставлено Раймондом Хеттингером.)"

#: ../../whatsnew/2.4.rst:953
msgid ""
"The methods :meth:`list.__getitem__`, :meth:`dict.__getitem__`, and :meth:"
"`dict.__contains__` are now implemented as :class:`method_descriptor` "
"objects rather than :class:`wrapper_descriptor` objects.  This form of  "
"access doubles their performance and makes them more suitable for use as "
"arguments to functionals: ``map(mydict.__getitem__, keylist)``. (Contributed "
"by Raymond Hettinger.)"
msgstr ""
"Методы :meth:`list.__getitem__`, :meth:`dict.__getitem__` и :meth:`dict."
"__contains__` теперь реализованы как объекты :class:`method_descriptor`, а "
"не как объекты :class:`wrapper_descriptor`. Такая форма доступа удваивает их "
"производительность и делает их более подходящими для использования в "
"качестве аргументов функционалов: ``map(mydict.__getitem__, keylist)``. "
"(Предоставлено Раймондом Хеттингером.)"

#: ../../whatsnew/2.4.rst:960
msgid ""
"Added a new opcode, ``LIST_APPEND``, that simplifies the generated bytecode "
"for list comprehensions and speeds them up by about a third.  (Contributed "
"by Raymond Hettinger.)"
msgstr ""
"Добавлен новый код операции LIST_APPEND, который упрощает сгенерированный "
"байт-код для понимания списков и ускоряет их примерно на треть. "
"(Предоставлено Раймондом Хеттингером.)"

#: ../../whatsnew/2.4.rst:964
msgid ""
"The peephole bytecode optimizer has been improved to  produce shorter, "
"faster bytecode; remarkably, the resulting bytecode is  more readable.  "
"(Enhanced by Raymond Hettinger.)"
msgstr ""
"Оптимизатор байт-кода «глазок» был улучшен для создания более короткого и "
"быстрого байт-кода; примечательно, что полученный байт-код становится более "
"читабельным. (Улучшено Раймондом Хеттингером.)"

#: ../../whatsnew/2.4.rst:968
msgid ""
"String concatenations in statements of the form ``s = s + \"abc\"`` and ``s "
"+= \"abc\"`` are now performed more efficiently in certain circumstances.  "
"This optimization won't be present in other Python implementations such as "
"Jython, so you shouldn't rely on it; using the :meth:`join` method of "
"strings is still recommended when you want to efficiently glue a large "
"number of strings together. (Contributed by Armin Rigo.)"
msgstr ""
"Конкатенация строк в операторах вида ``s = s + \"abc\"`` и ``s += \"abc\"`` "
"теперь выполняется более эффективно при определенных обстоятельствах. Эта "
"оптимизация не будет присутствовать в других реализациях Python, таких как "
"Jython, поэтому вам не следует на нее полагаться; использование метода "
"строк :meth:`join` по-прежнему рекомендуется, если вы хотите эффективно "
"склеить большое количество строк вместе. (Предоставлено Армином Риго.)"

#: ../../whatsnew/2.4.rst:975
msgid ""
"The net result of the 2.4 optimizations is that Python 2.4 runs the pystone "
"benchmark around 5% faster than Python 2.3 and 35% faster than Python 2.2. "
"(pystone is not a particularly good benchmark, but it's the most commonly "
"used measurement of Python's performance.  Your own applications may show "
"greater or smaller benefits from Python 2.4.)"
msgstr ""
"Конечным результатом оптимизации 2.4 является то, что Python 2.4 выполняет "
"тест pystone примерно на 5 % быстрее, чем Python 2.3, и на 35 % быстрее, чем "
"Python 2.2. (pystone не является особенно хорошим тестом, но это наиболее "
"часто используемый метод измерения производительности Python. Ваши "
"собственные приложения могут показать большую или меньшую выгоду от Python "
"2.4.)"

#: ../../whatsnew/2.4.rst:991
msgid "New, Improved, and Deprecated Modules"
msgstr "Новые, улучшенные и устаревшие модули"

#: ../../whatsnew/2.4.rst:993
msgid ""
"As usual, Python's standard library received a number of enhancements and "
"bug fixes.  Here's a partial list of the most notable changes, sorted "
"alphabetically by module name. Consult the :file:`Misc/NEWS` file in the "
"source tree for a more complete list of changes, or look through the CVS "
"logs for all the details."
msgstr ""
"Как обычно, стандартная библиотека Python получила ряд улучшений и "
"исправлений ошибок. Вот неполный список наиболее заметных изменений, "
"отсортированный в алфавитном порядке по названию модуля. Обратитесь к файлу :"
"file:`Misc/NEWS` в дереве исходного кода для получения более полного списка "
"изменений или просмотрите журналы CVS для получения всех подробностей."

#: ../../whatsnew/2.4.rst:998
msgid ""
"The :mod:`!asyncore` module's :func:`!loop` function now has a *count* "
"parameter that lets you perform a limited number of passes through the "
"polling loop.  The default is still to loop forever."
msgstr ""
"Функция :func:`!loop` модуля :mod:`!asyncore` теперь имеет параметр *count*, "
"который позволяет выполнять ограниченное количество проходов через цикл "
"опроса. По умолчанию по-прежнему используется бесконечный цикл."

#: ../../whatsnew/2.4.rst:1002
msgid ""
"The :mod:`base64` module now has more complete :rfc:`3548` support for "
"Base64, Base32, and Base16 encoding and decoding, including optional case "
"folding and optional alternative alphabets. (Contributed by Barry Warsaw.)"
msgstr ""
"Модуль :mod:`base64` теперь имеет более полную поддержку :rfc:`3548` для "
"кодирования и декодирования Base64, Base32 и Base16, включая необязательное "
"свертывание регистра и дополнительные альтернативные алфавиты. "
"(Предоставлено Барри Варшавой.)"

#: ../../whatsnew/2.4.rst:1006
msgid ""
"The :mod:`bisect` module now has an underlying C implementation for improved "
"performance. (Contributed by Dmitry Vasiliev.)"
msgstr ""
"Модуль :mod:`bisect` теперь имеет базовую реализацию на языке C для "
"повышения производительности. (Сообщил Дмитрий Васильев.)"

#: ../../whatsnew/2.4.rst:1009
msgid ""
"The CJKCodecs collections of East Asian codecs, maintained by Hye-Shik "
"Chang, was integrated into 2.4.   The new encodings are:"
msgstr ""
"Коллекция восточноазиатских кодеков CJKCodecs, поддерживаемая Хе-Шик Чангом, "
"была интегрирована в версию 2.4. Новые кодировки:"

#: ../../whatsnew/2.4.rst:1012
msgid "Chinese (PRC): gb2312, gbk, gb18030, big5hkscs, hz"
msgstr "Китайский (КНР): gb2312, gbk, gb18030, big5hkscs, hz"

#: ../../whatsnew/2.4.rst:1014
msgid "Chinese (ROC): big5, cp950"
msgstr "Китайский (РПЦ): big5, cp950"

#: ../../whatsnew/2.4.rst:1016
msgid "Japanese: cp932, euc-jis-2004, euc-jp, euc-jisx0213, iso-2022-jp,"
msgstr "Японский: cp932, euc-jis-2004, euc-jp, euc-jisx0213, iso-2022-jp,"

#: ../../whatsnew/2.4.rst:1017
msgid ""
"iso-2022-jp-1, iso-2022-jp-2, iso-2022-jp-3, iso-2022-jp-ext, iso-2022-"
"jp-2004, shift-jis, shift-jisx0213, shift-jis-2004"
msgstr ""
"iso-2022-jp-1, iso-2022-jp-2, iso-2022-jp-3, iso-2022-jp-ext, iso-2022-"
"jp-2004, shift-jis, shift-jisx0213, shift-jis-2004"

#: ../../whatsnew/2.4.rst:1020
msgid "Korean: cp949, euc-kr, johab, iso-2022-kr"
msgstr "Корейский: cp949, euc-kr, johab, iso-2022-kr."

#: ../../whatsnew/2.4.rst:1022
msgid ""
"Some other new encodings were added: HP Roman8,  ISO_8859-11, ISO_8859-16, "
"PCTP-154, and TIS-620."
msgstr ""
"Были добавлены некоторые другие новые кодировки: HP Roman8, ISO_8859-11, "
"ISO_8859-16, PCTP-154 и TIS-620."

#: ../../whatsnew/2.4.rst:1025
msgid ""
"The UTF-8 and UTF-16 codecs now cope better with receiving partial input. "
"Previously the :class:`StreamReader` class would try to read more data, "
"making it impossible to resume decoding from the stream.  The :meth:`read` "
"method will now return as much data as it can and future calls will resume "
"decoding where previous ones left off.  (Implemented by Walter Dörwald.)"
msgstr ""
"Кодеки UTF-8 и UTF-16 теперь лучше справляются с получением частичного "
"ввода. Раньше класс :class:`StreamReader` пытался прочитать больше данных, "
"что делало невозможным возобновление декодирования из потока. Метод :meth:"
"`read` теперь будет возвращать столько данных, сколько сможет, и будущие "
"вызовы возобновят декодирование с того места, где остановились предыдущие. "
"(Реализован Вальтером Дорвальдом.)"

#: ../../whatsnew/2.4.rst:1031
msgid ""
"There is a new :mod:`collections` module for  various specialized collection "
"datatypes.  Currently it contains just one type, :class:`deque`, a double-"
"ended queue that supports efficiently adding and removing elements from "
"either end::"
msgstr ""
"Появился новый модуль :mod:`collections` для различных специализированных "
"типов данных коллекций. В настоящее время он содержит только один тип: :"
"class:`deque`, двустороннюю очередь, которая поддерживает эффективное "
"добавление и удаление элементов с любого конца::"

#: ../../whatsnew/2.4.rst:1036
msgid ""
">>> from collections import deque\n"
">>> d = deque('ghi')        # make a new deque with three items\n"
">>> d.append('j')           # add a new entry to the right side\n"
">>> d.appendleft('f')       # add a new entry to the left side\n"
">>> d                       # show the representation of the deque\n"
"deque(['f', 'g', 'h', 'i', 'j'])\n"
">>> d.pop()                 # return and remove the rightmost item\n"
"'j'\n"
">>> d.popleft()             # return and remove the leftmost item\n"
"'f'\n"
">>> list(d)                 # list the contents of the deque\n"
"['g', 'h', 'i']\n"
">>> 'h' in d                # search the deque\n"
"True"
msgstr ""
">>> from collections import deque\n"
">>> d = deque('ghi')        # make a new deque with three items\n"
">>> d.append('j')           # add a new entry to the right side\n"
">>> d.appendleft('f')       # add a new entry to the left side\n"
">>> d                       # show the representation of the deque\n"
"deque(['f', 'g', 'h', 'i', 'j'])\n"
">>> d.pop()                 # return and remove the rightmost item\n"
"'j'\n"
">>> d.popleft()             # return and remove the leftmost item\n"
"'f'\n"
">>> list(d)                 # list the contents of the deque\n"
"['g', 'h', 'i']\n"
">>> 'h' in d                # search the deque\n"
"True"

#: ../../whatsnew/2.4.rst:1051
msgid ""
"Several modules, such as the :mod:`Queue` and :mod:`threading` modules, now "
"take advantage of :class:`collections.deque` for improved performance.  "
"(Contributed by Raymond Hettinger.)"
msgstr ""
"Некоторые модули, такие как модули :mod:`Queue` и :mod:`threading`, теперь "
"используют преимущества :class:`collections.deque` для повышения "
"производительности. (Предоставлено Раймондом Хеттингером.)"

#: ../../whatsnew/2.4.rst:1055
msgid ""
"The :mod:`ConfigParser <configparser>` classes have been enhanced slightly. "
"The :meth:`~configparser.ConfigParser.read` method now returns a list of the "
"files that were successfully parsed, and the :meth:`~configparser."
"ConfigParser.set` method raises :exc:`TypeError` if passed a *value* "
"argument that isn't a string.   (Contributed by John Belmonte and David "
"Goodger.)"
msgstr ""
"Классы :mod:`ConfigParser <configparser>` были немного улучшены. Метод :meth:"
"`~configparser.ConfigParser.read` теперь возвращает список файлов, которые "
"были успешно проанализированы, а метод :meth:`~configparser.ConfigParser."
"set` вызывает :exc:`TypeError`, если ему передан * значение* аргумент, "
"который не является строкой. (Предоставлено Джоном Бельмонте и Дэвидом "
"Гуджером.)"

#: ../../whatsnew/2.4.rst:1060
msgid ""
"The :mod:`curses` module now supports the ncurses extension :func:"
"`use_default_colors`.  On platforms where the terminal supports "
"transparency, this makes it possible to use a transparent background. "
"(Contributed by Jörg Lehmann.)"
msgstr ""
"Модуль :mod:`curses` теперь поддерживает расширение ncurses :func:"
"`use_default_colors`. На платформах, где терминал поддерживает прозрачность, "
"это дает возможность использовать прозрачный фон. (Предоставлено Йоргом "
"Леманном.)"

#: ../../whatsnew/2.4.rst:1065
msgid ""
"The :mod:`difflib` module now includes an :class:`HtmlDiff` class that "
"creates an HTML table showing a side by side comparison of two versions of a "
"text. (Contributed by Dan Gass.)"
msgstr ""
"Модуль :mod:`difflib` теперь включает класс :class:`HtmlDiff`, который "
"создает HTML-таблицу, показывающую параллельное сравнение двух версий "
"текста. (Предоставлено Дэном Гассом.)"

#: ../../whatsnew/2.4.rst:1069
msgid ""
"The :mod:`email` package was updated to version 3.0,  which dropped various "
"deprecated APIs and removes support for Python versions earlier than 2.3.  "
"The 3.0 version of the package uses a new incremental parser for MIME "
"messages, available in the :mod:`email.FeedParser` module.  The new parser "
"doesn't require reading the entire message into memory, and doesn't raise "
"exceptions if a message is malformed; instead it records any problems in "
"the  :attr:`defect` attribute of the message.  (Developed by Anthony Baxter, "
"Barry Warsaw, Thomas Wouters, and others.)"
msgstr ""
"Пакет :mod:`email` был обновлен до версии 3.0, в которой удалены различные "
"устаревшие API и удалена поддержка версий Python до 2.3. Версия пакета 3.0 "
"использует новый инкрементный анализатор сообщений MIME, доступный в модуле :"
"mod:`email.FeedParser`. Новый синтаксический анализатор не требует чтения "
"всего сообщения в память и не вызывает исключений, если сообщение имеет "
"неверный формат; вместо этого он записывает любые проблемы в атрибут :attr:"
"`defect` сообщения. (Разработано Энтони Бакстером, Барри Варшавой, Томасом "
"Воутерсом и другими.)"

#: ../../whatsnew/2.4.rst:1078
msgid ""
"The :mod:`heapq` module has been converted to C.  The resulting tenfold "
"improvement in speed makes the module suitable for handling high volumes of "
"data.  In addition, the module has two new functions :func:`nlargest` and :"
"func:`nsmallest` that use heaps to find the N largest or smallest values in "
"a dataset without the expense of a full sort.  (Contributed by Raymond "
"Hettinger.)"
msgstr ""
"Модуль :mod:`heapq` был преобразован в C. В результате десятикратное "
"увеличение скорости делает модуль пригодным для обработки больших объемов "
"данных. Кроме того, в модуле есть две новые функции :func:`nlargest` и :func:"
"`nsmallest`, которые используют кучу для поиска N наибольших или наименьших "
"значений в наборе данных без затрат на полную сортировку. (Предоставлено "
"Раймондом Хеттингером.)"

#: ../../whatsnew/2.4.rst:1084
msgid ""
"The :mod:`httplib <http>` module now contains constants for HTTP status "
"codes defined in various HTTP-related RFC documents.  Constants have names "
"such as :const:`OK`, :const:`CREATED`, :const:`CONTINUE`, and :const:"
"`MOVED_PERMANENTLY`; use pydoc to get a full list.  (Contributed by Andrew "
"Eland.)"
msgstr ""
"Модуль :mod:`httplib <http>` теперь содержит константы для кодов состояния "
"HTTP, определенных в различных документах RFC, связанных с HTTP. Константы "
"имеют такие имена, как :const:`OK`, :const:`CREATED`, :const:`CONTINUE` и :"
"const:`MOVED_PERMANENTLY`; используйте pydoc, чтобы получить полный список. "
"(Предоставлено Эндрю Эландом.)"

#: ../../whatsnew/2.4.rst:1090
msgid ""
"The :mod:`imaplib` module now supports IMAP's THREAD command (contributed by "
"Yves Dionne) and new :meth:`deleteacl` and :meth:`myrights` methods "
"(contributed by Arnaud Mazin)."
msgstr ""
"Модуль :mod:`imaplib` теперь поддерживает команду IMAP THREAD (предоставлена ​​"
"Ивом Дионном) и новые методы :meth:`deleteacl` и :meth:`myrights` "
"(предоставлены Арно Мазином)."

#: ../../whatsnew/2.4.rst:1094
msgid ""
"The :mod:`itertools` module gained a ``groupby(iterable[, *func*])`` "
"function. *iterable* is something that can be iterated over to return a "
"stream of elements, and the optional *func* parameter is a function that "
"takes an element and returns a key value; if omitted, the key is simply the "
"element itself.  :func:`groupby` then groups the elements into subsequences "
"which have matching values of the key, and returns a series of 2-tuples "
"containing the key value and an iterator over the subsequence."
msgstr ""
"Модуль :mod:`itertools` получил функцию ``groupby(iterable[, *func*])``. "
"*iterable* — это то, что можно перебирать, чтобы вернуть поток элементов, а "
"необязательный параметр *func* — это функция, которая принимает элемент и "
"возвращает ключевое значение; если он опущен, ключом является сам элемент. :"
"func:`groupby` затем группирует элементы в подпоследовательности, имеющие "
"совпадающие значения ключа, и возвращает серию из двух кортежей, содержащих "
"значение ключа и итератор для подпоследовательности."

#: ../../whatsnew/2.4.rst:1102
msgid ""
"Here's an example to make this clearer.  The *key* function simply returns "
"whether a number is even or odd, so the result of :func:`groupby` is to "
"return consecutive runs of odd or even numbers. ::"
msgstr ""
"Вот пример, чтобы сделать это яснее. Функция *key* просто определяет, "
"является ли число четным или нечетным, поэтому результатом :func:`groupby` "
"является возврат последовательных серий нечетных или четных чисел. ::"

#: ../../whatsnew/2.4.rst:1106
msgid ""
">>> import itertools\n"
">>> L = [2, 4, 6, 7, 8, 9, 11, 12, 14]\n"
">>> for key_val, it in itertools.groupby(L, lambda x: x % 2):\n"
"...    print key_val, list(it)\n"
"...\n"
"0 [2, 4, 6]\n"
"1 [7]\n"
"0 [8]\n"
"1 [9, 11]\n"
"0 [12, 14]\n"
">>>"
msgstr ""
">>> import itertools\n"
">>> L = [2, 4, 6, 7, 8, 9, 11, 12, 14]\n"
">>> for key_val, it in itertools.groupby(L, lambda x: x % 2):\n"
"...    print key_val, list(it)\n"
"...\n"
"0 [2, 4, 6]\n"
"1 [7]\n"
"0 [8]\n"
"1 [9, 11]\n"
"0 [12, 14]\n"
">>>"

#: ../../whatsnew/2.4.rst:1118
msgid ""
":func:`groupby` is typically used with sorted input.  The logic for :func:"
"`groupby` is similar to the Unix ``uniq`` filter which makes it handy for "
"eliminating, counting, or identifying duplicate elements::"
msgstr ""
":func:`groupby` обычно используется с отсортированным вводом. Логика :func:"
"`groupby` аналогична фильтру ``uniq`` в Unix, что делает его удобным для "
"исключения, подсчета или идентификации повторяющихся элементов:"

#: ../../whatsnew/2.4.rst:1122
msgid ""
">>> word = 'abracadabra'\n"
">>> letters = sorted(word)   # Turn string into a sorted list of letters\n"
">>> letters\n"
"['a', 'a', 'a', 'a', 'a', 'b', 'b', 'c', 'd', 'r', 'r']\n"
">>> for k, g in itertools.groupby(letters):\n"
"...    print k, list(g)\n"
"...\n"
"a ['a', 'a', 'a', 'a', 'a']\n"
"b ['b', 'b']\n"
"c ['c']\n"
"d ['d']\n"
"r ['r', 'r']\n"
">>> # List unique letters\n"
">>> [k for k, g in groupby(letters)]\n"
"['a', 'b', 'c', 'd', 'r']\n"
">>> # Count letter occurrences\n"
">>> [(k, len(list(g))) for k, g in groupby(letters)]\n"
"[('a', 5), ('b', 2), ('c', 1), ('d', 1), ('r', 2)]"
msgstr ""
">>> word = 'abracadabra'\n"
">>> letters = sorted(word)   # Turn string into a sorted list of letters\n"
">>> letters\n"
"['a', 'a', 'a', 'a', 'a', 'b', 'b', 'c', 'd', 'r', 'r']\n"
">>> for k, g in itertools.groupby(letters):\n"
"...    print k, list(g)\n"
"...\n"
"a ['a', 'a', 'a', 'a', 'a']\n"
"b ['b', 'b']\n"
"c ['c']\n"
"d ['d']\n"
"r ['r', 'r']\n"
">>> # List unique letters\n"
">>> [k for k, g in groupby(letters)]\n"
"['a', 'b', 'c', 'd', 'r']\n"
">>> # Count letter occurrences\n"
">>> [(k, len(list(g))) for k, g in groupby(letters)]\n"
"[('a', 5), ('b', 2), ('c', 1), ('d', 1), ('r', 2)]"

#: ../../whatsnew/2.4.rst:1141
msgid "(Contributed by Hye-Shik Chang.)"
msgstr "(Предоставлено Хе-Шик Чангом.)"

#: ../../whatsnew/2.4.rst:1143
msgid ""
":mod:`itertools` also gained a function named ``tee(iterator, N)`` that "
"returns *N* independent iterators that replicate *iterator*.  If *N* is "
"omitted, the default is 2. ::"
msgstr ""
":mod:`itertools` также получил функцию с именем ``tee(iterator, N)``, "
"которая возвращает *N* независимых итераторов, копирующих *iterator*. Если "
"*N* опущено, значение по умолчанию — 2. ::"

#: ../../whatsnew/2.4.rst:1147
msgid ""
">>> L = [1,2,3]\n"
">>> i1, i2 = itertools.tee(L)\n"
">>> i1,i2\n"
"(<itertools.tee object at 0x402c2080>, <itertools.tee object at "
"0x402c2090>)\n"
">>> list(i1)               # Run the first iterator to exhaustion\n"
"[1, 2, 3]\n"
">>> list(i2)               # Run the second iterator to exhaustion\n"
"[1, 2, 3]"
msgstr ""
">>> L = [1,2,3]\n"
">>> i1, i2 = itertools.tee(L)\n"
">>> i1,i2\n"
"(<itertools.tee object at 0x402c2080>, <itertools.tee object at "
"0x402c2090>)\n"
">>> list(i1)               # Run the first iterator to exhaustion\n"
"[1, 2, 3]\n"
">>> list(i2)               # Run the second iterator to exhaustion\n"
"[1, 2, 3]"

#: ../../whatsnew/2.4.rst:1156
msgid ""
"Note that :func:`tee` has to keep copies of the values returned  by the "
"iterator; in the worst case, it may need to keep all of them.   This should "
"therefore be used carefully if the leading iterator can run far ahead of the "
"trailing iterator in a long stream of inputs. If the separation is large, "
"then you might as well use  :func:`list` instead.  When the iterators track "
"closely with one another, :func:`tee` is ideal.  Possible applications "
"include bookmarking, windowing, or lookahead iterators. (Contributed by "
"Raymond Hettinger.)"
msgstr ""
"Обратите внимание, что :func:`tee` должен хранить копии значений, "
"возвращаемых итератором; в худшем случае может потребоваться сохранить их "
"все. Поэтому его следует использовать с осторожностью, если ведущий итератор "
"может опережать конечный итератор в длинном потоке входных данных. Если "
"разделение велико, вы можете вместо этого использовать :func:`list`. Когда "
"итераторы тесно связаны друг с другом, :func:`tee` идеален. Возможные "
"приложения включают создание закладок, управление окнами или итераторы "
"просмотра вперед. (Предоставлено Раймондом Хеттингером.)"

#: ../../whatsnew/2.4.rst:1165
msgid ""
"A number of functions were added to the :mod:`locale`  module, such as :func:"
"`bind_textdomain_codeset` to specify a particular encoding and a family of :"
"func:`!l\\*gettext` functions that return messages in the chosen encoding. "
"(Contributed by Gustavo Niemeyer.)"
msgstr ""
"В модуль :mod:`locale` был добавлен ряд функций, таких как :func:"
"`bind_textdomain_codeset` для указания конкретной кодировки и семейство :"
"func:`!l\\*gettext` функций, которые возвращают сообщения в выбранном "
"формате. кодировка. (Предоставлено Густаво Нимейером.)"

#: ../../whatsnew/2.4.rst:1170
msgid ""
"Some keyword arguments were added to the :mod:`logging` package's :func:"
"`basicConfig` function to simplify log configuration.  The default behavior "
"is to log messages to standard error, but various keyword arguments can be "
"specified to log to a particular file, change the logging format, or set the "
"logging level. For example::"
msgstr ""
"Некоторые аргументы ключевых слов были добавлены в функцию :func:"
"`basicConfig` пакета :mod:`logging` для упрощения настройки журнала. По "
"умолчанию сообщения регистрируются в виде стандартных ошибок, но можно "
"указать различные аргументы ключевых слов для регистрации в определенном "
"файле, изменения формата регистрации или установки уровня регистрации. "
"Например::"

#: ../../whatsnew/2.4.rst:1176
msgid ""
"import logging\n"
"logging.basicConfig(filename='/var/log/application.log',\n"
"    level=0,  # Log all messages\n"
"    format='%(levelname):%(process):%(thread):%(message)')"
msgstr ""
"import logging\n"
"logging.basicConfig(filename='/var/log/application.log',\n"
"    level=0,  # Log all messages\n"
"    format='%(levelname):%(process):%(thread):%(message)')"

#: ../../whatsnew/2.4.rst:1181
msgid ""
"Other additions to the :mod:`logging` package include a ``log(level, msg)`` "
"convenience method, as well as a :class:`TimedRotatingFileHandler` class "
"that rotates its log files at a timed interval.  The module already had :"
"class:`RotatingFileHandler`, which rotated logs once the file exceeded a "
"certain size.  Both classes derive from a new :class:`BaseRotatingHandler` "
"class that can be used to implement other rotating handlers."
msgstr ""
"Другие дополнения к пакету :mod:`logging` включают удобный метод "
"``log(level, msg)``, а также класс :class:`TimedRotatingFileHandler`, "
"который меняет файлы журналов через определенный интервал времени. В модуле "
"уже был :class:`RotatingFileHandler`, который выполнял ротацию журналов, "
"когда файл превышал определенный размер. Оба класса являются производными от "
"нового класса :class:`BaseRotatingHandler`, который можно использовать для "
"реализации других обработчиков вращения."

#: ../../whatsnew/2.4.rst:1188
msgid "(Changes implemented by Vinay Sajip.)"
msgstr "(Изменения внесены Винаем Саджипом.)"

#: ../../whatsnew/2.4.rst:1190
msgid ""
"The :mod:`marshal` module now shares interned strings on unpacking a  data "
"structure.  This may shrink the size of certain pickle strings, but the "
"primary effect is to make :file:`.pyc` files significantly smaller. "
"(Contributed by Martin von Löwis.)"
msgstr ""
"Модуль :mod:`marshal` теперь использует встроенные строки при распаковке "
"структуры данных. Это может уменьшить размер некоторых строк рассола, но "
"основной эффект заключается в значительном уменьшении файлов :file:`.pyc`. "
"(Предоставлено Мартином фон Лёвисом.)"

#: ../../whatsnew/2.4.rst:1195
msgid ""
"The :mod:`nntplib` module's :class:`NNTP` class gained :meth:`description` "
"and :meth:`descriptions` methods to retrieve  newsgroup descriptions for a "
"single group or for a range of groups. (Contributed by Jürgen A. Erhard.)"
msgstr ""
"Класс :class:`NNTP` модуля :mod:`nntplib` получил методы :meth:`description` "
"и :meth:`descriptions` для получения описаний групп новостей для одной "
"группы или для диапазона групп. (Предоставлено Юргеном А. Эрхардом.)"

#: ../../whatsnew/2.4.rst:1199
msgid ""
"Two new functions were added to the :mod:`operator` module, "
"``attrgetter(attr)`` and ``itemgetter(index)``. Both functions return "
"callables that take a single argument and return the corresponding attribute "
"or item; these callables make excellent data extractors when used with :func:"
"`map` or :func:`sorted`.  For example::"
msgstr ""
"В модуль :mod:`operator` были добавлены две новые функции: "
"``attrgetter(attr)`` и ``itemgetter(index)``. Обе функции возвращают "
"вызываемые объекты, которые принимают один аргумент и возвращают "
"соответствующий атрибут или элемент; эти вызываемые объекты являются "
"отличными экстракторами данных при использовании с :func:`map` или :func:"
"`sorted`. Например::"

#: ../../whatsnew/2.4.rst:1205
msgid ""
">>> L = [('c', 2), ('d', 1), ('a', 4), ('b', 3)]\n"
">>> map(operator.itemgetter(0), L)\n"
"['c', 'd', 'a', 'b']\n"
">>> map(operator.itemgetter(1), L)\n"
"[2, 1, 4, 3]\n"
">>> sorted(L, key=operator.itemgetter(1)) # Sort list by second tuple item\n"
"[('d', 1), ('c', 2), ('b', 3), ('a', 4)]"
msgstr ""
">>> L = [('c', 2), ('d', 1), ('a', 4), ('b', 3)]\n"
">>> map(operator.itemgetter(0), L)\n"
"['c', 'd', 'a', 'b']\n"
">>> map(operator.itemgetter(1), L)\n"
"[2, 1, 4, 3]\n"
">>> sorted(L, key=operator.itemgetter(1)) # Sort list by second tuple item\n"
"[('d', 1), ('c', 2), ('b', 3), ('a', 4)]"

#: ../../whatsnew/2.4.rst:1215
msgid ""
"The :mod:`optparse` module was updated in various ways.  The module now "
"passes its messages through :func:`gettext.gettext`, making it possible to "
"internationalize Optik's help and error messages.  Help messages for options "
"can now include the string ``'%default'``, which will be replaced by the "
"option's default value.  (Contributed by Greg Ward.)"
msgstr ""
"Модуль :mod:`optparse` был обновлен различными способами. Теперь модуль "
"передает свои сообщения через :func:`gettext.gettext`, что позволяет "
"интернационализировать справку и сообщения об ошибках Optik. Справочные "
"сообщения для опций теперь могут включать строку ``' %д efault'``, который "
"будет заменен значением параметра по умолчанию. (Предоставлено Грегом "
"Уордом.)"

#: ../../whatsnew/2.4.rst:1221
msgid ""
"The long-term plan is to deprecate the :mod:`!rfc822` module in some future "
"Python release in favor of the :mod:`email` package. To this end, the :func:"
"`email.Utils.formatdate <email.utils.formatdate>` function has been changed "
"to make it usable as a replacement for :func:`!rfc822.formatdate`.  You may "
"want to write new e-mail processing code with this in mind.  (Change "
"implemented by Anthony Baxter.)"
msgstr ""
"Долгосрочный план состоит в том, чтобы отказаться от модуля :mod:`!rfc822` в "
"какой-либо будущей версии Python в пользу пакета :mod:`email`. С этой целью "
"функция :func:`email.Utils.formatdate <email.utils.formatdate>` была "
"изменена, чтобы ее можно было использовать в качестве замены :func:`!rfc822."
"formatdate`. Возможно, вы захотите написать новый код обработки электронной "
"почты с учетом этого. (Изменение внесено Энтони Бакстером.)"

#: ../../whatsnew/2.4.rst:1227
msgid ""
"A new ``urandom(n)`` function was added to the :mod:`os` module, returning a "
"string containing *n* bytes of random data.  This function provides access "
"to platform-specific sources of randomness such as :file:`/dev/urandom` on "
"Linux or the Windows CryptoAPI.  (Contributed by Trevor Perrin.)"
msgstr ""
"В модуль :mod:`os` была добавлена ​​новая функция urandom(n)``, возвращающая "
"строку, содержащую *n* байт случайных данных. Эта функция обеспечивает "
"доступ к специфичным для платформы источникам случайности, таким как :file:`/"
"dev/urandom` в Linux или Windows CryptoAPI. (Предоставлено Тревором "
"Перрином.)"

#: ../../whatsnew/2.4.rst:1232
msgid ""
"Another new function: ``os.path.lexists(path)``  returns true if the file "
"specified by *path* exists, whether or not it's a symbolic link.  This "
"differs from the existing ``os.path.exists(path)`` function, which returns "
"false if *path* is a symlink that points to a destination that doesn't "
"exist. (Contributed by Beni Cherniavsky.)"
msgstr ""
"Еще одна новая функция: ``os.path.lexists(path)`` возвращает true, если "
"файл, указанный *path*, существует, независимо от того, является ли он "
"символической ссылкой или нет. Это отличается от существующей функции os."
"path.exists(path)``, которая возвращает false, если *path* является "
"символической ссылкой, указывающей на несуществующий пункт назначения. "
"(Предоставлено Бени Чернявским.)"

#: ../../whatsnew/2.4.rst:1238
msgid ""
"A new :func:`getsid` function was added to the :mod:`posix` module that "
"underlies the :mod:`os` module. (Contributed by J. Raynor.)"
msgstr ""
"В модуль :mod:`posix`, лежащий в основе модуля :mod:`os`, была добавлена ​​"
"новая функция :func:`getsid`. (Предоставлено Дж. Рейнором.)"

#: ../../whatsnew/2.4.rst:1241
msgid ""
"The :mod:`poplib` module now supports POP over SSL.  (Contributed by Hector "
"Urtubia.)"
msgstr ""
"Модуль :mod:`poplib` теперь поддерживает POP через SSL. (Предоставлено "
"Гектором Уртубией.)"

#: ../../whatsnew/2.4.rst:1244
msgid ""
"The :mod:`profile` module can now profile C extension functions. "
"(Contributed by Nick Bastin.)"
msgstr ""
"Модуль :mod:`profile` теперь может профилировать функции расширения C. "
"(Предоставлено Ником Бастином.)"

#: ../../whatsnew/2.4.rst:1247
msgid ""
"The :mod:`random` module has a new method called ``getrandbits(N)`` that "
"returns a long integer *N* bits in length.  The existing :meth:`randrange` "
"method now uses :meth:`getrandbits` where appropriate, making generation of "
"arbitrarily large random numbers more efficient.  (Contributed by Raymond "
"Hettinger.)"
msgstr ""
"Модуль :mod:`random` имеет новый метод под названием ``getrandbits(N)``, "
"который возвращает длинное целое число длиной *N* бит. Существующий метод :"
"meth:`randrange` теперь использует :meth:`getrandbits` там, где это "
"необходимо, что делает генерацию произвольно больших случайных чисел более "
"эффективной. (Предоставлено Раймондом Хеттингером.)"

#: ../../whatsnew/2.4.rst:1253
msgid ""
"The regular expression language accepted by the :mod:`re` module was "
"extended with simple conditional expressions, written as ``(?(group)A|B)``.  "
"*group* is either a numeric group ID or a group name defined with ``(?"
"P<group>...)`` earlier in the expression.  If the specified group matched, "
"the regular expression pattern *A* will be tested against the string; if the "
"group didn't match, the pattern *B* will be used instead. (Contributed by "
"Gustavo Niemeyer.)"
msgstr ""
"Язык регулярных выражений, принятый модулем :mod:`re`, был расширен простыми "
"условными выражениями, записанными как ``(?(group)A|B)``. *group* — это либо "
"числовой идентификатор группы, либо имя группы, определенное с помощью ``(?"
"P<group>...)`` ранее в выражении. Если указанная группа соответствует, "
"шаблон регулярного выражения *A* будет проверен на соответствие строке; если "
"группа не совпала, вместо нее будет использоваться шаблон *B*. "
"(Предоставлено Густаво Нимейером.)"

#: ../../whatsnew/2.4.rst:1260
msgid ""
"The :mod:`re` module is also no longer recursive, thanks to a massive amount "
"of work by Gustavo Niemeyer.  In a recursive regular expression engine, "
"certain patterns result in a large amount of C stack space being consumed, "
"and it was possible to overflow the stack. For example, if you matched a "
"30000-byte string of ``a`` characters against the expression ``(a|b)+``, one "
"stack frame was consumed per character.  Python 2.3 tried to check for stack "
"overflow and raise a :exc:`RuntimeError` exception, but certain patterns "
"could sidestep the checking and if you were unlucky Python could segfault. "
"Python 2.4's regular expression engine can match this pattern without "
"problems."
msgstr ""
"Модуль :mod:`re` также больше не является рекурсивным благодаря огромной "
"работе Густаво Нимейера. В рекурсивном механизме регулярных выражений "
"некоторые шаблоны приводят к использованию большого объема стека C, и стек "
"может переполниться. Например, если вы сопоставили 30000-байтовую строку "
"символов ``a`` с выражением ``(a|b)+``, на каждый символ был использован "
"один кадр стека. Python 2.3 пытался проверить переполнение стека и вызвать "
"исключение :exc:`RuntimeError`, но некоторые шаблоны могли обойти проверку, "
"и если вам не повезет, Python мог совершить ошибку segfault. Механизм "
"регулярных выражений Python 2.4 без проблем может сопоставить этот шаблон."

#: ../../whatsnew/2.4.rst:1270
msgid ""
"The :mod:`signal` module now performs tighter error-checking on the "
"parameters to the :func:`signal.signal` function.  For example, you can't "
"set a handler on the :const:`SIGKILL` signal; previous versions of Python "
"would quietly accept this, but 2.4 will raise a :exc:`RuntimeError` "
"exception."
msgstr ""
"Модуль :mod:`signal` теперь выполняет более тщательную проверку ошибок в "
"параметрах функции :func:`signal.signal`. Например, вы не можете установить "
"обработчик сигнала :const:`SIGKILL`; предыдущие версии Python спокойно это "
"принимали, но версия 2.4 вызовет исключение :exc:`RuntimeError`."

#: ../../whatsnew/2.4.rst:1275
msgid ""
"Two new functions were added to the :mod:`socket` module. :func:`socketpair` "
"returns a pair of connected sockets and ``getservbyport(port)`` looks up the "
"service name for a given port number. (Contributed by Dave Cole and Barry "
"Warsaw.)"
msgstr ""
"В модуль :mod:`socket` были добавлены две новые функции. :func:`socketpair` "
"возвращает пару подключенных сокетов, а ``getservbyport(port)`` ищет имя "
"службы для заданного номера порта. (Сообщили Дэйв Коул и Барри Варшава.)"

#: ../../whatsnew/2.4.rst:1280
msgid ""
"The :func:`sys.exitfunc` function has been deprecated.  Code should be using "
"the existing :mod:`atexit` module, which correctly handles calling multiple "
"exit functions.  Eventually :func:`sys.exitfunc` will become a purely "
"internal interface, accessed only by :mod:`atexit`."
msgstr ""
"Функция :func:`sys.exitfunc` устарела. Код должен использовать существующий "
"модуль :mod:`atexit`, который правильно обрабатывает вызов нескольких "
"функций выхода. Со временем :func:`sys.exitfunc` станет чисто внутренним "
"интерфейсом, доступ к которому будет иметь только :mod:`atexit`."

#: ../../whatsnew/2.4.rst:1285
msgid ""
"The :mod:`tarfile` module now generates GNU-format tar files by default. "
"(Contributed by Lars Gustäbel.)"
msgstr ""
"Модуль :mod:`tarfile` теперь по умолчанию генерирует tar-файлы в формате "
"GNU. (Предоставлено Ларсом Густебелем.)"

#: ../../whatsnew/2.4.rst:1288
msgid ""
"The :mod:`threading` module now has an elegantly simple way to support "
"thread-local data.  The module contains a :class:`local` class whose "
"attribute values are local to different threads. ::"
msgstr ""
"Модуль :mod:`threading` теперь имеет элегантно простой способ поддержки "
"локальных данных потока. Модуль содержит класс :class:`local`, значения "
"атрибутов которого являются локальными для разных потоков. ::"

#: ../../whatsnew/2.4.rst:1292
msgid ""
"import threading\n"
"\n"
"data = threading.local()\n"
"data.number = 42\n"
"data.url = ('www.python.org', 80)"
msgstr ""
"import threading\n"
"\n"
"data = threading.local()\n"
"data.number = 42\n"
"data.url = ('www.python.org', 80)"

#: ../../whatsnew/2.4.rst:1298
msgid ""
"Other threads can assign and retrieve their own values for the :attr:"
"`number` and :attr:`url` attributes.  You can subclass :class:`local` to "
"initialize attributes or to add methods. (Contributed by Jim Fulton.)"
msgstr ""
"Другие потоки могут назначать и получать свои собственные значения для "
"атрибутов :attr:`number` и :attr:`url`. Вы можете создать подкласс :class:"
"`local` для инициализации атрибутов или добавления методов. (Предоставлено "
"Джимом Фултоном.)"

#: ../../whatsnew/2.4.rst:1302
msgid ""
"The :mod:`timeit` module now automatically disables periodic garbage "
"collection during the timing loop.  This change makes consecutive timings "
"more comparable.  (Contributed by Raymond Hettinger.)"
msgstr ""
"Модуль :mod:`timeit` теперь автоматически отключает периодическую сборку "
"мусора во время цикла синхронизации. Это изменение делает последовательные "
"тайминги более сопоставимыми. (Предоставлено Раймондом Хеттингером.)"

#: ../../whatsnew/2.4.rst:1306
msgid ""
"The :mod:`weakref` module now supports a wider variety of objects including "
"Python functions, class instances, sets, frozensets, deques, arrays, files, "
"sockets, and regular expression pattern objects. (Contributed by Raymond "
"Hettinger.)"
msgstr ""
"Модуль :mod:`weakref` теперь поддерживает более широкий спектр объектов, "
"включая функции Python, экземпляры классов, наборы, замороженные наборы, "
"деки, массивы, файлы, сокеты и объекты шаблонов регулярных выражений. "
"(Предоставлено Раймондом Хеттингером.)"

#: ../../whatsnew/2.4.rst:1311
msgid ""
"The :mod:`xmlrpclib <xmlrpc.client>` module now supports a multi-call "
"extension for transmitting multiple XML-RPC calls in a single HTTP "
"operation. (Contributed by Brian Quinlan.)"
msgstr ""
"Модуль :mod:`xmlrpclib <xmlrpc.client>` теперь поддерживает расширение "
"нескольких вызовов для передачи нескольких вызовов XML-RPC в одной операции "
"HTTP. (Предоставлено Брайаном Куинланом.)"

#: ../../whatsnew/2.4.rst:1315
msgid ""
"The :mod:`mpz`, :mod:`rotor`, and :mod:`xreadlines` modules have  been "
"removed."
msgstr "Модули :mod:`mpz`, :mod:`rotor` и :mod:`xreadlines` были удалены."

#: ../../whatsnew/2.4.rst:1324
msgid "cookielib"
msgstr "cookielib"

#: ../../whatsnew/2.4.rst:1326
msgid ""
"The :mod:`cookielib <http.cookiejar>` library supports client-side handling "
"for HTTP cookies, mirroring the :mod:`Cookie <http.cookies>` module's server-"
"side cookie support. Cookies are stored in cookie jars; the library "
"transparently stores cookies offered by the web server in the cookie jar, "
"and fetches the cookie from the jar when connecting to the server. As in web "
"browsers, policy objects control whether cookies are accepted or not."
msgstr ""
"Библиотека :mod:`cookielib <http.cookiejar>` поддерживает обработку файлов "
"cookie HTTP на стороне клиента, отражая поддержку файлов cookie на стороне "
"сервера модуля :mod:`Cookie <http.cookies>`. Файлы cookie хранятся в банках "
"для печенья; библиотека прозрачно сохраняет файлы cookie, предлагаемые веб-"
"сервером, в банке файлов cookie и извлекает файлы cookie из банки при "
"подключении к серверу. Как и в веб-браузерах, объекты политики контролируют, "
"принимаются файлы cookie или нет."

#: ../../whatsnew/2.4.rst:1333
msgid ""
"In order to store cookies across sessions, two implementations of cookie "
"jars are provided: one that stores cookies in the Netscape format so "
"applications can use the Mozilla or Lynx cookie files, and one that stores "
"cookies in the same format as the Perl libwww library."
msgstr ""
"Для хранения файлов cookie между сеансами предусмотрены две реализации "
"файлов cookie: одна хранит файлы cookie в формате Netscape, чтобы приложения "
"могли использовать файлы cookie Mozilla или Lynx, а другая хранит файлы "
"cookie в том же формате, что и библиотека Perl libwww."

#: ../../whatsnew/2.4.rst:1338
msgid ""
":mod:`urllib2 <urllib.request>` has been changed to interact with :mod:"
"`cookielib <http.cookiejar>`: :class:`HTTPCookieProcessor` manages a cookie "
"jar that is used when accessing URLs."
msgstr ""
":mod:`urllib2 <urllib.request>` был изменен для взаимодействия с :mod:"
"`cookielib <http.cookiejar>`: :class:`HTTPCookieProcessor` управляет файлом "
"cookie, который используется при доступе к URL-адресам."

#: ../../whatsnew/2.4.rst:1342
msgid "This module was contributed by John J. Lee."
msgstr "Этот модуль был предоставлен Джоном Дж. Ли."

#: ../../whatsnew/2.4.rst:1348
msgid "doctest"
msgstr "doctest"

#: ../../whatsnew/2.4.rst:1350
msgid ""
"The :mod:`doctest` module underwent considerable refactoring thanks to "
"Edward Loper and Tim Peters.  Testing can still be as simple as running :"
"func:`doctest.testmod`, but the refactorings allow customizing the module's "
"operation in various ways"
msgstr ""
"Модуль :mod:`doctest` подвергся значительному рефакторингу благодаря Эдварду "
"Лоперу и Тиму Питерсу. Тестирование по-прежнему может быть таким же простым, "
"как запуск :func:`doctest.testmod`, но рефакторинг позволяет настраивать "
"работу модуля различными способами."

#: ../../whatsnew/2.4.rst:1355
msgid ""
"The new :class:`DocTestFinder` class extracts the tests from a given  "
"object's docstrings::"
msgstr ""
"Новый класс :class:`DocTestFinder` извлекает тесты из строк документации "
"данного объекта::"

#: ../../whatsnew/2.4.rst:1358
msgid ""
"def f (x, y):\n"
"    \"\"\">>> f(2,2)\n"
"4\n"
">>> f(3,2)\n"
"6\n"
"    \"\"\"\n"
"    return x*y\n"
"\n"
"finder = doctest.DocTestFinder()\n"
"\n"
"# Get list of DocTest instances\n"
"tests = finder.find(f)"
msgstr ""
"def f (x, y):\n"
"    \"\"\">>> f(2,2)\n"
"4\n"
">>> f(3,2)\n"
"6\n"
"    \"\"\"\n"
"    return x*y\n"
"\n"
"finder = doctest.DocTestFinder()\n"
"\n"
"# Get list of DocTest instances\n"
"tests = finder.find(f)"

#: ../../whatsnew/2.4.rst:1371
msgid ""
"The new :class:`DocTestRunner` class then runs individual tests and can "
"produce a summary of the results::"
msgstr ""
"Новый класс :class:`DocTestRunner` затем запускает отдельные тесты и может "
"выдать сводку результатов:"

#: ../../whatsnew/2.4.rst:1374
msgid ""
"runner = doctest.DocTestRunner()\n"
"for t in tests:\n"
"    tried, failed = runner.run(t)\n"
"\n"
"runner.summarize(verbose=1)"
msgstr ""
"runner = doctest.DocTestRunner()\n"
"for t in tests:\n"
"    tried, failed = runner.run(t)\n"
"\n"
"runner.summarize(verbose=1)"

#: ../../whatsnew/2.4.rst:1380
msgid "The above example produces the following output::"
msgstr "Приведенный выше пример дает следующий результат:"

#: ../../whatsnew/2.4.rst:1382
msgid ""
"1 items passed all tests:\n"
"   2 tests in f\n"
"2 tests in 1 items.\n"
"2 passed and 0 failed.\n"
"Test passed."
msgstr ""
"1 items passed all tests:\n"
"   2 tests in f\n"
"2 tests in 1 items.\n"
"2 passed and 0 failed.\n"
"Test passed."

#: ../../whatsnew/2.4.rst:1388
msgid ""
":class:`DocTestRunner` uses an instance of the :class:`OutputChecker` class "
"to compare the expected output with the actual output.  This class takes a "
"number of different flags that customize its behaviour; ambitious users can "
"also write a completely new subclass of :class:`OutputChecker`."
msgstr ""
":class:`DocTestRunner` использует экземпляр класса :class:`OutputChecker` "
"для сравнения ожидаемого результата с фактическим результатом. Этот класс "
"принимает ряд различных флагов, настраивающих его поведение; амбициозные "
"пользователи также могут написать совершенно новый подкласс :class:"
"`OutputChecker`."

#: ../../whatsnew/2.4.rst:1393
msgid ""
"The default output checker provides a number of handy features. For example, "
"with the :const:`doctest.ELLIPSIS` option flag, an ellipsis (``...``) in the "
"expected output matches any substring,  making it easier to accommodate "
"outputs that vary in minor ways::"
msgstr ""
"Средство проверки вывода по умолчанию предоставляет ряд удобных функций. "
"Например, с помощью флага опции :const:`doctest.ELLIPSIS` многоточие (``..."
"``) в ожидаемом выводе соответствует любой подстроке, что упрощает обработку "
"результатов, которые незначительно различаются:"

#: ../../whatsnew/2.4.rst:1398
msgid ""
"def o (n):\n"
"    \"\"\">>> o(1)\n"
"<__main__.C instance at 0x...>\n"
">>>\n"
"\"\"\""
msgstr ""
"def o (n):\n"
"    \"\"\">>> o(1)\n"
"<__main__.C instance at 0x...>\n"
">>>\n"
"\"\"\""

#: ../../whatsnew/2.4.rst:1404
msgid "Another special string, ``<BLANKLINE>``, matches a blank line::"
msgstr ""
"Другая специальная строка, ``<BLANKLINE>``, соответствует пустой строке:"

#: ../../whatsnew/2.4.rst:1406
msgid ""
"def p (n):\n"
"    \"\"\">>> p(1)\n"
"<BLANKLINE>\n"
">>>\n"
"\"\"\""
msgstr ""
"def p (n):\n"
"    \"\"\">>> p(1)\n"
"<BLANKLINE>\n"
">>>\n"
"\"\"\""

#: ../../whatsnew/2.4.rst:1412
msgid ""
"Another new capability is producing a diff-style display of the output by "
"specifying the :const:`doctest.REPORT_UDIFF` (unified diffs), :const:"
"`doctest.REPORT_CDIFF` (context diffs), or :const:`doctest.REPORT_NDIFF` "
"(delta-style) option flags.  For example::"
msgstr ""
"Еще одна новая возможность — создание отображения выходных данных в стиле "
"различий путем указания :const:`doctest.REPORT_UDIFF` (унифицированные "
"различия), :const:`doctest.REPORT_CDIFF` (контекстные различия) или :const:"
"`doctest.REPORT_NDIFF. ` (дельта-стиль) флаги опций. Например::"

#: ../../whatsnew/2.4.rst:1417
msgid ""
"def g (n):\n"
"    \"\"\">>> g(4)\n"
"here\n"
"is\n"
"a\n"
"lengthy\n"
">>>\"\"\"\n"
"    L = 'here is a rather lengthy list of words'.split()\n"
"    for word in L[:n]:\n"
"        print word"
msgstr ""
"def g (n):\n"
"    \"\"\">>> g(4)\n"
"here\n"
"is\n"
"a\n"
"lengthy\n"
">>>\"\"\"\n"
"    L = 'here is a rather lengthy list of words'.split()\n"
"    for word in L[:n]:\n"
"        print word"

#: ../../whatsnew/2.4.rst:1428
msgid ""
"Running the above function's tests with :const:`doctest.REPORT_UDIFF` "
"specified, you get the following output:"
msgstr ""
"Запустив тесты вышеуказанной функции с указанным :const:`doctest."
"REPORT_UDIFF`, вы получите следующий результат:"

#: ../../whatsnew/2.4.rst:1431
msgid ""
"**********************************************************************\n"
"File \"t.py\", line 15, in g\n"
"Failed example:\n"
"    g(4)\n"
"Differences (unified diff with -expected +actual):\n"
"    @@ -2,3 +2,3 @@\n"
"     is\n"
"     a\n"
"    -lengthy\n"
"    +rather\n"
"**********************************************************************"
msgstr ""
"**********************************************************************\n"
"File \"t.py\", line 15, in g\n"
"Failed example:\n"
"    g(4)\n"
"Differences (unified diff with -expected +actual):\n"
"    @@ -2,3 +2,3 @@\n"
"     is\n"
"     a\n"
"    -lengthy\n"
"    +rather\n"
"**********************************************************************"

#: ../../whatsnew/2.4.rst:1449
msgid "Build and C API Changes"
msgstr "Изменения API сборки и C"

#: ../../whatsnew/2.4.rst:1451
msgid "Some of the changes to Python's build process and to the C API are:"
msgstr "Некоторые изменения в процессе сборки Python и C API:"

#: ../../whatsnew/2.4.rst:1453
msgid ""
"Three new convenience macros were added for common return values from "
"extension functions: :c:macro:`Py_RETURN_NONE`, :c:macro:`Py_RETURN_TRUE`, "
"and :c:macro:`Py_RETURN_FALSE`. (Contributed by Brett Cannon.)"
msgstr ""
"Были добавлены три новых удобных макроса для общих возвращаемых значений из "
"функций расширения: :c:macro:`Py_RETURN_NONE`, :c:macro:`Py_RETURN_TRUE` и :"
"c:macro:`Py_RETURN_FALSE`. (Предоставлено Бреттом Кэнноном.)"

#: ../../whatsnew/2.4.rst:1457
msgid ""
"Another new macro, :c:macro:`Py_CLEAR`,  decreases the reference count of "
"*obj* and sets *obj* to the null pointer.  (Contributed by Jim Fulton.)"
msgstr ""
"Другой новый макрос, :c:macro:`Py_CLEAR`, уменьшает счетчик ссылок *obj* и "
"устанавливает для *obj* нулевой указатель. (Предоставлено Джимом Фултоном.)"

#: ../../whatsnew/2.4.rst:1460
msgid ""
"A new function, ``PyTuple_Pack(N, obj1, obj2, ..., objN)``, constructs "
"tuples from a variable length argument list of Python objects.  (Contributed "
"by Raymond Hettinger.)"
msgstr ""
"Новая функция PyTuple_Pack(N, obj1, obj2, ..., objN) создает кортежи из "
"списка аргументов переменной длины объектов Python. (Предоставлено Раймондом "
"Хеттингером.)"

#: ../../whatsnew/2.4.rst:1464
msgid ""
"A new function, ``PyDict_Contains(d, k)``, implements fast dictionary "
"lookups without masking exceptions raised during the look-up process. "
"(Contributed by Raymond Hettinger.)"
msgstr ""
"Новая функция PyDict_Contains(d, k) реализует быстрый поиск по словарю без "
"маскировки исключений, возникающих в процессе поиска. (Предоставлено "
"Раймондом Хеттингером.)"

#: ../../whatsnew/2.4.rst:1468
msgid ""
"The :c:expr:`Py_IS_NAN(X)` macro returns 1 if  its float or double argument "
"*X* is a NaN.   (Contributed by Tim Peters.)"
msgstr ""
"Макрос :c:expr:`Py_IS_NAN(X)` возвращает 1, если его аргумент с плавающей "
"точкой или двойным аргументом *X* имеет значение NaN. (Предоставлено Тимом "
"Питерсом.)"

#: ../../whatsnew/2.4.rst:1471
msgid ""
"C code can avoid unnecessary locking by using the new :c:func:`!"
"PyEval_ThreadsInitialized` function to tell  if any thread operations have "
"been performed.  If this function  returns false, no lock operations are "
"needed. (Contributed by Nick Coghlan.)"
msgstr ""
"Код C может избежать ненужной блокировки, используя новую функцию :c:func:`!"
"PyEval_ThreadsInitialized`, чтобы узнать, были ли выполнены какие-либо "
"операции с потоками. Если эта функция возвращает false, никаких операций "
"блокировки не требуется. (Предоставлено Ником Когланом.)"

#: ../../whatsnew/2.4.rst:1476
msgid ""
"A new function, :c:func:`PyArg_VaParseTupleAndKeywords`, is the same as :c:"
"func:`PyArg_ParseTupleAndKeywords` but takes a  :c:type:`va_list` instead of "
"a number of arguments. (Contributed by Greg Chapman.)"
msgstr ""
"Новая функция :c:func:`PyArg_VaParseTupleAndKeywords` аналогична :c:func:"
"`PyArg_ParseTupleAndKeywords`, но вместо ряда аргументов принимает :c:type:"
"`va_list`. (Предоставлено Грегом Чепменом.)"

#: ../../whatsnew/2.4.rst:1480
msgid ""
"A new method flag, :c:macro:`METH_COEXIST`, allows a function defined in "
"slots to co-exist with a :c:type:`PyCFunction` having the same name.  This "
"can halve the access time for a method such as :meth:`set.__contains__`.  "
"(Contributed by Raymond Hettinger.)"
msgstr ""
"Новый флаг метода :c:macro:`METH_COEXIST` позволяет функции, определенной в "
"слотах, сосуществовать с функцией :c:type:`PyCFunction`, имеющей то же имя. "
"Это может вдвое сократить время доступа для такого метода, как :meth:`set."
"__contains__`. (Предоставлено Раймондом Хеттингером.)"

#: ../../whatsnew/2.4.rst:1485
msgid ""
"Python can now be built with additional profiling for the interpreter "
"itself, intended as an aid to people developing the Python core.  Providing :"
"option:`!--enable-profiling` to the :program:`configure` script will let you "
"profile the interpreter with :program:`gprof`, and providing the :option:`!--"
"with-tsc` switch enables profiling using the Pentium's Time-Stamp-Counter "
"register.  Note that the :option:`!--with-tsc` switch is slightly misnamed, "
"because the profiling feature also works on the PowerPC platform, though "
"that processor architecture doesn't call that register \"the TSC "
"register\".  (Contributed by Jeremy Hylton.)"
msgstr ""
"Python теперь можно создавать с дополнительным профилированием самого "
"интерпретатора, предназначенным в помощь людям, разрабатывающим ядро ​​Python. "
"Предоставление :option:`!--enable-profiling` в скрипте :program:`configure` "
"позволит вам профилировать интерпретатор с помощью :program:`gprof` и "
"предоставление переключателя :option:`!--with-tsc` позволяет профилировать с "
"использованием регистра счетчика меток времени Pentium. Обратите внимание, "
"что переключатель :option:`!--with-tsc` назван немного неправильно, "
"поскольку функция профилирования также работает на платформе PowerPC, хотя в "
"этой архитектуре процессора этот регистр не называется \"регистром TSC\". "
"(Предоставлено Джереми Хилтоном.)"

#: ../../whatsnew/2.4.rst:1495
msgid ""
"The :c:type:`!tracebackobject` type has been renamed to :c:type:"
"`PyTracebackObject`."
msgstr ""
"Тип :c:type:`!tracebackobject` был переименован в :c:type:"
"`PyTracebackObject`."

#: ../../whatsnew/2.4.rst:1502
msgid "Port-Specific Changes"
msgstr "Изменения для конкретного порта"

#: ../../whatsnew/2.4.rst:1504
msgid ""
"The Windows port now builds under MSVC++ 7.1 as well as version 6. "
"(Contributed by Martin von Löwis.)"
msgstr ""
"Порт для Windows теперь работает как под MSVC++ 7.1, так и под версией 6. "
"(Сообщил Мартин фон Лёвис.)"

#: ../../whatsnew/2.4.rst:1511
msgid "Porting to Python 2.4"
msgstr "Портирование на Python 2.4"

#: ../../whatsnew/2.4.rst:1513
msgid ""
"This section lists previously described changes that may require changes to "
"your code:"
msgstr ""
"В этом разделе перечислены ранее описанные изменения, которые могут "
"потребовать внесения изменений в ваш код:"

#: ../../whatsnew/2.4.rst:1516
msgid ""
"Left shifts and hexadecimal/octal constants that are too  large no longer "
"trigger a :exc:`FutureWarning` and return  a value limited to 32 or 64 bits; "
"instead they return a long integer."
msgstr ""
"Сдвиг влево и слишком большие шестнадцатеричные/восьмеричные константы "
"больше не вызывают :exc:`FutureWarning` и возвращают значение, ограниченное "
"32 или 64 битами; вместо этого они возвращают длинное целое число."

#: ../../whatsnew/2.4.rst:1523
msgid ""
"The :func:`zip` built-in function and :func:`itertools.izip` now return  an "
"empty list instead of raising a :exc:`TypeError` exception if called with no "
"arguments."
msgstr ""
"Встроенная функция :func:`zip` и :func:`itertools.izip` теперь возвращают "
"пустой список вместо того, чтобы вызывать исключение :exc:`TypeError`, если "
"они вызваны без аргументов."

#: ../../whatsnew/2.4.rst:1527
msgid ""
"You can no longer compare the :class:`date` and :class:`~datetime.datetime` "
"instances provided by the :mod:`datetime` module.  Two  instances of "
"different classes will now always be unequal, and  relative comparisons "
"(``<``, ``>``) will raise a :exc:`TypeError`."
msgstr ""
"Вы больше не можете сравнивать экземпляры :class:`date` и :class:`~datetime."
"datetime`, предоставляемые модулем :mod:`datetime`. Два экземпляра разных "
"классов теперь всегда будут неравными, а относительные сравнения (``<``, "
"``>``) будут вызывать ошибку :exc:`TypeError`."

#: ../../whatsnew/2.4.rst:1532
msgid ""
":func:`!dircache.listdir` now passes exceptions to the caller instead of "
"returning empty lists."
msgstr ""
":func:`!dircache.listdir` теперь передает исключения вызывающей стороне "
"вместо возврата пустых списков."

#: ../../whatsnew/2.4.rst:1535
msgid ""
":func:`LexicalHandler.startDTD` used to receive the public and system IDs in "
"the wrong order.  This has been corrected; applications relying on the wrong "
"order need to be fixed."
msgstr ""
":func:`LexicalHandler.startDTD` используется для получения общедоступных и "
"системных идентификаторов в неправильном порядке. Это было исправлено; "
"приложения, использующие неправильный порядок, необходимо исправить."

#: ../../whatsnew/2.4.rst:1539
msgid ""
":func:`fcntl.ioctl` now warns if the *mutate*  argument is omitted and "
"relevant."
msgstr ""
":func:`fcntl.ioctl` теперь предупреждает, если аргумент *mutate* опущен и "
"имеет значение."

#: ../../whatsnew/2.4.rst:1542
msgid ""
"The :mod:`tarfile` module now generates GNU-format tar files by default."
msgstr ""
"Модуль :mod:`tarfile` теперь по умолчанию генерирует tar-файлы в формате GNU."

#: ../../whatsnew/2.4.rst:1544
msgid ""
"Encountering a failure while importing a module no longer leaves a partially "
"initialized module object in ``sys.modules``."
msgstr ""
"В случае сбоя при импорте модуля в ``sys.modules`` больше не остается "
"частично инициализированный объект модуля."

#: ../../whatsnew/2.4.rst:1547
msgid ""
":const:`None` is now a constant; code that binds a new value to  the name "
"``None`` is now a syntax error."
msgstr ""
":const:`None` теперь является константой; код, который связывает новое "
"значение с именем None, теперь является синтаксической ошибкой."

#: ../../whatsnew/2.4.rst:1550
msgid ""
"The :func:`signals.signal` function now raises a :exc:`RuntimeError` "
"exception for certain illegal values; previously these errors would pass "
"silently.  For example, you can no longer set a handler on the :const:"
"`SIGKILL` signal."
msgstr ""
"Функция :func:`signals.signal` теперь вызывает исключение :exc:"
"`RuntimeError` для некоторых недопустимых значений; раньше эти ошибки "
"проходили молча. Например, вы больше не можете установить обработчик "
"сигнала :const:`SIGKILL`."

#: ../../whatsnew/2.4.rst:1560
msgid "Acknowledgements"
msgstr "Подтверждение"

#: ../../whatsnew/2.4.rst:1562
msgid ""
"The author would like to thank the following people for offering "
"suggestions, corrections and assistance with various drafts of this article: "
"Koray Can, Hye-Shik Chang, Michael Dyck, Raymond Hettinger, Brian Hurt, "
"Hamish Lawson, Fredrik Lundh, Sean Reifschneider, Sadruddin Rejeb."
msgstr ""
"Автор хотел бы поблагодарить следующих людей за предложения, исправления и "
"помощь в различных черновиках этой статьи: Корай Джан, Хе-Шик Чанг, Майкл "
"Дайк, Рэймонд Хеттингер, Брайан Хёрт, Хэмиш Лоусон, Фредрик Лунд, Шон "
"Рейфшнайдер, Садруддин. Реджеб."

#: ../../whatsnew/2.4.rst:415
msgid "universal newlines"
msgstr "универсальные переводы строк"

#: ../../whatsnew/2.4.rst:415
msgid "What's new"
msgstr "Что нового"
