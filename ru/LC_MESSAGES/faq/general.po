# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# Rafael Fontenelle <rffontenelle@gmail.com>, 2024
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.10\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-01-10 16:06+0000\n"
"PO-Revision-Date: 2022-11-05 17:21+0000\n"
"Last-Translator: Rafael Fontenelle <rffontenelle@gmail.com>, 2024\n"
"Language-Team: Russian (https://app.transifex.com/python-doc/teams/5390/"
"ru/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ru\n"
"Plural-Forms: nplurals=4; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && "
"n%10<=4 && (n%100<12 || n%100>14) ? 1 : n%10==0 || (n%10>=5 && n%10<=9) || "
"(n%100>=11 && n%100<=14)? 2 : 3);\n"

#: ../../faq/general.rst:5
msgid "General Python FAQ"
msgstr "Общие ЧаВО по Python"

#: ../../faq/general.rst:8
msgid "Contents"
msgstr " Содержание"

#: ../../faq/general.rst:13
msgid "General Information"
msgstr "Общая информация"

#: ../../faq/general.rst:16
msgid "What is Python?"
msgstr "Что такое Python?"

#: ../../faq/general.rst:18
msgid ""
"Python is an interpreted, interactive, object-oriented programming "
"language.  It incorporates modules, exceptions, dynamic typing, very high "
"level dynamic data types, and classes.  It supports multiple programming "
"paradigms beyond object-oriented programming, such as procedural and "
"functional programming. Python combines remarkable power with very clear "
"syntax. It has interfaces to many system calls and libraries, as well as to "
"various window systems, and is extensible in C or C++.  It is also usable as "
"an extension language for applications that need a programmable interface. "
"Finally, Python is portable: it runs on many Unix variants including Linux "
"and macOS, and on Windows."
msgstr ""
"  Python — интерпретируемый, интерактивный, объектно-ориентированный язык "
"программирования. Он включает в себя модули, исключения, динамическую "
"типизацию, высокоуровневые динамичные типы данных и классы. Python "
"поддерживает не только объектно-ориентированное программирование, но и "
"другие парадигмы, например, функциональное и процедурное программирование. "
"Он совмещает в себе выразительность и лёгкий для восприятия синтаксис. "
"Python может взаимодействовать с многими системными вызовами и библиотеками, "
"в том числе с графическими оболочками, и его можно расширить с помощью C или "
"C++. Его можно использовать как язык расширений для приложений, которым "
"нужен программируемый интерфейс. И наконец, переносимый: он поддерживает "
"Unix-подобные системы, включая Linux и macOS, и Windows."

#: ../../faq/general.rst:28
msgid ""
"To find out more, start with :ref:`tutorial-index`.  The `Beginner's Guide "
"to Python <https://wiki.python.org/moin/BeginnersGuide>`_ links to other "
"introductory tutorials and resources for learning Python."
msgstr ""
"Чтобы узнать больше, начните со страницы :ref:`tutorial-index`.  `Beginner's "
"Guide to Python <https://wiki.python.org/moin/BeginnersGuide>` содержит "
"ссылки на друие англоязычный руководства и ресурсы для изучения Python'а."

#: ../../faq/general.rst:34
msgid "What is the Python Software Foundation?"
msgstr "Что такое Фонд программного обеспечения Python?"

#: ../../faq/general.rst:36
msgid ""
"The Python Software Foundation is an independent non-profit organization "
"that holds the copyright on Python versions 2.1 and newer.  The PSF's "
"mission is to advance open source technology related to the Python "
"programming language and to publicize the use of Python.  The PSF's home "
"page is at https://www.python.org/psf/."
msgstr ""
"Python Software Foundation — независимая некоммерческая организация, "
"владеющая авторскими правами на Python версии 2.1 и новее. Миссия PSF — "
"продвигать технологию с открытым исходным кодом, связанную с языком "
"программирования Python, и пропагандировать использование Python. Домашняя "
"страница PSF находится по адресу https://www.python.org/psf/."

#: ../../faq/general.rst:42
msgid ""
"Donations to the PSF are tax-exempt in the US.  If you use Python and find "
"it helpful, please contribute via `the PSF donation page <https://www.python."
"org/psf/donations/>`_."
msgstr ""
"Пожертвования в PSF не облагаются налогом в США. Если вы используете Python "
"и считаете его полезным, внесите свой вклад через `страницу пожертвований "
"PSF <https://www.python.org/psf/donations/>`_."

#: ../../faq/general.rst:48
msgid "Are there copyright restrictions on the use of Python?"
msgstr "Существуют ли ограничения авторских прав на использование Python?"

#: ../../faq/general.rst:50
msgid ""
"You can do anything you want with the source, as long as you leave the "
"copyrights in and display those copyrights in any documentation about Python "
"that you produce.  If you honor the copyright rules, it's OK to use Python "
"for commercial use, to sell copies of Python in source or binary form "
"(modified or unmodified), or to sell products that incorporate Python in "
"some form.  We would still like to know about all commercial use of Python, "
"of course."
msgstr ""
"Вы можете делать с исходным кодом все, что захотите, при условии, что вы "
"сохраняете авторские права и отображаете эти авторские права в любой "
"документации о Python, которую вы создаете. Если вы соблюдаете правила "
"авторского права, можно использовать Python для коммерческого использования, "
"продавать копии Python в исходной или двоичной форме (модифицированной или "
"немодифицированной) или продавать продукты, включающие Python в той или иной "
"форме. Конечно, нам все равно хотелось бы знать обо всех случаях "
"коммерческого использования Python."

#: ../../faq/general.rst:57
msgid ""
"See `the PSF license page <https://www.python.org/psf/license/>`_ to find "
"further explanations and a link to the full text of the license."
msgstr ""

#: ../../faq/general.rst:60
msgid ""
"The Python logo is trademarked, and in certain cases permission is required "
"to use it.  Consult `the Trademark Usage Policy <https://www.python.org/psf/"
"trademarks/>`__ for more information."
msgstr ""
"Логотип Python является товарным знаком, и в некоторых случаях для его "
"использования требуется разрешение. Дополнительную информацию см. в "
"«Политике использования товарных знаков <https://www.python.org/psf/"
"trademarks/>»."

#: ../../faq/general.rst:66
msgid "Why was Python created in the first place?"
msgstr "Почему Python был создан вообще?"

#: ../../faq/general.rst:68
msgid ""
"Here's a *very* brief summary of what started it all, written by Guido van "
"Rossum:"
msgstr ""
"Вот *очень* краткое изложение того, с чего все началось, написанное Гвидо "
"ван Россумом:"

#: ../../faq/general.rst:71
msgid ""
"I had extensive experience with implementing an interpreted language in the "
"ABC group at CWI, and from working with this group I had learned a lot about "
"language design.  This is the origin of many Python features, including the "
"use of indentation for statement grouping and the inclusion of very-high-"
"level data types (although the details are all different in Python)."
msgstr ""
"У меня был обширный опыт внедрения интерпретируемого языка в группе ABC в "
"CWI, и, работая с этой группой, я многому научился в области языкового "
"проектирования. Это источник многих функций Python, включая использование "
"отступов для группировки операторов и включение типов данных очень высокого "
"уровня (хотя в Python все детали разные)."

#: ../../faq/general.rst:78
msgid ""
"I had a number of gripes about the ABC language, but also liked many of its "
"features.  It was impossible to extend the ABC language (or its "
"implementation) to remedy my complaints -- in fact its lack of extensibility "
"was one of its biggest problems.  I had some experience with using Modula-2+ "
"and talked with the designers of Modula-3 and read the Modula-3 report. "
"Modula-3 is the origin of the syntax and semantics used for exceptions, and "
"some other Python features."
msgstr ""
"У меня было несколько претензий к языку ABC, но мне понравились и многие его "
"особенности. Невозможно было расширить язык ABC (или его реализацию), чтобы "
"исправить мои жалобы — на самом деле отсутствие расширяемости было одной из "
"самых больших проблем. У меня был некоторый опыт использования Модулы-2+, я "
"разговаривал с разработчиками Модулы-3 и читал отчет о Модуле-3. Modula-3 "
"является источником синтаксиса и семантики, используемых для исключений, а "
"также некоторых других функций Python."

#: ../../faq/general.rst:86
msgid ""
"I was working in the Amoeba distributed operating system group at CWI.  We "
"needed a better way to do system administration than by writing either C "
"programs or Bourne shell scripts, since Amoeba had its own system call "
"interface which wasn't easily accessible from the Bourne shell.  My "
"experience with error handling in Amoeba made me acutely aware of the "
"importance of exceptions as a programming language feature."
msgstr ""
"Я работал в группе распределенных операционных систем Amoeba в CWI. Нам "
"нужен был лучший способ администрирования системы, чем написание программ на "
"C или сценариев оболочки Bourne, поскольку у Amoeba был собственный "
"интерфейс системных вызовов, к которому было нелегко получить доступ из "
"оболочки Bourne. Мой опыт обработки ошибок в Amoeba позволил мне остро "
"осознать важность исключений как функции языка программирования."

#: ../../faq/general.rst:93
msgid ""
"It occurred to me that a scripting language with a syntax like ABC but with "
"access to the Amoeba system calls would fill the need.  I realized that it "
"would be foolish to write an Amoeba-specific language, so I decided that I "
"needed a language that was generally extensible."
msgstr ""
"Мне пришло в голову, что язык сценариев с синтаксисом типа ABC, но с "
"доступом к системным вызовам Amoeba, удовлетворит эту потребность. Я понял, "
"что было бы глупо писать язык, специфичный для Amoeba, поэтому решил, что "
"мне нужен язык, который в целом был бы расширяемым."

#: ../../faq/general.rst:98
msgid ""
"During the 1989 Christmas holidays, I had a lot of time on my hand, so I "
"decided to give it a try.  During the next year, while still mostly working "
"on it in my own time, Python was used in the Amoeba project with increasing "
"success, and the feedback from colleagues made me add many early "
"improvements."
msgstr ""
"Во время рождественских каникул 1989 года у меня было много свободного "
"времени, поэтому я решил попробовать. В течение следующего года, хотя я все "
"еще в основном работал над этим в свое время, Python использовался в проекте "
"Amoeba с все большим успехом, а отзывы коллег заставили меня добавить "
"множество ранних улучшений."

#: ../../faq/general.rst:104
msgid ""
"In February 1991, after just over a year of development, I decided to post "
"to USENET.  The rest is in the ``Misc/HISTORY`` file."
msgstr ""
"В феврале 1991 года, спустя чуть больше года разработки, я решил "
"опубликовать сообщение в USENET. Остальное находится в файле «Misc/HISTORY»."

#: ../../faq/general.rst:109
msgid "What is Python good for?"
msgstr "Чем хорош Python?"

#: ../../faq/general.rst:111
msgid ""
"Python is a high-level general-purpose programming language that can be "
"applied to many different classes of problems."
msgstr ""
"Python — это язык программирования общего назначения высокого уровня, "
"который можно применять для решения множества различных классов задач."

#: ../../faq/general.rst:114
msgid ""
"The language comes with a large standard library that covers areas such as "
"string processing (regular expressions, Unicode, calculating differences "
"between files), internet protocols (HTTP, FTP, SMTP, XML-RPC, POP, IMAP, CGI "
"programming), software engineering (unit testing, logging, profiling, "
"parsing Python code), and operating system interfaces (system calls, "
"filesystems, TCP/IP sockets).  Look at the table of contents for :ref:"
"`library-index` to get an idea of what's available.  A wide variety of third-"
"party extensions are also available.  Consult `the Python Package Index "
"<https://pypi.org>`_ to find packages of interest to you."
msgstr ""

#: ../../faq/general.rst:126
msgid "How does the Python version numbering scheme work?"
msgstr "Как работает схема нумерации версий Python?"

#: ../../faq/general.rst:128
msgid "Python versions are numbered \"A.B.C\" or \"A.B\":"
msgstr "Версии Python имеют номера «ABC» или «AB»:"

#: ../../faq/general.rst:130
msgid ""
"*A* is the major version number -- it is only incremented for really major "
"changes in the language."
msgstr ""
"*A* — это основной номер версии. Он увеличивается только при действительно "
"серьезных изменениях в языке."

#: ../../faq/general.rst:132
msgid ""
"*B* is the minor version number -- it is incremented for less earth-"
"shattering changes."
msgstr ""
"*B* — это младший номер версии. Он увеличивается для менее серьезных "
"изменений."

#: ../../faq/general.rst:134
msgid ""
"*C* is the micro version number -- it is incremented for each bugfix release."
msgstr ""
"*C* — это номер микроверсии, который увеличивается с каждым выпуском "
"исправления ошибок."

#: ../../faq/general.rst:136
msgid "See :pep:`6` for more information about bugfix releases."
msgstr ""

#: ../../faq/general.rst:138
msgid ""
"Not all releases are bugfix releases.  In the run-up to a new major release, "
"a series of development releases are made, denoted as alpha, beta, or "
"release candidate.  Alphas are early releases in which interfaces aren't yet "
"finalized; it's not unexpected to see an interface change between two alpha "
"releases. Betas are more stable, preserving existing interfaces but possibly "
"adding new modules, and release candidates are frozen, making no changes "
"except as needed to fix critical bugs."
msgstr ""

#: ../../faq/general.rst:146
msgid "Alpha, beta and release candidate versions have an additional suffix:"
msgstr "Альфа-, бета-версии и версии-кандидаты имеют дополнительный суффикс:"

#: ../../faq/general.rst:148
msgid "The suffix for an alpha version is \"aN\" for some small number *N*."
msgstr "Суффикс альфа-версии — «aN» для небольшого числа *N*."

#: ../../faq/general.rst:149
msgid "The suffix for a beta version is \"bN\" for some small number *N*."
msgstr "Суффикс бета-версии — «bN» для небольшого числа *N*."

#: ../../faq/general.rst:150
msgid ""
"The suffix for a release candidate version is \"rcN\" for some small number "
"*N*."
msgstr "Суффикс версии-кандидата — «rcN» для небольшого числа *N*."

#: ../../faq/general.rst:152
msgid ""
"In other words, all versions labeled *2.0aN* precede the versions labeled "
"*2.0bN*, which precede versions labeled *2.0rcN*, and *those* precede 2.0."
msgstr ""
"Другими словами, все версии с меткой *2.0aN* предшествуют версиям с меткой "
"*2.0bN*, которые предшествуют версиям с меткой *2.0rcN*, а *эти* "
"предшествуют версии 2.0."

#: ../../faq/general.rst:155
msgid ""
"You may also find version numbers with a \"+\" suffix, e.g. \"2.2+\".  These "
"are unreleased versions, built directly from the CPython development "
"repository.  In practice, after a final minor release is made, the version "
"is incremented to the next minor version, which becomes the \"a0\" version, "
"e.g. \"2.4a0\"."
msgstr ""
"Вы также можете найти номера версий с суффиксом «+», например «2.2+». Это "
"невыпущенные версии, созданные непосредственно из репозитория разработки "
"CPython. На практике после выпуска последней второстепенной версии версия "
"увеличивается до следующей второстепенной версии, которая становится версией "
"«a0», например «2.4a0»."

#: ../../faq/general.rst:160
msgid ""
"See also the documentation for :data:`sys.version`, :data:`sys.hexversion`, "
"and :data:`sys.version_info`."
msgstr ""

#: ../../faq/general.rst:165
msgid "How do I obtain a copy of the Python source?"
msgstr "Как получить копию исходного кода Python?"

#: ../../faq/general.rst:167
msgid ""
"The latest Python source distribution is always available from python.org, "
"at https://www.python.org/downloads/.  The latest development sources can be "
"obtained at https://github.com/python/cpython/."
msgstr ""
"Последний дистрибутив исходного кода Python всегда доступен на сайте python."
"org по адресу https://www.python.org/downloads/. Последние исходные коды "
"разработки можно получить по адресу https://github.com/python/cpython/."

#: ../../faq/general.rst:171
msgid ""
"The source distribution is a gzipped tar file containing the complete C "
"source, Sphinx-formatted documentation, Python library modules, example "
"programs, and several useful pieces of freely distributable software.  The "
"source will compile and run out of the box on most UNIX platforms."
msgstr ""
"Дистрибутив исходного кода представляет собой сжатый в формате gzip файл "
"tar, содержащий полный исходный код C, документацию в формате Sphinx, "
"библиотечные модули Python, примеры программ и несколько полезных частей "
"свободно распространяемого программного обеспечения. Исходный код "
"скомпилируется и запустится «из коробки» на большинстве платформ UNIX."

#: ../../faq/general.rst:176
msgid ""
"Consult the `Getting Started section of the Python Developer's Guide "
"<https://devguide.python.org/setup/>`__ for more information on getting the "
"source code and compiling it."
msgstr ""
"Обратитесь к разделу «Начало работы» Руководства разработчика Python "
"<https://devguide.python.org/setup/>`__ для получения дополнительной "
"информации о получении исходного кода и его компиляции."

#: ../../faq/general.rst:182
msgid "How do I get documentation on Python?"
msgstr "Как мне получить документацию по Python?"

#: ../../faq/general.rst:186
msgid ""
"The standard documentation for the current stable version of Python is "
"available at https://docs.python.org/3/.  PDF, plain text, and downloadable "
"HTML versions are also available at https://docs.python.org/3/download.html."
msgstr ""
"Стандартная документация для текущей стабильной версии Python доступна по "
"адресу https://docs.python.org/3/. Версии в формате PDF, обычный текст и "
"загружаемые HTML-версии также доступны по адресу https://docs.python.org/3/"
"download.html."

#: ../../faq/general.rst:190
msgid ""
"The documentation is written in reStructuredText and processed by `the "
"Sphinx documentation tool <https://www.sphinx-doc.org/>`__.  The "
"reStructuredText source for the documentation is part of the Python source "
"distribution."
msgstr ""
"Документация написана в reStructuredText и обрабатывается `инструментом "
"документации Sphinx <https://www.sphinx-doc.org/>`__. Исходный код "
"reStructuredText для документации является частью дистрибутива исходного "
"кода Python."

#: ../../faq/general.rst:196
msgid "I've never programmed before. Is there a Python tutorial?"
msgstr "Я никогда раньше не программировал. Есть ли учебник по Python?"

#: ../../faq/general.rst:198
msgid ""
"There are numerous tutorials and books available.  The standard "
"documentation includes :ref:`tutorial-index`."
msgstr ""
"Доступно множество учебных пособий и книг. Стандартная документация включает:"
"ref:`tutorial-index`."

#: ../../faq/general.rst:201
msgid ""
"Consult `the Beginner's Guide <https://wiki.python.org/moin/"
"BeginnersGuide>`_ to find information for beginning Python programmers, "
"including lists of tutorials."
msgstr ""
"Обратитесь к `Руководству для начинающих <https://wiki.python.org/moin/"
"BeginnersGuide>`_, чтобы найти информацию для начинающих программистов "
"Python, включая списки учебных пособий."

#: ../../faq/general.rst:206
msgid "Is there a newsgroup or mailing list devoted to Python?"
msgstr "Есть ли группа новостей или список рассылки, посвященные Python?"

#: ../../faq/general.rst:208
msgid ""
"There is a newsgroup, :newsgroup:`comp.lang.python`, and a mailing list, "
"`python-list <https://mail.python.org/mailman/listinfo/python-list>`_.  The "
"newsgroup and mailing list are gatewayed into each other -- if you can read "
"news it's unnecessary to subscribe to the mailing list. :newsgroup:`comp."
"lang.python` is high-traffic, receiving hundreds of postings every day, and "
"Usenet readers are often more able to cope with this volume."
msgstr ""
"Существует группа новостей :newsgroup:`comp.lang.python` и список рассылки "
"`python-list <https://mail.python.org/mailman/listinfo/python-list>`_. "
"Группа новостей и список рассылки связаны друг с другом — если вы можете "
"читать новости, нет необходимости подписываться на список рассылки. :"
"newsgroup:`comp.lang.python` имеет большой трафик, ежедневно получает сотни "
"сообщений, и читатели Usenet зачастую более способны справиться с таким "
"объемом."

#: ../../faq/general.rst:215
msgid ""
"Announcements of new software releases and events can be found in comp.lang."
"python.announce, a low-traffic moderated list that receives about five "
"postings per day.  It's available as `the python-announce mailing list "
"<https://mail.python.org/mailman/listinfo/python-announce-list>`_."
msgstr ""

#: ../../faq/general.rst:220
msgid ""
"More info about other mailing lists and newsgroups can be found at https://"
"www.python.org/community/lists/."
msgstr ""
"Дополнительную информацию о других списках рассылки и группах новостей можно "
"найти по адресу https://www.python.org/community/lists/."

#: ../../faq/general.rst:225
msgid "How do I get a beta test version of Python?"
msgstr "Как мне получить бета-тестовую версию Python?"

#: ../../faq/general.rst:227
msgid ""
"Alpha and beta releases are available from https://www.python.org/"
"downloads/.  All releases are announced on the comp.lang.python and comp."
"lang.python.announce newsgroups and on the Python home page at https://www."
"python.org/; an RSS feed of news is available."
msgstr ""
"Альфа- и бета-версии доступны по адресу https://www.python.org/downloads/. "
"Обо всех выпусках объявляется в группах новостей comp.lang.python и comp."
"lang.python.announce, а также на домашней странице Python по адресу https://"
"www.python.org/; доступен RSS-канал новостей."

#: ../../faq/general.rst:232
msgid ""
"You can also access the development version of Python through Git.  See `The "
"Python Developer's Guide <https://devguide.python.org/>`_ for details."
msgstr ""
"Вы также можете получить доступ к разрабатываемой версии Python через Git. "
"Подробности см. в `Руководстве разработчика Python <https://devguide.python."
"org/>`_."

#: ../../faq/general.rst:237
msgid "How do I submit bug reports and patches for Python?"
msgstr "Как отправлять отчеты об ошибках и исправления для Python?"

#: ../../faq/general.rst:239
msgid ""
"To report a bug or submit a patch, please use the Roundup installation at "
"https://bugs.python.org/."
msgstr ""

#: ../../faq/general.rst:242
msgid ""
"You must have a Roundup account to report bugs; this makes it possible for "
"us to contact you if we have follow-up questions.  It will also enable "
"Roundup to send you updates as we act on your bug. If you had previously "
"used SourceForge to report bugs to Python, you can obtain your Roundup "
"password through Roundup's `password reset procedure <https://bugs.python."
"org/user?@template=forgotten>`_."
msgstr ""

#: ../../faq/general.rst:248
msgid ""
"For more information on how Python is developed, consult `the Python "
"Developer's Guide <https://devguide.python.org/>`_."
msgstr ""
"Для получения дополнительной информации о том, как разрабатывается Python, "
"обратитесь к `Руководству разработчика Python <https://devguide.python.org/"
">`_."

#: ../../faq/general.rst:253
msgid "Are there any published articles about Python that I can reference?"
msgstr "Есть ли опубликованные статьи о Python, на которые я могу сослаться?"

#: ../../faq/general.rst:255
msgid "It's probably best to cite your favorite book about Python."
msgstr "Вероятно, лучше всего процитировать вашу любимую книгу о Python."

#: ../../faq/general.rst:257
msgid ""
"The `very first article <https://ir.cwi.nl/pub/18204>`_ about Python was "
"written in 1991 and is now quite outdated."
msgstr ""
"`Самая первая статья <https://ir.cwi.nl/pub/18204>`_ о Python была написана "
"в 1991 году и сейчас сильно устарела."

#: ../../faq/general.rst:260
msgid ""
"Guido van Rossum and Jelke de Boer, \"Interactively Testing Remote Servers "
"Using the Python Programming Language\", CWI Quarterly, Volume 4, Issue 4 "
"(December 1991), Amsterdam, pp 283--303."
msgstr ""
"Гвидо ван Россум и Йелке де Бур, «Интерактивное тестирование удаленных "
"серверов с использованием языка программирования Python», CWI Quarterly, "
"Volume 4, Issue 4 (декабрь 1991 г.), Амстердам, стр. 283–303."

#: ../../faq/general.rst:266
msgid "Are there any books on Python?"
msgstr "Есть ли какие-нибудь книги по Python?"

#: ../../faq/general.rst:268
msgid ""
"Yes, there are many, and more are being published.  See the python.org wiki "
"at https://wiki.python.org/moin/PythonBooks for a list."
msgstr ""
"Да, их много, и публикуются еще больше. Список см. в вики python.org по "
"адресу https://wiki.python.org/moin/PythonBooks."

#: ../../faq/general.rst:271
msgid ""
"You can also search online bookstores for \"Python\" and filter out the "
"Monty Python references; or perhaps search for \"Python\" and \"language\"."
msgstr ""
"Вы также можете выполнить поиск в книжных интернет-магазинах по запросу "
"«Python» и отфильтровать ссылки на Monty Python; или, возможно, найдите "
"«Python» и «язык»."

#: ../../faq/general.rst:276
msgid "Where in the world is www.python.org located?"
msgstr "Где находится www.python.org?"

#: ../../faq/general.rst:278
msgid ""
"The Python project's infrastructure is located all over the world and is "
"managed by the Python Infrastructure Team. Details `here <https://infra.psf."
"io>`__."
msgstr ""
"Инфраструктура проекта Python расположена по всему миру и управляется "
"командой инфраструктуры Python. Подробности `здесь <https://infra.psf.io>`__."

#: ../../faq/general.rst:283
msgid "Why is it called Python?"
msgstr "Почему он называется Питон?"

#: ../../faq/general.rst:285
msgid ""
"When he began implementing Python, Guido van Rossum was also reading the "
"published scripts from `\"Monty Python's Flying Circus\" <https://en."
"wikipedia.org/wiki/Monty_Python>`__, a BBC comedy series from the 1970s.  "
"Van Rossum thought he needed a name that was short, unique, and slightly "
"mysterious, so he decided to call the language Python."
msgstr ""
"Когда он начал внедрять Python, Гвидо ван Россум также читал опубликованные "
"сценарии из «Летающий цирк Монти Пайтона» <https://en.wikipedia.org/wiki/"
"Monty_Python>`__, комедийного сериала BBC 1970-х годов. Ван Россум подумал, "
"что ему нужно короткое, уникальное и немного загадочное имя, поэтому он "
"решил назвать язык Python."

#: ../../faq/general.rst:293
msgid "Do I have to like \"Monty Python's Flying Circus\"?"
msgstr "Должен ли мне нравиться «Летающий цирк Монти Пайтона»?"

#: ../../faq/general.rst:295
msgid "No, but it helps.  :)"
msgstr "Нет, но это помогает. :)"

#: ../../faq/general.rst:299
msgid "Python in the real world"
msgstr "Питон в реальном мире"

#: ../../faq/general.rst:302
msgid "How stable is Python?"
msgstr "Насколько стабилен Python?"

#: ../../faq/general.rst:304
msgid ""
"Very stable.  New, stable releases have been coming out roughly every 6 to "
"18 months since 1991, and this seems likely to continue.  As of version 3.9, "
"Python will have a major new release every 12 months (:pep:`602`)."
msgstr ""

#: ../../faq/general.rst:308
msgid ""
"The developers issue \"bugfix\" releases of older versions, so the stability "
"of existing releases gradually improves.  Bugfix releases, indicated by a "
"third component of the version number (e.g. 3.5.3, 3.6.2), are managed for "
"stability; only fixes for known problems are included in a bugfix release, "
"and it's guaranteed that interfaces will remain the same throughout a series "
"of bugfix releases."
msgstr ""

#: ../../faq/general.rst:315
msgid ""
"The latest stable releases can always be found on the `Python download page "
"<https://www.python.org/downloads/>`_.  There are two production-ready "
"versions of Python: 2.x and 3.x. The recommended version is 3.x, which is "
"supported by most widely used libraries.  Although 2.x is still widely used, "
"`it is not maintained anymore <https://www.python.org/dev/peps/pep-0373/>`_."
msgstr ""

#: ../../faq/general.rst:322
msgid "How many people are using Python?"
msgstr "Сколько людей используют Python?"

#: ../../faq/general.rst:324
msgid ""
"There are probably millions of users, though it's difficult to obtain an "
"exact count."
msgstr ""
"Вероятно, существуют миллионы пользователей, хотя точное число получить "
"сложно."

#: ../../faq/general.rst:327
msgid ""
"Python is available for free download, so there are no sales figures, and "
"it's available from many different sites and packaged with many Linux "
"distributions, so download statistics don't tell the whole story either."
msgstr ""
"Python доступен для бесплатной загрузки, поэтому данных о продажах нет, он "
"доступен на многих разных сайтах и ​​входит в состав многих дистрибутивов "
"Linux, поэтому статистика загрузок также не дает полной картины."

#: ../../faq/general.rst:331
msgid ""
"The comp.lang.python newsgroup is very active, but not all Python users post "
"to the group or even read it."
msgstr ""
"Группа новостей comp.lang.python очень активна, но не все пользователи "
"Python публикуют сообщения в группе или даже читают ее."

#: ../../faq/general.rst:336
msgid "Have any significant projects been done in Python?"
msgstr "Были ли реализованы какие-либо важные проекты на Python?"

#: ../../faq/general.rst:338
msgid ""
"See https://www.python.org/about/success for a list of projects that use "
"Python. Consulting the proceedings for `past Python conferences <https://www."
"python.org/community/workshops/>`_ will reveal contributions from many "
"different companies and organizations."
msgstr ""
"См. https://www.python.org/about/success для получения списка проектов, "
"использующих Python. Просмотр материалов «прошлых конференций Python "
"<https://www.python.org/community/workshops/>» покажет вклад многих "
"различных компаний и организаций."

#: ../../faq/general.rst:343
msgid ""
"High-profile Python projects include `the Mailman mailing list manager "
"<https://www.list.org>`_ and `the Zope application server <https://www.zope."
"dev>`_.  Several Linux distributions, most notably `Red Hat <https://www."
"redhat.com>`_, have written part or all of their installer and system "
"administration software in Python.  Companies that use Python internally "
"include Google, Yahoo, and Lucasfilm Ltd."
msgstr ""
"Среди наиболее известных проектов Python — `менеджер списков рассылки "
"Mailman <https://www.list.org>`_ и `сервер приложений Zope <https://www.zope."
"dev>`_. Некоторые дистрибутивы Linux, в первую очередь Red Hat <https://www."
"redhat.com>`_, частично или полностью написали программы установки и "
"системного администрирования на Python. В число компаний, использующих "
"Python внутри себя, входят Google, Yahoo и Lucasfilm Ltd."

#: ../../faq/general.rst:352
msgid "What new developments are expected for Python in the future?"
msgstr "Какие новые разработки ожидаются в Python в будущем?"

#: ../../faq/general.rst:354
msgid ""
"See https://www.python.org/dev/peps/ for the Python Enhancement Proposals "
"(PEPs). PEPs are design documents describing a suggested new feature for "
"Python, providing a concise technical specification and a rationale.  Look "
"for a PEP titled \"Python X.Y Release Schedule\", where X.Y is a version "
"that hasn't been publicly released yet."
msgstr ""

#: ../../faq/general.rst:360
msgid ""
"New development is discussed on `the python-dev mailing list <https://mail."
"python.org/mailman/listinfo/python-dev/>`_."
msgstr ""

#: ../../faq/general.rst:365
msgid "Is it reasonable to propose incompatible changes to Python?"
msgstr "Разумно ли предлагать несовместимые изменения в Python?"

#: ../../faq/general.rst:367
msgid ""
"In general, no.  There are already millions of lines of Python code around "
"the world, so any change in the language that invalidates more than a very "
"small fraction of existing programs has to be frowned upon.  Even if you can "
"provide a conversion program, there's still the problem of updating all "
"documentation; many books have been written about Python, and we don't want "
"to invalidate them all at a single stroke."
msgstr ""
"В общем, нет. Во всем мире уже существуют миллионы строк кода Python, "
"поэтому любые изменения в языке, которые делают недействительными более чем "
"небольшую часть существующих программ, должны осуждаться. Даже если вы "
"можете предоставить программу преобразования, все равно остается проблема "
"обновления всей документации; О Python написано много книг, и мы не хотим "
"обесценивать их все одним махом."

#: ../../faq/general.rst:374
msgid ""
"Providing a gradual upgrade path is necessary if a feature has to be "
"changed. :pep:`5` describes the procedure followed for introducing backward-"
"incompatible changes while minimizing disruption for users."
msgstr ""
"Если необходимо изменить функцию, необходимо обеспечить поэтапное "
"обновление. :pep:`5` описывает процедуру внесения обратно несовместимых "
"изменений при минимизации неудобств для пользователей."

#: ../../faq/general.rst:380
msgid "Is Python a good language for beginning programmers?"
msgstr "Является ли Python хорошим языком для начинающих программистов?"

#: ../../faq/general.rst:382
msgid "Yes."
msgstr "Да."

#: ../../faq/general.rst:384
msgid ""
"It is still common to start students with a procedural and statically typed "
"language such as Pascal, C, or a subset of C++ or Java.  Students may be "
"better served by learning Python as their first language.  Python has a very "
"simple and consistent syntax and a large standard library and, most "
"importantly, using Python in a beginning programming course lets students "
"concentrate on important programming skills such as problem decomposition "
"and data type design.  With Python, students can be quickly introduced to "
"basic concepts such as loops and procedures.  They can probably even work "
"with user-defined objects in their very first course."
msgstr ""
"По-прежнему принято начинать обучение студентов с процедурного и статически "
"типизированного языка, такого как Pascal, C или подмножества C++ или Java. "
"Студентам будет лучше, если они будут изучать Python в качестве своего "
"родного языка. Python имеет очень простой и последовательный синтаксис и "
"большую стандартную библиотеку, и, что наиболее важно, использование Python "
"в начальном курсе программирования позволяет студентам сконцентрироваться на "
"важных навыках программирования, таких как декомпозиция задач и "
"проектирование типов данных. С помощью Python учащиеся могут быстро "
"познакомиться с базовыми понятиями, такими как циклы и процедуры. Вероятно, "
"они смогут даже работать с объектами, определяемыми пользователем, на самом "
"первом курсе."

#: ../../faq/general.rst:394
msgid ""
"For a student who has never programmed before, using a statically typed "
"language seems unnatural.  It presents additional complexity that the "
"student must master and slows the pace of the course.  The students are "
"trying to learn to think like a computer, decompose problems, design "
"consistent interfaces, and encapsulate data.  While learning to use a "
"statically typed language is important in the long term, it is not "
"necessarily the best topic to address in the students' first programming "
"course."
msgstr ""
"Для студента, который никогда раньше не программировал, использование "
"статически типизированного языка кажется неестественным. Это представляет "
"собой дополнительную сложность, которую студент должен освоить, и замедляет "
"темп курса. Студенты пытаются научиться думать как компьютер, разлагать "
"проблемы, проектировать согласованные интерфейсы и инкапсулировать данные. "
"Хотя обучение использованию статически типизированного языка важно в "
"долгосрочной перспективе, это не обязательно лучшая тема для изучения на "
"первом курсе программирования для студентов."

#: ../../faq/general.rst:402
msgid ""
"Many other aspects of Python make it a good first language.  Like Java, "
"Python has a large standard library so that students can be assigned "
"programming projects very early in the course that *do* something.  "
"Assignments aren't restricted to the standard four-function calculator and "
"check balancing programs.  By using the standard library, students can gain "
"the satisfaction of working on realistic applications as they learn the "
"fundamentals of programming. Using the standard library also teaches "
"students about code reuse.  Third-party modules such as PyGame are also "
"helpful in extending the students' reach."
msgstr ""
"Многие другие аспекты Python делают его хорошим первым языком. Как и Java, "
"Python имеет большую стандартную библиотеку, поэтому на ранних этапах курса "
"студентам могут быть поручены проекты по программированию, которые *делают* "
"что-то. Задания не ограничиваются стандартным калькулятором с четырьмя "
"функциями и программами проверки балансировки. Используя стандартную "
"библиотеку, студенты могут получить удовлетворение от работы над "
"реалистичными приложениями, изучая основы программирования. Использование "
"стандартной библиотеки также учит студентов повторному использованию кода. "
"Сторонние модули, такие как PyGame, также помогают расширить возможности "
"учащихся."

#: ../../faq/general.rst:411
msgid ""
"Python's interactive interpreter enables students to test language features "
"while they're programming.  They can keep a window with the interpreter "
"running while they enter their program's source in another window.  If they "
"can't remember the methods for a list, they can do something like this::"
msgstr ""
"Интерактивный интерпретатор Python позволяет учащимся тестировать "
"возможности языка во время программирования. Они могут оставить окно с "
"работающим интерпретатором, пока вводят исходный код своей программы в "
"другом окне. Если они не могут вспомнить методы списка, они могут сделать "
"что-то вроде этого:"

#: ../../faq/general.rst:440
msgid ""
"With the interpreter, documentation is never far from the student as they "
"are programming."
msgstr ""
"Благодаря интерпретатору документация всегда находится под рукой у студента, "
"пока он программирует."

#: ../../faq/general.rst:443
msgid ""
"There are also good IDEs for Python.  IDLE is a cross-platform IDE for "
"Python that is written in Python using Tkinter. Emacs users will be happy to "
"know that there is a very good Python mode for Emacs.  All of these "
"programming environments provide syntax highlighting, auto-indenting, and "
"access to the interactive interpreter while coding.  Consult `the Python "
"wiki <https://wiki.python.org/moin/PythonEditors>`_ for a full list of "
"Python editing environments."
msgstr ""
"Есть также хорошие IDE для Python. IDLE — это кроссплатформенная IDE для "
"Python, написанная на Python с использованием Tkinter. Пользователи Emacs "
"будут рады узнать, что для Emacs существует очень хороший режим Python. Все "
"эти среды программирования обеспечивают подсветку синтаксиса, автоматические "
"отступы и доступ к интерактивному интерпретатору во время кодирования. "
"Обратитесь к `вики Python <https://wiki.python.org/moin/PythonEditors>`_ для "
"получения полного списка сред редактирования Python."

#: ../../faq/general.rst:451
msgid ""
"If you want to discuss Python's use in education, you may be interested in "
"joining `the edu-sig mailing list <https://www.python.org/community/sigs/"
"current/edu-sig>`_."
msgstr ""
"Если вы хотите обсудить использование Python в образовании, возможно, вам "
"будет интересно присоединиться к списку рассылки edu-sig <https://www.python."
"org/community/sigs/current/edu-sig>_."
