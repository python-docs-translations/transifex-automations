# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# Rafael Fontenelle <rffontenelle@gmail.com>, 2024
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.11\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-01-10 15:26+0000\n"
"PO-Revision-Date: 2023-05-24 02:11+0000\n"
"Last-Translator: Rafael Fontenelle <rffontenelle@gmail.com>, 2024\n"
"Language-Team: Russian (https://app.transifex.com/python-doc/teams/5390/"
"ru/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ru\n"
"Plural-Forms: nplurals=4; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && "
"n%10<=4 && (n%100<12 || n%100>14) ? 1 : n%10==0 || (n%10>=5 && n%10<=9) || "
"(n%100>=11 && n%100<=14)? 2 : 3);\n"

#: ../../faq/gui.rst:5
msgid "Graphic User Interface FAQ"
msgstr "ЧаВо по графическому интерфейсу пользователя"

#: ../../faq/gui.rst:8
msgid "Contents"
msgstr " Содержание"

#: ../../faq/gui.rst:15
msgid "General GUI Questions"
msgstr "Общие вопросы по GUI"

#: ../../faq/gui.rst:18
msgid "What GUI toolkits exist for Python?"
msgstr "Какие GUI инструменты существуют для Python?"

#: ../../faq/gui.rst:20
msgid ""
"Standard builds of Python include an object-oriented interface to the Tcl/Tk "
"widget set, called :ref:`tkinter <Tkinter>`.  This is probably the easiest "
"to install (since it comes included with most `binary distributions <https://"
"www.python.org/downloads/>`_ of Python) and use. For more info about Tk, "
"including pointers to the source, see the `Tcl/Tk home page <https://www.tcl."
"tk>`_.  Tcl/Tk is fully portable to the macOS, Windows, and Unix platforms."
msgstr ""
"Стандартные сборки Python включают объектно-ориентированный интерфейс для "
"набора виджетов Tcl/Tk, который называется :ref:`tkinter <Tkinter>`.  Это, "
"вероятно, самый простой в установке (поскольку он входит в состав "
"большинства `бинарных дистрибутивов <https://www.python.org/downloads/>`_ "
"Python) и использовании. Дополнительную информацию о Tk, включая ссылки на "
"исходный код, смотрите на `домашней странице Tcl/Tk <https://www.tcl.tk>`_.  "
"Tcl/Tk полностью переносим на платформы macOS, Windows и Unix."

#: ../../faq/gui.rst:28
msgid ""
"Depending on what platform(s) you are aiming at, there are also several "
"alternatives. A `list of cross-platform <https://wiki.python.org/moin/"
"GuiProgramming#Cross-Platform_Frameworks>`_ and `platform-specific <https://"
"wiki.python.org/moin/GuiProgramming#Platform-specific_Frameworks>`_ GUI "
"frameworks can be found on the python wiki."
msgstr ""
"В зависимости от того, на какую платформу (платформы) вы ориентируетесь, "
"есть также несколько альтернатив. `Список кросс-платформенных<https://wiki."
"python.org/moin/GuiProgramming#Cross-Platform_Frameworks>`_ и `платформо-"
"зависимых <https://wiki.python.org/moin/GuiProgramming#Platform-"
"specific_Frameworks>`_ фреймворков с графическим интерфейсом можно найти на "
"python wiki."

#: ../../faq/gui.rst:36
msgid "Tkinter questions"
msgstr "Вопросы по Tkinter"

#: ../../faq/gui.rst:39
msgid "How do I freeze Tkinter applications?"
msgstr "Как мне заморозить приложения Tkinter?"

#: ../../faq/gui.rst:41
msgid ""
"Freeze is a tool to create stand-alone applications.  When freezing Tkinter "
"applications, the applications will not be truly stand-alone, as the "
"application will still need the Tcl and Tk libraries."
msgstr ""
"Freeze - это инструмент для создания автономных приложений. При "
"замораживании приложений Tkinter они не будут по-настоящему автономными, "
"поскольку приложению по-прежнему будут нужны библиотеки Tcl и Tk."

#: ../../faq/gui.rst:45
msgid ""
"One solution is to ship the application with the Tcl and Tk libraries, and "
"point to them at run-time using the :envvar:`!TCL_LIBRARY` and :envvar:`!"
"TK_LIBRARY` environment variables."
msgstr ""
"Одним из решений является поставка приложения с библиотеками Tcl и Tk и "
"указание на них во время выполнения с помощью переменных окружения :envvar:`!"
"TCL_LIBRARY` и :envvar:`!TK_LIBRARY`."

#: ../../faq/gui.rst:49
msgid ""
"To get truly stand-alone applications, the Tcl scripts that form the library "
"have to be integrated into the application as well. One tool supporting that "
"is SAM (stand-alone modules), which is part of the Tix distribution (https://"
"tix.sourceforge.net/)."
msgstr ""
"Чтобы получить действительно автономные приложения, скрипты Tcl, из которых "
"состоит библиотека, также должны быть интегрированы в приложение. Одним из "
"инструментов, поддерживающих это, является SAM (stand-alone modules), "
"который является частью дистрибутива Tix (https://tix.sourceforge.net/)."

#: ../../faq/gui.rst:54
msgid ""
"Build Tix with SAM enabled, perform the appropriate call to :c:func:"
"`Tclsam_init`, etc. inside Python's :file:`Modules/tkappinit.c`, and link "
"with libtclsam and libtksam (you might include the Tix libraries as well)."
msgstr ""

#: ../../faq/gui.rst:61
msgid "Can I have Tk events handled while waiting for I/O?"
msgstr "Могу ли я обрабатывать события Tk во время ожидания ввода-вывода?"

#: ../../faq/gui.rst:63
msgid ""
"On platforms other than Windows, yes, and you don't even need threads!  But "
"you'll have to restructure your I/O code a bit.  Tk has the equivalent of "
"Xt's :c:func:`!XtAddInput` call, which allows you to register a callback "
"function which will be called from the Tk mainloop when I/O is possible on a "
"file descriptor.  See :ref:`tkinter-file-handlers`."
msgstr ""
"На платформах, отличных от Windows, да, и вам даже не нужны потоки! Но вам "
"придется немного перестроить свой код ввода-вывода. Tk имеет эквивалент "
"вызова Xt :c:func:`!XtAddInput`, который позволяет вам зарегистрировать "
"функцию обратного вызова, которая будет вызываться из основного цикла Tk, "
"когда возможен ввод-вывод по файловому дескриптору. Смотрите :ref:`tkinter-"
"file-handlers`."

#: ../../faq/gui.rst:71
msgid "I can't get key bindings to work in Tkinter: why?"
msgstr "Я не могу заставить привязки клавиш работать в Tkinter: почему?"

#: ../../faq/gui.rst:73
msgid ""
"An often-heard complaint is that event handlers :ref:`bound <bindings-and-"
"events>` to events with the :meth:`!bind` method don't get handled even when "
"the appropriate key is pressed."
msgstr ""
"Часто можно услышать жалобу на то, что обработчики событий :ref:`bound "
"<bindings-and-events>` привязанные с помощью метода :meth:`!bind` не "
"обрабатываются даже при нажатии соответствующей клавиши."

#: ../../faq/gui.rst:77
msgid ""
"The most common cause is that the widget to which the binding applies "
"doesn't have \"keyboard focus\".  Check out the Tk documentation for the "
"focus command. Usually a widget is given the keyboard focus by clicking in "
"it (but not for labels; see the takefocus option)."
msgstr ""
"Наиболее распространенная причина заключается в том, что виджет, к которому "
"применяется привязка, не имеет \"фокуса клавиатуры\". Ознакомьтесь с "
"документацией по команде focus в технической документации. Обычно виджету "
"задается фокус клавиатуры путем щелчка по нему (но не для меток; см. "
"параметр takefocus)."
