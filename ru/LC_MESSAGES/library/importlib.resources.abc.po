# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# Rafael Fontenelle <rffontenelle@gmail.com>, 2025
# python-doc bot, 2025
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.11\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-23 16:19+0000\n"
"PO-Revision-Date: 2025-09-22 16:50+0000\n"
"Last-Translator: python-doc bot, 2025\n"
"Language-Team: Russian (https://app.transifex.com/python-doc/teams/5390/"
"ru/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ru\n"
"Plural-Forms: nplurals=4; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && "
"n%10<=4 && (n%100<12 || n%100>14) ? 1 : n%10==0 || (n%10>=5 && n%10<=9) || "
"(n%100>=11 && n%100<=14)? 2 : 3);\n"

#: ../../library/importlib.resources.abc.rst:2
msgid ":mod:`importlib.resources.abc` -- Abstract base classes for resources"
msgstr ""

#: ../../library/importlib.resources.abc.rst:7
msgid "**Source code:** :source:`Lib/importlib/resources/abc.py`"
msgstr "**Исходный код:** :source:`Lib/importlib/resources/abc.py`"

#: ../../library/importlib.resources.abc.rst:15
msgid "*Superseded by TraversableResources*"
msgstr "*Заменено TraversableResources*"

#: ../../library/importlib.resources.abc.rst:17
msgid ""
"An :term:`abstract base class` to provide the ability to read *resources*."
msgstr ""
":term:`абстрактный базовый класс`, обеспечивающий возможность чтения "
"*ресурсов*."

#: ../../library/importlib.resources.abc.rst:20
msgid ""
"From the perspective of this ABC, a *resource* is a binary artifact that is "
"shipped within a package. Typically this is something like a data file that "
"lives next to the ``__init__.py`` file of the package. The purpose of this "
"class is to help abstract out the accessing of such data files so that it "
"does not matter if the package and its data file(s) are stored in a e.g. zip "
"file versus on the file system."
msgstr ""

#: ../../library/importlib.resources.abc.rst:28
msgid ""
"For any of methods of this class, a *resource* argument is expected to be a :"
"term:`path-like object` which represents conceptually just a file name. This "
"means that no subdirectory paths should be included in the *resource* "
"argument. This is because the location of the package the reader is for, "
"acts as the \"directory\". Hence the metaphor for directories and file names "
"is packages and resources, respectively. This is also why instances of this "
"class are expected to directly correlate to a specific package (instead of "
"potentially representing multiple packages or a module)."
msgstr ""
"Для любого метода этого класса ожидается, что аргумент *resource* будет "
"объектом, похожим на путь, который концептуально представляет собой просто "
"имя файла. Это означает, что в аргумент *resource* не следует включать пути "
"к подкаталогам. Это связано с тем, что местоположение пакета, для которого "
"предназначено устройство чтения, действует как «каталог». Следовательно, "
"метафорой имен каталогов и файлов являются пакеты и ресурсы соответственно. "
"Именно поэтому ожидается, что экземпляры этого класса будут напрямую "
"соотноситься с конкретным пакетом (вместо того, чтобы потенциально "
"представлять несколько пакетов или модуля)."

#: ../../library/importlib.resources.abc.rst:39
msgid ""
"Loaders that wish to support resource reading are expected to provide a "
"method called ``get_resource_reader(fullname)`` which returns an object "
"implementing this ABC's interface. If the module specified by fullname is "
"not a package, this method should return :const:`None`. An object compatible "
"with this ABC should only be returned when the specified module is a package."
msgstr ""
"Ожидается, что загрузчики, желающие поддерживать чтение ресурсов, "
"предоставят метод get_resource_reader(fullname), который возвращает объект, "
"реализующий этот интерфейс ABC. Если модуль, указанный полным именем, не "
"является пакетом, этот метод должен вернуть :const:`None`. Объект, "
"совместимый с этим ABC, должен быть возвращен только в том случае, если "
"указанный модуль является пакетом."

#: ../../library/importlib.resources.abc.rst:50
msgid ""
"Returns an opened, :term:`file-like object` for binary reading of the "
"*resource*."
msgstr ""
"Возвращает открытый :term:`файлоподобный объект` для двоичного чтения "
"*ресурса*."

#: ../../library/importlib.resources.abc.rst:53
msgid "If the resource cannot be found, :exc:`FileNotFoundError` is raised."
msgstr "Если ресурс не может быть найден, возникает :exc:`FileNotFoundError`."

#: ../../library/importlib.resources.abc.rst:58
msgid "Returns the file system path to the *resource*."
msgstr "Возвращает путь файловой системы к *ресурсу*."

#: ../../library/importlib.resources.abc.rst:60
msgid ""
"If the resource does not concretely exist on the file system, raise :exc:"
"`FileNotFoundError`."
msgstr ""
"Если ресурс конкретно не существует в файловой системе, поднимите :exc:"
"`FileNotFoundError`."

#: ../../library/importlib.resources.abc.rst:65
msgid ""
"Returns ``True`` if the named *name* is considered a resource. :exc:"
"`FileNotFoundError` is raised if *name* does not exist."
msgstr ""
"Возвращает ``True``, если именованное *имя* считается ресурсом. :exc:"
"`FileNotFoundError` возникает, если *name* не существует."

#: ../../library/importlib.resources.abc.rst:70
msgid ""
"Returns an :term:`iterable` of strings over the contents of the package. Do "
"note that it is not required that all names returned by the iterator be "
"actual resources, e.g. it is acceptable to return names for which :meth:"
"`is_resource` would be false."
msgstr ""
"Возвращает :term:`iterable` строк по содержимому пакета. Обратите внимание, "
"что не обязательно, чтобы все имена, возвращаемые итератором, были реальными "
"ресурсами, например, допустимо возвращать имена, для которых :meth:"
"`is_resource` будет ложным."

#: ../../library/importlib.resources.abc.rst:76
msgid ""
"Allowing non-resource names to be returned is to allow for situations where "
"how a package and its resources are stored are known a priori and the non-"
"resource names would be useful. For instance, returning subdirectory names "
"is allowed so that when it is known that the package and resources are "
"stored on the file system then those subdirectory names can be used directly."
msgstr ""
"Разрешить возврат имен, не являющихся ресурсами, необходимо для ситуаций, "
"когда способ хранения пакета и его ресурсов известен априори и имена, не "
"относящиеся к ресурсам, могут оказаться полезными. Например, разрешен "
"возврат имен подкаталогов, чтобы, когда известно, что пакет и ресурсы "
"хранятся в файловой системе, эти имена подкаталогов можно было использовать "
"напрямую."

#: ../../library/importlib.resources.abc.rst:84
msgid "The abstract method returns an iterable of no items."
msgstr "Абстрактный метод возвращает итерацию без элементов."

#: ../../library/importlib.resources.abc.rst:89
msgid ""
"An object with a subset of :class:`pathlib.Path` methods suitable for "
"traversing directories and opening files."
msgstr ""
"Объект с подмножеством методов :class:`pathlib.Path`, подходящих для "
"перемещения по каталогам и открытия файлов."

#: ../../library/importlib.resources.abc.rst:92
msgid ""
"For a representation of the object on the file-system, use :meth:`importlib."
"resources.as_file`."
msgstr ""
"Для представления объекта в файловой системе используйте :meth:`importlib."
"resources.as_file`."

#: ../../library/importlib.resources.abc.rst:99
msgid "Abstract. The base name of this object without any parent references."
msgstr ""
"Абстрактный. Базовое имя этого объекта без каких-либо родительских ссылок."

#: ../../library/importlib.resources.abc.rst:103
msgid "Yield Traversable objects in self."
msgstr "Выдавать проходимые объекты внутри себя."

#: ../../library/importlib.resources.abc.rst:107
msgid "Return True if self is a directory."
msgstr ""

#: ../../library/importlib.resources.abc.rst:111
msgid "Return True if self is a file."
msgstr ""

#: ../../library/importlib.resources.abc.rst:115
#: ../../library/importlib.resources.abc.rst:119
msgid "Return Traversable child in self."
msgstr ""

#: ../../library/importlib.resources.abc.rst:123
msgid ""
"*mode* may be 'r' or 'rb' to open as text or binary. Return a handle "
"suitable for reading (same as :attr:`pathlib.Path.open`)."
msgstr ""
"*mode* может иметь значение «r» или «rb», чтобы открыть его в текстовом или "
"двоичном виде. Возвращает дескриптор, подходящий для чтения (аналогично :"
"attr:`pathlib.Path.open`)."

#: ../../library/importlib.resources.abc.rst:126
msgid ""
"When opening as text, accepts encoding parameters such as those accepted by :"
"class:`io.TextIOWrapper`."
msgstr ""
"При открытии в виде текста принимает параметры кодирования, подобные тем, "
"которые принимаются :class:`io.TextIOWrapper`."

#: ../../library/importlib.resources.abc.rst:131
msgid "Read contents of self as bytes."
msgstr "Прочитайте содержимое себя в виде байтов."

#: ../../library/importlib.resources.abc.rst:135
msgid "Read contents of self as text."
msgstr "Прочитайте содержимое себя в виде текста."

#: ../../library/importlib.resources.abc.rst:140
msgid ""
"An abstract base class for resource readers capable of serving the :meth:"
"`importlib.resources.files` interface. Subclasses :class:`ResourceReader` "
"and provides concrete implementations of the :class:`!ResourceReader`'s "
"abstract methods. Therefore, any loader supplying :class:`!"
"TraversableResources` also supplies :class:`!ResourceReader`."
msgstr ""
"Абстрактный базовый класс для чтения ресурсов, способный обслуживать "
"интерфейс :meth:`importlib.resources.files`. Подклассы :class:"
"`ResourceReader` и предоставляют конкретные реализации абстрактных методов :"
"class:`!ResourceReader`. Следовательно, любой загрузчик, предоставляющий :"
"class:`!TraversableResources`, также предоставляет :class:`!ResourceReader`."

#: ../../library/importlib.resources.abc.rst:147
msgid ""
"Loaders that wish to support resource reading are expected to implement this "
"interface."
msgstr ""
"Ожидается, что загрузчики, желающие поддерживать чтение ресурсов, реализуют "
"этот интерфейс."

#: ../../library/importlib.resources.abc.rst:154
msgid ""
"Returns a :class:`importlib.resources.abc.Traversable` object for the loaded "
"package."
msgstr ""
"Возвращает объект :class:`importlib.resources.abc.Traversable` для "
"загруженного пакета."
