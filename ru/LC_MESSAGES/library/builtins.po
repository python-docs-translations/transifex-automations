# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# Rafael Fontenelle <rffontenelle@gmail.com>, 2024
# Roustam Khamidoulline, 2024
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.12\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-01-17 14:51+0000\n"
"PO-Revision-Date: 2024-05-11 00:33+0000\n"
"Last-Translator: Roustam Khamidoulline, 2024\n"
"Language-Team: Russian (https://app.transifex.com/python-doc/teams/5390/"
"ru/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ru\n"
"Plural-Forms: nplurals=4; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && "
"n%10<=4 && (n%100<12 || n%100>14) ? 1 : n%10==0 || (n%10>=5 && n%10<=9) || "
"(n%100>=11 && n%100<=14)? 2 : 3);\n"

#: ../../library/builtins.rst:2
msgid ":mod:`!builtins` --- Built-in objects"
msgstr ":mod:`!builtins` --- Встроенные объекты"

#: ../../library/builtins.rst:9
msgid ""
"This module provides direct access to all 'built-in' identifiers of Python; "
"for example, ``builtins.open`` is the full name for the built-in function :"
"func:`open`."
msgstr ""
"Этот модуль обеспечивает прямой доступ ко всем «встроенным» идентификаторам "
"Python; например, ``builtins.open`` — это полное имя встроенной функции :"
"func:`open`."

#: ../../library/builtins.rst:12
msgid ""
"This module is not normally accessed explicitly by most applications, but "
"can be useful in modules that provide objects with the same name as a built-"
"in value, but in which the built-in of that name is also needed.  For "
"example, in a module that wants to implement an :func:`open` function that "
"wraps the built-in :func:`open`, this module can be used directly::"
msgstr ""
"Большинство приложений обычно не обращаются к этому модулю явным образом, но "
"он может быть полезен в модулях, которые предоставляют объекты с тем же "
"именем, что и встроенное значение, но в которых также требуется встроенное "
"имя этого имени. Например, в модуле, который хочет реализовать :func:"
"`открыть` функция, которая оборачивает встроенный :func:`открыть` , этот "
"модуль можно использовать напрямую::"

#: ../../library/builtins.rst:18
msgid ""
"import builtins\n"
"\n"
"def open(path):\n"
"    f = builtins.open(path, 'r')\n"
"    return UpperCaser(f)\n"
"\n"
"class UpperCaser:\n"
"    '''Wrapper around a file that converts output to uppercase.'''\n"
"\n"
"    def __init__(self, f):\n"
"        self._f = f\n"
"\n"
"    def read(self, count=-1):\n"
"        return self._f.read(count).upper()\n"
"\n"
"    # ..."
msgstr ""
"import builtins\n"
"\n"
"def open(path):\n"
"    f = builtins.open(path, 'r')\n"
"    return UpperCaser(f)\n"
"\n"
"class UpperCaser:\n"
"    '''Wrapper around a file that converts output to uppercase.'''\n"
"\n"
"    def __init__(self, f):\n"
"        self._f = f\n"
"\n"
"    def read(self, count=-1):\n"
"        return self._f.read(count).upper()\n"
"\n"
"    # ..."

#: ../../library/builtins.rst:35
msgid ""
"As an implementation detail, most modules have the name ``__builtins__`` "
"made available as part of their globals.  The value of ``__builtins__`` is "
"normally either this module or the value of this module's :attr:`~object."
"__dict__` attribute. Since this is an implementation detail, it may not be "
"used by alternate implementations of Python."
msgstr ""
"В качестве детали реализации большинство модулей имеют имя ``__builtins__'' "
"доступны как часть их глобальных переменных. Стоимость ``__builtins__'' "
"обычно это либо этот модуль, либо значение этого модуля :attr:`~object."
"__dict__` атрибут. Поскольку это деталь реализации, она не может "
"использоваться альтернативными реализациями Python."

#: ../../library/builtins.rst:43
msgid ":ref:`built-in-consts`"
msgstr ":ref:`встроенные константы`"

#: ../../library/builtins.rst:44
msgid ":ref:`bltin-exceptions`"
msgstr ":ref:`bltin-исключения`"

#: ../../library/builtins.rst:45
msgid ":ref:`built-in-funcs`"
msgstr ":ref:`встроенные функции`"

#: ../../library/builtins.rst:46
msgid ":ref:`bltin-types`"
msgstr ":ref:`bltin-types`"
