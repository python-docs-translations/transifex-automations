# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# Rafael Fontenelle <rffontenelle@gmail.com>, 2024
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.12\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-01-10 14:49+0000\n"
"PO-Revision-Date: 2024-05-11 00:33+0000\n"
"Last-Translator: Rafael Fontenelle <rffontenelle@gmail.com>, 2024\n"
"Language-Team: Russian (https://app.transifex.com/python-doc/teams/5390/"
"ru/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ru\n"
"Plural-Forms: nplurals=4; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && "
"n%10<=4 && (n%100<12 || n%100>14) ? 1 : n%10==0 || (n%10>=5 && n%10<=9) || "
"(n%100>=11 && n%100<=14)? 2 : 3);\n"

#: ../../library/tempfile.rst:2
msgid ":mod:`!tempfile` --- Generate temporary files and directories"
msgstr ":mod:`!tempfile` --- Создавать временные файлы и каталоги"

#: ../../library/tempfile.rst:9
msgid "**Source code:** :source:`Lib/tempfile.py`"
msgstr "**Исходный код:** :source:`Lib/tempfile.py`"

#: ../../library/tempfile.rst:17
msgid ""
"This module creates temporary files and directories.  It works on all "
"supported platforms. :class:`TemporaryFile`, :class:`NamedTemporaryFile`, :"
"class:`TemporaryDirectory`, and :class:`SpooledTemporaryFile` are high-level "
"interfaces which provide automatic cleanup and can be used as :term:`context "
"managers <context manager>`. :func:`mkstemp` and :func:`mkdtemp` are lower-"
"level functions which require manual cleanup."
msgstr ""
"Этот модуль создает временные файлы и каталоги. Он работает на всех "
"поддерживаемых платформах. :class:`TemporaryFile`, :class:"
"`NamedTemporaryFile`, :class:`TemporaryDirectory` и :class:"
"`SpooledTemporaryFile` — это интерфейсы высокого уровня, которые "
"обеспечивают автоматическую очистку и могут использоваться как :term:"
"`менеджеры контекста <context менеджер>`. :func:`mkstemp` и :func:`mkdtemp` "
"— это функции нижнего уровня, требующие очистки вручную."

#: ../../library/tempfile.rst:24
msgid ""
"All the user-callable functions and constructors take additional arguments "
"which allow direct control over the location and name of temporary files and "
"directories. Files names used by this module include a string of random "
"characters which allows those files to be securely created in shared "
"temporary directories. To maintain backward compatibility, the argument "
"order is somewhat odd; it is recommended to use keyword arguments for "
"clarity."
msgstr ""
"Все вызываемые пользователем функции и конструкторы принимают дополнительные "
"аргументы, которые позволяют напрямую контролировать расположение и имена "
"временных файлов и каталогов. Имена файлов, используемые этим модулем, "
"включают строку случайных символов, что позволяет безопасно создавать эти "
"файлы в общих временных каталогах. Для обеспечения обратной совместимости "
"порядок аргументов несколько странный; для ясности рекомендуется "
"использовать аргументы ключевых слов."

#: ../../library/tempfile.rst:32
msgid "The module defines the following user-callable items:"
msgstr "Модуль определяет следующие вызываемые пользователем элементы:"

#: ../../library/tempfile.rst:36
msgid ""
"Return a :term:`file-like object` that can be used as a temporary storage "
"area. The file is created securely, using the same rules as :func:`mkstemp`. "
"It will be destroyed as soon as it is closed (including an implicit close "
"when the object is garbage collected).  Under Unix, the directory entry for "
"the file is either not created at all or is removed immediately after the "
"file is created.  Other platforms do not support this; your code should not "
"rely on a temporary file created using this function having or not having a "
"visible name in the file system."
msgstr ""
"Возвращает :term:`файлоподобный объект`, который можно использовать в "
"качестве области временного хранения. Файл создается безопасно с "
"использованием тех же правил, что и :func:`mkstemp`. Он будет уничтожен, как "
"только будет закрыт (включая неявное закрытие при сборке мусора). В Unix "
"запись каталога для файла либо не создается вообще, либо удаляется сразу "
"после создания файла. Другие платформы это не поддерживают; ваш код не "
"должен полагаться на временный файл, созданный с помощью этой функции, "
"имеющий или не имеющий видимого имени в файловой системе."

#: ../../library/tempfile.rst:44
msgid ""
"The resulting object can be used as a :term:`context manager` (see :ref:"
"`tempfile-examples`).  On completion of the context or destruction of the "
"file object the temporary file will be removed from the filesystem."
msgstr ""
"Полученный объект можно использовать в качестве контекстного менеджера (см. :"
"ref:`tempfile-examples`). По завершении контекста или уничтожения файлового "
"объекта временный файл будет удален из файловой системы."

#: ../../library/tempfile.rst:49
msgid ""
"The *mode* parameter defaults to ``'w+b'`` so that the file created can be "
"read and written without being closed.  Binary mode is used so that it "
"behaves consistently on all platforms without regard for the data that is "
"stored.  *buffering*, *encoding*, *errors* and *newline* are interpreted as "
"for :func:`open`."
msgstr ""
"Параметр *mode* по умолчанию имеет значение ``'w+b'``, так что созданный "
"файл можно читать и записывать без закрытия. Двоичный режим используется для "
"обеспечения единообразного поведения на всех платформах независимо от "
"хранящихся данных. *буферизация*, *кодирование*, *ошибки* и *новая строка* "
"интерпретируются как :func:`open`."

#: ../../library/tempfile.rst:55
msgid ""
"The *dir*, *prefix* and *suffix* parameters have the same meaning and "
"defaults as with :func:`mkstemp`."
msgstr ""
"Параметры *dir*, *prefix* и *suffix* имеют то же значение и значения по "
"умолчанию, что и для :func:`mkstemp`."

#: ../../library/tempfile.rst:58
msgid ""
"The returned object is a true file object on POSIX platforms.  On other "
"platforms, it is a file-like object whose :attr:`!file` attribute is the "
"underlying true file object."
msgstr ""
"Возвращенный объект является настоящим файловым объектом на платформах "
"POSIX. На других платформах это файлоподобный объект, атрибут которого :attr:"
"`!file` является базовым истинным файловым объектом."

#: ../../library/tempfile.rst:62
msgid ""
"The :py:const:`os.O_TMPFILE` flag is used if it is available and works "
"(Linux-specific, requires Linux kernel 3.11 or later)."
msgstr ""
"Флаг :py:const:`os.O_TMPFILE` используется, если он доступен и работает "
"(зависит от Linux, требуется ядро ​​Linux 3.11 или новее)."

#: ../../library/tempfile.rst:65
msgid ""
"On platforms that are neither Posix nor Cygwin, TemporaryFile is an alias "
"for NamedTemporaryFile."
msgstr ""
"На платформах, которые не являются ни Posix, ни Cygwin, TemporaryFile "
"является псевдонимом NamedTemporaryFile."

#: ../../library/tempfile.rst:68 ../../library/tempfile.rst:137
#: ../../library/tempfile.rst:264
msgid ""
"Raises an :ref:`auditing event <auditing>` ``tempfile.mkstemp`` with "
"argument ``fullpath``."
msgstr ""
"Вызывает :ref:`событие аудита <auditing>``tempfile.mkstemp`` с аргументом "
"``fullpath``."

#: ../../library/tempfile.rst:72
msgid "The :py:const:`os.O_TMPFILE` flag is now used if available."
msgstr "Флаг :py:const:`os.O_TMPFILE` теперь используется, если он доступен."

#: ../../library/tempfile.rst:74 ../../library/tempfile.rst:139
#: ../../library/tempfile.rst:169
msgid "Added *errors* parameter."
msgstr "Добавлен параметр *errors*."

#: ../../library/tempfile.rst:80
msgid ""
"This function operates exactly as :func:`TemporaryFile` does, except the "
"following differences:"
msgstr ""
"Эта функция работает точно так же, как :func:`TemporaryFile`, за исключением "
"следующих отличий:"

#: ../../library/tempfile.rst:83
msgid ""
"This function returns a file that is guaranteed to have a visible name in "
"the file system."
msgstr ""
"Эта функция возвращает файл, который гарантированно имеет видимое имя в "
"файловой системе."

#: ../../library/tempfile.rst:85
msgid ""
"To manage the named file, it extends the parameters of :func:`TemporaryFile` "
"with *delete* and *delete_on_close* parameters that determine whether and "
"how the named file should be automatically deleted."
msgstr ""
"Для управления именованным файлом он расширяет параметры :func:"
"`TemporaryFile` параметрами *delete* и *delete_on_close*, которые "
"определяют, должен ли и каким образом указанный файл быть автоматически "
"удален."

#: ../../library/tempfile.rst:89
msgid ""
"The returned object is always a :term:`file-like object` whose :attr:`!file` "
"attribute is the underlying true file object. This file-like object can be "
"used in a :keyword:`with` statement, just like a normal file.  The name of "
"the temporary file can be retrieved from the :attr:`!name` attribute of the "
"returned file-like object. On Unix, unlike with the :func:`TemporaryFile`, "
"the directory entry does not get unlinked immediately after the file "
"creation."
msgstr ""
"Возвращаемый объект всегда является объектом, подобным файлу, атрибут "
"которого :attr:`!file` является базовым истинным файловым объектом. Этот "
"файлоподобный объект можно использовать в операторе :keyword:`with`, как "
"обычный файл. Имя временного файла можно получить из атрибута :attr:`!name` "
"возвращаемого файлового объекта. В Unix, в отличие от :func:`TemporaryFile`, "
"запись каталога не отключается сразу после создания файла."

#: ../../library/tempfile.rst:97
msgid ""
"If *delete* is true (the default) and *delete_on_close* is true (the "
"default), the file is deleted as soon as it is closed. If *delete* is true "
"and *delete_on_close* is false, the file is deleted on context manager exit "
"only, or else when the :term:`file-like object` is finalized. Deletion is "
"not always guaranteed in this case (see :meth:`object.__del__`). If *delete* "
"is false, the value of *delete_on_close* is ignored."
msgstr ""
"Если *delete* имеет значение true (по умолчанию) и *delete_on_close* имеет "
"значение true (по умолчанию), файл удаляется, как только он закрывается. "
"Если *delete* имеет значение true, а *delete_on_close* имеет значение false, "
"файл удаляется только при выходе из контекстного менеджера или в противном "
"случае, когда завершается :term:`файлоподобный объект`. В этом случае "
"удаление не всегда гарантируется (см. :meth:`object.__del__`). Если *delete* "
"имеет значение false, значение *delete_on_close* игнорируется."

#: ../../library/tempfile.rst:104
msgid ""
"Therefore to use the name of the temporary file to reopen the file after "
"closing it, either make sure not to delete the file upon closure (set the "
"*delete* parameter to be false) or, in case the temporary file is created in "
"a :keyword:`with` statement, set the *delete_on_close* parameter to be "
"false. The latter approach is recommended as it provides assistance in "
"automatic cleaning of the temporary file upon the context manager exit."
msgstr ""
"Поэтому, чтобы использовать имя временного файла для повторного открытия "
"файла после его закрытия, либо убедитесь, что файл не удален при закрытии "
"(установите для параметра *delete* значение false), либо, в случае, если "
"временный файл создается в файле : ключевое слово:`with` установите для "
"параметра *delete_on_close* значение false. Последний подход рекомендуется, "
"поскольку он обеспечивает автоматическую очистку временного файла при выходе "
"из контекстного менеджера."

#: ../../library/tempfile.rst:111
msgid ""
"Opening the temporary file again by its name while it is still open works as "
"follows:"
msgstr ""
"Повторное открытие временного файла по его имени, пока он еще открыт, "
"работает следующим образом:"

#: ../../library/tempfile.rst:114
msgid "On POSIX the file can always be opened again."
msgstr "В POSIX файл всегда можно открыть снова."

#: ../../library/tempfile.rst:115
msgid ""
"On Windows, make sure that at least one of the following conditions are "
"fulfilled:"
msgstr "В Windows убедитесь, что выполнено хотя бы одно из следующих условий:"

#: ../../library/tempfile.rst:118
msgid "*delete* is false"
msgstr "*delete* is false"

#: ../../library/tempfile.rst:119
msgid ""
"additional open shares delete access (e.g. by calling :func:`os.open` with "
"the flag ``O_TEMPORARY``)"
msgstr ""
"дополнительные открытые общие ресурсы удаляют доступ (например, путем "
"вызова :func:`os.open` с флагом ``O_TEMPORARY``)"

#: ../../library/tempfile.rst:121
msgid ""
"*delete* is true but *delete_on_close* is false. Note, that in this case the "
"additional opens that do not share delete access (e.g. created via builtin :"
"func:`open`) must be closed before exiting the context manager, else the :"
"func:`os.unlink` call on context manager exit will fail with a :exc:"
"`PermissionError`."
msgstr ""
"*delete* — это правда, но *delete_on_close* — это ложь. Обратите внимание, "
"что в этом случае дополнительные открытия, которые не имеют общего доступа к "
"удалению (например, созданные с помощью встроенного :func:`open`), должны "
"быть закрыты перед выходом из контекстного менеджера, в противном случае "
"вызов :func:`os.unlink` в контекстном менеджере выход завершится неудачно с "
"ошибкой :exc:`PermissionError`."

#: ../../library/tempfile.rst:127
msgid ""
"On Windows, if *delete_on_close* is false, and the file is created in a "
"directory for which the user lacks delete access, then the :func:`os.unlink` "
"call on exit of the context manager will fail with a :exc:`PermissionError`. "
"This cannot happen when *delete_on_close* is true because delete access is "
"requested by the open, which fails immediately if the requested access is "
"not granted."
msgstr ""
"В Windows, если *delete_on_close* имеет значение false и файл создан в "
"каталоге, для которого у пользователя нет доступа к удалению, то вызов :func:"
"`os.unlink` при выходе из контекстного менеджера завершится с ошибкой :exc: "
"`Ошибка разрешения`. Этого не может произойти, если *delete_on_close* "
"истинно, поскольку доступ на удаление запрашивается при открытии, которое "
"немедленно завершается неудачно, если запрошенный доступ не предоставлен."

#: ../../library/tempfile.rst:134
msgid ""
"On POSIX (only), a process that is terminated abruptly with SIGKILL cannot "
"automatically delete any NamedTemporaryFiles it created."
msgstr ""
"Только в POSIX процесс, который внезапно завершается с помощью SIGKILL, не "
"может автоматически удалить любые созданные им NamedTemporaryFiles."

#: ../../library/tempfile.rst:142
msgid "Added *delete_on_close* parameter."
msgstr "Добавлен параметр *delete_on_close*."

#: ../../library/tempfile.rst:148
msgid ""
"This class operates exactly as :func:`TemporaryFile` does, except that data "
"is spooled in memory until the file size exceeds *max_size*, or until the "
"file's :func:`~io.IOBase.fileno` method is called, at which point the "
"contents are written to disk and operation proceeds as with :func:"
"`TemporaryFile`."
msgstr ""
"Этот класс работает точно так же, как :func:`TemporaryFile`, за исключением "
"того, что данные помещаются в память до тех пор, пока размер файла не "
"превысит *max_size*, или пока не будет вызван метод :func:`~io.IOBase."
"fileno`, при котором В этот момент содержимое записывается на диск, и "
"операция продолжается как с :func:`TemporaryFile`."

#: ../../library/tempfile.rst:156
msgid ""
"The resulting file has one additional method, :meth:`!rollover`, which "
"causes the file to roll over to an on-disk file regardless of its size."
msgstr ""
"Результирующий файл имеет один дополнительный метод :meth:`!rollover`, "
"который заставляет файл перевернуться на файл на диске независимо от его "
"размера."

#: ../../library/tempfile.rst:159
msgid ""
"The returned object is a file-like object whose :attr:`!_file` attribute is "
"either an :class:`io.BytesIO` or :class:`io.TextIOWrapper` object (depending "
"on whether binary or text *mode* was specified) or a true file object, "
"depending on whether :meth:`rollover` has been called.  This file-like "
"object can be used in a :keyword:`with` statement, just like a normal file."
msgstr ""
"Возвращаемый объект представляет собой файлоподобный объект, атрибут :attr:`!"
"_file` которого является либо объектом :class:`io.BytesIO`, либо :class:`io."
"TextIOWrapper` (в зависимости от того, был ли задан двоичный или текстовый "
"режим *mode*). указан) или настоящий файловый объект, в зависимости от того, "
"был ли вызван :meth:`rollover`. Этот файлоподобный объект можно использовать "
"в операторе :keyword:`with`, как обычный файл."

#: ../../library/tempfile.rst:166
msgid "the truncate method now accepts a *size* argument."
msgstr "метод truncate теперь принимает аргумент *size*."

#: ../../library/tempfile.rst:172
msgid ""
"Fully implements the :class:`io.BufferedIOBase` and :class:`io.TextIOBase` "
"abstract base classes (depending on whether binary or text *mode* was "
"specified)."
msgstr ""
"Полностью реализует абстрактные базовые классы :class:`io.BufferedIOBase` и :"
"class:`io.TextIOBase` (в зависимости от того, был ли указан двоичный или "
"текстовый *режим*)."

#: ../../library/tempfile.rst:180
msgid ""
"This class securely creates a temporary directory using the same rules as :"
"func:`mkdtemp`. The resulting object can be used as a :term:`context "
"manager` (see :ref:`tempfile-examples`).  On completion of the context or "
"destruction of the temporary directory object, the newly created temporary "
"directory and all its contents are removed from the filesystem."
msgstr ""
"Этот класс безопасно создает временный каталог, используя те же правила, что "
"и :func:`mkdtemp`. Полученный объект можно использовать в качестве "
"контекстного менеджера (см. :ref:`tempfile-examples`). По завершении "
"контекста или уничтожения объекта временного каталога вновь созданный "
"временный каталог и все его содержимое удаляются из файловой системы."

#: ../../library/tempfile.rst:188
msgid ""
"The directory name can be retrieved from the :attr:`!name` attribute of the "
"returned object.  When the returned object is used as a :term:`context "
"manager`, the :attr:`!name` will be assigned to the target of the :keyword:`!"
"as` clause in the :keyword:`with` statement, if there is one."
msgstr ""
"Имя каталога можно получить из атрибута :attr:`!name` возвращаемого объекта. "
"Когда возвращаемый объект используется в качестве :term:`контекстного "
"менеджера`, :attr:`!name` будет присвоено цели предложения :keyword:`!as` в "
"операторе :keyword:`with`, если он есть."

#: ../../library/tempfile.rst:195
msgid ""
"The directory can be explicitly cleaned up by calling the :meth:`!cleanup` "
"method. If *ignore_cleanup_errors* is true, any unhandled exceptions during "
"explicit or implicit cleanup (such as a :exc:`PermissionError` removing open "
"files on Windows) will be ignored, and the remaining removable items deleted "
"on a \"best-effort\" basis. Otherwise, errors will be raised in whatever "
"context cleanup occurs (the :meth:`!cleanup` call, exiting the context "
"manager, when the object is garbage-collected or during interpreter "
"shutdown)."
msgstr ""
"Каталог можно очистить явно, вызвав метод :meth:`!cleanup`. Если "
"*ignore_cleanup_errors* имеет значение true, любые необработанные исключения "
"во время явной или неявной очистки (например, :exc:`PermissionError` при "
"удалении открытых файлов в Windows) будут игнорироваться, а оставшиеся "
"съемные элементы будут удалены в порядке \"максимальных усилий\". В "
"противном случае при любой очистке контекста будут возникать ошибки (вызов :"
"meth:`!cleanup`, выход из контекстного менеджера, когда объект удаляется "
"сборщиком мусора или во время завершения работы интерпретатора)."

#: ../../library/tempfile.rst:204
msgid ""
"The *delete* parameter can be used to disable cleanup of the directory tree "
"upon exiting the context.  While it may seem unusual for a context manager "
"to disable the action taken when exiting the context, it can be useful "
"during debugging or when you need your cleanup behavior to be conditional "
"based on other logic."
msgstr ""
"Параметр *delete* можно использовать для отключения очистки дерева каталогов "
"при выходе из контекста. Хотя для менеджера контекста может показаться "
"необычным отключение действия, выполняемого при выходе из контекста, это "
"может быть полезно во время отладки или когда вам нужно, чтобы ваше "
"поведение очистки было условным на основе другой логики."

#: ../../library/tempfile.rst:210 ../../library/tempfile.rst:290
msgid ""
"Raises an :ref:`auditing event <auditing>` ``tempfile.mkdtemp`` with "
"argument ``fullpath``."
msgstr ""
"Вызывает :ref:`событие аудита <auditing>``tempfile.mkdtemp`` с аргументом "
"``fullpath``."

#: ../../library/tempfile.rst:214
msgid "Added *ignore_cleanup_errors* parameter."
msgstr "Добавлен параметр *ignore_cleanup_errors*."

#: ../../library/tempfile.rst:217
msgid "Added the *delete* parameter."
msgstr "Добавлен параметр *delete*."

#: ../../library/tempfile.rst:223
msgid ""
"Creates a temporary file in the most secure manner possible.  There are no "
"race conditions in the file's creation, assuming that the platform properly "
"implements the :const:`os.O_EXCL` flag for :func:`os.open`.  The file is "
"readable and writable only by the creating user ID.  If the platform uses "
"permission bits to indicate whether a file is executable, the file is "
"executable by no one.  The file descriptor is not inherited by child "
"processes."
msgstr ""
"Создает временный файл наиболее безопасным способом. При создании файла нет "
"условий гонки, при условии, что платформа правильно реализует флаг :const:"
"`os.O_EXCL` для :func:`os.open`. Файл доступен для чтения и записи только "
"создавшему его идентификатору пользователя. Если платформа использует биты "
"разрешения, чтобы указать, является ли файл исполняемым, файл не может быть "
"исполняемым ни для кого. Дескриптор файла не наследуется дочерними "
"процессами."

#: ../../library/tempfile.rst:231
msgid ""
"Unlike :func:`TemporaryFile`, the user of :func:`mkstemp` is responsible for "
"deleting the temporary file when done with it."
msgstr ""
"В отличие от :func:`TemporaryFile`, пользователь :func:`mkstemp` несет "
"ответственность за удаление временного файла после завершения работы с ним."

#: ../../library/tempfile.rst:234
msgid ""
"If *suffix* is not ``None``, the file name will end with that suffix, "
"otherwise there will be no suffix.  :func:`mkstemp` does not put a dot "
"between the file name and the suffix; if you need one, put it at the "
"beginning of *suffix*."
msgstr ""
"Если *суффикс* не равен «Нет», имя файла будет заканчиваться этим суффиксом, "
"в противном случае суффикса не будет. :func:`mkstemp` не ставит точку между "
"именем файла и суффиксом; если он вам нужен, поместите его в начало "
"*суффикса*."

#: ../../library/tempfile.rst:239
msgid ""
"If *prefix* is not ``None``, the file name will begin with that prefix; "
"otherwise, a default prefix is used.  The default is the return value of :"
"func:`gettempprefix` or :func:`gettempprefixb`, as appropriate."
msgstr ""
"Если *prefix* не равен ``None``, имя файла будет начинаться с этого "
"префикса; в противном случае используется префикс по умолчанию. По умолчанию "
"используется возвращаемое значение :func:`gettempprefix` или :func:"
"`gettempprefixb`, в зависимости от ситуации."

#: ../../library/tempfile.rst:243
msgid ""
"If *dir* is not ``None``, the file will be created in that directory; "
"otherwise, a default directory is used.  The default directory is chosen "
"from a platform-dependent list, but the user of the application can control "
"the directory location by setting the *TMPDIR*, *TEMP* or *TMP* environment "
"variables.  There is thus no guarantee that the generated filename will have "
"any nice properties, such as not requiring quoting when passed to external "
"commands via ``os.popen()``."
msgstr ""
"Если *dir* не ``None``, файл будет создан в этом каталоге; в противном "
"случае используется каталог по умолчанию. Каталог по умолчанию выбирается из "
"списка, зависящего от платформы, но пользователь приложения может управлять "
"расположением каталога, устанавливая переменные среды *TMPDIR*, *TEMP* или "
"*TMP*. Таким образом, нет никакой гарантии, что сгенерированное имя файла "
"будет иметь какие-либо приятные свойства, например, не будет требовать "
"заключения в кавычки при передаче внешним командам через ``os.popen()``."

#: ../../library/tempfile.rst:251
msgid ""
"If any of *suffix*, *prefix*, and *dir* are not ``None``, they must be the "
"same type. If they are bytes, the returned name will be bytes instead of "
"str. If you want to force a bytes return value with otherwise default "
"behavior, pass ``suffix=b''``."
msgstr ""
"Если какой-либо из *suffix*, *prefix* и *dir* не равен None, они должны быть "
"одного типа. Если они байтовые, возвращаемое имя будет байтовым, а не str. "
"Если вы хотите принудительно возвращать значение в байтах с поведением по "
"умолчанию, передайте ``suffix=b''``."

#: ../../library/tempfile.rst:257
msgid ""
"If *text* is specified and true, the file is opened in text mode. Otherwise, "
"(the default) the file is opened in binary mode."
msgstr ""
"Если указано *text* и оно истинно, файл открывается в текстовом режиме. В "
"противном случае (по умолчанию) файл открывается в двоичном режиме."

#: ../../library/tempfile.rst:260
msgid ""
":func:`mkstemp` returns a tuple containing an OS-level handle to an open "
"file (as would be returned by :func:`os.open`) and the absolute pathname of "
"that file, in that order."
msgstr ""
":func:`mkstemp` возвращает кортеж, содержащий дескриптор уровня ОС открытого "
"файла (который был бы возвращен :func:`os.open`) и абсолютный путь к этому "
"файлу в указанном порядке."

#: ../../library/tempfile.rst:266 ../../library/tempfile.rst:292
msgid ""
"*suffix*, *prefix*, and *dir* may now be supplied in bytes in order to "
"obtain a bytes return value.  Prior to this, only str was allowed. *suffix* "
"and *prefix* now accept and default to ``None`` to cause an appropriate "
"default value to be used."
msgstr ""
"*suffix*, *prefix* и *dir* теперь можно указывать в байтах, чтобы получить "
"возвращаемое значение в байтах. До этого разрешалось использовать только "
"str. *suffix* и *prefix* теперь принимаются и по умолчанию имеют значение "
"``None``, чтобы использовать подходящее значение по умолчанию."

#: ../../library/tempfile.rst:272 ../../library/tempfile.rst:298
msgid "The *dir* parameter now accepts a :term:`path-like object`."
msgstr "Параметр *dir* теперь принимает объект, похожий на путь."

#: ../../library/tempfile.rst:278
msgid ""
"Creates a temporary directory in the most secure manner possible. There are "
"no race conditions in the directory's creation.  The directory is readable, "
"writable, and searchable only by the creating user ID."
msgstr ""
"Создает временный каталог наиболее безопасным способом. При создании "
"каталога нет условий гонки. Каталог доступен для чтения, записи и поиска "
"только по идентификатору создающего пользователя."

#: ../../library/tempfile.rst:282
msgid ""
"The user of :func:`mkdtemp` is responsible for deleting the temporary "
"directory and its contents when done with it."
msgstr ""
"Пользователь :func:`mkdtemp` несет ответственность за удаление временного "
"каталога и его содержимого после завершения работы с ним."

#: ../../library/tempfile.rst:285
msgid ""
"The *prefix*, *suffix*, and *dir* arguments are the same as for :func:"
"`mkstemp`."
msgstr ""
"Аргументы *prefix*, *suffix* и *dir* такие же, как и для :func:`mkstemp`."

#: ../../library/tempfile.rst:288
msgid ":func:`mkdtemp` returns the absolute pathname of the new directory."
msgstr ":func:`mkdtemp` возвращает абсолютный путь к новому каталогу."

#: ../../library/tempfile.rst:301
msgid ""
":func:`mkdtemp` now always returns an absolute path, even if *dir* is "
"relative."
msgstr ""
":func:`mkdtemp` теперь всегда возвращает абсолютный путь, даже если *dir* "
"является относительным."

#: ../../library/tempfile.rst:307
msgid ""
"Return the name of the directory used for temporary files. This defines the "
"default value for the *dir* argument to all functions in this module."
msgstr ""
"Возвращает имя каталога, используемого для временных файлов. Это определяет "
"значение по умолчанию для аргумента *dir* для всех функций в этом модуле."

#: ../../library/tempfile.rst:311
msgid ""
"Python searches a standard list of directories to find one which the calling "
"user can create files in.  The list is:"
msgstr ""
"Python выполняет поиск в стандартном списке каталогов, чтобы найти тот, в "
"котором вызывающий пользователь может создавать файлы. Список следующий:"

#: ../../library/tempfile.rst:314
msgid "The directory named by the :envvar:`TMPDIR` environment variable."
msgstr "Каталог, указанный в переменной среды :envvar:`TMPDIR`."

#: ../../library/tempfile.rst:316
msgid "The directory named by the :envvar:`TEMP` environment variable."
msgstr "Каталог, указанный в переменной среды :envvar:`TEMP`."

#: ../../library/tempfile.rst:318
msgid "The directory named by the :envvar:`TMP` environment variable."
msgstr "Каталог, указанный в переменной среды :envvar:`TMP`."

#: ../../library/tempfile.rst:320
msgid "A platform-specific location:"
msgstr "Местоположение, зависящее от платформы:"

#: ../../library/tempfile.rst:322
msgid ""
"On Windows, the directories :file:`C:\\\\TEMP`, :file:`C:\\\\TMP`, :file:`\\"
"\\TEMP`, and :file:`\\\\TMP`, in that order."
msgstr ""
"В Windows это каталоги :file:`C:\\\\TEMP`, :file:`C:\\\\TMP`, :file:`\\"
"\\TEMP` и :file:`\\\\TMP` в указанном порядке."

#: ../../library/tempfile.rst:325
msgid ""
"On all other platforms, the directories :file:`/tmp`, :file:`/var/tmp`, and :"
"file:`/usr/tmp`, in that order."
msgstr ""
"На всех других платформах каталоги :file:`/tmp`, :file:`/var/tmp` и :file:`/"
"usr/tmp` в указанном порядке."

#: ../../library/tempfile.rst:328
msgid "As a last resort, the current working directory."
msgstr "В крайнем случае текущий рабочий каталог."

#: ../../library/tempfile.rst:330
msgid ""
"The result of this search is cached, see the description of :data:`tempdir` "
"below."
msgstr "Результат этого поиска кэшируется, см. описание :data:`tempdir` ниже."

#: ../../library/tempfile.rst:335
msgid ""
"Always returns a str.  Previously it would return any :data:`tempdir` value "
"regardless of type so long as it was not ``None``."
msgstr ""
"Всегда возвращает ул. Раньше он возвращал любое значение :data:`tempdir` "
"независимо от типа, если оно не было ``None``."

#: ../../library/tempfile.rst:340
msgid "Same as :func:`gettempdir` but the return value is in bytes."
msgstr ""
"То же, что и :func:`gettempdir`, но возвращаемое значение находится в байтах."

#: ../../library/tempfile.rst:346
msgid ""
"Return the filename prefix used to create temporary files.  This does not "
"contain the directory component."
msgstr ""
"Возвращает префикс имени файла, используемый для создания временных файлов. "
"Он не содержит компонента каталога."

#: ../../library/tempfile.rst:351
msgid "Same as :func:`gettempprefix` but the return value is in bytes."
msgstr ""
"То же, что и :func:`gettempprefix`, но возвращаемое значение находится в "
"байтах."

#: ../../library/tempfile.rst:355
msgid ""
"The module uses a global variable to store the name of the directory used "
"for temporary files returned by :func:`gettempdir`.  It can be set directly "
"to override the selection process, but this is discouraged. All functions in "
"this module take a *dir* argument which can be used to specify the "
"directory. This is the recommended approach that does not surprise other "
"unsuspecting code by changing global API behavior."
msgstr ""
"Модуль использует глобальную переменную для хранения имени каталога, "
"используемого для временных файлов, возвращаемых :func:`gettempdir`. Его "
"можно настроить непосредственно для отмены процесса выбора, но это не "
"рекомендуется. Все функции в этом модуле принимают аргумент *dir*, который "
"можно использовать для указания каталога. Это рекомендуемый подход, который "
"не удивляет ничего не подозревающий код изменением глобального поведения API."

#: ../../library/tempfile.rst:364
msgid ""
"When set to a value other than ``None``, this variable defines the default "
"value for the *dir* argument to the functions defined in this module, "
"including its type, bytes or str.  It cannot be a :term:`path-like object`."
msgstr ""
"Если для этой переменной установлено значение, отличное от ``None``, эта "
"переменная определяет значение по умолчанию для аргумента *dir* для функций, "
"определенных в этом модуле, включая его тип, байты или строку. Это не может "
"быть :term:`объект, похожий на путь`."

#: ../../library/tempfile.rst:369
msgid ""
"If ``tempdir`` is ``None`` (the default) at any call to any of the above "
"functions except :func:`gettempprefix` it is initialized following the "
"algorithm described in :func:`gettempdir`."
msgstr ""
"Если tempdir имеет значение None (по умолчанию) при любом вызове любой из "
"вышеперечисленных функций, кроме :func:`gettempprefix`, она инициализируется "
"в соответствии с алгоритмом, описанным в :func:`gettempdir`."

#: ../../library/tempfile.rst:375
msgid ""
"Beware that if you set ``tempdir`` to a bytes value, there is a nasty side "
"effect: The global default return type of :func:`mkstemp` and :func:"
"`mkdtemp` changes to bytes when no explicit ``prefix``, ``suffix``, or "
"``dir`` arguments of type str are supplied. Please do not write code "
"expecting or depending on this. This awkward behavior is maintained for "
"compatibility with the historical implementation."
msgstr ""
"Помните, что если вы установите для ``tempdir`` значение в байтах, возникнет "
"неприятный побочный эффект: глобальный тип возвращаемого значения по "
"умолчанию для :func:`mkstemp` и :func:`mkdtemp` изменится на байты, если нет "
"явного ``префикса. Предоставляются аргументы ``, ``suffix`` или ``dir`` типа "
"str. Пожалуйста, не пишите код, ожидая или завися от этого. Это неловкое "
"поведение сохраняется для совместимости с исторической реализацией."

#: ../../library/tempfile.rst:386
msgid "Examples"
msgstr "Примеры"

#: ../../library/tempfile.rst:388
msgid "Here are some examples of typical usage of the :mod:`tempfile` module::"
msgstr ""
"Вот несколько примеров типичного использования модуля :mod:`tempfile`::"

#: ../../library/tempfile.rst:390
msgid ""
">>> import tempfile\n"
"\n"
"# create a temporary file and write some data to it\n"
">>> fp = tempfile.TemporaryFile()\n"
">>> fp.write(b'Hello world!')\n"
"# read data from file\n"
">>> fp.seek(0)\n"
">>> fp.read()\n"
"b'Hello world!'\n"
"# close the file, it will be removed\n"
">>> fp.close()\n"
"\n"
"# create a temporary file using a context manager\n"
">>> with tempfile.TemporaryFile() as fp:\n"
"...     fp.write(b'Hello world!')\n"
"...     fp.seek(0)\n"
"...     fp.read()\n"
"b'Hello world!'\n"
">>>\n"
"# file is now closed and removed\n"
"\n"
"# create a temporary file using a context manager\n"
"# close the file, use the name to open the file again\n"
">>> with tempfile.NamedTemporaryFile(delete_on_close=False) as fp:\n"
"...     fp.write(b'Hello world!')\n"
"...     fp.close()\n"
"... # the file is closed, but not removed\n"
"... # open the file again by using its name\n"
"...     with open(fp.name, mode='rb') as f:\n"
"...         f.read()\n"
"b'Hello world!'\n"
">>>\n"
"# file is now removed\n"
"\n"
"# create a temporary directory using the context manager\n"
">>> with tempfile.TemporaryDirectory() as tmpdirname:\n"
"...     print('created temporary directory', tmpdirname)\n"
">>>\n"
"# directory and contents have been removed"
msgstr ""
">>> import tempfile\n"
"\n"
"# create a temporary file and write some data to it\n"
">>> fp = tempfile.TemporaryFile()\n"
">>> fp.write(b'Hello world!')\n"
"# read data from file\n"
">>> fp.seek(0)\n"
">>> fp.read()\n"
"b'Hello world!'\n"
"# close the file, it will be removed\n"
">>> fp.close()\n"
"\n"
"# create a temporary file using a context manager\n"
">>> with tempfile.TemporaryFile() as fp:\n"
"...     fp.write(b'Hello world!')\n"
"...     fp.seek(0)\n"
"...     fp.read()\n"
"b'Hello world!'\n"
">>>\n"
"# file is now closed and removed\n"
"\n"
"# create a temporary file using a context manager\n"
"# close the file, use the name to open the file again\n"
">>> with tempfile.NamedTemporaryFile(delete_on_close=False) as fp:\n"
"...     fp.write(b'Hello world!')\n"
"...     fp.close()\n"
"... # the file is closed, but not removed\n"
"... # open the file again by using its name\n"
"...     with open(fp.name, mode='rb') as f:\n"
"...         f.read()\n"
"b'Hello world!'\n"
">>>\n"
"# file is now removed\n"
"\n"
"# create a temporary directory using the context manager\n"
">>> with tempfile.TemporaryDirectory() as tmpdirname:\n"
"...     print('created temporary directory', tmpdirname)\n"
">>>\n"
"# directory and contents have been removed"

#: ../../library/tempfile.rst:433
msgid "Deprecated functions and variables"
msgstr "Устаревшие функции и переменные"

#: ../../library/tempfile.rst:435
msgid ""
"A historical way to create temporary files was to first generate a file name "
"with the :func:`mktemp` function and then create a file using this name. "
"Unfortunately this is not secure, because a different process may create a "
"file with this name in the time between the call to :func:`mktemp` and the "
"subsequent attempt to create the file by the first process. The solution is "
"to combine the two steps and create the file immediately. This approach is "
"used by :func:`mkstemp` and the other functions described above."
msgstr ""
"Исторический способ создания временных файлов заключался в том, чтобы "
"сначала сгенерировать имя файла с помощью функции :func:`mktemp`, а затем "
"создать файл, используя это имя. К сожалению, это небезопасно, поскольку "
"другой процесс может создать файл с этим именем в период между вызовом :func:"
"`mktemp` и последующей попыткой создать файл первым процессом. Решение "
"состоит в том, чтобы объединить эти два шага и немедленно создать файл. Этот "
"подход используется :func:`mkstemp` и другими функциями, описанными выше."

#: ../../library/tempfile.rst:446
msgid "Use :func:`mkstemp` instead."
msgstr "Вместо этого используйте :func:`mkstemp`."

#: ../../library/tempfile.rst:449
msgid ""
"Return an absolute pathname of a file that did not exist at the time the "
"call is made.  The *prefix*, *suffix*, and *dir* arguments are similar to "
"those of :func:`mkstemp`, except that bytes file names, ``suffix=None`` and "
"``prefix=None`` are not supported."
msgstr ""
"Возвращает абсолютный путь к файлу, который не существовал на момент "
"выполнения вызова. Аргументы *prefix*, *suffix* и *dir* аналогичны "
"аргументам :func:`mkstemp`, за исключением того, что байтовые имена файлов, "
"``suffix=None`` и ``prefix=None`` не поддерживаются. ."

#: ../../library/tempfile.rst:456
msgid ""
"Use of this function may introduce a security hole in your program.  By the "
"time you get around to doing anything with the file name it returns, someone "
"else may have beaten you to the punch.  :func:`mktemp` usage can be replaced "
"easily with :func:`NamedTemporaryFile`, passing it the ``delete=False`` "
"parameter::"
msgstr ""
"Использование этой функции может создать дыру в безопасности вашей "
"программы. К тому времени, как вы что-нибудь сделаете с возвращаемым именем "
"файла, кто-то другой, возможно, опередит вас. Использование :func:`mktemp` "
"можно легко заменить на :func:`NamedTemporaryFile`, передав ему параметр "
"``delete=False``::"

#: ../../library/tempfile.rst:462
msgid ""
">>> f = NamedTemporaryFile(delete=False)\n"
">>> f.name\n"
"'/tmp/tmptjujjt'\n"
">>> f.write(b\"Hello World!\\n\")\n"
"13\n"
">>> f.close()\n"
">>> os.unlink(f.name)\n"
">>> os.path.exists(f.name)\n"
"False"
msgstr ""
">>> f = NamedTemporaryFile(delete=False)\n"
">>> f.name\n"
"'/tmp/tmptjujjt'\n"
">>> f.write(b\"Hello World!\\n\")\n"
"13\n"
">>> f.close()\n"
">>> os.unlink(f.name)\n"
">>> os.path.exists(f.name)\n"
"False"

#: ../../library/tempfile.rst:11
msgid "temporary"
msgstr "временный"

#: ../../library/tempfile.rst:11
msgid "file name"
msgstr "имя файла"

#: ../../library/tempfile.rst:11
msgid "file"
msgstr "файл"
