# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# Rafael Fontenelle <rffontenelle@gmail.com>, 2024
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.10\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-01-10 16:06+0000\n"
"PO-Revision-Date: 2022-11-05 17:22+0000\n"
"Last-Translator: Rafael Fontenelle <rffontenelle@gmail.com>, 2024\n"
"Language-Team: Russian (https://app.transifex.com/python-doc/teams/5390/"
"ru/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ru\n"
"Plural-Forms: nplurals=4; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && "
"n%10<=4 && (n%100<12 || n%100>14) ? 1 : n%10==0 || (n%10>=5 && n%10<=9) || "
"(n%100>=11 && n%100<=14)? 2 : 3);\n"

#: ../../library/getopt.rst:2
msgid ":mod:`getopt` --- C-style parser for command line options"
msgstr ""

#: ../../library/getopt.rst:8
msgid "**Source code:** :source:`Lib/getopt.py`"
msgstr "**Исходный код:** :source:`Lib/getopt.py`"

#: ../../library/getopt.rst:12
msgid ""
"The :mod:`getopt` module is a parser for command line options whose API is "
"designed to be familiar to users of the C :c:func:`getopt` function. Users "
"who are unfamiliar with the C :c:func:`getopt` function or who would like to "
"write less code and get better help and error messages should consider using "
"the :mod:`argparse` module instead."
msgstr ""
"Модуль :mod:`getopt` — это анализатор параметров командной строки, API "
"которого разработан так, чтобы быть знакомым пользователям функции C :c:func:"
"`getopt`. Пользователям, которые незнакомы с функцией C :c:func:`getopt` или "
"которым хотелось бы писать меньше кода и получать более качественную справку "
"и сообщения об ошибках, следует рассмотреть возможность использования вместо "
"этого модуля :mod:`argparse`."

#: ../../library/getopt.rst:20
msgid ""
"This module helps scripts to parse the command line arguments in ``sys."
"argv``. It supports the same conventions as the Unix :c:func:`getopt` "
"function (including the special meanings of arguments of the form '``-``' "
"and '``--``').  Long options similar to those supported by GNU software may "
"be used as well via an optional third argument."
msgstr ""
"Этот модуль помогает сценариям анализировать аргументы командной строки в "
"``sys.argv``. Она поддерживает те же соглашения, что и функция Unix :c:func:"
"`getopt` (включая специальные значения аргументов формы '``-``' и ```--``'). "
"Длинные параметры, подобные тем, которые поддерживаются программным "
"обеспечением GNU, также могут использоваться через необязательный третий "
"аргумент."

#: ../../library/getopt.rst:26
msgid "This module provides two functions and an exception:"
msgstr "Этот модуль предоставляет две функции и исключение:"

#: ../../library/getopt.rst:32
msgid ""
"Parses command line options and parameter list.  *args* is the argument list "
"to be parsed, without the leading reference to the running program. "
"Typically, this means ``sys.argv[1:]``. *shortopts* is the string of option "
"letters that the script wants to recognize, with options that require an "
"argument followed by a colon (``':'``; i.e., the same format that Unix :c:"
"func:`getopt` uses)."
msgstr ""
"Анализирует параметры командной строки и список параметров. *args* — это "
"список аргументов, подлежащих анализу, без ведущей ссылки на работающую "
"программу. Обычно это означает ``sys.argv[1:]``. *shortopts* — это строка "
"букв опций, которые скрипт хочет распознать, с опциями, которые требуют "
"аргумента, за которым следует двоеточие (``':'``; т. е. тот же формат, что и "
"Unix :c:func:`getopt` использует)."

#: ../../library/getopt.rst:40
msgid ""
"Unlike GNU :c:func:`getopt`, after a non-option argument, all further "
"arguments are considered also non-options. This is similar to the way non-"
"GNU Unix systems work."
msgstr ""
"В отличие от GNU :c:func:`getopt`, после аргумента, не являющегося опцией, "
"все дальнейшие аргументы также считаются неопциональными. Это похоже на то, "
"как работают системы Unix, отличные от GNU."

#: ../../library/getopt.rst:44
msgid ""
"*longopts*, if specified, must be a list of strings with the names of the "
"long options which should be supported.  The leading ``'--'`` characters "
"should not be included in the option name.  Long options which require an "
"argument should be followed by an equal sign (``'='``).  Optional arguments "
"are not supported.  To accept only long options, *shortopts* should be an "
"empty string.  Long options on the command line can be recognized so long as "
"they provide a prefix of the option name that matches exactly one of the "
"accepted options.  For example, if *longopts* is ``['foo', 'frob']``, the "
"option ``--fo`` will match as ``--foo``, but ``--f`` will not match "
"uniquely, so :exc:`GetoptError` will be raised."
msgstr ""
"*longopts*, если указано, должен представлять собой список строк с именами "
"длинных опций, которые должны поддерживаться. В имя опции не следует "
"включать ведущие символы ``'--'``. Длинные опции, требующие аргумента, "
"должны сопровождаться знаком равенства (``'='``). Необязательные аргументы "
"не поддерживаются. Чтобы принимать только длинные параметры, *shortopts* "
"должно быть пустой строкой. Длинные параметры в командной строке можно "
"распознать, если они содержат префикс имени параметра, который точно "
"соответствует одному из принятых параметров. Например, если *longopts* равен "
"``['foo', 'frob']``, опция ``--fo`` будет соответствовать ``--foo``, но ``--"
"f`` не будет однозначно совпадать, поэтому будет выдано :exc:`GetoptError`."

#: ../../library/getopt.rst:55
msgid ""
"The return value consists of two elements: the first is a list of ``(option, "
"value)`` pairs; the second is the list of program arguments left after the "
"option list was stripped (this is a trailing slice of *args*).  Each option-"
"and-value pair returned has the option as its first element, prefixed with a "
"hyphen for short options (e.g., ``'-x'``) or two hyphens for long options (e."
"g., ``'--long-option'``), and the option argument as its second element, or "
"an empty string if the option has no argument.  The options occur in the "
"list in the same order in which they were found, thus allowing multiple "
"occurrences.  Long and short options may be mixed."
msgstr ""
"Возвращаемое значение состоит из двух элементов: первый — это список пар "
"«(опция, значение)»; второй — это список аргументов программы, оставшихся "
"после удаления списка опций (это конечный фрагмент *args*). Каждая "
"возвращаемая пара «опция-значение» имеет опцию в качестве первого элемента, "
"с префиксом дефиса для коротких опций (например, ``'-x'``) или двух дефисов "
"для длинных опций (например, ``'--long -option'``) и аргумент опции в "
"качестве второго элемента или пустую строку, если опция не имеет аргумента. "
"Опции появляются в списке в том же порядке, в котором они были найдены, что "
"позволяет использовать их несколько раз. Длинные и короткие опционы могут "
"быть смешанными."

#: ../../library/getopt.rst:68
msgid ""
"This function works like :func:`getopt`, except that GNU style scanning mode "
"is used by default. This means that option and non-option arguments may be "
"intermixed. The :func:`getopt` function stops processing options as soon as "
"a non-option argument is encountered."
msgstr ""
"Эта функция работает как :func:`getopt`, за исключением того, что по "
"умолчанию используется режим сканирования в стиле GNU. Это означает, что "
"опциональные и неопционные аргументы могут быть смешанными. Функция :func:"
"`getopt` прекращает обработку опций, как только встречается аргумент, не "
"являющийся опцией."

#: ../../library/getopt.rst:73
msgid ""
"If the first character of the option string is ``'+'``, or if the "
"environment variable :envvar:`POSIXLY_CORRECT` is set, then option "
"processing stops as soon as a non-option argument is encountered."
msgstr ""
"Если первый символ строки параметра — ``'+'`` или если установлена ​​"
"переменная среды :envvar:`POSIXLY_CORRECT`, то обработка параметра "
"прекращается, как только встречается аргумент, не являющийся параметром."

#: ../../library/getopt.rst:80
msgid ""
"This is raised when an unrecognized option is found in the argument list or "
"when an option requiring an argument is given none. The argument to the "
"exception is a string indicating the cause of the error.  For long options, "
"an argument given to an option which does not require one will also cause "
"this exception to be raised.  The attributes :attr:`msg` and :attr:`opt` "
"give the error message and related option; if there is no specific option to "
"which the exception relates, :attr:`opt` is an empty string."
msgstr ""
"Это возникает, когда в списке аргументов обнаруживается нераспознанная опция "
"или когда опции, требующей аргумента, не присвоено ни одного. Аргументом "
"исключения является строка, указывающая причину ошибки. Для длинных опций "
"аргумент, переданный опции, которая не требует этого, также приведет к "
"возникновению этого исключения. Атрибуты :attr:`msg` и :attr:`opt` передают "
"сообщение об ошибке и соответствующую опцию; если нет конкретной опции, к "
"которой относится исключение, :attr:`opt` — пустая строка."

#: ../../library/getopt.rst:91
msgid "Alias for :exc:`GetoptError`; for backward compatibility."
msgstr "Псевдоним для :exc:`GetoptError`; для обратной совместимости."

#: ../../library/getopt.rst:93
msgid "An example using only Unix style options:"
msgstr "Пример использования только параметров стиля Unix:"

#: ../../library/getopt.rst:105
msgid "Using long option names is equally easy:"
msgstr "Использовать длинные имена опций одинаково просто:"

#: ../../library/getopt.rst:118
msgid "In a script, typical usage is something like this::"
msgstr "В сценарии типичное использование выглядит примерно так:"

#: ../../library/getopt.rst:147
msgid ""
"Note that an equivalent command line interface could be produced with less "
"code and more informative help and error messages by using the :mod:"
"`argparse` module::"
msgstr ""
"Обратите внимание, что эквивалентный интерфейс командной строки можно "
"создать с меньшим количеством кода и более информативными справочными "
"сообщениями и сообщениями об ошибках, используя модуль :mod:`argparse`::"

#: ../../library/getopt.rst:162
msgid "Module :mod:`argparse`"
msgstr "Модуль :mod:`argparse`"

#: ../../library/getopt.rst:163
msgid "Alternative command line option and argument parsing library."
msgstr ""
"Альтернативный параметр командной строки и библиотека анализа аргументов."
