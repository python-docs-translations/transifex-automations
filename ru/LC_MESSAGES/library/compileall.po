# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# Rafael Fontenelle <rffontenelle@gmail.com>, 2024
# Roustam Khamidoulline, 2024
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.12\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-01-17 14:51+0000\n"
"PO-Revision-Date: 2024-05-11 00:33+0000\n"
"Last-Translator: Roustam Khamidoulline, 2024\n"
"Language-Team: Russian (https://app.transifex.com/python-doc/teams/5390/"
"ru/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ru\n"
"Plural-Forms: nplurals=4; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && "
"n%10<=4 && (n%100<12 || n%100>14) ? 1 : n%10==0 || (n%10>=5 && n%10<=9) || "
"(n%100>=11 && n%100<=14)? 2 : 3);\n"

#: ../../library/compileall.rst:2
msgid ":mod:`!compileall` --- Byte-compile Python libraries"
msgstr ":mod:`!compileall` --- Побайтовая компиляция библиотек Python"

#: ../../library/compileall.rst:7
msgid "**Source code:** :source:`Lib/compileall.py`"
msgstr "**Исходный код:** :source:`Lib/compileall.py`"

#: ../../library/compileall.rst:11
msgid ""
"This module provides some utility functions to support installing Python "
"libraries.  These functions compile Python source files in a directory tree. "
"This module can be used to create the cached byte-code files at library "
"installation time, which makes them available for use even by users who "
"don't have write permission to the library directories."
msgstr ""
"Этот модуль предоставляет некоторые служебные функции для поддержки "
"установки библиотек Python. Эти функции компилируют исходные файлы Python в "
"дереве каталогов. Этот модуль можно использовать для создания кэшированных "
"файлов байт-кода во время установки библиотеки, что делает их доступными для "
"использования даже пользователями, у которых нет разрешения на запись в "
"каталоги библиотеки."

#: ../../includes/wasm-notavail.rst:3
msgid "Availability"
msgstr "Доступность"

#: ../../includes/wasm-notavail.rst:5
msgid ""
"This module does not work or is not available on WebAssembly platforms "
"``wasm32-emscripten`` and ``wasm32-wasi``. See :ref:`wasm-availability` for "
"more information."
msgstr ""
"Этот модуль не работает или недоступен на платформах WebAssembly «wasm32-"
"emscripten» и «wasm32-wasi». См. :ref:`wasm-availability` для получения "
"дополнительной информации."

#: ../../library/compileall.rst:22
msgid "Command-line use"
msgstr "Использование командной строки"

#: ../../library/compileall.rst:24
msgid ""
"This module can work as a script (using :program:`python -m compileall`) to "
"compile Python sources."
msgstr ""
"Этот модуль может работать как скрипт (используя :program:`python -m "
"compileall`) для компиляции исходного кода Python."

#: ../../library/compileall.rst:32
msgid ""
"Positional arguments are files to compile or directories that contain source "
"files, traversed recursively.  If no argument is given, behave as if the "
"command line was :samp:`-l {<directories from sys.path>}`."
msgstr ""
"Позиционные аргументы — это файлы для компиляции или каталоги, содержащие "
"исходные файлы, проходимые рекурсивно. Если аргумент не указан, ведите себя "
"так, как если бы командная строка была :samp:`-l {<каталоги из sys.path>}`."

#: ../../library/compileall.rst:38
msgid ""
"Do not recurse into subdirectories, only compile source code files directly "
"contained in the named or implied directories."
msgstr ""
"Не используйте рекурсию в подкаталогах, а компилируйте только файлы "
"исходного кода, непосредственно содержащиеся в названных или подразумеваемых "
"каталогах."

#: ../../library/compileall.rst:43
msgid "Force rebuild even if timestamps are up-to-date."
msgstr "Принудительное перестроение, даже если временные метки актуальны."

#: ../../library/compileall.rst:47
msgid ""
"Do not print the list of files compiled. If passed once, error messages will "
"still be printed. If passed twice (``-qq``), all output is suppressed."
msgstr ""
"Не распечатывать список скомпилированных файлов. Если пройти один раз, "
"сообщения об ошибках все равно будут печататься. Если передано дважды (``-"
"qq``), весь вывод подавляется."

#: ../../library/compileall.rst:52
msgid ""
"Directory prepended to the path to each file being compiled.  This will "
"appear in compilation time tracebacks, and is also compiled in to the byte-"
"code file, where it will be used in tracebacks and other messages in cases "
"where the source file does not exist at the time the byte-code file is "
"executed."
msgstr ""
"Каталог добавляется к пути к каждому компилируемому файлу. Он будет "
"отображаться в обратных трассировках во время компиляции, а также "
"компилируется в файл байт-кода, где он будет использоваться в обратных "
"трассировках и других сообщениях в тех случаях, когда исходный файл не "
"существует во время выполнения файла байт-кода."

#: ../../library/compileall.rst:61
msgid ""
"Remove (``-s``) or append (``-p``) the given prefix of paths recorded in the "
"``.pyc`` files. Cannot be combined with ``-d``."
msgstr ""
"Удалить (``-s``) или добавить (``-p``) заданный префикс путей, записанных в "
"файлах ``.pyc``. Невозможно комбинировать с ``-d``."

#: ../../library/compileall.rst:67
msgid ""
"regex is used to search the full path to each file considered for "
"compilation, and if the regex produces a match, the file is skipped."
msgstr ""
"Регулярное выражение используется для поиска полного пути к каждому файлу, "
"рассматриваемому для компиляции, и если регулярное выражение дает "
"совпадение, файл пропускается."

#: ../../library/compileall.rst:72
msgid ""
"Read the file ``list`` and add each line that it contains to the list of "
"files and directories to compile.  If ``list`` is ``-``, read lines from "
"``stdin``."
msgstr ""
"Прочтите файл ``list`` и добавьте каждую содержащуюся в нем строку в список "
"файлов и каталогов для компиляции. Если ``list`` равен ``-``, читайте строки "
"из ``stdin``."

#: ../../library/compileall.rst:78
msgid ""
"Write the byte-code files to their legacy locations and names, which may "
"overwrite byte-code files created by another version of Python.  The default "
"is to write files to their :pep:`3147` locations and names, which allows "
"byte-code files from multiple versions of Python to coexist."
msgstr ""
"Запишите файлы байт-кода в их устаревшие местоположения и имена, которые "
"могут перезаписать файлы байт-кода, созданные другой версией Python. По "
"умолчанию файлы записываются в их расположение и имена :pep:`3147`, что "
"позволяет сосуществовать файлам байт-кода из нескольких версий Python."

#: ../../library/compileall.rst:85
msgid ""
"Control the maximum recursion level for subdirectories. If this is given, "
"then ``-l`` option will not be taken into account. :program:`python -m "
"compileall <directory> -r 0` is equivalent to :program:`python -m compileall "
"<directory> -l`."
msgstr ""
"Управляйте максимальным уровнем рекурсии для подкаталогов. Если это указано, "
"то опция ``-l`` не будет учитываться. :program:`python -m compileall "
"<каталог> -r 0` эквивалентен :program:`python -m compileall <каталог> -l`."

#: ../../library/compileall.rst:92
msgid ""
"Use *N* workers to compile the files within the given directory. If ``0`` is "
"used, then the result of :func:`os.cpu_count` will be used."
msgstr ""
"Используйте рабочие процессы *N* для компиляции файлов в заданном каталоге. "
"Если используется ``0``, то будет использован результат :func:`os.cpu_count`."

#: ../../library/compileall.rst:98
msgid ""
"Control how the generated byte-code files are invalidated at runtime. The "
"``timestamp`` value, means that ``.pyc`` files with the source timestamp and "
"size embedded will be generated. The ``checked-hash`` and ``unchecked-hash`` "
"values cause hash-based pycs to be generated. Hash-based pycs embed a hash "
"of the source file contents rather than a timestamp. See :ref:`pyc-"
"invalidation` for more information on how Python validates bytecode cache "
"files at runtime. The default is ``timestamp`` if the :envvar:"
"`SOURCE_DATE_EPOCH` environment variable is not set, and ``checked-hash`` if "
"the ``SOURCE_DATE_EPOCH`` environment variable is set."
msgstr ""
"Управляйте тем, как сгенерированные файлы байт-кода становятся "
"недействительными во время выполнения. Значение ``timestamp`` означает, что "
"будут созданы файлы ``.pyc`` со встроенной исходной меткой времени и "
"размером. Значения ``checked-hash`` и ``unchecked-hash`` вызывают генерацию "
"pycs на основе хеша. pycs на основе хеша встраивают хеш содержимого "
"исходного файла, а не метку времени. См. :ref:`pyc-invalidation` для "
"получения дополнительной информации о том, как Python проверяет файлы кэша "
"байт-кода во время выполнения. По умолчанию используется ``timestamp``, если "
"переменная среды SOURCE_DATE_EPOCH` не установлена, и ``checked-hash``, если "
"переменная среды SOURCE_DATE_EPOCH`` установлена."

#: ../../library/compileall.rst:111
msgid ""
"Compile with the given optimization level. May be used multiple times to "
"compile for multiple levels at a time (for example, ``compileall -o 1 -o "
"2``)."
msgstr ""
"Скомпилируйте с заданным уровнем оптимизации. Может использоваться несколько "
"раз для одновременной компиляции нескольких уровней (например, ``compileall -"
"o 1 -o 2``)."

#: ../../library/compileall.rst:117
msgid "Ignore symlinks pointing outside the given directory."
msgstr ""
"Игнорируйте символические ссылки, указывающие за пределы данного каталога."

#: ../../library/compileall.rst:121
msgid ""
"If two ``.pyc`` files with different optimization level have the same "
"content, use hard links to consolidate duplicate files."
msgstr ""
"Если два файла ``.pyc`` с разным уровнем оптимизации имеют одинаковое "
"содержимое, используйте жесткие ссылки для объединения повторяющихся файлов."

#: ../../library/compileall.rst:124
msgid "Added the ``-i``, ``-b`` and ``-h`` options."
msgstr "Добавлены опции ``-i``, ``-b`` и ``-h``."

#: ../../library/compileall.rst:127
msgid ""
"Added the  ``-j``, ``-r``, and ``-qq`` options.  ``-q`` option was changed "
"to a multilevel value.  ``-b`` will always produce a byte-code file ending "
"in ``.pyc``, never ``.pyo``."
msgstr ""
"Добавлены опции ``-j``, ``-r`` и ``-qq``. Опция ``-q`` изменена на "
"многоуровневое значение. ``-b`` всегда будет создавать файл с байт-кодом, "
"оканчивающийся на ``.pyc``, и никогда ``.pyo``."

#: ../../library/compileall.rst:132
msgid "Added the ``--invalidation-mode`` option."
msgstr "Добавлен параметр --invalidation-mode."

#: ../../library/compileall.rst:135
msgid ""
"Added the ``-s``, ``-p``, ``-e`` and ``--hardlink-dupes`` options. Raised "
"the default recursion limit from 10 to :py:func:`sys.getrecursionlimit()`. "
"Added the possibility to specify the ``-o`` option multiple times."
msgstr ""
"Добавлены опции ``-s``, ``-p``, ``-e`` и ``--hardlink-dupes``. Увеличен "
"лимит рекурсии по умолчанию с 10 до :py:func:`sys.getrecursionlimit()`. "
"Добавлена ​​возможность указать опцию ``-o`` несколько раз."

#: ../../library/compileall.rst:142
msgid ""
"There is no command-line option to control the optimization level used by "
"the :func:`compile` function, because the Python interpreter itself already "
"provides the option: :program:`python -O -m compileall`."
msgstr ""
"Не существует опции командной строки для управления уровнем оптимизации, "
"используемой функцией :func:`compile`, поскольку сам интерпретатор Python "
"уже предоставляет такую ​​опцию: :program:`python -O -m compileall`."

#: ../../library/compileall.rst:146
msgid ""
"Similarly, the :func:`compile` function respects the :data:`sys."
"pycache_prefix` setting. The generated bytecode cache will only be useful "
"if :func:`compile` is run with the same :data:`sys.pycache_prefix` (if any) "
"that will be used at runtime."
msgstr ""
"Аналогично, функция :func:`compile` учитывает настройку :data:`sys."
"pycache_prefix`. Сгенерированный кеш байт-кода будет полезен только в том "
"случае, если :func:`compile` запускается с тем же :data:`sys.pycache_prefix` "
"(если есть), который будет использоваться во время выполнения."

#: ../../library/compileall.rst:152
msgid "Public functions"
msgstr "Публичные функции"

#: ../../library/compileall.rst:156
msgid ""
"Recursively descend the directory tree named by *dir*, compiling all :file:`."
"py` files along the way. Return a true value if all the files compiled "
"successfully, and a false value otherwise."
msgstr ""
"Рекурсивно спуститься по дереву каталогов, указанному в *dir*, по пути "
"компилируя все файлы :file:`.py`. Возвращает истинное значение, если все "
"файлы скомпилированы успешно, и ложное значение в противном случае."

#: ../../library/compileall.rst:160
msgid ""
"The *maxlevels* parameter is used to limit the depth of the recursion; it "
"defaults to ``sys.getrecursionlimit()``."
msgstr ""
"Параметр *maxlevels* используется для ограничения глубины рекурсии; по "
"умолчанию используется ``sys.getrecursionlimit()``."

#: ../../library/compileall.rst:163
msgid ""
"If *ddir* is given, it is prepended to the path to each file being compiled "
"for use in compilation time tracebacks, and is also compiled in to the byte-"
"code file, where it will be used in tracebacks and other messages in cases "
"where the source file does not exist at the time the byte-code file is "
"executed."
msgstr ""
"Если указано *ddir*, оно добавляется к пути к каждому компилируемому файлу "
"для использования в обратных трассировках во время компиляции, а также "
"компилируется в файл байт-кода, где оно будет использоваться в обратных "
"трассировках и других сообщениях в тех случаях, когда исходный файл не "
"существует на момент выполнения файла байт-кода."

#: ../../library/compileall.rst:169
msgid ""
"If *force* is true, modules are re-compiled even if the timestamps are up to "
"date."
msgstr ""
"Если *force* имеет значение true, модули перекомпилируются, даже если "
"временные метки актуальны."

#: ../../library/compileall.rst:172
msgid ""
"If *rx* is given, its ``search`` method is called on the complete path to "
"each file considered for compilation, and if it returns a true value, the "
"file is skipped. This can be used to exclude files matching a regular "
"expression, given as a :ref:`re.Pattern <re-objects>` object."
msgstr ""
"Если задано *rx*, его метод ``search`` вызывается по полному пути к каждому "
"файлу, рассматриваемому для компиляции, и если он возвращает истинное "
"значение, файл пропускается. Это можно использовать для исключения файлов, "
"соответствующих регулярному выражению, заданному как объект :ref:`re.Pattern "
"<re-objects>`."

#: ../../library/compileall.rst:177 ../../library/compileall.rst:254
msgid ""
"If *quiet* is ``False`` or ``0`` (the default), the filenames and other "
"information are printed to standard out. Set to ``1``, only errors are "
"printed. Set to ``2``, all output is suppressed."
msgstr ""
"Если *quiet* имеет значение «False» или «0» (по умолчанию), имена файлов и "
"другая информация выводятся на стандартный вывод. Если установлено значение "
"«1», выводятся только ошибки. Если установлено значение «2», весь вывод "
"подавляется."

#: ../../library/compileall.rst:181 ../../library/compileall.rst:258
msgid ""
"If *legacy* is true, byte-code files are written to their legacy locations "
"and names, which may overwrite byte-code files created by another version of "
"Python.  The default is to write files to their :pep:`3147` locations and "
"names, which allows byte-code files from multiple versions of Python to "
"coexist."
msgstr ""
"Если *legacy* имеет значение true, файлы байт-кода записываются в свои "
"устаревшие местоположения и имена, что может перезаписать файлы байт-кода, "
"созданные другой версией Python. По умолчанию файлы записываются в их "
"расположение и имена :pep:`3147`, что позволяет сосуществовать файлам байт-"
"кода из нескольких версий Python."

#: ../../library/compileall.rst:187 ../../library/compileall.rst:264
msgid ""
"*optimize* specifies the optimization level for the compiler.  It is passed "
"to the built-in :func:`compile` function. Accepts also a sequence of "
"optimization levels which lead to multiple compilations of one :file:`.py` "
"file in one call."
msgstr ""
"*optimize* указывает уровень оптимизации компилятора. Он передается "
"встроенной функции :func:`compile`. Принимает также последовательность "
"уровней оптимизации, которая приводит к многократной компиляции одного "
"файла :file:`.py` за один вызов."

#: ../../library/compileall.rst:191
msgid ""
"The argument *workers* specifies how many workers are used to compile files "
"in parallel. The default is to not use multiple workers. If the platform "
"can't use multiple workers and *workers* argument is given, then sequential "
"compilation will be used as a fallback.  If *workers* is 0, the number of "
"cores in the system is used.  If *workers* is lower than ``0``, a :exc:"
"`ValueError` will be raised."
msgstr ""
"Аргумент *workers* указывает, сколько рабочих процессов используется для "
"параллельной компиляции файлов. По умолчанию не используется несколько "
"рабочих. Если платформа не может использовать несколько рабочих процессов и "
"указан аргумент *workers*, то в качестве запасного варианта будет "
"использоваться последовательная компиляция. Если *workers* равно 0, "
"используется количество ядер в системе. Если *workers* меньше, чем ``0``, "
"будет выдано :exc:`ValueError`."

#: ../../library/compileall.rst:198 ../../library/compileall.rst:268
msgid ""
"*invalidation_mode* should be a member of the :class:`py_compile."
"PycInvalidationMode` enum and controls how the generated pycs are "
"invalidated at runtime."
msgstr ""
"*invalidation_mode* должен быть членом перечисления :class:`py_compile."
"PycInvalidationMode` и контролировать, как сгенерированные pycs становятся "
"недействительными во время выполнения."

#: ../../library/compileall.rst:202 ../../library/compileall.rst:272
msgid ""
"The *stripdir*, *prependdir* and *limit_sl_dest* arguments correspond to the "
"``-s``, ``-p`` and ``-e`` options described above. They may be specified as "
"``str`` or :py:class:`os.PathLike`."
msgstr ""
"Аргументы *stripdir*, *prependdir* и *limit_sl_dest* соответствуют опциям ``-"
"s``, ``-p`` и ``-e``, описанным выше. Они могут быть указаны как ``str`` "
"или :py:class:`os.PathLike`."

#: ../../library/compileall.rst:206 ../../library/compileall.rst:276
msgid ""
"If *hardlink_dupes* is true and two ``.pyc`` files with different "
"optimization level have the same content, use hard links to consolidate "
"duplicate files."
msgstr ""
"Если *hardlink_dupes* имеет значение true и два файла ``.pyc`` с разным "
"уровнем оптимизации имеют одинаковое содержимое, используйте жесткие ссылки "
"для объединения повторяющихся файлов."

#: ../../library/compileall.rst:209 ../../library/compileall.rst:307
msgid "Added the *legacy* and *optimize* parameter."
msgstr "Добавлены параметры *legacy* и *optimize*."

#: ../../library/compileall.rst:212
msgid "Added the *workers* parameter."
msgstr "Добавлен параметр *workers*."

#: ../../library/compileall.rst:215 ../../library/compileall.rst:281
#: ../../library/compileall.rst:310
msgid "*quiet* parameter was changed to a multilevel value."
msgstr "Параметр *quiet* изменен на многоуровневое значение."

#: ../../library/compileall.rst:218 ../../library/compileall.rst:284
#: ../../library/compileall.rst:313
msgid ""
"The *legacy* parameter only writes out ``.pyc`` files, not ``.pyo`` files no "
"matter what the value of *optimize* is."
msgstr ""
"Параметр *legacy* записывает только файлы ``.pyc``, а не ``.pyo``, "
"независимо от значения *optimize*."

#: ../../library/compileall.rst:222
msgid "Accepts a :term:`path-like object`."
msgstr "Принимает :term:`объект, похожий на путь`."

#: ../../library/compileall.rst:225 ../../library/compileall.rst:288
#: ../../library/compileall.rst:317
msgid "The *invalidation_mode* parameter was added."
msgstr "Добавлен параметр *invalidation_mode*."

#: ../../library/compileall.rst:228 ../../library/compileall.rst:291
#: ../../library/compileall.rst:320
msgid ""
"The *invalidation_mode* parameter's default value is updated to ``None``."
msgstr ""
"Значение по умолчанию параметра *invalidation_mode* обновляется до «Нет»."

#: ../../library/compileall.rst:231
msgid "Setting *workers* to 0 now chooses the optimal number of cores."
msgstr "Установка *workers* на 0 теперь выбирает оптимальное количество ядер."

#: ../../library/compileall.rst:234
msgid ""
"Added *stripdir*, *prependdir*, *limit_sl_dest* and *hardlink_dupes* "
"arguments. Default value of *maxlevels* was changed from ``10`` to ``sys."
"getrecursionlimit()``"
msgstr ""
"Добавлены аргументы *stripdir*, *prependdir*, *limit_sl_dest* и "
"*hardlink_dupes*. Значение по умолчанию *maxlevels* было изменено с ``10`` "
"на ``sys.getrecursionlimit()``."

#: ../../library/compileall.rst:240
msgid ""
"Compile the file with path *fullname*. Return a true value if the file "
"compiled successfully, and a false value otherwise."
msgstr ""
"Скомпилируйте файл с путем *полное имя*. Возвращает истинное значение, если "
"файл скомпилирован успешно, и ложное значение в противном случае."

#: ../../library/compileall.rst:243
msgid ""
"If *ddir* is given, it is prepended to the path to the file being compiled "
"for use in compilation time tracebacks, and is also compiled in to the byte-"
"code file, where it will be used in tracebacks and other messages in cases "
"where the source file does not exist at the time the byte-code file is "
"executed."
msgstr ""
"Если указано *ddir*, оно добавляется к пути к компилируемому файлу для "
"использования в обратных трассировках во время компиляции, а также "
"компилируется в файл байт-кода, где оно будет использоваться в обратных "
"трассировках и других сообщениях в тех случаях, когда исходный файл не "
"существует на момент выполнения файла байт-кода."

#: ../../library/compileall.rst:249
msgid ""
"If *rx* is given, its ``search`` method is passed the full path name to the "
"file being compiled, and if it returns a true value, the file is not "
"compiled and ``True`` is returned. This can be used to exclude files "
"matching a regular expression, given as a :ref:`re.Pattern <re-objects>` "
"object."
msgstr ""
"Если задано *rx*, его методу ``search`` передается полный путь к "
"компилируемому файлу, и если он возвращает истинное значение, файл не "
"компилируется и возвращается ``True``. Это можно использовать для исключения "
"файлов, соответствующих регулярному выражению, заданному как объект :ref:`re."
"Pattern <re-objects>`."

#: ../../library/compileall.rst:294
msgid ""
"Added *stripdir*, *prependdir*, *limit_sl_dest* and *hardlink_dupes* "
"arguments."
msgstr ""
"Добавлены аргументы *stripdir*, *prependdir*, *limit_sl_dest* и "
"*hardlink_dupes*."

#: ../../library/compileall.rst:299
msgid ""
"Byte-compile all the :file:`.py` files found along ``sys.path``. Return a "
"true value if all the files compiled successfully, and a false value "
"otherwise."
msgstr ""
"Побайтно-компилируйте все файлы :file:`.py`, найденные по ``sys.path``. "
"Возвращает истинное значение, если все файлы скомпилированы успешно, и "
"ложное значение в противном случае."

#: ../../library/compileall.rst:302
msgid ""
"If *skip_curdir* is true (the default), the current directory is not "
"included in the search.  All other parameters are passed to the :func:"
"`compile_dir` function.  Note that unlike the other compile functions, "
"``maxlevels`` defaults to ``0``."
msgstr ""
"Если *skip_curdir* имеет значение true (по умолчанию), текущий каталог не "
"включается в поиск. Все остальные параметры передаются в функцию :func:"
"`compile_dir`. Обратите внимание, что в отличие от других функций "
"компиляции, maxlevels по умолчанию имеет значение 0."

#: ../../library/compileall.rst:323
msgid ""
"To force a recompile of all the :file:`.py` files in the :file:`Lib/` "
"subdirectory and all its subdirectories::"
msgstr ""
"Чтобы принудительно перекомпилировать все файлы :file:`.py` в подкаталоге :"
"file:`Lib/` и во всех его подкаталогах:"

#: ../../library/compileall.rst:326
msgid ""
"import compileall\n"
"\n"
"compileall.compile_dir('Lib/', force=True)\n"
"\n"
"# Perform same compilation, excluding files in .svn directories.\n"
"import re\n"
"compileall.compile_dir('Lib/', rx=re.compile(r'[/\\\\][.]svn'), force=True)\n"
"\n"
"# pathlib.Path objects can also be used.\n"
"import pathlib\n"
"compileall.compile_dir(pathlib.Path('Lib/'), force=True)"
msgstr ""
"import compileall\n"
"\n"
"compileall.compile_dir('Lib/', force=True)\n"
"\n"
"# Perform same compilation, excluding files in .svn directories.\n"
"import re\n"
"compileall.compile_dir('Lib/', rx=re.compile(r'[/\\\\][.]svn'), force=True)\n"
"\n"
"# pathlib.Path objects can also be used.\n"
"import pathlib\n"
"compileall.compile_dir(pathlib.Path('Lib/'), force=True)"

#: ../../library/compileall.rst:340
msgid "Module :mod:`py_compile`"
msgstr "Модуль :mod:`py_compile`"

#: ../../library/compileall.rst:341
msgid "Byte-compile a single source file."
msgstr "Байтовая компиляция одного исходного файла."
