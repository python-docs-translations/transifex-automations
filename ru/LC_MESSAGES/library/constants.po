# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# Rafael Fontenelle <rffontenelle@gmail.com>, 2024
# Roustam Khamidoulline, 2024
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.12\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-03-07 14:53+0000\n"
"PO-Revision-Date: 2024-05-11 00:33+0000\n"
"Last-Translator: Roustam Khamidoulline, 2024\n"
"Language-Team: Russian (https://app.transifex.com/python-doc/teams/5390/"
"ru/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ru\n"
"Plural-Forms: nplurals=4; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && "
"n%10<=4 && (n%100<12 || n%100>14) ? 1 : n%10==0 || (n%10>=5 && n%10<=9) || "
"(n%100>=11 && n%100<=14)? 2 : 3);\n"

#: ../../library/constants.rst:4
msgid "Built-in Constants"
msgstr "Встроенные константы"

#: ../../library/constants.rst:6
msgid "A small number of constants live in the built-in namespace.  They are:"
msgstr ""
"Небольшое количество констант находится во встроенном пространстве имен. Это:"

#: ../../library/constants.rst:10
msgid ""
"The false value of the :class:`bool` type. Assignments to ``False`` are "
"illegal and raise a :exc:`SyntaxError`."
msgstr ""
"Ложное значение типа :class:`bool`. Присвоение ``False`` недопустимо и "
"вызывает ошибку :exc:`SyntaxError`."

#: ../../library/constants.rst:16
msgid ""
"The true value of the :class:`bool` type. Assignments to ``True`` are "
"illegal and raise a :exc:`SyntaxError`."
msgstr ""
"Истинное значение типа :class:`bool`. Присвоение ``True`` недопустимо и "
"вызывает ошибку :exc:`SyntaxError`."

#: ../../library/constants.rst:22
msgid ""
"An object frequently used to represent the absence of a value, as when "
"default arguments are not passed to a function. Assignments to ``None`` are "
"illegal and raise a :exc:`SyntaxError`. ``None`` is the sole instance of "
"the :data:`~types.NoneType` type."
msgstr ""
"Объект, часто используемый для обозначения отсутствия значения, например, "
"когда аргументы по умолчанию не передаются функции. Присвоение None "
"недопустимо и вызывает ошибку :exc:`SyntaxError`. ``None`` является "
"единственным экземпляром типа :data:`~types.NoneType`."

#: ../../library/constants.rst:30
msgid ""
"A special value which should be returned by the binary special methods (e."
"g. :meth:`~object.__eq__`, :meth:`~object.__lt__`, :meth:`~object.__add__`, :"
"meth:`~object.__rsub__`, etc.) to indicate that the operation is not "
"implemented with respect to the other type; may be returned by the in-place "
"binary special methods (e.g. :meth:`~object.__imul__`, :meth:`~object."
"__iand__`, etc.) for the same purpose. It should not be evaluated in a "
"boolean context. :data:`!NotImplemented` is the sole instance of the :data:"
"`types.NotImplementedType` type."
msgstr ""
"Специальное значение, которое должно быть возвращено специальными двоичными "
"методами (например, :meth:`~object.__eq__`, :meth:`~object.__lt__`, :meth:"
"`~object.__add__`, :meth:`~object .__rsub__` и т. д.), чтобы указать, что "
"операция не реализована по отношению к другому типу; могут быть возвращены "
"специальными двоичными методами на месте (например, :meth:`~object."
"__imul__`, :meth:`~object.__iand__` и т. д.) с той же целью. Его не следует "
"оценивать в логическом контексте. :data:`!NotImplemented` — единственный "
"экземпляр типа :data:`types.NotImplementedType`."

#: ../../library/constants.rst:40
msgid ""
"When a binary (or in-place) method returns :data:`!NotImplemented` the "
"interpreter will try the reflected operation on the other type (or some "
"other fallback, depending on the operator).  If all attempts return :data:`!"
"NotImplemented`, the interpreter will raise an appropriate exception. "
"Incorrectly returning :data:`!NotImplemented` will result in a misleading "
"error message or the :data:`!NotImplemented` value being returned to Python "
"code."
msgstr ""
"Когда двоичный (или локальный) метод возвращает :data:`!NotImplemented`, "
"интерпретатор попытается выполнить отраженную операцию с другим типом (или "
"какой-либо другой запасной вариант, в зависимости от оператора). Если все "
"попытки возвращают :data:`!NotImplemented`, интерпретатор выдаст "
"соответствующее исключение. Неправильный возврат :data:`!NotImplemented` "
"приведет к вводящему в заблуждение сообщению об ошибке или к возврату "
"значения :data:`!NotImplemented` в код Python."

#: ../../library/constants.rst:47
msgid "See :ref:`implementing-the-arithmetic-operations` for examples."
msgstr "Примеры см. в разделе «Реализация арифметических операций»."

#: ../../library/constants.rst:51
msgid ""
":data:`!NotImplemented` and :exc:`!NotImplementedError` are not "
"interchangeable. This constant should only be used as described above; see :"
"exc:`NotImplementedError` for details on correct usage of the exception."
msgstr ""

#: ../../library/constants.rst:56
msgid ""
"Evaluating :data:`!NotImplemented` in a boolean context is deprecated. While "
"it currently evaluates as true, it will emit a :exc:`DeprecationWarning`. It "
"will raise a :exc:`TypeError` in a future version of Python."
msgstr ""
"Вычисление :data:`!NotImplemented` в логическом контексте устарело. Хотя в "
"настоящее время оно оценивается как истинное, оно выдает :exc:"
"`DeprecationWarning`. В будущей версии Python это вызовет ошибку :exc:"
"`TypeError`."

#: ../../library/constants.rst:65
msgid ""
"The same as the ellipsis literal \"``...``\". Special value used mostly in "
"conjunction with extended slicing syntax for user-defined container data "
"types. ``Ellipsis`` is the sole instance of the :data:`types.EllipsisType` "
"type."
msgstr ""
"То же, что и многоточие \"``...``\". Специальное значение, используемое в "
"основном в сочетании с расширенным синтаксисом срезов для пользовательских "
"типов данных контейнера. ``Ellipsis`` — единственный экземпляр типа :data:"
"`types.EllipsisType`."

#: ../../library/constants.rst:72
msgid ""
"This constant is true if Python was not started with an :option:`-O` option. "
"See also the :keyword:`assert` statement."
msgstr ""
"Эта константа верна, если Python не был запущен с опцией :option:`-O`. См. "
"также оператор :keyword:`assert`."

#: ../../library/constants.rst:78
msgid ""
"The names :data:`None`, :data:`False`, :data:`True` and :data:`__debug__` "
"cannot be reassigned (assignments to them, even as an attribute name, raise :"
"exc:`SyntaxError`), so they can be considered \"true\" constants."
msgstr ""
"Имена :data:`None`, :data:`False`, :data:`True` и :data:`__debug__` не могут "
"быть переназначены (присвоение им, даже в качестве имени атрибута, вызывает :"
"exc:`SyntaxError` ), поэтому их можно считать «истинными» константами."

#: ../../library/constants.rst:86
msgid "Constants added by the :mod:`site` module"
msgstr "Константы, добавленные модулем :mod:`site`"

#: ../../library/constants.rst:88
msgid ""
"The :mod:`site` module (which is imported automatically during startup, "
"except if the :option:`-S` command-line option is given) adds several "
"constants to the built-in namespace.  They are useful for the interactive "
"interpreter shell and should not be used in programs."
msgstr ""
"Модуль :mod:`site` (который импортируется автоматически во время запуска, за "
"исключением случаев, когда указана опция командной строки :option:`-S`) "
"добавляет несколько констант во встроенное пространство имен. Они полезны "
"для оболочки интерактивного интерпретатора и не должны использоваться в "
"программах."

#: ../../library/constants.rst:96
msgid ""
"Objects that when printed, print a message like \"Use quit() or Ctrl-D (i.e. "
"EOF) to exit\", and when called, raise :exc:`SystemExit` with the specified "
"exit code."
msgstr ""
"Объекты, которые при печати выводят сообщение типа «Используйте quit() или "
"Ctrl-D (т.е. EOF) для выхода», а при вызове вызывают :exc:`SystemExit` с "
"указанным кодом выхода."

#: ../../library/constants.rst:103
msgid ""
"Object that when printed, prints the message \"Type help() for interactive "
"help, or help(object) for help about object.\", and when called, acts as "
"described :func:`elsewhere <help>`."
msgstr ""
"Объект, который при печати печатает сообщение «Введите help() для "
"интерактивной справки или help(object) для справки об объекте.», а при "
"вызове действует, как описано :func:`elsewhere <help>`."

#: ../../library/constants.rst:110
msgid ""
"Objects that when printed or called, print the text of copyright or credits, "
"respectively."
msgstr ""
"Объекты, которые при печати или вызове печатают текст об авторских правах "
"или авторских правах соответственно."

#: ../../library/constants.rst:115
msgid ""
"Object that when printed, prints the message \"Type license() to see the "
"full license text\", and when called, displays the full license text in a "
"pager-like fashion (one screen at a time)."
msgstr ""
"Объект, который при печати печатает сообщение «Введите лицензию(), чтобы "
"увидеть полный текст лицензии», а при вызове отображает полный текст "
"лицензии в виде пейджера (по одному экрану за раз)."

#: ../../library/constants.rst:62
msgid "..."
msgstr "..."

#: ../../library/constants.rst:62
msgid "ellipsis literal"
msgstr "ellipsis literal"
