# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# Rafael Fontenelle <rffontenelle@gmail.com>, 2024
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.10\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-01-10 16:06+0000\n"
"PO-Revision-Date: 2022-11-05 17:22+0000\n"
"Last-Translator: Rafael Fontenelle <rffontenelle@gmail.com>, 2024\n"
"Language-Team: Russian (https://app.transifex.com/python-doc/teams/5390/"
"ru/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ru\n"
"Plural-Forms: nplurals=4; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && "
"n%10<=4 && (n%100<12 || n%100>14) ? 1 : n%10==0 || (n%10>=5 && n%10<=9) || "
"(n%100>=11 && n%100<=14)? 2 : 3);\n"

#: ../../library/email.encoders.rst:2
msgid ":mod:`email.encoders`: Encoders"
msgstr ":mod:`email.encoders`: Кодировщики"

#: ../../library/email.encoders.rst:7
msgid "**Source code:** :source:`Lib/email/encoders.py`"
msgstr "**Исходный код:** :source:`Lib/email/encoders.py`"

#: ../../library/email.encoders.rst:11
msgid ""
"This module is part of the legacy (``Compat32``) email API.  In the new API "
"the functionality is provided by the *cte* parameter of the :meth:`~email."
"message.EmailMessage.set_content` method."
msgstr ""
"Этот модуль является частью устаревшего API электронной почты (Compat32). В "
"новом API функциональность обеспечивается параметром *cte* метода :meth:"
"`~email.message.EmailMessage.set_content`."

#: ../../library/email.encoders.rst:15
msgid ""
"This module is deprecated in Python 3.  The functions provided here should "
"not be called explicitly since the :class:`~email.mime.text.MIMEText` class "
"sets the content type and CTE header using the *_subtype* and *_charset* "
"values passed during the instantiation of that class."
msgstr ""
"Этот модуль устарел в Python 3. Представленные здесь функции не следует "
"вызывать явно, поскольку класс :class:`~email.mime.text.MIMEText` "
"устанавливает тип контента и заголовок CTE, используя значения *_subtype* и "
"*_charset*. передается во время создания экземпляра этого класса."

#: ../../library/email.encoders.rst:20
msgid ""
"The remaining text in this section is the original documentation of the "
"module."
msgstr ""
"Оставшийся текст в этом разделе представляет собой исходную документацию "
"модуля."

#: ../../library/email.encoders.rst:22
msgid ""
"When creating :class:`~email.message.Message` objects from scratch, you "
"often need to encode the payloads for transport through compliant mail "
"servers. This is especially true for :mimetype:`image/\\*` and :mimetype:"
"`text/\\*` type messages containing binary data."
msgstr ""
"При создании объектов :class:`~email.message.Message` с нуля вам часто "
"необходимо закодировать полезные данные для транспортировки через "
"совместимые почтовые серверы. Это особенно верно для сообщений типа :"
"mimetype:`image/\\*` и :mimetype:`text/\\*`, содержащих двоичные данные."

#: ../../library/email.encoders.rst:27
msgid ""
"The :mod:`email` package provides some convenient encoders in its :mod:"
"`encoders` module.  These encoders are actually used by the :class:`~email."
"mime.audio.MIMEAudio` and :class:`~email.mime.image.MIMEImage` class "
"constructors to provide default encodings.  All encoder functions take "
"exactly one argument, the message object to encode.  They usually extract "
"the payload, encode it, and reset the payload to this newly encoded value.  "
"They should also set the :mailheader:`Content-Transfer-Encoding` header as "
"appropriate."
msgstr ""

#: ../../library/email.encoders.rst:35
msgid ""
"Note that these functions are not meaningful for a multipart message.  They "
"must be applied to individual subparts instead, and will raise a :exc:"
"`TypeError` if passed a message whose type is multipart."
msgstr ""
"Обратите внимание, что эти функции не имеют смысла для составного сообщения. "
"Вместо этого их следует применять к отдельным подразделам, и они вызовут "
"ошибку :exc:`TypeError`, если будет передано сообщение многочастного типа."

#: ../../library/email.encoders.rst:39
msgid "Here are the encoding functions provided:"
msgstr "Вот предоставляемые функции кодирования:"

#: ../../library/email.encoders.rst:44
msgid ""
"Encodes the payload into quoted-printable form and sets the :mailheader:"
"`Content-Transfer-Encoding` header to ``quoted-printable`` [#]_. This is a "
"good encoding to use when most of your payload is normal printable data, but "
"contains a few unprintable characters."
msgstr ""
"Кодирует полезную нагрузку в форму, доступную для печати, и устанавливает "
"для заголовка :mailheader:`Content-Transfer-Encoding` значение ``quoted-"
"printable``. [#]_ . Это хорошая кодировка, которую можно использовать, когда "
"большая часть полезных данных представляет собой обычные печатные данные, но "
"содержит несколько непечатаемых символов."

#: ../../library/email.encoders.rst:52
msgid ""
"Encodes the payload into base64 form and sets the :mailheader:`Content-"
"Transfer-Encoding` header to ``base64``.  This is a good encoding to use "
"when most of your payload is unprintable data since it is a more compact "
"form than quoted-printable.  The drawback of base64 encoding is that it "
"renders the text non-human readable."
msgstr ""
"Кодирует полезную нагрузку в форму base64 и устанавливает для заголовка :"
"mailheader:`Content-Transfer-Encoding` значение ``base64``. Это хорошая "
"кодировка для использования, когда большая часть ваших полезных данных "
"представляет собой непечатаемые данные, поскольку это более компактная "
"форма, чем цитируемая-печатная. Недостаток кодировки base64 заключается в "
"том, что она делает текст нечитабельным для человека."

#: ../../library/email.encoders.rst:61
msgid ""
"This doesn't actually modify the message's payload, but it does set the :"
"mailheader:`Content-Transfer-Encoding` header to either ``7bit`` or ``8bit`` "
"as appropriate, based on the payload data."
msgstr ""
"На самом деле это не изменяет полезную нагрузку сообщения, но устанавливает "
"для заголовка :mailheader:`Content-Transfer-Encoding` значение ``7bit`` или "
"``8bit`` в зависимости от ситуации, в зависимости от полезных данных."

#: ../../library/email.encoders.rst:68
msgid ""
"This does nothing; it doesn't even set the :mailheader:`Content-Transfer-"
"Encoding` header."
msgstr ""
"Это ничего не дает; он даже не устанавливает заголовок :mailheader:`Content-"
"Transfer-Encoding`."

#: ../../library/email.encoders.rst:72
msgid "Footnotes"
msgstr "Сноски"

#: ../../library/email.encoders.rst:73
msgid ""
"Note that encoding with :meth:`encode_quopri` also encodes all tabs and "
"space characters in the data."
msgstr ""
"Обратите внимание, что кодирование с помощью :meth:`encode_quopri` также "
"кодирует все символы табуляции и пробелы в данных."
