# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# Rafael Fontenelle <rffontenelle@gmail.com>, 2024
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.10\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-01-10 16:06+0000\n"
"PO-Revision-Date: 2022-11-05 17:22+0000\n"
"Last-Translator: Rafael Fontenelle <rffontenelle@gmail.com>, 2024\n"
"Language-Team: Russian (https://app.transifex.com/python-doc/teams/5390/"
"ru/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ru\n"
"Plural-Forms: nplurals=4; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && "
"n%10<=4 && (n%100<12 || n%100>14) ? 1 : n%10==0 || (n%10>=5 && n%10<=9) || "
"(n%100>=11 && n%100<=14)? 2 : 3);\n"

#: ../../library/http.cookies.rst:2
msgid ":mod:`http.cookies` --- HTTP state management"
msgstr ""

#: ../../library/http.cookies.rst:10
msgid "**Source code:** :source:`Lib/http/cookies.py`"
msgstr "**Исходный код:** :source:`Lib/http/cookies.py`"

#: ../../library/http.cookies.rst:14
msgid ""
"The :mod:`http.cookies` module defines classes for abstracting the concept "
"of cookies, an HTTP state management mechanism. It supports both simple "
"string-only cookies, and provides an abstraction for having any serializable "
"data-type as cookie value."
msgstr ""
"Модуль :mod:`http.cookies` определяет классы для абстрагирования концепции "
"файлов cookie, механизма управления состоянием HTTP. Он поддерживает как "
"простые файлы cookie только для строк, так и предоставляет абстракцию для "
"использования любого сериализуемого типа данных в качестве значения файла "
"cookie."

#: ../../library/http.cookies.rst:19
msgid ""
"The module formerly strictly applied the parsing rules described in the :rfc:"
"`2109` and :rfc:`2068` specifications.  It has since been discovered that "
"MSIE 3.0x doesn't follow the character rules outlined in those specs and "
"also many current day browsers and servers have relaxed parsing rules when "
"comes to Cookie handling.  As a result, the parsing rules used are a bit "
"less strict."
msgstr ""

#: ../../library/http.cookies.rst:25
msgid ""
"The character set, :data:`string.ascii_letters`, :data:`string.digits` and "
"``!#$%&'*+-.^_`|~:`` denote the set of valid characters allowed by this "
"module in Cookie name (as :attr:`~Morsel.key`)."
msgstr ""

#: ../../library/http.cookies.rst:29
msgid "Allowed ':' as a valid Cookie name character."
msgstr ""

#: ../../library/http.cookies.rst:35
msgid ""
"On encountering an invalid cookie, :exc:`CookieError` is raised, so if your "
"cookie data comes from a browser you should always prepare for invalid data "
"and catch :exc:`CookieError` on parsing."
msgstr ""
"При обнаружении недействительного файла cookie возникает :exc:`CookieError`, "
"поэтому, если данные вашего файла cookie поступают из браузера, вам всегда "
"следует быть готовым к недействительным данным и перехватывать :exc:"
"`CookieError` при анализе."

#: ../../library/http.cookies.rst:42
msgid ""
"Exception failing because of :rfc:`2109` invalidity: incorrect attributes, "
"incorrect :mailheader:`Set-Cookie` header, etc."
msgstr ""
"Исключение не удалось из-за недопустимости :rfc:`2109`: неверных атрибутов, "
"неправильного заголовка :mailheader:`Set-Cookie` и т. д."

#: ../../library/http.cookies.rst:48
msgid ""
"This class is a dictionary-like object whose keys are strings and whose "
"values are :class:`Morsel` instances. Note that upon setting a key to a "
"value, the value is first converted to a :class:`Morsel` containing the key "
"and the value."
msgstr ""
"Этот класс представляет собой объект, подобный словарю, ключами которого "
"являются строки, а значениями — экземпляры :class:`Morsel`. Обратите "
"внимание, что после присвоения ключу значения значение сначала преобразуется "
"в :class:`Morsel`, содержащий ключ и значение."

#: ../../library/http.cookies.rst:52
msgid "If *input* is given, it is passed to the :meth:`load` method."
msgstr "Если задан *input*, он передается методу :meth:`load`."

#: ../../library/http.cookies.rst:57
msgid ""
"This class derives from :class:`BaseCookie` and overrides :meth:"
"`value_decode` and :meth:`value_encode`. SimpleCookie supports strings as "
"cookie values. When setting the value, SimpleCookie calls the builtin :func:"
"`str()` to convert the value to a string. Values received from HTTP are kept "
"as strings."
msgstr ""

#: ../../library/http.cookies.rst:66
msgid "Module :mod:`http.cookiejar`"
msgstr "Модуль :mod:`http.cookiejar`"

#: ../../library/http.cookies.rst:65
msgid ""
"HTTP cookie handling for web *clients*.  The :mod:`http.cookiejar` and :mod:"
"`http.cookies` modules do not depend on each other."
msgstr ""
"Обработка файлов cookie HTTP для веб-клиентов. Модули :mod:`http.cookiejar` "
"и :mod:`http.cookies` не зависят друг от друга."

#: ../../library/http.cookies.rst:68
msgid ":rfc:`2109` - HTTP State Management Mechanism"
msgstr ":rfc:`2109` - Механизм управления состоянием HTTP"

#: ../../library/http.cookies.rst:69
msgid "This is the state management specification implemented by this module."
msgstr "Это спецификация управления состоянием, реализованная данным модулем."

#: ../../library/http.cookies.rst:75
msgid "Cookie Objects"
msgstr "Объекты cookie-файлов"

#: ../../library/http.cookies.rst:80
msgid ""
"Return a tuple ``(real_value, coded_value)`` from a string representation. "
"``real_value`` can be any type. This method does no decoding in :class:"
"`BaseCookie` --- it exists so it can be overridden."
msgstr ""
"Возврат кортежа ``(real_value, coded_value)`` из строкового представления. "
"``real_value`` может быть любого типа. Этот метод не выполняет декодирование "
"в :class:`BaseCookie` --- он существует и его можно переопределить."

#: ../../library/http.cookies.rst:87
msgid ""
"Return a tuple ``(real_value, coded_value)``. *val* can be any type, but "
"``coded_value`` will always be converted to a string. This method does no "
"encoding in :class:`BaseCookie` --- it exists so it can be overridden."
msgstr ""
"Вернуть кортеж ``(real_value, coded_value)``. *val* может быть любого типа, "
"но ``coded_value`` всегда будет преобразовано в строку. Этот метод не "
"выполняет кодировку в :class:`BaseCookie` --- он существует, поэтому его "
"можно переопределить."

#: ../../library/http.cookies.rst:92
msgid ""
"In general, it should be the case that :meth:`value_encode` and :meth:"
"`value_decode` are inverses on the range of *value_decode*."
msgstr ""
"В общем, должно быть так, что :meth:`value_encode` и :meth:`value_decode` "
"являются инверсиями в диапазоне *value_decode*."

#: ../../library/http.cookies.rst:98
msgid ""
"Return a string representation suitable to be sent as HTTP headers. *attrs* "
"and *header* are sent to each :class:`Morsel`'s :meth:`output` method. *sep* "
"is used to join the headers together, and is by default the combination "
"``'\\r\\n'`` (CRLF)."
msgstr ""
"Возвращает строковое представление, подходящее для отправки в виде "
"заголовков HTTP. *attrs* и *header* отправляются в каждый метод :meth:"
"`output` :class:`Morsel`. *sep* используется для объединения заголовков и по "
"умолчанию представляет собой комбинацию ``'\\r\\n'`` (CRLF)."

#: ../../library/http.cookies.rst:106
msgid ""
"Return an embeddable JavaScript snippet, which, if run on a browser which "
"supports JavaScript, will act the same as if the HTTP headers was sent."
msgstr ""
"Возвращает встраиваемый фрагмент JavaScript, который при запуске в браузере, "
"поддерживающем JavaScript, будет действовать так же, как если бы были "
"отправлены заголовки HTTP."

#: ../../library/http.cookies.rst:109 ../../library/http.cookies.rst:205
#: ../../library/http.cookies.rst:213
msgid "The meaning for *attrs* is the same as in :meth:`output`."
msgstr "Значение *attrs* такое же, как и в :meth:`output`."

#: ../../library/http.cookies.rst:114
msgid ""
"If *rawdata* is a string, parse it as an ``HTTP_COOKIE`` and add the values "
"found there as :class:`Morsel`\\ s. If it is a dictionary, it is equivalent "
"to::"
msgstr ""
"Если *rawdata* — это строка, проанализируйте ее как ``HTTP_COOKIE`` и "
"добавьте найденные там значения как :class:`Morsel`\\ s. Если это словарь, "
"он эквивалентен::"

#: ../../library/http.cookies.rst:124
msgid "Morsel Objects"
msgstr "Мелкие объекты"

#: ../../library/http.cookies.rst:129
msgid "Abstract a key/value pair, which has some :rfc:`2109` attributes."
msgstr ""
"Абстрагируйте пару ключ/значение, которая имеет некоторые атрибуты :rfc:"
"`2109`."

#: ../../library/http.cookies.rst:131
msgid ""
"Morsels are dictionary-like objects, whose set of keys is constant --- the "
"valid :rfc:`2109` attributes, which are"
msgstr ""

#: ../../library/http.cookies.rst:134
msgid "``expires``"
msgstr ""

#: ../../library/http.cookies.rst:135
msgid "``path``"
msgstr ""

#: ../../library/http.cookies.rst:136
msgid "``comment``"
msgstr ""

#: ../../library/http.cookies.rst:137
msgid "``domain``"
msgstr ""

#: ../../library/http.cookies.rst:138
msgid "``max-age``"
msgstr ""

#: ../../library/http.cookies.rst:139
msgid "``secure``"
msgstr ""

#: ../../library/http.cookies.rst:140
msgid "``version``"
msgstr ""

#: ../../library/http.cookies.rst:141
msgid "``httponly``"
msgstr ""

#: ../../library/http.cookies.rst:142
msgid "``samesite``"
msgstr ""

#: ../../library/http.cookies.rst:144
msgid ""
"The attribute :attr:`httponly` specifies that the cookie is only transferred "
"in HTTP requests, and is not accessible through JavaScript. This is intended "
"to mitigate some forms of cross-site scripting."
msgstr ""
"Атрибут :attr:`httponly` указывает, что файл cookie передается только в HTTP-"
"запросах и недоступен через JavaScript. Это предназначено для смягчения "
"некоторых форм межсайтового скриптинга."

#: ../../library/http.cookies.rst:148
msgid ""
"The attribute :attr:`samesite` specifies that the browser is not allowed to "
"send the cookie along with cross-site requests. This helps to mitigate CSRF "
"attacks. Valid values for this attribute are \"Strict\" and \"Lax\"."
msgstr ""
"Атрибут :attr:`samesite` указывает, что браузеру не разрешено отправлять "
"файлы cookie вместе с межсайтовыми запросами. Это помогает смягчить атаки "
"CSRF. Допустимые значения для этого атрибута: «Строгий» и «Слабый»."

#: ../../library/http.cookies.rst:152
msgid "The keys are case-insensitive and their default value is ``''``."
msgstr "Ключи нечувствительны к регистру, и их значение по умолчанию — ``''``."

#: ../../library/http.cookies.rst:154
msgid ""
":meth:`~Morsel.__eq__` now takes :attr:`~Morsel.key` and :attr:`~Morsel."
"value` into account."
msgstr ""

#: ../../library/http.cookies.rst:158
msgid ""
"Attributes :attr:`~Morsel.key`, :attr:`~Morsel.value` and :attr:`~Morsel."
"coded_value` are read-only.  Use :meth:`~Morsel.set` for setting them."
msgstr ""
"Атрибуты :attr:`~Morsel.key`, :attr:`~Morsel.value` и :attr:`~Morsel."
"coded_value` доступны только для чтения. Используйте :meth:`~Morsel.set` для "
"их установки."

#: ../../library/http.cookies.rst:163
msgid "Added support for the :attr:`samesite` attribute."
msgstr "Добавлена ​​поддержка атрибута :attr:`samesite`."

#: ../../library/http.cookies.rst:169
msgid "The value of the cookie."
msgstr "значение из cookie."

#: ../../library/http.cookies.rst:174
msgid "The encoded value of the cookie --- this is what should be sent."
msgstr "Закодированное значение файла cookie — это то, что следует отправить."

#: ../../library/http.cookies.rst:179
msgid "The name of the cookie."
msgstr "Имя  cookie."

#: ../../library/http.cookies.rst:184
msgid "Set the *key*, *value* and *coded_value* attributes."
msgstr "Установите атрибуты *key*, *value* и *coded_value*."

#: ../../library/http.cookies.rst:189
msgid "Whether *K* is a member of the set of keys of a :class:`Morsel`."
msgstr "Является ли *K* членом набора ключей :class:`Morsel`."

#: ../../library/http.cookies.rst:194
msgid ""
"Return a string representation of the Morsel, suitable to be sent as an HTTP "
"header. By default, all the attributes are included, unless *attrs* is "
"given, in which case it should be a list of attributes to use. *header* is "
"by default ``\"Set-Cookie:\"``."
msgstr ""
"Возвращает строковое представление Morsel, подходящее для отправки в виде "
"заголовка HTTP. По умолчанию включены все атрибуты, если не указано *attrs*; "
"в этом случае это должен быть список используемых атрибутов. *header* по "
"умолчанию имеет значение ``\"Set-Cookie:\"``."

#: ../../library/http.cookies.rst:202
msgid ""
"Return an embeddable JavaScript snippet, which, if run on a browser which "
"supports JavaScript, will act the same as if the HTTP header was sent."
msgstr ""
"Возвращает встраиваемый фрагмент JavaScript, который при запуске в браузере, "
"поддерживающем JavaScript, будет действовать так же, как если бы был "
"отправлен HTTP-заголовок."

#: ../../library/http.cookies.rst:210
msgid ""
"Return a string representing the Morsel, without any surrounding HTTP or "
"JavaScript."
msgstr ""
"Возвращает строку, представляющую Morsel, без какого-либо окружения HTTP или "
"JavaScript."

#: ../../library/http.cookies.rst:218
msgid ""
"Update the values in the Morsel dictionary with the values in the dictionary "
"*values*.  Raise an error if any of the keys in the *values* dict is not a "
"valid :rfc:`2109` attribute."
msgstr ""
"Обновите значения в словаре Morsel значениями из словаря *values*. Вызовите "
"ошибку, если какой-либо из ключей в словаре *values* не является допустимым "
"атрибутом :rfc:`2109`."

#: ../../library/http.cookies.rst:222
msgid "an error is raised for invalid keys."
msgstr "выдается ошибка для неверных ключей."

#: ../../library/http.cookies.rst:228
msgid "Return a shallow copy of the Morsel object."
msgstr "Верните неглубокую копию объекта Morsel."

#: ../../library/http.cookies.rst:230
msgid "return a Morsel object instead of a dict."
msgstr "вернуть объект Morsel вместо dict."

#: ../../library/http.cookies.rst:236
msgid ""
"Raise an error if key is not a valid :rfc:`2109` attribute, otherwise behave "
"the same as :meth:`dict.setdefault`."
msgstr ""
"Выдает ошибку, если ключ не является допустимым атрибутом :rfc:`2109`, в "
"противном случае ведет себя так же, как :meth:`dict.setdefault`."

#: ../../library/http.cookies.rst:243
msgid "Example"
msgstr "Пример"

#: ../../library/http.cookies.rst:245
msgid ""
"The following example demonstrates how to use the :mod:`http.cookies` module."
msgstr ""
"В следующем примере показано, как использовать модуль :mod:`http.cookies`."
