# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# Rafael Fontenelle <rffontenelle@gmail.com>, 2024
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.11\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-01-21 22:20+0000\n"
"PO-Revision-Date: 2023-05-24 02:21+0000\n"
"Last-Translator: Rafael Fontenelle <rffontenelle@gmail.com>, 2024\n"
"Language-Team: Russian (https://app.transifex.com/python-doc/teams/5390/"
"ru/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ru\n"
"Plural-Forms: nplurals=4; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && "
"n%10<=4 && (n%100<12 || n%100>14) ? 1 : n%10==0 || (n%10>=5 && n%10<=9) || "
"(n%100>=11 && n%100<=14)? 2 : 3);\n"

#: ../../library/wsgiref.rst:2
msgid ":mod:`wsgiref` --- WSGI Utilities and Reference Implementation"
msgstr ""

#: ../../library/wsgiref.rst:10
msgid "**Source code:** :source:`Lib/wsgiref`"
msgstr "**Исходный код:** :source:`Lib/wsgiref`"

#: ../../library/wsgiref.rst:14
msgid ""
"The Web Server Gateway Interface (WSGI) is a standard interface between web "
"server software and web applications written in Python. Having a standard "
"interface makes it easy to use an application that supports WSGI with a "
"number of different web servers."
msgstr ""
"Интерфейс шлюза веб-сервера (WSGI) — это стандартный интерфейс между "
"программным обеспечением веб-сервера и веб-приложениями, написанными на "
"Python. Наличие стандартного интерфейса упрощает использование приложения, "
"поддерживающего WSGI, с различными веб-серверами."

#: ../../library/wsgiref.rst:19
msgid ""
"Only authors of web servers and programming frameworks need to know every "
"detail and corner case of the WSGI design.  You don't need to understand "
"every detail of WSGI just to install a WSGI application or to write a web "
"application using an existing framework."
msgstr ""
"Только авторам веб-серверов и сред программирования необходимо знать каждую "
"деталь и особенности конструкции WSGI. Вам не нужно понимать каждую деталь "
"WSGI только для того, чтобы установить приложение WSGI или написать веб-"
"приложение с использованием существующей платформы."

#: ../../library/wsgiref.rst:24
msgid ""
":mod:`wsgiref` is a reference implementation of the WSGI specification that "
"can be used to add WSGI support to a web server or framework.  It provides "
"utilities for manipulating WSGI environment variables and response headers, "
"base classes for implementing WSGI servers, a demo HTTP server that serves "
"WSGI applications, types for static type checking, and a validation tool "
"that checks WSGI servers and applications for conformance to the WSGI "
"specification (:pep:`3333`)."
msgstr ""
":mod:`wsgiref` — это эталонная реализация спецификации WSGI, которую можно "
"использовать для добавления поддержки WSGI на веб-сервер или платформу. Он "
"предоставляет утилиты для управления переменными среды WSGI и заголовками "
"ответов, базовые классы для реализации серверов WSGI, демонстрационный HTTP-"
"сервер, обслуживающий приложения WSGI, типы для статической проверки типов и "
"инструмент проверки, который проверяет серверы и приложения WSGI на "
"соответствие спецификации WSGI. (:pep:`3333`)."

#: ../../library/wsgiref.rst:32
msgid ""
"See `wsgi.readthedocs.io <https://wsgi.readthedocs.io/>`_ for more "
"information about WSGI, and links to tutorials and other resources."
msgstr ""
"См. `wsgi.readthedocs.io <https://wsgi.readthedocs.io/>`_ для получения "
"дополнительной информации о WSGI, а также ссылок на учебные пособия и другие "
"ресурсы."

#: ../../library/wsgiref.rst:39
msgid ":mod:`wsgiref.util` -- WSGI environment utilities"
msgstr ":mod:`wsgiref.util` -- утилиты среды WSGI."

#: ../../library/wsgiref.rst:45
msgid ""
"This module provides a variety of utility functions for working with WSGI "
"environments.  A WSGI environment is a dictionary containing HTTP request "
"variables as described in :pep:`3333`.  All of the functions taking an "
"*environ* parameter expect a WSGI-compliant dictionary to be supplied; "
"please see :pep:`3333` for a detailed specification and :data:`~wsgiref."
"types.WSGIEnvironment` for a type alias that can be used in type annotations."
msgstr ""
"Этот модуль предоставляет множество служебных функций для работы со средами "
"WSGI. Среда WSGI — это словарь, содержащий переменные HTTP-запроса, как "
"описано в :pep:`3333`. Все функции, принимающие параметр *environ*, ожидают "
"предоставления WSGI-совместимого словаря; пожалуйста, смотрите :pep:`3333` "
"для подробной спецификации и :data:`~wsgiref.types.WSGIEnvironment` для "
"получения псевдонима типа, который можно использовать в аннотациях типа."

#: ../../library/wsgiref.rst:56
msgid ""
"Return a guess for whether ``wsgi.url_scheme`` should be \"http\" or "
"\"https\", by checking for a ``HTTPS`` environment variable in the *environ* "
"dictionary.  The return value is a string."
msgstr ""
"Возвращает предположение о том, должен ли ``wsgi.url_scheme`` быть \"http\" "
"или \"https\", проверив переменную среды ``HTTPS`` в словаре *environ*. "
"Возвращаемое значение представляет собой строку."

#: ../../library/wsgiref.rst:60
msgid ""
"This function is useful when creating a gateway that wraps CGI or a CGI-like "
"protocol such as FastCGI.  Typically, servers providing such protocols will "
"include a ``HTTPS`` variable with a value of \"1\", \"yes\", or \"on\" when "
"a request is received via SSL.  So, this function returns \"https\" if such "
"a value is found, and \"http\" otherwise."
msgstr ""
"Эта функция полезна при создании шлюза, который использует CGI или CGI-"
"подобный протокол, например FastCGI. Обычно серверы, предоставляющие такие "
"протоколы, включают переменную HTTPS со значением «1», «да» или «включено», "
"когда запрос получен через SSL. Итак, эта функция возвращает «https», если "
"такое значение найдено, и «http» в противном случае."

#: ../../library/wsgiref.rst:69
msgid ""
"Return the full request URI, optionally including the query string, using "
"the algorithm found in the \"URL Reconstruction\" section of :pep:`3333`.  "
"If *include_query* is false, the query string is not included in the "
"resulting URI."
msgstr ""
"Верните полный URI запроса, включая, при необходимости, строку запроса, "
"используя алгоритм, описанный в разделе «Реконструкция URL-адреса» "
"документа :pep:`3333`. Если *include_query* имеет значение false, строка "
"запроса не включается в результирующий URI."

#: ../../library/wsgiref.rst:76
msgid ""
"Similar to :func:`request_uri`, except that the ``PATH_INFO`` and "
"``QUERY_STRING`` variables are ignored.  The result is the base URI of the "
"application object addressed by the request."
msgstr ""
"Аналогично :func:`request_uri`, за исключением того, что переменные "
"``PATH_INFO`` и ``QUERY_STRING`` игнорируются. Результатом является базовый "
"URI объекта приложения, к которому обращается запрос."

#: ../../library/wsgiref.rst:83
msgid ""
"Shift a single name from ``PATH_INFO`` to ``SCRIPT_NAME`` and return the "
"name. The *environ* dictionary is *modified* in-place; use a copy if you "
"need to keep the original ``PATH_INFO`` or ``SCRIPT_NAME`` intact."
msgstr ""
"Измените одно имя с ``PATH_INFO`` на ``SCRIPT_NAME`` и верните имя. Словарь "
"*environ* *модифицируется* на месте; используйте копию, если вам нужно "
"сохранить исходный ``PATH_INFO`` или ``SCRIPT_NAME`` нетронутым."

#: ../../library/wsgiref.rst:87
msgid ""
"If there are no remaining path segments in ``PATH_INFO``, ``None`` is "
"returned."
msgstr "Если в PATH_INFO не осталось сегментов пути, возвращается None."

#: ../../library/wsgiref.rst:89
msgid ""
"Typically, this routine is used to process each portion of a request URI "
"path, for example to treat the path as a series of dictionary keys. This "
"routine modifies the passed-in environment to make it suitable for invoking "
"another WSGI application that is located at the target URI. For example, if "
"there is a WSGI application at ``/foo``, and the request URI path is ``/foo/"
"bar/baz``, and the WSGI application at ``/foo`` calls :func:"
"`shift_path_info`, it will receive the string \"bar\", and the environment "
"will be updated to be suitable for passing to a WSGI application at ``/foo/"
"bar``.  That is, ``SCRIPT_NAME`` will change from ``/foo`` to ``/foo/bar``, "
"and ``PATH_INFO`` will change from ``/bar/baz`` to ``/baz``."
msgstr ""
"Обычно эта процедура используется для обработки каждой части пути URI "
"запроса, например, для обработки пути как серии ключей словаря. Эта "
"процедура изменяет переданную среду, чтобы сделать ее пригодной для вызова "
"другого приложения WSGI, расположенного по целевому URI. Например, если в ``/"
"foo`` есть приложение WSGI, а путь URI запроса – ``/foo/bar/baz``, а "
"приложение WSGI в ``/foo`` вызывает :func:` shift_path_info`, он получит "
"строку \"bar\", и среда будет обновлена, чтобы быть подходящей для передачи "
"в приложение WSGI по адресу ``/foo/bar``. То есть ``SCRIPT_NAME`` изменится "
"с ``/foo`` на ``/foo/bar``, а ``PATH_INFO`` изменится с ``/bar/baz`` на ``/"
"baz` `."

#: ../../library/wsgiref.rst:100
msgid ""
"When ``PATH_INFO`` is just a \"/\", this routine returns an empty string and "
"appends a trailing slash to ``SCRIPT_NAME``, even though empty path segments "
"are normally ignored, and ``SCRIPT_NAME`` doesn't normally end in a slash.  "
"This is intentional behavior, to ensure that an application can tell the "
"difference between URIs ending in ``/x`` from ones ending in ``/x/`` when "
"using this routine to do object traversal."
msgstr ""
"Когда ``PATH_INFO`` представляет собой просто \"/\", эта процедура "
"возвращает пустую строку и добавляет косую черту к ``SCRIPT_NAME``, хотя "
"пустые сегменты пути обычно игнорируются, а ``SCRIPT_NAME`` обычно не "
"игнорируется. заканчиваться косой чертой. Это намеренное поведение, "
"призванное гарантировать, что приложение может отличить URI, оканчивающиеся "
"на ``/x``, от URI, заканчивающихся на ``/x/``, при использовании этой "
"процедуры для обхода объекта."

#: ../../library/wsgiref.rst:110
msgid "Update *environ* with trivial defaults for testing purposes."
msgstr ""
"Обновите *environ*, указав тривиальные настройки по умолчанию для целей "
"тестирования."

#: ../../library/wsgiref.rst:112
msgid ""
"This routine adds various parameters required for WSGI, including "
"``HTTP_HOST``, ``SERVER_NAME``, ``SERVER_PORT``, ``REQUEST_METHOD``, "
"``SCRIPT_NAME``, ``PATH_INFO``, and all of the :pep:`3333`\\ -defined ``wsgi."
"*`` variables.  It only supplies default values, and does not replace any "
"existing settings for these variables."
msgstr ""
"Эта процедура добавляет различные параметры, необходимые для WSGI, включая "
"HTTP_HOST, SERVER_NAME, SERVER_PORT, REQUEST_METHOD, SCRIPT_NAME, PATH_INFO "
"и все :pep:`3333`\\ -определенные переменные ``wsgi.*``. Он предоставляет "
"только значения по умолчанию и не заменяет существующие настройки этих "
"переменных."

#: ../../library/wsgiref.rst:118
msgid ""
"This routine is intended to make it easier for unit tests of WSGI servers "
"and applications to set up dummy environments.  It should NOT be used by "
"actual WSGI servers or applications, since the data is fake!"
msgstr ""
"Эта процедура предназначена для упрощения модульных тестов серверов и "
"приложений WSGI для настройки фиктивных сред. Его НЕ следует использовать "
"реальными серверами или приложениями WSGI, поскольку данные являются "
"поддельными!"

#: ../../library/wsgiref.rst:122 ../../library/wsgiref.rst:170
#: ../../library/wsgiref.rst:293 ../../library/wsgiref.rst:426
msgid "Example usage::"
msgstr "Пример использования::"

#: ../../library/wsgiref.rst:146
msgid ""
"In addition to the environment functions above, the :mod:`wsgiref.util` "
"module also provides these miscellaneous utilities:"
msgstr ""
"В дополнение к вышеперечисленным функциям среды модуль :mod:`wsgiref.util` "
"также предоставляет следующие разные утилиты:"

#: ../../library/wsgiref.rst:152
msgid ""
"Return ``True`` if 'header_name' is an HTTP/1.1 \"Hop-by-Hop\" header, as "
"defined by :rfc:`2616`."
msgstr ""
"Возвращает ``True``, если 'header_name' представляет собой заголовок "
"HTTP/1.1 \"Hop-by-Hop\", как определено в :rfc:`2616`."

#: ../../library/wsgiref.rst:158
msgid ""
"A concrete implementation of the :class:`wsgiref.types.FileWrapper` protocol "
"used to convert a file-like object to an :term:`iterator`. The resulting "
"objects are :term:`iterable`\\ s. As the object is iterated over, the "
"optional *blksize* parameter will be repeatedly passed to the *filelike* "
"object's :meth:`read` method to obtain bytestrings to yield.  When :meth:"
"`read` returns an empty bytestring, iteration is ended and is not resumable."
msgstr ""
"Конкретная реализация протокола :class:`wsgiref.types.FileWrapper`, "
"используемого для преобразования файлового объекта в :term:`итератор`. "
"Результирующими объектами являются :term:`iterable`\\ s. По мере итерации "
"объекта необязательный параметр *blksize* будет неоднократно передаваться в "
"метод :meth:`read` объекта *filelike* для получения байтовых строк для "
"вывода. Когда :meth:`read` возвращает пустую строку байтов, итерация "
"завершается и не может быть возобновлена."

#: ../../library/wsgiref.rst:166
msgid ""
"If *filelike* has a :meth:`close` method, the returned object will also have "
"a :meth:`close` method, and it will invoke the *filelike* object's :meth:"
"`close` method when called."
msgstr ""
"Если *filelike* имеет метод :meth:`close`, возвращаемый объект также будет "
"иметь метод :meth:`close` и при вызове будет вызывать метод :meth:`close` "
"объекта *filelike*."

#: ../../library/wsgiref.rst:182
msgid "Support for :meth:`~object.__getitem__` method has been removed."
msgstr "Поддержка метода :meth:`~object.__getitem__` удалена."

#: ../../library/wsgiref.rst:187
msgid ":mod:`wsgiref.headers` -- WSGI response header tools"
msgstr ":mod:`wsgiref.headers` -- инструменты заголовка ответа WSGI"

#: ../../library/wsgiref.rst:193
msgid ""
"This module provides a single class, :class:`Headers`, for convenient "
"manipulation of WSGI response headers using a mapping-like interface."
msgstr ""
"Этот модуль предоставляет единственный класс :class:`Headers` для удобного "
"манипулирования заголовками ответов WSGI с использованием интерфейса, "
"похожего на сопоставление."

#: ../../library/wsgiref.rst:199
msgid ""
"Create a mapping-like object wrapping *headers*, which must be a list of "
"header name/value tuples as described in :pep:`3333`. The default value of "
"*headers* is an empty list."
msgstr ""
"Создайте подобную сопоставлению оболочку объекта *headers*, которая должна "
"представлять собой список кортежей имени/значения заголовка, как описано в :"
"pep:`3333`. Значением по умолчанию *headers* является пустой список."

#: ../../library/wsgiref.rst:203
msgid ""
":class:`Headers` objects support typical mapping operations including :meth:"
"`~object.__getitem__`, :meth:`~dict.get`, :meth:`~object.__setitem__`, :meth:"
"`~dict.setdefault`, :meth:`~object.__delitem__` and :meth:`~object."
"__contains__`.  For each of these methods, the key is the header name "
"(treated case-insensitively), and the value is the first value associated "
"with that header name.  Setting a header deletes any existing values for "
"that header, then adds a new value at the end of the wrapped header list.  "
"Headers' existing order is generally maintained, with new headers added to "
"the end of the wrapped list."
msgstr ""
"Объекты :class:`Headers` поддерживают типичные операции сопоставления, "
"включая :meth:`~object.__getitem__`, :meth:`~dict.get`, :meth:`~object."
"__setitem__`, :meth:`~dict.setdefault `, :meth:`~object.__delitem__` и :meth:"
"`~object.__contains__`. Для каждого из этих методов ключом является имя "
"заголовка (обрабатывается без учета регистра), а значением является первое "
"значение, связанное с этим именем заголовка. Установка заголовка удаляет все "
"существующие значения для этого заголовка, а затем добавляет новое значение "
"в конец списка упакованных заголовков. Существующий порядок заголовков "
"обычно сохраняется, а новые заголовки добавляются в конец обернутого списка."

#: ../../library/wsgiref.rst:213
msgid ""
"Unlike a dictionary, :class:`Headers` objects do not raise an error when you "
"try to get or delete a key that isn't in the wrapped header list. Getting a "
"nonexistent header just returns ``None``, and deleting a nonexistent header "
"does nothing."
msgstr ""
"В отличие от словаря, объекты :class:`Headers` не вызывают ошибку, когда вы "
"пытаетесь получить или удалить ключ, которого нет в обернутом списке "
"заголовков. Получение несуществующего заголовка просто возвращает None, а "
"удаление несуществующего заголовка ничего не делает."

#: ../../library/wsgiref.rst:218
msgid ""
":class:`Headers` objects also support :meth:`keys`, :meth:`values`, and :"
"meth:`items` methods.  The lists returned by :meth:`keys` and :meth:`items` "
"can include the same key more than once if there is a multi-valued header.  "
"The ``len()`` of a :class:`Headers` object is the same as the length of its :"
"meth:`items`, which is the same as the length of the wrapped header list.  "
"In fact, the :meth:`items` method just returns a copy of the wrapped header "
"list."
msgstr ""
"Объекты :class:`Headers` также поддерживают методы :meth:`keys`, :meth:"
"`values` и :meth:`items`. Списки, возвращаемые :meth:`keys` и :meth:`items`, "
"могут включать один и тот же ключ более одного раза, если имеется "
"многозначный заголовок. ``len()`` объекта :class:`Headers` совпадает с "
"длиной его :meth:`items`, которая равна длине обернутого списка заголовков. "
"Фактически, метод :meth:`items` просто возвращает копию завернутого списка "
"заголовков."

#: ../../library/wsgiref.rst:225
msgid ""
"Calling ``bytes()`` on a :class:`Headers` object returns a formatted "
"bytestring suitable for transmission as HTTP response headers.  Each header "
"is placed on a line with its value, separated by a colon and a space. Each "
"line is terminated by a carriage return and line feed, and the bytestring is "
"terminated with a blank line."
msgstr ""
"Вызов ``bytes()`` для объекта :class:`Headers` возвращает отформатированную "
"байтовую строку, подходящую для передачи в виде заголовков ответа HTTP. "
"Каждый заголовок помещается в строку со своим значением, разделенным "
"двоеточием и пробелом. Каждая строка завершается возвратом каретки и "
"переводом строки, а строка байтов завершается пустой строкой."

#: ../../library/wsgiref.rst:231
msgid ""
"In addition to their mapping interface and formatting features, :class:"
"`Headers` objects also have the following methods for querying and adding "
"multi-valued headers, and for adding headers with MIME parameters:"
msgstr ""
"В дополнение к интерфейсу отображения и функциям форматирования, объекты :"
"class:`Headers` также имеют следующие методы для запроса и добавления "
"многозначных заголовков, а также для добавления заголовков с параметрами "
"MIME:"

#: ../../library/wsgiref.rst:238
msgid "Return a list of all the values for the named header."
msgstr "Возвращает список всех значений именованного заголовка."

#: ../../library/wsgiref.rst:240
msgid ""
"The returned list will be sorted in the order they appeared in the original "
"header list or were added to this instance, and may contain duplicates.  Any "
"fields deleted and re-inserted are always appended to the header list.  If "
"no fields exist with the given name, returns an empty list."
msgstr ""
"Возвращенный список будет отсортирован в том порядке, в котором они "
"появились в исходном списке заголовков или были добавлены в этот экземпляр, "
"и могут содержать дубликаты. Любые удаленные и повторно вставленные поля "
"всегда добавляются в список заголовков. Если полей с данным именем не "
"существует, возвращается пустой список."

#: ../../library/wsgiref.rst:248
msgid ""
"Add a (possibly multi-valued) header, with optional MIME parameters "
"specified via keyword arguments."
msgstr ""
"Добавьте заголовок (возможно, многозначный) с дополнительными параметрами "
"MIME, указанными через аргументы ключевого слова."

#: ../../library/wsgiref.rst:251
msgid ""
"*name* is the header field to add.  Keyword arguments can be used to set "
"MIME parameters for the header field.  Each parameter must be a string or "
"``None``. Underscores in parameter names are converted to dashes, since "
"dashes are illegal in Python identifiers, but many MIME parameter names "
"include dashes.  If the parameter value is a string, it is added to the "
"header value parameters in the form ``name=\"value\"``. If it is ``None``, "
"only the parameter name is added. (This is used for MIME parameters without "
"a value.)  Example usage::"
msgstr ""
"*имя* — это добавляемое поле заголовка. Аргументы ключевого слова можно "
"использовать для установки параметров MIME для поля заголовка. Каждый "
"параметр должен быть строкой или «Нет». Подчеркивания в именах параметров "
"преобразуются в тире, поскольку тире недопустимы в идентификаторах Python, "
"но многие имена параметров MIME включают тире. Если значение параметра "
"является строкой, оно добавляется к параметрам значения заголовка в форме "
"``name=\"value\"``. Если указано значение «Нет», добавляется только имя "
"параметра. (Это используется для параметров MIME без значения.) Пример "
"использования::"

#: ../../library/wsgiref.rst:261
msgid "The above will add a header that looks like this::"
msgstr "Вышеупомянутое добавит заголовок, который выглядит следующим образом:"

#: ../../library/wsgiref.rst:266
msgid "*headers* parameter is optional."
msgstr "Параметр *headers* является необязательным."

#: ../../library/wsgiref.rst:271
msgid ":mod:`wsgiref.simple_server` -- a simple WSGI HTTP server"
msgstr ":mod:`wsgiref.simple_server` — простой HTTP-сервер WSGI."

#: ../../library/wsgiref.rst:277
msgid ""
"This module implements a simple HTTP server (based on :mod:`http.server`) "
"that serves WSGI applications.  Each server instance serves a single WSGI "
"application on a given host and port.  If you want to serve multiple "
"applications on a single host and port, you should create a WSGI application "
"that parses ``PATH_INFO`` to select which application to invoke for each "
"request.  (E.g., using the :func:`shift_path_info` function from :mod:"
"`wsgiref.util`.)"
msgstr ""
"Этот модуль реализует простой HTTP-сервер (на основе :mod:`http.server`), "
"который обслуживает приложения WSGI. Каждый экземпляр сервера обслуживает "
"одно приложение WSGI на определенном хосте и порту. Если вы хотите "
"обслуживать несколько приложений на одном хосте и порту, вам следует создать "
"приложение WSGI, которое анализирует PATH_INFO, чтобы выбрать, какое "
"приложение вызывать для каждого запроса. (Например, используя функцию :func:"
"`shift_path_info` из :mod:`wsgiref.util`.)"

#: ../../library/wsgiref.rst:288
msgid ""
"Create a new WSGI server listening on *host* and *port*, accepting "
"connections for *app*.  The return value is an instance of the supplied "
"*server_class*, and will process requests using the specified "
"*handler_class*.  *app* must be a WSGI application object, as defined by :"
"pep:`3333`."
msgstr ""
"Создайте новый сервер WSGI, прослушивающий *хост* и *порт* и принимающий "
"соединения для *приложения*. Возвращаемое значение является экземпляром "
"предоставленного *server_class* и будет обрабатывать запросы с "
"использованием указанного *handler_class*. *app* должно быть объектом "
"приложения WSGI, как определено в :pep:`3333`."

#: ../../library/wsgiref.rst:309
msgid ""
"This function is a small but complete WSGI application that returns a text "
"page containing the message \"Hello world!\" and a list of the key/value "
"pairs provided in the *environ* parameter.  It's useful for verifying that a "
"WSGI server (such as :mod:`wsgiref.simple_server`) is able to run a simple "
"WSGI application correctly."
msgstr ""
"Эта функция представляет собой небольшое, но полноценное WSGI-приложение, "
"которое возвращает текстовую страницу, содержащую сообщение «Hello world!» и "
"список пар ключ/значение, указанный в параметре *environ*. Это полезно для "
"проверки того, что сервер WSGI (например, :mod:`wsgiref.simple_server`) "
"может правильно запускать простое приложение WSGI."

#: ../../library/wsgiref.rst:318
msgid ""
"Create a :class:`WSGIServer` instance.  *server_address* should be a ``(host,"
"port)`` tuple, and *RequestHandlerClass* should be the subclass of :class:"
"`http.server.BaseHTTPRequestHandler` that will be used to process requests."
msgstr ""
"Создайте экземпляр :class:`WSGIServer`. *server_address* должен быть "
"кортежем ``(host,port)``, а *RequestHandlerClass* должен быть подклассом :"
"class:`http.server.BaseHTTPRequestHandler`, который будет использоваться для "
"обработки запросов."

#: ../../library/wsgiref.rst:323
msgid ""
"You do not normally need to call this constructor, as the :func:"
"`make_server` function can handle all the details for you."
msgstr ""
"Обычно вам не нужно вызывать этот конструктор, поскольку функция :func:"
"`make_server` может обработать всю информацию за вас."

#: ../../library/wsgiref.rst:326
msgid ""
":class:`WSGIServer` is a subclass of :class:`http.server.HTTPServer`, so all "
"of its methods (such as :meth:`serve_forever` and :meth:`handle_request`) "
"are available. :class:`WSGIServer` also provides these WSGI-specific methods:"
msgstr ""
":class:`WSGIServer` является подклассом :class:`http.server.HTTPServer`, "
"поэтому доступны все его методы (такие как :meth:`serve_forever` и :meth:"
"`handle_request`). :class:`WSGIServer` также предоставляет следующие WSGI-"
"методы:"

#: ../../library/wsgiref.rst:333
msgid ""
"Sets the callable *application* as the WSGI application that will receive "
"requests."
msgstr ""
"Устанавливает вызываемое *приложение* в качестве приложения WSGI, которое "
"будет получать запросы."

#: ../../library/wsgiref.rst:339
msgid "Returns the currently set application callable."
msgstr "Возвращает текущее установленное вызываемое приложение."

#: ../../library/wsgiref.rst:341
msgid ""
"Normally, however, you do not need to use these additional methods, as :meth:"
"`set_app` is normally called by :func:`make_server`, and the :meth:`get_app` "
"exists mainly for the benefit of request handler instances."
msgstr ""
"Однако обычно вам не нужно использовать эти дополнительные методы, "
"поскольку :meth:`set_app` обычно вызывается :func:`make_server`, а :meth:"
"`get_app` существует главным образом для использования экземпляров "
"обработчика запросов."

#: ../../library/wsgiref.rst:348
msgid ""
"Create an HTTP handler for the given *request* (i.e. a socket), "
"*client_address* (a ``(host,port)`` tuple), and *server* (:class:"
"`WSGIServer` instance)."
msgstr ""
"Создайте обработчик HTTP для данного *запроса* (т.е. сокета), "
"*client_address* (кортежа ``(host,port)``) и *server* (экземпляр:class:"
"`WSGIServer`)."

#: ../../library/wsgiref.rst:351
msgid ""
"You do not need to create instances of this class directly; they are "
"automatically created as needed by :class:`WSGIServer` objects.  You can, "
"however, subclass this class and supply it as a *handler_class* to the :func:"
"`make_server` function.  Some possibly relevant methods for overriding in "
"subclasses:"
msgstr ""
"Вам не нужно создавать экземпляры этого класса напрямую; они автоматически "
"создаются по мере необходимости объектами :class:`WSGIServer`. Однако вы "
"можете создать подкласс этого класса и передать его как *handler_class* "
"функции :func:`make_server`. Некоторые возможные методы переопределения в "
"подклассах:"

#: ../../library/wsgiref.rst:360
msgid ""
"Return a :data:`~wsgiref.types.WSGIEnvironment` dictionary for a request.  "
"The default implementation copies the contents of the :class:`WSGIServer` "
"object's :attr:`base_environ` dictionary attribute and then adds various "
"headers derived from the HTTP request.  Each call to this method should "
"return a new dictionary containing all of the relevant CGI environment "
"variables as specified in :pep:`3333`."
msgstr ""
"Возвращает словарь :data:`~wsgiref.types.WSGIEnvironment` для запроса. "
"Реализация по умолчанию копирует содержимое атрибута словаря :attr:"
"`base_environ` объекта :class:`WSGIServer`, а затем добавляет различные "
"заголовки, полученные из HTTP-запроса. Каждый вызов этого метода должен "
"возвращать новый словарь, содержащий все соответствующие переменные среды "
"CGI, как указано в :pep:`3333`."

#: ../../library/wsgiref.rst:371
msgid ""
"Return the object that should be used as the ``wsgi.errors`` stream. The "
"default implementation just returns ``sys.stderr``."
msgstr ""
"Верните объект, который следует использовать в качестве потока wsgi.errors. "
"Реализация по умолчанию просто возвращает ``sys.stderr``."

#: ../../library/wsgiref.rst:377
msgid ""
"Process the HTTP request.  The default implementation creates a handler "
"instance using a :mod:`wsgiref.handlers` class to implement the actual WSGI "
"application interface."
msgstr ""
"Обработайте HTTP-запрос. Реализация по умолчанию создает экземпляр "
"обработчика с использованием класса :mod:`wsgiref.handlers` для реализации "
"фактического интерфейса приложения WSGI."

#: ../../library/wsgiref.rst:383
msgid ":mod:`wsgiref.validate` --- WSGI conformance checker"
msgstr ":mod:`wsgiref.validate` --- Проверка соответствия WSGI"

#: ../../library/wsgiref.rst:389
msgid ""
"When creating new WSGI application objects, frameworks, servers, or "
"middleware, it can be useful to validate the new code's conformance using :"
"mod:`wsgiref.validate`.  This module provides a function that creates WSGI "
"application objects that validate communications between a WSGI server or "
"gateway and a WSGI application object, to check both sides for protocol "
"conformance."
msgstr ""
"При создании новых объектов приложения WSGI, платформ, серверов или "
"промежуточного программного обеспечения может быть полезно проверить "
"соответствие нового кода с помощью :mod:`wsgiref.validate`. Этот модуль "
"предоставляет функцию, которая создает объекты приложения WSGI, которые "
"проверяют связь между сервером или шлюзом WSGI и объектом приложения WSGI, "
"чтобы проверить обе стороны на соответствие протоколу."

#: ../../library/wsgiref.rst:396
msgid ""
"Note that this utility does not guarantee complete :pep:`3333` compliance; "
"an absence of errors from this module does not necessarily mean that errors "
"do not exist.  However, if this module does produce an error, then it is "
"virtually certain that either the server or application is not 100% "
"compliant."
msgstr ""
"Обратите внимание, что эта утилита не гарантирует полного соответствия :pep:"
"`3333`; отсутствие ошибок в этом модуле не обязательно означает, что ошибок "
"не существует. Однако если этот модуль выдает ошибку, то практически "
"наверняка сервер или приложение не соответствуют требованиям на 100%."

#: ../../library/wsgiref.rst:401
msgid ""
"This module is based on the :mod:`paste.lint` module from Ian Bicking's "
"\"Python Paste\" library."
msgstr ""
"Этот модуль основан на модуле :mod:`paste.lint` из библиотеки Яна Бикинга "
"«Python Paste»."

#: ../../library/wsgiref.rst:407
msgid ""
"Wrap *application* and return a new WSGI application object.  The returned "
"application will forward all requests to the original *application*, and "
"will check that both the *application* and the server invoking it are "
"conforming to the WSGI specification and to :rfc:`2616`."
msgstr ""
"Оберните *application* и верните новый объект приложения WSGI. Возвращенное "
"приложение перенаправит все запросы исходному *приложению* и проверит, что "
"*приложение* и вызывающий его сервер соответствуют спецификации WSGI и :rfc:"
"`2616`."

#: ../../library/wsgiref.rst:412
msgid ""
"Any detected nonconformance results in an :exc:`AssertionError` being "
"raised; note, however, that how these errors are handled is server-"
"dependent.  For example, :mod:`wsgiref.simple_server` and other servers "
"based on :mod:`wsgiref.handlers` (that don't override the error handling "
"methods to do something else) will simply output a message that an error has "
"occurred, and dump the traceback to ``sys.stderr`` or some other error "
"stream."
msgstr ""
"Любое обнаруженное несоответствие приводит к возникновению ошибки :exc:"
"`AssertionError`; Однако обратите внимание, что способ обработки этих ошибок "
"зависит от сервера. Например, :mod:`wsgiref.simple_server` и другие серверы, "
"основанные на :mod:`wsgiref.handlers` (которые не переопределяют методы "
"обработки ошибок для выполнения чего-то другого), просто выведут сообщение о "
"том, что произошла ошибка, и сбросьте обратную трассировку в ``sys.stderr`` "
"или какой-либо другой поток ошибок."

#: ../../library/wsgiref.rst:419
msgid ""
"This wrapper may also generate output using the :mod:`warnings` module to "
"indicate behaviors that are questionable but which may not actually be "
"prohibited by :pep:`3333`.  Unless they are suppressed using Python command-"
"line options or the :mod:`warnings` API, any such warnings will be written "
"to ``sys.stderr`` (*not* ``wsgi.errors``, unless they happen to be the same "
"object)."
msgstr ""
"Эта оболочка также может генерировать выходные данные с использованием "
"модуля :mod:`warnings` для указания сомнительного поведения, которое на "
"самом деле не может быть запрещено :pep:`3333`. Если они не подавлены с "
"помощью параметров командной строки Python или API :mod:`warnings`, любые "
"такие предупреждения будут записаны в ``sys.stderr`` (*не* ``wsgi.errors``, "
"если только они не быть одним и тем же объектом)."

#: ../../library/wsgiref.rst:451
msgid ":mod:`wsgiref.handlers` -- server/gateway base classes"
msgstr ":mod:`wsgiref.handlers` -- базовые классы сервера/шлюза"

#: ../../library/wsgiref.rst:457
msgid ""
"This module provides base handler classes for implementing WSGI servers and "
"gateways.  These base classes handle most of the work of communicating with "
"a WSGI application, as long as they are given a CGI-like environment, along "
"with input, output, and error streams."
msgstr ""
"Этот модуль предоставляет базовые классы обработчиков для реализации "
"серверов и шлюзов WSGI. Эти базовые классы выполняют большую часть работы по "
"взаимодействию с приложением WSGI, если им предоставляется среда, подобная "
"CGI, а также потоки ввода, вывода и ошибок."

#: ../../library/wsgiref.rst:465
msgid ""
"CGI-based invocation via ``sys.stdin``, ``sys.stdout``, ``sys.stderr`` and "
"``os.environ``.  This is useful when you have a WSGI application and want to "
"run it as a CGI script.  Simply invoke ``CGIHandler().run(app)``, where "
"``app`` is the WSGI application object you wish to invoke."
msgstr ""
"Вызов на основе CGI через sys.stdin, sys.stdout, sys.stderr и os.environ. "
"Это полезно, если у вас есть приложение WSGI и вы хотите запустить его как "
"сценарий CGI. Просто вызовите ``CGIHandler().run(app)``, где ``app`` — это "
"объект приложения WSGI, который вы хотите вызвать."

#: ../../library/wsgiref.rst:470
msgid ""
"This class is a subclass of :class:`BaseCGIHandler` that sets ``wsgi."
"run_once`` to true, ``wsgi.multithread`` to false, and ``wsgi.multiprocess`` "
"to true, and always uses :mod:`sys` and :mod:`os` to obtain the necessary "
"CGI streams and environment."
msgstr ""
"Этот класс является подклассом :class:`BaseCGIHandler`, который "
"устанавливает для ``wsgi.run_once`` значение true, для ``wsgi.multithread`` "
"значение false и для ``wsgi.multiprocess`` значение true, и всегда "
"использует :mod :`sys` и :mod:`os` для получения необходимых потоков CGI и "
"среды."

#: ../../library/wsgiref.rst:478
msgid ""
"A specialized alternative to :class:`CGIHandler`, for use when deploying on "
"Microsoft's IIS web server, without having set the config allowPathInfo "
"option (IIS>=7) or metabase allowPathInfoForScriptMappings (IIS<7)."
msgstr ""
"Специализированная альтернатива :class:`CGIHandler` для использования при "
"развертывании на веб-сервере Microsoft IIS без установки параметра "
"конфигурацииallowPathInfo (IIS>=7) или "
"метабазыallowPathInfoForScriptMappings (IIS<7)."

#: ../../library/wsgiref.rst:482
msgid ""
"By default, IIS gives a ``PATH_INFO`` that duplicates the ``SCRIPT_NAME`` at "
"the front, causing problems for WSGI applications that wish to implement "
"routing. This handler strips any such duplicated path."
msgstr ""
"По умолчанию IIS предоставляет PATH_INFO, который дублирует SCRIPT_NAME в "
"начале, вызывая проблемы для приложений WSGI, которые хотят реализовать "
"маршрутизацию. Этот обработчик удаляет любой такой дублированный путь."

#: ../../library/wsgiref.rst:486
msgid ""
"IIS can be configured to pass the correct ``PATH_INFO``, but this causes "
"another bug where ``PATH_TRANSLATED`` is wrong. Luckily this variable is "
"rarely used and is not guaranteed by WSGI. On IIS<7, though, the setting can "
"only be made on a vhost level, affecting all other script mappings, many of "
"which break when exposed to the ``PATH_TRANSLATED`` bug. For this reason "
"IIS<7 is almost never deployed with the fix (Even IIS7 rarely uses it "
"because there is still no UI for it.)."
msgstr ""
"IIS можно настроить на передачу правильного PATH_INFO, но это вызывает еще "
"одну ошибку, когда PATH_TRANSLATED неверен. К счастью, эта переменная "
"используется редко и не гарантируется WSGI. Однако в IIS<7 эту настройку "
"можно выполнить только на уровне виртуального хоста, что затрагивает все "
"остальные сопоставления сценариев, многие из которых нарушаются при "
"обнаружении ошибки ``PATH_TRANSLATED``. По этой причине IIS<7 почти никогда "
"не развертывается с исправлением (даже IIS7 редко использует его, поскольку "
"для него до сих пор нет пользовательского интерфейса)."

#: ../../library/wsgiref.rst:494
msgid ""
"There is no way for CGI code to tell whether the option was set, so a "
"separate handler class is provided.  It is used in the same way as :class:"
"`CGIHandler`, i.e., by calling ``IISCGIHandler().run(app)``, where ``app`` "
"is the WSGI application object you wish to invoke."
msgstr ""
"Код CGI не может определить, установлена ​​ли опция, поэтому предоставляется "
"отдельный класс-обработчик. Он используется так же, как :class:`CGIHandler`, "
"т.е. путем вызова ``IISCGIHandler().run(app)``, где ``app`` — это объект "
"приложения WSGI, который вы хотите вызвать."

#: ../../library/wsgiref.rst:504
msgid ""
"Similar to :class:`CGIHandler`, but instead of using the :mod:`sys` and :mod:"
"`os` modules, the CGI environment and I/O streams are specified explicitly. "
"The *multithread* and *multiprocess* values are used to set the ``wsgi."
"multithread`` and ``wsgi.multiprocess`` flags for any applications run by "
"the handler instance."
msgstr ""
"Аналогично :class:`CGIHandler`, но вместо использования модулей :mod:`sys` "
"и :mod:`os` среда CGI и потоки ввода-вывода указываются явно. Значения "
"*multithread* и *multiprocess* используются для установки флагов wsgi."
"multithread и wsgi.multiprocess для любых приложений, запускаемых "
"экземпляром обработчика."

#: ../../library/wsgiref.rst:510
msgid ""
"This class is a subclass of :class:`SimpleHandler` intended for use with "
"software other than HTTP \"origin servers\".  If you are writing a gateway "
"protocol implementation (such as CGI, FastCGI, SCGI, etc.) that uses a "
"``Status:`` header to send an HTTP status, you probably want to subclass "
"this instead of :class:`SimpleHandler`."
msgstr ""
"Этот класс является подклассом :class:`SimpleHandler`, предназначенным для "
"использования с программным обеспечением, отличным от «исходных серверов» "
"HTTP. Если вы пишете реализацию протокола шлюза (например, CGI, FastCGI, "
"SCGI и т. д.), которая использует заголовок ``Status:`` для отправки статуса "
"HTTP, вы, вероятно, захотите создать его подкласс вместо :class:"
"`SimpleHandler` ."

#: ../../library/wsgiref.rst:519
msgid ""
"Similar to :class:`BaseCGIHandler`, but designed for use with HTTP origin "
"servers.  If you are writing an HTTP server implementation, you will "
"probably want to subclass this instead of :class:`BaseCGIHandler`."
msgstr ""
"Похож на :class:`BaseCGIHandler`, но предназначен для использования с "
"исходными серверами HTTP. Если вы пишете реализацию HTTP-сервера, вы, "
"вероятно, захотите создать подкласс вместо :class:`BaseCGIHandler`."

#: ../../library/wsgiref.rst:523
msgid ""
"This class is a subclass of :class:`BaseHandler`.  It overrides the :meth:`!"
"__init__`, :meth:`~BaseHandler.get_stdin`, :meth:`~BaseHandler.get_stderr`, :"
"meth:`~BaseHandler.add_cgi_vars`, :meth:`~BaseHandler._write`, and :meth:"
"`~BaseHandler._flush` methods to support explicitly setting the environment "
"and streams via the constructor.  The supplied environment and streams are "
"stored in the :attr:`stdin`, :attr:`stdout`, :attr:`stderr`, and :attr:"
"`environ` attributes."
msgstr ""
"Этот класс является подклассом :class:`BaseHandler`. Он переопределяет :meth:"
"`!__init__`, :meth:`~BaseHandler.get_stdin`, :meth:`~BaseHandler."
"get_stderr`, :meth:`~BaseHandler.add_cgi_vars`, :meth:`~BaseHandler._write` "
"и :meth:`~BaseHandler._flush` для поддержки явной настройки среды и потоков "
"через конструктор. Предоставленная среда и потоки хранятся в атрибутах :attr:"
"`stdin`, :attr:`stdout`, :attr:`stderr` и :attr:`environ`."

#: ../../library/wsgiref.rst:532
msgid ""
"The :meth:`~io.BufferedIOBase.write` method of *stdout* should write each "
"chunk in full, like :class:`io.BufferedIOBase`."
msgstr ""
"Метод :meth:`~io.BufferedIOBase.write` *stdout* должен записывать каждый "
"фрагмент полностью, например :class:`io.BufferedIOBase`."

#: ../../library/wsgiref.rst:538
msgid ""
"This is an abstract base class for running WSGI applications.  Each instance "
"will handle a single HTTP request, although in principle you could create a "
"subclass that was reusable for multiple requests."
msgstr ""
"Это абстрактный базовый класс для запуска приложений WSGI. Каждый экземпляр "
"будет обрабатывать один HTTP-запрос, хотя в принципе вы можете создать "
"подкласс, который можно будет повторно использовать для нескольких запросов."

#: ../../library/wsgiref.rst:542
msgid ""
":class:`BaseHandler` instances have only one method intended for external "
"use:"
msgstr ""
"Экземпляры :class:`BaseHandler` имеют только один метод, предназначенный для "
"внешнего использования:"

#: ../../library/wsgiref.rst:547
msgid "Run the specified WSGI application, *app*."
msgstr "Запустите указанное приложение WSGI *app*."

#: ../../library/wsgiref.rst:549
msgid ""
"All of the other :class:`BaseHandler` methods are invoked by this method in "
"the process of running the application, and thus exist primarily to allow "
"customizing the process."
msgstr ""
"Все остальные методы :class:`BaseHandler` вызываются этим методом в процессе "
"запуска приложения и, таким образом, существуют в первую очередь для "
"обеспечения возможности настройки процесса."

#: ../../library/wsgiref.rst:553
msgid "The following methods MUST be overridden in a subclass:"
msgstr "Следующие методы ДОЛЖНЫ быть переопределены в подклассе:"

#: ../../library/wsgiref.rst:558
msgid ""
"Buffer the bytes *data* for transmission to the client.  It's okay if this "
"method actually transmits the data; :class:`BaseHandler` just separates "
"write and flush operations for greater efficiency when the underlying system "
"actually has such a distinction."
msgstr ""
"Буферизируйте байты *данных* для передачи клиенту. Ничего страшного, если "
"этот метод действительно передает данные; :class:`BaseHandler` просто "
"разделяет операции записи и очистки для большей эффективности, когда базовая "
"система действительно имеет такое различие."

#: ../../library/wsgiref.rst:566
msgid ""
"Force buffered data to be transmitted to the client.  It's okay if this "
"method is a no-op (i.e., if :meth:`_write` actually sends the data)."
msgstr ""
"Принудительно передавать буферизованные данные клиенту. Ничего страшного, "
"если этот метод является пустым (т.е. если :meth:`_write` действительно "
"отправляет данные)."

#: ../../library/wsgiref.rst:572
msgid ""
"Return an object compatible with :class:`~wsgiref.types.InputStream` "
"suitable for use as the ``wsgi.input`` of the request currently being "
"processed."
msgstr ""
"Возвращает объект, совместимый с :class:`~wsgiref.types.InputStream`, "
"подходящий для использования в качестве ``wsgi.input`` обрабатываемого в "
"данный момент запроса."

#: ../../library/wsgiref.rst:579
msgid ""
"Return an object compatible with :class:`~wsgiref.types.ErrorStream` "
"suitable for use as the ``wsgi.errors`` of the request currently being "
"processed."
msgstr ""
"Возвращает объект, совместимый с :class:`~wsgiref.types.ErrorStream`, "
"подходящий для использования в качестве ``wsgi.errors`` запроса, "
"обрабатываемого в данный момент."

#: ../../library/wsgiref.rst:586
msgid ""
"Insert CGI variables for the current request into the :attr:`environ` "
"attribute."
msgstr ""
"Вставьте переменные CGI для текущего запроса в атрибут :attr:`environ`."

#: ../../library/wsgiref.rst:588
msgid ""
"Here are some other methods and attributes you may wish to override. This "
"list is only a summary, however, and does not include every method that can "
"be overridden.  You should consult the docstrings and source code for "
"additional information before attempting to create a customized :class:"
"`BaseHandler` subclass."
msgstr ""
"Вот некоторые другие методы и атрибуты, которые вы, возможно, захотите "
"переопределить. Однако этот список является лишь кратким и не включает в "
"себя все методы, которые можно переопределить. Вам следует обратиться к "
"строкам документации и исходному коду для получения дополнительной "
"информации, прежде чем пытаться создать собственный подкласс :class:"
"`BaseHandler`."

#: ../../library/wsgiref.rst:594
msgid "Attributes and methods for customizing the WSGI environment:"
msgstr "Атрибуты и методы настройки среды WSGI:"

#: ../../library/wsgiref.rst:599
msgid ""
"The value to be used for the ``wsgi.multithread`` environment variable.  It "
"defaults to true in :class:`BaseHandler`, but may have a different default "
"(or be set by the constructor) in the other subclasses."
msgstr ""
"Значение, которое будет использоваться для переменной среды wsgi."
"multithread. По умолчанию в :class:`BaseHandler` оно имеет значение true, но "
"может иметь другое значение по умолчанию (или быть установлено "
"конструктором) в других подклассах."

#: ../../library/wsgiref.rst:606
msgid ""
"The value to be used for the ``wsgi.multiprocess`` environment variable.  It "
"defaults to true in :class:`BaseHandler`, but may have a different default "
"(or be set by the constructor) in the other subclasses."
msgstr ""
"Значение, которое будет использоваться для переменной среды wsgi."
"multiprocess. По умолчанию в :class:`BaseHandler` оно имеет значение true, "
"но может иметь другое значение по умолчанию (или быть установлено "
"конструктором) в других подклассах."

#: ../../library/wsgiref.rst:613
msgid ""
"The value to be used for the ``wsgi.run_once`` environment variable.  It "
"defaults to false in :class:`BaseHandler`, but :class:`CGIHandler` sets it "
"to true by default."
msgstr ""
"Значение, которое будет использоваться для переменной среды wsgi.run_once. "
"По умолчанию в :class:`BaseHandler` оно имеет значение false, но :class:"
"`CGIHandler` по умолчанию устанавливает для него значение true."

#: ../../library/wsgiref.rst:620
msgid ""
"The default environment variables to be included in every request's WSGI "
"environment.  By default, this is a copy of ``os.environ`` at the time that :"
"mod:`wsgiref.handlers` was imported, but subclasses can either create their "
"own at the class or instance level.  Note that the dictionary should be "
"considered read-only, since the default value is shared between multiple "
"classes and instances."
msgstr ""
"Переменные среды по умолчанию, которые будут включены в среду WSGI каждого "
"запроса. По умолчанию это копия os.environ на момент импорта :mod:wsgiref."
"handlers, но подклассы могут создавать свои собственные на уровне класса или "
"экземпляра. Обратите внимание, что словарь следует рассматривать как "
"доступный только для чтения, поскольку значение по умолчанию используется "
"несколькими классами и экземплярами."

#: ../../library/wsgiref.rst:630
msgid ""
"If the :attr:`origin_server` attribute is set, this attribute's value is "
"used to set the default ``SERVER_SOFTWARE`` WSGI environment variable, and "
"also to set a default ``Server:`` header in HTTP responses.  It is ignored "
"for handlers (such as :class:`BaseCGIHandler` and :class:`CGIHandler`) that "
"are not HTTP origin servers."
msgstr ""
"Если установлен атрибут :attr:`origin_server`, значение этого атрибута "
"используется для установки переменной среды WSGI ``SERVER_SOFTWARE`` по "
"умолчанию, а также для установки заголовка ``Server:`` по умолчанию в "
"ответах HTTP. Он игнорируется для обработчиков (таких как :class:"
"`BaseCGIHandler` и :class:`CGIHandler`), которые не являются исходными "
"серверами HTTP."

#: ../../library/wsgiref.rst:636
msgid ""
"The term \"Python\" is replaced with implementation specific term like "
"\"CPython\", \"Jython\" etc."
msgstr ""
"Термин «Python» заменяется термином, специфичным для реализации, например "
"«CPython», «Jython» и т. д."

#: ../../library/wsgiref.rst:642
msgid ""
"Return the URL scheme being used for the current request.  The default "
"implementation uses the :func:`guess_scheme` function from :mod:`wsgiref."
"util` to guess whether the scheme should be \"http\" or \"https\", based on "
"the current request's :attr:`environ` variables."
msgstr ""
"Возвращает схему URL-адреса, используемую для текущего запроса. Реализация "
"по умолчанию использует функцию :func:`guess_scheme` из :mod:`wsgiref.util`, "
"чтобы угадать, должна ли схема быть «http» или «https», на основе "
"переменных :attr:`environ` текущего запроса."

#: ../../library/wsgiref.rst:650
msgid ""
"Set the :attr:`environ` attribute to a fully populated WSGI environment.  "
"The default implementation uses all of the above methods and attributes, "
"plus the :meth:`get_stdin`, :meth:`get_stderr`, and :meth:`add_cgi_vars` "
"methods and the :attr:`wsgi_file_wrapper` attribute.  It also inserts a "
"``SERVER_SOFTWARE`` key if not present, as long as the :attr:`origin_server` "
"attribute is a true value and the :attr:`server_software` attribute is set."
msgstr ""
"Установите атрибут :attr:`environ` для полностью заполненной среды WSGI. "
"Реализация по умолчанию использует все вышеперечисленные методы и атрибуты, "
"а также методы :meth:`get_stdin`, :meth:`get_stderr` и :meth:`add_cgi_vars` "
"и атрибут :attr:`wsgi_file_wrapper`. Он также вставляет ключ "
"``SERVER_SOFTWARE``, если он отсутствует, если атрибут :attr:`origin_server` "
"имеет истинное значение и установлен атрибут :attr:`server_software`."

#: ../../library/wsgiref.rst:657
msgid "Methods and attributes for customizing exception handling:"
msgstr "Методы и атрибуты для настройки обработки исключений:"

#: ../../library/wsgiref.rst:662
msgid ""
"Log the *exc_info* tuple in the server log.  *exc_info* is a ``(type, value, "
"traceback)`` tuple.  The default implementation simply writes the traceback "
"to the request's ``wsgi.errors`` stream and flushes it.  Subclasses can "
"override this method to change the format or retarget the output, mail the "
"traceback to an administrator, or whatever other action may be deemed "
"suitable."
msgstr ""
"Запишите кортеж *exc_info* в журнал сервера. *exc_info* — это кортеж ``(тип, "
"значение, обратная трассировка)``. Реализация по умолчанию просто записывает "
"обратную трассировку в поток запроса wsgi.errors и сбрасывает его. Подклассы "
"могут переопределить этот метод, чтобы изменить формат или перенаправить "
"выходные данные, отправить обратную связь по почте администратору или "
"выполнить любое другое действие, которое может быть сочтено подходящим."

#: ../../library/wsgiref.rst:671
msgid ""
"The maximum number of frames to include in tracebacks output by the default :"
"meth:`log_exception` method.  If ``None``, all frames are included."
msgstr ""
"Максимальное количество кадров, включаемых в выходные данные трассировки "
"методом :meth:`log_Exception` по умолчанию. Если «Нет», включаются все кадры."

#: ../../library/wsgiref.rst:677
msgid ""
"This method is a WSGI application to generate an error page for the user.  "
"It is only invoked if an error occurs before headers are sent to the client."
msgstr ""
"Этот метод представляет собой приложение WSGI, создающее для пользователя "
"страницу ошибки. Он вызывается только в том случае, если возникает ошибка до "
"отправки заголовков клиенту."

#: ../../library/wsgiref.rst:680
msgid ""
"This method can access the current error using ``sys.exception()``, and "
"should pass that information to *start_response* when calling it (as "
"described in the \"Error Handling\" section of :pep:`3333`)."
msgstr ""
"Этот метод может получить доступ к текущей ошибке с помощью ``sys."
"Exception()`` и должен передать эту информацию в *start_response* при его "
"вызове (как описано в разделе «Обработка ошибок» в :pep:`3333`)."

#: ../../library/wsgiref.rst:684
msgid ""
"The default implementation just uses the :attr:`error_status`, :attr:"
"`error_headers`, and :attr:`error_body` attributes to generate an output "
"page.  Subclasses can override this to produce more dynamic error output."
msgstr ""
"Реализация по умолчанию просто использует атрибуты :attr:`error_status`, :"
"attr:`error_headers` и :attr:`error_body` для создания выходной страницы. "
"Подклассы могут переопределить это, чтобы обеспечить более динамичный вывод "
"ошибок."

#: ../../library/wsgiref.rst:688
msgid ""
"Note, however, that it's not recommended from a security perspective to spit "
"out diagnostics to any old user; ideally, you should have to do something "
"special to enable diagnostic output, which is why the default implementation "
"doesn't include any."
msgstr ""
"Однако обратите внимание, что с точки зрения безопасности не рекомендуется "
"выдавать диагностику любому старому пользователю; в идеале вам придется "
"сделать что-то особенное, чтобы включить диагностический вывод, поэтому "
"реализация по умолчанию его не включает."

#: ../../library/wsgiref.rst:696
msgid ""
"The HTTP status used for error responses.  This should be a status string as "
"defined in :pep:`3333`; it defaults to a 500 code and message."
msgstr ""
"Статус HTTP, используемый для ответов об ошибках. Это должна быть строка "
"состояния, как определено в :pep:`3333`; по умолчанию это код 500 и "
"сообщение."

#: ../../library/wsgiref.rst:702
msgid ""
"The HTTP headers used for error responses.  This should be a list of WSGI "
"response headers (``(name, value)`` tuples), as described in :pep:`3333`.  "
"The default list just sets the content type to ``text/plain``."
msgstr ""
"Заголовки HTTP, используемые для ответов об ошибках. Это должен быть список "
"заголовков ответов WSGI (кортежи ``(name, value)``), как описано в :pep:"
"`3333`. Список по умолчанию просто устанавливает тип контента «text/plain»."

#: ../../library/wsgiref.rst:709
msgid ""
"The error response body.  This should be an HTTP response body bytestring. "
"It defaults to the plain text, \"A server error occurred.  Please contact "
"the administrator.\""
msgstr ""
"Тело ответа об ошибке. Это должна быть байтовая строка тела ответа HTTP. По "
"умолчанию отображается обычный текст: «Произошла ошибка сервера. Обратитесь "
"к администратору»."

#: ../../library/wsgiref.rst:713
msgid ""
"Methods and attributes for :pep:`3333`'s \"Optional Platform-Specific File "
"Handling\" feature:"
msgstr ""
"Методы и атрибуты функции «Дополнительная обработка файлов для конкретной "
"платформы» :pep:`3333`:"

#: ../../library/wsgiref.rst:719
msgid ""
"A ``wsgi.file_wrapper`` factory, compatible with :class:`wsgiref.types."
"FileWrapper`, or ``None``.  The default value of this attribute is the :"
"class:`wsgiref.util.FileWrapper` class."
msgstr ""
"Фабрика ``wsgi.file_wrapper``, совместимая с ``wsgiref.types.FileWrapper`` "
"или ``None``. Значением по умолчанию для этого атрибута является класс :"
"class:`wsgiref.util.FileWrapper`."

#: ../../library/wsgiref.rst:726
msgid ""
"Override to implement platform-specific file transmission.  This method is "
"called only if the application's return value is an instance of the class "
"specified by the :attr:`wsgi_file_wrapper` attribute.  It should return a "
"true value if it was able to successfully transmit the file, so that the "
"default transmission code will not be executed. The default implementation "
"of this method just returns a false value."
msgstr ""
"Переопределить для реализации передачи файлов для конкретной платформы. Этот "
"метод вызывается только в том случае, если возвращаемое значение приложения "
"является экземпляром класса, указанного атрибутом :attr:`wsgi_file_wrapper`. "
"Он должен возвращать истинное значение, если ему удалось успешно передать "
"файл, чтобы код передачи по умолчанию не выполнялся. Реализация этого метода "
"по умолчанию просто возвращает ложное значение."

#: ../../library/wsgiref.rst:733
msgid "Miscellaneous methods and attributes:"
msgstr "Разные методы и атрибуты:"

#: ../../library/wsgiref.rst:738
msgid ""
"This attribute should be set to a true value if the handler's :meth:`_write` "
"and :meth:`_flush` are being used to communicate directly to the client, "
"rather than via a CGI-like gateway protocol that wants the HTTP status in a "
"special ``Status:`` header."
msgstr ""
"Этому атрибуту должно быть присвоено истинное значение, если :meth:`_write` "
"и :meth:`_flush` обработчика используются для связи непосредственно с "
"клиентом, а не через CGI-подобный протокол шлюза, который требует статуса "
"HTTP в специальный заголовок ``Status:``."

#: ../../library/wsgiref.rst:743
msgid ""
"This attribute's default value is true in :class:`BaseHandler`, but false "
"in :class:`BaseCGIHandler` and :class:`CGIHandler`."
msgstr ""
"Значение по умолчанию для этого атрибута истинно в :class:`BaseHandler`, но "
"ложно в :class:`BaseCGIHandler` и :class:`CGIHandler`."

#: ../../library/wsgiref.rst:749
msgid ""
"If :attr:`origin_server` is true, this string attribute is used to set the "
"HTTP version of the response set to the client.  It defaults to ``\"1.0\"``."
msgstr ""
"Если :attr:`origin_server` имеет значение true, этот строковый атрибут "
"используется для установки HTTP-версии ответа, заданного клиенту. По "
"умолчанию установлено значение ``\"1.0\"``."

#: ../../library/wsgiref.rst:755
msgid ""
"Transcode CGI variables from ``os.environ`` to :pep:`3333` \"bytes in "
"unicode\" strings, returning a new dictionary.  This function is used by :"
"class:`CGIHandler` and :class:`IISCGIHandler` in place of directly using "
"``os.environ``, which is not necessarily WSGI-compliant on all platforms and "
"web servers using Python 3 -- specifically, ones where the OS's actual "
"environment is Unicode (i.e. Windows), or ones where the environment is "
"bytes, but the system encoding used by Python to decode it is anything other "
"than ISO-8859-1 (e.g. Unix systems using UTF-8)."
msgstr ""
"Перекодируйте переменные CGI из ``os.environ`` в строки :pep:`3333` \"байты "
"в Юникоде\", возвращая новый словарь. Эта функция используется :class:"
"`CGIHandler` и :class:`IISCGIHandler` вместо прямого использования os."
"environ``, который не обязательно совместим с WSGI на всех платформах и веб-"
"серверах, использующих Python 3, в частности , те, где фактическая среда ОС "
"— Unicode (т. е. Windows), или те, где среда — это байты, но системная "
"кодировка, используемая Python для ее декодирования, отличается от "
"ISO-8859-1 (например, системы Unix, использующие UTF-8) ."

#: ../../library/wsgiref.rst:764
msgid ""
"If you are implementing a CGI-based handler of your own, you probably want "
"to use this routine instead of just copying values out of ``os.environ`` "
"directly."
msgstr ""
"Если вы реализуете собственный обработчик на основе CGI, вы, вероятно, "
"захотите использовать эту процедуру вместо того, чтобы просто копировать "
"значения напрямую из ``os.environ``."

#: ../../library/wsgiref.rst:772
msgid ":mod:`wsgiref.types` -- WSGI types for static type checking"
msgstr ":mod:`wsgiref.types` -- типы WSGI для статической проверки типов"

#: ../../library/wsgiref.rst:778
msgid ""
"This module provides various types for static type checking as described in :"
"pep:`3333`."
msgstr ""
"Этот модуль предоставляет различные типы для статической проверки типов, как "
"описано в :pep:`3333`."

#: ../../library/wsgiref.rst:786
msgid ""
"A :class:`typing.Protocol` describing `start_response() <https://peps.python."
"org/pep-3333/#the-start-response-callable>`_ callables (:pep:`3333`)."
msgstr ""

#: ../../library/wsgiref.rst:792
msgid "A type alias describing a WSGI environment dictionary."
msgstr "Псевдоним типа, описывающий словарь среды WSGI."

#: ../../library/wsgiref.rst:796
msgid "A type alias describing a WSGI application callable."
msgstr "Псевдоним типа, описывающий вызываемое приложение WSGI."

#: ../../library/wsgiref.rst:800
msgid ""
"A :class:`typing.Protocol` describing a `WSGI Input Stream <https://peps."
"python.org/pep-3333/#input-and-error-streams>`_."
msgstr ""

#: ../../library/wsgiref.rst:805
msgid ""
"A :class:`typing.Protocol` describing a `WSGI Error Stream <https://peps."
"python.org/pep-3333/#input-and-error-streams>`_."
msgstr ""

#: ../../library/wsgiref.rst:810
msgid ""
"A :class:`typing.Protocol` describing a `file wrapper <https://peps.python."
"org/pep-3333/#optional-platform-specific-file-handling>`_. See :class:"
"`wsgiref.util.FileWrapper` for a concrete implementation of this protocol."
msgstr ""

#: ../../library/wsgiref.rst:817
msgid "Examples"
msgstr "Примеры"

#: ../../library/wsgiref.rst:819
msgid "This is a working \"Hello World\" WSGI application::"
msgstr "Это рабочее приложение WSGI «Hello World»::"

#: ../../library/wsgiref.rst:848
msgid ""
"Example of a WSGI application serving the current directory, accept optional "
"directory and port number (default: 8000) on the command line::"
msgstr ""
"Пример приложения WSGI, обслуживающего текущий каталог: примите "
"необязательный каталог и номер порта (по умолчанию: 8000) в командной "
"строке::"
