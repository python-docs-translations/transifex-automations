# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# Roustam Khamidoulline, 2024
# Rafael Fontenelle <rffontenelle@gmail.com>, 2024
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.12\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-01-03 14:53+0000\n"
"PO-Revision-Date: 2024-05-11 00:33+0000\n"
"Last-Translator: Rafael Fontenelle <rffontenelle@gmail.com>, 2024\n"
"Language-Team: Russian (https://app.transifex.com/python-doc/teams/5390/"
"ru/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ru\n"
"Plural-Forms: nplurals=4; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && "
"n%10<=4 && (n%100<12 || n%100>14) ? 1 : n%10==0 || (n%10>=5 && n%10<=9) || "
"(n%100>=11 && n%100<=14)? 2 : 3);\n"

#: ../../library/trace.rst:2
msgid ":mod:`!trace` --- Trace or track Python statement execution"
msgstr ""
":mod:`!trace` --- Отслеживание или отслеживание выполнения инструкций Python"

#: ../../library/trace.rst:7
msgid "**Source code:** :source:`Lib/trace.py`"
msgstr "**Исходный код:** :source:`Lib/trace.py`"

#: ../../library/trace.rst:11
msgid ""
"The :mod:`trace` module allows you to trace program execution, generate "
"annotated statement coverage listings, print caller/callee relationships and "
"list functions executed during a program run.  It can be used in another "
"program or from the command line."
msgstr ""
"Модуль :mod:`trace` позволяет отслеживать выполнение программы, генерировать "
"аннотированные списки покрытия операторов, печатать отношения вызывающего/"
"вызываемого объекта и перечислять функции, выполняемые во время выполнения "
"программы. Его можно использовать в другой программе или из командной строки."

#: ../../library/trace.rst:18
msgid "`Coverage.py <https://coverage.readthedocs.io/>`_"
msgstr "`Coverage.py <https://coverage.readthedocs.io/>`_"

#: ../../library/trace.rst:19
msgid ""
"A popular third-party coverage tool that provides HTML output along with "
"advanced features such as branch coverage."
msgstr ""
"Популярный сторонний инструмент покрытия, который обеспечивает вывод HTML, а "
"также расширенные функции, такие как покрытие ветвей."

#: ../../library/trace.rst:25
msgid "Command-Line Usage"
msgstr "Использование командной строки"

#: ../../library/trace.rst:27
msgid ""
"The :mod:`trace` module can be invoked from the command line.  It can be as "
"simple as ::"
msgstr ""
"Модуль :mod:`trace` можно вызвать из командной строки. Это может быть так же "
"просто, как::"

#: ../../library/trace.rst:30
msgid "python -m trace --count -C . somefile.py ..."
msgstr "python -m trace --count -C . somefile.py ..."

#: ../../library/trace.rst:32
msgid ""
"The above will execute :file:`somefile.py` and generate annotated listings "
"of all Python modules imported during the execution into the current "
"directory."
msgstr ""
"Вышеуказанное выполнит :file:`somefile.py` и сгенерирует аннотированные "
"списки всех модулей Python, импортированных во время выполнения, в текущий "
"каталог."

#: ../../library/trace.rst:39
msgid "Display usage and exit."
msgstr "Отобразить использование и выйти."

#: ../../library/trace.rst:43
msgid "Display the version of the module and exit."
msgstr "Отобразите версию модуля и выйдите."

#: ../../library/trace.rst:45
msgid "Added ``--module`` option that allows to run an executable module."
msgstr ""
"Добавлена ​​опция ``--module``, позволяющая запускать исполняемый модуль."

#: ../../library/trace.rst:49
msgid "Main options"
msgstr "Основные опции"

#: ../../library/trace.rst:51
msgid ""
"At least one of the following options must be specified when invoking :mod:"
"`trace`.  The :option:`--listfuncs <-l>` option is mutually exclusive with "
"the :option:`--trace <-t>` and :option:`--count <-c>` options. When :option:"
"`--listfuncs <-l>` is provided, neither :option:`--count <-c>` nor :option:"
"`--trace <-t>` are accepted, and vice versa."
msgstr ""
"При вызове :mod:`trace` должна быть указана хотя бы одна из следующих опций. "
"Параметр :option:`--listfuncs <-l>` является взаимоисключающим с "
"параметрами :option:`--trace <-t>` и :option:`--count <-c>`. Если указан :"
"option:`--listfuncs <-l>`, ни :option:`--count <-c>`, ни :option:`--trace <-"
"t>` не принимаются, и наоборот."

#: ../../library/trace.rst:61
msgid ""
"Produce a set of annotated listing files upon program completion that shows "
"how many times each statement was executed.  See also :option:`--coverdir <-"
"C>`, :option:`--file <-f>` and :option:`--no-report <-R>` below."
msgstr ""
"После завершения программы создайте набор файлов с аннотированными списками, "
"в которых показано, сколько раз был выполнен каждый оператор. См. также :"
"option:`--coverdir <-C>`, :option:`--file <-f>` и :option:`--no-report <-R>` "
"ниже."

#: ../../library/trace.rst:68
msgid "Display lines as they are executed."
msgstr "Отображать строки по мере их выполнения."

#: ../../library/trace.rst:72
msgid "Display the functions executed by running the program."
msgstr "Отображение функций, выполняемых при запуске программы."

#: ../../library/trace.rst:76
msgid ""
"Produce an annotated list from an earlier program run that used the :option:"
"`--count <-c>` and :option:`--file <-f>` option.  This does not execute any "
"code."
msgstr ""
"Создайте аннотированный список из более раннего запуска программы, в которой "
"использовались опции :option:`--count <-c>` и :option:`--file <-f>`. Это не "
"выполняет какой-либо код."

#: ../../library/trace.rst:82
msgid "Display the calling relationships exposed by running the program."
msgstr "Отобразите отношения вызовов, выявленные при запуске программы."

#: ../../library/trace.rst:85
msgid "Modifiers"
msgstr "Модификаторы"

#: ../../library/trace.rst:91
msgid ""
"Name of a file to accumulate counts over several tracing runs.  Should be "
"used with the :option:`--count <-c>` option."
msgstr ""
"Имя файла для накопления значений за несколько запусков трассировки. Следует "
"использовать с опцией :option:`--count <-c>`."

#: ../../library/trace.rst:96
msgid ""
"Directory where the report files go.  The coverage report for ``package."
"module`` is written to file :file:`{dir}/{package}/{module}.cover`."
msgstr ""
"Каталог, в котором хранятся файлы отчетов. Отчет о покрытии для package."
"module записывается в файл :file:`{dir}/{package}/{module}.cover`."

#: ../../library/trace.rst:101
msgid ""
"When generating annotated listings, mark lines which were not executed with "
"``>>>>>>``."
msgstr ""
"When generating annotated listings, mark lines which were not executed with "
"``>>>>>>``."

#: ../../library/trace.rst:106
msgid ""
"When using :option:`--count <-c>` or :option:`--report <-r>`, write a brief "
"summary to stdout for each file processed."
msgstr ""
"При использовании :option:`--count <-c>` или :option:`--report <-r>` "
"записывайте в стандартный вывод краткую сводку для каждого обработанного "
"файла."

#: ../../library/trace.rst:111
msgid ""
"Do not generate annotated listings.  This is useful if you intend to make "
"several runs with :option:`--count <-c>`, and then produce a single set of "
"annotated listings at the end."
msgstr ""
"Не создавайте аннотированные списки. Это полезно, если вы собираетесь "
"выполнить несколько запусков с помощью :option:`--count <-c>`, а затем в "
"конце создать один набор аннотированных списков."

#: ../../library/trace.rst:117
msgid ""
"Prefix each line with the time since the program started.  Only used while "
"tracing."
msgstr ""
"В качестве префикса каждой строки укажите время с момента запуска программы. "
"Используется только при трассировке."

#: ../../library/trace.rst:121
msgid "Filters"
msgstr "Фильтры"

#: ../../library/trace.rst:123
msgid "These options may be repeated multiple times."
msgstr "Эти параметры могут повторяться несколько раз."

#: ../../library/trace.rst:129
msgid ""
"Ignore each of the given module names and its submodules (if it is a "
"package).  The argument can be a list of names separated by a comma."
msgstr ""
"Игнорируйте каждое из названий модулей и их подмодулей (если это пакет). "
"Аргументом может быть список имен, разделенных запятой."

#: ../../library/trace.rst:134
msgid ""
"Ignore all modules and packages in the named directory and subdirectories. "
"The argument can be a list of directories separated by :data:`os.pathsep`."
msgstr ""
"Игнорировать все модули и пакеты в указанном каталоге и подкаталогах. "
"Аргументом может быть список каталогов, разделенных :data:`os.pathsep`."

#: ../../library/trace.rst:140
msgid "Programmatic Interface"
msgstr "Программный интерфейс"

#: ../../library/trace.rst:145
msgid ""
"Create an object to trace execution of a single statement or expression.  "
"All parameters are optional.  *count* enables counting of line numbers.  "
"*trace* enables line execution tracing.  *countfuncs* enables listing of the "
"functions called during the run.  *countcallers* enables call relationship "
"tracking.  *ignoremods* is a list of modules or packages to ignore. "
"*ignoredirs* is a list of directories whose modules or packages should be "
"ignored.  *infile* is the name of the file from which to read stored count "
"information.  *outfile* is the name of the file in which to write updated "
"count information.  *timing* enables a timestamp relative to when tracing "
"was started to be displayed."
msgstr ""
"Создайте объект для отслеживания выполнения одного оператора или выражения. "
"Все параметры являются необязательными. *count* включает подсчет номеров "
"строк. *trace* включает трассировку выполнения строки. *countfuncs* включает "
"список функций, вызываемых во время выполнения. *countcallers* включает "
"отслеживание взаимосвязи вызовов. *ignoremods* — это список модулей или "
"пакетов, которые следует игнорировать. *ignoredirs* — это список каталогов, "
"модули или пакеты которых следует игнорировать. *infile* — имя файла, из "
"которого считывается сохраненная информация о счетчике. *outfile* — это имя "
"файла, в который записывается обновленная информация о счетчике. *timing* "
"позволяет отображать временную метку, относящуюся к моменту начала "
"трассировки."

#: ../../library/trace.rst:158
msgid ""
"Execute the command and gather statistics from the execution with the "
"current tracing parameters.  *cmd* must be a string or code object, suitable "
"for passing into :func:`exec`."
msgstr ""
"Выполните команду и соберите статистику выполнения с текущими параметрами "
"трассировки. *cmd* должен быть строкой или объектом кода, подходящим для "
"передачи в :func:`exec`."

#: ../../library/trace.rst:164
msgid ""
"Execute the command and gather statistics from the execution with the "
"current tracing parameters, in the defined global and local environments.  "
"If not defined, *globals* and *locals* default to empty dictionaries."
msgstr ""
"Выполните команду и соберите статистику выполнения с текущими параметрами "
"трассировки в определенных глобальных и локальных средах. Если не "
"определено, *globals* и *locals* по умолчанию представляют собой пустые "
"словари."

#: ../../library/trace.rst:171
msgid ""
"Call *func* with the given arguments under control of the :class:`Trace` "
"object with the current tracing parameters."
msgstr ""
"Вызов *func* с заданными аргументами под управлением объекта :class:`Trace` "
"с текущими параметрами трассировки."

#: ../../library/trace.rst:176
msgid ""
"Return a :class:`CoverageResults` object that contains the cumulative "
"results of all previous calls to ``run``, ``runctx`` and ``runfunc`` for the "
"given :class:`Trace` instance.  Does not reset the accumulated trace results."
msgstr ""
"Возвращает объект :class:`CoverageResults`, который содержит совокупные "
"результаты всех предыдущих вызовов ``run``, ``runctx`` и ``runfunc`` для "
"данного экземпляра :class:`Trace`. Не сбрасывает накопленные результаты "
"трассировки."

#: ../../library/trace.rst:183
msgid ""
"A container for coverage results, created by :meth:`Trace.results`.  Should "
"not be created directly by the user."
msgstr ""
"Контейнер для результатов покрытия, созданный :meth:`Trace.results`. Не "
"должен создаваться непосредственно пользователем."

#: ../../library/trace.rst:188
msgid "Merge in data from another :class:`CoverageResults` object."
msgstr "Объединить данные из другого объекта :class:`CoverageResults`."

#: ../../library/trace.rst:192
msgid ""
"Write coverage results.  Set *show_missing* to show lines that had no hits.  "
"Set *summary* to include in the output the coverage summary per module.  "
"*coverdir* specifies the directory into which the coverage result files will "
"be output.  If ``None``, the results for each source file are placed in its "
"directory."
msgstr ""
"Напишите результаты покрытия. Установите *show_missing*, чтобы показывать "
"строки, в которых не было совпадений. Установите *summary*, чтобы включить в "
"выходные данные сводку покрытия по каждому модулю. *coverdir* указывает "
"каталог, в который будут выводиться файлы результатов покрытия. Если «Нет», "
"результаты для каждого исходного файла помещаются в его каталог."

#: ../../library/trace.rst:198
msgid "A simple example demonstrating the use of the programmatic interface::"
msgstr "Простой пример, демонстрирующий использование программного интерфейса:"

#: ../../library/trace.rst:200
msgid ""
"import sys\n"
"import trace\n"
"\n"
"# create a Trace object, telling it what to ignore, and whether to\n"
"# do tracing or line-counting or both.\n"
"tracer = trace.Trace(\n"
"    ignoredirs=[sys.prefix, sys.exec_prefix],\n"
"    trace=0,\n"
"    count=1)\n"
"\n"
"# run the new command using the given tracer\n"
"tracer.run('main()')\n"
"\n"
"# make a report, placing output in the current directory\n"
"r = tracer.results()\n"
"r.write_results(show_missing=True, coverdir=\".\")"
msgstr ""
"import sys\n"
"import trace\n"
"\n"
"# create a Trace object, telling it what to ignore, and whether to\n"
"# do tracing or line-counting or both.\n"
"tracer = trace.Trace(\n"
"    ignoredirs=[sys.prefix, sys.exec_prefix],\n"
"    trace=0,\n"
"    count=1)\n"
"\n"
"# run the new command using the given tracer\n"
"tracer.run('main()')\n"
"\n"
"# make a report, placing output in the current directory\n"
"r = tracer.results()\n"
"r.write_results(show_missing=True, coverdir=\".\")"
