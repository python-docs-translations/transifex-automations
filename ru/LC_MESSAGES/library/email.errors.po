# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# Roustam Khamidoulline, 2024
# Rafael Fontenelle <rffontenelle@gmail.com>, 2025
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.12\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-05-02 14:54+0000\n"
"PO-Revision-Date: 2024-05-11 00:33+0000\n"
"Last-Translator: Rafael Fontenelle <rffontenelle@gmail.com>, 2025\n"
"Language-Team: Russian (https://app.transifex.com/python-doc/teams/5390/"
"ru/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ru\n"
"Plural-Forms: nplurals=4; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && "
"n%10<=4 && (n%100<12 || n%100>14) ? 1 : n%10==0 || (n%10>=5 && n%10<=9) || "
"(n%100>=11 && n%100<=14)? 2 : 3);\n"

#: ../../library/email.errors.rst:2
msgid ":mod:`!email.errors`: Exception and Defect classes"
msgstr ":mod:`!email.errors`: Классы исключений и дефектов"

#: ../../library/email.errors.rst:7
msgid "**Source code:** :source:`Lib/email/errors.py`"
msgstr "**Исходный код:** :source:`Lib/email/errors.py`"

#: ../../library/email.errors.rst:11
msgid ""
"The following exception classes are defined in the :mod:`email.errors` "
"module:"
msgstr "Следующие классы исключений определены в модуле :mod:`email.errors`:"

#: ../../library/email.errors.rst:16
msgid ""
"This is the base class for all exceptions that the :mod:`email` package can "
"raise.  It is derived from the standard :exc:`Exception` class and defines "
"no additional methods."
msgstr ""
"Это базовый класс для всех исключений, которые может вызвать пакет :mod:"
"`email`. Он является производным от стандартного класса :exc:`Exception` и "
"не определяет никаких дополнительных методов."

#: ../../library/email.errors.rst:23
msgid ""
"This is the base class for exceptions raised by the :class:`~email.parser."
"Parser` class.  It is derived from :exc:`MessageError`.  This class is also "
"used internally by the parser used by :mod:`~email.headerregistry`."
msgstr ""
"Это базовый класс для исключений, вызываемых классом :class:`~email.parser."
"Parser`. Он получен из :exc:`MessageError`. Этот класс также используется "
"внутри синтаксического анализатора, используемого :mod:`~email."
"headerregistry`."

#: ../../library/email.errors.rst:31
msgid ""
"Raised under some error conditions when parsing the :rfc:`5322` headers of a "
"message, this class is derived from :exc:`MessageParseError`.  The :meth:"
"`~email.message.EmailMessage.set_boundary` method will raise this error if "
"the content type is unknown when the method is called. :class:`~email.header."
"Header` may raise this error for certain base64 decoding errors, and when an "
"attempt is made to create a header that appears to contain an embedded "
"header (that is, there is what is supposed to be a continuation line that "
"has no leading whitespace and looks like a header)."
msgstr ""
"Этот класс возникает в случае некоторых ошибок при анализе заголовков "
"сообщения :rfc:`5322`. Этот класс является производным от :exc:"
"`MessageParseError`. Метод :meth:`~email.message.EmailMessage.set_boundary` "
"вызовет эту ошибку, если тип контента неизвестен при вызове метода. :class:"
"`~email.header.Header` может вызвать эту ошибку при определенных ошибках "
"декодирования Base64, а также при попытке создать заголовок, который, по-"
"видимому, содержит встроенный заголовок (то есть, там есть то, что должно "
"быть строка продолжения, которая не имеет начальных пробелов и выглядит как "
"заголовок)."

#: ../../library/email.errors.rst:43
msgid "Deprecated and no longer used."
msgstr "Устарело и больше не используется."

#: ../../library/email.errors.rst:48
msgid ""
"Raised if the :meth:`~email.message.Message.attach` method is called on an "
"instance of a class derived from :class:`~email.mime.nonmultipart."
"MIMENonMultipart` (e.g. :class:`~email.mime.image.MIMEImage`). :exc:"
"`MultipartConversionError` multiply inherits from :exc:`MessageError` and "
"the built-in :exc:`TypeError`."
msgstr ""

#: ../../library/email.errors.rst:58
msgid ""
"Raised when an error occurs when the :mod:`~email.generator` outputs headers."
msgstr ""
"Возникает, когда возникает ошибка, когда :mod:`~email.generator` выводит "
"заголовки."

#: ../../library/email.errors.rst:64
msgid ""
"This is the base class for all defects found when parsing email messages. It "
"is derived from :exc:`ValueError`."
msgstr ""
"Это базовый класс для всех дефектов, обнаруженных при анализе сообщений "
"электронной почты. Он получен из :exc:`ValueError`."

#: ../../library/email.errors.rst:69
msgid ""
"This is the base class for all defects found when parsing email headers. It "
"is derived from :exc:`MessageDefect`."
msgstr ""
"Это базовый класс для всех дефектов, обнаруженных при анализе заголовков "
"электронной почты. Он получен из :exc:`MessageDefect`."

#: ../../library/email.errors.rst:72
msgid ""
"Here is the list of the defects that the :class:`~email.parser.FeedParser` "
"can find while parsing messages.  Note that the defects are added to the "
"message where the problem was found, so for example, if a message nested "
"inside a :mimetype:`multipart/alternative` had a malformed header, that "
"nested message object would have a defect, but the containing messages would "
"not."
msgstr ""
"Вот список дефектов, которые :class:`~email.parser.FeedParser` может "
"обнаружить при анализе сообщений. Обратите внимание, что дефекты добавляются "
"к сообщению, в котором была обнаружена проблема, поэтому, например, если "
"сообщение, вложенное в :mimetype:`multipart/alternative`, имеет неверный "
"заголовок, этот вложенный объект сообщения будет иметь дефект, но содержащий "
"сообщений не будет."

#: ../../library/email.errors.rst:78
msgid ""
"All defect classes are subclassed from :class:`email.errors.MessageDefect`."
msgstr ""
"Все классы дефектов являются подклассами :class:`email.errors.MessageDefect`."

#: ../../library/email.errors.rst:82
msgid ""
"A message claimed to be a multipart, but had no :mimetype:`boundary` "
"parameter."
msgstr ""

#: ../../library/email.errors.rst:87
msgid ""
"The start boundary claimed in the :mailheader:`Content-Type` header was "
"never found."
msgstr ""

#: ../../library/email.errors.rst:92
msgid ""
"A start boundary was found, but no corresponding close boundary was ever "
"found."
msgstr ""

#: ../../library/email.errors.rst:99
msgid "The message had a continuation line as its first header line."
msgstr ""

#: ../../library/email.errors.rst:103
msgid "A \"Unix From\" header was found in the middle of a header block."
msgstr ""

#: ../../library/email.errors.rst:107
msgid ""
"A line was found while parsing headers that had no leading white space but "
"contained no ':'.  Parsing continues assuming that the line represents the "
"first line of the body."
msgstr ""
"При разборе заголовков обнаружена строка, не имеющая начальных пробелов, но "
"не содержащая ':'. Разбор продолжается, предполагая, что строка представляет "
"собой первую строку тела."

#: ../../library/email.errors.rst:115
msgid ""
"A header was found that was missing a colon, or was otherwise malformed."
msgstr ""

#: ../../library/email.errors.rst:117
msgid "This defect has not been used for several Python versions."
msgstr "Этот дефект не использовался в нескольких версиях Python."

#: ../../library/email.errors.rst:122
msgid ""
"A message claimed to be a :mimetype:`multipart`, but no subparts were found. "
"Note that when a message has this defect, its :meth:`~email.message.Message."
"is_multipart` method may return ``False`` even though its content type "
"claims to be :mimetype:`multipart`."
msgstr ""
"Сообщение заявлено как :mimetype:`multipart`, но подчастей не найдено. "
"Обратите внимание, что когда сообщение имеет этот дефект, его метод :meth:"
"`~email.message.Message.is_multipart` может возвращать ``False``, даже если "
"его тип содержимого заявлен как :mimetype:`multipart`."

#: ../../library/email.errors.rst:129
msgid ""
"When decoding a block of base64 encoded bytes, the padding was not correct. "
"Enough padding is added to perform the decode, but the resulting decoded "
"bytes may be invalid."
msgstr ""
"При декодировании блока байтов, закодированных в base64, заполнение было "
"неверным. Добавляется достаточное заполнение для выполнения декодирования, "
"но полученные декодированные байты могут быть недействительными."

#: ../../library/email.errors.rst:135
msgid ""
"When decoding a block of base64 encoded bytes, characters outside the base64 "
"alphabet were encountered.  The characters are ignored, but the resulting "
"decoded bytes may be invalid."
msgstr ""

#: ../../library/email.errors.rst:141
msgid ""
"When decoding a block of base64 encoded bytes, the number of non-padding "
"base64 characters was invalid (1 more than a multiple of 4).  The encoded "
"block was kept as-is."
msgstr ""
"При декодировании блока байтов, закодированных в base64, количество не "
"заполняющих символов base64 было недопустимым (на 1 больше, чем кратно 4). "
"Закодированный блок был сохранен как есть."

#: ../../library/email.errors.rst:147
msgid ""
"When decoding an invalid or unparsable date field.  The original value is "
"kept as-is."
msgstr ""
