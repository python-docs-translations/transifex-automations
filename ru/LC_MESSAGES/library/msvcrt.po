# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001 Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# python-doc bot, 2025
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.14\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-08-07 20:38+0000\n"
"PO-Revision-Date: 2025-08-02 17:34+0000\n"
"Last-Translator: python-doc bot, 2025\n"
"Language-Team: Russian (https://app.transifex.com/python-doc/teams/5390/"
"ru/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ru\n"
"Plural-Forms: nplurals=4; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && "
"n%10<=4 && (n%100<12 || n%100>14) ? 1 : n%10==0 || (n%10>=5 && n%10<=9) || "
"(n%100>=11 && n%100<=14)? 2 : 3);\n"

#: ../../library/msvcrt.rst:2
msgid ":mod:`!msvcrt` --- Useful routines from the MS VC++ runtime"
msgstr ":mod:`!msvcrt` --- Полезные процедуры из среды выполнения MS VС++"

#: ../../library/msvcrt.rst:12
msgid ""
"These functions provide access to some useful capabilities on Windows "
"platforms. Some higher-level modules use these functions to build the "
"Windows implementations of their services. For example, the :mod:`getpass` "
"module uses this in the implementation of the :func:`getpass` function."
msgstr ""
"Эти функции обеспечивают доступ к некоторым полезным возможностям на "
"платформах Windows. Некоторые модули более высокого уровня используют эти "
"функции для создания реализаций своих сервисов в Windows. Например, модуль :"
"mod:`getpass` использует это в реализации функции :func:`getpass`."

#: ../../library/msvcrt.rst:17
msgid ""
"Further documentation on these functions can be found in the Platform API "
"documentation."
msgstr ""
"Дополнительную документацию по этим функциям можно найти в документации API "
"платформы."

#: ../../library/msvcrt.rst:20
msgid ""
"The module implements both the normal and wide char variants of the console "
"I/O api. The normal API deals only with ASCII characters and is of limited "
"use for internationalized applications. The wide char API should be used "
"where ever possible."
msgstr ""
"Модуль реализует как обычный, так и расширенный вариант API консольного "
"ввода-вывода. Обычный API работает только с символами ASCII и имеет "
"ограниченное применение для интернационализированных приложений. API "
"широкого символа следует использовать везде, где это возможно."

#: ../../library/msvcrt.rst:25
msgid ""
"Operations in this module now raise :exc:`OSError` where :exc:`IOError` was "
"raised."
msgstr ""
"Операции в этом модуле теперь вызывают :exc:`OSError` там, где было вызвано :"
"exc:`IOError`."

#: ../../library/msvcrt.rst:33
msgid "File Operations"
msgstr "Файловые операции"

#: ../../library/msvcrt.rst:38
msgid ""
"Lock part of a file based on file descriptor *fd* from the C runtime. "
"Raises :exc:`OSError` on failure. The locked region of the file extends from "
"the current file position for *nbytes* bytes, and may continue beyond the "
"end of the file. *mode* must be one of the :const:`!LK_\\*` constants listed "
"below. Multiple regions in a file may be locked at the same time, but may "
"not overlap. Adjacent regions are not merged; they must be unlocked "
"individually."
msgstr ""
"Заблокируйте часть файла на основе файлового дескриптора *fd* из среды "
"выполнения C. Вызывает :exc:`OSError` в случае сбоя. Заблокированная область "
"файла простирается от текущей позиции файла на *nbytes* байт и может "
"продолжаться за пределами файла. *mode* должен быть одной из констант :const:"
"`!LK_\\*`, перечисленных ниже. Несколько областей в файле могут быть "
"заблокированы одновременно, но не могут перекрываться. Соседние регионы не "
"объединяются; они должны быть разблокированы индивидуально."

#: ../../library/msvcrt.rst:45
msgid ""
"Raises an :ref:`auditing event <auditing>` ``msvcrt.locking`` with arguments "
"``fd``, ``mode``, ``nbytes``."
msgstr ""
"Вызывает событие аудита <auditing>``msvcrt.locking`` с аргументами ``fd``, "
"``mode``, ``nbytes``."

#: ../../library/msvcrt.rst:51
msgid ""
"Locks the specified bytes. If the bytes cannot be locked, the program "
"immediately tries again after 1 second. If, after 10 attempts, the bytes "
"cannot be locked, :exc:`OSError` is raised."
msgstr ""
"Блокирует указанные байты. Если байты не могут быть заблокированы, программа "
"немедленно пытается повторить попытку через 1 секунду. Если после 10 попыток "
"байты не могут быть заблокированы, выдается :exc:`OSError`."

#: ../../library/msvcrt.rst:59
msgid ""
"Locks the specified bytes. If the bytes cannot be locked, :exc:`OSError` is "
"raised."
msgstr ""
"Блокирует указанные байты. Если байты не могут быть заблокированы, "
"возникает :exc:`OSError`."

#: ../../library/msvcrt.rst:65
msgid "Unlocks the specified bytes, which must have been previously locked."
msgstr "Разблокирует указанные байты, которые должны быть ранее заблокированы."

#: ../../library/msvcrt.rst:70
msgid ""
"Set the line-end translation mode for the file descriptor *fd*. To set it to "
"text mode, *flags* should be :const:`os.O_TEXT`; for binary, it should be :"
"const:`os.O_BINARY`."
msgstr ""
"Установите режим перевода конца строки для файлового дескриптора *fd*. Чтобы "
"установить текстовый режим, *flags* должно быть :const:`os.O_TEXT`; для "
"двоичного файла это должно быть :const:`os.O_BINARY`."

#: ../../library/msvcrt.rst:77
msgid ""
"Create a C runtime file descriptor from the file handle *handle*. The "
"*flags* parameter should be a bitwise OR of :const:`os.O_APPEND`, :const:`os."
"O_RDONLY`, :const:`os.O_TEXT` and :const:`os.O_NOINHERIT`. The returned file "
"descriptor may be used as a parameter to :func:`os.fdopen` to create a file "
"object."
msgstr ""
"Создайте дескриптор файла среды выполнения C из дескриптора файла *handle*. "
"Параметр *flags* должен представлять собой поразрядное ИЛИ из :const:`os."
"O_APPEND`, :const:`os.O_RDONLY`, :const:`os.O_TEXT` и :const:`os."
"O_NOINHERIT`. Возвращенный файловый дескриптор можно использовать в качестве "
"параметра :func:`os.fdopen` для создания файлового объекта."

#: ../../library/msvcrt.rst:83
msgid ""
"The file descriptor is inheritable by default. Pass :const:`os.O_NOINHERIT` "
"flag to make it non inheritable."
msgstr ""
"Дескриптор файла по умолчанию наследуется. Передайте флаг :const:`os."
"O_NOINHERIT`, чтобы сделать его ненаследуемым."

#: ../../library/msvcrt.rst:86
msgid ""
"Raises an :ref:`auditing event <auditing>` ``msvcrt.open_osfhandle`` with "
"arguments ``handle``, ``flags``."
msgstr ""
"Вызывает :ref:`событие аудита <auditing>``msvcrt.open_osfhandle`` с "
"аргументами ``handle``, ``flags``."

#: ../../library/msvcrt.rst:91
msgid ""
"Return the file handle for the file descriptor *fd*. Raises :exc:`OSError` "
"if *fd* is not recognized."
msgstr ""
"Возвращает дескриптор файла для файлового дескриптора *fd*. Вызывает :exc:"
"`OSError`, если *fd* не распознан."

#: ../../library/msvcrt.rst:94
msgid ""
"Raises an :ref:`auditing event <auditing>` ``msvcrt.get_osfhandle`` with "
"argument ``fd``."
msgstr ""
"Вызывает :ref:`событие аудита <auditing>``msvcrt.get_osfhandle`` с "
"аргументом ``fd``."

#: ../../library/msvcrt.rst:100
msgid "Console I/O"
msgstr "Консоль ввода/вывода"

#: ../../library/msvcrt.rst:105
msgid ""
"Returns a nonzero value if a keypress is waiting to be read. Otherwise, "
"return 0."
msgstr ""
"Возвращает ненулевое значение, если нажатие клавиши ожидает чтения. В "
"противном случае верните 0."

#: ../../library/msvcrt.rst:111
msgid ""
"Read a keypress and return the resulting character as a byte string. Nothing "
"is echoed to the console. This call will block if a keypress is not already "
"available, but will not wait for :kbd:`Enter` to be pressed. If the pressed "
"key was a special function key, this will return ``'\\000'`` or ``'\\xe0'``; "
"the next call will return the keycode. The :kbd:`Control-C` keypress cannot "
"be read with this function."
msgstr ""
"Прочитайте нажатие клавиши и верните полученный символ в виде байтовой "
"строки. На консоль ничего не отображается. Этот вызов будет заблокирован, "
"если нажатие клавиши еще не доступно, но не будет ждать нажатия :kbd:"
"`Enter`. Если нажатая клавиша была специальной функциональной клавишей, она "
"вернет ``'\\000'`` или ``'\\xe0'``; следующий вызов вернет код ключа. "
"Нажатие клавиши :kbd:`Control-C` не может быть прочитано с помощью этой "
"функции."

#: ../../library/msvcrt.rst:121
msgid "Wide char variant of :func:`getch`, returning a Unicode value."
msgstr ""
"Расширенный символьный вариант :func:`getch`, возвращающий значение Unicode."

#: ../../library/msvcrt.rst:126
msgid ""
"Similar to :func:`getch`, but the keypress will be echoed if it represents a "
"printable character."
msgstr ""
"Аналогично :func:`getch`, но нажатие клавиши будет отображаться, если оно "
"представляет собой печатный символ."

#: ../../library/msvcrt.rst:132
msgid "Wide char variant of :func:`getche`, returning a Unicode value."
msgstr ""
"Расширенный символьный вариант :func:`getche`, возвращающий значение Unicode."

#: ../../library/msvcrt.rst:137
msgid "Print the byte string *char* to the console without buffering."
msgstr "Выведите строку байтов *char* на консоль без буферизации."

#: ../../library/msvcrt.rst:142
msgid "Wide char variant of :func:`putch`, accepting a Unicode value."
msgstr ""
"Широкий символьный вариант :func:`patch`, принимающий значение Unicode."

#: ../../library/msvcrt.rst:147
msgid ""
"Cause the byte string *char* to be \"pushed back\" into the console buffer; "
"it will be the next character read by :func:`getch` or :func:`getche`."
msgstr ""
"Заставить строку байтов *char* «вернуться обратно» в буфер консоли; это "
"будет следующий символ, прочитанный :func:`getch` или :func:`getche`."

#: ../../library/msvcrt.rst:153
msgid "Wide char variant of :func:`ungetch`, accepting a Unicode value."
msgstr ""
"Широкий символьный вариант :func:`ungetch`, принимающий значение Unicode."

#: ../../library/msvcrt.rst:159
msgid "Other Functions"
msgstr "Другие функции"

#: ../../library/msvcrt.rst:164
msgid ""
"Force the :c:func:`malloc` heap to clean itself up and return unused blocks "
"to the operating system. On failure, this raises :exc:`OSError`."
msgstr ""
"Заставьте кучу :c:func:`malloc` очиститься и вернуть неиспользуемые блоки в "
"операционную систему. В случае сбоя возникает :exc:`OSError`."

#: ../../library/msvcrt.rst:170
msgid ""
"Changes the location where the C runtime writes an error message for an "
"error that might end the program. *mode* must be one of the :const:`!"
"OUT_\\*` constants listed below  or :const:`REPORT_ERRMODE`. Returns the old "
"setting or -1 if an error occurs. Only available in :ref:`debug build of "
"Python <debug-build>`."
msgstr ""
"Изменяет место, куда среда выполнения C записывает сообщение об ошибке, "
"которая может привести к завершению программы. *mode* должен быть одной из "
"констант :const:`!OUT_\\*`, перечисленных ниже, или :const:`REPORT_ERRMODE`. "
"Возвращает старую настройку или -1 в случае возникновения ошибки. Доступно "
"только в :ref:`отладочной сборке Python <debug-build>`."

#: ../../library/msvcrt.rst:179
msgid ""
"Error sink is determined by the app's type. Only available in :ref:`debug "
"build of Python <debug-build>`."
msgstr ""
"Приемник ошибок определяется типом приложения. Доступно только в :ref:"
"`отладочной сборке Python <debug-build>`."

#: ../../library/msvcrt.rst:185
msgid ""
"Error sink is a standard error. Only available in :ref:`debug build of "
"Python <debug-build>`."
msgstr ""
"Приемник ошибок — это стандартная ошибка. Доступно только в :ref:`отладочной "
"сборке Python <debug-build>`."

#: ../../library/msvcrt.rst:191
msgid ""
"Error sink is a message box. Only available in :ref:`debug build of Python "
"<debug-build>`."
msgstr ""
"Приемник ошибок — это окно сообщений. Доступно только в :ref:`отладочной "
"сборке Python <debug-build>`."

#: ../../library/msvcrt.rst:197
msgid ""
"Report the current error mode value. Only available in :ref:`debug build of "
"Python <debug-build>`."
msgstr ""
"Сообщите текущее значение режима ошибки. Доступно только в :ref:`отладочной "
"сборке Python <debug-build>`."

#: ../../library/msvcrt.rst:203
msgid ""
"Specifies the destination or destinations for a specific report type "
"generated by :c:func:`!_CrtDbgReport` in the MS VC++ runtime. *type* must be "
"one of the :const:`!CRT_\\*` constants listed below. *mode* must be one of "
"the :const:`!CRTDBG_\\*` constants listed below. Only available in :ref:"
"`debug build of Python <debug-build>`."
msgstr ""
"Указывает место назначения или места назначения для определенного типа "
"отчета, созданного :c:func:`!_CrtDbgReport` в среде выполнения MS VС++. "
"*type* должен быть одной из констант :const:`!CRT_\\*`, перечисленных ниже. "
"*mode* должен быть одной из констант :const:`!CRTDBG_\\*`, перечисленных "
"ниже. Доступно только в :ref:`отладочной сборке Python <debug-build>`."

#: ../../library/msvcrt.rst:212
msgid ""
"After you use :func:`CrtSetReportMode` to specify :const:`CRTDBG_MODE_FILE`, "
"you can specify the file handle to receive the message text. *type* must be "
"one of the :const:`!CRT_\\*` constants listed below. *file* should be the "
"file handle your want specified. Only available in :ref:`debug build of "
"Python <debug-build>`."
msgstr ""
"После того, как вы используете :func:`CrtSetReportMode` для указания :const:"
"`CRTDBG_MODE_FILE`, вы можете указать дескриптор файла для получения текста "
"сообщения. *type* должен быть одной из констант :const:`!CRT_\\*`, "
"перечисленных ниже. *file* должен быть указанным вами дескриптором файла. "
"Доступно только в :ref:`отладочной сборке Python <debug-build>`."

#: ../../library/msvcrt.rst:221
msgid ""
"Warnings, messages, and information that doesn't need immediate attention."
msgstr ""
"Предупреждения, сообщения и информация, не требующая немедленного внимания."

#: ../../library/msvcrt.rst:226
msgid ""
"Errors, unrecoverable problems, and issues that require immediate attention."
msgstr ""
"Ошибки, неисправимые проблемы и проблемы, требующие немедленного внимания."

#: ../../library/msvcrt.rst:231
msgid "Assertion failures."
msgstr "Неудачи в утверждениях."

#: ../../library/msvcrt.rst:236
msgid "Writes the message to the debugger's output window."
msgstr "Записывает сообщение в окно вывода отладчика."

#: ../../library/msvcrt.rst:241
msgid ""
"Writes the message to a user-supplied file handle. :func:`CrtSetReportFile` "
"should be called to define the specific file or stream to use as the "
"destination."
msgstr ""
"Записывает сообщение в предоставленный пользователем дескриптор файла. :func:"
"`CrtSetReportFile` следует вызывать, чтобы определить конкретный файл или "
"поток, который будет использоваться в качестве места назначения."

#: ../../library/msvcrt.rst:248
msgid ""
"Creates a message box to display the message along with the ``Abort``, "
"``Retry``, and ``Ignore`` buttons."
msgstr ""
"Создает окно сообщения для отображения сообщения вместе с кнопками "
"«Прервать», «Повторить» и «Игнорировать»."

#: ../../library/msvcrt.rst:254
msgid "Returns current *mode* for the specified *type*."
msgstr "Возвращает текущий *режим* для указанного *типа*."

#: ../../library/msvcrt.rst:259
msgid "The CRT Assembly version, from the :file:`crtassem.h` header file."
msgstr "Версия сборки CRT из заголовочного файла :file:`crtassem.h`."

#: ../../library/msvcrt.rst:264
msgid ""
"The VC Assembly public key token, from the :file:`crtassem.h` header file."
msgstr ""
"Токен открытого ключа сборки VC из заголовочного файла :file:`crtassem.h`."

#: ../../library/msvcrt.rst:269
msgid ""
"The Libraries Assembly name prefix, from the :file:`crtassem.h` header file."
msgstr ""
"Префикс имени сборки библиотек из заголовочного файла :file:`crtassem.h`."
