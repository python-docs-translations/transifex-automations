# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# Rafael Fontenelle <rffontenelle@gmail.com>, 2024
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.10\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-01-10 16:06+0000\n"
"PO-Revision-Date: 2022-11-05 17:21+0000\n"
"Last-Translator: Rafael Fontenelle <rffontenelle@gmail.com>, 2024\n"
"Language-Team: Russian (https://app.transifex.com/python-doc/teams/5390/"
"ru/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ru\n"
"Plural-Forms: nplurals=4; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && "
"n%10<=4 && (n%100<12 || n%100>14) ? 1 : n%10==0 || (n%10>=5 && n%10<=9) || "
"(n%100>=11 && n%100<=14)? 2 : 3);\n"

#: ../../library/crypt.rst:2
msgid ":mod:`crypt` --- Function to check Unix passwords"
msgstr ":mod:`crypt` --- Функция проверки паролей Unix"

#: ../../library/crypt.rst:13
msgid "**Source code:** :source:`Lib/crypt.py`"
msgstr "**Исходный код:** :source:`Lib/crypt.py`"

#: ../../library/crypt.rst:19
msgid ""
"The :mod:`crypt` module is deprecated (see :pep:`PEP 594 <594#crypt>` for "
"details and alternatives). The :mod:`hashlib` module is a potential "
"replacement for certain use cases."
msgstr ""

#: ../../library/crypt.rst:26
msgid ""
"This module implements an interface to the :manpage:`crypt(3)` routine, "
"which is a one-way hash function based upon a modified DES algorithm; see "
"the Unix man page for further details.  Possible uses include storing hashed "
"passwords so you can check passwords without storing the actual password, or "
"attempting to crack Unix passwords with a dictionary."
msgstr ""
"Этот модуль реализует интерфейс к процедуре :manpage:`crypt(3)`, которая "
"представляет собой одностороннюю хеш-функцию, основанную на модифицированном "
"алгоритме DES; дополнительную информацию см. на странице руководства Unix. "
"Возможные варианты использования включают хранение хешированных паролей, "
"чтобы вы могли проверять пароли, не сохраняя фактический пароль, или попытку "
"взлома паролей Unix с помощью словаря."

#: ../../library/crypt.rst:34
msgid ""
"Notice that the behavior of this module depends on the actual "
"implementation  of the :manpage:`crypt(3)` routine in the running system.  "
"Therefore, any extensions available on the current implementation will also  "
"be available on this module."
msgstr ""
"Обратите внимание, что поведение этого модуля зависит от фактической "
"реализации процедуры :manpage:`crypt(3)` в работающей системе. Таким "
"образом, любые расширения, доступные в текущей реализации, также будут "
"доступны в этом модуле."

#: ../../library/crypt.rst:40
msgid ":ref:`Availability <availability>`: Unix. Not available on VxWorks."
msgstr ""

#: ../../library/crypt.rst:42
msgid "Hashing Methods"
msgstr "Методы хэширования"

#: ../../library/crypt.rst:46
msgid ""
"The :mod:`crypt` module defines the list of hashing methods (not all methods "
"are available on all platforms):"
msgstr ""
"Модуль :mod:`crypt` определяет список методов хеширования (не все методы "
"доступны на всех платформах):"

#: ../../library/crypt.rst:51
msgid ""
"A Modular Crypt Format method with 16 character salt and 86 character hash "
"based on the SHA-512 hash function.  This is the strongest method."
msgstr ""
"Метод модульного формата склепа с 16-символьной солью и 86-символьным хешем, "
"основанный на хеш-функции SHA-512. Это самый сильный метод."

#: ../../library/crypt.rst:56
msgid ""
"Another Modular Crypt Format method with 16 character salt and 43 character "
"hash based on the SHA-256 hash function."
msgstr ""
"Еще один метод модульного формата склепа с 16-символьной солью и 43-"
"символьным хешем, основанный на хэш-функции SHA-256."

#: ../../library/crypt.rst:61
msgid ""
"Another Modular Crypt Format method with 22 character salt and 31 character "
"hash based on the Blowfish cipher."
msgstr ""
"Еще один метод модульного формата склепа с солью из 22 символов и хешем из "
"31 символа, основанный на шифре Blowfish."

#: ../../library/crypt.rst:68
msgid ""
"Another Modular Crypt Format method with 8 character salt and 22 character "
"hash based on the MD5 hash function."
msgstr ""
"Другой метод модульного формата склепа с 8-символьной солью и 22-символьным "
"хешем, основанный на хеш-функции MD5."

#: ../../library/crypt.rst:73
msgid ""
"The traditional method with a 2 character salt and 13 characters of hash.  "
"This is the weakest method."
msgstr ""
"Традиционный метод с солью из 2 символов и хешем из 13 символов. Это самый "
"слабый метод."

#: ../../library/crypt.rst:78
msgid "Module Attributes"
msgstr "Атрибуты модуля"

#: ../../library/crypt.rst:84
msgid ""
"A list of available password hashing algorithms, as ``crypt.METHOD_*`` "
"objects.  This list is sorted from strongest to weakest."
msgstr ""
"Список доступных алгоритмов хеширования паролей в виде объектов ``crypt."
"METHOD_*``. Этот список отсортирован от самого сильного к самому слабому."

#: ../../library/crypt.rst:90
msgid "Module Functions"
msgstr "Функции модуля"

#: ../../library/crypt.rst:92
msgid "The :mod:`crypt` module defines the following functions:"
msgstr "Модуль :mod:`crypt` определяет следующие функции:"

#: ../../library/crypt.rst:96
msgid ""
"*word* will usually be a user's password as typed at a prompt or  in a "
"graphical interface.  The optional *salt* is either a string as returned "
"from :func:`mksalt`, one of the ``crypt.METHOD_*`` values (though not all "
"may be available on all platforms), or a full encrypted password including "
"salt, as returned by this function.  If *salt* is not provided, the "
"strongest method available in :attr:`methods` will be used."
msgstr ""
"*слово* обычно представляет собой пароль пользователя, введенный в командной "
"строке или в графическом интерфейсе. Необязательный *salt* — это либо "
"строка, возвращаемая из :func:`mksalt`, одно из значений ``crypt.METHOD_*`` "
"(хотя не все из них могут быть доступны на всех платформах), либо полностью "
"зашифрованный пароль, включая соль. , возвращаемый этой функцией. Если "
"*salt* не указан, будет использоваться самый сильный метод, доступный в :"
"attr:`methods`."

#: ../../library/crypt.rst:103
msgid ""
"Checking a password is usually done by passing the plain-text password as "
"*word* and the full results of a previous :func:`crypt` call, which should "
"be the same as the results of this call."
msgstr ""
"Проверка пароля обычно выполняется путем передачи пароля в виде открытого "
"текста в виде *word* и полных результатов предыдущего вызова :func:`crypt`, "
"которые должны совпадать с результатами этого вызова."

#: ../../library/crypt.rst:107
msgid ""
"*salt* (either a random 2 or 16 character string, possibly prefixed with "
"``$digit$`` to indicate the method) which will be used to perturb the "
"encryption algorithm.  The characters in *salt* must be in the set ``[./a-zA-"
"Z0-9]``, with the exception of Modular Crypt Format which prefixes a "
"``$digit$``."
msgstr ""
"*salt* (случайная строка из 2 или 16 символов, возможно, с префиксом "
"``$digit$`` для обозначения метода), которая будет использоваться для "
"нарушения алгоритма шифрования. Символы в *salt* должны быть в наборе ``[./a-"
"zA-Z0-9]``, за исключением Modular Crypt Format, в котором префиксом "
"является ``$digit$``."

#: ../../library/crypt.rst:113
msgid ""
"Returns the hashed password as a string, which will be composed of "
"characters from the same alphabet as the salt."
msgstr ""
"Возвращает хешированный пароль в виде строки, состоящей из символов того же "
"алфавита, что и соль."

#: ../../library/crypt.rst:118
msgid ""
"Since a few :manpage:`crypt(3)` extensions allow different values, with "
"different sizes in the *salt*, it is recommended to use  the full crypted "
"password as salt when checking for a password."
msgstr ""
"Поскольку некоторые расширения :manpage:`crypt(3)` допускают разные значения "
"с разными размерами *salt*, рекомендуется использовать полный зашифрованный "
"пароль в качестве соли при проверке пароля."

#: ../../library/crypt.rst:122
msgid "Accept ``crypt.METHOD_*`` values in addition to strings for *salt*."
msgstr ""
"Принимайте значения ``crypt.METHOD_*`` в дополнение к строкам для *salt*."

#: ../../library/crypt.rst:128
msgid ""
"Return a randomly generated salt of the specified method.  If no *method* is "
"given, the strongest method available in :attr:`methods` is used."
msgstr ""
"Возвращает случайно сгенерированную соль указанного метода. Если *method* не "
"указан, используется самый сильный метод, доступный в :attr:`methods`."

#: ../../library/crypt.rst:132
msgid ""
"The return value is a string suitable for passing as the *salt* argument to :"
"func:`crypt`."
msgstr ""
"Возвращаемое значение представляет собой строку, подходящую для передачи в "
"качестве аргумента *salt* в :func:`crypt`."

#: ../../library/crypt.rst:135
msgid ""
"*rounds* specifies the number of rounds for ``METHOD_SHA256``, "
"``METHOD_SHA512`` and ``METHOD_BLOWFISH``. For ``METHOD_SHA256`` and "
"``METHOD_SHA512`` it must be an integer between ``1000`` and "
"``999_999_999``, the default is ``5000``.  For ``METHOD_BLOWFISH`` it must "
"be a power of two between ``16`` (2\\ :sup:`4`) and ``2_147_483_648`` (2\\ :"
"sup:`31`), the default is ``4096`` (2\\ :sup:`12`)."
msgstr ""
"*rounds* определяет количество раундов для ``METHOD_SHA256``, "
"``METHOD_SHA512`` и ``METHOD_BLOWFISH``. Для ``METHOD_SHA256`` и "
"``METHOD_SHA512`` это должно быть целое число от ``1000`` до "
"``999_999_999``, значение по умолчанию — ``5000``. Для ``METHOD_BLOWFISH`` "
"это должна быть степень двойки между ``16`` (2\\ :sup:`4`) и "
"``2_147_483_648`` (2\\ :sup:`31`), значение по умолчанию `` `4096`` (2\\ :"
"sup:`12`)."

#: ../../library/crypt.rst:145
msgid "Added the *rounds* parameter."
msgstr "Добавлен параметр *rounds*."

#: ../../library/crypt.rst:150
msgid "Examples"
msgstr "Примеры"

#: ../../library/crypt.rst:152
msgid ""
"A simple example illustrating typical use (a constant-time comparison "
"operation is needed to limit exposure to timing attacks. :func:`hmac."
"compare_digest` is suitable for this purpose)::"
msgstr ""
"Простой пример, иллюстрирующий типичное использование (операция сравнения с "
"постоянным временем необходима для ограничения подверженности атакам по "
"времени. :func:`hmac.compare_digest` подходит для этой цели)::"

#: ../../library/crypt.rst:172
msgid ""
"To generate a hash of a password using the strongest available method and "
"check it against the original::"
msgstr ""
"Чтобы сгенерировать хэш пароля самым надежным доступным методом и сравнить "
"его с оригиналом:"
