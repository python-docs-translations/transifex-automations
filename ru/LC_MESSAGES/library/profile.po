# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# Rafael Fontenelle <rffontenelle@gmail.com>, 2024
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.11\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-01-03 15:28+0000\n"
"PO-Revision-Date: 2023-05-24 02:18+0000\n"
"Last-Translator: Rafael Fontenelle <rffontenelle@gmail.com>, 2024\n"
"Language-Team: Russian (https://app.transifex.com/python-doc/teams/5390/"
"ru/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ru\n"
"Plural-Forms: nplurals=4; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && "
"n%10<=4 && (n%100<12 || n%100>14) ? 1 : n%10==0 || (n%10>=5 && n%10<=9) || "
"(n%100>=11 && n%100<=14)? 2 : 3);\n"

#: ../../library/profile.rst:5
msgid "The Python Profilers"
msgstr "Профилировщики Python"

#: ../../library/profile.rst:7
msgid "**Source code:** :source:`Lib/profile.py` and :source:`Lib/pstats.py`"
msgstr "**Исходный код:** :source:`Lib/profile.py`"

#: ../../library/profile.rst:14
msgid "Introduction to the profilers"
msgstr "Знакомство с профайлерами"

#: ../../library/profile.rst:20
msgid ""
":mod:`cProfile` and :mod:`profile` provide :dfn:`deterministic profiling` of "
"Python programs. A :dfn:`profile` is a set of statistics that describes how "
"often and for how long various parts of the program executed. These "
"statistics can be formatted into reports via the :mod:`pstats` module."
msgstr ""
":mod:`cProfile` и :mod:`profile` обеспечивают :dfn:`детерминированное "
"профилирование` программ Python. :dfn:`profile` — это набор статистических "
"данных, описывающих, как часто и как долго выполняются различные части "
"программы. Эту статистику можно форматировать в отчеты с помощью модуля :mod:"
"`pstats`."

#: ../../library/profile.rst:25
msgid ""
"The Python standard library provides two different implementations of the "
"same profiling interface:"
msgstr ""
"Стандартная библиотека Python предоставляет две разные реализации одного и "
"того же интерфейса профилирования:"

#: ../../library/profile.rst:28
msgid ""
":mod:`cProfile` is recommended for most users; it's a C extension with "
"reasonable overhead that makes it suitable for profiling long-running "
"programs.  Based on :mod:`lsprof`, contributed by Brett Rosen and Ted "
"Czotter."
msgstr ""
":mod:`cProfile` рекомендуется большинству пользователей; это расширение C с "
"разумными накладными расходами, что делает его подходящим для профилирования "
"долго выполняющихся программ. На основе :mod:`lsprof`, предоставленного "
"Бреттом Розеном и Тедом Чоттером."

#: ../../library/profile.rst:33
msgid ""
":mod:`profile`, a pure Python module whose interface is imitated by :mod:"
"`cProfile`, but which adds significant overhead to profiled programs. If "
"you're trying to extend the profiler in some way, the task might be easier "
"with this module.  Originally designed and written by Jim Roskind."
msgstr ""
":mod:`profile`, модуль на чистом Python, интерфейс которого имитирует :mod:"
"`cProfile`, но который добавляет значительные накладные расходы к "
"профилируемым программам. Если вы пытаетесь каким-либо образом расширить "
"профилировщик, с помощью этого модуля задача может быть проще. Первоначально "
"разработан и написан Джимом Роскиндом."

#: ../../library/profile.rst:40
msgid ""
"The profiler modules are designed to provide an execution profile for a "
"given program, not for benchmarking purposes (for that, there is :mod:"
"`timeit` for reasonably accurate results).  This particularly applies to "
"benchmarking Python code against C code: the profilers introduce overhead "
"for Python code, but not for C-level functions, and so the C code would seem "
"faster than any Python one."
msgstr ""
"Модули профилировщика предназначены для предоставления профиля выполнения "
"данной программы, а не для целей тестирования (для этого существует :mod:"
"`timeit` для получения достаточно точных результатов). Это особенно "
"относится к сравнению кода Python с кодом C: профилировщики вносят накладные "
"расходы для кода Python, но не для функций уровня C, и поэтому код C будет "
"казаться быстрее, чем любой код Python."

#: ../../library/profile.rst:51
msgid "Instant User's Manual"
msgstr "Мгновенное руководство пользователя"

#: ../../library/profile.rst:53
msgid ""
"This section is provided for users that \"don't want to read the manual.\" "
"It provides a very brief overview, and allows a user to rapidly perform "
"profiling on an existing application."
msgstr ""
"Этот раздел предназначен для пользователей, которые «не хотят читать "
"руководство». Он предоставляет очень краткий обзор и позволяет пользователю "
"быстро выполнить профилирование существующего приложения."

#: ../../library/profile.rst:57
msgid "To profile a function that takes a single argument, you can do::"
msgstr ""
"Чтобы профилировать функцию, которая принимает один аргумент, вы можете "
"сделать::"

#: ../../library/profile.rst:63
msgid ""
"(Use :mod:`profile` instead of :mod:`cProfile` if the latter is not "
"available on your system.)"
msgstr ""
"(Используйте :mod:`profile` вместо :mod:`cProfile`, если последний "
"недоступен в вашей системе.)"

#: ../../library/profile.rst:66
msgid ""
"The above action would run :func:`re.compile` and print profile results like "
"the following::"
msgstr ""
"Вышеуказанное действие запустит :func:`re.compile` и распечатает результаты "
"профиля, подобные следующим:"

#: ../../library/profile.rst:83
msgid ""
"The first line indicates that 214 calls were monitored.  Of those calls, 207 "
"were :dfn:`primitive`, meaning that the call was not induced via recursion. "
"The next line: ``Ordered by: cumulative time`` indicates the output is "
"sorted by the ``cumtime`` values. The column headings include:"
msgstr ""
"В первой строке указано, что было прослежено 214 звонков. Из этих вызовов "
"207 были :dfn:`примитивными`, что означает, что вызов не был вызван "
"рекурсией. Следующая строка: ``Упорядочено по: совокупному времени`` "
"указывает, что выходные данные отсортированы по значениям ``cumtime``. "
"Заголовки столбцов включают в себя:"

#: ../../library/profile.rst:89
msgid "ncalls"
msgstr "ncalls"

#: ../../library/profile.rst:89
msgid "for the number of calls."
msgstr "за количество звонков."

#: ../../library/profile.rst:93
msgid "tottime"
msgstr "tottime"

#: ../../library/profile.rst:92
msgid ""
"for the total time spent in the given function (and excluding time made in "
"calls to sub-functions)"
msgstr ""
"за общее время, проведенное в данной функции (без учета времени, "
"потраченного на вызовы подфункций)"

#: ../../library/profile.rst:96 ../../library/profile.rst:103
msgid "percall"
msgstr "percall"

#: ../../library/profile.rst:96
msgid "is the quotient of ``tottime`` divided by ``ncalls``"
msgstr "это частное общего времени, разделенное на ncalls."

#: ../../library/profile.rst:100
msgid "cumtime"
msgstr "cumtime"

#: ../../library/profile.rst:99
msgid ""
"is the cumulative time spent in this and all subfunctions (from invocation "
"till exit). This figure is accurate *even* for recursive functions."
msgstr ""
"— совокупное время, затраченное на эту и все подфункции (от вызова до "
"выхода). Эта цифра точна *даже* для рекурсивных функций."

#: ../../library/profile.rst:103
msgid "is the quotient of ``cumtime`` divided by primitive calls"
msgstr "это частное от ``cumtime``, разделенное на примитивные вызовы"

#: ../../library/profile.rst:106
msgid "filename:lineno(function)"
msgstr "filename:lineno(function)"

#: ../../library/profile.rst:106
msgid "provides the respective data of each function"
msgstr "предоставляет соответствующие данные каждой функции"

#: ../../library/profile.rst:108
msgid ""
"When there are two numbers in the first column (for example ``3/1``), it "
"means that the function recursed.  The second value is the number of "
"primitive calls and the former is the total number of calls.  Note that when "
"the function does not recurse, these two values are the same, and only the "
"single figure is printed."
msgstr ""
"Когда в первом столбце два числа (например, ``3/1``), это означает, что "
"функция рекурсивна. Второе значение — это количество вызовов примитивов, а "
"первое — общее количество вызовов. Обратите внимание: когда функция не "
"рекурсивна, эти два значения одинаковы, и печатается только одна цифра."

#: ../../library/profile.rst:114
msgid ""
"Instead of printing the output at the end of the profile run, you can save "
"the results to a file by specifying a filename to the :func:`run` function::"
msgstr ""
"Вместо того, чтобы печатать выходные данные в конце запуска профиля, вы "
"можете сохранить результаты в файл, указав имя файла для функции :func:"
"`run`::"

#: ../../library/profile.rst:121
msgid ""
"The :class:`pstats.Stats` class reads profile results from a file and "
"formats them in various ways."
msgstr ""
"Класс :class:`pstats.Stats` считывает результаты профиля из файла и "
"форматирует их различными способами."

#: ../../library/profile.rst:126
msgid ""
"The files :mod:`cProfile` and :mod:`profile` can also be invoked as a script "
"to profile another script.  For example::"
msgstr ""
"Файлы :mod:`cProfile` и :mod:`profile` также можно использовать как скрипт "
"для профилирования другого скрипта. Например::"

#: ../../library/profile.rst:131
msgid "``-o`` writes the profile results to a file instead of to stdout"
msgstr "``-o`` записывает результаты профиля в файл, а не в стандартный вывод"

#: ../../library/profile.rst:133
msgid ""
"``-s`` specifies one of the :func:`~pstats.Stats.sort_stats` sort values to "
"sort the output by. This only applies when ``-o`` is not supplied."
msgstr ""
"``-s`` задает одно из значений сортировки :func:`~pstats.Stats.sort_stats` "
"для сортировки вывода. Это применимо только в том случае, если не указан ``-"
"o``."

#: ../../library/profile.rst:136
msgid "``-m`` specifies that a module is being profiled instead of a script."
msgstr "``-m`` указывает, что профилируется модуль, а не скрипт."

#: ../../library/profile.rst:138
msgid "Added the ``-m`` option to :mod:`cProfile`."
msgstr "Добавлена ​​опция ``-m`` в :mod:`cProfile`."

#: ../../library/profile.rst:141
msgid "Added the ``-m`` option to :mod:`profile`."
msgstr "Добавлена ​​опция ``-m`` в :mod:`profile`."

#: ../../library/profile.rst:144
msgid ""
"The :mod:`pstats` module's :class:`~pstats.Stats` class has a variety of "
"methods for manipulating and printing the data saved into a profile results "
"file::"
msgstr ""
"Класс :class:`~pstats.Stats` модуля :mod:`pstats` имеет множество методов "
"для манипулирования и печати данных, сохраненных в файле результатов профиля:"

#: ../../library/profile.rst:152
msgid ""
"The :meth:`~pstats.Stats.strip_dirs` method removed the extraneous path from "
"all the module names. The :meth:`~pstats.Stats.sort_stats` method sorted all "
"the entries according to the standard module/line/name string that is "
"printed. The :meth:`~pstats.Stats.print_stats` method printed out all the "
"statistics.  You might try the following sort calls::"
msgstr ""
"Метод :meth:`~pstats.Stats.strip_dirs` удалил посторонний путь из всех имен "
"модулей. Метод :meth:`~pstats.Stats.sort_stats` сортирует все записи в "
"соответствии со стандартной выводимой строкой модуля/строки/имени. Метод :"
"meth:`~pstats.Stats.print_stats` распечатал всю статистику. Вы можете "
"попробовать следующие вызовы сортировки::"

#: ../../library/profile.rst:161
msgid ""
"The first call will actually sort the list by function name, and the second "
"call will print out the statistics.  The following are some interesting "
"calls to experiment with::"
msgstr ""
"Первый вызов фактически отсортирует список по имени функции, а второй вызов "
"распечатает статистику. Ниже приведены некоторые интересные вызовы для "
"экспериментов:"

#: ../../library/profile.rst:167
msgid ""
"This sorts the profile by cumulative time in a function, and then only "
"prints the ten most significant lines.  If you want to understand what "
"algorithms are taking time, the above line is what you would use."
msgstr ""
"При этом профиль сортируется по совокупному времени в функции, а затем "
"печатаются только десять наиболее важных строк. Если вы хотите понять, какие "
"алгоритмы требуют времени, вам следует использовать приведенную выше строку."

#: ../../library/profile.rst:171
msgid ""
"If you were looking to see what functions were looping a lot, and taking a "
"lot of time, you would do::"
msgstr ""
"Если бы вы хотели увидеть, какие функции часто зацикливаются и занимают "
"много времени, вы бы сделали:"

#: ../../library/profile.rst:176
msgid ""
"to sort according to time spent within each function, and then print the "
"statistics for the top ten functions."
msgstr ""
"для сортировки по времени, затраченному на каждую функцию, а затем "
"распечатки статистики для десяти самых популярных функций."

#: ../../library/profile.rst:179
msgid "You might also try::"
msgstr "Вы также можете попробовать::"

#: ../../library/profile.rst:183
msgid ""
"This will sort all the statistics by file name, and then print out "
"statistics for only the class init methods (since they are spelled with "
"``__init__`` in them).  As one final example, you could try::"
msgstr ""
"Это отсортирует всю статистику по имени файла, а затем распечатает "
"статистику только для методов инициализации класса (поскольку они пишутся с "
"помощью ``__init__``). В качестве последнего примера вы можете попробовать:"

#: ../../library/profile.rst:189
msgid ""
"This line sorts statistics with a primary key of time, and a secondary key "
"of cumulative time, and then prints out some of the statistics. To be "
"specific, the list is first culled down to 50% (re: ``.5``) of its original "
"size, then only lines containing ``init`` are maintained, and that sub-sub-"
"list is printed."
msgstr ""
"Эта строка сортирует статистику по первичному ключу времени и вторичному "
"ключу совокупного времени, а затем распечатывает часть статистики. Точнее, "
"список сначала сокращается до 50 % (re: ``.5``) от его исходного размера, "
"затем сохраняются только строки, содержащие ``init``, и этот под-подсписок "
"печатается."

#: ../../library/profile.rst:194
msgid ""
"If you wondered what functions called the above functions, you could now "
"(``p`` is still sorted according to the last criteria) do::"
msgstr ""
"Если вам интересно, какие функции называются вышеуказанными функциями, вы "
"можете теперь (``p`` все еще сортируется по последнему критерию) сделать::"

#: ../../library/profile.rst:199
msgid "and you would get a list of callers for each of the listed functions."
msgstr ""
"и вы получите список вызывающих абонентов для каждой из перечисленных "
"функций."

#: ../../library/profile.rst:201
msgid ""
"If you want more functionality, you're going to have to read the manual, or "
"guess what the following functions do::"
msgstr ""
"Если вам нужно больше функциональности, вам придется прочитать руководство "
"или угадать, что делают следующие функции:"

#: ../../library/profile.rst:207
msgid ""
"Invoked as a script, the :mod:`pstats` module is a statistics browser for "
"reading and examining profile dumps.  It has a simple line-oriented "
"interface (implemented using :mod:`cmd`) and interactive help."
msgstr ""
"Модуль :mod:`pstats`, вызываемый как скрипт, представляет собой браузер "
"статистики для чтения и проверки дампов профилей. Он имеет простой линейно-"
"ориентированный интерфейс (реализованный с помощью :mod:`cmd`) и "
"интерактивную справку."

#: ../../library/profile.rst:212
msgid ":mod:`profile` and :mod:`cProfile` Module Reference"
msgstr ":mod:`profile` и :mod:`cProfile` Справочник по модулям"

#: ../../library/profile.rst:218
msgid ""
"Both the :mod:`profile` and :mod:`cProfile` modules provide the following "
"functions:"
msgstr ":mod:`profile` и :mod:`cProfile` Справочник по модулям"

#: ../../library/profile.rst:223
msgid ""
"This function takes a single argument that can be passed to the :func:`exec` "
"function, and an optional file name.  In all cases this routine executes::"
msgstr ""
"Эта функция принимает один аргумент, который можно передать в функцию :func:"
"`exec`, и необязательное имя файла. Во всех случаях эта процедура "
"выполняется:"

#: ../../library/profile.rst:228
msgid ""
"and gathers profiling statistics from the execution. If no file name is "
"present, then this function automatically creates a :class:`~pstats.Stats` "
"instance and prints a simple profiling report. If the sort value is "
"specified, it is passed to this :class:`~pstats.Stats` instance to control "
"how the results are sorted."
msgstr ""
"и собирает профилирующую статистику выполнения. Если имя файла отсутствует, "
"эта функция автоматически создает экземпляр :class:`~pstats.Stats` и "
"печатает простой отчет о профилировании. Если указано значение сортировки, "
"оно передается этому экземпляру :class:`~pstats.Stats` для управления "
"сортировкой результатов."

#: ../../library/profile.rst:236
msgid ""
"This function is similar to :func:`run`, with added arguments to supply the "
"globals and locals dictionaries for the *command* string. This routine "
"executes::"
msgstr ""
"Эта функция аналогична :func:`run`, с добавленными аргументами для "
"предоставления словарей глобальных и локальных переменных для строки "
"*command*. Эта процедура выполняет::"

#: ../../library/profile.rst:242
msgid "and gathers profiling statistics as in the :func:`run` function above."
msgstr "и собирает статистику профилирования, как в функции :func:`run` выше."

#: ../../library/profile.rst:246
msgid ""
"This class is normally only used if more precise control over profiling is "
"needed than what the :func:`cProfile.run` function provides."
msgstr ""
"Этот класс обычно используется только в том случае, если требуется более "
"точный контроль над профилированием, чем тот, который обеспечивает функция :"
"func:`cProfile.run`."

#: ../../library/profile.rst:249
msgid ""
"A custom timer can be supplied for measuring how long code takes to run via "
"the *timer* argument. This must be a function that returns a single number "
"representing the current time. If the number is an integer, the *timeunit* "
"specifies a multiplier that specifies the duration of each unit of time. For "
"example, if the timer returns times measured in thousands of seconds, the "
"time unit would be ``.001``."
msgstr ""
"Можно предоставить собственный таймер для измерения времени выполнения кода "
"с помощью аргумента *timer*. Это должна быть функция, возвращающая одно "
"число, представляющее текущее время. Если число является целым числом, "
"*timeunit* указывает множитель, определяющий продолжительность каждой "
"единицы времени. Например, если таймер возвращает время, измеряемое в "
"тысячах секунд, единицей времени будет ``.001``."

#: ../../library/profile.rst:256
msgid ""
"Directly using the :class:`Profile` class allows formatting profile results "
"without writing the profile data to a file::"
msgstr ""
"Непосредственное использование класса :class:`Profile` позволяет "
"форматировать результаты профиля без записи данных профиля в файл::"

#: ../../library/profile.rst:271
msgid ""
"The :class:`Profile` class can also be used as a context manager (supported "
"only in :mod:`cProfile` module. see :ref:`typecontextmanager`)::"
msgstr ""
"Класс :class:`Profile` также можно использовать в качестве менеджера "
"контекста (поддерживается только в модуле :mod:`cProfile`. см. :ref:"
"`typecontextmanager`)::"

#: ../../library/profile.rst:281
msgid "Added context manager support."
msgstr "Добавлена ​​поддержка контекстного менеджера."

#: ../../library/profile.rst:286
msgid "Start collecting profiling data. Only in :mod:`cProfile`."
msgstr "Начните собирать данные для профилирования. Только в :mod:`cProfile`."

#: ../../library/profile.rst:290
msgid "Stop collecting profiling data. Only in :mod:`cProfile`."
msgstr "Прекратите сбор данных профилирования. Только в :mod:`cProfile`."

#: ../../library/profile.rst:294
msgid ""
"Stop collecting profiling data and record the results internally as the "
"current profile."
msgstr ""
"Прекратите сбор данных профилирования и запишите результаты внутри компании "
"как текущий профиль."

#: ../../library/profile.rst:299
msgid ""
"Create a :class:`~pstats.Stats` object based on the current profile and "
"print the results to stdout."
msgstr ""
"Создайте объект :class:`~pstats.Stats` на основе текущего профиля и выведите "
"результаты на стандартный вывод."

#: ../../library/profile.rst:304
msgid "Write the results of the current profile to *filename*."
msgstr "Запишите результаты текущего профиля в *filename*."

#: ../../library/profile.rst:308
msgid "Profile the cmd via :func:`exec`."
msgstr "Профилируйте cmd через :func:`exec`."

#: ../../library/profile.rst:312
msgid ""
"Profile the cmd via :func:`exec` with the specified global and local "
"environment."
msgstr ""
"Профилируйте cmd через :func:`exec` с указанной глобальной и локальной "
"средой."

#: ../../library/profile.rst:317
msgid "Profile ``func(*args, **kwargs)``"
msgstr "Профиль ``func(*args, **kwargs)``"

#: ../../library/profile.rst:319
msgid ""
"Note that profiling will only work if the called command/function actually "
"returns.  If the interpreter is terminated (e.g. via a :func:`sys.exit` call "
"during the called command/function execution) no profiling results will be "
"printed."
msgstr ""
"Обратите внимание, что профилирование будет работать только в том случае, "
"если вызванная команда/функция действительно возвращает результат. Если "
"интерпретатор завершается (например, посредством вызова :func:`sys.exit` во "
"время выполнения вызванной команды/функции), результаты профилирования не "
"будут напечатаны."

#: ../../library/profile.rst:327
msgid "The :class:`Stats` Class"
msgstr "Класс :class:`Stats` "

#: ../../library/profile.rst:329
msgid ""
"Analysis of the profiler data is done using the :class:`~pstats.Stats` class."
msgstr ""
"Анализ данных профилировщика выполняется с использованием класса :class:"
"`~pstats.Stats`."

#: ../../library/profile.rst:336
msgid ""
"This class constructor creates an instance of a \"statistics object\" from a "
"*filename* (or list of filenames) or from a :class:`Profile` instance. "
"Output will be printed to the stream specified by *stream*."
msgstr ""
"Этот конструктор класса создает экземпляр «статистического объекта» из "
"*имя_файла* (или списка имен файлов) или из экземпляра :class:`Profile`. "
"Вывод будет напечатан в поток, указанный *stream*."

#: ../../library/profile.rst:340
msgid ""
"The file selected by the above constructor must have been created by the "
"corresponding version of :mod:`profile` or :mod:`cProfile`.  To be specific, "
"there is *no* file compatibility guaranteed with future versions of this "
"profiler, and there is no compatibility with files produced by other "
"profilers, or the same profiler run on a different operating system.  If "
"several files are provided, all the statistics for identical functions will "
"be coalesced, so that an overall view of several processes can be considered "
"in a single report.  If additional files need to be combined with data in an "
"existing :class:`~pstats.Stats` object, the :meth:`~pstats.Stats.add` method "
"can be used."
msgstr ""
"Файл, выбранный указанным выше конструктором, должен быть создан "
"соответствующей версией :mod:`profile` или :mod:`cProfile`. Точнее, *нет* "
"совместимости файлов с будущими версиями этого профилировщика, а также нет "
"совместимости с файлами, созданными другими профилировщиками, или с тем же "
"профилировщиком, работающим в другой операционной системе. Если "
"предоставлено несколько файлов, вся статистика по одинаковым функциям будет "
"объединена, так что общее представление о нескольких процессах можно будет "
"рассмотреть в одном отчете. Если дополнительные файлы необходимо объединить "
"с данными в существующем объекте :class:`~pstats.Stats`, можно использовать "
"метод :meth:`~pstats.Stats.add`."

#: ../../library/profile.rst:351
msgid ""
"Instead of reading the profile data from a file, a :class:`cProfile.Profile` "
"or :class:`profile.Profile` object can be used as the profile data source."
msgstr ""
"Вместо чтения данных профиля из файла в качестве источника данных профиля "
"можно использовать объект :class:`cProfile.Profile` или :class:`profile."
"Profile`."

#: ../../library/profile.rst:354
msgid ":class:`Stats` objects have the following methods:"
msgstr "Объекты :class:`Stats` имеют следующие методы:"

#: ../../library/profile.rst:358
msgid ""
"This method for the :class:`Stats` class removes all leading path "
"information from file names.  It is very useful in reducing the size of the "
"printout to fit within (close to) 80 columns.  This method modifies the "
"object, and the stripped information is lost.  After performing a strip "
"operation, the object is considered to have its entries in a \"random\" "
"order, as it was just after object initialization and loading. If :meth:"
"`~pstats.Stats.strip_dirs` causes two function names to be indistinguishable "
"(they are on the same line of the same filename, and have the same function "
"name), then the statistics for these two entries are accumulated into a "
"single entry."
msgstr ""
"Этот метод для класса :class:`Stats` удаляет всю начальную информацию о пути "
"из имен файлов. Это очень полезно для уменьшения размера распечатки до "
"(около) 80 столбцов. Этот метод изменяет объект, и удаленная информация "
"теряется. После выполнения операции удаления считается, что объект имеет "
"свои записи в «случайном» порядке, как это было сразу после инициализации и "
"загрузки объекта. Если :meth:`~pstats.Stats.strip_dirs` приводит к тому, что "
"имена двух функций становятся неразличимыми (они находятся в одной строке с "
"одним и тем же именем файла и имеют одно и то же имя функции), то статистика "
"для этих двух записей накапливается в одиночная запись."

#: ../../library/profile.rst:372
msgid ""
"This method of the :class:`Stats` class accumulates additional profiling "
"information into the current profiling object.  Its arguments should refer "
"to filenames created by the corresponding version of :func:`profile.run` or :"
"func:`cProfile.run`. Statistics for identically named (re: file, line, name) "
"functions are automatically accumulated into single function statistics."
msgstr ""
"Этот метод класса :class:`Stats` накапливает дополнительную информацию о "
"профилировании в текущем объекте профилирования. Его аргументы должны "
"ссылаться на имена файлов, созданные соответствующей версией :func:`profile."
"run` или :func:`cProfile.run`. Статистика для функций с одинаковыми именами "
"(например, файл, строка, имя) автоматически накапливается в статистику одной "
"функции."

#: ../../library/profile.rst:382
msgid ""
"Save the data loaded into the :class:`Stats` object to a file named "
"*filename*.  The file is created if it does not exist, and is overwritten if "
"it already exists.  This is equivalent to the method of the same name on "
"the :class:`profile.Profile` and :class:`cProfile.Profile` classes."
msgstr ""
"Сохраните данные, загруженные в объект :class:`Stats`, в файл с именем "
"*filename*. Файл создается, если он не существует, и перезаписывается, если "
"он уже существует. Это эквивалентно одноименному методу в классах :class:"
"`profile.Profile` и :class:`cProfile.Profile`."

#: ../../library/profile.rst:390
msgid ""
"This method modifies the :class:`Stats` object by sorting it according to "
"the supplied criteria.  The argument can be either a string or a SortKey "
"enum identifying the basis of a sort (example: ``'time'``, ``'name'``, "
"``SortKey.TIME`` or ``SortKey.NAME``). The SortKey enums argument have "
"advantage over the string argument in that it is more robust and less error "
"prone."
msgstr ""
"Этот метод изменяет объект :class:`Stats`, сортируя его в соответствии с "
"предоставленными критериями. Аргументом может быть либо строка, либо "
"перечисление SortKey, определяющее основу сортировки (пример: ``'time'``, "
"``'name'``, ``SortKey.TIME`` или ``SortKey.NAME`` `). Аргумент перечислений "
"SortKey имеет преимущество перед строковым аргументом, поскольку он более "
"надежен и менее подвержен ошибкам."

#: ../../library/profile.rst:397
msgid ""
"When more than one key is provided, then additional keys are used as "
"secondary criteria when there is equality in all keys selected before them.  "
"For example, ``sort_stats(SortKey.NAME, SortKey.FILE)`` will sort all the "
"entries according to their function name, and resolve all ties (identical "
"function names) by sorting by file name."
msgstr ""
"Если предоставлено более одного ключа, дополнительные ключи используются в "
"качестве вторичных критериев, когда все ключи, выбранные перед ними, равны. "
"Например, sort_stats(SortKey.NAME, SortKey.FILE) сортирует все записи по "
"имени их функции и разрешает все связи (идентичные имена функций) путем "
"сортировки по имени файла."

#: ../../library/profile.rst:403
msgid ""
"For the string argument, abbreviations can be used for any key names, as "
"long as the abbreviation is unambiguous."
msgstr ""
"В качестве строкового аргумента можно использовать сокращения для любых имен "
"ключей, если сокращение является однозначным."

#: ../../library/profile.rst:406
msgid "The following are the valid string and SortKey:"
msgstr "Ниже приведены допустимые строка и SortKey:"

#: ../../library/profile.rst:409
msgid "Valid String Arg"
msgstr "Действительная строка Arg"

#: ../../library/profile.rst:409
msgid "Valid enum Arg"
msgstr "Допустимое перечисление Arg"

#: ../../library/profile.rst:409
msgid "Meaning"
msgstr "Значение"

#: ../../library/profile.rst:411
msgid "``'calls'``"
msgstr "``'calls'``"

#: ../../library/profile.rst:411
msgid "SortKey.CALLS"
msgstr "SortKey.CALLS"

#: ../../library/profile.rst:411 ../../library/profile.rst:423
msgid "call count"
msgstr "счётчик вызовов"

#: ../../library/profile.rst:413
msgid "``'cumulative'``"
msgstr "``'cumulative'``"

#: ../../library/profile.rst:413
msgid "SortKey.CUMULATIVE"
msgstr "SortKey.CUMULATIVE"

#: ../../library/profile.rst:413 ../../library/profile.rst:415
msgid "cumulative time"
msgstr "суммарное время"

#: ../../library/profile.rst:415
msgid "``'cumtime'``"
msgstr "``'cumtime'``"

#: ../../library/profile.rst:415 ../../library/profile.rst:417
#: ../../library/profile.rst:421 ../../library/profile.rst:423
#: ../../library/profile.rst:437
msgid "N/A"
msgstr "N/A"

#: ../../library/profile.rst:417
msgid "``'file'``"
msgstr "``'file'``"

#: ../../library/profile.rst:417 ../../library/profile.rst:419
#: ../../library/profile.rst:421
msgid "file name"
msgstr "имя файла"

#: ../../library/profile.rst:419
msgid "``'filename'``"
msgstr "``'filename'``"

#: ../../library/profile.rst:419
msgid "SortKey.FILENAME"
msgstr "SortKey.FILENAME"

#: ../../library/profile.rst:421
msgid "``'module'``"
msgstr "``'module'``"

#: ../../library/profile.rst:423
msgid "``'ncalls'``"
msgstr "``'ncalls'``"

#: ../../library/profile.rst:425
msgid "``'pcalls'``"
msgstr "``'pcalls'``"

#: ../../library/profile.rst:425
msgid "SortKey.PCALLS"
msgstr "SortKey.PCALLS"

#: ../../library/profile.rst:425
msgid "primitive call count"
msgstr "количество примитивных вызовов"

#: ../../library/profile.rst:427
msgid "``'line'``"
msgstr "``'line'``"

#: ../../library/profile.rst:427
msgid "SortKey.LINE"
msgstr "SortKey.LINE"

#: ../../library/profile.rst:427
msgid "line number"
msgstr "номер строки"

#: ../../library/profile.rst:429
msgid "``'name'``"
msgstr "``'name'``"

#: ../../library/profile.rst:429
msgid "SortKey.NAME"
msgstr "SortKey.NAME"

#: ../../library/profile.rst:429
msgid "function name"
msgstr "название функции"

#: ../../library/profile.rst:431
msgid "``'nfl'``"
msgstr "``'nfl'``"

#: ../../library/profile.rst:431
msgid "SortKey.NFL"
msgstr "SortKey.NFL"

#: ../../library/profile.rst:431
msgid "name/file/line"
msgstr "name/file/line"

#: ../../library/profile.rst:433
msgid "``'stdname'``"
msgstr "``'stdname'``"

#: ../../library/profile.rst:433
msgid "SortKey.STDNAME"
msgstr "SortKey.STDNAME"

#: ../../library/profile.rst:433
msgid "standard name"
msgstr "стандартное название"

#: ../../library/profile.rst:435
msgid "``'time'``"
msgstr "``'time'``"

#: ../../library/profile.rst:435
msgid "SortKey.TIME"
msgstr "SortKey.TIME"

#: ../../library/profile.rst:435 ../../library/profile.rst:437
msgid "internal time"
msgstr "внутреннее время"

#: ../../library/profile.rst:437
msgid "``'tottime'``"
msgstr "``'tottime'``"

#: ../../library/profile.rst:440
msgid ""
"Note that all sorts on statistics are in descending order (placing most time "
"consuming items first), where as name, file, and line number searches are in "
"ascending order (alphabetical). The subtle distinction between ``SortKey."
"NFL`` and ``SortKey.STDNAME`` is that the standard name is a sort of the "
"name as printed, which means that the embedded line numbers get compared in "
"an odd way.  For example, lines 3, 20, and 40 would (if the file names were "
"the same) appear in the string order 20, 3 and 40. In contrast, ``SortKey."
"NFL`` does a numeric compare of the line numbers. In fact, "
"``sort_stats(SortKey.NFL)`` is the same as ``sort_stats(SortKey.NAME, "
"SortKey.FILENAME, SortKey.LINE)``."
msgstr ""
"Обратите внимание, что все виды статистики расположены в порядке убывания "
"(наиболее трудоемкие элементы размещаются первыми), тогда как поиск по "
"имени, файлу и номеру строки осуществляется в порядке возрастания (в "
"алфавитном порядке). Тонкое различие между SortKey.NFL и SortKey.STDNAME "
"заключается в том, что стандартное имя является разновидностью напечатанного "
"имени, а это означает, что встроенные номера строк сравниваются нечетным "
"образом. Например, строки 3, 20 и 40 (если бы имена файлов были одинаковыми) "
"отображались бы в порядке строк 20, 3 и 40. Напротив, SortKey.NFL выполняет "
"числовое сравнение номеров строк. Фактически, ``sort_stats(SortKey.NFL)`` — "
"это то же самое, что ``sort_stats(SortKey.NAME, SortKey.FILENAME, SortKey."
"LINE)``."

#: ../../library/profile.rst:451
msgid ""
"For backward-compatibility reasons, the numeric arguments ``-1``, ``0``, "
"``1``, and ``2`` are permitted.  They are interpreted as ``'stdname'``, "
"``'calls'``, ``'time'``, and ``'cumulative'`` respectively.  If this old "
"style format (numeric) is used, only one sort key (the numeric key) will be "
"used, and additional arguments will be silently ignored."
msgstr ""
"По соображениям обратной совместимости разрешены числовые аргументы ``-1``, "
"``0``, ``1`` и ``2``. Они интерпретируются как ``'stdname'``, ``'calls'``, "
"``'time'`` и ``'cumulative'`` соответственно. Если используется этот старый "
"формат (числовой), будет использоваться только один ключ сортировки "
"(числовой ключ), а дополнительные аргументы будут игнорироваться."

#: ../../library/profile.rst:459
msgid "Added the SortKey enum."
msgstr "Добавлено перечисление SortKey."

#: ../../library/profile.rst:464
msgid ""
"This method for the :class:`Stats` class reverses the ordering of the basic "
"list within the object.  Note that by default ascending vs descending order "
"is properly selected based on the sort key of choice."
msgstr ""
"Этот метод класса :class:`Stats` меняет порядок основного списка внутри "
"объекта. Обратите внимание, что по умолчанию порядок сортировки по "
"возрастанию или убыванию выбирается правильно в зависимости от выбранного "
"ключа сортировки."

#: ../../library/profile.rst:474
msgid ""
"This method for the :class:`Stats` class prints out a report as described in "
"the :func:`profile.run` definition."
msgstr ""
"Этот метод класса :class:`Stats` распечатывает отчет, как описано в "
"определении :func:`profile.run`."

#: ../../library/profile.rst:477
msgid ""
"The order of the printing is based on the last :meth:`~pstats.Stats."
"sort_stats` operation done on the object (subject to caveats in :meth:"
"`~pstats.Stats.add` and :meth:`~pstats.Stats.strip_dirs`)."
msgstr ""
"Порядок печати зависит от последней операции :meth:`~pstats.Stats."
"sort_stats`, выполненной над объектом (с учетом оговорок в :meth:`~pstats."
"Stats.add` и :meth:`~pstats. Stats.strip_dirs`)."

#: ../../library/profile.rst:482
msgid ""
"The arguments provided (if any) can be used to limit the list down to the "
"significant entries.  Initially, the list is taken to be the complete set of "
"profiled functions.  Each restriction is either an integer (to select a "
"count of lines), or a decimal fraction between 0.0 and 1.0 inclusive (to "
"select a percentage of lines), or a string that will interpreted as a "
"regular expression (to pattern match the standard name that is printed). If "
"several restrictions are provided, then they are applied sequentially. For "
"example::"
msgstr ""
"Предоставленные аргументы (если таковые имеются) можно использовать для "
"ограничения списка значимыми записями. Изначально за список принимается "
"полный набор профилируемых функций. Каждое ограничение представляет собой "
"либо целое число (для выбора количества строк), либо десятичную дробь от 0,0 "
"до 1,0 включительно (для выбора процента строк), либо строку, которая будет "
"интерпретироваться как регулярное выражение (чтобы шаблон соответствовал "
"стандартному имени). то, что напечатано). Если предусмотрено несколько "
"ограничений, то они применяются последовательно. Например::"

#: ../../library/profile.rst:493
msgid ""
"would first limit the printing to first 10% of list, and then only print "
"functions that were part of filename :file:`.\\*foo:`.  In contrast, the "
"command::"
msgstr ""
"сначала ограничит печать первыми 10% списка, а затем распечатает только "
"функции, которые были частью имени файла :file:`.\\*foo:`. Напротив, "
"команда::"

#: ../../library/profile.rst:499
msgid ""
"would limit the list to all functions having file names :file:`.\\*foo:`, "
"and then proceed to only print the first 10% of them."
msgstr ""
"ограничит список всеми функциями, имеющими имена файлов :file:`.\\*foo:`, а "
"затем продолжит печатать только первые 10% из них."

#: ../../library/profile.rst:505
msgid ""
"This method for the :class:`Stats` class prints a list of all functions that "
"called each function in the profiled database.  The ordering is identical to "
"that provided by :meth:`~pstats.Stats.print_stats`, and the definition of "
"the restricting argument is also identical.  Each caller is reported on its "
"own line.  The format differs slightly depending on the profiler that "
"produced the stats:"
msgstr ""
"Этот метод класса :class:`Stats` печатает список всех функций, которые "
"вызывали каждую функцию в профилируемой базе данных. Порядок идентичен тому, "
"который обеспечивает :meth:`~pstats.Stats.print_stats`, и определение "
"ограничивающего аргумента также идентично. О каждом звонящем сообщается по "
"отдельной линии. Формат немного отличается в зависимости от профилировщика, "
"создавшего статистику:"

#: ../../library/profile.rst:512
msgid ""
"With :mod:`profile`, a number is shown in parentheses after each caller to "
"show how many times this specific call was made.  For convenience, a second "
"non-parenthesized number repeats the cumulative time spent in the function "
"at the right."
msgstr ""
"В :mod:`profile` число отображается в скобках после каждого вызывающего "
"абонента, чтобы показать, сколько раз был сделан этот конкретный вызов. Для "
"удобства второе число без скобок повторяет совокупное время, потраченное на "
"функцию справа."

#: ../../library/profile.rst:517
msgid ""
"With :mod:`cProfile`, each caller is preceded by three numbers: the number "
"of times this specific call was made, and the total and cumulative times "
"spent in the current function while it was invoked by this specific caller."
msgstr ""
"В :mod:`cProfile` каждому вызывающему объекту предшествуют три числа: "
"количество раз, когда был выполнен этот конкретный вызов, а также общее и "
"совокупное время, проведенное в текущей функции, пока она была вызвана этим "
"конкретным вызывающим объектом."

#: ../../library/profile.rst:525
msgid ""
"This method for the :class:`Stats` class prints a list of all function that "
"were called by the indicated function.  Aside from this reversal of "
"direction of calls (re: called vs was called by), the arguments and ordering "
"are identical to the :meth:`~pstats.Stats.print_callers` method."
msgstr ""
"Этот метод класса :class:`Stats` печатает список всех функций, которые были "
"вызваны указанной функцией. Помимо этого изменения направления вызовов (re: "
"вызванный vs был вызван), аргументы и порядок идентичны методу :meth:"
"`~pstats.Stats.print_callers`."

#: ../../library/profile.rst:533
msgid ""
"This method returns an instance of StatsProfile, which contains a mapping of "
"function names to instances of FunctionProfile. Each FunctionProfile "
"instance holds information related to the function's profile such as how "
"long the function took to run, how many times it was called, etc..."
msgstr ""
"Этот метод возвращает экземпляр StatsProfile, который содержит сопоставление "
"имен функций с экземплярами FunctionProfile. Каждый экземпляр "
"FunctionProfile содержит информацию, связанную с профилем функции, например, "
"сколько времени потребовалось для выполнения функции, сколько раз она "
"вызывалась и т. д."

#: ../../library/profile.rst:538
msgid ""
"Added the following dataclasses: StatsProfile, FunctionProfile. Added the "
"following function: get_stats_profile."
msgstr ""
"Добавлены следующие классы данных: StatsProfile, FunctionProfile. Добавлена ​​"
"следующая функция: get_stats_profile."

#: ../../library/profile.rst:545
msgid "What Is Deterministic Profiling?"
msgstr "Что такое детерминированное профилирование?"

#: ../../library/profile.rst:547
msgid ""
":dfn:`Deterministic profiling` is meant to reflect the fact that all "
"*function call*, *function return*, and *exception* events are monitored, "
"and precise timings are made for the intervals between these events (during "
"which time the user's code is executing).  In contrast, :dfn:`statistical "
"profiling` (which is not done by this module) randomly samples the effective "
"instruction pointer, and deduces where time is being spent.  The latter "
"technique traditionally involves less overhead (as the code does not need to "
"be instrumented), but provides only relative indications of where time is "
"being spent."
msgstr ""
":dfn:`Детерминированное профилирование` предназначено для отражения того "
"факта, что все события *вызова функции*, *возврата функции* и *исключения* "
"отслеживаются, а для интервалов между этими событиями устанавливается точное "
"время (в течение которого пользователь код выполняется). Напротив, "
"статистическое профилирование (которое не выполняется в этом модуле) "
"случайным образом выбирает эффективный указатель инструкции и определяет, на "
"что тратится время. Последний метод традиционно предполагает меньшие "
"накладные расходы (поскольку код не требует инструментирования), но "
"обеспечивает лишь относительные показатели того, на что тратится время."

#: ../../library/profile.rst:556
msgid ""
"In Python, since there is an interpreter active during execution, the "
"presence of instrumented code is not required in order to do deterministic "
"profiling. Python automatically provides a :dfn:`hook` (optional callback) "
"for each event. In addition, the interpreted nature of Python tends to add "
"so much overhead to execution, that deterministic profiling tends to only "
"add small processing overhead in typical applications.  The result is that "
"deterministic profiling is not that expensive, yet provides extensive run "
"time statistics about the execution of a Python program."
msgstr ""
"В Python, поскольку во время выполнения активен интерпретатор, наличие "
"инструментированного кода не требуется для выполнения детерминированного "
"профилирования. Python автоматически предоставляет :dfn:`hook` "
"(необязательный обратный вызов) для каждого события. Кроме того, "
"интерпретируемая природа Python имеет тенденцию добавлять столько накладных "
"расходов на выполнение, что детерминированное профилирование имеет тенденцию "
"добавлять лишь небольшие накладные расходы на обработку в типичных "
"приложениях. В результате детерминированное профилирование обходится не так "
"дорого, но обеспечивает обширную статистику времени выполнения программы "
"Python."

#: ../../library/profile.rst:565
msgid ""
"Call count statistics can be used to identify bugs in code (surprising "
"counts), and to identify possible inline-expansion points (high call "
"counts).  Internal time statistics can be used to identify \"hot loops\" "
"that should be carefully optimized.  Cumulative time statistics should be "
"used to identify high level errors in the selection of algorithms.  Note "
"that the unusual handling of cumulative times in this profiler allows "
"statistics for recursive implementations of algorithms to be directly "
"compared to iterative implementations."
msgstr ""
"Статистику количества вызовов можно использовать для выявления ошибок в коде "
"(неожиданное количество вызовов) и для выявления возможных точек встроенного "
"расширения (большое количество вызовов). Внутреннюю статистику времени можно "
"использовать для выявления «горячих петель», которые следует тщательно "
"оптимизировать. Для выявления ошибок высокого уровня при выборе алгоритмов "
"следует использовать совокупную временную статистику. Обратите внимание, что "
"необычная обработка совокупного времени в этом профилировщике позволяет "
"напрямую сравнивать статистику рекурсивных реализаций алгоритмов с "
"итеративными реализациями."

#: ../../library/profile.rst:578
msgid "Limitations"
msgstr "Ограничения"

#: ../../library/profile.rst:580
msgid ""
"One limitation has to do with accuracy of timing information. There is a "
"fundamental problem with deterministic profilers involving accuracy.  The "
"most obvious restriction is that the underlying \"clock\" is only ticking at "
"a rate (typically) of about .001 seconds.  Hence no measurements will be "
"more accurate than the underlying clock.  If enough measurements are taken, "
"then the \"error\" will tend to average out. Unfortunately, removing this "
"first error induces a second source of error."
msgstr ""
"Одно из ограничений связано с точностью временной информации. Существует "
"фундаментальная проблема с детерминированными профилировщиками, связанная с "
"точностью. Наиболее очевидным ограничением является то, что базовые «часы» "
"тикают со скоростью (обычно) около 0,001 секунды. Следовательно, никакие "
"измерения не будут более точными, чем базовые часы. Если проведено "
"достаточно измерений, то «ошибка» будет иметь тенденцию к усреднению. К "
"сожалению, удаление этой первой ошибки приводит к появлению второго "
"источника ошибок."

#: ../../library/profile.rst:588
msgid ""
"The second problem is that it \"takes a while\" from when an event is "
"dispatched until the profiler's call to get the time actually *gets* the "
"state of the clock.  Similarly, there is a certain lag when exiting the "
"profiler event handler from the time that the clock's value was obtained "
"(and then squirreled away), until the user's code is once again executing.  "
"As a result, functions that are called many times, or call many functions, "
"will typically accumulate this error. The error that accumulates in this "
"fashion is typically less than the accuracy of the clock (less than one "
"clock tick), but it *can* accumulate and become very significant."
msgstr ""
"Вторая проблема заключается в том, что с момента отправки события до момента "
"вызова профилировщика для получения времени «проходит некоторое время» "
"фактически *получение* состояния часов. Аналогичным образом, при выходе из "
"обработчика событий профилировщика существует определенная задержка с "
"момента получения значения часов (а затем его сохранения) до повторного "
"выполнения пользовательского кода. В результате функции, которые вызываются "
"много раз или вызывают множество функций, обычно накапливают эту ошибку. "
"Ошибка, которая накапливается таким образом, обычно меньше точности часов "
"(менее одного такта), но она *может* накапливаться и становиться очень "
"значительной."

#: ../../library/profile.rst:598
msgid ""
"The problem is more important with :mod:`profile` than with the lower-"
"overhead :mod:`cProfile`.  For this reason, :mod:`profile` provides a means "
"of calibrating itself for a given platform so that this error can be "
"probabilistically (on the average) removed. After the profiler is "
"calibrated, it will be more accurate (in a least square sense), but it will "
"sometimes produce negative numbers (when call counts are exceptionally low, "
"and the gods of probability work against you :-). )  Do *not* be alarmed by "
"negative numbers in the profile.  They should *only* appear if you have "
"calibrated your profiler, and the results are actually better than without "
"calibration."
msgstr ""
"Проблема более серьезна с :mod:`profile`, чем с более низкими издержками :"
"mod:`cProfile`. По этой причине :mod:`profile` предоставляет средства "
"калибровки для данной платформы, чтобы эту ошибку можно было вероятностно (в "
"среднем) устранить. После калибровки профилировщика он станет более точным "
"(в смысле наименьших квадратов), но иногда будет выдавать отрицательные "
"числа (когда количество вызовов исключительно мало и боги вероятности "
"работают против вас :-). ) *Не* пугайтесь отрицательных цифр в профиле. Они "
"должны появиться *только* в том случае, если вы откалибровали свой "
"профилировщик, и результаты на самом деле лучше, чем без калибровки."

#: ../../library/profile.rst:612
msgid "Calibration"
msgstr "Калибровка"

#: ../../library/profile.rst:614
msgid ""
"The profiler of the :mod:`profile` module subtracts a constant from each "
"event handling time to compensate for the overhead of calling the time "
"function, and socking away the results.  By default, the constant is 0. The "
"following procedure can be used to obtain a better constant for a given "
"platform (see :ref:`profile-limitations`). ::"
msgstr ""
"Профилировщик модуля :mod:`profile` вычитает константу из времени обработки "
"каждого события, чтобы компенсировать накладные расходы на вызов функции "
"времени и удаление результатов. По умолчанию константа равна 0. Для "
"получения лучшей константы для данной платформы можно использовать следующую "
"процедуру (см. :ref:`profile-limitations`). ::"

#: ../../library/profile.rst:625
msgid ""
"The method executes the number of Python calls given by the argument, "
"directly and again under the profiler, measuring the time for both. It then "
"computes the hidden overhead per profiler event, and returns that as a "
"float.  For example, on a 1.8Ghz Intel Core i5 running macOS, and using "
"Python's time.process_time() as the timer, the magical number is about "
"4.04e-6."
msgstr ""
"Метод выполняет количество вызовов Python, заданное аргументом, "
"непосредственно и снова под профилировщиком, измеряя время для обоих. Затем "
"он вычисляет скрытые издержки для каждого события профилировщика и "
"возвращает их в виде числа с плавающей запятой. Например, на процессоре "
"Intel Core i5 с тактовой частотой 1,8 ГГц под управлением macOS и "
"использовании Python time.process_time() в качестве таймера магическое число "
"составляет около 4.04e-6."

#: ../../library/profile.rst:631
msgid ""
"The object of this exercise is to get a fairly consistent result. If your "
"computer is *very* fast, or your timer function has poor resolution, you "
"might have to pass 100000, or even 1000000, to get consistent results."
msgstr ""
"Цель этого упражнения — получить достаточно стабильный результат. Если ваш "
"компьютер *очень* быстр или ваша функция таймера имеет низкое разрешение, "
"вам, возможно, придется передать 100000 или даже 1000000, чтобы получить "
"последовательные результаты."

#: ../../library/profile.rst:635
msgid ""
"When you have a consistent answer, there are three ways you can use it::"
msgstr ""
"Если у вас есть последовательный ответ, вы можете использовать его тремя "
"способами:"

#: ../../library/profile.rst:649
msgid ""
"If you have a choice, you are better off choosing a smaller constant, and "
"then your results will \"less often\" show up as negative in profile "
"statistics."
msgstr ""
"Если у вас есть выбор, лучше выбрать меньшую константу, и тогда ваши "
"результаты «реже» будут отображаться как отрицательные в статистике профиля."

#: ../../library/profile.rst:655
msgid "Using a custom timer"
msgstr "Использование пользовательского таймера"

#: ../../library/profile.rst:657
msgid ""
"If you want to change how current time is determined (for example, to force "
"use of wall-clock time or elapsed process time), pass the timing function "
"you want to the :class:`Profile` class constructor::"
msgstr ""
"Если вы хотите изменить способ определения текущего времени (например, чтобы "
"принудительно использовать время настенных часов или прошедшее время "
"процесса), передайте нужную функцию синхронизации в конструктор класса :"
"class:`Profile`::"

#: ../../library/profile.rst:663
msgid ""
"The resulting profiler will then call ``your_time_func``. Depending on "
"whether you are using :class:`profile.Profile` or :class:`cProfile.Profile`, "
"``your_time_func``'s return value will be interpreted differently:"
msgstr ""
"Результирующий профилировщик затем вызовет ``your_time_func``. В зависимости "
"от того, используете ли вы :class:`profile.Profile` или :class:`cProfile."
"Profile`, возвращаемое значение ``your_time_func`` будет интерпретироваться "
"по-разному:"

#: ../../library/profile.rst:681
msgid ":class:`profile.Profile`"
msgstr ":class:`profile.Profile`"

#: ../../library/profile.rst:668
msgid ""
"``your_time_func`` should return a single number, or a list of numbers whose "
"sum is the current time (like what :func:`os.times` returns).  If the "
"function returns a single time number, or the list of returned numbers has "
"length 2, then you will get an especially fast version of the dispatch "
"routine."
msgstr ""
"``your_time_func`` должен возвращать одно число или список чисел, сумма "
"которых равна текущему времени (например, что возвращает :func:`os.times`). "
"Если функция возвращает одно числовое значение или список возвращаемых чисел "
"имеет длину 2, то вы получите особенно быструю версию процедуры отправки."

#: ../../library/profile.rst:674
msgid ""
"Be warned that you should calibrate the profiler class for the timer "
"function that you choose (see :ref:`profile-calibration`).  For most "
"machines, a timer that returns a lone integer value will provide the best "
"results in terms of low overhead during profiling.  (:func:`os.times` is "
"*pretty* bad, as it returns a tuple of floating point values).  If you want "
"to substitute a better timer in the cleanest fashion, derive a class and "
"hardwire a replacement dispatch method that best handles your timer call, "
"along with the appropriate calibration constant."
msgstr ""

#: ../../library/profile.rst:695
msgid ":class:`cProfile.Profile`"
msgstr ":class:`cProfile.Profile`"

#: ../../library/profile.rst:684
msgid ""
"``your_time_func`` should return a single number.  If it returns integers, "
"you can also invoke the class constructor with a second argument specifying "
"the real duration of one unit of time.  For example, if "
"``your_integer_time_func`` returns times measured in thousands of seconds, "
"you would construct the :class:`Profile` instance as follows::"
msgstr ""
"``your_time_func`` должен возвращать одно число. Если он возвращает целые "
"числа, вы также можете вызвать конструктор класса со вторым аргументом, "
"указывающим реальную продолжительность одной единицы времени. Например, если "
"``your_integer_time_func`` возвращает время, измеряемое в тысячах секунд, вы "
"должны создать экземпляр :class:`Profile` следующим образом:"

#: ../../library/profile.rst:692
msgid ""
"As the :class:`cProfile.Profile` class cannot be calibrated, custom timer "
"functions should be used with care and should be as fast as possible.  For "
"the best results with a custom timer, it might be necessary to hard-code it "
"in the C source of the internal :mod:`_lsprof` module."
msgstr ""

#: ../../library/profile.rst:697
msgid ""
"Python 3.3 adds several new functions in :mod:`time` that can be used to "
"make precise measurements of process or wall-clock time. For example, see :"
"func:`time.perf_counter`."
msgstr ""
"Python 3.3 добавляет несколько новых функций в :mod:`time`, которые можно "
"использовать для точных измерений времени процесса или настенных часов. "
"Например, см. :func:`time.perf_counter`."

#: ../../library/profile.rst:16
msgid "deterministic profiling"
msgstr "детерминированное профилирование"

#: ../../library/profile.rst:16
msgid "profiling, deterministic"
msgstr "профилирование, детерминированный"
