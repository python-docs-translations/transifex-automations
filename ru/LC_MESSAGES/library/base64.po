# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# python-doc bot, 2025
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.9\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-22 21:56+0000\n"
"PO-Revision-Date: 2025-09-22 17:54+0000\n"
"Last-Translator: python-doc bot, 2025\n"
"Language-Team: Russian (https://app.transifex.com/python-doc/teams/5390/"
"ru/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ru\n"
"Plural-Forms: nplurals=4; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && "
"n%10<=4 && (n%100<12 || n%100>14) ? 1 : n%10==0 || (n%10>=5 && n%10<=9) || "
"(n%100>=11 && n%100<=14)? 2 : 3);\n"

#: ../../library/base64.rst:2
msgid ":mod:`base64` --- Base16, Base32, Base64, Base85 Data Encodings"
msgstr ""

#: ../../library/base64.rst:8
msgid "**Source code:** :source:`Lib/base64.py`"
msgstr "**Исходный код:** :source:`Lib/base64.py`"

#: ../../library/base64.rst:16
msgid ""
"This module provides functions for encoding binary data to printable ASCII "
"characters and decoding such encodings back to binary data. It provides "
"encoding and decoding functions for the encodings specified in :rfc:`3548`, "
"which defines the Base16, Base32, and Base64 algorithms, and for the de-"
"facto standard Ascii85 and Base85 encodings."
msgstr ""

#: ../../library/base64.rst:22
msgid ""
"The :rfc:`3548` encodings are suitable for encoding binary data so that it "
"can safely sent by email, used as parts of URLs, or included as part of an "
"HTTP POST request.  The encoding algorithm is not the same as the :program:"
"`uuencode` program."
msgstr ""

#: ../../library/base64.rst:27
msgid ""
"There are two interfaces provided by this module.  The modern interface "
"supports encoding :term:`bytes-like objects <bytes-like object>` to ASCII :"
"class:`bytes`, and decoding :term:`bytes-like objects <bytes-like object>` "
"or strings containing ASCII to :class:`bytes`.  Both base-64 alphabets "
"defined in :rfc:`3548` (normal, and URL- and filesystem-safe) are supported."
msgstr ""

#: ../../library/base64.rst:33
msgid ""
"The legacy interface does not support decoding from strings, but it does "
"provide functions for encoding and decoding to and from :term:`file objects "
"<file object>`.  It only supports the Base64 standard alphabet, and it adds "
"newlines every 76 characters as per :rfc:`2045`.  Note that if you are "
"looking for :rfc:`2045` support you probably want to be looking at the :mod:"
"`email` package instead."
msgstr ""
"Устаревший интерфейс не поддерживает декодирование строк, но предоставляет "
"функции для кодирования и декодирования в/из файловых объектов <файловый "
"объект>`. Он поддерживает только стандартный алфавит Base64 и добавляет "
"новые строки через каждые 76 символов в соответствии с :rfc:`2045`. Обратите "
"внимание, что если вам нужна поддержка :rfc:`2045`, вам, вероятно, стоит "
"обратить внимание на пакет :mod:`email`."

#: ../../library/base64.rst:41
msgid ""
"ASCII-only Unicode strings are now accepted by the decoding functions of the "
"modern interface."
msgstr ""
"Строки Unicode, содержащие только ASCII, теперь принимаются функциями "
"декодирования современного интерфейса."

#: ../../library/base64.rst:45
msgid ""
"Any :term:`bytes-like objects <bytes-like object>` are now accepted by all "
"encoding and decoding functions in this module.  Ascii85/Base85 support "
"added."
msgstr ""
"Любые :term:`байтоподобные объекты <байтоподобный объект>` теперь "
"принимаются всеми функциями кодирования и декодирования в этом модуле. "
"Добавлена ​​поддержка Ascii85/Base85."

#: ../../library/base64.rst:49
msgid "The modern interface provides:"
msgstr "Современный интерфейс обеспечивает:"

#: ../../library/base64.rst:53
msgid ""
"Encode the :term:`bytes-like object` *s* using Base64 and return the "
"encoded :class:`bytes`."
msgstr ""
"Закодируйте :term:`bytes-подобный объект` *s* с помощью Base64 и верните "
"закодированный :class:`bytes`."

#: ../../library/base64.rst:56
msgid ""
"Optional *altchars* must be a :term:`bytes-like object` of at least length 2 "
"(additional characters are ignored) which specifies an alternative alphabet "
"for the ``+`` and ``/`` characters.  This allows an application to e.g. "
"generate URL or filesystem safe Base64 strings.  The default is ``None``, "
"for which the standard Base64 alphabet is used."
msgstr ""

#: ../../library/base64.rst:65
msgid ""
"Decode the Base64 encoded :term:`bytes-like object` or ASCII string *s* and "
"return the decoded :class:`bytes`."
msgstr ""
"Декодируйте закодированный в Base64 :term:`байтовый объект` или строку ASCII "
"*s* и верните декодированный :class:`bytes`."

#: ../../library/base64.rst:68
msgid ""
"Optional *altchars* must be a :term:`bytes-like object` or ASCII string of "
"at least length 2 (additional characters are ignored) which specifies the "
"alternative alphabet used instead of the ``+`` and ``/`` characters."
msgstr ""

#: ../../library/base64.rst:72
msgid ""
"A :exc:`binascii.Error` exception is raised if *s* is incorrectly padded."
msgstr ""
"Исключение :exc:`binascii.Error` возникает, если *s* заполнено неправильно."

#: ../../library/base64.rst:75
msgid ""
"If *validate* is ``False`` (the default), characters that are neither in the "
"normal base-64 alphabet nor the alternative alphabet are discarded prior to "
"the padding check.  If *validate* is ``True``, these non-alphabet characters "
"in the input result in a :exc:`binascii.Error`."
msgstr ""
"Если *validate* имеет значение «False» (по умолчанию), символы, которые не "
"входят ни в обычный алфавит Base64, ни в альтернативный алфавит, "
"отбрасываются до проверки заполнения. Если *validate* имеет значение "
"``True``, эти неалфавитные символы во входных данных приводят к ошибке :exc:"
"`binascii.Error`."

#: ../../library/base64.rst:84
msgid ""
"Encode :term:`bytes-like object` *s* using the standard Base64 alphabet and "
"return the encoded :class:`bytes`."
msgstr ""
"Закодируйте :term:`bytes-like object` *s*, используя стандартный алфавит "
"Base64, и верните закодированный :class:`bytes`."

#: ../../library/base64.rst:90
msgid ""
"Decode :term:`bytes-like object` or ASCII string *s* using the standard "
"Base64 alphabet and return the decoded :class:`bytes`."
msgstr ""
"Декодируйте :term:`bytes-like object` или строку ASCII *s*, используя "
"стандартный алфавит Base64, и возвращайте декодированный :class:`bytes`."

#: ../../library/base64.rst:96
msgid ""
"Encode :term:`bytes-like object` *s* using the URL- and filesystem-safe "
"alphabet, which substitutes ``-`` instead of ``+`` and ``_`` instead of ``/"
"`` in the standard Base64 alphabet, and return the encoded :class:`bytes`.  "
"The result can still contain ``=``."
msgstr ""
"Кодируйте :term:`байтоподобный объект` *s*, используя алфавит, безопасный "
"для URL и файловой системы, который заменяет ``-`` вместо ``+`` и ``_`` "
"вместо ``/`` в стандартном алфавите Base64 и возвращает закодированные :"
"class:`bytes`. Результат все еще может содержать ``=``."

#: ../../library/base64.rst:105
msgid ""
"Decode :term:`bytes-like object` or ASCII string *s* using the URL- and "
"filesystem-safe alphabet, which substitutes ``-`` instead of ``+`` and ``_`` "
"instead of ``/`` in the standard Base64 alphabet, and return the decoded :"
"class:`bytes`."
msgstr ""
"Декодируйте :term:`байтоподобный объект` или строку ASCII *s*, используя "
"безопасный для URL-адресов и файловой системы алфавит, который заменяет ``-"
"`` вместо ``+`` и ``_`` вместо `` /`` в стандартном алфавите Base64 и "
"возвращаем декодированные :class:`bytes`."

#: ../../library/base64.rst:114
msgid ""
"Encode the :term:`bytes-like object` *s* using Base32 and return the "
"encoded :class:`bytes`."
msgstr ""
"Закодируйте :term:`bytes-подобный объект` *s* с помощью Base32 и верните "
"закодированный :class:`bytes`."

#: ../../library/base64.rst:120
msgid ""
"Decode the Base32 encoded :term:`bytes-like object` or ASCII string *s* and "
"return the decoded :class:`bytes`."
msgstr ""
"Декодируйте закодированный в Base32 :term:`bytes-like объект` или строку "
"ASCII *s* и верните декодированный :class:`bytes`."

#: ../../library/base64.rst:123 ../../library/base64.rst:150
msgid ""
"Optional *casefold* is a flag specifying whether a lowercase alphabet is "
"acceptable as input.  For security purposes, the default is ``False``."
msgstr ""
"Необязательный *casefold* — это флаг, определяющий, допустим ли строчный "
"алфавит в качестве входных данных. В целях безопасности по умолчанию "
"установлено значение «False»."

#: ../../library/base64.rst:127
msgid ""
":rfc:`3548` allows for optional mapping of the digit 0 (zero) to the letter "
"O (oh), and for optional mapping of the digit 1 (one) to either the letter I "
"(eye) or letter L (el).  The optional argument *map01* when not ``None``, "
"specifies which letter the digit 1 should be mapped to (when *map01* is not "
"``None``, the digit 0 is always mapped to the letter O).  For security "
"purposes the default is ``None``, so that 0 and 1 are not allowed in the "
"input."
msgstr ""

#: ../../library/base64.rst:134 ../../library/base64.rst:154
msgid ""
"A :exc:`binascii.Error` is raised if *s* is incorrectly padded or if there "
"are non-alphabet characters present in the input."
msgstr ""
"Ошибка :exc:`binascii.Error` возникает, если *s* неправильно дополнено или "
"если во входных данных присутствуют символы, не являющиеся алфавитными."

#: ../../library/base64.rst:141
msgid ""
"Encode the :term:`bytes-like object` *s* using Base16 and return the "
"encoded :class:`bytes`."
msgstr ""
"Закодируйте :term:`bytes-подобный объект` *s*, используя Base16, и верните "
"закодированный :class:`bytes`."

#: ../../library/base64.rst:147
msgid ""
"Decode the Base16 encoded :term:`bytes-like object` or ASCII string *s* and "
"return the decoded :class:`bytes`."
msgstr ""
"Декодируйте закодированный в Base16 :term:`bytes-like объект` или строку "
"ASCII *s* и верните декодированный :class:`bytes`."

#: ../../library/base64.rst:161
msgid ""
"Encode the :term:`bytes-like object` *b* using Ascii85 and return the "
"encoded :class:`bytes`."
msgstr ""
"Закодируйте :term:`bytes-like объект` *b* с помощью Ascii85 и верните "
"закодированный :class:`bytes`."

#: ../../library/base64.rst:164
msgid ""
"*foldspaces* is an optional flag that uses the special short sequence 'y' "
"instead of 4 consecutive spaces (ASCII 0x20) as supported by 'btoa'. This "
"feature is not supported by the \"standard\" Ascii85 encoding."
msgstr ""
"*foldspaces* — это необязательный флаг, который использует специальную "
"короткую последовательность «y» вместо 4 последовательных пробелов (ASCII "
"0x20), как это поддерживается «btoa». Эта функция не поддерживается "
"«стандартной» кодировкой Ascii85."

#: ../../library/base64.rst:168
msgid ""
"*wrapcol* controls whether the output should have newline (``b'\\n'``) "
"characters added to it. If this is non-zero, each output line will be at "
"most this many characters long."
msgstr ""

#: ../../library/base64.rst:172
msgid ""
"*pad* controls whether the input is padded to a multiple of 4 before "
"encoding. Note that the ``btoa`` implementation always pads."
msgstr ""
"*pad* определяет, дополняется ли ввод до числа, кратного 4, перед "
"кодированием. Обратите внимание, что реализация btoa всегда дополняет."

#: ../../library/base64.rst:175
msgid ""
"*adobe* controls whether the encoded byte sequence is framed with ``<~`` and "
"``~>``, which is used by the Adobe implementation."
msgstr ""
"*adobe* определяет, будет ли закодированная последовательность байтов "
"обрамлена символами ``<~`` и ``~>``, которые используются реализацией Adobe."

#: ../../library/base64.rst:183
msgid ""
"Decode the Ascii85 encoded :term:`bytes-like object` or ASCII string *b* and "
"return the decoded :class:`bytes`."
msgstr ""
"Декодируйте закодированный Ascii85 :term:`байтовый объект` или строку ASCII "
"*b* и верните декодированный :class:`bytes`."

#: ../../library/base64.rst:186
msgid ""
"*foldspaces* is a flag that specifies whether the 'y' short sequence should "
"be accepted as shorthand for 4 consecutive spaces (ASCII 0x20). This feature "
"is not supported by the \"standard\" Ascii85 encoding."
msgstr ""
"*foldspaces* — это флаг, который указывает, следует ли принимать короткую "
"последовательность «y» в качестве сокращения для 4 последовательных пробелов "
"(ASCII 0x20). Эта функция не поддерживается «стандартной» кодировкой Ascii85."

#: ../../library/base64.rst:190
msgid ""
"*adobe* controls whether the input sequence is in Adobe Ascii85 format (i.e. "
"is framed with <~ and ~>)."
msgstr ""
"*adobe* определяет, находится ли входная последовательность в формате Adobe "
"Ascii85 (т. е. заключена ли она в рамку <~ и ~>)."

#: ../../library/base64.rst:193
msgid ""
"*ignorechars* should be a :term:`bytes-like object` or ASCII string "
"containing characters to ignore from the input. This should only contain "
"whitespace characters, and by default contains all whitespace characters in "
"ASCII."
msgstr ""
"*ignorechars* должен быть :term:`байтовым объектом` или строкой ASCII, "
"содержащей символы, которые следует игнорировать во входных данных. Он "
"должен содержать только пробельные символы и по умолчанию содержит все "
"пробельные символы в ASCII."

#: ../../library/base64.rst:203
msgid ""
"Encode the :term:`bytes-like object` *b* using base85 (as used in e.g. git-"
"style binary diffs) and return the encoded :class:`bytes`."
msgstr ""
"Закодируйте :term:`bytes-like object` *b*, используя base85 (как это "
"используется, например, в двоичных различиях в стиле git) и верните "
"закодированный :class:`bytes`."

#: ../../library/base64.rst:206
msgid ""
"If *pad* is true, the input is padded with ``b'\\0'`` so its length is a "
"multiple of 4 bytes before encoding."
msgstr ""
"Если *pad* имеет значение true, входные данные дополняются символом "
"``b'\\0'``, поэтому его длина перед кодированием кратна 4 байтам."

#: ../../library/base64.rst:214
msgid ""
"Decode the base85-encoded :term:`bytes-like object` or ASCII string *b* and "
"return the decoded :class:`bytes`.  Padding is implicitly removed, if "
"necessary."
msgstr ""
"Декодируйте закодированный в base85 :term:`bytes-like объект` или строку "
"ASCII *b* и верните декодированный :class:`bytes`. При необходимости отступы "
"неявно удаляются."

#: ../../library/base64.rst:221
msgid "The legacy interface:"
msgstr "Устаревший интерфейс:"

#: ../../library/base64.rst:225
msgid ""
"Decode the contents of the binary *input* file and write the resulting "
"binary data to the *output* file. *input* and *output* must be :term:`file "
"objects <file object>`. *input* will be read until ``input.readline()`` "
"returns an empty bytes object."
msgstr ""
"Декодируйте содержимое двоичного *входного* файла и запишите полученные "
"двоичные данные в *выходной* файл. *входные* и *выходные* должны быть :term:"
"`файловые объекты <файловый объект>`. *input* будет читаться до тех пор, "
"пока ``input.readline()`` не вернет пустой байтовый объект."

#: ../../library/base64.rst:233
msgid ""
"Decode the :term:`bytes-like object` *s*, which must contain one or more "
"lines of base64 encoded data, and return the decoded :class:`bytes`."
msgstr ""
"Декодируйте :term:`bytes-like объект` *s*, который должен содержать одну или "
"несколько строк данных в кодировке Base64, и верните декодированный :class:"
"`bytes`."

#: ../../library/base64.rst:241
msgid ""
"Encode the contents of the binary *input* file and write the resulting "
"base64 encoded data to the *output* file. *input* and *output* must be :term:"
"`file objects <file object>`. *input* will be read until ``input.read()`` "
"returns an empty bytes object. :func:`encode` inserts a newline character "
"(``b'\\n'``) after every 76 bytes of the output, as well as ensuring that "
"the output always ends with a newline, as per :rfc:`2045` (MIME)."
msgstr ""
"Закодируйте содержимое двоичного *входного* файла и запишите полученные "
"данные в кодировке Base64 в *выходной* файл. *входные* и *выходные* должны "
"быть :term:`файловые объекты <файловый объект>`. *input* будет читаться до "
"тех пор, пока ``input.read()`` не вернет пустой байтовый объект. :func:"
"`encode` вставляет символ новой строки (``b'\\n'``) после каждых 76 байт "
"выходных данных, а также гарантирует, что вывод всегда заканчивается новой "
"строкой, согласно :rfc:`2045` (МИМ)."

#: ../../library/base64.rst:251
msgid ""
"Encode the :term:`bytes-like object` *s*, which can contain arbitrary binary "
"data, and return :class:`bytes` containing the base64-encoded data, with "
"newlines (``b'\\n'``) inserted after every 76 bytes of output, and ensuring "
"that there is a trailing newline, as per :rfc:`2045` (MIME)."
msgstr ""
"Закодируйте :term:`bytes-like объект` *s*, который может содержать "
"произвольные двоичные данные, и верните :class:`bytes`, содержащий данные в "
"кодировке Base64, с символами новой строки (``b'\\n'``) вставляется после "
"каждых 76 байт вывода и обеспечивает наличие завершающей новой строки в "
"соответствии с :rfc:`2045` (MIME)."

#: ../../library/base64.rst:259
msgid "An example usage of the module:"
msgstr "Пример использования модуля:"

#: ../../library/base64.rst:273
msgid "Module :mod:`binascii`"
msgstr "Модуль :mod:`binascii`"

#: ../../library/base64.rst:273
msgid ""
"Support module containing ASCII-to-binary and binary-to-ASCII conversions."
msgstr ""
"Модуль поддержки, содержащий преобразования ASCII в двоичный и двоичный "
"формат ASCII."

#: ../../library/base64.rst:276
msgid ""
":rfc:`1521` - MIME (Multipurpose Internet Mail Extensions) Part One: "
"Mechanisms for Specifying and Describing the Format of Internet Message "
"Bodies"
msgstr ""
":rfc:`1521` - MIME (многоцелевые расширения почты Интернета), часть первая: "
"механизмы определения и описания формата тел интернет-сообщений"

#: ../../library/base64.rst:276
msgid ""
"Section 5.2, \"Base64 Content-Transfer-Encoding,\" provides the definition "
"of the base64 encoding."
msgstr ""
"Раздел 5.2, «Кодирование передачи контента Base64», содержит определение "
"кодировки base64."
