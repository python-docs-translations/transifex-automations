# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# Rafael Fontenelle <rffontenelle@gmail.com>, 2024
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.10\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-01-10 16:06+0000\n"
"PO-Revision-Date: 2022-11-05 17:21+0000\n"
"Last-Translator: Rafael Fontenelle <rffontenelle@gmail.com>, 2024\n"
"Language-Team: Russian (https://app.transifex.com/python-doc/teams/5390/"
"ru/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ru\n"
"Plural-Forms: nplurals=4; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && "
"n%10<=4 && (n%100<12 || n%100>14) ? 1 : n%10==0 || (n%10>=5 && n%10<=9) || "
"(n%100>=11 && n%100<=14)? 2 : 3);\n"

#: ../../library/cmath.rst:2
msgid ":mod:`cmath` --- Mathematical functions for complex numbers"
msgstr ""

#: ../../library/cmath.rst:9
msgid ""
"This module provides access to mathematical functions for complex numbers.  "
"The functions in this module accept integers, floating-point numbers or "
"complex numbers as arguments. They will also accept any Python object that "
"has either a :meth:`__complex__` or a :meth:`__float__` method: these "
"methods are used to convert the object to a complex or floating-point "
"number, respectively, and the function is then applied to the result of the "
"conversion."
msgstr ""

#: ../../library/cmath.rst:18
msgid ""
"For functions involving branch cuts, we have the problem of deciding how to "
"define those functions on the cut itself. Following Kahan's \"Branch cuts "
"for complex elementary functions\" paper, as well as Annex G of C99 and "
"later C standards, we use the sign of zero to distinguish one side of the "
"branch cut from the other: for a branch cut along (a portion of) the real "
"axis we look at the sign of the imaginary part, while for a branch cut along "
"the imaginary axis we look at the sign of the real part."
msgstr ""
"Для функций, включающих разрезы ветвей, у нас возникает проблема: как "
"определить эти функции на самом разрезе. Следуя статье Кахана «Разрезы "
"ветвей для сложных элементарных функций», а также Приложению G стандартов "
"C99 и более поздних версий C, мы используем знак нуля, чтобы отличить одну "
"сторону разреза от другой: для разрезанной ветви вдоль (часть о) "
"действительной оси смотрим на знак мнимой части, а для ветви, разрезанной по "
"мнимой оси, смотрим на знак действительной части."

#: ../../library/cmath.rst:26
msgid ""
"For example, the :func:`cmath.sqrt` function has a branch cut along the "
"negative real axis. An argument of ``complex(-2.0, -0.0)`` is treated as "
"though it lies *below* the branch cut, and so gives a result on the negative "
"imaginary axis::"
msgstr ""
"Например, функция :func:`cmath.sqrt` имеет ветвь, разрезанную вдоль "
"отрицательной действительной оси. Аргумент ``complex(-2.0, -0.0)`` "
"рассматривается так, как если бы он находился *ниже* разреза ветки, и "
"поэтому дает результат на отрицательной мнимой оси:"

#: ../../library/cmath.rst:34
msgid ""
"But an argument of ``complex(-2.0, 0.0)`` is treated as though it lies above "
"the branch cut::"
msgstr ""
"Но аргумент ``complex(-2.0, 0.0)`` рассматривается так, как будто он "
"находится над разрезом ветки::"

#: ../../library/cmath.rst:42
msgid "Conversions to and from polar coordinates"
msgstr "Преобразования в полярные координаты и обратно"

#: ../../library/cmath.rst:44
msgid ""
"A Python complex number ``z`` is stored internally using *rectangular* or "
"*Cartesian* coordinates.  It is completely determined by its *real part* ``z."
"real`` and its *imaginary part* ``z.imag``.  In other words::"
msgstr ""

#: ../../library/cmath.rst:51
msgid ""
"*Polar coordinates* give an alternative way to represent a complex number.  "
"In polar coordinates, a complex number *z* is defined by the modulus *r* and "
"the phase angle *phi*. The modulus *r* is the distance from *z* to the "
"origin, while the phase *phi* is the counterclockwise angle, measured in "
"radians, from the positive x-axis to the line segment that joins the origin "
"to *z*."
msgstr ""
"*Полярные координаты* дают альтернативный способ представления комплексного "
"числа. В полярных координатах комплексное число *z* определяется модулем *r* "
"и фазовым углом *phi*. Модуль *r* — это расстояние от *z* до начала "
"координат, а фаза *phi* — это угол против часовой стрелки, измеряемый в "
"радианах, от положительной оси X до отрезка линии, соединяющего начало "
"координат с *z*."

#: ../../library/cmath.rst:58
msgid ""
"The following functions can be used to convert from the native rectangular "
"coordinates to polar coordinates and back."
msgstr ""
"Следующие функции можно использовать для преобразования собственных "
"прямоугольных координат в полярные координаты и обратно."

#: ../../library/cmath.rst:63
msgid ""
"Return the phase of *x* (also known as the *argument* of *x*), as a float. "
"``phase(x)`` is equivalent to ``math.atan2(x.imag, x.real)``.  The result "
"lies in the range [-\\ *π*, *π*], and the branch cut for this operation lies "
"along the negative real axis.  The sign of the result is the same as the "
"sign of ``x.imag``, even when ``x.imag`` is zero::"
msgstr ""
"Возвращает фазу *x* (также известную как *аргумент* *x*) в виде числа с "
"плавающей запятой. ``phase(x)`` эквивалентен ``math.atan2(x.imag, x.real)``. "
"Результат лежит в диапазоне [-\\ *π*, *π*], а разрез ветки для этой операции "
"лежит вдоль отрицательной вещественной оси. Знак результата такой же, как "
"знак x.imag, даже если x.imag равен нулю:"

#: ../../library/cmath.rst:77
msgid ""
"The modulus (absolute value) of a complex number *x* can be computed using "
"the built-in :func:`abs` function.  There is no separate :mod:`cmath` module "
"function for this operation."
msgstr ""
"Модуль (абсолютное значение) комплексного числа *x* можно вычислить с "
"помощью встроенной функции :func:`abs`. Для этой операции не существует "
"отдельной функции модуля :mod:`cmath`."

#: ../../library/cmath.rst:84
msgid ""
"Return the representation of *x* in polar coordinates.  Returns a pair ``(r, "
"phi)`` where *r* is the modulus of *x* and phi is the phase of *x*.  "
"``polar(x)`` is equivalent to ``(abs(x), phase(x))``."
msgstr ""
"Верните представление *x* в полярных координатах. Возвращает пару ``(r, "
"phi)``, где *r* — модуль *x*, а phi — фаза *x*. ``polar(x)`` эквивалентен "
"``(abs(x),phase(x))``."

#: ../../library/cmath.rst:92
msgid ""
"Return the complex number *x* with polar coordinates *r* and *phi*. "
"Equivalent to ``r * (math.cos(phi) + math.sin(phi)*1j)``."
msgstr ""

#: ../../library/cmath.rst:97
msgid "Power and logarithmic functions"
msgstr "Степенные и логарифмические функции"

#: ../../library/cmath.rst:101
msgid ""
"Return *e* raised to the power *x*, where *e* is the base of natural "
"logarithms."
msgstr ""
"Верните *e*, возведённое в степень *x*, где *e* — это основание натуральных "
"логарифмов."

#: ../../library/cmath.rst:107
msgid ""
"Returns the logarithm of *x* to the given *base*. If the *base* is not "
"specified, returns the natural logarithm of *x*. There is one branch cut, "
"from 0 along the negative real axis to -∞."
msgstr ""
"Возвращает логарифм *x* по заданному *основанию*. Если *основание* не "
"указано, возвращается натуральный логарифм *x*. Имеется одна ветвь от 0 "
"вдоль отрицательной действительной оси до -∞."

#: ../../library/cmath.rst:114
msgid ""
"Return the base-10 logarithm of *x*. This has the same branch cut as :func:"
"`log`."
msgstr ""
"Возвращает десятичный логарифм числа *x*. Он имеет тот же разрез ветки, что "
"и :func:`log`."

#: ../../library/cmath.rst:120
msgid ""
"Return the square root of *x*. This has the same branch cut as :func:`log`."
msgstr ""
"Вернуть квадратный корень из *x*. Он имеет тот же разрез ветки, что и :func:"
"`log`."

#: ../../library/cmath.rst:124
msgid "Trigonometric functions"
msgstr "Тригонометрические функции"

#: ../../library/cmath.rst:128
msgid ""
"Return the arc cosine of *x*. There are two branch cuts: One extends right "
"from 1 along the real axis to ∞. The other extends left from -1 along the "
"real axis to -∞."
msgstr ""
"Вернуть арккосинус *x*. Есть два разреза ветвей: один проходит вправо от 1 "
"вдоль вещественной оси до ∞. Другой простирается влево от -1 вдоль "
"действительной оси до -∞."

#: ../../library/cmath.rst:135
msgid ""
"Return the arc sine of *x*. This has the same branch cuts as :func:`acos`."
msgstr "Возвращает арксинус *x*. Он имеет те же ветки, что и :func:`acos`."

#: ../../library/cmath.rst:140
msgid ""
"Return the arc tangent of *x*. There are two branch cuts: One extends from "
"``1j`` along the imaginary axis to ``∞j``. The other extends from ``-1j`` "
"along the imaginary axis to ``-∞j``."
msgstr ""
"Возвращает арктангенс *x*. Имеются два разреза ветвей: один простирается от "
"``1j`` вдоль мнимой оси до ``∞j``. Другой простирается от «-1j» вдоль мнимой "
"оси до «-∞j»."

#: ../../library/cmath.rst:147
msgid "Return the cosine of *x*."
msgstr "Возвращает косинус *x*."

#: ../../library/cmath.rst:152
msgid "Return the sine of *x*."
msgstr "Возвращает синус *x*."

#: ../../library/cmath.rst:157
msgid "Return the tangent of *x*."
msgstr "Возвращает тангенс *х*."

#: ../../library/cmath.rst:161
msgid "Hyperbolic functions"
msgstr "Гиперболические функции"

#: ../../library/cmath.rst:165
msgid ""
"Return the inverse hyperbolic cosine of *x*. There is one branch cut, "
"extending left from 1 along the real axis to -∞."
msgstr ""
"Возвращает обратный гиперболический косинус *x*. Имеется одна ветвь, идущая "
"влево от 1 вдоль вещественной оси до -∞."

#: ../../library/cmath.rst:171
msgid ""
"Return the inverse hyperbolic sine of *x*. There are two branch cuts: One "
"extends from ``1j`` along the imaginary axis to ``∞j``.  The other extends "
"from ``-1j`` along the imaginary axis to ``-∞j``."
msgstr ""
"Возвращает обратный гиперболический синус *x*. Имеются два разреза ветвей: "
"один простирается от ``1j`` вдоль мнимой оси до ``∞j``. Другой простирается "
"от «-1j» вдоль мнимой оси до «-∞j»."

#: ../../library/cmath.rst:178
msgid ""
"Return the inverse hyperbolic tangent of *x*. There are two branch cuts: One "
"extends from ``1`` along the real axis to ``∞``. The other extends from "
"``-1`` along the real axis to ``-∞``."
msgstr ""
"Возвращает обратный гиперболический тангенс *x*. Есть два разреза ветвей: "
"один простирается от ``1`` вдоль вещественной оси до ``∞``. Другой "
"простирается от ``-1`` вдоль вещественной оси до ``-∞``."

#: ../../library/cmath.rst:185
msgid "Return the hyperbolic cosine of *x*."
msgstr "Верните гиперболический косинус *x*."

#: ../../library/cmath.rst:190
msgid "Return the hyperbolic sine of *x*."
msgstr "Верните гиперболический синус *x*."

#: ../../library/cmath.rst:195
msgid "Return the hyperbolic tangent of *x*."
msgstr "Возвращает гиперболический тангенс *x*."

#: ../../library/cmath.rst:199
msgid "Classification functions"
msgstr "Классифицирующие функции"

#: ../../library/cmath.rst:203
msgid ""
"Return ``True`` if both the real and imaginary parts of *x* are finite, and "
"``False`` otherwise."
msgstr ""
"Возвращайте ``True``, если и действительная, и мнимая части *x* конечны, и "
"``False`` в противном случае."

#: ../../library/cmath.rst:211
msgid ""
"Return ``True`` if either the real or the imaginary part of *x* is an "
"infinity, and ``False`` otherwise."
msgstr ""
"Возвращайте ``True``, если действительная или мнимая часть *x* равна "
"бесконечности, и ``False`` в противном случае."

#: ../../library/cmath.rst:217
msgid ""
"Return ``True`` if either the real or the imaginary part of *x* is a NaN, "
"and ``False`` otherwise."
msgstr ""
"Возвращайте ``True``, если действительная или мнимая часть *x* является NaN, "
"и ``False`` в противном случае."

#: ../../library/cmath.rst:223
msgid ""
"Return ``True`` if the values *a* and *b* are close to each other and "
"``False`` otherwise."
msgstr ""
"Возвращайте ``True``, если значения *a* и *b* близки друг к другу, и "
"``False`` в противном случае."

#: ../../library/cmath.rst:226
msgid ""
"Whether or not two values are considered close is determined according to "
"given absolute and relative tolerances."
msgstr ""
"Считаются ли два значения близкими, определяется в соответствии с заданными "
"абсолютными и относительными допусками."

#: ../../library/cmath.rst:229
msgid ""
"*rel_tol* is the relative tolerance -- it is the maximum allowed difference "
"between *a* and *b*, relative to the larger absolute value of *a* or *b*. "
"For example, to set a tolerance of 5%, pass ``rel_tol=0.05``.  The default "
"tolerance is ``1e-09``, which assures that the two values are the same "
"within about 9 decimal digits.  *rel_tol* must be greater than zero."
msgstr ""
"*rel_tol* — это относительный допуск — это максимально допустимая разница "
"между *a* и *b* относительно большего абсолютного значения *a* или *b*. "
"Например, чтобы установить допуск 5 %, укажите rel_tol=0,05. Допуск по "
"умолчанию — «1e-09», который гарантирует, что два значения одинаковы в "
"пределах примерно 9 десятичных цифр. *rel_tol* должно быть больше нуля."

#: ../../library/cmath.rst:235
msgid ""
"*abs_tol* is the minimum absolute tolerance -- useful for comparisons near "
"zero. *abs_tol* must be at least zero."
msgstr ""
"*abs_tol* — это минимальный абсолютный допуск, полезный для сравнений вблизи "
"нуля. *abs_tol* должно быть не меньше нуля."

#: ../../library/cmath.rst:238
msgid ""
"If no errors occur, the result will be: ``abs(a-b) <= max(rel_tol * "
"max(abs(a), abs(b)), abs_tol)``."
msgstr ""
"Если ошибок не возникнет, результатом будет: ``abs(ab) <= max(rel_tol * "
"max(abs(a), abs(b)), abs_tol)``."

#: ../../library/cmath.rst:241
msgid ""
"The IEEE 754 special values of ``NaN``, ``inf``, and ``-inf`` will be "
"handled according to IEEE rules.  Specifically, ``NaN`` is not considered "
"close to any other value, including ``NaN``.  ``inf`` and ``-inf`` are only "
"considered close to themselves."
msgstr ""
"Специальные значения IEEE 754 NaN, inf и -inf будут обрабатываться в "
"соответствии с правилами IEEE. В частности, NaN не считается близким к "
"какому-либо другому значению, включая NaN. ``inf`` и ``-inf`` считаются "
"только близкими к себе."

#: ../../library/cmath.rst:250
msgid ":pep:`485` -- A function for testing approximate equality"
msgstr ":pep:`485` -- Функция для проверки приблизительного равенства"

#: ../../library/cmath.rst:254
msgid "Constants"
msgstr "Константы"

#: ../../library/cmath.rst:258
msgid "The mathematical constant *π*, as a float."
msgstr "Математическая константа *π* в виде числа с плавающей запятой."

#: ../../library/cmath.rst:263
msgid "The mathematical constant *e*, as a float."
msgstr "Математическая константа *e* в виде числа с плавающей запятой."

#: ../../library/cmath.rst:268
msgid "The mathematical constant *τ*, as a float."
msgstr "Математическая константа *τ* в виде числа с плавающей запятой."

#: ../../library/cmath.rst:275
msgid "Floating-point positive infinity. Equivalent to ``float('inf')``."
msgstr ""
"Положительная бесконечность с плавающей запятой. Эквивалентно "
"``float('inf')``."

#: ../../library/cmath.rst:282
msgid ""
"Complex number with zero real part and positive infinity imaginary part. "
"Equivalent to ``complex(0.0, float('inf'))``."
msgstr ""
"Комплексное число с нулевой действительной частью и положительной "
"бесконечностью мнимой части. Эквивалент ``complex(0.0, float('inf'))``."

#: ../../library/cmath.rst:290
msgid ""
"A floating-point \"not a number\" (NaN) value.  Equivalent to "
"``float('nan')``."
msgstr ""
"Значение с плавающей запятой, не являющееся числом (NaN). Эквивалентно "
"``float('nan')``."

#: ../../library/cmath.rst:298
msgid ""
"Complex number with zero real part and NaN imaginary part. Equivalent to "
"``complex(0.0, float('nan'))``."
msgstr ""
"Комплексное число с нулевой действительной частью и мнимой частью NaN. "
"Эквивалент ``complex(0.0, float('nan'))``."

#: ../../library/cmath.rst:306
msgid ""
"Note that the selection of functions is similar, but not identical, to that "
"in module :mod:`math`.  The reason for having two modules is that some users "
"aren't interested in complex numbers, and perhaps don't even know what they "
"are.  They would rather have ``math.sqrt(-1)`` raise an exception than "
"return a complex number. Also note that the functions defined in :mod:"
"`cmath` always return a complex number, even if the answer can be expressed "
"as a real number (in which case the complex number has an imaginary part of "
"zero)."
msgstr ""
"Обратите внимание, что выбор функций аналогичен, но не идентичен выбору в "
"модуле :mod:`math`. Причина наличия двух модулей заключается в том, что "
"некоторые пользователи не интересуются комплексными числами и, возможно, "
"даже не знают, что это такое. Они предпочли бы, чтобы math.sqrt(-1) вызывал "
"исключение, а не возвращал комплексное число. Также обратите внимание, что "
"функции, определенные в :mod:`cmath`, всегда возвращают комплексное число, "
"даже если ответ может быть выражен действительным числом (в этом случае "
"комплексное число имеет мнимую часть нуля)."

#: ../../library/cmath.rst:314
msgid ""
"A note on branch cuts: They are curves along which the given function fails "
"to be continuous.  They are a necessary feature of many complex functions.  "
"It is assumed that if you need to compute with complex functions, you will "
"understand about branch cuts.  Consult almost any (not too elementary) book "
"on complex variables for enlightenment.  For information of the proper "
"choice of branch cuts for numerical purposes, a good reference should be the "
"following:"
msgstr ""
"Примечание о разрезах ветвей: это кривые, вдоль которых данная функция не "
"может быть непрерывной. Они являются необходимой особенностью многих сложных "
"функций. Предполагается, что если вам нужно выполнять вычисления со сложными "
"функциями, вы поймете, что такое разрезы ветвей. Чтобы получить "
"представление, обратитесь практически к любой (не слишком элементарной) "
"книге по комплексным переменным. Для получения информации о правильном "
"выборе разрезов ветвей для численных целей хорошим справочным материалом "
"может быть следующее:"

#: ../../library/cmath.rst:324
msgid ""
"Kahan, W:  Branch cuts for complex elementary functions; or, Much ado about "
"nothing's sign bit.  In Iserles, A., and Powell, M. (eds.), The state of the "
"art in numerical analysis. Clarendon Press (1987) pp165--211."
msgstr ""
"Кахан, В.: Разрезы ветвей для сложных элементарных функций; или «Много шума "
"из ничего». В книге Изерлес А. и Пауэлл М. (ред.), Современное состояние "
"численного анализа. Кларендон Пресс (1987), стр. 165–211."
