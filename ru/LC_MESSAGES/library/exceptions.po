# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# Rafael Fontenelle <rffontenelle@gmail.com>, 2024
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.10\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-01-03 16:02+0000\n"
"PO-Revision-Date: 2022-11-05 17:22+0000\n"
"Last-Translator: Rafael Fontenelle <rffontenelle@gmail.com>, 2024\n"
"Language-Team: Russian (https://app.transifex.com/python-doc/teams/5390/"
"ru/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ru\n"
"Plural-Forms: nplurals=4; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && "
"n%10<=4 && (n%100<12 || n%100>14) ? 1 : n%10==0 || (n%10>=5 && n%10<=9) || "
"(n%100>=11 && n%100<=14)? 2 : 3);\n"

#: ../../library/exceptions.rst:4
msgid "Built-in Exceptions"
msgstr "Встроенные исключения"

#: ../../library/exceptions.rst:10
msgid ""
"In Python, all exceptions must be instances of a class that derives from :"
"class:`BaseException`.  In a :keyword:`try` statement with an :keyword:"
"`except` clause that mentions a particular class, that clause also handles "
"any exception classes derived from that class (but not exception classes "
"from which *it* is derived).  Two exception classes that are not related via "
"subclassing are never equivalent, even if they have the same name."
msgstr ""
"В Python все исключения должны быть экземплярами класса, производного от :"
"class:`BaseException`. В операторе :keyword:`try` с предложением :keyword:"
"`Exception`, в котором упоминается конкретный класс, это предложение также "
"обрабатывает любые классы исключений, производные от этого класса (но не "
"классы исключений, из которых *он* является производным). Два класса "
"исключений, не связанные созданием подклассов, никогда не являются "
"эквивалентными, даже если они имеют одно и то же имя."

#: ../../library/exceptions.rst:19
msgid ""
"The built-in exceptions listed below can be generated by the interpreter or "
"built-in functions.  Except where mentioned, they have an \"associated "
"value\" indicating the detailed cause of the error.  This may be a string or "
"a tuple of several items of information (e.g., an error code and a string "
"explaining the code).  The associated value is usually passed as arguments "
"to the exception class's constructor."
msgstr ""

#: ../../library/exceptions.rst:26
msgid ""
"User code can raise built-in exceptions.  This can be used to test an "
"exception handler or to report an error condition \"just like\" the "
"situation in which the interpreter raises the same exception; but beware "
"that there is nothing to prevent user code from raising an inappropriate "
"error."
msgstr ""
"Пользовательский код может вызывать встроенные исключения. Это можно "
"использовать для проверки обработчика исключений или для сообщения об "
"ошибке, «точно так же, как» ситуация, в которой интерпретатор вызывает то же "
"исключение; но помните, что нет ничего, что могло бы помешать "
"пользовательскому коду вызвать недопустимую ошибку."

#: ../../library/exceptions.rst:31
msgid ""
"The built-in exception classes can be subclassed to define new exceptions; "
"programmers are encouraged to derive new exceptions from the :exc:"
"`Exception` class or one of its subclasses, and not from :exc:"
"`BaseException`.  More information on defining exceptions is available in "
"the Python Tutorial under :ref:`tut-userexceptions`."
msgstr ""
"Встроенные классы исключений могут быть разделены на подклассы для "
"определения новых исключений; программистам рекомендуется создавать новые "
"исключения из класса :exc:`Exception` или одного из его подклассов, а не из :"
"exc:`BaseException`. Дополнительную информацию об определении исключений "
"можно найти в руководстве по Python в разделе :ref:`tut-userExceptions`."

#: ../../library/exceptions.rst:39
msgid "Exception context"
msgstr "Контекст исключения"

#: ../../library/exceptions.rst:41
msgid ""
"When raising a new exception while another exception is already being "
"handled, the new exception's :attr:`__context__` attribute is automatically "
"set to the handled exception.  An exception may be handled when an :keyword:"
"`except` or :keyword:`finally` clause, or a :keyword:`with` statement, is "
"used."
msgstr ""

#: ../../library/exceptions.rst:47
msgid ""
"This implicit exception context can be supplemented with an explicit cause "
"by using :keyword:`!from` with :keyword:`raise`::"
msgstr ""
"Этот контекст неявного исключения можно дополнить явной причиной, используя :"
"keyword:`!from` с :keyword:`raise`::"

#: ../../library/exceptions.rst:53
msgid ""
"The expression following :keyword:`from<raise>` must be an exception or "
"``None``. It will be set as :attr:`__cause__` on the raised exception. "
"Setting :attr:`__cause__` also implicitly sets the :attr:"
"`__suppress_context__` attribute to ``True``, so that using ``raise new_exc "
"from None`` effectively replaces the old exception with the new one for "
"display purposes (e.g. converting :exc:`KeyError` to :exc:`AttributeError`), "
"while leaving the old exception available in :attr:`__context__` for "
"introspection when debugging."
msgstr ""

#: ../../library/exceptions.rst:62
msgid ""
"The default traceback display code shows these chained exceptions in "
"addition to the traceback for the exception itself. An explicitly chained "
"exception in :attr:`__cause__` is always shown when present. An implicitly "
"chained exception in :attr:`__context__` is shown only if :attr:`__cause__` "
"is :const:`None` and :attr:`__suppress_context__` is false."
msgstr ""

#: ../../library/exceptions.rst:68
msgid ""
"In either case, the exception itself is always shown after any chained "
"exceptions so that the final line of the traceback always shows the last "
"exception that was raised."
msgstr ""
"В любом случае само исключение всегда отображается после любых связанных "
"исключений, поэтому последняя строка обратной трассировки всегда показывает "
"последнее возникшее исключение."

#: ../../library/exceptions.rst:74
msgid "Inheriting from built-in exceptions"
msgstr "Наследование от встроенных исключений"

#: ../../library/exceptions.rst:76
msgid ""
"User code can create subclasses that inherit from an exception type. It's "
"recommended to only subclass one exception type at a time to avoid any "
"possible conflicts between how the bases handle the ``args`` attribute, as "
"well as due to possible memory layout incompatibilities."
msgstr ""
"Пользовательский код может создавать подклассы, наследуемые от типа "
"исключения. Рекомендуется одновременно создавать подкласс только одного типа "
"исключения, чтобы избежать любых возможных конфликтов между тем, как базы "
"обрабатывают атрибут args, а также из-за возможной несовместимости структуры "
"памяти."

#: ../../library/exceptions.rst:83
msgid ""
"Most built-in exceptions are implemented in C for efficiency, see: :source:"
"`Objects/exceptions.c`.  Some have custom memory layouts which makes it "
"impossible to create a subclass that inherits from multiple exception types. "
"The memory layout of a type is an implementation detail and might change "
"between Python versions, leading to new conflicts in the future.  Therefore, "
"it's recommended to avoid subclassing multiple exception types altogether."
msgstr ""
"Большинство встроенных исключений для повышения эффективности реализованы на "
"языке C, см.: :source:`Objects/Exceptions.c`. Некоторые из них имеют "
"собственную структуру памяти, что делает невозможным создание подкласса, "
"наследуемого от нескольких типов исключений. Расположение памяти типа "
"является деталью реализации и может меняться в разных версиях Python, что "
"приведет к новым конфликтам в будущем. Поэтому рекомендуется вообще избегать "
"создания подклассов нескольких типов исключений."

#: ../../library/exceptions.rst:93
msgid "Base classes"
msgstr "Базовые классы"

#: ../../library/exceptions.rst:95
msgid ""
"The following exceptions are used mostly as base classes for other "
"exceptions."
msgstr ""
"Следующие исключения используются в основном как базовые классы для других "
"исключений."

#: ../../library/exceptions.rst:99
msgid ""
"The base class for all built-in exceptions.  It is not meant to be directly "
"inherited by user-defined classes (for that, use :exc:`Exception`).  If :"
"func:`str` is called on an instance of this class, the representation of the "
"argument(s) to the instance are returned, or the empty string when there "
"were no arguments."
msgstr ""
"Базовый класс для всех встроенных исключений. Он не предназначен для прямого "
"наследования определяемыми пользователем классами (для этого используйте :"
"exc:`Exception`). Если :func:`str` вызывается для экземпляра этого класса, "
"возвращается представление аргумента(ов) экземпляра или пустая строка, если "
"аргументов нет."

#: ../../library/exceptions.rst:107
msgid ""
"The tuple of arguments given to the exception constructor.  Some built-in "
"exceptions (like :exc:`OSError`) expect a certain number of arguments and "
"assign a special meaning to the elements of this tuple, while others are "
"usually called only with a single string giving an error message."
msgstr ""
"Кортеж аргументов, передаваемых конструктору исключения. Некоторые "
"встроенные исключения (например, :exc:`OSError`) ожидают определенное "
"количество аргументов и присваивают особое значение элементам этого кортежа, "
"в то время как другие обычно вызываются только с одной строкой, дающей "
"сообщение об ошибке."

#: ../../library/exceptions.rst:114
msgid ""
"This method sets *tb* as the new traceback for the exception and returns the "
"exception object.  It was more commonly used before the exception chaining "
"features of :pep:`3134` became available.  The following example shows how "
"we can convert an instance of ``SomeException`` into an instance of "
"``OtherException`` while preserving the traceback.  Once raised, the current "
"frame is pushed onto the traceback of the ``OtherException``, as would have "
"happened to the traceback of the original ``SomeException`` had we allowed "
"it to propagate to the caller. ::"
msgstr ""
"Этот метод устанавливает *tb* в качестве новой трассировки исключения и "
"возвращает объект исключения. Он чаще использовался до того, как стали "
"доступны функции цепочки исключений :pep:`3134`. В следующем примере "
"показано, как мы можем преобразовать экземпляр SomeException в экземпляр "
"OtherException, сохраняя при этом обратную трассировку. После возникновения "
"текущий кадр помещается в обратную трассировку OtherException, как это "
"произошло бы с обратной трассировкой исходного SomeException, если бы мы "
"позволили ему распространиться на вызывающую сторону. ::"

#: ../../library/exceptions.rst:132
msgid ""
"All built-in, non-system-exiting exceptions are derived from this class.  "
"All user-defined exceptions should also be derived from this class."
msgstr ""
"Все встроенные исключения, не выходящие из системы, являются производными от "
"этого класса. Все определяемые пользователем исключения также должны быть "
"производными от этого класса."

#: ../../library/exceptions.rst:138
msgid ""
"The base class for those built-in exceptions that are raised for various "
"arithmetic errors: :exc:`OverflowError`, :exc:`ZeroDivisionError`, :exc:"
"`FloatingPointError`."
msgstr ""
"Базовый класс для встроенных исключений, возникающих при различных "
"арифметических ошибках: :exc:`OverflowError`, :exc:`ZeroDivisionError`, :exc:"
"`FloatingPointError`."

#: ../../library/exceptions.rst:145
msgid ""
"Raised when a :ref:`buffer <bufferobjects>` related operation cannot be "
"performed."
msgstr ""
"Возникает, когда операция, связанная с :ref:`buffer <bufferobjects>`, не "
"может быть выполнена."

#: ../../library/exceptions.rst:151
msgid ""
"The base class for the exceptions that are raised when a key or index used "
"on a mapping or sequence is invalid: :exc:`IndexError`, :exc:`KeyError`.  "
"This can be raised directly by :func:`codecs.lookup`."
msgstr ""
"Базовый класс для исключений, которые возникают, когда ключ или индекс, "
"используемые в сопоставлении или последовательности, недействительны: :exc:"
"`IndexError`, :exc:`KeyError`. Его можно вызвать непосредственно с помощью :"
"func:`codecs.lookup`."

#: ../../library/exceptions.rst:157
msgid "Concrete exceptions"
msgstr "Конкретные исключения"

#: ../../library/exceptions.rst:159
msgid "The following exceptions are the exceptions that are usually raised."
msgstr ""
"Следующие исключения представляют собой исключения, которые обычно возникают."

#: ../../library/exceptions.rst:165
msgid "Raised when an :keyword:`assert` statement fails."
msgstr "Возникает, когда оператор :keyword:`assert` не работает."

#: ../../library/exceptions.rst:170
msgid ""
"Raised when an attribute reference (see :ref:`attribute-references`) or "
"assignment fails.  (When an object does not support attribute references or "
"attribute assignments at all, :exc:`TypeError` is raised.)"
msgstr ""
"Возникает, когда ссылка на атрибут (см. :ref:`attribute-references`) или "
"присвоение завершаются неудачно. (Когда объект вообще не поддерживает ссылки "
"на атрибуты или назначения атрибутов, возникает :exc:`TypeError`.)"

#: ../../library/exceptions.rst:174
msgid ""
"The :attr:`name` and :attr:`obj` attributes can be set using keyword-only "
"arguments to the constructor. When set they represent the name of the "
"attribute that was attempted to be accessed and the object that was accessed "
"for said attribute, respectively."
msgstr ""
"Атрибуты :attr:`name` и :attr:`obj` могут быть установлены с использованием "
"аргументов конструктора, содержащих только ключевые слова. Если они "
"установлены, они представляют имя атрибута, к которому была предпринята "
"попытка доступа, и объекта, к которому был осуществлен доступ для указанного "
"атрибута, соответственно."

#: ../../library/exceptions.rst:179
msgid "Added the :attr:`name` and :attr:`obj` attributes."
msgstr "Добавлены атрибуты :attr:`name` и :attr:`obj`."

#: ../../library/exceptions.rst:184
msgid ""
"Raised when the :func:`input` function hits an end-of-file condition (EOF) "
"without reading any data. (N.B.: the :meth:`io.IOBase.read` and :meth:`io."
"IOBase.readline` methods return an empty string when they hit EOF.)"
msgstr ""
"Возникает, когда функция :func:`input` достигает состояния конца файла (EOF) "
"без чтения каких-либо данных. (Примечание: методы :meth:`io.IOBase.read` и :"
"meth:`io.IOBase.readline` возвращают пустую строку при достижении EOF.)"

#: ../../library/exceptions.rst:191
msgid "Not currently used."
msgstr "В настоящее время не используется."

#: ../../library/exceptions.rst:196
msgid ""
"Raised when a :term:`generator` or :term:`coroutine` is closed; see :meth:"
"`generator.close` and :meth:`coroutine.close`.  It directly inherits from :"
"exc:`BaseException` instead of :exc:`Exception` since it is technically not "
"an error."
msgstr ""
"Возникает, когда закрывается :term:`generator` или :term:`coroutine`; см. :"
"meth:`generator.close` и :meth:`coroutine.close`. Он напрямую наследуется "
"от :exc:`BaseException` вместо :exc:`Exception`, поскольку технически это не "
"ошибка."

#: ../../library/exceptions.rst:204
msgid ""
"Raised when the :keyword:`import` statement has troubles trying to load a "
"module.  Also raised when the \"from list\" in ``from ... import`` has a "
"name that cannot be found."
msgstr ""
"Возникает, когда у оператора :keyword:`import` возникают проблемы при "
"загрузке модуля. Также возникает, когда имя «from list» в ``from ... "
"import`` не может быть найдено."

#: ../../library/exceptions.rst:208
msgid ""
"The :attr:`name` and :attr:`path` attributes can be set using keyword-only "
"arguments to the constructor. When set they represent the name of the module "
"that was attempted to be imported and the path to any file which triggered "
"the exception, respectively."
msgstr ""

#: ../../library/exceptions.rst:213
msgid "Added the :attr:`name` and :attr:`path` attributes."
msgstr "Добавлены атрибуты :attr:`name` и :attr:`path`."

#: ../../library/exceptions.rst:218
msgid ""
"A subclass of :exc:`ImportError` which is raised by :keyword:`import` when a "
"module could not be located.  It is also raised when ``None`` is found in :"
"data:`sys.modules`."
msgstr ""
"Подкласс :exc:`ImportError`, который вызывается :keyword:`import`, когда "
"модуль не может быть найден. Он также возникает, когда в :data:`sys.modules` "
"обнаружено ``None``."

#: ../../library/exceptions.rst:227
msgid ""
"Raised when a sequence subscript is out of range.  (Slice indices are "
"silently truncated to fall in the allowed range; if an index is not an "
"integer, :exc:`TypeError` is raised.)"
msgstr ""
"Возникает, когда индекс последовательности выходит за пределы допустимого "
"диапазона. (Индексы срезов автоматически усекаются, чтобы попасть в "
"разрешенный диапазон; если индекс не является целым числом, возникает :exc:"
"`TypeError`.)"

#: ../../library/exceptions.rst:236
msgid ""
"Raised when a mapping (dictionary) key is not found in the set of existing "
"keys."
msgstr ""
"Возникает, когда ключ сопоставления (словаря) не найден в наборе "
"существующих ключей."

#: ../../library/exceptions.rst:243
msgid ""
"Raised when the user hits the interrupt key (normally :kbd:`Control-C` or :"
"kbd:`Delete`).  During execution, a check for interrupts is made regularly. "
"The exception inherits from :exc:`BaseException` so as to not be "
"accidentally caught by code that catches :exc:`Exception` and thus prevent "
"the interpreter from exiting."
msgstr ""
"Вызывается, когда пользователь нажимает клавишу прерывания (обычно :kbd:"
"`Control-C` или :kbd:`Delete`). Во время выполнения регулярно производится "
"проверка на прерывания. Исключение наследуется от :exc:`BaseException`, "
"чтобы случайно не быть перехваченным кодом, который перехватывает :exc:"
"`Exception` и тем самым предотвратить выход интерпретатора."

#: ../../library/exceptions.rst:251
msgid ""
"Catching a :exc:`KeyboardInterrupt` requires special consideration. Because "
"it can be raised at unpredictable points, it may, in some circumstances, "
"leave the running program in an inconsistent state. It is generally best to "
"allow :exc:`KeyboardInterrupt` to end the program as quickly as possible or "
"avoid raising it entirely. (See :ref:`handlers-and-exceptions`.)"
msgstr ""
"Перехват :exc:`KeyboardInterrupt` требует особого внимания. Поскольку его "
"можно вызвать в непредсказуемые моменты, в некоторых случаях он может "
"привести работающую программу в несогласованное состояние. Обычно лучше "
"разрешить :exc:`KeyboardInterrupt` завершать программу как можно быстрее или "
"вообще избегать ее запуска. (См. :ref:`обработчики-и-исключения`.)"

#: ../../library/exceptions.rst:261
msgid ""
"Raised when an operation runs out of memory but the situation may still be "
"rescued (by deleting some objects).  The associated value is a string "
"indicating what kind of (internal) operation ran out of memory. Note that "
"because of the underlying memory management architecture (C's :c:func:"
"`malloc` function), the interpreter may not always be able to completely "
"recover from this situation; it nevertheless raises an exception so that a "
"stack traceback can be printed, in case a run-away program was the cause."
msgstr ""
"Возникает, когда операции не хватает памяти, но ситуацию еще можно спасти "
"(путем удаления некоторых объектов). Соответствующее значение представляет "
"собой строку, указывающую, для какой (внутренней) операции закончилась "
"память. Обратите внимание, что из-за базовой архитектуры управления памятью "
"(функция C :c:func:`malloc`) интерпретатор не всегда может полностью выйти "
"из этой ситуации; тем не менее, он вызывает исключение, чтобы можно было "
"напечатать обратную трассировку стека, если причиной была вышедшая из-под "
"контроля программа."

#: ../../library/exceptions.rst:272
msgid ""
"Raised when a local or global name is not found.  This applies only to "
"unqualified names.  The associated value is an error message that includes "
"the name that could not be found."
msgstr ""
"Возникает, когда локальное или глобальное имя не найдено. Это относится "
"только к неполным именам. Связанное значение представляет собой сообщение об "
"ошибке, включающее имя, которое не удалось найти."

#: ../../library/exceptions.rst:276
msgid ""
"The :attr:`name` attribute can be set using a keyword-only argument to the "
"constructor. When set it represent the name of the variable that was "
"attempted to be accessed."
msgstr ""
"Атрибут :attr:`name` может быть установлен с использованием аргумента "
"конструктора, содержащего только ключевые слова. Если он установлен, он "
"представляет имя переменной, к которой была предпринята попытка доступа."

#: ../../library/exceptions.rst:280
msgid "Added the :attr:`name` attribute."
msgstr "Добавлен атрибут :attr:`name`."

#: ../../library/exceptions.rst:286
msgid ""
"This exception is derived from :exc:`RuntimeError`.  In user defined base "
"classes, abstract methods should raise this exception when they require "
"derived classes to override the method, or while the class is being "
"developed to indicate that the real implementation still needs to be added."
msgstr ""
"Это исключение является производным от :exc:`RuntimeError`. В определяемых "
"пользователем базовых классах абстрактные методы должны вызывать это "
"исключение, когда они требуют, чтобы производные классы переопределяли "
"метод, или пока класс разрабатывается, чтобы указать, что реальную "
"реализацию все еще необходимо добавить."

#: ../../library/exceptions.rst:293
msgid ""
"It should not be used to indicate that an operator or method is not meant to "
"be supported at all -- in that case either leave the operator / method "
"undefined or, if a subclass, set it to :data:`None`."
msgstr ""
"Его не следует использовать для указания того, что оператор или метод вообще "
"не должен поддерживаться — в этом случае либо оставьте оператор/метод "
"неопределенным, либо, если это подкласс, установите для него значение :data:"
"`None`."

#: ../../library/exceptions.rst:299
msgid ""
"``NotImplementedError`` and ``NotImplemented`` are not interchangeable, even "
"though they have similar names and purposes.  See :data:`NotImplemented` for "
"details on when to use it."
msgstr ""

#: ../../library/exceptions.rst:308
msgid ""
"This exception is raised when a system function returns a system-related "
"error, including I/O failures such as \"file not found\" or \"disk "
"full\" (not for illegal argument types or other incidental errors)."
msgstr ""
"Это исключение возникает, когда системная функция возвращает системную "
"ошибку, включая сбои ввода-вывода, такие как «файл не найден» или «диск "
"заполнен» (не для недопустимых типов аргументов или других случайных ошибок)."

#: ../../library/exceptions.rst:312
msgid ""
"The second form of the constructor sets the corresponding attributes, "
"described below.  The attributes default to :const:`None` if not specified.  "
"For backwards compatibility, if three arguments are passed, the :attr:"
"`~BaseException.args` attribute contains only a 2-tuple of the first two "
"constructor arguments."
msgstr ""
"Вторая форма конструктора устанавливает соответствующие атрибуты, описанные "
"ниже. Атрибуты по умолчанию имеют значение :const:`None`, если не указаны. В "
"целях обратной совместимости, если передаются три аргумента, атрибут :attr:"
"`~BaseException.args` содержит только кортеж из двух первых двух аргументов "
"конструктора."

#: ../../library/exceptions.rst:318
msgid ""
"The constructor often actually returns a subclass of :exc:`OSError`, as "
"described in `OS exceptions`_ below.  The particular subclass depends on the "
"final :attr:`.errno` value.  This behaviour only occurs when constructing :"
"exc:`OSError` directly or via an alias, and is not inherited when "
"subclassing."
msgstr ""
"Конструктор часто фактически возвращает подкласс :exc:`OSError`, как описано "
"ниже в разделе `Исключения ОС`_. Конкретный подкласс зависит от конечного "
"значения :attr:`.errno`. Такое поведение возникает только при создании :exc:"
"`OSError` напрямую или через псевдоним и не наследуется при создании "
"подклассов."

#: ../../library/exceptions.rst:326
msgid "A numeric error code from the C variable :c:data:`errno`."
msgstr "Числовой код ошибки из переменной C :c:data:`errno`."

#: ../../library/exceptions.rst:330
msgid ""
"Under Windows, this gives you the native Windows error code.  The :attr:`."
"errno` attribute is then an approximate translation, in POSIX terms, of that "
"native error code."
msgstr ""
"В Windows это дает вам собственный код ошибки Windows. Атрибут :attr:`."
"errno` представляет собой приблизительный перевод в терминах POSIX этого "
"собственного кода ошибки."

#: ../../library/exceptions.rst:334
msgid ""
"Under Windows, if the *winerror* constructor argument is an integer, the :"
"attr:`.errno` attribute is determined from the Windows error code, and the "
"*errno* argument is ignored.  On other platforms, the *winerror* argument is "
"ignored, and the :attr:`winerror` attribute does not exist."
msgstr ""
"В Windows, если аргумент конструктора *winerror* является целым числом, "
"атрибут :attr:`.errno` определяется по коду ошибки Windows, а аргумент "
"*errno* игнорируется. На других платформах аргумент *winerror* игнорируется, "
"а атрибут :attr:`winerror` не существует."

#: ../../library/exceptions.rst:342
msgid ""
"The corresponding error message, as provided by the operating system.  It is "
"formatted by the C functions :c:func:`perror` under POSIX, and :c:func:"
"`FormatMessage` under Windows."
msgstr ""
"Соответствующее сообщение об ошибке, предоставленное операционной системой. "
"Он форматируется функциями C :c:func:`perror` в POSIX и :c:func:"
"`FormatMessage` в Windows."

#: ../../library/exceptions.rst:350
msgid ""
"For exceptions that involve a file system path (such as :func:`open` or :"
"func:`os.unlink`), :attr:`filename` is the file name passed to the function. "
"For functions that involve two file system paths (such as :func:`os."
"rename`), :attr:`filename2` corresponds to the second file name passed to "
"the function."
msgstr ""
"Для исключений, связанных с путем к файловой системе (например, :func:`open` "
"или :func:`os.unlink`), :attr:`filename` — это имя файла, передаваемое "
"функции. Для функций, которые используют два пути файловой системы "
"(например, :func:`os.rename`), :attr:`filename2` соответствует второму имени "
"файла, переданному функции."

#: ../../library/exceptions.rst:357
msgid ""
":exc:`EnvironmentError`, :exc:`IOError`, :exc:`WindowsError`, :exc:`socket."
"error`, :exc:`select.error` and :exc:`mmap.error` have been merged into :exc:"
"`OSError`, and the constructor may return a subclass."
msgstr ""
":exc:`EnvironmentError`, :exc:`IOError`, :exc:`WindowsError`, :exc:`socket."
"error`, :exc:`select.error` и :exc:`mmap.error` были объединены в :exc:"
"`OSError`, и конструктор может вернуть подкласс."

#: ../../library/exceptions.rst:363
msgid ""
"The :attr:`filename` attribute is now the original file name passed to the "
"function, instead of the name encoded to or decoded from the :term:"
"`filesystem encoding and error handler`. Also, the *filename2* constructor "
"argument and attribute was added."
msgstr ""
"Атрибут :attr:`filename` теперь является исходным именем файла, передаваемым "
"в функцию, а не именем, закодированным или декодированным из :term:"
"`кодирования файловой системы и обработчика ошибок`. Кроме того, были "
"добавлены аргумент и атрибут конструктора *filename2*."

#: ../../library/exceptions.rst:372
msgid ""
"Raised when the result of an arithmetic operation is too large to be "
"represented.  This cannot occur for integers (which would rather raise :exc:"
"`MemoryError` than give up).  However, for historical reasons, OverflowError "
"is sometimes raised for integers that are outside a required range.   "
"Because of the lack of standardization of floating point exception handling "
"in C, most floating point operations are not checked."
msgstr ""

#: ../../library/exceptions.rst:382
msgid ""
"This exception is derived from :exc:`RuntimeError`.  It is raised when the "
"interpreter detects that the maximum recursion depth (see :func:`sys."
"getrecursionlimit`) is exceeded."
msgstr ""
"Это исключение является производным от :exc:`RuntimeError`. Он возникает, "
"когда интерпретатор обнаруживает, что максимальная глубина рекурсии (см. :"
"func:`sys.getrecursionlimit`) превышена."

#: ../../library/exceptions.rst:386
msgid "Previously, a plain :exc:`RuntimeError` was raised."
msgstr "Ранее возникало простое сообщение :exc:`RuntimeError`."

#: ../../library/exceptions.rst:392
msgid ""
"This exception is raised when a weak reference proxy, created by the :func:"
"`weakref.proxy` function, is used to access an attribute of the referent "
"after it has been garbage collected. For more information on weak "
"references, see the :mod:`weakref` module."
msgstr ""
"Это исключение возникает, когда слабый ссылочный прокси, созданный функцией :"
"func:`weakref.proxy`, используется для доступа к атрибуту референта после "
"его сборки мусора. Дополнительную информацию о слабых ссылках см. в модуле :"
"mod:`weakref`."

#: ../../library/exceptions.rst:400
msgid ""
"Raised when an error is detected that doesn't fall in any of the other "
"categories.  The associated value is a string indicating what precisely went "
"wrong."
msgstr ""
"Возникает при обнаружении ошибки, не подпадающей ни под одну из других "
"категорий. Соответствующее значение представляет собой строку, указывающую, "
"что именно пошло не так."

#: ../../library/exceptions.rst:407
msgid ""
"Raised by built-in function :func:`next` and an :term:`iterator`\\'s :meth:"
"`~iterator.__next__` method to signal that there are no further items "
"produced by the iterator."
msgstr ""
"Вызывается встроенной функцией :func:`next` и методом :term:`iterator`\\ :"
"meth:`~iterator.__next__`, чтобы сигнализировать о том, что итератор больше "
"не создает элементов."

#: ../../library/exceptions.rst:411
msgid ""
"The exception object has a single attribute :attr:`value`, which is given as "
"an argument when constructing the exception, and defaults to :const:`None`."
msgstr ""

#: ../../library/exceptions.rst:415
msgid ""
"When a :term:`generator` or :term:`coroutine` function returns, a new :exc:"
"`StopIteration` instance is raised, and the value returned by the function "
"is used as the :attr:`value` parameter to the constructor of the exception."
msgstr ""
"Когда функция :term:`generator` или :term:`coroutine` возвращает значение, "
"создается новый экземпляр :exc:`StopIteration`, и значение, возвращаемое "
"функцией, используется в качестве параметра :attr:`value` для конструктор "
"исключения."

#: ../../library/exceptions.rst:420
msgid ""
"If a generator code directly or indirectly raises :exc:`StopIteration`, it "
"is converted into a :exc:`RuntimeError` (retaining the :exc:`StopIteration` "
"as the new exception's cause)."
msgstr ""
"Если код генератора прямо или косвенно вызывает :exc:`StopIteration`, он "
"преобразуется в :exc:`RuntimeError` (сохраняя :exc:`StopIteration` как "
"причину нового исключения)."

#: ../../library/exceptions.rst:424
msgid ""
"Added ``value`` attribute and the ability for generator functions to use it "
"to return a value."
msgstr ""
"Добавлен атрибут value и возможность функций-генераторов использовать его "
"для возврата значения."

#: ../../library/exceptions.rst:428
msgid ""
"Introduced the RuntimeError transformation via ``from __future__ import "
"generator_stop``, see :pep:`479`."
msgstr ""
"Введено преобразование RuntimeError через ``from __future__ "
"importgenerator_stop``, см. :pep:`479`."

#: ../../library/exceptions.rst:432
msgid ""
"Enable :pep:`479` for all code by default: a :exc:`StopIteration` error "
"raised in a generator is transformed into a :exc:`RuntimeError`."
msgstr ""
"Включите :pep:`479` для всего кода по умолчанию: ошибка :exc:"
"`StopIteration`, возникающая в генераторе, преобразуется в :exc:"
"`RuntimeError`."

#: ../../library/exceptions.rst:438
msgid ""
"Must be raised by :meth:`__anext__` method of an :term:`asynchronous "
"iterator` object to stop the iteration."
msgstr ""

#: ../../library/exceptions.rst:445
msgid ""
"Raised when the parser encounters a syntax error.  This may occur in an :"
"keyword:`import` statement, in a call to the built-in functions :func:"
"`compile`, :func:`exec`, or :func:`eval`, or when reading the initial script "
"or standard input (also interactively)."
msgstr ""
"Возникает, когда синтаксический анализатор обнаруживает синтаксическую "
"ошибку. Это может произойти в операторе :keyword:`import`, при вызове "
"встроенных функций :func:`compile`, :func:`exec` или :func:`eval` или при "
"чтении исходного скрипта. или стандартный ввод (также в интерактивном "
"режиме)."

#: ../../library/exceptions.rst:451
msgid ""
"The :func:`str` of the exception instance returns only the error message. "
"Details is a tuple whose members are also available as separate attributes."
msgstr ""
":func:`str` экземпляра исключения возвращает только сообщение об ошибке. "
"Details — это кортеж, члены которого также доступны как отдельные атрибуты."

#: ../../library/exceptions.rst:456
msgid "The name of the file the syntax error occurred in."
msgstr "Имя файла, в котором произошла синтаксическая ошибка."

#: ../../library/exceptions.rst:460
msgid ""
"Which line number in the file the error occurred in. This is 1-indexed: the "
"first line in the file has a ``lineno`` of 1."
msgstr ""
"В каком номере строки в файле произошла ошибка. Индексируется 1: первая "
"строка в файле имеет ``lineno``, равный 1."

#: ../../library/exceptions.rst:465
msgid ""
"The column in the line where the error occurred. This is 1-indexed: the "
"first character in the line has an ``offset`` of 1."
msgstr ""
"Столбец в строке, в которой произошла ошибка. Это индекс 1: первый символ в "
"строке имеет смещение, равное 1."

#: ../../library/exceptions.rst:470
msgid "The source code text involved in the error."
msgstr "Текст исходного кода, связанный с ошибкой."

#: ../../library/exceptions.rst:474
msgid ""
"Which line number in the file the error occurred ends in. This is 1-indexed: "
"the first line in the file has a ``lineno`` of 1."
msgstr ""
"На каком номере строки в файле заканчивается ошибка. Это индекс 1: первая "
"строка в файле имеет ``lineno``, равный 1."

#: ../../library/exceptions.rst:479
msgid ""
"The column in the end line where the error occurred finishes. This is 1-"
"indexed: the first character in the line has an ``offset`` of 1."
msgstr ""
"Столбец в конечной строке, в котором произошла ошибка, заканчивается. Это "
"индекс 1: первый символ в строке имеет смещение, равное 1."

#: ../../library/exceptions.rst:482
msgid ""
"For errors in f-string fields, the message is prefixed by \"f-string: \" and "
"the offsets are offsets in a text constructed from the replacement "
"expression.  For example, compiling f'Bad {a b} field' results in this args "
"attribute: ('f-string: ...', ('', 1, 2, '(a b)\\n', 1, 5))."
msgstr ""
"В случае ошибок в полях f-строки сообщение начинается с префикса «f-"
"строка:», а смещения представляют собой смещения в тексте, созданном на "
"основе выражения замены. Например, компиляция поля f'Bad {ab}' приводит к "
"следующему атрибуту args: ('f-string: ...', ('', 1, 2, '(ab)\\n', 1, 5)) ."

#: ../../library/exceptions.rst:487
msgid "Added the :attr:`end_lineno` and :attr:`end_offset` attributes."
msgstr "Добавлены атрибуты :attr:`end_lineno` и :attr:`end_offset`."

#: ../../library/exceptions.rst:492
msgid ""
"Base class for syntax errors related to incorrect indentation.  This is a "
"subclass of :exc:`SyntaxError`."
msgstr ""
"Базовый класс для синтаксических ошибок, связанных с неправильным отступом. "
"Это подкласс :exc:`SyntaxError`."

#: ../../library/exceptions.rst:498
msgid ""
"Raised when indentation contains an inconsistent use of tabs and spaces. "
"This is a subclass of :exc:`IndentationError`."
msgstr ""
"Возникает, когда отступ содержит непоследовательное использование табуляции "
"и пробелов. Это подкласс :exc:`IndentationError`."

#: ../../library/exceptions.rst:504
msgid ""
"Raised when the interpreter finds an internal error, but the situation does "
"not look so serious to cause it to abandon all hope. The associated value is "
"a string indicating what went wrong (in low-level terms)."
msgstr ""
"Возникает, когда интерпретатор обнаруживает внутреннюю ошибку, но ситуация "
"не выглядит настолько серьезной, чтобы заставить его отказаться от всякой "
"надежды. Связанное значение представляет собой строку, указывающую, что "
"пошло не так (в терминах низкого уровня)."

#: ../../library/exceptions.rst:508
msgid ""
"You should report this to the author or maintainer of your Python "
"interpreter. Be sure to report the version of the Python interpreter (``sys."
"version``; it is also printed at the start of an interactive Python "
"session), the exact error message (the exception's associated value) and if "
"possible the source of the program that triggered the error."
msgstr ""
"Вы должны сообщить об этом автору или сопровождающему вашего интерпретатора "
"Python. Обязательно сообщите версию интерпретатора Python («sys.version»; "
"она также выводится в начале интерактивного сеанса Python), точное сообщение "
"об ошибке (значение, связанное с исключением) и, если возможно, источник "
"программа, вызвавшая ошибку."

#: ../../library/exceptions.rst:517
msgid ""
"This exception is raised by the :func:`sys.exit` function.  It inherits "
"from :exc:`BaseException` instead of :exc:`Exception` so that it is not "
"accidentally caught by code that catches :exc:`Exception`.  This allows the "
"exception to properly propagate up and cause the interpreter to exit.  When "
"it is not handled, the Python interpreter exits; no stack traceback is "
"printed.  The constructor accepts the same optional argument passed to :func:"
"`sys.exit`. If the value is an integer, it specifies the system exit status "
"(passed to C's :c:func:`exit` function); if it is ``None``, the exit status "
"is zero; if it has another type (such as a string), the object's value is "
"printed and the exit status is one."
msgstr ""
"Это исключение вызывается функцией :func:`sys.exit`. Он наследуется от :exc:"
"`BaseException` вместо :exc:`Exception`, чтобы случайно не перехватиться "
"кодом, который перехватывает :exc:`Exception`. Это позволяет исключению "
"правильно распространяться и вызывать завершение работы интерпретатора. Если "
"он не обработан, интерпретатор Python завершает работу; обратная трассировка "
"стека не печатается. Конструктор принимает тот же необязательный аргумент, "
"который передается в :func:`sys.exit`. Если значение является целым числом, "
"оно определяет статус выхода системы (передается в функцию C :c:func:"
"`exit`); если это ``None``, статус выхода равен нулю; если он имеет другой "
"тип (например, строку), значение объекта печатается, и статус выхода равен "
"единице."

#: ../../library/exceptions.rst:528
msgid ""
"A call to :func:`sys.exit` is translated into an exception so that clean-up "
"handlers (:keyword:`finally` clauses of :keyword:`try` statements) can be "
"executed, and so that a debugger can execute a script without running the "
"risk of losing control.  The :func:`os._exit` function can be used if it is "
"absolutely positively necessary to exit immediately (for example, in the "
"child process after a call to :func:`os.fork`)."
msgstr ""
"Вызов :func:`sys.exit` преобразуется в исключение, чтобы можно было "
"выполнить обработчики очистки (предложения :keyword:`finally` операторов :"
"keyword:`try`) и чтобы отладчик мог выполнить сценарий без риска потери "
"контроля. Функцию :func:`os._exit` можно использовать, если абсолютно "
"необходимо немедленно завершить работу (например, в дочернем процессе после "
"вызова :func:`os.fork`)."

#: ../../library/exceptions.rst:537
msgid ""
"The exit status or error message that is passed to the constructor. "
"(Defaults to ``None``.)"
msgstr ""
"Статус завершения или сообщение об ошибке, передаваемое конструктору. (По "
"умолчанию «Нет».)"

#: ../../library/exceptions.rst:543
msgid ""
"Raised when an operation or function is applied to an object of "
"inappropriate type.  The associated value is a string giving details about "
"the type mismatch."
msgstr ""
"Возникает, когда операция или функция применяется к объекту неподходящего "
"типа. Связанное значение представляет собой строку, предоставляющую "
"подробную информацию о несоответствии типов."

#: ../../library/exceptions.rst:546
msgid ""
"This exception may be raised by user code to indicate that an attempted "
"operation on an object is not supported, and is not meant to be. If an "
"object is meant to support a given operation but has not yet provided an "
"implementation, :exc:`NotImplementedError` is the proper exception to raise."
msgstr ""
"Это исключение может быть вызвано пользовательским кодом, чтобы указать, что "
"попытка операции с объектом не поддерживается и не должна поддерживаться. "
"Если объект предназначен для поддержки данной операции, но еще не "
"предоставил реализацию, подходящим исключением является исключение :exc:"
"`NotImplementedError`."

#: ../../library/exceptions.rst:551
msgid ""
"Passing arguments of the wrong type (e.g. passing a :class:`list` when an :"
"class:`int` is expected) should result in a :exc:`TypeError`, but passing "
"arguments with the wrong value (e.g. a number outside expected boundaries) "
"should result in a :exc:`ValueError`."
msgstr ""
"Передача аргументов неправильного типа (например, передача :class:`list`, "
"когда ожидается :class:`int`) должна привести к :exc:`TypeError`, но "
"передача аргументов с неправильным значением (например, числом вне ожидаемые "
"границы) должно привести к ошибке :exc:`ValueError`."

#: ../../library/exceptions.rst:558
msgid ""
"Raised when a reference is made to a local variable in a function or method, "
"but no value has been bound to that variable.  This is a subclass of :exc:"
"`NameError`."
msgstr ""
"Возникает, когда делается ссылка на локальную переменную в функции или "
"методе, но к этой переменной не привязано никакое значение. Это подкласс :"
"exc:`NameError`."

#: ../../library/exceptions.rst:565
msgid ""
"Raised when a Unicode-related encoding or decoding error occurs.  It is a "
"subclass of :exc:`ValueError`."
msgstr ""
"Возникает при возникновении ошибки кодирования или декодирования, связанной "
"с Unicode. Это подкласс :exc:`ValueError`."

#: ../../library/exceptions.rst:568
msgid ""
":exc:`UnicodeError` has attributes that describe the encoding or decoding "
"error.  For example, ``err.object[err.start:err.end]`` gives the particular "
"invalid input that the codec failed on."
msgstr ""
":exc:`UnicodeError` имеет атрибуты, описывающие ошибку кодирования или "
"декодирования. Например, ``err.object[err.start:err.end]`` дает конкретный "
"недопустимый входной сигнал, с которым произошел сбой кодека."

#: ../../library/exceptions.rst:574
msgid "The name of the encoding that raised the error."
msgstr "Название кодировки, из-за которой возникла ошибка."

#: ../../library/exceptions.rst:578
msgid "A string describing the specific codec error."
msgstr "Строка, описывающая конкретную ошибку кодека."

#: ../../library/exceptions.rst:582
msgid "The object the codec was attempting to encode or decode."
msgstr "Объект, который кодек пытался закодировать или декодировать."

#: ../../library/exceptions.rst:586
msgid "The first index of invalid data in :attr:`object`."
msgstr "Первый индекс недопустимых данных в :attr:`object`."

#: ../../library/exceptions.rst:590
msgid "The index after the last invalid data in :attr:`object`."
msgstr "Индекс после последних недопустимых данных в :attr:`object`."

#: ../../library/exceptions.rst:595
msgid ""
"Raised when a Unicode-related error occurs during encoding.  It is a "
"subclass of :exc:`UnicodeError`."
msgstr ""
"Возникает, когда во время кодирования возникает ошибка, связанная с Unicode. "
"Это подкласс :exc:`UnicodeError`."

#: ../../library/exceptions.rst:601
msgid ""
"Raised when a Unicode-related error occurs during decoding.  It is a "
"subclass of :exc:`UnicodeError`."
msgstr ""
"Возникает, когда во время декодирования возникает ошибка, связанная с "
"Unicode. Это подкласс :exc:`UnicodeError`."

#: ../../library/exceptions.rst:607
msgid ""
"Raised when a Unicode-related error occurs during translating.  It is a "
"subclass of :exc:`UnicodeError`."
msgstr ""
"Возникает, когда во время перевода возникает ошибка, связанная с Unicode. "
"Это подкласс :exc:`UnicodeError`."

#: ../../library/exceptions.rst:613
msgid ""
"Raised when an operation or function receives an argument that has the right "
"type but an inappropriate value, and the situation is not described by a "
"more precise exception such as :exc:`IndexError`."
msgstr ""
"Возникает, когда операция или функция получает аргумент правильного типа, но "
"неподходящего значения, и ситуация не описывается более точным исключением, "
"например :exc:`IndexError`."

#: ../../library/exceptions.rst:620
msgid ""
"Raised when the second argument of a division or modulo operation is zero.  "
"The associated value is a string indicating the type of the operands and the "
"operation."
msgstr ""
"Возникает, когда второй аргумент операции деления или по модулю равен нулю. "
"Связанное значение представляет собой строку, указывающую тип операндов и "
"операцию."

#: ../../library/exceptions.rst:625
msgid ""
"The following exceptions are kept for compatibility with previous versions; "
"starting from Python 3.3, they are aliases of :exc:`OSError`."
msgstr ""
"Следующие исключения сохранены для совместимости с предыдущими версиями; "
"начиная с Python 3.3, они являются псевдонимами :exc:`OSError`."

#: ../../library/exceptions.rst:634
msgid "Only available on Windows."
msgstr "Доступно только в Windows."

#: ../../library/exceptions.rst:638
msgid "OS exceptions"
msgstr "Исключения операционной системы"

#: ../../library/exceptions.rst:640
msgid ""
"The following exceptions are subclasses of :exc:`OSError`, they get raised "
"depending on the system error code."
msgstr ""
"Следующие исключения являются подклассами :exc:`OSError`, они возникают в "
"зависимости от кода системной ошибки."

#: ../../library/exceptions.rst:645
msgid ""
"Raised when an operation would block on an object (e.g. socket) set for non-"
"blocking operation. Corresponds to :c:data:`errno` :py:data:`~errno."
"EAGAIN`, :py:data:`~errno.EALREADY`, :py:data:`~errno.EWOULDBLOCK` and :py:"
"data:`~errno.EINPROGRESS`."
msgstr ""

#: ../../library/exceptions.rst:650
msgid ""
"In addition to those of :exc:`OSError`, :exc:`BlockingIOError` can have one "
"more attribute:"
msgstr ""
"В дополнение к атрибутам :exc:`OSError`, :exc:`BlockingIOError` может иметь "
"еще один атрибут:"

#: ../../library/exceptions.rst:655
msgid ""
"An integer containing the number of characters written to the stream before "
"it blocked.  This attribute is available when using the buffered I/O classes "
"from the :mod:`io` module."
msgstr ""
"Целое число, содержащее количество символов, записанных в поток до его "
"блокировки. Этот атрибут доступен при использовании буферизованных классов "
"ввода-вывода из модуля :mod:`io`."

#: ../../library/exceptions.rst:661
msgid ""
"Raised when an operation on a child process failed. Corresponds to :c:data:"
"`errno` :py:data:`~errno.ECHILD`."
msgstr ""

#: ../../library/exceptions.rst:666
msgid "A base class for connection-related issues."
msgstr "Базовый класс для проблем, связанных с подключением."

#: ../../library/exceptions.rst:668
msgid ""
"Subclasses are :exc:`BrokenPipeError`, :exc:`ConnectionAbortedError`, :exc:"
"`ConnectionRefusedError` and :exc:`ConnectionResetError`."
msgstr ""
"Подклассами являются :exc:`BrokenPipeError`, :exc:`ConnectionAbortedError`, :"
"exc:`ConnectionRefusedError` и :exc:`ConnectionResetError`."

#: ../../library/exceptions.rst:673
msgid ""
"A subclass of :exc:`ConnectionError`, raised when trying to write on a pipe "
"while the other end has been closed, or trying to write on a socket which "
"has been shutdown for writing. Corresponds to :c:data:`errno` :py:data:"
"`~errno.EPIPE` and :py:data:`~errno.ESHUTDOWN`."
msgstr ""

#: ../../library/exceptions.rst:680
msgid ""
"A subclass of :exc:`ConnectionError`, raised when a connection attempt is "
"aborted by the peer. Corresponds to :c:data:`errno` :py:data:`~errno."
"ECONNABORTED`."
msgstr ""

#: ../../library/exceptions.rst:686
msgid ""
"A subclass of :exc:`ConnectionError`, raised when a connection attempt is "
"refused by the peer. Corresponds to :c:data:`errno` :py:data:`~errno."
"ECONNREFUSED`."
msgstr ""

#: ../../library/exceptions.rst:692
msgid ""
"A subclass of :exc:`ConnectionError`, raised when a connection is reset by "
"the peer. Corresponds to :c:data:`errno` :py:data:`~errno.ECONNRESET`."
msgstr ""

#: ../../library/exceptions.rst:698
msgid ""
"Raised when trying to create a file or directory which already exists. "
"Corresponds to :c:data:`errno` :py:data:`~errno.EEXIST`."
msgstr ""

#: ../../library/exceptions.rst:703
msgid ""
"Raised when a file or directory is requested but doesn't exist. Corresponds "
"to :c:data:`errno` :py:data:`~errno.ENOENT`."
msgstr ""

#: ../../library/exceptions.rst:708
msgid ""
"Raised when a system call is interrupted by an incoming signal. Corresponds "
"to :c:data:`errno` :py:data:`~errno.EINTR`."
msgstr ""

#: ../../library/exceptions.rst:711
msgid ""
"Python now retries system calls when a syscall is interrupted by a signal, "
"except if the signal handler raises an exception (see :pep:`475` for the "
"rationale), instead of raising :exc:`InterruptedError`."
msgstr ""
"Python теперь повторяет системные вызовы, когда системный вызов прерывается "
"сигналом, за исключением случаев, когда обработчик сигнала вызывает "
"исключение (обоснование см. в :pep:`475`), вместо вызова :exc:"
"`InterruptedError`."

#: ../../library/exceptions.rst:718
msgid ""
"Raised when a file operation (such as :func:`os.remove`) is requested on a "
"directory. Corresponds to :c:data:`errno` :py:data:`~errno.EISDIR`."
msgstr ""

#: ../../library/exceptions.rst:724
msgid ""
"Raised when a directory operation (such as :func:`os.listdir`) is requested "
"on something which is not a directory.  On most POSIX platforms, it may also "
"be raised if an operation attempts to open or traverse a non-directory file "
"as if it were a directory. Corresponds to :c:data:`errno` :py:data:`~errno."
"ENOTDIR`."
msgstr ""

#: ../../library/exceptions.rst:732
msgid ""
"Raised when trying to run an operation without the adequate access rights - "
"for example filesystem permissions. Corresponds to :c:data:`errno` :py:data:"
"`~errno.EACCES` and :py:data:`~errno.EPERM`."
msgstr ""

#: ../../library/exceptions.rst:738
msgid ""
"Raised when a given process doesn't exist. Corresponds to :c:data:`errno` :"
"py:data:`~errno.ESRCH`."
msgstr ""

#: ../../library/exceptions.rst:743
msgid ""
"Raised when a system function timed out at the system level. Corresponds to :"
"c:data:`errno` :py:data:`~errno.ETIMEDOUT`."
msgstr ""

#: ../../library/exceptions.rst:746
msgid "All the above :exc:`OSError` subclasses were added."
msgstr "Были добавлены все вышеперечисленные подклассы :exc:`OSError`."

#: ../../library/exceptions.rst:752
msgid ":pep:`3151` - Reworking the OS and IO exception hierarchy"
msgstr ":pep:`3151` - Переработка иерархии исключений ОС и ввода-вывода."

#: ../../library/exceptions.rst:758
msgid "Warnings"
msgstr "Предупреждения"

#: ../../library/exceptions.rst:760
msgid ""
"The following exceptions are used as warning categories; see the :ref:"
"`warning-categories` documentation for more details."
msgstr ""
"Следующие исключения используются в качестве категорий предупреждений; "
"дополнительную информацию см. в документации :ref:`warning-categories`."

#: ../../library/exceptions.rst:765
msgid "Base class for warning categories."
msgstr "Базовый класс для категорий предупреждений."

#: ../../library/exceptions.rst:770
msgid "Base class for warnings generated by user code."
msgstr "Базовый класс для предупреждений, генерируемых пользовательским кодом."

#: ../../library/exceptions.rst:775
msgid ""
"Base class for warnings about deprecated features when those warnings are "
"intended for other Python developers."
msgstr ""
"Базовый класс для предупреждений об устаревших функциях, если эти "
"предупреждения предназначены для других разработчиков Python."

#: ../../library/exceptions.rst:778
msgid ""
"Ignored by the default warning filters, except in the ``__main__`` module (:"
"pep:`565`). Enabling the :ref:`Python Development Mode <devmode>` shows this "
"warning."
msgstr ""
"Игнорируется фильтрами предупреждений по умолчанию, за исключением модуля "
"``__main__`` (:pep:`565`). Включение :ref:`Режима разработки Python "
"<devmode>` отображает это предупреждение."

#: ../../library/exceptions.rst:782 ../../library/exceptions.rst:798
msgid "The deprecation policy is described in :pep:`387`."
msgstr "Политика прекращения поддержки описана в :pep:`387`."

#: ../../library/exceptions.rst:787
msgid ""
"Base class for warnings about features which are obsolete and expected to be "
"deprecated in the future, but are not deprecated at the moment."
msgstr ""
"Базовый класс для предупреждений об устаревших функциях, которые, как "
"ожидается, станут устаревшими в будущем, но не устарели в данный момент."

#: ../../library/exceptions.rst:791
msgid ""
"This class is rarely used as emitting a warning about a possible upcoming "
"deprecation is unusual, and :exc:`DeprecationWarning` is preferred for "
"already active deprecations."
msgstr ""
"Этот класс используется редко, поскольку выдача предупреждения о возможном "
"предстоящем прекращении поддержки является необычной, и :exc:"
"`DeprecationWarning` предпочтительнее для уже активных исключений."

#: ../../library/exceptions.rst:795 ../../library/exceptions.rst:821
#: ../../library/exceptions.rst:848
msgid ""
"Ignored by the default warning filters. Enabling the :ref:`Python "
"Development Mode <devmode>` shows this warning."
msgstr ""
"Игнорируется фильтрами предупреждений по умолчанию. Включение :ref:`Режима "
"разработки Python <devmode>` отображает это предупреждение."

#: ../../library/exceptions.rst:803
msgid "Base class for warnings about dubious syntax."
msgstr "Базовый класс для предупреждений о сомнительном синтаксисе."

#: ../../library/exceptions.rst:808
msgid "Base class for warnings about dubious runtime behavior."
msgstr ""
"Базовый класс для предупреждений о сомнительном поведении во время "
"выполнения."

#: ../../library/exceptions.rst:813
msgid ""
"Base class for warnings about deprecated features when those warnings are "
"intended for end users of applications that are written in Python."
msgstr ""
"Базовый класс для предупреждений об устаревших функциях, если эти "
"предупреждения предназначены для конечных пользователей приложений, "
"написанных на Python."

#: ../../library/exceptions.rst:819
msgid "Base class for warnings about probable mistakes in module imports."
msgstr ""
"Базовый класс для предупреждений о возможных ошибках при импорте модулей."

#: ../../library/exceptions.rst:827
msgid "Base class for warnings related to Unicode."
msgstr "Базовый класс для предупреждений, связанных с Unicode."

#: ../../library/exceptions.rst:832
msgid "Base class for warnings related to encodings."
msgstr "Базовый класс для предупреждений, связанных с кодировками."

#: ../../library/exceptions.rst:834
msgid "See :ref:`io-encoding-warning` for details."
msgstr "Подробности см. в :ref:`io-encoding-warning`."

#: ../../library/exceptions.rst:841
msgid ""
"Base class for warnings related to :class:`bytes` and :class:`bytearray`."
msgstr ""
"Базовый класс для предупреждений, связанных с :class:`bytes` и :class:"
"`bytearray`."

#: ../../library/exceptions.rst:846
msgid "Base class for warnings related to resource usage."
msgstr "Базовый класс для предупреждений, связанных с использованием ресурсов."

#: ../../library/exceptions.rst:856
msgid "Exception hierarchy"
msgstr "Иерархия исключений"

#: ../../library/exceptions.rst:858
msgid "The class hierarchy for built-in exceptions is:"
msgstr "Иерархия классов для встроенных исключений такова:"
