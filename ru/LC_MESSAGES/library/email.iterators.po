# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# Rafael Fontenelle <rffontenelle@gmail.com>, 2024
# Roustam Khamidoulline, 2024
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.12\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-01-17 14:51+0000\n"
"PO-Revision-Date: 2024-05-11 00:33+0000\n"
"Last-Translator: Roustam Khamidoulline, 2024\n"
"Language-Team: Russian (https://app.transifex.com/python-doc/teams/5390/"
"ru/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ru\n"
"Plural-Forms: nplurals=4; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && "
"n%10<=4 && (n%100<12 || n%100>14) ? 1 : n%10==0 || (n%10>=5 && n%10<=9) || "
"(n%100>=11 && n%100<=14)? 2 : 3);\n"

#: ../../library/email.iterators.rst:2
msgid ":mod:`!email.iterators`: Iterators"
msgstr ":mod:`!email.iterators`: Итераторы"

#: ../../library/email.iterators.rst:7
msgid "**Source code:** :source:`Lib/email/iterators.py`"
msgstr "**Исходный код:** :source:`Lib/email/iterators.py`"

#: ../../library/email.iterators.rst:11
msgid ""
"Iterating over a message object tree is fairly easy with the :meth:`Message."
"walk <email.message.Message.walk>` method.  The :mod:`email.iterators` "
"module provides some useful higher level iterations over message object "
"trees."
msgstr ""
"Перебирать дерево объектов сообщений довольно легко с помощью метода :meth:"
"`Message.walk <email.message.Message.walk>`. Модуль :mod:`email.iterators` "
"обеспечивает несколько полезных итераций более высокого уровня над деревьями "
"объектов сообщений."

#: ../../library/email.iterators.rst:19
msgid ""
"This iterates over all the payloads in all the subparts of *msg*, returning "
"the string payloads line-by-line.  It skips over all the subpart headers, "
"and it skips over any subpart with a payload that isn't a Python string.  "
"This is somewhat equivalent to reading the flat text representation of the "
"message from a file using :meth:`~io.TextIOBase.readline`, skipping over all "
"the intervening headers."
msgstr ""
"Это перебирает все полезные данные во всех подразделах *msg*, возвращая "
"строковые полезные данные построчно. Он пропускает все заголовки "
"подразделов, а также любой подраздел, полезная нагрузка которого не является "
"строкой Python. Это в некоторой степени эквивалентно чтению плоского "
"текстового представления сообщения из файла с использованием :meth:`~io."
"TextIOBase.readline`, пропуская все промежуточные заголовки."

#: ../../library/email.iterators.rst:26
msgid ""
"Optional *decode* is passed through to :meth:`Message.get_payload <email."
"message.Message.get_payload>`."
msgstr ""
"Необязательный *decode* передается в :meth:`Message.get_payload <email."
"message.Message.get_payload>`."

#: ../../library/email.iterators.rst:32
msgid ""
"This iterates over all the subparts of *msg*, returning only those subparts "
"that match the MIME type specified by *maintype* and *subtype*."
msgstr ""
"При этом выполняются итерации по всем частям *msg*, возвращая только те "
"части, которые соответствуют типу MIME, указанному в *maintype* и *subtype*."

#: ../../library/email.iterators.rst:35
msgid ""
"Note that *subtype* is optional; if omitted, then subpart MIME type matching "
"is done only with the main type.  *maintype* is optional too; it defaults "
"to :mimetype:`text`."
msgstr ""
"Обратите внимание, что *subtype* не является обязательным; если этот "
"параметр опущен, то сопоставление типов MIME подразделов выполняется только "
"с основным типом. *maintype* также не является обязательным; по умолчанию "
"это :mimetype:`text`."

#: ../../library/email.iterators.rst:39
msgid ""
"Thus, by default :func:`typed_subpart_iterator` returns each subpart that "
"has a MIME type of :mimetype:`text/\\*`."
msgstr ""
"Таким образом, по умолчанию :func:`typed_subpart_iterator` возвращает каждую "
"подчасть, имеющую MIME-тип :mimetype:`text/\\*`."

#: ../../library/email.iterators.rst:43
msgid ""
"The following function has been added as a useful debugging tool.  It should "
"*not* be considered part of the supported public interface for the package."
msgstr ""
"Следующая функция была добавлена ​​как полезный инструмент отладки. Его *не* "
"следует считать частью поддерживаемого общедоступного интерфейса пакета."

#: ../../library/email.iterators.rst:48
msgid ""
"Prints an indented representation of the content types of the message object "
"structure.  For example:"
msgstr ""
"Печатает представление типов контента структуры объекта сообщения с "
"отступом. Например:"

#: ../../library/email.iterators.rst:57
msgid ""
">>> msg = email.message_from_file(somefile)\n"
">>> _structure(msg)\n"
"multipart/mixed\n"
"    text/plain\n"
"    text/plain\n"
"    multipart/digest\n"
"        message/rfc822\n"
"            text/plain\n"
"        message/rfc822\n"
"            text/plain\n"
"        message/rfc822\n"
"            text/plain\n"
"        message/rfc822\n"
"            text/plain\n"
"        message/rfc822\n"
"            text/plain\n"
"    text/plain"
msgstr ""
">>> msg = email.message_from_file(somefile)\n"
">>> _structure(msg)\n"
"multipart/mixed\n"
"    text/plain\n"
"    text/plain\n"
"    multipart/digest\n"
"        message/rfc822\n"
"            text/plain\n"
"        message/rfc822\n"
"            text/plain\n"
"        message/rfc822\n"
"            text/plain\n"
"        message/rfc822\n"
"            text/plain\n"
"        message/rfc822\n"
"            text/plain\n"
"    text/plain"

#: ../../library/email.iterators.rst:81
msgid ""
"Optional *fp* is a file-like object to print the output to.  It must be "
"suitable for Python's :func:`print` function.  *level* is used internally. "
"*include_default*, if true, prints the default type as well."
msgstr ""
"Необязательный *fp* — это файлоподобный объект, в который можно распечатать "
"выходные данные. Он должен подходить для функции Python :func:`print`. "
"*level* используется внутри. *include_default*, если true, также печатает "
"тип по умолчанию."
