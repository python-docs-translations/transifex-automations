# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# Rafael Fontenelle <rffontenelle@gmail.com>, 2024
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.11\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-01-10 15:26+0000\n"
"PO-Revision-Date: 2023-05-24 02:19+0000\n"
"Last-Translator: Rafael Fontenelle <rffontenelle@gmail.com>, 2024\n"
"Language-Team: Russian (https://app.transifex.com/python-doc/teams/5390/"
"ru/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ru\n"
"Plural-Forms: nplurals=4; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && "
"n%10<=4 && (n%100<12 || n%100>14) ? 1 : n%10==0 || (n%10>=5 && n%10<=9) || "
"(n%100>=11 && n%100<=14)? 2 : 3);\n"

#: ../../library/shutil.rst:2
msgid ":mod:`shutil` --- High-level file operations"
msgstr ""

#: ../../library/shutil.rst:10
msgid "**Source code:** :source:`Lib/shutil.py`"
msgstr "**Исходный код:** :source:`Lib/shutil.py`"

#: ../../library/shutil.rst:18
msgid ""
"The :mod:`shutil` module offers a number of high-level operations on files "
"and collections of files.  In particular, functions are provided  which "
"support file copying and removal. For operations on individual files, see "
"also the :mod:`os` module."
msgstr ""
"Модуль :mod:`shutil` предлагает ряд высокоуровневых операций над файлами и "
"коллекциями файлов. В частности, предусмотрены функции, поддерживающие "
"копирование и удаление файлов. Для операций с отдельными файлами см. также "
"модуль :mod:`os`."

#: ../../library/shutil.rst:25
msgid ""
"Even the higher-level file copying functions (:func:`shutil.copy`, :func:"
"`shutil.copy2`) cannot copy all file metadata."
msgstr ""
"Даже функции копирования файлов более высокого уровня (:func:`shutil.copy`, :"
"func:`shutil.copy2`) не могут скопировать все метаданные файла."

#: ../../library/shutil.rst:28
msgid ""
"On POSIX platforms, this means that file owner and group are lost as well as "
"ACLs.  On Mac OS, the resource fork and other metadata are not used. This "
"means that resources will be lost and file type and creator codes will not "
"be correct. On Windows, file owners, ACLs and alternate data streams are not "
"copied."
msgstr ""
"На платформах POSIX это означает, что владелец файла и группа теряются, а "
"также списки ACL. В Mac OS ветвь ресурса и другие метаданные не "
"используются. Это означает, что ресурсы будут потеряны, а тип файла и коды "
"создателя будут неверными. В Windows владельцы файлов, списки управления "
"доступом и альтернативные потоки данных не копируются."

#: ../../library/shutil.rst:38
msgid "Directory and files operations"
msgstr "Операции с каталогами и файлами"

#: ../../library/shutil.rst:42
msgid ""
"Copy the contents of the :term:`file-like object <file object>` *fsrc* to "
"the file-like object *fdst*. The integer *length*, if given, is the buffer "
"size. In particular, a negative *length* value means to copy the data "
"without looping over the source data in chunks; by default the data is read "
"in chunks to avoid uncontrolled memory consumption. Note that if the current "
"file position of the *fsrc* object is not 0, only the contents from the "
"current file position to the end of the file will be copied."
msgstr ""
"Скопируйте содержимое :term:`файлоподобного объекта <файловый объект>` "
"*fsrc* в файловоподобный объект *fdst*. Целое число *длина*, если оно "
"указано, представляет собой размер буфера. В частности, отрицательное "
"значение *длины* означает копирование данных без циклического перебора "
"исходных данных частями; по умолчанию данные считываются порциями, чтобы "
"избежать неконтролируемого потребления памяти. Обратите внимание: если "
"текущая позиция объекта *fsrc* в файле не равна 0, будет скопировано только "
"содержимое от текущей позиции до конца файла."

#: ../../library/shutil.rst:53
msgid ""
"Copy the contents (no metadata) of the file named *src* to a file named "
"*dst* and return *dst* in the most efficient way possible. *src* and *dst* "
"are :term:`path-like objects <path-like object>` or path names given as "
"strings."
msgstr ""
"Скопируйте содержимое (без метаданных) файла с именем *src* в файл с именем "
"*dst* и верните *dst* наиболее эффективным способом. *src* и *dst* — это :"
"term:`объекты, подобные пути <объект, подобный пути>` или имена путей, "
"заданные в виде строк."

#: ../../library/shutil.rst:57
msgid ""
"*dst* must be the complete target file name; look at :func:`~shutil.copy` "
"for a copy that accepts a target directory path.  If *src* and *dst* specify "
"the same file, :exc:`SameFileError` is raised."
msgstr ""
"*dst* должно быть полным именем целевого файла; посмотрите :func:`~shutil."
"copy` на наличие копии, которая принимает путь к целевому каталогу. Если "
"*src* и *dst* указывают один и тот же файл, возникает :exc:`SameFileError`."

#: ../../library/shutil.rst:61
msgid ""
"The destination location must be writable; otherwise, an :exc:`OSError` "
"exception will be raised. If *dst* already exists, it will be replaced. "
"Special files such as character or block devices and pipes cannot be copied "
"with this function."
msgstr ""
"Местоположение назначения должно быть доступно для записи; в противном "
"случае будет выдано исключение :exc:`OSError`. Если *dst* уже существует, "
"оно будет заменено. Специальные файлы, такие как символьные или блочные "
"устройства и каналы, не могут быть скопированы с помощью этой функции."

#: ../../library/shutil.rst:66
msgid ""
"If *follow_symlinks* is false and *src* is a symbolic link, a new symbolic "
"link will be created instead of copying the file *src* points to."
msgstr ""
"Если *follow_symlinks* имеет значение false и *src* является символической "
"ссылкой, вместо копирования файла, на который указывает *src*, будет создана "
"новая символическая ссылка."

#: ../../library/shutil.rst:70 ../../library/shutil.rst:177
#: ../../library/shutil.rst:208
msgid ""
"Raises an :ref:`auditing event <auditing>` ``shutil.copyfile`` with "
"arguments ``src``, ``dst``."
msgstr ""
"Вызывает событие аудита <auditing>`shutil.copyfile`` с аргументами ``src``, "
"``dst``."

#: ../../library/shutil.rst:72
msgid ""
":exc:`IOError` used to be raised instead of :exc:`OSError`. Added "
"*follow_symlinks* argument. Now returns *dst*."
msgstr ""
":exc:`IOError` раньше вызывался вместо :exc:`OSError`. Добавлен аргумент "
"*follow_symlinks*. Теперь возвращает *dst*."

#: ../../library/shutil.rst:77
msgid ""
"Raise :exc:`SameFileError` instead of :exc:`Error`.  Since the former is a "
"subclass of the latter, this change is backward compatible."
msgstr ""
"Поднимите :exc:`SameFileError` вместо :exc:`Error`. Поскольку первый "
"является подклассом второго, это изменение обратно совместимо."

#: ../../library/shutil.rst:81 ../../library/shutil.rst:185
#: ../../library/shutil.rst:217 ../../library/shutil.rst:287
#: ../../library/shutil.rst:384
msgid ""
"Platform-specific fast-copy syscalls may be used internally in order to copy "
"the file more efficiently. See :ref:`shutil-platform-dependent-efficient-"
"copy-operations` section."
msgstr ""
"Для более эффективного копирования файла можно использовать системные вызовы "
"быстрого копирования, зависящие от платформы. См. раздел «shutil-платформо-"
"зависимые-эффективные-операции копирования»."

#: ../../library/shutil.rst:88
msgid ""
"This exception is raised if source and destination in :func:`copyfile` are "
"the same file."
msgstr ""
"Это исключение возникает, если источник и место назначения в :func:"
"`copyfile` являются одним и тем же файлом."

#: ../../library/shutil.rst:96
msgid ""
"Copy the permission bits from *src* to *dst*.  The file contents, owner, and "
"group are unaffected.  *src* and *dst* are :term:`path-like objects <path-"
"like object>` or path names given as strings. If *follow_symlinks* is false, "
"and both *src* and *dst* are symbolic links, :func:`copymode` will attempt "
"to modify the mode of *dst* itself (rather than the file it points to).  "
"This functionality is not available on every platform; please see :func:"
"`copystat` for more information.  If :func:`copymode` cannot modify symbolic "
"links on the local platform, and it is asked to do so, it will do nothing "
"and return."
msgstr ""
"Скопируйте биты разрешений из *src* в *dst*. Содержимое файла, владелец и "
"группа не затрагиваются. *src* и *dst* — это :term:`объекты, подобные пути "
"<объект, подобный пути>` или имена путей, заданные в виде строк. Если "
"*follow_symlinks* имеет значение false, и оба *src* и *dst* являются "
"символическими ссылками, :func:`copymode` попытается изменить режим самого "
"*dst* (а не файла, на который он указывает). Эта функция доступна не на "
"каждой платформе; пожалуйста, смотрите :func:`copystat` для получения "
"дополнительной информации. Если :func:`copymode` не может изменить "
"символические ссылки на локальной платформе, и его попросят это сделать, он "
"ничего не сделает и вернется."

#: ../../library/shutil.rst:106 ../../library/shutil.rst:179
msgid ""
"Raises an :ref:`auditing event <auditing>` ``shutil.copymode`` with "
"arguments ``src``, ``dst``."
msgstr ""
"Вызывает :ref:`событие аудита <auditing>``shutil.copymode`` с аргументами "
"``src``, ``dst``."

#: ../../library/shutil.rst:108
msgid "Added *follow_symlinks* argument."
msgstr "Добавлен аргумент *follow_symlinks*."

#: ../../library/shutil.rst:113
msgid ""
"Copy the permission bits, last access time, last modification time, and "
"flags from *src* to *dst*.  On Linux, :func:`copystat` also copies the "
"\"extended attributes\" where possible.  The file contents, owner, and group "
"are unaffected.  *src* and *dst* are :term:`path-like objects <path-like "
"object>` or path names given as strings."
msgstr ""
"Скопируйте биты разрешений, время последнего доступа, время последнего "
"изменения и флаги из *src* в *dst*. В Linux :func:`copystat` также копирует "
"«расширенные атрибуты», где это возможно. Содержимое файла, владелец и "
"группа не затрагиваются. *src* и *dst* — это :term:`объекты, подобные пути "
"<объект, подобный пути>` или имена путей, заданные в виде строк."

#: ../../library/shutil.rst:119
msgid ""
"If *follow_symlinks* is false, and *src* and *dst* both refer to symbolic "
"links, :func:`copystat` will operate on the symbolic links themselves rather "
"than the files the symbolic links refer to—reading the information from the "
"*src* symbolic link, and writing the information to the *dst* symbolic link."
msgstr ""
"Если *follow_symlinks* имеет значение false, а *src* и *dst* относятся к "
"символическим ссылкам, :func:`copystat` будет работать с самими "
"символическими ссылками, а не с файлами, на которые ссылаются символические "
"ссылки, читая информацию из * src* и запись информации в символическую "
"ссылку *dst*."

#: ../../library/shutil.rst:128
msgid ""
"Not all platforms provide the ability to examine and modify symbolic links.  "
"Python itself can tell you what functionality is locally available."
msgstr ""
"Не все платформы предоставляют возможность проверять и изменять "
"символические ссылки. Сам Python может рассказать вам, какие функции "
"доступны локально."

#: ../../library/shutil.rst:132
msgid ""
"If ``os.chmod in os.supports_follow_symlinks`` is ``True``, :func:`copystat` "
"can modify the permission bits of a symbolic link."
msgstr ""
"Если ``os.chmod в os.supports_follow_symlinks`` имеет значение ``True``, :"
"func:`copystat` может изменить биты разрешения символической ссылки."

#: ../../library/shutil.rst:136
msgid ""
"If ``os.utime in os.supports_follow_symlinks`` is ``True``, :func:`copystat` "
"can modify the last access and modification times of a symbolic link."
msgstr ""
"Если ``os.utime в os.supports_follow_symlinks`` имеет значение ``True``, :"
"func:`copystat` может изменить время последнего доступа и изменения "
"символической ссылки."

#: ../../library/shutil.rst:140
msgid ""
"If ``os.chflags in os.supports_follow_symlinks`` is ``True``, :func:"
"`copystat` can modify the flags of a symbolic link.  (``os.chflags`` is not "
"available on all platforms.)"
msgstr ""
"Если ``os.chflags в os.supports_follow_symlinks`` имеет значение ``True``, :"
"func:`copystat` может изменять флаги символической ссылки. (``os.chflags`` "
"доступен не на всех платформах.)"

#: ../../library/shutil.rst:145
msgid ""
"On platforms where some or all of this functionality is unavailable, when "
"asked to modify a symbolic link, :func:`copystat` will copy everything it "
"can. :func:`copystat` never returns failure."
msgstr ""
"На платформах, где некоторые или все эти функции недоступны, при запросе на "
"изменение символической ссылки :func:`copystat` скопирует все, что может. :"
"func:`copystat` никогда не возвращает ошибку."

#: ../../library/shutil.rst:150
msgid "Please see :data:`os.supports_follow_symlinks` for more information."
msgstr ""
"Дополнительную информацию см. в разделе :data:`os.supports_follow_symlinks`."

#: ../../library/shutil.rst:153 ../../library/shutil.rst:210
msgid ""
"Raises an :ref:`auditing event <auditing>` ``shutil.copystat`` with "
"arguments ``src``, ``dst``."
msgstr ""
"Вызывает событие аудита <auditing>`shutil.copystat`` с аргументами ``src``, "
"``dst``."

#: ../../library/shutil.rst:155
msgid ""
"Added *follow_symlinks* argument and support for Linux extended attributes."
msgstr ""
"Добавлен аргумент *follow_symlinks* и поддержка расширенных атрибутов Linux."

#: ../../library/shutil.rst:160
msgid ""
"Copies the file *src* to the file or directory *dst*.  *src* and *dst* "
"should be :term:`path-like objects <path-like object>` or strings.  If *dst* "
"specifies a directory, the file will be copied into *dst* using the base "
"filename from *src*. If *dst* specifies a file that already exists, it will "
"be replaced. Returns the path to the newly created file."
msgstr ""
"Копирует файл *src* в файл или каталог *dst*. *src* и *dst* должны быть :"
"term:`объектами, похожими на путь <объект, похожий на путь>` или строками. "
"Если *dst* указывает каталог, файл будет скопирован в *dst* с использованием "
"базового имени файла из *src*. Если *dst* указывает на уже существующий "
"файл, он будет заменен. Возвращает путь к вновь созданному файлу."

#: ../../library/shutil.rst:166
msgid ""
"If *follow_symlinks* is false, and *src* is a symbolic link, *dst* will be "
"created as a symbolic link.  If *follow_symlinks* is true and *src* is a "
"symbolic link, *dst* will be a copy of the file *src* refers to."
msgstr ""
"Если *follow_symlinks* имеет значение false, а *src* является символической "
"ссылкой, *dst* будет создан как символическая ссылка. Если *follow_symlinks* "
"имеет значение true и *src* является символической ссылкой, *dst* будет "
"копией файла, на который ссылается *src*."

#: ../../library/shutil.rst:171
msgid ""
":func:`~shutil.copy` copies the file data and the file's permission mode "
"(see :func:`os.chmod`).  Other metadata, like the file's creation and "
"modification times, is not preserved. To preserve all file metadata from the "
"original, use :func:`~shutil.copy2` instead."
msgstr ""
":func:`~shutil.copy` копирует данные файла и режим разрешений файла (см. :"
"func:`os.chmod`). Другие метаданные, например время создания и изменения "
"файла, не сохраняются. Чтобы сохранить все метаданные файла из оригинала, "
"используйте вместо этого :func:`~shutil.copy2`."

#: ../../library/shutil.rst:181
msgid ""
"Added *follow_symlinks* argument. Now returns path to the newly created file."
msgstr ""
"Добавлен аргумент *follow_symlinks*. Теперь возвращает путь к вновь "
"созданному файлу."

#: ../../library/shutil.rst:192
msgid ""
"Identical to :func:`~shutil.copy` except that :func:`copy2` also attempts to "
"preserve file metadata."
msgstr ""
"Идентичен :func:`~shutil.copy`, за исключением того, что :func:`copy2` также "
"пытается сохранить метаданные файла."

#: ../../library/shutil.rst:195
msgid ""
"When *follow_symlinks* is false, and *src* is a symbolic link, :func:`copy2` "
"attempts to copy all metadata from the *src* symbolic link to the newly "
"created *dst* symbolic link. However, this functionality is not available on "
"all platforms. On platforms where some or all of this functionality is "
"unavailable, :func:`copy2` will preserve all the metadata it can; :func:"
"`copy2` never raises an exception because it cannot preserve file metadata."
msgstr ""
"Когда *follow_symlinks* имеет значение false, а *src* является символической "
"ссылкой, :func:`copy2` пытается скопировать все метаданные из символической "
"ссылки *src* во вновь созданную символическую ссылку *dst*. Однако эта "
"функция доступна не на всех платформах. На платформах, где некоторые или все "
"эти функции недоступны, :func:`copy2` сохранит все возможные метаданные; :"
"func:`copy2` никогда не вызывает исключение, поскольку не может сохранить "
"метаданные файла."

#: ../../library/shutil.rst:204
msgid ""
":func:`copy2` uses :func:`copystat` to copy the file metadata. Please see :"
"func:`copystat` for more information about platform support for modifying "
"symbolic link metadata."
msgstr ""
":func:`copy2` использует :func:`copystat` для копирования метаданных файла. "
"Пожалуйста, обратитесь к :func:`copystat` для получения дополнительной "
"информации о поддержке платформой изменения метаданных символических ссылок."

#: ../../library/shutil.rst:212
msgid ""
"Added *follow_symlinks* argument, try to copy extended file system "
"attributes too (currently Linux only). Now returns path to the newly created "
"file."
msgstr ""
"Добавлен аргумент *follow_symlinks*, попробуйте также скопировать атрибуты "
"расширенной файловой системы (на данный момент только для Linux). Теперь "
"возвращает путь к вновь созданному файлу."

#: ../../library/shutil.rst:224
msgid ""
"This factory function creates a function that can be used as a callable for :"
"func:`copytree`\\'s *ignore* argument, ignoring files and directories that "
"match one of the glob-style *patterns* provided.  See the example below."
msgstr ""
"Эта фабричная функция создает функцию, которую можно использовать в качестве "
"вызываемой для аргумента *ignore* :func:`copytree`\\, игнорируя файлы и "
"каталоги, соответствующие одному из предоставленных *шаблонов* в стиле glob. "
"См. пример ниже."

#: ../../library/shutil.rst:233
msgid ""
"Recursively copy an entire directory tree rooted at *src* to a directory "
"named *dst* and return the destination directory.  All intermediate "
"directories needed to contain *dst* will also be created by default."
msgstr ""
"Рекурсивно скопируйте все дерево каталогов с корнем *src* в каталог с именем "
"*dst* и верните каталог назначения. Все промежуточные каталоги, которые "
"должны содержать *dst*, также будут созданы по умолчанию."

#: ../../library/shutil.rst:237
msgid ""
"Permissions and times of directories are copied with :func:`copystat`, "
"individual files are copied using :func:`~shutil.copy2`."
msgstr ""
"Разрешения и время каталогов копируются с помощью :func:`copystat`, "
"отдельные файлы копируются с помощью :func:`~shutil.copy2`."

#: ../../library/shutil.rst:240
msgid ""
"If *symlinks* is true, symbolic links in the source tree are represented as "
"symbolic links in the new tree and the metadata of the original links will "
"be copied as far as the platform allows; if false or omitted, the contents "
"and metadata of the linked files are copied to the new tree."
msgstr ""
"Если *symlinks* имеет значение true, символические ссылки в исходном дереве "
"представлены как символические ссылки в новом дереве, а метаданные исходных "
"ссылок будут скопированы, насколько это позволяет платформа; если значение "
"false или опущено, содержимое и метаданные связанных файлов копируются в "
"новое дерево."

#: ../../library/shutil.rst:245
msgid ""
"When *symlinks* is false, if the file pointed by the symlink doesn't exist, "
"an exception will be added in the list of errors raised in an :exc:`Error` "
"exception at the end of the copy process. You can set the optional "
"*ignore_dangling_symlinks* flag to true if you want to silence this "
"exception. Notice that this option has no effect on platforms that don't "
"support :func:`os.symlink`."
msgstr ""

#: ../../library/shutil.rst:252
msgid ""
"If *ignore* is given, it must be a callable that will receive as its "
"arguments the directory being visited by :func:`copytree`, and a list of its "
"contents, as returned by :func:`os.listdir`.  Since :func:`copytree` is "
"called recursively, the *ignore* callable will be called once for each "
"directory that is copied.  The callable must return a sequence of directory "
"and file names relative to the current directory (i.e. a subset of the items "
"in its second argument); these names will then be ignored in the copy "
"process.  :func:`ignore_patterns` can be used to create such a callable that "
"ignores names based on glob-style patterns."
msgstr ""
"Если указано *ignore*, это должен быть вызываемый объект, который получит в "
"качестве аргументов каталог, который посещает :func:`copytree`, и список его "
"содержимого, возвращаемый :func:`os.listdir`. Поскольку :func:`copytree` "
"вызывается рекурсивно, вызываемая функция *ignore* будет вызываться один раз "
"для каждого копируемого каталога. Вызываемый объект должен возвращать "
"последовательность имен каталогов и файлов относительно текущего каталога "
"(т. е. подмножество элементов в его втором аргументе); эти имена затем будут "
"игнорироваться в процессе копирования. :func:`ignore_patterns` можно "
"использовать для создания такого вызываемого объекта, который игнорирует "
"имена на основе шаблонов в стиле glob."

#: ../../library/shutil.rst:262
msgid ""
"If exception(s) occur, an :exc:`Error` is raised with a list of reasons."
msgstr ""
"Если возникают исключения, выдается сообщение :exc:`Error` со списком причин."

#: ../../library/shutil.rst:264
msgid ""
"If *copy_function* is given, it must be a callable that will be used to copy "
"each file. It will be called with the source path and the destination path "
"as arguments. By default, :func:`~shutil.copy2` is used, but any function "
"that supports the same signature (like :func:`~shutil.copy`) can be used."
msgstr ""
"Если задана *copy_function*, это должен быть вызываемый объект, который "
"будет использоваться для копирования каждого файла. Он будет вызываться с "
"исходным путем и путем назначения в качестве аргументов. По умолчанию "
"используется :func:`~shutil.copy2`, но можно использовать любую функцию, "
"поддерживающую ту же сигнатуру (например, :func:`~shutil.copy`)."

#: ../../library/shutil.rst:269
msgid ""
"If *dirs_exist_ok* is false (the default) and *dst* already exists, a :exc:"
"`FileExistsError` is raised. If *dirs_exist_ok* is true, the copying "
"operation will continue if it encounters existing directories, and files "
"within the *dst* tree will be overwritten by corresponding files from the "
"*src* tree."
msgstr ""
"Если *dirs_exist_ok* имеет значение false (по умолчанию) и *dst* уже "
"существует, возникает ошибка :exc:`FileExistsError`. Если *dirs_exist_ok* "
"имеет значение true, операция копирования продолжится, если она встретит "
"существующие каталоги, и файлы в дереве *dst* будут перезаписаны "
"соответствующими файлами из дерева *src*."

#: ../../library/shutil.rst:275
msgid ""
"Raises an :ref:`auditing event <auditing>` ``shutil.copytree`` with "
"arguments ``src``, ``dst``."
msgstr ""
"Вызывает событие аудита <auditing>`shutil.copytree`` с аргументами ``src``, "
"``dst``."

#: ../../library/shutil.rst:277
msgid ""
"Added the *copy_function* argument to be able to provide a custom copy "
"function. Added the *ignore_dangling_symlinks* argument to silence dangling "
"symlinks errors when *symlinks* is false."
msgstr ""
"Добавлен аргумент *copy_function*, позволяющий предоставить пользовательскую "
"функцию копирования. Добавлен аргумент *ignore_dangling_symlinks* для "
"отключения ошибок висячих символических ссылок, когда *symlinks* имеет "
"значение false."

#: ../../library/shutil.rst:283
msgid "Copy metadata when *symlinks* is false. Now returns *dst*."
msgstr ""
"Копировать метаданные, если *symlinks* имеет значение false. Теперь "
"возвращает *dst*."

#: ../../library/shutil.rst:292
msgid "Added the *dirs_exist_ok* parameter."
msgstr "Добавлен параметр *dirs_exist_ok*."

#: ../../library/shutil.rst:299
msgid ""
"Delete an entire directory tree; *path* must point to a directory (but not a "
"symbolic link to a directory).  If *ignore_errors* is true, errors resulting "
"from failed removals will be ignored; if false or omitted, such errors are "
"handled by calling a handler specified by *onerror* or, if that is omitted, "
"they raise an exception."
msgstr ""

#: ../../library/shutil.rst:305
msgid ""
"This function can support :ref:`paths relative to directory descriptors "
"<dir_fd>`."
msgstr ""
"Эта функция может поддерживать пути относительно дескрипторов каталогов.\n"
"`."

#: ../../library/shutil.rst:310
msgid ""
"On platforms that support the necessary fd-based functions a symlink attack "
"resistant version of :func:`rmtree` is used by default.  On other platforms, "
"the :func:`rmtree` implementation is susceptible to a symlink attack: given "
"proper timing and circumstances, attackers can manipulate symlinks on the "
"filesystem to delete files they wouldn't be able to access otherwise.  "
"Applications can use the :data:`rmtree.avoids_symlink_attacks` function "
"attribute to determine which case applies."
msgstr ""
"На платформах, поддерживающих необходимые функции на основе fd, по умолчанию "
"используется устойчивая к атакам символических ссылок версия :func:`rmtree`. "
"На других платформах реализация :func:`rmtree` подвержена атаке по "
"символическим ссылкам: при правильном выборе времени и обстоятельствах "
"злоумышленники могут манипулировать символическими ссылками в файловой "
"системе, чтобы удалить файлы, к которым в противном случае они не смогли бы "
"получить доступ. Приложения могут использовать атрибут функции :data:`rmtree."
"avoids_symlink_attacks`, чтобы определить, какой случай применим."

#: ../../library/shutil.rst:318
msgid ""
"If *onerror* is provided, it must be a callable that accepts three "
"parameters: *function*, *path*, and *excinfo*."
msgstr ""

#: ../../library/shutil.rst:321
msgid ""
"The first parameter, *function*, is the function which raised the exception; "
"it depends on the platform and implementation.  The second parameter, "
"*path*, will be the path name passed to *function*.  The third parameter, "
"*excinfo*, will be the exception information returned by :func:`sys."
"exc_info`.  Exceptions raised by *onerror* will not be caught."
msgstr ""

#: ../../library/shutil.rst:327
msgid ""
"Raises an :ref:`auditing event <auditing>` ``shutil.rmtree`` with arguments "
"``path``, ``dir_fd``."
msgstr ""
"Вызывает :ref:`событие аудита <auditing>``shutil.rmtree`` с аргументами "
"``path``, ``dir_fd``."

#: ../../library/shutil.rst:329
msgid ""
"Added a symlink attack resistant version that is used automatically if "
"platform supports fd-based functions."
msgstr ""
"Добавлена ​​версия, устойчивая к атакам по символическим ссылкам, которая "
"используется автоматически, если платформа поддерживает функции на основе fd."

#: ../../library/shutil.rst:333
msgid ""
"On Windows, will no longer delete the contents of a directory junction "
"before removing the junction."
msgstr ""
"В Windows больше не будет удаляться содержимое соединения каталогов перед "
"удалением соединения."

#: ../../library/shutil.rst:337
msgid "The *dir_fd* parameter."
msgstr "Параметр *dir_fd*."

#: ../../library/shutil.rst:342
msgid ""
"Indicates whether the current platform and implementation provides a symlink "
"attack resistant version of :func:`rmtree`.  Currently this is only true for "
"platforms supporting fd-based directory access functions."
msgstr ""
"Указывает, предоставляет ли текущая платформа и реализация устойчивую к "
"атакам символических ссылок версию :func:`rmtree`. В настоящее время это "
"справедливо только для платформ, поддерживающих функции доступа к каталогам "
"на основе fd."

#: ../../library/shutil.rst:351
msgid ""
"Recursively move a file or directory (*src*) to another location and return "
"the destination."
msgstr ""
"Рекурсивно переместите файл или каталог (*src*) в другое место и верните "
"место назначения."

#: ../../library/shutil.rst:354
msgid ""
"If *dst* is an existing directory or a symlink to a directory, then *src* is "
"moved inside that directory. The destination path in that directory must not "
"already exist."
msgstr ""
"Если *dst* — существующий каталог или символическая ссылка на каталог, то "
"*src* перемещается внутрь этого каталога. Путь назначения в этом каталоге "
"еще не должен существовать."

#: ../../library/shutil.rst:358
msgid ""
"If *dst* already exists but is not a directory, it may be overwritten "
"depending on :func:`os.rename` semantics."
msgstr ""
"Если *dst* уже существует, но не является каталогом, он может быть "
"перезаписан в зависимости от семантики :func:`os.rename`."

#: ../../library/shutil.rst:361
msgid ""
"If the destination is on the current filesystem, then :func:`os.rename` is "
"used. Otherwise, *src* is copied to the destination using *copy_function* "
"and then removed.  In case of symlinks, a new symlink pointing to the target "
"of *src* will be created as the destination and *src* will be removed."
msgstr ""
"Если место назначения находится в текущей файловой системе, то используется :"
"func:`os.rename`. В противном случае *src* копируется в место назначения с "
"помощью *copy_function*, а затем удаляется. В случае символических ссылок в "
"качестве места назначения будет создана новая символическая ссылка, "
"указывающая на цель *src*, а *src* будет удален."

#: ../../library/shutil.rst:366
msgid ""
"If *copy_function* is given, it must be a callable that takes two arguments, "
"*src* and the destination, and will be used to copy *src* to the destination "
"if :func:`os.rename` cannot be used.  If the source is a directory, :func:"
"`copytree` is called, passing it the *copy_function*. The default "
"*copy_function* is :func:`copy2`.  Using :func:`~shutil.copy` as the "
"*copy_function* allows the move to succeed when it is not possible to also "
"copy the metadata, at the expense of not copying any of the metadata."
msgstr ""
"Если указана *copy_function*, она должна быть вызываемой функцией, которая "
"принимает два аргумента: *src* и пункт назначения, и будет использоваться "
"для копирования *src* в пункт назначения, если :func:`os.rename` не может "
"быть использована. Если источником является каталог, вызывается :func:"
"`copytree`, передавая ему *copy_function*. По умолчанию *copy_function* — :"
"func:`copy2`. Использование :func:`~shutil.copy` в качестве *copy_function* "
"позволяет успешному перемещению, когда невозможно также скопировать "
"метаданные, за счет отсутствия копирования каких-либо метаданных."

#: ../../library/shutil.rst:374
msgid ""
"Raises an :ref:`auditing event <auditing>` ``shutil.move`` with arguments "
"``src``, ``dst``."
msgstr ""
"Вызывает событие аудита <auditing>`shutil.move`` с аргументами ``src``, "
"``dst``."

#: ../../library/shutil.rst:376
msgid ""
"Added explicit symlink handling for foreign filesystems, thus adapting it to "
"the behavior of GNU's :program:`mv`. Now returns *dst*."
msgstr ""
"Добавлена ​​явная обработка символических ссылок для сторонних файловых "
"систем, таким образом адаптируя ее к поведению программы GNU :program:`mv`. "
"Теперь возвращает *dst*."

#: ../../library/shutil.rst:381
msgid "Added the *copy_function* keyword argument."
msgstr "Добавлен аргумент ключевого слова *copy_function*."

#: ../../library/shutil.rst:389
msgid "Accepts a :term:`path-like object` for both *src* and *dst*."
msgstr "Принимает объект, похожий на путь, как для *src*, так и для *dst*."

#: ../../library/shutil.rst:394
msgid ""
"Return disk usage statistics about the given path as a :term:`named tuple` "
"with the attributes *total*, *used* and *free*, which are the amount of "
"total, used and free space, in bytes. *path* may be a file or a directory."
msgstr ""
"Возвращает статистику использования диска по заданному пути в виде :term:"
"`именованного кортежа` с атрибутами *total*, *used* и *free*, которые "
"представляют собой объем общего, использованного и свободного пространства в "
"байтах. *path* может быть файлом или каталогом."

#: ../../library/shutil.rst:401
msgid ""
"On Unix filesystems, *path* must point to a path within a **mounted** "
"filesystem partition. On those platforms, CPython doesn't attempt to "
"retrieve disk usage information from non-mounted filesystems."
msgstr ""
"В файловых системах Unix *path* должен указывать на путь внутри "
"**смонтированного** раздела файловой системы. На этих платформах CPython не "
"пытается получить информацию об использовании диска из несмонтированных "
"файловых систем."

#: ../../library/shutil.rst:407
msgid "On Windows, *path* can now be a file or directory."
msgstr "В Windows *path* теперь может быть файлом или каталогом."

#: ../../library/shutil.rst:410
msgid ":ref:`Availability <availability>`: Unix, Windows."
msgstr ""
":ref:`Наличие\n"
"`: Юникс, Windows."

#: ../../library/shutil.rst:414
msgid "Change owner *user* and/or *group* of the given *path*."
msgstr "Измените владельца *пользователя* и/или *группу* данного *пути*."

#: ../../library/shutil.rst:416
msgid ""
"*user* can be a system user name or a uid; the same applies to *group*. At "
"least one argument is required."
msgstr ""
"*user* может быть именем системного пользователя или идентификатором "
"пользователя; то же самое относится и к *группе*. Требуется хотя бы один "
"аргумент."

#: ../../library/shutil.rst:419
msgid "See also :func:`os.chown`, the underlying function."
msgstr "См. также :func:`os.chown`, базовую функцию."

#: ../../library/shutil.rst:421
msgid ""
"Raises an :ref:`auditing event <auditing>` ``shutil.chown`` with arguments "
"``path``, ``user``, ``group``."
msgstr ""
"Вызывает :ref:`событие аудита <auditing>``shutil.chown`` с аргументами "
"``path``, ``user``, ``group``."

#: ../../library/shutil.rst:423
msgid ":ref:`Availability <availability>`: Unix."
msgstr ":ref:`Availability <availability>`: Unix."

#: ../../library/shutil.rst:430
msgid ""
"Return the path to an executable which would be run if the given *cmd* was "
"called.  If no *cmd* would be called, return ``None``."
msgstr ""
"Возвращает путь к исполняемому файлу, который будет запущен, если будет "
"вызван данный *cmd*. Если *cmd* не будет вызываться, верните ``None``."

#: ../../library/shutil.rst:433
msgid ""
"*mode* is a permission mask passed to :func:`os.access`, by default "
"determining if the file exists and executable."
msgstr ""

#: ../../library/shutil.rst:436
msgid ""
"When no *path* is specified, the results of :func:`os.environ` are used, "
"returning either the \"PATH\" value or a fallback of :data:`os.defpath`."
msgstr ""

#: ../../library/shutil.rst:439
msgid ""
"On Windows, the current directory is always prepended to the *path* whether "
"or not you use the default or provide your own, which is the behavior the "
"command shell uses when finding executables.  Additionally, when finding the "
"*cmd* in the *path*, the ``PATHEXT`` environment variable is checked.  For "
"example, if you call ``shutil.which(\"python\")``, :func:`which` will search "
"``PATHEXT`` to know that it should look for ``python.exe`` within the *path* "
"directories.  For example, on Windows::"
msgstr ""

#: ../../library/shutil.rst:452
msgid ""
"The :class:`bytes` type is now accepted.  If *cmd* type is :class:`bytes`, "
"the result type is also :class:`bytes`."
msgstr ""
"Тип :class:`bytes` теперь принят. Если тип *cmd* равен :class:`bytes`, тип "
"результата также будет :class:`bytes`."

#: ../../library/shutil.rst:458
msgid ""
"This exception collects exceptions that are raised during a multi-file "
"operation. For :func:`copytree`, the exception argument is a list of 3-"
"tuples (*srcname*, *dstname*, *exception*)."
msgstr ""
"Это исключение собирает исключения, возникающие во время операции с "
"несколькими файлами. Для :func:`copytree` аргументом исключения является "
"список из трёх кортежей (*srcname*, *dstname*, *Exception*)."

#: ../../library/shutil.rst:465
msgid "Platform-dependent efficient copy operations"
msgstr "Платформозависимые эффективные операции копирования"

#: ../../library/shutil.rst:467
msgid ""
"Starting from Python 3.8, all functions involving a file copy (:func:"
"`copyfile`, :func:`~shutil.copy`, :func:`copy2`, :func:`copytree`, and :func:"
"`move`) may use platform-specific \"fast-copy\" syscalls in order to copy "
"the file more efficiently (see :issue:`33671`). \"fast-copy\" means that the "
"copying operation occurs within the kernel, avoiding the use of userspace "
"buffers in Python as in \"``outfd.write(infd.read())``\"."
msgstr ""
"Начиная с Python 3.8, все функции, связанные с копированием файла (:func:"
"`copyfile`, :func:`~shutil.copy`, :func:`copy2`, :func:`copytree` и :func:"
"`move` ) может использовать специфичные для платформы системные вызовы "
"«быстрого копирования» для более эффективного копирования файла (см. :issue:"
"`33671`). «быстрое копирование» означает, что операция копирования "
"происходит внутри ядра, избегая использования буферов пользовательского "
"пространства в Python, как в «``outfd.write(infd.read())``»."

#: ../../library/shutil.rst:475
msgid "On macOS `fcopyfile`_ is used to copy the file content (not metadata)."
msgstr ""
"В macOS `fcopyfile`_ используется для копирования содержимого файла (а не "
"метаданных)."

#: ../../library/shutil.rst:477
msgid "On Linux :func:`os.sendfile` is used."
msgstr "В Linux используется :func:`os.sendfile`."

#: ../../library/shutil.rst:479
msgid ""
"On Windows :func:`shutil.copyfile` uses a bigger default buffer size (1 MiB "
"instead of 64 KiB) and a :func:`memoryview`-based variant of :func:`shutil."
"copyfileobj` is used."
msgstr ""
"В Windows :func:`shutil.copyfile` использует больший размер буфера по "
"умолчанию (1 МиБ вместо 64 КиБ) и используется вариант :func:`shutil."
"copyfileobj` на основе :func:`memoryview`."

#: ../../library/shutil.rst:483
msgid ""
"If the fast-copy operation fails and no data was written in the destination "
"file then shutil will silently fallback on using less efficient :func:"
"`copyfileobj` function internally."
msgstr ""
"Если операция быстрого копирования не удалась и в целевой файл не было "
"записано никаких данных, то Shutil автоматически перейдет к использованию "
"менее эффективной внутренней функции :func:`copyfileobj`."

#: ../../library/shutil.rst:492
msgid "copytree example"
msgstr "пример копирования дерева"

#: ../../library/shutil.rst:494
msgid "An example that uses the :func:`ignore_patterns` helper::"
msgstr "Пример использования помощника :func:`ignore_patterns`::"

#: ../../library/shutil.rst:500
msgid ""
"This will copy everything except ``.pyc`` files and files or directories "
"whose name starts with ``tmp``."
msgstr ""
"При этом будет скопировано все, кроме файлов ``.pyc`` и файлов или "
"каталогов, имена которых начинаются с ``tmp``."

#: ../../library/shutil.rst:503
msgid "Another example that uses the *ignore* argument to add a logging call::"
msgstr ""
"Другой пример, в котором используется аргумент *ignore* для добавления "
"вызова журнала::"

#: ../../library/shutil.rst:518
msgid "rmtree example"
msgstr "Пример rmtree"

#: ../../library/shutil.rst:520
msgid ""
"This example shows how to remove a directory tree on Windows where some of "
"the files have their read-only bit set. It uses the onerror callback to "
"clear the readonly bit and reattempt the remove. Any subsequent failure will "
"propagate. ::"
msgstr ""

#: ../../library/shutil.rst:538
msgid "Archiving operations"
msgstr "Операции архивирования"

#: ../../library/shutil.rst:542
msgid "Added support for the *xztar* format."
msgstr "Добавлена ​​поддержка формата *xztar*."

#: ../../library/shutil.rst:546
msgid ""
"High-level utilities to create and read compressed and archived files are "
"also provided.  They rely on the :mod:`zipfile` and :mod:`tarfile` modules."
msgstr ""
"Также предоставляются утилиты высокого уровня для создания и чтения сжатых и "
"архивированных файлов. Они полагаются на модули :mod:`zipfile` и :mod:"
"`tarfile`."

#: ../../library/shutil.rst:551
msgid "Create an archive file (such as zip or tar) and return its name."
msgstr "Создайте файл архива (например, zip или tar) и верните его имя."

#: ../../library/shutil.rst:553
msgid ""
"*base_name* is the name of the file to create, including the path, minus any "
"format-specific extension."
msgstr ""
"*base_name* — это имя создаваемого файла, включая путь, за вычетом "
"расширения, специфичного для формата."

#: ../../library/shutil.rst:556
msgid ""
"*format* is the archive format: one of \"zip\" (if the :mod:`zlib` module is "
"available), \"tar\", \"gztar\" (if the :mod:`zlib` module is available), "
"\"bztar\" (if the :mod:`bz2` module is available), or \"xztar\" (if the :mod:"
"`lzma` module is available)."
msgstr ""
"*format* — формат архива: один из «zip» (если доступен модуль :mod:`zlib`), "
"«tar», «gztar» (если доступен модуль :mod:`zlib`), «bztar». \" (если "
"доступен модуль :mod:`bz2`) или \"xztar\" (если доступен модуль :mod:`lzma`)."

#: ../../library/shutil.rst:561
msgid ""
"*root_dir* is a directory that will be the root directory of the archive, "
"all paths in the archive will be relative to it; for example, we typically "
"chdir into *root_dir* before creating the archive."
msgstr ""
"*root_dir* — каталог, который будет корневым каталогом архива, все пути в "
"архиве будут относительно него; например, перед созданием архива мы обычно "
"выполняем chdir в *root_dir*."

#: ../../library/shutil.rst:565
msgid ""
"*base_dir* is the directory where we start archiving from; i.e. *base_dir* "
"will be the common prefix of all files and directories in the archive.  "
"*base_dir* must be given relative to *root_dir*.  See :ref:`shutil-archiving-"
"example-with-basedir` for how to use *base_dir* and *root_dir* together."
msgstr ""
"*base_dir* — каталог, из которого мы начинаем архивирование; т.е. *base_dir* "
"будет общим префиксом всех файлов и каталогов в архиве. *base_dir* должен "
"быть указан относительно *root_dir*. См. :ref:`shutil-archiving-example-with-"
"basedir`, чтобы узнать, как использовать *base_dir* и *root_dir* вместе."

#: ../../library/shutil.rst:571
msgid "*root_dir* and *base_dir* both default to the current directory."
msgstr "*root_dir* и *base_dir* по умолчанию относятся к текущему каталогу."

#: ../../library/shutil.rst:573
msgid ""
"If *dry_run* is true, no archive is created, but the operations that would "
"be executed are logged to *logger*."
msgstr ""
"Если *dry_run* имеет значение true, архив не создается, но выполняемые "
"операции записываются в *logger*."

#: ../../library/shutil.rst:576
msgid ""
"*owner* and *group* are used when creating a tar archive. By default, uses "
"the current owner and group."
msgstr ""
"*owner* и *group* используются при создании tar-архива. По умолчанию "
"используется текущий владелец и группа."

#: ../../library/shutil.rst:579
msgid ""
"*logger* must be an object compatible with :pep:`282`, usually an instance "
"of :class:`logging.Logger`."
msgstr ""
"*logger* должен быть объектом, совместимым с :pep:`282`, обычно экземпляром :"
"class:`logging.Logger`."

#: ../../library/shutil.rst:582
msgid "The *verbose* argument is unused and deprecated."
msgstr "Аргумент *verbose* не используется и устарел."

#: ../../library/shutil.rst:584
msgid ""
"Raises an :ref:`auditing event <auditing>` ``shutil.make_archive`` with "
"arguments ``base_name``, ``format``, ``root_dir``, ``base_dir``."
msgstr ""
"Вызывает :ref:`событие аудита <auditing>``shutil.make_archive`` с "
"аргументами ``base_name``, ``format``, ``root_dir``, ``base_dir``."

#: ../../library/shutil.rst:588
msgid ""
"This function is not thread-safe when custom archivers registered with :func:"
"`register_archive_format` are used.  In this case it temporarily changes the "
"current working directory of the process to perform archiving."
msgstr ""

#: ../../library/shutil.rst:593
msgid ""
"The modern pax (POSIX.1-2001) format is now used instead of the legacy GNU "
"format for archives created with ``format=\"tar\"``."
msgstr ""
"Современный формат pax (POSIX.1-2001) теперь используется вместо устаревшего "
"формата GNU для архивов, созданных с помощью ``format=\"tar\"``."

#: ../../library/shutil.rst:597
msgid ""
"This function is now made thread-safe during creation of standard ``.zip`` "
"and tar archives."
msgstr ""
"Эта функция теперь стала потокобезопасной при создании стандартных архивов ."
"zip и tar."

#: ../../library/shutil.rst:603
msgid ""
"Return a list of supported formats for archiving. Each element of the "
"returned sequence is a tuple ``(name, description)``."
msgstr ""
"Вернуть список поддерживаемых форматов для архивирования. Каждый элемент "
"возвращаемой последовательности представляет собой кортеж ``(имя, "
"описание)``."

#: ../../library/shutil.rst:606 ../../library/shutil.rst:709
msgid "By default :mod:`shutil` provides these formats:"
msgstr "По умолчанию :mod:`shutil` предоставляет эти форматы."

#: ../../library/shutil.rst:608
msgid "*zip*: ZIP file (if the :mod:`zlib` module is available)."
msgstr "*zip*: ZIP-файл (если доступен модуль :mod:`zlib`)."

#: ../../library/shutil.rst:609
msgid ""
"*tar*: Uncompressed tar file. Uses POSIX.1-2001 pax format for new archives."
msgstr ""
"*tar*: Несжатый файл tar. Использует формат POSIX.1-2001 pax для новых "
"архивов."

#: ../../library/shutil.rst:610 ../../library/shutil.rst:714
msgid "*gztar*: gzip'ed tar-file (if the :mod:`zlib` module is available)."
msgstr "*gztar*: сжатый tar-файл (если доступен модуль :mod:`zlib`)."

#: ../../library/shutil.rst:611 ../../library/shutil.rst:715
msgid "*bztar*: bzip2'ed tar-file (if the :mod:`bz2` module is available)."
msgstr "*bztar*: tar-файл в формате bzip2 (если доступен модуль :mod:`bz2`)."

#: ../../library/shutil.rst:612 ../../library/shutil.rst:716
msgid "*xztar*: xz'ed tar-file (if the :mod:`lzma` module is available)."
msgstr "*xztar*: tar-файл с расширением xz (если доступен модуль :mod:`lzma`)."

#: ../../library/shutil.rst:614
msgid ""
"You can register new formats or provide your own archiver for any existing "
"formats, by using :func:`register_archive_format`."
msgstr ""
"Вы можете зарегистрировать новые форматы или предоставить свой собственный "
"архиватор для любых существующих форматов, используя :func:"
"`register_archive_format`."

#: ../../library/shutil.rst:620
msgid "Register an archiver for the format *name*."
msgstr "Зарегистрируйте архиватор для формата *имя*."

#: ../../library/shutil.rst:622
msgid ""
"*function* is the callable that will be used to unpack archives. The "
"callable will receive the *base_name* of the file to create, followed by the "
"*base_dir* (which defaults to :data:`os.curdir`) to start archiving from. "
"Further arguments are passed as keyword arguments: *owner*, *group*, "
"*dry_run* and *logger* (as passed in :func:`make_archive`)."
msgstr ""
"*функция* — это вызываемая функция, которая будет использоваться для "
"распаковки архивов. Вызываемый объект получит *base_name* создаваемого "
"файла, за которым следует *base_dir* (по умолчанию это :data:`os.curdir`), с "
"которого нужно начать архивирование. Дальнейшие аргументы передаются как "
"аргументы ключевых слов: *owner*, *group*, *dry_run* и *logger* (как "
"передано в :func:`make_archive`)."

#: ../../library/shutil.rst:628
msgid ""
"If given, *extra_args* is a sequence of ``(name, value)`` pairs that will be "
"used as extra keywords arguments when the archiver callable is used."
msgstr ""
"Если задано, *extra_args* представляет собой последовательность пар ``(имя, "
"значение)``, которые будут использоваться в качестве дополнительных "
"аргументов ключевых слов при использовании вызываемого архиватора."

#: ../../library/shutil.rst:631
msgid ""
"*description* is used by :func:`get_archive_formats` which returns the list "
"of archivers.  Defaults to an empty string."
msgstr ""
"*описание* используется функцией :func:`get_archive_formats`, которая "
"возвращает список архиваторов. По умолчанию пустая строка."

#: ../../library/shutil.rst:637
msgid "Remove the archive format *name* from the list of supported formats."
msgstr "Удалите формат архива *имя* из списка поддерживаемых форматов."

#: ../../library/shutil.rst:642
msgid "Unpack an archive. *filename* is the full path of the archive."
msgstr "Распаковать архив. *имя_файла* — полный путь к архиву."

#: ../../library/shutil.rst:644
msgid ""
"*extract_dir* is the name of the target directory where the archive is "
"unpacked. If not provided, the current working directory is used."
msgstr ""
"*extract_dir* — имя целевой директории, в которую распакован архив. Если не "
"указано, используется текущий рабочий каталог."

#: ../../library/shutil.rst:647
msgid ""
"*format* is the archive format: one of \"zip\", \"tar\", \"gztar\", "
"\"bztar\", or \"xztar\".  Or any other format registered with :func:"
"`register_unpack_format`.  If not provided, :func:`unpack_archive` will use "
"the archive file name extension and see if an unpacker was registered for "
"that extension.  In case none is found, a :exc:`ValueError` is raised."
msgstr ""
"*format* — это формат архива: один из «zip», «tar», «gztar», «bztar» или "
"«xztar». Или любой другой формат, зарегистрированный с помощью :func:"
"`register_unpack_format`. Если оно не указано, :func:`unpack_archive` будет "
"использовать расширение имени файла архива и проверять, зарегистрирован ли "
"распаковщик для этого расширения. Если ничего не найдено, выдается ошибка :"
"exc:`ValueError`."

#: ../../library/shutil.rst:654
msgid ""
"The keyword-only *filter* argument, which was added in Python 3.11.4, is "
"passed to the underlying unpacking function. For zip files, *filter* is not "
"accepted. For tar files, it is recommended to set it to ``'data'``, unless "
"using features specific to tar and UNIX-like filesystems. (See :ref:`tarfile-"
"extraction-filter` for details.) The ``'data'`` filter will become the "
"default for tar files in Python 3.14."
msgstr ""

#: ../../library/shutil.rst:663
msgid ""
"Raises an :ref:`auditing event <auditing>` ``shutil.unpack_archive`` with "
"arguments ``filename``, ``extract_dir``, ``format``."
msgstr ""
"Вызывает :ref:`событие аудита <auditing>` ``shutil.unpack_archive`` с "
"аргументами ``filename``, ``extract_dir``, ``format``."

#: ../../library/shutil.rst:667
msgid ""
"Never extract archives from untrusted sources without prior inspection. It "
"is possible that files are created outside of the path specified in the "
"*extract_dir* argument, e.g. members that have absolute filenames starting "
"with \"/\" or filenames with two dots \"..\"."
msgstr ""
"Никогда не извлекайте архивы из ненадежных источников без предварительной "
"проверки. Возможно, что файлы создаются за пределами пути, указанного в "
"аргументе *extract_dir*, например, члены, абсолютные имена которых "
"начинаются с «/», или имена файлов с двумя точками «..»."

#: ../../library/shutil.rst:672
msgid "Accepts a :term:`path-like object` for *filename* and *extract_dir*."
msgstr ""
"Принимает :term:`объект, подобный пути` для *filename* и *extract_dir*."

#: ../../library/shutil.rst:675
msgid "Added the *filter* argument."
msgstr "Добавлен аргумент *filter*."

#: ../../library/shutil.rst:680
msgid ""
"Registers an unpack format. *name* is the name of the format and "
"*extensions* is a list of extensions corresponding to the format, like ``."
"zip`` for Zip files."
msgstr ""
"Регистрирует формат распаковки. *имя* — это имя формата, а *расширения* — "
"это список расширений, соответствующих формату, например «.zip» для Zip-"
"файлов."

#: ../../library/shutil.rst:684
msgid ""
"*function* is the callable that will be used to unpack archives. The "
"callable will receive:"
msgstr ""
"*функция* — это вызываемая функция, которая будет использоваться для "
"распаковки архивов. Вызываемый получит:"

#: ../../library/shutil.rst:687
msgid "the path of the archive, as a positional argument;"
msgstr "путь к архиву, как позиционный аргумент;"

#: ../../library/shutil.rst:688
msgid ""
"the directory the archive must be extracted to, as a positional argument;"
msgstr ""
"каталог, в который должен быть распакован архив, в качестве позиционного "
"аргумента;"

#: ../../library/shutil.rst:689
msgid ""
"possibly a *filter* keyword argument, if it was given to :func:"
"`unpack_archive`;"
msgstr ""
"возможно, аргумент ключевого слова *filter*, если он был передан :func:"
"`unpack_archive`;"

#: ../../library/shutil.rst:691
msgid ""
"additional keyword arguments, specified by *extra_args* as a sequence of "
"``(name, value)`` tuples."
msgstr ""
"дополнительные аргументы ключевого слова, указанные *extra_args* как "
"последовательность кортежей ``(имя, значение)``."

#: ../../library/shutil.rst:694
msgid ""
"*description* can be provided to describe the format, and will be returned "
"by the :func:`get_unpack_formats` function."
msgstr ""
"*description* может быть предоставлено для описания формата и будет "
"возвращено функцией :func:`get_unpack_formats`."

#: ../../library/shutil.rst:700
msgid "Unregister an unpack format. *name* is the name of the format."
msgstr "Отмените регистрацию формата распаковки. *имя* — это имя формата."

#: ../../library/shutil.rst:705
msgid ""
"Return a list of all registered formats for unpacking. Each element of the "
"returned sequence is a tuple ``(name, extensions, description)``."
msgstr ""
"Возвращает список всех зарегистрированных форматов для распаковки. Каждый "
"элемент возвращаемой последовательности представляет собой кортеж ``(имя, "
"расширения, описание)``."

#: ../../library/shutil.rst:711
msgid ""
"*zip*: ZIP file (unpacking compressed files works only if the corresponding "
"module is available)."
msgstr ""
"*zip*: ZIP-файл (распаковка сжатых файлов работает только при наличии "
"соответствующего модуля)."

#: ../../library/shutil.rst:713
msgid "*tar*: uncompressed tar file."
msgstr "*tar*: несжатый файл tar."

#: ../../library/shutil.rst:718
msgid ""
"You can register new formats or provide your own unpacker for any existing "
"formats, by using :func:`register_unpack_format`."
msgstr ""
"Вы можете зарегистрировать новые форматы или предоставить свой собственный "
"распаковщик для любых существующих форматов, используя :func:"
"`register_unpack_format`."

#: ../../library/shutil.rst:725
msgid "Archiving example"
msgstr "Пример архивации"

#: ../../library/shutil.rst:727
msgid ""
"In this example, we create a gzip'ed tar-file archive containing all files "
"found in the :file:`.ssh` directory of the user::"
msgstr ""
"В этом примере мы создаем архив tar-файлов в формате gzip, содержащий все "
"файлы, найденные в каталоге :file:`.ssh` пользователя::"

#: ../../library/shutil.rst:737
msgid "The resulting archive contains:"
msgstr "Полученный архив содержит:"

#: ../../library/shutil.rst:755
msgid "Archiving example with *base_dir*"
msgstr "Пример архивирования с помощью *base_dir*"

#: ../../library/shutil.rst:757
msgid ""
"In this example, similar to the `one above <shutil-archiving-example_>`_, we "
"show how to use :func:`make_archive`, but this time with the usage of "
"*base_dir*.  We now have the following directory structure:"
msgstr ""
"В этом примере, аналогичном приведенному выше <shutil-archiving-example_>`_, "
"мы показываем, как использовать :func:`make_archive`, но на этот раз с "
"использованием *base_dir*. Теперь у нас есть следующая структура каталогов:"

#: ../../library/shutil.rst:771
msgid ""
"In the final archive, :file:`please_add.txt` should be included, but :file:"
"`do_not_add.txt` should not.  Therefore we use the following::"
msgstr ""
"В финальный архив должен быть включен :file:`please_add.txt`, а :file:"
"`do_not_add.txt` — нет. Поэтому мы используем следующее:"

#: ../../library/shutil.rst:785
msgid "Listing the files in the resulting archive gives us:"
msgstr "Листинг файлов в полученном архиве дает нам:"

#: ../../library/shutil.rst:795
msgid "Querying the size of the output terminal"
msgstr "Запрос размера выходного терминала"

#: ../../library/shutil.rst:799
msgid "Get the size of the terminal window."
msgstr "Получите размер окна терминала."

#: ../../library/shutil.rst:801
msgid ""
"For each of the two dimensions, the environment variable, ``COLUMNS`` and "
"``LINES`` respectively, is checked. If the variable is defined and the value "
"is a positive integer, it is used."
msgstr ""
"Для каждого из двух измерений проверяется переменная среды COLUMNS и LINES "
"соответственно. Если переменная определена и ее значение является "
"положительным целым числом, она используется."

#: ../../library/shutil.rst:805
msgid ""
"When ``COLUMNS`` or ``LINES`` is not defined, which is the common case, the "
"terminal connected to :data:`sys.__stdout__` is queried by invoking :func:"
"`os.get_terminal_size`."
msgstr ""
"Когда COLUMNS или LINES не определены, что является распространенным "
"случаем, терминал, подключенный к :data:`sys.__stdout__`, опрашивается путем "
"вызова :func:`os.get_terminal_size`."

#: ../../library/shutil.rst:809
msgid ""
"If the terminal size cannot be successfully queried, either because the "
"system doesn't support querying, or because we are not connected to a "
"terminal, the value given in ``fallback`` parameter is used. ``fallback`` "
"defaults to ``(80, 24)`` which is the default size used by many terminal "
"emulators."
msgstr ""
"Если размер терминала не может быть успешно запрошен либо потому, что "
"система не поддерживает запросы, либо потому, что мы не подключены к "
"терминалу, используется значение, указанное в параметре «fallback». "
"``fallback`` по умолчанию имеет значение ``(80, 24)``, которое является "
"размером по умолчанию, используемым многими эмуляторами терминала."

#: ../../library/shutil.rst:815
msgid "The value returned is a named tuple of type :class:`os.terminal_size`."
msgstr ""
"Возвращаемое значение представляет собой именованный кортеж типа :class:`os."
"terminal_size`."

#: ../../library/shutil.rst:817
msgid ""
"See also: The Single UNIX Specification, Version 2, `Other Environment "
"Variables`_."
msgstr ""
"См. также: Единая спецификация UNIX, версия 2, «Другие переменные среды»."

#: ../../library/shutil.rst:822
msgid ""
"The ``fallback`` values are also used if :func:`os.get_terminal_size` "
"returns zeroes."
msgstr ""
"Значения ``fallback`` также используются, если :func:`os.get_terminal_size` "
"возвращает нули."

#: ../../library/shutil.rst:12
msgid "file"
msgstr "файл"

#: ../../library/shutil.rst:12
msgid "copying"
msgstr "копирование"

#: ../../library/shutil.rst:12
msgid "copying files"
msgstr "копирование файлов"

#: ../../library/shutil.rst:297
msgid "directory"
msgstr "каталог"

#: ../../library/shutil.rst:297
msgid "deleting"
msgstr "удаление"
