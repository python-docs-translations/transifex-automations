# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# Rafael Fontenelle <rffontenelle@gmail.com>, 2024
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.10\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-01-10 16:06+0000\n"
"PO-Revision-Date: 2022-11-05 17:23+0000\n"
"Last-Translator: Rafael Fontenelle <rffontenelle@gmail.com>, 2024\n"
"Language-Team: Russian (https://app.transifex.com/python-doc/teams/5390/"
"ru/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ru\n"
"Plural-Forms: nplurals=4; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && "
"n%10<=4 && (n%100<12 || n%100>14) ? 1 : n%10==0 || (n%10>=5 && n%10<=9) || "
"(n%100>=11 && n%100<=14)? 2 : 3);\n"

#: ../../library/xml.dom.pulldom.rst:2
msgid ":mod:`xml.dom.pulldom` --- Support for building partial DOM trees"
msgstr ""

#: ../../library/xml.dom.pulldom.rst:9
msgid "**Source code:** :source:`Lib/xml/dom/pulldom.py`"
msgstr "**Исходный код:** :source:`Lib/xml/dom/pulldom.py`"

#: ../../library/xml.dom.pulldom.rst:13
msgid ""
"The :mod:`xml.dom.pulldom` module provides a \"pull parser\" which can also "
"be asked to produce DOM-accessible fragments of the document where "
"necessary. The basic concept involves pulling \"events\" from a stream of "
"incoming XML and processing them. In contrast to SAX which also employs an "
"event-driven processing model together with callbacks, the user of a pull "
"parser is responsible for explicitly pulling events from the stream, looping "
"over those events until either processing is finished or an error condition "
"occurs."
msgstr ""
"Модуль :mod:`xml.dom.pulldom` предоставляет «анализатор извлечения», который "
"также может быть запрошен для создания доступных для DOM фрагментов "
"документа, где это необходимо. Основная концепция предполагает извлечение "
"«событий» из потока входящего XML и их обработку. В отличие от SAX, который "
"также использует модель обработки, управляемую событиями, вместе с обратными "
"вызовами, пользователь анализатора pull несет ответственность за явное "
"извлечение событий из потока, циклически обрабатывая эти события до тех пор, "
"пока обработка не завершится или не возникнет ошибка."

#: ../../library/xml.dom.pulldom.rst:24
msgid ""
"The :mod:`xml.dom.pulldom` module is not secure against maliciously "
"constructed data.  If you need to parse untrusted or unauthenticated data "
"see :ref:`xml-vulnerabilities`."
msgstr ""
"Модуль :mod:`xml.dom.pulldom` не защищен от вредоносно созданных данных. "
"Если вам нужно проанализировать ненадежные или неаутентифицированные данные, "
"см. :ref:`xml-vulnerabilities`."

#: ../../library/xml.dom.pulldom.rst:30
msgid ""
"The SAX parser no longer processes general external entities by default to "
"increase security by default. To enable processing of external entities, "
"pass a custom parser instance in::"
msgstr ""
"Парсер SAX больше не обрабатывает общие внешние объекты по умолчанию для "
"повышения безопасности по умолчанию. Чтобы включить обработку внешних "
"объектов, передайте собственный экземпляр синтаксического анализатора в::"

#: ../../library/xml.dom.pulldom.rst:43
msgid "Example::"
msgstr "Пример::"

#: ../../library/xml.dom.pulldom.rst:54
msgid "``event`` is a constant and can be one of:"
msgstr "``event`` является константой и может быть одним из:"

#: ../../library/xml.dom.pulldom.rst:56
msgid ":data:`START_ELEMENT`"
msgstr ":data:`START_ELEMENT`"

#: ../../library/xml.dom.pulldom.rst:57
msgid ":data:`END_ELEMENT`"
msgstr ":data:`END_ELEMENT`"

#: ../../library/xml.dom.pulldom.rst:58
msgid ":data:`COMMENT`"
msgstr ":data:`COMMENT`"

#: ../../library/xml.dom.pulldom.rst:59
msgid ":data:`START_DOCUMENT`"
msgstr ":data:`START_DOCUMENT`"

#: ../../library/xml.dom.pulldom.rst:60
msgid ":data:`END_DOCUMENT`"
msgstr ":data:`END_DOCUMENT`"

#: ../../library/xml.dom.pulldom.rst:61
msgid ":data:`CHARACTERS`"
msgstr ":data:`CHARACTERS`"

#: ../../library/xml.dom.pulldom.rst:62
msgid ":data:`PROCESSING_INSTRUCTION`"
msgstr ":data:`PROCESSING_INSTRUCTION`"

#: ../../library/xml.dom.pulldom.rst:63
msgid ":data:`IGNORABLE_WHITESPACE`"
msgstr ":data:`IGNORABLE_WHITESPACE`"

#: ../../library/xml.dom.pulldom.rst:65
msgid ""
"``node`` is an object of type :class:`xml.dom.minidom.Document`, :class:`xml."
"dom.minidom.Element` or :class:`xml.dom.minidom.Text`."
msgstr ""
"``node`` — это объект типа :class:`xml.dom.minidom.Document`, :class:`xml."
"dom.minidom.Element` или :class:`xml.dom.minidom.Text`."

#: ../../library/xml.dom.pulldom.rst:68
msgid ""
"Since the document is treated as a \"flat\" stream of events, the document "
"\"tree\" is implicitly traversed and the desired elements are found "
"regardless of their depth in the tree. In other words, one does not need to "
"consider hierarchical issues such as recursive searching of the document "
"nodes, although if the context of elements were important, one would either "
"need to maintain some context-related state (i.e. remembering where one is "
"in the document at any given point) or to make use of the :func:"
"`DOMEventStream.expandNode` method and switch to DOM-related processing."
msgstr ""
"Поскольку документ рассматривается как «плоский» поток событий, «дерево» "
"документа просматривается неявно и нужные элементы находятся независимо от "
"их глубины в дереве. Другими словами, не нужно учитывать иерархические "
"проблемы, такие как рекурсивный поиск узлов документа, хотя, если бы "
"контекст элементов был важен, нужно было бы либо поддерживать некоторое "
"состояние, связанное с контекстом (т. е. помнить, где вы находитесь в "
"документе). в любой момент) или использовать метод :func:`DOMEventStream."
"expandNode` и переключиться на обработку, связанную с DOM."

#: ../../library/xml.dom.pulldom.rst:80 ../../library/xml.dom.pulldom.rst:85
msgid "Subclass of :class:`xml.sax.handler.ContentHandler`."
msgstr "Подкласс :class:`xml.sax.обработчик.ContentHandler`."

#: ../../library/xml.dom.pulldom.rst:90
msgid ""
"Return a :class:`DOMEventStream` from the given input. *stream_or_string* "
"may be either a file name, or a file-like object. *parser*, if given, must "
"be an :class:`~xml.sax.xmlreader.XMLReader` object. This function will "
"change the document handler of the parser and activate namespace support; "
"other parser configuration (like setting an entity resolver) must have been "
"done in advance."
msgstr ""
"Верните :class:`DOMEventStream` из заданного ввода. *stream_or_string* может "
"быть либо именем файла, либо объектом, подобным файлу. *parser*, если он "
"указан, должен быть объектом :class:`~xml.sax.xmlreader.XMLReader`. Эта "
"функция изменит обработчик документа парсера и активирует поддержку "
"пространства имен; другая конфигурация синтаксического анализатора "
"(например, установка преобразователя сущностей) должна быть выполнена "
"заранее."

#: ../../library/xml.dom.pulldom.rst:97
msgid ""
"If you have XML in a string, you can use the :func:`parseString` function "
"instead:"
msgstr ""
"Если у вас есть XML в строке, вы можете вместо этого использовать функцию :"
"func:`parseString`:"

#: ../../library/xml.dom.pulldom.rst:101
msgid ""
"Return a :class:`DOMEventStream` that represents the (Unicode) *string*."
msgstr ""
"Возвращает :class:`DOMEventStream`, который представляет *строку* (Unicode)."

#: ../../library/xml.dom.pulldom.rst:105
msgid "Default value for the *bufsize* parameter to :func:`parse`."
msgstr "Значение по умолчанию для параметра *bufsize*: :func:`parse`."

#: ../../library/xml.dom.pulldom.rst:107
msgid ""
"The value of this variable can be changed before calling :func:`parse` and "
"the new value will take effect."
msgstr ""
"Значение этой переменной можно изменить перед вызовом :func:`parse`, и новое "
"значение вступит в силу."

#: ../../library/xml.dom.pulldom.rst:113
msgid "DOMEventStream Objects"
msgstr "Объекты DOMEventStream"

#: ../../library/xml.dom.pulldom.rst:117
msgid "Support for :meth:`sequence protocol <__getitem__>` is deprecated."
msgstr ""

#: ../../library/xml.dom.pulldom.rst:122
msgid ""
"Return a tuple containing *event* and the current *node* as :class:`xml.dom."
"minidom.Document` if event equals :data:`START_DOCUMENT`, :class:`xml.dom."
"minidom.Element` if event equals :data:`START_ELEMENT` or :data:"
"`END_ELEMENT` or :class:`xml.dom.minidom.Text` if event equals :data:"
"`CHARACTERS`. The current node does not contain information about its "
"children, unless :func:`expandNode` is called."
msgstr ""
"Возвращает кортеж, содержащий *event* и текущий *node* как :class:`xml.dom."
"minidom.Document`, если событие равно :data:`START_DOCUMENT`, :class:`xml."
"dom.minidom.Element`, если событие равно :data:`START_ELEMENT` или :data:"
"`END_ELEMENT` или :class:`xml.dom.minidom.Text`, если событие равно :data:"
"`CHARACTERS`. Текущий узел не содержит информации о своих дочерних "
"элементах, если не вызывается :func:`expandNode`."

#: ../../library/xml.dom.pulldom.rst:132
msgid "Expands all children of *node* into *node*. Example::"
msgstr "Расширяет всех дочерних элементов *node* в *node*. Пример::"
