# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# Rafael Fontenelle <rffontenelle@gmail.com>, 2024
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.11\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-01-03 15:28+0000\n"
"PO-Revision-Date: 2023-05-24 02:22+0000\n"
"Last-Translator: Rafael Fontenelle <rffontenelle@gmail.com>, 2024\n"
"Language-Team: Russian (https://app.transifex.com/python-doc/teams/5390/"
"ru/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ru\n"
"Plural-Forms: nplurals=4; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && "
"n%10<=4 && (n%100<12 || n%100>14) ? 1 : n%10==0 || (n%10>=5 && n%10<=9) || "
"(n%100>=11 && n%100<=14)? 2 : 3);\n"

#: ../../library/xml.sax.rst:2
msgid ":mod:`xml.sax` --- Support for SAX2 parsers"
msgstr ""

#: ../../library/xml.sax.rst:11
msgid "**Source code:** :source:`Lib/xml/sax/__init__.py`"
msgstr "**Исходный код:** :source:`Lib/xml/sax/__init__.py`"

#: ../../library/xml.sax.rst:15
msgid ""
"The :mod:`xml.sax` package provides a number of modules which implement the "
"Simple API for XML (SAX) interface for Python.  The package itself provides "
"the SAX exceptions and the convenience functions which will be most used by "
"users of the SAX API."
msgstr ""
"Пакет :mod:`xml.sax` предоставляет ряд модулей, которые реализуют интерфейс "
"Simple API for XML (SAX) для Python. Сам пакет предоставляет исключения SAX "
"и удобные функции, которые будут наиболее часто использоваться "
"пользователями SAX API."

#: ../../library/xml.sax.rst:23
msgid ""
"The :mod:`xml.sax` module is not secure against maliciously constructed "
"data.  If you need to parse untrusted or unauthenticated data see :ref:`xml-"
"vulnerabilities`."
msgstr ""
"Модуль :mod:`xml.sax` не защищен от вредоносно созданных данных. Если вам "
"нужно проанализировать ненадежные или неаутентифицированные данные, см. :ref:"
"`xml-vulnerabilities`."

#: ../../library/xml.sax.rst:29
msgid ""
"The SAX parser no longer processes general external entities by default to "
"increase security. Before, the parser created network connections to fetch "
"remote files or loaded local files from the file system for DTD and "
"entities. The feature can be enabled again with method :meth:`~xml.sax."
"xmlreader.XMLReader.setFeature` on the parser object and argument :data:"
"`~xml.sax.handler.feature_external_ges`."
msgstr ""
"Синтаксический анализатор SAX больше не обрабатывает общие внешние объекты "
"по умолчанию для повышения безопасности. Раньше анализатор создавал сетевые "
"подключения для получения удаленных файлов или загружал локальные файлы из "
"файловой системы для DTD и сущностей. Эту функцию можно снова включить с "
"помощью метода :meth:`~xml.sax.xmlreader.XMLReader.setFeature` для объекта "
"синтаксического анализатора и аргумента :data:`~xml.sax.handler."
"feature_external_ges`."

#: ../../library/xml.sax.rst:36
msgid "The convenience functions are:"
msgstr "Удобные функции:"

#: ../../library/xml.sax.rst:41
msgid ""
"Create and return a SAX :class:`~xml.sax.xmlreader.XMLReader` object.  The "
"first parser found will be used.  If *parser_list* is provided, it must be "
"an iterable of strings which name modules that have a function named :func:"
"`create_parser`.  Modules listed in *parser_list* will be used before "
"modules in the default list of parsers."
msgstr ""
"Создайте и верните объект SAX :class:`~xml.sax.xmlreader.XMLReader`. Будет "
"использован первый найденный парсер. Если указан *parser_list*, он должен "
"быть итерацией строк, именующих модули, имеющие функцию с именем :func:"
"`create_parser`. Модули, перечисленные в *parser_list*, будут использоваться "
"перед модулями в списке парсеров по умолчанию."

#: ../../library/xml.sax.rst:47
msgid "The *parser_list* argument can be any iterable, not just a list."
msgstr ""
"Аргумент *parser_list* может быть любым итерируемым объектом, а не только "
"списком."

#: ../../library/xml.sax.rst:53
msgid ""
"Create a SAX parser and use it to parse a document.  The document, passed in "
"as *filename_or_stream*, can be a filename or a file object.  The *handler* "
"parameter needs to be a SAX :class:`~handler.ContentHandler` instance.  If "
"*error_handler* is given, it must be a SAX :class:`~handler.ErrorHandler` "
"instance; if omitted,  :exc:`SAXParseException` will be raised on all "
"errors.  There is no return value; all work must be done by the *handler* "
"passed in."
msgstr ""
"Создайте парсер SAX и используйте его для анализа документа. Документ, "
"передаваемый как *filename_or_stream*, может быть именем файла или файловым "
"объектом. Параметр *handler* должен быть экземпляром SAX :class:`~handler."
"ContentHandler`. Если указан *error_handler*, это должен быть экземпляр SAX :"
"class:`~handler.ErrorHandler`; если опущено, :exc:`SAXParseException` будет "
"вызываться при всех ошибках. Возвращаемого значения нет; вся работа должна "
"выполняться переданным *обработчиком*."

#: ../../library/xml.sax.rst:64
msgid ""
"Similar to :func:`parse`, but parses from a buffer *string* received as a "
"parameter.  *string* must be a :class:`str` instance or a :term:`bytes-like "
"object`."
msgstr ""
"Аналогично :func:`parse`, но анализирует буферную *строку*, полученную в "
"качестве параметра. *строка* должна быть экземпляром :class:`str` или :term:"
"`байтоподобным объектом`."

#: ../../library/xml.sax.rst:68
msgid "Added support of :class:`str` instances."
msgstr "Добавлена ​​поддержка экземпляров :class:`str`."

#: ../../library/xml.sax.rst:71
msgid ""
"A typical SAX application uses three kinds of objects: readers, handlers and "
"input sources.  \"Reader\" in this context is another term for parser, i.e. "
"some piece of code that reads the bytes or characters from the input source, "
"and produces a sequence of events. The events then get distributed to the "
"handler objects, i.e. the reader invokes a method on the handler.  A SAX "
"application must therefore obtain a reader object, create or open the input "
"sources, create the handlers, and connect these objects all together.  As "
"the final step of preparation, the reader is called to parse the input. "
"During parsing, methods on the handler objects are called based on "
"structural and syntactic events from the input data."
msgstr ""
"Типичное приложение SAX использует три типа объектов: считыватели, "
"обработчики и источники ввода. «Читатель» в этом контексте — это еще один "
"термин для обозначения синтаксического анализатора, т. е. некоторого "
"фрагмента кода, который считывает байты или символы из источника входных "
"данных и создает последовательность событий. Затем события распределяются по "
"объектам-обработчикам, т. е. читатель вызывает метод обработчика. Поэтому "
"приложение SAX должно получить объект чтения, создать или открыть источники "
"ввода, создать обработчики и соединить эти объекты вместе. На последнем "
"этапе подготовки считыватель вызывается для анализа входных данных. Во время "
"синтаксического анализа методы объектов-обработчиков вызываются на основе "
"структурных и синтаксических событий из входных данных."

#: ../../library/xml.sax.rst:82
msgid ""
"For these objects, only the interfaces are relevant; they are normally not "
"instantiated by the application itself.  Since Python does not have an "
"explicit notion of interface, they are formally introduced as classes, but "
"applications may use implementations which do not inherit from the provided "
"classes.  The :class:`~xml.sax.xmlreader.InputSource`, :class:`~xml.sax."
"xmlreader.Locator`, :class:`~xml.sax.xmlreader.Attributes`, :class:`~xml.sax."
"xmlreader.AttributesNS`, and :class:`~xml.sax.xmlreader.XMLReader` "
"interfaces are defined in the module :mod:`xml.sax.xmlreader`.  The handler "
"interfaces are defined in :mod:`xml.sax.handler`.  For convenience, :class:"
"`~xml.sax.xmlreader.InputSource` (which is often instantiated directly) and "
"the handler classes are also available from :mod:`xml.sax`.  These "
"interfaces are described below."
msgstr ""
"Для этих объектов важны только интерфейсы; они обычно не создаются самим "
"приложением. Поскольку в Python нет явного понятия интерфейса, они формально "
"представлены как классы, но приложения могут использовать реализации, "
"которые не наследуются от предоставленных классов. :class:`~xml.sax."
"xmlreader.InputSource`, :class:`~xml.sax.xmlreader.Locator`, :class:`~xml."
"sax.xmlreader.Attributes`, :class:`~xml. Интерфейсы sax.xmlreader."
"AttributesNS` и :class:`~xml.sax.xmlreader.XMLReader` определены в модуле :"
"mod:`xml.sax.xmlreader`. Интерфейсы обработчика определены в :mod:`xml.sax."
"handler`. Для удобства :class:`~xml.sax.xmlreader.InputSource` (который "
"часто создается напрямую) и классы-обработчики также доступны из :mod:`xml."
"sax`. Эти интерфейсы описаны ниже."

#: ../../library/xml.sax.rst:95
msgid ""
"In addition to these classes, :mod:`xml.sax` provides the following "
"exception classes."
msgstr ""
"В дополнение к этим классам :mod:`xml.sax` предоставляет следующие классы "
"исключений."

#: ../../library/xml.sax.rst:101
msgid ""
"Encapsulate an XML error or warning.  This class can contain basic error or "
"warning information from either the XML parser or the application: it can be "
"subclassed to provide additional functionality or to add localization.  Note "
"that although the handlers defined in the :class:`~xml.sax.handler."
"ErrorHandler` interface receive instances of this exception, it is not "
"required to actually raise the exception --- it is also useful as a "
"container for information."
msgstr ""
"Инкапсулируйте ошибку или предупреждение XML. Этот класс может содержать "
"базовую информацию об ошибках или предупреждениях либо от анализатора XML, "
"либо от приложения: его можно разделить на подклассы, чтобы обеспечить "
"дополнительную функциональность или добавить локализацию. Обратите внимание: "
"хотя обработчики, определенные в интерфейсе :class:`~xml.sax.handler."
"ErrorHandler`, получают экземпляры этого исключения, фактически вызывать "
"исключение не требуется --- оно также полезно в качестве контейнера для "
"информации."

#: ../../library/xml.sax.rst:109
msgid ""
"When instantiated, *msg* should be a human-readable description of the "
"error. The optional *exception* parameter, if given, should be ``None`` or "
"an exception that was caught by the parsing code and is being passed along "
"as information."
msgstr ""
"При создании экземпляра *msg* должно представлять собой удобочитаемое "
"описание ошибки. Необязательный параметр *Exception*, если он указан, должен "
"иметь значение None или исключение, которое было обнаружено кодом "
"синтаксического анализа и передано в качестве информации."

#: ../../library/xml.sax.rst:113
msgid "This is the base class for the other SAX exception classes."
msgstr "Это базовый класс для других классов исключений SAX."

#: ../../library/xml.sax.rst:118
msgid ""
"Subclass of :exc:`SAXException` raised on parse errors. Instances of this "
"class are passed to the methods of the SAX :class:`~xml.sax.handler."
"ErrorHandler` interface to provide information about the parse error.  This "
"class supports the SAX :class:`~xml.sax.xmlreader.Locator` interface as well "
"as the :class:`SAXException` interface."
msgstr ""
"Подкласс :exc:`SAXException`, возникающий при ошибках синтаксического "
"анализа. Экземпляры этого класса передаются методам интерфейса SAX :class:"
"`~xml.sax.handler.ErrorHandler` для предоставления информации об ошибке "
"синтаксического анализа. Этот класс поддерживает интерфейс SAX :class:`~xml."
"sax.xmlreader.Locator`, а также интерфейс :class:`SAXException`."

#: ../../library/xml.sax.rst:128
msgid ""
"Subclass of :exc:`SAXException` raised when a SAX :class:`~xml.sax.xmlreader."
"XMLReader` is confronted with an unrecognized feature or property.  SAX "
"applications and extensions may use this class for similar purposes."
msgstr ""
"Подкласс :exc:`SAXException` возникает, когда SAX :class:`~xml.sax.xmlreader."
"XMLReader` сталкивается с нераспознанной функцией или свойством. Приложения "
"и расширения SAX могут использовать этот класс для аналогичных целей."

#: ../../library/xml.sax.rst:136
msgid ""
"Subclass of :exc:`SAXException` raised when a SAX :class:`~xml.sax.xmlreader."
"XMLReader` is asked to enable a feature that is not supported, or to set a "
"property to a value that the implementation does not support.  SAX "
"applications and extensions may use this class for similar purposes."
msgstr ""
"Подкласс :exc:`SAXException` возникает, когда SAX :class:`~xml.sax.xmlreader."
"XMLReader` запрашивается для включения функции, которая не поддерживается, "
"или для установки свойства в значение, которое не поддерживается "
"реализацией. . Приложения и расширения SAX могут использовать этот класс для "
"аналогичных целей."

#: ../../library/xml.sax.rst:148
msgid "`SAX: The Simple API for XML <http://www.saxproject.org/>`_"
msgstr "`SAX: Простой API для XML <http://www.saxproject.org/>`_"

#: ../../library/xml.sax.rst:146
msgid ""
"This site is the focal point for the definition of the SAX API.  It provides "
"a Java implementation and online documentation.  Links to implementations "
"and historical information are also available."
msgstr ""
"Этот сайт является центром определения API SAX. Он предоставляет реализацию "
"Java и онлайн-документацию. Также доступны ссылки на реализации и "
"историческую информацию."

#: ../../library/xml.sax.rst:151
msgid "Module :mod:`xml.sax.handler`"
msgstr "Модуль :mod:`xml.sax.handler`"

#: ../../library/xml.sax.rst:151
msgid "Definitions of the interfaces for application-provided objects."
msgstr "Определения интерфейсов для объектов, предоставляемых приложением."

#: ../../library/xml.sax.rst:154
msgid "Module :mod:`xml.sax.saxutils`"
msgstr "Модуль :mod:`xml.sax.saxutils`"

#: ../../library/xml.sax.rst:154
msgid "Convenience functions for use in SAX applications."
msgstr "Удобные функции для использования в приложениях SAX."

#: ../../library/xml.sax.rst:156
msgid "Module :mod:`xml.sax.xmlreader`"
msgstr "Модуль :mod:`xml.sax.xmlreader`"

#: ../../library/xml.sax.rst:157
msgid "Definitions of the interfaces for parser-provided objects."
msgstr "Определения интерфейсов для объектов, предоставляемых анализатором."

#: ../../library/xml.sax.rst:163
msgid "SAXException Objects"
msgstr "Объекты SAXException"

#: ../../library/xml.sax.rst:165
msgid ""
"The :class:`SAXException` exception class supports the following methods:"
msgstr "Класс исключений :class:`SAXException` поддерживает следующие методы:"

#: ../../library/xml.sax.rst:170
msgid "Return a human-readable message describing the error condition."
msgstr "Возвращает удобочитаемое сообщение с описанием состояния ошибки."

#: ../../library/xml.sax.rst:175
msgid "Return an encapsulated exception object, or ``None``."
msgstr "Вернуть инкапсулированный объект исключения или None."
