# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# Rafael Fontenelle <rffontenelle@gmail.com>, 2024
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.10\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-01-10 16:06+0000\n"
"PO-Revision-Date: 2022-11-05 17:22+0000\n"
"Last-Translator: Rafael Fontenelle <rffontenelle@gmail.com>, 2024\n"
"Language-Team: Russian (https://app.transifex.com/python-doc/teams/5390/"
"ru/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ru\n"
"Plural-Forms: nplurals=4; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && "
"n%10<=4 && (n%100<12 || n%100>14) ? 1 : n%10==0 || (n%10>=5 && n%10<=9) || "
"(n%100>=11 && n%100<=14)? 2 : 3);\n"

#: ../../library/pathlib.rst:3
msgid ":mod:`pathlib` --- Object-oriented filesystem paths"
msgstr ""

#: ../../library/pathlib.rst:10
msgid "**Source code:** :source:`Lib/pathlib.py`"
msgstr "**Source code:** :source:`Lib/pathlib.py`"

#: ../../library/pathlib.rst:16
msgid ""
"This module offers classes representing filesystem paths with semantics "
"appropriate for different operating systems.  Path classes are divided "
"between :ref:`pure paths <pure-paths>`, which provide purely computational "
"operations without I/O, and :ref:`concrete paths <concrete-paths>`, which "
"inherit from pure paths but also provide I/O operations."
msgstr ""
"Этот модуль предлагает классы, представляющие пути файловой системы с "
"семантикой, подходящей для разных операционных систем. Классы путей делятся "
"на :ref:`pure paths <pure-paths>`, которые обеспечивают чисто вычислительные "
"операции без ввода-вывода, и :ref:`concrete paths <concrete-paths>`, которые "
"наследуются от чистых путей, но также предоставляют Операции ввода-вывода."

#: ../../library/pathlib.rst:25
msgid ""
"If you've never used this module before or just aren't sure which class is "
"right for your task, :class:`Path` is most likely what you need. It "
"instantiates a :ref:`concrete path <concrete-paths>` for the platform the "
"code is running on."
msgstr ""
"Если вы никогда раньше не использовали этот модуль или просто не уверены, "
"какой класс подходит для вашей задачи, :class:`Path`, скорее всего, вам "
"нужен. Он создает экземпляр :ref:`конкретного пути <concrete-paths>` для "
"платформы, на которой выполняется код."

#: ../../library/pathlib.rst:29
msgid "Pure paths are useful in some special cases; for example:"
msgstr "Чистые пути полезны в некоторых особых случаях; например:"

#: ../../library/pathlib.rst:31
msgid ""
"If you want to manipulate Windows paths on a Unix machine (or vice versa). "
"You cannot instantiate a :class:`WindowsPath` when running on Unix, but you "
"can instantiate :class:`PureWindowsPath`."
msgstr ""
"Если вы хотите манипулировать путями Windows на компьютере с Unix (или "
"наоборот). Вы не можете создать экземпляр :class:`WindowsPath` при работе в "
"Unix, но вы можете создать экземпляр :class:`PureWindowsPath`."

#: ../../library/pathlib.rst:34
msgid ""
"You want to make sure that your code only manipulates paths without actually "
"accessing the OS. In this case, instantiating one of the pure classes may be "
"useful since those simply don't have any OS-accessing operations."
msgstr ""
"Вы хотите быть уверены, что ваш код только манипулирует путями, не обращаясь "
"к ОС. В этом случае может оказаться полезным создание экземпляра одного из "
"чистых классов, поскольку у них просто нет никаких операций доступа к ОС."

#: ../../library/pathlib.rst:39
msgid ":pep:`428`: The pathlib module -- object-oriented filesystem paths."
msgstr ""
":pep:`428`: Модуль pathlib — пути к объектно-ориентированной файловой "
"системе."

#: ../../library/pathlib.rst:42
msgid ""
"For low-level path manipulation on strings, you can also use the :mod:`os."
"path` module."
msgstr ""
"Для низкоуровневых манипуляций с путями строк вы также можете использовать "
"модуль :mod:`os.path`."

#: ../../library/pathlib.rst:47
msgid "Basic use"
msgstr "Основное использование"

#: ../../library/pathlib.rst:49
msgid "Importing the main class::"
msgstr "Импорт основного класса::"

#: ../../library/pathlib.rst:53
msgid "Listing subdirectories::"
msgstr "Перечисление подкаталогов::"

#: ../../library/pathlib.rst:60
msgid "Listing Python source files in this directory tree::"
msgstr "Листинг исходных файлов Python в этом дереве каталогов::"

#: ../../library/pathlib.rst:67
msgid "Navigating inside a directory tree::"
msgstr "Навигация внутри дерева каталогов::"

#: ../../library/pathlib.rst:76
msgid "Querying path properties::"
msgstr "Запрос свойств пути::"

#: ../../library/pathlib.rst:83
msgid "Opening a file::"
msgstr "Открытие файла::"

#: ../../library/pathlib.rst:93
msgid "Pure paths"
msgstr "Чистые пути"

#: ../../library/pathlib.rst:95
msgid ""
"Pure path objects provide path-handling operations which don't actually "
"access a filesystem.  There are three ways to access these classes, which we "
"also call *flavours*:"
msgstr ""
"Объекты чистого пути предоставляют операции обработки пути, которые "
"фактически не обращаются к файловой системе. Есть три способа доступа к этим "
"классам, которые мы также называем *ароматы*:"

#: ../../library/pathlib.rst:101
msgid ""
"A generic class that represents the system's path flavour (instantiating it "
"creates either a :class:`PurePosixPath` or a :class:`PureWindowsPath`)::"
msgstr ""
"Общий класс, который представляет вариант системного пути (при его создании "
"создается либо :class:`PurePosixPath`, либо :class:`PureWindowsPath`)::"

#: ../../library/pathlib.rst:107
msgid ""
"Each element of *pathsegments* can be either a string representing a path "
"segment, an object implementing the :class:`os.PathLike` interface which "
"returns a string, or another path object::"
msgstr ""

#: ../../library/pathlib.rst:116
msgid "When *pathsegments* is empty, the current directory is assumed::"
msgstr "Если *pathsegments* пусто, подразумевается текущий каталог::"

#: ../../library/pathlib.rst:121
msgid ""
"If a segment is an absolute path, all previous segments are ignored (like :"
"func:`os.path.join`)::"
msgstr ""
"Если сегмент представляет собой абсолютный путь, все предыдущие сегменты "
"игнорируются (например, :func:`os.path.join`)::"

#: ../../library/pathlib.rst:129
msgid ""
"On Windows, the drive is not reset when a rooted relative path segment (e."
"g., ``r'\\foo'``) is encountered::"
msgstr ""
"В Windows диск не сбрасывается при обнаружении корневого сегмента "
"относительного пути (например, ``r'\\foo'``)::"

#: ../../library/pathlib.rst:135
msgid ""
"Spurious slashes and single dots are collapsed, but double dots (``'..'``) "
"and leading double slashes (``'//'``) are not, since this would change the "
"meaning of a path for various reasons (e.g. symbolic links, UNC paths)::"
msgstr ""
"Ложные косые черты и одиночные точки сворачиваются, а двойные точки "
"(``'..'``) и ведущие двойные косые черты (``'//'``) - нет, поскольку это "
"может изменить смысл пути по разным причинам. (например, символические "
"ссылки, пути UNC)::"

#: ../../library/pathlib.rst:148
msgid ""
"(a naïve approach would make ``PurePosixPath('foo/../bar')`` equivalent to "
"``PurePosixPath('bar')``, which is wrong if ``foo`` is a symbolic link to "
"another directory)"
msgstr ""
"(при наивном подходе ``PurePosixPath('foo/../bar')`` эквивалентен "
"``PurePosixPath('bar')``, что неверно, если ``foo`` является символической "
"ссылкой на другой каталог. )"

#: ../../library/pathlib.rst:152
msgid ""
"Pure path objects implement the :class:`os.PathLike` interface, allowing "
"them to be used anywhere the interface is accepted."
msgstr ""
"Объекты чистого пути реализуют интерфейс :class:`os.PathLike`, что позволяет "
"использовать их везде, где этот интерфейс принят."

#: ../../library/pathlib.rst:155
msgid "Added support for the :class:`os.PathLike` interface."
msgstr "Добавлена ​​поддержка интерфейса :class:`os.PathLike`."

#: ../../library/pathlib.rst:160
msgid ""
"A subclass of :class:`PurePath`, this path flavour represents non-Windows "
"filesystem paths::"
msgstr ""
"Подкласс :class:`PurePath`, этот вариант пути представляет пути файловой "
"системы, отличные от Windows::"

#: ../../library/pathlib.rst:166 ../../library/pathlib.rst:178
#: ../../library/pathlib.rst:671 ../../library/pathlib.rst:681
#: ../../library/pathlib.rst:691
msgid "*pathsegments* is specified similarly to :class:`PurePath`."
msgstr "*pathsegments* указывается аналогично :class:`PurePath`."

#: ../../library/pathlib.rst:170
msgid ""
"A subclass of :class:`PurePath`, this path flavour represents Windows "
"filesystem paths, including `UNC paths`_::"
msgstr ""
"Подкласс :class:`PurePath`, этот вариант пути представляет пути файловой "
"системы Windows, включая `UNC-пути`_::"

#: ../../library/pathlib.rst:182
msgid ""
"Regardless of the system you're running on, you can instantiate all of these "
"classes, since they don't provide any operation that does system calls."
msgstr ""
"Независимо от системы, в которой вы работаете, вы можете создать экземпляры "
"всех этих классов, поскольку они не предоставляют никаких операций, "
"выполняющих системные вызовы."

#: ../../library/pathlib.rst:187
msgid "General properties"
msgstr "Общие свойства"

#: ../../library/pathlib.rst:189
msgid ""
"Paths are immutable and :term:`hashable`.  Paths of a same flavour are "
"comparable and orderable.  These properties respect the flavour's case-"
"folding semantics::"
msgstr ""
"Пути являются неизменяемыми и :term:`хэшируемыми`. Пути одного и того же "
"вкуса сопоставимы и доступны для заказа. Эти свойства учитывают семантику "
"свертывания регистра аромата:"

#: ../../library/pathlib.rst:202
msgid "Paths of a different flavour compare unequal and cannot be ordered::"
msgstr ""
"Пути разного вкуса сравниваются неравными и не могут быть упорядочены::"

#: ../../library/pathlib.rst:213
msgid "Operators"
msgstr "Операторы"

#: ../../library/pathlib.rst:215
msgid ""
"The slash operator helps create child paths, like :func:`os.path.join`. If "
"the argument is an absolute path, the previous path is ignored. On Windows, "
"the drive is not reset when the argument is a rooted relative path (e.g., "
"``r'\\foo'``)::"
msgstr ""
"Оператор косой черты помогает создавать дочерние пути, например :func:`os."
"path.join`. Если аргумент представляет собой абсолютный путь, предыдущий "
"путь игнорируется. В Windows диск не сбрасывается, если аргументом является "
"корневой относительный путь (например, ``r'\\foo'``)::"

#: ../../library/pathlib.rst:233
msgid ""
"A path object can be used anywhere an object implementing :class:`os."
"PathLike` is accepted::"
msgstr ""
"Объект пути можно использовать везде, где принят объект, реализующий :class:"
"`os.PathLike`::"

#: ../../library/pathlib.rst:241
msgid ""
"The string representation of a path is the raw filesystem path itself (in "
"native form, e.g. with backslashes under Windows), which you can pass to any "
"function taking a file path as a string::"
msgstr ""
"Строковое представление пути — это сам необработанный путь файловой системы "
"(в собственной форме, например, с обратной косой чертой в Windows), который "
"вы можете передать любой функции, принимающей путь к файлу в виде строки::"

#: ../../library/pathlib.rst:252
msgid ""
"Similarly, calling :class:`bytes` on a path gives the raw filesystem path as "
"a bytes object, as encoded by :func:`os.fsencode`::"
msgstr ""
"Аналогично, вызов :class:`bytes` для пути дает необработанный путь файловой "
"системы в виде байтового объекта, закодированного :func:`os.fsencode`::"

#: ../../library/pathlib.rst:259
msgid ""
"Calling :class:`bytes` is only recommended under Unix.  Under Windows, the "
"unicode form is the canonical representation of filesystem paths."
msgstr ""
"Вызов :class:`bytes` рекомендуется только в Unix. В Windows форма Юникода "
"является каноническим представлением путей файловой системы."

#: ../../library/pathlib.rst:264
msgid "Accessing individual parts"
msgstr "Доступ к отдельным частям"

#: ../../library/pathlib.rst:266
msgid ""
"To access the individual \"parts\" (components) of a path, use the following "
"property:"
msgstr ""
"Чтобы получить доступ к отдельным «частям» (компонентам) пути, используйте "
"следующее свойство:"

#: ../../library/pathlib.rst:271
msgid "A tuple giving access to the path's various components::"
msgstr "Кортеж, предоставляющий доступ к различным компонентам пути:"

#: ../../library/pathlib.rst:281
msgid "(note how the drive and local root are regrouped in a single part)"
msgstr ""
"(обратите внимание, как диск и локальный корень перегруппированы в одну "
"часть)"

#: ../../library/pathlib.rst:285
msgid "Methods and properties"
msgstr "Методы и свойства"

#: ../../library/pathlib.rst:291
msgid "Pure paths provide the following methods and properties:"
msgstr "Чистые пути предоставляют следующие методы и свойства:"

#: ../../library/pathlib.rst:295
msgid "A string representing the drive letter or name, if any::"
msgstr "Строка, представляющая букву или имя диска, если таковое имеется::"

#: ../../library/pathlib.rst:304
msgid "UNC shares are also considered drives::"
msgstr "Общие ресурсы UNC также считаются дисками:"

#: ../../library/pathlib.rst:311
msgid "A string representing the (local or global) root, if any::"
msgstr ""
"Строка, представляющая корень (локальный или глобальный), если таковой "
"имеется::"

#: ../../library/pathlib.rst:320
msgid "UNC shares always have a root::"
msgstr "UNC-акции всегда имеют корень::"

#: ../../library/pathlib.rst:325
msgid ""
"If the path starts with more than two successive slashes, :class:`~pathlib."
"PurePosixPath` collapses them::"
msgstr ""
"Если путь начинается с более чем двух последовательных косых черт, :class:"
"`~pathlib.PurePosixPath` сворачивает их::"

#: ../../library/pathlib.rst:337
msgid ""
"This behavior conforms to *The Open Group Base Specifications Issue 6*, "
"paragraph `4.11 Pathname Resolution <https://pubs.opengroup.org/"
"onlinepubs/009695399/basedefs/xbd_chap04.html#tag_04_11>`_:"
msgstr ""
"Такое поведение соответствует *Базовым спецификациям открытой группы, выпуск "
"6*, параграф `4.11 Разрешение пути <https://pubs.opengroup.org/"
"onlinepubs/009695399/basedefs/xbd_chap04.html#tag_04_11>`_:"

#: ../../library/pathlib.rst:341
msgid ""
"*\"A pathname that begins with two successive slashes may be interpreted in "
"an implementation-defined manner, although more than two leading slashes "
"shall be treated as a single slash.\"*"
msgstr ""
"*\"Имя пути, которое начинается с двух последовательных косых черт, может "
"интерпретироваться в зависимости от реализации, хотя более двух ведущих "
"косых черт должны рассматриваться как одна косая черта.\"*"

#: ../../library/pathlib.rst:347
msgid "The concatenation of the drive and root::"
msgstr "Объединение диска и корня::"

#: ../../library/pathlib.rst:361
msgid ""
"An immutable sequence providing access to the logical ancestors of the path::"
msgstr ""
"Неизменяемая последовательность, обеспечивающая доступ к логическим предкам "
"пути::"

#: ../../library/pathlib.rst:372
msgid ""
"The parents sequence now supports :term:`slices <slice>` and negative index "
"values."
msgstr ""
"Родительская последовательность теперь поддерживает :term:`slices <slice>` и "
"отрицательные значения индекса."

#: ../../library/pathlib.rst:377
msgid "The logical parent of the path::"
msgstr "Логический родитель пути::"

#: ../../library/pathlib.rst:383
msgid "You cannot go past an anchor, or empty path::"
msgstr "Вы не можете пройти мимо привязки или пустого пути::"

#: ../../library/pathlib.rst:393
msgid "This is a purely lexical operation, hence the following behaviour::"
msgstr "Это чисто лексическая операция, отсюда и следующее поведение:"

#: ../../library/pathlib.rst:399
msgid ""
"If you want to walk an arbitrary filesystem path upwards, it is recommended "
"to first call :meth:`Path.resolve` so as to resolve symlinks and eliminate "
"`\"..\"` components."
msgstr ""

#: ../../library/pathlib.rst:406
msgid ""
"A string representing the final path component, excluding the drive and "
"root, if any::"
msgstr ""
"Строка, представляющая конечный компонент пути, исключая диск и корень, если "
"таковые имеются::"

#: ../../library/pathlib.rst:412
msgid "UNC drive names are not considered::"
msgstr "Имена дисков UNC не учитываются::"

#: ../../library/pathlib.rst:422
msgid "The file extension of the final component, if any::"
msgstr "Расширение файла конечного компонента, если таковое имеется::"

#: ../../library/pathlib.rst:434
msgid "A list of the path's file extensions::"
msgstr "Список расширений файлов пути::"

#: ../../library/pathlib.rst:446
msgid "The final path component, without its suffix::"
msgstr "Последний компонент пути без суффикса::"

#: ../../library/pathlib.rst:458
msgid ""
"Return a string representation of the path with forward slashes (``/``)::"
msgstr "Возвращает строковое представление пути с косой чертой (``/``)::"

#: ../../library/pathlib.rst:469
msgid ""
"Represent the path as a ``file`` URI.  :exc:`ValueError` is raised if the "
"path isn't absolute."
msgstr ""
"Представляйте путь как URI ``файла``. :exc:`ValueError` возникает, если путь "
"не является абсолютным."

#: ../../library/pathlib.rst:482
msgid ""
"Return whether the path is absolute or not.  A path is considered absolute "
"if it has both a root and (if the flavour allows) a drive::"
msgstr ""
"Возвращает значение, является ли путь абсолютным или нет. Путь считается "
"абсолютным, если он имеет как корень, так и (если позволяет версия) диск::"

#: ../../library/pathlib.rst:502
msgid "Return whether or not this path is relative to the *other* path."
msgstr ""
"Возвращает значение, является ли этот путь относительно *другого* пути."

#: ../../library/pathlib.rst:515
msgid ""
"With :class:`PureWindowsPath`, return ``True`` if the path is considered "
"reserved under Windows, ``False`` otherwise.  With :class:`PurePosixPath`, "
"``False`` is always returned."
msgstr ""
"С помощью :class:`PureWindowsPath` верните ``True``, если путь считается "
"зарезервированным под Windows, ``False`` в противном случае. При "
"использовании :class:`PurePosixPath` всегда возвращается ``False``."

#: ../../library/pathlib.rst:524
msgid ""
"File system calls on reserved paths can fail mysteriously or have unintended "
"effects."
msgstr ""
"Вызовы файловой системы по зарезервированным путям могут привести к "
"загадочному сбою или иметь непредвиденные последствия."

#: ../../library/pathlib.rst:530
msgid ""
"Calling this method is equivalent to combining the path with each of the "
"*other* arguments in turn::"
msgstr ""

#: ../../library/pathlib.rst:545
msgid ""
"Match this path against the provided glob-style pattern.  Return ``True`` if "
"matching is successful, ``False`` otherwise."
msgstr ""
"Сопоставьте этот путь с предоставленным шаблоном в стиле glob. Возвращайте "
"True, если сопоставление прошло успешно, в противном случае — False."

#: ../../library/pathlib.rst:548
msgid ""
"If *pattern* is relative, the path can be either relative or absolute, and "
"matching is done from the right::"
msgstr ""
"Если *шаблон* является относительным, путь может быть как относительным, так "
"и абсолютным, и сопоставление выполняется справа::"

#: ../../library/pathlib.rst:558
msgid ""
"If *pattern* is absolute, the path must be absolute, and the whole path must "
"match::"
msgstr ""
"Если *pattern* является абсолютным, путь должен быть абсолютным, и весь путь "
"должен соответствовать::"

#: ../../library/pathlib.rst:566
msgid "As with other methods, case-sensitivity follows platform defaults::"
msgstr ""
"Как и в других методах, чувствительность к регистру соответствует настройкам "
"платформы по умолчанию:"

#: ../../library/pathlib.rst:576
msgid ""
"Compute a version of this path relative to the path represented by *other*.  "
"If it's impossible, ValueError is raised::"
msgstr ""

#: ../../library/pathlib.rst:591
msgid ""
"NOTE: This function is part of :class:`PurePath` and works with strings. It "
"does not check or access the underlying file structure."
msgstr ""

#: ../../library/pathlib.rst:596
msgid ""
"Return a new path with the :attr:`name` changed.  If the original path "
"doesn't have a name, ValueError is raised::"
msgstr ""
"Вернуть новый путь с измененным :attr:`name`. Если исходный путь не имеет "
"имени, возникает ValueError::"

#: ../../library/pathlib.rst:613
msgid ""
"Return a new path with the :attr:`stem` changed.  If the original path "
"doesn't have a name, ValueError is raised::"
msgstr ""
"Вернуть новый путь с измененным :attr:`stem`. Если исходный путь не имеет "
"имени, возникает ValueError::"

#: ../../library/pathlib.rst:637
msgid ""
"Return a new path with the :attr:`suffix` changed.  If the original path "
"doesn't have a suffix, the new *suffix* is appended instead.  If the "
"*suffix* is an empty string, the original suffix is removed::"
msgstr ""
"Вернуть новый путь с измененным суффиксом :attr:`suffix`. Если исходный путь "
"не имеет суффикса, вместо него добавляется новый *суффикс*. Если *суффикс* "
"представляет собой пустую строку, исходный суффикс удаляется::"

#: ../../library/pathlib.rst:656
msgid "Concrete paths"
msgstr "Конкретные пути"

#: ../../library/pathlib.rst:658
msgid ""
"Concrete paths are subclasses of the pure path classes.  In addition to "
"operations provided by the latter, they also provide methods to do system "
"calls on path objects.  There are three ways to instantiate concrete paths:"
msgstr ""
"Конкретные пути являются подклассами классов чистых путей. В дополнение к "
"операциям, предоставляемым последними, они также предоставляют методы для "
"выполнения системных вызовов объектов пути. Существует три способа создания "
"конкретных путей:"

#: ../../library/pathlib.rst:664
msgid ""
"A subclass of :class:`PurePath`, this class represents concrete paths of the "
"system's path flavour (instantiating it creates either a :class:`PosixPath` "
"or a :class:`WindowsPath`)::"
msgstr ""
"Подкласс :class:`PurePath`, этот класс представляет конкретные пути "
"системного пути (при его создании создается либо :class:`PosixPath`, либо :"
"class:`WindowsPath`)::"

#: ../../library/pathlib.rst:675
msgid ""
"A subclass of :class:`Path` and :class:`PurePosixPath`, this class "
"represents concrete non-Windows filesystem paths::"
msgstr ""
"Подкласс :class:`Path` и :class:`PurePosixPath`, этот класс представляет "
"конкретные пути к файловой системе, отличной от Windows::"

#: ../../library/pathlib.rst:685
msgid ""
"A subclass of :class:`Path` and :class:`PureWindowsPath`, this class "
"represents concrete Windows filesystem paths::"
msgstr ""
"Подкласс :class:`Path` и :class:`PureWindowsPath`, этот класс представляет "
"конкретные пути к файловой системе Windows::"

#: ../../library/pathlib.rst:693
msgid ""
"You can only instantiate the class flavour that corresponds to your system "
"(allowing system calls on non-compatible path flavours could lead to bugs or "
"failures in your application)::"
msgstr ""
"Вы можете создать экземпляр только того класса, который соответствует вашей "
"системе (разрешение системных вызовов по несовместимым вариантам путей может "
"привести к ошибкам или сбоям в вашем приложении)::"

#: ../../library/pathlib.rst:713
msgid "Methods"
msgstr "Методы"

#: ../../library/pathlib.rst:715
msgid ""
"Concrete paths provide the following methods in addition to pure paths "
"methods.  Many of these methods can raise an :exc:`OSError` if a system call "
"fails (for example because the path doesn't exist)."
msgstr ""

#: ../../library/pathlib.rst:721
msgid ""
":meth:`~Path.exists()`, :meth:`~Path.is_dir()`, :meth:`~Path.is_file()`, :"
"meth:`~Path.is_mount()`, :meth:`~Path.is_symlink()`, :meth:`~Path."
"is_block_device()`, :meth:`~Path.is_char_device()`, :meth:`~Path."
"is_fifo()`, :meth:`~Path.is_socket()` now return ``False`` instead of "
"raising an exception for paths that contain characters unrepresentable at "
"the OS level."
msgstr ""

#: ../../library/pathlib.rst:731
msgid ""
"Return a new path object representing the current directory (as returned by :"
"func:`os.getcwd`)::"
msgstr ""
"Вернуть новый объект пути, представляющий текущий каталог (возвращенный :"
"func:`os.getcwd`)::"

#: ../../library/pathlib.rst:740
msgid ""
"Return a new path object representing the user's home directory (as returned "
"by :func:`os.path.expanduser` with ``~`` construct). If the home directory "
"can't be resolved, :exc:`RuntimeError` is raised."
msgstr ""
"Возвращает новый объект пути, представляющий домашний каталог пользователя "
"(возвращаемый :func:`os.path.expanduser` с конструкцией ``~``). Если "
"домашний каталог не может быть разрешен, возникает :exc:`RuntimeError`."

#: ../../library/pathlib.rst:754
msgid ""
"Return a :class:`os.stat_result` object containing information about this "
"path, like :func:`os.stat`. The result is looked up at each call to this "
"method."
msgstr ""

#: ../../library/pathlib.rst:757
msgid ""
"This method normally follows symlinks; to stat a symlink add the argument "
"``follow_symlinks=False``, or use :meth:`~Path.lstat`."
msgstr ""
"Этот метод обычно следует за символическими ссылками; для проверки "
"символической ссылки добавьте аргумент ``follow_symlinks=False`` или "
"используйте :meth:`~Path.lstat`."

#: ../../library/pathlib.rst:768 ../../library/pathlib.rst:788
msgid "The *follow_symlinks* parameter was added."
msgstr "Добавлен параметр *follow_symlinks*."

#: ../../library/pathlib.rst:773
msgid "Change the file mode and permissions, like :func:`os.chmod`."
msgstr "Измените режим файла и разрешения, например :func:`os.chmod`."

#: ../../library/pathlib.rst:775
msgid ""
"This method normally follows symlinks. Some Unix flavours support changing "
"permissions on the symlink itself; on these platforms you may add the "
"argument ``follow_symlinks=False``, or use :meth:`~Path.lchmod`."
msgstr ""
"Этот метод обычно следует за символическими ссылками. Некоторые версии Unix "
"поддерживают изменение разрешений для самой символической ссылки; на этих "
"платформах вы можете добавить аргумент ``follow_symlinks=False`` или "
"использовать :meth:`~Path.lchmod`."

#: ../../library/pathlib.rst:793
msgid "Whether the path points to an existing file or directory::"
msgstr ""

#: ../../library/pathlib.rst:805
msgid ""
"If the path points to a symlink, :meth:`exists` returns whether the symlink "
"*points to* an existing file or directory."
msgstr ""

#: ../../library/pathlib.rst:811
msgid ""
"Return a new path with expanded ``~`` and ``~user`` constructs, as returned "
"by :meth:`os.path.expanduser`. If a home directory can't be resolved, :exc:"
"`RuntimeError` is raised."
msgstr ""
"Возвращает новый путь с расширенными конструкциями ``~`` и ``~user``, как "
"это возвращает :meth:`os.path.expanduser`. Если домашний каталог не может "
"быть разрешен, возникает :exc:`RuntimeError`."

#: ../../library/pathlib.rst:826
msgid ""
"Glob the given relative *pattern* in the directory represented by this path, "
"yielding all matching files (of any kind)::"
msgstr ""
"Добавьте заданный относительный *шаблон* в каталог, представленный этим "
"путем, получив все соответствующие файлы (любого типа)::"

#: ../../library/pathlib.rst:834
msgid ""
"Patterns are the same as for :mod:`fnmatch`, with the addition of \"``**``\" "
"which means \"this directory and all subdirectories, recursively\".  In "
"other words, it enables recursive globbing::"
msgstr ""
"Шаблоны такие же, как и для :mod:`fnmatch`, с добавлением \"``**``\", что "
"означает \"этот каталог и все подкаталоги, рекурсивно\". Другими словами, он "
"позволяет рекурсивное подстановку::"

#: ../../library/pathlib.rst:846
msgid ""
"Using the \"``**``\" pattern in large directory trees may consume an "
"inordinate amount of time."
msgstr ""
"Использование шаблона «``**``» в больших деревьях каталогов может занять "
"слишком много времени."

#: ../../library/pathlib.rst:849
msgid ""
"Raises an :ref:`auditing event <auditing>` ``pathlib.Path.glob`` with "
"arguments ``self``, ``pattern``."
msgstr ""
"Вызывает событие аудита <auditing>`pathlib.Path.glob`` с аргументами "
"``self``, ``pattern``."

#: ../../library/pathlib.rst:854
msgid ""
"Return the name of the group owning the file.  :exc:`KeyError` is raised if "
"the file's gid isn't found in the system database."
msgstr ""

#: ../../library/pathlib.rst:860
msgid ""
"Return ``True`` if the path points to a directory (or a symbolic link "
"pointing to a directory), ``False`` if it points to another kind of file."
msgstr ""
"Возвращайте ``True``, если путь указывает на каталог (или символическую "
"ссылку, указывающую на каталог), ``False``, если он указывает на другой тип "
"файла."

#: ../../library/pathlib.rst:863 ../../library/pathlib.rst:872
#: ../../library/pathlib.rst:901 ../../library/pathlib.rst:910
#: ../../library/pathlib.rst:919 ../../library/pathlib.rst:928
msgid ""
"``False`` is also returned if the path doesn't exist or is a broken symlink; "
"other errors (such as permission errors) are propagated."
msgstr ""
"``False`` также возвращается, если путь не существует или является "
"неработающей символической ссылкой; другие ошибки (например, ошибки "
"разрешений) распространяются."

#: ../../library/pathlib.rst:869
msgid ""
"Return ``True`` if the path points to a regular file (or a symbolic link "
"pointing to a regular file), ``False`` if it points to another kind of file."
msgstr ""
"Возвращайте ``True``, если путь указывает на обычный файл (или символическую "
"ссылку, указывающую на обычный файл), ``False``, если он указывает на другой "
"тип файла."

#: ../../library/pathlib.rst:878
msgid ""
"Return ``True`` if the path is a :dfn:`mount point`: a point in a file "
"system where a different file system has been mounted.  On POSIX, the "
"function checks whether *path*'s parent, :file:`path/..`, is on a different "
"device than *path*, or whether :file:`path/..` and *path* point to the same "
"i-node on the same device --- this should detect mount points for all Unix "
"and POSIX variants.  Not implemented on Windows."
msgstr ""

#: ../../library/pathlib.rst:890
msgid ""
"Return ``True`` if the path points to a symbolic link, ``False`` otherwise."
msgstr ""
"Возвращайте True, если путь указывает на символическую ссылку, и False в "
"противном случае."

#: ../../library/pathlib.rst:892
msgid ""
"``False`` is also returned if the path doesn't exist; other errors (such as "
"permission errors) are propagated."
msgstr ""
"``False`` также возвращается, если путь не существует; другие ошибки "
"(например, ошибки разрешений) распространяются."

#: ../../library/pathlib.rst:898
msgid ""
"Return ``True`` if the path points to a Unix socket (or a symbolic link "
"pointing to a Unix socket), ``False`` if it points to another kind of file."
msgstr ""
"Возвращайте ``True``, если путь указывает на сокет Unix (или символическую "
"ссылку, указывающую на сокет Unix), ``False``, если он указывает на файл "
"другого типа."

#: ../../library/pathlib.rst:907
msgid ""
"Return ``True`` if the path points to a FIFO (or a symbolic link pointing to "
"a FIFO), ``False`` if it points to another kind of file."
msgstr ""
"Возвращайте ``True``, если путь указывает на FIFO (или символическую ссылку, "
"указывающую на FIFO), ``False``, если он указывает на файл другого типа."

#: ../../library/pathlib.rst:916
msgid ""
"Return ``True`` if the path points to a block device (or a symbolic link "
"pointing to a block device), ``False`` if it points to another kind of file."
msgstr ""
"Возвращайте ``True``, если путь указывает на блочное устройство (или "
"символическую ссылку, указывающую на блочное устройство), ``False``, если он "
"указывает на другой тип файла."

#: ../../library/pathlib.rst:925
msgid ""
"Return ``True`` if the path points to a character device (or a symbolic link "
"pointing to a character device), ``False`` if it points to another kind of "
"file."
msgstr ""
"Возвращайте ``True``, если путь указывает на символьное устройство (или "
"символическую ссылку, указывающую на символьное устройство), ``False``, если "
"он указывает на файл другого типа."

#: ../../library/pathlib.rst:934
msgid ""
"When the path points to a directory, yield path objects of the directory "
"contents::"
msgstr ""
"Когда путь указывает на каталог, выведите объекты пути содержимого каталога::"

#: ../../library/pathlib.rst:948
msgid ""
"The children are yielded in arbitrary order, and the special entries ``'.'`` "
"and ``'..'`` are not included.  If a file is removed from or added to the "
"directory after creating the iterator, whether a path object for that file "
"be included is unspecified."
msgstr ""

#: ../../library/pathlib.rst:955
msgid ""
"Like :meth:`Path.chmod` but, if the path points to a symbolic link, the "
"symbolic link's mode is changed rather than its target's."
msgstr ""
"Подобно :meth:`Path.chmod`, но если путь указывает на символическую ссылку, "
"изменяется режим символической ссылки, а не ее целевой."

#: ../../library/pathlib.rst:961
msgid ""
"Like :meth:`Path.stat` but, if the path points to a symbolic link, return "
"the symbolic link's information rather than its target's."
msgstr ""
"Подобно :meth:`Path.stat`, но если путь указывает на символическую ссылку, "
"возвращайте информацию о символической ссылке, а не о ее цели."

#: ../../library/pathlib.rst:967
msgid ""
"Create a new directory at this given path.  If *mode* is given, it is "
"combined with the process' ``umask`` value to determine the file mode and "
"access flags.  If the path already exists, :exc:`FileExistsError` is raised."
msgstr ""

#: ../../library/pathlib.rst:972
msgid ""
"If *parents* is true, any missing parents of this path are created as "
"needed; they are created with the default permissions without taking *mode* "
"into account (mimicking the POSIX ``mkdir -p`` command)."
msgstr ""
"Если *parents* имеет значение true, все отсутствующие родительские элементы "
"этого пути создаются по мере необходимости; они создаются с разрешениями по "
"умолчанию без учета *mode* (имитируя команду POSIX ``mkdir -p``)."

#: ../../library/pathlib.rst:976
msgid ""
"If *parents* is false (the default), a missing parent raises :exc:"
"`FileNotFoundError`."
msgstr ""
"Если *parents* имеет значение false (по умолчанию), отсутствующий родитель "
"вызывает :exc:`FileNotFoundError`."

#: ../../library/pathlib.rst:979
msgid ""
"If *exist_ok* is false (the default), :exc:`FileExistsError` is raised if "
"the target directory already exists."
msgstr ""
"Если *exist_ok* имеет значение false (по умолчанию), :exc:`FileExistsError` "
"возникает, если целевой каталог уже существует."

#: ../../library/pathlib.rst:982
msgid ""
"If *exist_ok* is true, :exc:`FileExistsError` exceptions will be ignored "
"(same behavior as the POSIX ``mkdir -p`` command), but only if the last path "
"component is not an existing non-directory file."
msgstr ""

#: ../../library/pathlib.rst:986
msgid "The *exist_ok* parameter was added."
msgstr "Добавлен параметр *exist_ok*."

#: ../../library/pathlib.rst:992
msgid ""
"Open the file pointed to by the path, like the built-in :func:`open` "
"function does::"
msgstr ""
"Откройте файл, на который указывает путь, как это делает встроенная функция :"
"func:`open`::"

#: ../../library/pathlib.rst:1004
msgid ""
"Return the name of the user owning the file.  :exc:`KeyError` is raised if "
"the file's uid isn't found in the system database."
msgstr ""

#: ../../library/pathlib.rst:1010
msgid "Return the binary contents of the pointed-to file as a bytes object::"
msgstr ""
"Вернуть двоичное содержимое указанного файла в виде байтового объекта::"

#: ../../library/pathlib.rst:1023
msgid "Return the decoded contents of the pointed-to file as a string::"
msgstr "Вернуть декодированное содержимое указанного файла в виде строки::"

#: ../../library/pathlib.rst:1031
msgid ""
"The file is opened and then closed. The optional parameters have the same "
"meaning as in :func:`open`."
msgstr ""
"Файл открывается, а затем закрывается. Необязательные параметры имеют то же "
"значение, что и в :func:`open`."

#: ../../library/pathlib.rst:1039
msgid ""
"Return the path to which the symbolic link points (as returned by :func:`os."
"readlink`)::"
msgstr ""
"Возвращает путь, на который указывает символическая ссылка (возвращенная :"
"func:`os.readlink`)::"

#: ../../library/pathlib.rst:1052
msgid ""
"Rename this file or directory to the given *target*, and return a new Path "
"instance pointing to *target*.  On Unix, if *target* exists and is a file, "
"it will be replaced silently if the user has permission. On Windows, if "
"*target* exists, :exc:`FileExistsError` will be raised. *target* can be "
"either a string or another path object::"
msgstr ""

#: ../../library/pathlib.rst:1067 ../../library/pathlib.rst:1083
msgid ""
"The target path may be absolute or relative. Relative paths are interpreted "
"relative to the current working directory, *not* the directory of the Path "
"object."
msgstr ""

#: ../../library/pathlib.rst:1071
msgid ""
"It is implemented in terms of :func:`os.rename` and gives the same "
"guarantees."
msgstr "Он реализован с помощью :func:`os.rename` и дает те же гарантии."

#: ../../library/pathlib.rst:1073 ../../library/pathlib.rst:1087
msgid "Added return value, return the new Path instance."
msgstr ""

#: ../../library/pathlib.rst:1079
msgid ""
"Rename this file or directory to the given *target*, and return a new Path "
"instance pointing to *target*.  If *target* points to an existing file or "
"empty directory, it will be unconditionally replaced."
msgstr ""

#: ../../library/pathlib.rst:1093
msgid ""
"Make the path absolute, resolving any symlinks.  A new path object is "
"returned::"
msgstr ""
"Сделайте путь абсолютным, разрешая любые символические ссылки. Возвращается "
"новый объект пути::"

#: ../../library/pathlib.rst:1102
msgid ""
"\"``..``\" components are also eliminated (this is the only method to do "
"so)::"
msgstr ""
"Компоненты \"``..``\" также удаляются (это единственный способ сделать это)::"

#: ../../library/pathlib.rst:1108
msgid ""
"If the path doesn't exist and *strict* is ``True``, :exc:`FileNotFoundError` "
"is raised.  If *strict* is ``False``, the path is resolved as far as "
"possible and any remainder is appended without checking whether it exists.  "
"If an infinite loop is encountered along the resolution path, :exc:"
"`RuntimeError` is raised."
msgstr ""
"Если путь не существует и *strict* имеет значение True, возникает :exc:"
"`FileNotFoundError`. Если *strict* имеет значение False, путь разрешается, "
"насколько это возможно, и любой остаток добавляется без проверки его "
"существования. Если на пути разрешения встречается бесконечный цикл, "
"возникает :exc:`RuntimeError`."

#: ../../library/pathlib.rst:1114
msgid "The *strict* argument (pre-3.6 behavior is strict)."
msgstr ""

#: ../../library/pathlib.rst:1119
msgid ""
"This is like calling :func:`Path.glob` with \"``**/``\" added in front of "
"the given relative *pattern*::"
msgstr ""

#: ../../library/pathlib.rst:1129
msgid ""
"Raises an :ref:`auditing event <auditing>` ``pathlib.Path.rglob`` with "
"arguments ``self``, ``pattern``."
msgstr ""
"Вызывает событие аудита <auditing>`pathlib.Path.rglob`` с аргументами "
"``self``, ``pattern``."

#: ../../library/pathlib.rst:1134
msgid "Remove this directory.  The directory must be empty."
msgstr "Удалите этот каталог. Каталог должен быть пустым."

#: ../../library/pathlib.rst:1139
msgid ""
"Return whether this path points to the same file as *other_path*, which can "
"be either a Path object, or a string.  The semantics are similar to :func:"
"`os.path.samefile` and :func:`os.path.samestat`."
msgstr ""
"Возвращает значение, указывает ли этот путь на тот же файл, что и "
"*other_path*, который может быть либо объектом Path, либо строкой. Семантика "
"аналогична :func:`os.path.samefile` и :func:`os.path.samestat`."

#: ../../library/pathlib.rst:1143
msgid ""
"An :exc:`OSError` can be raised if either file cannot be accessed for some "
"reason."
msgstr ""
"Ошибка :exc:`OSError` может быть выдана, если по какой-либо причине доступ к "
"одному из файлов невозможен."

#: ../../library/pathlib.rst:1160
msgid ""
"Make this path a symbolic link to *target*.  Under Windows, "
"*target_is_directory* must be true (default ``False``) if the link's target "
"is a directory.  Under POSIX, *target_is_directory*'s value is ignored."
msgstr ""

#: ../../library/pathlib.rst:1176
msgid ""
"The order of arguments (link, target) is the reverse of :func:`os.symlink`'s."
msgstr ""
"Порядок аргументов (ссылка, цель) обратный порядку аргументов :func:`os."
"symlink`."

#: ../../library/pathlib.rst:1181
msgid "Make this path a hard link to the same file as *target*."
msgstr "Сделайте этот путь жесткой ссылкой на тот же файл, что и *target*."

#: ../../library/pathlib.rst:1184
msgid ""
"The order of arguments (link, target) is the reverse of :func:`os.link`'s."
msgstr ""
"Порядок аргументов (ссылка, цель) обратный порядку аргументов :func:`os."
"link`."

#: ../../library/pathlib.rst:1191
msgid "Make *target* a hard link to this path."
msgstr ""

#: ../../library/pathlib.rst:1195
msgid ""
"This function does not make this path a hard link to *target*, despite the "
"implication of the function and argument names. The argument order (target, "
"link) is the reverse of :func:`Path.symlink_to` and :func:`Path."
"hardlink_to`, but matches that of :func:`os.link`."
msgstr ""

#: ../../library/pathlib.rst:1204
msgid ""
"This method is deprecated in favor of :meth:`Path.hardlink_to`, as the "
"argument order of :meth:`Path.link_to`  does not match that of :meth:`Path."
"symlink_to`."
msgstr ""

#: ../../library/pathlib.rst:1211
msgid ""
"Create a file at this given path.  If *mode* is given, it is combined with "
"the process' ``umask`` value to determine the file mode and access flags.  "
"If the file already exists, the function succeeds if *exist_ok* is true (and "
"its modification time is updated to the current time), otherwise :exc:"
"`FileExistsError` is raised."
msgstr ""

#: ../../library/pathlib.rst:1220
msgid ""
"Remove this file or symbolic link.  If the path points to a directory, use :"
"func:`Path.rmdir` instead."
msgstr ""
"Удалите этот файл или символическую ссылку. Если путь указывает на каталог, "
"используйте вместо него :func:`Path.rmdir`."

#: ../../library/pathlib.rst:1223
msgid ""
"If *missing_ok* is false (the default), :exc:`FileNotFoundError` is raised "
"if the path does not exist."
msgstr ""
"Если *missing_ok* имеет значение false (по умолчанию), :exc:"
"`FileNotFoundError` возникает, если путь не существует."

#: ../../library/pathlib.rst:1226
msgid ""
"If *missing_ok* is true, :exc:`FileNotFoundError` exceptions will be ignored "
"(same behavior as the POSIX ``rm -f`` command)."
msgstr ""
"Если *missing_ok* истинно, исключения :exc:`FileNotFoundError` будут "
"игнорироваться (то же поведение, что и у команды POSIX ``rm -f``)."

#: ../../library/pathlib.rst:1229
msgid "The *missing_ok* parameter was added."
msgstr "Добавлен параметр *missing_ok*."

#: ../../library/pathlib.rst:1235
msgid ""
"Open the file pointed to in bytes mode, write *data* to it, and close the "
"file::"
msgstr ""
"Откройте указанный файл в байтовом режиме, запишите в него *данные* и "
"закройте файл::"

#: ../../library/pathlib.rst:1244
msgid "An existing file of the same name is overwritten."
msgstr "Существующий файл с таким же именем будет перезаписан."

#: ../../library/pathlib.rst:1251
msgid ""
"Open the file pointed to in text mode, write *data* to it, and close the "
"file::"
msgstr ""
"Откройте указанный файл в текстовом режиме, напишите в него *данные* и "
"закройте файл::"

#: ../../library/pathlib.rst:1260
msgid ""
"An existing file of the same name is overwritten. The optional parameters "
"have the same meaning as in :func:`open`."
msgstr ""
"Существующий файл с таким же именем будет перезаписан. Необязательные "
"параметры имеют то же значение, что и в :func:`open`."

#: ../../library/pathlib.rst:1265
msgid "The *newline* parameter was added."
msgstr "Добавлен параметр *newline*."

#: ../../library/pathlib.rst:1269
msgid "Correspondence to tools in the :mod:`os` module"
msgstr "Соответствие инструментам в модуле :mod:`os`"

#: ../../library/pathlib.rst:1271
msgid ""
"Below is a table mapping various :mod:`os` functions to their corresponding :"
"class:`PurePath`/:class:`Path` equivalent."
msgstr ""
"Ниже приведена таблица, сопоставляющая различные функции :mod:`os` с их "
"соответствующими эквивалентами :class:`PurePath`/:class:`Path`."

#: ../../library/pathlib.rst:1276
msgid ""
"Not all pairs of functions/methods below are equivalent. Some of them, "
"despite having some overlapping use-cases, have different semantics. They "
"include :func:`os.path.abspath` and :meth:`Path.resolve`, :func:`os.path."
"relpath` and :meth:`PurePath.relative_to`."
msgstr ""

#: ../../library/pathlib.rst:1282
msgid ":mod:`os` and :mod:`os.path`"
msgstr ":mod:`os` и :mod:`os.path`"

#: ../../library/pathlib.rst:1282
msgid ":mod:`pathlib`"
msgstr ":mod:`pathlib`"

#: ../../library/pathlib.rst:1284
msgid ":func:`os.path.abspath`"
msgstr ":func:`os.path.abspath`"

#: ../../library/pathlib.rst:1284
msgid ":meth:`Path.resolve` [#]_"
msgstr ""

#: ../../library/pathlib.rst:1285
msgid ":func:`os.chmod`"
msgstr ":func:`os.chmod`"

#: ../../library/pathlib.rst:1285
msgid ":meth:`Path.chmod`"
msgstr ":meth:`Path.chmod`"

#: ../../library/pathlib.rst:1286
msgid ":func:`os.mkdir`"
msgstr ":func:`os.mkdir`"

#: ../../library/pathlib.rst:1286 ../../library/pathlib.rst:1287
msgid ":meth:`Path.mkdir`"
msgstr ":meth:`Path.mkdir`"

#: ../../library/pathlib.rst:1287
msgid ":func:`os.makedirs`"
msgstr ":func:`os.makedirs`"

#: ../../library/pathlib.rst:1288
msgid ":func:`os.rename`"
msgstr ":func:`os.rename`"

#: ../../library/pathlib.rst:1288
msgid ":meth:`Path.rename`"
msgstr ":meth:`Path.rename`"

#: ../../library/pathlib.rst:1289
msgid ":func:`os.replace`"
msgstr ":func:`os.replace`"

#: ../../library/pathlib.rst:1289
msgid ":meth:`Path.replace`"
msgstr ":meth:`Path.replace`"

#: ../../library/pathlib.rst:1290
msgid ":func:`os.rmdir`"
msgstr ":func:`os.rmdir`"

#: ../../library/pathlib.rst:1290
msgid ":meth:`Path.rmdir`"
msgstr ":meth:`Path.rmdir`"

#: ../../library/pathlib.rst:1291
msgid ":func:`os.remove`, :func:`os.unlink`"
msgstr ":func:`os.remove`, :func:`os.unlink`"

#: ../../library/pathlib.rst:1291
msgid ":meth:`Path.unlink`"
msgstr ":meth:`Path.unlink`"

#: ../../library/pathlib.rst:1292
msgid ":func:`os.getcwd`"
msgstr ":func:`os.getcwd`"

#: ../../library/pathlib.rst:1292
msgid ":func:`Path.cwd`"
msgstr ":func:`Path.cwd`"

#: ../../library/pathlib.rst:1293
msgid ":func:`os.path.exists`"
msgstr ":func:`os.path.exists`"

#: ../../library/pathlib.rst:1293
msgid ":meth:`Path.exists`"
msgstr ":meth:`Path.exists`"

#: ../../library/pathlib.rst:1294
msgid ":func:`os.path.expanduser`"
msgstr ":func:`os.path.expanduser`"

#: ../../library/pathlib.rst:1294
msgid ":meth:`Path.expanduser` and :meth:`Path.home`"
msgstr ":meth:`Path.expanduser` и :meth:`Path.home`"

#: ../../library/pathlib.rst:1296
msgid ":func:`os.listdir`"
msgstr ":func:`os.listdir`"

#: ../../library/pathlib.rst:1296
msgid ":meth:`Path.iterdir`"
msgstr ":meth:`Path.iterdir`"

#: ../../library/pathlib.rst:1297
msgid ":func:`os.path.isdir`"
msgstr ":func:`os.path.isdir`"

#: ../../library/pathlib.rst:1297
msgid ":meth:`Path.is_dir`"
msgstr ":meth:`Path.is_dir`"

#: ../../library/pathlib.rst:1298
msgid ":func:`os.path.isfile`"
msgstr ":func:`os.path.isfile`"

#: ../../library/pathlib.rst:1298
msgid ":meth:`Path.is_file`"
msgstr ":meth:`Path.is_file`"

#: ../../library/pathlib.rst:1299
msgid ":func:`os.path.islink`"
msgstr ":func:`os.path.islink`"

#: ../../library/pathlib.rst:1299
msgid ":meth:`Path.is_symlink`"
msgstr ":meth:`Path.is_symlink`"

#: ../../library/pathlib.rst:1300
msgid ":func:`os.link`"
msgstr ":func:`os.link`"

#: ../../library/pathlib.rst:1300
msgid ":meth:`Path.hardlink_to`"
msgstr ":meth:`Path.hardlink_to`"

#: ../../library/pathlib.rst:1301
msgid ":func:`os.symlink`"
msgstr ":func:`os.symlink`"

#: ../../library/pathlib.rst:1301
msgid ":meth:`Path.symlink_to`"
msgstr ":meth:`Path.symlink_to`"

#: ../../library/pathlib.rst:1302
msgid ":func:`os.readlink`"
msgstr ":func:`os.readlink`"

#: ../../library/pathlib.rst:1302
msgid ":meth:`Path.readlink`"
msgstr ":meth:`Path.readlink`"

#: ../../library/pathlib.rst:1303
msgid ":func:`os.path.relpath`"
msgstr ":func:`os.path.relpath`"

#: ../../library/pathlib.rst:1303
msgid ":meth:`PurePath.relative_to` [#]_"
msgstr ""

#: ../../library/pathlib.rst:1304
msgid ":func:`os.stat`"
msgstr ":func:`os.stat`"

#: ../../library/pathlib.rst:1304
msgid ":meth:`Path.stat`, :meth:`Path.owner`, :meth:`Path.group`"
msgstr ":meth:`Path.stat`, :meth:`Path.owner`, :meth:`Path.group`"

#: ../../library/pathlib.rst:1307
msgid ":func:`os.path.isabs`"
msgstr ":func:`os.path.isabs`"

#: ../../library/pathlib.rst:1307
msgid ":meth:`PurePath.is_absolute`"
msgstr ":meth:`PurePath.is_absolute`"

#: ../../library/pathlib.rst:1308
msgid ":func:`os.path.join`"
msgstr ":func:`os.path.join`"

#: ../../library/pathlib.rst:1308
msgid ":func:`PurePath.joinpath`"
msgstr ":func:`PurePath.joinpath`"

#: ../../library/pathlib.rst:1309
msgid ":func:`os.path.basename`"
msgstr ":func:`os.path.basename`"

#: ../../library/pathlib.rst:1309
msgid ":attr:`PurePath.name`"
msgstr ":attr:`PurePath.name`"

#: ../../library/pathlib.rst:1310
msgid ":func:`os.path.dirname`"
msgstr ":func:`os.path.dirname`"

#: ../../library/pathlib.rst:1310
msgid ":attr:`PurePath.parent`"
msgstr ":attr:`PurePath.parent`"

#: ../../library/pathlib.rst:1311
msgid ":func:`os.path.samefile`"
msgstr ":func:`os.path.samefile`"

#: ../../library/pathlib.rst:1311
msgid ":meth:`Path.samefile`"
msgstr ":meth:`Path.samefile`"

#: ../../library/pathlib.rst:1312
msgid ":func:`os.path.splitext`"
msgstr ":func:`os.path.splitext`"

#: ../../library/pathlib.rst:1312
msgid ":attr:`PurePath.stem` and :attr:`PurePath.suffix`"
msgstr ":attr:`PurePath.stem` и :attr:`PurePath.suffix`"

#: ../../library/pathlib.rst:1317
msgid "Footnotes"
msgstr "Сноски"

#: ../../library/pathlib.rst:1318
msgid ""
":func:`os.path.abspath` does not resolve symbolic links while :meth:`Path."
"resolve` does."
msgstr ""

#: ../../library/pathlib.rst:1319
msgid ""
":meth:`PurePath.relative_to` requires ``self`` to be the subpath of the "
"argument, but :func:`os.path.relpath` does not."
msgstr ""
