# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# Rafael Fontenelle <rffontenelle@gmail.com>, 2024
# Roustam Khamidoulline, 2024
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.12\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-01-17 14:51+0000\n"
"PO-Revision-Date: 2024-05-11 00:33+0000\n"
"Last-Translator: Roustam Khamidoulline, 2024\n"
"Language-Team: Russian (https://app.transifex.com/python-doc/teams/5390/"
"ru/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ru\n"
"Plural-Forms: nplurals=4; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && "
"n%10<=4 && (n%100<12 || n%100>14) ? 1 : n%10==0 || (n%10>=5 && n%10<=9) || "
"(n%100>=11 && n%100<=14)? 2 : 3);\n"

#: ../../library/marshal.rst:2
msgid ":mod:`!marshal` --- Internal Python object serialization"
msgstr ":mod:`!marshal` --- Внутренняя сериализация объектов Python"

#: ../../library/marshal.rst:10
msgid ""
"This module contains functions that can read and write Python values in a "
"binary format.  The format is specific to Python, but independent of machine "
"architecture issues (e.g., you can write a Python value to a file on a PC, "
"transport the file to a Mac, and read it back there).  Details of the format "
"are undocumented on purpose; it may change between Python versions (although "
"it rarely does). [#]_"
msgstr ""
"Этот модуль содержит функции, которые могут читать и записывать значения "
"Python в двоичном формате. Формат специфичен для Python, но не зависит от "
"проблем машинной архитектуры (например, вы можете записать значение Python в "
"файл на ПК, перенести файл на Mac и прочитать его там). Детали формата "
"намеренно недокументированы; оно может меняться в разных версиях Python "
"(хотя это случается редко). [#]_"

#: ../../library/marshal.rst:21
msgid ""
"This is not a general \"persistence\" module.  For general persistence and "
"transfer of Python objects through RPC calls, see the modules :mod:`pickle` "
"and :mod:`shelve`.  The :mod:`marshal` module exists mainly to support "
"reading and writing the \"pseudo-compiled\" code for Python modules of :file:"
"`.pyc` files. Therefore, the Python maintainers reserve the right to modify "
"the marshal format in backward incompatible ways should the need arise.  If "
"you're serializing and de-serializing Python objects, use the :mod:`pickle` "
"module instead -- the performance is comparable, version independence is "
"guaranteed, and pickle supports a substantially wider range of objects than "
"marshal."
msgstr ""
"Это не общий модуль «постоянства». Для общего сохранения и передачи объектов "
"Python через вызовы RPC см. модули :mod:`pickle` и :mod:`shelve`. Модуль :"
"mod:`marshal` существует в основном для поддержки чтения и записи "
"«псевдоскомпилированного» кода для модулей Python файлов :file:`.pyc`. "
"Поэтому сопровождающие Python оставляют за собой право изменять формат "
"маршала обратно несовместимыми способами, если возникнет такая "
"необходимость. Если вы сериализуете и десериализуете объекты Python, "
"используйте вместо этого модуль :mod:`pickle` — производительность "
"сопоставима, независимость версий гарантирована, и Pickle поддерживает "
"значительно более широкий диапазон объектов, чем Marshal."

#: ../../library/marshal.rst:33
msgid ""
"The :mod:`marshal` module is not intended to be secure against erroneous or "
"maliciously constructed data.  Never unmarshal data received from an "
"untrusted or unauthenticated source."
msgstr ""
"Модуль :mod:`marshal` не предназначен для защиты от ошибочных или "
"злонамеренно созданных данных. Никогда не демаршализуйте данные, полученные "
"из ненадежного или неаутентифицированного источника."

#: ../../library/marshal.rst:39
msgid ""
"Not all Python object types are supported; in general, only objects whose "
"value is independent from a particular invocation of Python can be written "
"and read by this module.  The following types are supported: booleans, "
"integers, floating-point numbers, complex numbers, strings, bytes, "
"bytearrays, tuples, lists, sets, frozensets, dictionaries, and code objects, "
"where it should be understood that tuples, lists, sets, frozensets and "
"dictionaries are only supported as long as the values contained therein are "
"themselves supported.  The singletons :const:`None`, :const:`Ellipsis` and :"
"exc:`StopIteration` can also be marshalled and unmarshalled. For format "
"*version* lower than 3, recursive lists, sets and dictionaries cannot be "
"written (see below)."
msgstr ""
"Поддерживаются не все типы объектов Python; в общем, этим модулем могут быть "
"записаны и прочитаны только объекты, значение которых не зависит от "
"конкретного вызова Python. Поддерживаются следующие типы: логические "
"значения, целые числа, числа с плавающей запятой, комплексные числа, строки, "
"байты, байтовые массивы, кортежи, списки, наборы, замороженные наборы, "
"словари и объекты кода, где следует понимать, что кортежи, списки, наборы, "
"замороженные наборы и словари поддерживаются только до тех пор, пока "
"поддерживаются содержащиеся в них значения. Синглтоны :const:`None`, :const:"
"`Ellipsis` и :exc:`StopIteration` также могут быть маршалированы и "
"демаршаллированы. Для формата *версия* ниже 3 невозможно создавать "
"рекурсивные списки, множества и словари (см. ниже)."

#: ../../library/marshal.rst:51
msgid ""
"There are functions that read/write files as well as functions operating on "
"bytes-like objects."
msgstr ""
"Существуют функции, которые читают/записывают файлы, а также функции, "
"работающие с байтоподобными объектами."

#: ../../library/marshal.rst:54
msgid "The module defines these functions:"
msgstr "Модуль определяет следующие функции:"

#: ../../library/marshal.rst:59
msgid ""
"Write the value on the open file.  The value must be a supported type.  The "
"file must be a writeable :term:`binary file`."
msgstr ""
"Запишите значение в открытый файл. Значение должно быть поддерживаемого "
"типа. Файл должен быть доступным для записи бинарным файлом."

#: ../../library/marshal.rst:62
msgid ""
"If the value has (or contains an object that has) an unsupported type, a :"
"exc:`ValueError` exception is raised --- but garbage data will also be "
"written to the file.  The object will not be properly read back by :func:"
"`load`."
msgstr ""
"Если значение имеет (или содержит объект, который имеет) неподдерживаемый "
"тип, возникает исключение :exc:`ValueError` --- но в файл также будут "
"записаны мусорные данные. Объект не будет правильно прочитан функцией :func:"
"`load`."

#: ../../library/marshal.rst:66
msgid ""
"The *version* argument indicates the data format that ``dump`` should use "
"(see below)."
msgstr ""
"Аргумент *version* указывает формат данных, который должен использовать "
"``dump`` (см. ниже)."

#: ../../library/marshal.rst:69 ../../library/marshal.rst:101
msgid ""
"Raises an :ref:`auditing event <auditing>` ``marshal.dumps`` with arguments "
"``value``, ``version``."
msgstr ""
"Вызывает :ref:`событие аудита <auditing>``marshal.dumps`` с аргументами "
"``value``, ``version``."

#: ../../library/marshal.rst:74
msgid ""
"Read one value from the open file and return it.  If no valid value is read "
"(e.g. because the data has a different Python version's incompatible marshal "
"format), raise :exc:`EOFError`, :exc:`ValueError` or :exc:`TypeError`.  The "
"file must be a readable :term:`binary file`."
msgstr ""
"Прочитайте одно значение из открытого файла и верните его. Если допустимое "
"значение не считывается (например, потому что данные имеют формат маршала, "
"несовместимый с другой версией Python), вызовите :exc:`EOFError`, :exc:"
"`ValueError` или :exc:`TypeError`. Файл должен быть читаемым:term:`двоичным "
"файлом`."

#: ../../library/marshal.rst:79
msgid ""
"Raises an :ref:`auditing event <auditing>` ``marshal.load`` with no "
"arguments."
msgstr ""
"Вызывает :ref:`событие аудита <auditing>``marshal.load`` без аргументов."

#: ../../library/marshal.rst:83
msgid ""
"If an object containing an unsupported type was marshalled with :func:"
"`dump`, :func:`load` will substitute ``None`` for the unmarshallable type."
msgstr ""
"Если объект, содержащий неподдерживаемый тип, был маршалирован с помощью :"
"func:`dump`, :func:`load` заменит ``None`` на немаршализуемый тип."

#: ../../library/marshal.rst:88
msgid ""
"This call used to raise a ``code.__new__`` audit event for each code object. "
"Now it raises a single ``marshal.load`` event for the entire load operation."
msgstr ""
"Этот вызов используется для создания события аудита ``code.__new__`` для "
"каждого объекта кода. Теперь он вызывает одно событие marshal.load для всей "
"операции загрузки."

#: ../../library/marshal.rst:94
msgid ""
"Return the bytes object that would be written to a file by ``dump(value, "
"file)``.  The value must be a supported type.  Raise a :exc:`ValueError` "
"exception if value has (or contains an object that has) an unsupported type."
msgstr ""
"Возвращает объект байтов, который будет записан в файл с помощью "
"``dump(value, file)``. Значение должно быть поддерживаемого типа. Вызовите "
"исключение :exc:`ValueError`, если значение имеет (или содержит объект, "
"который имеет) неподдерживаемый тип."

#: ../../library/marshal.rst:98
msgid ""
"The *version* argument indicates the data format that ``dumps`` should use "
"(see below)."
msgstr ""
"Аргумент *version* указывает формат данных, который должен использовать "
"``dumps`` (см. ниже)."

#: ../../library/marshal.rst:106
msgid ""
"Convert the :term:`bytes-like object` to a value.  If no valid value is "
"found, raise :exc:`EOFError`, :exc:`ValueError` or :exc:`TypeError`.  Extra "
"bytes in the input are ignored."
msgstr ""
"Преобразуйте :term:`байтовый объект` в значение. Если допустимое значение не "
"найдено, вызовите :exc:`EOFError`, :exc:`ValueError` или :exc:`TypeError`. "
"Дополнительные байты во входных данных игнорируются."

#: ../../library/marshal.rst:110
msgid ""
"Raises an :ref:`auditing event <auditing>` ``marshal.loads`` with argument "
"``bytes``."
msgstr ""
"Вызывает :ref:`событие аудита <auditing>``marshal.loads`` с аргументом "
"``bytes``."

#: ../../library/marshal.rst:114
msgid ""
"This call used to raise a ``code.__new__`` audit event for each code object. "
"Now it raises a single ``marshal.loads`` event for the entire load operation."
msgstr ""
"Этот вызов используется для создания события аудита ``code.__new__`` для "
"каждого объекта кода. Теперь он вызывает одно событие marshal.loads для всей "
"операции загрузки."

#: ../../library/marshal.rst:118
msgid "In addition, the following constants are defined:"
msgstr "Кроме того, определены следующие константы:"

#: ../../library/marshal.rst:122
msgid ""
"Indicates the format that the module uses. Version 0 is the historical "
"format, version 1 shares interned strings and version 2 uses a binary format "
"for floating-point numbers. Version 3 adds support for object instancing and "
"recursion. The current version is 4."
msgstr ""
"Указывает формат, который использует модуль. Версия 0 — это исторический "
"формат, версия 1 использует встроенные строки, а версия 2 использует "
"двоичный формат для чисел с плавающей запятой. Версия 3 добавляет поддержку "
"создания экземпляров объектов и рекурсии. Текущая версия — 4."

#: ../../library/marshal.rst:130
msgid "Footnotes"
msgstr "Сноски"

#: ../../library/marshal.rst:131
msgid ""
"The name of this module stems from a bit of terminology used by the "
"designers of Modula-3 (amongst others), who use the term \"marshalling\" for "
"shipping of data around in a self-contained form. Strictly speaking, \"to "
"marshal\" means to convert some data from internal to external form (in an "
"RPC buffer for instance) and \"unmarshalling\" for the reverse process."
msgstr ""
"Название этого модуля происходит от терминологии, используемой "
"разработчиками Модулы-3 (среди прочих), которые используют термин "
"«маршалинг» для передачи данных в автономной форме. Строго говоря, "
"«маршалинг» означает преобразование некоторых данных из внутренней во "
"внешнюю форму (например, в буфере RPC) и «демаршалинг» для обратного "
"процесса."

#: ../../library/marshal.rst:17
msgid "module"
msgstr "модуль"

#: ../../library/marshal.rst:17
msgid "pickle"
msgstr "pickle"

#: ../../library/marshal.rst:17
msgid "shelve"
msgstr "полка"

#: ../../library/marshal.rst:37
msgid "object"
msgstr "объект"

#: ../../library/marshal.rst:37
msgid "code"
msgstr "код"

#: ../../library/marshal.rst:37
msgid "code object"
msgstr "объект кода"
