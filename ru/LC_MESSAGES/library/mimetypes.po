# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001 Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# Rafael Fontenelle <rffontenelle@gmail.com>, 2025
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.14\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-07-25 14:21+0000\n"
"PO-Revision-Date: 2025-07-18 18:49+0000\n"
"Last-Translator: Rafael Fontenelle <rffontenelle@gmail.com>, 2025\n"
"Language-Team: Russian (https://app.transifex.com/python-doc/teams/5390/"
"ru/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ru\n"
"Plural-Forms: nplurals=4; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && "
"n%10<=4 && (n%100<12 || n%100>14) ? 1 : n%10==0 || (n%10>=5 && n%10<=9) || "
"(n%100>=11 && n%100<=14)? 2 : 3);\n"

#: ../../library/mimetypes.rst:2
msgid ":mod:`!mimetypes` --- Map filenames to MIME types"
msgstr ":mod:`!mimetypes` --- Сопоставляет имена файлов с типами MIME"

#: ../../library/mimetypes.rst:9
msgid "**Source code:** :source:`Lib/mimetypes.py`"
msgstr "**Исходный код:** :source:`Lib/mimetypes.py`"

#: ../../library/mimetypes.rst:15
msgid ""
"The :mod:`mimetypes` module converts between a filename or URL and the MIME "
"type associated with the filename extension.  Conversions are provided from "
"filename to MIME type and from MIME type to filename extension; encodings "
"are not supported for the latter conversion."
msgstr ""
"Модуль :mod:`mimetypes` преобразует имя файла или URL-адрес в тип MIME, "
"связанный с расширением имени файла. Обеспечиваются преобразования имени "
"файла в тип MIME и из типа MIME в расширение имени файла; кодировки для "
"последнего преобразования не поддерживаются."

#: ../../library/mimetypes.rst:20
msgid ""
"The module provides one class and a number of convenience functions. The "
"functions are the normal interface to this module, but some applications may "
"be interested in the class as well."
msgstr ""
"Модуль предоставляет один класс и ряд удобных функций. Функции являются "
"обычным интерфейсом этого модуля, но некоторые приложения также могут быть "
"заинтересованы в этом классе."

#: ../../library/mimetypes.rst:24
msgid ""
"The functions described below provide the primary interface for this "
"module.  If the module has not been initialized, they will call :func:`init` "
"if they rely on the information :func:`init` sets up."
msgstr ""
"Описанные ниже функции обеспечивают основной интерфейс для этого модуля. "
"Если модуль не был инициализирован, они вызовут :func:`init`, если "
"полагаются на информацию, установленную :func:`init`."

#: ../../library/mimetypes.rst:33
msgid ""
"Guess the type of a file based on its filename, path or URL, given by *url*. "
"URL can be a string or a :term:`path-like object`."
msgstr ""
"Угадайте тип файла по его имени, пути или URL-адресу, заданному *url*. URL-"
"адрес может быть строкой или объектом, похожим на путь."

#: ../../library/mimetypes.rst:36
msgid ""
"The return value is a tuple ``(type, encoding)`` where *type* is ``None`` if "
"the type can't be guessed (missing or unknown suffix) or a string of the "
"form ``'type/subtype'``, usable for a MIME :mailheader:`content-type` header."
msgstr ""
"Возвращаемое значение представляет собой кортеж ``(type,coding)``, где "
"*type* равен ``None``, если тип невозможно угадать (отсутствует или "
"неизвестный суффикс), или строку вида ``'type/ subtype'``, можно "
"использовать для MIME-заголовка :mailheader:`content-type`."

#: ../../library/mimetypes.rst:40
msgid ""
"*encoding* is ``None`` for no encoding or the name of the program used to "
"encode (e.g. :program:`compress` or :program:`gzip`). The encoding is "
"suitable for use as a :mailheader:`Content-Encoding` header, **not** as a :"
"mailheader:`Content-Transfer-Encoding` header. The mappings are table "
"driven. Encoding suffixes are case sensitive; type suffixes are first tried "
"case sensitively, then case insensitively."
msgstr ""
"*кодирование* имеет значение «Нет» для отсутствия кодирования или имени "
"программы, используемой для кодирования (например, :program:`compress` или :"
"program:`gzip`). Кодировка подходит для использования в качестве заголовка :"
"mailheader:`Content-Encoding`, **не** в качестве заголовка :mailheader:"
"`Content-Transfer-Encoding`. Сопоставления управляются таблицами. Суффиксы "
"кодировки чувствительны к регистру; Суффиксы типов сначала проверяются с "
"учетом регистра, а затем без учета регистра."

#: ../../library/mimetypes.rst:47
msgid ""
"The optional *strict* argument is a flag specifying whether the list of "
"known MIME types is limited to only the official types `registered with IANA "
"<https://www.iana.org/assignments/media-types/media-types.xhtml>`_. However, "
"the behavior of this module also depends on the underlying operating system. "
"Only file types recognized by the OS or explicitly registered with Python's "
"internal database can be identified. When *strict* is ``True`` (the "
"default), only the IANA types are supported; when *strict* is ``False``, "
"some additional non-standard but commonly used MIME types are also "
"recognized."
msgstr ""

#: ../../library/mimetypes.rst:56
msgid "Added support for *url* being a :term:`path-like object`."
msgstr "Добавлена ​​поддержка *url* как :term:`путеподобного объекта`."

#: ../../library/mimetypes.rst:59
msgid ""
"Passing a file path instead of URL is :term:`soft deprecated`. Use :func:"
"`guess_file_type` for this."
msgstr ""
"Передача пути к файлу вместо URL является :term:`мягко устаревшей`. "
"Используйте для этого :func:`guess_file_type`."

#: ../../library/mimetypes.rst:68
msgid ""
"Guess the type of a file based on its path, given by *path*. Similar to the :"
"func:`guess_type` function, but accepts a path instead of URL. Path can be a "
"string, a bytes object or a :term:`path-like object`."
msgstr ""
"Угадайте тип файла по его пути, заданному *path*. Аналогично функции :func:"
"`guess_type`, но принимает путь вместо URL. Путь может быть строкой, "
"байтовым объектом или объектом, похожим на путь."

#: ../../library/mimetypes.rst:77
msgid ""
"Guess the extensions for a file based on its MIME type, given by *type*. The "
"return value is a list of strings giving all possible filename extensions, "
"including the leading dot (``'.'``).  The extensions are not guaranteed to "
"have been associated with any particular data stream, but would be mapped to "
"the MIME type *type* by :func:`guess_type` and :func:`guess_file_type`."
msgstr ""
"Угадайте расширения файла на основе его MIME-типа, заданного *type*. "
"Возвращаемое значение представляет собой список строк, задающих все "
"возможные расширения имен файлов, включая ведущую точку (``'.'``). Не "
"гарантируется, что расширения связаны с каким-либо конкретным потоком "
"данных, но будут сопоставлены с MIME-типом *type* с помощью :func:"
"`guess_type` и :func:`guess_file_type`."

#: ../../library/mimetypes.rst:83 ../../library/mimetypes.rst:95
msgid ""
"The optional *strict* argument has the same meaning as with the :func:"
"`guess_type` function."
msgstr ""
"Необязательный аргумент *strict* имеет то же значение, что и функция :func:"
"`guess_type`."

#: ../../library/mimetypes.rst:88
msgid ""
"Guess the extension for a file based on its MIME type, given by *type*. The "
"return value is a string giving a filename extension, including the leading "
"dot (``'.'``).  The extension is not guaranteed to have been associated with "
"any particular data stream, but would be mapped to the MIME type *type* by :"
"func:`guess_type` and :func:`guess_file_type`. If no extension can be "
"guessed for *type*, ``None`` is returned."
msgstr ""
"Угадайте расширение файла на основе его MIME-типа, заданного *type*. "
"Возвращаемое значение представляет собой строку, задающую расширение имени "
"файла, включая начальную точку (``'.'``). Не гарантируется, что расширение "
"связано с каким-либо конкретным потоком данных, но оно будет сопоставлено с "
"MIME-типом *type* с помощью :func:`guess_type` и :func:`guess_file_type`. "
"Если для *type* невозможно угадать расширение, возвращается None."

#: ../../library/mimetypes.rst:97
msgid ""
"Some additional functions and data items are available for controlling the "
"behavior of the module."
msgstr ""
"Для управления поведением модуля доступны некоторые дополнительные функции и "
"элементы данных."

#: ../../library/mimetypes.rst:103
msgid ""
"Initialize the internal data structures.  If given, *files* must be a "
"sequence of file names which should be used to augment the default type "
"map.  If omitted, the file names to use are taken from :const:`knownfiles`; "
"on Windows, the current registry settings are loaded.  Each file named in "
"*files* or :const:`knownfiles` takes precedence over those named before it.  "
"Calling :func:`init` repeatedly is allowed."
msgstr ""
"Инициализируйте внутренние структуры данных. Если задано, *files* должно "
"представлять собой последовательность имен файлов, которую следует "
"использовать для расширения карты типов по умолчанию. Если этот параметр "
"опущен, используемые имена файлов берутся из :const:`knownfiles`; в Windows "
"загружаются текущие настройки реестра. Каждый файл, указанный в *files* или :"
"const:`knownfiles`, имеет приоритет над файлами, указанными перед ним. "
"Разрешен повторный вызов :func:`init`."

#: ../../library/mimetypes.rst:110
msgid ""
"Specifying an empty list for *files* will prevent the system defaults from "
"being applied: only the well-known values will be present from a built-in "
"list."
msgstr ""
"Указание пустого списка для *файлов* предотвратит применение системных "
"настроек по умолчанию: из встроенного списка будут присутствовать только "
"общеизвестные значения."

#: ../../library/mimetypes.rst:113
msgid ""
"If *files* is ``None`` the internal data structure is completely rebuilt to "
"its initial default value. This is a stable operation and will produce the "
"same results when called multiple times."
msgstr ""
"Если *files* имеет значение ``None``, внутренняя структура данных полностью "
"перестраивается до исходного значения по умолчанию. Это стабильная операция, "
"которая дает одинаковые результаты при многократном вызове."

#: ../../library/mimetypes.rst:117
msgid "Previously, Windows registry settings were ignored."
msgstr "Раньше настройки реестра Windows игнорировались."

#: ../../library/mimetypes.rst:123
msgid ""
"Load the type map given in the file *filename*, if it exists.  The type map "
"is returned as a dictionary mapping filename extensions, including the "
"leading dot (``'.'``), to strings of the form ``'type/subtype'``.  If the "
"file *filename* does not exist or cannot be read, ``None`` is returned."
msgstr ""
"Загрузите карту типов, указанную в файле *имя_файла*, если она существует. "
"Карта типов возвращается в виде расширений имен файлов словаря, включая "
"ведущую точку (``'.'``), в строки формы ``'тип/подтип'``. Если файл "
"*filename* не существует или не может быть прочитан, возвращается None."

#: ../../library/mimetypes.rst:131
msgid ""
"Add a mapping from the MIME type *type* to the extension *ext*. When the "
"extension is already known, the new type will replace the old one. When the "
"type is already known the extension will be added to the list of known "
"extensions."
msgstr ""
"Добавьте сопоставление MIME-типа *type* с расширением *ext*. Если расширение "
"уже известно, новый тип заменит старый. Если тип уже известен, расширение "
"будет добавлено в список известных расширений."

#: ../../library/mimetypes.rst:135 ../../library/mimetypes.rst:309
msgid ""
"When *strict* is ``True`` (the default), the mapping will be added to the "
"official MIME types, otherwise to the non-standard ones."
msgstr ""
"Если *strict* имеет значение True (по умолчанию), сопоставление будет "
"добавлено к официальным типам MIME, в противном случае — к нестандартным."

#: ../../library/mimetypes.rst:141
msgid ""
"Flag indicating whether or not the global data structures have been "
"initialized. This is set to ``True`` by :func:`init`."
msgstr ""
"Флаг, указывающий, были ли инициализированы глобальные структуры данных. :"
"func:`init` устанавливает это значение в ``True``."

#: ../../library/mimetypes.rst:149
msgid ""
"List of type map file names commonly installed.  These files are typically "
"named :file:`mime.types` and are installed in different locations by "
"different packages."
msgstr ""
"Список имен файлов карт типов, которые обычно устанавливаются. Эти файлы "
"обычно называются :file:`mime.types` и устанавливаются в разные места "
"разными пакетами."

#: ../../library/mimetypes.rst:156
msgid ""
"Dictionary mapping suffixes to suffixes.  This is used to allow recognition "
"of encoded files for which the encoding and the type are indicated by the "
"same extension.  For example, the :file:`.tgz` extension is mapped to :file:"
"`.tar.gz` to allow the encoding and type to be recognized separately."
msgstr ""
"Словарь отображает суффиксы на суффиксы. Это используется для распознавания "
"закодированных файлов, кодировка и тип которых указаны одним и тем же "
"расширением. Например, расширение :file:`.tgz` сопоставляется с :file:`.tar."
"gz`, чтобы кодировку и тип можно было распознавать отдельно."

#: ../../library/mimetypes.rst:164
msgid "Dictionary mapping filename extensions to encoding types."
msgstr "Словарь сопоставляет расширения имен файлов с типами кодировки."

#: ../../library/mimetypes.rst:169
msgid "Dictionary mapping filename extensions to MIME types."
msgstr "Словарь сопоставляет расширения имен файлов с типами MIME."

#: ../../library/mimetypes.rst:174
msgid ""
"Dictionary mapping filename extensions to non-standard, but commonly found "
"MIME types."
msgstr ""
"Словарь сопоставляет расширения имен файлов с нестандартными, но часто "
"встречающимися типами MIME."

#: ../../library/mimetypes.rst:178
msgid "An example usage of the module::"
msgstr "Пример использования модуля::"

#: ../../library/mimetypes.rst:180
msgid ""
">>> import mimetypes\n"
">>> mimetypes.init()\n"
">>> mimetypes.knownfiles\n"
"['/etc/mime.types', '/etc/httpd/mime.types', ... ]\n"
">>> mimetypes.suffix_map['.tgz']\n"
"'.tar.gz'\n"
">>> mimetypes.encodings_map['.gz']\n"
"'gzip'\n"
">>> mimetypes.types_map['.tgz']\n"
"'application/x-tar-gz'"
msgstr ""
">>> import mimetypes\n"
">>> mimetypes.init()\n"
">>> mimetypes.knownfiles\n"
"['/etc/mime.types', '/etc/httpd/mime.types', ... ]\n"
">>> mimetypes.suffix_map['.tgz']\n"
"'.tar.gz'\n"
">>> mimetypes.encodings_map['.gz']\n"
"'gzip'\n"
">>> mimetypes.types_map['.tgz']\n"
"'application/x-tar-gz'"

#: ../../library/mimetypes.rst:195
msgid "MimeTypes objects"
msgstr ""

#: ../../library/mimetypes.rst:197
msgid ""
"The :class:`MimeTypes` class may be useful for applications which may want "
"more than one MIME-type database; it provides an interface similar to the "
"one of the :mod:`mimetypes` module."
msgstr ""
"Класс :class:`MimeTypes` может быть полезен для приложений, которым может "
"потребоваться более одной базы данных типа MIME; он предоставляет интерфейс, "
"аналогичный интерфейсу модуля :mod:`mimetypes`."

#: ../../library/mimetypes.rst:204
msgid ""
"This class represents a MIME-types database.  By default, it provides access "
"to the same database as the rest of this module. The initial database is a "
"copy of that provided by the module, and may be extended by loading "
"additional :file:`mime.types`\\ -style files into the database using the :"
"meth:`read` or :meth:`readfp` methods.  The mapping dictionaries may also be "
"cleared before loading additional data if the default data is not desired."
msgstr ""
"Этот класс представляет базу данных MIME-типов. По умолчанию он "
"предоставляет доступ к той же базе данных, что и остальная часть этого "
"модуля. Исходная база данных является копией базы данных, предоставленной "
"модулем, и может быть расширена путем загрузки дополнительных файлов :file:"
"`mime.types`\\ в базу данных с помощью :meth:`read` или :meth:`readfp` "
"методы. Словари сопоставления также можно очистить перед загрузкой "
"дополнительных данных, если данные по умолчанию нежелательны."

#: ../../library/mimetypes.rst:211
msgid ""
"The optional *filenames* parameter can be used to cause additional files to "
"be loaded \"on top\" of the default database."
msgstr ""
"Необязательный параметр *filenames* можно использовать для загрузки "
"дополнительных файлов «поверх» базы данных по умолчанию."

#: ../../library/mimetypes.rst:217
msgid ""
"Dictionary mapping suffixes to suffixes.  This is used to allow recognition "
"of encoded files for which the encoding and the type are indicated by the "
"same extension.  For example, the :file:`.tgz` extension is mapped to :file:"
"`.tar.gz` to allow the encoding and type to be recognized separately.  This "
"is initially a copy of the global :data:`suffix_map` defined in the module."
msgstr ""
"Словарь отображает суффиксы на суффиксы. Это используется для распознавания "
"закодированных файлов, кодировка и тип которых указаны одним и тем же "
"расширением. Например, расширение :file:`.tgz` сопоставляется с :file:`.tar."
"gz`, чтобы кодировку и тип можно было распознавать отдельно. Изначально это "
"копия глобального :data:`suffix_map`, определенного в модуле."

#: ../../library/mimetypes.rst:226
msgid ""
"Dictionary mapping filename extensions to encoding types.  This is initially "
"a copy of the global :data:`encodings_map` defined in the module."
msgstr ""
"Словарь сопоставляет расширения имен файлов с типами кодировки. Изначально "
"это копия глобального :data:`encodings_map`, определенного в модуле."

#: ../../library/mimetypes.rst:232
msgid ""
"Tuple containing two dictionaries, mapping filename extensions to MIME "
"types: the first dictionary is for the non-standards types and the second "
"one is for the standard types. They are initialized by :data:`common_types` "
"and :data:`types_map`."
msgstr ""
"Кортеж, содержащий два словаря, сопоставляющих расширения имен файлов с "
"типами MIME: первый словарь предназначен для нестандартных типов, а второй — "
"для стандартных типов. Они инициализируются :data:`common_types` и :data:"
"`types_map`."

#: ../../library/mimetypes.rst:240
msgid ""
"Tuple containing two dictionaries, mapping MIME types to a list of filename "
"extensions: the first dictionary is for the non-standards types and the "
"second one is for the standard types. They are initialized by :data:"
"`common_types` and :data:`types_map`."
msgstr ""
"Кортеж, содержащий два словаря, сопоставляющий типы MIME со списком "
"расширений имен файлов: первый словарь предназначен для нестандартных типов, "
"а второй — для стандартных типов. Они инициализируются :data:`common_types` "
"и :data:`types_map`."

#: ../../library/mimetypes.rst:248
msgid ""
"Similar to the :func:`guess_extension` function, using the tables stored as "
"part of the object."
msgstr ""
"Подобно функции :func:`guess_extension`, использует таблицы, хранящиеся как "
"часть объекта."

#: ../../library/mimetypes.rst:254
msgid ""
"Similar to the :func:`guess_type` function, using the tables stored as part "
"of the object."
msgstr ""
"Подобно функции :func:`guess_type`, использует таблицы, хранящиеся как часть "
"объекта."

#: ../../library/mimetypes.rst:260
msgid ""
"Similar to the :func:`guess_file_type` function, using the tables stored as "
"part of the object."
msgstr ""
"Подобно функции :func:`guess_file_type`, использует таблицы, хранящиеся как "
"часть объекта."

#: ../../library/mimetypes.rst:268
msgid ""
"Similar to the :func:`guess_all_extensions` function, using the tables "
"stored as part of the object."
msgstr ""
"Аналогично функции :func:`guess_all_extensions`, использует таблицы, "
"хранящиеся как часть объекта."

#: ../../library/mimetypes.rst:274
msgid ""
"Load MIME information from a file named *filename*.  This uses :meth:"
"`readfp` to parse the file."
msgstr ""
"Загрузите информацию MIME из файла с именем *имя_файла*. Для анализа файла "
"используется :meth:`readfp`."

#: ../../library/mimetypes.rst:277
msgid ""
"If *strict* is ``True``, information will be added to list of standard "
"types, else to the list of non-standard types."
msgstr ""
"Если *strict* имеет значение True, информация будет добавлена ​​в список "
"стандартных типов, иначе — в список нестандартных типов."

#: ../../library/mimetypes.rst:283
msgid ""
"Load MIME type information from an open file *fp*.  The file must have the "
"format of the standard :file:`mime.types` files."
msgstr ""
"Загрузите информацию о типе MIME из открытого файла *fp*. Файл должен иметь "
"формат стандартных файлов :file:`mime.types`."

#: ../../library/mimetypes.rst:286 ../../library/mimetypes.rst:296
msgid ""
"If *strict* is ``True``, information will be added to the list of standard "
"types, else to the list of non-standard types."
msgstr ""
"Если *strict* имеет значение True, информация будет добавлена ​​в список "
"стандартных типов, иначе — в список нестандартных типов."

#: ../../library/mimetypes.rst:292
msgid "Load MIME type information from the Windows registry."
msgstr "Загрузите информацию о типе MIME из реестра Windows."

#: ../../library/mimetypes.rst:294
msgid "Availability"
msgstr "Доступность"

#: ../../library/mimetypes.rst:304
msgid ""
"Add a mapping from the MIME type *type* to the extension *ext*. Valid "
"extensions start with a '.' or are empty. When the extension is already "
"known, the new type will replace the old one. When the type is already known "
"the extension will be added to the list of known extensions."
msgstr ""

#: ../../library/mimetypes.rst:312
msgid ""
"Invalid, undotted extensions will raise a :exc:`ValueError` in Python 3.16."
msgstr ""

#: ../../library/mimetypes.rst:320
msgid "Command-line usage"
msgstr "Использование командной строки"

#: ../../library/mimetypes.rst:322
msgid ""
"The :mod:`!mimetypes` module can be executed as a script from the command "
"line."
msgstr ""

#: ../../library/mimetypes.rst:324
msgid "python -m mimetypes [-h] [-e] [-l] type [type ...]"
msgstr ""

#: ../../library/mimetypes.rst:328
msgid "The following options are accepted:"
msgstr "Принимаются следующие варианты:"

#: ../../library/mimetypes.rst:335
msgid "Show the help message and exit."
msgstr "Покажите справочное сообщение и выйдите."

#: ../../library/mimetypes.rst:340
msgid "Guess extension instead of type."
msgstr ""

#: ../../library/mimetypes.rst:345
msgid "Additionally search for some common, but non-standard types."
msgstr ""

#: ../../library/mimetypes.rst:347
msgid ""
"By default the script converts MIME types to file extensions. However, if "
"``--extension`` is specified, it converts file extensions to MIME types."
msgstr ""

#: ../../library/mimetypes.rst:351
msgid ""
"For each ``type`` entry, the script writes a line into the standard output "
"stream. If an unknown type occurs, it writes an error message into the "
"standard error stream and exits with the return code ``1``."
msgstr ""

#: ../../library/mimetypes.rst:359
msgid "Command-line example"
msgstr "Пример командной строки"

#: ../../library/mimetypes.rst:361
msgid ""
"Here are some examples of typical usage of the :mod:`!mimetypes` command-"
"line interface:"
msgstr ""

#: ../../library/mimetypes.rst:364
msgid ""
"$ # get a MIME type by a file name\n"
"$ python -m mimetypes filename.png\n"
"type: image/png encoding: None\n"
"\n"
"$ # get a MIME type by a URL\n"
"$ python -m mimetypes https://example.com/filename.txt\n"
"type: text/plain encoding: None\n"
"\n"
"$ # get a complex MIME type\n"
"$ python -m mimetypes filename.tar.gz\n"
"type: application/x-tar encoding: gzip\n"
"\n"
"$ # get a MIME type for a rare file extension\n"
"$ python -m mimetypes filename.pict\n"
"error: unknown extension of filename.pict\n"
"\n"
"$ # now look in the extended database built into Python\n"
"$ python -m mimetypes --lenient filename.pict\n"
"type: image/pict encoding: None\n"
"\n"
"$ # get a file extension by a MIME type\n"
"$ python -m mimetypes --extension text/javascript\n"
".js\n"
"\n"
"$ # get a file extension by a rare MIME type\n"
"$ python -m mimetypes --extension text/xul\n"
"error: unknown type text/xul\n"
"\n"
"$ # now look in the extended database again\n"
"$ python -m mimetypes --extension --lenient text/xul\n"
".xul\n"
"\n"
"$ # try to feed an unknown file extension\n"
"$ python -m mimetypes filename.sh filename.nc filename.xxx filename.txt\n"
"type: application/x-sh encoding: None\n"
"type: application/x-netcdf encoding: None\n"
"error: unknown extension of filename.xxx\n"
"\n"
"$ # try to feed an unknown MIME type\n"
"$ python -m mimetypes --extension audio/aac audio/opus audio/future audio/x-"
"wav\n"
".aac\n"
".opus\n"
"error: unknown type audio/future"
msgstr ""

#: ../../library/mimetypes.rst:11 ../../library/mimetypes.rst:31
#: ../../library/mimetypes.rst:66
msgid "MIME"
msgstr "MIME"

#: ../../library/mimetypes.rst:11
msgid "content type"
msgstr "тип контента"

#: ../../library/mimetypes.rst:31 ../../library/mimetypes.rst:66
msgid "headers"
msgstr "заголовки"

#: ../../library/mimetypes.rst:147
msgid "file"
msgstr "файл"

#: ../../library/mimetypes.rst:147
msgid "mime.types"
msgstr "mime.types"
