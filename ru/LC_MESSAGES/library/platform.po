# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001 Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# Daniil Kolesnikov, 2024
# Roustam Khamidoulline, 2025
# Илья Панфилов, 2025
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.14\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-05-09 14:19+0000\n"
"PO-Revision-Date: 2021-06-28 01:11+0000\n"
"Last-Translator: Илья Панфилов, 2025\n"
"Language-Team: Russian (https://app.transifex.com/python-doc/teams/5390/"
"ru/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ru\n"
"Plural-Forms: nplurals=4; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && "
"n%10<=4 && (n%100<12 || n%100>14) ? 1 : n%10==0 || (n%10>=5 && n%10<=9) || "
"(n%100>=11 && n%100<=14)? 2 : 3);\n"

#: ../../library/platform.rst:2
msgid ":mod:`!platform` ---  Access to underlying platform's identifying data"
msgstr ""
":mod:`!platform` --- Доступ к идентификационным данным базовой платформы."

#: ../../library/platform.rst:10
msgid "**Source code:** :source:`Lib/platform.py`"
msgstr "**Исходный код:** :source:`Lib/platform.py`"

#: ../../library/platform.rst:16
msgid ""
"Specific platforms listed alphabetically, with Linux included in the Unix "
"section."
msgstr ""
"Конкретные платформы перечислены в алфавитном порядке, при этом Linux "
"включен в раздел Unix."

#: ../../library/platform.rst:21
msgid "Cross platform"
msgstr ""

#: ../../library/platform.rst:26
msgid ""
"Queries the given executable (defaults to the Python interpreter binary) for "
"various architecture information."
msgstr ""
"Запрашивает заданный исполняемый файл (по умолчанию двоичный файл "
"интерпретатора Python) для получения различной информации об архитектуре."

#: ../../library/platform.rst:29
msgid ""
"Returns a tuple ``(bits, linkage)`` which contain information about the bit "
"architecture and the linkage format used for the executable. Both values are "
"returned as strings."
msgstr ""
"Возвращает кортеж ``(bits, linkage)``, который содержит информацию о битовой "
"архитектуре и формате связи, используемом для исполняемого файла. Оба "
"значения возвращаются в виде строк."

#: ../../library/platform.rst:33
msgid ""
"Values that cannot be determined are returned as given by the parameter "
"presets. If bits is given as ``''``, the ``sizeof(pointer)`` (or "
"``sizeof(long)`` on Python version < 1.5.2) is used as indicator for the "
"supported pointer size."
msgstr ""
"Значения, которые невозможно определить, возвращаются в соответствии с "
"предустановками параметров. Если биты заданы как ``''``, ``sizeof(pointer)`` "
"(или ``sizeof(long)`` в версии Python < 1.5.2) используется в качестве "
"индикатора поддерживаемого размера указателя."

#: ../../library/platform.rst:38
msgid ""
"The function relies on the system's :file:`file` command to do the actual "
"work. This is available on most if not all Unix  platforms and some non-Unix "
"platforms and then only if the executable points to the Python interpreter.  "
"Reasonable defaults are used when the above needs are not met."
msgstr ""
"Фактическая работа функции зависит от системной команды :file:`file`. Это "
"доступно на большинстве, если не на всех, платформах Unix и некоторых "
"платформах, отличных от Unix, и то только в том случае, если исполняемый "
"файл указывает на интерпретатор Python. Разумные значения по умолчанию "
"используются, когда вышеуказанные потребности не удовлетворяются."

#: ../../library/platform.rst:45
msgid ""
"On macOS (and perhaps other platforms), executable files may be universal "
"files containing multiple architectures."
msgstr ""
"В macOS (и, возможно, на других платформах) исполняемые файлы могут быть "
"универсальными файлами, содержащими несколько архитектур."

#: ../../library/platform.rst:48
msgid ""
"To get at the \"64-bitness\" of the current interpreter, it is more reliable "
"to query the :data:`sys.maxsize` attribute::"
msgstr ""
"Чтобы получить «64-битность» текущего интерпретатора, более надежно "
"запросить атрибут :data:`sys.maxsize`::"

#: ../../library/platform.rst:51
msgid "is_64bits = sys.maxsize > 2**32"
msgstr "is_64bits = sys.maxsize > 2**32"

#: ../../library/platform.rst:56
msgid ""
"Returns the machine type, e.g. ``'AMD64'``. An empty string is returned if "
"the value cannot be determined."
msgstr ""
"Возвращает тип машины, например ``'AMD64'``. Пустая строка возвращается, "
"если значение невозможно определить."

#: ../../library/platform.rst:62
msgid ""
"Returns the computer's network name (may not be fully qualified!). An empty "
"string is returned if the value cannot be determined."
msgstr ""
"Возвращает сетевое имя компьютера (может быть неполным!). Пустая строка "
"возвращается, если значение невозможно определить."

#: ../../library/platform.rst:68
msgid ""
"Returns a single string identifying the underlying platform with as much "
"useful information as possible."
msgstr ""
"Возвращает одну строку, идентифицирующую базовую платформу и содержащую как "
"можно больше полезной информации."

#: ../../library/platform.rst:71
msgid ""
"The output is intended to be *human readable* rather than machine parseable. "
"It may look different on different platforms and this is intended."
msgstr ""
"Вывод должен быть *читабельным* для человека, а не машинным анализом. На "
"разных платформах он может выглядеть по-разному, и это так и задумано."

#: ../../library/platform.rst:74
msgid ""
"If *aliased* is true, the function will use aliases for various platforms "
"that report system names which differ from their common names, for example "
"SunOS will be reported as Solaris.  The :func:`system_alias` function is "
"used to implement this."
msgstr ""
"Если *aliased* имеет значение true, функция будет использовать псевдонимы "
"для различных платформ, которые сообщают имена систем, которые отличаются от "
"их обычных имен, например, SunOS будет сообщаться как Solaris. Для "
"реализации этого используется функция :func:`system_alias`."

#: ../../library/platform.rst:79
msgid ""
"Setting *terse* to true causes the function to return only the absolute "
"minimum information needed to identify the platform."
msgstr ""
"Если для параметра *terse* установлено значение true, функция будет "
"возвращать только абсолютный минимум информации, необходимой для "
"идентификации платформы."

#: ../../library/platform.rst:82
msgid ""
"On macOS, the function now uses :func:`mac_ver`, if it returns a non-empty "
"release string, to get the macOS version rather than the darwin version."
msgstr ""
"В macOS функция теперь использует :func:`mac_ver`, если она возвращает "
"непустую строку выпуска, чтобы получить версию macOS, а не версию darwin."

#: ../../library/platform.rst:90
msgid "Returns the (real) processor name, e.g. ``'amdk6'``."
msgstr "Возвращает (реальное) имя процессора, например, ``'amdk6'``."

#: ../../library/platform.rst:92
msgid ""
"An empty string is returned if the value cannot be determined. Note that "
"many platforms do not provide this information or simply return the same "
"value as for :func:`machine`.  NetBSD does this."
msgstr ""
"Пустая строка возвращается, если значение невозможно определить. Обратите "
"внимание, что многие платформы не предоставляют эту информацию или просто "
"возвращают то же значение, что и для :func:`machine`. NetBSD делает это."

#: ../../library/platform.rst:99
msgid ""
"Returns a tuple ``(buildno, builddate)`` stating the Python build number and "
"date as strings."
msgstr ""
"Возвращает кортеж ``(buildno, builddate)``, указывающий номер и дату сборки "
"Python в виде строк."

#: ../../library/platform.rst:105
msgid "Returns a string identifying the compiler used for compiling Python."
msgstr ""
"Возвращает строку, идентифицирующую компилятор, использованный для "
"компиляции Python."

#: ../../library/platform.rst:110
msgid "Returns a string identifying the Python implementation SCM branch."
msgstr "Возвращает строку, идентифицирующую ветвь SCM реализации Python."

#: ../../library/platform.rst:115
msgid ""
"Returns a string identifying the Python implementation. Possible return "
"values are: 'CPython', 'IronPython', 'Jython', 'PyPy'."
msgstr ""
"Возвращает строку, идентифицирующую реализацию Python. Возможные "
"возвращаемые значения: «CPython», «IronPython», «Jython», «PyPy»."

#: ../../library/platform.rst:121
msgid "Returns a string identifying the Python implementation SCM revision."
msgstr "Возвращает строку, идентифицирующую версию SCM реализации Python."

#: ../../library/platform.rst:126
msgid "Returns the Python version as string ``'major.minor.patchlevel'``."
msgstr "Возвращает версию Python в виде строки ``'major.minor.patchlevel'``."

#: ../../library/platform.rst:128
msgid ""
"Note that unlike the Python ``sys.version``, the returned value will always "
"include the patchlevel (it defaults to 0)."
msgstr ""
"Обратите внимание, что в отличие от ``sys.version`` Python, возвращаемое "
"значение всегда будет включать уровень исправления (по умолчанию оно равно "
"0)."

#: ../../library/platform.rst:134
msgid ""
"Returns the Python version as tuple ``(major, minor, patchlevel)`` of "
"strings."
msgstr ""
"Возвращает версию Python в виде кортежа строк ``(основной, дополнительный, "
"уровень исправлений)``."

#: ../../library/platform.rst:136
msgid ""
"Note that unlike the Python ``sys.version``, the returned value will always "
"include the patchlevel (it defaults to ``'0'``)."
msgstr ""
"Обратите внимание, что в отличие от Python ``sys.version``, возвращаемое "
"значение всегда будет включать уровень исправления (по умолчанию оно равно "
"``'0'``)."

#: ../../library/platform.rst:142
msgid ""
"Returns the system's release, e.g. ``'2.2.0'`` or ``'NT'``. An empty string "
"is returned if the value cannot be determined."
msgstr ""
"Возвращает версию системы, например ``'2.2.0'`` или ``'NT'``. Пустая строка "
"возвращается, если значение невозможно определить."

#: ../../library/platform.rst:148
msgid ""
"Returns the system/OS name, such as ``'Linux'``, ``'Darwin'``, ``'Java'``, "
"``'Windows'``. An empty string is returned if the value cannot be determined."
msgstr ""
"Возвращает имя системы/ОС, например ``'Linux'``, ``'Darwin'``, ``'Java'``, "
"``'Windows'``. Пустая строка возвращается, если значение невозможно "
"определить."

#: ../../library/platform.rst:151
msgid ""
"On iOS and Android, this returns the user-facing OS name (i.e, ``'iOS``, "
"``'iPadOS'`` or ``'Android'``). To obtain the kernel name (``'Darwin'`` or "
"``'Linux'``), use :func:`os.uname`."
msgstr ""
"В iOS и Android возвращается имя операционной системы, обращенной к "
"пользователю (т. е. «iOS», «iPadOS» или «Android»). Чтобы получить имя ядра "
"(«Darwin» или «Linux»), используйте :func:`os.uname`."

#: ../../library/platform.rst:157
msgid ""
"Returns ``(system, release, version)`` aliased to common marketing names "
"used for some systems.  It also does some reordering of the information in "
"some cases where it would otherwise cause confusion."
msgstr ""
"Возвращает ``(system, Release, Version)``, аналогичный общепринятым "
"маркетинговым названиям, используемым для некоторых систем. Он также "
"выполняет некоторое изменение порядка информации в некоторых случаях, когда "
"в противном случае это могло бы вызвать путаницу."

#: ../../library/platform.rst:164
msgid ""
"Returns the system's release version, e.g. ``'#3 on degas'``. An empty "
"string is returned if the value cannot be determined."
msgstr ""
"Возвращает версию выпуска системы, например ``'#3 при дегазации'``. Пустая "
"строка возвращается, если значение невозможно определить."

#: ../../library/platform.rst:167
msgid ""
"On iOS and Android, this is the user-facing OS version. To obtain the Darwin "
"or Linux kernel version, use :func:`os.uname`."
msgstr ""
"В iOS и Android это версия ОС, ориентированная на пользователя. Чтобы "
"получить версию ядра Darwin или Linux, используйте :func:`os.uname`."

#: ../../library/platform.rst:172
msgid ""
"Fairly portable uname interface. Returns a :func:`~collections.namedtuple` "
"containing six attributes: :attr:`system`, :attr:`node`, :attr:`release`, :"
"attr:`version`, :attr:`machine`, and :attr:`processor`."
msgstr ""
"Довольно портативный интерфейс uname. Возвращает :func:`~collections."
"namedtuple`, содержащий шесть атрибутов: :attr:`system`, :attr:`node`, :attr:"
"`release`, :attr:`version`, :attr:`machine`, и :attr:`процессор`."

#: ../../library/platform.rst:176
msgid ":attr:`processor` is resolved late, on demand."
msgstr ":attr:`processor` разрешается поздно, по требованию."

#: ../../library/platform.rst:178
msgid ""
"Note: the first two attribute names differ from the names presented by :func:"
"`os.uname`, where they are named :attr:`sysname` and :attr:`nodename`."
msgstr ""
"Примечание: имена первых двух атрибутов отличаются от имен, представленных :"
"func:`os.uname`, где они называются :attr:`sysname` и :attr:`nodename`."

#: ../../library/platform.rst:182
msgid "Entries which cannot be determined are set to ``''``."
msgstr "Записи, которые невозможно определить, устанавливаются в ``''``."

#: ../../library/platform.rst:184
msgid "Result changed from a tuple to a :func:`~collections.namedtuple`."
msgstr "Результат изменен с кортежа на :func:`~collections.namedtuple`."

#: ../../library/platform.rst:187
msgid ":attr:`processor` is resolved late instead of immediately."
msgstr ":attr:`processor` разрешается поздно, а не сразу."

#: ../../library/platform.rst:192
msgid "Java platform"
msgstr ""

#: ../../library/platform.rst:197
msgid "Version interface for Jython."
msgstr "Интерфейс версии для Jython."

#: ../../library/platform.rst:199
msgid ""
"Returns a tuple ``(release, vendor, vminfo, osinfo)`` with *vminfo* being a "
"tuple ``(vm_name, vm_release, vm_vendor)`` and *osinfo* being a tuple "
"``(os_name, os_version, os_arch)``. Values which cannot be determined are "
"set to the defaults given as parameters (which all default to ``''``)."
msgstr ""
"Возвращает кортеж ``(release,vendor,vminfo,osinfo)``, где *vminfo* является "
"кортежем ``(vm_name, vm_release, vm_vendor)`` и *osinfo* является кортежем "
"``(os_name, os_version, os_arch) ``. Значениям, которые невозможно "
"определить, присваиваются значения по умолчанию, заданные в качестве "
"параметров (которые по умолчанию равны ``''``)."

#: ../../library/platform.rst:204
msgid ""
"It was largely untested, had a confusing API, and was only useful for Jython "
"support."
msgstr ""
"Он практически не тестировался, имел запутанный API и был полезен только для "
"поддержки Jython."

#: ../../library/platform.rst:210
msgid "Windows platform"
msgstr ""

#: ../../library/platform.rst:215
msgid ""
"Get additional version information from the Windows Registry and return a "
"tuple ``(release, version, csd, ptype)`` referring to OS release, version "
"number, CSD level (service pack) and OS type (multi/single processor). "
"Values which cannot be determined are set to the defaults given as "
"parameters (which all default to an empty string)."
msgstr ""
"Получите дополнительную информацию о версии из реестра Windows и верните "
"кортеж ``(release, version, csd, ptype)``, относящийся к выпуску ОС, номеру "
"версии, уровню CSD (пакет обновления) и типу ОС (много/одиночный процессор). "
"Значениям, которые невозможно определить, присваиваются значения по "
"умолчанию, заданные в качестве параметров (которые по умолчанию представляют "
"собой пустую строку)."

#: ../../library/platform.rst:221
msgid ""
"As a hint: *ptype* is ``'Uniprocessor Free'`` on single processor NT "
"machines and ``'Multiprocessor Free'`` on multi processor machines. The "
"``'Free'`` refers to the OS version being free of debugging code. It could "
"also state ``'Checked'`` which means the OS version uses debugging code, i."
"e. code that checks arguments, ranges, etc."
msgstr ""
"Подсказка: *ptype* — это ``'Uniprocessor Free'`` на однопроцессорных машинах "
"NT и ``'Multiprocessor Free'`` на многопроцессорных машинах. «Бесплатно» "
"относится к версии ОС, свободной от отладочного кода. Также может быть "
"указано «Проверено», что означает, что версия ОС использует код отладки, т. "
"е. код, который проверяет аргументы, диапазоны и т. д."

#: ../../library/platform.rst:229
msgid ""
"Returns a string representing the current Windows edition, or ``None`` if "
"the value cannot be determined.  Possible values include but are not limited "
"to ``'Enterprise'``, ``'IoTUAP'``, ``'ServerStandard'``, and "
"``'nanoserver'``."
msgstr ""
"Возвращает строку, представляющую текущую версию Windows, или None, если "
"значение невозможно определить. Возможные значения включают, помимо прочего, "
"``'Enterprise'``, ``'IoTUAP'``, ``'ServerStandard'`` и ``'nanoserver'``."

#: ../../library/platform.rst:237
msgid ""
"Return ``True`` if the Windows edition returned by :func:`win32_edition` is "
"recognized as an IoT edition."
msgstr ""
"Возвращайте True, если редакция Windows, возвращаемая :func:`win32_edition`, "
"распознается как редакция IoT."

#: ../../library/platform.rst:244
msgid "macOS platform"
msgstr ""

#: ../../library/platform.rst:248
msgid ""
"Get macOS version information and return it as tuple ``(release, "
"versioninfo, machine)`` with *versioninfo* being a tuple ``(version, "
"dev_stage, non_release_version)``."
msgstr ""
"Получите информацию о версии macOS и верните ее в виде кортежа ``(release, "
"versioninfo, Machine)``, где *versioninfo* является кортежем ``(version, "
"dev_stage, non_release_version)``."

#: ../../library/platform.rst:252
msgid ""
"Entries which cannot be determined are set to ``''``.  All tuple entries are "
"strings."
msgstr ""
"Записи, которые невозможно определить, устанавливаются в ``''``. Все записи "
"кортежа являются строками."

#: ../../library/platform.rst:256
msgid "iOS platform"
msgstr ""

#: ../../library/platform.rst:260
msgid ""
"Get iOS version information and return it as a :func:`~collections."
"namedtuple` with the following attributes:"
msgstr ""
"Получите информацию о версии iOS и верните ее как :func:`~collections."
"namedtuple` со следующими атрибутами:"

#: ../../library/platform.rst:263
msgid "``system`` is the OS name; either ``'iOS'`` or ``'iPadOS'``."
msgstr "``system`` — имя ОС; либо ``'iOS'``, либо ``'iPadOS'``."

#: ../../library/platform.rst:264
msgid "``release`` is the iOS version number as a string (e.g., ``'17.2'``)."
msgstr ""
"``release`` — это номер версии iOS в виде строки (например, ``'17.2'``)."

#: ../../library/platform.rst:265
msgid ""
"``model`` is the device model identifier; this will be a string like "
"``'iPhone13,2'`` for a physical device, or ``'iPhone'`` on a simulator."
msgstr ""
"``model`` — идентификатор модели устройства; это будет строка типа "
"«iPhone13,2» для физического устройства или «iPhone» на симуляторе."

#: ../../library/platform.rst:267
msgid ""
"``is_simulator`` is a boolean describing if the app is running on a "
"simulator or a physical device."
msgstr ""
"``is_simulator`` — это логическое значение, описывающее, работает ли "
"приложение на симуляторе или на физическом устройстве."

#: ../../library/platform.rst:270
msgid ""
"Entries which cannot be determined are set to the defaults given as "
"parameters."
msgstr ""
"Для записей, которые невозможно определить, устанавливаются значения по "
"умолчанию, заданные в качестве параметров."

#: ../../library/platform.rst:275
msgid "Unix platforms"
msgstr ""

#: ../../library/platform.rst:279
msgid ""
"Tries to determine the libc version against which the file executable "
"(defaults to the Python interpreter) is linked.  Returns a tuple of strings "
"``(lib, version)`` which default to the given parameters in case the lookup "
"fails."
msgstr ""
"Пытается определить версию libc, с которой связан исполняемый файл (по "
"умолчанию — интерпретатор Python). Возвращает кортеж строк ``(lib, "
"version)``, которые по умолчанию соответствуют заданным параметрам в случае "
"неудачного поиска."

#: ../../library/platform.rst:283
msgid ""
"Note that this function has intimate knowledge of how different libc "
"versions add symbols to the executable is probably only usable for "
"executables compiled using :program:`gcc`."
msgstr ""
"Обратите внимание, что эта функция хорошо знает, как разные версии libc "
"добавляют символы в исполняемый файл. Вероятно, ее можно использовать только "
"для исполняемых файлов, скомпилированных с использованием :program:`gcc`."

#: ../../library/platform.rst:287
msgid "The file is read and scanned in chunks of *chunksize* bytes."
msgstr "Файл читается и сканируется частями размером *chunksize* байт."

#: ../../library/platform.rst:291
msgid "Linux platforms"
msgstr ""

#: ../../library/platform.rst:295
msgid ""
"Get operating system identification from ``os-release`` file and return it "
"as a dict. The ``os-release`` file is a `freedesktop.org standard <https://"
"www.freedesktop.org/software/systemd/man/os-release.html>`_ and is available "
"in most Linux distributions. A noticeable exception is Android and Android-"
"based distributions."
msgstr ""
"Получите идентификатор операционной системы из файла ``os-release`` и "
"верните его как dict. Файл ``os-release`` является стандартом ``freedesktop."
"org <https://www.freedesktop.org/software/systemd/man/os-release.html>`_ и "
"доступен в большинстве дистрибутивов Linux. Заметным исключением являются "
"Android и дистрибутивы на базе Android."

#: ../../library/platform.rst:301
msgid ""
"Raises :exc:`OSError` or subclass when neither ``/etc/os-release`` nor ``/"
"usr/lib/os-release`` can be read."
msgstr ""
"Вызывает :exc:`OSError` или подкласс, когда ни ``/etc/os-release``, ни ``/"
"usr/lib/os-release`` не могут быть прочитаны."

#: ../../library/platform.rst:304
msgid ""
"On success, the function returns a dictionary where keys and values are "
"strings. Values have their special characters like ``\"`` and ``$`` "
"unquoted. The fields ``NAME``, ``ID``, and ``PRETTY_NAME`` are always "
"defined according to the standard. All other fields are optional. Vendors "
"may include additional fields."
msgstr ""
"В случае успеха функция возвращает словарь, в котором ключи и значения "
"являются строками. Значения имеют специальные символы, такие как ``\"`` и "
"``$`` без кавычек. Поля ``NAME``, ``ID`` и ``PRETTY_NAME`` всегда "
"определяются в соответствии со стандартом. Все остальные поля Поставщики "
"могут включать дополнительные поля."

#: ../../library/platform.rst:310
msgid ""
"Note that fields like ``NAME``, ``VERSION``, and ``VARIANT`` are strings "
"suitable for presentation to users. Programs should use fields like ``ID``, "
"``ID_LIKE``, ``VERSION_ID``, or ``VARIANT_ID`` to identify Linux "
"distributions."
msgstr ""
"Обратите внимание, что такие поля, как «ИМЯ», «ВЕРСИЯ» и «ВАРИАНТ», "
"представляют собой строки, подходящие для представления пользователям. "
"Программы должны использовать такие поля, как ``ID``, ``ID_LIKE``, "
"``VERSION_ID`` или ``VARIANT_ID`` для идентификации дистрибутивов Linux."

#: ../../library/platform.rst:315
msgid "Example::"
msgstr "Пример::"

#: ../../library/platform.rst:317
msgid ""
"def get_like_distro():\n"
"    info = platform.freedesktop_os_release()\n"
"    ids = [info[\"ID\"]]\n"
"    if \"ID_LIKE\" in info:\n"
"        # ids are space separated and ordered by precedence\n"
"        ids.extend(info[\"ID_LIKE\"].split())\n"
"    return ids"
msgstr ""
"def get_like_distro():\n"
"    info = platform.freedesktop_os_release()\n"
"    ids = [info[\"ID\"]]\n"
"    if \"ID_LIKE\" in info:\n"
"        # ids are space separated and ordered by precedence\n"
"        ids.extend(info[\"ID_LIKE\"].split())\n"
"    return ids"

#: ../../library/platform.rst:329
msgid "Android platform"
msgstr ""

#: ../../library/platform.rst:334
msgid ""
"Get Android device information. Returns a :func:`~collections.namedtuple` "
"with the following attributes. Values which cannot be determined are set to "
"the defaults given as parameters."
msgstr ""
"Получите информацию об устройстве Android. Возвращает :func:`~collections."
"namedtuple` со следующими атрибутами. Для значений, которые невозможно "
"определить, устанавливаются значения по умолчанию, заданные в качестве "
"параметров."

#: ../../library/platform.rst:338
msgid "``release`` - Android version, as a string (e.g. ``\"14\"``)."
msgstr "``release`` - версия Android, в виде строки (например, ``\"14\"``)."

#: ../../library/platform.rst:340
msgid ""
"``api_level`` - API level of the running device, as an integer (e.g. ``34`` "
"for Android 14). To get the API level which Python was built against, see :"
"func:`sys.getandroidapilevel`."
msgstr ""
"``api_level`` — уровень API работающего устройства в виде целого числа "
"(например, ``34`` для Android 14). Чтобы узнать уровень API, на котором был "
"построен Python, см. :func:`sys.getandroidapilevel`."

#: ../../library/platform.rst:344
msgid ""
"``manufacturer`` - `Manufacturer name <https://developer.android.com/"
"reference/android/os/Build#MANUFACTURER>`__."
msgstr ""
"``производитель`` - `Название производителя <https://developer.android.com/"
"reference/android/os/Build#MANUFACTURER>`__."

#: ../../library/platform.rst:347
msgid ""
"``model`` - `Model name <https://developer.android.com/reference/android/os/"
"Build#MODEL>`__ – typically the marketing name or model number."
msgstr ""
"``model`` – `Название модели <https://developer.android.com/reference/"
"android/os/Build#MODEL>`__ — обычно маркетинговое название или номер модели."

#: ../../library/platform.rst:351
msgid ""
"``device`` - `Device name <https://developer.android.com/reference/android/"
"os/Build#DEVICE>`__ – typically the model number or a codename."
msgstr ""
"``device`` — `Имя устройства <https://developer.android.com/reference/"
"android/os/Build#DEVICE>`__ — обычно номер модели или кодовое имя."

#: ../../library/platform.rst:355
msgid ""
"``is_emulator`` - ``True`` if the device is an emulator; ``False`` if it's a "
"physical device."
msgstr ""
"``is_emulator`` - ``True``, если устройство является эмулятором; ``False``, "
"если это физическое устройство."

#: ../../library/platform.rst:358
msgid ""
"Google maintains a `list of known model and device names <https://storage."
"googleapis.com/play_public/supported_devices.html>`__."
msgstr ""
"Google ведет `список известных моделей и названий устройств <https://storage."
"googleapis.com/play_public/supported_devices.html>`__."

#: ../../library/platform.rst:366
msgid "Command-line usage"
msgstr "Использование командной строки"

#: ../../library/platform.rst:368
msgid ""
":mod:`platform` can also be invoked directly using the :option:`-m` switch "
"of the interpreter::"
msgstr ""

#: ../../library/platform.rst:371
msgid "python -m platform [--terse] [--nonaliased] [{nonaliased,terse} ...]"
msgstr ""

#: ../../library/platform.rst:373
msgid "The following options are accepted:"
msgstr "Принимаются следующие варианты:"

#: ../../library/platform.rst:379
msgid ""
"Print terse information about the platform. This is equivalent to calling :"
"func:`platform.platform` with the *terse* argument set to ``True``."
msgstr ""

#: ../../library/platform.rst:384
msgid ""
"Print platform information without system/OS name aliasing. This is "
"equivalent to calling :func:`platform.platform` with the *aliased* argument "
"set to ``True``."
msgstr ""

#: ../../library/platform.rst:388
msgid ""
"You can also pass one or more positional arguments (``terse``, "
"``nonaliased``) to explicitly control the output format. These behave "
"similarly to their corresponding options."
msgstr ""

#: ../../library/platform.rst:393
msgid "Miscellaneous"
msgstr "Разное"

#: ../../library/platform.rst:397
msgid ""
"Clear out the internal cache of information, such as the :func:`uname`. This "
"is typically useful when the platform's :func:`node` is changed by an "
"external process and one needs to retrieve the updated value."
msgstr ""
