# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# Rafael Fontenelle <rffontenelle@gmail.com>, 2024
# Roustam Khamidoulline, 2024
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.12\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-01-03 14:53+0000\n"
"PO-Revision-Date: 2024-05-11 00:33+0000\n"
"Last-Translator: Roustam Khamidoulline, 2024\n"
"Language-Team: Russian (https://app.transifex.com/python-doc/teams/5390/"
"ru/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ru\n"
"Plural-Forms: nplurals=4; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && "
"n%10<=4 && (n%100<12 || n%100>14) ? 1 : n%10==0 || (n%10>=5 && n%10<=9) || "
"(n%100>=11 && n%100<=14)? 2 : 3);\n"

#: ../../library/syslog.rst:2
msgid ":mod:`!syslog` --- Unix syslog library routines"
msgstr ":mod:`!syslog` --- Подпрограммы библиотеки системного журнала Unix"

#: ../../library/syslog.rst:10
msgid ""
"This module provides an interface to the Unix ``syslog`` library routines. "
"Refer to the Unix manual pages for a detailed description of the ``syslog`` "
"facility."
msgstr ""
"Этот модуль предоставляет интерфейс для библиотечных процедур Unix "
"``syslog``. Обратитесь к страницам руководства Unix для подробного описания "
"функции ``syslog``."

#: ../../library/syslog.rst:14
msgid "Availability"
msgstr "Доступность"

#: ../../library/syslog.rst:16
msgid ""
"This module wraps the system ``syslog`` family of routines.  A pure Python "
"library that can speak to a syslog server is available in the :mod:`logging."
"handlers` module as :class:`SysLogHandler`."
msgstr ""
"Этот модуль включает в себя семейство системных процедур системного журнала. "
"Библиотека чистого Python, которая может взаимодействовать с сервером "
"системного журнала, доступна в модуле :mod:`logging.handlers` как :class:"
"`SysLogHandler`."

#: ../../library/syslog.rst:20
msgid "The module defines the following functions:"
msgstr "Модуль определяет следующие функции:"

#: ../../library/syslog.rst:26
msgid ""
"Send the string *message* to the system logger.  A trailing newline is added "
"if necessary.  Each message is tagged with a priority composed of a "
"*facility* and a *level*.  The optional *priority* argument, which defaults "
"to :const:`LOG_INFO`, determines the message priority.  If the facility is "
"not encoded in *priority* using logical-or (``LOG_INFO | LOG_USER``), the "
"value given in the :func:`openlog` call is used."
msgstr ""
"Отправьте строку *message* в системный регистратор. При необходимости "
"добавляется завершающая новая строка. Каждому сообщению присваивается "
"приоритет, состоящий из *объекта* и *уровня*. Необязательный аргумент "
"*priority*, который по умолчанию имеет значение :const:`LOG_INFO`, "
"определяет приоритет сообщения. Если объект не закодирован в *priority* с "
"использованием логического-или (``LOG_INFO | LOG_USER``), используется "
"значение, указанное в вызове :func:`openlog`."

#: ../../library/syslog.rst:33
msgid ""
"If :func:`openlog` has not been called prior to the call to :func:`syslog`, :"
"func:`openlog` will be called with no arguments."
msgstr ""
"Если :func:`openlog` не была вызвана до вызова :func:`syslog`, :func:"
"`openlog` будет вызвана без аргументов."

#: ../../library/syslog.rst:36
msgid ""
"Raises an :ref:`auditing event <auditing>` ``syslog.syslog`` with arguments "
"``priority``, ``message``."
msgstr ""
"Вызывает событие аудита <auditing>``syslog.syslog`` с аргументами "
"``priority``, ``message``."

#: ../../library/syslog.rst:38
msgid ""
"In previous versions, :func:`openlog` would not be called automatically if "
"it wasn't called prior to the call to :func:`syslog`, deferring to the "
"syslog implementation to call ``openlog()``."
msgstr ""
"В предыдущих версиях :func:`openlog` не вызывалась автоматически, если она "
"не вызывалась до вызова :func:`syslog`, откладывая вызов ``openlog()`` на "
"реализацию системного журнала."

#: ../../library/syslog.rst:43
msgid ""
"This function is restricted in subinterpreters. (Only code that runs in "
"multiple interpreters is affected and the restriction is not relevant for "
"most users.) :func:`openlog` must be called in the main interpreter before :"
"func:`syslog` may be used in a subinterpreter.  Otherwise it will raise :exc:"
"`RuntimeError`."
msgstr ""
"Эта функция ограничена в субинтерпретаторах. (Затрагивается только код, "
"который работает в нескольких интерпретаторах, и ограничение не актуально "
"для большинства пользователей.) :func:`openlog` необходимо вызвать в "
"основном интерпретаторе, прежде чем :func:`syslog` можно будет использовать "
"в подинтерпретаторе. В противном случае будет выдано :exc:`RuntimeError`."

#: ../../library/syslog.rst:53
msgid ""
"Logging options of subsequent :func:`syslog` calls can be set by calling :"
"func:`openlog`.  :func:`syslog` will call :func:`openlog` with no arguments "
"if the log is not currently open."
msgstr ""
"Параметры протоколирования последующих вызовов :func:`syslog` можно "
"установить, вызвав :func:`openlog`. :func:`syslog` вызовет :func:`openlog` "
"без аргументов, если журнал в данный момент не открыт."

#: ../../library/syslog.rst:57
msgid ""
"The optional *ident* keyword argument is a string which is prepended to "
"every message, and defaults to ``sys.argv[0]`` with leading path components "
"stripped.  The optional *logoption* keyword argument (default is 0) is a bit "
"field -- see below for possible values to combine.  The optional *facility* "
"keyword argument (default is :const:`LOG_USER`) sets the default facility "
"for messages which do not have a facility explicitly encoded."
msgstr ""
"Необязательный аргумент ключевого слова *ident* представляет собой строку, "
"которая добавляется к каждому сообщению и по умолчанию имеет значение ``sys."
"argv[0]`` с удаленными ведущими компонентами пути. Необязательный аргумент "
"ключевого слова *logoption* (по умолчанию — 0) представляет собой битовое "
"поле. Возможные значения для объединения см. ниже. Необязательный аргумент "
"ключевого слова *facility* (по умолчанию: :const:`LOG_USER`) устанавливает "
"средство по умолчанию для сообщений, которые не имеют явно закодированного "
"средства."

#: ../../library/syslog.rst:64
msgid ""
"Raises an :ref:`auditing event <auditing>` ``syslog.openlog`` with arguments "
"``ident``, ``logoption``, ``facility``."
msgstr ""
"Вызывает событие аудита <auditing>``syslog.openlog`` с аргументами "
"``ident``, ``logoption``, ``facility``."

#: ../../library/syslog.rst:66
msgid ""
"In previous versions, keyword arguments were not allowed, and *ident* was "
"required."
msgstr ""
"В предыдущих версиях аргументы с ключевыми словами не допускались и "
"требовалось *ident*."

#: ../../library/syslog.rst:70 ../../library/syslog.rst:89
msgid ""
"This function is restricted in subinterpreters. (Only code that runs in "
"multiple interpreters is affected and the restriction is not relevant for "
"most users.) This may only be called in the main interpreter. It will raise :"
"exc:`RuntimeError` if called in a subinterpreter."
msgstr ""
"Эта функция ограничена в субинтерпретаторах. (Затрагивается только код, "
"который работает в нескольких интерпретаторах, и ограничение не актуально "
"для большинства пользователей.) Это можно вызвать только в основном "
"интерпретаторе. Он вызовет :exc:`RuntimeError`, если его вызвать в "
"подинтерпретаторе."

#: ../../library/syslog.rst:80
msgid ""
"Reset the syslog module values and call the system library ``closelog()``."
msgstr ""
"Сбросьте значения модуля системного журнала и вызовите системную библиотеку "
"closelog()."

#: ../../library/syslog.rst:82
msgid ""
"This causes the module to behave as it does when initially imported.  For "
"example, :func:`openlog` will be called on the first :func:`syslog` call "
"(if :func:`openlog` hasn't already been called), and *ident* and other :func:"
"`openlog` parameters are reset to defaults."
msgstr ""
"Это приводит к тому, что модуль ведет себя так же, как при первоначальном "
"импорте. Например, :func:`openlog` будет вызываться при первом вызове :func:"
"`syslog` (если :func:`openlog` ещё не был вызван), а *ident* и другие :func:"
"`openlog` параметры сбрасываются на значения по умолчанию."

#: ../../library/syslog.rst:87
msgid ""
"Raises an :ref:`auditing event <auditing>` ``syslog.closelog`` with no "
"arguments."
msgstr "Вызывает событие аудита <auditing>``syslog.closelog`` без аргументов."

#: ../../library/syslog.rst:99
msgid ""
"Set the priority mask to *maskpri* and return the previous mask value.  "
"Calls to :func:`syslog` with a priority level not set in *maskpri* are "
"ignored. The default is to log all priorities.  The function "
"``LOG_MASK(pri)`` calculates the mask for the individual priority *pri*.  "
"The function ``LOG_UPTO(pri)`` calculates the mask for all priorities up to "
"and including *pri*."
msgstr ""
"Установите маску приоритета на *maskpri* и верните предыдущее значение "
"маски. Вызовы :func:`syslog` с уровнем приоритета, не установленным в "
"*maskpri*, игнорируются. По умолчанию регистрируются все приоритеты. Функция "
"``LOG_MASK(pri)`` вычисляет маску для индивидуального приоритета *pri*. "
"Функция ``LOG_UPTO(pri)`` вычисляет маску для всех приоритетов до *pri* "
"включительно."

#: ../../library/syslog.rst:106
msgid ""
"Raises an :ref:`auditing event <auditing>` ``syslog.setlogmask`` with "
"argument ``maskpri``."
msgstr ""
"Вызывает событие аудита <auditing>``syslog.setlogmask`` с аргументом "
"``maskpri``."

#: ../../library/syslog.rst:108
msgid "The module defines the following constants:"
msgstr "Модуль определяет следующие константы:"

#: ../../library/syslog.rst:110
msgid "Priority levels (high to low):"
msgstr "Уровни приоритета (от высокого к низкому):"

#: ../../library/syslog.rst:111
msgid ""
":const:`LOG_EMERG`, :const:`LOG_ALERT`, :const:`LOG_CRIT`, :const:"
"`LOG_ERR`, :const:`LOG_WARNING`, :const:`LOG_NOTICE`, :const:`LOG_INFO`, :"
"const:`LOG_DEBUG`."
msgstr ""
":const:`LOG_EMERG`, :const:`LOG_ALERT`, :const:`LOG_CRIT`, :const:"
"`LOG_ERR`, :const:`LOG_WARNING`, :const:`LOG_NOTICE`, :const:`LOG_INFO`, :"
"const:`LOG_DEBUG`."

#: ../../library/syslog.rst:115
msgid "Facilities:"
msgstr "Facilities:"

#: ../../library/syslog.rst:116
msgid ""
":const:`LOG_KERN`, :const:`LOG_USER`, :const:`LOG_MAIL`, :const:"
"`LOG_DAEMON`, :const:`LOG_AUTH`, :const:`LOG_LPR`, :const:`LOG_NEWS`, :const:"
"`LOG_UUCP`, :const:`LOG_CRON`, :const:`LOG_SYSLOG`, :const:`LOG_LOCAL0` to :"
"const:`LOG_LOCAL7`, and, if defined in ``<syslog.h>``, :const:`LOG_AUTHPRIV`."
msgstr ""
":const:`LOG_KERN`, :const:`LOG_USER`, :const:`LOG_MAIL`, :const:"
"`LOG_DAEMON`, :const:`LOG_AUTH`, :const:`LOG_LPR`, :const:`LOG_NEWS`, : "
"const:`LOG_UUCP`, :const:`LOG_CRON`, :const:`LOG_SYSLOG`, :const:"
"`LOG_LOCAL0` до :const:`LOG_LOCAL7`, и, если это определено в ``<syslog."
"h>``, : const:`LOG_AUTHPRIV`."

#: ../../library/syslog.rst:122
msgid "Log options:"
msgstr "Опции журнала:"

#: ../../library/syslog.rst:123
msgid ""
":const:`LOG_PID`, :const:`LOG_CONS`, :const:`LOG_NDELAY`, and, if defined in "
"``<syslog.h>``, :const:`LOG_ODELAY`, :const:`LOG_NOWAIT`, and :const:"
"`LOG_PERROR`."
msgstr ""
":const:`LOG_PID`, :const:`LOG_CONS`, :const:`LOG_NDELAY` и, если определено "
"в ``<syslog.h>``, :const:`LOG_ODELAY`, :const:`LOG_NOWAIT`, и :const:"
"`LOG_PERROR`."

#: ../../library/syslog.rst:129
msgid "Examples"
msgstr "Примеры"

#: ../../library/syslog.rst:132
msgid "Simple example"
msgstr "Простой пример"

#: ../../library/syslog.rst:134
msgid "A simple set of examples::"
msgstr "Простой набор примеров::"

#: ../../library/syslog.rst:136
msgid ""
"import syslog\n"
"\n"
"syslog.syslog('Processing started')\n"
"if error:\n"
"    syslog.syslog(syslog.LOG_ERR, 'Processing started')"
msgstr ""
"import syslog\n"
"\n"
"syslog.syslog('Processing started')\n"
"if error:\n"
"    syslog.syslog(syslog.LOG_ERR, 'Processing started')"

#: ../../library/syslog.rst:142
msgid ""
"An example of setting some log options, these would include the process ID "
"in logged messages, and write the messages to the destination facility used "
"for mail logging::"
msgstr ""
"Пример настройки некоторых параметров журнала: включение идентификатора "
"процесса в зарегистрированные сообщения и запись сообщений в пункт "
"назначения, используемый для регистрации почты:"

#: ../../library/syslog.rst:146
msgid ""
"syslog.openlog(logoption=syslog.LOG_PID, facility=syslog.LOG_MAIL)\n"
"syslog.syslog('E-mail processing initiated...')"
msgstr ""
"syslog.openlog(logoption=syslog.LOG_PID, facility=syslog.LOG_MAIL)\n"
"syslog.syslog('E-mail processing initiated...')"
