# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# Rafael Fontenelle <rffontenelle@gmail.com>, 2024
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.10\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-01-10 16:06+0000\n"
"PO-Revision-Date: 2022-11-05 17:21+0000\n"
"Last-Translator: Rafael Fontenelle <rffontenelle@gmail.com>, 2024\n"
"Language-Team: Russian (https://app.transifex.com/python-doc/teams/5390/"
"ru/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ru\n"
"Plural-Forms: nplurals=4; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && "
"n%10<=4 && (n%100<12 || n%100>14) ? 1 : n%10==0 || (n%10>=5 && n%10<=9) || "
"(n%100>=11 && n%100<=14)? 2 : 3);\n"

#: ../../library/asyncio-platforms.rst:9
msgid "Platform Support"
msgstr "Поддержка платформы"

#: ../../library/asyncio-platforms.rst:11
msgid ""
"The :mod:`asyncio` module is designed to be portable, but some platforms "
"have subtle differences and limitations due to the platforms' underlying "
"architecture and capabilities."
msgstr ""
"Модуль :mod:`asyncio` спроектирован так, чтобы быть переносимым, но "
"некоторые платформы имеют небольшие различия и ограничения, связанные с "
"базовой архитектурой и возможностями платформ."

#: ../../library/asyncio-platforms.rst:17
msgid "All Platforms"
msgstr "Все платформы"

#: ../../library/asyncio-platforms.rst:19
msgid ""
":meth:`loop.add_reader` and :meth:`loop.add_writer` cannot be used to "
"monitor file I/O."
msgstr ""
":meth:`loop.add_reader` и :meth:`loop.add_writer` нельзя использовать для "
"мониторинга файлового ввода-вывода."

#: ../../library/asyncio-platforms.rst:24
msgid "Windows"
msgstr "Windows"

#: ../../library/asyncio-platforms.rst:26
msgid ""
"**Source code:** :source:`Lib/asyncio/proactor_events.py`, :source:`Lib/"
"asyncio/windows_events.py`, :source:`Lib/asyncio/windows_utils.py`"
msgstr ""
"**Исходный код:** :source:`Lib/asyncio/proactor_events.py`, :source:`Lib/"
"asyncio/windows_events.py`, :source:`Lib/asyncio/windows_utils.py`"

#: ../../library/asyncio-platforms.rst:34
msgid "On Windows, :class:`ProactorEventLoop` is now the default event loop."
msgstr ""
"В Windows :class:`ProactorEventLoop` теперь является циклом событий по "
"умолчанию."

#: ../../library/asyncio-platforms.rst:36
msgid "All event loops on Windows do not support the following methods:"
msgstr "Все циклы событий в Windows не поддерживают следующие методы:"

#: ../../library/asyncio-platforms.rst:38
msgid ""
":meth:`loop.create_unix_connection` and :meth:`loop.create_unix_server` are "
"not supported. The :data:`socket.AF_UNIX` socket family is specific to Unix."
msgstr ""

#: ../../library/asyncio-platforms.rst:42
msgid ""
":meth:`loop.add_signal_handler` and :meth:`loop.remove_signal_handler` are "
"not supported."
msgstr ""
":meth:`loop.add_signal_handler` и :meth:`loop.remove_signal_handler` не "
"поддерживаются."

#: ../../library/asyncio-platforms.rst:45
msgid ":class:`SelectorEventLoop` has the following limitations:"
msgstr ":class:`SelectorEventLoop` имеет следующие ограничения:"

#: ../../library/asyncio-platforms.rst:47
msgid ""
":class:`~selectors.SelectSelector` is used to wait on socket events: it "
"supports sockets and is limited to 512 sockets."
msgstr ""
":class:`~selectors.SelectSelector` используется для ожидания событий сокета: "
"он поддерживает сокеты и ограничен 512 сокетами."

#: ../../library/asyncio-platforms.rst:50
msgid ""
":meth:`loop.add_reader` and :meth:`loop.add_writer` only accept socket "
"handles (e.g. pipe file descriptors are not supported)."
msgstr ""
":meth:`loop.add_reader` и :meth:`loop.add_writer` принимают только "
"дескрипторы сокетов (например, дескрипторы файлов каналов не поддерживаются)."

#: ../../library/asyncio-platforms.rst:53
msgid ""
"Pipes are not supported, so the :meth:`loop.connect_read_pipe` and :meth:"
"`loop.connect_write_pipe` methods are not implemented."
msgstr ""
"Каналы не поддерживаются, поэтому методы :meth:`loop.connect_read_pipe` и :"
"meth:`loop.connect_write_pipe` не реализованы."

#: ../../library/asyncio-platforms.rst:56
msgid ""
":ref:`Subprocesses <asyncio-subprocess>` are not supported, i.e. :meth:`loop."
"subprocess_exec` and :meth:`loop.subprocess_shell` methods are not "
"implemented."
msgstr ""
":ref:`Подпроцессы <asyncio-subprocess>` не поддерживаются, т.е. методы :meth:"
"`loop.subprocess_exec` и :meth:`loop.subprocess_shell` не реализованы."

#: ../../library/asyncio-platforms.rst:60
msgid ":class:`ProactorEventLoop` has the following limitations:"
msgstr ":class:`ProactorEventLoop` имеет следующие ограничения:"

#: ../../library/asyncio-platforms.rst:62
msgid ""
"The :meth:`loop.add_reader` and :meth:`loop.add_writer` methods are not "
"supported."
msgstr ""
"Методы :meth:`loop.add_reader` и :meth:`loop.add_writer` не поддерживаются."

#: ../../library/asyncio-platforms.rst:65
msgid ""
"The resolution of the monotonic clock on Windows is usually around 15.6 "
"msec.  The best resolution is 0.5 msec. The resolution depends on the "
"hardware (availability of `HPET <https://en.wikipedia.org/wiki/"
"High_Precision_Event_Timer>`_) and on the Windows configuration."
msgstr ""

#: ../../library/asyncio-platforms.rst:75
msgid "Subprocess Support on Windows"
msgstr "Поддержка подпроцессов в Windows"

#: ../../library/asyncio-platforms.rst:77
msgid ""
"On Windows, the default event loop :class:`ProactorEventLoop` supports "
"subprocesses, whereas :class:`SelectorEventLoop` does not."
msgstr ""
"В Windows цикл событий по умолчанию :class:`ProactorEventLoop` поддерживает "
"подпроцессы, а :class:`SelectorEventLoop` — нет."

#: ../../library/asyncio-platforms.rst:80
msgid ""
"The :meth:`policy.set_child_watcher() <AbstractEventLoopPolicy."
"set_child_watcher>` function is also not supported, as :class:"
"`ProactorEventLoop` has a different mechanism to watch child processes."
msgstr ""
"Функция :meth:`policy.set_child_watcher() <AbstractEventLoopPolicy."
"set_child_watcher>` также не поддерживается, поскольку :class:"
"`ProactorEventLoop` имеет другой механизм наблюдения за дочерними процессами."

#: ../../library/asyncio-platforms.rst:87
msgid "macOS"
msgstr "macOS"

#: ../../library/asyncio-platforms.rst:89
msgid "Modern macOS versions are fully supported."
msgstr "Современные версии macOS полностью поддерживаются."

#: ../../library/asyncio-platforms.rst:92
msgid "macOS <= 10.8"
msgstr "macOS <= 10.8"

#: ../../library/asyncio-platforms.rst:93
msgid ""
"On macOS 10.6, 10.7 and 10.8, the default event loop uses :class:`selectors."
"KqueueSelector`, which does not support character devices on these "
"versions.  The :class:`SelectorEventLoop` can be manually configured to use :"
"class:`~selectors.SelectSelector` or :class:`~selectors.PollSelector` to "
"support character devices on these older versions of macOS.  Example::"
msgstr ""
"В macOS 10.6, 10.7 и 10.8 цикл событий по умолчанию использует :class:"
"`selectors.KqueueSelector`, который не поддерживает символьные устройства в "
"этих версиях. :class:`SelectorEventLoop` можно вручную настроить на "
"использование :class:`~selectors.SelectSelector` или :class:`~selectors."
"PollSelector` для поддержки символьных устройств в этих старых версиях "
"macOS. Пример::"
