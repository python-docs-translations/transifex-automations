# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# Roustam Khamidoulline, 2024
# Rafael Fontenelle <rffontenelle@gmail.com>, 2025
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.12\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-02-28 14:56+0000\n"
"PO-Revision-Date: 2024-05-11 00:33+0000\n"
"Last-Translator: Rafael Fontenelle <rffontenelle@gmail.com>, 2025\n"
"Language-Team: Russian (https://app.transifex.com/python-doc/teams/5390/"
"ru/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ru\n"
"Plural-Forms: nplurals=4; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && "
"n%10<=4 && (n%100<12 || n%100>14) ? 1 : n%10==0 || (n%10>=5 && n%10<=9) || "
"(n%100>=11 && n%100<=14)? 2 : 3);\n"

#: ../../library/smtplib.rst:2
msgid ":mod:`!smtplib` --- SMTP protocol client"
msgstr ":mod:`!smtplib` --- Клиент протокола SMTP"

#: ../../library/smtplib.rst:9
msgid "**Source code:** :source:`Lib/smtplib.py`"
msgstr "**Исходный код:** :source:`Lib/smtplib.py`"

#: ../../library/smtplib.rst:17
msgid ""
"The :mod:`smtplib` module defines an SMTP client session object that can be "
"used to send mail to any internet machine with an SMTP or ESMTP listener "
"daemon.  For details of SMTP and ESMTP operation, consult :rfc:`821` (Simple "
"Mail Transfer Protocol) and :rfc:`1869` (SMTP Service Extensions)."
msgstr ""
"Модуль :mod:`smtplib` определяет объект сеанса SMTP-клиента, который можно "
"использовать для отправки почты на любой интернет-компьютер с демоном-"
"слушателем SMTP или ESMTP. Подробную информацию о работе SMTP и ESMTP см. в :"
"rfc:`821` (простой протокол передачи почты) и :rfc:`1869` (расширения службы "
"SMTP)."

#: ../../includes/wasm-notavail.rst:3
msgid "Availability"
msgstr "Доступность"

#: ../../includes/wasm-notavail.rst:5
msgid ""
"This module does not work or is not available on WebAssembly platforms "
"``wasm32-emscripten`` and ``wasm32-wasi``. See :ref:`wasm-availability` for "
"more information."
msgstr ""
"Этот модуль не работает или недоступен на платформах WebAssembly «wasm32-"
"emscripten» и «wasm32-wasi». См. :ref:`wasm-availability` для получения "
"дополнительной информации."

#: ../../library/smtplib.rst:26
msgid ""
"An :class:`SMTP` instance encapsulates an SMTP connection.  It has methods "
"that support a full repertoire of SMTP and ESMTP operations. If the optional "
"*host* and *port* parameters are given, the SMTP :meth:`connect` method is "
"called with those parameters during initialization.  If specified, "
"*local_hostname* is used as the FQDN of the local host in the HELO/EHLO "
"command.  Otherwise, the local hostname is found using :func:`socket."
"getfqdn`.  If the :meth:`connect` call returns anything other than a success "
"code, an :exc:`SMTPConnectError` is raised. The optional *timeout* parameter "
"specifies a timeout in seconds for blocking operations like the connection "
"attempt (if not specified, the global default timeout setting will be "
"used).  If the timeout expires, :exc:`TimeoutError` is raised.  The optional "
"*source_address* parameter allows binding to some specific source address in "
"a machine with multiple network interfaces, and/or to some specific source "
"TCP port. It takes a 2-tuple ``(host, port)``, for the socket to bind to as "
"its source address before connecting. If omitted (or if *host* or *port* are "
"``''`` and/or ``0`` respectively) the OS default behavior will be used."
msgstr ""
"Экземпляр :class:`SMTP` инкапсулирует SMTP-соединение. Он имеет методы, "
"поддерживающие полный набор операций SMTP и ESMTP. Если указаны "
"необязательные параметры *host* и *port*, метод SMTP :meth:`connect` "
"вызывается с этими параметрами во время инициализации. Если указано, "
"*local_hostname* используется в качестве полного доменного имени локального "
"хоста в команде HELO/EHLO. В противном случае локальное имя хоста находится "
"с помощью :func:`socket.getfqdn`. Если вызов :meth:`connect` возвращает что-"
"либо, кроме кода успеха, возникает ошибка :exc:`SMTPConnectError`. "
"Необязательный параметр *timeout* указывает тайм-аут в секундах для "
"блокировки таких операций, как попытка подключения (если он не указан, будет "
"использоваться глобальная настройка тайм-аута по умолчанию). Если тайм-аут "
"истекает, возникает :exc:`TimeoutError`. Необязательный параметр "
"*source_address* позволяет выполнить привязку к определенному исходному "
"адресу на машине с несколькими сетевыми интерфейсами и/или к определенному "
"исходному TCP-порту. Требуется двухкортеж (хост, порт) для привязки сокета в "
"качестве исходного адреса перед подключением. Если этот параметр опущен (или "
"если *host* или *port* имеют значения ``''`` и/или ``0`` соответственно), "
"будет использоваться поведение ОС по умолчанию."

#: ../../library/smtplib.rst:44
msgid ""
"For normal use, you should only require the initialization/connect, :meth:"
"`sendmail`, and :meth:`SMTP.quit` methods. An example is included below."
msgstr ""
"Для обычного использования вам потребуются только методы инициализации/"
"подключения, :meth:`sendmail` и :meth:`SMTP.quit`. Пример приведен ниже."

#: ../../library/smtplib.rst:48
msgid ""
"The :class:`SMTP` class supports the :keyword:`with` statement.  When used "
"like this, the SMTP ``QUIT`` command is issued automatically when the :"
"keyword:`!with` statement exits.  E.g.::"
msgstr ""
"Класс :class:`SMTP` поддерживает оператор :keyword:`with`. При таком "
"использовании команда SMTP ``QUIT`` выдается автоматически при выходе из "
"оператора :keyword:`!with`. Например::"

#: ../../library/smtplib.rst:52
msgid ""
">>> from smtplib import SMTP\n"
">>> with SMTP(\"domain.org\") as smtp:\n"
"...     smtp.noop()\n"
"...\n"
"(250, b'Ok')\n"
">>>"
msgstr ""
">>> from smtplib import SMTP\n"
">>> with SMTP(\"domain.org\") as smtp:\n"
"...     smtp.noop()\n"
"...\n"
"(250, b'Ok')\n"
">>>"

#: ../../library/smtplib.rst:59 ../../library/smtplib.rst:61
msgid ""
"All commands will raise an :ref:`auditing event <auditing>` ``smtplib.SMTP."
"send`` with arguments ``self`` and ``data``, where ``data`` is the bytes "
"about to be sent to the remote host."
msgstr ""
"Все команды вызовут :ref:`событие аудита <auditing>``smtplib.SMTP.send`` с "
"аргументами ``self`` и ``data``, где ``данные`` — это байты, которые будут "
"переданы. отправляется на удаленный хост."

#: ../../library/smtplib.rst:65
msgid "Support for the :keyword:`with` statement was added."
msgstr "Добавлена ​​поддержка оператора :keyword:`with`."

#: ../../library/smtplib.rst:68
msgid "*source_address* argument was added."
msgstr "Добавлен аргумент *source_address*."

#: ../../library/smtplib.rst:71
msgid "The SMTPUTF8 extension (:rfc:`6531`) is now supported."
msgstr "Расширение SMTPUTF8 (:rfc:`6531`) теперь поддерживается."

#: ../../library/smtplib.rst:74
msgid ""
"If the *timeout* parameter is set to be zero, it will raise a :class:"
"`ValueError` to prevent the creation of a non-blocking socket."
msgstr ""
"Если параметр *timeout* установлен в нулевое значение, он вызовет :class:"
"`ValueError`, чтобы предотвратить создание неблокирующего сокета."

#: ../../library/smtplib.rst:81
msgid ""
"An :class:`SMTP_SSL` instance behaves exactly the same as instances of :"
"class:`SMTP`. :class:`SMTP_SSL` should be used for situations where SSL is "
"required from the beginning of the connection and using :meth:`starttls` is "
"not appropriate. If *host* is not specified, the local host is used. If "
"*port* is zero, the standard SMTP-over-SSL port (465) is used.  The optional "
"arguments *local_hostname*, *timeout* and *source_address* have the same "
"meaning as they do in the :class:`SMTP` class.  *context*, also optional, "
"can contain a :class:`~ssl.SSLContext` and allows configuring various "
"aspects of the secure connection.  Please read :ref:`ssl-security` for best "
"practices."
msgstr ""
"Экземпляр :class:`SMTP_SSL` ведет себя точно так же, как экземпляры :class:"
"`SMTP`. :class:`SMTP_SSL` следует использовать в ситуациях, когда SSL "
"требуется с самого начала соединения и использование :meth:`starttls` не "
"подходит. Если *host* не указан, используется локальный хост. Если *port* "
"равен нулю, используется стандартный порт SMTP-over-SSL (465). "
"Необязательные аргументы *local_hostname*, *timeout* и *source_address* "
"имеют то же значение, что и в классе :class:`SMTP`. *context*, также "
"необязательный, может содержать :class:`~ssl.SSLContext` и позволяет "
"настраивать различные аспекты безопасного соединения. Пожалуйста, прочтите :"
"ref:`ssl-security` для получения лучших практик."

#: ../../library/smtplib.rst:92 ../../library/smtplib.rst:415
msgid "*context* was added."
msgstr "*context* был добавлен."

#: ../../library/smtplib.rst:95
msgid "The *source_address* argument was added."
msgstr "Был добавлен аргумент *source_address*."

#: ../../library/smtplib.rst:98
msgid ""
"The class now supports hostname check with :attr:`ssl.SSLContext."
"check_hostname` and *Server Name Indication* (see :const:`ssl.HAS_SNI`)."
msgstr ""
"Класс теперь поддерживает проверку имени хоста с помощью :attr:`ssl."
"SSLContext.check_hostname` и *Индикации имени сервера* (см. :const:`ssl."
"HAS_SNI`)."

#: ../../library/smtplib.rst:103
msgid ""
"If the *timeout* parameter is set to be zero, it will raise a :class:"
"`ValueError` to prevent the creation of a non-blocking socket"
msgstr ""
"Если параметр *timeout* установлен равным нулю, он вызовет :class:"
"`ValueError`, чтобы предотвратить создание неблокирующего сокета."

#: ../../library/smtplib.rst:107 ../../library/smtplib.rst:403
msgid "The deprecated *keyfile* and *certfile* parameters have been removed."
msgstr "Устаревшие параметры *keyfile* и *certfile* были удалены."

#: ../../library/smtplib.rst:113
msgid ""
"The LMTP protocol, which is very similar to ESMTP, is heavily based on the "
"standard SMTP client. It's common to use Unix sockets for LMTP, so our :meth:"
"`connect` method must support that as well as a regular host:port server. "
"The optional arguments *local_hostname* and *source_address* have the same "
"meaning as they do in the :class:`SMTP` class. To specify a Unix socket, you "
"must use an absolute path for *host*, starting with a '/'."
msgstr ""
"Протокол LMTP, очень похожий на ESMTP, во многом основан на стандартном "
"клиенте SMTP. Для LMTP обычно используются сокеты Unix, поэтому наш метод :"
"meth:`connect` должен поддерживать это так же, как и обычный сервер хост:"
"порт. Необязательные аргументы *local_hostname* и *source_address* имеют то "
"же значение, что и в классе :class:`SMTP`. Чтобы указать сокет Unix, вы "
"должны использовать абсолютный путь для *host*, начинающийся с '/'."

#: ../../library/smtplib.rst:120
msgid ""
"Authentication is supported, using the regular SMTP mechanism. When using a "
"Unix socket, LMTP generally don't support or require any authentication, but "
"your mileage might vary."
msgstr ""
"Поддерживается аутентификация с использованием обычного механизма SMTP. При "
"использовании сокета Unix LMTP обычно не поддерживает и не требует "
"аутентификации, но ваш опыт может отличаться."

#: ../../library/smtplib.rst:124
msgid "The optional *timeout* parameter was added."
msgstr "Добавлен необязательный параметр *timeout*."

#: ../../library/smtplib.rst:128
msgid "A nice selection of exceptions is defined as well:"
msgstr "Также определен хороший выбор исключений:"

#: ../../library/smtplib.rst:133
msgid ""
"Subclass of :exc:`OSError` that is the base exception class for all the "
"other exceptions provided by this module."
msgstr ""
"Подкласс :exc:`OSError`, который является базовым классом исключений для "
"всех других исключений, предоставляемых этим модулем."

#: ../../library/smtplib.rst:136
msgid "SMTPException became subclass of :exc:`OSError`"
msgstr "SMTPException стал подклассом :exc:`OSError`"

#: ../../library/smtplib.rst:142
msgid ""
"This exception is raised when the server unexpectedly disconnects, or when "
"an attempt is made to use the :class:`SMTP` instance before connecting it to "
"a server."
msgstr ""
"Это исключение возникает, когда сервер неожиданно отключается или когда "
"предпринимается попытка использовать экземпляр :class:`SMTP` перед его "
"подключением к серверу."

#: ../../library/smtplib.rst:149
msgid ""
"Base class for all exceptions that include an SMTP error code. These "
"exceptions are generated in some instances when the SMTP server returns an "
"error code.  The error code is stored in the :attr:`smtp_code` attribute of "
"the error, and the :attr:`smtp_error` attribute is set to the error message."
msgstr ""
"Базовый класс для всех исключений, включающих код ошибки SMTP. Эти "
"исключения генерируются в некоторых случаях, когда SMTP-сервер возвращает "
"код ошибки. Код ошибки хранится в атрибуте :attr:`smtp_code` ошибки, а "
"атрибут :attr:`smtp_error` устанавливается в сообщение об ошибке."

#: ../../library/smtplib.rst:157
msgid ""
"Sender address refused.  In addition to the attributes set by on all :exc:"
"`SMTPResponseException` exceptions, this sets 'sender' to the string that "
"the SMTP server refused."
msgstr ""
"Адрес отправителя отклонен. В дополнение к атрибутам, установленным для всех "
"исключений :exc:`SMTPResponseException`, в качестве отправителя "
"устанавливается строка, которую SMTP-сервер отклонил."

#: ../../library/smtplib.rst:164
msgid ""
"All recipient addresses refused.  The errors for each recipient are "
"accessible through the attribute :attr:`recipients`, which is a dictionary "
"of exactly the same sort as :meth:`SMTP.sendmail` returns."
msgstr ""
"Все адреса получателей отказались. Ошибки для каждого получателя доступны "
"через атрибут :attr:`recipients`, который представляет собой словарь точно "
"такого же типа, что и возвращаемый :meth:`SMTP.sendmail`."

#: ../../library/smtplib.rst:171
msgid "The SMTP server refused to accept the message data."
msgstr "SMTP-сервер отказался принять данные сообщения."

#: ../../library/smtplib.rst:176
msgid "Error occurred during establishment of a connection  with the server."
msgstr "Произошла ошибка при установлении соединения с сервером."

#: ../../library/smtplib.rst:181
msgid "The server refused our ``HELO`` message."
msgstr "Сервер отклонил наше сообщение HELO."

#: ../../library/smtplib.rst:186
msgid "The command or option attempted is not supported by the server."
msgstr "Использованная команда или параметр не поддерживается сервером."

#: ../../library/smtplib.rst:193
msgid ""
"SMTP authentication went wrong.  Most probably the server didn't accept the "
"username/password combination provided."
msgstr ""
"Аутентификация SMTP прошла неправильно. Скорее всего, сервер не принял "
"предоставленную комбинацию имени пользователя и пароля."

#: ../../library/smtplib.rst:199
msgid ":rfc:`821` - Simple Mail Transfer Protocol"
msgstr ":rfc:`821` - Простой протокол передачи почты"

#: ../../library/smtplib.rst:200
msgid ""
"Protocol definition for SMTP.  This document covers the model, operating "
"procedure, and protocol details for SMTP."
msgstr ""
"Определение протокола для SMTP. В этом документе описаны модель, порядок "
"работы и подробности протокола SMTP."

#: ../../library/smtplib.rst:203
msgid ":rfc:`1869` - SMTP Service Extensions"
msgstr ":rfc:`1869` - Расширения службы SMTP"

#: ../../library/smtplib.rst:204
msgid ""
"Definition of the ESMTP extensions for SMTP.  This describes a framework for "
"extending SMTP with new commands, supporting dynamic discovery of the "
"commands provided by the server, and defines a few additional commands."
msgstr ""
"Определение расширений ESMTP для SMTP. Здесь описывается структура "
"расширения SMTP новыми командами, поддержка динамического обнаружения "
"команд, предоставляемых сервером, и определяется несколько дополнительных "
"команд."

#: ../../library/smtplib.rst:212
msgid "SMTP Objects"
msgstr "Объекты SMTP"

#: ../../library/smtplib.rst:214
msgid "An :class:`SMTP` instance has the following methods:"
msgstr "Экземпляр :class:`SMTP` имеет следующие методы:"

#: ../../library/smtplib.rst:219
msgid ""
"Set the debug output level.  A value of 1 or ``True`` for *level* results in "
"debug messages for connection and for all messages sent to and received from "
"the server.  A value of 2 for *level* results in these messages being "
"timestamped."
msgstr ""
"Установите уровень вывода отладки. Значение 1 или ``True`` для *level* "
"приводит к появлению отладочных сообщений для соединения и для всех "
"сообщений, отправленных и полученных с сервера. Значение 2 для *level* "
"приводит к тому, что этим сообщениям присваивается временная метка."

#: ../../library/smtplib.rst:224
msgid "Added debuglevel 2."
msgstr "Добавлен уровень отладки 2."

#: ../../library/smtplib.rst:229
msgid ""
"Send a command *cmd* to the server.  The optional argument *args* is simply "
"concatenated to the command, separated by a space."
msgstr ""
"Отправьте команду *cmd* на сервер. Необязательный аргумент *args* просто "
"присоединяется к команде, разделяясь пробелом."

#: ../../library/smtplib.rst:232
msgid ""
"This returns a 2-tuple composed of a numeric response code and the actual "
"response line (multiline responses are joined into one long line.)"
msgstr ""
"Возвращает кортеж из двух чисел, состоящий из числового кода ответа и "
"фактической строки ответа (многострочные ответы объединяются в одну длинную "
"строку)."

#: ../../library/smtplib.rst:235
msgid ""
"In normal operation it should not be necessary to call this method "
"explicitly. It is used to implement other methods and may be useful for "
"testing private extensions."
msgstr ""
"При нормальной работе нет необходимости явно вызывать этот метод. Он "
"используется для реализации других методов и может быть полезен для "
"тестирования частных расширений."

#: ../../library/smtplib.rst:239
msgid ""
"If the connection to the server is lost while waiting for the reply, :exc:"
"`SMTPServerDisconnected` will be raised."
msgstr ""
"Если соединение с сервером потеряно во время ожидания ответа, будет поднято :"
"exc:`SMTPServerDisconnected`."

#: ../../library/smtplib.rst:245
msgid ""
"Connect to a host on a given port.  The defaults are to connect to the local "
"host at the standard SMTP port (25). If the hostname ends with a colon "
"(``':'``) followed by a number, that suffix will be stripped off and the "
"number interpreted as the port number to use. This method is automatically "
"invoked by the constructor if a host is specified during instantiation.  "
"Returns a 2-tuple of the response code and message sent by the server in its "
"connection response."
msgstr ""
"Подключитесь к хосту по заданному порту. По умолчанию подключение к "
"локальному хосту осуществляется через стандартный порт SMTP (25). Если имя "
"хоста заканчивается двоеточием (``':'``), за которым следует число, этот "
"суффикс будет удален, а число интерпретируется как номер используемого "
"порта. Этот метод автоматически вызывается конструктором, если во время "
"создания экземпляра указан хост. Возвращает кортеж из двух кодов ответа и "
"сообщения, отправленного сервером в ответе на соединение."

#: ../../library/smtplib.rst:253
msgid ""
"Raises an :ref:`auditing event <auditing>` ``smtplib.connect`` with "
"arguments ``self``, ``host``, ``port``."
msgstr ""
"Вызывает событие аудита <auditing>`smtplib.connect`` с аргументами ``self``, "
"``host``, ``port``."

#: ../../library/smtplib.rst:258
msgid ""
"Identify yourself to the SMTP server using ``HELO``.  The hostname argument "
"defaults to the fully qualified domain name of the local host. The message "
"returned by the server is stored as the :attr:`helo_resp` attribute of the "
"object."
msgstr ""
"Идентифицируйте себя на SMTP-сервере, используя HELO. Аргумент имени хоста "
"по умолчанию соответствует полному доменному имени локального хоста. "
"Сообщение, возвращаемое сервером, сохраняется как атрибут :attr:`helo_resp` "
"объекта."

#: ../../library/smtplib.rst:263
msgid ""
"In normal operation it should not be necessary to call this method "
"explicitly. It will be implicitly called by the :meth:`sendmail` when "
"necessary."
msgstr ""
"При нормальной работе нет необходимости явно вызывать этот метод. При "
"необходимости он будет неявно вызываться :meth:`sendmail`."

#: ../../library/smtplib.rst:269
msgid ""
"Identify yourself to an ESMTP server using ``EHLO``.  The hostname argument "
"defaults to the fully qualified domain name of the local host.  Examine the "
"response for ESMTP option and store them for use by :meth:`has_extn`. Also "
"sets several informational attributes: the message returned by the server is "
"stored as the :attr:`ehlo_resp` attribute, :attr:`does_esmtp` is set to "
"``True`` or ``False`` depending on whether the server supports ESMTP, and :"
"attr:`esmtp_features` will be a dictionary containing the names of the SMTP "
"service extensions this server supports, and their parameters (if any)."
msgstr ""
"Идентифицируйте себя на сервере ESMTP, используя EHLO. Аргумент имени хоста "
"по умолчанию соответствует полному доменному имени локального хоста. "
"Проверьте ответ на параметр ESMTP и сохраните его для использования :meth:"
"`has_extn`. Также устанавливает несколько информационных атрибутов: "
"сообщение, возвращаемое сервером, сохраняется как атрибут :attr:"
"`ehlo_resp`, :attr:`does_esmtp` устанавливается в ``True`` или ``False`` в "
"зависимости от того, поддерживает ли сервер ESMTP и :attr:`esmtp_features` "
"будут словарем, содержащим имена расширений службы SMTP, которые "
"поддерживает этот сервер, и их параметры (если таковые имеются)."

#: ../../library/smtplib.rst:279
msgid ""
"Unless you wish to use :meth:`has_extn` before sending mail, it should not "
"be necessary to call this method explicitly.  It will be implicitly called "
"by :meth:`sendmail` when necessary."
msgstr ""
"Если вы не хотите использовать :meth:`has_extn` перед отправкой почты, нет "
"необходимости явно вызывать этот метод. При необходимости он будет неявно "
"вызываться :meth:`sendmail`."

#: ../../library/smtplib.rst:285
msgid ""
"This method calls :meth:`ehlo` and/or :meth:`helo` if there has been no "
"previous ``EHLO`` or ``HELO`` command this session.  It tries ESMTP ``EHLO`` "
"first."
msgstr ""
"Этот метод вызывает :meth:`ehlo` и/или :meth:`helo`, если в этом сеансе не "
"было предыдущей команды ``EHLO`` или ``HELO``. Сначала он пробует ESMTP "
"``EHLO``."

#: ../../library/smtplib.rst:289 ../../library/smtplib.rst:318
#: ../../library/smtplib.rst:406 ../../library/smtplib.rst:475
msgid ":exc:`SMTPHeloError`"
msgstr ":exc:`SMTPHeloError`"

#: ../../library/smtplib.rst:290 ../../library/smtplib.rst:319
#: ../../library/smtplib.rst:407 ../../library/smtplib.rst:476
msgid "The server didn't reply properly to the ``HELO`` greeting."
msgstr "Сервер не ответил должным образом на приветствие HELO."

#: ../../library/smtplib.rst:294
msgid ""
"Return :const:`True` if *name* is in the set of SMTP service extensions "
"returned by the server, :const:`False` otherwise. Case is ignored."
msgstr ""
"Верните :const:`True`, если *name* входит в набор расширений службы SMTP, "
"возвращаемых сервером, :const:`False` в противном случае. Случай "
"игнорируется."

#: ../../library/smtplib.rst:300
msgid ""
"Check the validity of an address on this server using SMTP ``VRFY``. Returns "
"a tuple consisting of code 250 and a full :rfc:`822` address (including "
"human name) if the user address is valid. Otherwise returns an SMTP error "
"code of 400 or greater and an error string."
msgstr ""
"Проверьте действительность адреса на этом сервере с помощью SMTP ``VRFY``. "
"Возвращает кортеж, состоящий из кода 250 и полного адреса :rfc:`822` "
"(включая человеческое имя), если адрес пользователя действителен. В "
"противном случае возвращается код ошибки SMTP 400 или выше и строка ошибки."

#: ../../library/smtplib.rst:307
msgid "Many sites disable SMTP ``VRFY`` in order to foil spammers."
msgstr "Многие сайты отключают SMTP ``VRFY``, чтобы помешать спамерам."

#: ../../library/smtplib.rst:312
msgid ""
"Log in on an SMTP server that requires authentication. The arguments are the "
"username and the password to authenticate with. If there has been no "
"previous ``EHLO`` or ``HELO`` command this session, this method tries ESMTP "
"``EHLO`` first. This method will return normally if the authentication was "
"successful, or may raise the following exceptions:"
msgstr ""
"Войдите на SMTP-сервер, требующий аутентификации. Аргументами являются имя "
"пользователя и пароль для аутентификации. Если в этом сеансе не было "
"предыдущей команды ``EHLO`` или ``HELO``, этот метод сначала пробует ESMTP "
"``EHLO``. Этот метод обычно завершает работу, если аутентификация прошла "
"успешно, или может вызвать следующие исключения:"

#: ../../library/smtplib.rst:321
msgid ":exc:`SMTPAuthenticationError`"
msgstr ":exc:`SMTPAuthenticationError`"

#: ../../library/smtplib.rst:322
msgid "The server didn't accept the username/password combination."
msgstr "Сервер не принял комбинацию имени пользователя и пароля."

#: ../../library/smtplib.rst:324 ../../library/smtplib.rst:409
#: ../../library/smtplib.rst:485
msgid ":exc:`SMTPNotSupportedError`"
msgstr ":exc:`SMTPNotSupportedError`"

#: ../../library/smtplib.rst:325
msgid "The ``AUTH`` command is not supported by the server."
msgstr "Команда ``AUTH`` не поддерживается сервером."

#: ../../library/smtplib.rst:327
msgid ":exc:`SMTPException`"
msgstr ":exc:`SMTPException`"

#: ../../library/smtplib.rst:328
msgid "No suitable authentication method was found."
msgstr "Подходящий метод аутентификации не найден."

#: ../../library/smtplib.rst:330
msgid ""
"Each of the authentication methods supported by :mod:`smtplib` are tried in "
"turn if they are advertised as supported by the server.  See :meth:`auth` "
"for a list of supported authentication methods.  *initial_response_ok* is "
"passed through to :meth:`auth`."
msgstr ""
"Каждый из методов аутентификации, поддерживаемых :mod:`smtplib`, проверяется "
"по очереди, если они объявлены как поддерживаемые сервером. См. :meth:`auth` "
"для получения списка поддерживаемых методов аутентификации. "
"*initial_response_ok* передается в :meth:`auth`."

#: ../../library/smtplib.rst:335
msgid ""
"Optional keyword argument *initial_response_ok* specifies whether, for "
"authentication methods that support it, an \"initial response\" as specified "
"in :rfc:`4954` can be sent along with the ``AUTH`` command, rather than "
"requiring a challenge/response."
msgstr ""
"Необязательный аргумент ключевого слова *initial_response_ok* указывает, "
"можно ли для методов аутентификации, которые его поддерживают, отправлять "
"«первоначальный ответ», как указано в :rfc:`4954`, вместе с командой "
"``AUTH``, вместо того, чтобы требовать запрос/ответ. ."

#: ../../library/smtplib.rst:340
msgid ""
":exc:`SMTPNotSupportedError` may be raised, and the *initial_response_ok* "
"parameter was added."
msgstr ""
":exc:`SMTPNotSupportedError`, и был добавлен параметр *initial_response_ok*."

#: ../../library/smtplib.rst:347
msgid ""
"Issue an ``SMTP`` ``AUTH`` command for the specified authentication "
"*mechanism*, and handle the challenge response via *authobject*."
msgstr ""
"Выполните команду ``SMTP`` ``AUTH`` для указанного *механизма* "
"аутентификации и обработайте ответ на запрос через *authobject*."

#: ../../library/smtplib.rst:350
msgid ""
"*mechanism* specifies which authentication mechanism is to be used as "
"argument to the ``AUTH`` command; the valid values are those listed in the "
"``auth`` element of :attr:`esmtp_features`."
msgstr ""
"*механизм* указывает, какой механизм аутентификации будет использоваться в "
"качестве аргумента команды ``AUTH``; допустимые значения перечислены в "
"элементе ``auth`` файла :attr:`esmtp_features`."

#: ../../library/smtplib.rst:354
msgid ""
"*authobject* must be a callable object taking an optional single argument::"
msgstr ""
"*authobject* должен быть вызываемым объектом, принимающим один "
"необязательный аргумент::"

#: ../../library/smtplib.rst:356
msgid "data = authobject(challenge=None)"
msgstr "data = authobject(challenge=None)"

#: ../../library/smtplib.rst:358
msgid ""
"If optional keyword argument *initial_response_ok* is true, ``authobject()`` "
"will be called first with no argument.  It can return the :rfc:`4954` "
"\"initial response\" ASCII ``str`` which will be encoded and sent with the "
"``AUTH`` command as below.  If the ``authobject()`` does not support an "
"initial response (e.g. because it requires a challenge), it should return "
"``None`` when called with ``challenge=None``.  If *initial_response_ok* is "
"false, then ``authobject()`` will not be called first with ``None``."
msgstr ""
"Если необязательный аргумент ключевого слова *initial_response_ok* имеет "
"значение true, сначала будет вызвана функция authobject() без аргументов. Он "
"может вернуть :rfc:`4954` \"начальный ответ\" ASCII ``str``, который будет "
"закодирован и отправлен с помощью команды ``AUTH``, как показано ниже. Если "
"``authobject()`` не поддерживает первоначальный ответ (например, потому что "
"он требует запроса), он должен возвращать ``None`` при вызове с "
"``challenge=None``. Если *initial_response_ok* имеет значение false, то "
"``authobject()`` не будет вызываться первым с ``None``."

#: ../../library/smtplib.rst:366
msgid ""
"If the initial response check returns ``None``, or if *initial_response_ok* "
"is false, ``authobject()`` will be called to process the server's challenge "
"response; the *challenge* argument it is passed will be a ``bytes``.  It "
"should return ASCII ``str`` *data* that will be base64 encoded and sent to "
"the server."
msgstr ""
"Если первоначальная проверка ответа возвращает None или если "
"*initial_response_ok* имеет значение false, будет вызвана функция "
"authobject() для обработки ответа на запрос сервера; передаваемый аргумент "
"*challenge* будет ``bytes``. Он должен вернуть ASCII ``str`` *данные*, "
"которые будут закодированы в base64 и отправлены на сервер."

#: ../../library/smtplib.rst:372
msgid ""
"The ``SMTP`` class provides ``authobjects`` for the ``CRAM-MD5``, ``PLAIN``, "
"and ``LOGIN`` mechanisms; they are named ``SMTP.auth_cram_md5``, ``SMTP."
"auth_plain``, and ``SMTP.auth_login`` respectively.  They all require that "
"the ``user`` and ``password`` properties of the ``SMTP`` instance are set to "
"appropriate values."
msgstr ""
"Класс SMTP предоставляет объекты авторизации для механизмов CRAM-MD5, PLAIN "
"и LOGIN; они называются SMTP.auth_cram_md5, SMTP.auth_plain и SMTP."
"auth_login соответственно. Все они требуют, чтобы свойства ``user`` и "
"``password`` экземпляра ``SMTP`` были установлены на соответствующие "
"значения."

#: ../../library/smtplib.rst:378
msgid ""
"User code does not normally need to call ``auth`` directly, but can instead "
"call the :meth:`login` method, which will try each of the above mechanisms "
"in turn, in the order listed.  ``auth`` is exposed to facilitate the "
"implementation of authentication methods not (or not yet) supported directly "
"by :mod:`smtplib`."
msgstr ""
"Пользовательскому коду обычно не требуется напрямую вызывать ``auth``, "
"вместо этого он может вызвать метод :meth:`login`, который поочередно "
"проверит каждый из вышеперечисленных механизмов в указанном порядке. "
"``auth`` предоставляется для облегчения реализации методов аутентификации, "
"которые не поддерживаются (или еще не поддерживаются) непосредственно :mod:"
"`smtplib`."

#: ../../library/smtplib.rst:389
msgid ""
"Put the SMTP connection in TLS (Transport Layer Security) mode.  All SMTP "
"commands that follow will be encrypted.  You should then call :meth:`ehlo` "
"again."
msgstr ""
"Переведите SMTP-соединение в режим TLS (Transport Layer Security). Все "
"последующие команды SMTP будут зашифрованы. Затем вам следует снова вызвать :"
"meth:`ehlo`."

#: ../../library/smtplib.rst:393
msgid ""
"If *keyfile* and *certfile* are provided, they are used to create an :class:"
"`ssl.SSLContext`."
msgstr ""
"Если указаны *keyfile* и *certfile*, они используются для создания :class:"
"`ssl.SSLContext`."

#: ../../library/smtplib.rst:396
msgid ""
"Optional *context* parameter is an :class:`ssl.SSLContext` object; This is "
"an alternative to using a keyfile and a certfile and if specified both "
"*keyfile* and *certfile* should be ``None``."
msgstr ""
"Необязательный параметр *context* представляет собой объект :class:`ssl."
"SSLContext`; Это альтернатива использованию файла ключа и файла сертификата. "
"Если указано, что *keyfile* и *certfile* должны иметь значение «None»."

#: ../../library/smtplib.rst:400
msgid ""
"If there has been no previous ``EHLO`` or ``HELO`` command this session, "
"this method tries ESMTP ``EHLO`` first."
msgstr ""
"Если в этом сеансе не было предыдущей команды ``EHLO`` или ``HELO``, этот "
"метод сначала пробует ESMTP ``EHLO``."

#: ../../library/smtplib.rst:410
msgid "The server does not support the STARTTLS extension."
msgstr "Сервер не поддерживает расширение STARTTLS."

#: ../../library/smtplib.rst:412
msgid ":exc:`RuntimeError`"
msgstr ":exc:`RuntimeError`"

#: ../../library/smtplib.rst:413
msgid "SSL/TLS support is not available to your Python interpreter."
msgstr "Поддержка SSL/TLS недоступна для вашего интерпретатора Python."

#: ../../library/smtplib.rst:418
msgid ""
"The method now supports hostname check with :attr:`SSLContext."
"check_hostname` and *Server Name Indicator* (see :const:`~ssl.HAS_SNI`)."
msgstr ""
"Этот метод теперь поддерживает проверку имени хоста с помощью :attr:"
"`SSLContext.check_hostname` и *Индикатора имени сервера* (см. :const:`~ssl."
"HAS_SNI`)."

#: ../../library/smtplib.rst:423
msgid ""
"The error raised for lack of STARTTLS support is now the :exc:"
"`SMTPNotSupportedError` subclass instead of the base :exc:`SMTPException`."
msgstr ""
"Ошибка, возникающая из-за отсутствия поддержки STARTTLS, теперь относится к "
"подклассу :exc:`SMTPNotSupportedError` вместо базового :exc:`SMTPException`."

#: ../../library/smtplib.rst:431
msgid ""
"Send mail.  The required arguments are an :rfc:`822` from-address string, a "
"list of :rfc:`822` to-address strings (a bare string will be treated as a "
"list with 1 address), and a message string.  The caller may pass a list of "
"ESMTP options (such as ``8bitmime``) to be used in ``MAIL FROM`` commands as "
"*mail_options*. ESMTP options (such as ``DSN`` commands) that should be used "
"with all ``RCPT`` commands can be passed as *rcpt_options*.  (If you need to "
"use different ESMTP options to different recipients you have to use the low-"
"level methods such as :meth:`mail`, :meth:`rcpt` and :meth:`data` to send "
"the message.)"
msgstr ""
"Отправить почту. Обязательными аргументами являются строка исходящего "
"адреса :rfc:`822`, список строк исходящего адреса :rfc:`822` (пустая строка "
"будет рассматриваться как список с 1 адресом) и строка сообщения. Вызывающая "
"сторона может передать список опций ESMTP (например, 8bitmime), которые "
"будут использоваться в командах MAIL FROM, как *mail_options*. Параметры "
"ESMTP (например, команды DSN), которые следует использовать со всеми "
"командами RCPT, можно передавать как *rcpt_options*. (Если вам нужно "
"использовать разные параметры ESMTP для разных получателей, вам придется "
"использовать методы низкого уровня, такие как :meth:`mail`, :meth:`rcpt` и :"
"meth:`data` для отправки сообщения.)"

#: ../../library/smtplib.rst:442
msgid ""
"The *from_addr* and *to_addrs* parameters are used to construct the message "
"envelope used by the transport agents.  ``sendmail`` does not modify the "
"message headers in any way."
msgstr ""
"Параметры *from_addr* и *to_addrs* используются для создания конверта "
"сообщения, используемого агентами транспорта. ``sendmail`` никак не изменяет "
"заголовки сообщений."

#: ../../library/smtplib.rst:446
msgid ""
"*msg* may be a string containing characters in the ASCII range, or a byte "
"string.  A string is encoded to bytes using the ascii codec, and lone "
"``\\r`` and ``\\n`` characters are converted to ``\\r\\n`` characters.  A "
"byte string is not modified."
msgstr ""
"*msg* может быть строкой, содержащей символы в диапазоне ASCII, или строкой "
"байтов. Строка кодируется в байты с использованием кодека ascii, а отдельные "
"символы ``\\r`` и ``\\n`` преобразуются в символы ``\\r\\n``. Строка байтов "
"не изменяется."

#: ../../library/smtplib.rst:451
msgid ""
"If there has been no previous ``EHLO`` or ``HELO`` command this session, "
"this method tries ESMTP ``EHLO`` first. If the server does ESMTP, message "
"size and each of the specified options will be passed to it (if the option "
"is in the feature set the server advertises).  If ``EHLO`` fails, ``HELO`` "
"will be tried and ESMTP options suppressed."
msgstr ""
"Если в этом сеансе не было предыдущей команды ``EHLO`` или ``HELO``, этот "
"метод сначала пробует ESMTP ``EHLO``. Если сервер выполняет ESMTP, ему будут "
"переданы размер сообщения и все указанные параметры (если этот параметр "
"входит в набор функций, рекламируемый сервером). Если EHLO завершится "
"неудачей, будет опробован HELO, а параметры ESMTP будут отключены."

#: ../../library/smtplib.rst:457
msgid ""
"This method will return normally if the mail is accepted for at least one "
"recipient. Otherwise it will raise an exception.  That is, if this method "
"does not raise an exception, then someone should get your mail. If this "
"method does not raise an exception, it returns a dictionary, with one entry "
"for each recipient that was refused.  Each entry contains a tuple of the "
"SMTP error code and the accompanying error message sent by the server."
msgstr ""
"Этот метод вернет нормальный результат, если почта будет принята хотя бы для "
"одного получателя. В противном случае это вызовет исключение. То есть, если "
"этот метод не вызывает исключения, то вашу почту должен кто-то получить. "
"Если этот метод не вызывает исключения, он возвращает словарь с одной "
"записью для каждого получателя, которому было отказано. Каждая запись "
"содержит кортеж кода ошибки SMTP и сопутствующее сообщение об ошибке, "
"отправленное сервером."

#: ../../library/smtplib.rst:464
msgid ""
"If ``SMTPUTF8`` is included in *mail_options*, and the server supports it, "
"*from_addr* and *to_addrs* may contain non-ASCII characters."
msgstr ""
"Если ``SMTPUTF8`` включен в *mail_options* и сервер поддерживает его, "
"*from_addr* и *to_addrs* могут содержать символы, отличные от ASCII."

#: ../../library/smtplib.rst:467
msgid "This method may raise the following exceptions:"
msgstr "Этот метод может вызвать следующие исключения:"

#: ../../library/smtplib.rst:469
msgid ":exc:`SMTPRecipientsRefused`"
msgstr ":exc:`SMTPRecipientsRefused`"

#: ../../library/smtplib.rst:470
msgid ""
"All recipients were refused.  Nobody got the mail.  The :attr:`recipients` "
"attribute of the exception object is a dictionary with information about the "
"refused recipients (like the one returned when at least one recipient was "
"accepted)."
msgstr ""
"Всем получателям было отказано. Никто не получил письмо. Атрибут :attr:"
"`recipients` объекта исключения представляет собой словарь с информацией об "
"отклоненных получателях (например, тот, который возвращается, когда хотя бы "
"один получатель был принят)."

#: ../../library/smtplib.rst:478
msgid ":exc:`SMTPSenderRefused`"
msgstr ":exc:`SMTPSenderRefused`"

#: ../../library/smtplib.rst:479
msgid "The server didn't accept the *from_addr*."
msgstr "Сервер не принял *from_addr*."

#: ../../library/smtplib.rst:481
msgid ":exc:`SMTPDataError`"
msgstr ":exc:`SMTPDataError`"

#: ../../library/smtplib.rst:482
msgid ""
"The server replied with an unexpected error code (other than a refusal of a "
"recipient)."
msgstr "Сервер ответил неожиданным кодом ошибки (кроме отказа получателя)."

#: ../../library/smtplib.rst:486
msgid ""
"``SMTPUTF8`` was given in the *mail_options* but is not supported by the "
"server."
msgstr "``SMTPUTF8`` указан в *mail_options*, но не поддерживается сервером."

#: ../../library/smtplib.rst:489
msgid ""
"Unless otherwise noted, the connection will be open even after an exception "
"is raised."
msgstr ""
"Если не указано иное, соединение будет открыто даже после возникновения "
"исключения."

#: ../../library/smtplib.rst:492
msgid "*msg* may be a byte string."
msgstr "*msg* может быть строкой байтов."

#: ../../library/smtplib.rst:495
msgid ""
"``SMTPUTF8`` support added, and :exc:`SMTPNotSupportedError` may be raised "
"if ``SMTPUTF8`` is specified but the server does not support it."
msgstr ""
"Добавлена ​​поддержка ``SMTPUTF8``, и :exc:`SMTPNotSupportedError` может быть "
"вызвано, если ``SMTPUTF8`` указан, но сервер его не поддерживает."

#: ../../library/smtplib.rst:503
msgid ""
"This is a convenience method for calling :meth:`sendmail` with the message "
"represented by an :class:`email.message.Message` object.  The arguments have "
"the same meaning as for :meth:`sendmail`, except that *msg* is a ``Message`` "
"object."
msgstr ""
"Это удобный метод для вызова :meth:`sendmail` с сообщением, представленным "
"объектом :class:`email.message.Message`. Аргументы имеют то же значение, что "
"и для :meth:`sendmail`, за исключением того, что *msg* является объектом "
"``Message``."

#: ../../library/smtplib.rst:508
msgid ""
"If *from_addr* is ``None`` or *to_addrs* is ``None``, ``send_message`` fills "
"those arguments with addresses extracted from the headers of *msg* as "
"specified in :rfc:`5322`\\: *from_addr* is set to the :mailheader:`Sender` "
"field if it is present, and otherwise to the :mailheader:`From` field. "
"*to_addrs* combines the values (if any) of the :mailheader:`To`, :mailheader:"
"`Cc`, and :mailheader:`Bcc` fields from *msg*.  If exactly one set of :"
"mailheader:`Resent-*` headers appear in the message, the regular headers are "
"ignored and the :mailheader:`Resent-*` headers are used instead. If the "
"message contains more than one set of :mailheader:`Resent-*` headers, a :exc:"
"`ValueError` is raised, since there is no way to unambiguously detect the "
"most recent set of :mailheader:`Resent-` headers."
msgstr ""
"Если *from_addr* имеет значение None или *to_addrs* имеет значение None, "
"send_message заполняет эти аргументы адресами, извлеченными из заголовков "
"*msg*, как указано в :rfc:`5322`\\: *from_addr* устанавливается в поле :"
"mailheader:`Sender`, если оно присутствует, а в противном случае — в поле :"
"mailheader:`From`. *to_addrs* объединяет значения (если есть) полей :"
"mailheader:`To`, :mailheader:`Cc` и :mailheader:`Bcc` из *msg*. Если в "
"сообщении присутствует ровно один набор заголовков :mailheader:`Resent-*`, "
"обычные заголовки игнорируются и вместо них используются заголовки :"
"mailheader:`Resent-*`. Если сообщение содержит более одного набора "
"заголовков :mailheader:`Resent-*`, возникает ошибка :exc:`ValueError`, "
"поскольку не существует способа однозначно определить самый последний набор "
"заголовков :mailheader:`Resent-`. ."

#: ../../library/smtplib.rst:520
msgid ""
"``send_message`` serializes *msg* using :class:`~email.generator."
"BytesGenerator` with ``\\r\\n`` as the *linesep*, and calls :meth:`sendmail` "
"to transmit the resulting message.  Regardless of the values of *from_addr* "
"and *to_addrs*, ``send_message`` does not transmit any :mailheader:`Bcc` or :"
"mailheader:`Resent-Bcc` headers that may appear in *msg*.  If any of the "
"addresses in *from_addr* and *to_addrs* contain non-ASCII characters and the "
"server does not advertise ``SMTPUTF8`` support, an :exc:"
"`SMTPNotSupportedError` is raised.  Otherwise the ``Message`` is serialized "
"with a clone of its :mod:`~email.policy` with the :attr:`~email.policy."
"EmailPolicy.utf8` attribute set to ``True``, and ``SMTPUTF8`` and "
"``BODY=8BITMIME`` are added to *mail_options*."
msgstr ""
"`` send_message`` `serializes *msg *Использование: class:` ~ email.generator."
"bytesgenerator` с `` \\ r \\ n`` как *lineep *и вызовы: meth: `sendmail` для "
"передачи полученного сообщения. Независимо от значений *from_addr *и "
"*to_addrs *, `` send_message` `не передает ни одного: Mailheader:` bcc` или: "
"mailheader: `reveld-bcc` заголовки, которые могут появиться в *msg *. Если "
"какой-либо из адресов в * from_addr * и * to_addrs * содержит не ASCII "
"символы, а сервер не рекламирует `` smtputf8``, поднятся. В противном случае "
"«Сообщение» сериализовано с клоном его: mod: `~ email.policy` с: attr:` ~ "
"email.policy.emailpolicy.utf8`, установленным для `` true`` и `` `` "
"Smtputf8`` и `` body = 8bitmime`` 'добавляются в *mail_options *."

#: ../../library/smtplib.rst:534
msgid "Support for internationalized addresses (``SMTPUTF8``)."
msgstr "Поддержка интернационализированных адресов (SMTPUTF8)."

#: ../../library/smtplib.rst:540
msgid ""
"Terminate the SMTP session and close the connection.  Return the result of "
"the SMTP ``QUIT`` command."
msgstr "Поддержка интернационализированных адресов (SMTPUTF8)."

#: ../../library/smtplib.rst:544
msgid ""
"Low-level methods corresponding to the standard SMTP/ESMTP commands "
"``HELP``, ``RSET``, ``NOOP``, ``MAIL``, ``RCPT``, and ``DATA`` are also "
"supported. Normally these do not need to be called directly, so they are not "
"documented here.  For details, consult the module code."
msgstr ""
"Также используются низкоуровневые методы, соответствующие стандартным "
"командам SMTP/ESMTP HELP, RSET, NOOP, MAIL, RCPT и DATA. поддерживается. "
"Обычно их не нужно вызывать напрямую, поэтому они здесь не документированы. "
"Подробную информацию см. в коде модуля."

#: ../../library/smtplib.rst:553
msgid "SMTP Example"
msgstr "Пример SMTP"

#: ../../library/smtplib.rst:555
msgid ""
"This example prompts the user for addresses needed in the message envelope "
"('To' and 'From' addresses), and the message to be delivered.  Note that the "
"headers to be included with the message must be included in the message as "
"entered; this example doesn't do any processing of the :rfc:`822` headers.  "
"In particular, the 'To' and 'From' addresses must be included in the message "
"headers explicitly::"
msgstr ""
"В этом примере пользователю предлагается ввести адреса, необходимые в "
"конверте сообщения (адреса «Кому» и «От»), а также сообщение, которое "
"необходимо доставить. Обратите внимание, что заголовки, которые будут "
"включены в сообщение, должны быть включены в сообщение в том виде, в котором "
"оно введено; этот пример не выполняет никакой обработки заголовков :rfc:"
"`822`. В частности, адреса «Кому» и «От» должны быть явно включены в "
"заголовки сообщений:"

#: ../../library/smtplib.rst:561
msgid ""
"import smtplib\n"
"\n"
"def prompt(title):\n"
"    return input(title).strip()\n"
"\n"
"from_addr = prompt(\"From: \")\n"
"to_addrs  = prompt(\"To: \").split()\n"
"print(\"Enter message, end with ^D (Unix) or ^Z (Windows):\")\n"
"\n"
"# Add the From: and To: headers at the start!\n"
"lines = [f\"From: {from_addr}\", f\"To: {', '.join(to_addrs)}\", \"\"]\n"
"while True:\n"
"    try:\n"
"        line = input()\n"
"    except EOFError:\n"
"        break\n"
"    else:\n"
"        lines.append(line)\n"
"\n"
"msg = \"\\r\\n\".join(lines)\n"
"print(\"Message length is\", len(msg))\n"
"\n"
"server = smtplib.SMTP(\"localhost\")\n"
"server.set_debuglevel(1)\n"
"server.sendmail(from_addr, to_addrs, msg)\n"
"server.quit()"
msgstr ""
"import smtplib\n"
"\n"
"def prompt(title):\n"
"    return input(title).strip()\n"
"\n"
"from_addr = prompt(\"From: \")\n"
"to_addrs  = prompt(\"To: \").split()\n"
"print(\"Enter message, end with ^D (Unix) or ^Z (Windows):\")\n"
"\n"
"# Add the From: and To: headers at the start!\n"
"lines = [f\"From: {from_addr}\", f\"To: {', '.join(to_addrs)}\", \"\"]\n"
"while True:\n"
"    try:\n"
"        line = input()\n"
"    except EOFError:\n"
"        break\n"
"    else:\n"
"        lines.append(line)\n"
"\n"
"msg = \"\\r\\n\".join(lines)\n"
"print(\"Message length is\", len(msg))\n"
"\n"
"server = smtplib.SMTP(\"localhost\")\n"
"server.set_debuglevel(1)\n"
"server.sendmail(from_addr, to_addrs, msg)\n"
"server.quit()"

#: ../../library/smtplib.rst:590
msgid ""
"In general, you will want to use the :mod:`email` package's features to "
"construct an email message, which you can then send via :meth:`~smtplib.SMTP."
"send_message`; see :ref:`email-examples`."
msgstr ""
"В общем, вы захотите использовать возможности пакета :mod:`email` для "
"создания сообщения электронной почты, которое затем можно будет отправить "
"через :meth:`~smtplib.SMTP.send_message`; см. :ref:`примеры электронной "
"почты`."

#: ../../library/smtplib.rst:11
msgid "SMTP"
msgstr "SMTP"

#: ../../library/smtplib.rst:11
msgid "protocol"
msgstr "протокол"

#: ../../library/smtplib.rst:11
msgid "Simple Mail Transfer Protocol"
msgstr "Простой протокол передачи почты"
