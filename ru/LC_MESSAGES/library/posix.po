# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# Rafael Fontenelle <rffontenelle@gmail.com>, 2024
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.11\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-01-03 15:28+0000\n"
"PO-Revision-Date: 2023-05-24 02:18+0000\n"
"Last-Translator: Rafael Fontenelle <rffontenelle@gmail.com>, 2024\n"
"Language-Team: Russian (https://app.transifex.com/python-doc/teams/5390/"
"ru/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ru\n"
"Plural-Forms: nplurals=4; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && "
"n%10<=4 && (n%100<12 || n%100>14) ? 1 : n%10==0 || (n%10>=5 && n%10<=9) || "
"(n%100>=11 && n%100<=14)? 2 : 3);\n"

#: ../../library/posix.rst:2
msgid ":mod:`posix` --- The most common POSIX system calls"
msgstr ""

#: ../../library/posix.rst:10
msgid ""
"This module provides access to operating system functionality that is "
"standardized by the C Standard and the POSIX standard (a thinly disguised "
"Unix interface)."
msgstr ""
"Этот модуль обеспечивает доступ к функциям операционной системы, "
"стандартизированным стандартом C и стандартом POSIX (тонко замаскированный "
"интерфейс Unix)."

#: ../../library/posix.rst:14
msgid ":ref:`Availability <availability>`: Unix."
msgstr ":ref:`Availability <availability>`: Unix."

#: ../../library/posix.rst:18
msgid ""
"**Do not import this module directly.**  Instead, import the module :mod:"
"`os`, which provides a *portable* version of this interface.  On Unix, the :"
"mod:`os` module provides a superset of the :mod:`posix` interface.  On non-"
"Unix operating systems the :mod:`posix` module is not available, but a "
"subset is always available through the :mod:`os` interface.  Once :mod:`os` "
"is imported, there is *no* performance penalty in using it instead of :mod:"
"`posix`.  In addition, :mod:`os` provides some additional functionality, "
"such as automatically calling :func:`~os.putenv` when an entry in ``os."
"environ`` is changed."
msgstr ""
"**Не импортируйте этот модуль напрямую.** Вместо этого импортируйте модуль :"
"mod:`os`, который предоставляет *портативную* версию этого интерфейса. В "
"Unix модуль :mod:`os` представляет собой надстройку интерфейса :mod:`posix`. "
"В операционных системах, отличных от Unix, модуль :mod:`posix` недоступен, "
"но его подмножество всегда доступно через интерфейс :mod:`os`. После "
"импорта :mod:`os` использование его вместо :mod:`posix` *нет* снижения "
"производительности. Кроме того, :mod:`os` предоставляет некоторые "
"дополнительные функции, такие как автоматический вызов :func:`~os.putenv` "
"при изменении записи в ``os.environ``."

#: ../../library/posix.rst:27
msgid ""
"Errors are reported as exceptions; the usual exceptions are given for type "
"errors, while errors reported by the system calls raise :exc:`OSError`."
msgstr ""
"Об ошибках сообщается как об исключениях; обычные исключения даются для "
"ошибок типа, тогда как ошибки, о которых сообщают системные вызовы, "
"вызывают :exc:`OSError`."

#: ../../library/posix.rst:34
msgid "Large File Support"
msgstr "Поддержка больших файлов"

#: ../../library/posix.rst:42
msgid ""
"Several operating systems (including AIX and Solaris) provide support for "
"files that are larger than 2 GiB from a C programming model where :c:expr:"
"`int` and :c:expr:`long` are 32-bit values. This is typically accomplished "
"by defining the relevant size and offset types as 64-bit values. Such files "
"are sometimes referred to as :dfn:`large files`."
msgstr ""
"Некоторые операционные системы (включая AIX и Solaris) обеспечивают "
"поддержку файлов размером более 2 ГиБ из модели программирования C, где :c:"
"expr:`int` и :c:expr:`long` — 32-битные значения. Обычно это достигается "
"путем определения соответствующих типов размера и смещения как 64-битных "
"значений. Такие файлы иногда называют :dfn:`большими файлами`."

#: ../../library/posix.rst:48
msgid ""
"Large file support is enabled in Python when the size of an :c:type:`off_t` "
"is larger than a :c:expr:`long` and the :c:expr:`long long` is at least as "
"large as an :c:type:`off_t`. It may be necessary to configure and compile "
"Python with certain compiler flags to enable this mode. For example, with "
"Solaris 2.6 and 2.7 you need to do something like::"
msgstr ""
"Поддержка больших файлов в Python включается, когда размер :c:type:`off_t` "
"больше, чем :c:expr:`long`, а :c:expr:`long long` по крайней мере равен "
"размеру :c:expr:`long long`. :c:type:`off_t`. Для включения этого режима "
"может потребоваться настроить и скомпилировать Python с определенными "
"флагами компилятора. Например, в Solaris 2.6 и 2.7 вам нужно сделать что-то "
"вроде::"

#: ../../library/posix.rst:58
msgid "On large-file-capable Linux systems, this might work::"
msgstr "В системах Linux с поддержкой больших файлов это может сработать:"

#: ../../library/posix.rst:67
msgid "Notable Module Contents"
msgstr "Примечательное содержимое модуля"

#: ../../library/posix.rst:69
msgid ""
"In addition to many functions described in the :mod:`os` module "
"documentation, :mod:`posix` defines the following data item:"
msgstr ""
"В дополнение ко многим функциям, описанным в документации модуля :mod:`os`, :"
"mod:`posix` определяет следующий элемент данных:"

#: ../../library/posix.rst:74
msgid ""
"A dictionary representing the string environment at the time the interpreter "
"was started. Keys and values are bytes on Unix and str on Windows. For "
"example, ``environ[b'HOME']`` (``environ['HOME']`` on Windows) is the "
"pathname of your home directory, equivalent to ``getenv(\"HOME\")`` in C."
msgstr ""
"Словарь, представляющий строковую среду на момент запуска интерпретатора. "
"Ключи и значения представляют собой байты в Unix и str в Windows. Например, "
"``environ[b'HOME']`` (``environ['HOME']`` в Windows) — это путь к вашему "
"домашнему каталогу, эквивалентный ``getenv(\"HOME\")`` в C. ."

#: ../../library/posix.rst:79
msgid ""
"Modifying this dictionary does not affect the string environment passed on "
"by :func:`~os.execv`, :func:`~os.popen` or :func:`~os.system`; if you need "
"to change the environment, pass ``environ`` to :func:`~os.execve` or add "
"variable assignments and export statements to the command string for :func:"
"`~os.system` or :func:`~os.popen`."
msgstr ""
"Изменение этого словаря не влияет на строковую среду, передаваемую :func:"
"`~os.execv`, :func:`~os.popen` или :func:`~os.system`; если вам нужно "
"изменить среду, передайте ``environ`` в :func:`~os.execve` или добавьте "
"назначения переменных и операторы экспорта в командную строку для :func:`~os."
"system` или :func:` ~os.popen`."

#: ../../library/posix.rst:85
msgid "On Unix, keys and values are bytes."
msgstr "В Unix ключи и значения представляют собой байты."

#: ../../library/posix.rst:90
msgid ""
"The :mod:`os` module provides an alternate implementation of ``environ`` "
"which updates the environment on modification. Note also that updating :data:"
"`os.environ` will render this dictionary obsolete. Use of the :mod:`os` "
"module version of this is recommended over direct access to the :mod:`posix` "
"module."
msgstr ""
"Модуль :mod:`os` предоставляет альтернативную реализацию ``environ``, "
"которая обновляет среду при изменении. Также обратите внимание, что "
"обновление :data:`os.environ` сделает этот словарь устаревшим. Использование "
"версии модуля :mod:`os` рекомендуется вместо прямого доступа к модулю :mod:"
"`posix`."

#: ../../library/posix.rst:16
msgid "module"
msgstr "модуль"

#: ../../library/posix.rst:16
msgid "os"
msgstr "os"

#: ../../library/posix.rst:36
msgid "large files"
msgstr "большие файлы"

#: ../../library/posix.rst:36
msgid "file"
msgstr "файл"
