# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# Rafael Fontenelle <rffontenelle@gmail.com>, 2024
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.11\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-01-03 15:28+0000\n"
"PO-Revision-Date: 2023-05-24 02:21+0000\n"
"Last-Translator: Rafael Fontenelle <rffontenelle@gmail.com>, 2024\n"
"Language-Team: Russian (https://app.transifex.com/python-doc/teams/5390/"
"ru/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ru\n"
"Plural-Forms: nplurals=4; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && "
"n%10<=4 && (n%100<12 || n%100>14) ? 1 : n%10==0 || (n%10>=5 && n%10<=9) || "
"(n%100>=11 && n%100<=14)? 2 : 3);\n"

#: ../../library/uu.rst:2
msgid ":mod:`uu` --- Encode and decode uuencode files"
msgstr ":mod:`uu` --- Кодирование и декодирование файлов uuencode"

#: ../../library/uu.rst:10
msgid "**Source code:** :source:`Lib/uu.py`"
msgstr "**Исходный код:** :source:`Lib/uu.py`"

#: ../../library/uu.rst:16
msgid ""
"The :mod:`uu` module is deprecated (see :pep:`PEP 594 <594#uu-and-the-uu-"
"encoding>` for details). :mod:`base64` is a modern alternative."
msgstr ""
"Модуль :mod:`uu` устарел (подробности см. в :pep:`PEP 594 <594#uu-and-the-uu-"
"encoding>`). :mod:`base64` — современная альтернатива."

#: ../../library/uu.rst:19
msgid ""
"This module encodes and decodes files in uuencode format, allowing arbitrary "
"binary data to be transferred over ASCII-only connections. Wherever a file "
"argument is expected, the methods accept a file-like object.  For backwards "
"compatibility, a string containing a pathname is also accepted, and the "
"corresponding file will be opened for reading and writing; the pathname "
"``'-'`` is understood to mean the standard input or output.  However, this "
"interface is deprecated; it's better for the caller to open the file itself, "
"and be sure that, when required, the mode is ``'rb'`` or ``'wb'`` on Windows."
msgstr ""
"Этот модуль кодирует и декодирует файлы в формате uuencode, позволяя "
"передавать произвольные двоичные данные через соединения только ASCII. "
"Везде, где ожидается аргумент файла, методы принимают файловый объект. Для "
"обратной совместимости также принимается строка, содержащая путь, и "
"соответствующий файл будет открыт для чтения и записи; путь ``'-'`` "
"понимается как стандартный ввод или вывод. Однако этот интерфейс устарел; "
"вызывающей стороне лучше открыть файл самому и убедиться, что при "
"необходимости выбран режим ``'rb'`` или ``'wb'`` в Windows."

#: ../../library/uu.rst:32
msgid ""
"This code was contributed by Lance Ellinghouse, and modified by Jack Jansen."
msgstr ""
"Этот код был предоставлен Лэнсом Эллингхаусом и изменен Джеком Янсеном."

#: ../../library/uu.rst:34
msgid "The :mod:`uu` module defines the following functions:"
msgstr "Модуль :mod:`uu` определяет следующие функции:"

#: ../../library/uu.rst:39
msgid ""
"Uuencode file *in_file* into file *out_file*.  The uuencoded file will have "
"the header specifying *name* and *mode* as the defaults for the results of "
"decoding the file. The default defaults are taken from *in_file*, or ``'-'`` "
"and ``0o666`` respectively.  If *backtick* is true, zeros are represented by "
"``'`'`` instead of spaces."
msgstr ""
"Uuencode файл *in_file* в файл *out_file*. Файл в кодировке uu будет иметь "
"заголовок, указывающий *имя* и *режим* в качестве значений по умолчанию для "
"результатов декодирования файла. Значения по умолчанию берутся из *in_file* "
"или ``'-'`` и ``0o666`` соответственно. Если *backtick* истинно, нули "
"представлены ``'`'`` вместо пробелов."

#: ../../library/uu.rst:45
msgid "Added the *backtick* parameter."
msgstr "Добавлен параметр *backtick*."

#: ../../library/uu.rst:51
msgid ""
"This call decodes uuencoded file *in_file* placing the result on file "
"*out_file*. If *out_file* is a pathname, *mode* is used to set the "
"permission bits if the file must be created. Defaults for *out_file* and "
"*mode* are taken from the uuencode header.  However, if the file specified "
"in the header already exists, a :exc:`uu.Error` is raised."
msgstr ""
"Этот вызов декодирует закодированный файл *in_file*, помещая результат в "
"файл *out_file*. Если *out_file* — это путь, *mode* используется для "
"установки битов разрешений, если файл должен быть создан. Значения по "
"умолчанию для *out_file* и *mode* берутся из заголовка uuencode. Однако, "
"если файл, указанный в заголовке, уже существует, возникает ошибка :exc:`uu."
"Error`."

#: ../../library/uu.rst:57
msgid ""
":func:`decode` may print a warning to standard error if the input was "
"produced by an incorrect uuencoder and Python could recover from that "
"error.  Setting *quiet* to a true value silences this warning."
msgstr ""
":func:`decode` может вывести предупреждение о стандартной ошибке, если "
"входные данные были созданы неверным кодировщиком uuencoder, и Python мог "
"восстановиться после этой ошибки. Установка для *quiet* истинного значения "
"отключает это предупреждение."

#: ../../library/uu.rst:64
msgid ""
"Subclass of :exc:`Exception`, this can be raised by :func:`uu.decode` under "
"various situations, such as described above, but also including a badly "
"formatted header, or truncated input file."
msgstr ""
"Подкласс :exc:`Exception`, он может быть вызван :func:`uu.decode` в "
"различных ситуациях, таких как описанные выше, но также при включении плохо "
"отформатированного заголовка или усеченного входного файла."

#: ../../library/uu.rst:71
msgid "Module :mod:`binascii`"
msgstr "Модуль :mod:`binascii`"

#: ../../library/uu.rst:72
msgid ""
"Support module containing ASCII-to-binary and binary-to-ASCII conversions."
msgstr ""
"Модуль поддержки, содержащий преобразования ASCII в двоичный и двоичный "
"формат ASCII."

#: ../../library/uu.rst:28
msgid "Jansen, Jack"
msgstr "Янсен, Джек"

#: ../../library/uu.rst:28
msgid "Ellinghouse, Lance"
msgstr "Эллингхаус, Лэнс"
