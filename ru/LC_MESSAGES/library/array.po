# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# Rafael Fontenelle <rffontenelle@gmail.com>, 2024
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.10\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-01-10 16:06+0000\n"
"PO-Revision-Date: 2022-11-05 17:21+0000\n"
"Last-Translator: Rafael Fontenelle <rffontenelle@gmail.com>, 2024\n"
"Language-Team: Russian (https://app.transifex.com/python-doc/teams/5390/"
"ru/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ru\n"
"Plural-Forms: nplurals=4; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && "
"n%10<=4 && (n%100<12 || n%100>14) ? 1 : n%10==0 || (n%10>=5 && n%10<=9) || "
"(n%100>=11 && n%100<=14)? 2 : 3);\n"

#: ../../library/array.rst:2
msgid ":mod:`array` --- Efficient arrays of numeric values"
msgstr ""

#: ../../library/array.rst:11
msgid ""
"This module defines an object type which can compactly represent an array of "
"basic values: characters, integers, floating point numbers.  Arrays are "
"sequence types and behave very much like lists, except that the type of "
"objects stored in them is constrained.  The type is specified at object "
"creation time by using a :dfn:`type code`, which is a single character.  The "
"following type codes are defined:"
msgstr ""

#: ../../library/array.rst:19
msgid "Type code"
msgstr "Код типа"

#: ../../library/array.rst:19
msgid "C Type"
msgstr "Тип C"

#: ../../library/array.rst:19
msgid "Python Type"
msgstr "Тип Python"

#: ../../library/array.rst:19
msgid "Minimum size in bytes"
msgstr "Минимальный размер в байтах"

#: ../../library/array.rst:19
msgid "Notes"
msgstr "Примечания"

#: ../../library/array.rst:21
msgid "``'b'``"
msgstr "``'b'``"

#: ../../library/array.rst:21
msgid "signed char"
msgstr "signed char"

#: ../../library/array.rst:21 ../../library/array.rst:23
#: ../../library/array.rst:27 ../../library/array.rst:29
#: ../../library/array.rst:31 ../../library/array.rst:33
#: ../../library/array.rst:35 ../../library/array.rst:37
#: ../../library/array.rst:39 ../../library/array.rst:41
msgid "int"
msgstr "int"

#: ../../library/array.rst:21 ../../library/array.rst:23
msgid "1"
msgstr "1"

#: ../../library/array.rst:23
msgid "``'B'``"
msgstr "``'B'``"

#: ../../library/array.rst:23
msgid "unsigned char"
msgstr "unsigned char"

#: ../../library/array.rst:25
msgid "``'u'``"
msgstr "``'u'``"

#: ../../library/array.rst:25
msgid "wchar_t"
msgstr "wchar_t"

#: ../../library/array.rst:25
msgid "Unicode character"
msgstr "Символ Юникода"

#: ../../library/array.rst:25 ../../library/array.rst:27
#: ../../library/array.rst:29 ../../library/array.rst:31
#: ../../library/array.rst:33
msgid "2"
msgstr "2"

#: ../../library/array.rst:25
msgid "\\(1)"
msgstr "\\(1)"

#: ../../library/array.rst:27
msgid "``'h'``"
msgstr "``'h'``"

#: ../../library/array.rst:27
msgid "signed short"
msgstr "signed short"

#: ../../library/array.rst:29
msgid "``'H'``"
msgstr "``'H'``"

#: ../../library/array.rst:29
msgid "unsigned short"
msgstr "unsigned short"

#: ../../library/array.rst:31
msgid "``'i'``"
msgstr "``'i'``"

#: ../../library/array.rst:31
msgid "signed int"
msgstr "signed int"

#: ../../library/array.rst:33
msgid "``'I'``"
msgstr "``'I'``"

#: ../../library/array.rst:33
msgid "unsigned int"
msgstr "unsigned int"

#: ../../library/array.rst:35
msgid "``'l'``"
msgstr "``'l'``"

#: ../../library/array.rst:35
msgid "signed long"
msgstr "signed long"

#: ../../library/array.rst:35 ../../library/array.rst:37
#: ../../library/array.rst:43
msgid "4"
msgstr "4"

#: ../../library/array.rst:37
msgid "``'L'``"
msgstr "``'L'``"

#: ../../library/array.rst:37
msgid "unsigned long"
msgstr "unsigned long"

#: ../../library/array.rst:39
msgid "``'q'``"
msgstr "``'q'``"

#: ../../library/array.rst:39
msgid "signed long long"
msgstr "signed long long"

#: ../../library/array.rst:39 ../../library/array.rst:41
#: ../../library/array.rst:45
msgid "8"
msgstr "8"

#: ../../library/array.rst:41
msgid "``'Q'``"
msgstr "``'Q'``"

#: ../../library/array.rst:41
msgid "unsigned long long"
msgstr "unsigned long long"

#: ../../library/array.rst:43
msgid "``'f'``"
msgstr "``'f'``"

#: ../../library/array.rst:43 ../../library/array.rst:45
msgid "float"
msgstr "float"

#: ../../library/array.rst:45
msgid "``'d'``"
msgstr "``'d'``"

#: ../../library/array.rst:45
msgid "double"
msgstr "double"

#: ../../library/array.rst:48
msgid "Notes:"
msgstr "Примечания:"

#: ../../library/array.rst:51
msgid "It can be 16 bits or 32 bits depending on the platform."
msgstr "Он может быть 16-битным или 32-битным, в зависимости от платформы."

#: ../../library/array.rst:53
msgid ""
"``array('u')`` now uses ``wchar_t`` as C type instead of deprecated "
"``Py_UNICODE``. This change doesn't affect its behavior because "
"``Py_UNICODE`` is alias of ``wchar_t`` since Python 3.3."
msgstr ""

#: ../../library/array.rst:61
msgid ""
"The actual representation of values is determined by the machine "
"architecture (strictly speaking, by the C implementation).  The actual size "
"can be accessed through the :attr:`array.itemsize` attribute."
msgstr ""
"Фактическое представление значений определяется архитектурой машины (строго "
"говоря, реализацией C). Фактический размер можно узнать через атрибут :attr:"
"`array.itemsize`."

#: ../../library/array.rst:65
msgid "The module defines the following item:"
msgstr "Модуль определяет следующий элемент:"

#: ../../library/array.rst:70
msgid "A string with all available type codes."
msgstr "Строка со всеми доступными кодами типов."

#: ../../library/array.rst:73
msgid "The module defines the following type:"
msgstr "Модуль определяет следующий тип:"

#: ../../library/array.rst:78
msgid ""
"A new array whose items are restricted by *typecode*, and initialized from "
"the optional *initializer* value, which must be a list, a :term:`bytes-like "
"object`, or iterable over elements of the appropriate type."
msgstr ""

#: ../../library/array.rst:83
msgid ""
"If given a list or string, the initializer is passed to the new array's :"
"meth:`fromlist`, :meth:`frombytes`, or :meth:`fromunicode` method (see "
"below) to add initial items to the array.  Otherwise, the iterable "
"initializer is passed to the :meth:`extend` method."
msgstr ""

#: ../../library/array.rst:88
msgid ""
"Array objects support the ordinary sequence operations of indexing, slicing, "
"concatenation, and multiplication.  When using slice assignment, the "
"assigned value must be an array object with the same type code; in all other "
"cases, :exc:`TypeError` is raised. Array objects also implement the buffer "
"interface, and may be used wherever :term:`bytes-like objects <bytes-like "
"object>` are supported."
msgstr ""
"Объекты массива поддерживают обычные операции последовательности индексации, "
"срезов, конкатенации и умножения. При использовании назначения среза "
"назначенное значение должно быть объектом массива с тем же кодом типа; во "
"всех остальных случаях возникает :exc:`TypeError`. Объекты массива также "
"реализуют интерфейс буфера и могут использоваться везде, где поддерживаются :"
"term:`байтоподобные объекты <байтоподобный объект>`."

#: ../../library/array.rst:94
msgid ""
"Raises an :ref:`auditing event <auditing>` ``array.__new__`` with arguments "
"``typecode``, ``initializer``."
msgstr ""
"Вызывает :ref:`событие аудита <auditing>` ``array.__new__`` с аргументами "
"``typecode``, ``initializer``."

#: ../../library/array.rst:99
msgid "The typecode character used to create the array."
msgstr "Символ типового кода, используемый для создания массива."

#: ../../library/array.rst:104
msgid "The length in bytes of one array item in the internal representation."
msgstr "Длина в байтах одного элемента массива во внутреннем представлении."

#: ../../library/array.rst:109
msgid "Append a new item with value *x* to the end of the array."
msgstr "Добавьте новый элемент со значением *x* в конец массива."

#: ../../library/array.rst:114
msgid ""
"Return a tuple ``(address, length)`` giving the current memory address and "
"the length in elements of the buffer used to hold array's contents.  The "
"size of the memory buffer in bytes can be computed as ``array.buffer_info()"
"[1] * array.itemsize``.  This is occasionally useful when working with low-"
"level (and inherently unsafe) I/O interfaces that require memory addresses, "
"such as certain :c:func:`!ioctl` operations.  The returned numbers are valid "
"as long as the array exists and no length-changing operations are applied to "
"it."
msgstr ""
"Возвращает кортеж ``(address, length)``, указывающий текущий адрес памяти и "
"длину в элементах буфера, используемого для хранения содержимого массива. "
"Размер буфера памяти в байтах можно вычислить как ``array.buffer_info()[1] * "
"array.itemsize``. Иногда это бывает полезно при работе с низкоуровневыми (и "
"по своей сути небезопасными) интерфейсами ввода-вывода, которым требуются "
"адреса памяти, например, при определенных операциях :c:func:`!ioctl`. "
"Возвращаемые числа действительны до тех пор, пока массив существует и к нему "
"не применяются никакие операции по изменению длины."

#: ../../library/array.rst:124
msgid ""
"When using array objects from code written in C or C++ (the only way to "
"effectively make use of this information), it makes more sense to use the "
"buffer interface supported by array objects.  This method is maintained for "
"backward compatibility and should be avoided in new code.  The buffer "
"interface is documented in :ref:`bufferobjects`."
msgstr ""
"При использовании объектов массива из кода, написанного на C или C++ "
"(единственный способ эффективно использовать эту информацию), имеет смысл "
"использовать интерфейс буфера, поддерживаемый объектами массива. Этот метод "
"поддерживается для обратной совместимости, и его следует избегать в новом "
"коде. Интерфейс буфера описан в :ref:`bufferobjects`."

#: ../../library/array.rst:133
msgid ""
"\"Byteswap\" all items of the array.  This is only supported for values "
"which are 1, 2, 4, or 8 bytes in size; for other types of values, :exc:"
"`RuntimeError` is raised.  It is useful when reading data from a file "
"written on a machine with a different byte order."
msgstr ""
"«Поменять местами» все элементы массива. Это поддерживается только для "
"значений размером 1, 2, 4 или 8 байт; для других типов значений возникает :"
"exc:`RuntimeError`. Это полезно при чтении данных из файла, написанного на "
"машине, с другим порядком байтов."

#: ../../library/array.rst:141
msgid "Return the number of occurrences of *x* in the array."
msgstr "Возвращает количество вхождений *x* в массив."

#: ../../library/array.rst:146
msgid ""
"Append items from *iterable* to the end of the array.  If *iterable* is "
"another array, it must have *exactly* the same type code; if not, :exc:"
"`TypeError` will be raised.  If *iterable* is not an array, it must be "
"iterable and its elements must be the right type to be appended to the array."
msgstr ""
"Добавить элементы из *iterable* в конец массива. Если *iterable* — это "
"другой массив, он должен иметь *точно* тот же код типа; в противном случае "
"будет выдано :exc:`TypeError`. Если *iterable* не является массивом, он "
"должен быть итеративным, а его элементы должны быть правильного типа для "
"добавления в массив."

#: ../../library/array.rst:154
msgid ""
"Appends items from the string, interpreting the string as an array of "
"machine values (as if it had been read from a file using the :meth:"
"`fromfile` method)."
msgstr ""

#: ../../library/array.rst:157
msgid ":meth:`!fromstring` is renamed to :meth:`frombytes` for clarity."
msgstr ":meth:`!fromstring` для ясности переименован в :meth:`frombytes`."

#: ../../library/array.rst:163
msgid ""
"Read *n* items (as machine values) from the :term:`file object` *f* and "
"append them to the end of the array.  If less than *n* items are available, :"
"exc:`EOFError` is raised, but the items that were available are still "
"inserted into the array."
msgstr ""
"Считайте *n* элементов (как машинные значения) из :term:`файлового объекта` "
"*f* и добавьте их в конец массива. Если доступно менее *n* элементов, "
"выдается :exc:`EOFError`, но доступные элементы все равно вставляются в "
"массив."

#: ../../library/array.rst:171
msgid ""
"Append items from the list.  This is equivalent to ``for x in list: a."
"append(x)`` except that if there is a type error, the array is unchanged."
msgstr ""
"Добавить элементы из списка. Это эквивалентно ``for x in list: a."
"append(x)``, за исключением того, что в случае ошибки типа массив не "
"изменяется."

#: ../../library/array.rst:177
msgid ""
"Extends this array with data from the given unicode string.  The array must "
"be a type ``'u'`` array; otherwise a :exc:`ValueError` is raised.  Use "
"``array.frombytes(unicodestring.encode(enc))`` to append Unicode data to an "
"array of some other type."
msgstr ""

#: ../../library/array.rst:185
msgid ""
"Return the smallest *i* such that *i* is the index of the first occurrence "
"of *x* in the array.  The optional arguments *start* and *stop* can be "
"specified to search for *x* within a subsection of the array.  Raise :exc:"
"`ValueError` if *x* is not found."
msgstr ""
"Возвращает наименьшее *i* такое, что *i* является индексом первого вхождения "
"*x* в массив. Необязательные аргументы *start* и *stop* могут быть указаны "
"для поиска *x* в подразделе массива. Поднимите :exc:`ValueError`, если *x* "
"не найдено."

#: ../../library/array.rst:190
msgid "Added optional *start* and *stop* parameters."
msgstr "Добавлены дополнительные параметры *start* и *stop*."

#: ../../library/array.rst:196
msgid ""
"Insert a new item with value *x* in the array before position *i*. Negative "
"values are treated as being relative to the end of the array."
msgstr ""
"Вставьте новый элемент со значением *x* в массив перед позицией *i*. "
"Отрицательные значения рассматриваются как относительные к концу массива."

#: ../../library/array.rst:202
msgid ""
"Removes the item with the index *i* from the array and returns it. The "
"optional argument defaults to ``-1``, so that by default the last item is "
"removed and returned."
msgstr ""
"Удаляет элемент с индексом *i* из массива и возвращает его. Необязательный "
"аргумент по умолчанию имеет значение ``-1``, так что по умолчанию последний "
"элемент удаляется и возвращается."

#: ../../library/array.rst:209
msgid "Remove the first occurrence of *x* from the array."
msgstr "Удалите первое вхождение *x* из массива."

#: ../../library/array.rst:214
msgid "Reverse the order of the items in the array."
msgstr "Измените порядок элементов массива на обратный."

#: ../../library/array.rst:219
msgid ""
"Convert the array to an array of machine values and return the bytes "
"representation (the same sequence of bytes that would be written to a file "
"by the :meth:`tofile` method.)"
msgstr ""
"Преобразуйте массив в массив машинных значений и верните представление "
"байтов (та же последовательность байтов, которая будет записана в файл "
"методом :meth:`tofile`)."

#: ../../library/array.rst:223
msgid ":meth:`!tostring` is renamed to :meth:`tobytes` for clarity."
msgstr ":meth:`!tostring` для ясности переименован в :meth:`tobytes`."

#: ../../library/array.rst:229
msgid "Write all items (as machine values) to the :term:`file object` *f*."
msgstr ""
"Запишите все элементы (как машинные значения) в :term:`файловый объект` *f*."

#: ../../library/array.rst:234
msgid "Convert the array to an ordinary list with the same items."
msgstr "Преобразуйте массив в обычный список с одинаковыми элементами."

#: ../../library/array.rst:239
msgid ""
"Convert the array to a unicode string.  The array must be a type ``'u'`` "
"array; otherwise a :exc:`ValueError` is raised. Use ``array.tobytes()."
"decode(enc)`` to obtain a unicode string from an array of some other type."
msgstr ""

#: ../../library/array.rst:244
msgid ""
"When an array object is printed or converted to a string, it is represented "
"as ``array(typecode, initializer)``.  The *initializer* is omitted if the "
"array is empty, otherwise it is a string if the *typecode* is ``'u'``, "
"otherwise it is a list of numbers.  The string is guaranteed to be able to "
"be converted back to an array with the same type and value using :func:"
"`eval`, so long as the :class:`~array.array` class has been imported using "
"``from array import array``. Examples::"
msgstr ""

#: ../../library/array.rst:261
msgid "Module :mod:`struct`"
msgstr "Модуль :mod:`struct`"

#: ../../library/array.rst:261
msgid "Packing and unpacking of heterogeneous binary data."
msgstr "Упаковка и распаковка разнородных двоичных данных."

#: ../../library/array.rst:265
msgid "Module :mod:`xdrlib`"
msgstr "Модуль :mod:`xdrlib`"

#: ../../library/array.rst:264
msgid ""
"Packing and unpacking of External Data Representation (XDR) data as used in "
"some remote procedure call systems."
msgstr ""
"Упаковка и распаковка данных внешнего представления данных (XDR), "
"используемых в некоторых системах удаленного вызова процедур."

#: ../../library/array.rst:267
msgid "`NumPy <https://numpy.org/>`_"
msgstr "`NumPy <https://numpy.org/>`_"

#: ../../library/array.rst:268
msgid "The NumPy package defines another array type."
msgstr "Пакет NumPy определяет другой тип массива."
