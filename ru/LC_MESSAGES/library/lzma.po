# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# Rafael Fontenelle <rffontenelle@gmail.com>, 2024
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.11\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-01-03 15:28+0000\n"
"PO-Revision-Date: 2023-05-24 02:17+0000\n"
"Last-Translator: Rafael Fontenelle <rffontenelle@gmail.com>, 2024\n"
"Language-Team: Russian (https://app.transifex.com/python-doc/teams/5390/"
"ru/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ru\n"
"Plural-Forms: nplurals=4; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && "
"n%10<=4 && (n%100<12 || n%100>14) ? 1 : n%10==0 || (n%10>=5 && n%10<=9) || "
"(n%100>=11 && n%100<=14)? 2 : 3);\n"

#: ../../library/lzma.rst:2
msgid ":mod:`lzma` --- Compression using the LZMA algorithm"
msgstr ""

#: ../../library/lzma.rst:12
msgid "**Source code:** :source:`Lib/lzma.py`"
msgstr "**Исходный код:** :source:`Lib/lzma.py`"

#: ../../library/lzma.rst:16
msgid ""
"This module provides classes and convenience functions for compressing and "
"decompressing data using the LZMA compression algorithm. Also included is a "
"file interface supporting the ``.xz`` and legacy ``.lzma`` file formats used "
"by the :program:`xz` utility, as well as raw compressed streams."
msgstr ""
"Этот модуль предоставляет классы и удобные функции для сжатия и распаковки "
"данных с использованием алгоритма сжатия LZMA. Также включен файловый "
"интерфейс, поддерживающий файловые форматы ``.xz`` и устаревшие ``.lzma``, "
"используемые утилитой :program:`xz`, а также необработанные сжатые потоки."

#: ../../library/lzma.rst:21
msgid ""
"The interface provided by this module is very similar to that of the :mod:"
"`bz2` module. Note that :class:`LZMAFile` and :class:`bz2.BZ2File` are *not* "
"thread-safe, so if you need to use a single :class:`LZMAFile` instance from "
"multiple threads, it is necessary to protect it with a lock."
msgstr ""
"Интерфейс, предоставляемый этим модулем, очень похож на интерфейс модуля :"
"mod:`bz2`. Обратите внимание, что :class:`LZMAFile` и :class:`bz2.BZ2File` "
"*не* потокобезопасны, поэтому, если вам нужно использовать один экземпляр :"
"class:`LZMAFile` из нескольких потоков, необходимо защитить его. с замком."

#: ../../library/lzma.rst:29
msgid ""
"This exception is raised when an error occurs during compression or "
"decompression, or while initializing the compressor/decompressor state."
msgstr ""
"Это исключение возникает, когда возникает ошибка во время сжатия или "
"распаковки или при инициализации состояния компрессора/декомпрессора."

#: ../../library/lzma.rst:34
msgid "Reading and writing compressed files"
msgstr "Чтение и запись сжатых файлов"

#: ../../library/lzma.rst:38
msgid ""
"Open an LZMA-compressed file in binary or text mode, returning a :term:`file "
"object`."
msgstr ""
"Откройте файл, сжатый LZMA, в двоичном или текстовом режиме, вернув :term:"
"`файловый объект`."

#: ../../library/lzma.rst:41
msgid ""
"The *filename* argument can be either an actual file name (given as a :class:"
"`str`, :class:`bytes` or :term:`path-like <path-like object>` object), in "
"which case the named file is opened, or it can be an existing file object to "
"read from or write to."
msgstr ""
"Аргумент *filename* может быть либо фактическим именем файла (представленным "
"в виде объекта :class:`str`, :class:`bytes` или :term:`path-like <path-like "
"object>`), и в этом случае указанный файл открывается или это может быть "
"существующий файловый объект для чтения или записи."

#: ../../library/lzma.rst:46
msgid ""
"The *mode* argument can be any of ``\"r\"``, ``\"rb\"``, ``\"w\"``, "
"``\"wb\"``, ``\"x\"``, ``\"xb\"``, ``\"a\"`` or ``\"ab\"`` for binary mode, "
"or ``\"rt\"``, ``\"wt\"``, ``\"xt\"``, or ``\"at\"`` for text mode. The "
"default is ``\"rb\"``."
msgstr ""
"Аргумент *mode* может быть любым из ``\"r\"``, ``\"rb\"``, ``\"w\"``, "
"``\"wb\"``, ``\"x\"``, `` `\"xb\"``, ``\"a\"`` или ``\"ab\"`` для двоичного "
"режима или ``\"rt\"``, ``\"wt\"``, ``\"xt\"`` или ``\"at\"`` для текстового "
"режима. По умолчанию используется ``\"rb\"``."

#: ../../library/lzma.rst:50 ../../library/lzma.rst:95
msgid ""
"When opening a file for reading, the *format* and *filters* arguments have "
"the same meanings as for :class:`LZMADecompressor`. In this case, the "
"*check* and *preset* arguments should not be used."
msgstr ""
"При открытии файла для чтения аргументы *format* и *filters* имеют то же "
"значение, что и для :class:`LZMADecompressor`. В этом случае аргументы "
"*check* и *preset* использовать не следует."

#: ../../library/lzma.rst:54 ../../library/lzma.rst:99
msgid ""
"When opening a file for writing, the *format*, *check*, *preset* and "
"*filters* arguments have the same meanings as for :class:`LZMACompressor`."
msgstr ""
"При открытии файла для записи аргументы *format*, *check*, *preset* и "
"*filters* имеют те же значения, что и для :class:`LZMACompressor`."

#: ../../library/lzma.rst:57
msgid ""
"For binary mode, this function is equivalent to the :class:`LZMAFile` "
"constructor: ``LZMAFile(filename, mode, ...)``. In this case, the "
"*encoding*, *errors* and *newline* arguments must not be provided."
msgstr ""
"Для двоичного режима эта функция эквивалентна конструктору :class:"
"`LZMAFile`: ``LZMAFile(filename, mode, ...)``. В этом случае аргументы "
"*encoding*, *errors* и *newline* указываться не должны."

#: ../../library/lzma.rst:61
msgid ""
"For text mode, a :class:`LZMAFile` object is created, and wrapped in an :"
"class:`io.TextIOWrapper` instance with the specified encoding, error "
"handling behavior, and line ending(s)."
msgstr ""
"Для текстового режима создается объект :class:`LZMAFile` и обертывается в "
"экземпляр :class:`io.TextIOWrapper` с указанной кодировкой, поведением "
"обработки ошибок и окончанием(ями) строки."

#: ../../library/lzma.rst:65
msgid "Added support for the ``\"x\"``, ``\"xb\"`` and ``\"xt\"`` modes."
msgstr "Добавлена ​​поддержка режимов ``\"x\"``, ``\"xb\"`` и ``\"xt\"``."

#: ../../library/lzma.rst:68 ../../library/lzma.rst:127
msgid "Accepts a :term:`path-like object`."
msgstr "Принимает :term:`объект, похожий на путь`."

#: ../../library/lzma.rst:74
msgid "Open an LZMA-compressed file in binary mode."
msgstr "Откройте файл, сжатый LZMA, в двоичном режиме."

#: ../../library/lzma.rst:76
msgid ""
"An :class:`LZMAFile` can wrap an already-open :term:`file object`, or "
"operate directly on a named file. The *filename* argument specifies either "
"the file object to wrap, or the name of the file to open (as a :class:"
"`str`, :class:`bytes` or :term:`path-like <path-like object>` object). When "
"wrapping an existing file object, the wrapped file will not be closed when "
"the :class:`LZMAFile` is closed."
msgstr ""
":class:`LZMAFile` может оборачивать уже открытый :term:`файловый объект` или "
"работать непосредственно с именованным файлом. Аргумент *filename* указывает "
"либо объект файла, который нужно обернуть, либо имя файла, который нужно "
"открыть (в виде :class:`str`, :class:`bytes` или :term:`path-like <path-like "
"object >`объект). При упаковке существующего файлового объекта обернутый "
"файл не будет закрыт при закрытии :class:`LZMAFile`."

#: ../../library/lzma.rst:83
msgid ""
"The *mode* argument can be either ``\"r\"`` for reading (default), ``\"w\"`` "
"for overwriting, ``\"x\"`` for exclusive creation, or ``\"a\"`` for "
"appending. These can equivalently be given as ``\"rb\"``, ``\"wb\"``, "
"``\"xb\"`` and ``\"ab\"`` respectively."
msgstr ""
"Аргументом *mode* может быть либо ``\"r\"`` для чтения (по умолчанию), "
"``\"w\"`` для перезаписи, ``\"x\"`` для эксклюзивного создания или ``\"a\"`` "
"для добавления. Они могут быть эквивалентно заданы как ``\"rb\"``, "
"``\"wb\"``, ``\"xb\"`` и ``\"ab\"`` соответственно."

#: ../../library/lzma.rst:88
msgid ""
"If *filename* is a file object (rather than an actual file name), a mode of "
"``\"w\"`` does not truncate the file, and is instead equivalent to ``\"a\"``."
msgstr ""
"Если *filename* является файловым объектом (а не фактическим именем файла), "
"режим ``\"w\"`` не усекает файл, а вместо этого эквивалентен ``\"a\"``."

#: ../../library/lzma.rst:91
msgid ""
"When opening a file for reading, the input file may be the concatenation of "
"multiple separate compressed streams. These are transparently decoded as a "
"single logical stream."
msgstr ""
"При открытии файла для чтения входной файл может представлять собой "
"объединение нескольких отдельных сжатых потоков. Они прозрачно декодируются "
"как один логический поток."

#: ../../library/lzma.rst:102
msgid ""
":class:`LZMAFile` supports all the members specified by :class:`io."
"BufferedIOBase`, except for :meth:`~io.BufferedIOBase.detach` and :meth:`~io."
"IOBase.truncate`. Iteration and the :keyword:`with` statement are supported."
msgstr ""
":class:`LZMAFile` поддерживает все члены, указанные в :class:`io."
"BufferedIOBase`, за исключением :meth:`~io.BufferedIOBase.detach` и :meth:"
"`~io.IOBase.truncate`. Поддерживаются итерация и оператор :keyword:`with`."

#: ../../library/lzma.rst:107
msgid "The following method is also provided:"
msgstr "Также предусмотрен следующий метод:"

#: ../../library/lzma.rst:111
msgid ""
"Return buffered data without advancing the file position. At least one byte "
"of data will be returned, unless EOF has been reached. The exact number of "
"bytes returned is unspecified (the *size* argument is ignored)."
msgstr ""
"Возвращает буферизованные данные без изменения позиции файла. Будет "
"возвращен как минимум один байт данных, если не достигнут EOF. Точное "
"количество возвращаемых байтов не указано (аргумент *size* игнорируется)."

#: ../../library/lzma.rst:115
msgid ""
"While calling :meth:`peek` does not change the file position of the :class:"
"`LZMAFile`, it may change the position of the underlying file object (e.g. "
"if the :class:`LZMAFile` was constructed by passing a file object for "
"*filename*)."
msgstr ""
"При вызове :meth:`peek` не изменяется положение файла :class:`LZMAFile`, он "
"может изменить положение базового файлового объекта (например, если :class:"
"`LZMAFile` был создан путем передачи файлового объекта для *имя файла*)."

#: ../../library/lzma.rst:120
msgid "Added support for the ``\"x\"`` and ``\"xb\"`` modes."
msgstr "Добавлена ​​поддержка режимов ``\"x\"`` и ``\"xb\"``."

#: ../../library/lzma.rst:123
msgid ""
"The :meth:`~io.BufferedIOBase.read` method now accepts an argument of "
"``None``."
msgstr ""
"Метод :meth:`~io.BufferedIOBase.read` теперь принимает аргумент ``None``."

#: ../../library/lzma.rst:132
msgid "Compressing and decompressing data in memory"
msgstr "Сжатие и распаковка данных в памяти"

#: ../../library/lzma.rst:136
msgid ""
"Create a compressor object, which can be used to compress data incrementally."
msgstr ""
"Создайте объект компрессора, который можно использовать для постепенного "
"сжатия данных."

#: ../../library/lzma.rst:138
msgid ""
"For a more convenient way of compressing a single chunk of data, see :func:"
"`compress`."
msgstr ""
"Чтобы узнать о более удобном способе сжатия одного фрагмента данных, см. :"
"func:`compress`."

#: ../../library/lzma.rst:141
msgid ""
"The *format* argument specifies what container format should be used. "
"Possible values are:"
msgstr ""
"Аргумент *format* указывает, какой формат контейнера следует использовать. "
"Возможные значения:"

#: ../../library/lzma.rst:145
msgid ":const:`FORMAT_XZ`: The ``.xz`` container format."
msgstr ":const:`FORMAT_XZ`: Формат контейнера ``.xz``."

#: ../../library/lzma.rst:145
msgid "This is the default format."
msgstr "Это формат по умолчанию."

#: ../../library/lzma.rst:149
msgid ":const:`FORMAT_ALONE`: The legacy ``.lzma`` container format."
msgstr ":const:`FORMAT_ALONE`: устаревший формат контейнера ``.lzma``."

#: ../../library/lzma.rst:148
msgid ""
"This format is more limited than ``.xz`` -- it does not support integrity "
"checks or multiple filters."
msgstr ""
"Этот формат более ограничен, чем «.xz» — он не поддерживает проверки "
"целостности или несколько фильтров."

#: ../../library/lzma.rst:155
msgid ":const:`FORMAT_RAW`: A raw data stream, not using any container format."
msgstr ""
":const:`FORMAT_RAW`: поток необработанных данных, не использующий какой-либо "
"формат контейнера."

#: ../../library/lzma.rst:152
msgid ""
"This format specifier does not support integrity checks, and requires that "
"you always specify a custom filter chain (for both compression and "
"decompression). Additionally, data compressed in this manner cannot be "
"decompressed using :const:`FORMAT_AUTO` (see :class:`LZMADecompressor`)."
msgstr ""
"Этот спецификатор формата не поддерживает проверки целостности и требует, "
"чтобы вы всегда указывали собственную цепочку фильтров (как для сжатия, так "
"и для распаковки). Кроме того, данные, сжатые таким способом, невозможно "
"распаковать с помощью :const:`FORMAT_AUTO` (см. :class:`LZMADecompressor`)."

#: ../../library/lzma.rst:157
msgid ""
"The *check* argument specifies the type of integrity check to include in the "
"compressed data. This check is used when decompressing, to ensure that the "
"data has not been corrupted. Possible values are:"
msgstr ""
"Аргумент *check* указывает тип проверки целостности, включаемой в сжатые "
"данные. Эта проверка используется при распаковке, чтобы убедиться, что "
"данные не повреждены. Возможные значения:"

#: ../../library/lzma.rst:161
msgid ""
":const:`CHECK_NONE`: No integrity check. This is the default (and the only "
"acceptable value) for :const:`FORMAT_ALONE` and :const:`FORMAT_RAW`."
msgstr ""
":const:`CHECK_NONE`: Нет проверки целостности. Это значение по умолчанию (и "
"единственное приемлемое значение) для :const:`FORMAT_ALONE` и :const:"
"`FORMAT_RAW`."

#: ../../library/lzma.rst:165
msgid ":const:`CHECK_CRC32`: 32-bit Cyclic Redundancy Check."
msgstr ":const:`CHECK_CRC32`: 32-битная проверка циклическим избыточным кодом."

#: ../../library/lzma.rst:167
msgid ""
":const:`CHECK_CRC64`: 64-bit Cyclic Redundancy Check. This is the default "
"for :const:`FORMAT_XZ`."
msgstr ""
":const:`CHECK_CRC64`: 64-битная проверка циклическим избыточным кодом. Это "
"значение по умолчанию для :const:`FORMAT_XZ`."

#: ../../library/lzma.rst:170
msgid ":const:`CHECK_SHA256`: 256-bit Secure Hash Algorithm."
msgstr ":const:`CHECK_SHA256`: 256-битный алгоритм безопасного хеширования."

#: ../../library/lzma.rst:172
msgid ""
"If the specified check is not supported, an :class:`LZMAError` is raised."
msgstr ""
"Если указанная проверка не поддерживается, возникает ошибка :class:"
"`LZMAError`."

#: ../../library/lzma.rst:174
msgid ""
"The compression settings can be specified either as a preset compression "
"level (with the *preset* argument), or in detail as a custom filter chain "
"(with the *filters* argument)."
msgstr ""
"Настройки сжатия можно указать либо в виде предустановленного уровня сжатия "
"(с аргументом *preset*), либо в виде подробной цепочки настраиваемых "
"фильтров (с аргументом *filters*)."

#: ../../library/lzma.rst:178
msgid ""
"The *preset* argument (if provided) should be an integer between ``0`` and "
"``9`` (inclusive), optionally OR-ed with the constant :const:"
"`PRESET_EXTREME`. If neither *preset* nor *filters* are given, the default "
"behavior is to use :const:`PRESET_DEFAULT` (preset level ``6``). Higher "
"presets produce smaller output, but make the compression process slower."
msgstr ""
"Аргумент *preset* (если он предусмотрен) должен быть целым числом от ``0`` "
"до ``9`` (включительно), опционально с операцией ИЛИ с константой :const:"
"`PRESET_EXTREME`. Если не указаны ни *preset*, ни *filters*, по умолчанию "
"используется :const:`PRESET_DEFAULT` (предустановленный уровень ``6``). "
"Более высокие настройки дают меньший результат, но замедляют процесс сжатия."

#: ../../library/lzma.rst:187
msgid ""
"In addition to being more CPU-intensive, compression with higher presets "
"also requires much more memory (and produces output that needs more memory "
"to decompress). With preset ``9`` for example, the overhead for an :class:"
"`LZMACompressor` object can be as high as 800 MiB. For this reason, it is "
"generally best to stick with the default preset."
msgstr ""
"Помимо более интенсивного использования ЦП, сжатие с более высокими "
"предустановками также требует гораздо больше памяти (и создает выходные "
"данные, для распаковки которых требуется больше памяти). Например, при "
"использовании предустановки ``9`` накладные расходы для объекта :class:"
"`LZMACompressor` могут достигать 800 МБ. По этой причине, как правило, лучше "
"придерживаться настроек по умолчанию."

#: ../../library/lzma.rst:193
msgid ""
"The *filters* argument (if provided) should be a filter chain specifier. "
"See :ref:`filter-chain-specs` for details."
msgstr ""
"Аргумент *filters* (если он указан) должен быть спецификатором цепочки "
"фильтров. Подробности смотрите в :ref:`filter-chain-specs`."

#: ../../library/lzma.rst:198
msgid ""
"Compress *data* (a :class:`bytes` object), returning a :class:`bytes` object "
"containing compressed data for at least part of the input. Some of *data* "
"may be buffered internally, for use in later calls to :meth:`compress` and :"
"meth:`flush`. The returned data should be concatenated with the output of "
"any previous calls to :meth:`compress`."
msgstr ""
"Сжать *data* (объект :class:`bytes`), вернув объект :class:`bytes`, "
"содержащий сжатые данные, по крайней мере, для части входных данных. "
"Некоторые *данные* могут быть буферизованы внутри для использования в "
"последующих вызовах :meth:`compress` и :meth:`flush`. Возвращенные данные "
"должны быть объединены с выводом любых предыдущих вызовов :meth:`compress`."

#: ../../library/lzma.rst:206
msgid ""
"Finish the compression process, returning a :class:`bytes` object containing "
"any data stored in the compressor's internal buffers."
msgstr ""
"Завершите процесс сжатия, вернув объект :class:`bytes`, содержащий любые "
"данные, хранящиеся во внутренних буферах компрессора."

#: ../../library/lzma.rst:209
msgid "The compressor cannot be used after this method has been called."
msgstr "Компрессор нельзя использовать после вызова этого метода."

#: ../../library/lzma.rst:214
msgid ""
"Create a decompressor object, which can be used to decompress data "
"incrementally."
msgstr ""
"Создайте объект распаковщика, который можно использовать для постепенной "
"распаковки данных."

#: ../../library/lzma.rst:217
msgid ""
"For a more convenient way of decompressing an entire compressed stream at "
"once, see :func:`decompress`."
msgstr ""
"Более удобный способ одновременной распаковки всего сжатого потока см. в "
"разделе :func:`decompress`."

#: ../../library/lzma.rst:220
msgid ""
"The *format* argument specifies the container format that should be used. "
"The default is :const:`FORMAT_AUTO`, which can decompress both ``.xz`` and "
"``.lzma`` files. Other possible values are :const:`FORMAT_XZ`, :const:"
"`FORMAT_ALONE`, and :const:`FORMAT_RAW`."
msgstr ""
"Аргумент *format* указывает формат контейнера, который следует использовать. "
"По умолчанию используется :const:`FORMAT_AUTO`, который может распаковывать "
"файлы ``.xz`` и ``.lzma``. Другие возможные значения: :const:`FORMAT_XZ`, :"
"const:`FORMAT_ALONE` и :const:`FORMAT_RAW`."

#: ../../library/lzma.rst:225
msgid ""
"The *memlimit* argument specifies a limit (in bytes) on the amount of memory "
"that the decompressor can use. When this argument is used, decompression "
"will fail with an :class:`LZMAError` if it is not possible to decompress the "
"input within the given memory limit."
msgstr ""
"Аргумент *memlimit* определяет ограничение (в байтах) объема памяти, которую "
"может использовать декомпрессор. Когда используется этот аргумент, "
"распаковка завершится с ошибкой :class:`LZMAError`, если невозможно "
"распаковать входные данные в пределах заданного предела памяти."

#: ../../library/lzma.rst:230
msgid ""
"The *filters* argument specifies the filter chain that was used to create "
"the stream being decompressed. This argument is required if *format* is :"
"const:`FORMAT_RAW`, but should not be used for other formats. See :ref:"
"`filter-chain-specs` for more information about filter chains."
msgstr ""
"Аргумент *filters* указывает цепочку фильтров, которая использовалась для "
"создания распаковываемого потока. Этот аргумент необходим, если *format* "
"имеет значение :const:`FORMAT_RAW`, но не должен использоваться для других "
"форматов. См. :ref:`filter-chain-specs` для получения дополнительной "
"информации о цепочках фильтров."

#: ../../library/lzma.rst:236
msgid ""
"This class does not transparently handle inputs containing multiple "
"compressed streams, unlike :func:`decompress` and :class:`LZMAFile`. To "
"decompress a multi-stream input with :class:`LZMADecompressor`, you must "
"create a new decompressor for each stream."
msgstr ""
"Этот класс не обрабатывает прозрачным образом входные данные, содержащие "
"несколько сжатых потоков, в отличие от :func:`decompress` и :class:"
"`LZMAFile`. Чтобы распаковать многопоточный ввод с помощью :class:"
"`LZMADecompressor`, вы должны создать новый декомпрессор для каждого потока."

#: ../../library/lzma.rst:243
msgid ""
"Decompress *data* (a :term:`bytes-like object`), returning uncompressed data "
"as bytes. Some of *data* may be buffered internally, for use in later calls "
"to :meth:`decompress`. The returned data should be concatenated with the "
"output of any previous calls to :meth:`decompress`."
msgstr ""
"Распакуйте *data* (объект, похожий на :term:`bytes`), вернув несжатые данные "
"в виде байтов. Некоторые *данные* могут быть помещены в буфер для "
"использования в последующих вызовах :meth:`decompress`. Возвращенные данные "
"должны быть объединены с выводом любых предыдущих вызовов :meth:`decompress`."

#: ../../library/lzma.rst:249
msgid ""
"If *max_length* is nonnegative, returns at most *max_length* bytes of "
"decompressed data. If this limit is reached and further output can be "
"produced, the :attr:`~.needs_input` attribute will be set to ``False``. In "
"this case, the next call to :meth:`~.decompress` may provide *data* as "
"``b''`` to obtain more of the output."
msgstr ""
"Если *max_length* неотрицательно, возвращает не более *max_length* байт "
"распакованных данных. Если этот предел достигнут и возможен дальнейший "
"вывод, атрибуту :attr:`~.needs_input` будет присвоено значение ``False``. В "
"этом случае следующий вызов :meth:`~.decompress` может предоставить *data* "
"как ``b''``, чтобы получить больше выходных данных."

#: ../../library/lzma.rst:256
msgid ""
"If all of the input data was decompressed and returned (either because this "
"was less than *max_length* bytes, or because *max_length* was negative), "
"the :attr:`~.needs_input` attribute will be set to ``True``."
msgstr ""
"Если все входные данные были распакованы и возвращены (либо потому, что оно "
"было меньше *max_length* байт, либо потому, что *max_length* было "
"отрицательным), атрибуту :attr:`~.needs_input` будет присвоено значение "
"``True`` ."

#: ../../library/lzma.rst:261
msgid ""
"Attempting to decompress data after the end of stream is reached raises an :"
"exc:`EOFError`.  Any data found after the end of the stream is ignored and "
"saved in the :attr:`~.unused_data` attribute."
msgstr ""
"Попытка распаковать данные после достижения конца потока вызывает ошибку :"
"exc:`EOFError`. Любые данные, найденные после окончания потока, игнорируются "
"и сохраняются в атрибуте :attr:`~.unused_data`."

#: ../../library/lzma.rst:265
msgid "Added the *max_length* parameter."
msgstr "Добавлен параметр *max_length*."

#: ../../library/lzma.rst:270
msgid ""
"The ID of the integrity check used by the input stream. This may be :const:"
"`CHECK_UNKNOWN` until enough of the input has been decoded to determine what "
"integrity check it uses."
msgstr ""
"Идентификатор проверки целостности, используемый входным потоком. Это может "
"быть :const:`CHECK_UNKNOWN` до тех пор, пока не будет декодировано "
"достаточное количество входных данных, чтобы определить, какую проверку "
"целостности он использует."

#: ../../library/lzma.rst:276
msgid "``True`` if the end-of-stream marker has been reached."
msgstr "``True``, если достигнут маркер конца потока."

#: ../../library/lzma.rst:280
msgid "Data found after the end of the compressed stream."
msgstr "Данные найдены после окончания сжатого потока."

#: ../../library/lzma.rst:282
msgid "Before the end of the stream is reached, this will be ``b\"\"``."
msgstr "До достижения конца потока это будет ``b\"\"``."

#: ../../library/lzma.rst:286
msgid ""
"``False`` if the :meth:`.decompress` method can provide more decompressed "
"data before requiring new uncompressed input."
msgstr ""
"``False``, если метод :meth:`.decompress` может предоставить больше "
"распакованных данных, прежде чем потребуется новый несжатый ввод."

#: ../../library/lzma.rst:293
msgid ""
"Compress *data* (a :class:`bytes` object), returning the compressed data as "
"a :class:`bytes` object."
msgstr ""
"Сжать *data* (объект :class:`bytes`), вернув сжатые данные как объект :class:"
"`bytes`."

#: ../../library/lzma.rst:296
msgid ""
"See :class:`LZMACompressor` above for a description of the *format*, "
"*check*, *preset* and *filters* arguments."
msgstr ""
"См. выше :class:`LZMACompressor` для описания аргументов *format*, *check*, "
"*preset* и *filters*."

#: ../../library/lzma.rst:302
msgid ""
"Decompress *data* (a :class:`bytes` object), returning the uncompressed data "
"as a :class:`bytes` object."
msgstr ""
"Распакуйте *data* (объект :class:`bytes`), вернув несжатые данные как "
"объект :class:`bytes`."

#: ../../library/lzma.rst:305
msgid ""
"If *data* is the concatenation of multiple distinct compressed streams, "
"decompress all of these streams, and return the concatenation of the results."
msgstr ""
"Если *данные* представляют собой объединение нескольких различных сжатых "
"потоков, распакуйте все эти потоки и верните объединение результатов."

#: ../../library/lzma.rst:308
msgid ""
"See :class:`LZMADecompressor` above for a description of the *format*, "
"*memlimit* and *filters* arguments."
msgstr ""
"См. выше :class:`LZMADecompressor` для описания аргументов *format*, "
"*memlimit* и *filters*."

#: ../../library/lzma.rst:313
msgid "Miscellaneous"
msgstr "Разное"

#: ../../library/lzma.rst:317
msgid ""
"Return ``True`` if the given integrity check is supported on this system."
msgstr ""
"Верните True, если данная проверка целостности поддерживается в этой системе."

#: ../../library/lzma.rst:319
msgid ""
":const:`CHECK_NONE` and :const:`CHECK_CRC32` are always supported. :const:"
"`CHECK_CRC64` and :const:`CHECK_SHA256` may be unavailable if you are using "
"a version of :program:`liblzma` that was compiled with a limited feature set."
msgstr ""
":const:`CHECK_NONE` и :const:`CHECK_CRC32` всегда поддерживаются. :const:"
"`CHECK_CRC64` и :const:`CHECK_SHA256` могут быть недоступны, если вы "
"используете версию :program:`liblzma`, скомпилированную с ограниченным "
"набором функций."

#: ../../library/lzma.rst:328
msgid "Specifying custom filter chains"
msgstr "Указание пользовательских цепочек фильтров"

#: ../../library/lzma.rst:330
msgid ""
"A filter chain specifier is a sequence of dictionaries, where each "
"dictionary contains the ID and options for a single filter. Each dictionary "
"must contain the key ``\"id\"``, and may contain additional keys to specify "
"filter-dependent options. Valid filter IDs are as follows:"
msgstr ""
"Спецификатор цепочки фильтров — это последовательность словарей, каждый из "
"которых содержит идентификатор и параметры для одного фильтра. Каждый "
"словарь должен содержать ключ «id» и может содержать дополнительные ключи "
"для указания опций, зависящих от фильтра. Допустимые идентификаторы фильтров:"

#: ../../library/lzma.rst:335
msgid "Compression filters:"
msgstr "Компрессионные фильтры:"

#: ../../library/lzma.rst:337
msgid ":const:`FILTER_LZMA1` (for use with :const:`FORMAT_ALONE`)"
msgstr ":const:`FILTER_LZMA1` (для использования с :const:`FORMAT_ALONE`)"

#: ../../library/lzma.rst:338
msgid ""
":const:`FILTER_LZMA2` (for use with :const:`FORMAT_XZ` and :const:"
"`FORMAT_RAW`)"
msgstr ""
":const:`FILTER_LZMA2` (для использования с :const:`FORMAT_XZ` и :const:"
"`FORMAT_RAW`)"

#: ../../library/lzma.rst:340
msgid "Delta filter:"
msgstr "Дельта-фильтр:"

#: ../../library/lzma.rst:342
msgid ":const:`FILTER_DELTA`"
msgstr ":const:`FILTER_DELTA`"

#: ../../library/lzma.rst:344
msgid "Branch-Call-Jump (BCJ) filters:"
msgstr "Фильтры Branch-Call-Jump (BCJ):"

#: ../../library/lzma.rst:346
msgid ":const:`FILTER_X86`"
msgstr ":const:`FILTER_X86`"

#: ../../library/lzma.rst:347
msgid ":const:`FILTER_IA64`"
msgstr ":const:`FILTER_IA64`"

#: ../../library/lzma.rst:348
msgid ":const:`FILTER_ARM`"
msgstr ":const:`FILTER_ARM`"

#: ../../library/lzma.rst:349
msgid ":const:`FILTER_ARMTHUMB`"
msgstr ":const:`FILTER_ARMTHUMB`"

#: ../../library/lzma.rst:350
msgid ":const:`FILTER_POWERPC`"
msgstr ":const:`FILTER_POWERPC`"

#: ../../library/lzma.rst:351
msgid ":const:`FILTER_SPARC`"
msgstr ":const:`FILTER_SPARC`"

#: ../../library/lzma.rst:353
msgid ""
"A filter chain can consist of up to 4 filters, and cannot be empty. The last "
"filter in the chain must be a compression filter, and any other filters must "
"be delta or BCJ filters."
msgstr ""
"Цепочка фильтров может состоять из четырех фильтров и не может быть пустой. "
"Последний фильтр в цепочке должен быть фильтром сжатия, а все остальные "
"фильтры должны быть дельта- или BCJ-фильтрами."

#: ../../library/lzma.rst:357
msgid ""
"Compression filters support the following options (specified as additional "
"entries in the dictionary representing the filter):"
msgstr ""
"Фильтры сжатия поддерживают следующие параметры (указанные как "
"дополнительные записи в словаре, представляющем фильтр):"

#: ../../library/lzma.rst:360
msgid ""
"``preset``: A compression preset to use as a source of default values for "
"options that are not specified explicitly."
msgstr ""
"``preset``: предустановка сжатия, используемая в качестве источника значений "
"по умолчанию для параметров, которые не указаны явно."

#: ../../library/lzma.rst:362
msgid ""
"``dict_size``: Dictionary size in bytes. This should be between 4 KiB and "
"1.5 GiB (inclusive)."
msgstr ""
"``dict_size``: Размер словаря в байтах. Он должен составлять от 4 КиБ до 1,5 "
"ГиБ (включительно)."

#: ../../library/lzma.rst:364
msgid "``lc``: Number of literal context bits."
msgstr "``lc``: количество битов буквального контекста."

#: ../../library/lzma.rst:365
msgid ""
"``lp``: Number of literal position bits. The sum ``lc + lp`` must be at most "
"4."
msgstr ""
"``lp``: количество битов буквальной позиции. Сумма ``lc + lp`` должна быть "
"не более 4."

#: ../../library/lzma.rst:367
msgid "``pb``: Number of position bits; must be at most 4."
msgstr "``pb``: количество бит позиции; должно быть не более 4."

#: ../../library/lzma.rst:368
msgid "``mode``: :const:`MODE_FAST` or :const:`MODE_NORMAL`."
msgstr "``mode``: :const:`MODE_FAST` или :const:`MODE_NORMAL`."

#: ../../library/lzma.rst:369
msgid ""
"``nice_len``: What should be considered a \"nice length\" for a match. This "
"should be 273 or less."
msgstr ""
"``nice_len``: Что следует считать «хорошей длиной» для совпадения. Это "
"должно быть 273 или меньше."

#: ../../library/lzma.rst:371
msgid ""
"``mf``: What match finder to use -- :const:`MF_HC3`, :const:`MF_HC4`, :const:"
"`MF_BT2`, :const:`MF_BT3`, or :const:`MF_BT4`."
msgstr ""
"``mf``: какой поисковик совпадений использовать -- :const:`MF_HC3`, :const:"
"`MF_HC4`, :const:`MF_BT2`, :const:`MF_BT3` или :const:`MF_BT4`."

#: ../../library/lzma.rst:373
msgid ""
"``depth``: Maximum search depth used by match finder. 0 (default) means to "
"select automatically based on other filter options."
msgstr ""
"``глубина``: максимальная глубина поиска, используемая средством поиска "
"совпадений. 0 (по умолчанию) означает автоматический выбор на основе других "
"параметров фильтра."

#: ../../library/lzma.rst:376
msgid ""
"The delta filter stores the differences between bytes, producing more "
"repetitive input for the compressor in certain circumstances. It supports "
"one option, ``dist``. This indicates the distance between bytes to be "
"subtracted. The default is 1, i.e. take the differences between adjacent "
"bytes."
msgstr ""
"Дельта-фильтр сохраняет различия между байтами, создавая при определенных "
"обстоятельствах более повторяющиеся входные данные для компрессора. Он "
"поддерживает одну опцию, ``dist``. Это указывает расстояние между байтами, "
"которые необходимо вычесть. По умолчанию — 1, т.е. учитывается разница между "
"соседними байтами."

#: ../../library/lzma.rst:381
msgid ""
"The BCJ filters are intended to be applied to machine code. They convert "
"relative branches, calls and jumps in the code to use absolute addressing, "
"with the aim of increasing the redundancy that can be exploited by the "
"compressor. These filters support one option, ``start_offset``. This "
"specifies the address that should be mapped to the beginning of the input "
"data. The default is 0."
msgstr ""
"Фильтры BCJ предназначены для применения к машинному коду. Они преобразуют "
"относительные переходы, вызовы и переходы в коде для использования "
"абсолютной адресации с целью увеличения избыточности, которую может "
"использовать компрессор. Эти фильтры поддерживают одну опцию — start_offset. "
"Это указывает адрес, который должен быть сопоставлен с началом входных "
"данных. Значение по умолчанию — 0."

#: ../../library/lzma.rst:389
msgid "Examples"
msgstr "Примеры"

#: ../../library/lzma.rst:391
msgid "Reading in a compressed file::"
msgstr "Чтение в сжатом файле::"

#: ../../library/lzma.rst:397
msgid "Creating a compressed file::"
msgstr "Создание сжатого файла::"

#: ../../library/lzma.rst:404
msgid "Compressing data in memory::"
msgstr "Сжатие данных в памяти::"

#: ../../library/lzma.rst:410
msgid "Incremental compression::"
msgstr "Инкрементное сжатие::"

#: ../../library/lzma.rst:421
msgid "Writing compressed data to an already-open file::"
msgstr "Запись сжатых данных в уже открытый файл::"

#: ../../library/lzma.rst:430
msgid "Creating a compressed file using a custom filter chain::"
msgstr ""
"Создание сжатого файла с использованием пользовательской цепочки фильтров:"
