# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# Rafael Fontenelle <rffontenelle@gmail.com>, 2024
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.10\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-01-10 16:06+0000\n"
"PO-Revision-Date: 2022-11-05 17:21+0000\n"
"Last-Translator: Rafael Fontenelle <rffontenelle@gmail.com>, 2024\n"
"Language-Team: Russian (https://app.transifex.com/python-doc/teams/5390/"
"ru/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ru\n"
"Plural-Forms: nplurals=4; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && "
"n%10<=4 && (n%100<12 || n%100>14) ? 1 : n%10==0 || (n%10>=5 && n%10<=9) || "
"(n%100>=11 && n%100<=14)? 2 : 3);\n"

#: ../../library/datetime.rst:2
msgid ":mod:`datetime` --- Basic date and time types"
msgstr ""

#: ../../library/datetime.rst:11
msgid "**Source code:** :source:`Lib/datetime.py`"
msgstr "**Исходный код:** :source:`Lib/datetime.py`"

#: ../../library/datetime.rst:17
msgid ""
"The :mod:`datetime` module supplies classes for manipulating dates and times."
msgstr ""

#: ../../library/datetime.rst:19
msgid ""
"While date and time arithmetic is supported, the focus of the implementation "
"is on efficient attribute extraction for output formatting and manipulation."
msgstr ""
"Хотя арифметика даты и времени поддерживается, основное внимание в "
"реализации уделяется эффективному извлечению атрибутов для форматирования и "
"манипулирования выходными данными."

#: ../../library/datetime.rst:25
msgid "Module :mod:`calendar`"
msgstr "Модуль :mod:`calendar`"

#: ../../library/datetime.rst:25
msgid "General calendar related functions."
msgstr "Общие функции, связанные с календарем."

#: ../../library/datetime.rst:28
msgid "Module :mod:`time`"
msgstr "Модуль :mod:`time`"

#: ../../library/datetime.rst:28
msgid "Time access and conversions."
msgstr "Доступ ко времени и преобразования."

#: ../../library/datetime.rst:31
msgid "Module :mod:`zoneinfo`"
msgstr "Модуль :mod:`zoneinfo`"

#: ../../library/datetime.rst:31
msgid "Concrete time zones representing the IANA time zone database."
msgstr ""
"Конкретные часовые пояса, представляющие базу данных часовых поясов IANA."

#: ../../library/datetime.rst:33
msgid "Package `dateutil <https://dateutil.readthedocs.io/en/stable/>`_"
msgstr "Пакет `dateutil <https://dateutil.readthedocs.io/en/stable/>`_"

#: ../../library/datetime.rst:34
msgid "Third-party library with expanded time zone and parsing support."
msgstr ""
"Сторонняя библиотека с расширенным часовым поясом и поддержкой парсинга."

#: ../../library/datetime.rst:39
msgid "Aware and Naive Objects"
msgstr "Осознанные и наивные объекты"

#: ../../library/datetime.rst:41
msgid ""
"Date and time objects may be categorized as \"aware\" or \"naive\" depending "
"on whether or not they include timezone information."
msgstr ""

#: ../../library/datetime.rst:44
msgid ""
"With sufficient knowledge of applicable algorithmic and political time "
"adjustments, such as time zone and daylight saving time information, an "
"**aware** object can locate itself relative to other aware objects. An aware "
"object represents a specific moment in time that is not open to "
"interpretation. [#]_"
msgstr ""
"При наличии достаточных знаний о применимых алгоритмических и политических "
"корректировках времени, таких как информация о часовом поясе и летнем "
"времени, **осведомленный** объект может определять свое местоположение "
"относительно других осведомленных объектов. Осознанный объект представляет "
"собой конкретный момент времени, который не подлежит интерпретации. [#]_"

#: ../../library/datetime.rst:50
msgid ""
"A **naive** object does not contain enough information to unambiguously "
"locate itself relative to other date/time objects. Whether a naive object "
"represents Coordinated Universal Time (UTC), local time, or time in some "
"other timezone is purely up to the program, just like it is up to the "
"program whether a particular number represents metres, miles, or mass. Naive "
"objects are easy to understand and to work with, at the cost of ignoring "
"some aspects of reality."
msgstr ""

#: ../../library/datetime.rst:57
msgid ""
"For applications requiring aware objects, :class:`.datetime` and :class:`."
"time` objects have an optional time zone information attribute, :attr:`!"
"tzinfo`, that can be set to an instance of a subclass of the abstract :class:"
"`tzinfo` class. These :class:`tzinfo` objects capture information about the "
"offset from UTC time, the time zone name, and whether daylight saving time "
"is in effect."
msgstr ""
"Для приложений, требующих наличия объектов, объекты :class:`.datetime` и :"
"class:`.time` имеют дополнительный атрибут информации о часовом поясе, :attr:"
"`!tzinfo`, который может быть установлен для экземпляра подкласса "
"абстрактный :class:`tzinfo` класс. Эти объекты :class:`tzinfo` собирают "
"информацию об отклонении от времени UTC, имени часового пояса и о том, "
"действует ли летнее время."

#: ../../library/datetime.rst:63
msgid ""
"Only one concrete :class:`tzinfo` class, the :class:`timezone` class, is "
"supplied by the :mod:`datetime` module. The :class:`timezone` class can "
"represent simple timezones with fixed offsets from UTC, such as UTC itself "
"or North American EST and EDT timezones. Supporting timezones at deeper "
"levels of detail is up to the application. The rules for time adjustment "
"across the world are more political than rational, change frequently, and "
"there is no standard suitable for every application aside from UTC."
msgstr ""

#: ../../library/datetime.rst:72
msgid "Constants"
msgstr "Константы"

#: ../../library/datetime.rst:74
msgid "The :mod:`datetime` module exports the following constants:"
msgstr ""

#: ../../library/datetime.rst:78
msgid ""
"The smallest year number allowed in a :class:`date` or :class:`.datetime` "
"object. :const:`MINYEAR` is ``1``."
msgstr ""

#: ../../library/datetime.rst:84
msgid ""
"The largest year number allowed in a :class:`date` or :class:`.datetime` "
"object. :const:`MAXYEAR` is ``9999``."
msgstr ""

#: ../../library/datetime.rst:88
msgid "Available Types"
msgstr "Доступные типы"

#: ../../library/datetime.rst:93
msgid ""
"An idealized naive date, assuming the current Gregorian calendar always was, "
"and always will be, in effect. Attributes: :attr:`year`, :attr:`month`, and :"
"attr:`day`."
msgstr ""
"Идеализированная наивная дата, предполагающая, что текущий григорианский "
"календарь всегда действовал и всегда будет действовать. Атрибуты: :attr:"
"`year`, :attr:`month` и :attr:`day`."

#: ../../library/datetime.rst:101
msgid ""
"An idealized time, independent of any particular day, assuming that every "
"day has exactly 24\\*60\\*60 seconds.  (There is no notion of \"leap "
"seconds\" here.) Attributes: :attr:`hour`, :attr:`minute`, :attr:`second`, :"
"attr:`microsecond`, and :attr:`.tzinfo`."
msgstr ""
"Идеализированное время, независимое от какого-либо конкретного дня, при "
"условии, что в каждом дне ровно 24\\*60\\*60 секунд. (Здесь нет понятия "
"«високосные секунды».) Атрибуты: :attr:`hour`, :attr:`минута`, :attr:"
"`секунда`, :attr:`микросекунда` и :attr:`.tzinfo `."

#: ../../library/datetime.rst:110
msgid ""
"A combination of a date and a time. Attributes: :attr:`year`, :attr:"
"`month`, :attr:`day`, :attr:`hour`, :attr:`minute`, :attr:`second`, :attr:"
"`microsecond`, and :attr:`.tzinfo`."
msgstr ""
"Сочетание даты и времени. Атрибуты: :attr:`год`, :attr:`месяц`, :attr:"
"`день`, :attr:`час`, :attr:`минута`, :attr:`секунда`, :attr:`микросекунда` "
"и :attr:`.tzinfo`."

#: ../../library/datetime.rst:118
msgid ""
"A duration expressing the difference between two :class:`date`, :class:`."
"time`, or :class:`.datetime` instances to microsecond resolution."
msgstr ""

#: ../../library/datetime.rst:125
msgid ""
"An abstract base class for time zone information objects. These are used by "
"the :class:`.datetime` and :class:`.time` classes to provide a customizable "
"notion of time adjustment (for example, to account for time zone and/or "
"daylight saving time)."
msgstr ""
"Абстрактный базовый класс для объектов информации о часовом поясе. Они "
"используются классами :class:`.datetime` и :class:`.time` для предоставления "
"настраиваемого понятия корректировки времени (например, для учета часового "
"пояса и/или летнего времени)."

#: ../../library/datetime.rst:133
msgid ""
"A class that implements the :class:`tzinfo` abstract base class as a fixed "
"offset from the UTC."
msgstr ""
"Класс, реализующий абстрактный базовый класс :class:`tzinfo` как "
"фиксированное смещение от UTC."

#: ../../library/datetime.rst:138 ../../library/datetime.rst:156
msgid "Objects of these types are immutable."
msgstr "Объекты этих типов неизменяемы."

#: ../../library/datetime.rst:140
msgid "Subclass relationships::"
msgstr "Отношения между подклассами::"

#: ../../library/datetime.rst:151
msgid "Common Properties"
msgstr "Общие свойства"

#: ../../library/datetime.rst:153
msgid ""
"The :class:`date`, :class:`.datetime`, :class:`.time`, and :class:`timezone` "
"types share these common features:"
msgstr ""
"Типы :class:`date`, :class:`.datetime`, :class:`.time` и :class:`timezone` "
"имеют следующие общие особенности:"

#: ../../library/datetime.rst:157
msgid ""
"Objects of these types are :term:`hashable`, meaning that they can be used "
"as dictionary keys."
msgstr ""
"Объекты этих типов являются :term:`hashable`, что означает, что их можно "
"использовать в качестве ключей словаря."

#: ../../library/datetime.rst:159
msgid ""
"Objects of these types support efficient pickling via the :mod:`pickle` "
"module."
msgstr ""
"Объекты этих типов поддерживают эффективное травление с помощью модуля :mod:"
"`pickle`."

#: ../../library/datetime.rst:162
msgid "Determining if an Object is Aware or Naive"
msgstr "Определение того, является ли объект осознанным или наивным"

#: ../../library/datetime.rst:164
msgid "Objects of the :class:`date` type are always naive."
msgstr "Объекты типа :class:`date` всегда наивны."

#: ../../library/datetime.rst:166
msgid ""
"An object of type :class:`.time` or :class:`.datetime` may be aware or naive."
msgstr ""
"Объект типа :class:`.time` или :class:`.datetime` может быть осознанным или "
"неактивным."

#: ../../library/datetime.rst:168
msgid "A :class:`.datetime` object *d* is aware if both of the following hold:"
msgstr ""
"Объект :class:`.datetime` *d* распознает, если выполняются оба следующих "
"условия:"

#: ../../library/datetime.rst:170
msgid "``d.tzinfo`` is not ``None``"
msgstr "``d.tzinfo`` is not ``None``"

#: ../../library/datetime.rst:171
msgid "``d.tzinfo.utcoffset(d)`` does not return ``None``"
msgstr "``d.tzinfo.utcoffset(d)`` не возвращает ``None``"

#: ../../library/datetime.rst:173
msgid "Otherwise, *d* is naive."
msgstr "``d.tzinfo.utcoffset(d)`` не возвращает ``None``"

#: ../../library/datetime.rst:175
msgid "A :class:`.time` object *t* is aware if both of the following hold:"
msgstr ""
"Объект :class:`.time` *t* распознает, если выполняются оба следующих условия:"

#: ../../library/datetime.rst:177
msgid "``t.tzinfo`` is not ``None``"
msgstr "``t.tzinfo`` не ``None``"

#: ../../library/datetime.rst:178
msgid "``t.tzinfo.utcoffset(None)`` does not return ``None``."
msgstr "``t.tzinfo.utcoffset(None)`` не возвращает ``None`` ."

#: ../../library/datetime.rst:180
msgid "Otherwise, *t* is naive."
msgstr "В противном случае *t* наивно."

#: ../../library/datetime.rst:182
msgid ""
"The distinction between aware and naive doesn't apply to :class:`timedelta` "
"objects."
msgstr ""
"Различие между осведомленным и наивным не применимо к объектам :class:"
"`timedelta`."

#: ../../library/datetime.rst:188
msgid ":class:`timedelta` Objects"
msgstr "Объекты :class:`timedelta`"

#: ../../library/datetime.rst:190
msgid ""
"A :class:`timedelta` object represents a duration, the difference between "
"two dates or times."
msgstr ""

#: ../../library/datetime.rst:195
msgid ""
"All arguments are optional and default to ``0``. Arguments may be integers "
"or floats, and may be positive or negative."
msgstr ""

#: ../../library/datetime.rst:198
msgid ""
"Only *days*, *seconds* and *microseconds* are stored internally. Arguments "
"are converted to those units:"
msgstr ""
"Внутри хранятся только *дни*, *секунды* и *микросекунды*. Аргументы "
"преобразуются в следующие единицы:"

#: ../../library/datetime.rst:201
msgid "A millisecond is converted to 1000 microseconds."
msgstr "Миллисекунда преобразуется в 1000 микросекунд."

#: ../../library/datetime.rst:202
msgid "A minute is converted to 60 seconds."
msgstr "Минута конвертируется в 60 секунд."

#: ../../library/datetime.rst:203
msgid "An hour is converted to 3600 seconds."
msgstr "Час преобразуется в 3600 секунд."

#: ../../library/datetime.rst:204
msgid "A week is converted to 7 days."
msgstr "Неделя преобразуется в 7 дней."

#: ../../library/datetime.rst:206
msgid ""
"and days, seconds and microseconds are then normalized so that the "
"representation is unique, with"
msgstr ""
"а затем дни, секунды и микросекунды нормализуются так, чтобы представление "
"было уникальным, с"

#: ../../library/datetime.rst:209
msgid "``0 <= microseconds < 1000000``"
msgstr "``0 <= microseconds < 1000000``"

#: ../../library/datetime.rst:210
msgid "``0 <= seconds < 3600*24`` (the number of seconds in one day)"
msgstr "``0 <= секунд < 3600*24`` (количество секунд в одном дне)"

#: ../../library/datetime.rst:211
msgid "``-999999999 <= days <= 999999999``"
msgstr "``-999999999 <= days <= 999999999``"

#: ../../library/datetime.rst:213
msgid ""
"The following example illustrates how any arguments besides *days*, "
"*seconds* and *microseconds* are \"merged\" and normalized into those three "
"resulting attributes::"
msgstr ""
"Следующий пример иллюстрирует, как любые аргументы, кроме *дней*, *секунд* и "
"*микросекунд*, «объединяются» и нормализуются в эти три результирующих "
"атрибута:"

#: ../../library/datetime.rst:231
msgid ""
"If any argument is a float and there are fractional microseconds, the "
"fractional microseconds left over from all arguments are combined and their "
"sum is rounded to the nearest microsecond using round-half-to-even "
"tiebreaker. If no argument is a float, the conversion and normalization "
"processes are exact (no information is lost)."
msgstr ""
"Если какой-либо аргумент является числом с плавающей запятой и есть дробные "
"микросекунды, дробные микросекунды, оставшиеся от всех аргументов, "
"объединяются, и их сумма округляется до ближайшей микросекунды с "
"использованием тай-брейкера от половины до четного. Если ни один аргумент не "
"является числом с плавающей запятой, процессы преобразования и нормализации "
"являются точными (информация не теряется)."

#: ../../library/datetime.rst:238
msgid ""
"If the normalized value of days lies outside the indicated range, :exc:"
"`OverflowError` is raised."
msgstr ""
"Если нормализованное значение дней находится за пределами указанного "
"диапазона, возникает ошибка :exc:`OverflowError`."

#: ../../library/datetime.rst:241
msgid ""
"Note that normalization of negative values may be surprising at first. For "
"example::"
msgstr ""
"Обратите внимание, что нормализация отрицательных значений поначалу может "
"показаться неожиданной. Например::"

#: ../../library/datetime.rst:250 ../../library/datetime.rst:544
#: ../../library/datetime.rst:1051 ../../library/datetime.rst:1669
#: ../../library/datetime.rst:2262
msgid "Class attributes:"
msgstr "Атрибуты класса:"

#: ../../library/datetime.rst:254
msgid "The most negative :class:`timedelta` object, ``timedelta(-999999999)``."
msgstr "Самый негативный объект :class:`timedelta`, ``timedelta(-999999999)``."

#: ../../library/datetime.rst:259
msgid ""
"The most positive :class:`timedelta` object, ``timedelta(days=999999999, "
"hours=23, minutes=59, seconds=59, microseconds=999999)``."
msgstr ""
"Самый позитивный объект :class:`timedelta`, ``timedelta(days=999999999, "
"часы=23, минуты=59, секунды=59, микросекунды=999999)``."

#: ../../library/datetime.rst:265
msgid ""
"The smallest possible difference between non-equal :class:`timedelta` "
"objects, ``timedelta(microseconds=1)``."
msgstr ""
"Наименьшая возможная разница между неравными объектами :class:`timedelta`, "
"``timedelta(microсекунды=1)``."

#: ../../library/datetime.rst:268
msgid ""
"Note that, because of normalization, ``timedelta.max`` > ``-timedelta.min``. "
"``-timedelta.max`` is not representable as a :class:`timedelta` object."
msgstr ""

#: ../../library/datetime.rst:271 ../../library/datetime.rst:562
#: ../../library/datetime.rst:1071 ../../library/datetime.rst:1689
msgid "Instance attributes (read-only):"
msgstr "Атрибуты экземпляра (доступны только для чтения):"

#: ../../library/datetime.rst:274
msgid "Attribute"
msgstr "Атрибут"

#: ../../library/datetime.rst:274
msgid "Value"
msgstr "Значение"

#: ../../library/datetime.rst:276
msgid "``days``"
msgstr "``days``"

#: ../../library/datetime.rst:276
msgid "Between -999999999 and 999999999 inclusive"
msgstr "От -999999999 до 999999999 включительно"

#: ../../library/datetime.rst:278
msgid "``seconds``"
msgstr "``seconds``"

#: ../../library/datetime.rst:278
msgid "Between 0 and 86399 inclusive"
msgstr "От 0 до 86399 включительно"

#: ../../library/datetime.rst:280
msgid "``microseconds``"
msgstr "``microseconds``"

#: ../../library/datetime.rst:280
msgid "Between 0 and 999999 inclusive"
msgstr "От 0 до 999999 включительно"

#: ../../library/datetime.rst:283 ../../library/datetime.rst:579
#: ../../library/datetime.rst:1124
msgid "Supported operations:"
msgstr "Поддерживаемые операции:"

#: ../../library/datetime.rst:288 ../../library/datetime.rst:582
#: ../../library/datetime.rst:1127
msgid "Operation"
msgstr "Операция"

#: ../../library/datetime.rst:288 ../../library/datetime.rst:582
#: ../../library/datetime.rst:1127
msgid "Result"
msgstr "Результат"

#: ../../library/datetime.rst:290
msgid "``t1 = t2 + t3``"
msgstr "``t1 = t2 + t3``"

#: ../../library/datetime.rst:290
msgid ""
"Sum of *t2* and *t3*. Afterwards *t1*-*t2* == *t3* and *t1*-*t3* == *t2* are "
"true. (1)"
msgstr ""
"Сумма *t2* и *t3*. После этого значения *t1*-*t2* == *t3* и *t1*-*t3* == "
"*t2* являются истинными. (1)"

#: ../../library/datetime.rst:293
msgid "``t1 = t2 - t3``"
msgstr "``t1 = t2 - t3``"

#: ../../library/datetime.rst:293
msgid ""
"Difference of *t2* and *t3*. Afterwards *t1* == *t2* - *t3* and *t2* == *t1* "
"+ *t3* are true. (1)(6)"
msgstr ""
"Разница между *t2* и *t3*. После этого *t1* == *t2* - *t3* и *t2* == *t1* + "
"*t3* являются истинными. (1)(6)"

#: ../../library/datetime.rst:297
msgid "``t1 = t2 * i or t1 = i * t2``"
msgstr "``t1 = t2 * i or t1 = i * t2``"

#: ../../library/datetime.rst:297
msgid ""
"Delta multiplied by an integer. Afterwards *t1* // i == *t2* is true, "
"provided ``i != 0``."
msgstr ""
"Дельта умножается на целое число. После этого *t1* // i == *t2* истинно, при "
"условии, что ``i != 0``."

#: ../../library/datetime.rst:301
msgid "In general, *t1* \\* i == *t1* \\* (i-1) + *t1* is true. (1)"
msgstr "В общем случае, *t1* \\* i == *t1* \\* (i-1) + *t1* истинно. (1)"

#: ../../library/datetime.rst:304
msgid "``t1 = t2 * f or t1 = f * t2``"
msgstr "``t1 = t2 * f or t1 = f * t2``"

#: ../../library/datetime.rst:304
msgid ""
"Delta multiplied by a float. The result is rounded to the nearest multiple "
"of timedelta.resolution using round-half-to-even."
msgstr ""
"Дельта умножается на число с плавающей точкой. Результат округляется до "
"ближайшего значения, кратного timedelta.resolution, с использованием метода "
"округления от половины до четного."

#: ../../library/datetime.rst:308
msgid "``f = t2 / t3``"
msgstr "``f = t2 / t3``"

#: ../../library/datetime.rst:308
msgid ""
"Division (3) of overall duration *t2* by interval unit *t3*. Returns a :"
"class:`float` object."
msgstr ""
"Деление (3) общей продолжительности *t2* на единицу интервала *t3*. "
"Возвращает объект :class:`float`."

#: ../../library/datetime.rst:312
msgid "``t1 = t2 / f or t1 = t2 / i``"
msgstr "``t1 = t2 / f or t1 = t2 / i``"

#: ../../library/datetime.rst:312
msgid ""
"Delta divided by a float or an int. The result is rounded to the nearest "
"multiple of timedelta.resolution using round-half-to-even."
msgstr ""
"Дельта делится на число с плавающей точкой или целое число. Результат "
"округляется до ближайшего значения, кратного значению timedelta.resolution, "
"с использованием метода округления от половины до четного."

#: ../../library/datetime.rst:316
msgid "``t1 = t2 // i`` or ``t1 = t2 // t3``"
msgstr "``t1 = t2 // i`` or ``t1 = t2 // t3``"

#: ../../library/datetime.rst:316
msgid ""
"The floor is computed and the remainder (if any) is thrown away. In the "
"second case, an integer is returned. (3)"
msgstr ""
"Вычисляется минимальное значение, а остаток (если таковой имеется) "
"отбрасывается. Во втором случае возвращается целое число. (3)"

#: ../../library/datetime.rst:320
msgid "``t1 = t2 % t3``"
msgstr "``t1 = t2 % t3``"

#: ../../library/datetime.rst:320
msgid "The remainder is computed as a :class:`timedelta` object. (3)"
msgstr "Оставшаяся часть вычисляется как объект :class:`timedelta`. (3)"

#: ../../library/datetime.rst:323
msgid "``q, r = divmod(t1, t2)``"
msgstr "``q, r = divmod(t1, t2)``"

#: ../../library/datetime.rst:323
msgid ""
"Computes the quotient and the remainder: ``q = t1 // t2`` (3) and ``r = t1 % "
"t2``. q is an integer and r is a :class:`timedelta` object."
msgstr ""
"Вычисляет частное и остаток: `q = t1 // t2` (3) и `r = t1 % t2`. q - это "
"целое число, а r - объект :class:`timedelta`."

#: ../../library/datetime.rst:328
msgid "``+t1``"
msgstr "``+t1``"

#: ../../library/datetime.rst:328
msgid "Returns a :class:`timedelta` object with the same value. (2)"
msgstr "Возвращает объект :class:`timedelta` с тем же значением. (2)"

#: ../../library/datetime.rst:331
msgid "``-t1``"
msgstr "``-t1``"

#: ../../library/datetime.rst:331
msgid ""
"equivalent to :class:`timedelta`\\ (-*t1.days*, -*t1.seconds*, -*t1."
"microseconds*), and to *t1*\\* -1. (1)(4)"
msgstr ""
"эквивалентно :class:`timedelta`\\ (-*t1.days*, -*t1.seconds*, -*t1."
"microseconds*) и *t1*\\* -1. (1)(4)"

#: ../../library/datetime.rst:336
msgid "``abs(t)``"
msgstr "``abs(t)``"

#: ../../library/datetime.rst:336
msgid ""
"equivalent to +\\ *t* when ``t.days >= 0``, and to -*t* when ``t.days < 0``. "
"(2)"
msgstr ""
"эквивалентно +\\ *t*, когда ``t.days >= 0``, и -*t*, когда ``t.days < 0``. "
"(2)"

#: ../../library/datetime.rst:339
msgid "``str(t)``"
msgstr "``str(t)``"

#: ../../library/datetime.rst:339
msgid ""
"Returns a string in the form ``[D day[s], ][H]H:MM:SS[.UUUUUU]``, where D is "
"negative for negative ``t``. (5)"
msgstr ""
"Возвращает строку в виде ``[D day[s], ][H]H:MM:SS[.UUUUUU]``, где D - "
"отрицательное значение для отрицательного ``t``. (5)"

#: ../../library/datetime.rst:343
msgid "``repr(t)``"
msgstr "``repr(t)``"

#: ../../library/datetime.rst:343
msgid ""
"Returns a string representation of the :class:`timedelta` object as a "
"constructor call with canonical attribute values."
msgstr ""
"Возвращает строковое представление объекта :class:`timedelta` в виде вызова "
"конструктора с каноническими значениями атрибутов."

#: ../../library/datetime.rst:349 ../../library/datetime.rst:596
#: ../../library/datetime.rst:2475
msgid "Notes:"
msgstr "Примечания:"

#: ../../library/datetime.rst:352
msgid "This is exact but may overflow."
msgstr "Это точно, но может привести к переполнению."

#: ../../library/datetime.rst:355
msgid "This is exact and cannot overflow."
msgstr "Это точно и не может привести к переполнению."

#: ../../library/datetime.rst:358
msgid "Division by 0 raises :exc:`ZeroDivisionError`."
msgstr "При делении на 0 возникает :exc:`ZeroDivisionError`."

#: ../../library/datetime.rst:361
msgid "-*timedelta.max* is not representable as a :class:`timedelta` object."
msgstr ""

#: ../../library/datetime.rst:364
msgid ""
"String representations of :class:`timedelta` objects are normalized "
"similarly to their internal representation. This leads to somewhat unusual "
"results for negative timedeltas. For example::"
msgstr ""
"Строковые представления объектов :class:`timedelta` нормализуются аналогично "
"их внутреннему представлению. Это приводит к несколько необычным результатам "
"для отрицательных временных дельт. Например::"

#: ../../library/datetime.rst:374
msgid ""
"The expression ``t2 - t3`` will always be equal to the expression ``t2 + (-"
"t3)`` except when t3 is equal to ``timedelta.max``; in that case the former "
"will produce a result while the latter will overflow."
msgstr ""
"Выражение ``t2 - t3`` всегда будет равно выражению ``t2 + (-t3)``, за "
"исключением случаев, когда t3 равно ``timedelta.max``; в этом случае первый "
"даст результат, а второй переполнится."

#: ../../library/datetime.rst:378
msgid ""
"In addition to the operations listed above, :class:`timedelta` objects "
"support certain additions and subtractions with :class:`date` and :class:`."
"datetime` objects (see below)."
msgstr ""
"В дополнение к операциям, перечисленным выше, объекты :class:`timedelta` "
"поддерживают определенные сложения и вычитания с объектами :class:`date` и :"
"class:`.datetime` (см. ниже)."

#: ../../library/datetime.rst:382
msgid ""
"Floor division and true division of a :class:`timedelta` object by another :"
"class:`timedelta` object are now supported, as are remainder operations and "
"the :func:`divmod` function. True division and multiplication of a :class:"
"`timedelta` object by a :class:`float` object are now supported."
msgstr ""
"Теперь поддерживаются деление этажа и истинное деление объекта :class:"
"`timedelta` на другой объект :class:`timedelta`, а также операции с "
"остатками и функция :func:`divmod`. Теперь поддерживается истинное деление и "
"умножение объекта :class:`timedelta` на объект :class:`float`."

#: ../../library/datetime.rst:389
msgid ""
"Comparisons of :class:`timedelta` objects are supported, with some caveats."
msgstr ""

#: ../../library/datetime.rst:391
msgid ""
"The comparisons ``==`` or ``!=`` *always* return a :class:`bool`, no matter "
"the type of the compared object::"
msgstr ""

#: ../../library/datetime.rst:402
msgid ""
"For all other comparisons (such as ``<`` and ``>``), when a :class:"
"`timedelta` object is compared to an object of a different type, :exc:"
"`TypeError` is raised::"
msgstr ""

#: ../../library/datetime.rst:413
msgid ""
"In Boolean contexts, a :class:`timedelta` object is considered to be true if "
"and only if it isn't equal to ``timedelta(0)``."
msgstr ""
"В логическом контексте объект :class:`timedelta` считается истинным тогда и "
"только тогда, когда он не равен ``timedelta(0)``."

#: ../../library/datetime.rst:416 ../../library/datetime.rst:625
#: ../../library/datetime.rst:1198 ../../library/datetime.rst:1786
msgid "Instance methods:"
msgstr "Методы экземпляра:"

#: ../../library/datetime.rst:420
msgid ""
"Return the total number of seconds contained in the duration. Equivalent to "
"``td / timedelta(seconds=1)``. For interval units other than seconds, use "
"the division form directly (e.g. ``td / timedelta(microseconds=1)``)."
msgstr ""
"Возвращает общее количество секунд, содержащихся в продолжительности. "
"Эквивалентно ``td / timedelta(секунды=1)``. Для единиц измерения интервала, "
"отличных от секунд, используйте непосредственно форму деления (например, "
"``td / timedelta(микросекунды=1)``)."

#: ../../library/datetime.rst:424
msgid ""
"Note that for very large time intervals (greater than 270 years on most "
"platforms) this method will lose microsecond accuracy."
msgstr ""
"Обратите внимание, что для очень больших интервалов времени (более 270 лет "
"на большинстве платформ) этот метод теряет микросекундную точность."

#: ../../library/datetime.rst:430
msgid "Examples of usage: :class:`timedelta`"
msgstr "Примеры использования: :class:`timedelta`"

#: ../../library/datetime.rst:432
msgid "An additional example of normalization::"
msgstr "Дополнительный пример нормализации::"

#: ../../library/datetime.rst:444
msgid "Examples of :class:`timedelta` arithmetic::"
msgstr "Примеры арифметики :class:`timedelta`::"

#: ../../library/datetime.rst:463
msgid ":class:`date` Objects"
msgstr "Объекты :class:`date`"

#: ../../library/datetime.rst:465
msgid ""
"A :class:`date` object represents a date (year, month and day) in an "
"idealized calendar, the current Gregorian calendar indefinitely extended in "
"both directions."
msgstr ""
"Объект :class:`date` представляет дату (год, месяц и день) в "
"идеализированном календаре, текущем григорианском календаре, неограниченно "
"расширенном в обоих направлениях."

#: ../../library/datetime.rst:469
msgid ""
"January 1 of year 1 is called day number 1, January 2 of year 1 is called "
"day number 2, and so on. [#]_"
msgstr ""
"1 января года 1 называется днем ​​номер 1, 2 января года 1 называется днем ​​"
"номер 2 и так далее. [#]_"

#: ../../library/datetime.rst:474
msgid ""
"All arguments are required. Arguments must be integers, in the following "
"ranges:"
msgstr ""
"Все аргументы обязательны. Аргументы должны быть целыми числами в следующих "
"диапазонах:"

#: ../../library/datetime.rst:477
msgid "``MINYEAR <= year <= MAXYEAR``"
msgstr "``MINYEAR <= year <= MAXYEAR``"

#: ../../library/datetime.rst:478
msgid "``1 <= month <= 12``"
msgstr "``1 <= month <= 12``"

#: ../../library/datetime.rst:479
msgid "``1 <= day <= number of days in the given month and year``"
msgstr "``1 <= day <= number of days in the given month and year``"

#: ../../library/datetime.rst:481 ../../library/datetime.rst:843
msgid ""
"If an argument outside those ranges is given, :exc:`ValueError` is raised."
msgstr ""
"Если указан аргумент за пределами этих диапазонов, возникает :exc:"
"`ValueError`."

#: ../../library/datetime.rst:484 ../../library/datetime.rst:848
msgid "Other constructors, all class methods:"
msgstr "Другие конструкторы, все методы класса:"

#: ../../library/datetime.rst:488
msgid "Return the current local date."
msgstr "Вернуть текущую местную дату."

#: ../../library/datetime.rst:490
msgid "This is equivalent to ``date.fromtimestamp(time.time())``."
msgstr "Это эквивалентно ``date.fromtimestamp(time.time())``."

#: ../../library/datetime.rst:494
msgid ""
"Return the local date corresponding to the POSIX timestamp, such as is "
"returned by :func:`time.time`."
msgstr ""
"Возвращает локальную дату, соответствующую временной метке POSIX, например, "
"возвращаемую :func:`time.time`."

#: ../../library/datetime.rst:497
msgid ""
"This may raise :exc:`OverflowError`, if the timestamp is out of the range of "
"values supported by the platform C :c:func:`localtime` function, and :exc:"
"`OSError` on :c:func:`localtime` failure. It's common for this to be "
"restricted to years from 1970 through 2038. Note that on non-POSIX systems "
"that include leap seconds in their notion of a timestamp, leap seconds are "
"ignored by :meth:`fromtimestamp`."
msgstr ""
"Это может вызвать :exc:`OverflowError`, если временная метка выходит за "
"пределы диапазона значений, поддерживаемых функцией платформы C :c:func:"
"`localtime`, и :exc:`OSError` в :c:func:`localtime`. ` провал. Обычно это "
"ограничивается годами с 1970 по 2038 год. Обратите внимание, что в системах, "
"отличных от POSIX, которые включают високосные секунды в понятие метки "
"времени, високосные секунды игнорируются :meth:`fromtimestamp`."

#: ../../library/datetime.rst:504
msgid ""
"Raise :exc:`OverflowError` instead of :exc:`ValueError` if the timestamp is "
"out of the range of values supported by the platform C :c:func:`localtime` "
"function. Raise :exc:`OSError` instead of :exc:`ValueError` on :c:func:"
"`localtime` failure."
msgstr ""
"Поднимите :exc:`OverflowError` вместо :exc:`ValueError`, если временная "
"метка выходит за пределы диапазона значений, поддерживаемых функцией "
"платформы C :c:func:`localtime`. Вызовите :exc:`OSError` вместо :exc:"
"`ValueError` при сбое :c:func:`localtime`."

#: ../../library/datetime.rst:513
msgid ""
"Return the date corresponding to the proleptic Gregorian ordinal, where "
"January 1 of year 1 has ordinal 1."
msgstr ""
"Возвращает дату, соответствующую пролептическому григорианскому порядковому "
"номеру, где 1 января года 1 имеет порядковый номер 1."

#: ../../library/datetime.rst:516
msgid ""
":exc:`ValueError` is raised unless ``1 <= ordinal <= date.max.toordinal()``. "
"For any date *d*, ``date.fromordinal(d.toordinal()) == d``."
msgstr ""
":exc:`ValueError` возникает, если только ``1 <= ordinal <= date.max."
"toordinal()``. Для любой даты *d*, ``date.fromordinal(d.toordinal()) == d``."

#: ../../library/datetime.rst:523
msgid ""
"Return a :class:`date` corresponding to a *date_string* given in the format "
"``YYYY-MM-DD``::"
msgstr ""

#: ../../library/datetime.rst:530
msgid ""
"This is the inverse of :meth:`date.isoformat`. It only supports the format "
"``YYYY-MM-DD``."
msgstr ""

#: ../../library/datetime.rst:538
msgid ""
"Return a :class:`date` corresponding to the ISO calendar date specified by "
"year, week and day. This is the inverse of the function :meth:`date."
"isocalendar`."
msgstr ""
"Возвращает :class:`date`, соответствующий дате календаря ISO, указанной "
"годом, неделей и днем. Это обратная функция :meth:`date.isocalendar`."

#: ../../library/datetime.rst:548
msgid "The earliest representable date, ``date(MINYEAR, 1, 1)``."
msgstr "Самая ранняя представимая дата, ``date(MINYEAR, 1, 1)``."

#: ../../library/datetime.rst:553
msgid "The latest representable date, ``date(MAXYEAR, 12, 31)``."
msgstr "Самая последняя представимая дата, ``date(MAXYEAR, 12, 31)``."

#: ../../library/datetime.rst:558
msgid ""
"The smallest possible difference between non-equal date objects, "
"``timedelta(days=1)``."
msgstr ""
"Наименьшая возможная разница между неравными объектами даты, "
"``timedelta(days=1)``."

#: ../../library/datetime.rst:566 ../../library/datetime.rst:1075
msgid "Between :const:`MINYEAR` and :const:`MAXYEAR` inclusive."
msgstr "Между :const:`MINYEAR` и :const:`MAXYEAR` включительно."

#: ../../library/datetime.rst:571 ../../library/datetime.rst:1080
msgid "Between 1 and 12 inclusive."
msgstr "От 1 до 12 включительно."

#: ../../library/datetime.rst:576 ../../library/datetime.rst:1085
msgid "Between 1 and the number of days in the given month of the given year."
msgstr "Между 1 и количеством дней в данном месяце данного года."

#: ../../library/datetime.rst:584
msgid "``date2 = date1 + timedelta``"
msgstr "``date2 = date1 + timedelta``"

#: ../../library/datetime.rst:584
msgid "*date2* will be ``timedelta.days`` days after *date1*. (1)"
msgstr ""

#: ../../library/datetime.rst:587
msgid "``date2 = date1 - timedelta``"
msgstr "``date2 = date1 - timedelta``"

#: ../../library/datetime.rst:587
msgid "Computes *date2* such that ``date2 + timedelta == date1``. (2)"
msgstr ""

#: ../../library/datetime.rst:590
msgid "``timedelta = date1 - date2``"
msgstr "``timedelta = date1 - date2``"

#: ../../library/datetime.rst:590 ../../library/datetime.rst:1133
msgid "\\(3)"
msgstr "\\(3)"

#: ../../library/datetime.rst:592
msgid "``date1 < date2``"
msgstr "``date1 < date2``"

#: ../../library/datetime.rst:592
msgid ""
"*date1* is considered less than *date2* when *date1* precedes *date2* in "
"time. (4)"
msgstr ""

#: ../../library/datetime.rst:599
msgid ""
"*date2* is moved forward in time if ``timedelta.days > 0``, or backward if "
"``timedelta.days < 0``. Afterward ``date2 - date1 == timedelta.days``. "
"``timedelta.seconds`` and ``timedelta.microseconds`` are ignored. :exc:"
"`OverflowError` is raised if ``date2.year`` would be smaller than :const:"
"`MINYEAR` or larger than :const:`MAXYEAR`."
msgstr ""
"*date2* перемещается вперед во времени, если ``timedelta.days > 0``, или "
"назад, если ``timedelta.days < 0``. Далее ``date2 - date1 == timedelta."
"days``. ``timedelta.секунды`` и ``timedelta.microсекунды`` игнорируются. :"
"exc:`OverflowError` возникает, если ``date2.year`` меньше :const:`MINYEAR` "
"или больше :const:`MAXYEAR`."

#: ../../library/datetime.rst:606
msgid "``timedelta.seconds`` and ``timedelta.microseconds`` are ignored."
msgstr "``timedelta.seconds`` и ``timedelta.microseconds`` игнорируются."

#: ../../library/datetime.rst:609
msgid ""
"This is exact, and cannot overflow. timedelta.seconds and timedelta."
"microseconds are 0, and date2 + timedelta == date1 after."
msgstr ""

#: ../../library/datetime.rst:613
msgid ""
"In other words, ``date1 < date2`` if and only if ``date1.toordinal() < date2."
"toordinal()``. Date comparison raises :exc:`TypeError` if the other "
"comparand isn't also a :class:`date` object. However, ``NotImplemented`` is "
"returned instead if the other comparand has a :meth:`timetuple` attribute. "
"This hook gives other kinds of date objects a chance at implementing mixed-"
"type comparison. If not, when a :class:`date` object is compared to an "
"object of a different type, :exc:`TypeError` is raised unless the comparison "
"is ``==`` or ``!=``. The latter cases return :const:`False` or :const:"
"`True`, respectively."
msgstr ""

#: ../../library/datetime.rst:623
msgid ""
"In Boolean contexts, all :class:`date` objects are considered to be true."
msgstr "В логическом контексте все объекты :class:`date` считаются истинными."

#: ../../library/datetime.rst:629
msgid ""
"Return a date with the same value, except for those parameters given new "
"values by whichever keyword arguments are specified."
msgstr ""
"Возвращает дату с тем же значением, за исключением тех параметров, которым "
"присвоены новые значения в зависимости от того, какие аргументы ключевого "
"слова указаны."

#: ../../library/datetime.rst:632 ../../library/datetime.rst:1829
msgid "Example::"
msgstr "Пример::"

#: ../../library/datetime.rst:642 ../../library/datetime.rst:1311
msgid ""
"Return a :class:`time.struct_time` such as returned by :func:`time."
"localtime`."
msgstr ""
"Возвращает :class:`time.struct_time`, например, возвращаемый :func:`time."
"localtime`."

#: ../../library/datetime.rst:644
msgid "The hours, minutes and seconds are 0, and the DST flag is -1."
msgstr "Часы, минуты и секунды равны 0, а флаг летнего времени равен -1."

#: ../../library/datetime.rst:646 ../../library/datetime.rst:1313
msgid "``d.timetuple()`` is equivalent to::"
msgstr "``d.timetuple()`` эквивалентен::"

#: ../../library/datetime.rst:650
msgid ""
"where ``yday = d.toordinal() - date(d.year, 1, 1).toordinal() + 1`` is the "
"day number within the current year starting with ``1`` for January 1st."
msgstr ""

#: ../../library/datetime.rst:656
msgid ""
"Return the proleptic Gregorian ordinal of the date, where January 1 of year "
"1 has ordinal 1. For any :class:`date` object *d*, ``date.fromordinal(d."
"toordinal()) == d``."
msgstr ""
"Возвращает пролептический григорианский порядковый номер даты, где 1 января "
"года 1 имеет порядковый номер 1. Для любого :class:`date` объекта *d*, "
"``date.fromordinal(d.toordinal()) == d``."

#: ../../library/datetime.rst:663
msgid ""
"Return the day of the week as an integer, where Monday is 0 and Sunday is 6. "
"For example, ``date(2002, 12, 4).weekday() == 2``, a Wednesday. See also :"
"meth:`isoweekday`."
msgstr ""
"Возвращает день недели как целое число, где понедельник — 0, а воскресенье — "
"6. Например, ``date(2002, 12, 4).weekday() == 2``, среда. См. также :meth:"
"`isoweekday`."

#: ../../library/datetime.rst:670
msgid ""
"Return the day of the week as an integer, where Monday is 1 and Sunday is 7. "
"For example, ``date(2002, 12, 4).isoweekday() == 3``, a Wednesday. See also :"
"meth:`weekday`, :meth:`isocalendar`."
msgstr ""
"Возвращает день недели как целое число, где понедельник — 1, а воскресенье — "
"7. Например, ``date(2002, 12, 4).isoweekday() == 3``, среда. См. также :meth:"
"`weekday`, :meth:`isocalendar`."

#: ../../library/datetime.rst:677
msgid ""
"Return a :term:`named tuple` object with three components: ``year``, "
"``week`` and ``weekday``."
msgstr ""
"Возвращает объект :term:`named tuple` с тремя компонентами: ``год``, "
"``неделя`` и ``день недели``."

#: ../../library/datetime.rst:680
msgid ""
"The ISO calendar is a widely used variant of the Gregorian calendar. [#]_"
msgstr ""
"Календарь ISO является широко используемым вариантом григорианского "
"календаря. [#]_"

#: ../../library/datetime.rst:682
msgid ""
"The ISO year consists of 52 or 53 full weeks, and where a week starts on a "
"Monday and ends on a Sunday. The first week of an ISO year is the first "
"(Gregorian) calendar week of a year containing a Thursday. This is called "
"week number 1, and the ISO year of that Thursday is the same as its "
"Gregorian year."
msgstr ""
"Год ISO состоит из 52 или 53 полных недель, причем неделя начинается в "
"понедельник и заканчивается в воскресенье. Первая неделя года по ISO — это "
"первая (григорианская) календарная неделя года, содержащая четверг. Это "
"называется неделя номер 1, и год ISO этого четверга совпадает с годом по "
"григорианскому календарю."

#: ../../library/datetime.rst:687
msgid ""
"For example, 2004 begins on a Thursday, so the first week of ISO year 2004 "
"begins on Monday, 29 Dec 2003 and ends on Sunday, 4 Jan 2004::"
msgstr ""
"Например, 2004 год начинается в четверг, поэтому первая неделя 2004 года ISO "
"начинается в понедельник, 29 декабря 2003 года, и заканчивается в "
"воскресенье, 4 января 2004 года:"

#: ../../library/datetime.rst:696
msgid "Result changed from a tuple to a :term:`named tuple`."
msgstr "Результат изменился с кортежа на кортеж с именем :term:`named`."

#: ../../library/datetime.rst:701
msgid ""
"Return a string representing the date in ISO 8601 format, ``YYYY-MM-DD``::"
msgstr ""
"Возвращает строку, представляющую дату в формате ISO 8601, ``ГГГГ-ММ-ДД``::"

#: ../../library/datetime.rst:707
msgid "This is the inverse of :meth:`date.fromisoformat`."
msgstr ""

#: ../../library/datetime.rst:711
msgid "For a date *d*, ``str(d)`` is equivalent to ``d.isoformat()``."
msgstr "Для даты *d* ``str(d)`` эквивалентен ``d.isoformat()``."

#: ../../library/datetime.rst:716
msgid "Return a string representing the date::"
msgstr "Возвращает строку, представляющую дату::"

#: ../../library/datetime.rst:722 ../../library/datetime.rst:1497
msgid "``d.ctime()`` is equivalent to::"
msgstr "``d.ctime()`` эквивалентно::"

#: ../../library/datetime.rst:726
msgid ""
"on platforms where the native C :c:func:`ctime` function (which :func:`time."
"ctime` invokes, but which :meth:`date.ctime` does not invoke) conforms to "
"the C standard."
msgstr ""
"на платформах, где встроенная функция C :c:func:`ctime` (которая вызывается :"
"func:`time.ctime`, но не вызывается :meth:`date.ctime`) соответствует "
"стандарту C."

#: ../../library/datetime.rst:733
msgid ""
"Return a string representing the date, controlled by an explicit format "
"string. Format codes referring to hours, minutes or seconds will see 0 "
"values. For a complete list of formatting directives, see :ref:`strftime-"
"strptime-behavior`."
msgstr ""

#: ../../library/datetime.rst:741
msgid ""
"Same as :meth:`.date.strftime`. This makes it possible to specify a format "
"string for a :class:`.date` object in :ref:`formatted string literals <f-"
"strings>` and when using :meth:`str.format`. For a complete list of "
"formatting directives, see :ref:`strftime-strptime-behavior`."
msgstr ""

#: ../../library/datetime.rst:748
msgid "Examples of Usage: :class:`date`"
msgstr "Примеры использования: :class:`date`"

#: ../../library/datetime.rst:750
msgid "Example of counting days to an event::"
msgstr "Пример подсчета дней до события:"

#: ../../library/datetime.rst:768
msgid "More examples of working with :class:`date`:"
msgstr "Еще примеры работы с :class:`date`:"

#: ../../library/datetime.rst:817
msgid ":class:`.datetime` Objects"
msgstr "Объекты :class:`.datetime`"

#: ../../library/datetime.rst:819
msgid ""
"A :class:`.datetime` object is a single object containing all the "
"information from a :class:`date` object and a :class:`.time` object."
msgstr ""
"Объект :class:`.datetime` — это отдельный объект, содержащий всю информацию "
"из объекта :class:`date` и объекта :class:`.time`."

#: ../../library/datetime.rst:822
msgid ""
"Like a :class:`date` object, :class:`.datetime` assumes the current "
"Gregorian calendar extended in both directions; like a :class:`.time` "
"object, :class:`.datetime` assumes there are exactly 3600\\*24 seconds in "
"every day."
msgstr ""
"Подобно объекту :class:`date`, :class:`.datetime` предполагает, что текущий "
"григорианский календарь расширен в обоих направлениях; как и объект :class:`."
"time`, :class:`.datetime` предполагает, что в каждом дне ровно 3600\\*24 "
"секунды."

#: ../../library/datetime.rst:826
msgid "Constructor:"
msgstr "Конструктор:"

#: ../../library/datetime.rst:830
msgid ""
"The *year*, *month* and *day* arguments are required. *tzinfo* may be "
"``None``, or an instance of a :class:`tzinfo` subclass. The remaining "
"arguments must be integers in the following ranges:"
msgstr ""
"Аргументы *год*, *месяц* и *день* являются обязательными. *tzinfo* может "
"иметь значение None или быть экземпляром подкласса :class:`tzinfo`. "
"Остальные аргументы должны быть целыми числами в следующих диапазонах:"

#: ../../library/datetime.rst:834
msgid "``MINYEAR <= year <= MAXYEAR``,"
msgstr "``MINYEAR <= year <= MAXYEAR``,"

#: ../../library/datetime.rst:835
msgid "``1 <= month <= 12``,"
msgstr "``1 <= month <= 12``,"

#: ../../library/datetime.rst:836
msgid "``1 <= day <= number of days in the given month and year``,"
msgstr "``1 <= day <= number of days in the given month and year``,"

#: ../../library/datetime.rst:837 ../../library/datetime.rst:1660
msgid "``0 <= hour < 24``,"
msgstr "``0 <= hour < 24``,"

#: ../../library/datetime.rst:838 ../../library/datetime.rst:1661
msgid "``0 <= minute < 60``,"
msgstr "``0 <= minute < 60``,"

#: ../../library/datetime.rst:839 ../../library/datetime.rst:1662
msgid "``0 <= second < 60``,"
msgstr "``0 <= second < 60``,"

#: ../../library/datetime.rst:840 ../../library/datetime.rst:1663
msgid "``0 <= microsecond < 1000000``,"
msgstr "``0 <= microsecond < 1000000``,"

#: ../../library/datetime.rst:841 ../../library/datetime.rst:1664
msgid "``fold in [0, 1]``."
msgstr "``fold in [0, 1]``."

#: ../../library/datetime.rst:845 ../../library/datetime.rst:1232
#: ../../library/datetime.rst:1796
msgid "Added the ``fold`` argument."
msgstr ""

#: ../../library/datetime.rst:852
msgid "Return the current local datetime, with :attr:`.tzinfo` ``None``."
msgstr ""

#: ../../library/datetime.rst:854
msgid "Equivalent to::"
msgstr "Эквивалентно::"

#: ../../library/datetime.rst:858
msgid "See also :meth:`now`, :meth:`fromtimestamp`."
msgstr "См. также :meth:`now`, :meth:`fromtimestamp`."

#: ../../library/datetime.rst:860
msgid ""
"This method is functionally equivalent to :meth:`now`, but without a ``tz`` "
"parameter."
msgstr ""
"Этот метод функционально эквивалентен :meth:`now`, но без параметра tz``."

#: ../../library/datetime.rst:865
msgid "Return the current local date and time."
msgstr "Возвращает текущую местную дату и время."

#: ../../library/datetime.rst:867
msgid ""
"If optional argument *tz* is ``None`` or not specified, this is like :meth:"
"`today`, but, if possible, supplies more precision than can be gotten from "
"going through a :func:`time.time` timestamp (for example, this may be "
"possible on platforms supplying the C :c:func:`gettimeofday` function)."
msgstr ""
"Если необязательный аргумент *tz* имеет значение ``None`` или не указан, это "
"похоже на :meth:`today`, но, если возможно, обеспечивает большую точность, "
"чем можно получить при использовании :func:`time.time` временная метка "
"(например, это может быть возможно на платформах, поддерживающих функцию C :"
"c:func:`gettimeofday`)."

#: ../../library/datetime.rst:873
msgid ""
"If *tz* is not ``None``, it must be an instance of a :class:`tzinfo` "
"subclass, and the current date and time are converted to *tz*’s time zone."
msgstr ""
"Если *tz* не ``None``, он должен быть экземпляром подкласса :class:`tzinfo`, "
"а текущая дата и время преобразуются в часовой пояс *tz*."

#: ../../library/datetime.rst:876
msgid "This function is preferred over :meth:`today` and :meth:`utcnow`."
msgstr "Эта функция предпочтительнее :meth:`today` и :meth:`utcnow`."

#: ../../library/datetime.rst:881
msgid "Return the current UTC date and time, with :attr:`.tzinfo` ``None``."
msgstr ""
"Возвращает текущую дату и время в формате UTC с помощью :attr:`.tzinfo` "
"``None``."

#: ../../library/datetime.rst:883
msgid ""
"This is like :meth:`now`, but returns the current UTC date and time, as a "
"naive :class:`.datetime` object. An aware current UTC datetime can be "
"obtained by calling ``datetime.now(timezone.utc)``. See also :meth:`now`."
msgstr ""
"Это похоже на :meth:`now`, но возвращает текущую дату и время в формате UTC "
"как простой объект :class:`.datetime`. Текущую дату и время в формате UTC "
"можно получить, вызвав ``datetime.now(timezone.utc)``. См. также :meth:"
"`сейчас`."

#: ../../library/datetime.rst:889
msgid ""
"Because naive ``datetime`` objects are treated by many ``datetime`` methods "
"as local times, it is preferred to use aware datetimes to represent times in "
"UTC. As such, the recommended way to create an object representing the "
"current time in UTC is by calling ``datetime.now(timezone.utc)``."
msgstr ""
"Поскольку наивные объекты datetime обрабатываются многими методами datetime "
"как локальное время, для представления времени в формате UTC "
"предпочтительнее использовать осведомленные объекты datetime. Таким образом, "
"рекомендуемый способ создания объекта, представляющего текущее время в "
"формате UTC, — это вызов ``datetime.now(timezone.utc)``."

#: ../../library/datetime.rst:897
msgid ""
"Return the local date and time corresponding to the POSIX timestamp, such as "
"is returned by :func:`time.time`. If optional argument *tz* is ``None`` or "
"not specified, the timestamp is converted to the platform's local date and "
"time, and the returned :class:`.datetime` object is naive."
msgstr ""
"Возвращает локальную дату и время, соответствующие временной метке POSIX, "
"например, возвращаемые :func:`time.time`. Если необязательный аргумент *tz* "
"имеет значение ``None`` или не указан, временная метка преобразуется в "
"локальную дату и время платформы, а возвращаемый объект :class:`.datetime` "
"является наивным."

#: ../../library/datetime.rst:902
msgid ""
"If *tz* is not ``None``, it must be an instance of a :class:`tzinfo` "
"subclass, and the timestamp is converted to *tz*’s time zone."
msgstr ""
"Если *tz* не ``None``, он должен быть экземпляром подкласса :class:`tzinfo`, "
"а временная метка преобразуется в часовой пояс *tz*."

#: ../../library/datetime.rst:905
msgid ""
":meth:`fromtimestamp` may raise :exc:`OverflowError`, if the timestamp is "
"out of the range of values supported by the platform C :c:func:`localtime` "
"or :c:func:`gmtime` functions, and :exc:`OSError` on :c:func:`localtime` or :"
"c:func:`gmtime` failure. It's common for this to be restricted to years in "
"1970 through 2038. Note that on non-POSIX systems that include leap seconds "
"in their notion of a timestamp, leap seconds are ignored by :meth:"
"`fromtimestamp`, and then it's possible to have two timestamps differing by "
"a second that yield identical :class:`.datetime` objects. This method is "
"preferred over :meth:`utcfromtimestamp`."
msgstr ""
":meth:`fromtimestamp` может вызвать :exc:`OverflowError`, если метка времени "
"выходит за пределы диапазона значений, поддерживаемых функциями платформы C :"
"c:func:`localtime` или :c:func:`gmtime`, и :exc:`OSError` при сбое :c:func:"
"`localtime` или :c:func:`gmtime`. Обычно это ограничивается годами с 1970 по "
"2038 год. Обратите внимание, что в системах, отличных от POSIX, которые "
"включают дополнительные секунды в понятие метки времени, дополнительные "
"секунды игнорируются :meth:`fromtimestamp`, и тогда можно иметь две "
"временные метки, отличающиеся на секунду, которые дают идентичные объекты :"
"class:`.datetime`. Этот метод предпочтительнее :meth:`utcfromtimestamp`."

#: ../../library/datetime.rst:916
msgid ""
"Raise :exc:`OverflowError` instead of :exc:`ValueError` if the timestamp is "
"out of the range of values supported by the platform C :c:func:`localtime` "
"or :c:func:`gmtime` functions. Raise :exc:`OSError` instead of :exc:"
"`ValueError` on :c:func:`localtime` or :c:func:`gmtime` failure."
msgstr ""
"Вызовите :exc:`OverflowError` вместо :exc:`ValueError`, если временная метка "
"выходит за пределы диапазона значений, поддерживаемых функциями платформы C :"
"c:func:`localtime` или :c:func:`gmtime`. Вызовите :exc:`OSError` вместо :exc:"
"`ValueError` при сбое :c:func:`localtime` или :c:func:`gmtime`."

#: ../../library/datetime.rst:923
msgid ":meth:`fromtimestamp` may return instances with :attr:`.fold` set to 1."
msgstr ""
":meth:`fromtimestamp` может возвращать экземпляры с :attr:`.fold`, "
"установленным в 1."

#: ../../library/datetime.rst:928
msgid ""
"Return the UTC :class:`.datetime` corresponding to the POSIX timestamp, "
"with :attr:`.tzinfo` ``None``.  (The resulting object is naive.)"
msgstr ""
"Возвращает UTC :class:`.datetime`, соответствующий временной метке POSIX, с :"
"attr:`.tzinfo` ``None``. (Полученный объект является наивным.)"

#: ../../library/datetime.rst:931
msgid ""
"This may raise :exc:`OverflowError`, if the timestamp is out of the range of "
"values supported by the platform C :c:func:`gmtime` function, and :exc:"
"`OSError` on :c:func:`gmtime` failure. It's common for this to be restricted "
"to years in 1970 through 2038."
msgstr ""
"Это может вызвать :exc:`OverflowError`, если временная метка выходит за "
"пределы диапазона значений, поддерживаемых функцией платформы C :c:func:"
"`gmtime`, и :exc:`OSError` в :c:func:`gmtime`. ` провал. Обычно это "
"ограничивается годами с 1970 по 2038 год."

#: ../../library/datetime.rst:936
msgid "To get an aware :class:`.datetime` object, call :meth:`fromtimestamp`::"
msgstr ""
"Чтобы получить осведомленный объект :class:`.datetime`, вызовите :meth:"
"`fromtimestamp`::"

#: ../../library/datetime.rst:940
msgid ""
"On the POSIX compliant platforms, it is equivalent to the following "
"expression::"
msgstr ""
"На платформах, совместимых с POSIX, это эквивалентно следующему выражению:"

#: ../../library/datetime.rst:945
msgid ""
"except the latter formula always supports the full years range: between :"
"const:`MINYEAR` and :const:`MAXYEAR` inclusive."
msgstr ""
"за исключением того, что последняя формула всегда поддерживает полный "
"диапазон лет: от :const:`MINYEAR` до :const:`MAXYEAR` включительно."

#: ../../library/datetime.rst:950
msgid ""
"Because naive ``datetime`` objects are treated by many ``datetime`` methods "
"as local times, it is preferred to use aware datetimes to represent times in "
"UTC. As such, the recommended way to create an object representing a "
"specific timestamp in UTC is by calling ``datetime.fromtimestamp(timestamp, "
"tz=timezone.utc)``."
msgstr ""
"Поскольку наивные объекты datetime обрабатываются многими методами datetime "
"как локальное время, для представления времени в формате UTC "
"предпочтительнее использовать осведомленные объекты datetime. Таким образом, "
"рекомендуемый способ создания объекта, представляющего определенную "
"временную метку в формате UTC, — это вызов ``datetime."
"fromtimestamp(timestamp, tz=timezone.utc)``."

#: ../../library/datetime.rst:956
msgid ""
"Raise :exc:`OverflowError` instead of :exc:`ValueError` if the timestamp is "
"out of the range of values supported by the platform C :c:func:`gmtime` "
"function. Raise :exc:`OSError` instead of :exc:`ValueError` on :c:func:"
"`gmtime` failure."
msgstr ""
"Поднимите :exc:`OverflowError` вместо :exc:`ValueError`, если временная "
"метка выходит за пределы диапазона значений, поддерживаемых функцией "
"платформы C :c:func:`gmtime`. Вызовите :exc:`OSError` вместо :exc:"
"`ValueError` при сбое :c:func:`gmtime`."

#: ../../library/datetime.rst:965
msgid ""
"Return the :class:`.datetime` corresponding to the proleptic Gregorian "
"ordinal, where January 1 of year 1 has ordinal 1. :exc:`ValueError` is "
"raised unless ``1 <= ordinal <= datetime.max.toordinal()``. The hour, "
"minute, second and microsecond of the result are all 0, and :attr:`.tzinfo` "
"is ``None``."
msgstr ""
"Возвращает :class:`.datetime`, соответствующий пролептическому "
"григорианскому порядковому номеру, где 1 января года 1 имеет порядковый "
"номер 1. :exc:`ValueError` возникает, если ``1 <= ordinal <= datetime.max."
"toordinal() ``. Час, минута, секунда и микросекунда результата равны 0, а :"
"attr:`.tzinfo` имеет значение ``None``."

#: ../../library/datetime.rst:973
msgid ""
"Return a new :class:`.datetime` object whose date components are equal to "
"the given :class:`date` object's, and whose time components are equal to the "
"given :class:`.time` object's. If the *tzinfo* argument is provided, its "
"value is used to set the :attr:`.tzinfo` attribute of the result, otherwise "
"the :attr:`~.time.tzinfo` attribute of the *time* argument is used."
msgstr ""

#: ../../library/datetime.rst:980
msgid ""
"For any :class:`.datetime` object *d*, ``d == datetime.combine(d.date(), d."
"time(), d.tzinfo)``. If date is a :class:`.datetime` object, its time "
"components and :attr:`.tzinfo` attributes are ignored."
msgstr ""

#: ../../library/datetime.rst:985
msgid "Added the *tzinfo* argument."
msgstr "Добавлен аргумент *tzinfo*."

#: ../../library/datetime.rst:991
msgid ""
"Return a :class:`.datetime` corresponding to a *date_string* in one of the "
"formats emitted by :meth:`date.isoformat` and :meth:`datetime.isoformat`."
msgstr ""

#: ../../library/datetime.rst:994
msgid "Specifically, this function supports strings in the format:"
msgstr ""

#: ../../library/datetime.rst:1000
msgid "where ``*`` can match any single character."
msgstr ""

#: ../../library/datetime.rst:1004
msgid ""
"This does *not* support parsing arbitrary ISO 8601 strings - it is only "
"intended as the inverse operation of :meth:`datetime.isoformat`. A more full-"
"featured ISO 8601 parser, ``dateutil.parser.isoparse`` is available in the "
"third-party package `dateutil <https://dateutil.readthedocs.io/en/stable/"
"parser.html#dateutil.parser.isoparse>`__."
msgstr ""

#: ../../library/datetime.rst:1009 ../../library/datetime.rst:1426
#: ../../library/datetime.rst:1773
msgid "Examples::"
msgstr "Примеры::"

#: ../../library/datetime.rst:1028
msgid ""
"Return a :class:`.datetime` corresponding to the ISO calendar date specified "
"by year, week and day. The non-date components of the datetime are populated "
"with their normal default values. This is the inverse of the function :meth:"
"`datetime.isocalendar`."
msgstr ""
"Возвращает :class:`.datetime`, соответствующий дате календаря ISO, указанной "
"годом, неделей и днем. Компоненты даты и времени, не относящиеся к дате, "
"заполняются обычными значениями по умолчанию. Это обратная функция :meth:"
"`datetime.isocalendar`."

#: ../../library/datetime.rst:1037
msgid ""
"Return a :class:`.datetime` corresponding to *date_string*, parsed according "
"to *format*."
msgstr ""
"Возвращает :class:`.datetime`, соответствующий *date_string*, анализируемый "
"в соответствии с *format*."

#: ../../library/datetime.rst:1040
msgid "This is equivalent to::"
msgstr "Это эквивалентно::"

#: ../../library/datetime.rst:1044
msgid ""
":exc:`ValueError` is raised if the date_string and format can't be parsed "
"by :func:`time.strptime` or if it returns a value which isn't a time tuple. "
"For a complete list of formatting directives, see :ref:`strftime-strptime-"
"behavior`."
msgstr ""

#: ../../library/datetime.rst:1055
msgid ""
"The earliest representable :class:`.datetime`, ``datetime(MINYEAR, 1, 1, "
"tzinfo=None)``."
msgstr ""
"Самый ранний представимый :class:`.datetime`, ``datetime(MINYEAR, 1, 1, "
"tzinfo=None)``."

#: ../../library/datetime.rst:1061
msgid ""
"The latest representable :class:`.datetime`, ``datetime(MAXYEAR, 12, 31, 23, "
"59, 59, 999999, tzinfo=None)``."
msgstr ""
"Самый последний представимый :class:`.datetime`, ``datetime(MAXYEAR, 12, 31, "
"23, 59, 59, 999999, tzinfo=None)``."

#: ../../library/datetime.rst:1067
msgid ""
"The smallest possible difference between non-equal :class:`.datetime` "
"objects, ``timedelta(microseconds=1)``."
msgstr ""
"Наименьшая возможная разница между неравными объектами :class:`.datetime`, "
"``timedelta(microсекунды=1)``."

#: ../../library/datetime.rst:1090 ../../library/datetime.rst:1693
msgid "In ``range(24)``."
msgstr "На сайте ``range(24)``."

#: ../../library/datetime.rst:1095 ../../library/datetime.rst:1100
#: ../../library/datetime.rst:1698 ../../library/datetime.rst:1703
msgid "In ``range(60)``."
msgstr "На сайте ``range(60)``."

#: ../../library/datetime.rst:1105 ../../library/datetime.rst:1708
msgid "In ``range(1000000)``."
msgstr "На сайте ``range(1000000)``."

#: ../../library/datetime.rst:1110
msgid ""
"The object passed as the *tzinfo* argument to the :class:`.datetime` "
"constructor, or ``None`` if none was passed."
msgstr ""
"Объект передается как аргумент *tzinfo* конструктору :class:`.datetime` или "
"``None``, если ничего не было передано."

#: ../../library/datetime.rst:1116 ../../library/datetime.rst:1719
msgid ""
"In ``[0, 1]``. Used to disambiguate wall times during a repeated interval. "
"(A repeated interval occurs when clocks are rolled back at the end of "
"daylight saving time or when the UTC offset for the current zone is "
"decreased for political reasons.) The value 0 (1) represents the earlier "
"(later) of the two moments with the same wall time representation."
msgstr ""

#: ../../library/datetime.rst:1129
msgid "``datetime2 = datetime1 + timedelta``"
msgstr "``datetime2 = datetime1 + timedelta``"

#: ../../library/datetime.rst:1129 ../../library/datetime.rst:2310
#: ../../library/datetime.rst:2315 ../../library/datetime.rst:2327
#: ../../library/datetime.rst:2332 ../../library/datetime.rst:2392
#: ../../library/datetime.rst:2397 ../../library/datetime.rst:2401
msgid "\\(1)"
msgstr "\\(1)"

#: ../../library/datetime.rst:1131
msgid "``datetime2 = datetime1 - timedelta``"
msgstr "``datetime2 = datetime1 - timedelta``"

#: ../../library/datetime.rst:1131 ../../library/datetime.rst:2343
msgid "\\(2)"
msgstr "\\(2)"

#: ../../library/datetime.rst:1133
msgid "``timedelta = datetime1 - datetime2``"
msgstr "``timedelta = datetime1 - datetime2``"

#: ../../library/datetime.rst:1135
msgid "``datetime1 < datetime2``"
msgstr "``datetime1 < datetime2``"

#: ../../library/datetime.rst:1135
msgid "Compares :class:`.datetime` to :class:`.datetime`. (4)"
msgstr ""

#: ../../library/datetime.rst:1140
msgid ""
"datetime2 is a duration of timedelta removed from datetime1, moving forward "
"in time if ``timedelta.days`` > 0, or backward if ``timedelta.days`` < 0. "
"The result has the same :attr:`~.datetime.tzinfo` attribute as the input "
"datetime, and datetime2 - datetime1 == timedelta after. :exc:`OverflowError` "
"is raised if datetime2.year would be smaller than :const:`MINYEAR` or larger "
"than :const:`MAXYEAR`. Note that no time zone adjustments are done even if "
"the input is an aware object."
msgstr ""

#: ../../library/datetime.rst:1149
msgid ""
"Computes the datetime2 such that datetime2 + timedelta == datetime1. As for "
"addition, the result has the same :attr:`~.datetime.tzinfo` attribute as the "
"input datetime, and no time zone adjustments are done even if the input is "
"aware."
msgstr ""

#: ../../library/datetime.rst:1154
msgid ""
"Subtraction of a :class:`.datetime` from a :class:`.datetime` is defined "
"only if both operands are naive, or if both are aware. If one is aware and "
"the other is naive, :exc:`TypeError` is raised."
msgstr ""
"Вычитание :class:`.datetime` из :class:`.datetime` определяется только в том "
"случае, если оба операнда являются наивными или если оба операнда известны. "
"Если один знает, а другой наивен, возникает :exc:`TypeError`."

#: ../../library/datetime.rst:1158
msgid ""
"If both are naive, or both are aware and have the same :attr:`~.datetime."
"tzinfo` attribute, the :attr:`~.datetime.tzinfo` attributes are ignored, and "
"the result is a :class:`timedelta` object *t* such that ``datetime2 + t == "
"datetime1``. No time zone adjustments are done in this case."
msgstr ""
"Если оба неактивны или оба осведомлены и имеют один и тот же атрибут :attr:"
"`~.datetime.tzinfo`, атрибуты :attr:`~.datetime.tzinfo` игнорируются, и "
"результатом является :class:`timedelta `объект *t* такой, что ``datetime2 + "
"t == datetime1``. В этом случае корректировка часового пояса не производится."

#: ../../library/datetime.rst:1163
msgid ""
"If both are aware and have different :attr:`~.datetime.tzinfo` attributes, "
"``a-b`` acts as if *a* and *b* were first converted to naive UTC datetimes "
"first. The result is ``(a.replace(tzinfo=None) - a.utcoffset()) - (b."
"replace(tzinfo=None) - b.utcoffset())`` except that the implementation never "
"overflows."
msgstr ""

#: ../../library/datetime.rst:1169
msgid ""
"*datetime1* is considered less than *datetime2* when *datetime1* precedes "
"*datetime2* in time."
msgstr ""

#: ../../library/datetime.rst:1172
msgid ""
"If one comparand is naive and the other is aware, :exc:`TypeError` is raised "
"if an order comparison is attempted. For equality comparisons, naive "
"instances are never equal to aware instances."
msgstr ""

#: ../../library/datetime.rst:1176
msgid ""
"If both comparands are aware, and have the same :attr:`~.datetime.tzinfo` "
"attribute, the common :attr:`~.datetime.tzinfo` attribute is ignored and the "
"base datetimes are compared. If both comparands are aware and have "
"different :attr:`~.datetime.tzinfo` attributes, the comparands are first "
"adjusted by subtracting their UTC offsets (obtained from ``self."
"utcoffset()``)."
msgstr ""

#: ../../library/datetime.rst:1182
msgid ""
"Equality comparisons between aware and naive :class:`.datetime` instances "
"don't raise :exc:`TypeError`."
msgstr ""
"Сравнения на равенство между осведомленными и наивными экземплярами :class:`."
"datetime` не вызывают :exc:`TypeError`."

#: ../../library/datetime.rst:1188
msgid ""
"In order to stop comparison from falling back to the default scheme of "
"comparing object addresses, datetime comparison normally raises :exc:"
"`TypeError` if the other comparand isn't also a :class:`.datetime` object. "
"However, ``NotImplemented`` is returned instead if the other comparand has "
"a :meth:`timetuple` attribute. This hook gives other kinds of date objects a "
"chance at implementing mixed-type comparison. If not, when a :class:`."
"datetime` object is compared to an object of a different type, :exc:"
"`TypeError` is raised unless the comparison is ``==`` or ``!=``. The latter "
"cases return :const:`False` or :const:`True`, respectively."
msgstr ""

#: ../../library/datetime.rst:1202
msgid "Return :class:`date` object with same year, month and day."
msgstr "Верните объект :class:`date` с тем же годом, месяцем и днем."

#: ../../library/datetime.rst:1207
msgid ""
"Return :class:`.time` object with same hour, minute, second, microsecond and "
"fold. :attr:`.tzinfo` is ``None``. See also method :meth:`timetz`."
msgstr ""
"Возвращает объект :class:`.time` с тем же часом, минутой, секундой, "
"микросекундой и кратностью. :attr:`.tzinfo` имеет значение ``Нет``. См. "
"также метод :meth:`timetz`."

#: ../../library/datetime.rst:1210 ../../library/datetime.rst:1219
msgid "The fold value is copied to the returned :class:`.time` object."
msgstr "Значение сгиба копируется в возвращаемый объект :class:`.time`."

#: ../../library/datetime.rst:1216
msgid ""
"Return :class:`.time` object with same hour, minute, second, microsecond, "
"fold, and tzinfo attributes. See also method :meth:`time`."
msgstr ""
"Возвращает объект :class:`.time` с теми же атрибутами часов, минут, секунд, "
"микросекунд, сгибов и tzinfo. См. также метод :meth:`time`."

#: ../../library/datetime.rst:1227
msgid ""
"Return a datetime with the same attributes, except for those attributes "
"given new values by whichever keyword arguments are specified. Note that "
"``tzinfo=None`` can be specified to create a naive datetime from an aware "
"datetime with no conversion of date and time data."
msgstr ""
"Возвращает дату и время с теми же атрибутами, за исключением тех атрибутов, "
"которым присвоены новые значения в зависимости от того, какие аргументы "
"ключевого слова указаны. Обратите внимание, что можно указать "
"``tzinfo=None`` для создания простого значения даты и времени из известного "
"значения даты и времени без преобразования данных даты и времени."

#: ../../library/datetime.rst:1238
msgid ""
"Return a :class:`.datetime` object with new :attr:`.tzinfo` attribute *tz*, "
"adjusting the date and time data so the result is the same UTC time as "
"*self*, but in *tz*'s local time."
msgstr ""
"Возвращает объект :class:`.datetime` с новым атрибутом :attr:`.tzinfo` *tz*, "
"корректируя данные даты и времени так, чтобы результатом было то же время "
"UTC, что и *self*, но в *tz* местное время."

#: ../../library/datetime.rst:1242
msgid ""
"If provided, *tz* must be an instance of a :class:`tzinfo` subclass, and "
"its :meth:`utcoffset` and :meth:`dst` methods must not return ``None``. If "
"*self* is naive, it is presumed to represent time in the system timezone."
msgstr ""

#: ../../library/datetime.rst:1246
msgid ""
"If called without arguments (or with ``tz=None``) the system local timezone "
"is assumed for the target timezone. The ``.tzinfo`` attribute of the "
"converted datetime instance will be set to an instance of :class:`timezone` "
"with the zone name and offset obtained from the OS."
msgstr ""

#: ../../library/datetime.rst:1251
msgid ""
"If ``self.tzinfo`` is *tz*, ``self.astimezone(tz)`` is equal to *self*:  no "
"adjustment of date or time data is performed. Else the result is local time "
"in the timezone *tz*, representing the same UTC time as *self*:  after "
"``astz = dt.astimezone(tz)``, ``astz - astz.utcoffset()`` will have the same "
"date and time data as ``dt - dt.utcoffset()``."
msgstr ""

#: ../../library/datetime.rst:1257
msgid ""
"If you merely want to attach a time zone object *tz* to a datetime *dt* "
"without adjustment of date and time data, use ``dt.replace(tzinfo=tz)``. If "
"you merely want to remove the time zone object from an aware datetime *dt* "
"without conversion of date and time data, use ``dt.replace(tzinfo=None)``."
msgstr ""

#: ../../library/datetime.rst:1262
msgid ""
"Note that the default :meth:`tzinfo.fromutc` method can be overridden in a :"
"class:`tzinfo` subclass to affect the result returned by :meth:`astimezone`. "
"Ignoring error cases, :meth:`astimezone` acts like::"
msgstr ""
"Обратите внимание, что метод по умолчанию :meth:`tzinfo.fromutc` может быть "
"переопределен в подклассе :class:`tzinfo`, чтобы повлиять на результат, "
"возвращаемый :meth:`astimezone`. Игнорируя случаи ошибок, :meth:`astimezone` "
"действует как::"

#: ../../library/datetime.rst:1274
msgid "*tz* now can be omitted."
msgstr "*tz* теперь можно опустить."

#: ../../library/datetime.rst:1277
msgid ""
"The :meth:`astimezone` method can now be called on naive instances that are "
"presumed to represent system local time."
msgstr ""
"Метод :meth:`astimezone` теперь можно вызывать в простых экземплярах, "
"которые предположительно представляют местное время системы."

#: ../../library/datetime.rst:1284
msgid ""
"If :attr:`.tzinfo` is ``None``, returns ``None``, else returns ``self.tzinfo."
"utcoffset(self)``, and raises an exception if the latter doesn't return "
"``None`` or a :class:`timedelta` object with magnitude less than one day."
msgstr ""
"Если :attr:`.tzinfo` имеет значение None, возвращает None, else возвращает "
"self.tzinfo.utcoffset(self) и вызывает исключение, если последний не "
"возвращает `` None или объект :class:`timedelta` с магнитудой менее одного "
"дня."

#: ../../library/datetime.rst:1288 ../../library/datetime.rst:1871
#: ../../library/datetime.rst:1977 ../../library/datetime.rst:2222
#: ../../library/datetime.rst:2234 ../../library/datetime.rst:2531
msgid "The UTC offset is not restricted to a whole number of minutes."
msgstr "Смещение UTC не ограничивается целым числом минут."

#: ../../library/datetime.rst:1294
msgid ""
"If :attr:`.tzinfo` is ``None``, returns ``None``, else returns ``self.tzinfo."
"dst(self)``, and raises an exception if the latter doesn't return ``None`` "
"or a :class:`timedelta` object with magnitude less than one day."
msgstr ""
"Если :attr:`.tzinfo` имеет значение None, возвращает None, else возвращает "
"self.tzinfo.dst(self) и вызывает исключение, если последний не возвращает `` "
"None или объект :class:`timedelta` с магнитудой менее одного дня."

#: ../../library/datetime.rst:1298 ../../library/datetime.rst:1881
#: ../../library/datetime.rst:2031
msgid "The DST offset is not restricted to a whole number of minutes."
msgstr "Смещение летнего времени не ограничивается целым числом минут."

#: ../../library/datetime.rst:1304
msgid ""
"If :attr:`.tzinfo` is ``None``, returns ``None``, else returns ``self.tzinfo."
"tzname(self)``, raises an exception if the latter doesn't return ``None`` or "
"a string object,"
msgstr ""
"Если :attr:`.tzinfo` имеет значение ``None``, возвращает ``None``, else "
"возвращает ``self.tzinfo.tzname(self)``, вызывает исключение, если последний "
"не возвращает ``None `` или строковый объект,"

#: ../../library/datetime.rst:1319
msgid ""
"where ``yday = d.toordinal() - date(d.year, 1, 1).toordinal() + 1`` is the "
"day number within the current year starting with ``1`` for January 1st. The :"
"attr:`tm_isdst` flag of the result is set according to the :meth:`dst` "
"method: :attr:`.tzinfo` is ``None`` or :meth:`dst` returns ``None``, :attr:"
"`tm_isdst` is set to ``-1``; else if :meth:`dst` returns a non-zero value, :"
"attr:`tm_isdst` is set to ``1``; else :attr:`tm_isdst` is set to ``0``."
msgstr ""

#: ../../library/datetime.rst:1330
msgid ""
"If :class:`.datetime` instance *d* is naive, this is the same as ``d."
"timetuple()`` except that :attr:`tm_isdst` is forced to 0 regardless of what "
"``d.dst()`` returns. DST is never in effect for a UTC time."
msgstr ""

#: ../../library/datetime.rst:1334
msgid ""
"If *d* is aware, *d* is normalized to UTC time, by subtracting ``d."
"utcoffset()``, and a :class:`time.struct_time` for the normalized time is "
"returned. :attr:`tm_isdst` is forced to 0. Note that an :exc:`OverflowError` "
"may be raised if *d*.year was ``MINYEAR`` or ``MAXYEAR`` and UTC adjustment "
"spills over a year boundary."
msgstr ""

#: ../../library/datetime.rst:1343
msgid ""
"Because naive ``datetime`` objects are treated by many ``datetime`` methods "
"as local times, it is preferred to use aware datetimes to represent times in "
"UTC; as a result, using :meth:`datetime.utctimetuple` may give misleading "
"results. If you have a naive ``datetime`` representing UTC, use ``datetime."
"replace(tzinfo=timezone.utc)`` to make it aware, at which point you can use :"
"meth:`.datetime.timetuple`."
msgstr ""
"Поскольку наивные объекты datetime обрабатываются многими методами datetime "
"как локальное время, для представления времени в формате UTC "
"предпочтительнее использовать осведомленные объекты datetime; в результате "
"использование :meth:`datetime.utctimetuple` может дать неверные результаты. "
"Если у вас есть наивное ``datetime``, представляющее UTC, используйте "
"``datetime.replace(tzinfo=timezone.utc)``, чтобы сообщить об этом, и в этот "
"момент вы можете использовать :meth:`.datetime.timetuple`."

#: ../../library/datetime.rst:1352
msgid ""
"Return the proleptic Gregorian ordinal of the date. The same as ``self."
"date().toordinal()``."
msgstr ""
"Возвращает упреждающий григорианский порядковый номер даты. То же, что и "
"``self.date().toordinal()``."

#: ../../library/datetime.rst:1357
msgid ""
"Return POSIX timestamp corresponding to the :class:`.datetime` instance. The "
"return value is a :class:`float` similar to that returned by :func:`time."
"time`."
msgstr ""
"Возвращает временную метку POSIX, соответствующую экземпляру :class:`."
"datetime`. Возвращаемое значение — это :class:`float`, аналогичное "
"возвращаемому :func:`time.time`."

#: ../../library/datetime.rst:1361
msgid ""
"Naive :class:`.datetime` instances are assumed to represent local time and "
"this method relies on the platform C :c:func:`mktime` function to perform "
"the conversion. Since :class:`.datetime` supports wider range of values "
"than :c:func:`mktime` on many platforms, this method may raise :exc:"
"`OverflowError` for times far in the past or far in the future."
msgstr ""

#: ../../library/datetime.rst:1368
msgid ""
"For aware :class:`.datetime` instances, the return value is computed as::"
msgstr ""
"Для осведомленных экземпляров :class:`.datetime` возвращаемое значение "
"вычисляется как::"

#: ../../library/datetime.rst:1375
msgid ""
"The :meth:`timestamp` method uses the :attr:`.fold` attribute to "
"disambiguate the times during a repeated interval."
msgstr ""
"Метод :meth:`timestamp` использует атрибут :attr:`.fold` для устранения "
"неоднозначности времени в течение повторяющегося интервала."

#: ../../library/datetime.rst:1381
msgid ""
"There is no method to obtain the POSIX timestamp directly from a naive :"
"class:`.datetime` instance representing UTC time. If your application uses "
"this convention and your system timezone is not set to UTC, you can obtain "
"the POSIX timestamp by supplying ``tzinfo=timezone.utc``::"
msgstr ""

#: ../../library/datetime.rst:1389
msgid "or by calculating the timestamp directly::"
msgstr "или путем непосредственного вычисления временной метки::"

#: ../../library/datetime.rst:1395
msgid ""
"Return the day of the week as an integer, where Monday is 0 and Sunday is 6. "
"The same as ``self.date().weekday()``. See also :meth:`isoweekday`."
msgstr ""
"Возвращает день недели как целое число, где понедельник — 0, а воскресенье — "
"6. То же самое, что ``self.date().weekday()``. См. также :meth:`isoweekday`."

#: ../../library/datetime.rst:1401
msgid ""
"Return the day of the week as an integer, where Monday is 1 and Sunday is 7. "
"The same as ``self.date().isoweekday()``. See also :meth:`weekday`, :meth:"
"`isocalendar`."
msgstr ""
"Возвращает день недели как целое число, где понедельник — 1, а воскресенье — "
"7. То же, что и ``self.date().isoweekday()``. См. также :meth:`weekday`, :"
"meth:`isocalendar`."

#: ../../library/datetime.rst:1408
msgid ""
"Return a :term:`named tuple` with three components: ``year``, ``week`` and "
"``weekday``. The same as ``self.date().isocalendar()``."
msgstr ""
"Возвращает именованный кортеж с тремя компонентами: «год», «неделя» и «день "
"недели». То же, что ``self.date().isocalendar()``."

#: ../../library/datetime.rst:1414
msgid "Return a string representing the date and time in ISO 8601 format:"
msgstr "Верните строку, представляющую дату и время в формате ISO 8601:"

#: ../../library/datetime.rst:1416
msgid "``YYYY-MM-DDTHH:MM:SS.ffffff``, if :attr:`microsecond` is not 0"
msgstr "``ГГГГ-ММ-ДДТЧЧ:ММ:СС.ffffff``, если :attr:`микросекунда` не равно 0"

#: ../../library/datetime.rst:1417
msgid "``YYYY-MM-DDTHH:MM:SS``, if :attr:`microsecond` is 0"
msgstr "``ГГГГ-ММ-ДДТЧЧ:ММ:СС``, если :attr:`микросекунда` равна 0"

#: ../../library/datetime.rst:1419
msgid ""
"If :meth:`utcoffset` does not return ``None``, a string is appended, giving "
"the UTC offset:"
msgstr ""
"Если :meth:`utcoffset` не возвращает ``None``, добавляется строка, дающая "
"смещение UTC:"

#: ../../library/datetime.rst:1422
msgid ""
"``YYYY-MM-DDTHH:MM:SS.ffffff+HH:MM[:SS[.ffffff]]``, if :attr:`microsecond` "
"is not 0"
msgstr ""
"``ГГГГ-ММ-ДДТЧЧ:ММ:СС.ffffff+ЧЧ:ММ[:СС[.ffffff]]``, если :attr:"
"`микросекунда` не равно 0"

#: ../../library/datetime.rst:1424
msgid ""
"``YYYY-MM-DDTHH:MM:SS+HH:MM[:SS[.ffffff]]``,  if :attr:`microsecond` is 0"
msgstr ""
"``ГГГГ-ММ-ДДТЧЧ:ММ:СС+ЧЧ:ММ[:СС[.ffffff]]``, если :attr:`микросекунда` равна "
"0"

#: ../../library/datetime.rst:1434
msgid ""
"The optional argument *sep* (default ``'T'``) is a one-character separator, "
"placed between the date and time portions of the result. For example::"
msgstr ""
"Необязательный аргумент *sep* (по умолчанию ``'T'``) представляет собой "
"односимвольный разделитель, помещаемый между частями даты и времени "
"результата. Например::"

#: ../../library/datetime.rst:1448 ../../library/datetime.rst:1809
msgid ""
"The optional argument *timespec* specifies the number of additional "
"components of the time to include (the default is ``'auto'``). It can be one "
"of the following:"
msgstr ""
"Необязательный аргумент *timespec* указывает количество дополнительных "
"компонентов времени, которые необходимо включить (по умолчанию — "
"``'auto'``). Это может быть одно из следующих:"

#: ../../library/datetime.rst:1452 ../../library/datetime.rst:1813
msgid ""
"``'auto'``: Same as ``'seconds'`` if :attr:`microsecond` is 0, same as "
"``'microseconds'`` otherwise."
msgstr ""
"``'auto'``: То же, что ``'секунды'``, если :attr:`microсекунды` равно 0, то "
"же самое, что и ``'микросекунды'`` в противном случае."

#: ../../library/datetime.rst:1454 ../../library/datetime.rst:1815
msgid "``'hours'``: Include the :attr:`hour` in the two-digit ``HH`` format."
msgstr "``'hours'``: включите :attr:`hour` в двузначном формате ``ЧЧ``."

#: ../../library/datetime.rst:1455 ../../library/datetime.rst:1816
msgid ""
"``'minutes'``: Include :attr:`hour` and :attr:`minute` in ``HH:MM`` format."
msgstr ""
"``'minutes'``: включите :attr:`hour` и :attr:`hour` в формате ``ЧЧ:ММ``."

#: ../../library/datetime.rst:1456 ../../library/datetime.rst:1817
msgid ""
"``'seconds'``: Include :attr:`hour`, :attr:`minute`, and :attr:`second` in "
"``HH:MM:SS`` format."
msgstr ""
"``'seconds'``: включите :attr:`hour`, :attr:`minute` и :attr:`second` в "
"формате ``ЧЧ:ММ:СС``."

#: ../../library/datetime.rst:1458 ../../library/datetime.rst:1819
msgid ""
"``'milliseconds'``: Include full time, but truncate fractional second part "
"to milliseconds. ``HH:MM:SS.sss`` format."
msgstr ""
"``'milliseconds'``: Включить полное время, но усечь дробную часть секунды до "
"миллисекунд. ``HH:MM:SS.sss`` ."

#: ../../library/datetime.rst:1460 ../../library/datetime.rst:1821
msgid "``'microseconds'``: Include full time in ``HH:MM:SS.ffffff`` format."
msgstr ""
"``'microseconds'``: Включите полный рабочий день в ``HH:MM:SS.ffffff`` "
"форматировать ."

#: ../../library/datetime.rst:1464 ../../library/datetime.rst:1825
msgid "Excluded time components are truncated, not rounded."
msgstr "Исключенные компоненты времени усекаются, а не округляются."

#: ../../library/datetime.rst:1466
msgid ":exc:`ValueError` will be raised on an invalid *timespec* argument::"
msgstr ":exc:`ValueError` будет вызван недопустимым аргументом *timespec*::"

#: ../../library/datetime.rst:1476 ../../library/datetime.rst:1840
msgid "Added the *timespec* argument."
msgstr ""

#: ../../library/datetime.rst:1482
msgid ""
"For a :class:`.datetime` instance *d*, ``str(d)`` is equivalent to ``d."
"isoformat(' ')``."
msgstr ""
"Для экземпляра :class:`.datetime` *d* ``str(d)`` эквивалентен ``d."
"isoformat(' ')``."

#: ../../library/datetime.rst:1488
msgid "Return a string representing the date and time::"
msgstr "Возвращает строку, представляющую дату и время::"

#: ../../library/datetime.rst:1494
msgid ""
"The output string will *not* include time zone information, regardless of "
"whether the input is aware or naive."
msgstr ""
"Выходная строка *не* будет включать информацию о часовом поясе, независимо "
"от того, являются ли входные данные осознанными или наивными."

#: ../../library/datetime.rst:1501
msgid ""
"on platforms where the native C :c:func:`ctime` function (which :func:`time."
"ctime` invokes, but which :meth:`datetime.ctime` does not invoke) conforms "
"to the C standard."
msgstr ""
"на платформах, где встроенная функция C :c:func:`ctime` (которая вызывается :"
"func:`time.ctime`, но не вызывается :meth:`datetime.ctime`) соответствует "
"стандарту C."

#: ../../library/datetime.rst:1507
msgid ""
"Return a string representing the date and time, controlled by an explicit "
"format string. For a complete list of formatting directives, see :ref:"
"`strftime-strptime-behavior`."
msgstr ""

#: ../../library/datetime.rst:1514
msgid ""
"Same as :meth:`.datetime.strftime`. This makes it possible to specify a "
"format string for a :class:`.datetime` object in :ref:`formatted string "
"literals <f-strings>` and when using :meth:`str.format`. For a complete list "
"of formatting directives, see :ref:`strftime-strptime-behavior`."
msgstr ""

#: ../../library/datetime.rst:1521
msgid "Examples of Usage: :class:`.datetime`"
msgstr "Примеры использования: :class:`.datetime`"

#: ../../library/datetime.rst:1523
msgid "Examples of working with :class:`~datetime.datetime` objects:"
msgstr ""

#: ../../library/datetime.rst:1576
msgid ""
"The example below defines a :class:`tzinfo` subclass capturing time zone "
"information for Kabul, Afghanistan, which used +4 UTC until 1945 and then "
"+4:30 UTC thereafter::"
msgstr ""
"В приведенном ниже примере определяется подкласс :class:`tzinfo`, собирающий "
"информацию о часовом поясе для Кабула, Афганистан, который использовал +4 "
"UTC до 1945 года, а затем +4:30 UTC после этого::"

#: ../../library/datetime.rst:1623
msgid "Usage of ``KabulTz`` from above::"
msgstr "Использование ``KabulTz`` сверху::"

#: ../../library/datetime.rst:1649
msgid ":class:`.time` Objects"
msgstr "Объекты :class:`.time`"

#: ../../library/datetime.rst:1651
msgid ""
"A :class:`time` object represents a (local) time of day, independent of any "
"particular day, and subject to adjustment via a :class:`tzinfo` object."
msgstr ""

#: ../../library/datetime.rst:1656
msgid ""
"All arguments are optional. *tzinfo* may be ``None``, or an instance of a :"
"class:`tzinfo` subclass. The remaining arguments must be integers in the "
"following ranges:"
msgstr ""
"Все аргументы являются необязательными. *tzinfo* может иметь значение None "
"или быть экземпляром подкласса :class:`tzinfo`. Остальные аргументы должны "
"быть целыми числами в следующих диапазонах:"

#: ../../library/datetime.rst:1666
msgid ""
"If an argument outside those ranges is given, :exc:`ValueError` is raised. "
"All default to ``0`` except *tzinfo*, which defaults to :const:`None`."
msgstr ""

#: ../../library/datetime.rst:1674
msgid "The earliest representable :class:`.time`, ``time(0, 0, 0, 0)``."
msgstr "Самый ранний представимый :class:`.time`, ``time(0, 0, 0, 0)``."

#: ../../library/datetime.rst:1679
msgid "The latest representable :class:`.time`, ``time(23, 59, 59, 999999)``."
msgstr "Последний представимый :class:`.time`, ``time(23, 59, 59, 999999)``."

#: ../../library/datetime.rst:1684
msgid ""
"The smallest possible difference between non-equal :class:`.time` objects, "
"``timedelta(microseconds=1)``, although note that arithmetic on :class:`."
"time` objects is not supported."
msgstr ""
"Наименьшая возможная разница между неравными объектами :class:`.time`, "
"``timedelta(microсекунды=1)``, хотя обратите внимание, что арифметика на "
"объектах :class:`.time` не поддерживается."

#: ../../library/datetime.rst:1713
msgid ""
"The object passed as the tzinfo argument to the :class:`.time` constructor, "
"or ``None`` if none was passed."
msgstr ""
"Объект передается в качестве аргумента tzinfo конструктору :class:`.time` "
"или ``None``, если ничего не было передано."

#: ../../library/datetime.rst:1727
msgid ""
":class:`.time` objects support comparison of :class:`.time` to :class:`."
"time`, where *a* is considered less than *b* when *a* precedes *b* in time. "
"If one comparand is naive and the other is aware, :exc:`TypeError` is raised "
"if an order comparison is attempted. For equality comparisons, naive "
"instances are never equal to aware instances."
msgstr ""

#: ../../library/datetime.rst:1733
msgid ""
"If both comparands are aware, and have the same :attr:`~time.tzinfo` "
"attribute, the common :attr:`~time.tzinfo` attribute is ignored and the base "
"times are compared. If both comparands are aware and have different :attr:"
"`~time.tzinfo` attributes, the comparands are first adjusted by subtracting "
"their UTC offsets (obtained from ``self.utcoffset()``). In order to stop "
"mixed-type comparisons from falling back to the default comparison by object "
"address, when a :class:`.time` object is compared to an object of a "
"different type, :exc:`TypeError` is raised unless the comparison is ``==`` "
"or ``!=``. The latter cases return :const:`False` or :const:`True`, "
"respectively."
msgstr ""

#: ../../library/datetime.rst:1743
msgid ""
"Equality comparisons between aware and naive :class:`~datetime.time` "
"instances don't raise :exc:`TypeError`."
msgstr ""

#: ../../library/datetime.rst:1747
msgid ""
"In Boolean contexts, a :class:`.time` object is always considered to be true."
msgstr ""
"В логическом контексте объект :class:`.time` всегда считается истинным."

#: ../../library/datetime.rst:1749
msgid ""
"Before Python 3.5, a :class:`.time` object was considered to be false if it "
"represented midnight in UTC. This behavior was considered obscure and error-"
"prone and has been removed in Python 3.5. See :issue:`13936` for full "
"details."
msgstr ""
"До Python 3.5 объект :class:`.time` считался ложным, если он представлял "
"полночь в формате UTC. Такое поведение считалось непонятным и подверженным "
"ошибкам, и оно было удалено в Python 3.5. Подробности смотрите в :issue:"
"`13936`."

#: ../../library/datetime.rst:1756
msgid "Other constructor:"
msgstr "Другой конструктор:"

#: ../../library/datetime.rst:1760
msgid ""
"Return a :class:`.time` corresponding to a *time_string* in one of the "
"formats emitted by :meth:`time.isoformat`. Specifically, this function "
"supports strings in the format:"
msgstr ""

#: ../../library/datetime.rst:1770
msgid ""
"This does *not* support parsing arbitrary ISO 8601 strings. It is only "
"intended as the inverse operation of :meth:`time.isoformat`."
msgstr ""

#: ../../library/datetime.rst:1791
msgid ""
"Return a :class:`.time` with the same value, except for those attributes "
"given new values by whichever keyword arguments are specified. Note that "
"``tzinfo=None`` can be specified to create a naive :class:`.time` from an "
"aware :class:`.time`, without conversion of the time data."
msgstr ""
"Возвращает :class:`.time` с тем же значением, за исключением тех атрибутов, "
"которым присвоены новые значения в зависимости от того, какие аргументы "
"ключевого слова указаны. Обратите внимание, что ``tzinfo=None`` может быть "
"указан для создания простого :class:`.time` из известного :class:`.time` без "
"преобразования данных времени."

#: ../../library/datetime.rst:1802
msgid "Return a string representing the time in ISO 8601 format, one of:"
msgstr "Возвращает строку, представляющую время в формате ISO 8601, один из:"

#: ../../library/datetime.rst:1804
msgid "``HH:MM:SS.ffffff``, if :attr:`microsecond` is not 0"
msgstr "``HH:MM:SS.ffffff``, если :attr:`microsecond` не равен 0"

#: ../../library/datetime.rst:1805
msgid "``HH:MM:SS``, if :attr:`microsecond` is 0"
msgstr "``HH:MM:SS``, если :attr:`microsecond` равен 0"

#: ../../library/datetime.rst:1806
msgid ""
"``HH:MM:SS.ffffff+HH:MM[:SS[.ffffff]]``, if :meth:`utcoffset` does not "
"return ``None``"
msgstr ""
"``HH:MM:SS.ffffff+HH:MM[:SS[.ffffff]]``, если :meth:`utcoffset` не "
"возвращает ``None``"

#: ../../library/datetime.rst:1807
msgid ""
"``HH:MM:SS+HH:MM[:SS[.ffffff]]``, if :attr:`microsecond` is 0 and :meth:"
"`utcoffset` does not return ``None``"
msgstr ""
"``HH:MM:SS+HH:MM[:SS[.ffffff]]``, если :attr:`microsecond` равно 0, а :meth:"
"`utcoffset` не возвращает ``None``"

#: ../../library/datetime.rst:1827
msgid ":exc:`ValueError` will be raised on an invalid *timespec* argument."
msgstr ":exc:`ValueError` будет вызван недопустимым аргументом *timespec*."

#: ../../library/datetime.rst:1846
msgid "For a time *t*, ``str(t)`` is equivalent to ``t.isoformat()``."
msgstr "В течение времени *t* ``str(t)`` эквивалентно ``t.isoformat()``."

#: ../../library/datetime.rst:1851
msgid ""
"Return a string representing the time, controlled by an explicit format "
"string. For a complete list of formatting directives, see :ref:`strftime-"
"strptime-behavior`."
msgstr ""

#: ../../library/datetime.rst:1858
msgid ""
"Same as :meth:`.time.strftime`. This makes it possible to specify a format "
"string for a :class:`.time` object in :ref:`formatted string literals <f-"
"strings>` and when using :meth:`str.format`. For a complete list of "
"formatting directives, see :ref:`strftime-strptime-behavior`."
msgstr ""

#: ../../library/datetime.rst:1867
msgid ""
"If :attr:`.tzinfo` is ``None``, returns ``None``, else returns ``self.tzinfo."
"utcoffset(None)``, and raises an exception if the latter doesn't return "
"``None`` or a :class:`timedelta` object with magnitude less than one day."
msgstr ""
"Если :attr:`.tzinfo` имеет значение None, возвращает None, else возвращает "
"self.tzinfo.utcoffset(None) и вызывает исключение, если последний не "
"возвращает `` None или объект :class:`timedelta` с магнитудой менее одного "
"дня."

#: ../../library/datetime.rst:1877
msgid ""
"If :attr:`.tzinfo` is ``None``, returns ``None``, else returns ``self.tzinfo."
"dst(None)``, and raises an exception if the latter doesn't return ``None``, "
"or a :class:`timedelta` object with magnitude less than one day."
msgstr ""
"Если :attr:`.tzinfo` имеет значение None, возвращает None, else возвращает "
"self.tzinfo.dst(None) и вызывает исключение, если последний не возвращает `` "
"None`` или объект :class:`timedelta` с магнитудой менее одного дня."

#: ../../library/datetime.rst:1886
msgid ""
"If :attr:`.tzinfo` is ``None``, returns ``None``, else returns ``self.tzinfo."
"tzname(None)``, or raises an exception if the latter doesn't return ``None`` "
"or a string object."
msgstr ""
"Если :attr:`.tzinfo` имеет значение None, возвращает None, else возвращает "
"self.tzinfo.tzname(None) или вызывает исключение, если последний не "
"возвращает `` None`` или строковый объект."

#: ../../library/datetime.rst:1891
msgid "Examples of Usage: :class:`.time`"
msgstr "Примеры использования: :class:`.time`"

#: ../../library/datetime.rst:1893
msgid "Examples of working with a :class:`.time` object::"
msgstr "Примеры работы с объектом :class:`.time`::"

#: ../../library/datetime.rst:1924
msgid ":class:`tzinfo` Objects"
msgstr "Объекты :class:`tzinfo`"

#: ../../library/datetime.rst:1928
msgid ""
"This is an abstract base class, meaning that this class should not be "
"instantiated directly.  Define a subclass of :class:`tzinfo` to capture "
"information about a particular time zone."
msgstr ""
"Это абстрактный базовый класс, а это означает, что экземпляр этого класса не "
"должен создаваться напрямую. Определите подкласс :class:`tzinfo` для сбора "
"информации об определенном часовом поясе."

#: ../../library/datetime.rst:1932
msgid ""
"An instance of (a concrete subclass of) :class:`tzinfo` can be passed to the "
"constructors for :class:`.datetime` and :class:`.time` objects. The latter "
"objects view their attributes as being in local time, and the :class:"
"`tzinfo` object supports methods revealing offset of local time from UTC, "
"the name of the time zone, and DST offset, all relative to a date or time "
"object passed to them."
msgstr ""
"Экземпляр (конкретного подкласса) :class:`tzinfo` может быть передан "
"конструкторам для объектов :class:`.datetime` и :class:`.time`. Последние "
"объекты рассматривают свои атрибуты как относящиеся к местному времени, а "
"объект :class:`tzinfo` поддерживает методы, показывающие смещение местного "
"времени от UTC, названия часового пояса и смещения летнего времени, все "
"относительно объекта даты или времени. перешел к ним."

#: ../../library/datetime.rst:1938
msgid ""
"You need to derive a concrete subclass, and (at least) supply "
"implementations of the standard :class:`tzinfo` methods needed by the :class:"
"`.datetime` methods you use. The :mod:`datetime` module provides :class:"
"`timezone`, a simple concrete subclass of :class:`tzinfo` which can "
"represent timezones with fixed offset from UTC such as UTC itself or North "
"American EST and EDT."
msgstr ""

#: ../../library/datetime.rst:1945
msgid ""
"Special requirement for pickling:  A :class:`tzinfo` subclass must have an :"
"meth:`__init__` method that can be called with no arguments, otherwise it "
"can be pickled but possibly not unpickled again. This is a technical "
"requirement that may be relaxed in the future."
msgstr ""

#: ../../library/datetime.rst:1950
msgid ""
"A concrete subclass of :class:`tzinfo` may need to implement the following "
"methods. Exactly which methods are needed depends on the uses made of aware :"
"mod:`datetime` objects. If in doubt, simply implement all of them."
msgstr ""

#: ../../library/datetime.rst:1957
msgid ""
"Return offset of local time from UTC, as a :class:`timedelta` object that is "
"positive east of UTC. If local time is west of UTC, this should be negative."
msgstr ""
"Возвращает смещение местного времени от UTC в виде объекта :class:"
"`timedelta`, положительного к востоку от UTC. Если местное время находится к "
"западу от UTC, оно должно быть отрицательным."

#: ../../library/datetime.rst:1960
msgid ""
"This represents the *total* offset from UTC; for example, if a :class:"
"`tzinfo` object represents both time zone and DST adjustments, :meth:"
"`utcoffset` should return their sum. If the UTC offset isn't known, return "
"``None``. Else the value returned must be a :class:`timedelta` object "
"strictly between ``-timedelta(hours=24)`` and ``timedelta(hours=24)`` (the "
"magnitude of the offset must be less than one day). Most implementations of :"
"meth:`utcoffset` will probably look like one of these two::"
msgstr ""
"Это представляет собой *общее* смещение от UTC; например, если объект :class:"
"`tzinfo` представляет как часовой пояс, так и настройки летнего времени, :"
"meth:`utcoffset` должен вернуть их сумму. Если смещение UTC неизвестно, "
"верните None. В противном случае возвращаемое значение должно быть объектом :"
"class:`timedelta` строго между ``-timedelta(hours=24)`` и "
"``timedelta(hours=24)`` (величина смещения должна быть меньше одного "
"дня). ). Большинство реализаций :meth:`utcoffset`, вероятно, будут выглядеть "
"как одна из этих двух::"

#: ../../library/datetime.rst:1971
msgid ""
"If :meth:`utcoffset` does not return ``None``, :meth:`dst` should not return "
"``None`` either."
msgstr ""
"Если :meth:`utcoffset` не возвращает ``None``, :meth:`dst` также не должен "
"возвращать ``None``."

#: ../../library/datetime.rst:1974
msgid ""
"The default implementation of :meth:`utcoffset` raises :exc:"
"`NotImplementedError`."
msgstr ""
"Реализация :meth:`utcoffset` по умолчанию вызывает :exc:"
"`NotImplementedError`."

#: ../../library/datetime.rst:1983
msgid ""
"Return the daylight saving time (DST) adjustment, as a :class:`timedelta` "
"object or ``None`` if DST information isn't known."
msgstr ""
"Возвращает настройку летнего времени (DST) в виде объекта timedelta или "
"None, если информация о летнем времени неизвестна."

#: ../../library/datetime.rst:1987
msgid ""
"Return ``timedelta(0)`` if DST is not in effect. If DST is in effect, return "
"the offset as a :class:`timedelta` object (see :meth:`utcoffset` for "
"details). Note that DST offset, if applicable, has already been added to the "
"UTC offset returned by :meth:`utcoffset`, so there's no need to consult :"
"meth:`dst` unless you're interested in obtaining DST info separately. For "
"example, :meth:`datetime.timetuple` calls its :attr:`~.datetime.tzinfo` "
"attribute's :meth:`dst` method to determine how the :attr:`tm_isdst` flag "
"should be set, and :meth:`tzinfo.fromutc` calls :meth:`dst` to account for "
"DST changes when crossing time zones."
msgstr ""

#: ../../library/datetime.rst:1997
msgid ""
"An instance *tz* of a :class:`tzinfo` subclass that models both standard and "
"daylight times must be consistent in this sense:"
msgstr ""
"Экземпляр *tz* подкласса :class:`tzinfo`, который моделирует как "
"стандартное, так и летнее время, должен быть согласованным в этом смысле:"

#: ../../library/datetime.rst:2000
msgid "``tz.utcoffset(dt) - tz.dst(dt)``"
msgstr "``tz.utcoffset(dt) - tz.dst(dt)``"

#: ../../library/datetime.rst:2002
msgid ""
"must return the same result for every :class:`.datetime` *dt* with ``dt."
"tzinfo == tz``  For sane :class:`tzinfo` subclasses, this expression yields "
"the time zone's \"standard offset\", which should not depend on the date or "
"the time, but only on geographic location. The implementation of :meth:"
"`datetime.astimezone` relies on this, but cannot detect violations; it's the "
"programmer's responsibility to ensure it. If a :class:`tzinfo` subclass "
"cannot guarantee this, it may be able to override the default implementation "
"of :meth:`tzinfo.fromutc` to work correctly with :meth:`astimezone` "
"regardless."
msgstr ""

#: ../../library/datetime.rst:2011
msgid ""
"Most implementations of :meth:`dst` will probably look like one of these "
"two::"
msgstr ""
"Большинство реализаций :meth:`dst`, вероятно, будут выглядеть как одна из "
"этих двух::"

#: ../../library/datetime.rst:2017
msgid "or::"
msgstr "или::"

#: ../../library/datetime.rst:2029
msgid ""
"The default implementation of :meth:`dst` raises :exc:`NotImplementedError`."
msgstr ""
"Реализация :meth:`dst` по умолчанию вызывает :exc:`NotImplementedError`."

#: ../../library/datetime.rst:2037
msgid ""
"Return the time zone name corresponding to the :class:`.datetime` object "
"*dt*, as a string. Nothing about string names is defined by the :mod:"
"`datetime` module, and there's no requirement that it mean anything in "
"particular. For example, \"GMT\", \"UTC\", \"-500\", \"-5:00\", \"EDT\", "
"\"US/Eastern\", \"America/New York\" are all valid replies. Return ``None`` "
"if a string name isn't known. Note that this is a method rather than a fixed "
"string primarily because some :class:`tzinfo` subclasses will wish to return "
"different names depending on the specific value of *dt* passed, especially "
"if the :class:`tzinfo` class is accounting for daylight time."
msgstr ""

#: ../../library/datetime.rst:2047
msgid ""
"The default implementation of :meth:`tzname` raises :exc:"
"`NotImplementedError`."
msgstr ""
"Реализация :meth:`tzname` по умолчанию вызывает :exc:`NotImplementedError`."

#: ../../library/datetime.rst:2050
msgid ""
"These methods are called by a :class:`.datetime` or :class:`.time` object, "
"in response to their methods of the same names. A :class:`.datetime` object "
"passes itself as the argument, and a :class:`.time` object passes ``None`` "
"as the argument. A :class:`tzinfo` subclass's methods should therefore be "
"prepared to accept a *dt* argument of ``None``, or of class :class:`."
"datetime`."
msgstr ""
"Эти методы вызываются объектом :class:`.datetime` или :class:`.time` в ответ "
"на их одноименные методы. Объект :class:`.datetime` передает себя в качестве "
"аргумента, а объект :class:`.time` передает в качестве аргумента ``None``. "
"Поэтому методы подкласса :class:`tzinfo` должны быть готовы принять аргумент "
"*dt* со значением ``None`` или класса :class:`.datetime`."

#: ../../library/datetime.rst:2056
msgid ""
"When ``None`` is passed, it's up to the class designer to decide the best "
"response. For example, returning ``None`` is appropriate if the class wishes "
"to say that time objects don't participate in the :class:`tzinfo` protocols. "
"It may be more useful for ``utcoffset(None)`` to return the standard UTC "
"offset, as there is no other convention for discovering the standard offset."
msgstr ""
"Когда передается None, разработчик класса должен выбрать лучший ответ. "
"Например, возврат None подходит, если класс желает сообщить, что объекты "
"времени не участвуют в протоколах :class:`tzinfo`. Может быть более полезно, "
"чтобы utcoffset(None) возвращал стандартное смещение UTC, поскольку не "
"существует другого соглашения для обнаружения стандартного смещения."

#: ../../library/datetime.rst:2062
msgid ""
"When a :class:`.datetime` object is passed in response to a :class:`."
"datetime` method, ``dt.tzinfo`` is the same object as *self*. :class:"
"`tzinfo` methods can rely on this, unless user code calls :class:`tzinfo` "
"methods directly. The intent is that the :class:`tzinfo` methods interpret "
"*dt* as being in local time, and not need worry about objects in other "
"timezones."
msgstr ""

#: ../../library/datetime.rst:2068
msgid ""
"There is one more :class:`tzinfo` method that a subclass may wish to "
"override:"
msgstr ""
"Существует еще один метод :class:`tzinfo`, который подкласс может "
"переопределить:"

#: ../../library/datetime.rst:2073
msgid ""
"This is called from the default :class:`datetime.astimezone()` "
"implementation. When called from that, ``dt.tzinfo`` is *self*, and *dt*'s "
"date and time data are to be viewed as expressing a UTC time. The purpose "
"of :meth:`fromutc` is to adjust the date and time data, returning an "
"equivalent datetime in *self*'s local time."
msgstr ""

#: ../../library/datetime.rst:2079
msgid ""
"Most :class:`tzinfo` subclasses should be able to inherit the default :meth:"
"`fromutc` implementation without problems. It's strong enough to handle "
"fixed-offset time zones, and time zones accounting for both standard and "
"daylight time, and the latter even if the DST transition times differ in "
"different years. An example of a time zone the default :meth:`fromutc` "
"implementation may not handle correctly in all cases is one where the "
"standard offset (from UTC) depends on the specific date and time passed, "
"which can happen for political reasons. The default implementations of :meth:"
"`astimezone` and :meth:`fromutc` may not produce the result you want if the "
"result is one of the hours straddling the moment the standard offset changes."
msgstr ""

#: ../../library/datetime.rst:2090
msgid ""
"Skipping code for error cases, the default :meth:`fromutc` implementation "
"acts like::"
msgstr ""
"Пропуская код в случае ошибок, реализация :meth:`fromutc` по умолчанию "
"действует следующим образом::"

#: ../../library/datetime.rst:2108
msgid ""
"In the following :download:`tzinfo_examples.py <../includes/tzinfo_examples."
"py>` file there are some examples of :class:`tzinfo` classes:"
msgstr ""
"В следующем файле :download:`tzinfo_examples.py <../includes/tzinfo_examples."
"py>` приведены несколько примеров классов :class:`tzinfo`:"

#: ../../library/datetime.rst:2114
msgid ""
"Note that there are unavoidable subtleties twice per year in a :class:"
"`tzinfo` subclass accounting for both standard and daylight time, at the DST "
"transition points. For concreteness, consider US Eastern (UTC -0500), where "
"EDT begins the minute after 1:59 (EST) on the second Sunday in March, and "
"ends the minute after 1:59 (EDT) on the first Sunday in November::"
msgstr ""
"Обратите внимание, что дважды в год в подклассе :class:`tzinfo` возникают "
"неизбежные тонкости, учитывающие как стандартное, так и летнее время, в "
"точках перехода на летнее время. Для конкретики рассмотрим восточную часть "
"США (UTC -0500), где EDT начинается на минуте после 1:59 (EST) во второе "
"воскресенье марта и заканчивается на минуте после 1:59 (EDT) в первое "
"воскресенье ноября:"

#: ../../library/datetime.rst:2128
msgid ""
"When DST starts (the \"start\" line), the local wall clock leaps from 1:59 "
"to 3:00. A wall time of the form 2:MM doesn't really make sense on that day, "
"so ``astimezone(Eastern)`` won't deliver a result with ``hour == 2`` on the "
"day DST begins. For example, at the Spring forward transition of 2016, we "
"get::"
msgstr ""
"Когда начинается летнее время (линия «старт»), местные настенные часы "
"переходят с 1:59 на 3:00. Настенное время в форме 2:MM на самом деле не "
"имеет смысла в этот день, поэтому astimezone(eastern)`` не выдаст результат "
"с ``hour == 2`` в день начала летнего времени. Например, при переходе Spring "
"вперед 2016 года мы получаем:"

#: ../../library/datetime.rst:2147
msgid ""
"When DST ends (the \"end\" line), there's a potentially worse problem: "
"there's an hour that can't be spelled unambiguously in local wall time: the "
"last hour of daylight time. In Eastern, that's times of the form 5:MM UTC on "
"the day daylight time ends. The local wall clock leaps from 1:59 (daylight "
"time) back to 1:00 (standard time) again. Local times of the form 1:MM are "
"ambiguous. :meth:`astimezone` mimics the local clock's behavior by mapping "
"two adjacent UTC hours into the same local hour then. In the Eastern "
"example, UTC times of the form 5:MM and 6:MM both map to 1:MM when converted "
"to Eastern, but earlier times have the :attr:`~datetime.fold` attribute set "
"to 0 and the later times have it set to 1. For example, at the Fall back "
"transition of 2016, we get::"
msgstr ""

#: ../../library/datetime.rst:2169
msgid ""
"Note that the :class:`.datetime` instances that differ only by the value of "
"the :attr:`~datetime.fold` attribute are considered equal in comparisons."
msgstr ""

#: ../../library/datetime.rst:2172
msgid ""
"Applications that can't bear wall-time ambiguities should explicitly check "
"the value of the :attr:`~datetime.fold` attribute or avoid using hybrid :"
"class:`tzinfo` subclasses; there are no ambiguities when using :class:"
"`timezone`, or any other fixed-offset :class:`tzinfo` subclass (such as a "
"class representing only EST (fixed offset -5 hours), or only EDT (fixed "
"offset -4 hours))."
msgstr ""

#: ../../library/datetime.rst:2186
msgid ":mod:`zoneinfo`"
msgstr ":mod:`zoneinfo`"

#: ../../library/datetime.rst:2181
msgid ""
"The :mod:`datetime` module has a basic :class:`timezone` class (for handling "
"arbitrary fixed offsets from UTC) and its :attr:`timezone.utc` attribute (a "
"UTC timezone instance)."
msgstr ""

#: ../../library/datetime.rst:2185
msgid ""
"``zoneinfo`` brings the *IANA timezone database* (also known as the Olson "
"database) to Python, and its usage is recommended."
msgstr ""

#: ../../library/datetime.rst:2192
msgid "`IANA timezone database <https://www.iana.org/time-zones>`_"
msgstr ""

#: ../../library/datetime.rst:2189
msgid ""
"The Time Zone Database (often called tz, tzdata or zoneinfo) contains code "
"and data that represent the history of local time for many representative "
"locations around the globe. It is updated periodically to reflect changes "
"made by political bodies to time zone boundaries, UTC offsets, and daylight-"
"saving rules."
msgstr ""
"База данных часовых поясов (часто называемая tz, tzdata илиzoneinfo) "
"содержит код и данные, которые представляют историю местного времени для "
"многих репрезентативных мест по всему миру. Он периодически обновляется, "
"чтобы отражать изменения, внесенные политическими органами в границы часовых "
"поясов, смещения UTC и правила перехода на летнее время."

#: ../../library/datetime.rst:2199
msgid ":class:`timezone` Objects"
msgstr "Объекты :class:`timezone`"

#: ../../library/datetime.rst:2201
msgid ""
"The :class:`timezone` class is a subclass of :class:`tzinfo`, each instance "
"of which represents a timezone defined by a fixed offset from UTC."
msgstr ""

#: ../../library/datetime.rst:2205
msgid ""
"Objects of this class cannot be used to represent timezone information in "
"the locations where different offsets are used in different days of the year "
"or where historical changes have been made to civil time."
msgstr ""

#: ../../library/datetime.rst:2212
msgid ""
"The *offset* argument must be specified as a :class:`timedelta` object "
"representing the difference between the local time and UTC. It must be "
"strictly between ``-timedelta(hours=24)`` and ``timedelta(hours=24)``, "
"otherwise :exc:`ValueError` is raised."
msgstr ""
"Аргумент *offset* должен быть указан как объект :class:`timedelta`, "
"представляющий разницу между местным временем и временем UTC. Оно должно "
"находиться строго между ``-timedelta(hours=24)`` и ``timedelta(hours=24)``, "
"в противном случае выдается :exc:`ValueError`."

#: ../../library/datetime.rst:2217
msgid ""
"The *name* argument is optional. If specified it must be a string that will "
"be used as the value returned by the :meth:`datetime.tzname` method."
msgstr ""
"Аргумент *имя* является необязательным. Если указано, это должна быть "
"строка, которая будет использоваться в качестве значения, возвращаемого "
"методом :meth:`datetime.tzname`."

#: ../../library/datetime.rst:2228 ../../library/datetime.rst:2239
msgid ""
"Return the fixed value specified when the :class:`timezone` instance is "
"constructed."
msgstr ""
"Возвращает фиксированное значение, указанное при создании экземпляра :class:"
"`timezone`."

#: ../../library/datetime.rst:2231
msgid ""
"The *dt* argument is ignored. The return value is a :class:`timedelta` "
"instance equal to the difference between the local time and UTC."
msgstr ""
"Аргумент *dt* игнорируется. Возвращаемое значение — это экземпляр :class:"
"`timedelta`, равный разнице между местным временем и временем UTC."

#: ../../library/datetime.rst:2242
msgid ""
"If *name* is not provided in the constructor, the name returned by "
"``tzname(dt)`` is generated from the value of the ``offset`` as follows. If "
"*offset* is ``timedelta(0)``, the name is \"UTC\", otherwise it is a string "
"in the format ``UTC±HH:MM``, where ± is the sign of ``offset``, HH and MM "
"are two digits of ``offset.hours`` and ``offset.minutes`` respectively."
msgstr ""
"Если *name* не указано в конструкторе, имя, возвращаемое ``tzname(dt)``, "
"генерируется из значения ``offset`` следующим образом. Если *offset* равно "
"``timedelta(0)``, то имя — \"UTC\", в противном случае это строка в формате "
"``UTC±HH:MM``, где ± — знак ``offset`` , ЧЧ и ММ — это две цифры «смещение."
"часы» и «смещение.минуты» соответственно."

#: ../../library/datetime.rst:2248
msgid ""
"Name generated from ``offset=timedelta(0)`` is now plain ``'UTC'``, not "
"``'UTC+00:00'``."
msgstr ""
"Имя, сгенерированное из ``offset=timedelta(0)``, теперь имеет вид ``'UTC'``, "
"а не ``'UTC+00:00'``."

#: ../../library/datetime.rst:2255
msgid "Always returns ``None``."
msgstr "Всегда возвращает ``None``."

#: ../../library/datetime.rst:2259
msgid ""
"Return ``dt + offset``. The *dt* argument must be an aware :class:`."
"datetime` instance, with ``tzinfo`` set to ``self``."
msgstr ""
"Верните ``dt + смещение``. Аргумент *dt* должен быть осведомленным "
"экземпляром :class:`.datetime` с параметром ``tzinfo``, установленным в "
"``self``."

#: ../../library/datetime.rst:2266
msgid "The UTC timezone, ``timezone(timedelta(0))``."
msgstr ""

#: ../../library/datetime.rst:2275
msgid ":meth:`strftime` and :meth:`strptime` Behavior"
msgstr ""

#: ../../library/datetime.rst:2277
msgid ""
":class:`date`, :class:`.datetime`, and :class:`.time` objects all support a "
"``strftime(format)`` method, to create a string representing the time under "
"the control of an explicit format string."
msgstr ""
"Объекты :class:`date`, :class:`.datetime` и :class:`.time` поддерживают "
"метод ``strftime(format)`` для создания строки, представляющей время под "
"контролем явного строка формата."

#: ../../library/datetime.rst:2281
msgid ""
"Conversely, the :meth:`datetime.strptime` class method creates a :class:`."
"datetime` object from a string representing a date and time and a "
"corresponding format string."
msgstr ""
"И наоборот, метод класса :meth:`datetime.strptime` создает объект :class:`."
"datetime` из строки, представляющей дату и время, и соответствующей строки "
"формата."

#: ../../library/datetime.rst:2285
msgid ""
"The table below provides a high-level comparison of :meth:`strftime` versus :"
"meth:`strptime`:"
msgstr ""

#: ../../library/datetime.rst:2289
msgid "``strftime``"
msgstr "``strftime``"

#: ../../library/datetime.rst:2289
msgid "``strptime``"
msgstr "``strptime``"

#: ../../library/datetime.rst:2291
msgid "Usage"
msgstr "Использование"

#: ../../library/datetime.rst:2291
msgid "Convert object to a string according to a given format"
msgstr ""
"Преобразовать объект в строку в соответствии с заданным форматированием"

#: ../../library/datetime.rst:2291
msgid ""
"Parse a string into a :class:`.datetime` object given a corresponding format"
msgstr ""
"Разобрать строку в объект :class:`.datetime` с учетом соответствующего "
"формата."

#: ../../library/datetime.rst:2293
msgid "Type of method"
msgstr "Тип метода"

#: ../../library/datetime.rst:2293
msgid "Instance method"
msgstr "Метод экземпляра"

#: ../../library/datetime.rst:2293
msgid "Class method"
msgstr "Метод класса"

#: ../../library/datetime.rst:2295
msgid "Method of"
msgstr "Метод"

#: ../../library/datetime.rst:2295
msgid ":class:`date`; :class:`.datetime`; :class:`.time`"
msgstr ":class:`date`; :class:`.datetime`; :class:`.time`"

#: ../../library/datetime.rst:2295
msgid ":class:`.datetime`"
msgstr ":class:`.datetime`"

#: ../../library/datetime.rst:2297
msgid "Signature"
msgstr "Подпись"

#: ../../library/datetime.rst:2297
msgid "``strftime(format)``"
msgstr "``strftime(format)``"

#: ../../library/datetime.rst:2297
msgid "``strptime(date_string, format)``"
msgstr "``strptime(date_string, format)``"

#: ../../library/datetime.rst:2302
msgid ":meth:`strftime` and :meth:`strptime` Format Codes"
msgstr ""

#: ../../library/datetime.rst:2304
msgid ""
"The following is a list of all the format codes that the 1989 C standard "
"requires, and these work on all platforms with a standard C implementation."
msgstr ""
"Ниже приведен список всех кодов формата, которые требуются в стандарте C "
"1989 года, и они работают на всех платформах со стандартной реализацией C."

#: ../../library/datetime.rst:2308 ../../library/datetime.rst:2411
msgid "Directive"
msgstr "Директива"

#: ../../library/datetime.rst:2308 ../../library/datetime.rst:2411
msgid "Meaning"
msgstr "Значение"

#: ../../library/datetime.rst:2308 ../../library/datetime.rst:2411
msgid "Example"
msgstr "Пример"

#: ../../library/datetime.rst:2308 ../../library/datetime.rst:2411
msgid "Notes"
msgstr "Примечания"

#: ../../library/datetime.rst:2310
msgid "``%a``"
msgstr "``%a``"

#: ../../library/datetime.rst:2310
msgid "Weekday as locale's abbreviated name."
msgstr "День недели - сокращенное название региона."

#: ../../library/datetime.rst:0
msgid "Sun, Mon, ..., Sat (en_US);"
msgstr "Sun, Mon, ..., Sat (en_US);"

#: ../../library/datetime.rst:0
msgid "So, Mo, ..., Sa (de_DE)"
msgstr "So, Mo, ..., Sa (de_DE)"

#: ../../library/datetime.rst:2315
msgid "``%A``"
msgstr "``%A``"

#: ../../library/datetime.rst:2315
msgid "Weekday as locale's full name."
msgstr "День недели в виде полного названия в регионе."

#: ../../library/datetime.rst:0
msgid "Sunday, Monday, ..., Saturday (en_US);"
msgstr "Sunday, Monday, ..., Saturday (en_US);"

#: ../../library/datetime.rst:0
msgid "Sonntag, Montag, ..., Samstag (de_DE)"
msgstr "Sonntag, Montag, ..., Samstag (de_DE)"

#: ../../library/datetime.rst:2320
msgid "``%w``"
msgstr "``%w``"

#: ../../library/datetime.rst:2320
msgid "Weekday as a decimal number, where 0 is Sunday and 6 is Saturday."
msgstr "День недели как десятичное число, где 0 - воскресенье, а 6 - суббота."

#: ../../library/datetime.rst:2320
msgid "0, 1, ..., 6"
msgstr "0, 1, ..., 6"

#: ../../library/datetime.rst:2324
msgid "``%d``"
msgstr "``%d``"

#: ../../library/datetime.rst:2324
msgid "Day of the month as a zero-padded decimal number."
msgstr "День месяца в виде десятичного числа, дополненного нулем."

#: ../../library/datetime.rst:2324
msgid "01, 02, ..., 31"
msgstr "01, 02, ..., 31"

#: ../../library/datetime.rst:2324 ../../library/datetime.rst:2337
#: ../../library/datetime.rst:2340 ../../library/datetime.rst:2346
#: ../../library/datetime.rst:2349 ../../library/datetime.rst:2355
#: ../../library/datetime.rst:2373
msgid "\\(9)"
msgstr "\\(9)"

#: ../../library/datetime.rst:2327
msgid "``%b``"
msgstr "``%b``"

#: ../../library/datetime.rst:2327
msgid "Month as locale's abbreviated name."
msgstr "Месяц в виде сокращенного названия в регионе."

#: ../../library/datetime.rst:0
msgid "Jan, Feb, ..., Dec (en_US);"
msgstr "Jan, Feb, ..., Dec (en_US);"

#: ../../library/datetime.rst:0
msgid "Jan, Feb, ..., Dez (de_DE)"
msgstr "Jan, Feb, ..., Dez (de_DE)"

#: ../../library/datetime.rst:2332
msgid "``%B``"
msgstr "``%B``"

#: ../../library/datetime.rst:2332
msgid "Month as locale's full name."
msgstr "Месяц в виде полного названия в регионе."

#: ../../library/datetime.rst:0
msgid "January, February, ..., December (en_US);"
msgstr "January, February, ..., December (en_US);"

#: ../../library/datetime.rst:0
msgid "Januar, Februar, ..., Dezember (de_DE)"
msgstr "Januar, Februar, ..., Dezember (de_DE)"

#: ../../library/datetime.rst:2337
msgid "``%m``"
msgstr "``%m``"

#: ../../library/datetime.rst:2337
msgid "Month as a zero-padded decimal number."
msgstr "Месяц в виде десятичного числа, дополненного нулем."

#: ../../library/datetime.rst:2337 ../../library/datetime.rst:2349
msgid "01, 02, ..., 12"
msgstr "01, 02, ..., 12"

#: ../../library/datetime.rst:2340
msgid "``%y``"
msgstr "``%y``"

#: ../../library/datetime.rst:2340
msgid "Year without century as a zero-padded decimal number."
msgstr "Год без столетия в виде десятичного числа, дополненного нулем."

#: ../../library/datetime.rst:2340
msgid "00, 01, ..., 99"
msgstr "00, 01, ..., 99"

#: ../../library/datetime.rst:2343
msgid "``%Y``"
msgstr "``%Y``"

#: ../../library/datetime.rst:2343
msgid "Year with century as a decimal number."
msgstr "Год с добавленным веком в качестве десятичного числа."

#: ../../library/datetime.rst:2343 ../../library/datetime.rst:2413
msgid "0001, 0002, ..., 2013, 2014, ..., 9998, 9999"
msgstr "0001, 0002, ..., 2013, 2014, ..., 9998, 9999"

#: ../../library/datetime.rst:2346
msgid "``%H``"
msgstr "``%H``"

#: ../../library/datetime.rst:2346
msgid "Hour (24-hour clock) as a zero-padded decimal number."
msgstr "Час (24 часа) в виде десятичного числа, дополненного нулем."

#: ../../library/datetime.rst:2346
msgid "00, 01, ..., 23"
msgstr "00, 01, ..., 23"

#: ../../library/datetime.rst:2349
msgid "``%I``"
msgstr "``%I``"

#: ../../library/datetime.rst:2349
msgid "Hour (12-hour clock) as a zero-padded decimal number."
msgstr "Час (12-часовой вид) в виде десятичного числа, дополненного нулем."

#: ../../library/datetime.rst:2352
msgid "``%p``"
msgstr "``%p``"

#: ../../library/datetime.rst:2352
msgid "Locale's equivalent of either AM or PM."
msgstr "Региональный эквивалент AM или PM."

#: ../../library/datetime.rst:0
msgid "AM, PM (en_US);"
msgstr "AM, PM (en_US);"

#: ../../library/datetime.rst:0
msgid "am, pm (de_DE)"
msgstr "am, pm (de_DE)"

#: ../../library/datetime.rst:2352
msgid "\\(1), \\(3)"
msgstr "\\(1), \\(3)"

#: ../../library/datetime.rst:2355
msgid "``%M``"
msgstr "``%M``"

#: ../../library/datetime.rst:2355
msgid "Minute as a zero-padded decimal number."
msgstr "Минута в виде десятичного числа, дополненного нулем."

#: ../../library/datetime.rst:2355 ../../library/datetime.rst:2358
msgid "00, 01, ..., 59"
msgstr "00, 01, ..., 59"

#: ../../library/datetime.rst:2358
msgid "``%S``"
msgstr "``%S``"

#: ../../library/datetime.rst:2358
msgid "Second as a zero-padded decimal number."
msgstr "Секунда в виде десятичного числа, дополненного нулем."

#: ../../library/datetime.rst:2358
msgid "\\(4), \\(9)"
msgstr "\\(4), \\(9)"

#: ../../library/datetime.rst:2361
msgid "``%f``"
msgstr "``%f``"

#: ../../library/datetime.rst:2361
msgid "Microsecond as a decimal number, zero-padded to 6 digits."
msgstr "Микросекунда в виде десятичного числа, дополненного нулем."

#: ../../library/datetime.rst:2361
msgid "000000, 000001, ..., 999999"
msgstr "000000, 000001, ..., 999999"

#: ../../library/datetime.rst:2361
msgid "\\(5)"
msgstr "\\(5)"

#: ../../library/datetime.rst:2365 ../../library/datetime.rst:2529
msgid "``%z``"
msgstr "``%z``"

#: ../../library/datetime.rst:2365
msgid ""
"UTC offset in the form ``±HHMM[SS[.ffffff]]`` (empty string if the object is "
"naive)."
msgstr ""
"Смещение по UTC в виде `±HHMM[SS[.ffffff]]` (пустая строка, если объект без "
"часового пояса)."

#: ../../library/datetime.rst:2365
msgid "(empty), +0000, -0400, +1030, +063415, -030712.345216"
msgstr "(empty), +0000, -0400, +1030, +063415, -030712.345216"

#: ../../library/datetime.rst:2365 ../../library/datetime.rst:2370
msgid "\\(6)"
msgstr "\\(6)"

#: ../../library/datetime.rst:2370 ../../library/datetime.rst:2553
msgid "``%Z``"
msgstr "``%Z``"

#: ../../library/datetime.rst:2370
msgid "Time zone name (empty string if the object is naive)."
msgstr ""
"Название часового пояса (пустая строка, если объект без часового пояса)."

#: ../../library/datetime.rst:2370
msgid "(empty), UTC, GMT"
msgstr "(empty), UTC, GMT"

#: ../../library/datetime.rst:2373
msgid "``%j``"
msgstr "``%j``"

#: ../../library/datetime.rst:2373
msgid "Day of the year as a zero-padded decimal number."
msgstr "День года в виде десятичного числа, дополненного нулем."

#: ../../library/datetime.rst:2373
msgid "001, 002, ..., 366"
msgstr "001, 002, ..., 366"

#: ../../library/datetime.rst:2376
msgid "``%U``"
msgstr "``%U``"

#: ../../library/datetime.rst:2376
msgid ""
"Week number of the year (Sunday as the first day of the week) as a zero-"
"padded decimal number. All days in a new year preceding the first Sunday are "
"considered to be in week 0."
msgstr ""
"Номер недели в году (воскресенье - первый день недели) в виде десятичного "
"числа, дополненного нулем. Все дни в новом году, предшествующие первому "
"воскресенью, считаются днями недели 0."

#: ../../library/datetime.rst:2376 ../../library/datetime.rst:2384
msgid "00, 01, ..., 53"
msgstr "00, 01, ..., 53"

#: ../../library/datetime.rst:2376 ../../library/datetime.rst:2384
msgid "\\(7), \\(9)"
msgstr "\\(7), \\(9)"

#: ../../library/datetime.rst:2384
msgid "``%W``"
msgstr "``%W``"

#: ../../library/datetime.rst:2384
msgid ""
"Week number of the year (Monday as the first day of the week) as a zero-"
"padded decimal number. All days in a new year preceding the first Monday are "
"considered to be in week 0."
msgstr ""
"Номер недели в году (понедельник - первый день недели) в виде десятичного "
"числа, дополненного нулем. Все дни в новом году, предшествующие первому "
"понедельнику, считаются днями недели 0."

#: ../../library/datetime.rst:2392
msgid "``%c``"
msgstr "``%c``"

#: ../../library/datetime.rst:2392
msgid "Locale's appropriate date and time representation."
msgstr "Соответствующее региональному стандарту представление даты и времени."

#: ../../library/datetime.rst:0
msgid "Tue Aug 16 21:30:00 1988 (en_US);"
msgstr "Tue Aug 16 21:30:00 1988 (en_US);"

#: ../../library/datetime.rst:0
msgid "Di 16 Aug 21:30:00 1988 (de_DE)"
msgstr "Di 16 Aug 21:30:00 1988 (de_DE)"

#: ../../library/datetime.rst:2397
msgid "``%x``"
msgstr "``%x``"

#: ../../library/datetime.rst:2397
msgid "Locale's appropriate date representation."
msgstr "Соответствующее региональному стандарту представление даты."

#: ../../library/datetime.rst:0
msgid "08/16/88 (None);"
msgstr "08/16/88 (None);"

#: ../../library/datetime.rst:0
msgid "08/16/1988 (en_US);"
msgstr "08/16/1988 (en_US);"

#: ../../library/datetime.rst:0
msgid "16.08.1988 (de_DE)"
msgstr "16.08.1988 (de_DE)"

#: ../../library/datetime.rst:2401
msgid "``%X``"
msgstr "``%X``"

#: ../../library/datetime.rst:2401
msgid "Locale's appropriate time representation."
msgstr "Представление времени, соответствующее региону."

#: ../../library/datetime.rst:0
msgid "21:30:00 (en_US);"
msgstr "21:30:00 (en_US);"

#: ../../library/datetime.rst:0
msgid "21:30:00 (de_DE)"
msgstr "21:30:00 (de_DE)"

#: ../../library/datetime.rst:2404
msgid "``%%``"
msgstr "``%%``"

#: ../../library/datetime.rst:2404
msgid "A literal ``'%'`` character."
msgstr "Буквальный символ ``%``."

#: ../../library/datetime.rst:2404
msgid "%"
msgstr "%"

#: ../../library/datetime.rst:2407
msgid ""
"Several additional directives not required by the C89 standard are included "
"for convenience. These parameters all correspond to ISO 8601 date values."
msgstr ""
"Для удобства включены несколько дополнительных указаний, не требуемых "
"стандартом C89. Все эти параметры соответствуют значениям даты по стандарту "
"ISO 8601."

#: ../../library/datetime.rst:2413
msgid "``%G``"
msgstr "``%G``"

#: ../../library/datetime.rst:2413
msgid ""
"ISO 8601 year with century representing the year that contains the greater "
"part of the ISO week (``%V``)."
msgstr ""
"Год по стандарту ISO 8601, где столетие соответствует году, который содержит "
"большую часть недели ISO (``%V``)."

#: ../../library/datetime.rst:2413
msgid "\\(8)"
msgstr "\\(8)"

#: ../../library/datetime.rst:2418
msgid "``%u``"
msgstr "``%u``"

#: ../../library/datetime.rst:2418
msgid "ISO 8601 weekday as a decimal number where 1 is Monday."
msgstr ""
"День недели в формате ISO 8601 в виде десятичного числа, где 1 — понедельник."

#: ../../library/datetime.rst:2418
msgid "1, 2, ..., 7"
msgstr "1, 2, ..., 7"

#: ../../library/datetime.rst:2421
msgid "``%V``"
msgstr "``%V``"

#: ../../library/datetime.rst:2421
msgid ""
"ISO 8601 week as a decimal number with Monday as the first day of the week. "
"Week 01 is the week containing Jan 4."
msgstr ""
"В таблице ниже представлено общее сравнение :meth:`~.datetime.strftime` и :"
"meth:`~.datetime.strptime`:"

#: ../../library/datetime.rst:2421
msgid "01, 02, ..., 53"
msgstr "01, 02, ..., 53"

#: ../../library/datetime.rst:2421
msgid "\\(8), \\(9)"
msgstr "\\(8), \\(9)"

#: ../../library/datetime.rst:2428
msgid ""
"These may not be available on all platforms when used with the :meth:"
"`strftime` method. The ISO 8601 year and ISO 8601 week directives are not "
"interchangeable with the year and week number directives above. Calling :"
"meth:`strptime` with incomplete or ambiguous ISO 8601 directives will raise "
"a :exc:`ValueError`."
msgstr ""

#: ../../library/datetime.rst:2433
msgid ""
"The full set of format codes supported varies across platforms, because "
"Python calls the platform C library's :func:`strftime` function, and "
"platform variations are common. To see the full set of format codes "
"supported on your platform, consult the :manpage:`strftime(3)` "
"documentation. There are also differences between platforms in handling of "
"unsupported format specifiers."
msgstr ""

#: ../../library/datetime.rst:2439
msgid "``%G``, ``%u`` and ``%V`` were added."
msgstr "`` %G ``, `` %в `` и ``%V`` были добавлены."

#: ../../library/datetime.rst:2443
msgid "Technical Detail"
msgstr "Техническая деталь"

#: ../../library/datetime.rst:2445
msgid ""
"Broadly speaking, ``d.strftime(fmt)`` acts like the :mod:`time` module's "
"``time.strftime(fmt, d.timetuple())`` although not all objects support a :"
"meth:`timetuple` method."
msgstr ""

#: ../../library/datetime.rst:2449
msgid ""
"For the :meth:`datetime.strptime` class method, the default value is "
"``1900-01-01T00:00:00.000``: any components not specified in the format "
"string will be pulled from the default value. [#]_"
msgstr ""

#: ../../library/datetime.rst:2453
msgid "Using ``datetime.strptime(date_string, format)`` is equivalent to::"
msgstr ""
"Использование ``datetime.strptime(date_string, format)`` эквивалентно::"

#: ../../library/datetime.rst:2457
msgid ""
"except when the format includes sub-second components or timezone offset "
"information, which are supported in ``datetime.strptime`` but are discarded "
"by ``time.strptime``."
msgstr ""

#: ../../library/datetime.rst:2461
msgid ""
"For :class:`.time` objects, the format codes for year, month, and day should "
"not be used, as :class:`time` objects have no such values. If they're used "
"anyway, ``1900`` is substituted for the year, and ``1`` for the month and "
"day."
msgstr ""

#: ../../library/datetime.rst:2465
msgid ""
"For :class:`date` objects, the format codes for hours, minutes, seconds, and "
"microseconds should not be used, as :class:`date` objects have no such "
"values. If they're used anyway, ``0`` is substituted for them."
msgstr ""

#: ../../library/datetime.rst:2469
msgid ""
"For the same reason, handling of format strings containing Unicode code "
"points that can't be represented in the charset of the current locale is "
"also platform-dependent. On some platforms such code points are preserved "
"intact in the output, while on others ``strftime`` may raise :exc:"
"`UnicodeError` or return an empty string instead."
msgstr ""
"По той же причине обработка строк формата, содержащих кодовые точки Unicode, "
"которые не могут быть представлены в кодировке текущей локали, также зависит "
"от платформы. На некоторых платформах такие точки кода сохраняются в "
"выходных данных без изменений, в то время как на других ``strftime`` может "
"вызывать :exc:`UnicodeError` или вместо этого возвращать пустую строку."

#: ../../library/datetime.rst:2478
msgid ""
"Because the format depends on the current locale, care should be taken when "
"making assumptions about the output value. Field orderings will vary (for "
"example, \"month/day/year\" versus \"day/month/year\"), and the output may "
"contain Unicode characters encoded using the locale's default encoding (for "
"example, if the current locale is ``ja_JP``, the default encoding could be "
"any one of ``eucJP``, ``SJIS``, or ``utf-8``; use :meth:`locale.getlocale` "
"to determine the current locale's encoding)."
msgstr ""

#: ../../library/datetime.rst:2487
msgid ""
"The :meth:`strptime` method can parse years in the full [1, 9999] range, but "
"years < 1000 must be zero-filled to 4-digit width."
msgstr ""

#: ../../library/datetime.rst:2490
msgid ""
"In previous versions, :meth:`strftime` method was restricted to years >= "
"1900."
msgstr ""

#: ../../library/datetime.rst:2494
msgid ""
"In version 3.2, :meth:`strftime` method was restricted to years >= 1000."
msgstr ""

#: ../../library/datetime.rst:2499
msgid ""
"When used with the :meth:`strptime` method, the ``%p`` directive only "
"affects the output hour field if the ``%I`` directive is used to parse the "
"hour."
msgstr ""

#: ../../library/datetime.rst:2503
msgid ""
"Unlike the :mod:`time` module, the :mod:`datetime` module does not support "
"leap seconds."
msgstr ""

#: ../../library/datetime.rst:2507
msgid ""
"When used with the :meth:`strptime` method, the ``%f`` directive accepts "
"from one to six digits and zero pads on the right. ``%f`` is an extension to "
"the set of format characters in the C standard (but implemented separately "
"in datetime objects, and therefore always available)."
msgstr ""

#: ../../library/datetime.rst:2514
msgid ""
"For a naive object, the ``%z`` and ``%Z`` format codes are replaced by empty "
"strings."
msgstr ""

#: ../../library/datetime.rst:2517
msgid "For an aware object:"
msgstr "Для осведомленного объекта:"

#: ../../library/datetime.rst:2520
msgid ""
":meth:`utcoffset` is transformed into a string of the form ``±HHMM[SS[."
"ffffff]]``, where ``HH`` is a 2-digit string giving the number of UTC offset "
"hours, ``MM`` is a 2-digit string giving the number of UTC offset minutes, "
"``SS`` is a 2-digit string giving the number of UTC offset seconds and "
"``ffffff`` is a 6-digit string giving the number of UTC offset microseconds. "
"The ``ffffff`` part is omitted when the offset is a whole number of seconds "
"and both the ``ffffff`` and the ``SS`` part is omitted when the offset is a "
"whole number of minutes. For example, if :meth:`utcoffset` returns "
"``timedelta(hours=-3, minutes=-30)``, ``%z`` is replaced with the string "
"``'-0330'``."
msgstr ""

#: ../../library/datetime.rst:2534
msgid ""
"When the ``%z`` directive is provided to the  :meth:`strptime` method, the "
"UTC offsets can have a colon as a separator between hours, minutes and "
"seconds. For example, ``'+01:00:00'`` will be parsed as an offset of one "
"hour. In addition, providing ``'Z'`` is identical to ``'+00:00'``."
msgstr ""

#: ../../library/datetime.rst:2542
msgid ""
"In :meth:`strftime`, ``%Z`` is replaced by an empty string if :meth:`tzname` "
"returns ``None``; otherwise ``%Z`` is replaced by the returned value, which "
"must be a string."
msgstr ""

#: ../../library/datetime.rst:2546
msgid ":meth:`strptime` only accepts certain values for ``%Z``:"
msgstr ""

#: ../../library/datetime.rst:2548
msgid "any value in ``time.tzname`` for your machine's locale"
msgstr "любое значение в ``time.tzname`` для локали вашего компьютера"

#: ../../library/datetime.rst:2549
msgid "the hard-coded values ``UTC`` and ``GMT``"
msgstr "жестко закодированные значения ``UTC`` и ``GMT``"

#: ../../library/datetime.rst:2551
msgid ""
"So someone living in Japan may have ``JST``, ``UTC``, and ``GMT`` as valid "
"values, but probably not ``EST``. It will raise ``ValueError`` for invalid "
"values."
msgstr ""
"Таким образом, кто-то, живущий в Японии, может иметь действительные значения "
"``JST``, ``UTC`` и ``GMT``, но, вероятно, не ``EST``. Это вызовет "
"``ValueError`` для недопустимых значений."

#: ../../library/datetime.rst:2555
msgid ""
"When the ``%z`` directive is provided to the :meth:`strptime` method, an "
"aware :class:`.datetime` object will be produced. The ``tzinfo`` of the "
"result will be set to a :class:`timezone` instance."
msgstr ""

#: ../../library/datetime.rst:2561
msgid ""
"When used with the :meth:`strptime` method, ``%U`` and ``%W`` are only used "
"in calculations when the day of the week and the calendar year (``%Y``) are "
"specified."
msgstr ""

#: ../../library/datetime.rst:2566
msgid ""
"Similar to ``%U`` and ``%W``, ``%V`` is only used in calculations when the "
"day of the week and the ISO year (``%G``) are specified in a :meth:"
"`strptime` format string. Also note that ``%G`` and ``%Y`` are not "
"interchangeable."
msgstr ""

#: ../../library/datetime.rst:2572
msgid ""
"When used with the :meth:`strptime` method, the leading zero is optional "
"for  formats ``%d``, ``%m``, ``%H``, ``%I``, ``%M``, ``%S``, ``%j``, ``%U``, "
"``%W``, and ``%V``. Format ``%y`` does require a leading zero."
msgstr ""

#: ../../library/datetime.rst:2577
msgid "Footnotes"
msgstr "Сноски"

#: ../../library/datetime.rst:2578
msgid "If, that is, we ignore the effects of Relativity"
msgstr "Если, то есть, мы игнорируем эффекты теории относительности"

#: ../../library/datetime.rst:2580
msgid ""
"This matches the definition of the \"proleptic Gregorian\" calendar in "
"Dershowitz and Reingold's book *Calendrical Calculations*, where it's the "
"base calendar for all computations. See the book for algorithms for "
"converting between proleptic Gregorian ordinals and many other calendar "
"systems."
msgstr ""
"Это соответствует определению «превентивного григорианского» календаря в "
"книге Дершовица и Рейнгольда *Календарные вычисления*, где он является "
"базовым календарем для всех вычислений. См. книгу об алгоритмах "
"преобразования пролептических григорианских порядковых номеров во многие "
"другие календарные системы."

#: ../../library/datetime.rst:2586
msgid ""
"See R. H. van Gent's `guide to the mathematics of the ISO 8601 calendar "
"<https://web.archive.org/web/20220531051136/https://webspace.science.uu.nl/"
"~gent0113/calendar/isocalendar.htm>`_ for a good explanation."
msgstr ""
"См. «Руководство по математике календаря ISO 8601» Р.Х. ван Гента <https://"
"web.archive.org/web/20220531051136/https://webspace.science.uu.nl/~gent0113/"
"calendar/isocalendar.htm> `_ за хорошее объяснение."

#: ../../library/datetime.rst:2590
msgid ""
"Passing ``datetime.strptime('Feb 29', '%b %d')`` will fail since ``1900`` is "
"not a leap year."
msgstr ""
