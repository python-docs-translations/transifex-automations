# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# Rafael Fontenelle <rffontenelle@gmail.com>, 2024
# Roustam Khamidoulline, 2024
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.12\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-01-17 14:51+0000\n"
"PO-Revision-Date: 2024-05-11 00:33+0000\n"
"Last-Translator: Roustam Khamidoulline, 2024\n"
"Language-Team: Russian (https://app.transifex.com/python-doc/teams/5390/"
"ru/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ru\n"
"Plural-Forms: nplurals=4; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && "
"n%10<=4 && (n%100<12 || n%100>14) ? 1 : n%10==0 || (n%10>=5 && n%10<=9) || "
"(n%100>=11 && n%100<=14)? 2 : 3);\n"

#: ../../library/rlcompleter.rst:2
msgid ":mod:`!rlcompleter` --- Completion function for GNU readline"
msgstr ":mod:`!rlcompleter` --- Функция завершения для строки чтения GNU"

#: ../../library/rlcompleter.rst:9
msgid "**Source code:** :source:`Lib/rlcompleter.py`"
msgstr "**Исходный код:** :source:`Lib/rlcompleter.py`"

#: ../../library/rlcompleter.rst:13
msgid ""
"The :mod:`!rlcompleter` module defines a completion function suitable to be "
"passed to :func:`~readline.set_completer` in the :mod:`readline` module."
msgstr ""
"Модуль :mod:`!rlcompleter` определяет функцию завершения, подходящую для "
"передачи :func:`~readline.set_completer` в модуле :mod:`readline`."

#: ../../library/rlcompleter.rst:16
msgid ""
"When this module is imported on a Unix platform with the :mod:`readline` "
"module available, an instance of the :class:`Completer` class is "
"automatically created and its :meth:`~Completer.complete` method is set as "
"the :ref:`readline completer <readline-completion>`. The method provides "
"completion of valid Python :ref:`identifiers and keywords <identifiers>`."
msgstr ""
"Когда этот модуль импортируется на платформу Unix с доступным модулем :mod:"
"`readline`, автоматически создается экземпляр класса :class:`Completer` и "
"его метод :meth:`~Completer.complete` устанавливается как :ref:`readline "
"Completer <readline-completion>`. Этот метод обеспечивает завершение "
"допустимых идентификаторов Python и ключевых слов <identifiers>`."

#: ../../library/rlcompleter.rst:22
msgid "Example::"
msgstr "Пример::"

#: ../../library/rlcompleter.rst:24
msgid ""
">>> import rlcompleter\n"
">>> import readline\n"
">>> readline.parse_and_bind(\"tab: complete\")\n"
">>> readline. <TAB PRESSED>\n"
"readline.__doc__          readline.get_line_buffer(  readline."
"read_init_file(\n"
"readline.__file__         readline.insert_text(      readline."
"set_completer(\n"
"readline.__name__         readline.parse_and_bind(\n"
">>> readline."
msgstr ""
">>> import rlcompleter\n"
">>> import readline\n"
">>> readline.parse_and_bind(\"tab: complete\")\n"
">>> readline. <TAB PRESSED>\n"
"readline.__doc__          readline.get_line_buffer(  readline."
"read_init_file(\n"
"readline.__file__         readline.insert_text(      readline."
"set_completer(\n"
"readline.__name__         readline.parse_and_bind(\n"
">>> readline."

#: ../../library/rlcompleter.rst:33
msgid ""
"The :mod:`!rlcompleter` module is designed for use with Python's :ref:"
"`interactive mode <tut-interactive>`.  Unless Python is run with the :option:"
"`-S` option, the module is automatically imported and configured (see :ref:"
"`rlcompleter-config`)."
msgstr ""
"Модуль :mod:`!rlcompleter` предназначен для использования с :ref:"
"`интерактивным режимом Python <tut-interactive>`. Если Python не запускается "
"с опцией :option:`-S`, модуль автоматически импортируется и настраивается "
"(см. :ref:`rlcompleter-config`)."

#: ../../library/rlcompleter.rst:38
msgid ""
"On platforms without :mod:`readline`, the :class:`Completer` class defined "
"by this module can still be used for custom purposes."
msgstr ""
"На платформах без :mod:`readline` класс :class:`Completer`, определенный "
"этим модулем, по-прежнему может использоваться для пользовательских целей."

#: ../../library/rlcompleter.rst:46
msgid "Completer objects have the following method:"
msgstr "Объекты Completer имеют следующий метод:"

#: ../../library/rlcompleter.rst:50
msgid "Return the next possible completion for *text*."
msgstr "Возвращает следующее возможное завершение для *text*."

#: ../../library/rlcompleter.rst:52
msgid ""
"When called by the :mod:`readline` module, this method is called "
"successively with ``state == 0, 1, 2, ...`` until the method returns "
"``None``."
msgstr ""
"При вызове модуля :mod:`readline` этот метод вызывается последовательно с "
"``state == 0, 1, 2, ...``, пока метод не вернет ``None``."

#: ../../library/rlcompleter.rst:56
msgid ""
"If called for *text* that doesn't include a period character (``'.'``), it "
"will complete from names currently defined in :mod:`__main__`, :mod:"
"`builtins` and keywords (as defined by the :mod:`keyword` module)."
msgstr ""
"Если вызывается для *text*, который не содержит символа точки (``'.'``), он "
"будет завершен из имен, определенных в данный момент в :mod:`__main__`, :mod:"
"`builtins` и ключевых слов (как определено с помощью модуля :mod:`keyword`)."

#: ../../library/rlcompleter.rst:60
msgid ""
"If called for a dotted name, it will try to evaluate anything without "
"obvious side-effects (functions will not be evaluated, but it can generate "
"calls to :meth:`~object.__getattr__`) up to the last part, and find matches "
"for the rest via the :func:`dir` function.  Any exception raised during the "
"evaluation of the expression is caught, silenced and :const:`None` is "
"returned."
msgstr ""
"Если вызвать имя, разделенное точками, он попытается оценить что-либо без "
"очевидных побочных эффектов (функции не будут оцениваться, но он может "
"генерировать вызовы :meth:`~object.__getattr__`) до последней части и "
"находить совпадения. остальное через функцию :func:`dir`. Любое исключение, "
"возникающее во время оценки выражения, перехватывается, подавляется и "
"возвращается :const:`None`."
