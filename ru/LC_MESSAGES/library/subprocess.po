# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# Rafael Fontenelle <rffontenelle@gmail.com>, 2024
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.10\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-01-21 22:53+0000\n"
"PO-Revision-Date: 2022-11-05 17:22+0000\n"
"Last-Translator: Rafael Fontenelle <rffontenelle@gmail.com>, 2024\n"
"Language-Team: Russian (https://app.transifex.com/python-doc/teams/5390/"
"ru/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ru\n"
"Plural-Forms: nplurals=4; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && "
"n%10<=4 && (n%100<12 || n%100>14) ? 1 : n%10==0 || (n%10>=5 && n%10<=9) || "
"(n%100>=11 && n%100<=14)? 2 : 3);\n"

#: ../../library/subprocess.rst:2
msgid ":mod:`subprocess` --- Subprocess management"
msgstr ""

#: ../../library/subprocess.rst:10
msgid "**Source code:** :source:`Lib/subprocess.py`"
msgstr "**Исходный код:** :source:`Lib/subprocess.py`"

#: ../../library/subprocess.rst:14
msgid ""
"The :mod:`subprocess` module allows you to spawn new processes, connect to "
"their input/output/error pipes, and obtain their return codes.  This module "
"intends to replace several older modules and functions::"
msgstr ""
"Модуль :mod:`subprocess` позволяет вам создавать новые процессы, "
"подключаться к их каналам ввода/вывода/ошибок и получать их коды возврата. "
"Этот модуль предназначен для замены нескольких старых модулей и функций:"

#: ../../library/subprocess.rst:21
msgid ""
"Information about how the :mod:`subprocess` module can be used to replace "
"these modules and functions can be found in the following sections."
msgstr ""
"Информацию о том, как модуль :mod:`subprocess` можно использовать для замены "
"этих модулей и функций, можно найти в следующих разделах."

#: ../../library/subprocess.rst:26
msgid ":pep:`324` -- PEP proposing the subprocess module"
msgstr ":pep:`324` -- PEP предлагает модуль подпроцесса"

#: ../../library/subprocess.rst:30
msgid "Using the :mod:`subprocess` Module"
msgstr "Использование модуля :mod:`subprocess`"

#: ../../library/subprocess.rst:32
msgid ""
"The recommended approach to invoking subprocesses is to use the :func:`run` "
"function for all use cases it can handle. For more advanced use cases, the "
"underlying :class:`Popen` interface can be used directly."
msgstr ""
"Рекомендуемый подход к вызову подпроцессов — использовать функцию :func:"
"`run` для всех случаев использования, которые она может обработать. Для "
"более сложных случаев использования можно напрямую использовать базовый "
"интерфейс :class:`Popen`."

#: ../../library/subprocess.rst:42
msgid ""
"Run the command described by *args*.  Wait for command to complete, then "
"return a :class:`CompletedProcess` instance."
msgstr ""
"Запустите команду, описанную *args*. Дождитесь завершения команды, затем "
"верните экземпляр :class:`CompletedProcess`."

#: ../../library/subprocess.rst:45
msgid ""
"The arguments shown above are merely the most common ones, described below "
"in :ref:`frequently-used-arguments` (hence the use of keyword-only notation "
"in the abbreviated signature). The full function signature is largely the "
"same as that of the :class:`Popen` constructor - most of the arguments to "
"this function are passed through to that interface. (*timeout*,  *input*, "
"*check*, and *capture_output* are not.)"
msgstr ""
"Аргументы, показанные выше, являются лишь наиболее распространенными, "
"описанными ниже в разделе :ref:`часто-используемые-аргументы` (отсюда и "
"использование нотации, состоящей только из ключевых слов, в сокращенной "
"сигнатуре). Полная сигнатура функции во многом такая же, как и у "
"конструктора :class:`Popen` — большинство аргументов этой функции передаются "
"через этот интерфейс. (*timeout*, *input*, *check* и *capture_output* — нет.)"

#: ../../library/subprocess.rst:52
msgid ""
"If *capture_output* is true, stdout and stderr will be captured. When used, "
"the internal :class:`Popen` object is automatically created with "
"``stdout=PIPE`` and ``stderr=PIPE``. The *stdout* and *stderr* arguments may "
"not be supplied at the same time as *capture_output*.  If you wish to "
"capture and combine both streams into one, use ``stdout=PIPE`` and "
"``stderr=STDOUT`` instead of *capture_output*."
msgstr ""

#: ../../library/subprocess.rst:59
msgid ""
"The *timeout* argument is passed to :meth:`Popen.communicate`. If the "
"timeout expires, the child process will be killed and waited for.  The :exc:"
"`TimeoutExpired` exception will be re-raised after the child process has "
"terminated."
msgstr ""

#: ../../library/subprocess.rst:64
msgid ""
"The *input* argument is passed to :meth:`Popen.communicate` and thus to the "
"subprocess's stdin.  If used it must be a byte sequence, or a string if "
"*encoding* or *errors* is specified or *text* is true.  When used, the "
"internal :class:`Popen` object is automatically created with ``stdin=PIPE``, "
"and the *stdin* argument may not be used as well."
msgstr ""

#: ../../library/subprocess.rst:70
msgid ""
"If *check* is true, and the process exits with a non-zero exit code, a :exc:"
"`CalledProcessError` exception will be raised. Attributes of that exception "
"hold the arguments, the exit code, and stdout and stderr if they were "
"captured."
msgstr ""
"Если *check* имеет значение true и процесс завершается с ненулевым кодом "
"завершения, будет выдано исключение :exc:`CalledProcessError`. Атрибуты "
"этого исключения содержат аргументы, код выхода, а также стандартные "
"выходные данные и стандартный поток ошибок, если они были перехвачены."

#: ../../library/subprocess.rst:75
msgid ""
"If *encoding* or *errors* are specified, or *text* is true, file objects for "
"stdin, stdout and stderr are opened in text mode using the specified "
"*encoding* and *errors* or the :class:`io.TextIOWrapper` default. The "
"*universal_newlines* argument is equivalent  to *text* and is provided for "
"backwards compatibility. By default, file objects are opened in binary mode."
msgstr ""
"Если указаны *encoding* или *errors* или *text* имеет значение true, "
"файловые объекты для stdin, stdout и stderr открываются в текстовом режиме с "
"использованием указанных *encoding* и *errors* или :class:`io.TextIOWrapper "
"`по умолчанию. Аргумент *universal_newlines* эквивалентен *text* и "
"предоставляется для обратной совместимости. По умолчанию файловые объекты "
"открываются в двоичном режиме."

#: ../../library/subprocess.rst:81
msgid ""
"If *env* is not ``None``, it must be a mapping that defines the environment "
"variables for the new process; these are used instead of the default "
"behavior of inheriting the current process' environment. It is passed "
"directly to :class:`Popen`. This mapping can be str to str on any platform "
"or bytes to bytes on POSIX platforms much like :data:`os.environ` or :data:"
"`os.environb`."
msgstr ""
"Если *env* не имеет значения None, это должно быть отображение, определяющее "
"переменные среды для нового процесса; они используются вместо стандартного "
"поведения при наследовании среды текущего процесса. Он передается "
"непосредственно в :class:`Popen`. Это сопоставление может быть строкой в ​​"
"строку на любой платформе или байтами в байты на платформах POSIX, подобно :"
"data:`os.environ` или :data:`os.environb`."

#: ../../library/subprocess.rst:88
msgid "Examples::"
msgstr "Примеры::"

#: ../../library/subprocess.rst:106
msgid "Added *encoding* and *errors* parameters"
msgstr "Добавлены параметры *encoding* и *errors*."

#: ../../library/subprocess.rst:110
msgid ""
"Added the *text* parameter, as a more understandable alias of "
"*universal_newlines*. Added the *capture_output* parameter."
msgstr ""
"Добавлен параметр *text* как более понятный псевдоним *universal_newlines*. "
"Добавлен параметр *capture_output*."

#: ../../library/subprocess.rst:115 ../../library/subprocess.rst:499
#: ../../library/subprocess.rst:1181 ../../library/subprocess.rst:1221
#: ../../library/subprocess.rst:1284
msgid ""
"Changed Windows shell search order for ``shell=True``. The current directory "
"and ``%PATH%`` are replaced with ``%COMSPEC%`` and ``%SystemRoot%"
"\\System32\\cmd.exe``. As a result, dropping a malicious program named ``cmd."
"exe`` into a current directory no longer works."
msgstr ""
"Изменен порядок поиска оболочки Windows для ``shell=True``. Текущий каталог "
"и %PATH% заменяются на %COMSPEC% и %SystemRoot%\\System32\\cmd.exe. В "
"результате установка вредоносной программы с именем cmd.exe в текущий "
"каталог больше не работает."

#: ../../library/subprocess.rst:123
msgid ""
"The return value from :func:`run`, representing a process that has finished."
msgstr ""
"Возвращаемое значение из :func:`run`, представляющее завершившийся процесс."

#: ../../library/subprocess.rst:127
msgid ""
"The arguments used to launch the process. This may be a list or a string."
msgstr ""
"Аргументы, используемые для запуска процесса. Это может быть список или "
"строка."

#: ../../library/subprocess.rst:131
msgid ""
"Exit status of the child process. Typically, an exit status of 0 indicates "
"that it ran successfully."
msgstr ""
"Статус выхода дочернего процесса. Обычно статус завершения 0 указывает на "
"успешное выполнение."

#: ../../library/subprocess.rst:134 ../../library/subprocess.rst:928
msgid ""
"A negative value ``-N`` indicates that the child was terminated by signal "
"``N`` (POSIX only)."
msgstr ""
"Отрицательное значение ``-N`` указывает, что дочерний процесс был завершен "
"сигналом ``N`` (только POSIX)."

#: ../../library/subprocess.rst:139
msgid ""
"Captured stdout from the child process. A bytes sequence, or a string if :"
"func:`run` was called with an encoding, errors, or text=True. ``None`` if "
"stdout was not captured."
msgstr ""
"Захваченный стандартный вывод дочернего процесса. Последовательность байтов "
"или строка, если :func:`run` была вызвана с кодировкой, ошибками или текстом "
"= True. ``None``, если стандартный вывод не был захвачен."

#: ../../library/subprocess.rst:143
msgid ""
"If you ran the process with ``stderr=subprocess.STDOUT``, stdout and stderr "
"will be combined in this attribute, and :attr:`stderr` will be ``None``."
msgstr ""
"Если вы запустили процесс с ``stderr=subprocess.STDOUT``, stdout и stderr "
"будут объединены в этом атрибуте, а :attr:`stderr` будет иметь значение "
"``None``."

#: ../../library/subprocess.rst:149
msgid ""
"Captured stderr from the child process. A bytes sequence, or a string if :"
"func:`run` was called with an encoding, errors, or text=True. ``None`` if "
"stderr was not captured."
msgstr ""
"Захваченный stderr из дочернего процесса. Последовательность байтов или "
"строка, если :func:`run` была вызвана с кодировкой, ошибками или текстом = "
"True. ``None``, если stderr не был захвачен."

#: ../../library/subprocess.rst:155
msgid "If :attr:`returncode` is non-zero, raise a :exc:`CalledProcessError`."
msgstr ""
"Если :attr:`returncode` не равен нулю, вызовите :exc:`CalledProcessError`."

#: ../../library/subprocess.rst:161
msgid ""
"Special value that can be used as the *stdin*, *stdout* or *stderr* argument "
"to :class:`Popen` and indicates that the special file :data:`os.devnull` "
"will be used."
msgstr ""
"Специальное значение, которое можно использовать в качестве аргумента "
"*stdin*, *stdout* или *stderr* для :class:`Popen` и указывает, что будет "
"использоваться специальный файл :data:`os.devnull`."

#: ../../library/subprocess.rst:170
msgid ""
"Special value that can be used as the *stdin*, *stdout* or *stderr* argument "
"to :class:`Popen` and indicates that a pipe to the standard stream should be "
"opened.  Most useful with :meth:`Popen.communicate`."
msgstr ""
"Специальное значение, которое можно использовать в качестве аргумента "
"*stdin*, *stdout* или *stderr* для :class:`Popen` и указывает, что должен "
"быть открыт канал к стандартному потоку. Наиболее полезно с :meth:`Popen."
"communicate`."

#: ../../library/subprocess.rst:177
msgid ""
"Special value that can be used as the *stderr* argument to :class:`Popen` "
"and indicates that standard error should go into the same handle as standard "
"output."
msgstr ""
"Специальное значение, которое можно использовать в качестве аргумента "
"*stderr* для :class:`Popen` и указывает, что стандартная ошибка должна идти "
"в тот же дескриптор, что и стандартный вывод."

#: ../../library/subprocess.rst:184
msgid "Base class for all other exceptions from this module."
msgstr "Базовый класс для всех остальных исключений из этого модуля."

#: ../../library/subprocess.rst:191
msgid ""
"Subclass of :exc:`SubprocessError`, raised when a timeout expires while "
"waiting for a child process."
msgstr ""
"Подкласс :exc:`SubprocessError`, вызываемый по истечении времени ожидания "
"дочернего процесса."

#: ../../library/subprocess.rst:196 ../../library/subprocess.rst:240
msgid "Command that was used to spawn the child process."
msgstr "Команда, которая использовалась для создания дочернего процесса."

#: ../../library/subprocess.rst:200
msgid "Timeout in seconds."
msgstr "Время ожидания в секундах."

#: ../../library/subprocess.rst:204
msgid ""
"Output of the child process if it was captured by :func:`run` or :func:"
"`check_output`.  Otherwise, ``None``.  This is always :class:`bytes` when "
"any output was captured regardless of the ``text=True`` setting.  It may "
"remain ``None`` instead of ``b''`` when no output was observed."
msgstr ""
"Вывод дочернего процесса, если он был захвачен :func:`run` или :func:"
"`check_output`. В противном случае ``Нет``. Это всегда :class:`bytes`, когда "
"любой вывод был захвачен, независимо от настройки ``text=True``. Он может "
"оставаться «None» вместо «b», когда никакого вывода не наблюдалось."

#: ../../library/subprocess.rst:212 ../../library/subprocess.rst:249
msgid "Alias for output, for symmetry with :attr:`stderr`."
msgstr "Псевдоним для вывода, для симметрии с :attr:`stderr`."

#: ../../library/subprocess.rst:216
msgid ""
"Stderr output of the child process if it was captured by :func:`run`. "
"Otherwise, ``None``.  This is always :class:`bytes` when stderr output was "
"captured regardless of the ``text=True`` setting.  It may remain ``None`` "
"instead of ``b''`` when no stderr output was observed."
msgstr ""
"Вывод Stderr дочернего процесса, если он был захвачен :func:`run`. В "
"противном случае ``Нет``. Это всегда :class:`bytes` при захвате вывода "
"stderr, независимо от настройки ``text=True``. Он может оставаться «None» "
"вместо «b», если вывод stderr не наблюдался."

#: ../../library/subprocess.rst:223 ../../library/subprocess.rst:256
msgid "*stdout* and *stderr* attributes added"
msgstr "Добавлены атрибуты *stdout* и *stderr*."

#: ../../library/subprocess.rst:228
msgid ""
"Subclass of :exc:`SubprocessError`, raised when a process run by :func:"
"`check_call`, :func:`check_output`, or :func:`run` (with ``check=True``) "
"returns a non-zero exit status."
msgstr ""
"Подкласс :exc:`SubprocessError`, вызываемый, когда процесс, запущенный :func:"
"`check_call`, :func:`check_output` или :func:`run` (с ``check=True``), "
"возвращает не- нулевой статус выхода."

#: ../../library/subprocess.rst:235
msgid ""
"Exit status of the child process.  If the process exited due to a signal, "
"this will be the negative signal number."
msgstr ""
"Статус выхода дочернего процесса. Если процесс завершился по сигналу, это "
"будет отрицательный номер сигнала."

#: ../../library/subprocess.rst:244
msgid ""
"Output of the child process if it was captured by :func:`run` or :func:"
"`check_output`.  Otherwise, ``None``."
msgstr ""
"Вывод дочернего процесса, если он был захвачен :func:`run` или :func:"
"`check_output`. В противном случае ``Нет``."

#: ../../library/subprocess.rst:253
msgid ""
"Stderr output of the child process if it was captured by :func:`run`. "
"Otherwise, ``None``."
msgstr ""
"Вывод Stderr дочернего процесса, если он был захвачен :func:`run`. В "
"противном случае ``Нет``."

#: ../../library/subprocess.rst:263
msgid "Frequently Used Arguments"
msgstr "Часто используемые аргументы"

#: ../../library/subprocess.rst:265
msgid ""
"To support a wide variety of use cases, the :class:`Popen` constructor (and "
"the convenience functions) accept a large number of optional arguments. For "
"most typical use cases, many of these arguments can be safely left at their "
"default values. The arguments that are most commonly needed are:"
msgstr ""
"Для поддержки широкого спектра вариантов использования конструктор :class:"
"`Popen` (и удобные функции) принимают большое количество необязательных "
"аргументов. В большинстве типичных случаев использования многие из этих "
"аргументов можно безопасно оставить со значениями по умолчанию. Чаще всего "
"требуются следующие аргументы:"

#: ../../library/subprocess.rst:270
msgid ""
"*args* is required for all calls and should be a string, or a sequence of "
"program arguments. Providing a sequence of arguments is generally preferred, "
"as it allows the module to take care of any required escaping and quoting of "
"arguments (e.g. to permit spaces in file names). If passing a single string, "
"either *shell* must be :const:`True` (see below) or else the string must "
"simply name the program to be executed without specifying any arguments."
msgstr ""
"*args* требуется для всех вызовов и должен представлять собой строку или "
"последовательность аргументов программы. Предоставление последовательности "
"аргументов обычно является предпочтительным, поскольку оно позволяет модулю "
"позаботиться о любом необходимом экранировании и заключении аргументов в "
"кавычки (например, разрешить пробелы в именах файлов). При передаче одной "
"строки либо *shell* должно быть :const:`True` (см. ниже), либо строка должна "
"просто называть программу, которая будет выполняться, без указания каких-"
"либо аргументов."

#: ../../library/subprocess.rst:278
msgid ""
"*stdin*, *stdout* and *stderr* specify the executed program's standard "
"input, standard output and standard error file handles, respectively.  Valid "
"values are :data:`PIPE`, :data:`DEVNULL`, an existing file descriptor (a "
"positive integer), an existing file object with a valid file descriptor, and "
"``None``. :data:`PIPE` indicates that a new pipe to the child should be "
"created. :data:`DEVNULL` indicates that the special file :data:`os.devnull` "
"will be used.  With the default settings of ``None``, no redirection will "
"occur; the child's file handles will be inherited from the parent. "
"Additionally, *stderr* can be :data:`STDOUT`, which indicates that the "
"stderr data from the child process should be captured into the same file "
"handle as for *stdout*."
msgstr ""

#: ../../library/subprocess.rst:293
msgid ""
"If *encoding* or *errors* are specified, or *text* (also known as "
"*universal_newlines*) is true, the file objects *stdin*, *stdout* and "
"*stderr* will be opened in text mode using the *encoding* and *errors* "
"specified in the call or the defaults for :class:`io.TextIOWrapper`."
msgstr ""
"Если указаны *encoding* или *errors* или *text* (также известный как "
"*universal_newlines*) имеет значение true, файловые объекты *stdin*, "
"*stdout* и *stderr* будут открыты в текстовом режиме с использованием "
"*encoding * и *errors*, указанные в вызове, или значения по умолчанию для :"
"class:`io.TextIOWrapper`."

#: ../../library/subprocess.rst:299
msgid ""
"For *stdin*, line ending characters ``'\\n'`` in the input will be converted "
"to the default line separator :data:`os.linesep`. For *stdout* and *stderr*, "
"all line endings in the output will be converted to ``'\\n'``.  For more "
"information see the documentation of the :class:`io.TextIOWrapper` class "
"when the *newline* argument to its constructor is ``None``."
msgstr ""
"Для *stdin* символы окончания строки ``'\\n'`` во входных данных будут "
"преобразованы в разделитель строк по умолчанию :data:`os.linesep`. Для "
"*stdout* и *stderr* все окончания строк в выводе будут преобразованы в "
"``'\\n'``. Для получения дополнительной информации см. документацию по "
"классу :class:`io.TextIOWrapper`, когда аргумент *newline* его конструктора "
"имеет значение ``None``."

#: ../../library/subprocess.rst:305
msgid ""
"If text mode is not used, *stdin*, *stdout* and *stderr* will be opened as "
"binary streams. No encoding or line ending conversion is performed."
msgstr ""
"Если текстовый режим не используется, *stdin*, *stdout* и *stderr* будут "
"открываться как двоичные потоки. Никакое кодирование или преобразование "
"конца строки не выполняется."

#: ../../library/subprocess.rst:308
msgid "Added *encoding* and *errors* parameters."
msgstr ""

#: ../../library/subprocess.rst:311
msgid "Added the *text* parameter as an alias for *universal_newlines*."
msgstr ""
"Добавлен параметр *text* в качестве псевдонима для *universal_newlines*."

#: ../../library/subprocess.rst:316
msgid ""
"The newlines attribute of the file objects :attr:`Popen.stdin`, :attr:`Popen."
"stdout` and :attr:`Popen.stderr` are not updated by the :meth:`Popen."
"communicate` method."
msgstr ""
"Атрибут новой строки файловых объектов :attr:`Popen.stdin`, :attr:`Popen."
"stdout` и :attr:`Popen.stderr` не обновляется методом :meth:`Popen."
"communicate`."

#: ../../library/subprocess.rst:320
msgid ""
"If *shell* is ``True``, the specified command will be executed through the "
"shell.  This can be useful if you are using Python primarily for the "
"enhanced control flow it offers over most system shells and still want "
"convenient access to other shell features such as shell pipes, filename "
"wildcards, environment variable expansion, and expansion of ``~`` to a "
"user's home directory.  However, note that Python itself offers "
"implementations of many shell-like features (in particular, :mod:`glob`, :"
"mod:`fnmatch`, :func:`os.walk`, :func:`os.path.expandvars`, :func:`os.path."
"expanduser`, and :mod:`shutil`)."
msgstr ""
"Если *shell* имеет значение True, указанная команда будет выполнена через "
"оболочку. Это может быть полезно, если вы используете Python в первую "
"очередь для расширенного потока управления, который он предлагает в "
"большинстве системных оболочек, и вам все еще нужен удобный доступ к другим "
"функциям оболочки, таким как каналы оболочки, подстановочные знаки имен "
"файлов, расширение переменных среды и расширение ``~`` в домашний каталог "
"пользователя. Однако обратите внимание, что сам Python предлагает реализации "
"многих функций оболочки (в частности, :mod:`glob`, :mod:`fnmatch`, :func:`os."
"walk`, :func:`os.path.expandvars `, :func:`os.path.expanduser` и :mod:"
"`shutil`)."

#: ../../library/subprocess.rst:330
msgid ""
"When *universal_newlines* is ``True``, the class uses the encoding :func:"
"`locale.getpreferredencoding(False) <locale.getpreferredencoding>` instead "
"of ``locale.getpreferredencoding()``.  See the :class:`io.TextIOWrapper` "
"class for more information on this change."
msgstr ""
"Когда *universal_newlines* имеет значение True, класс использует кодировку :"
"func:`locale.getpreferredencoding(False) <locale.getpreferredencoding>` "
"вместо ``locale.getpreferredencoding()``. Дополнительную информацию об этом "
"изменении смотрите в классе :class:`io.TextIOWrapper`."

#: ../../library/subprocess.rst:338 ../../library/subprocess.rst:458
msgid ""
"Read the `Security Considerations`_ section before using ``shell=True``."
msgstr ""
"Прежде чем использовать ``shell=True``, прочтите раздел ``Вопросы "
"безопасности``."

#: ../../library/subprocess.rst:340
msgid ""
"These options, along with all of the other options, are described in more "
"detail in the :class:`Popen` constructor documentation."
msgstr ""
"Эти параметры, наряду со всеми другими параметрами, более подробно описаны в "
"документации конструктора :class:`Popen`."

#: ../../library/subprocess.rst:345
msgid "Popen Constructor"
msgstr "Открытый конструктор"

#: ../../library/subprocess.rst:347
msgid ""
"The underlying process creation and management in this module is handled by "
"the :class:`Popen` class. It offers a lot of flexibility so that developers "
"are able to handle the less common cases not covered by the convenience "
"functions."
msgstr ""
"Создание базового процесса и управление им в этом модуле осуществляется "
"классом :class:`Popen`. Он предлагает большую гибкость, поэтому разработчики "
"могут обрабатывать менее распространенные случаи, не охваченные удобными "
"функциями."

#: ../../library/subprocess.rst:361
msgid ""
"Execute a child program in a new process.  On POSIX, the class uses :meth:"
"`os.execvpe`-like behavior to execute the child program.  On Windows, the "
"class uses the Windows ``CreateProcess()`` function.  The arguments to :"
"class:`Popen` are as follows."
msgstr ""
"Выполнить дочернюю программу в новом процессе. В POSIX класс использует "
"поведение, подобное :meth:`os.execvpe`, для выполнения дочерней программы. В "
"Windows класс использует функцию Windows CreateProcess(). Аргументы :class:"
"`Popen` следующие."

#: ../../library/subprocess.rst:366
msgid ""
"*args* should be a sequence of program arguments or else a single string or :"
"term:`path-like object`. By default, the program to execute is the first "
"item in *args* if *args* is a sequence.  If *args* is a string, the "
"interpretation is platform-dependent and described below.  See the *shell* "
"and *executable* arguments for additional differences from the default "
"behavior.  Unless otherwise stated, it is recommended to pass *args* as a "
"sequence."
msgstr ""
"*args* должен быть последовательностью аргументов программы или одной "
"строкой или :term:`путеподобным объектом`. По умолчанию выполняемая "
"программа — это первый элемент в *args*, если *args* — это "
"последовательность. Если *args* — строка, интерпретация зависит от платформы "
"и описана ниже. Дополнительные отличия от поведения по умолчанию см. в "
"аргументах *shell* и *executable*. Если не указано иное, рекомендуется "
"передавать *args* как последовательность."

#: ../../library/subprocess.rst:376
msgid ""
"For maximum reliability, use a fully qualified path for the executable. To "
"search for an unqualified name on :envvar:`PATH`, use :meth:`shutil.which`. "
"On all platforms, passing :data:`sys.executable` is the recommended way to "
"launch the current Python interpreter again, and use the ``-m`` command-line "
"format to launch an installed module."
msgstr ""
"Для максимальной надежности используйте полный путь к исполняемому файлу. "
"Для поиска неполного имени в :envvar:`PATH` используйте :meth:`shutil. "
"Which`. На всех платформах рекомендуется передать :data:`sys.executable` для "
"повторного запуска текущего интерпретатора Python и использовать формат "
"командной строки ``-m`` для запуска установленного модуля."

#: ../../library/subprocess.rst:382
msgid ""
"Resolving the path of *executable* (or the first item of *args*) is platform "
"dependent. For POSIX, see :meth:`os.execvpe`, and note that when resolving "
"or searching for the executable path, *cwd* overrides the current working "
"directory and *env* can override the ``PATH`` environment variable. For "
"Windows, see the documentation of the ``lpApplicationName`` and "
"``lpCommandLine`` parameters of WinAPI ``CreateProcess``, and note that when "
"resolving or searching for the executable path with ``shell=False``, *cwd* "
"does not override the current working directory and *env* cannot override "
"the ``PATH`` environment variable. Using a full path avoids all of these "
"variations."
msgstr ""
"Разрешение пути к *исполняемому файлу* (или первому элементу *args*) зависит "
"от платформы. Для POSIX см. :meth:`os.execvpe` и обратите внимание, что при "
"разрешении или поиске пути к исполняемому файлу *cwd* переопределяет текущий "
"рабочий каталог, а *env* может переопределять переменную среды ``PATH``. Для "
"Windows см. документацию по параметрам ``lpApplicationName`` и "
"``lpCommandLine`` WinAPI ``CreateProcess`` и обратите внимание, что при "
"разрешении или поиске пути к исполняемому файлу с ``shell=False``, *cwd * не "
"переопределяет текущий рабочий каталог, а *env* не может переопределять "
"переменную среды PATH. Использование полного пути позволяет избежать всех "
"этих вариантов."

#: ../../library/subprocess.rst:393
msgid ""
"An example of passing some arguments to an external program as a sequence "
"is::"
msgstr ""
"Пример передачи некоторых аргументов внешней программе в виде "
"последовательности:"

#: ../../library/subprocess.rst:398
msgid ""
"On POSIX, if *args* is a string, the string is interpreted as the name or "
"path of the program to execute.  However, this can only be done if not "
"passing arguments to the program."
msgstr ""
"В POSIX, если *args* является строкой, эта строка интерпретируется как имя "
"или путь к выполняемой программе. Однако это можно сделать только в том "
"случае, если не передавать аргументы программе."

#: ../../library/subprocess.rst:404
msgid ""
"It may not be obvious how to break a shell command into a sequence of "
"arguments, especially in complex cases. :meth:`shlex.split` can illustrate "
"how to determine the correct tokenization for *args*::"
msgstr ""
"Может быть неочевидно, как разбить команду оболочки на последовательность "
"аргументов, особенно в сложных случаях. :meth:`shlex.split` может "
"проиллюстрировать, как определить правильную токенизацию для *args*::"

#: ../../library/subprocess.rst:416
msgid ""
"Note in particular that options (such as *-input*) and arguments (such as "
"*eggs.txt*) that are separated by whitespace in the shell go in separate "
"list elements, while arguments that need quoting or backslash escaping when "
"used in the shell (such as filenames containing spaces or the *echo* command "
"shown above) are single list elements."
msgstr ""
"Обратите внимание, в частности, что параметры (например, *-input*) и "
"аргументы (например, *eggs.txt*), разделенные пробелами в оболочке, "
"помещаются в отдельные элементы списка, в то время как аргументы, которые "
"требуют экранирования кавычками или обратной косой чертой при использовании "
"в оболочки (например, имена файлов, содержащие пробелы, или команда *echo*, "
"показанная выше) являются отдельными элементами списка."

#: ../../library/subprocess.rst:422
msgid ""
"On Windows, if *args* is a sequence, it will be converted to a string in a "
"manner described in :ref:`converting-argument-sequence`.  This is because "
"the underlying ``CreateProcess()`` operates on strings."
msgstr ""
"В Windows, если *args* является последовательностью, она будет преобразована "
"в строку способом, описанным в :ref:`converting-argument-sequence`. Это "
"связано с тем, что базовый метод CreateProcess() работает со строками."

#: ../../library/subprocess.rst:426
msgid ""
"*args* parameter accepts a :term:`path-like object` if *shell* is ``False`` "
"and a sequence containing path-like objects on POSIX."
msgstr ""
"Параметр *args* принимает объект, подобный пути, если *shell* имеет значение "
"False, и последовательность, содержащую объекты, подобные пути, в POSIX."

#: ../../library/subprocess.rst:430
msgid ""
"*args* parameter accepts a :term:`path-like object` if *shell* is ``False`` "
"and a sequence containing bytes and path-like objects on Windows."
msgstr ""
"Параметр *args* принимает объект, подобный пути, если *shell* имеет значение "
"False, а также последовательность, содержащую байты и объекты, подобные "
"пути, в Windows."

#: ../../library/subprocess.rst:435
msgid ""
"The *shell* argument (which defaults to ``False``) specifies whether to use "
"the shell as the program to execute.  If *shell* is ``True``, it is "
"recommended to pass *args* as a string rather than as a sequence."
msgstr ""
"Аргумент *shell* (который по умолчанию имеет значение «False») указывает, "
"следует ли использовать оболочку в качестве программы для выполнения. Если "
"*shell* имеет значение True, рекомендуется передавать *args* как строку, а "
"не как последовательность."

#: ../../library/subprocess.rst:439
msgid ""
"On POSIX with ``shell=True``, the shell defaults to :file:`/bin/sh`.  If "
"*args* is a string, the string specifies the command to execute through the "
"shell.  This means that the string must be formatted exactly as it would be "
"when typed at the shell prompt.  This includes, for example, quoting or "
"backslash escaping filenames with spaces in them.  If *args* is a sequence, "
"the first item specifies the command string, and any additional items will "
"be treated as additional arguments to the shell itself.  That is to say, :"
"class:`Popen` does the equivalent of::"
msgstr ""
"В POSIX с ``shell=True`` оболочка по умолчанию имеет значение :file:`/bin/"
"sh`. Если *args* — это строка, она определяет команду, которую необходимо "
"выполнить через оболочку. Это означает, что строка должна быть "
"отформатирована точно так же, как если бы она вводилась в командной строке. "
"Это включает, например, кавычки или обратную косую черту, экранирующую имена "
"файлов с пробелами в них. Если *args* — это последовательность, первый "
"элемент определяет командную строку, а любые дополнительные элементы будут "
"рассматриваться как дополнительные аргументы самой оболочки. То есть :class:"
"`Popen` делает эквивалент::"

#: ../../library/subprocess.rst:450
msgid ""
"On Windows with ``shell=True``, the :envvar:`COMSPEC` environment variable "
"specifies the default shell.  The only time you need to specify "
"``shell=True`` on Windows is when the command you wish to execute is built "
"into the shell (e.g. :command:`dir` or :command:`copy`).  You do not need "
"``shell=True`` to run a batch file or console-based executable."
msgstr ""
"В Windows с ``shell=True`` переменная среды :envvar:`COMSPEC` указывает "
"оболочку по умолчанию. Единственный раз, когда вам нужно указать "
"``shell=True`` в Windows, это когда команда, которую вы хотите выполнить, "
"встроена в оболочку (например, :command:`dir` или :command:`copy`). Вам не "
"нужен ``shell=True`` для запуска командного файла или исполняемого файла на "
"базе консоли."

#: ../../library/subprocess.rst:460
msgid ""
"*bufsize* will be supplied as the corresponding argument to the :func:`open` "
"function when creating the stdin/stdout/stderr pipe file objects:"
msgstr ""
"*bufsize* будет предоставлен в качестве соответствующего аргумента функции :"
"func:`open` при создании объектов файла канала stdin/stdout/stderr:"

#: ../../library/subprocess.rst:464
msgid ""
":const:`0` means unbuffered (read and write are one system call and can "
"return short)"
msgstr ""

#: ../../library/subprocess.rst:466
msgid ""
":const:`1` means line buffered (only usable if ``text=True`` or "
"``universal_newlines=True``)"
msgstr ""

#: ../../library/subprocess.rst:468
msgid "any other positive value means use a buffer of approximately that size"
msgstr ""
"любое другое положительное значение означает использование буфера примерно "
"такого размера"

#: ../../library/subprocess.rst:470
msgid ""
"negative bufsize (the default) means the system default of io."
"DEFAULT_BUFFER_SIZE will be used."
msgstr ""
"отрицательный размер буфера (по умолчанию) означает, что будет "
"использоваться системное значение по умолчанию io.DEFAULT_BUFFER_SIZE."

#: ../../library/subprocess.rst:473
msgid ""
"*bufsize* now defaults to -1 to enable buffering by default to match the "
"behavior that most code expects.  In versions prior to Python 3.2.4 and "
"3.3.1 it incorrectly defaulted to :const:`0` which was unbuffered and "
"allowed short reads.  This was unintentional and did not match the behavior "
"of Python 2 as most code expected."
msgstr ""

#: ../../library/subprocess.rst:480
msgid ""
"The *executable* argument specifies a replacement program to execute.   It "
"is very seldom needed.  When ``shell=False``, *executable* replaces the "
"program to execute specified by *args*.  However, the original *args* is "
"still passed to the program.  Most programs treat the program specified by "
"*args* as the command name, which can then be different from the program "
"actually executed.  On POSIX, the *args* name becomes the display name for "
"the executable in utilities such as :program:`ps`.  If ``shell=True``, on "
"POSIX the *executable* argument specifies a replacement shell for the "
"default :file:`/bin/sh`."
msgstr ""
"Аргумент *executable* указывает программу замены, которую необходимо "
"выполнить. Это требуется очень редко. Когда ``shell=False``, *executable* "
"заменяет программу для выполнения, указанную *args*. Однако исходные *args* "
"по-прежнему передаются программе. Большинство программ рассматривают "
"программу, указанную в *args*, как имя команды, которое может отличаться от "
"фактически выполняемой программы. В POSIX имя *args* становится отображаемым "
"именем исполняемого файла в таких утилитах, как :program:`ps`. Если "
"``shell=True``, в POSIX аргумент *executable* указывает оболочку, заменяющую "
"стандартный :file:`/bin/sh`."

#: ../../library/subprocess.rst:490
msgid "*executable* parameter accepts a :term:`path-like object` on POSIX."
msgstr "Параметр *executable* принимает :term:`path-like object` в POSIX."

#: ../../library/subprocess.rst:493
msgid ""
"*executable* parameter accepts a bytes and :term:`path-like object` on "
"Windows."
msgstr ""
"Параметр *executable* принимает байты и :term:`путеподобный объект` в "
"Windows."

#: ../../library/subprocess.rst:505
msgid ""
"*stdin*, *stdout* and *stderr* specify the executed program's standard "
"input, standard output and standard error file handles, respectively.  Valid "
"values are :data:`PIPE`, :data:`DEVNULL`, an existing file descriptor (a "
"positive integer), an existing :term:`file object` with a valid file "
"descriptor, and ``None``.  :data:`PIPE` indicates that a new pipe to the "
"child should be created.  :data:`DEVNULL` indicates that the special file :"
"data:`os.devnull` will be used. With the default settings of ``None``, no "
"redirection will occur; the child's file handles will be inherited from the "
"parent.  Additionally, *stderr* can be :data:`STDOUT`, which indicates that "
"the stderr data from the applications should be captured into the same file "
"handle as for stdout."
msgstr ""

#: ../../library/subprocess.rst:517
msgid ""
"If *preexec_fn* is set to a callable object, this object will be called in "
"the child process just before the child is executed. (POSIX only)"
msgstr ""
"Если для *preexec_fn* установлен вызываемый объект, этот объект будет "
"вызываться в дочернем процессе непосредственно перед его выполнением. "
"(только POSIX)"

#: ../../library/subprocess.rst:523
msgid ""
"The *preexec_fn* parameter is not safe to use in the presence of threads in "
"your application.  The child process could deadlock before exec is called. "
"If you must use it, keep it trivial!  Minimize the number of libraries you "
"call into."
msgstr ""

#: ../../library/subprocess.rst:531
msgid ""
"If you need to modify the environment for the child use the *env* parameter "
"rather than doing it in a *preexec_fn*. The *start_new_session* parameter "
"can take the place of a previously common use of *preexec_fn* to call os."
"setsid() in the child."
msgstr ""

#: ../../library/subprocess.rst:538
msgid ""
"The *preexec_fn* parameter is no longer supported in subinterpreters. The "
"use of the parameter in a subinterpreter raises :exc:`RuntimeError`. The new "
"restriction may affect applications that are deployed in mod_wsgi, uWSGI, "
"and other embedded environments."
msgstr ""
"Параметр *preexec_fn* больше не поддерживается субинтерпретаторами. "
"Использование параметра в субинтерпретаторе вызывает ошибку :exc:"
"`RuntimeError`. Новое ограничение может повлиять на приложения, развернутые "
"в mod_wsgi, uWSGI и других встроенных средах."

#: ../../library/subprocess.rst:543
msgid ""
"If *close_fds* is true, all file descriptors except :const:`0`, :const:`1` "
"and :const:`2` will be closed before the child process is executed.  "
"Otherwise when *close_fds* is false, file descriptors obey their inheritable "
"flag as described in :ref:`fd_inheritance`."
msgstr ""

#: ../../library/subprocess.rst:548
msgid ""
"On Windows, if *close_fds* is true then no handles will be inherited by the "
"child process unless explicitly passed in the ``handle_list`` element of :"
"attr:`STARTUPINFO.lpAttributeList`, or by standard handle redirection."
msgstr ""
"В Windows, если *close_fds* имеет значение true, то никакие дескрипторы не "
"будут унаследованы дочерним процессом, если они не будут явно переданы в "
"элементе ``handle_list`` :attr:`STARTUPINFO.lpAttributeList` или посредством "
"стандартного перенаправления дескрипторов."

#: ../../library/subprocess.rst:552
msgid ""
"The default for *close_fds* was changed from :const:`False` to what is "
"described above."
msgstr ""
"Значение по умолчанию для *close_fds* было изменено с :const:`False` на то, "
"что описано выше."

#: ../../library/subprocess.rst:556
msgid ""
"On Windows the default for *close_fds* was changed from :const:`False` to :"
"const:`True` when redirecting the standard handles. It's now possible to set "
"*close_fds* to :const:`True` when redirecting the standard handles."
msgstr ""
"В Windows значение по умолчанию для *close_fds* было изменено с :const:"
"`False` на :const:`True` при перенаправлении стандартных дескрипторов. "
"Теперь можно установить для *close_fds* значение :const:`True` при "
"перенаправлении стандартных дескрипторов."

#: ../../library/subprocess.rst:561
msgid ""
"*pass_fds* is an optional sequence of file descriptors to keep open between "
"the parent and child.  Providing any *pass_fds* forces *close_fds* to be :"
"const:`True`.  (POSIX only)"
msgstr ""
"*pass_fds* — это необязательная последовательность файловых дескрипторов, "
"которая должна оставаться открытой между родительским и дочерним файлами. "
"Предоставление любого *pass_fds* приводит к тому, что *close_fds* "
"становится :const:`True`. (только POSIX)"

#: ../../library/subprocess.rst:565
msgid "The *pass_fds* parameter was added."
msgstr "Добавлен параметр *pass_fds*."

#: ../../library/subprocess.rst:568
msgid ""
"If *cwd* is not ``None``, the function changes the working directory to "
"*cwd* before executing the child.  *cwd* can be a string, bytes or :term:"
"`path-like <path-like object>` object.  On POSIX, the function looks for "
"*executable* (or for the first item in *args*) relative to *cwd* if the "
"executable path is a relative path."
msgstr ""
"Если *cwd* не ``None``, функция меняет рабочий каталог на *cwd* перед "
"выполнением дочернего процесса. *cwd* может быть строкой, байтами или :term:"
"`path-like <path-like object>` объектом. В POSIX функция ищет *исполняемый "
"файл* (или первый элемент в *args*) относительно *cwd*, если путь к "
"исполняемому файлу является относительным."

#: ../../library/subprocess.rst:574
msgid "*cwd* parameter accepts a :term:`path-like object` on POSIX."
msgstr "Параметр *cwd* принимает объект, похожий на путь, в POSIX."

#: ../../library/subprocess.rst:577
msgid "*cwd* parameter accepts a :term:`path-like object` on Windows."
msgstr "Параметр *cwd* принимает объект, похожий на путь, в Windows."

#: ../../library/subprocess.rst:580
msgid "*cwd* parameter accepts a bytes object on Windows."
msgstr "Параметр *cwd* принимает объект байтов в Windows."

#: ../../library/subprocess.rst:583
msgid ""
"If *restore_signals* is true (the default) all signals that Python has set "
"to SIG_IGN are restored to SIG_DFL in the child process before the exec. "
"Currently this includes the SIGPIPE, SIGXFZ and SIGXFSZ signals. (POSIX only)"
msgstr ""
"Если *restore_signals* имеет значение true (по умолчанию), все сигналы, "
"которым Python установил значение SIG_IGN, восстанавливаются до SIG_DFL в "
"дочернем процессе перед выполнением. В настоящее время сюда входят сигналы "
"SIGPIPE, SIGXFZ и SIGXFSZ. (только POSIX)"

#: ../../library/subprocess.rst:588
msgid "*restore_signals* was added."
msgstr "*restore_signals* был добавлен."

#: ../../library/subprocess.rst:591
msgid ""
"If *start_new_session* is true the setsid() system call will be made in the "
"child process prior to the execution of the subprocess.  (POSIX only)"
msgstr ""

#: ../../library/subprocess.rst:594
msgid "*start_new_session* was added."
msgstr "Была добавлена функция *start_new_session*."

#: ../../library/subprocess.rst:597
msgid ""
"If *group* is not ``None``, the setregid() system call will be made in the "
"child process prior to the execution of the subprocess. If the provided "
"value is a string, it will be looked up via :func:`grp.getgrnam()` and the "
"value in ``gr_gid`` will be used. If the value is an integer, it will be "
"passed verbatim. (POSIX only)"
msgstr ""

#: ../../library/subprocess.rst:603 ../../library/subprocess.rst:612
#: ../../library/subprocess.rst:621 ../../library/subprocess.rst:627
msgid ":ref:`Availability <availability>`: POSIX"
msgstr ":ref:`Availability <availability>`: POSIX"

#: ../../library/subprocess.rst:606
msgid ""
"If *extra_groups* is not ``None``, the setgroups() system call will be made "
"in the child process prior to the execution of the subprocess. Strings "
"provided in *extra_groups* will be looked up via :func:`grp.getgrnam()` and "
"the values in ``gr_gid`` will be used. Integer values will be passed "
"verbatim. (POSIX only)"
msgstr ""

#: ../../library/subprocess.rst:615
msgid ""
"If *user* is not ``None``, the setreuid() system call will be made in the "
"child process prior to the execution of the subprocess. If the provided "
"value is a string, it will be looked up via :func:`pwd.getpwnam()` and the "
"value in ``pw_uid`` will be used. If the value is an integer, it will be "
"passed verbatim. (POSIX only)"
msgstr ""

#: ../../library/subprocess.rst:624
msgid ""
"If *umask* is not negative, the umask() system call will be made in the "
"child process prior to the execution of the subprocess."
msgstr ""
"Если *umask* не является отрицательным, системный вызов umask() будет "
"выполнен в дочернем процессе перед выполнением подпроцесса."

#: ../../library/subprocess.rst:630
msgid ""
"If *env* is not ``None``, it must be a mapping that defines the environment "
"variables for the new process; these are used instead of the default "
"behavior of inheriting the current process' environment. This mapping can be "
"str to str on any platform or bytes to bytes on POSIX platforms much like :"
"data:`os.environ` or :data:`os.environb`."
msgstr ""
"Если *env* не имеет значения None, это должно быть отображение, определяющее "
"переменные среды для нового процесса; они используются вместо стандартного "
"поведения при наследовании среды текущего процесса. Это сопоставление может "
"быть строкой в ​​строку на любой платформе или байтами в байты на платформах "
"POSIX, подобно :data:`os.environ` или :data:`os.environb`."

#: ../../library/subprocess.rst:638
msgid ""
"If specified, *env* must provide any variables required for the program to "
"execute.  On Windows, in order to run a `side-by-side assembly`_ the "
"specified *env* **must** include a valid :envvar:`SystemRoot`."
msgstr ""
"Если указано, *env* должен предоставить все переменные, необходимые для "
"выполнения программы. В Windows, чтобы запустить `параллельную сборку`_, "
"указанный *env* **должен** включать действительный :envvar:`SystemRoot`."

#: ../../library/subprocess.rst:644
msgid ""
"If *encoding* or *errors* are specified, or *text* is true, the file objects "
"*stdin*, *stdout* and *stderr* are opened in text mode with the specified "
"encoding and *errors*, as described above in :ref:`frequently-used-"
"arguments`. The *universal_newlines* argument is equivalent  to *text* and "
"is provided for backwards compatibility. By default, file objects are opened "
"in binary mode."
msgstr ""

#: ../../library/subprocess.rst:650
msgid "*encoding* and *errors* were added."
msgstr "Добавлены *кодировка* и *ошибки*."

#: ../../library/subprocess.rst:653 ../../library/subprocess.rst:1279
msgid "*text* was added as a more readable alias for *universal_newlines*."
msgstr ""
"*text* был добавлен как более читаемый псевдоним для *universal_newlines*."

#: ../../library/subprocess.rst:656
msgid ""
"If given, *startupinfo* will be a :class:`STARTUPINFO` object, which is "
"passed to the underlying ``CreateProcess`` function. *creationflags*, if "
"given, can be one or more of the following flags:"
msgstr ""

#: ../../library/subprocess.rst:660
msgid ":data:`CREATE_NEW_CONSOLE`"
msgstr ":data:`CREATE_NEW_CONSOLE`"

#: ../../library/subprocess.rst:661
msgid ":data:`CREATE_NEW_PROCESS_GROUP`"
msgstr ":data:`CREATE_NEW_PROCESS_GROUP`"

#: ../../library/subprocess.rst:662
msgid ":data:`ABOVE_NORMAL_PRIORITY_CLASS`"
msgstr ":data:`ABOVE_NORMAL_PRIORITY_CLASS`"

#: ../../library/subprocess.rst:663
msgid ":data:`BELOW_NORMAL_PRIORITY_CLASS`"
msgstr ":data:`BELOW_NORMAL_PRIORITY_CLASS`"

#: ../../library/subprocess.rst:664
msgid ":data:`HIGH_PRIORITY_CLASS`"
msgstr ":data:`HIGH_PRIORITY_CLASS`"

#: ../../library/subprocess.rst:665
msgid ":data:`IDLE_PRIORITY_CLASS`"
msgstr ":data:`IDLE_PRIORITY_CLASS`"

#: ../../library/subprocess.rst:666
msgid ":data:`NORMAL_PRIORITY_CLASS`"
msgstr ":data:`NORMAL_PRIORITY_CLASS`"

#: ../../library/subprocess.rst:667
msgid ":data:`REALTIME_PRIORITY_CLASS`"
msgstr ":data:`REALTIME_PRIORITY_CLASS`"

#: ../../library/subprocess.rst:668
msgid ":data:`CREATE_NO_WINDOW`"
msgstr ":data:`CREATE_NO_WINDOW`"

#: ../../library/subprocess.rst:669
msgid ":data:`DETACHED_PROCESS`"
msgstr ":data:`DETACHED_PROCESS`"

#: ../../library/subprocess.rst:670
msgid ":data:`CREATE_DEFAULT_ERROR_MODE`"
msgstr ":data:`CREATE_DEFAULT_ERROR_MODE`"

#: ../../library/subprocess.rst:671
msgid ":data:`CREATE_BREAKAWAY_FROM_JOB`"
msgstr ":data:`CREATE_BREAKAWAY_FROM_JOB`"

#: ../../library/subprocess.rst:673
msgid ""
"*pipesize* can be used to change the size of the pipe when :data:`PIPE` is "
"used for *stdin*, *stdout* or *stderr*. The size of the pipe is only changed "
"on platforms that support this (only Linux at this time of writing). Other "
"platforms will ignore this parameter."
msgstr ""
"*pipesize* можно использовать для изменения размера канала, когда :data:"
"`PIPE` используется для *stdin*, *stdout* или *stderr*. Размер канала "
"изменяется только на платформах, которые это поддерживают (на момент "
"написания статьи только Linux). Другие платформы будут игнорировать этот "
"параметр."

#: ../../library/subprocess.rst:678
msgid "The ``pipesize`` parameter was added."
msgstr ""

#: ../../library/subprocess.rst:681
msgid ""
"Popen objects are supported as context managers via the :keyword:`with` "
"statement: on exit, standard file descriptors are closed, and the process is "
"waited for. ::"
msgstr ""
"Объекты Popen поддерживаются в качестве менеджеров контекста с помощью "
"оператора :keyword:`with`: при выходе стандартные файловые дескрипторы "
"закрываются и процесс ожидает завершения. ::"

#: ../../library/subprocess.rst:688
msgid ""
"Raises an :ref:`auditing event <auditing>` ``subprocess.Popen`` with "
"arguments ``executable``, ``args``, ``cwd``, ``env``."
msgstr ""

#: ../../library/subprocess.rst:690
msgid ""
"Popen and the other functions in this module that use it raise an :ref:"
"`auditing event <auditing>` ``subprocess.Popen`` with arguments "
"``executable``, ``args``, ``cwd``, and ``env``. The value for ``args`` may "
"be a single string or a list of strings, depending on platform."
msgstr ""
"Popen и другие функции в этом модуле, которые его используют, вызывают "
"событие аудита <auditing>``subprocess.Popen`` с аргументами ``executable``, "
"``args``, ``cwd``, и ``окр``. Значением args может быть одна строка или "
"список строк, в зависимости от платформы."

#: ../../library/subprocess.rst:695
msgid "Added context manager support."
msgstr "Добавлена ​​поддержка контекстного менеджера."

#: ../../library/subprocess.rst:698
msgid ""
"Popen destructor now emits a :exc:`ResourceWarning` warning if the child "
"process is still running."
msgstr ""
"Деструктор Popen теперь выдает предупреждение :exc:`ResourceWarning`, если "
"дочерний процесс все еще работает."

#: ../../library/subprocess.rst:702
msgid ""
"Popen can use :func:`os.posix_spawn` in some cases for better performance. "
"On Windows Subsystem for Linux and QEMU User Emulation, Popen constructor "
"using :func:`os.posix_spawn` no longer raise an exception on errors like "
"missing program, but the child process fails with a non-zero :attr:`~Popen."
"returncode`."
msgstr ""
"Popen может использовать :func:`os.posix_spawn` в некоторых случаях для "
"повышения производительности. В подсистеме Windows для Linux и "
"пользовательской эмуляции QEMU конструктор Popen, использующий :func:`os."
"posix_spawn`, больше не вызывает исключение при таких ошибках, как "
"отсутствие программы, но дочерний процесс завершается с ошибкой с ненулевым :"
"attr:`~Popen.returncode `."

#: ../../library/subprocess.rst:711
msgid "Exceptions"
msgstr "Исключения"

#: ../../library/subprocess.rst:713
msgid ""
"Exceptions raised in the child process, before the new program has started "
"to execute, will be re-raised in the parent."
msgstr ""
"Исключения, возникшие в дочернем процессе до начала выполнения новой "
"программы, будут повторно вызваны в родительском процессе."

#: ../../library/subprocess.rst:716
msgid ""
"The most common exception raised is :exc:`OSError`.  This occurs, for "
"example, when trying to execute a non-existent file.  Applications should "
"prepare for :exc:`OSError` exceptions. Note that, when ``shell=True``, :exc:"
"`OSError` will be raised by the child only if the selected shell itself was "
"not found. To determine if the shell failed to find the requested "
"application, it is necessary to check the return code or output from the "
"subprocess."
msgstr ""
"Наиболее частым исключением является :exc:`OSError`. Это происходит, "
"например, при попытке выполнить несуществующий файл. Приложения должны быть "
"готовы к исключениям :exc:`OSError`. Обратите внимание, что когда "
"``shell=True``, :exc:`OSError` будет вызван дочерним элементом только в том "
"случае, если сама выбранная оболочка не была найдена. Чтобы определить, не "
"удалось ли оболочке найти запрошенное приложение, необходимо проверить код "
"возврата или выходные данные подпроцесса."

#: ../../library/subprocess.rst:723
msgid ""
"A :exc:`ValueError` will be raised if :class:`Popen` is called with invalid "
"arguments."
msgstr ""
"Ошибка :exc:`ValueError` будет вызвана, если :class:`Popen` вызывается с "
"недопустимыми аргументами."

#: ../../library/subprocess.rst:726
msgid ""
":func:`check_call` and :func:`check_output` will raise :exc:"
"`CalledProcessError` if the called process returns a non-zero return code."
msgstr ""
":func:`check_call` и :func:`check_output` вызовут :exc:`CalledProcessError`, "
"если вызванный процесс возвращает ненулевой код возврата."

#: ../../library/subprocess.rst:730
msgid ""
"All of the functions and methods that accept a *timeout* parameter, such as :"
"func:`call` and :meth:`Popen.communicate` will raise :exc:`TimeoutExpired` "
"if the timeout expires before the process exits."
msgstr ""

#: ../../library/subprocess.rst:734
msgid ""
"Exceptions defined in this module all inherit from :exc:`SubprocessError`."
msgstr ""
"Все исключения, определенные в этом модуле, наследуются от :exc:"
"`SubprocessError`."

#: ../../library/subprocess.rst:736
msgid "The :exc:`SubprocessError` base class was added."
msgstr "Был добавлен базовый класс :exc:`SubprocessError`."

#: ../../library/subprocess.rst:742
msgid "Security Considerations"
msgstr "Вопросы безопасности"

#: ../../library/subprocess.rst:744
msgid ""
"Unlike some other popen functions, this library will not implicitly choose "
"to call a system shell.  This means that all characters, including shell "
"metacharacters, can safely be passed to child processes. If the shell is "
"invoked explicitly, via ``shell=True``, it is the application's "
"responsibility to ensure that all whitespace and metacharacters are quoted "
"appropriately to avoid `shell injection <https://en.wikipedia.org/wiki/"
"Shell_injection#Shell_injection>`_ vulnerabilities. On :ref:`some platforms "
"<shlex-quote-warning>`, it is possible to use :func:`shlex.quote` for this "
"escaping."
msgstr ""
"В отличие от некоторых других функций popen, эта библиотека не будет неявно "
"вызывать системную оболочку. Это означает, что все символы, включая "
"метасимволы оболочки, можно безопасно передавать дочерним процессам. Если "
"оболочка вызывается явно, через ``shell=True``, приложение несет "
"ответственность за то, чтобы все пробелы и метасимволы были заключены в "
"кавычки соответствующим образом, чтобы избежать `` внедрения оболочки' "
"<https://en.wikipedia.org/wiki/Shell_injection #Shell_injection>`_ "
"уязвимости. На :ref:`некоторых платформах <shlex-quote-warning>` для этого "
"экранирования можно использовать :func:`shlex.quote`."

#: ../../library/subprocess.rst:754
msgid ""
"On Windows, batch files (:file:`*.bat` or :file:`*.cmd`) may be launched by "
"the operating system in a system shell regardless of the arguments passed to "
"this library. This could result in arguments being parsed according to shell "
"rules, but without any escaping added by Python. If you are intentionally "
"launching a batch file with arguments from untrusted sources, consider "
"passing ``shell=True`` to allow Python to escape special characters. See :gh:"
"`114539` for additional discussion."
msgstr ""
"В Windows пакетные файлы (:file:`*.bat` или :file:`*.cmd`) могут запускаться "
"операционной системой в системной оболочке независимо от аргументов, "
"переданных в эту библиотеку. Это может привести к анализу аргументов в "
"соответствии с правилами оболочки, но без какого-либо экранирования, "
"добавленного Python. Если вы намеренно запускаете пакетный файл с "
"аргументами из ненадежных источников, рассмотрите возможность передачи "
"``shell=True``, чтобы Python мог экранировать специальные символы. "
"Дополнительную информацию см. в :gh:`114539`."

#: ../../library/subprocess.rst:764
msgid "Popen Objects"
msgstr "Открытие объектов"

#: ../../library/subprocess.rst:766
msgid "Instances of the :class:`Popen` class have the following methods:"
msgstr "Экземпляры класса :class:`Popen` имеют следующие методы:"

#: ../../library/subprocess.rst:771
msgid ""
"Check if child process has terminated.  Set and return :attr:`~Popen."
"returncode` attribute. Otherwise, returns ``None``."
msgstr ""
"Проверьте, завершился ли дочерний процесс. Установить и вернуть атрибут :"
"attr:`~Popen.returncode`. В противном случае возвращается ``None``."

#: ../../library/subprocess.rst:777
msgid ""
"Wait for child process to terminate.  Set and return :attr:`~Popen."
"returncode` attribute."
msgstr ""
"Подождите, пока дочерний процесс завершится. Установить и вернуть атрибут :"
"attr:`~Popen.returncode`."

#: ../../library/subprocess.rst:780
msgid ""
"If the process does not terminate after *timeout* seconds, raise a :exc:"
"`TimeoutExpired` exception.  It is safe to catch this exception and retry "
"the wait."
msgstr ""
"Если процесс не завершается по истечении *timeout* секунд, вызовите "
"исключение :exc:`TimeoutExpired`. Это исключение можно безопасно перехватить "
"и повторить ожидание."

#: ../../library/subprocess.rst:786
msgid ""
"This will deadlock when using ``stdout=PIPE`` or ``stderr=PIPE`` and the "
"child process generates enough output to a pipe such that it blocks waiting "
"for the OS pipe buffer to accept more data. Use :meth:`Popen.communicate` "
"when using pipes to avoid that."
msgstr ""
"Это приведет к тупиковой ситуации при использовании stdout=PIPE или "
"stderr=PIPE, и дочерний процесс генерирует достаточно выходных данных в "
"канал, так что он блокирует ожидание, пока буфер канала ОС примет больше "
"данных. Чтобы избежать этого, используйте :meth:`Popen.communicate` при "
"использовании каналов."

#: ../../library/subprocess.rst:793
msgid ""
"The function is implemented using a busy loop (non-blocking call and short "
"sleeps). Use the :mod:`asyncio` module for an asynchronous wait: see :class:"
"`asyncio.create_subprocess_exec`."
msgstr ""

#: ../../library/subprocess.rst:797 ../../library/subprocess.rst:838
#: ../../library/subprocess.rst:1176 ../../library/subprocess.rst:1216
#: ../../library/subprocess.rst:1270
msgid "*timeout* was added."
msgstr "*тайм-аут* был добавлен."

#: ../../library/subprocess.rst:802
msgid ""
"Interact with process: Send data to stdin.  Read data from stdout and "
"stderr, until end-of-file is reached.  Wait for process to terminate and set "
"the :attr:`~Popen.returncode` attribute.  The optional *input* argument "
"should be data to be sent to the child process, or ``None``, if no data "
"should be sent to the child.  If streams were opened in text mode, *input* "
"must be a string. Otherwise, it must be bytes."
msgstr ""
"Взаимодействие с процессом: отправка данных на стандартный ввод. Считайте "
"данные из stdout и stderr, пока не будет достигнут конец файла. Дождитесь "
"завершения процесса и установите атрибут :attr:`~Popen.returncode`. "
"Необязательный аргумент *input* должен быть данными, которые будут "
"отправлены дочернему процессу, или ``None``, если никакие данные не должны "
"отправляться дочернему процессу. Если потоки были открыты в текстовом "
"режиме, *input* должен быть строкой. В противном случае это должны быть "
"байты."

#: ../../library/subprocess.rst:809
msgid ""
":meth:`communicate` returns a tuple ``(stdout_data, stderr_data)``. The data "
"will be strings if streams were opened in text mode; otherwise, bytes."
msgstr ""
":meth:`communicate` возвращает кортеж ``(stdout_data, stderr_data)``. Данные "
"будут строками, если потоки открывались в текстовом режиме; в противном "
"случае — байты."

#: ../../library/subprocess.rst:813
msgid ""
"Note that if you want to send data to the process's stdin, you need to "
"create the Popen object with ``stdin=PIPE``.  Similarly, to get anything "
"other than ``None`` in the result tuple, you need to give ``stdout=PIPE`` "
"and/or ``stderr=PIPE`` too."
msgstr ""
"Обратите внимание: если вы хотите отправить данные на стандартный ввод "
"процесса, вам необходимо создать объект Popen с помощью ``stdin=PIPE``. "
"Аналогично, чтобы получить в кортеже результатов что-либо, кроме None, вам "
"необходимо также указать stdout=PIPE и/или stderr=PIPE."

#: ../../library/subprocess.rst:818
msgid ""
"If the process does not terminate after *timeout* seconds, a :exc:"
"`TimeoutExpired` exception will be raised.  Catching this exception and "
"retrying communication will not lose any output."
msgstr ""
"Если процесс не завершится по истечении *timeout* секунд, будет выдано "
"исключение :exc:`TimeoutExpired`. Перехват этого исключения и повторная "
"попытка связи не приведут к потере результатов."

#: ../../library/subprocess.rst:822
msgid ""
"The child process is not killed if the timeout expires, so in order to "
"cleanup properly a well-behaved application should kill the child process "
"and finish communication::"
msgstr ""
"Дочерний процесс не уничтожается по истечении тайм-аута, поэтому для "
"правильной очистки корректное приложение должно завершить дочерний процесс и "
"завершить связь:"

#: ../../library/subprocess.rst:835
msgid ""
"The data read is buffered in memory, so do not use this method if the data "
"size is large or unlimited."
msgstr ""
"Считываемые данные буферизуются в памяти, поэтому не используйте этот метод, "
"если размер данных большой или неограниченный."

#: ../../library/subprocess.rst:844
msgid "Sends the signal *signal* to the child."
msgstr "Посылает сигнал *сигнал* ребенку."

#: ../../library/subprocess.rst:846
msgid "Do nothing if the process completed."
msgstr "Ничего не делайте, если процесс завершен."

#: ../../library/subprocess.rst:850
msgid ""
"On Windows, SIGTERM is an alias for :meth:`terminate`. CTRL_C_EVENT and "
"CTRL_BREAK_EVENT can be sent to processes started with a *creationflags* "
"parameter which includes `CREATE_NEW_PROCESS_GROUP`."
msgstr ""

#: ../../library/subprocess.rst:857
msgid ""
"Stop the child. On POSIX OSs the method sends SIGTERM to the child. On "
"Windows the Win32 API function :c:func:`TerminateProcess` is called to stop "
"the child."
msgstr ""

#: ../../library/subprocess.rst:864
msgid ""
"Kills the child. On POSIX OSs the function sends SIGKILL to the child. On "
"Windows :meth:`kill` is an alias for :meth:`terminate`."
msgstr ""
"Убивает ребенка. В ОС POSIX функция отправляет SIGKILL дочернему элементу. В "
"Windows :meth:`kill` является псевдонимом для :meth:`terminate`."

#: ../../library/subprocess.rst:868
msgid ""
"The following attributes are also set by the class for you to access. "
"Reassigning them to new values is unsupported:"
msgstr ""
"Следующие атрибуты также устанавливаются классом для доступа. Переназначение "
"им новых значений не поддерживается:"

#: ../../library/subprocess.rst:873
msgid ""
"The *args* argument as it was passed to :class:`Popen` -- a sequence of "
"program arguments or else a single string."
msgstr ""
"Аргумент *args* в том виде, в каком он был передан :class:`Popen` — "
"последовательность аргументов программы или одна строка."

#: ../../library/subprocess.rst:880
msgid ""
"If the *stdin* argument was :data:`PIPE`, this attribute is a writeable "
"stream object as returned by :func:`open`. If the *encoding* or *errors* "
"arguments were specified or the *text* or *universal_newlines* argument was "
"``True``, the stream is a text stream, otherwise it is a byte stream. If the "
"*stdin* argument was not :data:`PIPE`, this attribute is ``None``."
msgstr ""
"Если аргумент *stdin* был :data:`PIPE`, этот атрибут является записываемым "
"объектом потока, возвращаемым :func:`open`. Если были указаны аргументы "
"*encoding* или *errors* или аргумент *text* или *universal_newlines* имел "
"значение «True», поток является текстовым потоком, в противном случае это "
"поток байтов. Если аргумент *stdin* не был :data:`PIPE`, этот атрибут имеет "
"значение ``None``."

#: ../../library/subprocess.rst:889
msgid ""
"If the *stdout* argument was :data:`PIPE`, this attribute is a readable "
"stream object as returned by :func:`open`. Reading from the stream provides "
"output from the child process. If the *encoding* or *errors* arguments were "
"specified or the *text* or *universal_newlines* argument was ``True``, the "
"stream is a text stream, otherwise it is a byte stream. If the *stdout* "
"argument was not :data:`PIPE`, this attribute is ``None``."
msgstr ""
"Если аргумент *stdout* был :data:`PIPE`, этот атрибут является читаемым "
"объектом потока, возвращаемым :func:`open`. Чтение из потока обеспечивает "
"вывод дочернего процесса. Если были указаны аргументы *encoding* или "
"*errors* или аргумент *text* или *universal_newlines* имел значение «True», "
"поток является текстовым потоком, в противном случае это поток байтов. Если "
"аргумент *stdout* не был :data:`PIPE`, этот атрибут имеет значение ``None``."

#: ../../library/subprocess.rst:899
msgid ""
"If the *stderr* argument was :data:`PIPE`, this attribute is a readable "
"stream object as returned by :func:`open`. Reading from the stream provides "
"error output from the child process. If the *encoding* or *errors* arguments "
"were specified or the *text* or *universal_newlines* argument was ``True``, "
"the stream is a text stream, otherwise it is a byte stream. If the *stderr* "
"argument was not :data:`PIPE`, this attribute is ``None``."
msgstr ""
"Если аргумент *stderr* был :data:`PIPE`, этот атрибут является читаемым "
"объектом потока, возвращаемым :func:`open`. Чтение из потока обеспечивает "
"вывод ошибок дочернего процесса. Если были указаны аргументы *encoding* или "
"*errors* или аргумент *text* или *universal_newlines* имел значение «True», "
"поток является текстовым потоком, в противном случае это поток байтов. Если "
"аргумент *stderr* не был :data:`PIPE`, этот атрибут имеет значение ``None``."

#: ../../library/subprocess.rst:908
msgid ""
"Use :meth:`~Popen.communicate` rather than :attr:`.stdin.write <Popen."
"stdin>`, :attr:`.stdout.read <Popen.stdout>` or :attr:`.stderr.read <Popen."
"stderr>` to avoid deadlocks due to any of the other OS pipe buffers filling "
"up and blocking the child process."
msgstr ""
"Используйте :meth:`~Popen.communicate` вместо :attr:`.stdin.write <Popen."
"stdin>`, :attr:`.stdout.read <Popen.stdout>` или :attr:`.stderr.read <Popen."
"stderr>`, чтобы избежать взаимоблокировок из-за заполнения буферов других "
"каналов ОС и блокировки дочернего процесса."

#: ../../library/subprocess.rst:916
msgid "The process ID of the child process."
msgstr "Идентификатор дочернего процесса."

#: ../../library/subprocess.rst:918
msgid ""
"Note that if you set the *shell* argument to ``True``, this is the process "
"ID of the spawned shell."
msgstr ""
"Обратите внимание: если вы установите для аргумента *shell* значение «True», "
"это будет идентификатор процесса порожденной оболочки."

#: ../../library/subprocess.rst:924
msgid ""
"The child return code, set by :meth:`poll` and :meth:`wait` (and indirectly "
"by :meth:`communicate`).  A ``None`` value indicates that the process hasn't "
"terminated yet."
msgstr ""

#: ../../library/subprocess.rst:933
msgid "Windows Popen Helpers"
msgstr "Помощники Windows Popen"

#: ../../library/subprocess.rst:935
msgid ""
"The :class:`STARTUPINFO` class and following constants are only available on "
"Windows."
msgstr ""
"Класс :class:`STARTUPINFO` и следующие константы доступны только в Windows."

#: ../../library/subprocess.rst:941
msgid ""
"Partial support of the Windows `STARTUPINFO <https://msdn.microsoft.com/en-"
"us/library/ms686331(v=vs.85).aspx>`__ structure is used for :class:`Popen` "
"creation.  The following attributes can be set by passing them as keyword-"
"only arguments."
msgstr ""
"Частичная поддержка структуры Windows `STARTUPINFO <https://msdn.microsoft."
"com/en-us/library/ms686331(v=vs.85).aspx>`__ используется для создания :"
"class:`Popen`. Следующие атрибуты можно установить, передав их как "
"аргументы, содержащие только ключевые слова."

#: ../../library/subprocess.rst:946
msgid "Keyword-only argument support was added."
msgstr "Была добавлена ​​поддержка аргументов только по ключевым словам."

#: ../../library/subprocess.rst:951
msgid ""
"A bit field that determines whether certain :class:`STARTUPINFO` attributes "
"are used when the process creates a window. ::"
msgstr ""
"Битовое поле, определяющее, используются ли определенные атрибуты :class:"
"`STARTUPINFO`, когда процесс создает окно. ::"

#: ../../library/subprocess.rst:959
msgid ""
"If :attr:`dwFlags` specifies :data:`STARTF_USESTDHANDLES`, this attribute is "
"the standard input handle for the process. If :data:`STARTF_USESTDHANDLES` "
"is not specified, the default for standard input is the keyboard buffer."
msgstr ""
"Если :attr:`dwFlags` указывает :data:`STARTF_USESTDHANDLES`, этот атрибут "
"является стандартным дескриптором ввода для процесса. Если :data:"
"`STARTF_USESTDHANDLES` не указан, по умолчанию для стандартного ввода "
"используется буфер клавиатуры."

#: ../../library/subprocess.rst:966
msgid ""
"If :attr:`dwFlags` specifies :data:`STARTF_USESTDHANDLES`, this attribute is "
"the standard output handle for the process. Otherwise, this attribute is "
"ignored and the default for standard output is the console window's buffer."
msgstr ""
"Если :attr:`dwFlags` указывает :data:`STARTF_USESTDHANDLES`, этот атрибут "
"является стандартным дескриптором вывода для процесса. В противном случае "
"этот атрибут игнорируется, и стандартным выводом по умолчанию является буфер "
"окна консоли."

#: ../../library/subprocess.rst:973
msgid ""
"If :attr:`dwFlags` specifies :data:`STARTF_USESTDHANDLES`, this attribute is "
"the standard error handle for the process. Otherwise, this attribute is "
"ignored and the default for standard error is the console window's buffer."
msgstr ""
"Если :attr:`dwFlags` указывает :data:`STARTF_USESTDHANDLES`, этот атрибут "
"является стандартным дескриптором ошибки для процесса. В противном случае "
"этот атрибут игнорируется, и значением по умолчанию для стандартной ошибки "
"является буфер окна консоли."

#: ../../library/subprocess.rst:979
msgid ""
"If :attr:`dwFlags` specifies :data:`STARTF_USESHOWWINDOW`, this attribute "
"can be any of the values that can be specified in the ``nCmdShow`` parameter "
"for the `ShowWindow <https://msdn.microsoft.com/en-us/library/"
"ms633548(v=vs.85).aspx>`__ function, except for ``SW_SHOWDEFAULT``. "
"Otherwise, this attribute is ignored."
msgstr ""
"Если :attr:`dwFlags` указывает :data:`STARTF_USESHOWWINDOW`, этот атрибут "
"может быть любым из значений, которые могут быть указаны в параметре "
"``nCmdShow`` для ``ShowWindow <https://msdn.microsoft.com/ en-us/library/"
"ms633548(v=vs.85).aspx>`__, за исключением SW_SHOWDEFAULT``. В противном "
"случае этот атрибут игнорируется."

#: ../../library/subprocess.rst:986
msgid ""
":data:`SW_HIDE` is provided for this attribute. It is used when :class:"
"`Popen` is called with ``shell=True``."
msgstr ""
"Для этого атрибута предусмотрен :data:`SW_HIDE`. Он используется, когда :"
"class:`Popen` вызывается с ``shell=True``."

#: ../../library/subprocess.rst:991
msgid ""
"A dictionary of additional attributes for process creation as given in "
"``STARTUPINFOEX``, see `UpdateProcThreadAttribute <https://msdn.microsoft."
"com/en-us/library/windows/desktop/ms686880(v=vs.85).aspx>`__."
msgstr ""
"Словарь дополнительных атрибутов для создания процессов, как указано в "
"``STARTUPINFOEX``, см. в ``UpdateProcThreadAttribute <https://msdn.microsoft."
"com/en-us/library/windows/desktop/ms686880(v=vs.85). aspx>`__."

#: ../../library/subprocess.rst:995
msgid "Supported attributes:"
msgstr "Поддерживаемые атрибуты:"

#: ../../library/subprocess.rst:1013
msgid "**handle_list**"
msgstr "**handle_list**"

#: ../../library/subprocess.rst:998
msgid ""
"Sequence of handles that will be inherited. *close_fds* must be true if non-"
"empty."
msgstr ""
"Последовательность дескрипторов, которые будут унаследованы. *close_fds* "
"должно иметь значение true, если не пусто."

#: ../../library/subprocess.rst:1001
msgid ""
"The handles must be temporarily made inheritable by :func:`os."
"set_handle_inheritable` when passed to the :class:`Popen` constructor, else :"
"class:`OSError` will be raised with Windows error "
"``ERROR_INVALID_PARAMETER`` (87)."
msgstr ""
"Дескрипторы должны быть временно сделаны наследуемыми с помощью :func:`os."
"set_handle_inheritable` при передаче в конструктор :class:`Popen`, иначе :"
"class:`OSError` будет вызван с ошибкой Windows ``ERROR_INVALID_PARAMETER`` "
"(87)."

#: ../../library/subprocess.rst:1008
msgid ""
"In a multithreaded process, use caution to avoid leaking handles that are "
"marked inheritable when combining this feature with concurrent calls to "
"other process creation functions that inherit all handles such as :func:`os."
"system`.  This also applies to standard handle redirection, which "
"temporarily creates inheritable handles."
msgstr ""
"В многопоточном процессе будьте осторожны, чтобы избежать утечки "
"дескрипторов, помеченных как наследуемые, при объединении этой функции с "
"одновременными вызовами других функций создания процессов, которые наследуют "
"все дескрипторы, такие как :func:`os.system`. Это также относится к "
"стандартному перенаправлению дескрипторов, которое временно создает "
"наследуемые дескрипторы."

#: ../../library/subprocess.rst:1018
msgid "Windows Constants"
msgstr "Константы Windows"

#: ../../library/subprocess.rst:1020
msgid "The :mod:`subprocess` module exposes the following constants."
msgstr "Модуль :mod:`subprocess` предоставляет следующие константы."

#: ../../library/subprocess.rst:1024
msgid ""
"The standard input device. Initially, this is the console input buffer, "
"``CONIN$``."
msgstr ""
"Стандартное устройство ввода. Изначально это входной буфер консоли, "
"``CONIN$``."

#: ../../library/subprocess.rst:1029
msgid ""
"The standard output device. Initially, this is the active console screen "
"buffer, ``CONOUT$``."
msgstr ""
"Стандартное устройство вывода. Изначально это активный экранный буфер "
"консоли CONOUT$``."

#: ../../library/subprocess.rst:1034
msgid ""
"The standard error device. Initially, this is the active console screen "
"buffer, ``CONOUT$``."
msgstr ""
"Устройство стандартной ошибки. Изначально это активный экранный буфер "
"консоли CONOUT$``."

#: ../../library/subprocess.rst:1039
msgid "Hides the window. Another window will be activated."
msgstr "Скрывает окно. Откроется другое окно."

#: ../../library/subprocess.rst:1043
msgid ""
"Specifies that the :attr:`STARTUPINFO.hStdInput`, :attr:`STARTUPINFO."
"hStdOutput`, and :attr:`STARTUPINFO.hStdError` attributes contain additional "
"information."
msgstr ""
"Указывает, что атрибуты :attr:`STARTUPINFO.hStdInput`, :attr:`STARTUPINFO."
"hStdOutput` и :attr:`STARTUPINFO.hStdError` содержат дополнительную "
"информацию."

#: ../../library/subprocess.rst:1049
msgid ""
"Specifies that the :attr:`STARTUPINFO.wShowWindow` attribute contains "
"additional information."
msgstr ""
"Указывает, что атрибут :attr:`STARTUPINFO.wShowWindow` содержит "
"дополнительную информацию."

#: ../../library/subprocess.rst:1054
msgid ""
"The new process has a new console, instead of inheriting its parent's "
"console (the default)."
msgstr ""
"Новый процесс имеет новую консоль вместо того, чтобы наследовать консоль "
"своего родителя (по умолчанию)."

#: ../../library/subprocess.rst:1059
msgid ""
"A :class:`Popen` ``creationflags`` parameter to specify that a new process "
"group will be created. This flag is necessary for using :func:`os.kill` on "
"the subprocess."
msgstr ""
"Параметр :class:`Popen` ``creationflags``, указывающий, что будет создана "
"новая группа процессов. Этот флаг необходим для использования :func:`os."
"kill` в подпроцессе."

#: ../../library/subprocess.rst:1063
msgid "This flag is ignored if :data:`CREATE_NEW_CONSOLE` is specified."
msgstr "Этот флаг игнорируется, если указан :data:`CREATE_NEW_CONSOLE`."

#: ../../library/subprocess.rst:1067
msgid ""
"A :class:`Popen` ``creationflags`` parameter to specify that a new process "
"will have an above average priority."
msgstr ""
"Параметр :class:`Popen` ``creationflags``, указывающий, что новый процесс "
"будет иметь приоритет выше среднего."

#: ../../library/subprocess.rst:1074
msgid ""
"A :class:`Popen` ``creationflags`` parameter to specify that a new process "
"will have a below average priority."
msgstr ""
"Параметр :class:`Popen` ``creationflags``, указывающий, что новый процесс "
"будет иметь приоритет ниже среднего."

#: ../../library/subprocess.rst:1081
msgid ""
"A :class:`Popen` ``creationflags`` parameter to specify that a new process "
"will have a high priority."
msgstr ""
"Параметр :class:`Popen` ``creationflags``, указывающий, что новый процесс "
"будет иметь высокий приоритет."

#: ../../library/subprocess.rst:1088
msgid ""
"A :class:`Popen` ``creationflags`` parameter to specify that a new process "
"will have an idle (lowest) priority."
msgstr ""
"Параметр :class:`Popen` ``creationflags``, указывающий, что новый процесс "
"будет иметь приоритет ожидания (самый низкий)."

#: ../../library/subprocess.rst:1095
msgid ""
"A :class:`Popen` ``creationflags`` parameter to specify that a new process "
"will have an normal priority. (default)"
msgstr ""

#: ../../library/subprocess.rst:1102
msgid ""
"A :class:`Popen` ``creationflags`` parameter to specify that a new process "
"will have realtime priority. You should almost never use "
"REALTIME_PRIORITY_CLASS, because this interrupts system threads that manage "
"mouse input, keyboard input, and background disk flushing. This class can be "
"appropriate for applications that \"talk\" directly to hardware or that "
"perform brief tasks that should have limited interruptions."
msgstr ""
"Параметр :class:`Popen` ``creationflags``, указывающий, что новый процесс "
"будет иметь приоритет в реальном времени. Вам почти никогда не следует "
"использовать REALTIME_PRIORITY_CLASS, поскольку это прерывает системные "
"потоки, которые управляют вводом с помощью мыши, вводом с клавиатуры и "
"фоновой очисткой диска. Этот класс может подойти для приложений, которые "
"«общаются» напрямую с оборудованием или выполняют короткие задачи, перерывы "
"в работе которых должны быть ограничены."

#: ../../library/subprocess.rst:1113
msgid ""
"A :class:`Popen` ``creationflags`` parameter to specify that a new process "
"will not create a window."
msgstr ""
"Параметр :class:`Popen` ``creationflags``, указывающий, что новый процесс не "
"будет создавать окно."

#: ../../library/subprocess.rst:1120
msgid ""
"A :class:`Popen` ``creationflags`` parameter to specify that a new process "
"will not inherit its parent's console. This value cannot be used with "
"CREATE_NEW_CONSOLE."
msgstr ""
"Параметр :class:`Popen` ``creationflags``, указывающий, что новый процесс не "
"будет наследовать консоль своего родителя. Это значение нельзя использовать "
"с CREATE_NEW_CONSOLE."

#: ../../library/subprocess.rst:1128
msgid ""
"A :class:`Popen` ``creationflags`` parameter to specify that a new process "
"does not inherit the error mode of the calling process. Instead, the new "
"process gets the default error mode. This feature is particularly useful for "
"multithreaded shell applications that run with hard errors disabled."
msgstr ""
"Параметр :class:`Popen` ``creationflags``, указывающий, что новый процесс не "
"наследует режим ошибки вызывающего процесса. Вместо этого новый процесс "
"получает режим ошибок по умолчанию. Эта функция особенно полезна для "
"многопоточных приложений оболочки, которые работают с отключенными "
"серьезными ошибками."

#: ../../library/subprocess.rst:1138
msgid ""
"A :class:`Popen` ``creationflags`` parameter to specify that a new process "
"is not associated with the job."
msgstr ""
"Параметр :class:`Popen` ``creationflags``, указывающий, что новый процесс не "
"связан с заданием."

#: ../../library/subprocess.rst:1146
msgid "Older high-level API"
msgstr "Более старый высокоуровневый API"

#: ../../library/subprocess.rst:1148
msgid ""
"Prior to Python 3.5, these three functions comprised the high level API to "
"subprocess. You can now use :func:`run` in many cases, but lots of existing "
"code calls these functions."
msgstr ""
"До Python 3.5 эти три функции включали API высокого уровня для подпроцесса. "
"Теперь вы можете использовать :func:`run` во многих случаях, но многие "
"существующие коды вызывают эти функции."

#: ../../library/subprocess.rst:1155
msgid ""
"Run the command described by *args*.  Wait for command to complete, then "
"return the :attr:`~Popen.returncode` attribute."
msgstr ""
"Запустите команду, описанную *args*. Дождитесь завершения команды, затем "
"верните атрибут :attr:`~Popen.returncode`."

#: ../../library/subprocess.rst:1158 ../../library/subprocess.rst:1198
msgid ""
"Code needing to capture stdout or stderr should use :func:`run` instead::"
msgstr ""
"Код, которому необходимо захватить stdout или stderr, должен вместо этого "
"использовать :func:`run`::"

#: ../../library/subprocess.rst:1162 ../../library/subprocess.rst:1202
msgid "To suppress stdout or stderr, supply a value of :data:`DEVNULL`."
msgstr ""
"Чтобы подавить стандартный вывод или стандартный поток ошибок, укажите "
"значение :data:`DEVNULL`."

#: ../../library/subprocess.rst:1164 ../../library/subprocess.rst:1204
msgid ""
"The arguments shown above are merely some common ones. The full function "
"signature is the same as that of the :class:`Popen` constructor - this "
"function passes all supplied arguments other than *timeout* directly through "
"to that interface."
msgstr ""
"Аргументы, показанные выше, являются лишь некоторыми общими. Полная "
"сигнатура функции такая же, как у конструктора :class:`Popen` — эта функция "
"передает все предоставленные аргументы, кроме *timeout*, непосредственно в "
"этот интерфейс."

#: ../../library/subprocess.rst:1171 ../../library/subprocess.rst:1211
msgid ""
"Do not use ``stdout=PIPE`` or ``stderr=PIPE`` with this function.  The child "
"process will block if it generates enough output to a pipe to fill up the OS "
"pipe buffer as the pipes are not being read from."
msgstr ""
"Не используйте stdout=PIPE или stderr=PIPE с этой функцией. Дочерний процесс "
"заблокируется, если он сгенерирует достаточно выходных данных в канал для "
"заполнения буфера канала ОС, поскольку каналы не считываются."

#: ../../library/subprocess.rst:1191
msgid ""
"Run command with arguments.  Wait for command to complete. If the return "
"code was zero then return, otherwise raise :exc:`CalledProcessError`. The :"
"exc:`CalledProcessError` object will have the return code in the :attr:"
"`~CalledProcessError.returncode` attribute. If :func:`check_call` was unable "
"to start the process it will propagate the exception that was raised."
msgstr ""
"Запустить команду с аргументами. Дождитесь завершения команды. Если код "
"возврата был нулевым, вернитесь, в противном случае вызовите :exc:"
"`CalledProcessError`. Объект :exc:`CalledProcessError` будет иметь код "
"возврата в атрибуте :attr:`~CalledProcessError.returncode`. Если :func:"
"`check_call` не смог запустить процесс, он распространит возникшее "
"исключение."

#: ../../library/subprocess.rst:1233
msgid "Run command with arguments and return its output."
msgstr "Запустите команду с аргументами и верните ее вывод."

#: ../../library/subprocess.rst:1235
msgid ""
"If the return code was non-zero it raises a :exc:`CalledProcessError`. The :"
"exc:`CalledProcessError` object will have the return code in the :attr:"
"`~CalledProcessError.returncode` attribute and any output in the :attr:"
"`~CalledProcessError.output` attribute."
msgstr ""
"Если код возврата не равен нулю, возникает ошибка :exc:`CalledProcessError`. "
"Объект :exc:`CalledProcessError` будет иметь код возврата в атрибуте :attr:"
"`~CalledProcessError.returncode` и любые выходные данные в атрибуте :attr:"
"`~CalledProcessError.output`."

#: ../../library/subprocess.rst:1240
msgid "This is equivalent to::"
msgstr "Это эквивалентно::"

#: ../../library/subprocess.rst:1244
msgid ""
"The arguments shown above are merely some common ones. The full function "
"signature is largely the same as that of :func:`run` - most arguments are "
"passed directly through to that interface. One API deviation from :func:"
"`run` behavior exists: passing ``input=None`` will behave the same as "
"``input=b''`` (or ``input=''``, depending on other arguments) rather than "
"using the parent's standard input file handle."
msgstr ""
"Аргументы, показанные выше, являются лишь некоторыми общими. Полная "
"сигнатура функции во многом такая же, как и у :func:`run` — большинство "
"аргументов передаются непосредственно в этот интерфейс. Существует одно "
"отклонение API от поведения :func:`run`: передача ``input=None`` будет вести "
"себя так же, как ``input=b''`` (или ``input=''``, в зависимости от других "
"аргументов. ), а не использовать стандартный дескриптор входного файла "
"родительского элемента."

#: ../../library/subprocess.rst:1251
msgid ""
"By default, this function will return the data as encoded bytes. The actual "
"encoding of the output data may depend on the command being invoked, so the "
"decoding to text will often need to be handled at the application level."
msgstr ""
"По умолчанию эта функция возвращает данные в виде закодированных байтов. "
"Фактическое кодирование выходных данных может зависеть от вызываемой "
"команды, поэтому декодирование в текст часто необходимо выполнять на уровне "
"приложения."

#: ../../library/subprocess.rst:1255
msgid ""
"This behaviour may be overridden by setting *text*, *encoding*, *errors*, or "
"*universal_newlines* to ``True`` as described in :ref:`frequently-used-"
"arguments` and :func:`run`."
msgstr ""
"Это поведение можно переопределить, установив для *text*, *encoding*, "
"*errors* или *universal_newlines* значение ``True``, как описано в :ref:"
"`frequly-used-arguments` и :func:`run`."

#: ../../library/subprocess.rst:1259
msgid ""
"To also capture standard error in the result, use ``stderr=subprocess."
"STDOUT``::"
msgstr ""
"Чтобы также зафиксировать стандартную ошибку в результате, используйте "
"``stderr=subprocess.STDOUT``::"

#: ../../library/subprocess.rst:1273
msgid "Support for the *input* keyword argument was added."
msgstr "Добавлена ​​поддержка аргумента ключевого слова *input*."

#: ../../library/subprocess.rst:1276
msgid "*encoding* and *errors* were added.  See :func:`run` for details."
msgstr "Добавлены *кодировка* и *ошибки*. Подробности смотрите в :func:`run`."

#: ../../library/subprocess.rst:1294
msgid "Replacing Older Functions with the :mod:`subprocess` Module"
msgstr "Замена старых функций модулем :mod:`subprocess`"

#: ../../library/subprocess.rst:1296
msgid ""
"In this section, \"a becomes b\" means that b can be used as a replacement "
"for a."
msgstr ""
"В этом разделе «a становится b» означает, что b можно использовать в "
"качестве замены a."

#: ../../library/subprocess.rst:1300
msgid ""
"All \"a\" functions in this section fail (more or less) silently if the "
"executed program cannot be found; the \"b\" replacements raise :exc:"
"`OSError` instead."
msgstr ""
"Все функции «а» в этом разделе завершаются (более или менее) незаметно, если "
"исполняемая программа не может быть найдена; замены «b» вместо этого "
"вызывают :exc:`OSError`."

#: ../../library/subprocess.rst:1304
msgid ""
"In addition, the replacements using :func:`check_output` will fail with a :"
"exc:`CalledProcessError` if the requested operation produces a non-zero "
"return code. The output is still available as the :attr:`~CalledProcessError."
"output` attribute of the raised exception."
msgstr ""
"Кроме того, замены с использованием :func:`check_output` завершится ошибкой "
"с :exc:`CalledProcessError`, если запрошенная операция выдает ненулевой код "
"возврата. Вывод по-прежнему доступен как атрибут :attr:`~CalledProcessError."
"output` возникшего исключения."

#: ../../library/subprocess.rst:1309
msgid ""
"In the following examples, we assume that the relevant functions have "
"already been imported from the :mod:`subprocess` module."
msgstr ""
"В следующих примерах мы предполагаем, что соответствующие функции уже "
"импортированы из модуля :mod:`subprocess`."

#: ../../library/subprocess.rst:1314
msgid "Replacing :program:`/bin/sh` shell command substitution"
msgstr "Замена команды оболочки :program:`/bin/sh`"

#: ../../library/subprocess.rst:1320 ../../library/subprocess.rst:1331
#: ../../library/subprocess.rst:1348
msgid "becomes::"
msgstr "становится::"

#: ../../library/subprocess.rst:1325
msgid "Replacing shell pipeline"
msgstr "Замена скорлупового трубопровода"

#: ../../library/subprocess.rst:1338
msgid ""
"The ``p1.stdout.close()`` call after starting the p2 is important in order "
"for p1 to receive a SIGPIPE if p2 exits before p1."
msgstr ""
"Вызов p1.stdout.close() после запуска p2 важен для того, чтобы p1 получил "
"SIGPIPE, если p2 завершает работу раньше p1."

#: ../../library/subprocess.rst:1341
msgid ""
"Alternatively, for trusted input, the shell's own pipeline support may still "
"be used directly:"
msgstr ""
"Альтернативно, для доверенного ввода можно напрямую использовать поддержку "
"собственного конвейера оболочки:"

#: ../../library/subprocess.rst:1354
msgid "Replacing :func:`os.system`"
msgstr "Замена :func:`os.system`"

#: ../../library/subprocess.rst:1362
msgid "Notes:"
msgstr "Примечания:"

#: ../../library/subprocess.rst:1364
msgid "Calling the program through the shell is usually not required."
msgstr "Вызов программы через оболочку обычно не требуется."

#: ../../library/subprocess.rst:1365
msgid ""
"The :func:`call` return value is encoded differently to that of :func:`os."
"system`."
msgstr ""
"Возвращаемое значение :func:`call` кодируется иначе, чем :func:`os.system`."

#: ../../library/subprocess.rst:1368
msgid ""
"The :func:`os.system` function ignores SIGINT and SIGQUIT signals while the "
"command is running, but the caller must do this separately when using the :"
"mod:`subprocess` module."
msgstr ""
"Функция :func:`os.system` игнорирует сигналы SIGINT и SIGQUIT во время "
"выполнения команды, но вызывающая сторона должна делать это отдельно при "
"использовании модуля :mod:`subprocess`."

#: ../../library/subprocess.rst:1372
msgid "A more realistic example would look like this::"
msgstr "Более реалистичный пример будет выглядеть так:"

#: ../../library/subprocess.rst:1385
msgid "Replacing the :func:`os.spawn <os.spawnl>` family"
msgstr "Замена семейства :func:`os.spawn <os.spawnl>`"

#: ../../library/subprocess.rst:1387
msgid "P_NOWAIT example::"
msgstr "Пример P_NOWAIT::"

#: ../../library/subprocess.rst:1393
msgid "P_WAIT example::"
msgstr "Пример P_WAIT::"

#: ../../library/subprocess.rst:1399
msgid "Vector example::"
msgstr "Векторный пример::"

#: ../../library/subprocess.rst:1405
msgid "Environment example::"
msgstr "Пример окружающей среды::"

#: ../../library/subprocess.rst:1414
msgid "Replacing :func:`os.popen`, :func:`os.popen2`, :func:`os.popen3`"
msgstr "Замена :func:`os.popen`, :func:`os.popen2`, :func:`os.popen3`"

#: ../../library/subprocess.rst:1444
msgid "Return code handling translates as follows::"
msgstr "Обработка кода возврата переводится следующим образом:"

#: ../../library/subprocess.rst:1460
msgid "Replacing functions from the :mod:`popen2` module"
msgstr ""

#: ../../library/subprocess.rst:1464
msgid ""
"If the cmd argument to popen2 functions is a string, the command is executed "
"through /bin/sh.  If it is a list, the command is directly executed."
msgstr "Обработка кода возврата переводится следующим образом:"

#: ../../library/subprocess.rst:1483
msgid ""
":class:`popen2.Popen3` and :class:`popen2.Popen4` basically work as :class:"
"`subprocess.Popen`, except that:"
msgstr ""
":class:`popen2.Popen3` и :class:`popen2.Popen4` в основном работают как :"
"class:`subprocess.Popen`, за исключением того:"

#: ../../library/subprocess.rst:1486
msgid ":class:`Popen` raises an exception if the execution fails."
msgstr ""
":class:`Popen` вызывает исключение, если выполнение завершается неудачей."

#: ../../library/subprocess.rst:1488
msgid "The *capturestderr* argument is replaced with the *stderr* argument."
msgstr "Аргумент *capturestderr* заменяется аргументом *stderr*."

#: ../../library/subprocess.rst:1490
msgid "``stdin=PIPE`` and ``stdout=PIPE`` must be specified."
msgstr "Необходимо указать ``stdin=PIPE`` и ``stdout=PIPE``."

#: ../../library/subprocess.rst:1492
msgid ""
"popen2 closes all file descriptors by default, but you have to specify "
"``close_fds=True`` with :class:`Popen` to guarantee this behavior on all "
"platforms or past Python versions."
msgstr ""
"popen2 по умолчанию закрывает все файловые дескрипторы, но вам необходимо "
"указать ``close_fds=True`` с помощью :class:`Popen`, чтобы гарантировать "
"такое поведение на всех платформах или в предыдущих версиях Python."

#: ../../library/subprocess.rst:1498
msgid "Legacy Shell Invocation Functions"
msgstr "Устаревшие функции вызова оболочки"

#: ../../library/subprocess.rst:1500
msgid ""
"This module also provides the following legacy functions from the 2.x "
"``commands`` module. These operations implicitly invoke the system shell and "
"none of the guarantees described above regarding security and exception "
"handling consistency are valid for these functions."
msgstr ""
"Этот модуль также предоставляет следующие устаревшие функции из модуля "
"``commands`` версии 2.x. Эти операции неявно вызывают системную оболочку, и "
"ни одна из описанных выше гарантий относительно безопасности и "
"согласованности обработки исключений недействительна для этих функций."

#: ../../library/subprocess.rst:1507
msgid "Return ``(exitcode, output)`` of executing *cmd* in a shell."
msgstr "Возврат ``(exitcode, output)`` выполнения *cmd* в оболочке."

#: ../../library/subprocess.rst:1509
msgid ""
"Execute the string *cmd* in a shell with :meth:`Popen.check_output` and "
"return a 2-tuple ``(exitcode, output)``. The locale encoding is used; see "
"the notes on :ref:`frequently-used-arguments` for more details."
msgstr ""

#: ../../library/subprocess.rst:1513
msgid ""
"A trailing newline is stripped from the output. The exit code for the "
"command can be interpreted as the return code of subprocess.  Example::"
msgstr ""
"Завершающая новая строка удаляется из вывода. Код завершения команды можно "
"интерпретировать как код возврата подпроцесса. Пример::"

#: ../../library/subprocess.rst:1527 ../../library/subprocess.rst:1547
msgid ":ref:`Availability <availability>`: POSIX & Windows."
msgstr ""

#: ../../library/subprocess.rst:1528
msgid "Windows support was added."
msgstr "Добавлена ​​поддержка Windows."

#: ../../library/subprocess.rst:1531
msgid ""
"The function now returns (exitcode, output) instead of (status, output) as "
"it did in Python 3.3.3 and earlier.  exitcode has the same value as :attr:"
"`~Popen.returncode`."
msgstr ""
"Функция теперь возвращает (код выхода, вывод) вместо (статус, вывод), как "
"это было в Python 3.3.3 и более ранних версиях. код выхода имеет то же "
"значение, что и :attr:`~Popen.returncode`."

#: ../../library/subprocess.rst:1538
msgid "Return output (stdout and stderr) of executing *cmd* in a shell."
msgstr ""
"Возвращает выходные данные (stdout и stderr) выполнения *cmd* в оболочке."

#: ../../library/subprocess.rst:1540
msgid ""
"Like :func:`getstatusoutput`, except the exit code is ignored and the return "
"value is a string containing the command's output.  Example::"
msgstr ""
"Аналогично :func:`getstatusoutput`, за исключением того, что код выхода "
"игнорируется, а возвращаемое значение представляет собой строку, содержащую "
"выходные данные команды. Пример::"

#: ../../library/subprocess.rst:1548
msgid "Windows support added"
msgstr "Добавлена поддержка Windows"

#: ../../library/subprocess.rst:1553
msgid "Notes"
msgstr "Примечания"

#: ../../library/subprocess.rst:1558
msgid "Converting an argument sequence to a string on Windows"
msgstr "Преобразование последовательности аргументов в строку в Windows"

#: ../../library/subprocess.rst:1560
msgid ""
"On Windows, an *args* sequence is converted to a string that can be parsed "
"using the following rules (which correspond to the rules used by the MS C "
"runtime):"
msgstr ""
"В Windows последовательность *args* преобразуется в строку, которую можно "
"анализировать с использованием следующих правил (которые соответствуют "
"правилам, используемым средой выполнения MS C):"

#: ../../library/subprocess.rst:1564
msgid ""
"Arguments are delimited by white space, which is either a space or a tab."
msgstr ""
"Аргументы разделяются пробелом, который представляет собой либо пробел, либо "
"табуляцию."

#: ../../library/subprocess.rst:1567
msgid ""
"A string surrounded by double quotation marks is interpreted as a single "
"argument, regardless of white space contained within.  A quoted string can "
"be embedded in an argument."
msgstr ""
"Строка, заключенная в двойные кавычки, интерпретируется как одиночный "
"аргумент, независимо от содержащихся внутри пробелов. Строка в кавычках "
"может быть встроена в аргумент."

#: ../../library/subprocess.rst:1572
msgid ""
"A double quotation mark preceded by a backslash is interpreted as a literal "
"double quotation mark."
msgstr ""
"Двойные кавычки, которым предшествует обратная косая черта, интерпретируются "
"как буквальные двойные кавычки."

#: ../../library/subprocess.rst:1575
msgid ""
"Backslashes are interpreted literally, unless they immediately precede a "
"double quotation mark."
msgstr ""
"Обратная косая черта интерпретируется буквально, если только она не "
"предшествует сразу двойной кавычке."

#: ../../library/subprocess.rst:1578
msgid ""
"If backslashes immediately precede a double quotation mark, every pair of "
"backslashes is interpreted as a literal backslash.  If the number of "
"backslashes is odd, the last backslash escapes the next double quotation "
"mark as described in rule 3."
msgstr ""
"Если обратная косая черта предшествует двойной кавычке, каждая пара обратной "
"косой черты интерпретируется как буквальная обратная косая черта. Если "
"количество обратных косых черт нечетное, последняя обратная косая черта "
"выходит за рамки следующей двойной кавычки, как описано в правиле 3."

#: ../../library/subprocess.rst:1587
msgid ":mod:`shlex`"
msgstr ":mod:`shlex`"

#: ../../library/subprocess.rst:1588
msgid "Module which provides function to parse and escape command lines."
msgstr ""
"Модуль, предоставляющий функцию анализа и экранирования командных строк."
