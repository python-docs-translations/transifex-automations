# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# python-doc bot, 2025
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.13\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-10-21 15:05+0000\n"
"PO-Revision-Date: 2025-09-15 01:04+0000\n"
"Last-Translator: python-doc bot, 2025\n"
"Language-Team: Russian (https://app.transifex.com/python-doc/teams/5390/"
"ru/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ru\n"
"Plural-Forms: nplurals=4; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && "
"n%10<=4 && (n%100<12 || n%100>14) ? 1 : n%10==0 || (n%10>=5 && n%10<=9) || "
"(n%100>=11 && n%100<=14)? 2 : 3);\n"

#: ../../library/glob.rst:2
msgid ":mod:`!glob` --- Unix style pathname pattern expansion"
msgstr ":mod:`!glob` --- Расширение шаблона пути в стиле Unix"

#: ../../library/glob.rst:7
msgid "**Source code:** :source:`Lib/glob.py`"
msgstr "**Исходный код:** :source:`Lib/glob.py`"

#: ../../library/glob.rst:21
msgid ""
"The :mod:`!glob` module finds pathnames using pattern matching rules similar "
"to the Unix shell. No tilde expansion is done, but ``*``, ``?``, and "
"character ranges expressed with ``[]`` will be correctly matched.  This is "
"done by using the :func:`os.scandir` and :func:`fnmatch.fnmatch` functions "
"in concert, and not by actually invoking a subshell."
msgstr ""

#: ../../library/glob.rst:29
msgid ""
"The pathnames are returned in no particular order.  If you need a specific "
"order, sort the results."
msgstr ""

#: ../../library/glob.rst:32
msgid ""
"Files beginning with a dot (``.``) can only be matched by patterns that also "
"start with a dot, unlike :func:`fnmatch.fnmatch` or :func:`pathlib.Path."
"glob`. For tilde and shell variable expansion, use :func:`os.path."
"expanduser` and :func:`os.path.expandvars`."
msgstr ""

#: ../../library/glob.rst:38
msgid ""
"For a literal match, wrap the meta-characters in brackets. For example, "
"``'[?]'`` matches the character ``'?'``."
msgstr ""
"Для буквального совпадения заключите метасимволы в скобки. Например, "
"``'[?]'`` соответствует символу ``'?'``."

#: ../../library/glob.rst:41
msgid "The :mod:`!glob` module defines the following functions:"
msgstr ""

#: ../../library/glob.rst:47
msgid ""
"Return a possibly empty list of path names that match *pathname*, which must "
"be a string containing a path specification. *pathname* can be either "
"absolute (like :file:`/usr/src/Python-1.5/Makefile`) or relative (like :file:"
"`../../Tools/\\*/\\*.gif`), and can contain shell-style wildcards. Broken "
"symlinks are included in the results (as in the shell). Whether or not the "
"results are sorted depends on the file system.  If a file that satisfies "
"conditions is removed or added during the call of this function, whether a "
"path name for that file will be included is unspecified."
msgstr ""
"Возвращает возможно пустой список имен путей, соответствующих *pathname*, "
"который должен быть строкой, содержащей спецификацию пути. *pathname* может "
"быть абсолютным (например, :file:`/usr/src/Python-1.5/Makefile`) или "
"относительным (например, :file:`../../Tools/\\*/\\*.gif`) и может содержать "
"подстановочные знаки в стиле оболочки. Неработающие символические ссылки "
"включаются в результаты (как и в оболочке). Сортировка результатов зависит "
"от файловой системы. Если файл, удовлетворяющий условиям, удаляется или "
"добавляется во время вызова этой функции, будет ли включен путь для этого "
"файла, не указано."

#: ../../library/glob.rst:56
msgid ""
"If *root_dir* is not ``None``, it should be a :term:`path-like object` "
"specifying the root directory for searching.  It has the same effect on :"
"func:`!glob` as changing the current directory before calling it.  If "
"*pathname* is relative, the result will contain paths relative to *root_dir*."
msgstr ""

#: ../../library/glob.rst:62
msgid ""
"This function can support :ref:`paths relative to directory descriptors "
"<dir_fd>` with the *dir_fd* parameter."
msgstr ""
"Эта функция может поддерживать пути относительно дескрипторов каталогов.\n"
"` с параметром *dir_fd*."

#: ../../library/glob.rst:68
msgid ""
"If *recursive* is true, the pattern \"``**``\" will match any files and zero "
"or more directories, subdirectories and symbolic links to directories. If "
"the pattern is followed by an :data:`os.sep` or :data:`os.altsep` then files "
"will not match."
msgstr ""
"Если значение *recursive* истинно, шаблон «``**``» будет соответствовать "
"любым файлам и нулю или более каталогам, подкаталогам и символическим "
"ссылкам на каталоги. Если за шаблоном следует :data:`os.sep` или :data:`os."
"altsep`, файлы не будут совпадать."

#: ../../library/glob.rst:73
msgid ""
"If *include_hidden* is true, \"``**``\" pattern will match hidden "
"directories."
msgstr ""
"Если *include_hidden* имеет значение true, шаблон «``**``» будет "
"соответствовать скрытым каталогам."

#: ../../library/glob.rst:75 ../../library/glob.rst:102
msgid ""
"Raises an :ref:`auditing event <auditing>` ``glob.glob`` with arguments "
"``pathname``, ``recursive``."
msgstr ""
"Вызывает :ref:`событие аудита <auditing>``glob.glob`` с аргументами "
"``pathname``, ``recursive``."

#: ../../library/glob.rst:76 ../../library/glob.rst:103
msgid ""
"Raises an :ref:`auditing event <auditing>` ``glob.glob/2`` with arguments "
"``pathname``, ``recursive``, ``root_dir``, ``dir_fd``."
msgstr ""
"Вызывает событие аудита <auditing>` ``glob.glob/2`` с аргументами "
"``pathname``, ``recursive``, ``root_dir``, ``dir_fd``."

#: ../../library/glob.rst:79
msgid ""
"Using the \"``**``\" pattern in large directory trees may consume an "
"inordinate amount of time."
msgstr ""
"Использование шаблона «``**``» в больших деревьях каталогов может занять "
"слишком много времени."

#: ../../library/glob.rst:83 ../../library/glob.rst:106
msgid ""
"This function may return duplicate path names if *pathname* contains "
"multiple \"``**``\" patterns and *recursive* is true."
msgstr ""
"Эта функция может возвращать повторяющиеся имена путей, если *pathname* "
"содержит несколько шаблонов «``**``» и *recursive* имеет значение true."

#: ../../library/glob.rst:86 ../../library/glob.rst:109
msgid "Support for recursive globs using \"``**``\"."
msgstr "Поддержка рекурсивных glob с использованием «``**``»."

#: ../../library/glob.rst:89 ../../library/glob.rst:112
msgid "Added the *root_dir* and *dir_fd* parameters."
msgstr "Добавлены параметры *root_dir* и *dir_fd*."

#: ../../library/glob.rst:92 ../../library/glob.rst:115
msgid "Added the *include_hidden* parameter."
msgstr "Добавлен параметр *include_hidden*."

#: ../../library/glob.rst:99
msgid ""
"Return an :term:`iterator` which yields the same values as :func:`glob` "
"without actually storing them all simultaneously."
msgstr ""
"Возвращает :term:`iterator`, который возвращает те же значения, что и :func:"
"`glob`, но не сохраняет их все одновременно."

#: ../../library/glob.rst:121
msgid ""
"Escape all special characters (``'?'``, ``'*'`` and ``'['``). This is useful "
"if you want to match an arbitrary literal string that may have special "
"characters in it.  Special characters in drive/UNC sharepoints are not "
"escaped, e.g. on Windows ``escape('//?/c:/Quo vadis?.txt')`` returns ``'//?/"
"c:/Quo vadis[?].txt'``."
msgstr ""
"Экранируйте все специальные символы (``'?'``, ``'*'`` и ``'['``). Это "
"полезно, если вы хотите сопоставить произвольную литеральную строку, которая "
"может содержать специальные символы. Специальные символы в общих точках "
"диска/UNC не экранируются, например, в Windows ``escape('//?/c:/Quo vadis?."
"txt')`` возвращает ``'//?/c:/Quo vadis[? ].txt'``."

#: ../../library/glob.rst:132
msgid ""
"Convert the given path specification to a regular expression for use with :"
"func:`re.match`. The path specification can contain shell-style wildcards."
msgstr ""
"Преобразуйте указанную спецификацию пути в регулярное выражение для "
"использования с :func:`re.match`. Спецификация пути может содержать "
"подстановочные знаки в стиле оболочки."

#: ../../library/glob.rst:135
msgid "For example:"
msgstr "Например:"

#: ../../library/glob.rst:146
msgid ""
"Path separators and segments are meaningful to this function, unlike :func:"
"`fnmatch.translate`. By default wildcards do not match path separators, and "
"``*`` pattern segments match precisely one path segment."
msgstr ""
"Разделители путей и сегменты имеют значение для этой функции, в отличие от :"
"func:`fnmatch.translate`. По умолчанию подстановочные знаки не соответствуют "
"разделителям путей, а сегменты шаблона ``*`` соответствуют ровно одному "
"сегменту пути."

#: ../../library/glob.rst:150
msgid ""
"If *recursive* is true, the pattern segment \"``**``\" will match any number "
"of path segments."
msgstr ""
"Если *recursive* имеет значение true, сегмент шаблона «``**``» будет "
"соответствовать любому количеству сегментов пути."

#: ../../library/glob.rst:153
msgid ""
"If *include_hidden* is true, wildcards can match path segments that start "
"with a dot (``.``)."
msgstr ""
"Если *include_hidden* имеет значение true, подстановочные знаки могут "
"соответствовать сегментам пути, начинающимся с точки (``.``)."

#: ../../library/glob.rst:156
msgid ""
"A sequence of path separators may be supplied to the *seps* argument. If not "
"given, :data:`os.sep` and :data:`~os.altsep` (if available) are used."
msgstr ""
"В аргумент *seps* может быть передана последовательность разделителей пути. "
"Если не указано, используются :data:`os.sep` и :data:`~os.altsep` (если "
"доступны)."

#: ../../library/glob.rst:161
msgid ""
":meth:`pathlib.PurePath.full_match` and :meth:`pathlib.Path.glob` methods, "
"which call this function to implement pattern matching and globbing."
msgstr ""
"Методы :meth:`pathlib.PurePath.full_match` и :meth:`pathlib.Path.glob`, "
"которые вызывают эту функцию для реализации сопоставления с образцом и "
"подстановки под шаблон."

#: ../../library/glob.rst:169
msgid "Examples"
msgstr "Примеры"

#: ../../library/glob.rst:171
msgid ""
"Consider a directory containing the following files: :file:`1.gif`, :file:`2."
"txt`, :file:`card.gif` and a subdirectory :file:`sub` which contains only "
"the file :file:`3.txt`.  :func:`glob` will produce the following results.  "
"Notice how any leading components of the path are preserved. ::"
msgstr ""
"Рассмотрим каталог, содержащий следующие файлы: :file:`1.gif`, :file:`2."
"txt`, :file:`card.gif` и подкаталог :file:`sub`, который содержит только "
"файл :file. :`3.txt`. :func:`glob` даст следующие результаты. Обратите "
"внимание, как сохраняются все ведущие компоненты пути. ::"

#: ../../library/glob.rst:177
msgid ""
">>> import glob\n"
">>> glob.glob('./[0-9].*')\n"
"['./1.gif', './2.txt']\n"
">>> glob.glob('*.gif')\n"
"['1.gif', 'card.gif']\n"
">>> glob.glob('?.gif')\n"
"['1.gif']\n"
">>> glob.glob('**/*.txt', recursive=True)\n"
"['2.txt', 'sub/3.txt']\n"
">>> glob.glob('./**/', recursive=True)\n"
"['./', './sub/']"
msgstr ""
">>> import glob\n"
">>> glob.glob('./[0-9].*')\n"
"['./1.gif', './2.txt']\n"
">>> glob.glob('*.gif')\n"
"['1.gif', 'card.gif']\n"
">>> glob.glob('?.gif')\n"
"['1.gif']\n"
">>> glob.glob('**/*.txt', recursive=True)\n"
"['2.txt', 'sub/3.txt']\n"
">>> glob.glob('./**/', recursive=True)\n"
"['./', './sub/']"

#: ../../library/glob.rst:189
msgid ""
"If the directory contains files starting with ``.`` they won't be matched by "
"default. For example, consider a directory containing :file:`card.gif` and :"
"file:`.card.gif`::"
msgstr ""
"If the directory contains files starting with ``.`` they won't be matched by "
"default. For example, consider a directory containing :file:`card.gif` and :"
"file:`.card.gif`::"

#: ../../library/glob.rst:193
msgid ""
">>> import glob\n"
">>> glob.glob('*.gif')\n"
"['card.gif']\n"
">>> glob.glob('.c*')\n"
"['.card.gif']"
msgstr ""
">>> import glob\n"
">>> glob.glob('*.gif')\n"
"['card.gif']\n"
">>> glob.glob('.c*')\n"
"['.card.gif']"

#: ../../library/glob.rst:200
msgid ""
"The :mod:`fnmatch` module offers shell-style filename (not path) expansion."
msgstr ""
"Модуль :mod:`fnmatch` предлагает расширение имени файла (а не пути) в стиле "
"оболочки."

#: ../../library/glob.rst:203
msgid "The :mod:`pathlib` module offers high-level path objects."
msgstr "Модуль :mod:`pathlib` предлагает объекты путей высокого уровня."

#: ../../library/glob.rst:9
msgid "filenames"
msgstr "имена файлов"

#: ../../library/glob.rst:9
msgid "pathname expansion"
msgstr "расширение пути"

#: ../../library/glob.rst:13
msgid "* (asterisk)"
msgstr "* (звёздочка)"

#: ../../library/glob.rst:13 ../../library/glob.rst:65
msgid "in glob-style wildcards"
msgstr "в подстановочных знаках в стиле glob"

#: ../../library/glob.rst:13
msgid "? (question mark)"
msgstr "? (знак вопроса)"

#: ../../library/glob.rst:13
msgid "[] (square brackets)"
msgstr "[] (квадратные скобки)"

#: ../../library/glob.rst:13
msgid "! (exclamation)"
msgstr "! (восклицание)"

#: ../../library/glob.rst:13
msgid "- (minus)"
msgstr "- (минус)"

#: ../../library/glob.rst:13
msgid ". (dot)"
msgstr ". (точка)"

#: ../../library/glob.rst:65
msgid "**"
msgstr "**"
