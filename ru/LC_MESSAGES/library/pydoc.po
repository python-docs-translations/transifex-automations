# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# Rafael Fontenelle <rffontenelle@gmail.com>, 2024
# Roustam Khamidoulline, 2024
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.12\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-01-10 14:49+0000\n"
"PO-Revision-Date: 2024-05-11 00:33+0000\n"
"Last-Translator: Roustam Khamidoulline, 2024\n"
"Language-Team: Russian (https://app.transifex.com/python-doc/teams/5390/"
"ru/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ru\n"
"Plural-Forms: nplurals=4; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && "
"n%10<=4 && (n%100<12 || n%100>14) ? 1 : n%10==0 || (n%10>=5 && n%10<=9) || "
"(n%100>=11 && n%100<=14)? 2 : 3);\n"

#: ../../library/pydoc.rst:2
msgid ":mod:`!pydoc` --- Documentation generator and online help system"
msgstr ":mod:`!pydoc` --- Генератор документации и онлайн-справочная система."

#: ../../library/pydoc.rst:10
msgid "**Source code:** :source:`Lib/pydoc.py`"
msgstr "**Исходный код:** :source:`Lib/pydoc.py`"

#: ../../library/pydoc.rst:19
msgid ""
"The :mod:`!pydoc` module automatically generates documentation from Python "
"modules.  The documentation can be presented as pages of text on the "
"console, served to a web browser, or saved to HTML files."
msgstr ""
"Модуль :mod:`!pydoc` автоматически генерирует документацию из модулей "
"Python. Документация может быть представлена ​​в виде страниц текста на "
"консоли, отображена в веб-браузере или сохранена в файлах HTML."

#: ../../library/pydoc.rst:23
msgid ""
"For modules, classes, functions and methods, the displayed documentation is "
"derived from the docstring (i.e. the :attr:`~definition.__doc__` attribute) "
"of the object, and recursively of its documentable members.  If there is no "
"docstring, :mod:`!pydoc` tries to obtain a description from the block of "
"comment lines just above the definition of the class, function or method in "
"the source file, or at the top of the module (see :func:`inspect."
"getcomments`)."
msgstr ""
"Для модулей, классов, функций и методов отображаемая документация получается "
"из строки документации (т.е. атрибута :attr:`~definition.__doc__`) объекта и "
"рекурсивно из его документируемых членов. Если строка документации "
"отсутствует, :mod:`!pydoc` пытается получить описание из блока строк "
"комментариев чуть выше определения класса, функции или метода в исходном "
"файле или в верхней части модуля (см.: func:`inspect.getcomments`)."

#: ../../library/pydoc.rst:30
msgid ""
"The built-in function :func:`help` invokes the online help system in the "
"interactive interpreter, which uses :mod:`!pydoc` to generate its "
"documentation as text on the console.  The same text documentation can also "
"be viewed from outside the Python interpreter by running :program:`pydoc` as "
"a script at the operating system's command prompt. For example, running ::"
msgstr ""
"Встроенная функция :func:`help` вызывает интерактивную справочную систему в "
"интерактивном интерпретаторе, который использует :mod:`!pydoc` для генерации "
"документации в виде текста на консоли. Эту же текстовую документацию можно "
"просмотреть и вне интерпретатора Python, запустив :program:`pydoc` как "
"скрипт в командной строке операционной системы. Например, запуск ::"

#: ../../library/pydoc.rst:36
msgid "python -m pydoc sys"
msgstr "python -m pydoc sys"

#: ../../library/pydoc.rst:38
msgid ""
"at a shell prompt will display documentation on the :mod:`sys` module, in a "
"style similar to the manual pages shown by the Unix :program:`man` command.  "
"The argument to :program:`pydoc` can be the name of a function, module, or "
"package, or a dotted reference to a class, method, or function within a "
"module or module in a package.  If the argument to :program:`pydoc` looks "
"like a path (that is, it contains the path separator for your operating "
"system, such as a slash in Unix), and refers to an existing Python source "
"file, then documentation is produced for that file."
msgstr ""
"в командной строке отобразит документацию по модулю :mod:`sys` в стиле, "
"аналогичном страницам руководства, отображаемым командой Unix :program:"
"`man`. Аргументом :program:`pydoc` может быть имя функции, модуля или "
"пакета, либо точечная ссылка на класс, метод или функцию внутри модуля или "
"модуль в пакете. Если аргумент :program:`pydoc` выглядит как путь (то есть "
"содержит разделитель пути для вашей операционной системы, например, косую "
"черту в Unix) и ссылается на существующий исходный файл Python, то создается "
"документация для этот файл."

#: ../../library/pydoc.rst:49
msgid ""
"In order to find objects and their documentation, :mod:`!pydoc` imports the "
"module(s) to be documented.  Therefore, any code on module level will be "
"executed on that occasion.  Use an ``if __name__ == '__main__':`` guard to "
"only execute code when a file is invoked as a script and not just imported."
msgstr ""
"Чтобы найти объекты и их документацию, :mod:`!pydoc` импортирует модули, "
"подлежащие документированию. Следовательно, в этом случае будет выполнен "
"любой код на уровне модуля. Используйте защиту ``if __name__ == '__main__':"
"``, чтобы выполнять код только тогда, когда файл вызывается как скрипт, а не "
"просто импортируется."

#: ../../library/pydoc.rst:54
msgid ""
"When printing output to the console, :program:`pydoc` attempts to paginate "
"the output for easier reading.  If either the :envvar:`MANPAGER` or the :"
"envvar:`PAGER` environment variable is set, :program:`pydoc` will use its "
"value as a pagination program. When both are set, :envvar:`MANPAGER` is used."
msgstr ""
"При выводе вывода на консоль :program:`pydoc` пытается разбить вывод на "
"страницы для облегчения чтения. Если установлена ​​переменная среды :envvar:"
"`MANPAGER` или :envvar:`PAGER`, :program:`pydoc` будет использовать ее "
"значение в качестве программы нумерации страниц. Если установлены оба "
"параметра, используется :envvar:`MANPAGER`."

#: ../../library/pydoc.rst:59
msgid ""
"Specifying a ``-w`` flag before the argument will cause HTML documentation "
"to be written out to a file in the current directory, instead of displaying "
"text on the console."
msgstr ""
"Указание флага ``-w`` перед аргументом приведет к записи HTML-документации в "
"файл в текущем каталоге вместо отображения текста на консоли."

#: ../../library/pydoc.rst:63
msgid ""
"Specifying a ``-k`` flag before the argument will search the synopsis lines "
"of all available modules for the keyword given as the argument, again in a "
"manner similar to the Unix :program:`man` command.  The synopsis line of a "
"module is the first line of its documentation string."
msgstr ""
"Указание флага ``-k`` перед аргументом приведет к поиску в строках описания "
"всех доступных модулей ключевого слова, заданного в качестве аргумента, "
"опять же аналогично команде Unix :program:`man`. Строка описания модуля — "
"это первая строка его строки документации."

#: ../../library/pydoc.rst:68
msgid ""
"You can also use :program:`pydoc` to start an HTTP server on the local "
"machine that will serve documentation to visiting web browsers.  :program:"
"`python -m pydoc -p 1234` will start a HTTP server on port 1234, allowing "
"you to browse the documentation at ``http://localhost:1234/`` in your "
"preferred web browser. Specifying ``0`` as the port number will select an "
"arbitrary unused port."
msgstr ""
"Вы также можете использовать :program:`pydoc` для запуска HTTP-сервера на "
"локальном компьютере, который будет предоставлять документацию посещающим "
"веб-браузерам. :program:`python -m pydoc -p 1234` запустит HTTP-сервер на "
"порту 1234, что позволит вам просматривать документацию по адресу ``http://"
"localhost:1234/`` в предпочитаемом вами веб-браузере. Если указать ``0`` в "
"качестве номера порта, будет выбран произвольный неиспользуемый порт."

#: ../../library/pydoc.rst:74
msgid ""
":program:`python -m pydoc -n <hostname>` will start the server listening at "
"the given hostname.  By default the hostname is 'localhost' but if you want "
"the server to be reached from other machines, you may want to change the "
"host name that the server responds to.  During development this is "
"especially useful if you want to run pydoc from within a container."
msgstr ""
":program:`python -m pydoc -n <имя_хоста>` запустит сервер, прослушивающий "
"указанное имя хоста. По умолчанию имя хоста — «localhost», но если вы "
"хотите, чтобы сервер был доступен с других компьютеров, вы можете изменить "
"имя хоста, на которое отвечает сервер. Во время разработки это особенно "
"полезно, если вы хотите запустить pydoc из контейнера."

#: ../../library/pydoc.rst:80
msgid ""
":program:`python -m pydoc -b` will start the server and additionally open a "
"web browser to a module index page.  Each served page has a navigation bar "
"at the top where you can *Get* help on an individual item, *Search* all "
"modules with a keyword in their synopsis line, and go to the *Module index*, "
"*Topics* and *Keywords* pages."
msgstr ""
":program:`python -m pydoc -b` запустит сервер и дополнительно откроет в веб-"
"браузере индексную страницу модуля. Каждая обслуживаемая страница имеет "
"панель навигации вверху, где вы можете *Получить* справку по отдельному "
"элементу, *Искать* все модули по ключевому слову в строке синопсиса и "
"перейти к *Индексу модулей*, *Темам* и *Ключевым словам. * страницы."

#: ../../library/pydoc.rst:86
msgid ""
"When :program:`pydoc` generates documentation, it uses the current "
"environment and path to locate modules.  Thus, invoking :program:`pydoc "
"spam` documents precisely the version of the module you would get if you "
"started the Python interpreter and typed ``import spam``."
msgstr ""
"Когда :program:`pydoc` генерирует документацию, она использует текущую среду "
"и путь для поиска модулей. Таким образом, вызов :program:`pydoc spam` "
"документирует именно ту версию модуля, которую вы получили бы, если бы вы "
"запустили интерпретатор Python и набрали ``import spam``."

#: ../../library/pydoc.rst:91
msgid ""
"Module docs for core modules are assumed to reside in ``https://docs.python."
"org/X.Y/library/`` where ``X`` and ``Y`` are the major and minor version "
"numbers of the Python interpreter.  This can be overridden by setting the :"
"envvar:`!PYTHONDOCS` environment variable to a different URL or to a local "
"directory containing the Library Reference Manual pages."
msgstr ""
"Предполагается, что документация по основным модулям находится в ``https://"
"docs.python.org/XY/library/``, где ``X`` и ``Y`` — это основной и "
"дополнительный номера версий Python. устный переводчик. Это можно "
"переопределить, установив для переменной среды :envvar:`!PYTHONDOCS` другой "
"URL-адрес или локальный каталог, содержащий страницы справочного руководства "
"по библиотеке."

#: ../../library/pydoc.rst:98
msgid "Added the ``-b`` option."
msgstr "Добавлен параметр ``-b``."

#: ../../library/pydoc.rst:101
msgid "The ``-g`` command line option was removed."
msgstr "Опция командной строки ``-g`` была удалена."

#: ../../library/pydoc.rst:104
msgid ""
":mod:`!pydoc` now uses :func:`inspect.signature` rather than :func:`inspect."
"getfullargspec` to extract signature information from callables."
msgstr ""
":mod:`!pydoc` теперь использует :func:`inspect.signature` вместо :func:"
"`inspect.getfullargspec` для извлечения информации о подписи из вызываемых "
"объектов."

#: ../../library/pydoc.rst:109
msgid "Added the ``-n`` option."
msgstr "Добавлен параметр ``-n``."

#: ../../library/pydoc.rst:12
msgid "documentation"
msgstr "документация"

#: ../../library/pydoc.rst:12
msgid "generation"
msgstr "генерация"

#: ../../library/pydoc.rst:12
msgid "online"
msgstr "онлайн"

#: ../../library/pydoc.rst:12
msgid "help"
msgstr "помощь"
