# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# Rafael Fontenelle <rffontenelle@gmail.com>, 2024
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.10\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-01-10 16:06+0000\n"
"PO-Revision-Date: 2022-11-05 17:22+0000\n"
"Last-Translator: Rafael Fontenelle <rffontenelle@gmail.com>, 2024\n"
"Language-Team: Russian (https://app.transifex.com/python-doc/teams/5390/"
"ru/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ru\n"
"Plural-Forms: nplurals=4; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && "
"n%10<=4 && (n%100<12 || n%100>14) ? 1 : n%10==0 || (n%10>=5 && n%10<=9) || "
"(n%100>=11 && n%100<=14)? 2 : 3);\n"

#: ../../library/mmap.rst:2
msgid ":mod:`mmap` --- Memory-mapped file support"
msgstr ""

#: ../../library/mmap.rst:9
msgid ""
"Memory-mapped file objects behave like both :class:`bytearray` and like :"
"term:`file objects <file object>`.  You can use mmap objects in most places "
"where :class:`bytearray` are expected; for example, you can use the :mod:"
"`re` module to search through a memory-mapped file.  You can also change a "
"single byte by doing ``obj[index] = 97``, or change a subsequence by "
"assigning to a slice: ``obj[i1:i2] = b'...'``.  You can also read and write "
"data starting at the current file position, and :meth:`seek` through the "
"file to different positions."
msgstr ""
"Файловые объекты, отображенные в памяти, ведут себя как :class:`bytearray`, "
"так и как :term:`file object <file object>`. Вы можете использовать объекты "
"mmap в большинстве мест, где ожидается :class:`bytearray`; например, вы "
"можете использовать модуль :mod:`re` для поиска в файле, отображенном в "
"памяти. Вы также можете изменить один байт, выполнив ``obj[index] = 97``, "
"или изменить подпоследовательность, назначив ее срезу: ``obj[i1:i2] = "
"b'...'``. Вы также можете читать и записывать данные, начиная с текущей "
"позиции в файле, и искать по файлу в разные позиции."

#: ../../library/mmap.rst:17
msgid ""
"A memory-mapped file is created by the :class:`~mmap.mmap` constructor, "
"which is different on Unix and on Windows.  In either case you must provide "
"a file descriptor for a file opened for update. If you wish to map an "
"existing Python file object, use its :meth:`fileno` method to obtain the "
"correct value for the *fileno* parameter.  Otherwise, you can open the file "
"using the :func:`os.open` function, which returns a file descriptor directly "
"(the file still needs to be closed when done)."
msgstr ""

#: ../../library/mmap.rst:26
msgid ""
"If you want to create a memory-mapping for a writable, buffered file, you "
"should :func:`~io.IOBase.flush` the file first.  This is necessary to ensure "
"that local modifications to the buffers are actually available to the "
"mapping."
msgstr ""
"Если вы хотите создать отображение памяти для записываемого буферизованного "
"файла, вам следует сначала :func:`~io.IOBase.flush` создать файл. Это "
"необходимо для того, чтобы гарантировать, что локальные изменения в буферах "
"действительно доступны для отображения."

#: ../../library/mmap.rst:31
msgid ""
"For both the Unix and Windows versions of the constructor, *access* may be "
"specified as an optional keyword parameter. *access* accepts one of four "
"values: :const:`ACCESS_READ`, :const:`ACCESS_WRITE`, or :const:`ACCESS_COPY` "
"to specify read-only, write-through or copy-on-write memory respectively, "
"or :const:`ACCESS_DEFAULT` to defer to *prot*.  *access* can be used on both "
"Unix and Windows.  If *access* is not specified, Windows mmap returns a "
"write-through mapping.  The initial memory values for all three access types "
"are taken from the specified file.  Assignment to an :const:`ACCESS_READ` "
"memory map raises a :exc:`TypeError` exception.  Assignment to an :const:"
"`ACCESS_WRITE` memory map affects both memory and the underlying file. "
"Assignment to an :const:`ACCESS_COPY` memory map affects memory but does not "
"update the underlying file."
msgstr ""
"Для версий конструктора как для Unix, так и для Windows *access* может быть "
"указан как необязательный параметр ключевого слова. *access* принимает одно "
"из четырех значений: :const:`ACCESS_READ`, :const:`ACCESS_WRITE` или :const:"
"`ACCESS_COPY` для указания памяти только для чтения, сквозной записи или "
"копирования при записи соответственно, или: const:`ACCESS_DEFAULT` для "
"передачи *prot*. *access* можно использовать как в Unix, так и в Windows. "
"Если *access* не указан, Windows mmap возвращает сопоставление со сквозной "
"записью. Начальные значения памяти для всех трех типов доступа берутся из "
"указанного файла. Присвоение карте памяти :const:`ACCESS_READ` вызывает "
"исключение :exc:`TypeError`. Назначение карте памяти :const:`ACCESS_WRITE` "
"влияет как на память, так и на базовый файл. Назначение карте памяти :const:"
"`ACCESS_COPY` влияет на память, но не обновляет базовый файл."

#: ../../library/mmap.rst:44
msgid "Added :const:`ACCESS_DEFAULT` constant."
msgstr "Добавлена константа :const:`ACCESS_DEFAULT`."

#: ../../library/mmap.rst:47
msgid ""
"To map anonymous memory, -1 should be passed as the fileno along with the "
"length."
msgstr ""
"Чтобы отобразить анонимную память, в качестве номера файла вместе с длиной "
"следует передать -1."

#: ../../library/mmap.rst:51
msgid ""
"**(Windows version)** Maps *length* bytes from the file specified by the "
"file handle *fileno*, and creates a mmap object.  If *length* is larger than "
"the current size of the file, the file is extended to contain *length* "
"bytes.  If *length* is ``0``, the maximum length of the map is the current "
"size of the file, except that if the file is empty Windows raises an "
"exception (you cannot create an empty mapping on Windows)."
msgstr ""
"**(версия для Windows)** Сопоставляет байты *length* из файла, указанного "
"дескриптором файла *fileno*, и создает объект mmap. Если *длина* больше "
"текущего размера файла, файл расширяется, чтобы содержать *длину* байтов. "
"Если *длина* равна ``0``, максимальная длина карты равна текущему размеру "
"файла, за исключением того, что если файл пуст, Windows выдает исключение "
"(вы не можете создать пустое сопоставление в Windows)."

#: ../../library/mmap.rst:58
msgid ""
"*tagname*, if specified and not ``None``, is a string giving a tag name for "
"the mapping.  Windows allows you to have many different mappings against the "
"same file.  If you specify the name of an existing tag, that tag is opened, "
"otherwise a new tag of this name is created.  If this parameter is omitted "
"or ``None``, the mapping is created without a name.  Avoiding the use of the "
"tag parameter will assist in keeping your code portable between Unix and "
"Windows."
msgstr ""

#: ../../library/mmap.rst:66
msgid ""
"*offset* may be specified as a non-negative integer offset. mmap references "
"will be relative to the offset from the beginning of the file. *offset* "
"defaults to 0.  *offset* must be a multiple of the :const:"
"`ALLOCATIONGRANULARITY`."
msgstr ""
"*offset* может быть указано как неотрицательное целое смещение. Ссылки mmap "
"будут относиться к смещению от начала файла. *offset* по умолчанию равен 0. "
"*offset* должно быть кратно :const:`ALLOCATIONGRANULARITY`."

#: ../../library/mmap.rst:70 ../../library/mmap.rst:161
msgid ""
"Raises an :ref:`auditing event <auditing>` ``mmap.__new__`` with arguments "
"``fileno``, ``length``, ``access``, ``offset``."
msgstr ""
"Вызывает :ref:`событие аудита <auditing>` ``mmap.__new__`` с аргументами "
"``fileno``, ``length``, ``access``, ``offset``."

#: ../../library/mmap.rst:75
msgid ""
"**(Unix version)** Maps *length* bytes from the file specified by the file "
"descriptor *fileno*, and returns a mmap object.  If *length* is ``0``, the "
"maximum length of the map will be the current size of the file when :class:"
"`~mmap.mmap` is called."
msgstr ""
"**(версия Unix)** Сопоставляет байты *length* из файла, указанного файловым "
"дескриптором *fileno*, и возвращает объект mmap. Если *length* равно ``0``, "
"максимальная длина карты будет равна текущему размеру файла при вызове :"
"class:`~mmap.mmap`."

#: ../../library/mmap.rst:80
msgid ""
"*flags* specifies the nature of the mapping. :const:`MAP_PRIVATE` creates a "
"private copy-on-write mapping, so changes to the contents of the mmap object "
"will be private to this process, and :const:`MAP_SHARED` creates a mapping "
"that's shared with all other processes mapping the same areas of the file.  "
"The default value is :const:`MAP_SHARED`. Some systems have additional "
"possible flags with the full list specified in :ref:`MAP_* constants <map-"
"constants>`."
msgstr ""
"*flags* определяет характер сопоставления. :const:`MAP_PRIVATE` создает "
"частное сопоставление копирования при записи, поэтому изменения в содержимом "
"объекта mmap будут частными для этого процесса, а :const:`MAP_SHARED` "
"создает сопоставление, которое используется всеми другими процессами, "
"отображающими одни и те же области файла. Значение по умолчанию: const:"
"`MAP_SHARED`. В некоторых системах есть дополнительные возможные флаги, "
"полный список которых указан в :ref:`MAP_* константах <map-constants>`."

#: ../../library/mmap.rst:88
msgid ""
"*prot*, if specified, gives the desired memory protection; the two most "
"useful values are :const:`PROT_READ` and :const:`PROT_WRITE`, to specify "
"that the pages may be read or written.  *prot* defaults to :const:`PROT_READ "
"\\| PROT_WRITE`."
msgstr ""
"*prot*, если указано, обеспечивает желаемую защиту памяти; два наиболее "
"полезных значения — :const:`PROT_READ` и :const:`PROT_WRITE`, чтобы указать, "
"что страницы могут быть прочитаны или записаны. *prot* по умолчанию имеет "
"значение :const:`PROT_READ \\| PROT_WRITE`."

#: ../../library/mmap.rst:93
msgid ""
"*access* may be specified in lieu of *flags* and *prot* as an optional "
"keyword parameter.  It is an error to specify both *flags*, *prot* and "
"*access*.  See the description of *access* above for information on how to "
"use this parameter."
msgstr ""
"*access* может быть указан вместо *flags* и *prot* в качестве "
"необязательного параметра ключевого слова. Указание *flags*, *prot* и "
"*access* является ошибкой. См. описание *access* выше для получения "
"информации о том, как использовать этот параметр."

#: ../../library/mmap.rst:98
msgid ""
"*offset* may be specified as a non-negative integer offset. mmap references "
"will be relative to the offset from the beginning of the file. *offset* "
"defaults to 0. *offset* must be a multiple of :const:`ALLOCATIONGRANULARITY` "
"which is equal to :const:`PAGESIZE` on Unix systems."
msgstr ""
"*offset* может быть указано как неотрицательное целое смещение. Ссылки mmap "
"будут относиться к смещению от начала файла. *offset* по умолчанию равен 0. "
"*offset* должен быть кратным :const:`ALLOCATIONGRANULARITY`, который равен :"
"const:`PAGESIZE` в системах Unix."

#: ../../library/mmap.rst:103
msgid ""
"To ensure validity of the created memory mapping the file specified by the "
"descriptor *fileno* is internally automatically synchronized with the "
"physical backing store on macOS."
msgstr ""
"Чтобы обеспечить достоверность созданного сопоставления памяти, файл, "
"указанный дескриптором *fileno*, автоматически синхронизируется внутри с "
"физическим резервным хранилищем в macOS."

#: ../../library/mmap.rst:107
msgid "This example shows a simple way of using :class:`~mmap.mmap`::"
msgstr ""
"В этом примере показан простой способ использования :class:`~mmap.mmap`::"

#: ../../library/mmap.rst:132
msgid ""
":class:`~mmap.mmap` can also be used as a context manager in a :keyword:"
"`with` statement::"
msgstr ""
":class:`~mmap.mmap` также можно использовать в качестве менеджера контекста "
"в операторе :keyword:`with`::"

#: ../../library/mmap.rst:140
msgid "Context manager support."
msgstr "Поддержка контекстного менеджера."

#: ../../library/mmap.rst:144
msgid ""
"The next example demonstrates how to create an anonymous map and exchange "
"data between the parent and child processes::"
msgstr ""
"Следующий пример демонстрирует, как создать анонимную карту и обмениваться "
"данными между родительским и дочерним процессами:"

#: ../../library/mmap.rst:163
msgid "Memory-mapped file objects support the following methods:"
msgstr ""
"Файловые объекты, отображаемые в памяти, поддерживают следующие методы:"

#: ../../library/mmap.rst:167
msgid ""
"Closes the mmap. Subsequent calls to other methods of the object will result "
"in a ValueError exception being raised. This will not close the open file."
msgstr ""
"Закрывает ммап. Последующие вызовы других методов объекта приведут к "
"возникновению исключения ValueError. Это не закроет открытый файл."

#: ../../library/mmap.rst:174
msgid "``True`` if the file is closed."
msgstr "``True``, если файл закрыт."

#: ../../library/mmap.rst:181
msgid ""
"Returns the lowest index in the object where the subsequence *sub* is found, "
"such that *sub* is contained in the range [*start*, *end*]. Optional "
"arguments *start* and *end* are interpreted as in slice notation. Returns "
"``-1`` on failure."
msgstr ""
"Возвращает самый низкий индекс в объекте, где найдена подпоследовательность "
"*sub*, так что *sub* содержится в диапазоне [*start*, *end*]. Необязательные "
"аргументы *start* и *end* интерпретируются как в нотации среза. Возвращает "
"``-1`` в случае неудачи."

#: ../../library/mmap.rst:186 ../../library/mmap.rst:267
#: ../../library/mmap.rst:299
msgid "Writable :term:`bytes-like object` is now accepted."
msgstr "Доступный для записи :term:`байтовый объект` теперь принимается."

#: ../../library/mmap.rst:192
msgid ""
"Flushes changes made to the in-memory copy of a file back to disk. Without "
"use of this call there is no guarantee that changes are written back before "
"the object is destroyed.  If *offset* and *size* are specified, only changes "
"to the given range of bytes will be flushed to disk; otherwise, the whole "
"extent of the mapping is flushed.  *offset* must be a multiple of the :const:"
"`PAGESIZE` or :const:`ALLOCATIONGRANULARITY`."
msgstr ""
"Сбрасывает изменения, внесенные в копию файла в памяти, обратно на диск. Без "
"использования этого вызова нет гарантии, что изменения будут записаны "
"обратно до уничтожения объекта. Если указаны *offset* и *size*, на диск "
"будут записаны только изменения в заданном диапазоне байтов; в противном "
"случае весь экстент отображения сбрасывается. *offset* должно быть кратно :"
"const:`PAGESIZE` или :const:`ALLOCATIONGRANULARITY`."

#: ../../library/mmap.rst:199
msgid ""
"``None`` is returned to indicate success.  An exception is raised when the "
"call failed."
msgstr ""
"``None`` возвращается, чтобы указать на успех. Исключение возникает в случае "
"сбоя вызова."

#: ../../library/mmap.rst:202
msgid ""
"Previously, a nonzero value was returned on success; zero was returned on "
"error under Windows.  A zero value was returned on success; an exception was "
"raised on error under Unix."
msgstr ""
"Раньше в случае успеха возвращалось ненулевое значение; ноль был возвращен "
"при ошибке под Windows. В случае успеха было возвращено нулевое значение; в "
"Unix возникло исключение из-за ошибки."

#: ../../library/mmap.rst:210
msgid ""
"Send advice *option* to the kernel about the memory region beginning at "
"*start* and extending *length* bytes.  *option* must be one of the :ref:"
"`MADV_* constants <madvise-constants>` available on the system.  If *start* "
"and *length* are omitted, the entire mapping is spanned.  On some systems "
"(including Linux), *start* must be a multiple of the :const:`PAGESIZE`."
msgstr ""
"Отправьте совет *option* ядру об области памяти, начинающейся с *start* и "
"расширяющейся *length* байт. *option* должен быть одной из констант :ref:"
"`MADV_* <madvise-constants>`, доступных в системе. Если *start* и *length* "
"опущены, охватывается все сопоставление. В некоторых системах (включая "
"Linux) *start* должно быть кратно :const:`PAGESIZE`."

#: ../../library/mmap.rst:217
msgid "Availability: Systems with the ``madvise()`` system call."
msgstr "Доступность: Системы с системным вызовом madvise()."

#: ../../library/mmap.rst:224
msgid ""
"Copy the *count* bytes starting at offset *src* to the destination index "
"*dest*.  If the mmap was created with :const:`ACCESS_READ`, then calls to "
"move will raise a :exc:`TypeError` exception."
msgstr ""
"Скопируйте *count* байты, начиная со смещения *src*, в индекс назначения "
"*dest*. Если mmap был создан с помощью :const:`ACCESS_READ`, то вызовы "
"перемещения вызовут исключение :exc:`TypeError`."

#: ../../library/mmap.rst:231
msgid ""
"Return a :class:`bytes` containing up to *n* bytes starting from the current "
"file position. If the argument is omitted, ``None`` or negative, return all "
"bytes from the current file position to the end of the mapping. The file "
"position is updated to point after the bytes that were returned."
msgstr ""
"Возвращает :class:`bytes`, содержащий до *n* байт, начиная с текущей позиции "
"в файле. Если аргумент опущен, ``Нет`` или отрицательный, вернуть все байты "
"от текущей позиции файла до конца сопоставления. Позиция файла обновляется, "
"указывая после возвращенных байтов."

#: ../../library/mmap.rst:237
msgid "Argument can be omitted or ``None``."
msgstr "Аргумент можно опустить или указать «Нет»."

#: ../../library/mmap.rst:242
msgid ""
"Returns a byte at the current file position as an integer, and advances the "
"file position by 1."
msgstr ""
"Возвращает байт в текущей позиции файла как целое число и перемещает позицию "
"файла на 1."

#: ../../library/mmap.rst:248
msgid ""
"Returns a single line, starting at the current file position and up to the "
"next newline. The file position is updated to point after the bytes that "
"were returned."
msgstr ""
"Возвращает одну строку, начиная с текущей позиции в файле и до следующей "
"новой строки. Позиция файла обновляется, указывая после возвращенных байтов."

#: ../../library/mmap.rst:255
msgid ""
"Resizes the map and the underlying file, if any. If the mmap was created "
"with :const:`ACCESS_READ` or :const:`ACCESS_COPY`, resizing the map will "
"raise a :exc:`TypeError` exception."
msgstr ""
"Изменяет размеры карты и основного файла, если таковой имеется. Если mmap "
"был создан с помощью :const:`ACCESS_READ` или :const:`ACCESS_COPY`, "
"изменение размера карты вызовет исключение :exc:`TypeError`."

#: ../../library/mmap.rst:262
msgid ""
"Returns the highest index in the object where the subsequence *sub* is "
"found, such that *sub* is contained in the range [*start*, *end*]. Optional "
"arguments *start* and *end* are interpreted as in slice notation. Returns "
"``-1`` on failure."
msgstr ""
"Возвращает самый высокий индекс в объекте, где найдена подпоследовательность "
"*sub*, например, *sub* содержится в диапазоне [*start*, *end*]. "
"Необязательные аргументы *start* и *end* интерпретируются как в нотации "
"среза. Возвращает ``-1`` в случае неудачи."

#: ../../library/mmap.rst:273
msgid ""
"Set the file's current position.  *whence* argument is optional and defaults "
"to ``os.SEEK_SET`` or ``0`` (absolute file positioning); other values are "
"``os.SEEK_CUR`` or ``1`` (seek relative to the current position) and ``os."
"SEEK_END`` or ``2`` (seek relative to the file's end)."
msgstr ""
"Установите текущую позицию файла. Аргумент *where* является необязательным и "
"по умолчанию имеет значение ``os.SEEK_SET`` или ``0`` (абсолютное "
"позиционирование файла); другие значения: os.SEEK_CUR или 1 (поиск "
"относительно текущей позиции) и os.SEEK_END или 2 (поиск относительно конца "
"файла)."

#: ../../library/mmap.rst:281
msgid ""
"Return the length of the file, which can be larger than the size of the "
"memory-mapped area."
msgstr ""
"Возвращает длину файла, которая может быть больше размера отображаемой в "
"памяти области."

#: ../../library/mmap.rst:287
msgid "Returns the current position of the file pointer."
msgstr "Возвращает текущую позицию указателя файла."

#: ../../library/mmap.rst:292
msgid ""
"Write the bytes in *bytes* into memory at the current position of the file "
"pointer and return the number of bytes written (never less than "
"``len(bytes)``, since if the write fails, a :exc:`ValueError` will be "
"raised).  The file position is updated to point after the bytes that were "
"written.  If the mmap was created with :const:`ACCESS_READ`, then writing to "
"it will raise a :exc:`TypeError` exception."
msgstr ""
"Запишите байты в *bytes* в память в текущей позиции указателя файла и "
"верните количество записанных байтов (никогда не меньше, чем ``len(bytes)``, "
"поскольку в случае сбоя записи выдается :exc:`ValueError` будет повышен). "
"Позиция файла обновляется, указывая после записанных байтов. Если mmap был "
"создан с помощью :const:`ACCESS_READ`, то запись в него вызовет исключение :"
"exc:`TypeError`."

#: ../../library/mmap.rst:302
msgid "The number of bytes written is now returned."
msgstr "Теперь возвращается количество записанных байтов."

#: ../../library/mmap.rst:308
msgid ""
"Write the integer *byte* into memory at the current position of the file "
"pointer; the file position is advanced by ``1``. If the mmap was created "
"with :const:`ACCESS_READ`, then writing to it will raise a :exc:`TypeError` "
"exception."
msgstr ""
"Запишите целое число *байт* в память в текущей позиции указателя файла; "
"позиция файла увеличивается на «1». Если mmap был создан с помощью :const:"
"`ACCESS_READ`, то запись в него вызовет исключение :exc:`TypeError`."

#: ../../library/mmap.rst:316
msgid "MADV_* Constants"
msgstr "MADV_* Константы"

#: ../../library/mmap.rst:343
msgid ""
"These options can be passed to :meth:`mmap.madvise`.  Not every option will "
"be present on every system."
msgstr ""
"Эти параметры можно передать в :meth:`mmap.madvise`. Не каждая опция будет "
"присутствовать в каждой системе."

#: ../../library/mmap.rst:346
msgid "Availability: Systems with the madvise() system call."
msgstr "Доступность: системы с системным вызовом madvise()."

#: ../../library/mmap.rst:353
msgid "MAP_* Constants"
msgstr "MAP_* Constants"

#: ../../library/mmap.rst:363
msgid ""
"These are the various flags that can be passed to :meth:`mmap.mmap`. Note "
"that some options might not be present on some systems."
msgstr ""

#: ../../library/mmap.rst:365
msgid "Added MAP_POPULATE constant."
msgstr ""
