# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# Roustam Khamidoulline, 2024
# Rafael Fontenelle <rffontenelle@gmail.com>, 2024
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.12\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-01-10 14:49+0000\n"
"PO-Revision-Date: 2024-05-11 00:33+0000\n"
"Last-Translator: Rafael Fontenelle <rffontenelle@gmail.com>, 2024\n"
"Language-Team: Russian (https://app.transifex.com/python-doc/teams/5390/"
"ru/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ru\n"
"Plural-Forms: nplurals=4; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && "
"n%10<=4 && (n%100<12 || n%100>14) ? 1 : n%10==0 || (n%10>=5 && n%10<=9) || "
"(n%100>=11 && n%100<=14)? 2 : 3);\n"

#: ../../library/http.cookiejar.rst:2
msgid ":mod:`!http.cookiejar` --- Cookie handling for HTTP clients"
msgstr ":mod:`!http.cookiejar` --- Обработка файлов cookie для HTTP-клиентов"

#: ../../library/http.cookiejar.rst:10
msgid "**Source code:** :source:`Lib/http/cookiejar.py`"
msgstr "**Исходный код:** :source:`Lib/http/cookiejar.py`"

#: ../../library/http.cookiejar.rst:14
msgid ""
"The :mod:`http.cookiejar` module defines classes for automatic handling of "
"HTTP cookies.  It is useful for accessing web sites that require small "
"pieces of data -- :dfn:`cookies` -- to be set on the client machine by an "
"HTTP response from a web server, and then returned to the server in later "
"HTTP requests."
msgstr ""
"Модуль :mod:`http.cookiejar` определяет классы для автоматической обработки "
"файлов cookie HTTP. Это полезно для доступа к веб-сайтам, для которых "
"требуются небольшие фрагменты данных — :dfn:`cookies` — которые должны быть "
"установлены на клиентском компьютере посредством ответа HTTP от веб-сервера, "
"а затем возвращены на сервер в последующих HTTP-запросах."

#: ../../library/http.cookiejar.rst:19
msgid ""
"Both the regular Netscape cookie protocol and the protocol defined by :rfc:"
"`2965` are handled.  RFC 2965 handling is switched off by default. :rfc:"
"`2109` cookies are parsed as Netscape cookies and subsequently treated "
"either as Netscape or RFC 2965 cookies according to the 'policy' in effect. "
"Note that the great majority of cookies on the internet are Netscape "
"cookies. :mod:`http.cookiejar` attempts to follow the de-facto Netscape "
"cookie protocol (which differs substantially from that set out in the "
"original Netscape specification), including taking note of the ``max-age`` "
"and ``port`` cookie-attributes introduced with RFC 2965."
msgstr ""
"Обрабатываются как обычный протокол cookie Netscape, так и протокол, "
"определенный :rfc:`2965`. По умолчанию обработка RFC 2965 отключена. Файлы "
"cookie :rfc:`2109` анализируются как файлы cookie Netscape и впоследствии "
"обрабатываются как файлы cookie Netscape или RFC 2965 в соответствии с "
"действующей «политикой». Обратите внимание, что подавляющее большинство "
"файлов cookie в Интернете — это файлы cookie Netscape. :mod:`http.cookiejar` "
"пытается следовать де-факто протоколу файлов cookie Netscape (который "
"существенно отличается от протокола, установленного в исходной спецификации "
"Netscape), в том числе принимает во внимание ``max-age`` и ``port` ` "
"Атрибуты cookie, представленные в RFC 2965."

#: ../../library/http.cookiejar.rst:31
msgid ""
"The various named parameters found in :mailheader:`Set-Cookie` and :"
"mailheader:`Set-Cookie2` headers (eg. ``domain`` and ``expires``) are "
"conventionally referred to as :dfn:`attributes`.  To distinguish them from "
"Python attributes, the documentation for this module uses the term :dfn:"
"`cookie-attribute` instead."
msgstr ""
"Различные именованные параметры, находящиеся в заголовках :mailheader:`Set-"
"Cookie` и :mailheader:`Set-Cookie2` (например, ``domain`` и ``expires``), "
"обычно называются :dfn:`attributes` . Чтобы отличить их от атрибутов Python, "
"в документации к этому модулю вместо этого используется термин :dfn:`cookie-"
"attribute`."

#: ../../library/http.cookiejar.rst:38
msgid "The module defines the following exception:"
msgstr "Модуль определяет следующее исключение:"

#: ../../library/http.cookiejar.rst:43
msgid ""
"Instances of :class:`FileCookieJar` raise this exception on failure to load "
"cookies from a file.  :exc:`LoadError` is a subclass of :exc:`OSError`."
msgstr ""
"Экземпляры :class:`FileCookieJar` вызывают это исключение при невозможности "
"загрузки файлов cookie из файла. :exc:`LoadError` является подклассом :exc:"
"`OSError`."

#: ../../library/http.cookiejar.rst:46
msgid ""
":exc:`LoadError` used to be a subtype of :exc:`IOError`, which is now an "
"alias of :exc:`OSError`."
msgstr ""
":exc:`LoadError` раньше был подтипом :exc:`IOError`, который теперь является "
"псевдонимом :exc:`OSError`."

#: ../../library/http.cookiejar.rst:51
msgid "The following classes are provided:"
msgstr "Предусмотрены следующие занятия:"

#: ../../library/http.cookiejar.rst:56
msgid "*policy* is an object implementing the :class:`CookiePolicy` interface."
msgstr "*policy* — это объект, реализующий интерфейс :class:`CookiePolicy`."

#: ../../library/http.cookiejar.rst:58
msgid ""
"The :class:`CookieJar` class stores HTTP cookies.  It extracts cookies from "
"HTTP requests, and returns them in HTTP responses. :class:`CookieJar` "
"instances automatically expire contained cookies when necessary.  Subclasses "
"are also responsible for storing and retrieving cookies from a file or "
"database."
msgstr ""
"Класс :class:`CookieJar` хранит файлы cookie HTTP. Он извлекает файлы cookie "
"из HTTP-запросов и возвращает их в HTTP-ответах. При необходимости "
"экземпляры :class:`CookieJar` автоматически удаляют файлы cookie, "
"содержащиеся в них. Подклассы также отвечают за хранение и получение файлов "
"cookie из файла или базы данных."

#: ../../library/http.cookiejar.rst:66
msgid ""
"*policy* is an object implementing the :class:`CookiePolicy` interface.  For "
"the other arguments, see the documentation for the corresponding attributes."
msgstr ""
"*policy* — это объект, реализующий интерфейс :class:`CookiePolicy`. Другие "
"аргументы см. в документации по соответствующим атрибутам."

#: ../../library/http.cookiejar.rst:69
msgid ""
"A :class:`CookieJar` which can load cookies from, and perhaps save cookies "
"to, a file on disk.  Cookies are **NOT** loaded from the named file until "
"either the :meth:`load` or :meth:`revert` method is called.  Subclasses of "
"this class are documented in section :ref:`file-cookie-jar-classes`."
msgstr ""
":class:`CookieJar`, который может загружать файлы cookie из файла на диске "
"и, возможно, сохранять файлы cookie в нем. Файлы cookie **НЕ** загружаются "
"из именованного файла до тех пор, пока не будет вызван метод :meth:`load` "
"или :meth:`revert`. Подклассы этого класса описаны в разделе :ref:`file-"
"cookie-jar-classes`."

#: ../../library/http.cookiejar.rst:74
msgid ""
"This should not be initialized directly – use its subclasses below instead."
msgstr ""
"Его не следует инициализировать напрямую — вместо этого используйте его "
"подклассы ниже."

#: ../../library/http.cookiejar.rst:78 ../../library/http.cookiejar.rst:351
msgid "The filename parameter supports a :term:`path-like object`."
msgstr "Параметр имени файла поддерживает объект, подобный пути."

#: ../../library/http.cookiejar.rst:83
msgid ""
"This class is responsible for deciding whether each cookie should be "
"accepted from / returned to the server."
msgstr ""
"Этот класс отвечает за принятие решения о том, следует ли принимать или "
"возвращать каждый файл cookie с сервера."

#: ../../library/http.cookiejar.rst:89
msgid ""
"Constructor arguments should be passed as keyword arguments only. "
"*blocked_domains* is a sequence of domain names that we never accept cookies "
"from, nor return cookies to. *allowed_domains* if not :const:`None`, this is "
"a sequence of the only domains for which we accept and return cookies. "
"*secure_protocols* is a sequence of protocols for which secure cookies can "
"be added to. By default *https* and *wss* (secure websocket) are considered "
"secure protocols. For all other arguments, see the documentation for :class:"
"`CookiePolicy` and :class:`DefaultCookiePolicy` objects."
msgstr ""
"Аргументы конструктора следует передавать только как аргументы ключевого "
"слова. *blocked_domains* — это последовательность доменных имен, от которых "
"мы никогда не принимаем файлы cookie и не возвращаем их. *allowed_domains*, "
"если не :const:`None`, это последовательность единственных доменов, для "
"которых мы принимаем и возвращаем файлы cookie. *secure_protocols* — это "
"последовательность протоколов, к которым можно добавить безопасные файлы "
"cookie. По умолчанию *https* и *wss* (безопасный веб-сокет) считаются "
"безопасными протоколами. Все остальные аргументы см. в документации для "
"объектов :class:`CookiePolicy` и :class:`DefaultCookiePolicy`."

#: ../../library/http.cookiejar.rst:98
msgid ""
":class:`DefaultCookiePolicy` implements the standard accept / reject rules "
"for Netscape and :rfc:`2965` cookies.  By default, :rfc:`2109` cookies (ie. "
"cookies received in a :mailheader:`Set-Cookie` header with a version cookie-"
"attribute of 1) are treated according to the RFC 2965 rules.  However, if "
"RFC 2965 handling is turned off or :attr:`rfc2109_as_netscape` is ``True``, "
"RFC 2109 cookies are 'downgraded' by the :class:`CookieJar` instance to "
"Netscape cookies, by setting the :attr:`version` attribute of the :class:"
"`Cookie` instance to 0. :class:`DefaultCookiePolicy` also provides some "
"parameters to allow some fine-tuning of policy."
msgstr ""
":class:`DefaultCookiePolicy` реализует стандартные правила принятия/"
"отклонения для файлов cookie Netscape и :rfc:`2965`. По умолчанию файлы "
"cookie :rfc:`2109` (т. е. файлы cookie, полученные в заголовке :mailheader:"
"`Set-Cookie` с атрибутом версии cookie, равным 1), обрабатываются в "
"соответствии с правилами RFC 2965. Однако, если обработка RFC 2965 отключена "
"или :attr:`rfc2109_as_netscape` имеет значение ``True``, файлы cookie RFC "
"2109 «понижаются» экземпляром :class:`CookieJar` до файлов cookie Netscape, "
"путем установки :attr:` version` экземпляра :class:`Cookie` равным 0. :class:"
"`DefaultCookiePolicy` также предоставляет некоторые параметры, позволяющие "
"выполнить тонкую настройку политики."

#: ../../library/http.cookiejar.rst:111
msgid ""
"This class represents Netscape, :rfc:`2109` and :rfc:`2965` cookies.  It is "
"not expected that users of :mod:`http.cookiejar` construct their own :class:"
"`Cookie` instances.  Instead, if necessary, call :meth:`make_cookies` on a :"
"class:`CookieJar` instance."
msgstr ""
"Этот класс представляет файлы cookie Netscape, :rfc:`2109` и :rfc:`2965`. Не "
"ожидается, что пользователи :mod:`http.cookiejar` создадут свои собственные "
"экземпляры :class:`Cookie`. Вместо этого, если необходимо, вызовите :meth:"
"`make_cookies` в экземпляре :class:`CookieJar`."

#: ../../library/http.cookiejar.rst:119
msgid "Module :mod:`urllib.request`"
msgstr "Модуль :mod:`urllib.request`"

#: ../../library/http.cookiejar.rst:120
msgid "URL opening with automatic cookie handling."
msgstr "Открытие URL-адреса с автоматической обработкой файлов cookie."

#: ../../library/http.cookiejar.rst:122
msgid "Module :mod:`http.cookies`"
msgstr "Модуль :mod:`http.cookies`"

#: ../../library/http.cookiejar.rst:123
msgid ""
"HTTP cookie classes, principally useful for server-side code.  The :mod:"
"`http.cookiejar` and :mod:`http.cookies` modules do not depend on each other."
msgstr ""
"Классы файлов cookie HTTP, в основном полезные для серверного кода. Модули :"
"mod:`http.cookiejar` и :mod:`http.cookies` не зависят друг от друга."

#: ../../library/http.cookiejar.rst:127
msgid "https://curl.se/rfc/cookie_spec.html"
msgstr "https://curl.se/rfc/cookie_spec.html"

#: ../../library/http.cookiejar.rst:128
msgid ""
"The specification of the original Netscape cookie protocol.  Though this is "
"still the dominant protocol, the 'Netscape cookie protocol' implemented by "
"all the major browsers (and :mod:`http.cookiejar`) only bears a passing "
"resemblance to the one sketched out in ``cookie_spec.html``."
msgstr ""
"Спецификация исходного протокола cookie Netscape. Хотя это по-прежнему "
"доминирующий протокол, «Протокол cookie Netscape», реализованный всеми "
"основными браузерами (и :mod:`http.cookiejar`), имеет лишь мимолетное "
"сходство с протоколом, изображенным в ``cookie_spec.html``."

#: ../../library/http.cookiejar.rst:133
msgid ":rfc:`2109` - HTTP State Management Mechanism"
msgstr ":rfc:`2109` - Механизм управления состоянием HTTP"

#: ../../library/http.cookiejar.rst:134
msgid "Obsoleted by :rfc:`2965`. Uses :mailheader:`Set-Cookie` with version=1."
msgstr "Устарело:rfc:`2965`. Использует :mailheader:`Set-Cookie` с версией=1."

#: ../../library/http.cookiejar.rst:136
msgid ":rfc:`2965` - HTTP State Management Mechanism"
msgstr ":rfc:`2965` - Механизм управления состоянием HTTP"

#: ../../library/http.cookiejar.rst:137
msgid ""
"The Netscape protocol with the bugs fixed.  Uses :mailheader:`Set-Cookie2` "
"in place of :mailheader:`Set-Cookie`.  Not widely used."
msgstr ""
"Протокол Netscape с исправленными ошибками. Использует :mailheader:`Set-"
"Cookie2` вместо :mailheader:`Set-Cookie`. Не широко используется."

#: ../../library/http.cookiejar.rst:140
msgid "https://kristol.org/cookie/errata.html"
msgstr "https://kristol.org/cookie/errata.html"

#: ../../library/http.cookiejar.rst:141
msgid "Unfinished errata to :rfc:`2965`."
msgstr "Недоделанные исправления в :rfc:`2965`."

#: ../../library/http.cookiejar.rst:143
msgid ":rfc:`2964` - Use of HTTP State Management"
msgstr ":rfc:`2964` - Использование управления состоянием HTTP"

#: ../../library/http.cookiejar.rst:148
msgid "CookieJar and FileCookieJar Objects"
msgstr "Объекты CookieJar и FileCookieJar"

#: ../../library/http.cookiejar.rst:150
msgid ""
":class:`CookieJar` objects support the :term:`iterator` protocol for "
"iterating over contained :class:`Cookie` objects."
msgstr ""
"Объекты :class:`CookieJar` поддерживают протокол :term:`iterator` для "
"перебора содержащихся объектов :class:`Cookie`."

#: ../../library/http.cookiejar.rst:153
msgid ":class:`CookieJar` has the following methods:"
msgstr ":class:`CookieJar` имеет следующие методы:"

#: ../../library/http.cookiejar.rst:158
msgid "Add correct :mailheader:`Cookie` header to *request*."
msgstr "Добавьте правильный заголовок :mailheader:`Cookie` в *request*."

#: ../../library/http.cookiejar.rst:160
msgid ""
"If policy allows (ie. the :attr:`rfc2965` and :attr:`hide_cookie2` "
"attributes of the :class:`CookieJar`'s :class:`CookiePolicy` instance are "
"true and false respectively), the :mailheader:`Cookie2` header is also added "
"when appropriate."
msgstr ""
"Если политика позволяет (т. е. атрибуты :attr:`rfc2965` и :attr:"
"`hide_cookie2` экземпляра :class:`CookieJar` :class:`CookiePolicy` имеют "
"значения true и false соответственно), :mailheader:` Заголовок Cookie2` "
"также добавляется, когда это необходимо."

#: ../../library/http.cookiejar.rst:164
msgid ""
"The *request* object (usually a :class:`urllib.request.Request` instance) "
"must support the methods :meth:`get_full_url`, :meth:`has_header`, :meth:"
"`get_header`, :meth:`header_items`, :meth:`add_unredirected_header` and the "
"attributes :attr:`host`, :attr:`!type`, :attr:`unverifiable` and :attr:"
"`origin_req_host` as documented by :mod:`urllib.request`."
msgstr ""
"Объект *request* (обычно экземпляр :class:`urllib.request.Request`) должен "
"поддерживать методы :meth:`get_full_url`, :meth:`has_header`, :meth:"
"`get_header`, :meth:`header_items `, :meth:`add_unredirected_header` и "
"атрибуты :attr:`host`, :attr:`!type`, :attr:`unverifying` и :attr:"
"`origin_req_host`, как описано в :mod:`urllib.request` ."

#: ../../library/http.cookiejar.rst:172 ../../library/http.cookiejar.rst:198
msgid ""
"*request* object needs :attr:`origin_req_host` attribute. Dependency on a "
"deprecated method :meth:`get_origin_req_host` has been removed."
msgstr ""
"Для объекта *request* требуется атрибут :attr:`origin_req_host`. Зависимость "
"от устаревшего метода :meth:`get_origin_req_host` была удалена."

#: ../../library/http.cookiejar.rst:178
msgid ""
"Extract cookies from HTTP *response* and store them in the :class:"
"`CookieJar`, where allowed by policy."
msgstr ""
"Извлеките файлы cookie из *ответа* HTTP и сохраните их в :class:`CookieJar`, "
"если это разрешено политикой."

#: ../../library/http.cookiejar.rst:181
msgid ""
"The :class:`CookieJar` will look for allowable :mailheader:`Set-Cookie` and :"
"mailheader:`Set-Cookie2` headers in the *response* argument, and store "
"cookies as appropriate (subject to the :meth:`CookiePolicy.set_ok` method's "
"approval)."
msgstr ""
":class:`CookieJar` будет искать допустимые заголовки :mailheader:`Set-"
"Cookie` и :mailheader:`Set-Cookie2` в аргументе *response* и сохранять файлы "
"cookie соответствующим образом (с учетом :meth:`CookiePolicy). одобрение "
"метода .set_ok`)."

#: ../../library/http.cookiejar.rst:185
msgid ""
"The *response* object (usually the result of a call to :meth:`urllib.request."
"urlopen`, or similar) should support an :meth:`info` method, which returns "
"an :class:`email.message.Message` instance."
msgstr ""
"Объект *response* (обычно результат вызова :meth:`urllib.request.urlopen` "
"или аналогичного) должен поддерживать метод :meth:`info`, который "
"возвращает :class:`email.message.Message ` экземпляр."

#: ../../library/http.cookiejar.rst:189
msgid ""
"The *request* object (usually a :class:`urllib.request.Request` instance) "
"must support the method :meth:`get_full_url` and the attributes :attr:"
"`host`, :attr:`unverifiable` and :attr:`origin_req_host`, as documented by :"
"mod:`urllib.request`.  The request is used to set default values for cookie-"
"attributes as well as for checking that the cookie is allowed to be set."
msgstr ""
"Объект *request* (обычно экземпляр :class:`urllib.request.Request`) должен "
"поддерживать метод :meth:`get_full_url` и атрибуты :attr:`host`, :attr:"
"`unverifying` и :attr: `origin_req_host`, как описано в :mod:`urllib."
"request`. Запрос используется для установки значений по умолчанию для "
"атрибутов cookie, а также для проверки того, разрешена ли установка cookie."

#: ../../library/http.cookiejar.rst:203
msgid "Set the :class:`CookiePolicy` instance to be used."
msgstr "Установите экземпляр :class:`CookiePolicy` для использования."

#: ../../library/http.cookiejar.rst:208
msgid ""
"Return sequence of :class:`Cookie` objects extracted from *response* object."
msgstr ""
"Возвращаемая последовательность объектов :class:`Cookie`, извлеченных из "
"объекта *response*."

#: ../../library/http.cookiejar.rst:210
msgid ""
"See the documentation for :meth:`extract_cookies` for the interfaces "
"required of the *response* and *request* arguments."
msgstr ""
"См. документацию по :meth:`extract_cookies` для интерфейсов, необходимых для "
"аргументов *response* и *request*."

#: ../../library/http.cookiejar.rst:216
msgid "Set a :class:`Cookie` if policy says it's OK to do so."
msgstr "Установите :class:`Cookie`, если политика разрешает это делать."

#: ../../library/http.cookiejar.rst:221
msgid ""
"Set a :class:`Cookie`, without checking with policy to see whether or not it "
"should be set."
msgstr ""
"Установите :class:`Cookie`, не проверяя с помощью политики, следует ли его "
"устанавливать."

#: ../../library/http.cookiejar.rst:227
msgid "Clear some cookies."
msgstr "Очистите некоторые cookie."

#: ../../library/http.cookiejar.rst:229
msgid ""
"If invoked without arguments, clear all cookies.  If given a single "
"argument, only cookies belonging to that *domain* will be removed. If given "
"two arguments, cookies belonging to the specified *domain* and URL *path* "
"are removed.  If given three arguments, then the cookie with the specified "
"*domain*, *path* and *name* is removed."
msgstr ""
"Если вызывается без аргументов, очистите все файлы cookie. Если задан один "
"аргумент, будут удалены только файлы cookie, принадлежащие этому *домену*. "
"Если заданы два аргумента, файлы cookie, принадлежащие указанному *домену* и "
"URL-адресу *путь*, удаляются. Если задано три аргумента, файл cookie с "
"указанными *домен*, *путь* и *имя* удаляется."

#: ../../library/http.cookiejar.rst:235
msgid "Raises :exc:`KeyError` if no matching cookie exists."
msgstr ""
"Вызывает :exc:`KeyError`, если соответствующего файла cookie не существует."

#: ../../library/http.cookiejar.rst:240
msgid "Discard all session cookies."
msgstr "Отбросьте все сессии cookie."

#: ../../library/http.cookiejar.rst:242
msgid ""
"Discards all contained cookies that have a true :attr:`discard` attribute "
"(usually because they had either no ``max-age`` or ``expires`` cookie-"
"attribute, or an explicit ``discard`` cookie-attribute).  For interactive "
"browsers, the end of a session usually corresponds to closing the browser "
"window."
msgstr ""
"Отбрасывает все содержащиеся файлы cookie, имеющие истинный атрибут :attr:"
"`discard` (обычно потому, что у них либо нет атрибута cookie ``max-age`` или "
"``expires``, либо явный атрибут cookie ``discard`` ). Для интерактивных "
"браузеров окончание сеанса обычно соответствует закрытию окна браузера."

#: ../../library/http.cookiejar.rst:247
msgid ""
"Note that the :meth:`save` method won't save session cookies anyway, unless "
"you ask otherwise by passing a true *ignore_discard* argument."
msgstr ""
"Обратите внимание, что метод :meth:`save` в любом случае не будет сохранять "
"файлы cookie сеанса, если вы не попросите иное, передав истинный аргумент "
"*ignore_discard*."

#: ../../library/http.cookiejar.rst:250
msgid ":class:`FileCookieJar` implements the following additional methods:"
msgstr ":class:`FileCookieJar` реализует следующие дополнительные методы:"

#: ../../library/http.cookiejar.rst:255
msgid "Save cookies to a file."
msgstr "Сохраните cookie в файл."

#: ../../library/http.cookiejar.rst:257
msgid ""
"This base class raises :exc:`NotImplementedError`.  Subclasses may leave "
"this method unimplemented."
msgstr ""
"Этот базовый класс вызывает :exc:`NotImplementedError`. Подклассы могут "
"оставить этот метод нереализованным."

#: ../../library/http.cookiejar.rst:260
msgid ""
"*filename* is the name of file in which to save cookies.  If *filename* is "
"not specified, :attr:`self.filename` is used (whose default is the value "
"passed to the constructor, if any); if :attr:`self.filename` is :const:"
"`None`, :exc:`ValueError` is raised."
msgstr ""
"*имя_файла* — имя файла, в котором сохраняются файлы cookie. Если *filename* "
"не указано, используется :attr:`self.filename` (по умолчанию используется "
"значение, переданное конструктору, если таковой имеется); если :attr:`self."
"filename` равен :const:`None`, возникает :exc:`ValueError`."

#: ../../library/http.cookiejar.rst:265
msgid ""
"*ignore_discard*: save even cookies set to be discarded. *ignore_expires*: "
"save even cookies that have expired"
msgstr ""
"*ignore_discard*: сохранить даже файлы cookie, которые нужно удалить. "
"*ignore_expires*: сохранить даже файлы cookie, срок действия которых истек."

#: ../../library/http.cookiejar.rst:268
msgid ""
"The file is overwritten if it already exists, thus wiping all the cookies it "
"contains.  Saved cookies can be restored later using the :meth:`load` or :"
"meth:`revert` methods."
msgstr ""
"Файл перезаписывается, если он уже существует, при этом удаляются все "
"содержащиеся в нем файлы cookie. Сохраненные файлы cookie можно позже "
"восстановить с помощью методов :meth:`load` или :meth:`revert`."

#: ../../library/http.cookiejar.rst:275
msgid "Load cookies from a file."
msgstr "Загрузить куки из файла."

#: ../../library/http.cookiejar.rst:277
msgid "Old cookies are kept unless overwritten by newly loaded ones."
msgstr ""
"Старые файлы cookie сохраняются, если они не перезаписываются вновь "
"загруженными."

#: ../../library/http.cookiejar.rst:279
msgid "Arguments are as for :meth:`save`."
msgstr "Аргументы такие же, как для :meth:`save`."

#: ../../library/http.cookiejar.rst:281
msgid ""
"The named file must be in the format understood by the class, or :exc:"
"`LoadError` will be raised.  Also, :exc:`OSError` may be raised, for example "
"if the file does not exist."
msgstr ""
"Именованный файл должен быть в формате, понятном классу, иначе будет выдано "
"сообщение :exc:`LoadError`. Кроме того, может возникнуть :exc:`OSError`, "
"например, если файл не существует."

#: ../../library/http.cookiejar.rst:285
msgid ":exc:`IOError` used to be raised, it is now an alias of :exc:`OSError`."
msgstr ""
":exc:`IOError` раньше использовался для возбуждения, теперь это псевдоним :"
"exc:`OSError`."

#: ../../library/http.cookiejar.rst:291
msgid "Clear all cookies and reload cookies from a saved file."
msgstr ""
"Удалите все файлы cookie и перезагрузите файлы cookie из сохраненного файла."

#: ../../library/http.cookiejar.rst:293
msgid ""
":meth:`revert` can raise the same exceptions as :meth:`load`. If there is a "
"failure, the object's state will not be altered."
msgstr ""
":meth:`revert` может вызывать те же исключения, что и :meth:`load`. В случае "
"сбоя состояние объекта не изменится."

#: ../../library/http.cookiejar.rst:296
msgid ":class:`FileCookieJar` instances have the following public attributes:"
msgstr ""
"Экземпляры :class:`FileCookieJar` имеют следующие общедоступные атрибуты:"

#: ../../library/http.cookiejar.rst:301
msgid ""
"Filename of default file in which to keep cookies.  This attribute may be "
"assigned to."
msgstr ""
"Имя файла по умолчанию, в котором будут храниться записи cookie. Этот "
"атрибут может быть назначен."

#: ../../library/http.cookiejar.rst:307
msgid ""
"If true, load cookies lazily from disk.  This attribute should not be "
"assigned to.  This is only a hint, since this only affects performance, not "
"behaviour (unless the cookies on disk are changing). A :class:`CookieJar` "
"object may ignore it.  None of the :class:`FileCookieJar` classes included "
"in the standard library lazily loads cookies."
msgstr ""
"Если это правда, лениво загружать файлы cookie с диска. Этот атрибут не "
"следует назначать. Это всего лишь подсказка, поскольку это влияет только на "
"производительность, а не на поведение (если только файлы cookie на диске не "
"меняются). Объект :class:`CookieJar` может игнорировать его. Ни один из "
"классов :class:`FileCookieJar`, включенных в стандартную библиотеку, не "
"загружает файлы cookie лениво."

#: ../../library/http.cookiejar.rst:317
msgid "FileCookieJar subclasses and co-operation with web browsers"
msgstr "Подклассы FileCookieJar и взаимодействие с веб-браузерами"

#: ../../library/http.cookiejar.rst:319
msgid ""
"The following :class:`CookieJar` subclasses are provided for reading and "
"writing."
msgstr ""
"Следующие подклассы :class:`CookieJar` предназначены для чтения и записи."

#: ../../library/http.cookiejar.rst:324
msgid ""
"A :class:`FileCookieJar` that can load from and save cookies to disk in the "
"Mozilla ``cookies.txt`` file format (which is also used by curl and the Lynx "
"and Netscape browsers)."
msgstr ""
":class:`FileCookieJar`, который может загружать и сохранять файлы cookie на "
"диск в формате файла Mozilla ``cookies.txt`` (который также используется в "
"браузерах Curl и Lynx и Netscape)."

#: ../../library/http.cookiejar.rst:330
msgid ""
"This loses information about :rfc:`2965` cookies, and also about newer or "
"non-standard cookie-attributes such as ``port``."
msgstr ""
"При этом теряется информация о файлах cookie :rfc:`2965`, а также о новых "
"или нестандартных атрибутах файлов cookie, таких как ``port``."

#: ../../library/http.cookiejar.rst:335
msgid ""
"Back up your cookies before saving if you have cookies whose loss / "
"corruption would be inconvenient (there are some subtleties which may lead "
"to slight changes in the file over a load / save round-trip)."
msgstr ""
"Создайте резервную копию файлов cookie перед сохранением, если у вас есть "
"файлы cookie, потеря/повреждение которых может быть неудобной (есть "
"некоторые тонкости, которые могут привести к небольшим изменениям в файле "
"при загрузке/сохранении туда и обратно)."

#: ../../library/http.cookiejar.rst:339
msgid ""
"Also note that cookies saved while Mozilla is running will get clobbered by "
"Mozilla."
msgstr ""
"Также обратите внимание, что файлы cookie, сохраненные во время работы "
"Mozilla, будут удалены Mozilla."

#: ../../library/http.cookiejar.rst:345
msgid ""
"A :class:`FileCookieJar` that can load from and save cookies to disk in "
"format compatible with the libwww-perl library's ``Set-Cookie3`` file "
"format.  This is convenient if you want to store cookies in a human-readable "
"file."
msgstr ""
":class:`FileCookieJar`, который может загружать и сохранять файлы cookie на "
"диск в формате, совместимом с форматом файлов ``Set-Cookie3`` библиотеки "
"libwww-perl. Это удобно, если вы хотите хранить файлы cookie в удобочитаемом "
"файле."

#: ../../library/http.cookiejar.rst:356
msgid "CookiePolicy Objects"
msgstr "Объекты политики cookiePolicy"

#: ../../library/http.cookiejar.rst:358
msgid ""
"Objects implementing the :class:`CookiePolicy` interface have the following "
"methods:"
msgstr ""
"Объекты, реализующие интерфейс :class:`CookiePolicy`, имеют следующие методы:"

#: ../../library/http.cookiejar.rst:364
msgid ""
"Return boolean value indicating whether cookie should be accepted from "
"server."
msgstr ""
"Возвращает логическое значение, указывающее, следует ли принимать файлы "
"cookie с сервера."

#: ../../library/http.cookiejar.rst:366
msgid ""
"*cookie* is a :class:`Cookie` instance.  *request* is an object implementing "
"the interface defined by the documentation for :meth:`CookieJar."
"extract_cookies`."
msgstr ""
"*cookie* — это экземпляр :class:`Cookie`. *request* — это объект, "
"реализующий интерфейс, определенный в документации для :meth:`CookieJar."
"extract_cookies`."

#: ../../library/http.cookiejar.rst:373
msgid ""
"Return boolean value indicating whether cookie should be returned to server."
msgstr ""
"Возвращаемое логическое значение, указывающее, следует ли возвращать файлы "
"cookie на сервер."

#: ../../library/http.cookiejar.rst:375
msgid ""
"*cookie* is a :class:`Cookie` instance.  *request* is an object implementing "
"the interface defined by the documentation for :meth:`CookieJar."
"add_cookie_header`."
msgstr ""
"*cookie* — это экземпляр :class:`Cookie`. *request* — это объект, "
"реализующий интерфейс, определенный в документации для :meth:`CookieJar."
"add_cookie_header`."

#: ../../library/http.cookiejar.rst:382
msgid ""
"Return ``False`` if cookies should not be returned, given cookie domain."
msgstr ""
"Верните «False», если файлы cookie не должны возвращаться, учитывая домен "
"файлов cookie."

#: ../../library/http.cookiejar.rst:384
msgid ""
"This method is an optimization.  It removes the need for checking every "
"cookie with a particular domain (which might involve reading many files).  "
"Returning true from :meth:`domain_return_ok` and :meth:`path_return_ok` "
"leaves all the work to :meth:`return_ok`."
msgstr ""
"Этот метод является оптимизацией. Это устраняет необходимость проверки "
"каждого файла cookie с определенным доменом (что может потребовать чтения "
"большого количества файлов). Возвращение true из :meth:`domain_return_ok` и :"
"meth:`path_return_ok` оставляет всю работу :meth:`return_ok`."

#: ../../library/http.cookiejar.rst:389
msgid ""
"If :meth:`domain_return_ok` returns true for the cookie domain, :meth:"
"`path_return_ok` is called for the cookie path.  Otherwise, :meth:"
"`path_return_ok` and :meth:`return_ok` are never called for that cookie "
"domain.  If :meth:`path_return_ok` returns true, :meth:`return_ok` is called "
"with the :class:`Cookie` object itself for a full check.  Otherwise, :meth:"
"`return_ok` is never called for that cookie path."
msgstr ""
"Если :meth:`domain_return_ok` возвращает true для домена cookie, :meth:"
"`path_return_ok` вызывается для пути cookie. В противном случае :meth:"
"`path_return_ok` и :meth:`return_ok` никогда не вызываются для этого домена "
"cookie. Если :meth:`path_return_ok` возвращает true, :meth:`return_ok` "
"вызывается вместе с самим объектом :class:`Cookie` для полной проверки. В "
"противном случае :meth:`return_ok` никогда не вызывается для этого пути "
"cookie."

#: ../../library/http.cookiejar.rst:396
msgid ""
"Note that :meth:`domain_return_ok` is called for every *cookie* domain, not "
"just for the *request* domain.  For example, the function might be called "
"with both ``\".example.com\"`` and ``\"www.example.com\"`` if the request "
"domain is ``\"www.example.com\"``.  The same goes for :meth:`path_return_ok`."
msgstr ""
"Обратите внимание, что :meth:`domain_return_ok` вызывается для каждого "
"домена *cookie*, а не только для домена *request*. Например, функция может "
"быть вызвана как с ``\".example.com\"``, так и с ``\"www.example.com\"``, "
"если доменом запроса является ``\"www.example.com\"``. То же самое касается :"
"meth:`path_return_ok`."

#: ../../library/http.cookiejar.rst:401
msgid "The *request* argument is as documented for :meth:`return_ok`."
msgstr "Аргумент *request* описан в документации для :meth:`return_ok`."

#: ../../library/http.cookiejar.rst:406
msgid "Return ``False`` if cookies should not be returned, given cookie path."
msgstr ""
"Верните «False», если файлы cookie не должны возвращаться по заданному пути "
"к файлам cookie."

#: ../../library/http.cookiejar.rst:408
msgid "See the documentation for :meth:`domain_return_ok`."
msgstr "См. документацию по :meth:`domain_return_ok`."

#: ../../library/http.cookiejar.rst:410
msgid ""
"In addition to implementing the methods above, implementations of the :class:"
"`CookiePolicy` interface must also supply the following attributes, "
"indicating which protocols should be used, and how.  All of these attributes "
"may be assigned to."
msgstr ""
"В дополнение к реализации вышеперечисленных методов реализации интерфейса :"
"class:`CookiePolicy` также должны предоставлять следующие атрибуты, "
"указывающие, какие протоколы следует использовать и как. Все эти атрибуты "
"могут быть назначены."

#: ../../library/http.cookiejar.rst:418
msgid "Implement Netscape protocol."
msgstr "Реализует протокол Netscape."

#: ../../library/http.cookiejar.rst:423
msgid "Implement :rfc:`2965` protocol."
msgstr "Внедрите протокол :rfc:`2965`."

#: ../../library/http.cookiejar.rst:428
msgid ""
"Don't add :mailheader:`Cookie2` header to requests (the presence of this "
"header indicates to the server that we understand :rfc:`2965` cookies)."
msgstr ""
"Не добавляйте заголовок :mailheader:`Cookie2` к запросам (наличие этого "
"заголовка указывает серверу, что мы понимаем :rfc:`2965` файлы cookie)."

#: ../../library/http.cookiejar.rst:431
msgid ""
"The most useful way to define a :class:`CookiePolicy` class is by "
"subclassing from :class:`DefaultCookiePolicy` and overriding some or all of "
"the methods above.  :class:`CookiePolicy` itself may be used as a 'null "
"policy' to allow setting and receiving any and all cookies (this is unlikely "
"to be useful)."
msgstr ""
"Самый полезный способ определить класс :class:`CookiePolicy` — это создать "
"подкласс от :class:`DefaultCookiePolicy` и переопределить некоторые или все "
"вышеперечисленные методы. :class:`CookiePolicy` сама по себе может "
"использоваться как «нулевая политика», позволяющая устанавливать и получать "
"любые файлы cookie (это вряд ли будет полезно)."

#: ../../library/http.cookiejar.rst:440
msgid "DefaultCookiePolicy Objects"
msgstr "Объекты DefaultCookiePolicy"

#: ../../library/http.cookiejar.rst:442
msgid "Implements the standard rules for accepting and returning cookies."
msgstr "Реализует стандартные правила приема и возврата файлов cookie."

#: ../../library/http.cookiejar.rst:444
msgid ""
"Both :rfc:`2965` and Netscape cookies are covered.  RFC 2965 handling is "
"switched off by default."
msgstr ""
"Охватываются как файлы cookie :rfc:`2965`, так и файлы cookie Netscape. По "
"умолчанию обработка RFC 2965 отключена."

#: ../../library/http.cookiejar.rst:447
msgid ""
"The easiest way to provide your own policy is to override this class and "
"call its methods in your overridden implementations before adding your own "
"additional checks::"
msgstr ""
"Самый простой способ предоставить собственную политику — переопределить этот "
"класс и вызывать его методы в переопределенных реализациях перед добавлением "
"собственных дополнительных проверок:"

#: ../../library/http.cookiejar.rst:451
msgid ""
"import http.cookiejar\n"
"class MyCookiePolicy(http.cookiejar.DefaultCookiePolicy):\n"
"    def set_ok(self, cookie, request):\n"
"        if not http.cookiejar.DefaultCookiePolicy.set_ok(self, cookie, "
"request):\n"
"            return False\n"
"        if i_dont_want_to_store_this_cookie(cookie):\n"
"            return False\n"
"        return True"
msgstr ""
"import http.cookiejar\n"
"class MyCookiePolicy(http.cookiejar.DefaultCookiePolicy):\n"
"    def set_ok(self, cookie, request):\n"
"        if not http.cookiejar.DefaultCookiePolicy.set_ok(self, cookie, "
"request):\n"
"            return False\n"
"        if i_dont_want_to_store_this_cookie(cookie):\n"
"            return False\n"
"        return True"

#: ../../library/http.cookiejar.rst:460
msgid ""
"In addition to the features required to implement the :class:`CookiePolicy` "
"interface, this class allows you to block and allow domains from setting and "
"receiving cookies.  There are also some strictness switches that allow you "
"to tighten up the rather loose Netscape protocol rules a little bit (at the "
"cost of blocking some benign cookies)."
msgstr ""
"В дополнение к функциям, необходимым для реализации интерфейса :class:"
"`CookiePolicy`, этот класс позволяет блокировать и разрешать доменам "
"устанавливать и получать файлы cookie. Есть также некоторые переключатели "
"строгости, которые позволяют вам немного ужесточить довольно мягкие правила "
"протокола Netscape (за счет блокировки некоторых неопасных файлов cookie)."

#: ../../library/http.cookiejar.rst:466
msgid ""
"A domain blocklist and allowlist is provided (both off by default). Only "
"domains not in the blocklist and present in the allowlist (if the allowlist "
"is active) participate in cookie setting and returning.  Use the "
"*blocked_domains* constructor argument, and :meth:`blocked_domains` and :"
"meth:`set_blocked_domains` methods (and the corresponding argument and "
"methods for *allowed_domains*).  If you set an allowlist, you can turn it "
"off again by setting it to :const:`None`."
msgstr ""
"Предоставляется черный список и список разрешенных доменов (оба отключены по "
"умолчанию). В настройке и возврате файлов cookie участвуют только домены, не "
"входящие в черный список, но присутствующие в белом списке (если белый "
"список активен). Используйте аргумент конструктора *blocked_domains* и "
"методы :meth:`blocked_domains` и :meth:`set_blocked_domains` (а также "
"соответствующие аргумент и методы для *allowed_domains*). Если вы установили "
"белый список, вы можете отключить его снова, установив для него значение :"
"const:`None`."

#: ../../library/http.cookiejar.rst:474
msgid ""
"Domains in block or allow lists that do not start with a dot must equal the "
"cookie domain to be matched.  For example, ``\"example.com\"`` matches a "
"blocklist entry of ``\"example.com\"``, but ``\"www.example.com\"`` does "
"not.  Domains that do start with a dot are matched by more specific domains "
"too. For example, both ``\"www.example.com\"`` and ``\"www.coyote.example."
"com\"`` match ``\".example.com\"`` (but ``\"example.com\"`` itself does "
"not).  IP addresses are an exception, and must match exactly.  For example, "
"if blocked_domains contains ``\"192.168.1.2\"`` and ``\".168.1.2\"``, "
"192.168.1.2 is blocked, but 193.168.1.2 is not."
msgstr ""
"Домены в списках блокировки или разрешения, которые не начинаются с точки, "
"должны соответствовать домену cookie, подлежащему сопоставлению. Например, "
"``\"example.com\"`` соответствует записи в черном списке ``\"example.com\", "
"а ``\"www.example.com\"`` — нет. Домены, которые начинаются с точки, также "
"соответствуют более конкретным доменам. Например, и ``\"www.example.com\"``, "
"и ``\"www.coyote.example.com\"`` соответствуют ``\".example.com\"`` (но "
"``\"example.com\"` ` сам по себе этого не делает). IP-адреса являются "
"исключением и должны точно совпадать. Например, если Blocked_domains "
"содержит ``\"192.168.1.2\"`` и ``\".168.1.2\"``, 192.168.1.2 блокируется, а "
"193.168.1.2 — нет."

#: ../../library/http.cookiejar.rst:483
msgid ""
":class:`DefaultCookiePolicy` implements the following additional methods:"
msgstr ""
":class:`DefaultCookiePolicy` реализует следующие дополнительные методы:"

#: ../../library/http.cookiejar.rst:488
msgid "Return the sequence of blocked domains (as a tuple)."
msgstr "Вернуть последовательность заблокированных доменов (в виде кортежа)."

#: ../../library/http.cookiejar.rst:493
msgid "Set the sequence of blocked domains."
msgstr "Установите последовательность заблокированных доменов."

#: ../../library/http.cookiejar.rst:498
msgid ""
"Return ``True`` if *domain* is on the blocklist for setting or receiving "
"cookies."
msgstr ""
"Возвращайте ``True``, если *домен* находится в черном списке для установки "
"или получения файлов cookie."

#: ../../library/http.cookiejar.rst:504
msgid "Return :const:`None`, or the sequence of allowed domains (as a tuple)."
msgstr ""
"Верните :const:`None` или последовательность разрешенных доменов (в виде "
"кортежа)."

#: ../../library/http.cookiejar.rst:509
msgid "Set the sequence of allowed domains, or :const:`None`."
msgstr "Установите последовательность разрешенных доменов или :const:`None`."

#: ../../library/http.cookiejar.rst:514
msgid ""
"Return ``True`` if *domain* is not on the allowlist for setting or receiving "
"cookies."
msgstr ""
"Верните ``True``, если *домен* не находится в списке разрешенных для "
"установки или получения файлов cookie."

#: ../../library/http.cookiejar.rst:517
msgid ""
":class:`DefaultCookiePolicy` instances have the following attributes, which "
"are all initialised from the constructor arguments of the same name, and "
"which may all be assigned to."
msgstr ""
"Экземпляры :class:`DefaultCookiePolicy` имеют следующие атрибуты, которые "
"инициализируются из одноименных аргументов конструктора и которым все могут "
"быть присвоены."

#: ../../library/http.cookiejar.rst:524
msgid ""
"If true, request that the :class:`CookieJar` instance downgrade :rfc:`2109` "
"cookies (ie. cookies received in a :mailheader:`Set-Cookie` header with a "
"version cookie-attribute of 1) to Netscape cookies by setting the version "
"attribute of the :class:`Cookie` instance to 0.  The default value is :const:"
"`None`, in which case RFC 2109 cookies are downgraded if and only if :rfc:"
"`2965` handling is turned off.  Therefore, RFC 2109 cookies are downgraded "
"by default."
msgstr ""
"Если это правда, запросите, чтобы экземпляр :class:`CookieJar` понизил "
"версию файлов cookie :rfc:`2109` (т. е. файлов cookie, полученных в "
"заголовке :mailheader:`Set-Cookie` с атрибутом версии cookie-файла, равным "
"1) до файлов cookie Netscape. установка атрибута версии экземпляра :class:"
"`Cookie` равным 0. Значением по умолчанию является :const:`None`, и в этом "
"случае файлы cookie RFC 2109 понижаются тогда и только тогда, когда "
"обработка :rfc:`2965` отключена. Поэтому файлы cookie RFC 2109 по умолчанию "
"понижаются."

#: ../../library/http.cookiejar.rst:532
msgid "General strictness switches:"
msgstr "Переключатели общей строгости:"

#: ../../library/http.cookiejar.rst:536
msgid ""
"Don't allow sites to set two-component domains with country-code top-level "
"domains like ``.co.uk``, ``.gov.uk``, ``.co.nz``.etc.  This is far from "
"perfect and isn't guaranteed to work!"
msgstr ""
"Не разрешайте сайтам устанавливать двухкомпонентные домены с доменами "
"верхнего уровня с кодом страны, такими как ``.co.uk``, ``.gov.uk``, ``.co."
"nz``.и т. д. Это далеко от совершенства и не гарантируется, что будет "
"работать!"

#: ../../library/http.cookiejar.rst:541
msgid ":rfc:`2965` protocol strictness switches:"
msgstr ":rfc:`2965` переключатели строгости протокола:"

#: ../../library/http.cookiejar.rst:545
msgid ""
"Follow :rfc:`2965` rules on unverifiable transactions (usually, an "
"unverifiable transaction is one resulting from a redirect or a request for "
"an image hosted on another site).  If this is false, cookies are *never* "
"blocked on the basis of verifiability"
msgstr ""
"Следуйте правилам :rfc:`2965` для непроверяемых транзакций (обычно "
"непроверяемая транзакция является результатом перенаправления или запроса "
"изображения, размещенного на другом сайте). Если это неверно, файлы cookie "
"*никогда* не блокируются на основании возможности проверки."

#: ../../library/http.cookiejar.rst:551
msgid "Netscape protocol strictness switches:"
msgstr "Переключатели строгости протокола Netscape:"

#: ../../library/http.cookiejar.rst:555
msgid ""
"Apply :rfc:`2965` rules on unverifiable transactions even to Netscape "
"cookies."
msgstr ""
"Применяйте правила :rfc:`2965` для непроверяемых транзакций даже к файлам "
"cookie Netscape."

#: ../../library/http.cookiejar.rst:560
msgid ""
"Flags indicating how strict to be with domain-matching rules for Netscape "
"cookies.  See below for acceptable values."
msgstr ""
"Флаги, указывающие, насколько строгими должны быть правила сопоставления "
"доменов для файлов cookie Netscape. Ниже приведены приемлемые значения."

#: ../../library/http.cookiejar.rst:566
msgid ""
"Ignore cookies in Set-Cookie: headers that have names starting with ``'$'``."
msgstr ""
"Игнорируйте файлы cookie в Set-Cookie: заголовки, имена которых начинаются с "
"``'$'``."

#: ../../library/http.cookiejar.rst:571
msgid "Don't allow setting cookies whose path doesn't path-match request URI."
msgstr ""
"Запретить установку файлов cookie, путь которых не соответствует URI запроса."

#: ../../library/http.cookiejar.rst:573
msgid ""
":attr:`strict_ns_domain` is a collection of flags.  Its value is constructed "
"by or-ing together (for example, ``DomainStrictNoDots|"
"DomainStrictNonDomain`` means both flags are set)."
msgstr ""
":attr:`strict_ns_domain` — это набор флагов. Его значение создается путем "
"объединения или (например, ``DomainStrictNoDots|DomainStrictNonDomain`` "
"означает, что установлены оба флага)."

#: ../../library/http.cookiejar.rst:580
msgid ""
"When setting cookies, the 'host prefix' must not contain a dot (eg. ``www."
"foo.bar.com`` can't set a cookie for ``.bar.com``, because ``www.foo`` "
"contains a dot)."
msgstr ""
"При настройке файлов cookie «префикс хоста» не должен содержать точку "
"(например, www.foo.bar.com не может установить файл cookie для .bar.com, "
"поскольку www.foo `` содержит точку)."

#: ../../library/http.cookiejar.rst:587
msgid ""
"Cookies that did not explicitly specify a ``domain`` cookie-attribute can "
"only be returned to a domain equal to the domain that set the cookie (eg. "
"``spam.example.com`` won't be returned cookies from ``example.com`` that had "
"no ``domain`` cookie-attribute)."
msgstr ""
"Файлы cookie, в которых явно не указан атрибут cookie «domain», могут быть "
"возвращены только в домен, равный домену, который установил файл cookie "
"(например, «spam.example.com» не будет возвращать файлы cookie из ``spam."
"example.com``. `example.com``, у которого не было атрибута cookie "
"``domain``)."

#: ../../library/http.cookiejar.rst:595
msgid "When setting cookies, require a full :rfc:`2965` domain-match."
msgstr ""
"При настройке файлов cookie требуется полное соответствие домена :rfc:`2965`."

#: ../../library/http.cookiejar.rst:597
msgid ""
"The following attributes are provided for convenience, and are the most "
"useful combinations of the above flags:"
msgstr ""
"Следующие атрибуты предоставлены для удобства и представляют собой наиболее "
"полезные комбинации вышеуказанных флагов:"

#: ../../library/http.cookiejar.rst:603
msgid ""
"Equivalent to 0 (ie. all of the above Netscape domain strictness flags "
"switched off)."
msgstr ""
"Эквивалентно 0 (т.е. все указанные выше флаги строгости домена Netscape "
"отключены)."

#: ../../library/http.cookiejar.rst:609
msgid "Equivalent to ``DomainStrictNoDots|DomainStrictNonDomain``."
msgstr "Эквивалент ``DomainStrictNoDots|DomainStrictNonDomain``."

#: ../../library/http.cookiejar.rst:613
msgid "Cookie Objects"
msgstr "Объекты cookie-файлов"

#: ../../library/http.cookiejar.rst:615
msgid ""
":class:`Cookie` instances have Python attributes roughly corresponding to "
"the standard cookie-attributes specified in the various cookie standards.  "
"The correspondence is not one-to-one, because there are complicated rules "
"for assigning default values, because the ``max-age`` and ``expires`` cookie-"
"attributes contain equivalent information, and because :rfc:`2109` cookies "
"may be 'downgraded' by :mod:`http.cookiejar` from version 1 to version 0 "
"(Netscape) cookies."
msgstr ""
"Экземпляры :class:`Cookie` имеют атрибуты Python, примерно соответствующие "
"стандартным атрибутам cookie, указанным в различных стандартах cookie. "
"Соответствие не является однозначно однозначным, поскольку существуют "
"сложные правила назначения значений по умолчанию, поскольку атрибуты cookie "
"``max-age`` и ``expires`` содержат эквивалентную информацию, а также потому, "
"что :rfc:`2109` файлы cookie могут быть понижены с помощью :mod:`http."
"cookiejar` с версии 1 до версии 0 (Netscape)."

#: ../../library/http.cookiejar.rst:623
msgid ""
"Assignment to these attributes should not be necessary other than in rare "
"circumstances in a :class:`CookiePolicy` method.  The class does not enforce "
"internal consistency, so you should know what you're doing if you do that."
msgstr ""
"Присвоение этим атрибутам не требуется, за исключением редких случаев, в "
"методе :class:`CookiePolicy`. Класс не обеспечивает внутреннюю "
"согласованность, поэтому вы должны знать, что делаете, если делаете это."

#: ../../library/http.cookiejar.rst:630
msgid ""
"Integer or :const:`None`.  Netscape cookies have :attr:`version` 0. :rfc:"
"`2965` and :rfc:`2109` cookies have a ``version`` cookie-attribute of 1.  "
"However, note that :mod:`http.cookiejar` may 'downgrade' RFC 2109 cookies to "
"Netscape cookies, in which case :attr:`version` is 0."
msgstr ""
"Целое число или :const:`Нет`. Файлы cookie Netscape имеют :attr:`version` 0. "
"Файлы cookie :rfc:`2965` и :rfc:`2109` имеют атрибут cookie ``version``, "
"равный 1. Однако обратите внимание, что :mod:`http.cookiejar` может "
"«понижать» файлы cookie RFC 2109 до файлов cookie Netscape, и в этом случае :"
"attr:`version` равен 0."

#: ../../library/http.cookiejar.rst:638
msgid "Cookie name (a string)."
msgstr "Имя cookie (строка)."

#: ../../library/http.cookiejar.rst:643
msgid "Cookie value (a string), or :const:`None`."
msgstr "Значение cookie (строка) или :const:`None`."

#: ../../library/http.cookiejar.rst:648
msgid ""
"String representing a port or a set of ports (eg. '80', or '80,8080'), or :"
"const:`None`."
msgstr ""
"Строка, представляющая порт или набор портов (например, «80» или «80,8080») "
"или :const:`None`."

#: ../../library/http.cookiejar.rst:654
msgid "Cookie domain (a string)."
msgstr "Cookie domain (a string)."

#: ../../library/http.cookiejar.rst:659
msgid "Cookie path (a string, eg. ``'/acme/rocket_launchers'``)."
msgstr "Путь к файлу cookie (строка, например ``'/acme/rocket_launchers'``)."

#: ../../library/http.cookiejar.rst:664
msgid "``True`` if cookie should only be returned over a secure connection."
msgstr ""
"``True``, если файлы cookie должны возвращаться только через безопасное "
"соединение."

#: ../../library/http.cookiejar.rst:669
msgid ""
"Integer expiry date in seconds since epoch, or :const:`None`.  See also the :"
"meth:`is_expired` method."
msgstr ""
"Целочисленная дата истечения срока действия в секундах с начала эпохи или :"
"const:`None`. См. также метод :meth:`is_expired`."

#: ../../library/http.cookiejar.rst:675
msgid "``True`` if this is a session cookie."
msgstr "``True``, если это файл cookie сеанса."

#: ../../library/http.cookiejar.rst:680
msgid ""
"String comment from the server explaining the function of this cookie, or :"
"const:`None`."
msgstr ""
"Строковый комментарий с сервера, объясняющий функцию этого файла cookie, "
"или :const:`None`."

#: ../../library/http.cookiejar.rst:686
msgid ""
"URL linking to a comment from the server explaining the function of this "
"cookie, or :const:`None`."
msgstr ""
"URL-адрес, ссылающийся на комментарий с сервера, объясняющий функцию этого "
"файла cookie, или :const:`None`."

#: ../../library/http.cookiejar.rst:692
msgid ""
"``True`` if this cookie was received as an :rfc:`2109` cookie (ie. the "
"cookie arrived in a :mailheader:`Set-Cookie` header, and the value of the "
"Version cookie-attribute in that header was 1).  This attribute is provided "
"because :mod:`http.cookiejar` may 'downgrade' RFC 2109 cookies to Netscape "
"cookies, in which case :attr:`version` is 0."
msgstr ""
"``True``, если этот файл cookie был получен как файл cookie :rfc:`2109` "
"(т. е. файл cookie прибыл в заголовок :mailheader:`Set-Cookie`, и значение "
"атрибута cookie версии в этом заголовке было 1). Этот атрибут предусмотрен "
"потому, что :mod:`http.cookiejar` может «понижать» файлы cookie RFC 2109 до "
"файлов cookie Netscape, и в этом случае :attr:`version` равен 0."

#: ../../library/http.cookiejar.rst:701
msgid ""
"``True`` if a port or set of ports was explicitly specified by the server "
"(in the :mailheader:`Set-Cookie` / :mailheader:`Set-Cookie2` header)."
msgstr ""
"``True``, если порт или набор портов были явно указаны сервером (в "
"заголовке :mailheader:`Set-Cookie` / :mailheader:`Set-Cookie2`)."

#: ../../library/http.cookiejar.rst:707
msgid "``True`` if a domain was explicitly specified by the server."
msgstr "``True``, если домен был явно указан сервером."

#: ../../library/http.cookiejar.rst:712
msgid ""
"``True`` if the domain explicitly specified by the server began with a dot "
"(``'.'``)."
msgstr ""
"``True``, если домен, явно указанный сервером, начинается с точки (``'.'``)."

#: ../../library/http.cookiejar.rst:715
msgid ""
"Cookies may have additional non-standard cookie-attributes.  These may be "
"accessed using the following methods:"
msgstr ""
"Файлы cookie могут иметь дополнительные нестандартные атрибуты cookie. "
"Доступ к ним можно получить с помощью следующих методов:"

#: ../../library/http.cookiejar.rst:721
msgid "Return ``True`` if cookie has the named cookie-attribute."
msgstr "Верните True, если файл cookie имеет указанный атрибут cookie."

#: ../../library/http.cookiejar.rst:726
msgid ""
"If cookie has the named cookie-attribute, return its value. Otherwise, "
"return *default*."
msgstr ""
"Если cookie имеет именованный cookie-атрибут, вернуть его значение. В "
"противном случае вернуть *default*."

#: ../../library/http.cookiejar.rst:732
msgid "Set the value of the named cookie-attribute."
msgstr "Установите значение именованного атрибута cookie."

#: ../../library/http.cookiejar.rst:734
msgid "The :class:`Cookie` class also defines the following method:"
msgstr "Класс :class:`Cookie` также определяет следующий метод:"

#: ../../library/http.cookiejar.rst:739
msgid ""
"``True`` if cookie has passed the time at which the server requested it "
"should expire.  If *now* is given (in seconds since the epoch), return "
"whether the cookie has expired at the specified time."
msgstr ""
"``True``, если срок действия файла cookie истек, когда его запросил сервер. "
"Если задано *now* (в секундах с начала эпохи), возвращает информацию о том, "
"истек ли срок действия файла cookie в указанное время."

#: ../../library/http.cookiejar.rst:745
msgid "Examples"
msgstr "Примеры"

#: ../../library/http.cookiejar.rst:747
msgid ""
"The first example shows the most common usage of :mod:`http.cookiejar`::"
msgstr ""
"В первом примере показано наиболее распространенное использование :mod:`http."
"cookiejar`::"

#: ../../library/http.cookiejar.rst:749
msgid ""
"import http.cookiejar, urllib.request\n"
"cj = http.cookiejar.CookieJar()\n"
"opener = urllib.request.build_opener(urllib.request."
"HTTPCookieProcessor(cj))\n"
"r = opener.open(\"http://example.com/\")"
msgstr ""
"import http.cookiejar, urllib.request\n"
"cj = http.cookiejar.CookieJar()\n"
"opener = urllib.request.build_opener(urllib.request."
"HTTPCookieProcessor(cj))\n"
"r = opener.open(\"http://example.com/\")"

#: ../../library/http.cookiejar.rst:754
msgid ""
"This example illustrates how to open a URL using your Netscape, Mozilla, or "
"Lynx cookies (assumes Unix/Netscape convention for location of the cookies "
"file)::"
msgstr ""
"В этом примере показано, как открыть URL-адрес с помощью файлов cookie "
"Netscape, Mozilla или Lynx (предполагается, что для расположения файла "
"cookie используются соглашения Unix/Netscape):"

#: ../../library/http.cookiejar.rst:757
msgid ""
"import os, http.cookiejar, urllib.request\n"
"cj = http.cookiejar.MozillaCookieJar()\n"
"cj.load(os.path.join(os.path.expanduser(\"~\"), \".netscape\", \"cookies."
"txt\"))\n"
"opener = urllib.request.build_opener(urllib.request."
"HTTPCookieProcessor(cj))\n"
"r = opener.open(\"http://example.com/\")"
msgstr ""
"import os, http.cookiejar, urllib.request\n"
"cj = http.cookiejar.MozillaCookieJar()\n"
"cj.load(os.path.join(os.path.expanduser(\"~\"), \".netscape\", \"cookies."
"txt\"))\n"
"opener = urllib.request.build_opener(urllib.request."
"HTTPCookieProcessor(cj))\n"
"r = opener.open(\"http://example.com/\")"

#: ../../library/http.cookiejar.rst:763
msgid ""
"The next example illustrates the use of :class:`DefaultCookiePolicy`. Turn "
"on :rfc:`2965` cookies, be more strict about domains when setting and "
"returning Netscape cookies, and block some domains from setting cookies or "
"having them returned::"
msgstr ""
"Следующий пример иллюстрирует использование :class:`DefaultCookiePolicy`. "
"Включите файлы cookie :rfc:`2965`, будьте более строгими в отношении доменов "
"при установке и возврате файлов cookie Netscape и заблокируйте для некоторых "
"доменов установку файлов cookie или их возврат:"

#: ../../library/http.cookiejar.rst:768
msgid ""
"import urllib.request\n"
"from http.cookiejar import CookieJar, DefaultCookiePolicy\n"
"policy = DefaultCookiePolicy(\n"
"    rfc2965=True, strict_ns_domain=Policy.DomainStrict,\n"
"    blocked_domains=[\"ads.net\", \".ads.net\"])\n"
"cj = CookieJar(policy)\n"
"opener = urllib.request.build_opener(urllib.request."
"HTTPCookieProcessor(cj))\n"
"r = opener.open(\"http://example.com/\")"
msgstr ""
"import urllib.request\n"
"from http.cookiejar import CookieJar, DefaultCookiePolicy\n"
"policy = DefaultCookiePolicy(\n"
"    rfc2965=True, strict_ns_domain=Policy.DomainStrict,\n"
"    blocked_domains=[\"ads.net\", \".ads.net\"])\n"
"cj = CookieJar(policy)\n"
"opener = urllib.request.build_opener(urllib.request."
"HTTPCookieProcessor(cj))\n"
"r = opener.open(\"http://example.com/\")"
