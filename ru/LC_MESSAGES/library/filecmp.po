# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# Roustam Khamidoulline, 2024
# Rafael Fontenelle <rffontenelle@gmail.com>, 2025
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.12\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-03-07 14:53+0000\n"
"PO-Revision-Date: 2024-05-11 00:33+0000\n"
"Last-Translator: Rafael Fontenelle <rffontenelle@gmail.com>, 2025\n"
"Language-Team: Russian (https://app.transifex.com/python-doc/teams/5390/"
"ru/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ru\n"
"Plural-Forms: nplurals=4; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && "
"n%10<=4 && (n%100<12 || n%100>14) ? 1 : n%10==0 || (n%10>=5 && n%10<=9) || "
"(n%100>=11 && n%100<=14)? 2 : 3);\n"

#: ../../library/filecmp.rst:2
msgid ":mod:`!filecmp` --- File and Directory Comparisons"
msgstr ":mod:`!filecmp` --- Сравнение файлов и каталогов"

#: ../../library/filecmp.rst:9
msgid "**Source code:** :source:`Lib/filecmp.py`"
msgstr "**Исходный код:** :source:`Lib/filecmp.py`"

#: ../../library/filecmp.rst:13
msgid ""
"The :mod:`filecmp` module defines functions to compare files and "
"directories, with various optional time/correctness trade-offs. For "
"comparing files, see also the :mod:`difflib` module."
msgstr ""
"Модуль :mod:`filecmp` определяет функции для сравнения файлов и каталогов с "
"различными дополнительными компромиссами между временем и правильностью. Для "
"сравнения файлов см. также модуль :mod:`difflib`."

#: ../../library/filecmp.rst:17
msgid "The :mod:`filecmp` module defines the following functions:"
msgstr "Модуль :mod:`filecmp` определяет следующие функции:"

#: ../../library/filecmp.rst:22
msgid ""
"Compare the files named *f1* and *f2*, returning ``True`` if they seem "
"equal, ``False`` otherwise."
msgstr ""
"Сравните файлы с именами *f1* и *f2*, возвращая ``True``, если они кажутся "
"равными, и ``False`` в противном случае."

#: ../../library/filecmp.rst:25
msgid ""
"If *shallow* is true and the :func:`os.stat` signatures (file type, size, "
"and modification time) of both files are identical, the files are taken to "
"be equal."
msgstr ""
"Если *shallow* имеет значение true и подписи :func:`os.stat` (тип файла, "
"размер и время изменения) обоих файлов идентичны, файлы считаются равными."

#: ../../library/filecmp.rst:29
msgid ""
"Otherwise, the files are treated as different if their sizes or contents "
"differ."
msgstr ""
"В противном случае файлы считаются разными, если их размеры или содержимое "
"различаются."

#: ../../library/filecmp.rst:31
msgid ""
"Note that no external programs are called from this function, giving it "
"portability and efficiency."
msgstr ""
"Обратите внимание, что из этой функции не вызываются никакие внешние "
"программы, что обеспечивает ее переносимость и эффективность."

#: ../../library/filecmp.rst:34
msgid ""
"This function uses a cache for past comparisons and the results, with cache "
"entries invalidated if the :func:`os.stat` information for the file "
"changes.  The entire cache may be cleared using :func:`clear_cache`."
msgstr ""
"Эта функция использует кэш для прошлых сравнений и результатов, причем "
"записи кэша становятся недействительными, если информация :func:`os.stat` "
"для файла изменяется. Весь кэш можно очистить с помощью :func:`clear_cache`."

#: ../../library/filecmp.rst:41
msgid ""
"Compare the files in the two directories *dir1* and *dir2* whose names are "
"given by *common*."
msgstr ""
"Сравните файлы в двух каталогах *dir1* и *dir2*, имена которых заданы "
"*common*."

#: ../../library/filecmp.rst:44
msgid ""
"Returns three lists of file names: *match*, *mismatch*, *errors*.  *match* "
"contains the list of files that match, *mismatch* contains the names of "
"those that don't, and *errors* lists the names of files which could not be "
"compared.  Files are listed in *errors* if they don't exist in one of the "
"directories, the user lacks permission to read them or if the comparison "
"could not be done for some other reason."
msgstr ""
"Возвращает три списка имен файлов: *совпадение*, *несоответствие*, *ошибки*. "
"*match* содержит список совпадающих файлов, *mismatch* содержит имена тех, "
"которые не совпадают, а *errors* перечисляет имена файлов, которые не "
"удалось сравнить. Файлы заносятся в *ошибки*, если они не существуют в одном "
"из каталогов, у пользователя нет разрешения на их чтение или если сравнение "
"невозможно выполнить по какой-либо другой причине."

#: ../../library/filecmp.rst:51
msgid ""
"The *shallow* parameter has the same meaning and default value as for :func:"
"`filecmp.cmp`."
msgstr ""
"Параметр *shallow* имеет то же значение и значение по умолчанию, что и :func:"
"`filecmp.cmp`."

#: ../../library/filecmp.rst:54
msgid ""
"For example, ``cmpfiles('a', 'b', ['c', 'd/e'])`` will compare ``a/c`` with "
"``b/c`` and ``a/d/e`` with ``b/d/e``.  ``'c'`` and ``'d/e'`` will each be in "
"one of the three returned lists."
msgstr ""
"Например, ``cmpfiles('a', 'b', ['c', 'd/e'])`` будет сравнивать ``a/c`` с "
"``b/c`` и ``a /d/e`` с ``b/d/e``. ``'c'`` и ``'d/e'`` будут находиться в "
"одном из трех возвращаемых списков."

#: ../../library/filecmp.rst:61
msgid ""
"Clear the filecmp cache. This may be useful if a file is compared so quickly "
"after it is modified that it is within the mtime resolution of the "
"underlying filesystem."
msgstr ""
"Очистите кеш filecmp. Это может быть полезно, если файл после изменения "
"сравнивается так быстро, что его разрешение находится в пределах разрешения "
"mtime базовой файловой системы."

#: ../../library/filecmp.rst:71
msgid "The :class:`dircmp` class"
msgstr "Класс :class:`dircmp` "

#: ../../library/filecmp.rst:75
msgid ""
"Construct a new directory comparison object, to compare the directories *a* "
"and *b*.  *ignore* is a list of names to ignore, and defaults to :const:"
"`filecmp.DEFAULT_IGNORES`.  *hide* is a list of names to hide, and defaults "
"to ``[os.curdir, os.pardir]``."
msgstr ""
"Создайте новый объект сравнения каталогов для сравнения каталогов *a* и *b*. "
"*ignore* — это список имен, которые следует игнорировать. По умолчанию он "
"имеет значение :const:`filecmp.DEFAULT_IGNORES`. *hide* — это список имен, "
"которые нужно скрыть. По умолчанию используется ``[os.curdir, os.pardir]``."

#: ../../library/filecmp.rst:80
msgid ""
"The :class:`dircmp` class compares files by doing *shallow* comparisons as "
"described for :func:`filecmp.cmp`."
msgstr ""
"Класс :class:`dircmp` сравнивает файлы, выполняя *поверхностные* сравнения, "
"как описано для :func:`filecmp.cmp`."

#: ../../library/filecmp.rst:83
msgid "The :class:`dircmp` class provides the following methods:"
msgstr "Класс :class:`dircmp` предоставляет следующие методы:"

#: ../../library/filecmp.rst:87
msgid "Print (to :data:`sys.stdout`) a comparison between *a* and *b*."
msgstr "Выведите (в :data:`sys.stdout`) сравнение между *a* и *b*."

#: ../../library/filecmp.rst:91
msgid ""
"Print a comparison between *a* and *b* and common immediate subdirectories."
msgstr ""
"Выведите сравнение между *a* и *b* и общими непосредственными подкаталогами."

#: ../../library/filecmp.rst:96
msgid ""
"Print a comparison between *a* and *b* and common subdirectories "
"(recursively)."
msgstr ""
"Выведите сравнение между *a* и *b* и общими подкаталогами (рекурсивно)."

#: ../../library/filecmp.rst:99
msgid ""
"The :class:`dircmp` class offers a number of interesting attributes that may "
"be used to get various bits of information about the directory trees being "
"compared."
msgstr ""
"Класс :class:`dircmp` предлагает ряд интересных атрибутов, которые можно "
"использовать для получения различной информации о сравниваемых деревьях "
"каталогов."

#: ../../library/filecmp.rst:103
msgid ""
"Note that via :meth:`~object.__getattr__` hooks, all attributes are computed "
"lazily, so there is no speed penalty if only those attributes which are "
"lightweight to compute are used."
msgstr ""
"Обратите внимание, что с помощью перехватчиков :meth:`~object.__getattr__` "
"все атрибуты вычисляются лениво, поэтому потери скорости не будет, если "
"используются только те атрибуты, которые легко вычислить."

#: ../../library/filecmp.rst:110
msgid "The directory *a*."
msgstr "Каталог *a*."

#: ../../library/filecmp.rst:115
msgid "The directory *b*."
msgstr "Каталог *b*."

#: ../../library/filecmp.rst:120
msgid "Files and subdirectories in *a*, filtered by *hide* and *ignore*."
msgstr ""
"Файлы и подкаталоги в *a*, отфильтрованные по параметрам *скрыть* и "
"*игнорировать*."

#: ../../library/filecmp.rst:125
msgid "Files and subdirectories in *b*, filtered by *hide* and *ignore*."
msgstr ""
"Файлы и подкаталоги в *b*, отфильтрованные по параметрам *скрыть* и "
"*игнорировать*."

#: ../../library/filecmp.rst:130
msgid "Files and subdirectories in both *a* and *b*."
msgstr "Файлы и подкаталоги в *a* и *b*."

#: ../../library/filecmp.rst:135
msgid "Files and subdirectories only in *a*."
msgstr "Файлы и подкаталоги только в *a*."

#: ../../library/filecmp.rst:140
msgid "Files and subdirectories only in *b*."
msgstr "Файлы и подкаталоги только в *b*."

#: ../../library/filecmp.rst:145
msgid "Subdirectories in both *a* and *b*."
msgstr "Подкаталоги в *a* и *b*."

#: ../../library/filecmp.rst:150
msgid "Files in both *a* and *b*."
msgstr "Файлы в форматах *a* и *b*."

#: ../../library/filecmp.rst:155
msgid ""
"Names in both *a* and *b*, such that the type differs between the "
"directories, or names for which :func:`os.stat` reports an error."
msgstr ""
"Имена в *a* и *b*, так что тип различается в разных каталогах, или имена, "
"для которых :func:`os.stat` сообщает об ошибке."

#: ../../library/filecmp.rst:161
msgid ""
"Files which are identical in both *a* and *b*, using the class's file "
"comparison operator."
msgstr ""
"Файлы, идентичные по *a* и *b*, с использованием оператора сравнения файлов "
"класса."

#: ../../library/filecmp.rst:167
msgid ""
"Files which are in both *a* and *b*, whose contents differ according to the "
"class's file comparison operator."
msgstr ""
"Файлы, которые имеют форматы *a* и *b*, содержимое которых различается в "
"зависимости от оператора сравнения файлов класса."

#: ../../library/filecmp.rst:173
msgid "Files which are in both *a* and *b*, but could not be compared."
msgstr ""
"Файлы, которые находятся как в *a*, так и в *b*, но их невозможно сравнить."

#: ../../library/filecmp.rst:178
msgid ""
"A dictionary mapping names in :attr:`common_dirs` to :class:`dircmp` "
"instances (or MyDirCmp instances if this instance is of type MyDirCmp, a "
"subclass of :class:`dircmp`)."
msgstr ""
"Словарь сопоставляет имена в :attr:`common_dirs` с экземплярами :class:"
"`dircmp` (или экземплярами MyDirCmp, если этот экземпляр имеет тип MyDirCmp, "
"подкласс :class:`dircmp`)."

#: ../../library/filecmp.rst:182
msgid ""
"Previously entries were always :class:`dircmp` instances. Now entries are "
"the same type as *self*, if *self* is a subclass of :class:`dircmp`."
msgstr ""
"Раньше записи всегда были экземплярами :class:`dircmp`. Теперь записи имеют "
"тот же тип, что и *self*, если *self* является подклассом :class:`dircmp`."

#: ../../library/filecmp.rst:191
msgid "List of directories ignored by :class:`dircmp` by default."
msgstr "Список каталогов, игнорируемых :class:`dircmp` по умолчанию."

#: ../../library/filecmp.rst:194
msgid ""
"Here is a simplified example of using the ``subdirs`` attribute to search "
"recursively through two directories to show common different files::"
msgstr ""
"Вот упрощенный пример использования атрибута subdirs для рекурсивного поиска "
"в двух каталогах для отображения общих файлов:"

#: ../../library/filecmp.rst:197
msgid ""
">>> from filecmp import dircmp\n"
">>> def print_diff_files(dcmp):\n"
"...     for name in dcmp.diff_files:\n"
"...         print(\"diff_file %s found in %s and %s\" % (name, dcmp.left,\n"
"...               dcmp.right))\n"
"...     for sub_dcmp in dcmp.subdirs.values():\n"
"...         print_diff_files(sub_dcmp)\n"
"...\n"
">>> dcmp = dircmp('dir1', 'dir2')\n"
">>> print_diff_files(dcmp)"
msgstr ""
">>> from filecmp import dircmp\n"
">>> def print_diff_files(dcmp):\n"
"...     for name in dcmp.diff_files:\n"
"...         print(\"diff_file %s found in %s and %s\" % (name, dcmp.left,\n"
"...               dcmp.right))\n"
"...     for sub_dcmp in dcmp.subdirs.values():\n"
"...         print_diff_files(sub_dcmp)\n"
"...\n"
">>> dcmp = dircmp('dir1', 'dir2')\n"
">>> print_diff_files(dcmp)"
