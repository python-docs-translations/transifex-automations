# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# Rafael Fontenelle <rffontenelle@gmail.com>, 2024
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.10\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-01-10 16:06+0000\n"
"PO-Revision-Date: 2022-11-05 17:23+0000\n"
"Last-Translator: Rafael Fontenelle <rffontenelle@gmail.com>, 2024\n"
"Language-Team: Russian (https://app.transifex.com/python-doc/teams/5390/"
"ru/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ru\n"
"Plural-Forms: nplurals=4; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && "
"n%10<=4 && (n%100<12 || n%100>14) ? 1 : n%10==0 || (n%10>=5 && n%10<=9) || "
"(n%100>=11 && n%100<=14)? 2 : 3);\n"

#: ../../library/xml.dom.minidom.rst:2
msgid ":mod:`xml.dom.minidom` --- Minimal DOM implementation"
msgstr ""

#: ../../library/xml.dom.minidom.rst:11
msgid "**Source code:** :source:`Lib/xml/dom/minidom.py`"
msgstr "**Исходный код:** :source:`Lib/xml/dom/minidom.py`"

#: ../../library/xml.dom.minidom.rst:15
msgid ""
":mod:`xml.dom.minidom` is a minimal implementation of the Document Object "
"Model interface, with an API similar to that in other languages.  It is "
"intended to be simpler than the full DOM and also significantly smaller.  "
"Users who are not already proficient with the DOM should consider using the :"
"mod:`xml.etree.ElementTree` module for their XML processing instead."
msgstr ""
":mod:`xml.dom.minidom` — это минимальная реализация интерфейса объектной "
"модели документа с API, аналогичным API в других языках. Он должен быть "
"проще, чем полный DOM, но при этом значительно меньше. Пользователям, "
"которые еще не владеют DOM, следует вместо этого рассмотреть возможность "
"использования модуля :mod:`xml.etree.ElementTree` для обработки XML."

#: ../../library/xml.dom.minidom.rst:24
msgid ""
"The :mod:`xml.dom.minidom` module is not secure against maliciously "
"constructed data.  If you need to parse untrusted or unauthenticated data "
"see :ref:`xml-vulnerabilities`."
msgstr ""
"Модуль :mod:`xml.dom.minidom` не защищен от вредоносно созданных данных. "
"Если вам нужно проанализировать ненадежные или неаутентифицированные данные, "
"см. :ref:`xml-vulnerabilities`."

#: ../../library/xml.dom.minidom.rst:29
msgid ""
"DOM applications typically start by parsing some XML into a DOM.  With :mod:"
"`xml.dom.minidom`, this is done through the parse functions::"
msgstr ""
"Приложения DOM обычно начинаются с анализа некоторого XML в DOM. В :mod:`xml."
"dom.minidom` это делается с помощью функций синтаксического анализа::"

#: ../../library/xml.dom.minidom.rst:41
msgid ""
"The :func:`parse` function can take either a filename or an open file object."
msgstr ""
"Функция :func:`parse` может принимать либо имя файла, либо открытый файловый "
"объект."

#: ../../library/xml.dom.minidom.rst:46
msgid ""
"Return a :class:`Document` from the given input. *filename_or_file* may be "
"either a file name, or a file-like object. *parser*, if given, must be a "
"SAX2 parser object. This function will change the document handler of the "
"parser and activate namespace support; other parser configuration (like "
"setting an entity resolver) must have been done in advance."
msgstr ""
"Вернуть :class:`Document` из заданных входных данных. *имя_файла_или_файл* "
"может быть либо именем файла, либо объектом, подобным файлу. *parser*, если "
"он указан, должен быть объектом анализатора SAX2. Эта функция изменит "
"обработчик документа парсера и активирует поддержку пространства имен; "
"другая конфигурация синтаксического анализатора (например, установка "
"преобразователя сущностей) должна быть выполнена заранее."

#: ../../library/xml.dom.minidom.rst:52
msgid ""
"If you have XML in a string, you can use the :func:`parseString` function "
"instead:"
msgstr ""
"Если у вас есть XML в строке, вы можете вместо этого использовать функцию :"
"func:`parseString`:"

#: ../../library/xml.dom.minidom.rst:58
msgid ""
"Return a :class:`Document` that represents the *string*. This method creates "
"an :class:`io.StringIO` object for the string and passes that on to :func:"
"`parse`."
msgstr ""
"Возвращает :class:`Document`, который представляет *строку*. Этот метод "
"создает объект :class:`io.StringIO` для строки и передает его :func:`parse`."

#: ../../library/xml.dom.minidom.rst:61
msgid ""
"Both functions return a :class:`Document` object representing the content of "
"the document."
msgstr ""
"Обе функции возвращают объект :class:`Document`, представляющий содержимое "
"документа."

#: ../../library/xml.dom.minidom.rst:64
msgid ""
"What the :func:`parse` and :func:`parseString` functions do is connect an "
"XML parser with a \"DOM builder\" that can accept parse events from any SAX "
"parser and convert them into a DOM tree.  The name of the functions are "
"perhaps misleading, but are easy to grasp when learning the interfaces.  The "
"parsing of the document will be completed before these functions return; "
"it's simply that these functions do not provide a parser implementation "
"themselves."
msgstr ""
"Функции :func:`parse` и :func:`parseString` соединяют анализатор XML с "
"«построителем DOM», который может принимать события анализа от любого "
"анализатора SAX и преобразовывать их в дерево DOM. Названия функций, "
"возможно, вводят в заблуждение, но их легко понять при изучении интерфейсов. "
"Анализ документа будет завершен до того, как эти функции вернутся; просто "
"эти функции сами по себе не обеспечивают реализацию синтаксического "
"анализатора."

#: ../../library/xml.dom.minidom.rst:71
msgid ""
"You can also create a :class:`Document` by calling a method on a \"DOM "
"Implementation\" object.  You can get this object either by calling the :"
"func:`getDOMImplementation` function in the :mod:`xml.dom` package or the :"
"mod:`xml.dom.minidom` module.  Once you have a :class:`Document`, you can "
"add child nodes to it to populate the DOM::"
msgstr ""
"Вы также можете создать :class:`Document`, вызвав метод объекта «Реализация "
"DOM». Вы можете получить этот объект, вызвав функцию :func:"
"`getDOMImplementation` в пакете :mod:`xml.dom` или модуль :mod:`xml.dom."
"minidom`. Если у вас есть :class:`Document`, вы можете добавить к нему "
"дочерние узлы для заполнения DOM::"

#: ../../library/xml.dom.minidom.rst:86
msgid ""
"Once you have a DOM document object, you can access the parts of your XML "
"document through its properties and methods.  These properties are defined "
"in the DOM specification.  The main property of the document object is the :"
"attr:`documentElement` property.  It gives you the main element in the XML "
"document: the one that holds all others.  Here is an example program::"
msgstr ""
"Если у вас есть объект документа DOM, вы можете получить доступ к частям "
"вашего XML-документа через его свойства и методы. Эти свойства определены в "
"спецификации DOM. Основным свойством объекта документа является свойство :"
"attr:`documentElement`. Он дает вам основной элемент XML-документа: тот, "
"который содержит все остальные. Вот пример программы::"

#: ../../library/xml.dom.minidom.rst:95
msgid ""
"When you are finished with a DOM tree, you may optionally call the :meth:"
"`unlink` method to encourage early cleanup of the now-unneeded objects.  :"
"meth:`unlink` is an :mod:`xml.dom.minidom`\\ -specific extension to the DOM "
"API that renders the node and its descendants essentially useless.  "
"Otherwise, Python's garbage collector will eventually take care of the "
"objects in the tree."
msgstr ""
"Когда вы закончите работу с деревом DOM, вы можете при желании вызвать "
"метод :meth:`unlink`, чтобы стимулировать раннюю очистку теперь ненужных "
"объектов. :meth:`unlink` — это :mod:`xml.dom.minidom`\\ расширение DOM API, "
"которое делает узел и его потомков практически бесполезными. В противном "
"случае сборщик мусора Python в конечном итоге позаботится об объектах в "
"дереве."

#: ../../library/xml.dom.minidom.rst:104
msgid ""
"`Document Object Model (DOM) Level 1 Specification <https://www.w3.org/TR/"
"REC-DOM-Level-1/>`_"
msgstr ""
"`Спецификация объектной модели документа (DOM) уровня 1 <https://www.w3.org/"
"TR/REC-DOM-Level-1/>`_"

#: ../../library/xml.dom.minidom.rst:105
msgid "The W3C recommendation for the DOM supported by :mod:`xml.dom.minidom`."
msgstr "Рекомендация W3C для DOM, поддерживаемая :mod:`xml.dom.minidom`."

#: ../../library/xml.dom.minidom.rst:111
msgid "DOM Objects"
msgstr "Объекты DOM"

#: ../../library/xml.dom.minidom.rst:113
msgid ""
"The definition of the DOM API for Python is given as part of the :mod:`xml."
"dom` module documentation.  This section lists the differences between the "
"API and :mod:`xml.dom.minidom`."
msgstr ""
"Определение DOM API для Python приведено в документации модуля :mod:`xml."
"dom`. В этом разделе перечислены различия между API и :mod:`xml.dom.minidom`."

#: ../../library/xml.dom.minidom.rst:120
msgid ""
"Break internal references within the DOM so that it will be garbage "
"collected on versions of Python without cyclic GC.  Even when cyclic GC is "
"available, using this can make large amounts of memory available sooner, so "
"calling this on DOM objects as soon as they are no longer needed is good "
"practice.  This only needs to be called on the :class:`Document` object, but "
"may be called on child nodes to discard children of that node."
msgstr ""
"Разрушьте внутренние ссылки внутри DOM, чтобы в версиях Python без "
"циклического сбора мусора выполнялась сборка мусора. Даже когда циклический "
"сборщик мусора доступен, его использование может сделать большие объемы "
"памяти доступными раньше, поэтому хорошей практикой является вызов этого "
"метода для объектов DOM, как только они больше не нужны. Это необходимо "
"вызывать только для объекта :class:`Document`, но можно вызывать и для "
"дочерних узлов, чтобы отбросить дочерние элементы этого узла."

#: ../../library/xml.dom.minidom.rst:127
msgid ""
"You can avoid calling this method explicitly by using the :keyword:`with` "
"statement. The following code will automatically unlink *dom* when the :"
"keyword:`!with` block is exited::"
msgstr ""
"Вы можете избежать явного вызова этого метода, используя оператор :keyword:"
"`with`. Следующий код автоматически отключит *dom* при выходе из блока :"
"keyword:`!with`::"

#: ../../library/xml.dom.minidom.rst:138
msgid ""
"Write XML to the writer object.  The writer receives texts but not bytes as "
"input, it should have a :meth:`write` method which matches that of the file "
"object interface.  The *indent* parameter is the indentation of the current "
"node. The *addindent* parameter is the incremental indentation to use for "
"subnodes of the current one.  The *newl* parameter specifies the string to "
"use to terminate newlines."
msgstr ""
"Запишите XML в объект записи. Модуль записи получает на вход тексты, а не "
"байты, он должен иметь метод :meth:`write`, соответствующий методу "
"интерфейса файлового объекта. Параметр *indent* определяет отступ текущего "
"узла. Параметр *addindent* — это добавочный отступ, используемый для "
"подузлов текущего. Параметр *newl* указывает строку, которая будет "
"использоваться для завершения новой строки."

#: ../../library/xml.dom.minidom.rst:145
msgid ""
"For the :class:`Document` node, an additional keyword argument *encoding* "
"can be used to specify the encoding field of the XML header."
msgstr ""
"Для узла :class:`Document` дополнительный аргумент ключевого слова "
"*encoding* может использоваться для указания поля кодировки заголовка XML."

#: ../../library/xml.dom.minidom.rst:148
msgid ""
"Similarly, explicitly stating the *standalone* argument causes the "
"standalone document declarations to be added to the prologue of the XML "
"document. If the value is set to ``True``, ``standalone=\"yes\"`` is added, "
"otherwise it is set to ``\"no\"``. Not stating the argument will omit the "
"declaration from the document."
msgstr ""
"Аналогично, явное указание аргумента *standalone* приводит к добавлению "
"объявлений автономного документа в пролог XML-документа. Если для значения "
"установлено ``True``, добавляется ``standalone=\"yes\"``, в противном случае "
"ему присваивается ``\"no\"``. Если не указать аргумент, декларация будет "
"исключена из документа."

#: ../../library/xml.dom.minidom.rst:155
msgid ""
"The :meth:`writexml` method now preserves the attribute order specified by "
"the user."
msgstr ""
"Метод :meth:`writexml` теперь сохраняет порядок атрибутов, указанный "
"пользователем."

#: ../../library/xml.dom.minidom.rst:159 ../../library/xml.dom.minidom.rst:180
#: ../../library/xml.dom.minidom.rst:199
msgid "The *standalone* parameter was added."
msgstr "Добавлен параметр *standalone*."

#: ../../library/xml.dom.minidom.rst:164
msgid ""
"Return a string or byte string containing the XML represented by the DOM "
"node."
msgstr ""
"Возвращает строку или строку байтов, содержащую XML, представленный узлом "
"DOM."

#: ../../library/xml.dom.minidom.rst:167
msgid ""
"With an explicit *encoding* [1]_ argument, the result is a byte string in "
"the specified encoding. With no *encoding* argument, the result is a Unicode "
"string, and the XML declaration in the resulting string does not specify an "
"encoding. Encoding this string in an encoding other than UTF-8 is likely "
"incorrect, since UTF-8 is the default encoding of XML."
msgstr ""
"С явной *кодировкой* [1]_ аргумент, результатом является байтовая строка в "
"указанной кодировке. Без аргумента *encoding* результатом является строка в "
"Юникоде, а объявление XML в результирующей строке не указывает кодировку. "
"Кодирование этой строки в кодировке, отличной от UTF-8, скорее всего, "
"неверно, поскольку UTF-8 является кодировкой XML по умолчанию."

#: ../../library/xml.dom.minidom.rst:174 ../../library/xml.dom.minidom.rst:193
msgid "The *standalone* argument behaves exactly as in :meth:`writexml`."
msgstr "Аргумент *standalone* ведет себя точно так же, как в :meth:`writexml`."

#: ../../library/xml.dom.minidom.rst:176
msgid ""
"The :meth:`toxml` method now preserves the attribute order specified by the "
"user."
msgstr ""
"Метод :meth:`toxml` теперь сохраняет порядок атрибутов, указанный "
"пользователем."

#: ../../library/xml.dom.minidom.rst:186
msgid ""
"Return a pretty-printed version of the document. *indent* specifies the "
"indentation string and defaults to a tabulator; *newl* specifies the string "
"emitted at the end of each line and defaults to ``\\n``."
msgstr ""
"Верните красиво напечатанную версию документа. *indent* определяет строку "
"отступа и по умолчанию представляет собой табулятор; *newl* определяет "
"строку, выдаваемую в конце каждой строки, и по умолчанию имеет значение "
"``\\n``."

#: ../../library/xml.dom.minidom.rst:190
msgid ""
"The *encoding* argument behaves like the corresponding argument of :meth:"
"`toxml`."
msgstr ""
"Аргумент *encoding* ведет себя как соответствующий аргумент :meth:`toxml`."

#: ../../library/xml.dom.minidom.rst:195
msgid ""
"The :meth:`toprettyxml` method now preserves the attribute order specified "
"by the user."
msgstr ""
"Метод :meth:`toprettyxml` теперь сохраняет порядок атрибутов, указанный "
"пользователем."

#: ../../library/xml.dom.minidom.rst:205
msgid "DOM Example"
msgstr "Пример DOM"

#: ../../library/xml.dom.minidom.rst:207
msgid ""
"This example program is a fairly realistic example of a simple program. In "
"this particular case, we do not take much advantage of the flexibility of "
"the DOM."
msgstr ""
"Этот пример программы представляет собой довольно реалистичный пример "
"простой программы. В данном конкретном случае мы не особо пользуемся "
"гибкостью DOM."

#: ../../library/xml.dom.minidom.rst:216
msgid "minidom and the DOM standard"
msgstr "minidom и стандарт DOM"

#: ../../library/xml.dom.minidom.rst:218
msgid ""
"The :mod:`xml.dom.minidom` module is essentially a DOM 1.0-compatible DOM "
"with some DOM 2 features (primarily namespace features)."
msgstr ""
"Модуль :mod:`xml.dom.minidom` по сути представляет собой DOM, совместимый с "
"DOM 1.0, с некоторыми функциями DOM 2 (в основном функциями пространства "
"имен)."

#: ../../library/xml.dom.minidom.rst:221
msgid ""
"Usage of the DOM interface in Python is straight-forward.  The following "
"mapping rules apply:"
msgstr ""
"Использование интерфейса DOM в Python очень просто. Применяются следующие "
"правила сопоставления:"

#: ../../library/xml.dom.minidom.rst:224
msgid ""
"Interfaces are accessed through instance objects. Applications should not "
"instantiate the classes themselves; they should use the creator functions "
"available on the :class:`Document` object. Derived interfaces support all "
"operations (and attributes) from the base interfaces, plus any new "
"operations."
msgstr ""
"Доступ к интерфейсам осуществляется через объекты экземпляра. Приложения не "
"должны создавать экземпляры самих классов; им следует использовать функции "
"создателя, доступные в объекте :class:`Document`. Производные интерфейсы "
"поддерживают все операции (и атрибуты) базовых интерфейсов, а также любые "
"новые операции."

#: ../../library/xml.dom.minidom.rst:229
msgid ""
"Operations are used as methods. Since the DOM uses only :keyword:`in` "
"parameters, the arguments are passed in normal order (from left to right). "
"There are no optional arguments. ``void`` operations return ``None``."
msgstr ""
"В качестве методов используются операции. Поскольку DOM использует только "
"параметры :keyword:`in`, аргументы передаются в обычном порядке (слева "
"направо). Необязательных аргументов нет. Операции ``void`` возвращают "
"``None``."

#: ../../library/xml.dom.minidom.rst:233
msgid ""
"IDL attributes map to instance attributes. For compatibility with the OMG "
"IDL language mapping for Python, an attribute ``foo`` can also be accessed "
"through accessor methods :meth:`_get_foo` and :meth:`_set_foo`.  "
"``readonly`` attributes must not be changed; this is not enforced at runtime."
msgstr ""
"Атрибуты IDL сопоставляются с атрибутами экземпляра. Для совместимости с "
"отображением языка IDL OMG для Python к атрибуту ``foo`` также можно "
"получить доступ через методы доступа :meth:`_get_foo` и :meth:`_set_foo`. "
"Атрибуты ``readonly`` не должны быть изменены; это не применяется во время "
"выполнения."

#: ../../library/xml.dom.minidom.rst:238
msgid ""
"The types ``short int``, ``unsigned int``, ``unsigned long long``, and "
"``boolean`` all map to Python integer objects."
msgstr ""
"Типы short int, unsigned int, unsigned long long и boolean соответствуют "
"целочисленным объектам Python."

#: ../../library/xml.dom.minidom.rst:241
msgid ""
"The type ``DOMString`` maps to Python strings. :mod:`xml.dom.minidom` "
"supports either bytes or strings, but will normally produce strings. Values "
"of type ``DOMString`` may also be ``None`` where allowed to have the IDL "
"``null`` value by the DOM specification from the W3C."
msgstr ""
"Тип DOMString соответствует строкам Python. :mod:`xml.dom.minidom` "
"поддерживает как байты, так и строки, но обычно создает строки. Значения "
"типа DOMString также могут иметь значение None, если спецификация DOM из W3C "
"позволяет иметь значение IDL null."

#: ../../library/xml.dom.minidom.rst:246
msgid ""
"``const`` declarations map to variables in their respective scope (e.g. "
"``xml.dom.minidom.Node.PROCESSING_INSTRUCTION_NODE``); they must not be "
"changed."
msgstr ""
"Объявления ``const`` сопоставляются с переменными в соответствующей области "
"(например, ``xml.dom.minidom.Node.PROCESSING_INSTRUCTION_NODE``); их нельзя "
"менять."

#: ../../library/xml.dom.minidom.rst:249
msgid ""
"``DOMException`` is currently not supported in :mod:`xml.dom.minidom`. "
"Instead, :mod:`xml.dom.minidom` uses standard Python exceptions such as :exc:"
"`TypeError` and :exc:`AttributeError`."
msgstr ""
"``DOMException`` в настоящее время не поддерживается в :mod:`xml.dom."
"minidom`. Вместо этого :mod:`xml.dom.minidom` использует стандартные "
"исключения Python, такие как :exc:`TypeError` и :exc:`AttributeError`."

#: ../../library/xml.dom.minidom.rst:253
msgid ""
":class:`NodeList` objects are implemented using Python's built-in list type. "
"These objects provide the interface defined in the DOM specification, but "
"with earlier versions of Python they do not support the official API.  They "
"are, however, much more \"Pythonic\" than the interface defined in the W3C "
"recommendations."
msgstr ""
"Объекты :class:`NodeList` реализованы с использованием встроенного в Python "
"типа списка. Эти объекты предоставляют интерфейс, определенный в "
"спецификации DOM, но в более ранних версиях Python они не поддерживают "
"официальный API. Однако они гораздо более «питонические», чем интерфейс, "
"определенный в рекомендациях W3C."

#: ../../library/xml.dom.minidom.rst:259
msgid ""
"The following interfaces have no implementation in :mod:`xml.dom.minidom`:"
msgstr "Следующие интерфейсы не имеют реализации в :mod:`xml.dom.minidom`:"

#: ../../library/xml.dom.minidom.rst:261
msgid ":class:`DOMTimeStamp`"
msgstr ":class:`DOMTimeStamp`"

#: ../../library/xml.dom.minidom.rst:263
msgid ":class:`EntityReference`"
msgstr ":class:`EntityReference`"

#: ../../library/xml.dom.minidom.rst:265
msgid ""
"Most of these reflect information in the XML document that is not of general "
"utility to most DOM users."
msgstr ""
"Большинство из них отражают информацию в XML-документе, которая не "
"представляет общей пользы для большинства пользователей DOM."

#: ../../library/xml.dom.minidom.rst:269
msgid "Footnotes"
msgstr "Сноски"

#: ../../library/xml.dom.minidom.rst:270
msgid ""
"The encoding name included in the XML output should conform to the "
"appropriate standards. For example, \"UTF-8\" is valid, but \"UTF8\" is not "
"valid in an XML document's declaration, even though Python accepts it as an "
"encoding name. See https://www.w3.org/TR/2006/REC-xml11-20060816/#NT-"
"EncodingDecl and https://www.iana.org/assignments/character-sets/character-"
"sets.xhtml."
msgstr ""
"Имя кодировки, включенное в выходные данные XML, должно соответствовать "
"соответствующим стандартам. Например, «UTF-8» допустим, но «UTF8» недопустим "
"в объявлении XML-документа, хотя Python принимает его как имя кодировки. См. "
"https://www.w3.org/TR/2006/REC-xml11-20060816/#NT-EncodingDecl и https://www."
"iana.org/assignments/character-sets/character-sets.xhtml."
