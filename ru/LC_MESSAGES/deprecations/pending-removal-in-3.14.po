# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# Rafael Fontenelle <rffontenelle@gmail.com>, 2024
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.12\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-01-17 14:51+0000\n"
"PO-Revision-Date: 2024-07-26 14:50+0000\n"
"Last-Translator: Rafael Fontenelle <rffontenelle@gmail.com>, 2024\n"
"Language-Team: Russian (https://app.transifex.com/python-doc/teams/5390/"
"ru/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ru\n"
"Plural-Forms: nplurals=4; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && "
"n%10<=4 && (n%100<12 || n%100>14) ? 1 : n%10==0 || (n%10>=5 && n%10<=9) || "
"(n%100>=11 && n%100<=14)? 2 : 3);\n"

#: ../../deprecations/pending-removal-in-3.14.rst:2
msgid "Pending Removal in Python 3.14"
msgstr "Ожидает удаления в Python 3.14"

#: ../../deprecations/pending-removal-in-3.14.rst:4
msgid ""
":mod:`argparse`: The *type*, *choices*, and *metavar* parameters of :class:`!"
"argparse.BooleanOptionalAction` are deprecated and will be removed in 3.14. "
"(Contributed by Nikita Sobolev in :gh:`92248`.)"
msgstr ""
":mod:`argparse`: Параметры *type*, *choices* и *metavar* :class:`!argparse."
"BooleanOptionalAction` устарели и будут удалены в версии 3.14. (Добавлен "
"Никитой Соболевым в :gh:`92248`.)"

#: ../../deprecations/pending-removal-in-3.14.rst:9
msgid ""
":mod:`ast`: The following features have been deprecated in documentation "
"since Python 3.8, now cause a :exc:`DeprecationWarning` to be emitted at "
"runtime when they are accessed or used, and will be removed in Python 3.14:"
msgstr ""
":mod:`ast`: Следующие функции устарели в документации, начиная с Python 3.8, "
"теперь вызывают выдачу :exc:`DeprecationWarning` во время выполнения, когда "
"к ним обращаются или используют, и будут удалены в Python 3.14:"

#: ../../deprecations/pending-removal-in-3.14.rst:13
msgid ":class:`!ast.Num`"
msgstr ":class:`!ast.Num`"

#: ../../deprecations/pending-removal-in-3.14.rst:14
msgid ":class:`!ast.Str`"
msgstr ":class:`!ast.Str`"

#: ../../deprecations/pending-removal-in-3.14.rst:15
msgid ":class:`!ast.Bytes`"
msgstr ":class:`!ast.Bytes`"

#: ../../deprecations/pending-removal-in-3.14.rst:16
msgid ":class:`!ast.NameConstant`"
msgstr ":class:`!ast.NameConstant`"

#: ../../deprecations/pending-removal-in-3.14.rst:17
msgid ":class:`!ast.Ellipsis`"
msgstr ":class:`!ast.Ellipsis`"

#: ../../deprecations/pending-removal-in-3.14.rst:19
msgid ""
"Use :class:`ast.Constant` instead. (Contributed by Serhiy Storchaka in :gh:"
"`90953`.)"
msgstr ""
"Вместо этого используйте :class:`ast.Constant`. (Предоставлено Сергеем "
"Сторчакой в ​​:gh:`90953`.)"

#: ../../deprecations/pending-removal-in-3.14.rst:22
msgid ":mod:`asyncio`:"
msgstr ":mod:`asyncio`:"

#: ../../deprecations/pending-removal-in-3.14.rst:24
msgid ""
"The child watcher classes :class:`~asyncio.MultiLoopChildWatcher`, :class:"
"`~asyncio.FastChildWatcher`, :class:`~asyncio.AbstractChildWatcher` and :"
"class:`~asyncio.SafeChildWatcher` are deprecated and will be removed in "
"Python 3.14. (Contributed by Kumar Aditya in :gh:`94597`.)"
msgstr ""
"Классы наблюдателей за детьми :class:`~asyncio.MultiLoopChildWatcher`, :"
"class:`~asyncio.FastChildWatcher`, :class:`~asyncio.AbstractChildWatcher` и :"
"class:`~asyncio.SafeChildWatcher` устарели и будут удалены в Питон 3.14. "
"(Предоставлено Кумаром Адитьей в :gh:`94597`.)"

#: ../../deprecations/pending-removal-in-3.14.rst:30
msgid ""
":func:`asyncio.set_child_watcher`, :func:`asyncio.get_child_watcher`, :meth:"
"`asyncio.AbstractEventLoopPolicy.set_child_watcher` and :meth:`asyncio."
"AbstractEventLoopPolicy.get_child_watcher` are deprecated and will be "
"removed in Python 3.14. (Contributed by Kumar Aditya in :gh:`94597`.)"
msgstr ""
":func:`asyncio.set_child_watcher`, :func:`asyncio.get_child_watcher`, :meth:"
"`asyncio.AbstractEventLoopPolicy.set_child_watcher` and :meth:`asyncio."
"AbstractEventLoopPolicy.get_child_watcher` are deprecated and will be "
"removed in Python 3.14. (Contributed by Kumar Aditya in :gh:`94597`.)"

#: ../../deprecations/pending-removal-in-3.14.rst:36
msgid ""
"The :meth:`~asyncio.get_event_loop` method of the default event loop policy "
"now emits a :exc:`DeprecationWarning` if there is no current event loop set "
"and it decides to create one. (Contributed by Serhiy Storchaka and Guido van "
"Rossum in :gh:`100160`.)"
msgstr ""
"The :meth:`~asyncio.get_event_loop` method of the default event loop policy "
"now emits a :exc:`DeprecationWarning` if there is no current event loop set "
"and it decides to create one. (Contributed by Serhiy Storchaka and Guido van "
"Rossum in :gh:`100160`.)"

#: ../../deprecations/pending-removal-in-3.14.rst:41
msgid ""
":mod:`collections.abc`: Deprecated :class:`~collections.abc.ByteString`. "
"Prefer :class:`!Sequence` or :class:`~collections.abc.Buffer`. For use in "
"typing, prefer a union, like ``bytes | bytearray``, or :class:`collections."
"abc.Buffer`. (Contributed by Shantanu Jain in :gh:`91896`.)"
msgstr ""
":mod:`collections.abc`: Deprecated :class:`~collections.abc.ByteString`. "
"Prefer :class:`!Sequence` or :class:`~collections.abc.Buffer`. For use in "
"typing, prefer a union, like ``bytes | bytearray``, or :class:`collections."
"abc.Buffer`. (Contributed by Shantanu Jain in :gh:`91896`.)"

#: ../../deprecations/pending-removal-in-3.14.rst:47
msgid ""
":mod:`email`: Deprecated the *isdst* parameter in :func:`email.utils."
"localtime`. (Contributed by Alan Williams in :gh:`72346`.)"
msgstr ""
":mod:`email`: Deprecated the *isdst* parameter in :func:`email.utils."
"localtime`. (Contributed by Alan Williams in :gh:`72346`.)"

#: ../../deprecations/pending-removal-in-3.14.rst:50
msgid ""
":mod:`importlib`: ``__package__`` and ``__cached__`` will cease to be set or "
"taken into consideration by the import system (:gh:`97879`)."
msgstr ""
":mod:`importlib`: ``__package__`` and ``__cached__`` will cease to be set or "
"taken into consideration by the import system (:gh:`97879`)."

#: ../../deprecations/pending-removal-in-3.14.rst:53
msgid ":mod:`importlib.abc` deprecated classes:"
msgstr ":mod:`importlib.abc` deprecated classes:"

#: ../../deprecations/pending-removal-in-3.14.rst:55
msgid ":class:`!importlib.abc.ResourceReader`"
msgstr ":class:`!importlib.abc.ResourceReader`"

#: ../../deprecations/pending-removal-in-3.14.rst:56
msgid ":class:`!importlib.abc.Traversable`"
msgstr ":class:`!importlib.abc.Traversable`"

#: ../../deprecations/pending-removal-in-3.14.rst:57
msgid ":class:`!importlib.abc.TraversableResources`"
msgstr ":class:`!importlib.abc.TraversableResources`"

#: ../../deprecations/pending-removal-in-3.14.rst:59
msgid "Use :mod:`importlib.resources.abc` classes instead:"
msgstr "Use :mod:`importlib.resources.abc` classes instead:"

#: ../../deprecations/pending-removal-in-3.14.rst:61
msgid ":class:`importlib.resources.abc.Traversable`"
msgstr ":class:`importlib.resources.abc.Traversable`"

#: ../../deprecations/pending-removal-in-3.14.rst:62
msgid ":class:`importlib.resources.abc.TraversableResources`"
msgstr ":class:`importlib.resources.abc.TraversableResources`"

#: ../../deprecations/pending-removal-in-3.14.rst:64
msgid "(Contributed by Jason R. Coombs and Hugo van Kemenade in :gh:`93963`.)"
msgstr ""
"(Предоставлено Джейсоном Р. Кумбсом и Хьюго ван Кеменаде в :gh:`93963`.)"

#: ../../deprecations/pending-removal-in-3.14.rst:66
msgid ""
":mod:`itertools` had undocumented, inefficient, historically buggy, and "
"inconsistent support for copy, deepcopy, and pickle operations. This will be "
"removed in 3.14 for a significant reduction in code volume and maintenance "
"burden. (Contributed by Raymond Hettinger in :gh:`101588`.)"
msgstr ""
":mod:`itertools` had undocumented, inefficient, historically buggy, and "
"inconsistent support for copy, deepcopy, and pickle operations. This will be "
"removed in 3.14 for a significant reduction in code volume and maintenance "
"burden. (Contributed by Raymond Hettinger in :gh:`101588`.)"

#: ../../deprecations/pending-removal-in-3.14.rst:72
msgid ""
":mod:`multiprocessing`: The default start method will change to a safer one "
"on Linux, BSDs, and other non-macOS POSIX platforms where ``'fork'`` is "
"currently the default (:gh:`84559`). Adding a runtime warning about this was "
"deemed too disruptive as the majority of code is not expected to care. Use "
"the :func:`~multiprocessing.get_context` or :func:`~multiprocessing."
"set_start_method` APIs to explicitly specify when your code *requires* "
"``'fork'``.  See :ref:`multiprocessing-start-methods`."
msgstr ""
":mod:`multiprocessing`: Метод запуска по умолчанию изменится на более "
"безопасный в Linux, BSD и других платформах, отличных от macOS POSIX, где в "
"настоящее время по умолчанию используется ``'fork'`` (:gh:`84559`). "
"Добавление предупреждения об этом во время выполнения было сочтено слишком "
"разрушительным, поскольку ожидается, что большая часть кода не будет "
"обращать на это внимания. Используйте API :func:`~multiprocessing."
"get_context` или :func:`~multiprocessing.set_start_method`, чтобы явно "
"указать, когда ваш код *требует* ``'вилки'``. См. :ref:`мультипроцессорные-"
"стартовые методы`."

#: ../../deprecations/pending-removal-in-3.14.rst:80
msgid ""
":mod:`pathlib`: :meth:`~pathlib.PurePath.is_relative_to` and :meth:`~pathlib."
"PurePath.relative_to`: passing additional arguments is deprecated."
msgstr ""
":mod:`pathlib`: :meth:`~pathlib.PurePath.is_relative_to` и :meth:`~pathlib."
"PurePath.relative_to`: передача дополнительных аргументов устарела."

#: ../../deprecations/pending-removal-in-3.14.rst:84
msgid ""
":mod:`pkgutil`: :func:`~pkgutil.find_loader` and :func:`~pkgutil.get_loader` "
"now raise :exc:`DeprecationWarning`; use :func:`importlib.util.find_spec` "
"instead. (Contributed by Nikita Sobolev in :gh:`97850`.)"
msgstr ""
":mod:`pkgutil`: :func:`~pkgutil.find_loader` and :func:`~pkgutil.get_loader` "
"now raise :exc:`DeprecationWarning`; use :func:`importlib.util.find_spec` "
"instead. (Contributed by Nikita Sobolev in :gh:`97850`.)"

#: ../../deprecations/pending-removal-in-3.14.rst:89
msgid ":mod:`pty`:"
msgstr ":mod:`pty`:"

#: ../../deprecations/pending-removal-in-3.14.rst:91
msgid "``master_open()``: use :func:`pty.openpty`."
msgstr "``master_open()``: используйте :func:`pty.openpty`."

#: ../../deprecations/pending-removal-in-3.14.rst:92
msgid "``slave_open()``: use :func:`pty.openpty`."
msgstr "``slave_open()``: используйте :func:`pty.openpty`."

#: ../../deprecations/pending-removal-in-3.14.rst:94
msgid ":mod:`sqlite3`:"
msgstr ":mod:`sqlite3`:"

#: ../../deprecations/pending-removal-in-3.14.rst:96
msgid ":data:`~sqlite3.version` and :data:`~sqlite3.version_info`."
msgstr ":data:`~sqlite3.version` и :data:`~sqlite3.version_info`."

#: ../../deprecations/pending-removal-in-3.14.rst:98
msgid ""
":meth:`~sqlite3.Cursor.execute` and :meth:`~sqlite3.Cursor.executemany` if :"
"ref:`named placeholders <sqlite3-placeholders>` are used and *parameters* is "
"a sequence instead of a :class:`dict`."
msgstr ""
":meth:`~sqlite3.Cursor.execute` and :meth:`~sqlite3.Cursor.executemany` if :"
"ref:`named placeholders <sqlite3-placeholders>` are used and *parameters* is "
"a sequence instead of a :class:`dict`."

#: ../../deprecations/pending-removal-in-3.14.rst:102
msgid ""
":mod:`typing`: :class:`~typing.ByteString`, deprecated since Python 3.9, now "
"causes a :exc:`DeprecationWarning` to be emitted when it is used."
msgstr ""
":mod:`typing`: :class:`~typing.ByteString`, deprecated since Python 3.9, now "
"causes a :exc:`DeprecationWarning` to be emitted when it is used."

#: ../../deprecations/pending-removal-in-3.14.rst:105
msgid ""
":mod:`urllib`: :class:`!urllib.parse.Quoter` is deprecated: it was not "
"intended to be a public API. (Contributed by Gregory P. Smith in :gh:"
"`88168`.)"
msgstr ""
":mod:`urllib`: :class:`!urllib.parse.Quoter` is deprecated: it was not "
"intended to be a public API. (Contributed by Gregory P. Smith in :gh:"
"`88168`.)"
