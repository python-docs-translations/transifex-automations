# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# Jon Britva, 2023
# Rafael Fontenelle <rffontenelle@gmail.com>, 2024
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.11\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-01-03 15:28+0000\n"
"PO-Revision-Date: 2023-05-24 02:08+0000\n"
"Last-Translator: Rafael Fontenelle <rffontenelle@gmail.com>, 2024\n"
"Language-Team: Russian (https://app.transifex.com/python-doc/teams/5390/"
"ru/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ru\n"
"Plural-Forms: nplurals=4; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && "
"n%10<=4 && (n%100<12 || n%100>14) ? 1 : n%10==0 || (n%10>=5 && n%10<=9) || "
"(n%100>=11 && n%100<=14)? 2 : 3);\n"

#: ../../c-api/function.rst:6
msgid "Function Objects"
msgstr "Функциональные объекты"

#: ../../c-api/function.rst:10
msgid "There are a few functions specific to Python functions."
msgstr "Есть несколько функций, специфичных для функций Python."

#: ../../c-api/function.rst:15
msgid "The C structure used for functions."
msgstr "Структура C, используемая для функций."

#: ../../c-api/function.rst:22
msgid ""
"This is an instance of :c:type:`PyTypeObject` and represents the Python "
"function type.  It is exposed to Python programmers as ``types."
"FunctionType``."
msgstr ""
"Это экземпляр :c:type:`PyTypeObject` и представляет тип функции Python. "
"Программистам Python он предоставляется как «types.FunctionType»."

#: ../../c-api/function.rst:28
msgid ""
"Return true if *o* is a function object (has type :c:data:"
"`PyFunction_Type`). The parameter must not be ``NULL``.  This function "
"always succeeds."
msgstr ""
"Возвращайте true, если *o* является объектом функции (имеет тип :c:data:"
"`PyFunction_Type`). Параметр не должен быть NULL. Эта функция всегда "
"завершается успешно."

#: ../../c-api/function.rst:34
msgid ""
"Return a new function object associated with the code object *code*. "
"*globals* must be a dictionary with the global variables accessible to the "
"function."
msgstr ""
"Возвращает новый объект функции, связанный с объектом кода *code*. *globals* "
"должен быть словарем с глобальными переменными, доступными для функции."

#: ../../c-api/function.rst:37
msgid ""
"The function's docstring and name are retrieved from the code object. :attr:"
"`~function.__module__` is retrieved from *globals*. The argument defaults, "
"annotations and closure are set to ``NULL``. :attr:`~function.__qualname__` "
"is set to the same value as the code object's :attr:`~codeobject."
"co_qualname` field."
msgstr ""
"Строка документации и имя функции извлекаются из объекта кода. :attr:"
"`~function.__module__` извлекается из *globals*. По умолчанию для "
"аргументов, аннотаций и замыканий установлено значение NULL. :attr:"
"`~function.__qualname__` имеет то же значение, что и поле :attr:`~codeobject."
"co_qualname` объекта кода."

#: ../../c-api/function.rst:46
msgid ""
"As :c:func:`PyFunction_New`, but also allows setting the function object's :"
"attr:`~function.__qualname__` attribute. *qualname* should be a unicode "
"object or ``NULL``; if ``NULL``, the :attr:`!__qualname__` attribute is set "
"to the same value as the code object's :attr:`~codeobject.co_qualname` field."
msgstr ""
"Как :c:func:`PyFunction_New`, но также позволяет установить атрибут :attr:"
"`~function.__qualname__` объекта функции. *qualname* должен быть объектом "
"Юникода или ``NULL``; если ``NULL``, атрибуту :attr:`!__qualname__` "
"присваивается то же значение, что и полю :attr:`~codeobject.co_qualname` "
"объекта кода."

#: ../../c-api/function.rst:57
msgid "Return the code object associated with the function object *op*."
msgstr "Верните объект кода, связанный с объектом функции *op*."

#: ../../c-api/function.rst:62
msgid "Return the globals dictionary associated with the function object *op*."
msgstr ""
"Возвращает словарь глобальных переменных, связанный с объектом функции *op*."

#: ../../c-api/function.rst:67
msgid ""
"Return a :term:`borrowed reference` to the :attr:`~function.__module__` "
"attribute of the :ref:`function object <user-defined-funcs>` *op*. It can be "
"*NULL*."
msgstr ""
"Верните :term:`заимствованную ссылку` на атрибут :attr:`~function."
"__module__` объекта :ref:`function <user-defined-funcs>` *op*. Это может "
"быть *NULL*."

#: ../../c-api/function.rst:71
msgid ""
"This is normally a :class:`string <str>` containing the module name, but can "
"be set to any other object by Python code."
msgstr ""
"Обычно это :class:`string <str>`, содержащий имя модуля, но может быть "
"установлен в любой другой объект с помощью кода Python."

#: ../../c-api/function.rst:77
msgid ""
"Return the argument default values of the function object *op*. This can be "
"a tuple of arguments or ``NULL``."
msgstr ""
"Возвращает значения аргументов по умолчанию для объекта функции *op*. Это "
"может быть кортеж аргументов или NULL."

#: ../../c-api/function.rst:83
msgid ""
"Set the argument default values for the function object *op*. *defaults* "
"must be ``Py_None`` or a tuple."
msgstr ""
"Установите значения аргументов по умолчанию для функционального объекта "
"*op*. *по умолчанию* должно быть ``Py_None`` или кортеж."

#: ../../c-api/function.rst:86 ../../c-api/function.rst:100
#: ../../c-api/function.rst:114
msgid "Raises :exc:`SystemError` and returns ``-1`` on failure."
msgstr "Вызывает :exc:`SystemError` и возвращает ``-1`` в случае ошибки."

#: ../../c-api/function.rst:91
msgid ""
"Return the closure associated with the function object *op*. This can be "
"``NULL`` or a tuple of cell objects."
msgstr ""
"Верните замыкание, связанное с объектом функции *op*. Это может быть NULL "
"или кортеж объектов ячеек."

#: ../../c-api/function.rst:97
msgid ""
"Set the closure associated with the function object *op*. *closure* must be "
"``Py_None`` or a tuple of cell objects."
msgstr ""
"Установите замыкание, связанное с функциональным объектом *op*. *замыкание* "
"должно быть ``Py_None`` или кортежем объектов ячеек."

#: ../../c-api/function.rst:105
msgid ""
"Return the annotations of the function object *op*. This can be a mutable "
"dictionary or ``NULL``."
msgstr ""
"Верните аннотации функционального объекта *op*. Это может быть изменяемый "
"словарь или ``NULL``."

#: ../../c-api/function.rst:111
msgid ""
"Set the annotations for the function object *op*. *annotations* must be a "
"dictionary or ``Py_None``."
msgstr ""
"Установите аннотации для функционального объекта *op*. *аннотации* должны "
"быть словарем или ``Py_None``."

#: ../../c-api/function.rst:8
msgid "object"
msgstr "объект"

#: ../../c-api/function.rst:8
msgid "function"
msgstr "функция"

#: ../../c-api/function.rst:20
msgid "MethodType (in module types)"
msgstr "MethodType (в типах модулей)"
