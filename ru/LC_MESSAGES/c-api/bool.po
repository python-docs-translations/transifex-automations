# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# Rafael Fontenelle <rffontenelle@gmail.com>, 2024
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.12\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-01-17 14:51+0000\n"
"PO-Revision-Date: 2024-05-11 00:32+0000\n"
"Last-Translator: Rafael Fontenelle <rffontenelle@gmail.com>, 2024\n"
"Language-Team: Russian (https://app.transifex.com/python-doc/teams/5390/"
"ru/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ru\n"
"Plural-Forms: nplurals=4; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && "
"n%10<=4 && (n%100<12 || n%100>14) ? 1 : n%10==0 || (n%10>=5 && n%10<=9) || "
"(n%100>=11 && n%100<=14)? 2 : 3);\n"

#: ../../c-api/bool.rst:6
msgid "Boolean Objects"
msgstr "Логические объекты"

#: ../../c-api/bool.rst:8
msgid ""
"Booleans in Python are implemented as a subclass of integers.  There are "
"only two booleans, :c:data:`Py_False` and :c:data:`Py_True`.  As such, the "
"normal creation and deletion functions don't apply to booleans.  The "
"following macros are available, however."
msgstr ""
"Логические значения в Python реализованы как подкласс целых чисел. "
"Существует только два логических значения :c:data:`Py_False` и :c:data:"
"`Py_True`.  Таким образом, обычные функции создания и удаления не "
"применяются к логическим значениям. Однако доступны следующие макросы."

#: ../../c-api/bool.rst:16
msgid ""
"This instance of :c:type:`PyTypeObject` represents the Python boolean type; "
"it is the same object as :class:`bool` in the Python layer."
msgstr ""
"Этот экземпляр :c:type:`PyTypeObject` представляет логический тип Python; "
"это тот же объект, что и :class:`bool` на уровне Python."

#: ../../c-api/bool.rst:22
msgid ""
"Return true if *o* is of type :c:data:`PyBool_Type`.  This function always "
"succeeds."
msgstr ""
"Возвращает значение true, если *o* имеет тип :c:data:`PyBool_Type`. Эта "
"функция всегда выполняется успешно."

#: ../../c-api/bool.rst:28
msgid ""
"The Python ``False`` object.  This object has no methods and is `immortal "
"<https://peps.python.org/pep-0683/>`_."
msgstr ""
"Объект Python ``False``. Этот объект не имеет методов и является бессмертным "
"<https://peps.python.org/pep-0683/>`_."

#: ../../c-api/bool.rst:31
msgid ":c:data:`Py_False` is immortal."
msgstr ":c:data:`Py_False` бессмертный."

#: ../../c-api/bool.rst:37
msgid ""
"The Python ``True`` object.  This object has no methods and is `immortal "
"<https://peps.python.org/pep-0683/>`_."
msgstr ""
"Объект Python ``True``.  Этот объект не имеет методов и является бессмертным "
"<https://peps.python.org/pep-0683/>`_."

#: ../../c-api/bool.rst:40
msgid ":c:data:`Py_True` is immortal."
msgstr ":c:data:`Py_True` бессмертный."

#: ../../c-api/bool.rst:46
msgid "Return :c:data:`Py_False` from a function."
msgstr "Возвращает :c:data:`Py_False` из функции."

#: ../../c-api/bool.rst:51
msgid "Return :c:data:`Py_True` from a function."
msgstr "Возвращает :c:data:`Py_True` из функции."

#: ../../c-api/bool.rst:56
msgid ""
"Return :c:data:`Py_True` or :c:data:`Py_False`, depending on the truth value "
"of *v*."
msgstr ""
"Возвращает :c:data:`Py_True` или :c:data:`Py_False`, в зависимости от "
"логического значения *v*."
