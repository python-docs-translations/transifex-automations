# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# Rafael Fontenelle <rffontenelle@gmail.com>, 2024
# Roustam Khamidoulline, 2024
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.12\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-01-17 14:51+0000\n"
"PO-Revision-Date: 2024-05-11 00:32+0000\n"
"Last-Translator: Roustam Khamidoulline, 2024\n"
"Language-Team: Russian (https://app.transifex.com/python-doc/teams/5390/"
"ru/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ru\n"
"Plural-Forms: nplurals=4; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && "
"n%10<=4 && (n%100<12 || n%100>14) ? 1 : n%10==0 || (n%10>=5 && n%10<=9) || "
"(n%100>=11 && n%100<=14)? 2 : 3);\n"

#: ../../c-api/tuple.rst:6
msgid "Tuple Objects"
msgstr "Объекты кортежа"

#: ../../c-api/tuple.rst:13
msgid "This subtype of :c:type:`PyObject` represents a Python tuple object."
msgstr ""
"Этот подтип :c:type:` PyObject` представляет собой объект-кортеж Python."

#: ../../c-api/tuple.rst:18
msgid ""
"This instance of :c:type:`PyTypeObject` represents the Python tuple type; it "
"is the same object as :class:`tuple` in the Python layer."
msgstr ""
"Этот экземпляр :c:type:`PyTypeObject` представляет тип кортежа Python; это "
"тот же объект, что и :class:`tuple` на уровне Python."

#: ../../c-api/tuple.rst:24
msgid ""
"Return true if *p* is a tuple object or an instance of a subtype of the "
"tuple type.  This function always succeeds."
msgstr ""
"Возвращайте true, если *p* является объектом кортежа или экземпляром подтипа "
"типа кортеж. Эта функция всегда завершается успешно."

#: ../../c-api/tuple.rst:30
msgid ""
"Return true if *p* is a tuple object, but not an instance of a subtype of "
"the tuple type.  This function always succeeds."
msgstr ""
"Возвращайте true, если *p* является объектом кортежа, но не экземпляром "
"подтипа типа кортеж. Эта функция всегда завершается успешно."

#: ../../c-api/tuple.rst:36
msgid ""
"Return a new tuple object of size *len*, or ``NULL`` with an exception set "
"on failure."
msgstr ""
"Возвращает новый объект-кортеж размером *len* или ``NULL`` с исключением, "
"установленным в случае сбоя."

#: ../../c-api/tuple.rst:42
msgid ""
"Return a new tuple object of size *n*, or ``NULL`` with an exception set on "
"failure. The tuple values are initialized to the subsequent *n* C arguments "
"pointing to Python objects. ``PyTuple_Pack(2, a, b)`` is equivalent to "
"``Py_BuildValue(\"(OO)\", a, b)``."
msgstr ""
"Вернуть новый объект-кортеж размером *n* или ``NULL`` с исключением, "
"установленным в случае сбоя. Значения кортежа инициализируются последующими "
"аргументами *n* C, указывающими на объекты Python. ``PyTuple_Pack(2, a, b)`` "
"эквивалентен ``Py_BuildValue(\"(OO)\", a, b)``."

#: ../../c-api/tuple.rst:50
msgid ""
"Take a pointer to a tuple object, and return the size of that tuple. On "
"error, return ``-1`` and with an exception set."
msgstr ""
"Возьмите указатель на объект кортежа и верните размер этого кортежа. В "
"случае ошибки вернуть ``-1`` и установить исключение."

#: ../../c-api/tuple.rst:56
msgid "Like :c:func:`PyTuple_Size`, but without error checking."
msgstr "Как :c:func:`PyTuple_Size`, но без проверки ошибок."

#: ../../c-api/tuple.rst:61
msgid ""
"Return the object at position *pos* in the tuple pointed to by *p*.  If "
"*pos* is negative or out of bounds, return ``NULL`` and set an :exc:"
"`IndexError` exception."
msgstr ""
"Верните объект в позиции *pos* в кортеже, на который указывает *p*. Если "
"*pos* отрицательное или выходит за пределы, верните ``NULL`` и установите "
"исключение :exc:`IndexError`."

#: ../../c-api/tuple.rst:64
msgid ""
"The returned reference is borrowed from the tuple *p* (that is: it is only "
"valid as long as you hold a reference to *p*). To get a :term:`strong "
"reference`, use :c:func:`Py_NewRef(PyTuple_GetItem(...)) <Py_NewRef>` or :c:"
"func:`PySequence_GetItem`."
msgstr ""
"Возвращенная ссылка заимствована из кортежа *p* (то есть: она действительна "
"только до тех пор, пока вы храните ссылку на *p*). Чтобы получить :term:"
"`сильную ссылку`, используйте :c:func:`Py_NewRef(PyTuple_GetItem(...)) "
"<Py_NewRef>` или :c:func:`PySequence_GetItem`."

#: ../../c-api/tuple.rst:73
msgid "Like :c:func:`PyTuple_GetItem`, but does no checking of its arguments."
msgstr "Подобно :c:func:`PyTuple_GetItem`, но не проверяет свои аргументы."

#: ../../c-api/tuple.rst:78
msgid ""
"Return the slice of the tuple pointed to by *p* between *low* and *high*, or "
"``NULL`` with an exception set on failure."
msgstr ""
"Возвращает фрагмент кортежа, на который указывает *p*, между *low* и *high* "
"или ``NULL`` с исключением, установленным в случае сбоя."

#: ../../c-api/tuple.rst:81
msgid ""
"This is the equivalent of the Python expression ``p[low:high]``. Indexing "
"from the end of the tuple is not supported."
msgstr ""
"Это эквивалент выражения Python ``p[low:high]``. Индексация с конца кортежа "
"не поддерживается."

#: ../../c-api/tuple.rst:87
msgid ""
"Insert a reference to object *o* at position *pos* of the tuple pointed to "
"by *p*.  Return ``0`` on success.  If *pos* is out of bounds, return ``-1`` "
"and set an :exc:`IndexError` exception."
msgstr ""
"Вставьте ссылку на объект *o* в позицию *pos* кортежа, на который указывает "
"*p*. Верните ``0`` в случае успеха. Если *pos* выходит за пределы, верните "
"``-1`` и установите исключение :exc:`IndexError`."

#: ../../c-api/tuple.rst:93
msgid ""
"This function \"steals\" a reference to *o* and discards a reference to an "
"item already in the tuple at the affected position."
msgstr ""
"Эта функция «крадет» ссылку на *o* и отбрасывает ссылку на элемент, уже "
"находящийся в кортеже в затронутой позиции."

#: ../../c-api/tuple.rst:99
msgid ""
"Like :c:func:`PyTuple_SetItem`, but does no error checking, and should "
"*only* be used to fill in brand new tuples."
msgstr ""
"Подобно :c:func:`PyTuple_SetItem`, но не выполняет проверку ошибок и должен "
"использоваться *только* для заполнения новых кортежей."

#: ../../c-api/tuple.rst:104
msgid ""
"This function \"steals\" a reference to *o*, and, unlike :c:func:"
"`PyTuple_SetItem`, does *not* discard a reference to any item that is being "
"replaced; any reference in the tuple at position *pos* will be leaked."
msgstr ""
"Эта функция «крадет» ссылку на *o* и, в отличие от :c:func:"
"`PyTuple_SetItem`, *не* отбрасывает ссылку на любой заменяемый элемент; "
"любая ссылка в кортеже в позиции *pos* будет утеряна."

#: ../../c-api/tuple.rst:112
msgid ""
"Can be used to resize a tuple.  *newsize* will be the new length of the "
"tuple. Because tuples are *supposed* to be immutable, this should only be "
"used if there is only one reference to the object.  Do *not* use this if the "
"tuple may already be known to some other part of the code.  The tuple will "
"always grow or shrink at the end.  Think of this as destroying the old tuple "
"and creating a new one, only more efficiently.  Returns ``0`` on success. "
"Client code should never assume that the resulting value of ``*p`` will be "
"the same as before calling this function. If the object referenced by ``*p`` "
"is replaced, the original ``*p`` is destroyed.  On failure, returns ``-1`` "
"and sets ``*p`` to ``NULL``, and raises :exc:`MemoryError` or :exc:"
"`SystemError`."
msgstr ""
"Может использоваться для изменения размера кортежа. *newsize* будет новой "
"длиной кортежа. Поскольку кортежи *предполагаются* неизменяемыми, это "
"следует использовать только в том случае, если на объект существует только "
"одна ссылка. *Не* используйте это, если кортеж уже известен какой-то другой "
"части кода. В конце кортеж всегда будет увеличиваться или уменьшаться. "
"Думайте об этом как об уничтожении старого кортежа и создании нового, только "
"более эффективного. Возвращает ``0`` в случае успеха. Клиентский код никогда "
"не должен предполагать, что результирующее значение ``*p`` будет таким же, "
"как и до вызова этой функции. Если объект, на который ссылается ``*p``, "
"заменяется, исходный ``*p`` уничтожается. В случае ошибки возвращает ``-1``, "
"устанавливает ``*p`` в ``NULL`` и вызывает :exc:`MemoryError` или :exc:"
"`SystemError`."

#: ../../c-api/tuple.rst:127
msgid "Struct Sequence Objects"
msgstr "Структурировать объекты последовательности"

#: ../../c-api/tuple.rst:129
msgid ""
"Struct sequence objects are the C equivalent of :func:`~collections."
"namedtuple` objects, i.e. a sequence whose items can also be accessed "
"through attributes. To create a struct sequence, you first have to create a "
"specific struct sequence type."
msgstr ""
"Объекты последовательности структур являются эквивалентом C объектов :func:"
"`~collections.namedtuple`, т.е. последовательности, к элементам которой "
"также можно получить доступ через атрибуты. Чтобы создать последовательность "
"структур, сначала необходимо создать определенный тип последовательности "
"структур."

#: ../../c-api/tuple.rst:136
msgid ""
"Create a new struct sequence type from the data in *desc*, described below. "
"Instances of the resulting type can be created with :c:func:"
"`PyStructSequence_New`."
msgstr ""
"Создайте новый тип последовательности структур из данных в *desc*, как "
"описано ниже. Экземпляры результирующего типа могут быть созданы с помощью :"
"c:func:`PyStructSequence_New`."

#: ../../c-api/tuple.rst:139 ../../c-api/tuple.rst:208
msgid "Return ``NULL`` with an exception set on failure."
msgstr "Возвращает NULL с исключением, установленным в случае сбоя."

#: ../../c-api/tuple.rst:144
msgid "Initializes a struct sequence type *type* from *desc* in place."
msgstr ""
"Инициализирует тип последовательности структур *type* из *desc* на месте."

#: ../../c-api/tuple.rst:149
msgid ""
"Like :c:func:`PyStructSequence_InitType`, but returns ``0`` on success and "
"``-1`` with an exception set on failure."
msgstr ""
"Подобно :c:func:`PyStructSequence_InitType`, но возвращает ``0`` в случае "
"успеха и ``-1`` с установленным исключением в случае неудачи."

#: ../../c-api/tuple.rst:157
msgid "Contains the meta information of a struct sequence type to create."
msgstr ""
"Содержит метаинформацию о типе последовательности структуры, которую "
"необходимо создать."

#: ../../c-api/tuple.rst:161
msgid ""
"Fully qualified name of the type; null-terminated UTF-8 encoded. The name "
"must contain the module name."
msgstr ""
"Полное имя типа; в кодировке UTF-8 с нулевым завершением. Имя должно "
"содержать имя модуля."

#: ../../c-api/tuple.rst:166
msgid "Pointer to docstring for the type or ``NULL`` to omit."
msgstr ""
"Указатель на строку документации для типа или ``NULL``, который нужно "
"опустить."

#: ../../c-api/tuple.rst:170
msgid "Pointer to ``NULL``-terminated array with field names of the new type."
msgstr "Указатель на завершающийся NULL массив с именами полей нового типа."

#: ../../c-api/tuple.rst:174
msgid "Number of fields visible to the Python side (if used as tuple)."
msgstr ""
"Количество полей, видимых на стороне Python (если используется как кортеж)."

#: ../../c-api/tuple.rst:179
msgid ""
"Describes a field of a struct sequence. As a struct sequence is modeled as a "
"tuple, all fields are typed as :c:expr:`PyObject*`.  The index in the :c:"
"member:`~PyStructSequence_Desc.fields` array of the :c:type:"
"`PyStructSequence_Desc` determines which field of the struct sequence is "
"described."
msgstr ""
"Описывает поле последовательности структуры. Поскольку последовательность "
"структур моделируется как кортеж, все поля имеют тип :c:expr:` PyObject *`. "
"Индекс в массиве :c:member:`~PyStructSequence_Desc.fields` :c:type:"
"`PyStructSequence_Desc` определяет, какое поле последовательности структур "
"описывается."

#: ../../c-api/tuple.rst:187
msgid ""
"Name for the field or ``NULL`` to end the list of named fields, set to :c:"
"data:`PyStructSequence_UnnamedField` to leave unnamed."
msgstr ""
"Имя поля или ``NULL``, чтобы завершить список именованных полей, установите "
"значение :c:data:`PyStructSequence_UnnamedField`, чтобы оставить безымянным."

#: ../../c-api/tuple.rst:192
msgid "Field docstring or ``NULL`` to omit."
msgstr "Поле документации или ``NULL``, чтобы его опустить."

#: ../../c-api/tuple.rst:197
msgid "Special value for a field name to leave it unnamed."
msgstr "Специальное значение для имени поля, чтобы оставить его без имени."

#: ../../c-api/tuple.rst:199
msgid "The type was changed from ``char *``."
msgstr "Тип был изменен с ``char *``."

#: ../../c-api/tuple.rst:205
msgid ""
"Creates an instance of *type*, which must have been created with :c:func:"
"`PyStructSequence_NewType`."
msgstr ""
"Создает экземпляр *type*, который должен быть создан с помощью :c:func:"
"`PyStructSequence_NewType`."

#: ../../c-api/tuple.rst:213
msgid ""
"Return the object at position *pos* in the struct sequence pointed to by "
"*p*. No bounds checking is performed."
msgstr ""
"Верните объект в позиции *pos* в последовательности структур, на которую "
"указывает *p*. Проверка границ не выполняется."

#: ../../c-api/tuple.rst:219
msgid "Macro equivalent of :c:func:`PyStructSequence_GetItem`."
msgstr "Макрос-эквивалент :c:func:`PyStructSequence_GetItem`."

#: ../../c-api/tuple.rst:224
msgid ""
"Sets the field at index *pos* of the struct sequence *p* to value *o*.  "
"Like :c:func:`PyTuple_SET_ITEM`, this should only be used to fill in brand "
"new instances."
msgstr ""
"Устанавливает поле с индексом *pos* последовательности структур *p* в "
"значение *o*. Как и :c:func:`PyTuple_SET_ITEM`, его следует использовать "
"только для заполнения совершенно новых экземпляров."

#: ../../c-api/tuple.rst:230 ../../c-api/tuple.rst:240
msgid "This function \"steals\" a reference to *o*."
msgstr "Эта функция «крадет» ссылку на *o*."

#: ../../c-api/tuple.rst:235
msgid ""
"Similar to :c:func:`PyStructSequence_SetItem`, but implemented as a static "
"inlined function."
msgstr ""
"Похож на :c:func:`PyStructSequence_SetItem`, но реализован как статическая "
"встроенная функция."

#: ../../c-api/tuple.rst:8
msgid "object"
msgstr "объект"

#: ../../c-api/tuple.rst:8
msgid "tuple"
msgstr "кортеж"
