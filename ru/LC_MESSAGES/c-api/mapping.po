# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# Jon Britva, 2023
# Rafael Fontenelle <rffontenelle@gmail.com>, 2024
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.11\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-01-03 15:28+0000\n"
"PO-Revision-Date: 2023-05-24 02:09+0000\n"
"Last-Translator: Rafael Fontenelle <rffontenelle@gmail.com>, 2024\n"
"Language-Team: Russian (https://app.transifex.com/python-doc/teams/5390/"
"ru/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ru\n"
"Plural-Forms: nplurals=4; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && "
"n%10<=4 && (n%100<12 || n%100>14) ? 1 : n%10==0 || (n%10>=5 && n%10<=9) || "
"(n%100>=11 && n%100<=14)? 2 : 3);\n"

#: ../../c-api/mapping.rst:6
msgid "Mapping Protocol"
msgstr "Протокол сопоставления"

#: ../../c-api/mapping.rst:8
msgid ""
"See also :c:func:`PyObject_GetItem`, :c:func:`PyObject_SetItem` and :c:func:"
"`PyObject_DelItem`."
msgstr ""
"См. также :c:func:` PyObj ect_GetItem`, :c:func:` PyObj ect_SetItem` и :c:"
"func:` PyObj ect_DelItem`."

#: ../../c-api/mapping.rst:14
msgid ""
"Return ``1`` if the object provides the mapping protocol or supports "
"slicing, and ``0`` otherwise.  Note that it returns ``1`` for Python classes "
"with a :meth:`~object.__getitem__` method, since in general it is impossible "
"to determine what type of keys the class supports. This function always "
"succeeds."
msgstr ""
"Возвращайте ``1``, если объект предоставляет протокол сопоставления или "
"поддерживает нарезку, и ``0`` в противном случае. Обратите внимание, что он "
"возвращает ``1`` для классов Python с помощью метода :meth:`~object."
"__getitem__`, поскольку в целом невозможно определить, какой тип ключей "
"поддерживает класс. Эта функция всегда завершается успешно."

#: ../../c-api/mapping.rst:25
msgid ""
"Returns the number of keys in object *o* on success, and ``-1`` on failure. "
"This is equivalent to the Python expression ``len(o)``."
msgstr ""
"Возвращает количество ключей в объекте *o* в случае успеха и ``-1`` в случае "
"неудачи. Это эквивалентно выражению Python ``len(o)``."

#: ../../c-api/mapping.rst:31
msgid ""
"This is the same as :c:func:`PyObject_GetItem`, but *key* is specified as a :"
"c:expr:`const char*` UTF-8 encoded bytes string, rather than a :c:expr:"
"`PyObject*`."
msgstr ""
"Это то же самое, что и :c:func:` PyObj ect_GetItem`, но *key* указывается "
"как :c:expr:`const char*` строка байтов в кодировке UTF-8, а не как :c:expr:"
"` PyObj т. д. *`."

#: ../../c-api/mapping.rst:38
msgid ""
"This is the same as :c:func:`PyObject_SetItem`, but *key* is specified as a :"
"c:expr:`const char*` UTF-8 encoded bytes string, rather than a :c:expr:"
"`PyObject*`."
msgstr ""
"Это то же самое, что и :c:func:` PyObj ect_SetItem`, но *key* указывается "
"как :c:expr:`const char*` строка байтов в кодировке UTF-8, а не как :c:expr:"
"` PyObj т. д. *`."

#: ../../c-api/mapping.rst:45
msgid "This is an alias of :c:func:`PyObject_DelItem`."
msgstr "Это псевдоним :c:func:` PyObj ect_DelItem`."

#: ../../c-api/mapping.rst:50
msgid ""
"This is the same as :c:func:`PyObject_DelItem`, but *key* is specified as a :"
"c:expr:`const char*` UTF-8 encoded bytes string, rather than a :c:expr:"
"`PyObject*`."
msgstr ""
"Это то же самое, что и :c:func:` PyObj ect_DelItem`, но *key* указывается "
"как :c:expr:`const char*` строка байтов в кодировке UTF-8, а не как :c:expr:"
"` PyObj т. д. *`."

#: ../../c-api/mapping.rst:57
msgid ""
"Return ``1`` if the mapping object has the key *key* and ``0`` otherwise. "
"This is equivalent to the Python expression ``key in o``. This function "
"always succeeds."
msgstr ""
"Возвращайте ``1``, если объект сопоставления имеет ключ *key*, и ``0`` в "
"противном случае. Это эквивалентно выражению Python ``key in o``. Эта "
"функция всегда завершается успешно."

#: ../../c-api/mapping.rst:63
msgid ""
"Exceptions which occur when this calls :meth:`~object.__getitem__` method "
"are silently ignored. For proper error handling, use :c:func:"
"`PyObject_GetItem()` instead."
msgstr ""
"Исключения, возникающие при вызове метода :meth:`~object.__getitem__`, "
"игнорируются. Для правильной обработки ошибок используйте вместо этого :c:"
"func:`PyObject_GetItem()`."

#: ../../c-api/mapping.rst:70
msgid ""
"This is the same as :c:func:`PyMapping_HasKey`, but *key* is specified as a :"
"c:expr:`const char*` UTF-8 encoded bytes string, rather than a :c:expr:"
"`PyObject*`."
msgstr ""
"Это то же самое, что и :c:func:`PyMapping_HasKey`, но *key* указывается как :"
"c:expr:`const char*` строка байтов в кодировке UTF-8, а не как :c:expr:` "
"PyObject . *`."

#: ../../c-api/mapping.rst:76
msgid ""
"Exceptions that occur when this calls :meth:`~object.__getitem__` method or "
"while creating the temporary :class:`str` object are silently ignored. For "
"proper error handling, use :c:func:`PyMapping_GetItemString` instead."
msgstr ""
"Исключения, возникающие при вызове метода :meth:`~object.__getitem__` или "
"при создании временного объекта :class:`str`, молча игнорируются. Для "
"правильной обработки ошибок используйте вместо этого :c:func:"
"`PyMapping_GetItemString`."

#: ../../c-api/mapping.rst:84
msgid ""
"On success, return a list of the keys in object *o*.  On failure, return "
"``NULL``."
msgstr ""
"В случае успеха вернуть список ключей в объекте *o*. В случае неудачи "
"верните ``NULL``."

#: ../../c-api/mapping.rst:87 ../../c-api/mapping.rst:96
#: ../../c-api/mapping.rst:105
msgid "Previously, the function returned a list or a tuple."
msgstr "Раньше функция возвращала список или кортеж."

#: ../../c-api/mapping.rst:93
msgid ""
"On success, return a list of the values in object *o*.  On failure, return "
"``NULL``."
msgstr ""
"В случае успеха верните список значений объекта *o*. В случае неудачи "
"верните ``NULL``."

#: ../../c-api/mapping.rst:102
msgid ""
"On success, return a list of the items in object *o*, where each item is a "
"tuple containing a key-value pair.  On failure, return ``NULL``."
msgstr ""
"В случае успеха верните список элементов в объекте *o*, где каждый элемент "
"представляет собой кортеж, содержащий пару ключ-значение. В случае неудачи "
"верните ``NULL``."

#: ../../c-api/mapping.rst:23
msgid "built-in function"
msgstr "встроенная функция"

#: ../../c-api/mapping.rst:23
msgid "len"
msgstr "len"
