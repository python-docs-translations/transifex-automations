# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# Rafael Fontenelle <rffontenelle@gmail.com>, 2024
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.10\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-01-10 16:06+0000\n"
"PO-Revision-Date: 2022-11-05 17:21+0000\n"
"Last-Translator: Rafael Fontenelle <rffontenelle@gmail.com>, 2024\n"
"Language-Team: Russian (https://app.transifex.com/python-doc/teams/5390/"
"ru/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ru\n"
"Plural-Forms: nplurals=4; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && "
"n%10<=4 && (n%100<12 || n%100>14) ? 1 : n%10==0 || (n%10>=5 && n%10<=9) || "
"(n%100>=11 && n%100<=14)? 2 : 3);\n"

#: ../../c-api/codec.rst:4
msgid "Codec registry and support functions"
msgstr "Реестр кодеков и функции поддержки"

#: ../../c-api/codec.rst:8
msgid "Register a new codec search function."
msgstr "Зарегистрируйте новую функцию поиска кодека."

#: ../../c-api/codec.rst:10
msgid ""
"As side effect, this tries to load the :mod:`encodings` package, if not yet "
"done, to make sure that it is always first in the list of search functions."
msgstr ""

#: ../../c-api/codec.rst:15
msgid ""
"Unregister a codec search function and clear the registry's cache. If the "
"search function is not registered, do nothing. Return 0 on success. Raise an "
"exception and return -1 on error."
msgstr ""
"Отмените регистрацию функции поиска кодеков и очистите кеш реестра. Если "
"функция поиска не зарегистрирована, ничего не делайте. Вернуть 0 в случае "
"успеха. Вызывайте исключение и возвращайте -1 в случае ошибки."

#: ../../c-api/codec.rst:23
msgid ""
"Return ``1`` or ``0`` depending on whether there is a registered codec for "
"the given *encoding*.  This function always succeeds."
msgstr ""
"Возвращает ``1`` или ``0`` в зависимости от того, существует ли "
"зарегистрированный кодек для данной *кодировки*. Эта функция всегда "
"завершается успешно."

#: ../../c-api/codec.rst:28
msgid "Generic codec based encoding API."
msgstr "Общий API кодирования на основе кодека."

#: ../../c-api/codec.rst:30
msgid ""
"*object* is passed through the encoder function found for the given "
"*encoding* using the error handling method defined by *errors*.  *errors* "
"may be ``NULL`` to use the default method defined for the codec.  Raises a :"
"exc:`LookupError` if no encoder can be found."
msgstr ""
"*объект* передается через функцию кодировщика, найденную для данной "
"*кодировки*, с использованием метода обработки ошибок, определенного "
"*errors*. *errors* может иметь значение ``NULL``, чтобы использовать метод "
"по умолчанию, определенный для кодека. Вызывает :exc:`LookupError`, если "
"кодировщик не найден."

#: ../../c-api/codec.rst:37
msgid "Generic codec based decoding API."
msgstr "Общий API декодирования на основе кодека."

#: ../../c-api/codec.rst:39
msgid ""
"*object* is passed through the decoder function found for the given "
"*encoding* using the error handling method defined by *errors*.  *errors* "
"may be ``NULL`` to use the default method defined for the codec.  Raises a :"
"exc:`LookupError` if no encoder can be found."
msgstr ""
"*объект* передается через функцию декодера, найденную для данной "
"*кодировки*, с использованием метода обработки ошибок, определенного "
"*errors*. *errors* может иметь значение ``NULL``, чтобы использовать метод "
"по умолчанию, определенный для кодека. Вызывает :exc:`LookupError`, если "
"кодировщик не найден."

#: ../../c-api/codec.rst:46
msgid "Codec lookup API"
msgstr "API поиска кодеков"

#: ../../c-api/codec.rst:48
msgid ""
"In the following functions, the *encoding* string is looked up converted to "
"all lower-case characters, which makes encodings looked up through this "
"mechanism effectively case-insensitive.  If no codec is found, a :exc:"
"`KeyError` is set and ``NULL`` returned."
msgstr ""
"В следующих функциях строка *encoding* ищется и преобразуется во все символы "
"нижнего регистра, что делает кодировки, просматриваемые с помощью этого "
"механизма, фактически нечувствительными к регистру. Если кодек не найден, "
"устанавливается :exc:`KeyError` и возвращается ``NULL``."

#: ../../c-api/codec.rst:55
msgid "Get an encoder function for the given *encoding*."
msgstr "Получите функцию кодировщика для данной *кодировки*."

#: ../../c-api/codec.rst:59
msgid "Get a decoder function for the given *encoding*."
msgstr "Получите функцию декодера для данной *кодировки*."

#: ../../c-api/codec.rst:63
msgid ""
"Get an :class:`~codecs.IncrementalEncoder` object for the given *encoding*."
msgstr ""
"Получите объект :class:`~codecs.IncrementalEncoder` для заданной *кодировки*."

#: ../../c-api/codec.rst:67
msgid ""
"Get an :class:`~codecs.IncrementalDecoder` object for the given *encoding*."
msgstr ""
"Получите объект :class:`~codecs.IncrementalDecoder` для заданной *кодировки*."

#: ../../c-api/codec.rst:71
msgid ""
"Get a :class:`~codecs.StreamReader` factory function for the given "
"*encoding*."
msgstr ""
"Получите фабричную функцию :class:`~codecs.StreamReader` для заданной "
"*кодировки*."

#: ../../c-api/codec.rst:75
msgid ""
"Get a :class:`~codecs.StreamWriter` factory function for the given "
"*encoding*."
msgstr ""
"Получите фабричную функцию :class:`~codecs.StreamWriter` для заданной "
"*кодировки*."

#: ../../c-api/codec.rst:79
msgid "Registry API for Unicode encoding error handlers"
msgstr "API реестра для обработчиков ошибок кодировки Unicode"

#: ../../c-api/codec.rst:83
msgid ""
"Register the error handling callback function *error* under the given "
"*name*. This callback function will be called by a codec when it encounters "
"unencodable characters/undecodable bytes and *name* is specified as the "
"error parameter in the call to the encode/decode function."
msgstr ""
"Зарегистрируйте функцию обратного вызова обработки ошибок *error* под "
"заданным *name*. Эта функция обратного вызова будет вызываться кодеком, "
"когда он встретит некодируемые символы/некодируемые байты, а *name* указано "
"в качестве параметра ошибки при вызове encode/. функция декодирования."

#: ../../c-api/codec.rst:88
msgid ""
"The callback gets a single argument, an instance of :exc:"
"`UnicodeEncodeError`, :exc:`UnicodeDecodeError` or :exc:"
"`UnicodeTranslateError` that holds information about the problematic "
"sequence of characters or bytes and their offset in the original string "
"(see :ref:`unicodeexceptions` for functions to extract this information).  "
"The callback must either raise the given exception, or return a two-item "
"tuple containing the replacement for the problematic sequence, and an "
"integer giving the offset in the original string at which encoding/decoding "
"should be resumed."
msgstr ""
"Обратный вызов получает один аргумент, экземпляр :exc:`UnicodeEncodeError`, :"
"exc:`UnicodeDecodeError` или :exc:`UnicodeTranslateError`, который содержит "
"информацию о проблемной последовательности символов или байтов и их смещении "
"в исходной строке (см. :ref:`unicodeExceptions` для функций для извлечения "
"этой информации). Обратный вызов должен либо вызвать данное исключение, либо "
"вернуть кортеж из двух элементов, содержащий замену проблемной "
"последовательности, и целое число, указывающее смещение в исходной строке, с "
"которого следует возобновить кодирование/декодирование."

#: ../../c-api/codec.rst:98
msgid "Return ``0`` on success, ``-1`` on error."
msgstr "Возвращает ``0`` в случае успеха, ``-1`` в случае ошибки."

#: ../../c-api/codec.rst:102
msgid ""
"Lookup the error handling callback function registered under *name*.  As a "
"special case ``NULL`` can be passed, in which case the error handling "
"callback for \"strict\" will be returned."
msgstr ""
"Найдите функцию обратного вызова обработки ошибок, зарегистрированную под "
"*name*. В особом случае можно передать NULL, и в этом случае будет возвращен "
"обратный вызов для обработки ошибок для «строгого»."

#: ../../c-api/codec.rst:108
msgid "Raise *exc* as an exception."
msgstr "Поднимите *exc* как исключение."

#: ../../c-api/codec.rst:112
msgid "Ignore the unicode error, skipping the faulty input."
msgstr "Игнорируйте ошибку Юникода, пропуская ошибочный ввод."

#: ../../c-api/codec.rst:116
msgid "Replace the unicode encode error with ``?`` or ``U+FFFD``."
msgstr "Замените ошибку кодировки Юникода на ``?`` или ``U+FFFD``."

#: ../../c-api/codec.rst:120
msgid "Replace the unicode encode error with XML character references."
msgstr "Замените ошибку кодировки Юникода ссылками на символы XML."

#: ../../c-api/codec.rst:124
msgid ""
"Replace the unicode encode error with backslash escapes (``\\x``, ``\\u`` "
"and ``\\U``)."
msgstr ""
"Замените ошибку кодирования Юникода на обратную косую черту (``\\x``, "
"``\\u`` и ``\\U``)."

#: ../../c-api/codec.rst:129
msgid "Replace the unicode encode error with ``\\N{...}`` escapes."
msgstr "Замените ошибку кодирования Юникода на escape-символы ``\\N{...}``."
