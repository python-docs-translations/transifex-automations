# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# Rafael Fontenelle <rffontenelle@gmail.com>, 2024
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.10\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-01-10 16:06+0000\n"
"PO-Revision-Date: 2022-11-05 17:21+0000\n"
"Last-Translator: Rafael Fontenelle <rffontenelle@gmail.com>, 2024\n"
"Language-Team: Russian (https://app.transifex.com/python-doc/teams/5390/"
"ru/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ru\n"
"Plural-Forms: nplurals=4; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && "
"n%10<=4 && (n%100<12 || n%100>14) ? 1 : n%10==0 || (n%10>=5 && n%10<=9) || "
"(n%100>=11 && n%100<=14)? 2 : 3);\n"

#: ../../c-api/contextvars.rst:6
msgid "Context Variables Objects"
msgstr "Объекты контекстных переменных"

#: ../../c-api/contextvars.rst:13
msgid ""
"In Python 3.7.1 the signatures of all context variables C APIs were "
"**changed** to use :c:type:`PyObject` pointers instead of :c:type:"
"`PyContext`, :c:type:`PyContextVar`, and :c:type:`PyContextToken`, e.g.::"
msgstr ""
"В Python 3.7.1 сигнатуры всех контекстных переменных C API были **изменены** "
"для использования указателей :c:type:` PyObj ect` вместо :c:type:"
"`PyContext`, :c:type:`PyContextVar` и :c:type:`PyContextToken`, например::"

#: ../../c-api/contextvars.rst:24
msgid "See :issue:`34762` for more details."
msgstr "Дополнительную информацию см. в :issue:`34762`."

#: ../../c-api/contextvars.rst:29
msgid ""
"This section details the public C API for the :mod:`contextvars` module."
msgstr "модуля :mod:`contextvars`. "

#: ../../c-api/contextvars.rst:33
msgid ""
"The C structure used to represent a :class:`contextvars.Context` object."
msgstr ""
"Структура C, используемая для представления объекта :class:`contextvars."
"Context`."

#: ../../c-api/contextvars.rst:38
msgid ""
"The C structure used to represent a :class:`contextvars.ContextVar` object."
msgstr ""
"Структура C, используемая для представления объекта :class:`contextvars."
"ContextVar`."

#: ../../c-api/contextvars.rst:43
msgid "The C structure used to represent a :class:`contextvars.Token` object."
msgstr ""
"Структура C, используемая для представления объекта :class:`contextvars."
"Token`."

#: ../../c-api/contextvars.rst:47
msgid "The type object representing the *context* type."
msgstr "Объект типа представляет тип *context*."

#: ../../c-api/contextvars.rst:51
msgid "The type object representing the *context variable* type."
msgstr "Объект типа представляет тип *переменная контекста*."

#: ../../c-api/contextvars.rst:55
msgid "The type object representing the *context variable token* type."
msgstr "Объект типа представляет тип *токена переменной контекста*."

#: ../../c-api/contextvars.rst:58
msgid "Type-check macros:"
msgstr "Макросы для проверки типа:"

#: ../../c-api/contextvars.rst:62
msgid ""
"Return true if *o* is of type :c:data:`PyContext_Type`. *o* must not be "
"``NULL``.  This function always succeeds."
msgstr ""
"Возвращайте true, если *o* имеет тип :c:data:`PyContext_Type`. *o* не должно "
"быть ``NULL``. Эта функция всегда завершается успешно."

#: ../../c-api/contextvars.rst:67
msgid ""
"Return true if *o* is of type :c:data:`PyContextVar_Type`. *o* must not be "
"``NULL``.  This function always succeeds."
msgstr ""
"Возвращайте true, если *o* имеет тип :c:data:`PyContextVar_Type`. *o* не "
"должно быть ``NULL``. Эта функция всегда завершается успешно."

#: ../../c-api/contextvars.rst:72
msgid ""
"Return true if *o* is of type :c:data:`PyContextToken_Type`. *o* must not be "
"``NULL``.  This function always succeeds."
msgstr ""
"Возвращайте true, если *o* имеет тип :c:data:`PyContextToken_Type`. *o* не "
"должно быть ``NULL``. Эта функция всегда завершается успешно."

#: ../../c-api/contextvars.rst:76
msgid "Context object management functions:"
msgstr "Функции управления контекстными объектами:"

#: ../../c-api/contextvars.rst:80
msgid ""
"Create a new empty context object.  Returns ``NULL`` if an error has "
"occurred."
msgstr ""
"Создайте новый пустой объект контекста. Возвращает ``NULL``, если произошла "
"ошибка."

#: ../../c-api/contextvars.rst:85
msgid ""
"Create a shallow copy of the passed *ctx* context object. Returns ``NULL`` "
"if an error has occurred."
msgstr ""
"Создайте неглубокую копию переданного объекта контекста *ctx*. Возвращает "
"``NULL``, если произошла ошибка."

#: ../../c-api/contextvars.rst:90
msgid ""
"Create a shallow copy of the current thread context. Returns ``NULL`` if an "
"error has occurred."
msgstr ""
"Создайте неполную копию текущего контекста потока. Возвращает ``NULL``, если "
"произошла ошибка."

#: ../../c-api/contextvars.rst:95
msgid ""
"Set *ctx* as the current context for the current thread. Returns ``0`` on "
"success, and ``-1`` on error."
msgstr ""
"Установите *ctx* в качестве текущего контекста для текущего потока. "
"Возвращает ``0`` в случае успеха и ``-1`` в случае ошибки."

#: ../../c-api/contextvars.rst:100
msgid ""
"Deactivate the *ctx* context and restore the previous context as the current "
"context for the current thread.  Returns ``0`` on success, and ``-1`` on "
"error."
msgstr ""
"Деактивируйте контекст *ctx* и восстановите предыдущий контекст в качестве "
"текущего контекста для текущего потока. Возвращает ``0`` в случае успеха и "
"``-1`` в случае ошибки."

#: ../../c-api/contextvars.rst:105
msgid "Context variable functions:"
msgstr "Функции контекстных переменных:"

#: ../../c-api/contextvars.rst:109
msgid ""
"Create a new ``ContextVar`` object.  The *name* parameter is used for "
"introspection and debug purposes.  The *def* parameter specifies a default "
"value for the context variable, or ``NULL`` for no default. If an error has "
"occurred, this function returns ``NULL``."
msgstr ""
"Создайте новый объект ContextVar. Параметр *name* используется для целей "
"самоанализа и отладки. Параметр *def* указывает значение по умолчанию для "
"переменной контекста или ``NULL``, если значение по умолчанию отсутствует. "
"Если произошла ошибка, эта функция возвращает ``NULL``."

#: ../../c-api/contextvars.rst:116
msgid ""
"Get the value of a context variable.  Returns ``-1`` if an error has "
"occurred during lookup, and ``0`` if no error occurred, whether or not a "
"value was found."
msgstr ""
"Получите значение контекстной переменной. Возвращает ``-1``, если во время "
"поиска произошла ошибка, и ``0``, если ошибок не произошло, независимо от "
"того, было ли найдено значение."

#: ../../c-api/contextvars.rst:120
msgid ""
"If the context variable was found, *value* will be a pointer to it. If the "
"context variable was *not* found, *value* will point to:"
msgstr ""
"Если переменная контекста была найдена, *value* будет указателем на нее. "
"Если переменная контекста *не* найдена, *value* будет указывать на:"

#: ../../c-api/contextvars.rst:123
msgid "*default_value*, if not ``NULL``;"
msgstr "*default_value*, если не ``NULL``;"

#: ../../c-api/contextvars.rst:124
msgid "the default value of *var*, if not ``NULL``;"
msgstr "значение по умолчанию *var*, если нет ``NULL``; "

#: ../../c-api/contextvars.rst:125
msgid "``NULL``"
msgstr "``NULL``"

#: ../../c-api/contextvars.rst:127
msgid "Except for ``NULL``, the function returns a new reference."
msgstr "За исключением ``NULL``, функция возвращает новую ссылку."

#: ../../c-api/contextvars.rst:131
msgid ""
"Set the value of *var* to *value* in the current context.  Returns a new "
"token object for this change, or ``NULL`` if an error has occurred."
msgstr ""
"Установите значение *var* на *value* в текущем контексте. Возвращает новый "
"объект токена для этого изменения или NULL, если произошла ошибка."

#: ../../c-api/contextvars.rst:136
msgid ""
"Reset the state of the *var* context variable to that it was in before :c:"
"func:`PyContextVar_Set` that returned the *token* was called. This function "
"returns ``0`` on success and ``-1`` on error."
msgstr ""
"Сбросьте состояние контекстной переменной *var* до того состояния, в котором "
"она была до вызова :c:func:`PyContextVar_Set`, который вернул *токен*. Эта "
"функция возвращает ``0`` в случае успеха и ``-1`` в случае ошибки."
