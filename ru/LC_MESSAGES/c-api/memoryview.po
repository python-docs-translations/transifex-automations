# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# Rafael Fontenelle <rffontenelle@gmail.com>, 2024
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.12\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-01-17 14:51+0000\n"
"PO-Revision-Date: 2024-05-11 00:32+0000\n"
"Last-Translator: Rafael Fontenelle <rffontenelle@gmail.com>, 2024\n"
"Language-Team: Russian (https://app.transifex.com/python-doc/teams/5390/"
"ru/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ru\n"
"Plural-Forms: nplurals=4; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && "
"n%10<=4 && (n%100<12 || n%100>14) ? 1 : n%10==0 || (n%10>=5 && n%10<=9) || "
"(n%100>=11 && n%100<=14)? 2 : 3);\n"

#: ../../c-api/memoryview.rst:9
msgid "MemoryView objects"
msgstr "Объекты MemoryView"

#: ../../c-api/memoryview.rst:11
msgid ""
"A :class:`memoryview` object exposes the C level :ref:`buffer interface "
"<bufferobjects>` as a Python object which can then be passed around like any "
"other object."
msgstr ""
"Объект :class:`memoryview` предоставляет :ref:`buffer интерфейс "
"<bufferobjects>` уровня C как объект Python, который затем можно передавать "
"как любой другой объект."

#: ../../c-api/memoryview.rst:18
msgid ""
"Create a memoryview object from an object that provides the buffer "
"interface. If *obj* supports writable buffer exports, the memoryview object "
"will be read/write, otherwise it may be either read-only or read/write at "
"the discretion of the exporter."
msgstr ""
"Создайте объект MemoryView из объекта, который предоставляет интерфейс "
"буфера. Если *obj* поддерживает экспорт записываемого буфера, объект "
"MemoryView будет доступен для чтения/записи, в противном случае он может "
"быть доступен либо только для чтения, либо для чтения/записи по усмотрению "
"экспортера."

#: ../../c-api/memoryview.rst:26
msgid "Flag to request a readonly buffer."
msgstr "Флаг для запроса буфера только для чтения."

#: ../../c-api/memoryview.rst:31
msgid "Flag to request a writable buffer."
msgstr "Флаг запроса записываемого буфера."

#: ../../c-api/memoryview.rst:36
msgid ""
"Create a memoryview object using *mem* as the underlying buffer. *flags* can "
"be one of :c:macro:`PyBUF_READ` or :c:macro:`PyBUF_WRITE`."
msgstr ""
"Создайте объект MemoryView, используя *mem* в качестве базового буфера. "
"*flags* может быть одним из :c:macro:`PyBUF_READ` или :c:macro:`PyBUF_WRITE`."

#: ../../c-api/memoryview.rst:43
msgid ""
"Create a memoryview object wrapping the given buffer structure *view*. For "
"simple byte buffers, :c:func:`PyMemoryView_FromMemory` is the preferred "
"function."
msgstr ""
"Создайте объект MemoryView, обертывающий данную структуру буфера *view*. Для "
"простых байтовых буферов предпочтительной функцией является :c:func:"
"`PyMemoryView_FromMemory`."

#: ../../c-api/memoryview.rst:49
msgid ""
"Create a memoryview object to a :term:`contiguous` chunk of memory (in "
"either 'C' or 'F'ortran *order*) from an object that defines the buffer "
"interface. If memory is contiguous, the memoryview object points to the "
"original memory. Otherwise, a copy is made and the memoryview points to a "
"new bytes object."
msgstr ""
"Создайте объект MemoryView, обертывающий данную структуру буфера *view*. Для "
"простых байтовых буферов предпочтительной функцией является :c:func:"
"`PyMemoryView_FromMemory`."

#: ../../c-api/memoryview.rst:55
msgid ""
"*buffertype* can be one of :c:macro:`PyBUF_READ` or :c:macro:`PyBUF_WRITE`."
msgstr ""
"*buffertype* может быть одним из :c:macro:`PyBUF_READ` или :c:macro:"
"`PyBUF_WRITE`."

#: ../../c-api/memoryview.rst:60
msgid ""
"Return true if the object *obj* is a memoryview object.  It is not currently "
"allowed to create subclasses of :class:`memoryview`.  This function always "
"succeeds."
msgstr ""
"Возвращайте true, если объект *obj* является объектом вида памяти. В "
"настоящее время не разрешено создавать подклассы :class:`memoryview`. Эта "
"функция всегда завершается успешно."

#: ../../c-api/memoryview.rst:67
msgid ""
"Return a pointer to the memoryview's private copy of the exporter's buffer. "
"*mview* **must** be a memoryview instance; this macro doesn't check its "
"type, you must do it yourself or you will risk crashes."
msgstr ""
"Верните указатель на частную копию буфера экспортера в MemoryView. *mview* "
"**должен** быть экземпляром MemoryView; этот макрос не проверяет свой тип, "
"вы должны сделать это самостоятельно, иначе возникнет риск сбоя."

#: ../../c-api/memoryview.rst:73
msgid ""
"Return either a pointer to the exporting object that the memoryview is based "
"on or ``NULL`` if the memoryview has been created by one of the functions :c:"
"func:`PyMemoryView_FromMemory` or :c:func:`PyMemoryView_FromBuffer`. *mview* "
"**must** be a memoryview instance."
msgstr ""
"Возвращает либо указатель на экспортируемый объект, на котором основано "
"представление памяти, либо NULL, если представление памяти было создано "
"одной из функций :c:func:`PyMemoryView_FromMemory` или :c:func:"
"`PyMemoryView_FromBuffer`. *mview* **должен** быть экземпляром MemoryView."

#: ../../c-api/memoryview.rst:5
msgid "object"
msgstr "объект"

#: ../../c-api/memoryview.rst:5
msgid "memoryview"
msgstr "memoryview"
