# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# Rafael Fontenelle <rffontenelle@gmail.com>, 2024
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.11\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-01-03 15:28+0000\n"
"PO-Revision-Date: 2023-05-24 02:09+0000\n"
"Last-Translator: Rafael Fontenelle <rffontenelle@gmail.com>, 2024\n"
"Language-Team: Russian (https://app.transifex.com/python-doc/teams/5390/"
"ru/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ru\n"
"Plural-Forms: nplurals=4; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && "
"n%10<=4 && (n%100<12 || n%100>14) ? 1 : n%10==0 || (n%10>=5 && n%10<=9) || "
"(n%100>=11 && n%100<=14)? 2 : 3);\n"

#: ../../c-api/stable.rst:7
msgid "C API Stability"
msgstr "Стабильность C API"

#: ../../c-api/stable.rst:9
msgid ""
"Python's C API is covered by the Backwards Compatibility Policy, :pep:`387`. "
"While the C API will change with every minor release (e.g. from 3.9 to "
"3.10), most changes will be source-compatible, typically by only adding new "
"API. Changing existing API or removing API is only done after a deprecation "
"period or to fix serious issues."
msgstr ""

#: ../../c-api/stable.rst:15
msgid ""
"CPython's Application Binary Interface (ABI) is forward- and backwards-"
"compatible across a minor release (if these are compiled the same way; see :"
"ref:`stable-abi-platform` below). So, code compiled for Python 3.10.0 will "
"work on 3.10.8 and vice versa, but will need to be compiled separately for "
"3.9.x and 3.11.x."
msgstr ""
"Двоичный интерфейс приложения (ABI) CPython совместим как вперед, так и "
"назад во всех второстепенных выпусках (если они скомпилированы одинаково; "
"см. :ref:`stable-abi-platform` ниже). Итак, код, скомпилированный для Python "
"3.10.0, будет работать на 3.10.8 и наоборот, но для 3.9.x и 3.11.x его нужно "
"будет компилировать отдельно."

#: ../../c-api/stable.rst:21
msgid ""
"Names prefixed by an underscore, such as ``_Py_InternalState``, are private "
"API that can change without notice even in patch releases."
msgstr ""

#: ../../c-api/stable.rst:26
msgid "Stable Application Binary Interface"
msgstr "Стабильный двоичный интерфейс приложения"

#: ../../c-api/stable.rst:28
msgid ""
"For simplicity, this document talks about *extensions*, but the Limited API "
"and Stable ABI work the same way for all uses of the API – for example, "
"embedding Python."
msgstr ""
"Для простоты в этом документе говорится о *расширениях*, но ограниченный API "
"и стабильный ABI работают одинаково для всех случаев использования API — "
"например, при внедрении Python."

#: ../../c-api/stable.rst:35
msgid "Limited C API"
msgstr "Ограниченный API C"

#: ../../c-api/stable.rst:37
msgid ""
"Python 3.2 introduced the *Limited API*, a subset of Python's C API. "
"Extensions that only use the Limited API can be compiled once and work with "
"multiple versions of Python. Contents of the Limited API are :ref:`listed "
"below <limited-api-list>`."
msgstr ""
"В Python 3.2 появился *Limited API*, подмножество Python C API. Расширения, "
"использующие только ограниченный API, могут быть скомпилированы один раз и "
"работать с несколькими версиями Python. Содержимое Limited API :ref:"
"`перечислено ниже <limited-api-list>`."

#: ../../c-api/stable.rst:44
msgid ""
"Define this macro before including ``Python.h`` to opt in to only use the "
"Limited API, and to select the Limited API version."
msgstr ""
"Определите этот макрос перед включением Python.h, чтобы разрешить "
"использование только ограниченного API и выбрать версию ограниченного API."

#: ../../c-api/stable.rst:47
msgid ""
"Define ``Py_LIMITED_API`` to the value of :c:macro:`PY_VERSION_HEX` "
"corresponding to the lowest Python version your extension supports. The "
"extension will work without recompilation with all Python 3 releases from "
"the specified one onward, and can use Limited API introduced up to that "
"version."
msgstr ""
"Определите для ``Py_LIMITED_API`` значение :c:macro:`PY_VERSION_HEX`, "
"соответствующее самой низкой версии Python, которую поддерживает ваше "
"расширение. Расширение будет работать без перекомпиляции со всеми выпусками "
"Python 3, начиная с указанного, и может использовать ограниченный API, "
"представленный до этой версии."

#: ../../c-api/stable.rst:53
msgid ""
"Rather than using the ``PY_VERSION_HEX`` macro directly, hardcode a minimum "
"minor version (e.g. ``0x030A0000`` for Python 3.10) for stability when "
"compiling with future Python versions."
msgstr ""
"Вместо того, чтобы использовать макрос PY_VERSION_HEX напрямую, жестко "
"закодируйте минимальную младшую версию (например, 0x030A0000 для Python "
"3.10) для стабильности при компиляции с будущими версиями Python."

#: ../../c-api/stable.rst:57
msgid ""
"You can also define ``Py_LIMITED_API`` to ``3``. This works the same as "
"``0x03020000`` (Python 3.2, the version that introduced Limited API)."
msgstr ""
"Вы также можете определить для ``Py_LIMITED_API`` значение ``3``. Это "
"работает так же, как 0x03020000 (Python 3.2, версия, в которой представлен "
"ограниченный API)."

#: ../../c-api/stable.rst:64
msgid "Stable ABI"
msgstr "Стабильный ABI"

#: ../../c-api/stable.rst:66
msgid ""
"To enable this, Python provides a *Stable ABI*: a set of symbols that will "
"remain compatible across Python 3.x versions."
msgstr ""
"Для этого Python предоставляет *Стабильный ABI*: набор символов, который "
"останется совместимым во всех версиях Python 3.x."

#: ../../c-api/stable.rst:69
msgid ""
"The Stable ABI contains symbols exposed in the :ref:`Limited API <limited-c-"
"api>`, but also other ones – for example, functions necessary to support "
"older versions of the Limited API."
msgstr ""
"Стабильный ABI содержит символы, представленные в :ref:`Limited API <limited-"
"c-api>`, а также другие символы — например, функции, необходимые для "
"поддержки старых версий Limited API."

#: ../../c-api/stable.rst:73
msgid ""
"On Windows, extensions that use the Stable ABI should be linked against "
"``python3.dll`` rather than a version-specific library such as ``python39."
"dll``."
msgstr ""
"В Windows расширения, использующие Stable ABI, должны быть связаны с Python3."
"dll, а не с библиотекой конкретной версии, такой как Python39.dll."

#: ../../c-api/stable.rst:77
msgid ""
"On some platforms, Python will look for and load shared library files named "
"with the ``abi3`` tag (e.g. ``mymodule.abi3.so``). It does not check if such "
"extensions conform to a Stable ABI. The user (or their packaging tools) need "
"to ensure that, for example, extensions built with the 3.10+ Limited API are "
"not installed for lower versions of Python."
msgstr ""
"На некоторых платформах Python будет искать и загружать файлы общей "
"библиотеки, названные тегом abi3 (например, mymodule.abi3.so). Он не "
"проверяет, соответствуют ли такие расширения стабильному ABI. Пользователь "
"(или его инструменты упаковки) должны гарантировать, что, например, "
"расширения, созданные с помощью API 3.10+ Limited, не установлены для более "
"низких версий Python."

#: ../../c-api/stable.rst:84
msgid ""
"All functions in the Stable ABI are present as functions in Python's shared "
"library, not solely as macros. This makes them usable from languages that "
"don't use the C preprocessor."
msgstr ""
"Все функции в Stable ABI представлены как функции общей библиотеки Python, а "
"не только как макросы. Это делает их пригодными для использования в языках, "
"не использующих препроцессор C."

#: ../../c-api/stable.rst:90
msgid "Limited API Scope and Performance"
msgstr "Ограниченный объем и производительность API"

#: ../../c-api/stable.rst:92
msgid ""
"The goal for the Limited API is to allow everything that is possible with "
"the full C API, but possibly with a performance penalty."
msgstr ""
"Цель ограниченного API — обеспечить все, что возможно с полным API C, но, "
"возможно, с потерей производительности."

#: ../../c-api/stable.rst:95
msgid ""
"For example, while :c:func:`PyList_GetItem` is available, its “unsafe” macro "
"variant :c:func:`PyList_GET_ITEM` is not. The macro can be faster because it "
"can rely on version-specific implementation details of the list object."
msgstr ""
"Например, хотя :c:func:`PyList_GetItem` доступен, его «небезопасный» вариант "
"макроса :c:func:`PyList_GET_ITEM` — нет. Макрос может работать быстрее, "
"поскольку он может полагаться на детали реализации объекта списка, зависящие "
"от версии."

#: ../../c-api/stable.rst:100
msgid ""
"Without ``Py_LIMITED_API`` defined, some C API functions are inlined or "
"replaced by macros. Defining ``Py_LIMITED_API`` disables this inlining, "
"allowing stability as Python's data structures are improved, but possibly "
"reducing performance."
msgstr ""
"Без определения ``Py_LIMITED_API`` некоторые функции C API встраиваются или "
"заменяются макросами. Определение Py_LIMITED_API отключает эту встраивание, "
"обеспечивая стабильность при улучшении структур данных Python, но, возможно, "
"снижая производительность."

#: ../../c-api/stable.rst:105
msgid ""
"By leaving out the ``Py_LIMITED_API`` definition, it is possible to compile "
"a Limited API extension with a version-specific ABI. This can improve "
"performance for that Python version, but will limit compatibility. Compiling "
"with ``Py_LIMITED_API`` will then yield an extension that can be distributed "
"where a version-specific one is not available – for example, for prereleases "
"of an upcoming Python version."
msgstr ""
"Опустив определение Py_LIMITED_API, можно скомпилировать расширение Limited "
"API с ABI для конкретной версии. Это может улучшить производительность этой "
"версии Python, но ограничит совместимость. Компиляция с использованием "
"Py_LIMITED_API даст расширение, которое можно будет распространять там, где "
"недоступно расширение для конкретной версии — например, для предварительных "
"выпусков будущей версии Python."

#: ../../c-api/stable.rst:114
msgid "Limited API Caveats"
msgstr "Ограниченные предостережения по API"

#: ../../c-api/stable.rst:116
msgid ""
"Note that compiling with ``Py_LIMITED_API`` is *not* a complete guarantee "
"that code conforms to the :ref:`Limited API <limited-c-api>` or the :ref:"
"`Stable ABI <stable-abi>`. ``Py_LIMITED_API`` only covers definitions, but "
"an API also includes other issues, such as expected semantics."
msgstr ""
"Обратите внимание, что компиляция с использованием ``Py_LIMITED_API`` *не* "
"является полной гарантией того, что код соответствует :ref:`Limited API "
"<limited-c-api>` или :ref:`Stable ABI <stable-abi>`. ``Py_LIMITED_API`` "
"охватывает только определения, но API также включает в себя и другие "
"вопросы, такие как ожидаемая семантика."

#: ../../c-api/stable.rst:121
msgid ""
"One issue that ``Py_LIMITED_API`` does not guard against is calling a "
"function with arguments that are invalid in a lower Python version. For "
"example, consider a function that starts accepting ``NULL`` for an argument. "
"In Python 3.9, ``NULL`` now selects a default behavior, but in Python 3.8, "
"the argument will be used directly, causing a ``NULL`` dereference and "
"crash. A similar argument works for fields of structs."
msgstr ""
"Одна из проблем, от которой Py_LIMITED_API не защищает, — это вызов функции "
"с аргументами, которые недопустимы в более ранней версии Python. Например, "
"рассмотрим функцию, которая начинает принимать в качестве аргумента значение "
"NULL. В Python 3.9 ``NULL`` теперь выбирает поведение по умолчанию, но в "
"Python 3.8 аргумент будет использоваться напрямую, что приведет к "
"разыменованию ``NULL`` и сбою. Аналогичный аргумент работает для полей "
"структур."

#: ../../c-api/stable.rst:128
msgid ""
"Another issue is that some struct fields are currently not hidden when "
"``Py_LIMITED_API`` is defined, even though they're part of the Limited API."
msgstr ""
"Другая проблема заключается в том, что некоторые поля структуры в настоящее "
"время не скрыты, когда определен Py_LIMITED_API, хотя они являются частью "
"Limited API."

#: ../../c-api/stable.rst:131
msgid ""
"For these reasons, we recommend testing an extension with *all* minor Python "
"versions it supports, and preferably to build with the *lowest* such version."
msgstr ""
"По этим причинам мы рекомендуем тестировать расширение со *всеми* "
"второстепенными версиями Python, которые оно поддерживает, и желательно "
"собирать с *самой младшей* такой версией."

#: ../../c-api/stable.rst:134
msgid ""
"We also recommend reviewing documentation of all used API to check if it is "
"explicitly part of the Limited API. Even with ``Py_LIMITED_API`` defined, a "
"few private declarations are exposed for technical reasons (or even "
"unintentionally, as bugs)."
msgstr ""
"Мы также рекомендуем просмотреть документацию по всем используемым API, "
"чтобы убедиться, что они явно не являются частью ограниченного API. Даже "
"если Py_LIMITED_API определен, некоторые частные объявления отображаются по "
"техническим причинам (или даже непреднамеренно, как ошибки)."

#: ../../c-api/stable.rst:139
msgid ""
"Also note that the Limited API is not necessarily stable: compiling with "
"``Py_LIMITED_API`` with Python 3.8 means that the extension will run with "
"Python 3.12, but it will not necessarily *compile* with Python 3.12. In "
"particular, parts of the Limited API may be deprecated and removed, provided "
"that the Stable ABI stays stable."
msgstr ""
"Также обратите внимание, что ограниченный API не обязательно стабилен: "
"компиляция с помощью ``Py_LIMITED_API`` с Python 3.8 означает, что "
"расширение будет работать с Python 3.12, но не обязательно *компилируется* с "
"Python 3.12. В частности, части ограниченного API могут быть признаны "
"устаревшими и удалены при условии, что стабильный ABI останется стабильным."

#: ../../c-api/stable.rst:149
msgid "Platform Considerations"
msgstr "Особенности платформы"

#: ../../c-api/stable.rst:151
msgid ""
"ABI stability depends not only on Python, but also on the compiler used, "
"lower-level libraries and compiler options. For the purposes of the :ref:"
"`Stable ABI <stable-abi>`, these details define a “platform”. They usually "
"depend on the OS type and processor architecture"
msgstr ""
"Стабильность ABI зависит не только от Python, но и от используемого "
"компилятора, библиотек нижнего уровня и опций компилятора. Для целей :ref:"
"`Stable ABI <stable-abi>` эти детали определяют «платформу». Обычно они "
"зависят от типа ОС и архитектуры процессора."

#: ../../c-api/stable.rst:156
msgid ""
"It is the responsibility of each particular distributor of Python to ensure "
"that all Python versions on a particular platform are built in a way that "
"does not break the Stable ABI. This is the case with Windows and macOS "
"releases from ``python.org`` and many third-party distributors."
msgstr ""
"Каждый конкретный дистрибьютор Python несет ответственность за то, чтобы все "
"версии Python на конкретной платформе были построены таким образом, чтобы не "
"нарушать стабильный ABI. Так обстоит дело с выпусками Windows и macOS от "
"``python.org`` и многих сторонних дистрибьюторов."

#: ../../c-api/stable.rst:166
msgid "Contents of Limited API"
msgstr "Содержание ограниченного API"

#: ../../c-api/stable.rst:169
msgid ""
"Currently, the :ref:`Limited API <limited-c-api>` includes the following "
"items:"
msgstr ""
"В настоящее время :ref:`Limited API <limited-c-api>` включает в себя "
"следующие элементы:"
