# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# Rafael Fontenelle <rffontenelle@gmail.com>, 2024
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.10\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-01-10 16:06+0000\n"
"PO-Revision-Date: 2022-11-05 17:23+0000\n"
"Last-Translator: Rafael Fontenelle <rffontenelle@gmail.com>, 2024\n"
"Language-Team: Russian (https://app.transifex.com/python-doc/teams/5390/"
"ru/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ru\n"
"Plural-Forms: nplurals=4; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && "
"n%10<=4 && (n%100<12 || n%100>14) ? 1 : n%10==0 || (n%10>=5 && n%10<=9) || "
"(n%100>=11 && n%100<=14)? 2 : 3);\n"

#: ../../tutorial/stdlib2.rst:5
msgid "Brief Tour of the Standard Library --- Part II"
msgstr "Краткий обзор стандартной библиотеки - часть II"

#: ../../tutorial/stdlib2.rst:7
msgid ""
"This second tour covers more advanced modules that support professional "
"programming needs.  These modules rarely occur in small scripts."
msgstr ""
"Второй тур охватывает более продвинутые модули, которые поддерживают "
"профессиональные потребности программирования. Эти модули редко встречаются "
"в небольших скриптах."

#: ../../tutorial/stdlib2.rst:14
msgid "Output Formatting"
msgstr "Форматирование вывода"

#: ../../tutorial/stdlib2.rst:16
msgid ""
"The :mod:`reprlib` module provides a version of :func:`repr` customized for "
"abbreviated displays of large or deeply nested containers::"
msgstr ""
"Модуль :mod:`reprlib` предоставляет версию :func:`repr`, настроенную для "
"сокращенного отображения больших или глубоко вложенных контейнеров::"

#: ../../tutorial/stdlib2.rst:23
msgid ""
"The :mod:`pprint` module offers more sophisticated control over printing "
"both built-in and user defined objects in a way that is readable by the "
"interpreter. When the result is longer than one line, the \"pretty printer\" "
"adds line breaks and indentation to more clearly reveal data structure::"
msgstr ""
"Модуль :mod:`pprint` предлагает более сложный контроль над выводом "
"встроенных и пользовательских объектов таким образом, чтобы они были "
"читаемыми для интерпретатора. Когда результат занимает более одной строки, "
"\"красивый принтер\" добавляет переносы строк и отступы, чтобы более ясно "
"показать структуру данных::"

#: ../../tutorial/stdlib2.rst:39
msgid ""
"The :mod:`textwrap` module formats paragraphs of text to fit a given screen "
"width::"
msgstr ""
"Модуль :mod:`textwrap` форматирует абзацы текста, чтобы они помещались в "
"заданную ширину экрана::"

#: ../../tutorial/stdlib2.rst:53
msgid ""
"The :mod:`locale` module accesses a database of culture specific data "
"formats. The grouping attribute of locale's format function provides a "
"direct way of formatting numbers with group separators::"
msgstr ""
"Модуль :mod:`locale` обращается к базе данных форматов, специфичных для "
"определённой культуры. Атрибут группировки функции форматирования модуля "
"предоставляет прямой способ форматирования чисел с разделителями группы::"

#: ../../tutorial/stdlib2.rst:72
msgid "Templating"
msgstr "Шаблонизация"

#: ../../tutorial/stdlib2.rst:74
msgid ""
"The :mod:`string` module includes a versatile :class:`~string.Template` "
"class with a simplified syntax suitable for editing by end-users.  This "
"allows users to customize their applications without having to alter the "
"application."
msgstr ""
"Модуль :mod:`string` включает в себя универсальный класс :class:`~string."
"Template` с упрощенным синтаксисом, подходящим для редактирования конечными "
"пользователями. Это позволяет пользователям настраивать свои приложения, не "
"изменяя само приложение."

#: ../../tutorial/stdlib2.rst:78
msgid ""
"The format uses placeholder names formed by ``$`` with valid Python "
"identifiers (alphanumeric characters and underscores).  Surrounding the "
"placeholder with braces allows it to be followed by more alphanumeric "
"letters with no intervening spaces.  Writing ``$$`` creates a single escaped "
"``$``::"
msgstr ""
"Формат использует имена заполнителей, образованных с помощью ``$`` с "
"валидными идентификаторами Python (алфавитно-цифровые символы и "
"подчеркивания). Окружение заполнителя фигурными скобками позволяет "
"использовать алфавитно-цифровые символы сразу после заполнителя, без "
"дополнительных пробелов. Написание ``$$`` создает одиночный экранированный "
"``$``::"

#: ../../tutorial/stdlib2.rst:88
msgid ""
"The :meth:`~string.Template.substitute` method raises a :exc:`KeyError` when "
"a placeholder is not supplied in a dictionary or a keyword argument.  For "
"mail-merge style applications, user supplied data may be incomplete and the :"
"meth:`~string.Template.safe_substitute` method may be more appropriate --- "
"it will leave placeholders unchanged if data is missing::"
msgstr ""
"Метод :meth:`~string.Template.substitute` возбуждает :exc:`KeyError`, когда "
"заполнитель не предоставлен в словаре или именованном аргументе. Для "
"приложений вроде массовой рассылки, данные, предоставленные пользователем, "
"могут быть неполными, и метод :meth:`~string.Template.safe_substitute` может "
"быть более подходящим --- он оставит заполнители без изменений, если данные "
"отсутствуют::"

#: ../../tutorial/stdlib2.rst:103
msgid ""
"Template subclasses can specify a custom delimiter.  For example, a batch "
"renaming utility for a photo browser may elect to use percent signs for "
"placeholders such as the current date, image sequence number, or file "
"format::"
msgstr ""
"Подкласс шаблона может указывать пользовательский разделитель. Например, "
"утилита пакетного переименования для фотобраузера может использовать знаки "
"процента для заполнителей, таких как текущая дата, номер последовательности "
"изображений или формат файла::"

#: ../../tutorial/stdlib2.rst:126
msgid ""
"Another application for templating is separating program logic from the "
"details of multiple output formats.  This makes it possible to substitute "
"custom templates for XML files, plain text reports, and HTML web reports."
msgstr ""
"Еще одно применение для шаблонизации - это разделение логики программы от "
"деталей множественных выходных форматов. Это позволяет заменять "
"пользовательские шаблоны на XML-файлы, отчеты в виде простого текста и веб-"
"отчеты в формате HTML."

#: ../../tutorial/stdlib2.rst:134
msgid "Working with Binary Data Record Layouts"
msgstr "Работа с макетами записей двоичных данных"

#: ../../tutorial/stdlib2.rst:136
msgid ""
"The :mod:`struct` module provides :func:`~struct.pack` and :func:`~struct."
"unpack` functions for working with variable length binary record formats.  "
"The following example shows how to loop through header information in a ZIP "
"file without using the :mod:`zipfile` module.  Pack codes ``\"H\"`` and "
"``\"I\"`` represent two and four byte unsigned numbers respectively.  The "
"``\"<\"`` indicates that they are standard size and in little-endian byte "
"order::"
msgstr ""
"Модуль :mod:`struct` предоставляет функции :func:`~struct.pack` и :func:"
"`~struct.unpack` для работы с форматами переменной длины двоичных записей. В "
"следующем примере показано, как пройтись по информации заголовка в ZIP-файле "
"без использования модуля :mod:`zipfile`. Коды упаковки ``\"H\"`` и ``\"I\"`` "
"представляют двухбайтовые и четырехбайтовые беззнаковые числа "
"соответственно. ``\"<\"`` указывает, что они имеют стандартный размер и "
"упорядочены по младшему байту::"

#: ../../tutorial/stdlib2.rst:167
msgid "Multi-threading"
msgstr "Многопоточность"

#: ../../tutorial/stdlib2.rst:169
msgid ""
"Threading is a technique for decoupling tasks which are not sequentially "
"dependent.  Threads can be used to improve the responsiveness of "
"applications that accept user input while other tasks run in the "
"background.  A related use case is running I/O in parallel with computations "
"in another thread."
msgstr ""
"Поточность — это метод разделения задач, которые не являются последовательно "
"зависимыми. Потоки можно использовать для повышения скорости реагирования "
"приложений, которые принимают ввод пользователя, в то время как другие "
"задачи выполняются в фоновом режиме. Связанный вариант использования — "
"выполнение ввода-вывода параллельно с вычислениями в другом потоке."

#: ../../tutorial/stdlib2.rst:174
msgid ""
"The following code shows how the high level :mod:`threading` module can run "
"tasks in background while the main program continues to run::"
msgstr ""
"Следующий код показывает, как модуль высокого уровня :mod:`threading` может "
"запускать задачи в фоновом режиме, в то время как основная программа "
"продолжает работать:"

#: ../../tutorial/stdlib2.rst:198
msgid ""
"The principal challenge of multi-threaded applications is coordinating "
"threads that share data or other resources.  To that end, the threading "
"module provides a number of synchronization primitives including locks, "
"events, condition variables, and semaphores."
msgstr ""
"Основная проблема многопоточных приложений — координация потоков, которые "
"совместно используют данные или другие ресурсы. С этой целью модуль потоков "
"предоставляет ряд примитивов синхронизации, включая блокировки, события, "
"переменные условия и семафоры."

#: ../../tutorial/stdlib2.rst:203
msgid ""
"While those tools are powerful, minor design errors can result in problems "
"that are difficult to reproduce.  So, the preferred approach to task "
"coordination is to concentrate all access to a resource in a single thread "
"and then use the :mod:`queue` module to feed that thread with requests from "
"other threads. Applications using :class:`~queue.Queue` objects for inter-"
"thread communication and coordination are easier to design, more readable, "
"and more reliable."
msgstr ""
"Хотя эти инструменты эффективны, незначительные ошибки проектирования могут "
"привести к проблемам, которые трудно воспроизвести. Таким образом, "
"предпочтительный подход к координации задач — сконцентрировать весь доступ к "
"ресурсу в одном потоке, а затем использовать модуль :mod:`queue` для подачи "
"в этот поток запросов от других потоков. Приложения, использующие объекты :"
"class:`~queue.Queue` для межпоточного взаимодействия и координации, легче "
"проектируются, более читабельны и более надежны."

#: ../../tutorial/stdlib2.rst:214
msgid "Logging"
msgstr "Логирование"

#: ../../tutorial/stdlib2.rst:216
msgid ""
"The :mod:`logging` module offers a full featured and flexible logging "
"system. At its simplest, log messages are sent to a file or to ``sys."
"stderr``::"
msgstr ""
"Модуль :mod:`logging` предлагает полнофункциональную и гибкую систему "
"журналирования. В самом простом случае сообщения журнала отправляются в файл "
"или в ``sys.stderr``::"

#: ../../tutorial/stdlib2.rst:226
msgid "This produces the following output:"
msgstr "Это дает следующий результат:"

#: ../../tutorial/stdlib2.rst:234
msgid ""
"By default, informational and debugging messages are suppressed and the "
"output is sent to standard error.  Other output options include routing "
"messages through email, datagrams, sockets, or to an HTTP Server.  New "
"filters can select different routing based on message priority: :const:"
"`~logging.DEBUG`, :const:`~logging.INFO`, :const:`~logging.WARNING`, :const:"
"`~logging.ERROR`, and :const:`~logging.CRITICAL`."
msgstr ""
"По умолчанию информационные и отладочные сообщения подавляются, а выходные "
"данные отправляются в стандартную ошибку. Другие варианты вывода включают "
"маршрутизацию сообщений по электронной почте, датаграммам, сокетам или на "
"HTTP-сервер. Новые фильтры могут выбирать другую маршрутизацию в зависимости "
"от приоритета сообщения: :const:`~logging.DEBUG`, :const:`~logging.INFO`, :"
"const:`~logging.WARNING`, :const:`~logging.ERROR` и :const:`~logging."
"CRITICAL`."

#: ../../tutorial/stdlib2.rst:241
msgid ""
"The logging system can be configured directly from Python or can be loaded "
"from a user editable configuration file for customized logging without "
"altering the application."
msgstr ""
"Систему журналирования можно настроить непосредственно из Python или "
"загрузить из редактируемого пользователем файла конфигурации для "
"индивидуального ведения журналов без изменения приложения."

#: ../../tutorial/stdlib2.rst:249
msgid "Weak References"
msgstr "Слабые ссылки"

#: ../../tutorial/stdlib2.rst:251
msgid ""
"Python does automatic memory management (reference counting for most objects "
"and :term:`garbage collection` to eliminate cycles).  The memory is freed "
"shortly after the last reference to it has been eliminated."
msgstr ""
"Python осуществляет автоматическое управление памятью (подсчет ссылок для "
"большинства объектов и сбор мусора для устранения циклов). Память "
"освобождается вскоре после удаления последней ссылки на нее."

#: ../../tutorial/stdlib2.rst:255
msgid ""
"This approach works fine for most applications but occasionally there is a "
"need to track objects only as long as they are being used by something else. "
"Unfortunately, just tracking them creates a reference that makes them "
"permanent. The :mod:`weakref` module provides tools for tracking objects "
"without creating a reference.  When the object is no longer needed, it is "
"automatically removed from a weakref table and a callback is triggered for "
"weakref objects.  Typical applications include caching objects that are "
"expensive to create::"
msgstr ""
"Этот подход отлично работает для большинства приложений, но иногда возникает "
"необходимость отслеживать объекты только до тех пор, пока они используются "
"чем-то другим. К сожалению, простое их отслеживание создает ссылку, которая "
"делает их постоянными. Модуль :mod:`weakref` предоставляет инструменты для "
"отслеживания объектов без создания ссылки. Когда объект больше не нужен, он "
"автоматически удаляется из таблицы слабых ссылок, и для объектов слабых "
"ссылок запускается обратный вызов. Типичные приложения включают объекты "
"кэширования, создание которых требует больших затрат:"

#: ../../tutorial/stdlib2.rst:290
msgid "Tools for Working with Lists"
msgstr "Инструменты для работы со списками"

#: ../../tutorial/stdlib2.rst:292
msgid ""
"Many data structure needs can be met with the built-in list type. However, "
"sometimes there is a need for alternative implementations with different "
"performance trade-offs."
msgstr ""
"Многие потребности в структуре данных можно удовлетворить с помощью "
"встроенного типа списка. Однако иногда возникает необходимость в "
"альтернативных реализациях с другим компромиссом в производительности."

#: ../../tutorial/stdlib2.rst:296
msgid ""
"The :mod:`array` module provides an :class:`~array.array()` object that is "
"like a list that stores only homogeneous data and stores it more compactly.  "
"The following example shows an array of numbers stored as two byte unsigned "
"binary numbers (typecode ``\"H\"``) rather than the usual 16 bytes per entry "
"for regular lists of Python int objects::"
msgstr ""

#: ../../tutorial/stdlib2.rst:309
msgid ""
"The :mod:`collections` module provides a :class:`~collections.deque()` "
"object that is like a list with faster appends and pops from the left side "
"but slower lookups in the middle. These objects are well suited for "
"implementing queues and breadth first tree searches::"
msgstr ""

#: ../../tutorial/stdlib2.rst:330
msgid ""
"In addition to alternative list implementations, the library also offers "
"other tools such as the :mod:`bisect` module with functions for manipulating "
"sorted lists::"
msgstr ""
"Помимо альтернативных реализаций списков, библиотека также предлагает другие "
"инструменты, такие как модуль :mod:`bisect` с функциями для управления "
"отсортированными списками::"

#: ../../tutorial/stdlib2.rst:340
msgid ""
"The :mod:`heapq` module provides functions for implementing heaps based on "
"regular lists.  The lowest valued entry is always kept at position zero.  "
"This is useful for applications which repeatedly access the smallest element "
"but do not want to run a full list sort::"
msgstr ""
"Модуль :mod:`heapq` предоставляет функции для реализации кучи на основе "
"обычных списков. Запись с наименьшим значением всегда сохраняется в нулевой "
"позиции. Это полезно для приложений, которые неоднократно обращаются к "
"наименьшему элементу, но не хотят выполнять полную сортировку списка::"

#: ../../tutorial/stdlib2.rst:356
msgid "Decimal Floating Point Arithmetic"
msgstr ""

#: ../../tutorial/stdlib2.rst:358
msgid ""
"The :mod:`decimal` module offers a :class:`~decimal.Decimal` datatype for "
"decimal floating point arithmetic.  Compared to the built-in :class:`float` "
"implementation of binary floating point, the class is especially helpful for"
msgstr ""

#: ../../tutorial/stdlib2.rst:362
msgid ""
"financial applications and other uses which require exact decimal "
"representation,"
msgstr ""
"финансовые приложения и другие виды использования, требующие точного "
"десятичного представления,"

#: ../../tutorial/stdlib2.rst:364
msgid "control over precision,"
msgstr "контроль точности,"

#: ../../tutorial/stdlib2.rst:365
msgid "control over rounding to meet legal or regulatory requirements,"
msgstr ""
"контроль округления для соответствия законодательным или нормативным "
"требованиям,"

#: ../../tutorial/stdlib2.rst:366
msgid "tracking of significant decimal places, or"
msgstr "отслеживание значащих десятичных знаков или"

#: ../../tutorial/stdlib2.rst:367
msgid ""
"applications where the user expects the results to match calculations done "
"by hand."
msgstr ""
"приложения, в которых пользователь ожидает, что результаты будут "
"соответствовать расчетам, выполненным вручную."

#: ../../tutorial/stdlib2.rst:370
msgid ""
"For example, calculating a 5% tax on a 70 cent phone charge gives different "
"results in decimal floating point and binary floating point. The difference "
"becomes significant if the results are rounded to the nearest cent::"
msgstr ""
"Например, расчет налога в размере 5% на телефонную плату в размере 70 центов "
"дает разные результаты в десятичной и двоичной плавающей запятой. Разница "
"становится значимой, если результаты округлить до цента:"

#: ../../tutorial/stdlib2.rst:380
msgid ""
"The :class:`~decimal.Decimal` result keeps a trailing zero, automatically "
"inferring four place significance from multiplicands with two place "
"significance.  Decimal reproduces mathematics as done by hand and avoids "
"issues that can arise when binary floating point cannot exactly represent "
"decimal quantities."
msgstr ""
"Результат :class:`~decimal.Decimal` сохраняет конечный ноль, автоматически "
"выводя четырехзначное значение из множимого с двухзначным значением. Decimal "
"воспроизводит математические операции, выполненные вручную, и позволяет "
"избежать проблем, которые могут возникнуть, когда двоичная плавающая запятая "
"не может точно представлять десятичные величины."

#: ../../tutorial/stdlib2.rst:386
msgid ""
"Exact representation enables the :class:`~decimal.Decimal` class to perform "
"modulo calculations and equality tests that are unsuitable for binary "
"floating point::"
msgstr ""
"Точное представление позволяет классу :class:`~decimal.Decimal` выполнять "
"вычисления по модулю и проверки равенства, которые непригодны для двоичных "
"чисел с плавающей запятой::"

#: ../../tutorial/stdlib2.rst:400
msgid ""
"The :mod:`decimal` module provides arithmetic with as much precision as "
"needed::"
msgstr ""
"Модуль :mod:`decimal` обеспечивает арифметические операции с необходимой "
"точностью::"
