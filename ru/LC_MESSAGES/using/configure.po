# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001 Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# Rafael Fontenelle <rffontenelle@gmail.com>, 2024
# Илья Панфилов, 2024
# Roustam Khamidoulline, 2025
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.14\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-07-11 14:21+0000\n"
"PO-Revision-Date: 2021-06-28 01:50+0000\n"
"Last-Translator: Roustam Khamidoulline, 2025\n"
"Language-Team: Russian (https://app.transifex.com/python-doc/teams/5390/"
"ru/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ru\n"
"Plural-Forms: nplurals=4; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && "
"n%10<=4 && (n%100<12 || n%100>14) ? 1 : n%10==0 || (n%10>=5 && n%10<=9) || "
"(n%100>=11 && n%100<=14)? 2 : 3);\n"

#: ../../using/configure.rst:3
msgid "Configure Python"
msgstr "Настроить Python"

#: ../../using/configure.rst:8
msgid "Build Requirements"
msgstr "Требования к сборке"

#: ../../using/configure.rst:10
msgid "Features and minimum versions required to build CPython:"
msgstr "Функции и минимальные версии, необходимые для сборки CPython:"

#: ../../using/configure.rst:12
msgid ""
"A `C11 <https://en.cppreference.com/w/c/11>`_ compiler. `Optional C11 "
"features <https://en.wikipedia.org/wiki/"
"C11_(C_standard_revision)#Optional_features>`_ are not required."
msgstr ""
"Компилятор `C11 <https://en.cppreference.com/w/c/11>`_. `Дополнительные "
"функции C11 <https://en.wikipedia.org/wiki/"
"C11_(C_standard_revision)#Optional_features>`_ не требуются."

#: ../../using/configure.rst:17
msgid "On Windows, Microsoft Visual Studio 2017 or later is required."
msgstr "В Windows требуется Microsoft Visual Studio 2017 или новее."

#: ../../using/configure.rst:19
msgid ""
"Support for `IEEE 754 <https://en.wikipedia.org/wiki/IEEE_754>`_ floating-"
"point numbers and `floating-point Not-a-Number (NaN) <https://en.wikipedia."
"org/wiki/NaN#Floating_point>`_."
msgstr ""
"Поддержка `IEEE 754 <https://en.wikipedia.org/wiki/IEEE_754>`_ чисел с "
"плавающей запятой и `числа с плавающей запятой Not-a-Number (NaN) <https://"
"en.wikipedia.org/ wiki/NaN#Floating_point>`_."

#: ../../using/configure.rst:23
msgid "Support for threads."
msgstr "Поддержка потоков."

#: ../../using/configure.rst:25
msgid ""
"OpenSSL 1.1.1 is the minimum version and OpenSSL 3.0.16 is the recommended "
"minimum version for the :mod:`ssl` and :mod:`hashlib` extension modules."
msgstr ""

#: ../../using/configure.rst:28
msgid "SQLite 3.15.2 for the :mod:`sqlite3` extension module."
msgstr "SQLite 3.15.2 для модуля расширения :mod:`sqlite3`."

#: ../../using/configure.rst:30
msgid "Tcl/Tk 8.5.12 for the :mod:`tkinter` module."
msgstr "Tcl/Tk 8.5.12 для модуля :mod:`tkinter`."

#: ../../using/configure.rst:32
msgid ""
"`libmpdec <https://www.bytereef.org/mpdecimal/doc/libmpdec/>`_ 2.5.0 for "
"the :mod:`decimal` module."
msgstr ""

#: ../../using/configure.rst:35
msgid ""
"Autoconf 2.72 and aclocal 1.16.5 are required to regenerate the :file:"
"`configure` script."
msgstr ""

#: ../../using/configure.rst:38
msgid "Tcl/Tk version 8.3.1 is now required."
msgstr "Теперь требуется Tcl/Tk версии 8.3.1."

#: ../../using/configure.rst:41
msgid ""
"On Windows, Visual Studio 2015 or later is now required. Tcl/Tk version 8.4 "
"is now required."
msgstr ""
"В Windows теперь требуется Visual Studio 2015 или более поздней версии. "
"Теперь требуется Tcl/Tk версии 8.4."

#: ../../using/configure.rst:45
msgid ""
"Selected C99 features are now required, like ``<stdint.h>`` and ``static "
"inline`` functions."
msgstr ""
"Теперь требуются некоторые функции C99, такие как ``<stdint.h>`` и "
"``статические встроенные`` функции."

#: ../../using/configure.rst:49
msgid "Thread support and OpenSSL 1.0.2 are now required."
msgstr "Теперь требуется поддержка потоков и OpenSSL 1.0.2."

#: ../../using/configure.rst:52
msgid "OpenSSL 1.1.1 is now required. Require SQLite 3.7.15."
msgstr "Теперь требуется OpenSSL 1.1.1. Требуется SQLite 3.7.15."

#: ../../using/configure.rst:56
msgid ""
"C11 compiler, IEEE 754 and NaN support are now required. On Windows, Visual "
"Studio 2017 or later is required. Tcl/Tk version 8.5.12 is now required for "
"the :mod:`tkinter` module."
msgstr ""
"Теперь требуется компилятор C11, поддержка IEEE 754 и NaN. В Windows "
"требуется Visual Studio 2017 или более поздней версии. Tcl/Tk версии 8.5.12 "
"теперь требуется для модуля :mod:`tkinter`."

#: ../../using/configure.rst:61
msgid "Autoconf 2.71, aclocal 1.16.5 and SQLite 3.15.2 are now required."
msgstr "Теперь требуются Autoconf 2.71, aclocal 1.16.5 и SQLite 3.15.2."

#: ../../using/configure.rst:64
msgid "Autoconf 2.72 is now required."
msgstr ""

#: ../../using/configure.rst:67
msgid ""
"See also :pep:`7` \"Style Guide for C Code\" and :pep:`11` \"CPython "
"platform support\"."
msgstr ""
"См. также :pep:`7` \"Руководство по стилю для кода C\" и :pep:`11` "
"\"Поддержка платформы CPython\"."

#: ../../using/configure.rst:72
msgid "Generated files"
msgstr "Сгенерированные файлы"

#: ../../using/configure.rst:74
msgid ""
"To reduce build dependencies, Python source code contains multiple generated "
"files. Commands to regenerate all generated files::"
msgstr ""
"Чтобы уменьшить зависимости сборки, исходный код Python содержит несколько "
"сгенерированных файлов. Команды для регенерации всех сгенерированных файлов::"

#: ../../using/configure.rst:77
msgid ""
"make regen-all\n"
"make regen-stdlib-module-names\n"
"make regen-limited-abi\n"
"make regen-configure"
msgstr ""
"make regen-all\n"
"make regen-stdlib-module-names\n"
"make regen-limited-abi\n"
"make regen-configure"

#: ../../using/configure.rst:82
msgid ""
"The ``Makefile.pre.in`` file documents generated files, their inputs, and "
"tools used to regenerate them. Search for ``regen-*`` make targets."
msgstr ""
"Файл ``Makefile.pre.in`` документирует сгенерированные файлы, их входные "
"данные и инструменты, используемые для их восстановления. Найдите ``regen-"
"*`` make target."

#: ../../using/configure.rst:86
msgid "configure script"
msgstr "настроить скрипт"

#: ../../using/configure.rst:88
msgid ""
"The ``make regen-configure`` command regenerates the ``aclocal.m4`` file and "
"the ``configure`` script using the ``Tools/build/regen-configure.sh`` shell "
"script which uses an Ubuntu container to get the same tools versions and "
"have a reproducible output."
msgstr ""
"Команда make regen-configure восстанавливает файл aclocal.m4 и сценарий "
"configure с помощью сценария оболочки Tools/build/regen-configure.sh, "
"который использует контейнер Ubuntu. чтобы получить одни и те же версии "
"инструментов и иметь воспроизводимый результат."

#: ../../using/configure.rst:93
msgid "The container is optional, the following command can be run locally::"
msgstr ""
"Контейнер не является обязательным, следующую команду можно запустить "
"локально:"

#: ../../using/configure.rst:95
msgid "autoreconf -ivf -Werror"
msgstr "autoreconf -ivf -Werror"

#: ../../using/configure.rst:97
msgid ""
"The generated files can change depending on the exact ``autoconf-archive``, "
"``aclocal`` and ``pkg-config`` versions."
msgstr ""
"Сгенерированные файлы могут меняться в зависимости от конкретных версий "
"autoconf-archive, aclocal и pkg-config."

#: ../../using/configure.rst:104
msgid "Configure Options"
msgstr "Настроить параметры"

#: ../../using/configure.rst:106
msgid "List all :file:`configure` script options using::"
msgstr "Перечислите все параметры сценария :file:`configure`, используя::"

#: ../../using/configure.rst:108
msgid "./configure --help"
msgstr "./configure --help"

#: ../../using/configure.rst:110
msgid ""
"See also the :file:`Misc/SpecialBuilds.txt` in the Python source "
"distribution."
msgstr ""
"См. также файл :file:`Misc/SpecialBuilds.txt` в дистрибутиве исходного кода "
"Python."

#: ../../using/configure.rst:113
msgid "General Options"
msgstr "Общие параметры"

#: ../../using/configure.rst:117
msgid ""
"Support loadable extensions in the :mod:`!_sqlite` extension module (default "
"is no) of the :mod:`sqlite3` module."
msgstr ""
"Поддержка загружаемых расширений в модуле расширения :mod:`!_sqlite` (по "
"умолчанию — нет) модуля :mod:`sqlite3`."

#: ../../using/configure.rst:120
msgid ""
"See the :meth:`sqlite3.Connection.enable_load_extension` method of the :mod:"
"`sqlite3` module."
msgstr ""
"См. метод :meth:`sqlite3.Connection.enable_load_extension` модуля :mod:"
"`sqlite3`."

#: ../../using/configure.rst:127
msgid ""
"Disable IPv6 support (enabled by default if supported), see the :mod:"
"`socket` module."
msgstr ""
"Отключите поддержку IPv6 (включена по умолчанию, если поддерживается), см. "
"модуль :mod:`socket`."

#: ../../using/configure.rst:132
msgid "Define the size in bits of Python :class:`int` digits: 15 or 30 bits."
msgstr "Определите размер в битах Python: цифры: class:`int`: 15 или 30 бит."

#: ../../using/configure.rst:134
msgid "By default, the digit size is 30."
msgstr "По умолчанию размер цифр равен 30."

#: ../../using/configure.rst:136
msgid "Define the ``PYLONG_BITS_IN_DIGIT`` to ``15`` or ``30``."
msgstr "Определите для ``PYLONG_BITS_IN_DIGIT`` значение ``15`` или ``30``."

#: ../../using/configure.rst:138
msgid "See :data:`sys.int_info.bits_per_digit <sys.int_info>`."
msgstr "См. :data:`sys.int_info.bits_per_digit <sys.int_info>`."

#: ../../using/configure.rst:142
msgid "Set the Python executable suffix to *SUFFIX*."
msgstr "Установите суффикс исполняемого файла Python на *SUFFIX*."

#: ../../using/configure.rst:144
msgid ""
"The default suffix is ``.exe`` on Windows and macOS (``python.exe`` "
"executable), ``.js`` on Emscripten node, ``.html`` on Emscripten browser, ``."
"wasm`` on WASI, and an empty string on other platforms (``python`` "
"executable)."
msgstr ""
"Суффиксом по умолчанию является ``.exe`` в Windows и macOS (исполняемый файл "
"``python.exe``), ``.js`` на узле Emscripten, ``.html`` в браузере "
"Emscripten, ``.wasm` ` на WASI и пустая строка на других платформах "
"(исполняемый файл ``python``)."

#: ../../using/configure.rst:149
msgid ""
"The default suffix on WASM platform is one of ``.js``, ``.html`` or ``."
"wasm``."
msgstr ""
"Суффиксом по умолчанию на платформе WASM является один из ``.js``, ``.html`` "
"или ``.wasm``."

#: ../../using/configure.rst:155
msgid ""
"Select the default time zone search path for :const:`zoneinfo.TZPATH`. See "
"the :ref:`Compile-time configuration <zoneinfo_data_compile_time_config>` of "
"the :mod:`zoneinfo` module."
msgstr ""
"Выберите путь поиска часового пояса по умолчанию для :const:`zoneinfo."
"TZPATH`. См. конфигурацию времени компиляции "
"<zoneinfo_data_compile_time_config> модуля :mod:`zoneinfo`."

#: ../../using/configure.rst:159
msgid ""
"Default: ``/usr/share/zoneinfo:/usr/lib/zoneinfo:/usr/share/lib/zoneinfo:/"
"etc/zoneinfo``."
msgstr ""
"По умолчанию: ``/usr/share/zoneinfo:/usr/lib/zoneinfo:/usr/share/lib/"
"zoneinfo:/etc/zoneinfo``"

#: ../../using/configure.rst:161
msgid "See :data:`os.pathsep` path separator."
msgstr "См. разделитель путей :data:`os.pathsep`."

#: ../../using/configure.rst:167
msgid ""
"Build the ``_decimal`` extension module using a thread-local context rather "
"than a coroutine-local context (default), see the :mod:`decimal` module."
msgstr ""
"Создайте модуль расширения ``_decimal``, используя локальный контекст "
"потока, а не локальный контекст сопрограммы (по умолчанию), см. модуль :mod:"
"`decimal`."

#: ../../using/configure.rst:170
msgid "See :const:`decimal.HAVE_CONTEXTVAR` and the :mod:`contextvars` module."
msgstr "См. :const:`decimal.HAVE_CONTEXTVAR` и модуль :mod:`contextvars`."

#: ../../using/configure.rst:176
msgid "Override order to check db backends for the :mod:`dbm` module"
msgstr ""
"Переопределить порядок проверки серверных частей БД для модуля :mod:`dbm`"

#: ../../using/configure.rst:178
msgid ""
"A valid value is a colon (``:``) separated string with the backend names:"
msgstr ""
"Допустимым значением является строка с именами серверов, разделенная "
"двоеточием (``:``):"

#: ../../using/configure.rst:180
msgid "``ndbm``;"
msgstr "``ndbm``;"

#: ../../using/configure.rst:181
msgid "``gdbm``;"
msgstr "``gdbm``;"

#: ../../using/configure.rst:182
msgid "``bdb``."
msgstr "``bdb``."

#: ../../using/configure.rst:186
msgid "Disable C locale coercion to a UTF-8 based locale (enabled by default)."
msgstr ""
"Отключите приведение локали C к локали на основе UTF-8 (включено по "
"умолчанию)."

#: ../../using/configure.rst:188
msgid "Don't define the ``PY_COERCE_C_LOCALE`` macro."
msgstr "Не определяйте макрос PY_COERCE_C_LOCALE."

#: ../../using/configure.rst:190
msgid "See :envvar:`PYTHONCOERCECLOCALE` and the :pep:`538`."
msgstr "См. :envvar:`PYTHONCOERCECLOCALE` и :pep:`538`."

#: ../../using/configure.rst:194
msgid "Python library directory name (default is ``lib``)."
msgstr "Имя каталога библиотеки Python (по умолчанию — ``lib``)."

#: ../../using/configure.rst:196
msgid "Fedora and SuSE use ``lib64`` on 64-bit platforms."
msgstr "Fedora и SuSE используют lib64 на 64-битных платформах."

#: ../../using/configure.rst:198
msgid "See :data:`sys.platlibdir`."
msgstr "См. :data:`sys.platlibdir`."

#: ../../using/configure.rst:204
msgid ""
"Directory of wheel packages used by the :mod:`ensurepip` module (none by "
"default)."
msgstr ""
"Каталог пакетов колес, используемых модулем :mod:`ensurepip` (по умолчанию "
"нет)."

#: ../../using/configure.rst:207
msgid ""
"Some Linux distribution packaging policies recommend against bundling "
"dependencies. For example, Fedora installs wheel packages in the ``/usr/"
"share/python-wheels/`` directory and don't install the :mod:`!ensurepip."
"_bundled` package."
msgstr ""
"Некоторые политики упаковки дистрибутива Linux не рекомендуют объединять "
"зависимости. Например, Fedora устанавливает пакеты Wheel в каталог ``/usr/"
"share/python-wheels/`` и не устанавливает пакет :mod:`!ensurepip._bundled`."

#: ../../using/configure.rst:216
msgid ""
"Whether configure should use :program:`pkg-config` to detect build "
"dependencies."
msgstr ""
"Должен ли configure использовать :program:`pkg-config` для обнаружения "
"зависимостей сборки."

#: ../../using/configure.rst:219
msgid "``check`` (default): :program:`pkg-config` is optional"
msgstr ""
"``check`` (по умолчанию): :program:`pkg-config` не является обязательным."

#: ../../using/configure.rst:220
msgid "``yes``: :program:`pkg-config` is mandatory"
msgstr "``да``: :program:`pkg-config` является обязательным"

#: ../../using/configure.rst:221
msgid "``no``: configure does not use :program:`pkg-config` even when present"
msgstr ""
"``no``: configure не использует :program:`pkg-config`, даже если он "
"присутствует."

#: ../../using/configure.rst:227
msgid "Turn on internal Python performance statistics gathering."
msgstr "Включите сбор внутренней статистики производительности Python."

#: ../../using/configure.rst:229
msgid ""
"By default, statistics gathering is off. Use ``python3 -X pystats`` command "
"or set ``PYTHONSTATS=1`` environment variable to turn on statistics "
"gathering at Python startup."
msgstr ""
"По умолчанию сбор статистики отключен. Используйте команду ``python3 -X "
"pystats`` или установите переменную среды ``PYTHONSTATS=1``, чтобы включить "
"сбор статистики при запуске Python."

#: ../../using/configure.rst:233
msgid ""
"At Python exit, dump statistics if statistics gathering was on and not "
"cleared."
msgstr ""
"При выходе Python выгрузить статистику, если сбор статистики был включен и "
"не очищен."

#: ../../using/configure.rst:236 ../../using/configure.rst:759
msgid "Effects:"
msgstr "Эффекты:"

#: ../../using/configure.rst:238
msgid "Add :option:`-X pystats <-X>` command line option."
msgstr "Добавьте параметр командной строки :option:`-X pystats <-X>`."

#: ../../using/configure.rst:239
msgid "Add :envvar:`!PYTHONSTATS` environment variable."
msgstr "Добавьте переменную среды :envvar:`!PYTHONSTATS`."

#: ../../using/configure.rst:240
msgid "Define the ``Py_STATS`` macro."
msgstr "Определите макрос ``Py_STATS``."

#: ../../using/configure.rst:241
msgid "Add functions to the :mod:`sys` module:"
msgstr "Добавьте функции в модуль :mod:`sys`:"

#: ../../using/configure.rst:243
msgid ":func:`!sys._stats_on`: Turns on statistics gathering."
msgstr ":func:`!sys._stats_on`: Включает сбор статистики."

#: ../../using/configure.rst:244
msgid ":func:`!sys._stats_off`: Turns off statistics gathering."
msgstr ":func:`!sys._stats_off`: Отключает сбор статистики."

#: ../../using/configure.rst:245
msgid ":func:`!sys._stats_clear`: Clears the statistics."
msgstr ":func:`!sys._stats_clear`: Очищает статистику."

#: ../../using/configure.rst:246
msgid ""
":func:`!sys._stats_dump`: Dump statistics to file, and clears the statistics."
msgstr ":func:`!sys._stats_dump`: Сбрасывает статистику в файл и очищает ее."

#: ../../using/configure.rst:248
msgid ""
"The statistics will be dumped to a arbitrary (probably unique) file in ``/"
"tmp/py_stats/`` (Unix) or ``C:\\temp\\py_stats\\`` (Windows). If that "
"directory does not exist, results will be printed on stderr."
msgstr ""
"Статистика будет сохранена в произвольный (возможно, уникальный) файл в ``/"
"tmp/py_stats/`` (Unix) или ``C:\\temp\\py_stats\\`` (Windows). Если этот "
"каталог не существует, результаты будут напечатаны в stderr."

#: ../../using/configure.rst:252
msgid "Use ``Tools/scripts/summarize_stats.py`` to read the stats."
msgstr ""
"Используйте «Инструменты/скрипты/summarize_stats.py», чтобы прочитать "
"статистику."

#: ../../using/configure.rst:254
msgid "Statistics:"
msgstr "Статистика:"

#: ../../using/configure.rst:256
msgid "Opcode:"
msgstr "Код операции:"

#: ../../using/configure.rst:258
msgid "Specialization: success, failure, hit, deferred, miss, deopt, failures;"
msgstr ""
"Специализация: успех, неудача, попадание, отсрочка, промах, деоптация, "
"неудачи;"

#: ../../using/configure.rst:259
msgid "Execution count;"
msgstr "количество выполнений;"

#: ../../using/configure.rst:260
msgid "Pair count."
msgstr "Парный счет."

#: ../../using/configure.rst:262
msgid "Call:"
msgstr "Вызов:"

#: ../../using/configure.rst:264
msgid "Inlined Python calls;"
msgstr "Встроенные вызовы Python;"

#: ../../using/configure.rst:265
msgid "PyEval calls;"
msgstr "PyEval вызовы;"

#: ../../using/configure.rst:266
msgid "Frames pushed;"
msgstr "Рамки сдвинуты;"

#: ../../using/configure.rst:267
msgid "Frame object created;"
msgstr "Объект фрейма создан;"

#: ../../using/configure.rst:268
msgid ""
"Eval calls: vector, generator, legacy, function VECTORCALL, build class, "
"slot, function \"ex\", API, method."
msgstr ""
"Вызовы Eval: вектор, генератор, наследие, функция VECTORCALL, класс сборки, "
"слот, функция «ex», API, метод."

#: ../../using/configure.rst:271
msgid "Object:"
msgstr "Объект:"

#: ../../using/configure.rst:273
msgid "incref and decref;"
msgstr "увеличение и уменьшение;"

#: ../../using/configure.rst:274
msgid "interpreter incref and decref;"
msgstr "интерпретатор incref и decref;"

#: ../../using/configure.rst:275
msgid "allocations: all, 512 bytes, 4 kiB, big;"
msgstr "выделения: все, 512 байт, 4 КБ, большие;"

#: ../../using/configure.rst:276
msgid "free;"
msgstr "бесплатно;"

#: ../../using/configure.rst:277
msgid "to/from free lists;"
msgstr "в/из бесплатных списков;"

#: ../../using/configure.rst:278
msgid "dictionary materialized/dematerialized;"
msgstr "словарь материализованный/дематериализованный;"

#: ../../using/configure.rst:279
msgid "type cache;"
msgstr "тип кэша;"

#: ../../using/configure.rst:280
msgid "optimization attempts;"
msgstr "попытки оптимизации;"

#: ../../using/configure.rst:281
msgid "optimization traces created/executed;"
msgstr "трассы оптимизации созданы/выполнены;"

#: ../../using/configure.rst:282
msgid "uops executed."
msgstr "uops выполнено."

#: ../../using/configure.rst:284
msgid "Garbage collector:"
msgstr "Сборщик мусора:"

#: ../../using/configure.rst:286
msgid "Garbage collections;"
msgstr "Сбор мусора;"

#: ../../using/configure.rst:287
msgid "Objects visited;"
msgstr "Посещенные объекты;"

#: ../../using/configure.rst:288
msgid "Objects collected."
msgstr "Предметы собраны."

#: ../../using/configure.rst:296
msgid ""
"Enables support for running Python without the :term:`global interpreter "
"lock` (GIL): free threading build."
msgstr ""

#: ../../using/configure.rst:299
msgid ""
"Defines the ``Py_GIL_DISABLED`` macro and adds ``\"t\"`` to :data:`sys."
"abiflags`."
msgstr ""
"Определяет макрос ``Py_GIL_DISABLED`` и добавляет ``\"t\"`` в :data:`sys."
"abiflags`."

#: ../../using/configure.rst:302
msgid "See :ref:`whatsnew313-free-threaded-cpython` for more detail."
msgstr ""
"Более подробную информацию смотрите в разделе :ref:`whatsnew313-free-"
"threaded-cpython`."

#: ../../using/configure.rst:308
msgid ""
"Indicate how to integrate the :ref:`experimental just-in-time compiler "
"<whatsnew314-jit-compiler>`."
msgstr ""

#: ../../using/configure.rst:310
msgid "``no``: Don't build the JIT."
msgstr ""

#: ../../using/configure.rst:311
msgid ""
"``yes``: Enable the JIT. To disable it at runtime, set the environment "
"variable :envvar:`PYTHON_JIT=0 <PYTHON_JIT>`."
msgstr ""

#: ../../using/configure.rst:313
msgid ""
"``yes-off``: Build the JIT, but disable it by default. To enable it at "
"runtime, set the environment variable :envvar:`PYTHON_JIT=1 <PYTHON_JIT>`."
msgstr ""

#: ../../using/configure.rst:315
msgid ""
"``interpreter``: Enable the \"JIT interpreter\" (only useful for those "
"debugging the JIT itself). To disable it at runtime, set the environment "
"variable :envvar:`PYTHON_JIT=0 <PYTHON_JIT>`."
msgstr ""

#: ../../using/configure.rst:319
msgid ""
"``--enable-experimental-jit=no`` is the default behavior if the option is "
"not provided, and ``--enable-experimental-jit`` is shorthand for ``--enable-"
"experimental-jit=yes``.  See :file:`Tools/jit/README.md` for more "
"information, including how to install the necessary build-time dependencies."
msgstr ""

#: ../../using/configure.rst:326
msgid ""
"When building CPython with JIT enabled, ensure that your system has Python "
"3.11 or later installed."
msgstr ""

#: ../../using/configure.rst:332
msgid "Path to ``pkg-config`` utility."
msgstr "Путь к утилите pkg-config."

#: ../../using/configure.rst:337
msgid "``pkg-config`` options."
msgstr "Опции ``pkg-config``."

#: ../../using/configure.rst:341
msgid "C compiler options"
msgstr "Параметры компилятора C"

#: ../../using/configure.rst:345 ../../using/configure.rst:1326
msgid "C compiler command."
msgstr "Команда компилятора C."

#: ../../using/configure.rst:349 ../../using/configure.rst:1338
msgid "C compiler flags."
msgstr "Флаги компилятора C."

#: ../../using/configure.rst:353
msgid "C preprocessor command."
msgstr "Команда препроцессора C."

#: ../../using/configure.rst:357
msgid "C preprocessor flags, e.g. :samp:`-I{include_dir}`."
msgstr "Флаги препроцессора C, например :samp:`-I{include_dir}`."

#: ../../using/configure.rst:361 ../../using/configure.rst:830
msgid "Linker options"
msgstr "Параметры компоновщика"

#: ../../using/configure.rst:365
msgid "Linker flags, e.g. :samp:`-L{library_directory}`."
msgstr "Флаги компоновщика, например :samp:`-L{library_directory}`."

#: ../../using/configure.rst:369
msgid "Libraries to pass to the linker, e.g. :samp:`-l{library}`."
msgstr ""
"Библиотеки, которые нужно передать компоновщику, например :samp:`-l{library}"
"`."

#: ../../using/configure.rst:373
msgid "Name for machine-dependent library files."
msgstr "Имя для файлов машинно-зависимой библиотеки."

#: ../../using/configure.rst:377
msgid "Options for third-party dependencies"
msgstr "Варианты сторонних зависимостей"

#: ../../using/configure.rst:384
msgid ""
"C compiler and linker flags to link Python to ``libbz2``, used by :mod:`bz2` "
"module, overriding ``pkg-config``."
msgstr ""
"Флаги компилятора C и компоновщика для связывания Python с libbz2, "
"используемые модулем :mod:bz2, переопределяющие pkg-config."

#: ../../using/configure.rst:390
msgid ""
"C compiler and linker flags for ``libncurses`` or ``libncursesw``, used by :"
"mod:`curses` module, overriding ``pkg-config``."
msgstr ""
"Флаги компилятора и компоновщика C для ``libncurses`` или ``libncursesw``, "
"используемые модулем :mod:`curses`, переопределяющие ``pkg-config``."

#: ../../using/configure.rst:396
msgid "C compiler and linker flags for ``gdbm``."
msgstr "Флаги компилятора C и компоновщика для ``gdbm``."

#: ../../using/configure.rst:401
msgid ""
"C compiler and linker flags for ``libb2`` (:ref:`BLAKE2 <hashlib-blake2>`), "
"used by :mod:`hashlib` module, overriding ``pkg-config``."
msgstr ""
"Флаги компилятора и компоновщика C для libb2 (:ref:`BLAKE2 <hashlib-"
"blake2>`), используемые модулем :mod:`hashlib`, переопределяющие ``pkg-"
"config``."

#: ../../using/configure.rst:407
msgid ""
"C compiler and linker flags for ``libedit``, used by :mod:`readline` module, "
"overriding ``pkg-config``."
msgstr ""
"Флаги компилятора C и компоновщика для ``libedit``, используемые модулем :"
"mod:`readline`, переопределяющие ``pkg-config``."

#: ../../using/configure.rst:413
msgid ""
"C compiler and linker flags for ``libffi``, used by :mod:`ctypes` module, "
"overriding ``pkg-config``."
msgstr ""
"Флаги компилятора C и компоновщика для ``libffi``, используемые модулем :mod:"
"`ctypes`, переопределяющие ``pkg-config``."

#: ../../using/configure.rst:419
msgid ""
"C compiler and linker flags for ``libmpdec``, used by :mod:`decimal` module, "
"overriding ``pkg-config``."
msgstr ""
"Флаги компилятора C и компоновщика для ``libmpdec``, используемые модулем :"
"mod:`decimal`, переопределяющие ``pkg-config``."

#: ../../using/configure.rst:424
msgid ""
"These environment variables have no effect unless :option:`--with-system-"
"libmpdec` is specified."
msgstr ""
"Эти переменные среды не имеют никакого эффекта, если не указан :option:`--"
"with-system-libmpdec`."

#: ../../using/configure.rst:430
msgid ""
"C compiler and linker flags for ``liblzma``, used by :mod:`lzma` module, "
"overriding ``pkg-config``."
msgstr ""
"Флаги компилятора и компоновщика C для ``liblzma``, используемые модулем :"
"mod:`lzma`, переопределяющие ``pkg-config``."

#: ../../using/configure.rst:436
msgid ""
"C compiler and linker flags for ``libreadline``, used by :mod:`readline` "
"module, overriding ``pkg-config``."
msgstr ""
"Флаги компилятора C и компоновщика для ``libreadline``, используемые "
"модулем :mod:`readline`, переопределяющие ``pkg-config``."

#: ../../using/configure.rst:442
msgid ""
"C compiler and linker flags for ``libsqlite3``, used by :mod:`sqlite3` "
"module, overriding ``pkg-config``."
msgstr ""
"Флаги компилятора и компоновщика C для ``libsqlite3``, используемые модулем :"
"mod:`sqlite3`, переопределяющие ``pkg-config``."

#: ../../using/configure.rst:448
msgid ""
"C compiler and linker flags for ``libuuid``, used by :mod:`uuid` module, "
"overriding ``pkg-config``."
msgstr ""
"Флаги компилятора C и компоновщика для ``libuuid``, используемые модулем :"
"mod:`uuid`, переопределяющие ``pkg-config``."

#: ../../using/configure.rst:454
msgid ""
"C compiler and linker flags for ``libzstd``, used by :mod:`compression.zstd` "
"module, overriding ``pkg-config``."
msgstr ""

#: ../../using/configure.rst:462
msgid "C compiler and linker flags for PANEL, overriding ``pkg-config``."
msgstr ""
"Флаги компилятора C и компоновщика для PANEL, переопределяющие ``pkg-"
"config``."

#: ../../using/configure.rst:464
msgid ""
"C compiler and linker flags for ``libpanel`` or ``libpanelw``, used by :mod:"
"`curses.panel` module, overriding ``pkg-config``."
msgstr ""
"Флаги компилятора и компоновщика C для ``libpanel`` или ``libpanelw``, "
"используемые модулем :mod:`curses.panel`, переопределяющие ``pkg-config``."

#: ../../using/configure.rst:470
msgid "C compiler and linker flags for TCLTK, overriding ``pkg-config``."
msgstr ""
"Флаги компилятора и компоновщика C для TCLTK, переопределяющие ``pkg-"
"config``."

#: ../../using/configure.rst:475
msgid ""
"C compiler and linker flags for ``libzlib``, used by :mod:`gzip` module, "
"overriding ``pkg-config``."
msgstr ""
"Флаги компилятора C и компоновщика для ``libzlib``, используемые модулем :"
"mod:`gzip`, переопределяющие ``pkg-config``."

#: ../../using/configure.rst:480
msgid "WebAssembly Options"
msgstr "опции WebAssembly"

#: ../../using/configure.rst:484
msgid "Turn on dynamic linking support for WASM."
msgstr "Включите поддержку динамического связывания для WASM."

#: ../../using/configure.rst:486
msgid ""
"Dynamic linking enables ``dlopen``. File size of the executable increases "
"due to limited dead code elimination and additional features."
msgstr ""
"Динамическое связывание включает ``dlopen``. Размер исполняемого файла "
"увеличивается из-за ограниченного устранения мертвого кода и дополнительных "
"функций."

#: ../../using/configure.rst:493
msgid "Turn on pthreads support for WASM."
msgstr "Включите поддержку pthreads для WASM."

#: ../../using/configure.rst:499
msgid "Install Options"
msgstr "Варианты установки"

#: ../../using/configure.rst:503
msgid ""
"Install architecture-independent files in PREFIX. On Unix, it defaults to :"
"file:`/usr/local`."
msgstr ""
"Установите независимые от архитектуры файлы в PREFIX. В Unix по умолчанию "
"это :file:`/usr/local`."

#: ../../using/configure.rst:506
msgid "This value can be retrieved at runtime using :data:`sys.prefix`."
msgstr ""
"Это значение можно получить во время выполнения, используя :data:`sys."
"prefix`."

#: ../../using/configure.rst:508
msgid ""
"As an example, one can use ``--prefix=\"$HOME/.local/\"`` to install a "
"Python in its home directory."
msgstr ""
"Например, можно использовать ``--prefix=\"$HOME/.local/\"`` для установки "
"Python в его домашний каталог."

#: ../../using/configure.rst:513
msgid ""
"Install architecture-dependent files in EPREFIX, defaults to :option:`--"
"prefix`."
msgstr ""
"Устанавливайте файлы, зависящие от архитектуры, в EPREFIX, по умолчанию "
"используется :option:`--prefix`."

#: ../../using/configure.rst:515
msgid "This value can be retrieved at runtime using :data:`sys.exec_prefix`."
msgstr ""
"Это значение можно получить во время выполнения с помощью :data:`sys."
"exec_prefix`."

#: ../../using/configure.rst:519
msgid ""
"Don't build nor install test modules, like the :mod:`test` package or the :"
"mod:`!_testcapi` extension module (built and installed by default)."
msgstr ""
"Не создавайте и не устанавливайте тестовые модули, такие как пакет :mod:"
"`test` или модуль расширения :mod:`!_testcapi` (собранный и установленный по "
"умолчанию)."

#: ../../using/configure.rst:526
msgid "Select the :mod:`ensurepip` command run on Python installation:"
msgstr "Выберите команду :mod:`ensurepip`, запускаемую при установке Python:"

#: ../../using/configure.rst:528
msgid ""
"``upgrade`` (default): run ``python -m ensurepip --altinstall --upgrade`` "
"command."
msgstr ""
"``upgrade`` (по умолчанию): запустите команду ``python -m securepip --"
"altinstall --upgrade``."

#: ../../using/configure.rst:530
msgid "``install``: run ``python -m ensurepip --altinstall`` command;"
msgstr "``install``: запустите команду ``python -m securepip --altinstall``;"

#: ../../using/configure.rst:531
msgid "``no``: don't run ensurepip;"
msgstr "``нет``: не запускать обеспечения;"

#: ../../using/configure.rst:537
msgid "Performance options"
msgstr "Параметры производительности"

#: ../../using/configure.rst:539
msgid ""
"Configuring Python using ``--enable-optimizations --with-lto`` (PGO + LTO) "
"is recommended for best performance. The experimental ``--enable-bolt`` flag "
"can also be used to improve performance."
msgstr ""
"Для достижения наилучшей производительности рекомендуется настроить Python с "
"использованием ``--enable-optimizations --with-lto`` (PGO + LTO). "
"Экспериментальный флаг --enable-bolt также можно использовать для повышения "
"производительности."

#: ../../using/configure.rst:545
msgid ""
"Enable Profile Guided Optimization (PGO) using :envvar:`PROFILE_TASK` "
"(disabled by default)."
msgstr ""
"Включите оптимизацию по профилю (PGO), используя :envvar:`PROFILE_TASK` (по "
"умолчанию отключено)."

#: ../../using/configure.rst:548
msgid ""
"The C compiler Clang requires ``llvm-profdata`` program for PGO. On macOS, "
"GCC also requires it: GCC is just an alias to Clang on macOS."
msgstr ""
"Компилятору C Clang требуется программа ``llvm-profdata`` для PGO. В macOS "
"этого также требует GCC: GCC — это просто псевдоним Clang в macOS."

#: ../../using/configure.rst:551
msgid ""
"Disable also semantic interposition in libpython if ``--enable-shared`` and "
"GCC is used: add ``-fno-semantic-interposition`` to the compiler and linker "
"flags."
msgstr ""
"Отключите также семантическую интерпозицию в libpython, если используется "
"``--enable-shared`` и GCC: добавьте ``-fno-semantic-interposition`` к флагам "
"компилятора и компоновщика."

#: ../../using/configure.rst:557
msgid ""
"During the build, you may encounter compiler warnings about profile data not "
"being available for some source files. These warnings are harmless, as only "
"a subset of the code is exercised during profile data acquisition. To "
"disable these warnings on Clang, manually suppress them by adding ``-Wno-"
"profile-instr-unprofiled`` to :envvar:`CFLAGS`."
msgstr ""
"Во время сборки вы можете столкнуться с предупреждениями компилятора о том, "
"что данные профиля недоступны для некоторых исходных файлов. Эти "
"предупреждения безвредны, поскольку при получении данных профиля "
"используется только часть кода. Чтобы отключить эти предупреждения в Clang, "
"вручную подавите их, добавив ``-Wno-profile-instr-unprofiled`` в :envvar:"
"`CFLAGS`."

#: ../../using/configure.rst:566
msgid "Use ``-fno-semantic-interposition`` on GCC."
msgstr "Используйте ``-fno-semantic-interposition`` в GCC."

#: ../../using/configure.rst:571
msgid ""
"Environment variable used in the Makefile: Python command line arguments for "
"the PGO generation task."
msgstr ""
"Переменная среды, используемая в аргументах командной строки Makefile: "
"Python для задачи создания PGO."

#: ../../using/configure.rst:574
msgid "Default: ``-m test --pgo --timeout=$(TESTTIMEOUT)``."
msgstr "По умолчанию: ``-m test --pgo --timeout=$(TESTTIMEOUT)``."

#: ../../using/configure.rst:578
msgid "Task failure is no longer ignored silently."
msgstr "Сбой задачи больше не игнорируется молча."

#: ../../using/configure.rst:583
msgid "Enable Link Time Optimization (LTO) in any build (disabled by default)."
msgstr ""
"Включите оптимизацию времени соединения (LTO) в любой сборке (по умолчанию "
"отключено)."

#: ../../using/configure.rst:585
msgid ""
"The C compiler Clang requires ``llvm-ar`` for LTO (``ar`` on macOS), as well "
"as an LTO-aware linker (``ld.gold`` or ``lld``)."
msgstr ""
"Компилятору C Clang требуется ``llvm-ar`` для LTO (``ar`` в macOS), а также "
"компоновщик, поддерживающий LTO (``ld.gold`` или ``lld``)."

#: ../../using/configure.rst:590
msgid "To use ThinLTO feature, use ``--with-lto=thin`` on Clang."
msgstr ""
"Чтобы использовать функцию ThinLTO, используйте ``--with-lto=thin`` в Clang."

#: ../../using/configure.rst:593
msgid ""
"Use ThinLTO as the default optimization policy on Clang if the compiler "
"accepts the flag."
msgstr ""
"Используйте ThinLTO в качестве политики оптимизации по умолчанию в Clang, "
"если компилятор принимает этот флаг."

#: ../../using/configure.rst:598
msgid ""
"Enable usage of the `BOLT post-link binary optimizer <https://github.com/"
"llvm/llvm-project/tree/main/bolt>`_ (disabled by default)."
msgstr ""
"Включите использование `двоичного оптимизатора post-link BOLT <https://"
"github.com/llvm/llvm-project/tree/main/bolt>`_ (отключено по умолчанию)."

#: ../../using/configure.rst:602
msgid ""
"BOLT is part of the LLVM project but is not always included in their binary "
"distributions. This flag requires that ``llvm-bolt`` and ``merge-fdata`` are "
"available."
msgstr ""
"BOLT является частью проекта LLVM, но не всегда включается в их бинарные "
"дистрибутивы. Этот флаг требует, чтобы были доступны ``llvm-bolt`` и ``merge-"
"fdata``."

#: ../../using/configure.rst:606
msgid ""
"BOLT is still a fairly new project so this flag should be considered "
"experimental for now. Because this tool operates on machine code its success "
"is dependent on a combination of the build environment + the other "
"optimization configure args + the CPU architecture, and not all combinations "
"are supported. BOLT versions before LLVM 16 are known to crash BOLT under "
"some scenarios. Use of LLVM 16 or newer for BOLT optimization is strongly "
"encouraged."
msgstr ""
"BOLT — все еще довольно новый проект, поэтому этот флаг пока следует считать "
"экспериментальным. Поскольку этот инструмент работает с машинным кодом, его "
"успех зависит от комбинации среды сборки + других аргументов оптимизации + "
"архитектуры ЦП, и не все комбинации поддерживаются. Известно, что версии "
"BOLT до LLVM 16 приводят к сбою BOLT в некоторых сценариях. Настоятельно "
"рекомендуется использовать LLVM 16 или новее для оптимизации BOLT."

#: ../../using/configure.rst:614
msgid ""
"The :envvar:`!BOLT_INSTRUMENT_FLAGS` and :envvar:`!BOLT_APPLY_FLAGS` :"
"program:`configure` variables can be defined to override the default set of "
"arguments for :program:`llvm-bolt` to instrument and apply BOLT data to "
"binaries, respectively."
msgstr ""
"Переменные :envvar:`!BOLT_INSTRUMENT_FLAGS` и :envvar:`!BOLT_APPLY_FLAGS` :"
"program:`configure` могут быть определены для переопределения набора "
"аргументов по умолчанию для :program:`llvm-bolt` для инструментирования и "
"применения данных BOLT к двоичным файлам. , соответственно."

#: ../../using/configure.rst:623
msgid ""
"Arguments to ``llvm-bolt`` when creating a `BOLT optimized binary <https://"
"github.com/facebookarchive/BOLT>`_."
msgstr ""
"Аргументы ``llvm-bolt`` при создании ``BOLT-оптимизированного двоичного "
"файла <https://github.com/facebookarchive/BOLT>`_."

#: ../../using/configure.rst:630
msgid "Arguments to ``llvm-bolt`` when instrumenting binaries."
msgstr "Аргументы ``llvm-bolt`` при инструментировании двоичных файлов."

#: ../../using/configure.rst:636
msgid ""
"Enable computed gotos in evaluation loop (enabled by default on supported "
"compilers)."
msgstr ""
"Включить вычисляемые переходы в цикле оценки (включено по умолчанию в "
"поддерживаемых компиляторах)."

#: ../../using/configure.rst:641
msgid ""
"Enable interpreters using tail calls in CPython. If enabled, enabling PGO (:"
"option:`--enable-optimizations`) is highly recommended. This option "
"specifically requires a C compiler with proper tail call support, and the "
"`preserve_none <https://clang.llvm.org/docs/AttributeReference.html#preserve-"
"none>`_ calling convention. For example, Clang 19 and newer supports this "
"feature."
msgstr ""

#: ../../using/configure.rst:651
msgid ""
"Disable the fast :ref:`mimalloc <mimalloc>` allocator (enabled by default)."
msgstr ""
"Отключите быстрый распределитель :ref:`mimalloc <mimalloc>` (включен по "
"умолчанию)."

#: ../../using/configure.rst:654 ../../using/configure.rst:661
msgid "See also :envvar:`PYTHONMALLOC` environment variable."
msgstr "См. также переменную среды :envvar:`PYTHONMALLOC`."

#: ../../using/configure.rst:658
msgid ""
"Disable the specialized Python memory allocator :ref:`pymalloc <pymalloc>` "
"(enabled by default)."
msgstr ""
"Отключите специализированный распределитель памяти Python :ref:`pymalloc "
"<pymalloc>` (включен по умолчанию)."

#: ../../using/configure.rst:665
msgid ""
"Disable static documentation strings to reduce the memory footprint (enabled "
"by default). Documentation strings defined in Python are not affected."
msgstr ""
"Отключите статические строки документации, чтобы уменьшить объем памяти "
"(включено по умолчанию). Строки документации, определенные в Python, не "
"затрагиваются."

#: ../../using/configure.rst:668
msgid "Don't define the ``WITH_DOC_STRINGS`` macro."
msgstr "Не определяйте макрос ``WITH_DOC_STRINGS``."

#: ../../using/configure.rst:670
msgid "See the ``PyDoc_STRVAR()`` macro."
msgstr "См. макрос ``PyDoc_STRVAR()``."

#: ../../using/configure.rst:674
msgid "Enable C-level code profiling with ``gprof`` (disabled by default)."
msgstr ""
"Включите профилирование кода уровня C с помощью gprof (по умолчанию "
"отключено)."

#: ../../using/configure.rst:678
msgid ""
"Add ``-fstrict-overflow`` to the C compiler flags (by default we add ``-fno-"
"strict-overflow`` instead)."
msgstr ""
"Добавьте «-fstrict-overflow» к флагам компилятора C (по умолчанию вместо "
"этого мы добавляем «-fno-strict-overflow»)."

#: ../../using/configure.rst:683
msgid ""
"Deactivate remote debugging support described in :pep:`768` (enabled by "
"default). When this flag is provided the code that allows the interpreter to "
"schedule the execution of a Python file in a separate process as described "
"in :pep:`768` is not compiled. This includes both the functionality to "
"schedule code to be executed and the functionality to receive code to be "
"executed."
msgstr ""

#: ../../using/configure.rst:691
msgid ""
"This macro is defined by default, unless Python is configured with :option:"
"`--without-remote-debug`."
msgstr ""

#: ../../using/configure.rst:694
msgid ""
"Note that even if the macro is defined, remote debugging may not be "
"available (for example, on an incompatible platform)."
msgstr ""

#: ../../using/configure.rst:703
msgid "Python Debug Build"
msgstr "Отладочная сборка Python"

#: ../../using/configure.rst:705
msgid ""
"A debug build is Python built with the :option:`--with-pydebug` configure "
"option."
msgstr ""
"Отладочная сборка — это Python, созданный с параметром конфигурации :option:"
"`--with-pydebug`."

#: ../../using/configure.rst:708
msgid "Effects of a debug build:"
msgstr "Эффекты отладочной сборки:"

#: ../../using/configure.rst:710
msgid ""
"Display all warnings by default: the list of default warning filters is "
"empty in the :mod:`warnings` module."
msgstr ""
"По умолчанию отображать все предупреждения: список фильтров предупреждений "
"по умолчанию пуст в модуле :mod:`warnings`."

#: ../../using/configure.rst:712
msgid "Add ``d`` to :data:`sys.abiflags`."
msgstr "Добавьте ``d`` в :data:`sys.abiflags`."

#: ../../using/configure.rst:713
msgid "Add :func:`!sys.gettotalrefcount` function."
msgstr "Добавьте функцию :func:`!sys.gettotalrefcount`."

#: ../../using/configure.rst:714
msgid "Add :option:`-X showrefcount <-X>` command line option."
msgstr "Добавьте параметр командной строки :option:`-X showrefcount <-X>`."

#: ../../using/configure.rst:715
msgid ""
"Add :option:`-d` command line option and :envvar:`PYTHONDEBUG` environment "
"variable to debug the parser."
msgstr ""
"Добавьте параметр командной строки :option:`-d` и переменную среды :envvar:"
"`PYTHONDEBUG` для отладки парсера."

#: ../../using/configure.rst:717
msgid ""
"Add support for the ``__lltrace__`` variable: enable low-level tracing in "
"the bytecode evaluation loop if the variable is defined."
msgstr ""
"Добавьте поддержку переменной ``__lltrace__``: включите низкоуровневую "
"трассировку в цикле оценки байт-кода, если переменная определена."

#: ../../using/configure.rst:719
msgid ""
"Install :ref:`debug hooks on memory allocators <default-memory-allocators>` "
"to detect buffer overflow and other memory errors."
msgstr ""
"Установите :ref:`перехватчики отладки на распределителях памяти <default-"
"memory-allocators>` для обнаружения переполнения буфера и других ошибок "
"памяти."

#: ../../using/configure.rst:721
msgid "Define ``Py_DEBUG`` and ``Py_REF_DEBUG`` macros."
msgstr "Определите макросы Py_DEBUG и Py_REF_DEBUG."

#: ../../using/configure.rst:722
msgid ""
"Add runtime checks: code surrounded by ``#ifdef Py_DEBUG`` and ``#endif``. "
"Enable ``assert(...)`` and ``_PyObject_ASSERT(...)`` assertions: don't set "
"the ``NDEBUG`` macro (see also the :option:`--with-assertions` configure "
"option). Main runtime checks:"
msgstr ""
"Добавьте проверки во время выполнения: код, окруженный ``#ifdef Py_DEBUG`` и "
"``#endif``. Включите утверждения ``assert(...)`` и "
"``_PyObject_ASSERT(...)``: не устанавливайте макрос ``NDEBUG`` (см. также "
"настройку :option:`--with-assertions` вариант). Основные проверки во время "
"выполнения:"

#: ../../using/configure.rst:727
msgid "Add sanity checks on the function arguments."
msgstr "Добавьте проверки работоспособности аргументов функции."

#: ../../using/configure.rst:728
msgid ""
"Unicode and int objects are created with their memory filled with a pattern "
"to detect usage of uninitialized objects."
msgstr ""
"Объекты Unicode и int создаются, память которых заполняется шаблоном для "
"обнаружения использования неинициализированных объектов."

#: ../../using/configure.rst:730
msgid ""
"Ensure that functions which can clear or replace the current exception are "
"not called with an exception raised."
msgstr ""
"Убедитесь, что функции, которые могут очистить или заменить текущее "
"исключение, не вызываются при возникновении исключения."

#: ../../using/configure.rst:732
msgid "Check that deallocator functions don't change the current exception."
msgstr "Убедитесь, что функции освобождения не изменяют текущее исключение."

#: ../../using/configure.rst:733
msgid ""
"The garbage collector (:func:`gc.collect` function) runs some basic checks "
"on objects consistency."
msgstr ""
"Сборщик мусора (функция:func:`gc.collect`) выполняет некоторые базовые "
"проверки согласованности объектов."

#: ../../using/configure.rst:735
msgid ""
"The :c:macro:`!Py_SAFE_DOWNCAST()` macro checks for integer underflow and "
"overflow when downcasting from wide types to narrow types."
msgstr ""
"Макрос :c:macro:`!Py_SAFE_DOWNCAST()` проверяет отсутствие переполнения и "
"переполнения целочисленных значений при понижающем приведении от широких "
"типов к узким типам."

#: ../../using/configure.rst:738
msgid ""
"See also the :ref:`Python Development Mode <devmode>` and the :option:`--"
"with-trace-refs` configure option."
msgstr ""
"См. также :ref:`Режим разработки Python <devmode>` и параметр конфигурации :"
"option:`--with-trace-refs`."

#: ../../using/configure.rst:741
msgid ""
"Release builds and debug builds are now ABI compatible: defining the "
"``Py_DEBUG`` macro no longer implies the ``Py_TRACE_REFS`` macro (see the :"
"option:`--with-trace-refs` option)."
msgstr ""
"Релизные сборки и отладочные сборки теперь совместимы с ABI: определение "
"макроса Py_DEBUG больше не подразумевает использование макроса Py_TRACE_REFS "
"(см. параметр :option:`--with-trace-refs`)."

#: ../../using/configure.rst:748
msgid "Debug options"
msgstr "Параметры отладки"

#: ../../using/configure.rst:752
msgid ""
":ref:`Build Python in debug mode <debug-build>`: define the ``Py_DEBUG`` "
"macro (disabled by default)."
msgstr ""
":ref:`Сборка Python в режиме отладки <debug-build>`: определите макрос "
"``Py_DEBUG`` (отключен по умолчанию)."

#: ../../using/configure.rst:757
msgid "Enable tracing references for debugging purpose (disabled by default)."
msgstr ""
"Включите отслеживание ссылок для целей отладки (по умолчанию отключено)."

#: ../../using/configure.rst:761
msgid "Define the ``Py_TRACE_REFS`` macro."
msgstr "Определите макрос ``Py_TRACE_REFS``."

#: ../../using/configure.rst:762
msgid "Add :func:`sys.getobjects` function."
msgstr "Добавьте функцию :func:`sys.getobjects`."

#: ../../using/configure.rst:763
msgid "Add :envvar:`PYTHONDUMPREFS` environment variable."
msgstr "Добавьте переменную среды :envvar:`PYTHONDUMPREFS`."

#: ../../using/configure.rst:765
msgid ""
"The :envvar:`PYTHONDUMPREFS` environment variable can be used to dump "
"objects and reference counts still alive at Python exit."
msgstr ""
"Переменная среды :envvar:`PYTHONDUMPREFS` может использоваться для вывода "
"объектов и счетчиков ссылок, остающихся живыми при выходе Python."

#: ../../using/configure.rst:768
msgid ":ref:`Statically allocated objects <static-types>` are not traced."
msgstr ":ref:`Статически выделенные объекты <static-types>` не отслеживаются."

#: ../../using/configure.rst:772
msgid ""
"This build is now ABI compatible with release build and :ref:`debug build "
"<debug-build>`."
msgstr ""
"Эта сборка теперь ABI совместима с выпускной сборкой и :ref:`debug build "
"<debug-build>`."

#: ../../using/configure.rst:778
msgid ""
"Build with C assertions enabled (default is no): ``assert(...);`` and "
"``_PyObject_ASSERT(...);``."
msgstr ""
"Сборка с включенными утверждениями C (по умолчанию нет): ``assert(...);`` и "
"``_PyObject_ASSERT(...);``."

#: ../../using/configure.rst:781
msgid ""
"If set, the ``NDEBUG`` macro is not defined in the :envvar:`OPT` compiler "
"variable."
msgstr ""
"Если он установлен, макрос NDEBUG не определен в переменной компилятора :"
"envvar:OPT."

#: ../../using/configure.rst:784
msgid ""
"See also the :option:`--with-pydebug` option (:ref:`debug build <debug-"
"build>`) which also enables assertions."
msgstr ""
"См. также параметр :option:`--with-pydebug` (:ref:`debug build <debug-"
"build>`), который также включает утверждения."

#: ../../using/configure.rst:791
msgid "Enable Valgrind support (default is no)."
msgstr "Включите поддержку Valgrind (по умолчанию нет)."

#: ../../using/configure.rst:795
msgid "Enable DTrace support (default is no)."
msgstr "Включить поддержку DTrace (по умолчанию нет)."

#: ../../using/configure.rst:797
msgid ""
"See :ref:`Instrumenting CPython with DTrace and SystemTap <instrumentation>`."
msgstr ""
"См. :ref:`Инструментирование CPython с помощью DTrace и SystemTap "
"<инструментация>`."

#: ../../using/configure.rst:804
msgid ""
"Enable AddressSanitizer memory error detector, ``asan`` (default is no)."
msgstr ""
"Включить детектор ошибок памяти AddressSanitizer, ``asan`` (по умолчанию — "
"нет)."

#: ../../using/configure.rst:810
msgid ""
"Enable MemorySanitizer allocation error detector, ``msan`` (default is no)."
msgstr ""
"Включить детектор ошибок выделения памяти MemorySanitizer, msan (по "
"умолчанию нет)."

#: ../../using/configure.rst:816
msgid ""
"Enable UndefinedBehaviorSanitizer undefined behaviour detector, ``ubsan`` "
"(default is no)."
msgstr ""
"Включить детектор неопределенного поведения UndefineBehaviorSanitizer, "
"``ubsan`` (по умолчанию — нет)."

#: ../../using/configure.rst:823
msgid "Enable ThreadSanitizer data race detector, ``tsan`` (default is no)."
msgstr ""
"Включить детектор гонки данных ThreadSanitizer, ``tsan`` (по умолчанию — "
"нет)."

#: ../../using/configure.rst:834
msgid "Enable building a shared Python library: ``libpython`` (default is no)."
msgstr ""
"Включите создание общей библиотеки Python: libpython (по умолчанию нет)."

#: ../../using/configure.rst:838
msgid ""
"Do not build ``libpythonMAJOR.MINOR.a`` and do not install ``python.o`` "
"(built and enabled by default)."
msgstr ""
"Не собирайте libpythonMAJOR.MINOR.a и не устанавливайте python.o (собран и "
"включен по умолчанию)."

#: ../../using/configure.rst:845
msgid "Libraries options"
msgstr "Параметры библиотек"

#: ../../using/configure.rst:849
msgid "Link against additional libraries (default is no)."
msgstr "Ссылка на дополнительные библиотеки (по умолчанию нет)."

#: ../../using/configure.rst:853
msgid ""
"Build the :mod:`!pyexpat` module using an installed ``expat`` library "
"(default is no)."
msgstr ""
"Соберите модуль :mod:`!pyexpat`, используя установленную библиотеку "
"``expat`` (по умолчанию — no)."

#: ../../using/configure.rst:858
msgid ""
"Build the ``_decimal`` extension module using an installed ``mpdecimal`` "
"library, see the :mod:`decimal` module (default is yes)."
msgstr ""
"Создайте модуль расширения ``_decimal``, используя установленную библиотеку "
"``mpdecimal``, см. модуль :mod:`decimal` (по умолчанию — Yes)."

#: ../../using/configure.rst:863
msgid "Default to using the installed ``mpdecimal`` library."
msgstr "По умолчанию используется установленная библиотека mpdecimal."

#: ../../using/configure.rst:866
msgid ""
"A copy of the ``mpdecimal`` library sources will no longer be distributed "
"with Python 3.15."
msgstr ""
"Копия исходного кода библиотеки ``mpdecimal`` больше не будет "
"распространяться вместе с Python 3.15."

#: ../../using/configure.rst:870
msgid ":option:`LIBMPDEC_CFLAGS` and :option:`LIBMPDEC_LIBS`."
msgstr ":option:`LIBMPDEC_CFLAGS` и :option:`LIBMPDEC_LIBS`."

#: ../../using/configure.rst:874
msgid "Designate a backend library for the :mod:`readline` module."
msgstr "Назначьте серверную библиотеку для модуля :mod:`readline`."

#: ../../using/configure.rst:876
msgid "readline: Use readline as the backend."
msgstr "readline: используйте readline в качестве бэкэнда."

#: ../../using/configure.rst:877
msgid "editline: Use editline as the backend."
msgstr "editline: используйте Editline в качестве бэкэнда."

#: ../../using/configure.rst:883
msgid "Don't build the :mod:`readline` module (built by default)."
msgstr "Не создавайте модуль :mod:`readline` (собирается по умолчанию)."

#: ../../using/configure.rst:885
msgid "Don't define the ``HAVE_LIBREADLINE`` macro."
msgstr "Не определяйте макрос HAVE_LIBREADLINE."

#: ../../using/configure.rst:891
msgid ""
"Override ``libm`` math library to *STRING* (default is system-dependent)."
msgstr ""
"Заменить математическую библиотеку ``libm`` на *STRING* (по умолчанию "
"зависит от системы)."

#: ../../using/configure.rst:895
msgid "Override ``libc`` C library to *STRING* (default is system-dependent)."
msgstr ""
"Заменить библиотеку ``libc`` C на *STRING* (по умолчанию зависит от системы)."

#: ../../using/configure.rst:899
msgid "Root of the OpenSSL directory."
msgstr "Корень каталога OpenSSL."

#: ../../using/configure.rst:905
msgid "Set runtime library directory (rpath) for OpenSSL libraries:"
msgstr ""
"Установите каталог библиотеки времени выполнения (rpath) для библиотек "
"OpenSSL:"

#: ../../using/configure.rst:907
msgid "``no`` (default): don't set rpath;"
msgstr "``no`` (по умолчанию): не устанавливать rpath;"

#: ../../using/configure.rst:908
msgid ""
"``auto``: auto-detect rpath from :option:`--with-openssl` and ``pkg-config``;"
msgstr ""
"``auto``: автоматическое определение rpath из :option:`--with-openssl` и "
"``pkg-config``;"

#: ../../using/configure.rst:910
msgid "*DIR*: set an explicit rpath."
msgstr "*DIR*: укажите явный путь."

#: ../../using/configure.rst:916
msgid "Security Options"
msgstr "Параметры безопасности"

#: ../../using/configure.rst:920
msgid "Select hash algorithm for use in ``Python/pyhash.c``:"
msgstr "Выберите алгоритм хэширования для использования в ``Python/pyhash.c``:"

#: ../../using/configure.rst:922
msgid "``siphash13`` (default);"
msgstr "``siphash13`` (по умолчанию);"

#: ../../using/configure.rst:923
msgid "``siphash24``;"
msgstr "``siphash24``;"

#: ../../using/configure.rst:924
msgid "``fnv``."
msgstr "``fnv``."

#: ../../using/configure.rst:928
msgid "``siphash13`` is added and it is the new default."
msgstr "Добавлен ``siphash13``, и это новое значение по умолчанию."

#: ../../using/configure.rst:933
msgid "Built-in hash modules:"
msgstr "Встроенные хеш-модули:"

#: ../../using/configure.rst:935
msgid "``md5``;"
msgstr "``md5``;"

#: ../../using/configure.rst:936
msgid "``sha1``;"
msgstr "``sha1``;"

#: ../../using/configure.rst:937
msgid "``sha256``;"
msgstr "``sha256``;"

#: ../../using/configure.rst:938
msgid "``sha512``;"
msgstr "``sha512``;"

#: ../../using/configure.rst:939
msgid "``sha3`` (with shake);"
msgstr "``sha3`` (с встряхиванием);"

#: ../../using/configure.rst:940
msgid "``blake2``."
msgstr "``blake2``."

#: ../../using/configure.rst:946
msgid "Override the OpenSSL default cipher suites string:"
msgstr "Переопределить строку наборов шифров OpenSSL по умолчанию:"

#: ../../using/configure.rst:948
msgid "``python`` (default): use Python's preferred selection;"
msgstr "``python`` (по умолчанию): использовать предпочтительный выбор Python;"

#: ../../using/configure.rst:949
msgid "``openssl``: leave OpenSSL's defaults untouched;"
msgstr "``openssl``: оставьте настройки OpenSSL по умолчанию нетронутыми;"

#: ../../using/configure.rst:950
msgid "*STRING*: use a custom string"
msgstr "*STRING*: использовать пользовательскую строку"

#: ../../using/configure.rst:952
msgid "See the :mod:`ssl` module."
msgstr "См. модуль :mod:`ssl`."

#: ../../using/configure.rst:958
msgid ""
"The settings ``python`` and *STRING* also set TLS 1.2 as minimum protocol "
"version."
msgstr ""
"Настройки ``python`` и *STRING* также устанавливают TLS 1.2 в качестве "
"минимальной версии протокола."

#: ../../using/configure.rst:963
msgid ""
"Disable compiler options that are `recommended by OpenSSF`_ for security "
"reasons with no performance overhead. If this option is not enabled, CPython "
"will be built based on safety compiler options with no slow down. When this "
"option is enabled, CPython will not be built with the compiler options "
"listed below."
msgstr ""

#: ../../using/configure.rst:967
msgid ""
"The following compiler options are disabled with :option:`!--disable-safety`:"
msgstr ""

#: ../../using/configure.rst:969
msgid ""
"`-fstack-protector-strong`_: Enable run-time checks for stack-based buffer "
"overflows."
msgstr ""

#: ../../using/configure.rst:970
msgid ""
"`-Wtrampolines`_: Enable warnings about trampolines that require executable "
"stacks."
msgstr ""

#: ../../using/configure.rst:980
msgid ""
"Enable compiler options that are `recommended by OpenSSF`_ for security "
"reasons which require overhead. If this option is not enabled, CPython will "
"not be built based on safety compiler options which performance impact. When "
"this option is enabled, CPython will be built with the compiler options "
"listed below."
msgstr ""

#: ../../using/configure.rst:984
msgid ""
"The following compiler options are enabled with :option:`!--enable-slower-"
"safety`:"
msgstr ""

#: ../../using/configure.rst:986
msgid ""
"`-D_FORTIFY_SOURCE=3`_: Fortify sources with compile- and run-time checks "
"for unsafe libc usage and buffer overflows."
msgstr ""

#: ../../using/configure.rst:994
msgid "macOS Options"
msgstr "Параметры macOS"

#: ../../using/configure.rst:996
msgid "See :source:`Mac/README.rst`."
msgstr "См. :source:`Mac/README.rst`."

#: ../../using/configure.rst:1001
msgid ""
"Create a universal binary build. *SDKDIR* specifies which macOS SDK should "
"be used to perform the build (default is no)."
msgstr ""
"Создайте универсальную бинарную сборку. *SDKDIR* указывает, какой пакет SDK "
"macOS следует использовать для выполнения сборки (по умолчанию — нет)."

#: ../../using/configure.rst:1007
msgid ""
"Create a Python.framework rather than a traditional Unix install. Optional "
"*INSTALLDIR* specifies the installation path (default is no)."
msgstr ""
"Создайте Python.framework вместо традиционной установки Unix. Необязательный "
"*INSTALLDIR* указывает путь установки (по умолчанию — нет)."

#: ../../using/configure.rst:1012
msgid ""
"Specify the kind of universal binary that should be created. This option is "
"only valid when :option:`--enable-universalsdk` is set."
msgstr ""
"Укажите тип универсального двоичного файла, который следует создать. Этот "
"параметр действителен только в том случае, если установлен :option:`--enable-"
"universalsdk`."

#: ../../using/configure.rst:1015
msgid "Options:"
msgstr "Параметры:"

#: ../../using/configure.rst:1017
msgid "``universal2`` (x86-64 and arm64);"
msgstr ""

#: ../../using/configure.rst:1018
msgid "``32-bit`` (PPC and i386);"
msgstr ""

#: ../../using/configure.rst:1019
msgid "``64-bit``  (PPC64 and x86-64);"
msgstr ""

#: ../../using/configure.rst:1020
msgid "``3-way`` (i386, PPC and x86-64);"
msgstr ""

#: ../../using/configure.rst:1021
msgid "``intel`` (i386 and x86-64);"
msgstr ""

#: ../../using/configure.rst:1022
msgid "``intel-32`` (i386);"
msgstr "``intel-32`` (i386);"

#: ../../using/configure.rst:1023
msgid "``intel-64`` (x86-64);"
msgstr "``intel-64`` (x86-64);"

#: ../../using/configure.rst:1024
msgid "``all``  (PPC, i386, PPC64 and x86-64)."
msgstr ""

#: ../../using/configure.rst:1026
msgid ""
"Note that values for this configuration item are *not* the same as the "
"identifiers used for universal binary wheels on macOS. See the Python "
"Packaging User Guide for details on the `packaging platform compatibility "
"tags used on macOS <https://packaging.python.org/en/latest/specifications/"
"platform-compatibility-tags/#macos>`_"
msgstr ""
"Обратите внимание, что значения для этого элемента конфигурации * не * такие "
"же, как идентификаторы, используемые для универсальных двоичных колес на "
"macOS. См. Руководство пользователя упаковки Python для получения подробной "
"информации о тегах совместимости платформы упаковочной платформы, "
"используемых на macOS <https://packaging.python.org/en/latest/specifications/"
"platform-compatability-tags/#macos> `` _"

#: ../../using/configure.rst:1034
msgid ""
"Specify the name for the python framework on macOS only valid when :option:"
"`--enable-framework` is set (default: ``Python``)."
msgstr ""
"Укажите имя платформы Python в macOS, которое допустимо только в том случае, "
"если установлен :option:`--enable-framework` (по умолчанию: ``Python``)."

#: ../../using/configure.rst:1040
msgid ""
"The Python standard library contains strings that are known to trigger "
"automated inspection tool errors when submitted for distribution by the "
"macOS and iOS App Stores. If enabled, this option will apply the list of "
"patches that are known to correct app store compliance. A custom patch file "
"can also be specified. This option is disabled by default."
msgstr ""
"Стандартная библиотека Python содержит строки, которые, как известно, "
"вызывают ошибки средства автоматической проверки при отправке для "
"распространения в магазинах приложений macOS и iOS. Если этот параметр "
"включен, этот параметр будет применять список исправлений, которые, как "
"известно, исправляют соответствие требованиям магазина приложений. Также "
"можно указать собственный файл патча. Эта опция отключена по умолчанию."

#: ../../using/configure.rst:1049
msgid "iOS Options"
msgstr "Параметры iOS"

#: ../../using/configure.rst:1051
msgid "See :source:`iOS/README.rst`."
msgstr "См. :source:`iOS/README.rst`."

#: ../../using/configure.rst:1055
msgid ""
"Create a Python.framework. Unlike macOS, the *INSTALLDIR* argument "
"specifying the installation path is mandatory."
msgstr ""
"Создайте Python.framework. В отличие от macOS, аргумент *INSTALLDIR*, "
"указывающий путь установки, является обязательным."

#: ../../using/configure.rst:1060
msgid "Specify the name for the framework (default: ``Python``)."
msgstr "Укажите имя платформы (по умолчанию: ``Python``)."

#: ../../using/configure.rst:1064
msgid "Cross Compiling Options"
msgstr "Параметры кросс-компиляции"

#: ../../using/configure.rst:1066
msgid ""
"Cross compiling, also known as cross building, can be used to build Python "
"for another CPU architecture or platform. Cross compiling requires a Python "
"interpreter for the build platform. The version of the build Python must "
"match the version of the cross compiled host Python."
msgstr ""
"Кросс-компиляция, также известная как кросс-сборка, может использоваться для "
"сборки Python для другой архитектуры или платформы ЦП. Для кросс-компиляции "
"требуется интерпретатор Python для платформы сборки. Версия Python сборки "
"должна совпадать с версией кросс-скомпилированного хоста Python."

#: ../../using/configure.rst:1073
msgid ""
"configure for building on BUILD, usually guessed by :program:`config.guess`."
msgstr ""
"configure для сборки на BUILD, обычно угадывается с помощью :program:`config."
"guess`."

#: ../../using/configure.rst:1077
msgid "cross-compile to build programs to run on HOST (target platform)"
msgstr ""
"кросс-компиляция для создания программ для запуска на HOST (целевая "
"платформа)"

#: ../../using/configure.rst:1081
msgid "path to build ``python`` binary for cross compiling"
msgstr "путь для сборки двоичного файла ``python`` для кросс-компиляции"

#: ../../using/configure.rst:1087
msgid "An environment variable that points to a file with configure overrides."
msgstr ""
"Переменная среды, указывающая на файл с переопределениями конфигурации."

#: ../../using/configure.rst:1089
msgid "Example *config.site* file:"
msgstr "Пример файла *config.site*:"

#: ../../using/configure.rst:1091
msgid ""
"# config.site-aarch64\n"
"ac_cv_buggy_getaddrinfo=no\n"
"ac_cv_file__dev_ptmx=yes\n"
"ac_cv_file__dev_ptc=no"
msgstr ""
"# config.site-aarch64\n"
"ac_cv_buggy_getaddrinfo=no\n"
"ac_cv_file__dev_ptmx=yes\n"
"ac_cv_file__dev_ptc=no"

#: ../../using/configure.rst:1100
msgid "Program to run CPython for the host platform for cross-compilation."
msgstr "Программа для запуска CPython на хост-платформе для кросс-компиляции."

#: ../../using/configure.rst:1105
msgid "Cross compiling example::"
msgstr "Пример кросс-компиляции::"

#: ../../using/configure.rst:1107
msgid ""
"CONFIG_SITE=config.site-aarch64 ../configure \\\n"
"    --build=x86_64-pc-linux-gnu \\\n"
"    --host=aarch64-unknown-linux-gnu \\\n"
"    --with-build-python=../x86_64/python"
msgstr ""
"CONFIG_SITE=config.site-aarch64 ../configure \\\n"
"    --build=x86_64-pc-linux-gnu \\\n"
"    --host=aarch64-unknown-linux-gnu \\\n"
"    --with-build-python=../x86_64/python"

#: ../../using/configure.rst:1114
msgid "Python Build System"
msgstr "Система сборки Python"

#: ../../using/configure.rst:1117
msgid "Main files of the build system"
msgstr "Основные файлы системы сборки"

#: ../../using/configure.rst:1119
msgid ":file:`configure.ac` => :file:`configure`;"
msgstr ":file:`configure.ac` => :file:`configure`;"

#: ../../using/configure.rst:1120
msgid ""
":file:`Makefile.pre.in` => :file:`Makefile` (created by :file:`configure`);"
msgstr ""
":file:`Makefile.pre.in` => :file:`Makefile` (создан :file:`configure`);"

#: ../../using/configure.rst:1121
msgid ":file:`pyconfig.h` (created by :file:`configure`);"
msgstr ":file:`pyconfig.h` (created by :file:`configure`);"

#: ../../using/configure.rst:1122
msgid ""
":file:`Modules/Setup`: C extensions built by the Makefile using :file:"
"`Module/makesetup` shell script;"
msgstr ""
":file:`Modules/Setup`: расширения C, созданные Makefile с использованием "
"сценария оболочки :file:`Module/makesetup`;"

#: ../../using/configure.rst:1126
msgid "Main build steps"
msgstr "Основные этапы сборки"

#: ../../using/configure.rst:1128
msgid "C files (``.c``) are built as object files (``.o``)."
msgstr "Файлы C (``.c``) создаются как объектные файлы (``.o``)."

#: ../../using/configure.rst:1129
msgid "A static ``libpython`` library (``.a``) is created from objects files."
msgstr "Статическая библиотека libpython (.a) создается из файлов объектов."

#: ../../using/configure.rst:1130
msgid ""
"``python.o`` and the static ``libpython`` library are linked into the final "
"``python`` program."
msgstr ""
"``python.o`` и статическая библиотека ``libpython`` компонуются в "
"окончательную программу ``python``."

#: ../../using/configure.rst:1132
msgid "C extensions are built by the Makefile (see :file:`Modules/Setup`)."
msgstr "Расширения C создаются с помощью Makefile (см. :file:`Modules/Setup`)."

#: ../../using/configure.rst:1135
msgid "Main Makefile targets"
msgstr "Основные цели Makefile"

#: ../../using/configure.rst:1138
msgid "make"
msgstr "make"

#: ../../using/configure.rst:1140
msgid ""
"For the most part, when rebuilding after editing some code or refreshing "
"your checkout from upstream, all you need to do is execute ``make``, which "
"(per Make's semantics) builds the default target, the first one defined in "
"the Makefile.  By tradition (including in the CPython project) this is "
"usually the ``all`` target. The ``configure`` script expands an ``autoconf`` "
"variable, ``@DEF_MAKE_ALL_RULE@`` to describe precisely which targets ``make "
"all`` will build. The three choices are:"
msgstr ""
"По большей части, при перестроении после редактирования какого-либо кода или "
"обновлении извлечения из исходной версии, все, что вам нужно сделать, это "
"выполнить ``make``, который (в соответствии с семантикой Make) создает цель "
"по умолчанию, первую из них, определенную в Makefile. По традиции (в том "
"числе и в проекте CPython) это обычно цель «все». Скрипт ``configure`` "
"расширяет переменную ``autoconf``, ``@DEF_MAKE_ALL_RULE@``, чтобы точно "
"описать, какие цели будет создавать ``make all``. Три варианта:"

#: ../../using/configure.rst:1149
msgid "``profile-opt`` (configured with ``--enable-optimizations``)"
msgstr "``profile-opt`` (настраивается с помощью ``--enable-optimizations``)"

#: ../../using/configure.rst:1150
msgid ""
"``build_wasm`` (chosen if the host platform matches ``wasm32-wasi*`` or "
"``wasm32-emscripten``)"
msgstr ""

#: ../../using/configure.rst:1152
msgid ""
"``build_all`` (configured without explicitly using either of the others)"
msgstr ""
"``build_all`` (настраивается без явного использования любого из остальных)"

#: ../../using/configure.rst:1154
msgid ""
"Depending on the most recent source file changes, Make will rebuild any "
"targets (object files and executables) deemed out-of-date, including running "
"``configure`` again if necessary. Source/target dependencies are many and "
"maintained manually however, so Make sometimes doesn't have all the "
"information necessary to correctly detect all targets which need to be "
"rebuilt.  Depending on which targets aren't rebuilt, you might experience a "
"number of problems. If you have build or test problems which you can't "
"otherwise explain, ``make clean && make`` should work around most dependency "
"problems, at the expense of longer build times."
msgstr ""
"В зависимости от последних изменений исходного файла Make пересоберет любые "
"целевые файлы (объектные файлы и исполняемые файлы), которые считаются "
"устаревшими, включая повторный запуск ``configure``, если это необходимо. "
"Однако зависимостей источника/цели много, и они поддерживаются вручную, "
"поэтому Make иногда не имеет всей информации, необходимой для правильного "
"определения всех целей, которые необходимо перестроить. В зависимости от "
"того, какие цели не перестраиваются, у вас может возникнуть ряд проблем. "
"Если у вас есть проблемы сборки или тестирования, которые вы не можете "
"объяснить иначе, ``make clean && make`` должен обойти большинство проблем с "
"зависимостями за счет увеличения времени сборки."

#: ../../using/configure.rst:1167
msgid "make platform"
msgstr "сделать платформу"

#: ../../using/configure.rst:1169
msgid ""
"Build the ``python`` program, but don't build the standard library extension "
"modules. This generates a file named ``platform`` which contains a single "
"line describing the details of the build platform, e.g., ``macosx-14.3-"
"arm64-3.12`` or ``linux-x86_64-3.13``."
msgstr ""
"Создайте программу ``python``, но не собирайте модули расширения стандартной "
"библиотеки. При этом создается файл с именем «платформа», который содержит "
"одну строку, описывающую детали платформы сборки, например, «macosx-14.3-"
"arm64-3.12» или «linux-x86_64-3.13»."

#: ../../using/configure.rst:1176
msgid "make profile-opt"
msgstr "сделать выбор профиля"

#: ../../using/configure.rst:1178
msgid ""
"Build Python using profile-guided optimization (PGO).  You can use the "
"configure :option:`--enable-optimizations` option to make this the default "
"target of the ``make`` command (``make all`` or just ``make``)."
msgstr ""
"Создайте Python, используя оптимизацию на основе профиля (PGO). Вы можете "
"использовать опцию configure :option:`--enable-optimizations`, чтобы сделать "
"это целью по умолчанию для команды ``make`` (``make all`` или просто "
"``make``)."

#: ../../using/configure.rst:1186
msgid "make clean"
msgstr "make clean"

#: ../../using/configure.rst:1188
msgid "Remove built files."
msgstr "Удалить встроенные файлы."

#: ../../using/configure.rst:1192
msgid "make distclean"
msgstr "make distclean"

#: ../../using/configure.rst:1194
msgid ""
"In addition to the work done by ``make clean``, remove files created by the "
"configure script.  ``configure`` will have to be run before building again. "
"[#]_"
msgstr ""
"В дополнение к работе, выполняемой командой make clean, удалите файлы, "
"созданные сценарием настройки. Перед повторной сборкой необходимо будет "
"запустить ``configure``. [#]_"

#: ../../using/configure.rst:1200
msgid "make install"
msgstr "make install"

#: ../../using/configure.rst:1202
msgid "Build the ``all`` target and install Python."
msgstr "Создайте цель ``all`` и установите Python."

#: ../../using/configure.rst:1206
msgid "make test"
msgstr "make test"

#: ../../using/configure.rst:1208
msgid ""
"Build the ``all`` target and run the Python test suite with the ``--fast-"
"ci`` option without GUI tests. Variables:"
msgstr ""

#: ../../using/configure.rst:1211
msgid "``TESTOPTS``: additional regrtest command-line options."
msgstr "``TESTOPTS``: дополнительные параметры командной строки regrtest."

#: ../../using/configure.rst:1212
msgid "``TESTPYTHONOPTS``: additional Python command-line options."
msgstr "``TESTPYTHONOPTS``: дополнительные параметры командной строки Python."

#: ../../using/configure.rst:1213
msgid "``TESTTIMEOUT``: timeout in seconds (default: 10 minutes)."
msgstr "``TESTTIMEOUT``: тайм-аут в секундах (по умолчанию: 10 минут)."

#: ../../using/configure.rst:1217
msgid "make ci"
msgstr ""

#: ../../using/configure.rst:1219
msgid ""
"This is similar to ``make test``, but uses the ``-ugui`` to also run GUI "
"tests."
msgstr ""

#: ../../using/configure.rst:1225
msgid "make buildbottest"
msgstr "make buildbottest"

#: ../../using/configure.rst:1227
msgid ""
"This is similar to ``make test``, but uses the ``--slow-ci`` option and "
"default timeout of 20 minutes, instead of ``--fast-ci`` option."
msgstr ""
"Это похоже на make test, но вместо опции ``--fast-ci`` используется опция "
"``--slow-ci`` и время ожидания по умолчанию 20 минут."

#: ../../using/configure.rst:1232
msgid "make regen-all"
msgstr "make regen-all"

#: ../../using/configure.rst:1234
msgid ""
"Regenerate (almost) all generated files. These include (but are not limited "
"to) bytecode cases, and parser generator file. ``make regen-stdlib-module-"
"names`` and ``autoconf`` must be run separately for the remaining `generated "
"files <#generated-files>`_."
msgstr ""
"Восстановите (почти) все сгенерированные файлы. К ним относятся (но не "
"ограничиваются) случаи байт-кода и файл генератора синтаксического "
"анализатора. ``make regen-stdlib-module-names`` и ``autoconf`` должны "
"запускаться отдельно для остальных `сгенерированных файлов <#generated-"
"files>`_."

#: ../../using/configure.rst:1241
msgid "C extensions"
msgstr "Расширения C"

#: ../../using/configure.rst:1243
msgid ""
"Some C extensions are built as built-in modules, like the ``sys`` module. "
"They are built with the ``Py_BUILD_CORE_BUILTIN`` macro defined. Built-in "
"modules have no ``__file__`` attribute:"
msgstr ""
"Некоторые расширения C построены как встроенные модули, например модуль "
"``sys``. Они созданы с использованием макроса ``Py_BUILD_CORE_BUILTIN``. "
"Встроенные модули не имеют атрибута ``__file__``:"

#: ../../using/configure.rst:1247
msgid ""
">>> import sys\n"
">>> sys\n"
"<module 'sys' (built-in)>\n"
">>> sys.__file__\n"
"Traceback (most recent call last):\n"
"  File \"<stdin>\", line 1, in <module>\n"
"AttributeError: module 'sys' has no attribute '__file__'"
msgstr ""
">>> import sys\n"
">>> sys\n"
"<module 'sys' (built-in)>\n"
">>> sys.__file__\n"
"Traceback (most recent call last):\n"
"  File \"<stdin>\", line 1, in <module>\n"
"AttributeError: module 'sys' has no attribute '__file__'"

#: ../../using/configure.rst:1257
msgid ""
"Other C extensions are built as dynamic libraries, like the ``_asyncio`` "
"module. They are built with the ``Py_BUILD_CORE_MODULE`` macro defined. "
"Example on Linux x86-64:"
msgstr ""
"Другие расширения C созданы как динамические библиотеки, например модуль "
"_asyncio. Они созданы с использованием макроса ``Py_BUILD_CORE_MODULE``. "
"Пример для Linux x86-64:"

#: ../../using/configure.rst:1261
msgid ""
">>> import _asyncio\n"
">>> _asyncio\n"
"<module '_asyncio' from '/usr/lib64/python3.9/lib-dynload/_asyncio."
"cpython-39-x86_64-linux-gnu.so'>\n"
">>> _asyncio.__file__\n"
"'/usr/lib64/python3.9/lib-dynload/_asyncio.cpython-39-x86_64-linux-gnu.so'"
msgstr ""
">>> import _asyncio\n"
">>> _asyncio\n"
"<module '_asyncio' from '/usr/lib64/python3.9/lib-dynload/_asyncio."
"cpython-39-x86_64-linux-gnu.so'>\n"
">>> _asyncio.__file__\n"
"'/usr/lib64/python3.9/lib-dynload/_asyncio.cpython-39-x86_64-linux-gnu.so'"

#: ../../using/configure.rst:1269
msgid ""
":file:`Modules/Setup` is used to generate Makefile targets to build C "
"extensions. At the beginning of the files, C extensions are built as built-"
"in modules. Extensions defined after the ``*shared*`` marker are built as "
"dynamic libraries."
msgstr ""
":file:`Modules/Setup` используется для создания целевых файлов Makefile для "
"сборки расширений C. В начале файлов расширения C встроены в виде встроенных "
"модулей. Расширения, определенные после маркера ``*shared*``, создаются как "
"динамические библиотеки."

#: ../../using/configure.rst:1273
msgid ""
"The :c:macro:`!PyAPI_FUNC()`, :c:macro:`!PyAPI_DATA()` and :c:macro:"
"`PyMODINIT_FUNC` macros of :file:`Include/exports.h` are defined differently "
"depending if the ``Py_BUILD_CORE_MODULE`` macro is defined:"
msgstr ""
"Макросы :c:macro:`!PyAPI_FUNC()`, :c:macro:`!PyAPI_DATA()` и :c:macro:"
"`PyMODINIT_FUNC` для :file:`Include/exports.h` определяются по-разному в "
"зависимости от того, определен макрос ``Py_BUILD_CORE_MODULE``:"

#: ../../using/configure.rst:1277
msgid "Use ``Py_EXPORTED_SYMBOL`` if the ``Py_BUILD_CORE_MODULE`` is defined"
msgstr "Используйте Py_EXPORTED_SYMBOL, если Py_BUILD_CORE_MODULE определен."

#: ../../using/configure.rst:1278
msgid "Use ``Py_IMPORTED_SYMBOL`` otherwise."
msgstr "В противном случае используйте ``Py_IMPORTED_SYMBOL``."

#: ../../using/configure.rst:1280
msgid ""
"If the ``Py_BUILD_CORE_BUILTIN`` macro is used by mistake on a C extension "
"built as a shared library, its :samp:`PyInit_{xxx}()` function is not "
"exported, causing an :exc:`ImportError` on import."
msgstr ""
"Если макрос ``Py_BUILD_CORE_BUILTIN`` по ошибке используется в расширении C, "
"созданном как общая библиотека, его функция :samp:`PyInit_{xxx}()` не "
"экспортируется, что приводит к ошибке :exc:`ImportError` при импорте."

#: ../../using/configure.rst:1286
msgid "Compiler and linker flags"
msgstr "Флаги компилятора и компоновщика"

#: ../../using/configure.rst:1288
msgid ""
"Options set by the ``./configure`` script and environment variables and used "
"by ``Makefile``."
msgstr ""
"Параметры, заданные сценарием ``./configure`` и переменными среды и "
"используемые ``Makefile``."

#: ../../using/configure.rst:1292
msgid "Preprocessor flags"
msgstr "Флаги препроцессора"

#: ../../using/configure.rst:1296
msgid ""
"Value of :envvar:`CPPFLAGS` variable passed to the ``./configure`` script."
msgstr ""
"Значение переменной :envvar:`CPPFLAGS`, передаваемое в скрипт ``./"
"configure``."

#: ../../using/configure.rst:1302
msgid ""
"(Objective) C/C++ preprocessor flags, e.g. :samp:`-I{include_dir}` if you "
"have headers in a nonstandard directory *include_dir*."
msgstr ""
"(Цель) Флаги препроцессора C/C++, например :samp:`-I{include_dir}`, если у "
"вас есть заголовки в нестандартном каталоге *include_dir*."

#: ../../using/configure.rst:1305 ../../using/configure.rst:1495
msgid ""
"Both :envvar:`CPPFLAGS` and :envvar:`LDFLAGS` need to contain the shell's "
"value to be able to build extension modules using the directories specified "
"in the environment variables."
msgstr ""
"И :envvar:`CPPFLAGS`, и :envvar:`LDFLAGS` должны содержать значение "
"оболочки, чтобы иметь возможность создавать модули расширения, используя "
"каталоги, указанные в переменных среды."

#: ../../using/configure.rst:1315
msgid ""
"Extra preprocessor flags added for building the interpreter object files."
msgstr ""
"Добавлены дополнительные флаги препроцессора для создания объектных файлов "
"интерпретатора."

#: ../../using/configure.rst:1317
msgid ""
"Default: ``$(BASECPPFLAGS) -I. -I$(srcdir)/Include $(CONFIGURE_CPPFLAGS) "
"$(CPPFLAGS)``."
msgstr ""
"По умолчанию: ``$(BASECPPFLAGS) -I. -I$(srcdir)/Включить "
"$(CONFIGURE_CPPFLAGS) $(CPPFLAGS)``."

#: ../../using/configure.rst:1322
msgid "Compiler flags"
msgstr "Флаги компилятора"

#: ../../using/configure.rst:1328
msgid "Example: ``gcc -pthread``."
msgstr "Пример: ``gcc -pthread``."

#: ../../using/configure.rst:1332
msgid "C++ compiler command."
msgstr "Команда компилятора C++."

#: ../../using/configure.rst:1334
msgid "Example: ``g++ -pthread``."
msgstr "Пример: ``g++ -pthread``."

#: ../../using/configure.rst:1342
msgid ""
":envvar:`CFLAGS_NODIST` is used for building the interpreter and stdlib C "
"extensions.  Use it when a compiler flag should *not* be part of :envvar:"
"`CFLAGS` once Python is installed (:gh:`65320`)."
msgstr ""
":envvar:`CFLAGS_NODIST` используется для создания интерпретатора и "
"расширений C stdlib. Используйте его, когда флаг компилятора *не* должен "
"быть частью :envvar:`CFLAGS` после установки Python (:gh:`65320`)."

#: ../../using/configure.rst:1346
msgid "In particular, :envvar:`CFLAGS` should not contain:"
msgstr "В частности, :envvar:`CFLAGS` не должен содержать:"

#: ../../using/configure.rst:1348
msgid ""
"the compiler flag ``-I`` (for setting the search path for include files). "
"The ``-I`` flags are processed from left to right, and any flags in :envvar:"
"`CFLAGS` would take precedence over user- and package-supplied ``-I`` flags."
msgstr ""
"флаг компилятора ``-I`` (для установки пути поиска включаемых файлов). Флаги "
"``-I`` обрабатываются слева направо, и любые флаги в :envvar:`CFLAGS` будут "
"иметь приоритет над флагами ``-I``, предоставленными пользователем и пакетом."

#: ../../using/configure.rst:1353
msgid ""
"hardening flags such as ``-Werror`` because distributions cannot control "
"whether packages installed by users conform to such heightened standards."
msgstr ""
"флаги жесткости, такие как «-Werror», поскольку дистрибутивы не могут "
"контролировать, соответствуют ли пакеты, установленные пользователями, таким "
"повышенным стандартам."

#: ../../using/configure.rst:1361
msgid ""
"Options passed to the :mod:`compileall` command line when building PYC files "
"in ``make install``. Default: ``-j0``."
msgstr ""
"Параметры, передаваемые в командную строку :mod:`compileall` при сборке "
"файлов PYC в ``make install``. По умолчанию: ``-j0``."

#: ../../using/configure.rst:1368
msgid "Extra C compiler flags."
msgstr "Дополнительные флаги компилятора C."

#: ../../using/configure.rst:1372
msgid ""
"Value of :envvar:`CFLAGS` variable passed to the ``./configure`` script."
msgstr ""
"Значение переменной :envvar:`CFLAGS` передается в скрипт ``./configure``."

#: ../../using/configure.rst:1379
msgid ""
"Value of :envvar:`CFLAGS_NODIST` variable passed to the ``./configure`` "
"script."
msgstr ""
"Значение переменной :envvar:`CFLAGS_NODIST` передается в скрипт ``./"
"configure``."

#: ../../using/configure.rst:1386
msgid "Base compiler flags."
msgstr "Базовые флаги компилятора."

#: ../../using/configure.rst:1390
msgid "Optimization flags."
msgstr "Флаги оптимизации."

#: ../../using/configure.rst:1394
msgid "Strict or non-strict aliasing flags used to compile ``Python/dtoa.c``."
msgstr ""
"Строгие или нестрогие флаги псевдонимов, используемые для компиляции Python/"
"dtoa.c."

#: ../../using/configure.rst:1400
msgid "Compiler flags used to build a shared library."
msgstr "Флаги компилятора, используемые для создания общей библиотеки."

#: ../../using/configure.rst:1402
msgid "For example, ``-fPIC`` is used on Linux and on BSD."
msgstr "Например, ``-fPIC`` используется в Linux и BSD."

#: ../../using/configure.rst:1406
msgid "Extra C flags added for building the interpreter object files."
msgstr ""
"Добавлены дополнительные флаги C для создания объектных файлов "
"интерпретатора."

#: ../../using/configure.rst:1408
msgid ""
"Default: ``$(CCSHARED)`` when :option:`--enable-shared` is used, or an empty "
"string otherwise."
msgstr ""
"По умолчанию: ``$(CCSHARED)``, если используется :option:`--enable-shared`, "
"или пустая строка в противном случае."

#: ../../using/configure.rst:1413
msgid ""
"Default: ``$(BASECFLAGS) $(OPT) $(CONFIGURE_CFLAGS) $(CFLAGS) "
"$(EXTRA_CFLAGS)``."
msgstr ""
"По умолчанию: ``$(BASECFLAGS) $(OPT) $(CONFIGURE_CFLAGS) $(CFLAGS) "
"$(EXTRA_CFLAGS)``."

#: ../../using/configure.rst:1417
msgid ""
"Default: ``$(CONFIGURE_CFLAGS_NODIST) $(CFLAGS_NODIST) -I$(srcdir)/Include/"
"internal``."
msgstr ""
"По умолчанию: ``$(CONFIGURE_CFLAGS_NODIST) $(CFLAGS_NODIST) -I$(srcdir)/"
"Include/internal``."

#: ../../using/configure.rst:1423
msgid "C flags used for building the interpreter object files."
msgstr "Флаги C, используемые для создания объектных файлов интерпретатора."

#: ../../using/configure.rst:1425
msgid ""
"Default: ``$(PY_CFLAGS) $(PY_CFLAGS_NODIST) $(PY_CPPFLAGS) "
"$(CFLAGSFORSHARED)``."
msgstr ""
"По умолчанию: ``$(PY_CFLAGS) $(PY_CFLAGS_NODIST) $(PY_CPPFLAGS) "
"$(CFLAGSFORSHARED)``."

#: ../../using/configure.rst:1431
msgid "Default: ``$(PY_STDMODULE_CFLAGS) -DPy_BUILD_CORE``."
msgstr "По умолчанию: ``$(PY_STDMODULE_CFLAGS) -DPy_BUILD_CORE``."

#: ../../using/configure.rst:1437
msgid ""
"Compiler flags to build a standard library extension module as a built-in "
"module, like the :mod:`posix` module."
msgstr ""
"Флаги компилятора для создания модуля расширения стандартной библиотеки как "
"встроенного модуля, например модуля :mod:`posix`."

#: ../../using/configure.rst:1440
msgid "Default: ``$(PY_STDMODULE_CFLAGS) -DPy_BUILD_CORE_BUILTIN``."
msgstr "По умолчанию: ``$(PY_STDMODULE_CFLAGS) -DPy_BUILD_CORE_BUILTIN``."

#: ../../using/configure.rst:1446
msgid "Purify command. Purify is a memory debugger program."
msgstr "Команда «Очистить». Purify — программа отладчика памяти."

#: ../../using/configure.rst:1448
msgid "Default: empty string (not used)."
msgstr "По умолчанию: пустая строка (не используется)."

#: ../../using/configure.rst:1452
msgid "Linker flags"
msgstr "Флаги компоновщика"

#: ../../using/configure.rst:1456
msgid ""
"Linker command used to build programs like ``python`` and ``_testembed``."
msgstr ""
"Команда компоновщика, используемая для сборки таких программ, как ``python`` "
"и ``_testembed``."

#: ../../using/configure.rst:1458
msgid "Default: ``$(PURIFY) $(CC)``."
msgstr "Default: ``$(PURIFY) $(CC)``."

#: ../../using/configure.rst:1462
msgid ""
"Value of :envvar:`LDFLAGS` variable passed to the ``./configure`` script."
msgstr ""
"Значение переменной :envvar:`LDFLAGS` передается в скрипт ``./configure``."

#: ../../using/configure.rst:1464
msgid ""
"Avoid assigning :envvar:`CFLAGS`, :envvar:`LDFLAGS`, etc. so users can use "
"them on the command line to append to these values without stomping the pre-"
"set values."
msgstr ""
"Избегайте назначения :envvar:`CFLAGS`, :envvar:`LDFLAGS` и т. д., чтобы "
"пользователи могли использовать их в командной строке для добавления к этим "
"значениям, не нарушая заранее заданные значения."

#: ../../using/configure.rst:1472
msgid ""
":envvar:`LDFLAGS_NODIST` is used in the same manner as :envvar:"
"`CFLAGS_NODIST`.  Use it when a linker flag should *not* be part of :envvar:"
"`LDFLAGS` once Python is installed (:gh:`65320`)."
msgstr ""
":envvar:`LDFLAGS_NODIST` используется так же, как :envvar:`CFLAGS_NODIST`. "
"Используйте его, когда флаг компоновщика *не* должен быть частью :envvar:"
"`LDFLAGS` после установки Python (:gh:`65320`)."

#: ../../using/configure.rst:1476
msgid "In particular, :envvar:`LDFLAGS` should not contain:"
msgstr "В частности, :envvar:`LDFLAGS` не должен содержать:"

#: ../../using/configure.rst:1478
msgid ""
"the compiler flag ``-L`` (for setting the search path for libraries). The ``-"
"L`` flags are processed from left to right, and any flags in :envvar:"
"`LDFLAGS` would take precedence over user- and package-supplied ``-L`` flags."
msgstr ""
"флаг компилятора ``-L`` (для установки пути поиска библиотек). Флаги ``-L`` "
"обрабатываются слева направо, и любые флаги в :envvar:`LDFLAGS` будут иметь "
"приоритет над флагами ``-L``, предоставленными пользователем и пакетом."

#: ../../using/configure.rst:1485
msgid ""
"Value of :envvar:`LDFLAGS_NODIST` variable passed to the ``./configure`` "
"script."
msgstr ""
"Значение переменной :envvar:`LDFLAGS_NODIST` передается в скрипт ``./"
"configure``."

#: ../../using/configure.rst:1492
msgid ""
"Linker flags, e.g. :samp:`-L{lib_dir}` if you have libraries in a "
"nonstandard directory *lib_dir*."
msgstr ""
"Флаги компоновщика, например :samp:`-L{lib_dir}`, если у вас есть библиотеки "
"в нестандартном каталоге *lib_dir*."

#: ../../using/configure.rst:1501
msgid ""
"Linker flags to pass libraries to the linker when linking the Python "
"executable."
msgstr ""
"Флаги компоновщика для передачи библиотек компоновщику при связывании "
"исполняемого файла Python."

#: ../../using/configure.rst:1504
msgid "Example: ``-lrt``."
msgstr "Пример: ``-lrt``."

#: ../../using/configure.rst:1508
msgid "Command to build a shared library."
msgstr "Команда для создания общей библиотеки."

#: ../../using/configure.rst:1510
msgid "Default: ``@LDSHARED@ $(PY_LDFLAGS)``."
msgstr "По умолчанию: ``@LDSHARED@ $(PY_LDFLAGS)``."

#: ../../using/configure.rst:1514
msgid "Command to build ``libpython`` shared library."
msgstr "Команда для создания общей библиотеки libpython."

#: ../../using/configure.rst:1516
msgid "Default: ``@BLDSHARED@ $(PY_CORE_LDFLAGS)``."
msgstr "По умолчанию: ``@BLDSHARED@ $(PY_CORE_LDFLAGS)``."

#: ../../using/configure.rst:1520
msgid "Default: ``$(CONFIGURE_LDFLAGS) $(LDFLAGS)``."
msgstr "По умолчанию: ``$(CONFIGURE_LDFLAGS) $(LDFLAGS)``."

#: ../../using/configure.rst:1524
msgid "Default: ``$(CONFIGURE_LDFLAGS_NODIST) $(LDFLAGS_NODIST)``."
msgstr "По умолчанию: ``$(CONFIGURE_LDFLAGS_NODIST) $(LDFLAGS_NODIST)``."

#: ../../using/configure.rst:1530
msgid "Linker flags used for building the interpreter object files."
msgstr ""
"Флаги компоновщика, используемые для создания объектных файлов "
"интерпретатора."

#: ../../using/configure.rst:1536
msgid "Footnotes"
msgstr "Сноски"

#: ../../using/configure.rst:1537
msgid ""
"``git clean -fdx`` is an even more extreme way to \"clean\" your checkout. "
"It removes all files not known to Git. When bug hunting using ``git "
"bisect``, this is `recommended between probes <https://github.com/python/"
"cpython/issues/114505#issuecomment-1907021718>`_ to guarantee a completely "
"clean build. **Use with care**, as it will delete all files not checked into "
"Git, including your new, uncommitted work."
msgstr ""
"``git clean -fdx`` — еще более экстремальный способ «очистить» вашу "
"проверку. Он удаляет все файлы, неизвестные Git. При поиске ошибок с "
"использованием ``git bisect`` это `рекомендуется между проверками <https://"
"github.com/python/cpython/issues/114505#issuecomment-1907021718>`_, чтобы "
"гарантировать полностью чистую сборку. **Используйте с осторожностью**, так "
"как при этом будут удалены все файлы, не проверенные в Git, включая вашу "
"новую незафиксированную работу."
