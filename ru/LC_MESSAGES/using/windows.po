# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# Rafael Fontenelle <rffontenelle@gmail.com>, 2024
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.11\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-01-03 15:28+0000\n"
"PO-Revision-Date: 2023-05-24 02:23+0000\n"
"Last-Translator: Rafael Fontenelle <rffontenelle@gmail.com>, 2024\n"
"Language-Team: Russian (https://app.transifex.com/python-doc/teams/5390/"
"ru/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ru\n"
"Plural-Forms: nplurals=4; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && "
"n%10<=4 && (n%100<12 || n%100>14) ? 1 : n%10==0 || (n%10>=5 && n%10<=9) || "
"(n%100>=11 && n%100<=14)? 2 : 3);\n"

#: ../../using/windows.rst:7
msgid "Using Python on Windows"
msgstr "Использование Python в Windows"

#: ../../using/windows.rst:12
msgid ""
"This document aims to give an overview of Windows-specific behaviour you "
"should know about when using Python on Microsoft Windows."
msgstr ""
"Целью этого документа является предоставление обзора поведения, специфичного "
"для Windows, о котором вам следует знать при использовании Python в "
"Microsoft Windows."

#: ../../using/windows.rst:15
msgid ""
"Unlike most Unix systems and services, Windows does not include a system "
"supported installation of Python. To make Python available, the CPython team "
"has compiled Windows installers with every `release <https://www.python.org/"
"downloads/>`_ for many years. These installers are primarily intended to add "
"a per-user installation of Python, with the core interpreter and library "
"being used by a single user. The installer is also able to install for all "
"users of a single machine, and a separate ZIP file is available for "
"application-local distributions."
msgstr ""
"В отличие от большинства систем и служб Unix, Windows не включает "
"поддерживаемую системой установку Python. Чтобы сделать Python доступным, "
"команда CPython на протяжении многих лет компилировала установщики Windows с "
"каждым `выпуском <https://www.python.org/downloads/>`_. Эти установщики в "
"первую очередь предназначены для добавления индивидуальной установки Python, "
"при этом основной интерпретатор и библиотека используются одним "
"пользователем. Установщик также может устанавливаться для всех пользователей "
"одного компьютера, а для локальных дистрибутивов приложения доступен "
"отдельный ZIP-файл."

#: ../../using/windows.rst:24
msgid ""
"As specified in :pep:`11`, a Python release only supports a Windows platform "
"while Microsoft considers the platform under extended support. This means "
"that Python |version| supports Windows 8.1 and newer. If you require Windows "
"7 support, please install Python 3.8."
msgstr ""
"Как указано в :pep:`11`, версия Python поддерживает только платформу "
"Windows, в то время как Microsoft рассматривает платформу с расширенной "
"поддержкой. Это означает, что Питон |версия| поддерживает Windows 8.1 и "
"новее. Если вам требуется поддержка Windows 7, установите Python 3.8."

#: ../../using/windows.rst:29
msgid ""
"There are a number of different installers available for Windows, each with "
"certain benefits and downsides."
msgstr ""
"Для Windows доступно несколько различных установщиков, каждый из которых "
"имеет определенные преимущества и недостатки."

#: ../../using/windows.rst:32
msgid ""
":ref:`windows-full` contains all components and is the best option for "
"developers using Python for any kind of project."
msgstr ""
":ref:`windows-full` содержит все компоненты и является лучшим вариантом для "
"разработчиков, использующих Python для любого проекта."

#: ../../using/windows.rst:35
msgid ""
":ref:`windows-store` is a simple installation of Python that is suitable for "
"running scripts and packages, and using IDLE or other development "
"environments. It requires Windows 10 and above, but can be safely installed "
"without corrupting other programs. It also provides many convenient commands "
"for launching Python and its tools."
msgstr ""
":ref:`windows-store` — это простая установка Python, которая подходит для "
"запуска скриптов и пакетов, а также использования IDLE или других сред "
"разработки. Для него требуется Windows 10 и выше, но его можно безопасно "
"установить, не повреждая другие программы. Он также предоставляет множество "
"удобных команд для запуска Python и его инструментов."

#: ../../using/windows.rst:41
msgid ""
":ref:`windows-nuget` are lightweight installations intended for continuous "
"integration systems. It can be used to build Python packages or run scripts, "
"but is not updateable and has no user interface tools."
msgstr ""
":ref:`windows-nuget` — это облегченные установки, предназначенные для систем "
"непрерывной интеграции. Его можно использовать для сборки пакетов Python или "
"запуска сценариев, но он не подлежит обновлению и не имеет инструментов "
"пользовательского интерфейса."

#: ../../using/windows.rst:45
msgid ""
":ref:`windows-embeddable` is a minimal package of Python suitable for "
"embedding into a larger application."
msgstr ""
":ref:`windows-embeddable` — это минимальный пакет Python, подходящий для "
"встраивания в более крупное приложение."

#: ../../using/windows.rst:52
msgid "The full installer"
msgstr "Полная программа установки"

#: ../../using/windows.rst:55
msgid "Installation steps"
msgstr "Этапы установки"

#: ../../using/windows.rst:57
msgid ""
"Four Python |version| installers are available for download - two each for "
"the 32-bit and 64-bit versions of the interpreter. The *web installer* is a "
"small initial download, and it will automatically download the required "
"components as necessary. The *offline installer* includes the components "
"necessary for a default installation and only requires an internet "
"connection for optional features. See :ref:`install-layout-option` for other "
"ways to avoid downloading during installation."
msgstr ""
"Четыре питона |версия| для скачивания доступны установщики — по два для 32-"
"битной и 64-битной версии интерпретатора. *Веб-установщик* — это небольшая "
"первоначальная загрузка, которая при необходимости автоматически загрузит "
"необходимые компоненты. *Автономный установщик* включает в себя компоненты, "
"необходимые для установки по умолчанию, и требует только подключения к "
"Интернету для использования дополнительных функций. См. :ref:`install-layout-"
"option`, чтобы узнать о других способах избежать загрузки во время установки."

#: ../../using/windows.rst:65
msgid "After starting the installer, one of two options may be selected:"
msgstr "После запуска установщика можно выбрать один из двух вариантов:"

#: ../../using/windows.rst:69
msgid "If you select \"Install Now\":"
msgstr "Если вы выберете «Установить сейчас»:"

#: ../../using/windows.rst:71
msgid ""
"You will *not* need to be an administrator (unless a system update for the C "
"Runtime Library is required or you install the :ref:`launcher` for all users)"
msgstr ""
"Вам *не* обязательно быть администратором (если не требуется обновление "
"системы для библиотеки времени выполнения C или если вы не устанавливаете :"
"ref:`launcher` для всех пользователей)"

#: ../../using/windows.rst:74
msgid "Python will be installed into your user directory"
msgstr "Python будет установлен в ваш пользовательский каталог."

#: ../../using/windows.rst:75
msgid ""
"The :ref:`launcher` will be installed according to the option at the bottom "
"of the first page"
msgstr ""
":ref:`launcher` будет установлен в соответствии с опцией внизу первой "
"страницы."

#: ../../using/windows.rst:77
msgid "The standard library, test suite, launcher and pip will be installed"
msgstr ""
"Будет установлена ​​стандартная библиотека, набор тестов, программа запуска и "
"pip."

#: ../../using/windows.rst:78
msgid "If selected, the install directory will be added to your :envvar:`PATH`"
msgstr ""
"Если этот флажок установлен, каталог установки будет добавлен в ваш :envvar:"
"`PATH`"

#: ../../using/windows.rst:79
msgid "Shortcuts will only be visible for the current user"
msgstr "Ярлыки будут видны только текущему пользователю."

#: ../../using/windows.rst:81
msgid ""
"Selecting \"Customize installation\" will allow you to select the features "
"to install, the installation location and other options or post-install "
"actions. To install debugging symbols or binaries, you will need to use this "
"option."
msgstr ""
"Выбор «Настроить установку» позволит вам выбрать функции для установки, "
"место установки и другие параметры или действия после установки. Чтобы "
"установить символы отладки или двоичные файлы, вам нужно будет использовать "
"эту опцию."

#: ../../using/windows.rst:85
msgid ""
"To perform an all-users installation, you should select \"Customize "
"installation\". In this case:"
msgstr ""
"Чтобы выполнить установку для всех пользователей, следует выбрать «Настроить "
"установку». В этом случае:"

#: ../../using/windows.rst:88
msgid "You may be required to provide administrative credentials or approval"
msgstr ""
"Вам может потребоваться предоставить административные полномочия или "
"разрешение."

#: ../../using/windows.rst:89
msgid "Python will be installed into the Program Files directory"
msgstr "Python будет установлен в каталог Program Files."

#: ../../using/windows.rst:90
msgid "The :ref:`launcher` will be installed into the Windows directory"
msgstr ":ref:`launcher` будет установлен в каталог Windows."

#: ../../using/windows.rst:91
msgid "Optional features may be selected during installation"
msgstr "Дополнительные функции могут быть выбраны во время установки."

#: ../../using/windows.rst:92
msgid "The standard library can be pre-compiled to bytecode"
msgstr "Стандартную библиотеку можно предварительно скомпилировать в байт-код."

#: ../../using/windows.rst:93
msgid ""
"If selected, the install directory will be added to the system :envvar:`PATH`"
msgstr ""
"Если выбрано, каталог установки будет добавлен в систему :envvar:`PATH`"

#: ../../using/windows.rst:94
msgid "Shortcuts are available for all users"
msgstr "Ярлыки доступны всем пользователям."

#: ../../using/windows.rst:99
msgid "Removing the MAX_PATH Limitation"
msgstr "Удаление ограничения MAX_PATH"

#: ../../using/windows.rst:101
msgid ""
"Windows historically has limited path lengths to 260 characters. This meant "
"that paths longer than this would not resolve and errors would result."
msgstr ""
"Windows исторически имеет ограничение длины пути до 260 символов. Это "
"означало, что пути, более длинные, не разрешались, и это приводило к ошибкам."

#: ../../using/windows.rst:104
msgid ""
"In the latest versions of Windows, this limitation can be expanded to "
"approximately 32,000 characters. Your administrator will need to activate "
"the \"Enable Win32 long paths\" group policy, or set ``LongPathsEnabled`` to "
"``1`` in the registry key "
"``HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\FileSystem``."
msgstr ""
"В последних версиях Windows это ограничение можно расширить примерно до 32 "
"000 символов. Вашему администратору необходимо будет активировать групповую "
"политику «Включить длинные пути Win32» или установить для параметра "
"«LongPathsEnabled» значение «1» в ключе реестра "
"«HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\FileSystem»."

#: ../../using/windows.rst:110
msgid ""
"This allows the :func:`open` function, the :mod:`os` module and most other "
"path functionality to accept and return paths longer than 260 characters."
msgstr ""
"Это позволяет функции :func:`open`, модулю :mod:`os` и большинству других "
"функций пути принимать и возвращать пути длиной более 260 символов."

#: ../../using/windows.rst:113
msgid "After changing the above option, no further configuration is required."
msgstr "После изменения вышеуказанной опции дальнейшая настройка не требуется."

#: ../../using/windows.rst:117
msgid "Support for long paths was enabled in Python."
msgstr "В Python включена поддержка длинных путей."

#: ../../using/windows.rst:122
msgid "Installing Without UI"
msgstr "Установка без пользовательского интерфейса"

#: ../../using/windows.rst:124
msgid ""
"All of the options available in the installer UI can also be specified from "
"the command line, allowing scripted installers to replicate an installation "
"on many machines without user interaction.  These options may also be set "
"without suppressing the UI in order to change some of the defaults."
msgstr ""
"Все параметры, доступные в пользовательском интерфейсе установщика, также "
"можно указать из командной строки, что позволяет установщикам по сценарию "
"реплицировать установку на многих компьютерах без взаимодействия с "
"пользователем. Эти параметры также можно установить без отключения "
"пользовательского интерфейса, чтобы изменить некоторые значения по умолчанию."

#: ../../using/windows.rst:129
msgid ""
"To completely hide the installer UI and install Python silently, pass the ``/"
"quiet`` option. To skip past the user interaction but still display progress "
"and errors, pass the ``/passive`` option. The ``/uninstall`` option may be "
"passed to immediately begin removing Python - no confirmation prompt will be "
"displayed."
msgstr ""

#: ../../using/windows.rst:135
msgid ""
"All other options are passed as ``name=value``, where the value is usually "
"``0`` to disable a feature, ``1`` to enable a feature, or a path. The full "
"list of available options is shown below."
msgstr ""
"Все остальные параметры передаются как ``name=value``, где значение обычно "
"равно ``0`` для отключения функции, ``1`` для включения функции или пути. "
"Полный список доступных опций показан ниже."

#: ../../using/windows.rst:140 ../../using/windows.rst:1069
msgid "Name"
msgstr "Имя"

#: ../../using/windows.rst:140 ../../using/windows.rst:1069
msgid "Description"
msgstr "Описание"

#: ../../using/windows.rst:140
msgid "Default"
msgstr "значение по умолчанию"

#: ../../using/windows.rst:142
msgid "InstallAllUsers"
msgstr "InstallAllUsers"

#: ../../using/windows.rst:142
msgid "Perform a system-wide installation."
msgstr "Выполните общесистемную установку."

#: ../../using/windows.rst:142 ../../using/windows.rst:168
#: ../../using/windows.rst:171 ../../using/windows.rst:175
#: ../../using/windows.rst:184 ../../using/windows.rst:206
#: ../../using/windows.rst:214 ../../using/windows.rst:217
msgid "0"
msgstr "0"

#: ../../using/windows.rst:144
msgid "TargetDir"
msgstr "TargetDir"

#: ../../using/windows.rst:144
msgid "The installation directory"
msgstr "Каталог установки"

#: ../../using/windows.rst:144
msgid "Selected based on InstallAllUsers"
msgstr "Выбрано на основе InstallAllUsers"

#: ../../using/windows.rst:147
msgid "DefaultAllUsersTargetDir"
msgstr "DefaultAllUsersTargetDir"

#: ../../using/windows.rst:147
msgid "The default installation directory for all-user installs"
msgstr "Каталог установки по умолчанию для общепользовательских установок."

#: ../../using/windows.rst:147
msgid ""
":file:`%ProgramFiles%\\\\\\ Python X.Y` or :file:`\\ %ProgramFiles(x86)%\\\\"
"\\ Python X.Y`"
msgstr ""
":file:`%ProgramFiles%\\\\\\ Python X.Y` or :file:`\\ %ProgramFiles(x86)%\\\\"
"\\ Python X.Y`"

#: ../../using/windows.rst:152
msgid "DefaultJustForMeTargetDir"
msgstr "DefaultJustForMeTargetDir"

#: ../../using/windows.rst:152
msgid "The default install directory for just-for-me installs"
msgstr "Каталог установки по умолчанию для установки «только для меня»."

#: ../../using/windows.rst:152
msgid ""
":file:`%LocalAppData%\\\\\\ Programs\\\\Python\\\\\\ PythonXY` or :file:"
"`%LocalAppData%\\\\\\ Programs\\\\Python\\\\\\ PythonXY-32` or :file:"
"`%LocalAppData%\\\\\\ Programs\\\\Python\\\\\\ PythonXY-64`"
msgstr ""
":file:`%LocalAppData%\\\\\\ Programs\\\\Python\\\\\\ PythonXY` or :file:"
"`%LocalAppData%\\\\\\ Programs\\\\Python\\\\\\ PythonXY-32` or :file:"
"`%LocalAppData%\\\\\\ Programs\\\\Python\\\\\\ PythonXY-64`"

#: ../../using/windows.rst:162
msgid "DefaultCustomTargetDir"
msgstr "DefaultCustomTargetDir"

#: ../../using/windows.rst:162
msgid "The default custom install directory displayed in the UI"
msgstr ""
"Каталог выборочной установки по умолчанию, отображаемый в пользовательском "
"интерфейсе."

#: ../../using/windows.rst:162 ../../using/windows.rst:219
msgid "(empty)"
msgstr "(пусто)"

#: ../../using/windows.rst:165
msgid "AssociateFiles"
msgstr "AssociateFiles"

#: ../../using/windows.rst:165
msgid "Create file associations if the launcher is also installed."
msgstr "Создайте ассоциации файлов, если программа запуска также установлена."

#: ../../using/windows.rst:165 ../../using/windows.rst:179
#: ../../using/windows.rst:182 ../../using/windows.rst:186
#: ../../using/windows.rst:190 ../../using/windows.rst:194
#: ../../using/windows.rst:196 ../../using/windows.rst:200
#: ../../using/windows.rst:204 ../../using/windows.rst:208
#: ../../using/windows.rst:210 ../../using/windows.rst:212
msgid "1"
msgstr "1"

#: ../../using/windows.rst:168
msgid "CompileAll"
msgstr "CompileAll"

#: ../../using/windows.rst:168
msgid "Compile all ``.py`` files to ``.pyc``."
msgstr "Скомпилируйте все файлы ``.py`` в ``.pyc``."

#: ../../using/windows.rst:171
msgid "PrependPath"
msgstr "PrependPath"

#: ../../using/windows.rst:171
msgid ""
"Prepend install and Scripts directories  to :envvar:`PATH` and add ``.PY`` "
"to :envvar:`PATHEXT`"
msgstr ""
"Добавьте каталоги установки и сценариев к :envvar:`PATH` и добавьте ``.PY`` "
"к :envvar:`PATHEXT`"

#: ../../using/windows.rst:175
msgid "AppendPath"
msgstr "AppendPath"

#: ../../using/windows.rst:175
msgid ""
"Append install and Scripts directories  to :envvar:`PATH` and add ``.PY`` "
"to :envvar:`PATHEXT`"
msgstr ""
"Добавьте каталоги установки и скриптов в :envvar:`PATH` и добавьте ``.PY`` "
"в :envvar:`PATHEXT`"

#: ../../using/windows.rst:179
msgid "Shortcuts"
msgstr "Ярлыки"

#: ../../using/windows.rst:179
msgid ""
"Create shortcuts for the interpreter, documentation and IDLE if installed."
msgstr ""
"Создайте ярлыки для интерпретатора, документации и IDLE, если они "
"установлены."

#: ../../using/windows.rst:182
msgid "Include_doc"
msgstr "Include_doc"

#: ../../using/windows.rst:182
msgid "Install Python manual"
msgstr "Руководство по установке Python"

#: ../../using/windows.rst:184
msgid "Include_debug"
msgstr "Include_debug"

#: ../../using/windows.rst:184
msgid "Install debug binaries"
msgstr "Установите двоичные файлы отладки"

#: ../../using/windows.rst:186
msgid "Include_dev"
msgstr "Include_dev"

#: ../../using/windows.rst:186
msgid ""
"Install developer headers and libraries. Omitting this may lead to an "
"unusable installation."
msgstr ""
"Установите заголовки и библиотеки разработчика. Если этого не сделать, "
"установка может оказаться непригодной для использования."

#: ../../using/windows.rst:190
msgid "Include_exe"
msgstr "Include_exe"

#: ../../using/windows.rst:190
msgid ""
"Install :file:`python.exe` and related files. Omitting this may lead to an "
"unusable installation."
msgstr ""
"Установите :file:`python.exe` и связанные файлы. Если этого не сделать, "
"установка может оказаться непригодной для использования."

#: ../../using/windows.rst:194
msgid "Include_launcher"
msgstr "Include_launcher"

#: ../../using/windows.rst:194
msgid "Install :ref:`launcher`."
msgstr "Установите :ref:`launcher`."

#: ../../using/windows.rst:196
msgid "InstallLauncherAllUsers"
msgstr "InstallLauncherAllUsers"

#: ../../using/windows.rst:196
msgid ""
"Installs the launcher for all users. Also requires ``Include_launcher`` to "
"be set to 1"
msgstr ""
"Устанавливает лаунчер для всех пользователей. Также требуется, чтобы для "
"Include_launcher было установлено значение 1."

#: ../../using/windows.rst:200
msgid "Include_lib"
msgstr "Include_lib"

#: ../../using/windows.rst:200
msgid ""
"Install standard library and extension modules. Omitting this may lead to an "
"unusable installation."
msgstr ""
"Установите стандартную библиотеку и модули расширения. Если этого не "
"сделать, установка может оказаться непригодной для использования."

#: ../../using/windows.rst:204
msgid "Include_pip"
msgstr "Include_pip"

#: ../../using/windows.rst:204
msgid "Install bundled pip and setuptools"
msgstr "Установите прилагаемые pip и setuptools."

#: ../../using/windows.rst:206
msgid "Include_symbols"
msgstr "Include_symbols"

#: ../../using/windows.rst:206
msgid "Install debugging symbols (``*.pdb``)"
msgstr "Установите символы отладки (``*.pdb``)"

#: ../../using/windows.rst:208
msgid "Include_tcltk"
msgstr "Include_tcltk"

#: ../../using/windows.rst:208
msgid "Install Tcl/Tk support and IDLE"
msgstr "Установите поддержку Tcl/Tk и IDLE."

#: ../../using/windows.rst:210
msgid "Include_test"
msgstr "Включить_тест"

#: ../../using/windows.rst:210
msgid "Install standard library test suite"
msgstr "Установите набор тестов стандартной библиотеки."

#: ../../using/windows.rst:212
msgid "Include_tools"
msgstr "Include_tools"

#: ../../using/windows.rst:212
msgid "Install utility scripts"
msgstr "Установка служебных скриптов"

#: ../../using/windows.rst:214
msgid "LauncherOnly"
msgstr "LauncherOnly"

#: ../../using/windows.rst:214
msgid "Only installs the launcher. This will override most other options."
msgstr ""
"Устанавливает только лаунчер. Это переопределит большинство других опций."

#: ../../using/windows.rst:217
msgid "SimpleInstall"
msgstr "SimpleInstall"

#: ../../using/windows.rst:217
msgid "Disable most install UI"
msgstr "Отключить большинство установочных интерфейсов"

#: ../../using/windows.rst:219
msgid "SimpleInstallDescription"
msgstr "SimpleInstallDescription"

#: ../../using/windows.rst:219
msgid "A custom message to display when the simplified install UI is used."
msgstr ""
"Пользовательское сообщение, отображаемое при использовании упрощенного "
"пользовательского интерфейса установки."

#: ../../using/windows.rst:223
msgid ""
"For example, to silently install a default, system-wide Python installation, "
"you could use the following command (from an elevated command prompt)::"
msgstr ""
"Например, чтобы в автоматическом режиме установить общесистемную установку "
"Python по умолчанию, вы можете использовать следующую команду (из командной "
"строки с повышенными привилегиями):"

#: ../../using/windows.rst:228
msgid ""
"To allow users to easily install a personal copy of Python without the test "
"suite, you could provide a shortcut with the following command. This will "
"display a simplified initial page and disallow customization::"
msgstr ""
"Чтобы пользователи могли легко установить личную копию Python без набора "
"тестов, вы можете предоставить ярлык с помощью следующей команды. Это "
"отобразит упрощенную начальную страницу и запретит настройку::"

#: ../../using/windows.rst:235
msgid ""
"(Note that omitting the launcher also omits file associations, and is only "
"recommended for per-user installs when there is also a system-wide "
"installation that included the launcher.)"
msgstr ""
"(Обратите внимание, что при исключении средства запуска также игнорируются "
"ассоциации файлов, и это рекомендуется только для индивидуальных установок, "
"когда существует также общесистемная установка, включающая средство запуска.)"

#: ../../using/windows.rst:239
msgid ""
"The options listed above can also be provided in a file named ``unattend."
"xml`` alongside the executable. This file specifies a list of options and "
"values. When a value is provided as an attribute, it will be converted to a "
"number if possible. Values provided as element text are always left as "
"strings. This example file sets the same options as the previous example:"
msgstr ""
"Перечисленные выше параметры также можно предоставить в файле unattend.xml "
"вместе с исполняемым файлом. Этот файл определяет список параметров и "
"значений. Если значение предоставляется в качестве атрибута, оно будет "
"преобразовано в число, если это возможно. Значения, предоставленные в виде "
"текста элемента, всегда остаются в виде строк. В этом примере файла "
"установлены те же параметры, что и в предыдущем примере:"

#: ../../using/windows.rst:258
msgid "Installing Without Downloading"
msgstr "Установка без загрузки"

#: ../../using/windows.rst:260
msgid ""
"As some features of Python are not included in the initial installer "
"download, selecting those features may require an internet connection.  To "
"avoid this need, all possible components may be downloaded on-demand to "
"create a complete *layout* that will no longer require an internet "
"connection regardless of the selected features. Note that this download may "
"be bigger than required, but where a large number of installations are going "
"to be performed it is very useful to have a locally cached copy."
msgstr ""
"Поскольку некоторые функции Python не включены в первоначальную загрузку "
"установщика, для их выбора может потребоваться подключение к Интернету. "
"Чтобы избежать этой необходимости, все возможные компоненты могут быть "
"загружены по требованию для создания полного *макета*, который больше не "
"потребует подключения к Интернету, независимо от выбранных функций. Обратите "
"внимание, что эта загрузка может быть больше, чем требуется, но если "
"планируется выполнить большое количество установок, очень полезно иметь "
"локально кэшированную копию."

#: ../../using/windows.rst:268
msgid ""
"Execute the following command from Command Prompt to download all possible "
"required files.  Remember to substitute ``python-3.9.0.exe`` for the actual "
"name of your installer, and to create layouts in their own directories to "
"avoid collisions between files with the same name."
msgstr ""
"Выполните следующую команду из командной строки, чтобы загрузить все "
"возможные необходимые файлы. Не забудьте заменить фактическое имя вашего "
"установщика на ``python-3.9.0.exe`` и создавать макеты в своих собственных "
"каталогах, чтобы избежать конфликтов между файлами с одинаковыми именами."

#: ../../using/windows.rst:277
msgid ""
"You may also specify the ``/quiet`` option to hide the progress display."
msgstr ""
"Вы также можете указать опцию ``/quiet``, чтобы скрыть отображение прогресса."

#: ../../using/windows.rst:280
msgid "Modifying an install"
msgstr "Изменение установки"

#: ../../using/windows.rst:282
msgid ""
"Once Python has been installed, you can add or remove features through the "
"Programs and Features tool that is part of Windows. Select the Python entry "
"and choose \"Uninstall/Change\" to open the installer in maintenance mode."
msgstr ""
"После установки Python вы можете добавлять или удалять функции с помощью "
"инструмента «Программы и компоненты», входящего в состав Windows. Выберите "
"запись Python и выберите «Удалить/Изменить», чтобы открыть установщик в "
"режиме обслуживания."

#: ../../using/windows.rst:286
msgid ""
"\"Modify\" allows you to add or remove features by modifying the checkboxes "
"- unchanged checkboxes will not install or remove anything. Some options "
"cannot be changed in this mode, such as the install directory; to modify "
"these, you will need to remove and then reinstall Python completely."
msgstr ""
"«Изменить» позволяет добавлять или удалять функции путем изменения флажков — "
"неизмененные флажки ничего не устанавливают и не удаляют. Некоторые "
"параметры невозможно изменить в этом режиме, например каталог установки; "
"чтобы изменить их, вам нужно будет удалить, а затем полностью переустановить "
"Python."

#: ../../using/windows.rst:291
msgid ""
"\"Repair\" will verify all the files that should be installed using the "
"current settings and replace any that have been removed or modified."
msgstr ""
"«Восстановление» проверит все файлы, которые следует установить, с "
"использованием текущих настроек, и заменит все файлы, которые были удалены "
"или изменены."

#: ../../using/windows.rst:294
msgid ""
"\"Uninstall\" will remove Python entirely, with the exception of the :ref:"
"`launcher`, which has its own entry in Programs and Features."
msgstr ""
"«Удалить» полностью удалит Python, за исключением :ref:`launcher`, у "
"которого есть отдельная запись в разделе «Программы и компоненты»."

#: ../../using/windows.rst:301
msgid "The Microsoft Store package"
msgstr "Пакет Магазина Microsoft"

#: ../../using/windows.rst:305
msgid ""
"The Microsoft Store package is an easily installable Python interpreter that "
"is intended mainly for interactive use, for example, by students."
msgstr ""
"Пакет Microsoft Store представляет собой легко устанавливаемый интерпретатор "
"Python, предназначенный в основном для интерактивного использования, "
"например, студентами."

#: ../../using/windows.rst:308
msgid ""
"To install the package, ensure you have the latest Windows 10 updates and "
"search the Microsoft Store app for \"Python |version|\". Ensure that the app "
"you select is published by the Python Software Foundation, and install it."
msgstr ""
"Чтобы установить пакет, убедитесь, что у вас установлены последние "
"обновления Windows 10, и выполните поиск в приложении Microsoft Store по "
"запросу «Python». |версия| «. Убедитесь, что выбранное вами приложение "
"опубликовано Python Software Foundation, и установите его."

#: ../../using/windows.rst:313
msgid ""
"Python will always be available for free on the Microsoft Store. If you are "
"asked to pay for it, you have not selected the correct package."
msgstr ""
"Python всегда будет доступен бесплатно в Microsoft Store. Если вас попросят "
"заплатить за это, значит, вы выбрали неправильный пакет."

#: ../../using/windows.rst:316
msgid ""
"After installation, Python may be launched by finding it in Start. "
"Alternatively, it will be available from any Command Prompt or PowerShell "
"session by typing ``python``. Further, pip and IDLE may be used by typing "
"``pip`` or ``idle``. IDLE can also be found in Start."
msgstr ""
"После установки Python можно запустить, найдя его в меню «Пуск». Кроме того, "
"он будет доступен из любой командной строки или сеанса PowerShell, набрав "
"``python``. Кроме того, pip и IDLE можно использовать, набрав ``pip`` или "
"``idle``. IDLE также можно найти в меню «Пуск»."

#: ../../using/windows.rst:321
msgid ""
"All three commands are also available with version number suffixes, for "
"example, as ``python3.exe`` and ``python3.x.exe`` as well as ``python.exe`` "
"(where ``3.x`` is the specific version you want to launch, such as |"
"version|). Open \"Manage App Execution Aliases\" through Start to select "
"which version of Python is associated with each command. It is recommended "
"to make sure that ``pip`` and ``idle`` are consistent with whichever version "
"of ``python`` is selected."
msgstr ""
"Все три команды также доступны с суффиксами номеров версий, например, как "
"``python3.exe`` и ``python3.x.exe``, а также ``python.exe`` (где ``3.x` ` — "
"это конкретная версия, которую вы хотите запустить, например |версия| ). "
"Откройте «Управление псевдонимами выполнения приложений» через «Пуск», чтобы "
"выбрать, какая версия Python связана с каждой командой. Рекомендуется "
"убедиться, что ``pip`` и ``idle`` соответствуют выбранной версии ``python``."

#: ../../using/windows.rst:329
msgid ""
"Virtual environments can be created with ``python -m venv`` and activated "
"and used as normal."
msgstr ""
"Виртуальные среды можно создать с помощью ``python -m venv``, активировать и "
"использовать как обычно."

#: ../../using/windows.rst:332
msgid ""
"If you have installed another version of Python and added it to your "
"``PATH`` variable, it will be available as ``python.exe`` rather than the "
"one from the Microsoft Store. To access the new installation, use ``python3."
"exe`` or ``python3.x.exe``."
msgstr ""
"Если вы установили другую версию Python и добавили ее в переменную PATH, она "
"будет доступна как python.exe, а не как версия из Microsoft Store. Чтобы "
"получить доступ к новой установке, используйте python3.exe или python3.x.exe."

#: ../../using/windows.rst:337
msgid ""
"The ``py.exe`` launcher will detect this Python installation, but will "
"prefer installations from the traditional installer."
msgstr ""
"Программа запуска ``py.exe`` обнаружит эту установку Python, но предпочтет "
"установку из традиционного установщика."

#: ../../using/windows.rst:340
msgid ""
"To remove Python, open Settings and use Apps and Features, or else find "
"Python in Start and right-click to select Uninstall. Uninstalling will "
"remove all packages you installed directly into this Python installation, "
"but will not remove any virtual environments"
msgstr ""
"Чтобы удалить Python, откройте «Настройки» и выберите «Приложения и функции» "
"или найдите Python в меню «Пуск» и щелкните правой кнопкой мыши, чтобы "
"выбрать «Удалить». При удалении будут удалены все пакеты, которые вы "
"установили непосредственно в эту установку Python, но не будут удалены "
"виртуальные среды."

#: ../../using/windows.rst:346
msgid "Known issues"
msgstr "Известные проблемы"

#: ../../using/windows.rst:349
msgid "Redirection of local data, registry, and temporary paths"
msgstr "Перенаправление локальных данных, реестра и временных путей"

#: ../../using/windows.rst:351
msgid ""
"Because of restrictions on Microsoft Store apps, Python scripts may not have "
"full write access to shared locations such as :envvar:`TEMP` and the "
"registry. Instead, it will write to a private copy. If your scripts must "
"modify the shared locations, you will need to install the full installer."
msgstr ""
"Из-за ограничений для приложений Microsoft Store сценарии Python могут не "
"иметь полного доступа на запись к общим местам, таким как :envvar:`TEMP` и "
"реестр. Вместо этого он будет писать в частную копию. Если ваши сценарии "
"должны изменить общие расположения, вам потребуется установить полную "
"программу установки."

#: ../../using/windows.rst:356
msgid ""
"At runtime, Python will use a private copy of well-known Windows folders and "
"the registry. For example, if the environment variable :envvar:`%APPDATA%` "
"is :file:`c:\\\\Users\\\\<user>\\\\AppData\\\\`, then when writing to :file:"
"`C:\\\\Users\\\\<user>\\\\AppData\\\\Local` will write to :file:`C:\\"
"\\Users\\\\<user>\\\\AppData\\\\Local\\\\Packages\\"
"\\PythonSoftwareFoundation.Python.3.8_qbz5n2kfra8p0\\\\LocalCache\\\\Local\\"
"\\`."
msgstr ""
"Во время выполнения Python будет использовать частную копию известных папок "
"Windows и реестра. Например, если переменная среды :envvar:` %А PPDATA%` "
"равен :file:`c:\\\\Users\\\\<user>\\\\AppData\\\\`, затем при записи в :file:"
"`C:\\\\Users\\\\<user>\\\\AppData\\\\Local` будет писать в :file:`C:\\"
"\\Users\\\\<user>\\\\AppData\\\\Local\\\\Packages\\"
"\\PythonSoftwareFoundation.Python.3.8_qbz5n2kfra8p0\\\\LocalCache\\\\Local\\"
"\\`."

#: ../../using/windows.rst:361
msgid ""
"When reading files, Windows will return the file from the private folder, or "
"if that does not exist, the real Windows directory. For example reading :"
"file:`C:\\\\Windows\\\\System32` returns the contents of :file:`C:\\"
"\\Windows\\\\System32` plus the contents of :file:`C:\\\\Program Files\\"
"\\WindowsApps\\\\package_name\\\\VFS\\\\SystemX86`."
msgstr ""
"При чтении файлов Windows возвращает файл из личной папки или, если она не "
"существует, из реального каталога Windows. Например, чтение :file:`C:\\"
"\\Windows\\\\System32` возвращает содержимое :file:`C:\\\\Windows\\"
"\\System32` плюс содержимое :file:`C:\\\\Program Files\\\\WindowsApps \\"
"\\имя_пакета\\\\VFS\\\\SystemX86`."

#: ../../using/windows.rst:365
msgid ""
"You can find the real path of any existing file using :func:`os.path."
"realpath`:"
msgstr ""
"Вы можете найти реальный путь к любому существующему файлу, используя :func:"
"`os.path.realpath`:"

#: ../../using/windows.rst:374
msgid "When writing to the Windows Registry, the following behaviors exist:"
msgstr "При записи в реестр Windows наблюдается следующее поведение:"

#: ../../using/windows.rst:376
msgid ""
"Reading from ``HKLM\\\\Software`` is allowed and results are merged with "
"the :file:`registry.dat` file in the package."
msgstr ""
"Чтение из ``HKLM\\\\Software`` разрешено, и результаты объединяются с "
"файлом :file:`registry.dat` в пакете."

#: ../../using/windows.rst:377
msgid ""
"Writing to ``HKLM\\\\Software`` is not allowed if the corresponding key/"
"value exists, i.e. modifying existing keys."
msgstr ""
"Запись в ``HKLM\\\\Software`` не разрешена, если соответствующий ключ/"
"значение существует, т.е. изменение существующих ключей."

#: ../../using/windows.rst:378
msgid ""
"Writing to ``HKLM\\\\Software`` is allowed as long as a corresponding key/"
"value does not exist in the package and the user has the correct access "
"permissions."
msgstr ""
"Запись в ``HKLM\\\\Software`` разрешена, если соответствующий ключ/значение "
"не существует в пакете и у пользователя есть правильные права доступа."

#: ../../using/windows.rst:381
msgid ""
"For more detail on the technical basis for these limitations, please consult "
"Microsoft's documentation on packaged full-trust apps, currently available "
"at `docs.microsoft.com/en-us/windows/msix/desktop/desktop-to-uwp-behind-the-"
"scenes <https://docs.microsoft.com/en-us/windows/msix/desktop/desktop-to-uwp-"
"behind-the-scenes>`_"
msgstr ""
"Для получения более подробной информации о технической основе этих "
"ограничений обратитесь к документации Microsoft по пакетным приложениям с "
"полным доверием, которая в настоящее время доступна по адресу `docs."
"microsoft.com/en-us/windows/msix/desktop/desktop-to-uwp-behind- the-scenes "
"<https://docs.microsoft.com/en-us/windows/msix/desktop/desktop-to-uwp-behind-"
"the-scenes>`_"

#: ../../using/windows.rst:390
msgid "The nuget.org packages"
msgstr "Пакеты nuget.org"

#: ../../using/windows.rst:394
msgid ""
"The nuget.org package is a reduced size Python environment intended for use "
"on continuous integration and build systems that do not have a system-wide "
"install of Python. While nuget is \"the package manager for .NET\", it also "
"works perfectly fine for packages containing build-time tools."
msgstr ""
"Пакет nuget.org — это среда Python уменьшенного размера, предназначенная для "
"использования в системах непрерывной интеграции и сборки, в которых нет "
"общесистемной установки Python. Хотя nuget является «менеджером пакетов для ."
"NET», он также прекрасно работает для пакетов, содержащих инструменты "
"времени сборки."

#: ../../using/windows.rst:399
msgid ""
"Visit `nuget.org <https://www.nuget.org/>`_ for the most up-to-date "
"information on using nuget. What follows is a summary that is sufficient for "
"Python developers."
msgstr ""
"Посетите `nuget.org <https://www.nuget.org/>`_ для получения самой последней "
"информации об использовании nuget. Далее следует краткое изложение, "
"достаточное для разработчиков Python."

#: ../../using/windows.rst:403
msgid ""
"The ``nuget.exe`` command line tool may be downloaded directly from "
"``https://aka.ms/nugetclidl``, for example, using curl or PowerShell. With "
"the tool, the latest version of Python for 64-bit or 32-bit machines is "
"installed using::"
msgstr ""
"Инструмент командной строки nuget.exe можно загрузить непосредственно с "
"https://aka.ms/nugetclidl, например, с помощью Curl или PowerShell. С "
"помощью этого инструмента устанавливается последняя версия Python для 64-"
"битных или 32-битных компьютеров с помощью:"

#: ../../using/windows.rst:411
msgid ""
"To select a particular version, add a ``-Version 3.x.y``. The output "
"directory may be changed from ``.``, and the package will be installed into "
"a subdirectory. By default, the subdirectory is named the same as the "
"package, and without the ``-ExcludeVersion`` option this name will include "
"the specific version installed. Inside the subdirectory is a ``tools`` "
"directory that contains the Python installation:"
msgstr ""
"Чтобы выбрать конкретную версию, добавьте ``-Version 3.xy``. Выходной "
"каталог можно изменить с ``.``, и пакет будет установлен в подкаталог. По "
"умолчанию подкаталог называется так же, как и пакет, и без опции «-"
"ExcludeVersion» это имя будет включать конкретную установленную версию. "
"Внутри подкаталога находится каталог «tools», содержащий установку Python:"

#: ../../using/windows.rst:428
msgid ""
"In general, nuget packages are not upgradeable, and newer versions should be "
"installed side-by-side and referenced using the full path. Alternatively, "
"delete the package directory manually and install it again. Many CI systems "
"will do this automatically if they do not preserve files between builds."
msgstr ""
"Как правило, пакеты nuget не подлежат обновлению, а более новые версии "
"следует устанавливать параллельно, и на них можно ссылаться по полному пути. "
"Либо удалите каталог пакета вручную и установите его снова. Многие системы "
"CI делают это автоматически, если не сохраняют файлы между сборками."

#: ../../using/windows.rst:433
msgid ""
"Alongside the ``tools`` directory is a ``build\\native`` directory. This "
"contains a MSBuild properties file ``python.props`` that can be used in a C+"
"+ project to reference the Python install. Including the settings will "
"automatically use the headers and import libraries in your build."
msgstr ""
"Рядом с каталогом ``tools`` находится каталог ``build\\native``. Он содержит "
"файл свойств MSBuild ``python.props``, который можно использовать в проекте "
"C++ для ссылки на установку Python. Включение настроек позволит "
"автоматически использовать заголовки и импортировать библиотеки в вашу "
"сборку."

#: ../../using/windows.rst:438
msgid ""
"The package information pages on nuget.org are `www.nuget.org/packages/"
"python <https://www.nuget.org/packages/python>`_ for the 64-bit version and "
"`www.nuget.org/packages/pythonx86 <https://www.nuget.org/packages/"
"pythonx86>`_ for the 32-bit version."
msgstr ""
"Страницы с информацией о пакете на nuget.org: www.nuget.org/packages/python "
"<https://www.nuget.org/packages/python>`_ для 64-разрядной версии и `www."
"nuget.org/ packages/pythonx86 <https://www.nuget.org/packages/pythonx86>`_ "
"для 32-разрядной версии."

#: ../../using/windows.rst:447
msgid "The embeddable package"
msgstr "Встраиваемый пакет"

#: ../../using/windows.rst:451
msgid ""
"The embedded distribution is a ZIP file containing a minimal Python "
"environment. It is intended for acting as part of another application, "
"rather than being directly accessed by end-users."
msgstr ""
"Встроенный дистрибутив представляет собой ZIP-файл, содержащий минимальную "
"среду Python. Он предназначен для работы как часть другого приложения, а не "
"для прямого доступа конечных пользователей."

#: ../../using/windows.rst:455
msgid ""
"When extracted, the embedded distribution is (almost) fully isolated from "
"the user's system, including environment variables, system registry "
"settings, and installed packages. The standard library is included as pre-"
"compiled and optimized ``.pyc`` files in a ZIP, and ``python3.dll``, "
"``python37.dll``, ``python.exe`` and ``pythonw.exe`` are all provided. Tcl/"
"tk (including all dependents, such as Idle), pip and the Python "
"documentation are not included."
msgstr ""
"При извлечении встроенный дистрибутив (почти) полностью изолирован от "
"системы пользователя, включая переменные среды, настройки системного реестра "
"и установленные пакеты. Стандартная библиотека включена в виде "
"предварительно скомпилированных и оптимизированных файлов .pyc в ZIP-архиве, "
"а также Python3.dll, Python37.dll, Python.exe и Python. .exe`` все "
"предоставляются. Tcl/tk (включая все зависимости, такие как Idle), pip и "
"документация Python не включены."

#: ../../using/windows.rst:464
msgid ""
"The embedded distribution does not include the `Microsoft C Runtime <https://"
"docs.microsoft.com/en-US/cpp/windows/latest-supported-vc-redist#visual-"
"studio-2015-2017-2019-and-2022>`_ and it is the responsibility of the "
"application installer to provide this. The runtime may have already been "
"installed on a user's system previously or automatically via Windows Update, "
"and can be detected by finding ``ucrtbase.dll`` in the system directory."
msgstr ""
"Встроенный дистрибутив не включает среду выполнения Microsoft C <https://"
"docs.microsoft.com/en-US/cpp/windows/latest-supported-vc-redist#visual-"
"studio-2015-2017-2019-and- 2022>`_, и ответственность за это лежит на "
"установщике приложения. Среда выполнения может быть уже установлена ​​в "
"системе пользователя ранее или автоматически через Центр обновления Windows, "
"и ее можно обнаружить, найдя ``ucrtbase.dll`` в системном каталоге."

#: ../../using/windows.rst:471
msgid ""
"Third-party packages should be installed by the application installer "
"alongside the embedded distribution. Using pip to manage dependencies as for "
"a regular Python installation is not supported with this distribution, "
"though with some care it may be possible to include and use pip for "
"automatic updates. In general, third-party packages should be treated as "
"part of the application (\"vendoring\") so that the developer can ensure "
"compatibility with newer versions before providing updates to users."
msgstr ""
"Сторонние пакеты должны устанавливаться установщиком приложения вместе со "
"встроенным дистрибутивом. Использование pip для управления зависимостями, "
"как и при обычной установке Python, не поддерживается в этом дистрибутиве, "
"хотя при некоторой осторожности можно включить и использовать pip для "
"автоматических обновлений. Как правило, сторонние пакеты следует "
"рассматривать как часть приложения («вендоринг»), чтобы разработчик мог "
"обеспечить совместимость с более новыми версиями, прежде чем предоставлять "
"обновления пользователям."

#: ../../using/windows.rst:479
msgid ""
"The two recommended use cases for this distribution are described below."
msgstr ""
"Ниже описаны два рекомендуемых варианта использования этого дистрибутива."

#: ../../using/windows.rst:482
msgid "Python Application"
msgstr "Приложение на Python"

#: ../../using/windows.rst:484
msgid ""
"An application written in Python does not necessarily require users to be "
"aware of that fact. The embedded distribution may be used in this case to "
"include a private version of Python in an install package. Depending on how "
"transparent it should be (or conversely, how professional it should appear), "
"there are two options."
msgstr ""
"Приложение, написанное на Python, не обязательно требует, чтобы пользователи "
"знали об этом факте. В этом случае встроенный дистрибутив можно использовать "
"для включения частной версии Python в установочный пакет. В зависимости от "
"того, насколько прозрачно оно должно быть (или, наоборот, насколько "
"профессионально оно должно выглядеть), есть два варианта."

#: ../../using/windows.rst:490
msgid ""
"Using a specialized executable as a launcher requires some coding, but "
"provides the most transparent experience for users. With a customized "
"launcher, there are no obvious indications that the program is running on "
"Python: icons can be customized, company and version information can be "
"specified, and file associations behave properly. In most cases, a custom "
"launcher should simply be able to call ``Py_Main`` with a hard-coded command "
"line."
msgstr ""
"Использование специализированного исполняемого файла в качестве средства "
"запуска требует некоторого написания кода, но обеспечивает наиболее понятный "
"интерфейс для пользователей. При использовании настраиваемого средства "
"запуска нет очевидных признаков того, что программа работает на Python: "
"можно настраивать значки, указывать информацию о компании и версии, а "
"ассоциации файлов ведут себя правильно. В большинстве случаев "
"пользовательский лаунчер должен просто иметь возможность вызывать Py_Main с "
"помощью жестко запрограммированной командной строки."

#: ../../using/windows.rst:497
msgid ""
"The simpler approach is to provide a batch file or generated shortcut that "
"directly calls the ``python.exe`` or ``pythonw.exe`` with the required "
"command-line arguments. In this case, the application will appear to be "
"Python and not its actual name, and users may have trouble distinguishing it "
"from other running Python processes or file associations."
msgstr ""
"Более простой подход — предоставить пакетный файл или сгенерированный ярлык, "
"который напрямую вызывает «python.exe» или «pythonw.exe» с необходимыми "
"аргументами командной строки. В этом случае приложение будет выглядеть как "
"Python, а не как его фактическое имя, и у пользователей могут возникнуть "
"проблемы с отличением его от других запущенных процессов Python или "
"ассоциаций файлов."

#: ../../using/windows.rst:503
msgid ""
"With the latter approach, packages should be installed as directories "
"alongside the Python executable to ensure they are available on the path. "
"With the specialized launcher, packages can be located in other locations as "
"there is an opportunity to specify the search path before launching the "
"application."
msgstr ""
"При последнем подходе пакеты следует устанавливать в виде каталогов рядом с "
"исполняемым файлом Python, чтобы обеспечить их доступность по пути. С "
"помощью специализированного лаунчера пакеты могут располагаться в других "
"местах, так как есть возможность указать путь поиска перед запуском "
"приложения."

#: ../../using/windows.rst:509
msgid "Embedding Python"
msgstr "Внедрение Python"

#: ../../using/windows.rst:511
msgid ""
"Applications written in native code often require some form of scripting "
"language, and the embedded Python distribution can be used for this purpose. "
"In general, the majority of the application is in native code, and some part "
"will either invoke ``python.exe`` or directly use ``python3.dll``. For "
"either case, extracting the embedded distribution to a subdirectory of the "
"application installation is sufficient to provide a loadable Python "
"interpreter."
msgstr ""
"Приложения, написанные на собственном коде, часто требуют использования той "
"или иной формы языка сценариев, и для этой цели можно использовать "
"встроенный дистрибутив Python. Как правило, большая часть приложения "
"находится в собственном коде, а некоторая часть либо вызывает ``python."
"exe``, либо напрямую использует ``python3.dll``. В любом случае извлечения "
"встроенного дистрибутива в подкаталог установки приложения достаточно, чтобы "
"получить загружаемый интерпретатор Python."

#: ../../using/windows.rst:518
msgid ""
"As with the application use, packages can be installed to any location as "
"there is an opportunity to specify search paths before initializing the "
"interpreter. Otherwise, there is no fundamental differences between using "
"the embedded distribution and a regular installation."
msgstr ""
"Как и при использовании приложения, пакеты можно устанавливать в любое "
"место, поскольку есть возможность указать пути поиска перед инициализацией "
"интерпретатора. В остальном принципиальных отличий между использованием "
"встроенного дистрибутива и обычной установкой нет."

#: ../../using/windows.rst:525
msgid "Alternative bundles"
msgstr "Альтернативные пакеты"

#: ../../using/windows.rst:527
msgid ""
"Besides the standard CPython distribution, there are modified packages "
"including additional functionality.  The following is a list of popular "
"versions and their key features:"
msgstr ""
"Помимо стандартного дистрибутива CPython, существуют модифицированные "
"пакеты, включающие дополнительный функционал. Ниже приведен список "
"популярных версий и их ключевые особенности:"

#: ../../using/windows.rst:532
msgid "`ActivePython <https://www.activestate.com/products/python/>`_"
msgstr "`ActivePython <https://www.activestate.com/products/python/>`_"

#: ../../using/windows.rst:532
msgid "Installer with multi-platform compatibility, documentation, PyWin32"
msgstr ""
"Установщик с мультиплатформенной совместимостью, документация, PyWin32."

#: ../../using/windows.rst:536
msgid "`Anaconda <https://www.anaconda.com/download/>`_"
msgstr "`Anaconda <https://www.anaconda.com/download/>`_"

#: ../../using/windows.rst:535
msgid ""
"Popular scientific modules (such as numpy, scipy and pandas) and the "
"``conda`` package manager."
msgstr ""
"Научно-популярные модули (такие как numpy, scipy и pandas) и менеджер "
"пакетов conda."

#: ../../using/windows.rst:542
msgid "`Enthought Deployment Manager <https://www.enthought.com/edm/>`_"
msgstr ""

#: ../../using/windows.rst:539
msgid "\"The Next Generation Python Environment and Package Manager\"."
msgstr "«Среда Python следующего поколения и менеджер пакетов»."

#: ../../using/windows.rst:541
msgid ""
"Previously Enthought provided Canopy, but it `reached end of life in 2016 "
"<https://support.enthought.com/hc/en-us/articles/360038600051-Canopy-GUI-end-"
"of-life-transition-to-the-Enthought-Deployment-Manager-EDM-and-Visual-Studio-"
"Code>`_."
msgstr ""
"Ранее En Thought предоставляла Canopy, но в 2016 году срок его службы истек -"
"En Thought-Deployment-Manager-EDM-and-Visual-Studio-Code>`_."

#: ../../using/windows.rst:546
msgid "`WinPython <https://winpython.github.io/>`_"
msgstr "`WinPython <https://winpython.github.io/>`_"

#: ../../using/windows.rst:545
msgid ""
"Windows-specific distribution with prebuilt scientific packages and tools "
"for building packages."
msgstr ""
"Дистрибутив для Windows с готовыми научными пакетами и инструментами для "
"сборки пакетов."

#: ../../using/windows.rst:548
msgid ""
"Note that these packages may not include the latest versions of Python or "
"other libraries, and are not maintained or supported by the core Python team."
msgstr ""
"Обратите внимание, что эти пакеты могут не включать последние версии Python "
"или других библиотек, а также не обслуживаются и не поддерживаются основной "
"командой Python."

#: ../../using/windows.rst:554
msgid "Configuring Python"
msgstr "Настройка Python"

#: ../../using/windows.rst:556
msgid ""
"To run Python conveniently from a command prompt, you might consider "
"changing some default environment variables in Windows.  While the installer "
"provides an option to configure the PATH and PATHEXT variables for you, this "
"is only reliable for a single, system-wide installation.  If you regularly "
"use multiple versions of Python, consider using the :ref:`launcher`."
msgstr ""
"Чтобы удобно запускать Python из командной строки, вы можете рассмотреть "
"возможность изменения некоторых переменных среды по умолчанию в Windows. "
"Хотя установщик предоставляет возможность настроить переменные PATH и "
"PATHEXT, это надежно только для одной общесистемной установки. Если вы "
"регулярно используете несколько версий Python, рассмотрите возможность "
"использования :ref:`launcher`."

#: ../../using/windows.rst:566
msgid "Excursus: Setting environment variables"
msgstr "Экскурс: Установка переменных среды"

#: ../../using/windows.rst:568
msgid ""
"Windows allows environment variables to be configured permanently at both "
"the User level and the System level, or temporarily in a command prompt."
msgstr ""
"Windows позволяет постоянно настраивать переменные среды как на уровне "
"пользователя, так и на уровне системы или временно в командной строке."

#: ../../using/windows.rst:571
msgid ""
"To temporarily set environment variables, open Command Prompt and use the :"
"command:`set` command:"
msgstr ""
"Чтобы временно установить переменные среды, откройте командную строку и "
"используйте команду :command:`set`:"

#: ../../using/windows.rst:580
msgid ""
"These changes will apply to any further commands executed in that console, "
"and will be inherited by any applications started from the console."
msgstr ""
"Эти изменения будут применяться ко всем дальнейшим командам, выполняемым в "
"этой консоли, и будут унаследованы всеми приложениями, запускаемыми с "
"консоли."

#: ../../using/windows.rst:583
msgid ""
"Including the variable name within percent signs will expand to the existing "
"value, allowing you to add your new value at either the start or the end. "
"Modifying :envvar:`PATH` by adding the directory containing :program:`python."
"exe` to the start is a common way to ensure the correct version of Python is "
"launched."
msgstr ""
"Включение имени переменной в знаки процентов расширит существующее значение, "
"что позволит вам добавить новое значение либо в начало, либо в конец. "
"Изменение :envvar:`PATH` путем добавления в начало каталога, содержащего :"
"program:`python.exe`, является распространенным способом гарантировать "
"запуск правильной версии Python."

#: ../../using/windows.rst:589
msgid ""
"To permanently modify the default environment variables, click Start and "
"search for 'edit environment variables', or open System properties, :"
"guilabel:`Advanced system settings` and click the :guilabel:`Environment "
"Variables` button. In this dialog, you can add or modify User and System "
"variables. To change System variables, you need non-restricted access to "
"your machine (i.e. Administrator rights)."
msgstr ""
"Чтобы навсегда изменить переменные среды по умолчанию, нажмите «Пуск» и "
"найдите «изменить переменные среды» или откройте свойства системы, :guilabel:"
"`Дополнительные настройки системы` и нажмите кнопку :guilabel:`Переменные "
"среды`. В этом диалоговом окне вы можете добавлять или изменять "
"пользовательские и системные переменные. Чтобы изменить системные "
"переменные, вам необходим неограниченный доступ к вашему компьютеру (т.е. "
"права администратора)."

#: ../../using/windows.rst:598
msgid ""
"Windows will concatenate User variables *after* System variables, which may "
"cause unexpected results when modifying :envvar:`PATH`."
msgstr ""
"Windows будет объединять пользовательские переменные *после* системных "
"переменных, что может привести к неожиданным результатам при изменении :"
"envvar:`PATH`."

#: ../../using/windows.rst:601
msgid ""
"The :envvar:`PYTHONPATH` variable is used by all versions of Python, so you "
"should not permanently configure it unless the listed paths only include "
"code that is compatible with all of your installed Python versions."
msgstr ""
"Переменная :envvar:`PYTHONPATH` используется всеми версиями Python, поэтому "
"вам не следует настраивать ее постоянно, если только перечисленные пути не "
"содержат только код, совместимый со всеми установленными вами версиями "
"Python."

#: ../../using/windows.rst:609
msgid ""
"https://docs.microsoft.com/en-us/windows/win32/procthread/environment-"
"variables"
msgstr ""
"https://docs.microsoft.com/en-us/windows/win32/procthread/environment-"
"variables"

#: ../../using/windows.rst:609
msgid "Overview of environment variables on Windows"
msgstr "Обзор переменных среды в Windows"

#: ../../using/windows.rst:612
msgid ""
"https://docs.microsoft.com/en-us/windows-server/administration/windows-"
"commands/set_1"
msgstr ""
"https://docs.microsoft.com/en-us/windows-server/administration/windows-"
"commands/set_1"

#: ../../using/windows.rst:612
msgid "The ``set`` command, for temporarily modifying environment variables"
msgstr "Команда ``set`` для временного изменения переменных среды."

#: ../../using/windows.rst:614
msgid ""
"https://docs.microsoft.com/en-us/windows-server/administration/windows-"
"commands/setx"
msgstr ""
"https://docs.microsoft.com/en-us/windows-server/administration/windows-"
"commands/setx"

#: ../../using/windows.rst:615
msgid "The ``setx`` command, for permanently modifying environment variables"
msgstr "Команда setx для постоянного изменения переменных среды."

#: ../../using/windows.rst:621
msgid "Finding the Python executable"
msgstr "Находим исполняемый файл Python"

#: ../../using/windows.rst:625
msgid ""
"Besides using the automatically created start menu entry for the Python "
"interpreter, you might want to start Python in the command prompt. The "
"installer has an option to set that up for you."
msgstr ""
"Помимо использования автоматически созданного пункта меню «Пуск» для "
"интерпретатора Python, вы можете запустить Python из командной строки. У "
"установщика есть возможность настроить это за вас."

#: ../../using/windows.rst:629
msgid ""
"On the first page of the installer, an option labelled \"Add Python to "
"PATH\" may be selected to have the installer add the install location into "
"the :envvar:`PATH`.  The location of the :file:`Scripts\\\\` folder is also "
"added. This allows you to type :command:`python` to run the interpreter, "
"and :command:`pip` for the package installer. Thus, you can also execute "
"your scripts with command line options, see :ref:`using-on-cmdline` "
"documentation."
msgstr ""
"На первой странице установщика можно выбрать опцию «Добавить Python в PATH», "
"чтобы установщик добавил место установки в :envvar:`PATH`. Также добавляется "
"местоположение папки :file:`Scripts\\\\`. Это позволяет вам ввести :command:"
"`python` для запуска интерпретатора и :command:`pip` для установщика пакета. "
"Таким образом, вы также можете выполнять свои сценарии с параметрами "
"командной строки, см. документацию :ref:`using-on-cmdline`."

#: ../../using/windows.rst:636
msgid ""
"If you don't enable this option at install time, you can always re-run the "
"installer, select Modify, and enable it.  Alternatively, you can manually "
"modify the :envvar:`PATH` using the directions in :ref:`setting-envvars`.  "
"You need to set your :envvar:`PATH` environment variable to include the "
"directory of your Python installation, delimited by a semicolon from other "
"entries.  An example variable could look like this (assuming the first two "
"entries already existed)::"
msgstr ""
"Если вы не включите эту опцию во время установки, вы всегда можете "
"перезапустить установщик, выбрать «Изменить» и включить его. Альтернативно, "
"вы можете вручную изменить :envvar:`PATH`, используя указания в :ref:"
"`setting-envvars`. Вам необходимо установить переменную среды :envvar:"
"`PATH`, чтобы она включала каталог вашей установки Python, отделенный точкой "
"с запятой от других записей. Пример переменной может выглядеть следующим "
"образом (при условии, что первые две записи уже существуют)::"

#: ../../using/windows.rst:649
msgid "UTF-8 mode"
msgstr "Режим UTF-8"

#: ../../using/windows.rst:653
msgid ""
"Windows still uses legacy encodings for the system encoding (the ANSI Code "
"Page).  Python uses it for the default encoding of text files (e.g. :func:"
"`locale.getencoding`)."
msgstr ""
"Windows по-прежнему использует устаревшие кодировки для системной кодировки "
"(кодовая страница ANSI). Python использует его для кодировки текстовых "
"файлов по умолчанию (например, :func:`locale.getencoding`)."

#: ../../using/windows.rst:657
msgid ""
"This may cause issues because UTF-8 is widely used on the internet and most "
"Unix systems, including WSL (Windows Subsystem for Linux)."
msgstr ""
"Это может вызвать проблемы, поскольку UTF-8 широко используется в Интернете "
"и большинстве систем Unix, включая WSL (подсистема Windows для Linux)."

#: ../../using/windows.rst:660
msgid ""
"You can use the :ref:`Python UTF-8 Mode <utf8-mode>` to change the default "
"text encoding to UTF-8. You can enable the :ref:`Python UTF-8 Mode <utf8-"
"mode>` via the ``-X utf8`` command line option, or the ``PYTHONUTF8=1`` "
"environment variable.  See :envvar:`PYTHONUTF8` for enabling UTF-8 mode, "
"and :ref:`setting-envvars` for how to modify environment variables."
msgstr ""
"Вы можете использовать :ref:`Режим Python UTF-8 <utf8-mode>`, чтобы изменить "
"кодировку текста по умолчанию на UTF-8. Вы можете включить режим Python "
"UTF-8 <utf8-mode>` с помощью параметра командной строки ``-X utf8`` или "
"переменной среды ``PYTHONUTF8=1``. См. :envvar:`PYTHONUTF8` для включения "
"режима UTF-8 и :ref:`setting-envvars` для получения информации о том, как "
"изменять переменные среды."

#: ../../using/windows.rst:666
msgid ""
"When the :ref:`Python UTF-8 Mode <utf8-mode>` is enabled, you can still use "
"the system encoding (the ANSI Code Page) via the \"mbcs\" codec."
msgstr ""
"Когда режим Python UTF-8 <utf8-mode> включен, вы все равно можете "
"использовать системную кодировку (кодовую страницу ANSI) через кодек «mbcs»."

#: ../../using/windows.rst:669
msgid ""
"Note that adding ``PYTHONUTF8=1`` to the default environment variables will "
"affect all Python 3.7+ applications on your system. If you have any Python "
"3.7+ applications which rely on the legacy system encoding, it is "
"recommended to set the environment variable temporarily or use the ``-X "
"utf8`` command line option."
msgstr ""
"Обратите внимание, что добавление PYTHONUTF8=1 к переменным среды по "
"умолчанию повлияет на все приложения Python 3.7+ в вашей системе. Если у вас "
"есть какие-либо приложения Python 3.7+, которые используют устаревшую "
"системную кодировку, рекомендуется временно установить переменную среды или "
"использовать параметр командной строки ``-X utf8``."

#: ../../using/windows.rst:676
msgid ""
"Even when UTF-8 mode is disabled, Python uses UTF-8 by default on Windows "
"for:"
msgstr ""
"Даже если режим UTF-8 отключен, Python по умолчанию использует UTF-8 в "
"Windows для:"

#: ../../using/windows.rst:679
msgid "Console I/O including standard I/O (see :pep:`528` for details)."
msgstr ""
"Даже если режим UTF-8 отключен, Python по умолчанию использует UTF-8 в "
"Windows для:"

#: ../../using/windows.rst:680
msgid ""
"The :term:`filesystem encoding <filesystem encoding and error handler>` "
"(see :pep:`529` for details)."
msgstr ""
"Кодировка файловой системы :term:`<кодировка файловой системы и обработчик "
"ошибок>` (подробности см. в :pep:`529`)."

#: ../../using/windows.rst:687
msgid "Python Launcher for Windows"
msgstr "Python Launcher для Windows"

#: ../../using/windows.rst:691
msgid ""
"The Python launcher for Windows is a utility which aids in locating and "
"executing of different Python versions.  It allows scripts (or the command-"
"line) to indicate a preference for a specific Python version, and will "
"locate and execute that version."
msgstr ""
"Средство запуска Python для Windows — это утилита, которая помогает находить "
"и запускать различные версии Python. Он позволяет сценариям (или командной "
"строке) указывать предпочтение конкретной версии Python, а также находить и "
"выполнять эту версию."

#: ../../using/windows.rst:696
msgid ""
"Unlike the :envvar:`PATH` variable, the launcher will correctly select the "
"most appropriate version of Python. It will prefer per-user installations "
"over system-wide ones, and orders by language version rather than using the "
"most recently installed version."
msgstr ""
"В отличие от переменной :envvar:`PATH`, программа запуска правильно выберет "
"наиболее подходящую версию Python. Он будет предпочитать установку для "
"каждого пользователя общесистемным и упорядочивать по языковой версии, а не "
"использовать самую последнюю установленную версию."

#: ../../using/windows.rst:701
msgid "The launcher was originally specified in :pep:`397`."
msgstr "Изначально программа запуска была указана в :pep:`397`."

#: ../../using/windows.rst:704
msgid "Getting started"
msgstr "Приступая к работе"

#: ../../using/windows.rst:707
msgid "From the command-line"
msgstr "Из командной строки"

#: ../../using/windows.rst:711
msgid ""
"System-wide installations of Python 3.3 and later will put the launcher on "
"your :envvar:`PATH`. The launcher is compatible with all available versions "
"of Python, so it does not matter which version is installed. To check that "
"the launcher is available, execute the following command in Command Prompt::"
msgstr ""
"При общесистемной установке Python 3.3 и более поздних версий программа "
"запуска будет помещена в ваш :envvar:`PATH`. Лаунчер совместим со всеми "
"доступными версиями Python, поэтому не имеет значения, какая версия "
"установлена. Чтобы проверить доступность средства запуска, выполните в "
"командной строке следующую команду::"

#: ../../using/windows.rst:718
msgid ""
"You should find that the latest version of Python you have installed is "
"started - it can be exited as normal, and any additional command-line "
"arguments specified will be sent directly to Python."
msgstr ""
"Вы должны обнаружить, что запущена последняя установленная вами версия "
"Python — выйти из нее можно как обычно, и любые указанные дополнительные "
"аргументы командной строки будут отправлены непосредственно в Python."

#: ../../using/windows.rst:722
msgid ""
"If you have multiple versions of Python installed (e.g., 3.7 and |version|) "
"you will have noticed that Python |version| was started - to launch Python "
"3.7, try the command::"
msgstr ""
"Если у вас установлено несколько версий Python (например, 3.7 и |версия| ) "
"вы заметили, что Python |версия| был запущен — для запуска Python 3.7 "
"попробуйте команду::"

#: ../../using/windows.rst:728
msgid ""
"If you want the latest version of Python 2 you have installed, try the "
"command::"
msgstr ""
"Если вам нужна последняя установленная версия Python 2, попробуйте команду::"

#: ../../using/windows.rst:733
msgid ""
"If you see the following error, you do not have the launcher installed::"
msgstr ""
"Если вы видите следующую ошибку, у вас не установлена ​​программа запуска:"

#: ../../using/windows.rst:738
msgid "The command::"
msgstr "Команда::"

#: ../../using/windows.rst:742
msgid "displays the currently installed version(s) of Python."
msgstr "отображает текущие установленные версии Python."

#: ../../using/windows.rst:744
msgid ""
"The ``-x.y`` argument is the short form of the ``-V:Company/Tag`` argument, "
"which allows selecting a specific Python runtime, including those that may "
"have come from somewhere other than python.org. Any runtime registered by "
"following :pep:`514` will be discoverable. The ``--list`` command lists all "
"available runtimes using the ``-V:`` format."
msgstr ""
"Аргумент ``-xy`` представляет собой короткую форму аргумента ``-V:Company/"
"Tag``, который позволяет выбрать конкретную среду выполнения Python, включая "
"те, которые могли быть получены откуда-либо, кроме python.org. Любая среда "
"выполнения, зарегистрированная с помощью следующего :pep:`514`, будет "
"доступна для обнаружения. Команда ``--list`` выводит список всех доступных "
"сред выполнения в формате ``-V:``."

#: ../../using/windows.rst:750
msgid ""
"When using the ``-V:`` argument, specifying the Company will limit selection "
"to runtimes from that provider, while specifying only the Tag will select "
"from all providers. Note that omitting the slash implies a tag::"
msgstr ""
"При использовании аргумента ``-V:`` указание компании ограничит выбор "
"средами выполнения от этого поставщика, а указание только тега будет выбрано "
"из всех поставщиков. Обратите внимание, что отсутствие косой черты "
"подразумевает тег::"

#: ../../using/windows.rst:763
msgid ""
"The short form of the argument (``-3``) only ever selects from core Python "
"releases, and not other distributions. However, the longer form (``-V:3``) "
"will select from any."
msgstr ""
"Краткая форма аргумента (``-3``) всегда выбирает только из основных выпусков "
"Python, а не из других дистрибутивов. Однако более длинная форма (``-V:3``) "
"будет выбирать любой."

#: ../../using/windows.rst:767
msgid ""
"The Company is matched on the full string, case-insenitive. The Tag is "
"matched oneither the full string, or a prefix, provided the next character "
"is a dot or a hyphen. This allows ``-V:3.1`` to match ``3.1-32``, but not "
"``3.10``. Tags are sorted using numerical ordering (``3.10`` is newer than "
"``3.1``), but are compared using text (``-V:3.01`` does not match ``3.1``)."
msgstr ""
"Компания сопоставляется по полной строке без учета регистра. Тегу "
"соответствует либо вся строка, либо префикс, при условии, что следующим "
"символом является точка или дефис. Это позволяет ``-V:3.1`` соответствовать "
"``3.1-32``, но не ``3.10``. Теги сортируются с использованием числового "
"порядка (``3.10`` новее, чем ``3.1``), но сравниваются с использованием "
"текста (``-V:3.01`` не соответствует ``3.1``)."

#: ../../using/windows.rst:775
msgid "Virtual environments"
msgstr "Виртуальные среды"

#: ../../using/windows.rst:779
msgid ""
"If the launcher is run with no explicit Python version specification, and a "
"virtual environment (created with the standard library :mod:`venv` module or "
"the external ``virtualenv`` tool) active, the launcher will run the virtual "
"environment's interpreter rather than the global one.  To run the global "
"interpreter, either deactivate the virtual environment, or explicitly "
"specify the global Python version."
msgstr ""
"Если программа запуска запускается без явного указания версии Python и "
"активна виртуальная среда (созданная с помощью модуля стандартной "
"библиотеки :mod:`venv` или внешнего инструмента ``virtualenv``), программа "
"запуска скорее запустит интерпретатор виртуальной среды. чем глобальный. "
"Чтобы запустить глобальный интерпретатор, либо деактивируйте виртуальную "
"среду, либо явно укажите глобальную версию Python."

#: ../../using/windows.rst:787
msgid "From a script"
msgstr "Из скрипта"

#: ../../using/windows.rst:789
msgid ""
"Let's create a test Python script - create a file called ``hello.py`` with "
"the following contents"
msgstr ""
"Давайте создадим тестовый скрипт Python — создайте файл с именем hello.py со "
"следующим содержимым."

#: ../../using/windows.rst:798
msgid "From the directory in which hello.py lives, execute the command::"
msgstr "Из каталога, в котором находится hello.py, выполните команду::"

#: ../../using/windows.rst:802
msgid ""
"You should notice the version number of your latest Python 2.x installation "
"is printed.  Now try changing the first line to be:"
msgstr ""
"Вы должны заметить, что напечатан номер версии вашей последней установки "
"Python 2.x. Теперь попробуйте изменить первую строку так:"

#: ../../using/windows.rst:809
msgid ""
"Re-executing the command should now print the latest Python 3.x information. "
"As with the above command-line examples, you can specify a more explicit "
"version qualifier.  Assuming you have Python 3.7 installed, try changing the "
"first line to ``#! python3.7`` and you should find the 3.7 version "
"information printed."
msgstr ""
"Повторное выполнение команды теперь должно вывести последнюю информацию о "
"Python 3.x. Как и в приведенных выше примерах командной строки, вы можете "
"указать более явный квалификатор версии. Предполагая, что у вас установлен "
"Python 3.7, попробуйте изменить первую строку на ``#! python3.7``, и вы "
"должны найти напечатанную информацию о версии 3.7."

#: ../../using/windows.rst:815
msgid ""
"Note that unlike interactive use, a bare \"python\" will use the latest "
"version of Python 2.x that you have installed.  This is for backward "
"compatibility and for compatibility with Unix, where the command ``python`` "
"typically refers to Python 2."
msgstr ""
"Обратите внимание, что в отличие от интерактивного использования, простой "
"«python» будет использовать последнюю установленную вами версию Python 2.x. "
"Это сделано для обратной совместимости и совместимости с Unix, где команда "
"``python`` обычно относится к Python 2."

#: ../../using/windows.rst:821
msgid "From file associations"
msgstr "Из ассоциаций файлов"

#: ../../using/windows.rst:823
msgid ""
"The launcher should have been associated with Python files (i.e. ``.py``, ``."
"pyw``, ``.pyc`` files) when it was installed.  This means that when you "
"double-click on one of these files from Windows explorer the launcher will "
"be used, and therefore you can use the same facilities described above to "
"have the script specify the version which should be used."
msgstr ""
"При установке программа запуска должна была быть связана с файлами Python "
"(т. е. файлами ``.py``, ``.pyw``, ``.pyc``. Это означает, что при двойном "
"щелчке по одному из этих файлов в проводнике Windows будет использоваться "
"средство запуска, и поэтому вы можете использовать те же средства, которые "
"описаны выше, чтобы сценарий указывал версию, которую следует использовать."

#: ../../using/windows.rst:829
msgid ""
"The key benefit of this is that a single launcher can support multiple "
"Python versions at the same time depending on the contents of the first line."
msgstr ""
"Ключевым преимуществом этого является то, что одна программа запуска может "
"одновременно поддерживать несколько версий Python в зависимости от "
"содержимого первой строки."

#: ../../using/windows.rst:833
msgid "Shebang Lines"
msgstr "Линии Шебанг"

#: ../../using/windows.rst:835
msgid ""
"If the first line of a script file starts with ``#!``, it is known as a "
"\"shebang\" line.  Linux and other Unix like operating systems have native "
"support for such lines and they are commonly used on such systems to "
"indicate how a script should be executed.  This launcher allows the same "
"facilities to be used with Python scripts on Windows and the examples above "
"demonstrate their use."
msgstr ""
"Если первая строка файла сценария начинается с ``#!``, она называется "
"строкой \"шебанг\". Linux и другие Unix-подобные операционные системы имеют "
"встроенную поддержку таких строк, и они обычно используются в таких системах "
"для указания того, как следует выполнять сценарий. Этот модуль запуска "
"позволяет использовать те же возможности со сценариями Python в Windows, и "
"приведенные выше примеры демонстрируют их использование."

#: ../../using/windows.rst:842
msgid ""
"To allow shebang lines in Python scripts to be portable between Unix and "
"Windows, this launcher supports a number of 'virtual' commands to specify "
"which interpreter to use.  The supported virtual commands are:"
msgstr ""
"Чтобы строки shebang в сценариях Python можно было переносить между Unix и "
"Windows, этот модуль запуска поддерживает ряд «виртуальных» команд, "
"позволяющих указать, какой интерпретатор использовать. Поддерживаемые "
"виртуальные команды:"

#: ../../using/windows.rst:846
msgid "``/usr/bin/env``"
msgstr "``/usr/bin/env``"

#: ../../using/windows.rst:847
msgid "``/usr/bin/python``"
msgstr "``/usr/bin/python``"

#: ../../using/windows.rst:848
msgid "``/usr/local/bin/python``"
msgstr "``/usr/local/bin/python``"

#: ../../using/windows.rst:849
msgid "``python``"
msgstr "``python``"

#: ../../using/windows.rst:851
msgid "For example, if the first line of your script starts with"
msgstr "Например, если первая строка вашего скрипта начинается с"

#: ../../using/windows.rst:857
msgid ""
"The default Python will be located and used.  As many Python scripts written "
"to work on Unix will already have this line, you should find these scripts "
"can be used by the launcher without modification.  If you are writing a new "
"script on Windows which you hope will be useful on Unix, you should use one "
"of the shebang lines starting with ``/usr``."
msgstr ""
"Python по умолчанию будет найден и использован. Поскольку многие сценарии "
"Python, написанные для работы в Unix, уже содержат эту строку, вы "
"обнаружите, что эти сценарии могут использоваться программой запуска без "
"изменений. Если вы пишете новый сценарий для Windows, который, как вы "
"надеетесь, будет полезен в Unix, вам следует использовать одну из строк "
"shebang, начинающуюся с ``/usr``."

#: ../../using/windows.rst:863
msgid ""
"Any of the above virtual commands can be suffixed with an explicit version "
"(either just the major version, or the major and minor version). Furthermore "
"the 32-bit version can be requested by adding \"-32\" after the minor "
"version. I.e. ``/usr/bin/python3.7-32`` will request usage of the 32-bit "
"python 3.7."
msgstr ""
"К любой из вышеперечисленных виртуальных команд может быть добавлена ​​явная "
"версия (либо только основная версия, либо основная и второстепенная версии). "
"Кроме того, 32-битную версию можно запросить, добавив «-32» после младшей "
"версии. Т.е. ``/usr/bin/python3.7-32`` запросит использование 32-битного "
"Python 3.7."

#: ../../using/windows.rst:871
msgid ""
"Beginning with python launcher 3.7 it is possible to request 64-bit version "
"by the \"-64\" suffix. Furthermore it is possible to specify a major and "
"architecture without minor (i.e. ``/usr/bin/python3-64``)."
msgstr ""
"Начиная с версии Python 3.7, можно запросить 64-битную версию с суффиксом "
"«-64». Кроме того, можно указать основной и архитектуру без младшего "
"(например, ``/usr/bin/python3-64``)."

#: ../../using/windows.rst:877
msgid ""
"The \"-64\" suffix is deprecated, and now implies \"any architecture that is "
"not provably i386/32-bit\". To request a specific environment, use the new :"
"samp:`-V:{TAG}` argument with the complete tag."
msgstr ""
"Суффикс «-64» устарел и теперь подразумевает «любую архитектуру, которая не "
"является i386/32-битной». Чтобы запросить конкретную среду, используйте "
"новый аргумент :samp:`-V:{TAG}` с полным тегом."

#: ../../using/windows.rst:881
msgid ""
"The ``/usr/bin/env`` form of shebang line has one further special property. "
"Before looking for installed Python interpreters, this form will search the "
"executable :envvar:`PATH` for a Python executable matching the name provided "
"as the first argument. This corresponds to the behaviour of the Unix ``env`` "
"program, which performs a :envvar:`PATH` search. If an executable matching "
"the first argument after the ``env`` command cannot be found, but the "
"argument starts with ``python``, it will be handled as described for the "
"other virtual commands. The environment variable :envvar:"
"`PYLAUNCHER_NO_SEARCH_PATH` may be set (to any value) to skip this search "
"of :envvar:`PATH`."
msgstr ""
"Форма ``/usr/bin/env`` строки shebang имеет еще одно особое свойство. Прежде "
"чем искать установленные интерпретаторы Python, эта форма выполнит поиск "
"исполняемого файла :envvar:`PATH` для исполняемого файла Python, "
"соответствующего имени, указанному в качестве первого аргумента. Это "
"соответствует поведению программы env в Unix, которая выполняет поиск по :"
"envvar:`PATH`. Если исполняемый файл, соответствующий первому аргументу "
"после команды env, не может быть найден, но аргумент начинается с Python, он "
"будет обработан, как описано для других виртуальных команд. Переменная "
"среды :envvar:`PYLAUNCHER_NO_SEARCH_PATH` может быть установлена ​​(любое "
"значение), чтобы пропустить этот поиск :envvar:`PATH`."

#: ../../using/windows.rst:892
msgid ""
"Shebang lines that do not match any of these patterns are looked up in the "
"``[commands]`` section of the launcher's :ref:`.INI file <launcher-ini>`. "
"This may be used to handle certain commands in a way that makes sense for "
"your system. The name of the command must be a single argument (no spaces in "
"the shebang executable), and the value substituted is the full path to the "
"executable (additional arguments specified in the .INI will be quoted as "
"part of the filename)."
msgstr ""
"Строки Shebang, которые не соответствуют ни одному из этих шаблонов, ищутся "
"в разделе ``[commands]`` :ref:`.INI-файла программы запуска <launcher-ini>`. "
"Это можно использовать для обработки определенных команд способом, который "
"имеет смысл для вашей системы. Имя команды должно быть одним аргументом (без "
"пробелов в исполняемом файле shebang), а подставляемое значение — это полный "
"путь к исполняемому файлу (дополнительные аргументы, указанные в .INI, будут "
"заключены в кавычки как часть имени файла)."

#: ../../using/windows.rst:905
msgid ""
"Any commands not found in the .INI file are treated as **Windows** "
"executable paths that are absolute or relative to the directory containing "
"the script file. This is a convenience for Windows-only scripts, such as "
"those generated by an installer, since the behavior is not compatible with "
"Unix-style shells. These paths may be quoted, and may include multiple "
"arguments, after which the path to the script and any additional arguments "
"will be appended."
msgstr ""
"Любые команды, не найденные в файле .INI, рассматриваются как пути к "
"исполняемым файлам **Windows**, которые являются абсолютными или "
"относительными к каталогу, содержащему файл сценария. Это удобно для "
"сценариев только для Windows, например, созданных установщиком, поскольку "
"такое поведение несовместимо с оболочками в стиле Unix. Эти пути могут быть "
"заключены в кавычки и могут включать несколько аргументов, после которых "
"будет добавлен путь к сценарию и любые дополнительные аргументы."

#: ../../using/windows.rst:914
msgid "Arguments in shebang lines"
msgstr "Аргументы в строках shebang"

#: ../../using/windows.rst:916
msgid ""
"The shebang lines can also specify additional options to be passed to the "
"Python interpreter.  For example, if you have a shebang line:"
msgstr ""
"Строки shebang также могут указывать дополнительные параметры, которые будут "
"переданы интерпретатору Python. Например, если у вас есть строка shebang:"

#: ../../using/windows.rst:923
msgid "Then Python will be started with the ``-v`` option"
msgstr "Затем Python запустится с опцией ``-v``."

#: ../../using/windows.rst:926
msgid "Customization"
msgstr "Настройка"

#: ../../using/windows.rst:931
msgid "Customization via INI files"
msgstr "Настройка через INI-файлы"

#: ../../using/windows.rst:933
msgid ""
"Two .ini files will be searched by the launcher - ``py.ini`` in the current "
"user's application data directory (``%LOCALAPPDATA%`` or ``$env:"
"LocalAppData``) and ``py.ini`` in the same directory as the launcher. The "
"same .ini files are used for both the 'console' version of the launcher (i."
"e. py.exe) and for the 'windows' version (i.e. pyw.exe)."
msgstr ""
"Программа запуска будет искать два файла .ini: ``py.ini`` в каталоге данных "
"приложения текущего пользователя (``%LOCALAPPDATA%`` или ``$env:"
"LocalAppData``) и ``py.ini` `в том же каталоге, что и программа запуска. "
"Одни и те же файлы .ini используются как для «консольной» версии программы "
"запуска (т. е. py.exe), так и для «виндовской» версии (т. е. pyw.exe)."

#: ../../using/windows.rst:939
msgid ""
"Customization specified in the \"application directory\" will have "
"precedence over the one next to the executable, so a user, who may not have "
"write access to the .ini file next to the launcher, can override commands in "
"that global .ini file."
msgstr ""
"Настройка, указанная в «каталоге приложения», будет иметь приоритет над той, "
"которая находится рядом с исполняемым файлом, поэтому пользователь, у "
"которого может не быть доступа на запись в файл .ini рядом с программой "
"запуска, может переопределить команды в этом глобальном файле .ini."

#: ../../using/windows.rst:944
msgid "Customizing default Python versions"
msgstr "Настройка версий Python по умолчанию"

#: ../../using/windows.rst:946
msgid ""
"In some cases, a version qualifier can be included in a command to dictate "
"which version of Python will be used by the command. A version qualifier "
"starts with a major version number and can optionally be followed by a "
"period ('.') and a minor version specifier. Furthermore it is possible to "
"specify if a 32 or 64 bit implementation shall be requested by adding "
"\"-32\" or \"-64\"."
msgstr ""
"В некоторых случаях в команду можно включить квалификатор версии, чтобы "
"указать, какая версия Python будет использоваться командой. Спецификатор "
"версии начинается с основного номера версии, за которым при необходимости "
"может следовать точка («.») и дополнительный спецификатор версии. Кроме "
"того, можно указать, должна ли запрашиваться 32- или 64-битная реализация, "
"добавив «-32» или «-64»."

#: ../../using/windows.rst:952
msgid ""
"For example, a shebang line of ``#!python`` has no version qualifier, while "
"``#!python3`` has a version qualifier which specifies only a major version."
msgstr ""
"Например, строка shebang ``#!python`` не имеет квалификатора версии, а ``#!"
"python3`` имеет квалификатор версии, который указывает только основную "
"версию."

#: ../../using/windows.rst:955
msgid ""
"If no version qualifiers are found in a command, the environment variable :"
"envvar:`PY_PYTHON` can be set to specify the default version qualifier. If "
"it is not set, the default is \"3\". The variable can specify any value that "
"may be passed on the command line, such as \"3\", \"3.7\", \"3.7-32\" or "
"\"3.7-64\". (Note that the \"-64\" option is only available with the "
"launcher included with Python 3.7 or newer.)"
msgstr ""
"Если в команде не найдены квалификаторы версии, переменная среды :envvar:"
"`PY_PYTHON` может быть установлена ​​для указания квалификатора версии по "
"умолчанию. Если он не установлен, значением по умолчанию является «3». "
"Переменная может указывать любое значение, которое можно передать в "
"командной строке, например «3», «3,7», «3,7-32» или «3,7-64». (Обратите "
"внимание, что опция «-64» доступна только в средстве запуска, входящем в "
"состав Python 3.7 или новее.)"

#: ../../using/windows.rst:962
msgid ""
"If no minor version qualifiers are found, the environment variable "
"``PY_PYTHON{major}`` (where ``{major}`` is the current major version "
"qualifier as determined above) can be set to specify the full version. If no "
"such option is found, the launcher will enumerate the installed Python "
"versions and use the latest minor release found for the major version, which "
"is likely, although not guaranteed, to be the most recently installed "
"version in that family."
msgstr ""
"Если квалификаторы младшей версии не найдены, переменная среды "
"PY_PYTHON{major}`` (где {major}`` — это текущий квалификатор основной "
"версии, как определено выше) может быть установлена ​​для указания полной "
"версии. Если такая опция не найдена, программа запуска перечисляет "
"установленные версии Python и использует последнюю второстепенную версию, "
"найденную для основной версии, которая, скорее всего, хотя и не "
"гарантированно, будет самой последней установленной версией в этом семействе."

#: ../../using/windows.rst:970
msgid ""
"On 64-bit Windows with both 32-bit and 64-bit implementations of the same "
"(major.minor) Python version installed, the 64-bit version will always be "
"preferred. This will be true for both 32-bit and 64-bit implementations of "
"the launcher - a 32-bit launcher will prefer to execute a 64-bit Python "
"installation of the specified version if available. This is so the behavior "
"of the launcher can be predicted knowing only what versions are installed on "
"the PC and without regard to the order in which they were installed (i.e., "
"without knowing whether a 32 or 64-bit version of Python and corresponding "
"launcher was installed last). As noted above, an optional \"-32\" or \"-64\" "
"suffix can be used on a version specifier to change this behaviour."
msgstr ""
"В 64-разрядной версии Windows с установленными как 32-разрядной, так и 64-"
"разрядной реализациями одной и той же (основной.второстепенной) версии "
"Python 64-разрядная версия всегда будет предпочтительнее. Это будет "
"справедливо как для 32-битной, так и для 64-битной реализации средства "
"запуска — 32-разрядное средство запуска предпочтет выполнить 64-разрядную "
"установку Python указанной версии, если она доступна. Это сделано для того, "
"чтобы поведение программы запуска можно было предсказать, зная только, какие "
"версии установлены на ПК, и без учета порядка их установки (т. е. не зная, "
"была ли установлена ​​32- или 64-битная версия Python и соответствующая "
"программа запуска). установлен последним). Как отмечалось выше, для "
"изменения этого поведения в спецификаторе версии можно использовать "
"необязательный суффикс «-32» или «-64»."

#: ../../using/windows.rst:981
msgid "Examples:"
msgstr "Примеры:"

#: ../../using/windows.rst:983
msgid ""
"If no relevant options are set, the commands ``python`` and ``python2`` will "
"use the latest Python 2.x version installed and the command ``python3`` will "
"use the latest Python 3.x installed."
msgstr ""
"Если соответствующие параметры не установлены, команды ``python`` и "
"``python2`` будут использовать последнюю установленную версию Python 2.x, а "
"команда ``python3`` будет использовать последнюю установленную версию Python "
"3.x."

#: ../../using/windows.rst:987
msgid ""
"The command ``python3.7`` will not consult any options at all as the "
"versions are fully specified."
msgstr ""
"Команда ``python3.7`` вообще не будет просматривать какие-либо параметры, "
"поскольку версии полностью указаны."

#: ../../using/windows.rst:990
msgid ""
"If ``PY_PYTHON=3``, the commands ``python`` and ``python3`` will both use "
"the latest installed Python 3 version."
msgstr ""
"Если PY_PYTHON=3, команды python и python3 будут использовать последнюю "
"установленную версию Python 3."

#: ../../using/windows.rst:993
msgid ""
"If ``PY_PYTHON=3.7-32``, the command ``python`` will use the 32-bit "
"implementation of 3.7 whereas the command ``python3`` will use the latest "
"installed Python (PY_PYTHON was not considered at all as a major version was "
"specified.)"
msgstr ""
"Если PY_PYTHON=3.7-32, команда Python будет использовать 32-битную "
"реализацию версии 3.7, тогда как команда Python3 будет использовать "
"последнюю установленную версию Python (PY_PYTHON вообще не рассматривался "
"как была указана основная версия.)"

#: ../../using/windows.rst:998
msgid ""
"If ``PY_PYTHON=3`` and ``PY_PYTHON3=3.7``, the commands ``python`` and "
"``python3`` will both use specifically 3.7"
msgstr ""
"Если ``PY_PYTHON=3`` и ``PY_PYTHON3=3.7``, команды ``python`` и ``python3`` "
"будут использовать именно версию 3.7."

#: ../../using/windows.rst:1001
msgid ""
"In addition to environment variables, the same settings can be configured in "
"the .INI file used by the launcher.  The section in the INI file is called "
"``[defaults]`` and the key name will be the same as the environment "
"variables without the leading ``PY_`` prefix (and note that the key names in "
"the INI file are case insensitive.)  The contents of an environment variable "
"will override things specified in the INI file."
msgstr ""
"Помимо переменных среды, те же параметры можно настроить в файле .INI, "
"используемом программой запуска. Раздел в INI-файле называется "
"``[defaults]``, и имя ключа будет таким же, как и переменные среды, без "
"ведущего префикса ``PY_`` (обратите внимание, что имена ключей в INI-файле "
"нечувствительны к регистру). .) Содержимое переменной среды переопределяет "
"данные, указанные в INI-файле."

#: ../../using/windows.rst:1008
msgid "For example:"
msgstr "Например:"

#: ../../using/windows.rst:1010
msgid "Setting ``PY_PYTHON=3.7`` is equivalent to the INI file containing:"
msgstr "Установка ``PY_PYTHON=3.7`` эквивалентна INI-файлу, содержащему:"

#: ../../using/windows.rst:1017
msgid ""
"Setting ``PY_PYTHON=3`` and ``PY_PYTHON3=3.7`` is equivalent to the INI file "
"containing:"
msgstr ""
"Установка ``PY_PYTHON=3`` и ``PY_PYTHON3=3.7`` эквивалентна INI-файлу, "
"содержащему:"

#: ../../using/windows.rst:1027
msgid "Diagnostics"
msgstr "Диагностика"

#: ../../using/windows.rst:1029
msgid ""
"If an environment variable :envvar:`PYLAUNCHER_DEBUG` is set (to any value), "
"the launcher will print diagnostic information to stderr (i.e. to the "
"console). While this information manages to be simultaneously verbose *and* "
"terse, it should allow you to see what versions of Python were located, why "
"a particular version was chosen and the exact command-line used to execute "
"the target Python. It is primarily intended for testing and debugging."
msgstr ""
"Если переменная среды :envvar:`PYLAUNCHER_DEBUG` установлена ​​(любое "
"значение), программа запуска будет печатать диагностическую информацию в "
"stderr (т.е. на консоль). Хотя эта информация может быть одновременно "
"подробной *и* краткой, она должна позволить вам увидеть, какие версии Python "
"были расположены, почему была выбрана конкретная версия и точная командная "
"строка, использованная для выполнения целевого Python. Он в первую очередь "
"предназначен для тестирования и отладки."

#: ../../using/windows.rst:1037
msgid "Dry Run"
msgstr "Пробный прогон"

#: ../../using/windows.rst:1039
msgid ""
"If an environment variable :envvar:`PYLAUNCHER_DRYRUN` is set (to any "
"value), the launcher will output the command it would have run, but will not "
"actually launch Python. This may be useful for tools that want to use the "
"launcher to detect and then launch Python directly. Note that the command "
"written to standard output is always encoded using UTF-8, and may not render "
"correctly in the console."
msgstr ""
"Если для переменной среды :envvar:`PYLAUNCHER_DRYRUN` установлено любое "
"значение, программа запуска выведет команду, которую она должна была "
"выполнить, но фактически не запустит Python. Это может быть полезно для "
"инструментов, которые хотят использовать средство запуска для обнаружения и "
"последующего запуска Python напрямую. Обратите внимание, что команда, "
"записываемая в стандартный вывод, всегда кодируется с использованием UTF-8 и "
"может неправильно отображаться в консоли."

#: ../../using/windows.rst:1047
msgid "Install on demand"
msgstr "Установить по требованию"

#: ../../using/windows.rst:1049
msgid ""
"If an environment variable :envvar:`PYLAUNCHER_ALLOW_INSTALL` is set (to any "
"value), and the requested Python version is not installed but is available "
"on the Microsoft Store, the launcher will attempt to install it. This may "
"require user interaction to complete, and you may need to run the command "
"again."
msgstr ""
"Если для переменной среды :envvar:`PYLAUNCHER_ALLOW_INSTALL` установлено "
"(любое значение), а запрошенная версия Python не установлена, но доступна в "
"Microsoft Store, программа запуска попытается установить ее. Для завершения "
"может потребоваться взаимодействие с пользователем, и вам может "
"потребоваться выполнить команду еще раз."

#: ../../using/windows.rst:1054
msgid ""
"An additional :envvar:`PYLAUNCHER_ALWAYS_INSTALL` variable causes the "
"launcher to always try to install Python, even if it is detected. This is "
"mainly intended for testing (and should be used with :envvar:"
"`PYLAUNCHER_DRYRUN`)."
msgstr ""
"Дополнительная переменная :envvar:`PYLAUNCHER_ALWAYS_INSTALL` заставляет "
"программу запуска всегда пытаться установить Python, даже если он обнаружен. "
"В основном это предназначено для тестирования (и его следует использовать с :"
"envvar:`PYLAUNCHER_DRYRUN`)."

#: ../../using/windows.rst:1059
msgid "Return codes"
msgstr "Коды возврата"

#: ../../using/windows.rst:1061
msgid ""
"The following exit codes may be returned by the Python launcher. "
"Unfortunately, there is no way to distinguish these from the exit code of "
"Python itself."
msgstr ""
"Следующие коды завершения могут быть возвращены программой запуска Python. К "
"сожалению, невозможно отличить их от кода завершения самого Python."

#: ../../using/windows.rst:1064
msgid ""
"The names of codes are as used in the sources, and are only for reference. "
"There is no way to access or resolve them apart from reading this page. "
"Entries are listed in alphabetical order of names."
msgstr ""
"Названия кодов приведены в источниках и предназначены только для справки. "
"Невозможно получить доступ к ним или решить их, кроме как прочитать эту "
"страницу. Записи перечислены в алфавитном порядке названий."

#: ../../using/windows.rst:1069
msgid "Value"
msgstr "Значение"

#: ../../using/windows.rst:1071
msgid "RC_BAD_VENV_CFG"
msgstr "RC_BAD_VENV_CFG"

#: ../../using/windows.rst:1071
msgid "107"
msgstr "107"

#: ../../using/windows.rst:1071
msgid "A :file:`pyvenv.cfg` was found but is corrupt."
msgstr "Файл :file:`pyvenv.cfg` найден, но поврежден."

#: ../../using/windows.rst:1073
msgid "RC_CREATE_PROCESS"
msgstr "RC_CREATE_PROCESS"

#: ../../using/windows.rst:1073
msgid "101"
msgstr "101"

#: ../../using/windows.rst:1073
msgid "Failed to launch Python."
msgstr "Не удалось запустить Python."

#: ../../using/windows.rst:1075
msgid "RC_INSTALLING"
msgstr "RC_INSTALLING"

#: ../../using/windows.rst:1075
msgid "111"
msgstr "111"

#: ../../using/windows.rst:1075
msgid ""
"An install was started, but the command will need to be re-run after it "
"completes."
msgstr ""
"Установка была начата, но после ее завершения команду необходимо будет "
"запустить повторно."

#: ../../using/windows.rst:1078
msgid "RC_INTERNAL_ERROR"
msgstr "RC_INTERNAL_ERROR"

#: ../../using/windows.rst:1078
msgid "109"
msgstr "109"

#: ../../using/windows.rst:1078
msgid "Unexpected error. Please report a bug."
msgstr "Неожиданная ошибка. Пожалуйста, сообщите об ошибке."

#: ../../using/windows.rst:1080
msgid "RC_NO_COMMANDLINE"
msgstr "RC_NO_COMMANDLINE"

#: ../../using/windows.rst:1080
msgid "108"
msgstr "108"

#: ../../using/windows.rst:1080
msgid "Unable to obtain command line from the operating system."
msgstr "Невозможно получить командную строку из операционной системы."

#: ../../using/windows.rst:1083
msgid "RC_NO_PYTHON"
msgstr "RC_NO_PYTHON"

#: ../../using/windows.rst:1083
msgid "103"
msgstr "103"

#: ../../using/windows.rst:1083
msgid "Unable to locate the requested version."
msgstr "Не удалось найти запрошенную версию."

#: ../../using/windows.rst:1085
msgid "RC_NO_VENV_CFG"
msgstr "RC_NO_VENV_CFG"

#: ../../using/windows.rst:1085
msgid "106"
msgstr "106"

#: ../../using/windows.rst:1085
msgid "A :file:`pyvenv.cfg` was required but not found."
msgstr "Файл :file:`pyvenv.cfg` был необходим, но не найден."

#: ../../using/windows.rst:1093
msgid "Finding modules"
msgstr "Поиск модулей"

#: ../../using/windows.rst:1095
msgid ""
"These notes supplement the description at :ref:`sys-path-init` with detailed "
"Windows notes."
msgstr ""
"Эти примечания дополняют описание в :ref:`sys-path-init` подробными "
"примечаниями по Windows."

#: ../../using/windows.rst:1098
msgid ""
"When no ``._pth`` file is found, this is how :data:`sys.path` is populated "
"on Windows:"
msgstr "Если файл ``._pth`` не найден, в Windows заполняется :data:`sys.path`:"

#: ../../using/windows.rst:1101
msgid ""
"An empty entry is added at the start, which corresponds to the current "
"directory."
msgstr "В начало добавляется пустая запись, соответствующая текущему каталогу."

#: ../../using/windows.rst:1104
msgid ""
"If the environment variable :envvar:`PYTHONPATH` exists, as described in :"
"ref:`using-on-envvars`, its entries are added next.  Note that on Windows, "
"paths in this variable must be separated by semicolons, to distinguish them "
"from the colon used in drive identifiers (``C:\\`` etc.)."
msgstr ""
"Если переменная среды :envvar:`PYTHONPATH` существует, как описано в :ref:"
"`using-on-envvars`, ее записи добавляются следующими. Обратите внимание, что "
"в Windows пути в этой переменной должны быть разделены точкой с запятой, "
"чтобы отличить их от двоеточия, используемого в идентификаторах дисков (``C:"
"\\`` и т. д.)."

#: ../../using/windows.rst:1109
msgid ""
"Additional \"application paths\" can be added in the registry as subkeys of :"
"samp:`\\\\SOFTWARE\\\\Python\\\\PythonCore\\\\{version}\\\\PythonPath` under "
"both the ``HKEY_CURRENT_USER`` and ``HKEY_LOCAL_MACHINE`` hives.  Subkeys "
"which have semicolon-delimited path strings as their default value will "
"cause each path to be added to :data:`sys.path`.  (Note that all known "
"installers only use HKLM, so HKCU is typically empty.)"
msgstr ""
"Дополнительные «пути к приложениям» можно добавить в реестр как подразделы :"
"samp:`\\\\SOFTWARE\\\\Python\\\\PythonCore\\\\{version}\\\\PythonPath` как в "
"``HKEY_CURRENT_USER``, так и в ``HKEY_LOCAL_MACHINE`` крапивница. Подключи, "
"которые имеют строки пути, разделенные точкой с запятой, в качестве значения "
"по умолчанию, приведут к добавлению каждого пути в :data:`sys.path`. "
"(Обратите внимание, что все известные установщики используют только HKLM, "
"поэтому HKCU обычно пуст.)"

#: ../../using/windows.rst:1116
msgid ""
"If the environment variable :envvar:`PYTHONHOME` is set, it is assumed as "
"\"Python Home\".  Otherwise, the path of the main Python executable is used "
"to locate a \"landmark file\" (either ``Lib\\os.py`` or ``pythonXY.zip``) to "
"deduce the \"Python Home\".  If a Python home is found, the relevant sub-"
"directories added to :data:`sys.path` (``Lib``, ``plat-win``, etc) are based "
"on that folder.  Otherwise, the core Python path is constructed from the "
"PythonPath stored in the registry."
msgstr ""
"Если установлена ​​переменная среды :envvar:`PYTHONHOME`, она считается "
"«Python Home». В противном случае путь к основному исполняемому файлу Python "
"используется для поиска «файла ориентира» (либо ``Lib\\os.py``, либо "
"``pythonXY.zip``), чтобы определить «домой Python». Если домашний каталог "
"Python найден, соответствующие подкаталоги, добавленные в :data:`sys.path` "
"(``Lib``, ``plat-win`` и т. д.), основаны на этой папке. В противном случае "
"основной путь Python создается на основе PythonPath, хранящегося в реестре."

#: ../../using/windows.rst:1124
msgid ""
"If the Python Home cannot be located, no :envvar:`PYTHONPATH` is specified "
"in the environment, and no registry entries can be found, a default path "
"with relative entries is used (e.g. ``.\\Lib;.\\plat-win``, etc)."
msgstr ""
"Если невозможно найти домашнюю страницу Python, в среде не указан :envvar:"
"`PYTHONPATH` и не удается найти записи реестра, используется путь по "
"умолчанию с относительными записями (например, ``.\\Lib;.\\plat-win `` и т. "
"д.)."

#: ../../using/windows.rst:1128
msgid ""
"If a ``pyvenv.cfg`` file is found alongside the main executable or in the "
"directory one level above the executable, the following variations apply:"
msgstr ""
"Если файл ``pyvenv.cfg`` находится рядом с основным исполняемым файлом или в "
"каталоге на один уровень выше исполняемого файла, применяются следующие "
"варианты:"

#: ../../using/windows.rst:1131
msgid ""
"If ``home`` is an absolute path and :envvar:`PYTHONHOME` is not set, this "
"path is used instead of the path to the main executable when deducing the "
"home location."
msgstr ""
"Если ``home`` является абсолютным путем и :envvar:`PYTHONHOME` не "
"установлен, этот путь используется вместо пути к основному исполняемому "
"файлу при определении домашнего местоположения."

#: ../../using/windows.rst:1135
msgid "The end result of all this is:"
msgstr "Конечным результатом всего этого является:"

#: ../../using/windows.rst:1137
msgid ""
"When running :file:`python.exe`, or any other .exe in the main Python "
"directory (either an installed version, or directly from the PCbuild "
"directory), the core path is deduced, and the core paths in the registry are "
"ignored.  Other \"application paths\" in the registry are always read."
msgstr ""
"При запуске :file:`python.exe` или любого другого .exe в основном каталоге "
"Python (либо установленной версии, либо непосредственно из каталога PCbuild) "
"выводится основной путь, а основные пути в реестре игнорируются. . Другие "
"«пути приложений» в реестре всегда читаются."

#: ../../using/windows.rst:1142
msgid ""
"When Python is hosted in another .exe (different directory, embedded via "
"COM, etc), the \"Python Home\" will not be deduced, so the core path from "
"the registry is used.  Other \"application paths\" in the registry are "
"always read."
msgstr ""
"Когда Python размещен в другом .exe-файле (другом каталоге, внедренном через "
"COM и т. д.), «Python Home» не будет выведен, поэтому используется основной "
"путь из реестра. Другие «пути приложений» в реестре всегда читаются."

#: ../../using/windows.rst:1146
msgid ""
"If Python can't find its home and there are no registry value (frozen .exe, "
"some very strange installation setup) you get a path with some default, but "
"relative, paths."
msgstr ""
"Если Python не может найти свой дом и в реестре нет значения (замороженный ."
"exe, какая-то очень странная установка установки), вы получите путь с "
"некоторыми путями по умолчанию, но относительными."

#: ../../using/windows.rst:1150
msgid ""
"For those who want to bundle Python into their application or distribution, "
"the following advice will prevent conflicts with other installations:"
msgstr ""
"Для тех, кто хочет включить Python в свое приложение или дистрибутив, "
"следующие советы помогут предотвратить конфликты с другими установками:"

#: ../../using/windows.rst:1153
msgid ""
"Include a ``._pth`` file alongside your executable containing the "
"directories to include. This will ignore paths listed in the registry and "
"environment variables, and also ignore :mod:`site` unless ``import site`` is "
"listed."
msgstr ""
"Включите файл ``._pth`` вместе с вашим исполняемым файлом, содержащим "
"каталоги, которые нужно включить. Это будет игнорировать пути, указанные в "
"реестре и переменных среды, а также игнорировать :mod:`site`, если не указан "
"``import site``."

#: ../../using/windows.rst:1158
msgid ""
"If you are loading :file:`python3.dll` or :file:`python37.dll` in your own "
"executable, explicitly call :c:func:`Py_SetPath` or (at least) :c:func:"
"`Py_SetProgramName` before :c:func:`Py_Initialize`."
msgstr ""
"Если вы загружаете :file:`python3.dll` или :file:`python37.dll` в свой "
"собственный исполняемый файл, явно вызовите :c:func:`Py_SetPath` или (по "
"крайней мере) :c:func:`Py_SetProgramName` перед :c:func:`Py_Initialize`."

#: ../../using/windows.rst:1162
msgid ""
"Clear and/or overwrite :envvar:`PYTHONPATH` and set :envvar:`PYTHONHOME` "
"before launching :file:`python.exe` from your application."
msgstr ""
"Очистите и/или перезапишите :envvar:`PYTHONPATH` и установите :envvar:"
"`PYTHONHOME` перед запуском :file:`python.exe` из вашего приложения."

#: ../../using/windows.rst:1165
msgid ""
"If you cannot use the previous suggestions (for example, you are a "
"distribution that allows people to run :file:`python.exe` directly), ensure "
"that the landmark file (:file:`Lib\\\\os.py`) exists in your install "
"directory. (Note that it will not be detected inside a ZIP file, but a "
"correctly named ZIP file will be detected instead.)"
msgstr ""
"Если вы не можете использовать предыдущие предложения (например, ваш "
"дистрибутив позволяет людям запускать :file:`python.exe` напрямую), "
"убедитесь, что файл ориентира (:file:`Lib\\\\os.py`) существует. в вашем "
"каталоге установки. (Обратите внимание, что он не будет обнаружен внутри ZIP-"
"файла, вместо этого будет обнаружен ZIP-файл с правильным именем.)"

#: ../../using/windows.rst:1171
msgid ""
"These will ensure that the files in a system-wide installation will not take "
"precedence over the copy of the standard library bundled with your "
"application. Otherwise, your users may experience problems using your "
"application. Note that the first suggestion is the best, as the others may "
"still be susceptible to non-standard paths in the registry and user site-"
"packages."
msgstr ""
"Это гарантирует, что файлы общесистемной установки не будут иметь приоритет "
"над копией стандартной библиотеки, поставляемой в комплекте с вашим "
"приложением. В противном случае у ваших пользователей могут возникнуть "
"проблемы при использовании вашего приложения. Обратите внимание, что первое "
"предложение является лучшим, поскольку остальные могут по-прежнему быть "
"подвержены нестандартным путям в реестре и пакетах пользовательских сайтов."

#: ../../using/windows.rst:1179
msgid ""
"Add ``._pth`` file support and removes ``applocal`` option from ``pyvenv."
"cfg``."
msgstr ""
"Добавлена ​​поддержка файлов ``._pth`` и удалена опция ``applocal`` из "
"``pyvenv.cfg``."

#: ../../using/windows.rst:1184
msgid ""
"Add :file:`python{XX}.zip` as a potential landmark when directly adjacent to "
"the executable."
msgstr ""
"Добавьте :file:`python{XX}.zip` в качестве потенциального ориентира, если он "
"находится непосредственно рядом с исполняемым файлом."

#: ../../using/windows.rst:1189
msgid ""
"Modules specified in the registry under ``Modules`` (not ``PythonPath``) may "
"be imported by :class:`importlib.machinery.WindowsRegistryFinder`. This "
"finder is enabled on Windows in 3.6.0 and earlier, but may need to be "
"explicitly added to :data:`sys.meta_path` in the future."
msgstr ""
"Модули, указанные в реестре в разделе «Модули» (не «PythonPath»), могут быть "
"импортированы с помощью :class:`importlib.machinery.WindowsRegistryFinder`. "
"Этот поисковик включен в Windows версии 3.6.0 и более ранних, но в будущем, "
"возможно, его придется явно добавить в :data:`sys.meta_path`."

#: ../../using/windows.rst:1195
msgid "Additional modules"
msgstr "Дополнительные модули"

#: ../../using/windows.rst:1197
msgid ""
"Even though Python aims to be portable among all platforms, there are "
"features that are unique to Windows.  A couple of modules, both in the "
"standard library and external, and snippets exist to use these features."
msgstr ""
"Несмотря на то, что Python стремится быть переносимым на все платформы, "
"существуют функции, уникальные для Windows. Для использования этих функций "
"существует несколько модулей, как в стандартной библиотеке, так и во "
"внешних, а также фрагменты."

#: ../../using/windows.rst:1201
msgid ""
"The Windows-specific standard modules are documented in :ref:`mswin-specific-"
"services`."
msgstr ""
"Стандартные модули, специфичные для Windows, описаны в :ref:`mswin-special-"
"services`."

#: ../../using/windows.rst:1205
msgid "PyWin32"
msgstr "PyWin32"

#: ../../using/windows.rst:1207
msgid ""
"The `PyWin32 <https://pypi.org/project/pywin32>`_ module by Mark Hammond is "
"a collection of modules for advanced Windows-specific support.  This "
"includes utilities for:"
msgstr ""

#: ../../using/windows.rst:1211
msgid ""
"`Component Object Model <https://docs.microsoft.com/en-us/windows/win32/com/"
"component-object-model--com--portal>`_ (COM)"
msgstr ""
"`Объектная модель компонента <https://docs.microsoft.com/en-us/windows/win32/"
"com/comComponent-object-model--com--portal>`_ (COM)"

#: ../../using/windows.rst:1214
msgid "Win32 API calls"
msgstr "Вызовы Win32 API"

#: ../../using/windows.rst:1215
msgid "Registry"
msgstr "Реестр"

#: ../../using/windows.rst:1216
msgid "Event log"
msgstr "Журнал событий"

#: ../../using/windows.rst:1217
msgid ""
"`Microsoft Foundation Classes <https://docs.microsoft.com/en-us/cpp/mfc/mfc-"
"desktop-applications>`_ (MFC) user interfaces"
msgstr ""
"`Классы Microsoft Foundation <https://docs.microsoft.com/en-us/cpp/mfc/mfc-"
"desktop-applications>`_ (MFC) пользовательские интерфейсы"

#: ../../using/windows.rst:1221
msgid ""
"`PythonWin <https://web.archive.org/web/20060524042422/ https://www.python."
"org/windows/pythonwin/>`_ is a sample MFC application shipped with PyWin32.  "
"It is an embeddable IDE with a built-in debugger."
msgstr ""
"`PythonWin <https://web.archive.org/web/20060524042422/ https://www.python."
"org/windows/pythonwin/>`_ — это пример приложения MFC, поставляемого с "
"PyWin32. Это встраиваемая IDE со встроенным отладчиком."

#: ../../using/windows.rst:1228
msgid ""
"`Win32 How Do I...? <http://timgolden.me.uk/python/win32_how_do_i.html>`_"
msgstr ""

#: ../../using/windows.rst:1228
msgid "by Tim Golden"
msgstr "Tim Golden"

#: ../../using/windows.rst:1230
msgid "`Python and COM <https://www.boddie.org.uk/python/COM.html>`_"
msgstr "`Python и COM <https://www.boddie.org.uk/python/COM.html>`_"

#: ../../using/windows.rst:1231
msgid "by David and Paul Boddie"
msgstr "Дэвид и Пол Бодди"

#: ../../using/windows.rst:1235
msgid "cx_Freeze"
msgstr "cx_Freeze"

#: ../../using/windows.rst:1237
msgid ""
"`cx_Freeze <https://cx-freeze.readthedocs.io/en/latest/>`_ wraps Python "
"scripts into executable Windows programs (:file:`{*}.exe` files).  When you "
"have done this, you can distribute your application without requiring your "
"users to install Python."
msgstr ""
"`cx_Freeze <https://cx-freeze.readthedocs.io/en/latest/>`_ оборачивает "
"сценарии Python в исполняемые программы Windows (:file:`{*}.exe` файлы). "
"Сделав это, вы сможете распространять свое приложение, не требуя от "
"пользователей установки Python."

#: ../../using/windows.rst:1244
msgid "Compiling Python on Windows"
msgstr "Компиляция Python в Windows"

#: ../../using/windows.rst:1246
msgid ""
"If you want to compile CPython yourself, first thing you should do is get "
"the `source <https://www.python.org/downloads/source/>`_. You can download "
"either the latest release's source or just grab a fresh `checkout <https://"
"devguide.python.org/setup/#get-the-source-code>`_."
msgstr ""
"Если вы хотите скомпилировать CPython самостоятельно, первое, что вам нужно "
"сделать, это получить исходный код <https://www.python.org/downloads/source/"
">`_. Вы можете загрузить либо исходный код последней версии, либо просто "
"получить новую `checkout <https://devguide.python.org/setup/#get-the-source-"
"code>`_."

#: ../../using/windows.rst:1251
msgid ""
"The source tree contains a build solution and project files for Microsoft "
"Visual Studio, which is the compiler used to build the official Python "
"releases. These files are in the :file:`PCbuild` directory."
msgstr ""
"Дерево исходного кода содержит решение для сборки и файлы проекта для "
"Microsoft Visual Studio — компилятора, используемого для сборки официальных "
"выпусков Python. Эти файлы находятся в каталоге :file:`PCbuild`."

#: ../../using/windows.rst:1255
msgid ""
"Check :file:`PCbuild/readme.txt` for general information on the build "
"process."
msgstr ""
"Проверьте :file:`PCbuild/readme.txt` для получения общей информации о "
"процессе сборки."

#: ../../using/windows.rst:1257
msgid "For extension modules, consult :ref:`building-on-windows`."
msgstr "Для модулей расширения обратитесь к :ref:`building-on-windows`."

#: ../../using/windows.rst:1261
msgid "Other Platforms"
msgstr "Другие платформы"

#: ../../using/windows.rst:1263
msgid ""
"With ongoing development of Python, some platforms that used to be supported "
"earlier are no longer supported (due to the lack of users or developers). "
"Check :pep:`11` for details on all unsupported platforms."
msgstr ""
"В связи с продолжающимся развитием Python некоторые платформы, которые "
"поддерживались ранее, больше не поддерживаются (из-за отсутствия "
"пользователей или разработчиков). Проверьте :pep:`11` для получения "
"подробной информации обо всех неподдерживаемых платформах."

#: ../../using/windows.rst:1267
msgid ""
"`Windows CE <https://pythonce.sourceforge.net/>`_ is `no longer supported "
"<https://github.com/python/cpython/issues/71542>`__ since Python 3 (if it "
"ever was)."
msgstr ""
"`Windows CE <https://pythonce.sourceforge.net/>`_ `больше не поддерживается "
"<https://github.com/python/cpython/issues/71542>`__ начиная с Python 3 (если "
"он когда-либо был) ."

#: ../../using/windows.rst:1270
msgid ""
"The `Cygwin <https://cygwin.com/>`_ installer offers to install the `Python "
"interpreter <https://cygwin.com/packages/summary/python3.html>`__ as well"
msgstr ""
"Установщик `Cygwin <https://cygwin.com/>`_ предлагает также установить "
"`интерпретатор Python <https://cygwin.com/packages/summary/python3.html>`__"

#: ../../using/windows.rst:1274
msgid ""
"See `Python for Windows <https://www.python.org/downloads/windows/>`_ for "
"detailed information about platforms with pre-compiled installers."
msgstr ""
"См. `Python для Windows <https://www.python.org/downloads/windows/>`_ для "
"получения подробной информации о платформах с предварительно "
"скомпилированными установщиками."
