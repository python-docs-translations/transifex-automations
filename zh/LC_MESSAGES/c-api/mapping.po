# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# Rafael Fontenelle <rffontenelle@gmail.com>, 2025
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.13\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-07-25 15:00+0000\n"
"PO-Revision-Date: 2025-07-18 19:20+0000\n"
"Last-Translator: Rafael Fontenelle <rffontenelle@gmail.com>, 2025\n"
"Language-Team: Chinese (https://app.transifex.com/python-doc/teams/5390/"
"zh/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: zh\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../c-api/mapping.rst:6
msgid "Mapping Protocol"
msgstr "Protokol Pemetaan"

#: ../../c-api/mapping.rst:8
msgid ""
"See also :c:func:`PyObject_GetItem`, :c:func:`PyObject_SetItem` and :c:func:"
"`PyObject_DelItem`."
msgstr ""
"Lihat juga  :c:func:`PyObject_GetItem`, :c:func:`PyObject_SetItem` dan :c:"
"func:`PyObject_DelItem`."

#: ../../c-api/mapping.rst:14
msgid ""
"Return ``1`` if the object provides the mapping protocol or supports "
"slicing, and ``0`` otherwise.  Note that it returns ``1`` for Python classes "
"with a :meth:`~object.__getitem__` method, since in general it is impossible "
"to determine what type of keys the class supports. This function always "
"succeeds."
msgstr ""
"Возвращайте ``1``, если объект предоставляет протокол сопоставления или "
"поддерживает нарезку, и ``0`` в противном случае. Обратите внимание, что он "
"возвращает ``1`` для классов Python с помощью метода :meth:`~object."
"__getitem__`, поскольку в целом невозможно определить, какой тип ключей "
"поддерживает класс. Эта функция всегда завершается успешно."

#: ../../c-api/mapping.rst:25
msgid ""
"Returns the number of keys in object *o* on success, and ``-1`` on failure. "
"This is equivalent to the Python expression ``len(o)``."
msgstr ""
"Повертає кількість ключів в об’єкті *o* в разі успіху та ``-1`` у разі "
"невдачі. Це еквівалентно виразу Python ``len(o)``."

#: ../../c-api/mapping.rst:31
msgid ""
"This is the same as :c:func:`PyObject_GetItem`, but *key* is specified as a :"
"c:expr:`const char*` UTF-8 encoded bytes string, rather than a :c:expr:"
"`PyObject*`."
msgstr ""
"Это то же самое, что и :c:func:` PyObj ect_GetItem`, но *key* указывается "
"как :c:expr:`const char*` строка байтов в кодировке UTF-8, а не как :c:expr:"
"` PyObj т. д. *`."

#: ../../c-api/mapping.rst:38
msgid ""
"Variant of :c:func:`PyObject_GetItem` which doesn't raise :exc:`KeyError` if "
"the key is not found."
msgstr ""
"Вариант :c:func:` PyObj ect_GetItem`, который не вызывает :exc:`KeyError`, "
"если ключ не найден."

#: ../../c-api/mapping.rst:41
msgid ""
"If the key is found, return ``1`` and set *\\*result* to a new :term:`strong "
"reference` to the corresponding value. If the key is not found, return ``0`` "
"and set *\\*result* to ``NULL``; the :exc:`KeyError` is silenced. If an "
"error other than :exc:`KeyError` is raised, return ``-1`` and set "
"*\\*result* to ``NULL``."
msgstr ""
"Если ключ найден, верните ``1`` и установите *\\*result* в новую :term:"
"`strong ссылку` на соответствующее значение. Если ключ не найден, верните "
"``0`` и установите для *\\*result* значение ``NULL``; :exc:`KeyError` "
"отключен. Если возникает ошибка, отличная от :exc:`KeyError`, верните ``-1`` "
"и установите для *\\*result* значение ``NULL``."

#: ../../c-api/mapping.rst:53
msgid ""
"This is the same as :c:func:`PyMapping_GetOptionalItem`, but *key* is "
"specified as a :c:expr:`const char*` UTF-8 encoded bytes string, rather than "
"a :c:expr:`PyObject*`."
msgstr ""
"Это то же самое, что и :c:func:`PyMapping_GetOptionalItem`, но *key* "
"указывается как :c:expr:`const char*` строка байтов в кодировке UTF-8, а не "
"как :c:expr:` PyObj ect. *`."

#: ../../c-api/mapping.rst:62
msgid ""
"This is the same as :c:func:`PyObject_SetItem`, but *key* is specified as a :"
"c:expr:`const char*` UTF-8 encoded bytes string, rather than a :c:expr:"
"`PyObject*`."
msgstr ""
"Это то же самое, что и :c:func:` PyObj ect_SetItem`, но *key* указывается "
"как :c:expr:`const char*` строка байтов в кодировке UTF-8, а не как :c:expr:"
"` PyObj т. д. *`."

#: ../../c-api/mapping.rst:69
msgid "This is an alias of :c:func:`PyObject_DelItem`."
msgstr "Это псевдоним :c:func:` PyObj ect_DelItem`."

#: ../../c-api/mapping.rst:74
msgid ""
"This is the same as :c:func:`PyObject_DelItem`, but *key* is specified as a :"
"c:expr:`const char*` UTF-8 encoded bytes string, rather than a :c:expr:"
"`PyObject*`."
msgstr ""
"Это то же самое, что и :c:func:` PyObj ect_DelItem`, но *key* указывается "
"как :c:expr:`const char*` строка байтов в кодировке UTF-8, а не как :c:expr:"
"` PyObj т. д. *`."

#: ../../c-api/mapping.rst:81
msgid ""
"Return ``1`` if the mapping object has the key *key* and ``0`` otherwise. "
"This is equivalent to the Python expression ``key in o``. On failure, return "
"``-1``."
msgstr ""
"Возвращайте ``1``, если объект сопоставления имеет ключ *key*, и ``0`` в "
"противном случае. Это эквивалентно выражению Python ``key in o``. В случае "
"неудачи верните ``-1``."

#: ../../c-api/mapping.rst:90
msgid ""
"This is the same as :c:func:`PyMapping_HasKeyWithError`, but *key* is "
"specified as a :c:expr:`const char*` UTF-8 encoded bytes string, rather than "
"a :c:expr:`PyObject*`."
msgstr ""
"Это то же самое, что и :c:func:`PyMapping_HasKeyWithError`, но *key* "
"указывается как :c:expr:`const char*` строка байтов в кодировке UTF-8, а не "
"как :c:expr:` PyObj ect. *`."

#: ../../c-api/mapping.rst:99
msgid ""
"Return ``1`` if the mapping object has the key *key* and ``0`` otherwise. "
"This is equivalent to the Python expression ``key in o``. This function "
"always succeeds."
msgstr ""
"Повертає ``1``, якщо об’єкт зіставлення має ключ *key*, і ``0`` інакше. Це "
"еквівалентно виразу Python ``key in o``. Ця функція завжди успішна."

#: ../../c-api/mapping.rst:105
msgid ""
"Exceptions which occur when this calls :meth:`~object.__getitem__` method "
"are silently ignored. For proper error handling, use :c:func:"
"`PyMapping_HasKeyWithError`, :c:func:`PyMapping_GetOptionalItem` or :c:func:"
"`PyObject_GetItem()` instead."
msgstr ""
"Исключения, возникающие при вызове метода :meth:`~object.__getitem__`, "
"игнорируются. Для правильной обработки ошибок используйте вместо этого :c:"
"func:`PyMapping_HasKeyWithError`, :c:func:`PyMapping_GetOptionalItem` или :c:"
"func:` PyObj ect_GetItem()`."

#: ../../c-api/mapping.rst:113
msgid ""
"This is the same as :c:func:`PyMapping_HasKey`, but *key* is specified as a :"
"c:expr:`const char*` UTF-8 encoded bytes string, rather than a :c:expr:"
"`PyObject*`."
msgstr ""
"Это то же самое, что и :c:func:`PyMapping_HasKey`, но *key* указывается как :"
"c:expr:`const char*` строка байтов в кодировке UTF-8, а не как :c:expr:` "
"PyObject . *`."

#: ../../c-api/mapping.rst:119
msgid ""
"Exceptions that occur when this calls :meth:`~object.__getitem__` method or "
"while creating the temporary :class:`str` object are silently ignored. For "
"proper error handling, use :c:func:`PyMapping_HasKeyStringWithError`, :c:"
"func:`PyMapping_GetOptionalItemString` or :c:func:`PyMapping_GetItemString` "
"instead."
msgstr ""
"Исключения, возникающие при вызове метода :meth:`~object.__getitem__` или "
"при создании временного объекта :class:`str`, молча игнорируются. Для "
"правильной обработки ошибок используйте вместо этого :c:func:"
"`PyMapping_HasKeyStringWithError`, :c:func:`PyMapping_GetOptionalItemString` "
"или :c:func:`PyMapping_GetItemString`."

#: ../../c-api/mapping.rst:129
msgid ""
"On success, return a list of the keys in object *o*.  On failure, return "
"``NULL``."
msgstr ""
"У разі успіху повертає список ключів в об’єкті *o*. У разі помилки поверніть "
"``NULL``."

#: ../../c-api/mapping.rst:132 ../../c-api/mapping.rst:141
#: ../../c-api/mapping.rst:150
msgid "Previously, the function returned a list or a tuple."
msgstr "Раніше функція повертала список або кортеж."

#: ../../c-api/mapping.rst:138
msgid ""
"On success, return a list of the values in object *o*.  On failure, return "
"``NULL``."
msgstr ""
"У разі успіху повертає список значень в об’єкті *o*. У разі помилки "
"поверніть ``NULL``."

#: ../../c-api/mapping.rst:147
msgid ""
"On success, return a list of the items in object *o*, where each item is a "
"tuple containing a key-value pair.  On failure, return ``NULL``."
msgstr ""
"У разі успіху повертає список елементів в об’єкті *o*, де кожен елемент є "
"кортежем, що містить пару ключ-значення. У разі помилки поверніть ``NULL``."

#: ../../c-api/mapping.rst:23
msgid "built-in function"
msgstr "内置函数"

#: ../../c-api/mapping.rst:23
msgid "len"
msgstr "len"
