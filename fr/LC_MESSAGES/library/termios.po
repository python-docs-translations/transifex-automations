# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# python-doc bot, 2025
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.13\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-23 14:56+0000\n"
"PO-Revision-Date: 2025-09-15 01:04+0000\n"
"Last-Translator: python-doc bot, 2025\n"
"Language-Team: French (https://app.transifex.com/python-doc/teams/5390/fr/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: fr\n"
"Plural-Forms: nplurals=3; plural=(n == 0 || n == 1) ? 0 : n != 0 && n % "
"1000000 == 0 ? 1 : 2;\n"

#: ../../library/termios.rst:2
msgid ":mod:`!termios` --- POSIX style tty control"
msgstr ""

#: ../../library/termios.rst:14
msgid ""
"This module provides an interface to the POSIX calls for tty I/O control. "
"For a complete description of these calls, see :manpage:`termios(3)` Unix "
"manual page.  It is only available for those Unix versions that support "
"POSIX *termios* style tty I/O control configured during installation."
msgstr ""
"Ce module fournit une interface aux appels POSIX pour le contrôle des E/S "
"TTY. Pour une description complète de ces appels, voir la page du manuel "
"UNIX :manpage:`termios(3)`. C’est disponible uniquement pour les versions "
"Unix qui supportent le style POSIX *termios* et les contrôles d’entrées/"
"sorties TTY configurés à l’installation."

#: ../../library/termios.rst:19
msgid "Availability"
msgstr ""

#: ../../library/termios.rst:21
msgid ""
"All functions in this module take a file descriptor *fd* as their first "
"argument.  This can be an integer file descriptor, such as returned by "
"``sys.stdin.fileno()``, or a :term:`file object`, such as ``sys.stdin`` "
"itself."
msgstr ""
"Toutes les fonctions de ce module prennent un descripteur de fichier *fd* "
"comme premier argument. Ça peut être un descripteur de fichiers entier, tel "
"que le retourne ``sys.stdin.fileno()``, ou un :term:`file object`, tel que "
"``sys.stdin``."

#: ../../library/termios.rst:25
msgid ""
"This module also defines all the constants needed to work with the functions "
"provided here; these have the same name as their counterparts in C.  Please "
"refer to your system documentation for more information on using these "
"terminal control interfaces."
msgstr ""
"Ce module définit aussi toutes les constantes nécessaires pour travailler "
"avec les fonctions fournies ici; elles ont les mêmes noms que leurs "
"équivalents en C. Pour plus d’informations sur l’utilisation de ces "
"terminaux, veuillez vous référer à votre documentation système."

#: ../../library/termios.rst:30
msgid "The module defines the following functions:"
msgstr "Le module définit les fonctions suivantes :"

#: ../../library/termios.rst:35
msgid ""
"Return a list containing the tty attributes for file descriptor *fd*, as "
"follows: ``[iflag, oflag, cflag, lflag, ispeed, ospeed, cc]`` where *cc* is "
"a list of the tty special characters (each a string of length 1, except the "
"items with indices :const:`VMIN` and :const:`VTIME`, which are integers when "
"these fields are defined).  The interpretation of the flags and the speeds "
"as well as the indexing in the *cc* array must be done using the symbolic "
"constants defined in the :mod:`termios` module."
msgstr ""
"Retourne une liste contenant les attributs TTY pour le descripteur de "
"fichier *fd*, tel que: ``[iflag, oflag, cflag, lflag, ispeed, ospeed, cc]`` "
"où *cc* est une liste de caractères spéciaux TTY (chacun est une chaine de "
"caractère de longueur 1, à l’exception des éléments ayant les "
"indices :const:`VMIN` et :const:`VTIME`, ceux-ci sont alors des entiers "
"quand ces champs sont définis). L’interprétation des options (*flags* en "
"anglais) et des vitesses ainsi que l’indexation dans le tableau *cc* doit "
"être fait en utilisant les constantes symboliques définies dans le "
"module :mod:`termios`."

#: ../../library/termios.rst:46
msgid ""
"Set the tty attributes for file descriptor *fd* from the *attributes*, which "
"is a list like the one returned by :func:`tcgetattr`.  The *when* argument "
"determines when the attributes are changed:"
msgstr ""

#: ../../library/termios.rst:52
msgid "Change attributes immediately."
msgstr ""

#: ../../library/termios.rst:56
msgid "Change attributes after transmitting all queued output."
msgstr ""

#: ../../library/termios.rst:60
msgid ""
"Change attributes after transmitting all queued output and discarding all "
"queued input."
msgstr ""

#: ../../library/termios.rst:66
msgid ""
"Send a break on file descriptor *fd*.  A zero *duration* sends a break for "
"0.25--0.5 seconds; a nonzero *duration* has a system dependent meaning."
msgstr ""
"Envoie une pause sur le descripteur de fichier *fd*. Une *duration* à zéro "
"envoie une pause de 0,25 à 0,5 seconde ; une *duration* différente de zéro "
"possède une signification spécifique sur chaque système."

#: ../../library/termios.rst:72
msgid ""
"Wait until all output written to file descriptor *fd* has been transmitted."
msgstr ""
"Attends que toutes les sorties écrites dans le descripteur de fichier *fd* "
"soient transmises."

#: ../../library/termios.rst:77
msgid ""
"Discard queued data on file descriptor *fd*.  The *queue* selector specifies "
"which queue: :const:`TCIFLUSH` for the input queue, :const:`TCOFLUSH` for "
"the output queue, or :const:`TCIOFLUSH` for both queues."
msgstr ""
"Vide la queue de données du descripteur de fichier *fd*. Le sélecteur "
"*queue* précise la queue: :const:`TCIFLUSH` pour la queue des "
"entrées, :const:`TCOFLUSH` pour la queue des sorties, ou :const:`TCIOFLUSH` "
"pour les deux queues."

#: ../../library/termios.rst:84
msgid ""
"Suspend or resume input or output on file descriptor *fd*.  The *action* "
"argument can be :const:`TCOOFF` to suspend output, :const:`TCOON` to restart "
"output, :const:`TCIOFF` to suspend input, or :const:`TCION` to restart input."
msgstr ""
"Suspends ou reprends l’entrée ou la sortie du descripteur de fichier *fd*. "
"L’argument *action* peut être :const:`TCOOFF` pour suspendre la "
"sortie, :const:`TCOON` pour relancer la sortie, :const:`TCIOFF` pour "
"suspendre l’entrée, ou :const:`TCION` pour relancer l’entrée."

#: ../../library/termios.rst:91
msgid ""
"Return a tuple ``(ws_row, ws_col)`` containing the tty window size for file "
"descriptor *fd*. Requires :const:`termios.TIOCGWINSZ` "
"or :const:`termios.TIOCGSIZE`."
msgstr ""

#: ../../library/termios.rst:100
msgid ""
"Set the tty window size for file descriptor *fd* from *winsize*, which is a "
"two-item tuple ``(ws_row, ws_col)`` like the one returned "
"by :func:`tcgetwinsize`. Requires at least one of the pairs "
"(:const:`termios.TIOCGWINSZ`, :const:`termios.TIOCSWINSZ`); "
"(:const:`termios.TIOCGSIZE`, :const:`termios.TIOCSSIZE`) to be defined."
msgstr ""

#: ../../library/termios.rst:111
msgid "Module :mod:`tty`"
msgstr "Le module :mod:`tty`"

#: ../../library/termios.rst:112
msgid "Convenience functions for common terminal control operations."
msgstr ""
"Fonctions utiles pour les opérations de contrôle communes dans le terminal."

#: ../../library/termios.rst:118
msgid "Example"
msgstr "Exemple"

#: ../../library/termios.rst:120
msgid ""
"Here's a function that prompts for a password with echoing turned off.  Note "
"the technique using a separate :func:`tcgetattr` call and "
"a :keyword:`try` ... :keyword:`finally` statement to ensure that the old tty "
"attributes are restored exactly no matter what happens::"
msgstr ""
"Voici une fonction qui demande à l’utilisateur d’entrer un mot de passe sans "
"l’afficher. Remarquez la technique qui consiste à séparer un appel "
"à :func:`tcgetattr` et une instruction :keyword:`try`… :keyword:`finally` "
"pour s’assurer que les anciens attributs tty soient restaurés tels quels "
"quoi qu’il arrive::"

#: ../../library/termios.rst:125
msgid ""
"def getpass(prompt=\"Password: \"):\n"
"    import termios, sys\n"
"    fd = sys.stdin.fileno()\n"
"    old = termios.tcgetattr(fd)\n"
"    new = termios.tcgetattr(fd)\n"
"    new[3] = new[3] & ~termios.ECHO          # lflags\n"
"    try:\n"
"        termios.tcsetattr(fd, termios.TCSADRAIN, new)\n"
"        passwd = input(prompt)\n"
"    finally:\n"
"        termios.tcsetattr(fd, termios.TCSADRAIN, old)\n"
"    return passwd"
msgstr ""

#: ../../library/termios.rst:8
msgid "POSIX"
msgstr ""

#: ../../library/termios.rst:8
msgid "I/O control"
msgstr ""

#: ../../library/termios.rst:8
msgid "tty"
msgstr ""
