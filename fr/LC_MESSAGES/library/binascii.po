# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# python-doc bot, 2025
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.12\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-23 15:37+0000\n"
"PO-Revision-Date: 2025-07-18 19:57+0000\n"
"Last-Translator: python-doc bot, 2025\n"
"Language-Team: French (https://app.transifex.com/python-doc/teams/5390/fr/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: fr\n"
"Plural-Forms: nplurals=3; plural=(n == 0 || n == 1) ? 0 : n != 0 && n % 1000000 == 0 ? 1 : 2;\n"

#: ../../library/binascii.rst:2
msgid ":mod:`!binascii` --- Convert between binary and ASCII"
msgstr ""

#: ../../library/binascii.rst:14
msgid ""
"The :mod:`binascii` module contains a number of methods to convert between "
"binary and various ASCII-encoded binary representations. Normally, you will "
"not use these functions directly but use wrapper modules like :mod:`uu` or "
":mod:`base64` instead. The :mod:`binascii` module contains low-level "
"functions written in C for greater speed that are used by the higher-level "
"modules."
msgstr ""

#: ../../library/binascii.rst:23
msgid ""
"``a2b_*`` functions accept Unicode strings containing only ASCII characters."
" Other functions only accept :term:`bytes-like objects <bytes-like object>` "
"(such as :class:`bytes`, :class:`bytearray` and other objects that support "
"the buffer protocol)."
msgstr ""
"La fonction ``a2b_*`` accepte des chaînes de caractères contenant seulement "
"des caractères ASCII. D’autres fonctions acceptent seulement des objets "
":term:`bytes et similaire <bytes-like object>` (tel que :class:`bytes`, "
":class:`bytearray` et autres objets qui supportent le protocole tampon)."

#: ../../library/binascii.rst:28
msgid ""
"ASCII-only unicode strings are now accepted by the ``a2b_*`` functions."
msgstr ""
"Les chaines de caractères *unicode* seulement composées de caractères ASCII "
"sont désormais acceptées par les fonctions ``a2b_*``."

#: ../../library/binascii.rst:32
msgid "The :mod:`binascii` module defines the following functions:"
msgstr "Le module :mod:`binascii` définit les fonctions suivantes :"

#: ../../library/binascii.rst:37
msgid ""
"Convert a single line of uuencoded data back to binary and return the binary"
" data. Lines normally contain 45 (binary) bytes, except for the last line. "
"Line data may be followed by whitespace."
msgstr ""
"Convertit une seule ligne de donnée *uuencoded* en binaire et renvoie la "
"donnée binaire. Les lignes contiennent normalement 45 octets (binaire), sauf"
" pour la dernière ligne. Il se peut que la ligne de donnée soit suivie d’un "
"espace blanc."

#: ../../library/binascii.rst:44
msgid ""
"Convert binary data to a line of ASCII characters, the return value is the "
"converted line, including a newline char. The length of *data* should be at "
"most 45. If *backtick* is true, zeros are represented by ``'`'`` instead of "
"spaces."
msgstr ""
"Convertit les données binaires en une ligne de caractères ASCII, la valeur "
"renvoyée est la ligne convertie incluant un caractère de nouvelle ligne. La "
"longueur de *data* doit être au maximum de 45. Si *backtick* est vraie, les "
"zéros sont représentés par ``'`'`` plutôt que par des espaces."

#: ../../library/binascii.rst:48
msgid "Added the *backtick* parameter."
msgstr "Ajout du paramètre *backtick*."

#: ../../library/binascii.rst:54
msgid ""
"Convert a block of base64 data back to binary and return the binary data. "
"More than one line may be passed at a time."
msgstr ""
"Convertit un bloc de donnée en *base64* en binaire et renvoie la donnée "
"binaire. Plus d’une ligne peut être passé à la fois."

#: ../../library/binascii.rst:57
msgid ""
"If *strict_mode* is true, only valid base64 data will be converted. Invalid "
"base64 data will raise :exc:`binascii.Error`."
msgstr ""

#: ../../library/binascii.rst:60
msgid "Valid base64:"
msgstr ""

#: ../../library/binascii.rst:62
msgid "Conforms to :rfc:`3548`."
msgstr ""

#: ../../library/binascii.rst:63
msgid "Contains only characters from the base64 alphabet."
msgstr ""

#: ../../library/binascii.rst:64
msgid ""
"Contains no excess data after padding (including excess padding, newlines, "
"etc.)."
msgstr ""

#: ../../library/binascii.rst:65
msgid "Does not start with a padding."
msgstr ""

#: ../../library/binascii.rst:67
msgid "Added the *strict_mode* parameter."
msgstr ""

#: ../../library/binascii.rst:73
msgid ""
"Convert binary data to a line of ASCII characters in base64 coding. The "
"return value is the converted line, including a newline char if *newline* is"
" true.  The output of this function conforms to :rfc:`3548`."
msgstr ""
"Convertit les données binaires en une ligne de caractères ASCII en codage "
"base 64. La valeur de renvoyée et la ligne convertie, incluant un caractère "
"de nouvelle ligne si *newline* est vraie. La sortie de cette fonction se "
"conforme à :rfc:`3548`."

#: ../../library/binascii.rst:77
msgid "Added the *newline* parameter."
msgstr "Ajout du paramètre *newline*."

#: ../../library/binascii.rst:83
msgid ""
"Convert a block of quoted-printable data back to binary and return the "
"binary data. More than one line may be passed at a time. If the optional "
"argument *header* is present and true, underscores will be decoded as "
"spaces."
msgstr ""
"Convertit un bloc de données *quoted-printable* en binaire et renvoie les "
"données binaires. Plus d’une ligne peut être passée à la fois. Si l’argument"
" optionnel *header* est présent et vrai, les traits soulignés seront décodés"
" en espaces."

#: ../../library/binascii.rst:90
msgid ""
"Convert binary data to a line(s) of ASCII characters in quoted-printable "
"encoding.  The return value is the converted line(s). If the optional "
"argument *quotetabs* is present and true, all tabs and spaces will be "
"encoded.   If the optional argument *istext* is present and true, newlines "
"are not encoded but trailing whitespace will be encoded. If the optional "
"argument *header* is present and true, spaces will be encoded as underscores"
" per :rfc:`1522`. If the optional argument *header* is present and false, "
"newline characters will be encoded as well; otherwise linefeed conversion "
"might corrupt the binary data stream."
msgstr ""
"Convertit les données binaires en ligne(s) de caractères ASCII en codage "
"imprimable entre guillemets. La valeur de retour est la\\les lignes(s) "
"convertie(s). Si l’argument optionnel *quotetabs* est présent et vrai, "
"toutes les tabulations et espaces seront encodés. Si l’argument optionnel "
"*istext* est présent et faux, les nouvelles lignes ne sont pas encodées mais"
" les espaces de fin de ligne le seront. Si l’argument optionnel *header* est"
" présent et vrai, les espaces vont être encodés comme de traits soulignés "
"selon :rfc:`1522`. Si l’argument optionnel *header* est présent et faux, les"
" caractères de nouvelle ligne seront également encodés ; sinon la conversion"
" de saut de ligne pourrait corrompre le flux de données binaire."

#: ../../library/binascii.rst:103
msgid ""
"Compute a 16-bit CRC value of *data*, starting with *value* as the initial "
"CRC, and return the result.  This uses the CRC-CCITT polynomial *x*:sup:`16`"
" + *x*:sup:`12` + *x*:sup:`5` + 1, often represented as 0x1021.  This CRC is"
" used in the binhex4 format."
msgstr ""
"Calcule une valeur en CRC 16-bit de *data*, commençant par *value* comme CRC"
" initial et renvoie le résultat. Ceci utilise le CRC-CCITT polynomial "
"*x*:sup:`16` + *x*:sup:`12` + *x*:sup:`5` + 1, souvent représenté comme "
"*0x1021*. Ce CRC est utilisé dans le format *binhex4*."

#: ../../library/binascii.rst:111
msgid ""
"Compute CRC-32, the unsigned 32-bit checksum of *data*, starting with an "
"initial CRC of *value*.  The default initial CRC is zero.  The algorithm is "
"consistent with the ZIP file checksum.  Since the algorithm is designed for "
"use as a checksum algorithm, it is not suitable for use as a general hash "
"algorithm.  Use as follows::"
msgstr ""

#: ../../library/binascii.rst:117
msgid ""
"print(binascii.crc32(b\"hello world\"))\n"
"# Or, in two pieces:\n"
"crc = binascii.crc32(b\"hello\")\n"
"crc = binascii.crc32(b\" world\", crc)\n"
"print('crc32 = {:#010x}'.format(crc))"
msgstr ""

#: ../../library/binascii.rst:123
msgid "The result is always unsigned."
msgstr ""

#: ../../library/binascii.rst:129
msgid ""
"Return the hexadecimal representation of the binary *data*.  Every byte of "
"*data* is converted into the corresponding 2-digit hex representation.  The "
"returned bytes object is therefore twice as long as the length of *data*."
msgstr ""
"Renvoie la représentation hexadécimale du binaire *data*. Chaque octet de "
"*data* est converti en la représentation 2 chiffres correspondante. L’objet "
"octets renvoyé est donc deux fois plus long que la longueur de *data*."

#: ../../library/binascii.rst:133
msgid ""
"Similar functionality (but returning a text string) is also conveniently "
"accessible using the :meth:`bytes.hex` method."
msgstr ""
"Fonctionnalité similaire est également commodément accessible en utilisant "
"la méthode :meth:`bytes.hex`."

#: ../../library/binascii.rst:136
msgid ""
"If *sep* is specified, it must be a single character str or bytes object. It"
" will be inserted in the output after every *bytes_per_sep* input bytes. "
"Separator placement is counted from the right end of the output by default, "
"if you wish to count from the left, supply a negative *bytes_per_sep* value."
msgstr ""

#: ../../library/binascii.rst:151
msgid "The *sep* and *bytes_per_sep* parameters were added."
msgstr ""

#: ../../library/binascii.rst:157
msgid ""
"Return the binary data represented by the hexadecimal string *hexstr*.  This"
" function is the inverse of :func:`b2a_hex`. *hexstr* must contain an even "
"number of hexadecimal digits (which can be upper or lower case), otherwise "
"an :exc:`Error` exception is raised."
msgstr ""
"Renvoie la donnée binaire représentée par la chaîne de caractères "
"hexadécimale *hexstr*. Cette fonction est l’inverse de :func:`b2a_hex`. "
"*hexstr* doit contenir un nombre pair de chiffres hexadécimaux (qui peuvent "
"être en majuscule ou minuscule), sinon une exception :exc:`Error` est levée."

#: ../../library/binascii.rst:162
msgid ""
"Similar functionality (accepting only text string arguments, but more "
"liberal towards whitespace) is also accessible using the "
":meth:`bytes.fromhex` class method."
msgstr ""
"Une fonctionnalité similaire (n’acceptant que les arguments de chaîne de "
"texte, mais plus libérale vis-à-vis des espaces blancs) est également "
"accessible en utilisant la méthode de classe :meth:`bytes.fromhex`."

#: ../../library/binascii.rst:168
msgid "Exception raised on errors. These are usually programming errors."
msgstr ""
"Exception levée en cas d'erreurs. Ce sont typiquement des erreurs de "
"programmation."

#: ../../library/binascii.rst:173
msgid ""
"Exception raised on incomplete data. These are usually not programming "
"errors, but may be handled by reading a little more data and trying again."
msgstr ""
"Exception levée par des données incomplète. Il ne s’agit généralement pas "
"d’erreurs de programmation, mais elles peuvent être traitées en lisant un "
"peu plus de données et en réessayant."

#: ../../library/binascii.rst:179
msgid "Module :mod:`base64`"
msgstr "Module :mod:`base64`"

#: ../../library/binascii.rst:180
msgid ""
"Support for RFC compliant base64-style encoding in base 16, 32, 64, and 85."
msgstr ""
"Support de l’encodage *base64-style* conforme RFC en base 16, 32, 64 et 85."

#: ../../library/binascii.rst:183
msgid "Module :mod:`uu`"
msgstr "Module :mod:`uu`"

#: ../../library/binascii.rst:184
msgid "Support for UU encoding used on Unix."
msgstr "Gestion de l'encodage UU utilisé sur Unix."

#: ../../library/binascii.rst:186
msgid "Module :mod:`quopri`"
msgstr "Module :mod:`quopri`"

#: ../../library/binascii.rst:187
msgid "Support for quoted-printable encoding used in MIME email messages."
msgstr ""
"Support de l’encodage *quote-printable* utilisé par les messages *email* "
"MIME."

#: ../../library/binascii.rst:8
msgid "module"
msgstr "module"

#: ../../library/binascii.rst:8
msgid "uu"
msgstr "uu"

#: ../../library/binascii.rst:8
msgid "base64"
msgstr "base64"
