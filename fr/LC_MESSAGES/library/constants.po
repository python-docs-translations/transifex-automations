# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001 Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# python-doc bot, 2025
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.14\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-25 14:15+0000\n"
"PO-Revision-Date: 2025-09-16 00:01+0000\n"
"Last-Translator: python-doc bot, 2025\n"
"Language-Team: French (https://app.transifex.com/python-doc/teams/5390/fr/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: fr\n"
"Plural-Forms: nplurals=3; plural=(n == 0 || n == 1) ? 0 : n != 0 && n % "
"1000000 == 0 ? 1 : 2;\n"

#: ../../library/constants.rst:4
msgid "Built-in Constants"
msgstr "Constantes natives"

#: ../../library/constants.rst:6
msgid "A small number of constants live in the built-in namespace.  They are:"
msgstr ""
"Un petit nombre de constantes existent dans le *namespace* natif. Elles "
"sont :"

#: ../../library/constants.rst:10
msgid ""
"The false value of the :class:`bool` type. Assignments to ``False`` are "
"illegal and raise a :exc:`SyntaxError`."
msgstr ""
"La valeur fausse du type :class:`bool`. Les assignations à ``False`` ne sont "
"pas autorisées et lèvent une :exc:`SyntaxError`."

#: ../../library/constants.rst:16
msgid ""
"The true value of the :class:`bool` type. Assignments to ``True`` are "
"illegal and raise a :exc:`SyntaxError`."
msgstr ""
"La valeur vraie du type :class:`bool`. Les assignations à ``True`` ne sont "
"pas autorisées et lèvent une :exc:`SyntaxError`."

#: ../../library/constants.rst:22
msgid ""
"An object frequently used to represent the absence of a value, as when "
"default arguments are not passed to a function. Assignments to ``None`` are "
"illegal and raise a :exc:`SyntaxError`. ``None`` is the sole instance of "
"the :data:`~types.NoneType` type."
msgstr ""

#: ../../library/constants.rst:30
msgid ""
"A special value which should be returned by the binary special methods (e."
"g. :meth:`~object.__eq__`, :meth:`~object.__lt__`, :meth:`~object.__add__`, :"
"meth:`~object.__rsub__`, etc.) to indicate that the operation is not "
"implemented with respect to the other type; may be returned by the in-place "
"binary special methods (e.g. :meth:`~object.__imul__`, :meth:`~object."
"__iand__`, etc.) for the same purpose. It should not be evaluated in a "
"boolean context. :data:`!NotImplemented` is the sole instance of the :data:"
"`types.NotImplementedType` type."
msgstr ""

#: ../../library/constants.rst:40
msgid ""
"When a binary (or in-place) method returns :data:`!NotImplemented` the "
"interpreter will try the reflected operation on the other type (or some "
"other fallback, depending on the operator).  If all attempts return :data:`!"
"NotImplemented`, the interpreter will raise an appropriate exception. "
"Incorrectly returning :data:`!NotImplemented` will result in a misleading "
"error message or the :data:`!NotImplemented` value being returned to Python "
"code."
msgstr ""

#: ../../library/constants.rst:47
msgid "See :ref:`implementing-the-arithmetic-operations` for examples."
msgstr "Voir :ref:`implementing-the-arithmetic-operations` pour des exemples."

#: ../../library/constants.rst:51
msgid ""
":data:`!NotImplemented` and :exc:`!NotImplementedError` are not "
"interchangeable. This constant should only be used as described above; see :"
"exc:`NotImplementedError` for details on correct usage of the exception."
msgstr ""

#: ../../library/constants.rst:56
msgid "Evaluating :data:`!NotImplemented` in a boolean context was deprecated."
msgstr ""

#: ../../library/constants.rst:59
msgid ""
"Evaluating :data:`!NotImplemented` in a boolean context now raises a :exc:"
"`TypeError`. It previously evaluated to :const:`True` and emitted a :exc:"
"`DeprecationWarning` since Python 3.9."
msgstr ""

#: ../../library/constants.rst:68
msgid ""
"The same as the ellipsis literal \"``...``\", an object frequently used to "
"indicate that something is omitted. Assignment to ``Ellipsis`` is possible, "
"but assignment to  ``...`` raises a :exc:`SyntaxError`. ``Ellipsis`` is the "
"sole instance of the :data:`types.EllipsisType` type."
msgstr ""

#: ../../library/constants.rst:76
msgid ""
"This constant is true if Python was not started with an :option:`-O` option. "
"See also the :keyword:`assert` statement."
msgstr ""
"Cette constante est vraie si Python n'a pas été démarré avec une option :"
"option:`-O`. Voir aussi l'expression :keyword:`assert`."

#: ../../library/constants.rst:82
msgid ""
"The names :data:`None`, :data:`False`, :data:`True` and :data:`__debug__` "
"cannot be reassigned (assignments to them, even as an attribute name, raise :"
"exc:`SyntaxError`), so they can be considered \"true\" constants."
msgstr ""
"Les noms :data:`None`, :data:`False`, :data:`True` et :data:`__debug__` ne "
"peuvent pas être réassignés (des assignations à ces noms, ou aux noms de "
"leurs attributs, lèvent une :exc:`SyntaxError`), donc ils peuvent être "
"considérés comme des \"vraies\" constantes."

#: ../../library/constants.rst:90
msgid "Constants added by the :mod:`site` module"
msgstr "Constantes ajoutées par le module :mod:`site`"

#: ../../library/constants.rst:92
msgid ""
"The :mod:`site` module (which is imported automatically during startup, "
"except if the :option:`-S` command-line option is given) adds several "
"constants to the built-in namespace.  They are useful for the interactive "
"interpreter shell and should not be used in programs."
msgstr ""
"Le module :mod:`site` (qui est importé automatiquement au démarrage, sauf si "
"l'option de ligne de commande :option:`-S` est donnée ajoute un certain "
"nombre de constantes au *namespace* natif. Elles sont utiles pour "
"l'interpréteur interactif et ne devraient pas être utilisées par des "
"programmes."

#: ../../library/constants.rst:100
msgid ""
"Objects that when printed, print a message like \"Use quit() or Ctrl-D (i.e. "
"EOF) to exit\", and when accessed directly in the interactive interpreter or "
"called as functions, raise :exc:`SystemExit` with the specified exit code."
msgstr ""

#: ../../library/constants.rst:108
msgid ""
"Object that when printed, prints the message \"Type help() for interactive "
"help, or help(object) for help about object.\", and when accessed directly "
"in the interactive interpreter, invokes the built-in help system (see :func:"
"`help`)."
msgstr ""

#: ../../library/constants.rst:116
msgid ""
"Objects that when printed or called, print the text of copyright or credits, "
"respectively."
msgstr ""
"Objets qui, lorsqu'ils sont affichés ou appelés, affichent le copyright ou "
"les crédits, respectivement."

#: ../../library/constants.rst:121
msgid ""
"Object that when printed, prints the message \"Type license() to see the "
"full license text\", and when called, displays the full license text in a "
"pager-like fashion (one screen at a time)."
msgstr ""
"Objet qui, lorsqu'il est affiché, affiche un message comme *\"Type license() "
"to see the full license text\"*, et lorsqu'il est appelé, affiche le texte "
"complet de la licence dans un style paginé (un écran à la fois)."

#: ../../library/constants.rst:65
msgid "..."
msgstr ""

#: ../../library/constants.rst:65
msgid "ellipsis literal"
msgstr ""
