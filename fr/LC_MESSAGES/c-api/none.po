# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# python-doc bot, 2025
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.10\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-25 17:21+0000\n"
"PO-Revision-Date: 2025-09-22 15:57+0000\n"
"Last-Translator: python-doc bot, 2025\n"
"Language-Team: French (https://app.transifex.com/python-doc/teams/5390/fr/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: fr\n"
"Plural-Forms: nplurals=3; plural=(n == 0 || n == 1) ? 0 : n != 0 && n % "
"1000000 == 0 ? 1 : 2;\n"

#: ../../c-api/none.rst:6
msgid "The ``None`` Object"
msgstr "L'objet ``None``"

#: ../../c-api/none.rst:10
msgid ""
"Note that the :c:type:`PyTypeObject` for ``None`` is not directly exposed in "
"the Python/C API.  Since ``None`` is a singleton, testing for object "
"identity (using ``==`` in C) is sufficient. There is no :c:func:"
"`PyNone_Check` function for the same reason."
msgstr ""
"Notez que le :c:type:`PyTypeObject` de ``None`` n'est pas directement exposé "
"via l'API Python/C.  Puisque ``None`` est un singleton, tester son identité "
"(en utilisant ``==`` en C) est suffisant. Il n'existe pas de fonction :c:"
"func:`PyNone_Check` pour la même raison."

#: ../../c-api/none.rst:18
msgid ""
"The Python ``None`` object, denoting lack of value.  This object has no "
"methods. It needs to be treated just like any other object with respect to "
"reference counts."
msgstr ""
"L'objet Python ``None``, exprimant l'absence de valeur.  Cet objet n'a "
"aucune méthode. Il doit être traité exactement comme les autres objets en "
"terme de comptage de références."

#: ../../c-api/none.rst:25
msgid ""
"Properly handle returning :c:data:`Py_None` from within a C function (that "
"is, increment the reference count of ``None`` and return it.)"
msgstr ""
"Renvoie, de la bonne manière, :c:data:`Py_None` depuis une fonction C (c'est "
"à dire en incrémentant les références à ``None`` avant de le donner)."
