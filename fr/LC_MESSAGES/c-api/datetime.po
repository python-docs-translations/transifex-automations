# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# python-doc bot, 2025
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.9\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-22 21:56+0000\n"
"PO-Revision-Date: 2025-09-22 17:54+0000\n"
"Last-Translator: python-doc bot, 2025\n"
"Language-Team: French (https://app.transifex.com/python-doc/teams/5390/fr/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: fr\n"
"Plural-Forms: nplurals=3; plural=(n == 0 || n == 1) ? 0 : n != 0 && n % "
"1000000 == 0 ? 1 : 2;\n"

#: ../../c-api/datetime.rst:6
msgid "DateTime Objects"
msgstr "Objets DateTime"

#: ../../c-api/datetime.rst:8
msgid ""
"Various date and time objects are supplied by the :mod:`datetime` module. "
"Before using any of these functions, the header file :file:`datetime.h` must "
"be included in your source (note that this is not included by :file:`Python."
"h`), and the macro :c:macro:`PyDateTime_IMPORT` must be invoked, usually as "
"part of the module initialisation function.  The macro puts a pointer to a C "
"structure into a static variable, :c:data:`PyDateTimeAPI`, that is used by "
"the following macros."
msgstr ""
"De nombreux objets *date* et *time* sont exposés par le module :mod:"
"`DateTime`. Avant d'utiliser une de ces fonctions, le fichier d'en-tête :"
"file:`datetime.h` doit être inclus dans vos sources (veuillez noter qu'il "
"n'est pas inclus par le fichier :file:`Python.h`) et la macro :c:macro:"
"`PyDateTime_IMPORT` doit-être invoquée, généralement lors de la fonction "
"d'initialisation du module. La macro crée un pointeur vers une structure C "
"et place celui-ci dans une variable statique, :c:data:`PyDateTimeAPI`, qui "
"est utilisée par les macros suivantes."

#: ../../c-api/datetime.rst:16
msgid "Macro for access to the UTC singleton:"
msgstr "Macro pour accéder au singleton UTC :"

#: ../../c-api/datetime.rst:20
msgid ""
"Returns the time zone singleton representing UTC, the same object as :attr:"
"`datetime.timezone.utc`."
msgstr ""
"Renvoie le singleton du fuseau horaire UTC, qui est le même objet que :attr:"
"`datetime.timezone.utc`."

#: ../../c-api/datetime.rst:26
msgid "Type-check macros:"
msgstr "Macros pour vérifier les types :"

#: ../../c-api/datetime.rst:30
msgid ""
"Return true if *ob* is of type :c:data:`PyDateTime_DateType` or a subtype "
"of :c:data:`PyDateTime_DateType`.  *ob* must not be ``NULL``.  This function "
"always succeeds."
msgstr ""

#: ../../c-api/datetime.rst:37
msgid ""
"Return true if *ob* is of type :c:data:`PyDateTime_DateType`. *ob* must not "
"be ``NULL``.  This function always succeeds."
msgstr ""

#: ../../c-api/datetime.rst:43
msgid ""
"Return true if *ob* is of type :c:data:`PyDateTime_DateTimeType` or a "
"subtype of :c:data:`PyDateTime_DateTimeType`.  *ob* must not be ``NULL``.  "
"This function always succeeds."
msgstr ""

#: ../../c-api/datetime.rst:50
msgid ""
"Return true if *ob* is of type :c:data:`PyDateTime_DateTimeType`. *ob* must "
"not be ``NULL``.  This function always succeeds."
msgstr ""

#: ../../c-api/datetime.rst:56
msgid ""
"Return true if *ob* is of type :c:data:`PyDateTime_TimeType` or a subtype "
"of :c:data:`PyDateTime_TimeType`.  *ob* must not be ``NULL``.  This function "
"always succeeds."
msgstr ""

#: ../../c-api/datetime.rst:63
msgid ""
"Return true if *ob* is of type :c:data:`PyDateTime_TimeType`. *ob* must not "
"be ``NULL``.  This function always succeeds."
msgstr ""

#: ../../c-api/datetime.rst:69
msgid ""
"Return true if *ob* is of type :c:data:`PyDateTime_DeltaType` or a subtype "
"of :c:data:`PyDateTime_DeltaType`.  *ob* must not be ``NULL``.  This "
"function always succeeds."
msgstr ""

#: ../../c-api/datetime.rst:76
msgid ""
"Return true if *ob* is of type :c:data:`PyDateTime_DeltaType`. *ob* must not "
"be ``NULL``.  This function always succeeds."
msgstr ""

#: ../../c-api/datetime.rst:82
msgid ""
"Return true if *ob* is of type :c:data:`PyDateTime_TZInfoType` or a subtype "
"of :c:data:`PyDateTime_TZInfoType`.  *ob* must not be ``NULL``.  This "
"function always succeeds."
msgstr ""

#: ../../c-api/datetime.rst:89
msgid ""
"Return true if *ob* is of type :c:data:`PyDateTime_TZInfoType`. *ob* must "
"not be ``NULL``.  This function always succeeds."
msgstr ""

#: ../../c-api/datetime.rst:93
msgid "Macros to create objects:"
msgstr "Macros pour créer des objets :"

#: ../../c-api/datetime.rst:97
msgid ""
"Return a :class:`datetime.date` object with the specified year, month and "
"day."
msgstr ""
"Renvoie un objet :class:`datetime.date` avec l'année, le mois et le jour "
"spécifiés."

#: ../../c-api/datetime.rst:102
msgid ""
"Return a :class:`datetime.datetime` object with the specified year, month, "
"day, hour, minute, second and microsecond."
msgstr ""
"Renvoie un objet :class:`datetime.datetime` avec l'année, le mois, le jour, "
"l'heure, la minute, la seconde et la microseconde spécifiés."

#: ../../c-api/datetime.rst:108
msgid ""
"Return a :class:`datetime.datetime` object with the specified year, month, "
"day, hour, minute, second, microsecond and fold."
msgstr ""
"Renvoie un objet :class:`datetime.datetime` avec l'année, le mois, le jour, "
"l'heure, la minute, la seconde, la microseconde et le pli (*fold* en "
"anglais) spécifiés."

#: ../../c-api/datetime.rst:116
msgid ""
"Return a :class:`datetime.time` object with the specified hour, minute, "
"second and microsecond."
msgstr ""
"Renvoie un objet :class:`datetime.time` avec l'heure, la minute, la seconde "
"et la microseconde spécifiées."

#: ../../c-api/datetime.rst:122
msgid ""
"Return a :class:`datetime.time` object with the specified hour, minute, "
"second, microsecond and fold."
msgstr ""
"Renvoie un objet :class:`datetime.time` avec l'heure, la minute, la seconde, "
"la microseconde et le pli (*fold* en anglais) spécifiés."

#: ../../c-api/datetime.rst:130
msgid ""
"Return a :class:`datetime.timedelta` object representing the given number of "
"days, seconds and microseconds.  Normalization is performed so that the "
"resulting number of microseconds and seconds lie in the ranges documented "
"for :class:`datetime.timedelta` objects."
msgstr ""
"Renvoie un objet :class:`datetime.timedelta` représentant le nombre passé en "
"paramètre de jours, de secondes et de microsecondes. Le résultat est "
"normalisé pour que le nombre de microsecondes et de secondes tombe dans la "
"plage documentée pour les objets :class:`datetime.timedelta`."

#: ../../c-api/datetime.rst:137
msgid ""
"Return a :class:`datetime.timezone` object with an unnamed fixed offset "
"represented by the *offset* argument."
msgstr ""
"Renvoie un objet :class:`datetime.timezone` avec un décalage anonyme fixe "
"représenté par l'argument *offset*."

#: ../../c-api/datetime.rst:144
msgid ""
"Return a :class:`datetime.timezone` object with a fixed offset represented "
"by the *offset* argument and with tzname *name*."
msgstr ""
"Renvoie un objet :class:`datetime.timezone` avec un décalage fixe représenté "
"par l'argument *offset* et avec le nom de fuseau horaire *name*."

#: ../../c-api/datetime.rst:150
msgid ""
"Macros to extract fields from date objects.  The argument must be an "
"instance of :c:data:`PyDateTime_Date`, including subclasses (such as :c:data:"
"`PyDateTime_DateTime`).  The argument must not be ``NULL``, and the type is "
"not checked:"
msgstr ""

#: ../../c-api/datetime.rst:157
msgid "Return the year, as a positive int."
msgstr "Renvoie l'année, sous forme d'entier positif."

#: ../../c-api/datetime.rst:162
msgid "Return the month, as an int from 1 through 12."
msgstr "Renvoie le mois, sous forme d'entier allant de 1 à 12."

#: ../../c-api/datetime.rst:167
msgid "Return the day, as an int from 1 through 31."
msgstr "Renvoie le jour, sous forme d'entier allant de 1 à 31."

#: ../../c-api/datetime.rst:170
msgid ""
"Macros to extract fields from datetime objects.  The argument must be an "
"instance of :c:data:`PyDateTime_DateTime`, including subclasses. The "
"argument must not be ``NULL``, and the type is not checked:"
msgstr ""

#: ../../c-api/datetime.rst:176 ../../c-api/datetime.rst:207
msgid "Return the hour, as an int from 0 through 23."
msgstr "Renvoie l'heure, sous forme d'entier allant de 0 à 23."

#: ../../c-api/datetime.rst:181 ../../c-api/datetime.rst:212
msgid "Return the minute, as an int from 0 through 59."
msgstr "Renvoie la minute, sous forme d'entier allant de 0 à 59."

#: ../../c-api/datetime.rst:186 ../../c-api/datetime.rst:217
msgid "Return the second, as an int from 0 through 59."
msgstr "Renvoie la seconde, sous forme d'entier allant de 0 à 59."

#: ../../c-api/datetime.rst:191 ../../c-api/datetime.rst:222
msgid "Return the microsecond, as an int from 0 through 999999."
msgstr "Renvoie la microseconde, sous forme d'entier allant de 0 à 999999."

#: ../../c-api/datetime.rst:196 ../../c-api/datetime.rst:227
msgid "Return the fold, as an int from 0 through 1."
msgstr ""

#: ../../c-api/datetime.rst:201
msgid ""
"Macros to extract fields from time objects.  The argument must be an "
"instance of :c:data:`PyDateTime_Time`, including subclasses. The argument "
"must not be ``NULL``, and the type is not checked:"
msgstr ""

#: ../../c-api/datetime.rst:232
msgid ""
"Macros to extract fields from time delta objects.  The argument must be an "
"instance of :c:data:`PyDateTime_Delta`, including subclasses. The argument "
"must not be ``NULL``, and the type is not checked:"
msgstr ""

#: ../../c-api/datetime.rst:238
msgid "Return the number of days, as an int from -999999999 to 999999999."
msgstr ""
"Renvoie le nombre de jours, sous forme d'entier allant de -999999999 à "
"999999999."

#: ../../c-api/datetime.rst:245
msgid "Return the number of seconds, as an int from 0 through 86399."
msgstr "Renvoie le nombre de secondes sous forme d'entier allant de 0 à 86399."

#: ../../c-api/datetime.rst:252
msgid "Return the number of microseconds, as an int from 0 through 999999."
msgstr ""
"Renvoie le nombre de microsecondes, sous forme d'entier allant de 0 à 999999."

#: ../../c-api/datetime.rst:257
msgid "Macros for the convenience of modules implementing the DB API:"
msgstr "Macros de confort pour les modules implémentant l'API DB :"

#: ../../c-api/datetime.rst:261
msgid ""
"Create and return a new :class:`datetime.datetime` object given an argument "
"tuple suitable for passing to :meth:`datetime.datetime.fromtimestamp()`."
msgstr ""
"Crée et renvoie un nouvel objet :class:`datetime.datetime` à partir d'un n-"
"uplet qui peut être passé à :meth:`datetime.datetime.fromtimestamp()`."

#: ../../c-api/datetime.rst:267
msgid ""
"Create and return a new :class:`datetime.date` object given an argument "
"tuple suitable for passing to :meth:`datetime.date.fromtimestamp()`."
msgstr ""
"Crée et renvoie un nouvel objet :class:`datetime.date` à partir d'un n-uplet "
"qui peut être passé à :meth:`datetime.date.fromtimestamp()`."
