# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# Rafael Fontenelle <rffontenelle@gmail.com>, 2022
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.10\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-01-10 16:06+0000\n"
"PO-Revision-Date: 2022-11-05 17:23+0000\n"
"Last-Translator: Rafael Fontenelle <rffontenelle@gmail.com>, 2022\n"
"Language-Team: Chinese (Taiwan) (https://app.transifex.com/python-doc/"
"teams/5390/zh_TW/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: zh_TW\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../tutorial/index.rst:5
msgid "The Python Tutorial"
msgstr "Python 教學"

#: ../../tutorial/index.rst:7
msgid ""
"Python is an easy to learn, powerful programming language. It has efficient "
"high-level data structures and a simple but effective approach to object-"
"oriented programming. Python's elegant syntax and dynamic typing, together "
"with its interpreted nature, make it an ideal language for scripting and "
"rapid application development in many areas on most platforms."
msgstr ""
"Python 是一種易學、功能強大的程式語言。它有高效的高階資料結構和簡單但有用的物"
"件導向程式設計。Python 優雅的語法和動態型別，結合其直譯特性，使它成為多數領"
"域、多數平臺中，撰寫腳本和快速開發應用的理想語言。"

#: ../../tutorial/index.rst:13
msgid ""
"The Python interpreter and the extensive standard library are freely "
"available in source or binary form for all major platforms from the Python "
"web site, https://www.python.org/, and may be freely distributed. The same "
"site also contains distributions of and pointers to many free third party "
"Python modules, programs and tools, and additional documentation."
msgstr ""

#: ../../tutorial/index.rst:19
msgid ""
"The Python interpreter is easily extended with new functions and data types "
"implemented in C or C++ (or other languages callable from C). Python is also "
"suitable as an extension language for customizable applications."
msgstr ""
"Python 直譯器很容易用 C 或 C++（或其他可由 C 呼叫的語言）延伸出新的函式及資料"
"型別。Python 也適合成為客製化應用程式的延伸語言。"

#: ../../tutorial/index.rst:23
msgid ""
"This tutorial introduces the reader informally to the basic concepts and "
"features of the Python language and system. It helps to have a Python "
"interpreter handy for hands-on experience, but all examples are self-"
"contained, so the tutorial can be read off-line as well."
msgstr ""
"這份教學引導讀者概略地接觸 Python 語言的基本觀念及特性。利用 Python 直譯器實"
"際上機操作將有助於了解相關的內容。所有的範例都是完整且各自獨立。這份教學也可"
"離線閱讀。"

#: ../../tutorial/index.rst:28
msgid ""
"For a description of standard objects and modules, see :ref:`library-"
"index`. :ref:`reference-index` gives a more formal definition of the "
"language.  To write extensions in C or C++, read :ref:`extending-index` and :"
"ref:`c-api-index`. There are also several books covering Python in depth."
msgstr ""
"關於標準物件和模組的描述，可參考 :ref:`library-index`\\ 。\\ :ref:`reference-"
"index` 給了更多 Python 語言的正式定義。若想以 C 或 C++ 寫延伸套件 "
"(extension)，可閱讀 :ref:`extending-index` 和 :ref:`c-api-index` 。市面上也有"
"幾本書深入探討 Python。"

#: ../../tutorial/index.rst:33
msgid ""
"This tutorial does not attempt to be comprehensive and cover every single "
"feature, or even every commonly used feature. Instead, it introduces many of "
"Python's most noteworthy features, and will give you a good idea of the "
"language's flavor and style. After reading it, you will be able to read and "
"write Python modules and programs, and you will be ready to learn more about "
"the various Python library modules described in :ref:`library-index`."
msgstr ""
"這份教學並不打算涵蓋每個特性，甚至不完全所有常用的特性。但它將介紹 Python 中"
"最值得一提的特色，並且給你一些程式風格與習慣的建議。閱讀此文件後，你將有能力"
"閱讀及撰寫 Python 模組與程式，並且能接著在 :ref:`library-index` 學到更多各類"
"型的 Python 函式庫模組。"

#: ../../tutorial/index.rst:40
msgid "The :ref:`glossary` is also worth going through."
msgstr ":ref:`glossary` 頁面也值得一讀。"
