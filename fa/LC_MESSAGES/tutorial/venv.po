# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# Rafael Fontenelle <rffontenelle@gmail.com>, 2025
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.10\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-04-04 16:17+0000\n"
"PO-Revision-Date: 2022-11-05 17:23+0000\n"
"Last-Translator: Rafael Fontenelle <rffontenelle@gmail.com>, 2025\n"
"Language-Team: Persian (https://app.transifex.com/python-doc/teams/5390/"
"fa/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: fa\n"
"Plural-Forms: nplurals=2; plural=(n > 1);\n"

#: ../../tutorial/venv.rst:6
msgid "Virtual Environments and Packages"
msgstr "بسته‌ها و محیط‌های مجازی"

#: ../../tutorial/venv.rst:9
msgid "Introduction"
msgstr "مقدمه"

#: ../../tutorial/venv.rst:11
msgid ""
"Python applications will often use packages and modules that don't come as "
"part of the standard library.  Applications will sometimes need a specific "
"version of a library, because the application may require that a particular "
"bug has been fixed or the application may be written using an obsolete "
"version of the library's interface."
msgstr ""
"برنامه های Python اغلب از پکیج ها و ماژول هایی استفاده می کنند که به عنوان "
"بخشی از کتابخانه استاندارد ارائه نمی شوند. گاهی اوقات برنامه ها به یک نسخه "
"خاص از یک کتابخانه نیاز دارند، زیرا ممکن است برنامه به این صورت باشد که یک "
"باگ خاص در آن رفع شده است یا برنامه با استفاده از یک نسخه قدیمی از رابط "
"کتابخانه نوشته شده باشد."

#: ../../tutorial/venv.rst:17
msgid ""
"This means it may not be possible for one Python installation to meet the "
"requirements of every application.  If application A needs version 1.0 of a "
"particular module but application B needs version 2.0, then the requirements "
"are in conflict and installing either version 1.0 or 2.0 will leave one "
"application unable to run."
msgstr ""
"این به این معنی است که ممکن است یک نصب پایتون نتواند نیازهای تمامی برنامه ها "
"را برآورده کند. اگر برنامه A به نسخه 1.0 یک ماژول خاص نیاز داشته باشد، اما "
"برنامه B به نسخه 2.0 نیاز داشته باشد، در این صورت نیازها در تضاد هستند و نصب "
"هر کدام از نسخه های 1.0 یا 2.0 باعث می شود که یکی از برنامه ها نتواند اجرا "
"شود."

#: ../../tutorial/venv.rst:23
msgid ""
"The solution for this problem is to create a :term:`virtual environment`, a "
"self-contained directory tree that contains a Python installation for a "
"particular version of Python, plus a number of additional packages."
msgstr ""
"راه حل این مشکل ایجاد یک :term:`virtual environment` است، یک درخت دایرکتوری "
"مستقل که شامل یک نصب پایتون برای یک نسخه خاص از پایتون به علاوه تعدادی بسته "
"اضافی می باشد."

#: ../../tutorial/venv.rst:27
msgid ""
"Different applications can then use different virtual environments. To "
"resolve the earlier example of conflicting requirements, application A can "
"have its own virtual environment with version 1.0 installed while "
"application B has another virtual environment with version 2.0. If "
"application B requires a library be upgraded to version 3.0, this will not "
"affect application A's environment."
msgstr ""
"برنامه های مختلف می توانند از محیط های مجازی مختلف استفاده کنند. برای حل "
"مثال قبلی از نیازمندی های متناقض، برنامه A می تواند محیط مجازی خود را با "
"نسخه 1.0 نصب شده داشته باشد در حالی که برنامه B محیط مجازی دیگری با نسخه 2.0 "
"دارد. اگر برنامه B نیاز به ارتقاء یک کتابخانه به نسخه 3.0 داشته باشد، این "
"موضوع بر محیط برنامه A تأثیری نخواهد داشت."

#: ../../tutorial/venv.rst:36
msgid "Creating Virtual Environments"
msgstr "ایجاد محیط های مجازی"

#: ../../tutorial/venv.rst:38
msgid ""
"The module used to create and manage virtual environments is called :mod:"
"`venv`.  :mod:`venv` will usually install the most recent version of Python "
"that you have available. If you have multiple versions of Python on your "
"system, you can select a specific Python version by running ``python3`` or "
"whichever version you want."
msgstr ""

#: ../../tutorial/venv.rst:44
msgid ""
"To create a virtual environment, decide upon a directory where you want to "
"place it, and run the :mod:`venv` module as a script with the directory "
"path::"
msgstr ""
"برای ایجاد یک محیط مجازی، یک دایرکتوری را انتخاب کنید که می خواهید آن را در "
"آنجا قرار دهید، و ماژول :mod:`venv` را به عنوان یک اسکریپت با مسیر دایرکتوری "
"اجرا کنید::"

#: ../../tutorial/venv.rst:49
msgid ""
"This will create the ``tutorial-env`` directory if it doesn't exist, and "
"also create directories inside it containing a copy of the Python "
"interpreter and various supporting files."
msgstr ""
"این کار، دایرکتوری ``tutorial-env`` را در صورتی که وجود نداشته باشد ایجاد می "
"کند و همچنین دایرکتوری هایی در داخل آن ایجاد می کند که شامل یک نسخه از مفسر "
"Python و فایل های پشتیبانی مختلف هستند."

#: ../../tutorial/venv.rst:53
msgid ""
"A common directory location for a virtual environment is ``.venv``. This "
"name keeps the directory typically hidden in your shell and thus out of the "
"way while giving it a name that explains why the directory exists. It also "
"prevents clashing with ``.env`` environment variable definition files that "
"some tooling supports."
msgstr ""
"یک مکان معمول برای یک محیط مجازی ``.venv`` است. این نام به طور معمول "
"دایرکتوری را در پوسته شما پنهان نگه می دارد و در نتیجه آن را از دید خارج "
"کرده و در عین حال نامی به آن می دهد که توضیح می دهد چرا دایرکتوری وجود دارد. "
"همچنین از تداخل با فایل های تعریف متغیر محیطی ``.env`` که برخی ابزارها از آن "
"ها پشتیبانی می کنند، جلوگیری می کند."

#: ../../tutorial/venv.rst:59
msgid "Once you've created a virtual environment, you may activate it."
msgstr "پس از ایجاد یک محیط مجازی، می توانید آن را فعال کنید."

#: ../../tutorial/venv.rst:61
msgid "On Windows, run::"
msgstr "در ویندوز، اجرا کنید::"

#: ../../tutorial/venv.rst:65
msgid "On Unix or MacOS, run::"
msgstr "در Unix یا MacOS، اجرا کنید::"

#: ../../tutorial/venv.rst:69
msgid ""
"(This script is written for the bash shell.  If you use the :program:`csh` "
"or :program:`fish` shells, there are alternate ``activate.csh`` and "
"``activate.fish`` scripts you should use instead.)"
msgstr ""
"(این اسکریپت برای شل bash نوشته شده است. اگر شما از شل های :program:`csh` "
"یا :program:`fish` استفاده می کنید, باید به جای آن از اسکریپت های ``activate."
"csh`` و ``activate.fish`` استفاده کنید.)"

#: ../../tutorial/venv.rst:74
msgid ""
"Activating the virtual environment will change your shell's prompt to show "
"what virtual environment you're using, and modify the environment so that "
"running ``python`` will get you that particular version and installation of "
"Python. For example:"
msgstr ""
"فعال کردن محیط مجازی، اعلان شل شما را تغییر می دهد تا نشان دهد از کدام محیط "
"مجازی استفاده می کنید و محیط را به صورتی تغییر می دهد که اجرای ``python`` "
"نسخه و نصب خاصی از پایتون را برای شما فراهم کند. به عنوان مثال:"

#: ../../tutorial/venv.rst:93
msgid "Managing Packages with pip"
msgstr "مدیریت بسته‌ها با pip"

#: ../../tutorial/venv.rst:95
msgid ""
"You can install, upgrade, and remove packages using a program called :"
"program:`pip`.  By default ``pip`` will install packages from the `Python "
"Package Index <https://pypi.org>`_.  You can browse the Python Package Index "
"by going to it in your web browser."
msgstr ""
"شما می توانید به کمک برنامه ای به نام :program:`pip` بسته ها را نصب، ارتقا و "
"حذف کنید. به طور پیش فرض، ``pip`` بسته ها را از `Python Package Index "
"<https://pypi.org>`_ نصب می کند. شما می توانید با مراجعه به مرورگر وب خود، "
"به فهرست بسته های پایتون دسترسی پیدا کنید."

#: ../../tutorial/venv.rst:100
msgid ""
"``pip`` has a number of subcommands: \"install\", \"uninstall\", \"freeze\", "
"etc.  (Consult the :ref:`installing-index` guide for complete documentation "
"for ``pip``.)"
msgstr ""
"``pip`` چندین زیر فرمان دارد: \"install\"، \"uninstall\"، \"freeze\" و غیره. "
"(برای مستندات کامل ``pip`` به راهنمای :ref:`installing-index` مراجعه کنید.)"

#: ../../tutorial/venv.rst:104
msgid ""
"You can install the latest version of a package by specifying a package's "
"name:"
msgstr "می توانید جدیدترین نسخه یک بسته را با مشخص کردن نام بسته نصب کنید:"

#: ../../tutorial/venv.rst:115
msgid ""
"You can also install a specific version of a package by giving the package "
"name  followed by ``==`` and the version number:"
msgstr ""
"شما همچنین می توانید نسخه خاصی از یک بسته را با ارائه نام بسته به همراه "
"``==`` و شماره نسخه نصب کنید:"

#: ../../tutorial/venv.rst:126
msgid ""
"If you re-run this command, ``pip`` will notice that the requested version "
"is already installed and do nothing.  You can supply a different version "
"number to get that version, or you can run ``pip install --upgrade`` to "
"upgrade the package to the latest version:"
msgstr ""

#: ../../tutorial/venv.rst:141
msgid ""
"``pip uninstall`` followed by one or more package names will remove the "
"packages from the virtual environment."
msgstr ""

#: ../../tutorial/venv.rst:144
msgid "``pip show`` will display information about a particular package:"
msgstr ""

#: ../../tutorial/venv.rst:161
msgid ""
"``pip list`` will display all of the packages installed in the virtual "
"environment:"
msgstr ""

#: ../../tutorial/venv.rst:173
msgid ""
"``pip freeze`` will produce a similar list of the installed packages, but "
"the output uses the format that ``pip install`` expects. A common convention "
"is to put this list in a ``requirements.txt`` file:"
msgstr ""

#: ../../tutorial/venv.rst:185
msgid ""
"The ``requirements.txt`` can then be committed to version control and "
"shipped as part of an application.  Users can then install all the necessary "
"packages with ``install -r``:"
msgstr ""
"سپس می توان ``requirements.txt`` را به کنترل نسخه متعهد کرد و به عنوان بخشی "
"از برنامه ارسال کرد. کاربران سپس می توانند با استفاده از ``install -r`` "
"تمامی بسته های ضروری را نصب کنند:"

#: ../../tutorial/venv.rst:202
msgid ""
"``pip`` has many more options.  Consult the :ref:`installing-index` guide "
"for complete documentation for ``pip``.  When you've written a package and "
"want to make it available on the Python Package Index, consult the :ref:"
"`distributing-index` guide."
msgstr ""
