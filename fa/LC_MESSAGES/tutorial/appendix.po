# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001 Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# Alireza Shabani (Revisto) <theRevisto@gmail.com>, 2025
# khosro azimi, 2025
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.14\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-06-06 14:20+0000\n"
"PO-Revision-Date: 2021-06-28 01:49+0000\n"
"Last-Translator: khosro azimi, 2025\n"
"Language-Team: Persian (https://app.transifex.com/python-doc/teams/5390/"
"fa/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: fa\n"
"Plural-Forms: nplurals=2; plural=(n > 1);\n"

#: ../../tutorial/appendix.rst:5
msgid "Appendix"
msgstr "پیوست"

#: ../../tutorial/appendix.rst:11
msgid "Interactive Mode"
msgstr "حالت تعاملی"

#: ../../tutorial/appendix.rst:13
msgid ""
"There are two variants of the interactive :term:`REPL`.  The classic basic "
"interpreter is supported on all platforms with minimal line control "
"capabilities."
msgstr ""
"دو نوع از حالت تعاملی :term:`REPL` وجود دارد. مفسر پایهٔ کلاسیک در تمامی "
"پلتفرم‌ها با حداقل امکانات برای ویرایش خط فرمان پشتیبانی می‌شود."

#: ../../tutorial/appendix.rst:17
msgid ""
"On Windows, or Unix-like systems with :mod:`curses` support, a new "
"interactive shell is used by default. This one supports color, multiline "
"editing, history browsing, and paste mode.  To disable color, see :ref:"
"`using-on-controlling-color` for details.  Function keys provide some "
"additional functionality. :kbd:`F1` enters the interactive help browser :mod:"
"`pydoc`. :kbd:`F2` allows for browsing command-line history with neither "
"output nor the :term:`>>>` and :term:`...` prompts. :kbd:`F3` enters \"paste "
"mode\", which makes pasting larger blocks of code easier. Press :kbd:`F3` to "
"return to the regular prompt."
msgstr ""
"در ویندوز یا سیستم های یونیکس مانند با پشتیبانی از :mod:`curses`، به صورت "
"پیش فرض از یک شل تعاملی جدید استفاده می شود. این شل از رنگ، ویرایش چندخطی، "
"مرور تاریخچه، و حالت چسباندن «paste mode» پشتیبانی می کند. برای غیرفعال کردن "
"رنگ، جزئیات را در :ref:`using-on-controlling-color` ببینید. کلیدهای تابعی "
"برخی از قابلیت های اضافی را فراهم می کنند. :kbd:`F1` مرورگر تعاملی راهنما :"
"mod:`pydoc` را فعال می کند. :kbd:`F2` اجازه می دهد تاریخچه خط فرمان را بدون "
"خروجی و بدون اعلان های :term:`>>>` و :term:`...` مرور کنید. :kbd:`F3` حالت "
"\"چسباندن\" را فعال می کند که چسباندن بلوک های بزرگ تر کد را آسان تر می "
"سازد. برای بازگشت به اعلان معمولی، :kbd:`F3` را فشار دهید."

#: ../../tutorial/appendix.rst:28
msgid ""
"When using the new interactive shell, exit the shell by typing :kbd:`exit` "
"or :kbd:`quit`. Adding call parentheses after those commands is not required."
msgstr ""
"وقتی از پوسته تعاملی جدید استفاده می‌کنید، با تایپ :kbd:`exit` یا :kbd:`quit` "
"از پوسته خارج شوید. اضافه‌کردن پرانتز پس از این دستورات ضروری نیست."

#: ../../tutorial/appendix.rst:32
msgid ""
"If the new interactive shell is not desired, it can be disabled via the :"
"envvar:`PYTHON_BASIC_REPL` environment variable."
msgstr ""
"اگر پوسته تعاملی جدید مطلوب نباشد، می توان آن را از طریق متغیر محیطی :envvar:"
"`PYTHON_BASIC_REPL` غیرفعال کرد."

#: ../../tutorial/appendix.rst:38
msgid "Error Handling"
msgstr "مدیریت خطاها"

#: ../../tutorial/appendix.rst:40
msgid ""
"When an error occurs, the interpreter prints an error message and a stack "
"trace. In interactive mode, it then returns to the primary prompt; when "
"input came from a file, it exits with a nonzero exit status after printing "
"the stack trace. (Exceptions handled by an :keyword:`except` clause in a :"
"keyword:`try` statement are not errors in this context.)  Some errors are "
"unconditionally fatal and cause an exit with a nonzero exit status; this "
"applies to internal inconsistencies and some cases of running out of "
"memory.  All error messages are written to the standard error stream; normal "
"output from executed commands is written to standard output."
msgstr ""
"موقع بروز خطا، مفسر یک پیام خطا و «گزارش پشته» «stack trace» چاپ می‌کند. در "
"حالت تعاملی، بعد از نمایش خطا، برنامه به حالت آماده‌باش برای دریافت دستورات "
"جدید بازمی‌گردد؛ اما اگر ورودی از یک فایل آمده باشد، پس از چاپ گزارش پشته با "
"یک کد خروجی غیر صفر از برنامه خارج می‌شود. (استثناهایی که با بخش :keyword:"
"`except` در یک دستور :keyword:`try` مدیریت می‌شوند، در این زمینه خطا محسوب "
"نمی‌شوند.) بعضی خطاها به‌طور قطعی باعث خروج از برنامه می‌شوند و کد خروجی غیر "
"صفر دارند؛ این در مورد ناسازگاری‌های داخلی یا در برخی موارد کمبود حافظه صدق "
"می‌کند. تمام پیام‌های خطا در جریان خروجی خطا «standard error» نوشته می‌شوند؛ "
"خروجی معمول دستورات اجراشده نیز در جریان خروجی استاندارد «standard output» "
"نوشته می‌شود."

#: ../../tutorial/appendix.rst:50
msgid ""
"Typing the interrupt character (usually :kbd:`Control-C` or :kbd:`Delete`) "
"to the primary or secondary prompt cancels the input and returns to the "
"primary prompt. [#]_ Typing an interrupt while a command is executing raises "
"the :exc:`KeyboardInterrupt` exception, which may be handled by a :keyword:"
"`try` statement."
msgstr ""
"فشردن کلید وقفه (که معمولاً :kbd:`Control-C` یا :kbd:`Delete` است) در اعلان "
"اصلی یا فرعی، ورودی را لغو کرده و کاربر را به اعلان اصلی بازمی‌گرداند. [#]_ \n"
"فشردن کلید وقفه در حین اجرای یک دستور، استثنای :exc:`KeyboardInterrupt` را "
"ایجاد می‌کند که می‌توان آن را با دستور :keyword:`try` مدیریت کرد."

#: ../../tutorial/appendix.rst:60
msgid "Executable Python Scripts"
msgstr "اسکریپت های اجرایی پایتون"

#: ../../tutorial/appendix.rst:62
msgid ""
"On BSD'ish Unix systems, Python scripts can be made directly executable, "
"like shell scripts, by putting the line ::"
msgstr ""
"در سیستم عامل های یونیکس مبتنی بر BSD، اسکریپت های پایتون می توانند مانند "
"اسکریپت های شل به صورت مستقیم اجرایی شوند، با قرار دادن خط ::"

#: ../../tutorial/appendix.rst:65
msgid "#!/usr/bin/env python3"
msgstr "#!/usr/bin/env python3"

#: ../../tutorial/appendix.rst:67
msgid ""
"(assuming that the interpreter is on the user's :envvar:`PATH`) at the "
"beginning of the script and giving the file an executable mode.  The ``#!`` "
"must be the first two characters of the file.  On some platforms, this first "
"line must end with a Unix-style line ending (``'\\n'``), not a Windows "
"(``'\\r\\n'``) line ending.  Note that the hash, or pound, character, "
"``'#'``, is used to start a comment in Python."
msgstr ""
"(با فرض اینکه مفسر در :envvar:`PATH` کاربر قرار دارد) در ابتدای اسکریپت باید "
"قرار گیرد و فایل باید به حالت قابل اجرا تنظیم شود. ``#!`` باید نخستین دو "
"نویسه‌ی فایل باشند. در برخی پلتفرم‌ها، این خط اول باید با پایان خط به سبک "
"یونیکس (``'\\n'``) تمام شود، نه پایان خط ویندوزی (``'\\r\\n'``). توجه داشته "
"باشید که نویسه‌ی ``'#'`` برای آغاز یک توضیح (کامنت) در پایتون به کار می‌رود."

#: ../../tutorial/appendix.rst:74
msgid ""
"The script can be given an executable mode, or permission, using the :"
"program:`chmod` command."
msgstr ""
"با استفاده از دستور :program:`chmod` می‌توان به اسکریپت حالت اجرایی یا مجوز "
"اجرا داد."

#: ../../tutorial/appendix.rst:77
msgid "$ chmod +x myscript.py"
msgstr "$ chmod +x myscript.py"

#: ../../tutorial/appendix.rst:81
msgid ""
"On Windows systems, there is no notion of an \"executable mode\".  The "
"Python installer automatically associates ``.py`` files with ``python.exe`` "
"so that a double-click on a Python file will run it as a script.  The "
"extension can also be ``.pyw``, in that case, the console window that "
"normally appears is suppressed."
msgstr ""
"در سیستم‌عامل ویندوز، مفهوم «حالت اجرایی» \"executable mode\" وجود ندارد. "
"نصب‌کننده پایتون به‌طور خودکار فایل‌های ``.py`` را به ``python.exe`` مرتبط "
"می‌کند تا با دوبار کلیک روی فایل پایتون، به‌عنوان اسکریپت اجرا شود. پسوند فایل "
"همچنین می‌تواند ``.pyw`` باشد که در این صورت پنجره کنسولی که معمولاً ظاهر "
"می‌شود، نمایش داده نمی‌شود."

#: ../../tutorial/appendix.rst:91
msgid "The Interactive Startup File"
msgstr "پروندهٔ آغازین تعاملی «The Interactive Startup File»"

#: ../../tutorial/appendix.rst:93
msgid ""
"When you use Python interactively, it is frequently handy to have some "
"standard commands executed every time the interpreter is started.  You can "
"do this by setting an environment variable named :envvar:`PYTHONSTARTUP` to "
"the name of a file containing your start-up commands.  This is similar to "
"the :file:`.profile` feature of the Unix shells."
msgstr ""
"هنگامی که به صورت تعاملی از پایتون استفاده می کنید، اجرای برخی دستورات "
"استاندارد در هر بار شروع مفسر می تواند مفید باشد. شما می توانید این کار را "
"با تنظیم متغیر محیطی با نام :envvar:`PYTHONSTARTUP` به نام فایلی که حاوی "
"دستورات شروع شما است انجام دهید. این قابلیت شبیه به ویژگی :file:`.profile` "
"در شل های یونیکس است."

#: ../../tutorial/appendix.rst:99
msgid ""
"This file is only read in interactive sessions, not when Python reads "
"commands from a script, and not when :file:`/dev/tty` is given as the "
"explicit source of commands (which otherwise behaves like an interactive "
"session).  It is executed in the same namespace where interactive commands "
"are executed, so that objects that it defines or imports can be used without "
"qualification in the interactive session. You can also change the prompts "
"``sys.ps1`` and ``sys.ps2`` in this file."
msgstr ""
"این فایل فقط در جلسات تعاملی خوانده می شود، نه زمانی که پایتون دستورات را از "
"یک اسکریپت می خواند، و نه زمانی که :file:`/dev/tty` به عنوان منبع صریح "
"دستورات داده می شود (که در غیر این صورت همچون یک جلسه تعاملی رفتار می کند). "
"این فایل در همان فضای نامی که در آن دستورات تعاملی اجرا می شوند، اجرا می "
"گردد بنابراین اشیایی که تعریف یا وارد می کند می توانند بدون مشخص شدن در جلسه "
"تعاملی مورد استفاده قرار گیرند. شما می توانید درخواست ها ``sys.ps1`` و ``sys."
"ps2`` را نیز در این فایل تغییر دهید."

#: ../../tutorial/appendix.rst:107
msgid ""
"If you want to read an additional start-up file from the current directory, "
"you can program this in the global start-up file using code like ``if os."
"path.isfile('.pythonrc.py'): exec(open('.pythonrc.py').read())``. If you "
"want to use the startup file in a script, you must do this explicitly in the "
"script::"
msgstr ""
"اگر می خواهید یک فایل راه اندازی اضافی از دایرکتوری فعلی بخوانید، می توانید "
"این کار را در فایل راه اندازی عمومی با کدی مشابه ``if os.path.isfile('."
"pythonrc.py'): exec(open('.pythonrc.py').read())`` برنامه ریزی کنید. اگر می "
"خواهید از فایل راه اندازی در یک اسکریپت استفاده کنید، باید این کار را به طور "
"صریح در اسکریپت انجام دهید:"

#: ../../tutorial/appendix.rst:113
msgid ""
"import os\n"
"filename = os.environ.get('PYTHONSTARTUP')\n"
"if filename and os.path.isfile(filename):\n"
"    with open(filename) as fobj:\n"
"        startup_file = fobj.read()\n"
"    exec(startup_file)"
msgstr ""
"import os\n"
"filename = os.environ.get('PYTHONSTARTUP')\n"
"if filename and os.path.isfile(filename):\n"
"    with open(filename) as fobj:\n"
"        startup_file = fobj.read()\n"
"    exec(startup_file)"

#: ../../tutorial/appendix.rst:124
msgid "The Customization Modules"
msgstr "ماژول های سفارشی سازی"

#: ../../tutorial/appendix.rst:126
msgid ""
"Python provides two hooks to let you customize it: :index:`sitecustomize` "
"and :index:`usercustomize`.  To see how it works, you need first to find the "
"location of your user site-packages directory.  Start Python and run this "
"code::"
msgstr ""
"پایتون دو نقطهٔ اتصال برای سفارشی سازی ارائه می دهد: :index:`sitecustomize` "
"و :index:`usercustomize`. برای دیدن چگونگی کارکرد آن، ابتدا باید مکان "
"دایرکتوری user site-packages خود را پیدا کنید. پایتون را اجرا کنید و این کد "
"را اجرا کنید:"

#: ../../tutorial/appendix.rst:130
msgid ""
">>> import site\n"
">>> site.getusersitepackages()\n"
"'/home/user/.local/lib/python3.x/site-packages'"
msgstr ""
">>> import site\n"
">>> site.getusersitepackages()\n"
"'/home/user/.local/lib/python3.x/site-packages'"

#: ../../tutorial/appendix.rst:134
msgid ""
"Now you can create a file named :file:`usercustomize.py` in that directory "
"and put anything you want in it.  It will affect every invocation of Python, "
"unless it is started with the :option:`-s` option to disable the automatic "
"import."
msgstr ""
"حالا می‌توانید فایلی به نام :file:`usercustomize.py` در آن دایرکتوری ایجاد "
"کرده و هر چیزی که می‌خواهید در آن قرار دهید. این فایل روی هر بار اجرای پایتون "
"تأثیر خواهد گذاشت، مگر اینکه پایتون با گزینه :option:`-s` اجرا شود تا وارد "
"کردن خودکار غیرفعال گردد."

#: ../../tutorial/appendix.rst:138
msgid ""
":index:`sitecustomize` works in the same way, but is typically created by an "
"administrator of the computer in the global site-packages directory, and is "
"imported before :index:`usercustomize`.  See the documentation of the :mod:"
"`site` module for more details."
msgstr ""
":index:`sitecustomize` به همان صورت کار می کند، اما به طور معمول توسط مدیر "
"سیستم در دایرکتوری global site-packages ایجاد می شود و قبل از :index:"
"`usercustomize` وارد می شود. برای جزئیات بیشتر به مستندات ماژول :mod:`site` "
"مراجعه کنید."

#: ../../tutorial/appendix.rst:145
msgid "Footnotes"
msgstr "پاورقی ها"

#: ../../tutorial/appendix.rst:146
msgid "A problem with the GNU Readline package may prevent this."
msgstr "یک مشکل در بستهٔ «GNU Readline» ممکن است مانع این کار شود."
