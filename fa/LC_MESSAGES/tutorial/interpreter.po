# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# Rafael Fontenelle <rffontenelle@gmail.com>, 2025
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.11\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-03-28 15:41+0000\n"
"PO-Revision-Date: 2023-05-24 02:23+0000\n"
"Last-Translator: Rafael Fontenelle <rffontenelle@gmail.com>, 2025\n"
"Language-Team: Persian (https://app.transifex.com/python-doc/teams/5390/"
"fa/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: fa\n"
"Plural-Forms: nplurals=2; plural=(n > 1);\n"

#: ../../tutorial/interpreter.rst:5
msgid "Using the Python Interpreter"
msgstr "استفاده از مفسر پایتون"

#: ../../tutorial/interpreter.rst:11
msgid "Invoking the Interpreter"
msgstr "اجرا کردن مفسر"

#: ../../tutorial/interpreter.rst:13
msgid ""
"The Python interpreter is usually installed as :file:`/usr/local/bin/"
"python3.11` on those machines where it is available; putting :file:`/usr/"
"local/bin` in your Unix shell's search path makes it possible to start it by "
"typing the command:"
msgstr ""

#: ../../tutorial/interpreter.rst:21
msgid ""
"to the shell. [#]_ Since the choice of the directory where the interpreter "
"lives is an installation option, other places are possible; check with your "
"local Python guru or system administrator.  (E.g., :file:`/usr/local/python` "
"is a popular alternative location.)"
msgstr ""
"به شِل (پوسته) ارسال کنید. [#]_ از آنجایی که انتخاب دایرکتوری که مفسر در آن "
"زندگی می کند یک گزینه نصب است، مکان های دیگری نیز ممکن است در دسترس باشند؛ "
"با کارشناس محلی Python یا مدیر سیستم خود مشورت کنید. (به عنوان مثال، :file:`/"
"usr/local/python` یک مکان جایگزین محبوب است.)"

#: ../../tutorial/interpreter.rst:26
msgid ""
"On Windows machines where you have installed Python from the :ref:`Microsoft "
"Store <windows-store>`, the :file:`python3.11` command will be available. If "
"you have the :ref:`py.exe launcher <launcher>` installed, you can use the :"
"file:`py` command. See :ref:`setting-envvars` for other ways to launch "
"Python."
msgstr ""

#: ../../tutorial/interpreter.rst:31
msgid ""
"Typing an end-of-file character (:kbd:`Control-D` on Unix, :kbd:`Control-Z` "
"on Windows) at the primary prompt causes the interpreter to exit with a zero "
"exit status.  If that doesn't work, you can exit the interpreter by typing "
"the following command: ``quit()``."
msgstr ""
"وارد کردن یک کاراکتر پایان فایل (:kbd:`Control-D` در یونیکس، :kbd:`Control-"
"Z` در ویندوز) در اعلان اصلی باعث خروج مفسر با وضعیت خروج صفر می شود. اگر این "
"کار نمی کند، می توانید با وارد کردن فرمان زیر از مفسر خارج شوید: ``quit()``."

#: ../../tutorial/interpreter.rst:36
msgid ""
"The interpreter's line-editing features include interactive editing, history "
"substitution and code completion on systems that support the `GNU Readline "
"<https://tiswww.case.edu/php/chet/readline/rltop.html>`_ library. Perhaps "
"the quickest check to see whether command line editing is supported is "
"typing :kbd:`Control-P` to the first Python prompt you get.  If it beeps, "
"you have command line editing; see Appendix :ref:`tut-interacting` for an "
"introduction to the keys.  If nothing appears to happen, or if ``^P`` is "
"echoed, command line editing isn't available; you'll only be able to use "
"backspace to remove characters from the current line."
msgstr ""
"ویژگی های ویرایش خط مفسر شامل ویرایش تعاملی، جانشینی تاریخچه و تکمیل کد در "
"سیستم هایی است که از کتابخانه `GNU Readline <https://tiswww.case.edu/php/"
"chet/readline/rltop.html>`_ پشتیبانی می کنند. شاید سریع ترین روش برای بررسی "
"این که آیا ویرایش خط فرمان پشتیبانی می شود، این باشد که :kbd:`Control-P` را "
"به اولین پروامپت پایتون که دریافت می کنید وارد کنید. اگر صدایی شنیدید، "
"ویرایش خط فرمان را دارید؛ برای ورود به کلیدها به ضمیمه :ref:`tut-"
"interacting` مراجعه کنید. اگر هیچ اتفاقی نیفتاد یا اگر ``^P`` نمایش داده شد، "
"ویرایش خط فرمان موجود نیست؛ فقط می توانید از بک اسپیس برای حذف کاراکترها از "
"خط جاری استفاده کنید."

#: ../../tutorial/interpreter.rst:46
msgid ""
"The interpreter operates somewhat like the Unix shell: when called with "
"standard input connected to a tty device, it reads and executes commands "
"interactively; when called with a file name argument or with a file as "
"standard input, it reads and executes a *script* from that file."
msgstr ""
"مفسر تا حدی شبیه به پوسته Unix عمل می کند: هنگامی که با ورودی استاندارد متصل "
"به یک دستگاه tty فراخوانی می شود، دستورات را به صورت تعاملی می خواند و اجرا "
"می کند؛ هنگامی که با یک آرگومان به عنوان نام فایل یا با یک فایل به عنوان "
"ورودی استاندارد فراخوانی می شود، یک *script* را از آن فایل می خواند و اجرا "
"می کند."

#: ../../tutorial/interpreter.rst:51
msgid ""
"A second way of starting the interpreter is ``python -c command [arg] ...``, "
"which executes the statement(s) in *command*, analogous to the shell's :"
"option:`-c` option.  Since Python statements often contain spaces or other "
"characters that are special to the shell, it is usually advised to quote "
"*command* in its entirety."
msgstr ""
"راه دوم برای شروع مفسر ``python -c command [arg] ...`` است که دستور(ها) را "
"در *command* اجرا می کند، مشابه گزینه :option:`-c` در شل. از آنجا که دستورات "
"پایتون اغلب شامل فاصله ها یا کاراکترهای دیگری هستند که برای شل خاص هستند، "
"معمولاً توصیه می شود که *command* را به طور کامل نقل قول کنید."

#: ../../tutorial/interpreter.rst:57
msgid ""
"Some Python modules are also useful as scripts.  These can be invoked using "
"``python -m module [arg] ...``, which executes the source file for *module* "
"as if you had spelled out its full name on the command line."
msgstr ""
"برخی ماژول های پایتون همچنین به عنوان اسکریپت مفید هستند. این ماژول ها را می "
"توان با استفاده از ``python -m module [arg] ...`` فراخوانی کرد، که فایل منبع "
"*module* را اجرا می کند گویی که نام کامل آن را در خط فرمان تایپ کرده اید."

#: ../../tutorial/interpreter.rst:61
msgid ""
"When a script file is used, it is sometimes useful to be able to run the "
"script and enter interactive mode afterwards.  This can be done by passing :"
"option:`-i` before the script."
msgstr ""
"وقتی از یک فایل اسکریپت استفاده می شود، گاهی اوقات مفید است که بتوانید "
"اسکریپت را اجرا کرده و سپس وارد حالت تعاملی شوید. این کار با ارسال :option:`-"
"i` قبل از اسکریپت انجام می شود."

#: ../../tutorial/interpreter.rst:65
msgid "All command line options are described in :ref:`using-on-general`."
msgstr "تمام گزینه های خط فرمان در :ref:`using-on-general` توضیح داده شده اند."

#: ../../tutorial/interpreter.rst:71
msgid "Argument Passing"
msgstr "انتقال آرگومان ها"

#: ../../tutorial/interpreter.rst:73
msgid ""
"When known to the interpreter, the script name and additional arguments "
"thereafter are turned into a list of strings and assigned to the ``argv`` "
"variable in the ``sys`` module.  You can access this list by executing "
"``import sys``.  The length of the list is at least one; when no script and "
"no arguments are given, ``sys.argv[0]`` is an empty string.  When the script "
"name is given as ``'-'`` (meaning  standard input), ``sys.argv[0]`` is set "
"to ``'-'``.  When :option:`-c` *command* is used, ``sys.argv[0]`` is set to "
"``'-c'``.  When :option:`-m` *module* is used, ``sys.argv[0]``  is set to "
"the full name of the located module.  Options found after  :option:`-c` "
"*command* or :option:`-m` *module* are not consumed  by the Python "
"interpreter's option processing but left in ``sys.argv`` for  the command or "
"module to handle."
msgstr ""
"وقتی برای مفسر شناخته شده باشد، نام اسکریپت و آرگومان های اضافی پس از آن به "
"یک لیست از رشته ها تبدیل می شوند و به متغیر ``argv`` در ماژول ``sys`` اختصاص "
"داده می شوند. می توانید با اجرای ``import sys`` به این لیست دسترسی پیدا "
"کنید. طول این لیست حداقل یک است؛ زمانی که هیچ اسکریپت و آرگومانی ارائه نشده "
"باشد، ``sys.argv[0]`` یک رشته خالی است. زمانی که نام اسکریپت به عنوان "
"``'-'`` (به معنای ورودی استاندارد) داده می شود، ``sys.argv[0]`` به ``'-'`` "
"تنظیم می شود. وقتی که :option:`-c` *command* استفاده می شود، ``sys.argv[0]`` "
"به ``'-c'`` تنظیم می شود. وقتی که :option:`-m` *module* استفاده می شود، "
"``sys.argv[0]`` به نام کامل ماژول یافت شده تنظیم می شود. گزینه هایی که بعد "
"از :option:`-c` *command* یا :option:`-m` *module* پیدا شوند، توسط پردازش "
"گزینه مفسر پایتون مصرف نمی شوند، بلکه در ``sys.argv`` باقی می مانند تا توسط "
"فرمان یا ماژول پردازش شوند."

#: ../../tutorial/interpreter.rst:89
msgid "Interactive Mode"
msgstr "حالت تعاملی"

#: ../../tutorial/interpreter.rst:91
msgid ""
"When commands are read from a tty, the interpreter is said to be in "
"*interactive mode*.  In this mode it prompts for the next command with the "
"*primary prompt*, usually three greater-than signs (``>>>``); for "
"continuation lines it prompts with the *secondary prompt*, by default three "
"dots (``...``). The interpreter prints a welcome message stating its version "
"number and a copyright notice before printing the first prompt:"
msgstr ""
"وقتی دستورات از یک tty خوانده می شوند، مفسر گفته می شود که در حالت "
"*interactive mode* قرار دارد. در این حالت، مفسر با *primary prompt* که "
"معمولاً سه علامت بزرگ تر (``>>>``) است، برای دریافت دستور بعدی درخواست می "
"کند؛ برای خطوط ادامه دار با *secondary prompt* که به صورت پیش فرض سه نقطه "
"(``...``) است، درخواست می کند. مفسر قبل از چاپ اولین درخواست، یک پیام خوش "
"آمدگویی که شامل شماره نسخه و اطلاعیه حق تکثیر است را چاپ می کند."

#: ../../tutorial/interpreter.rst:108
msgid ""
"Continuation lines are needed when entering a multi-line construct. As an "
"example, take a look at this :keyword:`if` statement::"
msgstr ""
"در وارد کردن یک ساختار چند خطی، خطوط ادامه دهنده مورد نیاز هستند. به عنوان "
"مثال، به این دستور :keyword:`if` نگاه کنید::"

#: ../../tutorial/interpreter.rst:118
msgid "For more on interactive mode, see :ref:`tut-interac`."
msgstr ""
"برای اطلاعات بیشتر در مورد حالت تعاملی، به :ref:`tut-interac` مراجعه کنید."

#: ../../tutorial/interpreter.rst:124
msgid "The Interpreter and Its Environment"
msgstr "مترجم و محیط آن"

#: ../../tutorial/interpreter.rst:130
msgid "Source Code Encoding"
msgstr "کدگذاری سورس کد"

#: ../../tutorial/interpreter.rst:132
msgid ""
"By default, Python source files are treated as encoded in UTF-8.  In that "
"encoding, characters of most languages in the world can be used "
"simultaneously in string literals, identifiers and comments --- although the "
"standard library only uses ASCII characters for identifiers, a convention "
"that any portable code should follow.  To display all these characters "
"properly, your editor must recognize that the file is UTF-8, and it must use "
"a font that supports all the characters in the file."
msgstr ""
"به طور پیش فرض، فایل های منبع پایتون به عنوان کدگذاری شده در UTF-8 پردازش می "
"شوند. در این کدگذاری، کاراکترهای بیشتر زبان های جهان می توانند به صورت "
"همزمان در رشته ها، شناسه ها و توضیحات استفاده شوند --- هرچند که کتابخانه "
"استاندارد تنها از کاراکترهای ASCII برای شناسه ها استفاده می کند، که یک قاعده "
"ای است که هر کد قابل حمل باید از آن پیروی کند. برای نمایش صحیح تمام این "
"کاراکترها، ویرایشگر شما باید تشخیص دهد که فایل به صورت UTF-8 است و باید از "
"فونتی استفاده کند که از همه کاراکترهای موجود در فایل پشتیبانی کند."

#: ../../tutorial/interpreter.rst:140
msgid ""
"To declare an encoding other than the default one, a special comment line "
"should be added as the *first* line of the file.  The syntax is as follows::"
msgstr ""
"برای اعلام یک کدگذاری به جز کدگذاری پیش فرض، باید یک خط توضیحی خاص به عنوان "
"خط *first* فایل اضافه شود. نحوه نوشتن آن به صورت زیر است::"

#: ../../tutorial/interpreter.rst:145
msgid "where *encoding* is one of the valid :mod:`codecs` supported by Python."
msgstr ""
"که *encoding* یکی از :mod:`codecs` معتبری است که توسط Python پشتیبانی می شود."

#: ../../tutorial/interpreter.rst:147
msgid ""
"For example, to declare that Windows-1252 encoding is to be used, the first "
"line of your source code file should be::"
msgstr ""
"برای مثال، برای اعلام اینکه از کدگذاری Windows-1252 استفاده شود، خط اول فایل "
"کد منبع شما باید به صورت زیر باشد::"

#: ../../tutorial/interpreter.rst:152
msgid ""
"One exception to the *first line* rule is when the source code starts with "
"a :ref:`UNIX \"shebang\" line <tut-scripts>`.  In this case, the encoding "
"declaration should be added as the second line of the file.  For example::"
msgstr ""
"یک استثنا برای قانون *first line* زمانی است که کد منبع با یک :ref:`UNIX "
"\"shebang\" line <tut-scripts>` شروع می شود. در این صورت، اعلامیه کدگذاری "
"باید به عنوان خط دوم فایل اضافه شود. به عنوان مثال::"

#: ../../tutorial/interpreter.rst:160
msgid "Footnotes"
msgstr "پاورقی ها"

#: ../../tutorial/interpreter.rst:161
msgid ""
"On Unix, the Python 3.x interpreter is by default not installed with the "
"executable named ``python``, so that it does not conflict with a "
"simultaneously installed Python 2.x executable."
msgstr ""
"در سیستم عامل یونیکس، مفسر Python 3.x به طور پیش فرض با نام اجرایی "
"``python`` نصب نمی شود تا با مفسر Python 2.x که به طور همزمان نصب شده است، "
"تداخل نداشته باشد."
