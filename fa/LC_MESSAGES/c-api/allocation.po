# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001 Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# Danial Behzadi <dani.behzi@ubuntu.com>, 2025
# Mehdi Batani, 2025
# AmirHossein SAMIMI, 2025
# khosro azimi, 2025
# Ariyan Bolandi, 2025
# Alireza Shabani (Revisto) <theRevisto@gmail.com>, 2025
# Shahriar Ghasempour, 2025
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.14\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-05-16 14:19+0000\n"
"PO-Revision-Date: 2021-06-28 00:47+0000\n"
"Last-Translator: Shahriar Ghasempour, 2025\n"
"Language-Team: Persian (https://app.transifex.com/python-doc/teams/5390/"
"fa/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: fa\n"
"Plural-Forms: nplurals=2; plural=(n > 1);\n"

#: ../../c-api/allocation.rst:6
msgid "Allocating Objects on the Heap"
msgstr "تخصیص اشیاء روی پشته"

#: ../../c-api/allocation.rst:17
msgid ""
"Initialize a newly allocated object *op* with its type and initial "
"reference.  Returns the initialized object.  Other fields of the object are "
"not affected."
msgstr ""
"یک شیء تازه تخصیص یافته *op* را با نوع و مقدار اولیه اش مقداردهی می کند. شیء "
"مقدار دهی شده را برمی گرداند. سایر بخش های شی تحت تأثیر قرار نمی گیرند."

#: ../../c-api/allocation.rst:24
msgid ""
"This does everything :c:func:`PyObject_Init` does, and also initializes the "
"length information for a variable-size object."
msgstr ""
"این تابع همهٔ کارهایی را انجام می‌دهد که :c:func:`PyObject_Init` انجام می‌دهد، "
"و همچنین اطلاعات مربوط به طول را برای یک شیء با اندازهٔ متغیر مقداردهی می‌کند."

#: ../../c-api/allocation.rst:30
msgid ""
"Allocate a new Python object using the C structure type *TYPE* and the "
"Python type object *typeobj* (``PyTypeObject*``). Fields not defined by the "
"Python object header are not initialized. The caller will own the only "
"reference to the object (i.e. its reference count will be one). The size of "
"the memory allocation is determined from the :c:member:`~PyTypeObject."
"tp_basicsize` field of the type object."
msgstr ""
"یک شیء جدید پایتونی را با استفاده از ساختار ساختمان داده زبان سی و نوع: "
"تایپ  *TYPE* تخصیص می دهد و نوع شیء پایتونی به صورت *typeobj*   "
"(``PyTypeObject*``) خواهد بود.\n"
"قسمت هایی که توسط هدر شیء پایتون تعریف نشده‌اند، مقداردهی اولیه نمی‌شوند.\n"
"فراخواننده تنها دسترسی مرجع یا رفرنس شیء را خواهد داشت (یعنی شمارش مرجع یا "
"رفرنس آن برابر با یک است).\n"
"اندازه حافظه‌ای که اختصاص داده می‌شود، از قسمت :c:member:`~PyTypeObject."
"tp_basicsize` نوع یا همان تایپ شیء تعیین می‌شود.\n"
" "

#: ../../c-api/allocation.rst:38
msgid ""
"Note that this function is unsuitable if *typeobj* has :c:macro:"
"`Py_TPFLAGS_HAVE_GC` set. For such objects, use :c:func:`PyObject_GC_New` "
"instead."
msgstr ""
"توجه داشته باشید که اگر *typeobj* دارای :c:macro:`Py_TPFLAGS_HAVE_GC` مجموعه "
"باشد، این تابع نامناسب است. برای چنین اشیایی به جای آن از :c:func:"
"`PyObject_GC_New` استفاده کنید."

#: ../../c-api/allocation.rst:45
msgid ""
"Allocate a new Python object using the C structure type *TYPE* and the "
"Python type object *typeobj* (``PyTypeObject*``). Fields not defined by the "
"Python object header are not initialized.  The allocated memory allows for "
"the *TYPE* structure plus *size* (``Py_ssize_t``) fields of the size given "
"by the :c:member:`~PyTypeObject.tp_itemsize` field of *typeobj*.  This is "
"useful for implementing objects like tuples, which are able to determine "
"their size at construction time.  Embedding the array of fields into the "
"same allocation decreases the number of allocations, improving the memory "
"management efficiency."
msgstr ""
"یک شیء جدید پایتونی را با استفاده از ساختار ساختمان داده زبان سی و نوع: تایپ "
"*TYPE* ​​و شیء پایتونی با نوع *typeobj*(``PyTypeObject*``) اختصاص می دهد. قسمت "
"هایی که توسط هدر شی پایتون تعریف نشده اند مقداردهی اولیه نمی شوند. حافظه‌ای "
"که اختصاص داده می‌شود، فضای لازم برای ساختار *TYPE* به‌علاوه‌ی *size* "
"(``Py_ssize_t``) را دارد که اندازه‌ی آن از قسمت :c:member:`~PyTypeObject."
"tp_itemsize` در *typeobj* به دست می‌آید.\n"
"این روش برای پیاده‌سازی شیءهایی مانند تاپل‌ها مفید است؛ چون آن‌ها می‌توانند "
"اندازه‌شان را در زمان ساخت مشخص کنند.\n"
"قرار دادن آرایه‌ی فیلدها در همان فضای اختصاص‌داده‌شده، تعداد تخصیص‌های حافظه را "
"کاهش می‌دهد و باعث بهبود کارایی مدیریت حافظه می‌شود."

#: ../../c-api/allocation.rst:56
msgid ""
"Note that this function is unsuitable if *typeobj* has :c:macro:"
"`Py_TPFLAGS_HAVE_GC` set. For such objects, use :c:func:`PyObject_GC_NewVar` "
"instead."
msgstr ""
"توجه داشته باشید که اگر *typeobj* دارای :c:macro:`Py_TPFLAGS_HAVE_GC` مجموعه "
"باشد، این تابع نامناسب است. برای چنین اشیایی به جای آن از :c:func:"
"`PyObject_GC_NewVar` استفاده کنید."

#: ../../c-api/allocation.rst:63
msgid "Same as :c:func:`PyObject_Free`."
msgstr "همانند :c:func:`PyObject_Free`"

#: ../../c-api/allocation.rst:67
msgid ""
"Object which is visible in Python as ``None``.  This should only be accessed "
"using the :c:macro:`Py_None` macro, which evaluates to a pointer to this "
"object."
msgstr ""
"شیء ای که در پایتون به صورت ``None`` قابل مشاهده است\n"
"این فقط باید با استفاده از ماکرو :c:macro:`Py_None`، که به یک اشاره گر به "
"این شی ارزیابی می شود، دسترسی پیدا کند."

#: ../../c-api/allocation.rst:74
msgid ":c:func:`PyModule_Create`"
msgstr ":c:func:`PyModule_Create`"

#: ../../c-api/allocation.rst:75
msgid "To allocate and create extension modules."
msgstr "برای تخصیص و ایجاد ماژول های افزونه."
