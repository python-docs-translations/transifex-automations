# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# Rafael Fontenelle <rffontenelle@gmail.com>, 2025
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.12\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-05-02 14:54+0000\n"
"PO-Revision-Date: 2024-05-11 00:32+0000\n"
"Last-Translator: Rafael Fontenelle <rffontenelle@gmail.com>, 2025\n"
"Language-Team: Persian (https://app.transifex.com/python-doc/teams/5390/"
"fa/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: fa\n"
"Plural-Forms: nplurals=2; plural=(n > 1);\n"

#: ../../c-api/allocation.rst:6
msgid "Allocating Objects on the Heap"
msgstr "تخصیص اشیاء روی پشته"

#: ../../c-api/allocation.rst:17
msgid ""
"Initialize a newly allocated object *op* with its type and initial "
"reference.  Returns the initialized object.  Other fields of the object are "
"not affected."
msgstr ""
"یک شیء تازه تخصیص یافته *op* را با نوع و مرجع اولیه آن مقداردهی کنید. شیء "
"اولیه را برمی گرداند. سایر فیلدهای شی تحت تأثیر قرار نمی گیرند."

#: ../../c-api/allocation.rst:24
msgid ""
"This does everything :c:func:`PyObject_Init` does, and also initializes the "
"length information for a variable-size object."
msgstr ""
"این، هر کاری که:c:func:`PyObject_Init` انجام دهد را انجام می دهد و همچنین "
"اطلاعات طول یک شی با اندازه متغیر را مقداردهی اولیه می کند."

#: ../../c-api/allocation.rst:30
msgid ""
"Allocate a new Python object using the C structure type *TYPE* and the "
"Python type object *typeobj* (``PyTypeObject*``). Fields not defined by the "
"Python object header are not initialized. The caller will own the only "
"reference to the object (i.e. its reference count will be one). The size of "
"the memory allocation is determined from the :c:member:`~PyTypeObject."
"tp_basicsize` field of the type object."
msgstr ""
"یک شی جدید پایتون را با استفاده از ساختار C نوع *TYPE* ​​و شیء نوع پایتون "
"*typeobj* (``PyTypeObject*``) اختصاص دهید. فیلدهایی که توسط هدر شی پایتون "
"تعریف نشده اند مقداردهی اولیه نمی شوند. صدا زننده تنها مرجع شیء را در اختیار "
"خواهد داشت (یعنی تعداد مراجع آن یک خواهد بود). اندازه تخصیص حافظه از تعیین "
"می شود از فیلد نوع شئ.:c:member:`~PyTypeObject.tp_basicsize`"

#: ../../c-api/allocation.rst:38
msgid ""
"Note that this function is unsuitable if *typeobj* has :c:macro:"
"`Py_TPFLAGS_HAVE_GC` set. For such objects, use :c:func:`PyObject_GC_New` "
"instead."
msgstr ""
"توجه داشته باشید که اگر *typeobj* دارای:c:macro:`Py_TPFLAGS_HAVE_GC` مجموعه "
"باشد، این تابع نامناسب است. برای چنین اشیایی به جای آن از :c:func:"
"`PyObject_GC_New` استفاده کنید"

#: ../../c-api/allocation.rst:45
msgid ""
"Allocate a new Python object using the C structure type *TYPE* and the "
"Python type object *typeobj* (``PyTypeObject*``). Fields not defined by the "
"Python object header are not initialized.  The allocated memory allows for "
"the *TYPE* structure plus *size* (``Py_ssize_t``) fields of the size given "
"by the :c:member:`~PyTypeObject.tp_itemsize` field of *typeobj*.  This is "
"useful for implementing objects like tuples, which are able to determine "
"their size at construction time.  Embedding the array of fields into the "
"same allocation decreases the number of allocations, improving the memory "
"management efficiency."
msgstr ""
"یک شیء جدید پایتون را با استفاده از ساختار C نوع *TYPE* ​​و شیء نوع پایتون "
"*typeobj*(``PyTypeObject*``) اختصاص دهید. فیلدهایی که توسط هدر شی پایتون "
"تعریف نشده اند مقداردهی اولیه نمی شوند. حافظه تخصیص یافته اجازه می دهد تا "
"ساختار *TYPE* ​​به اضافه *size* (``Py_ssize_t``) فیلدهای اندازه داده شده توسط "
"فیلد :c:member:`~PyTypeObject.tp_itemsize` *typeobj*. این برای اجرای اشیایی "
"مانند تاپل ها که قادر به تعیین اندازه آنها در زمان ساخت هستند مفید است. "
"جاسازی آرایه فیلدها در یک تخصیص تعداد تخصیص ها را کاهش می دهد و کارایی "
"مدیریت حافظه را بهبود می بخشد."

#: ../../c-api/allocation.rst:56
msgid ""
"Note that this function is unsuitable if *typeobj* has :c:macro:"
"`Py_TPFLAGS_HAVE_GC` set. For such objects, use :c:func:`PyObject_GC_NewVar` "
"instead."
msgstr ""
"توجه داشته باشید که اگر *typeobj* دارای :c:macro:`Py_TPFLAGS_HAVE_GC` مجموعه "
"باشد، این تابع نامناسب است. برای چنین اشیایی به جای آن از :c:func:"
"`PyObject_GC_NewVar` استفاده کنید."

#: ../../c-api/allocation.rst:63
msgid ""
"Releases memory allocated to an object using :c:macro:`PyObject_New` or :c:"
"macro:`PyObject_NewVar`.  This is normally called from the :c:member:"
"`~PyTypeObject.tp_dealloc` handler specified in the object's type.  The "
"fields of the object should not be accessed after this call as the memory is "
"no longer a valid Python object."
msgstr ""
"حافظه اختصاص داده شده به یک شی را با استفاده از :c:macro:`PyObject_New` یا :"
"c:macro:`PyObject_NewVar` آزاد می کند. این معمولاً از کنترل کننده :c:member:"
"`~PyTypeObject.tp_dealloc` مشخص شده در نوع شیء ، فراخوانی می شود.  \n"
"پس از این فراخوانی نباید به فیلدهای شیء دسترسی داشت زیرا حافظه دیگر یک شیء "
"پایتون معتبر نیست."

#: ../../c-api/allocation.rst:72
msgid ""
"Object which is visible in Python as ``None``.  This should only be accessed "
"using the :c:macro:`Py_None` macro, which evaluates to a pointer to this "
"object."
msgstr ""
"شیئی که در پایتون به صورت ``None`` قابل مشاهده است\n"
"این فقط باید با استفاده از ماکرو :c:macro:`Py_None`، که به یک اشاره گر به "
"این شی ارزیابی می شود، دسترسی داشت."

#: ../../c-api/allocation.rst:79
msgid ":c:func:`PyModule_Create`"
msgstr ":c:func:`PyModule_Create`"

#: ../../c-api/allocation.rst:80
msgid "To allocate and create extension modules."
msgstr "برای تخصیص و ایجاد ماژول های افزونه."
