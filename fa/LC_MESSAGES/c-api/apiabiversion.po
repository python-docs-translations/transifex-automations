# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001 Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# Mehdi Batani, 2025
# Danial Behzadi <dani.behzi@ubuntu.com>, 2025
# Ariyan Bolandi, 2025
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.14\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-05-09 14:19+0000\n"
"PO-Revision-Date: 2021-06-28 00:47+0000\n"
"Last-Translator: Ariyan Bolandi, 2025\n"
"Language-Team: Persian (https://app.transifex.com/python-doc/teams/5390/"
"fa/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: fa\n"
"Plural-Forms: nplurals=2; plural=(n > 1);\n"

#: ../../c-api/apiabiversion.rst:7
msgid "API and ABI Versioning"
msgstr "نسخه سازی API و ABI"

#: ../../c-api/apiabiversion.rst:11
msgid "Build-time version constants"
msgstr "ثابت‌های نسخه در زمان ساخت "

#: ../../c-api/apiabiversion.rst:13
msgid ""
"CPython exposes its version number in the following macros. Note that these "
"correspond to the version code is **built** with. See :c:var:`Py_Version` "
"for the version used at **run time**."
msgstr ""
"CPython شماره نسخه اش را از طریق ماکروهای زیر در دسترس قرار می دهد. باید "
"توجه کرد که این‌ها مربوط به نسخه‌ هایی هستند که کد با آن ساخته شده. برای دیدن "
"نسخه‌ای که در زمان اجرا استفاده می شود، به :c:var:`Py_Version` رجوع کنید."

#: ../../c-api/apiabiversion.rst:17
msgid ""
"See :ref:`stable` for a discussion of API and ABI stability across versions."
msgstr ""
"برای بحث در مورد پایداری API و ABI در سراسر نسخه ها به :ref:`stable` مراجعه "
"کنید"

#: ../../c-api/apiabiversion.rst:21
msgid "The ``3`` in ``3.4.1a2``."
msgstr "``3``در ``3.4.1a2``"

#: ../../c-api/apiabiversion.rst:25
msgid "The ``4`` in ``3.4.1a2``."
msgstr "``4``در``3.4.1a2``"

#: ../../c-api/apiabiversion.rst:29
msgid "The ``1`` in ``3.4.1a2``."
msgstr "``1``در ``3.4.1a2``"

#: ../../c-api/apiabiversion.rst:33
msgid ""
"The ``a`` in ``3.4.1a2``. This can be ``0xA`` for alpha, ``0xB`` for beta, "
"``0xC`` for release candidate or ``0xF`` for final."
msgstr ""
"``a``در``3.4.1a2``.می تواند ``0xA``برای آلفا باشد،``0xB``برای بتا،"
"``0xC``برای کاندیدای انتشار،``0xF``برای پایانی."

#: ../../c-api/apiabiversion.rst:39
msgid "The ``2`` in ``3.4.1a2``. Zero for final releases."
msgstr "``2``در ``3.4.1a2``.صفر هم برای آخرین انتشار."

#: ../../c-api/apiabiversion.rst:43
msgid ""
"The Python version number encoded in a single integer. See :c:func:"
"`Py_PACK_FULL_VERSION` for the encoding details."
msgstr ""
"شماره نسخه پایتون در یک عدد صحیح رمزنگاری می شود. برای اطلاعات بیشتر درباره "
"رمزنگاری به :c:func:`Py_PACK_FULL_VERSION` رجوع کنید."

#: ../../c-api/apiabiversion.rst:46
msgid ""
"Use this for numeric comparisons, for example, ``#if PY_VERSION_HEX >= ...``."
msgstr ""
"از این مثال های عددی استفاده کنید. برای مثال : ``#if PY_VERSION_HEX >= ...``"

#: ../../c-api/apiabiversion.rst:51
msgid "Run-time version"
msgstr "نسخه زمان-اجرا "

#: ../../c-api/apiabiversion.rst:55
msgid ""
"The Python runtime version number encoded in a single constant integer. See :"
"c:func:`Py_PACK_FULL_VERSION` for the encoding details. This contains the "
"Python version used at run time."
msgstr ""
"نسخه زمان-اجرا پایتون در یک عدد صحیح غیرقابل تغییر رمزنگاری می شود.\n"
"برای اطلاعات و جزئیات بیشتر به :c:func:`Py_PACK_FULL_VERSION` رجوع کنید.\n"
"این لینک نسخه پایتون در زمان-اجرا را نیز شامل می شود."

#: ../../c-api/apiabiversion.rst:59
msgid ""
"Use this for numeric comparisons, for example, ``if (Py_Version >= ...)``."
msgstr ""
"از این مثال های عددی استفاده کنید برای مثال: ``if (Py_Version >= ...)``"

#: ../../c-api/apiabiversion.rst:65
msgid "Bit-packing macros"
msgstr "پک بندی یا بسته بندی بیت ماکرو ها"

#: ../../c-api/apiabiversion.rst:69
msgid ""
"Return the given version, encoded as a single 32-bit integer with the "
"following structure:"
msgstr ""
"مقدار داده شده ورژن را باز می گرداند, این مقدار به عنوان یک عدد صحیح 32 بیتی "
"با ساختار زیر رمزنگاری می شود:"

#: ../../c-api/apiabiversion.rst:75
msgid "Argument"
msgstr "آرگومان"

#: ../../c-api/apiabiversion.rst:73
msgid "No. of bits"
msgstr "تعداد بیت‌ها"

#: ../../c-api/apiabiversion.rst:75
msgid "Bit mask"
msgstr "بیت ماسک "

#: ../../c-api/apiabiversion.rst:75
msgid "Bit shift"
msgstr "جابجایی بیت "

#: ../../c-api/apiabiversion.rst:73
msgid "Example values"
msgstr "مثال متغیر ها"

#: ../../c-api/apiabiversion.rst:75 ../../c-api/apiabiversion.rst:93
msgid "``3.4.1a2``"
msgstr "``3.4.1a2``"

#: ../../c-api/apiabiversion.rst:75 ../../c-api/apiabiversion.rst:95
msgid "``3.10.0``"
msgstr "``3.10.0``"

#: ../../c-api/apiabiversion.rst:77
msgid "*major*"
msgstr "بزرگ "

#: ../../c-api/apiabiversion.rst:77 ../../c-api/apiabiversion.rst:79
#: ../../c-api/apiabiversion.rst:81
msgid "8"
msgstr "8"

#: ../../c-api/apiabiversion.rst:77
msgid "``0xFF000000``"
msgstr ""

#: ../../c-api/apiabiversion.rst:77
msgid "24"
msgstr ""

#: ../../c-api/apiabiversion.rst:77
msgid "``0x03``"
msgstr "``0x03``"

#: ../../c-api/apiabiversion.rst:79
msgid "*minor*"
msgstr ""

#: ../../c-api/apiabiversion.rst:79
msgid "``0x00FF0000``"
msgstr ""

#: ../../c-api/apiabiversion.rst:79
msgid "16"
msgstr ""

#: ../../c-api/apiabiversion.rst:79
msgid "``0x04``"
msgstr "``0x04``"

#: ../../c-api/apiabiversion.rst:79
msgid "``0x0A``"
msgstr ""

#: ../../c-api/apiabiversion.rst:81
msgid "*micro*"
msgstr ""

#: ../../c-api/apiabiversion.rst:81
msgid "``0x0000FF00``"
msgstr ""

#: ../../c-api/apiabiversion.rst:81
msgid "``0x01``"
msgstr "``0x01``"

#: ../../c-api/apiabiversion.rst:81
msgid "``0x00``"
msgstr ""

#: ../../c-api/apiabiversion.rst:83
msgid "*release_level*"
msgstr ""

#: ../../c-api/apiabiversion.rst:83 ../../c-api/apiabiversion.rst:85
msgid "4"
msgstr "4"

#: ../../c-api/apiabiversion.rst:83
msgid "``0x000000F0``"
msgstr ""

#: ../../c-api/apiabiversion.rst:83
msgid "``0xA``"
msgstr "``0xA``"

#: ../../c-api/apiabiversion.rst:83
msgid "``0xF``"
msgstr ""

#: ../../c-api/apiabiversion.rst:85
msgid "*release_serial*"
msgstr ""

#: ../../c-api/apiabiversion.rst:85
msgid "``0x0000000F``"
msgstr ""

#: ../../c-api/apiabiversion.rst:85
msgid "0"
msgstr "۰"

#: ../../c-api/apiabiversion.rst:85
msgid "``0x2``"
msgstr "``0x2``"

#: ../../c-api/apiabiversion.rst:85
msgid "``0x0``"
msgstr ""

#: ../../c-api/apiabiversion.rst:88
msgid "For example:"
msgstr ""

#: ../../c-api/apiabiversion.rst:91
msgid "Version"
msgstr ""

#: ../../c-api/apiabiversion.rst:91
msgid "``Py_PACK_FULL_VERSION`` arguments"
msgstr ""

#: ../../c-api/apiabiversion.rst:91
msgid "Encoded version"
msgstr ""

#: ../../c-api/apiabiversion.rst:93
msgid "``(3, 4, 1, 0xA, 2)``"
msgstr ""

#: ../../c-api/apiabiversion.rst:93
msgid "``0x030401a2``"
msgstr ""

#: ../../c-api/apiabiversion.rst:95
msgid "``(3, 10, 0, 0xF, 0)``"
msgstr ""

#: ../../c-api/apiabiversion.rst:95
msgid "``0x030a00f0``"
msgstr ""

#: ../../c-api/apiabiversion.rst:98
msgid ""
"Out-of range bits in the arguments are ignored. That is, the macro can be "
"defined as:"
msgstr ""

#: ../../c-api/apiabiversion.rst:101
msgid ""
"#ifndef Py_PACK_FULL_VERSION\n"
"#define Py_PACK_FULL_VERSION(X, Y, Z, LEVEL, SERIAL) ( \\\n"
"   (((X) & 0xff) << 24) |                              \\\n"
"   (((Y) & 0xff) << 16) |                              \\\n"
"   (((Z) & 0xff) << 8) |                               \\\n"
"   (((LEVEL) & 0xf) << 4) |                            \\\n"
"   (((SERIAL) & 0xf) << 0))\n"
"#endif"
msgstr ""

#: ../../c-api/apiabiversion.rst:112
msgid ""
"``Py_PACK_FULL_VERSION`` is primarily a macro, intended for use in ``#if`` "
"directives, but it is also available as an exported function."
msgstr ""

#: ../../c-api/apiabiversion.rst:119
msgid ""
"Equivalent to ``Py_PACK_FULL_VERSION(major, minor, 0, 0, 0)``. The result "
"does not correspond to any Python release, but is useful in numeric "
"comparisons."
msgstr ""
