# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001 Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# python-doc bot, 2025
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.14\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-08-07 20:38+0000\n"
"PO-Revision-Date: 2025-08-02 17:34+0000\n"
"Last-Translator: python-doc bot, 2025\n"
"Language-Team: Persian (https://app.transifex.com/python-doc/teams/5390/"
"fa/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: fa\n"
"Plural-Forms: nplurals=2; plural=(n > 1);\n"

#: ../../library/turtle.rst:3
msgid ":mod:`!turtle` --- Turtle graphics"
msgstr ""

#: ../../library/turtle.rst:10
msgid "**Source code:** :source:`Lib/turtle.py`"
msgstr "**Kod źródłowy:** :source:`Lib/turtle.py`"

#: ../../library/turtle.rst:25
msgid "Introduction"
msgstr "مقدمه"

#: ../../library/turtle.rst:27
msgid ""
"Turtle graphics is an implementation of `the popular geometric drawing tools "
"introduced in Logo <https://en.wikipedia.org/wiki/Turtle_ (robot)>`_, "
"developed by Wally Feurzeig, Seymour Papert and Cynthia Solomon in 1967."
msgstr ""

#: ../../library/turtle.rst:34
msgid "Get started"
msgstr ""

#: ../../library/turtle.rst:36
msgid ""
"Imagine a robotic turtle starting at (0, 0) in the x-y plane.  After an "
"``import turtle``, give it the command ``turtle.forward(15)``, and it moves "
"(on-screen!) 15 pixels in the direction it is facing, drawing a line as it "
"moves.  Give it the command ``turtle.right(25)``, and it rotates in-place 25 "
"degrees clockwise."
msgstr ""
"Уявіть собі роботизовану черепаху, що починається в (0, 0) у площині x-y. "
"Після ``імпорту черепахи`` дайте їй команду ``turtle.forward(15)``, і вона "
"переміститься (на екрані!) на 15 пікселів у напрямку, куди дивиться, малюючи "
"лінію під час руху. Дайте йому команду ``turtle.right(25)``, і він "
"повернеться на місці на 25 градусів за годинниковою стрілкою."

#: ../../library/turtle.rst:43
msgid ""
"Turtle can draw intricate shapes using programs that repeat simple moves."
msgstr ""
"Żółw może rysować skomplikowane kształty za pomocą programów, które "
"powtarzają proste ruchy."

#: ../../library/turtle.rst:49
msgid ""
"In Python, turtle graphics provides a representation of a physical "
"\"turtle\" (a little robot with a pen) that draws on a sheet of paper on the "
"floor."
msgstr ""

#: ../../library/turtle.rst:52
msgid ""
"It's an effective and well-proven way for learners to encounter programming "
"concepts and interaction with software, as it provides instant, visible "
"feedback. It also provides convenient access to graphical output in general."
msgstr ""

#: ../../library/turtle.rst:57
msgid ""
"Turtle drawing was originally created as an educational tool, to be used by "
"teachers in the classroom. For the programmer who needs to produce some "
"graphical output it can be a way to do that without the overhead of "
"introducing more complex or external libraries into their work."
msgstr ""

#: ../../library/turtle.rst:66
msgid "Tutorial"
msgstr "خودآموز"

#: ../../library/turtle.rst:68
msgid ""
"New users should start here. In this tutorial we'll explore some of the "
"basics of turtle drawing."
msgstr ""

#: ../../library/turtle.rst:73
msgid "Starting a turtle environment"
msgstr ""

#: ../../library/turtle.rst:75
msgid "In a Python shell, import all the objects of the ``turtle`` module::"
msgstr ""

#: ../../library/turtle.rst:77
msgid "from turtle import *"
msgstr ""

#: ../../library/turtle.rst:79
msgid ""
"If you run into a ``No module named '_tkinter'`` error, you'll have to "
"install the :mod:`Tk interface package <tkinter>` on your system."
msgstr ""

#: ../../library/turtle.rst:84
msgid "Basic drawing"
msgstr ""

#: ../../library/turtle.rst:86
msgid "Send the turtle forward 100 steps::"
msgstr ""

#: ../../library/turtle.rst:88
msgid "forward(100)"
msgstr ""

#: ../../library/turtle.rst:90
msgid ""
"You should see (most likely, in a new window on your display) a line drawn "
"by the turtle, heading East. Change the direction of the turtle, so that it "
"turns 120 degrees left (anti-clockwise)::"
msgstr ""

#: ../../library/turtle.rst:94
msgid "left(120)"
msgstr ""

#: ../../library/turtle.rst:96
msgid "Let's continue by drawing a triangle::"
msgstr ""

#: ../../library/turtle.rst:98
msgid ""
"forward(100)\n"
"left(120)\n"
"forward(100)"
msgstr ""

#: ../../library/turtle.rst:102
msgid ""
"Notice how the turtle, represented by an arrow, points in different "
"directions as you steer it."
msgstr ""

#: ../../library/turtle.rst:105
msgid ""
"Experiment with those commands, and also with ``backward()`` and ``right()``."
msgstr ""

#: ../../library/turtle.rst:110 ../../library/turtle.rst:364
#: ../../library/turtle.rst:1058
msgid "Pen control"
msgstr "Kontrola pióra"

#: ../../library/turtle.rst:112
msgid ""
"Try changing the color - for example, ``color('blue')`` - and width of the "
"line - for example, ``width(3)`` - and then drawing again."
msgstr ""

#: ../../library/turtle.rst:115
msgid ""
"You can also move the turtle around without drawing, by lifting up the pen: "
"``up()`` before moving. To start drawing again, use ``down()``."
msgstr ""

#: ../../library/turtle.rst:120
msgid "The turtle's position"
msgstr ""

#: ../../library/turtle.rst:122
msgid ""
"Send your turtle back to its starting-point (useful if it has disappeared "
"off-screen)::"
msgstr ""

#: ../../library/turtle.rst:125
msgid "home()"
msgstr ""

#: ../../library/turtle.rst:127
msgid ""
"The home position is at the center of the turtle's screen. If you ever need "
"to know them, get the turtle's x-y coordinates with::"
msgstr ""

#: ../../library/turtle.rst:130
msgid "pos()"
msgstr ""

#: ../../library/turtle.rst:132
msgid "Home is at ``(0, 0)``."
msgstr ""

#: ../../library/turtle.rst:134
msgid ""
"And after a while, it will probably help to clear the window so we can start "
"anew::"
msgstr ""

#: ../../library/turtle.rst:137
msgid "clearscreen()"
msgstr ""

#: ../../library/turtle.rst:141
msgid "Making algorithmic patterns"
msgstr ""

#: ../../library/turtle.rst:143
msgid "Using loops, it's possible to build up geometric patterns::"
msgstr ""

#: ../../library/turtle.rst:145
msgid ""
"for steps in range(100):\n"
"    for c in ('blue', 'red', 'green'):\n"
"        color(c)\n"
"        forward(steps)\n"
"        right(30)"
msgstr ""

#: ../../library/turtle.rst:152
msgid "\\ - which of course, are limited only by the imagination!"
msgstr ""

#: ../../library/turtle.rst:154
msgid ""
"Let's draw the star shape at the top of this page. We want red lines, filled "
"in with yellow::"
msgstr ""

#: ../../library/turtle.rst:157
msgid ""
"color('red')\n"
"fillcolor('yellow')"
msgstr ""

#: ../../library/turtle.rst:160
msgid ""
"Just as ``up()`` and ``down()`` determine whether lines will be drawn, "
"filling can be turned on and off::"
msgstr ""

#: ../../library/turtle.rst:163
msgid "begin_fill()"
msgstr ""

#: ../../library/turtle.rst:165
msgid "Next we'll create a loop::"
msgstr ""

#: ../../library/turtle.rst:167
msgid ""
"while True:\n"
"    forward(200)\n"
"    left(170)\n"
"    if abs(pos()) < 1:\n"
"        break"
msgstr ""

#: ../../library/turtle.rst:173
msgid ""
"``abs(pos()) < 1`` is a good way to know when the turtle is back at its home "
"position."
msgstr ""

#: ../../library/turtle.rst:176
msgid "Finally, complete the filling::"
msgstr ""

#: ../../library/turtle.rst:178
msgid "end_fill()"
msgstr ""

#: ../../library/turtle.rst:180
msgid ""
"(Note that filling only actually takes place when you give the "
"``end_fill()`` command.)"
msgstr ""

#: ../../library/turtle.rst:187
msgid "How to..."
msgstr ""

#: ../../library/turtle.rst:189
msgid "This section covers some typical turtle use-cases and approaches."
msgstr ""

#: ../../library/turtle.rst:193
msgid "Get started as quickly as possible"
msgstr ""

#: ../../library/turtle.rst:195
msgid ""
"One of the joys of turtle graphics is the immediate, visual feedback that's "
"available from simple commands - it's an excellent way to introduce children "
"to programming ideas, with a minimum of overhead (not just children, of "
"course)."
msgstr ""

#: ../../library/turtle.rst:200
msgid ""
"The turtle module makes this possible by exposing all its basic "
"functionality as functions, available with ``from turtle import *``. The :"
"ref:`turtle graphics tutorial <turtle-tutorial>` covers this approach."
msgstr ""

#: ../../library/turtle.rst:204
msgid ""
"It's worth noting that many of the turtle commands also have even more terse "
"equivalents, such as ``fd()`` for :func:`forward`. These are especially "
"useful when working with learners for whom typing is not a skill."
msgstr ""

#: ../../library/turtle.rst:210
msgid ""
"You'll need to have the :mod:`Tk interface package <tkinter>` installed on "
"your system for turtle graphics to work. Be warned that this is not always "
"straightforward, so check this in advance if you're planning to use turtle "
"graphics with a learner."
msgstr ""

#: ../../library/turtle.rst:217
msgid "Automatically begin and end filling"
msgstr ""

#: ../../library/turtle.rst:219
msgid ""
"Starting with Python 3.14, you can use the :func:`fill` :term:`context "
"manager` instead of :func:`begin_fill` and :func:`end_fill` to automatically "
"begin and end fill. Here is an example::"
msgstr ""

#: ../../library/turtle.rst:223
msgid ""
"with fill():\n"
"    for i in range(4):\n"
"        forward(100)\n"
"        right(90)\n"
"\n"
"forward(200)"
msgstr ""

#: ../../library/turtle.rst:230
msgid "The code above is equivalent to::"
msgstr ""

#: ../../library/turtle.rst:232
msgid ""
"begin_fill()\n"
"for i in range(4):\n"
"    forward(100)\n"
"    right(90)\n"
"end_fill()\n"
"\n"
"forward(200)"
msgstr ""

#: ../../library/turtle.rst:242
msgid "Use the ``turtle`` module namespace"
msgstr ""

#: ../../library/turtle.rst:244
msgid ""
"Using ``from turtle import *`` is convenient - but be warned that it imports "
"a rather large collection of objects, and if you're doing anything but "
"turtle graphics you run the risk of a name conflict (this becomes even more "
"an issue if you're using turtle graphics in a script where other modules "
"might be imported)."
msgstr ""

#: ../../library/turtle.rst:250
msgid ""
"The solution is to use ``import turtle`` - ``fd()`` becomes ``turtle.fd()``, "
"``width()`` becomes ``turtle.width()`` and so on. (If typing \"turtle\" over "
"and over again becomes tedious, use for example ``import turtle as t`` "
"instead.)"
msgstr ""

#: ../../library/turtle.rst:257
msgid "Use turtle graphics in a script"
msgstr ""

#: ../../library/turtle.rst:259
msgid ""
"It's recommended to use the ``turtle`` module namespace as described "
"immediately above, for example::"
msgstr ""

#: ../../library/turtle.rst:262
msgid ""
"import turtle as t\n"
"from random import random\n"
"\n"
"for i in range(100):\n"
"    steps = int(random() * 100)\n"
"    angle = int(random() * 360)\n"
"    t.right(angle)\n"
"    t.fd(steps)"
msgstr ""

#: ../../library/turtle.rst:271
msgid ""
"Another step is also required though - as soon as the script ends, Python "
"will also close the turtle's window. Add::"
msgstr ""

#: ../../library/turtle.rst:274
msgid "t.mainloop()"
msgstr ""

#: ../../library/turtle.rst:276
msgid ""
"to the end of the script. The script will now wait to be dismissed and will "
"not exit until it is terminated, for example by closing the turtle graphics "
"window."
msgstr ""

#: ../../library/turtle.rst:282
msgid "Use object-oriented turtle graphics"
msgstr ""

#: ../../library/turtle.rst:284
msgid ""
":ref:`Explanation of the object-oriented interface <turtle-explanation>`"
msgstr ""

#: ../../library/turtle.rst:286
msgid ""
"Other than for very basic introductory purposes, or for trying things out as "
"quickly as possible, it's more usual and much more powerful to use the "
"object-oriented approach to turtle graphics. For example, this allows "
"multiple turtles on screen at once."
msgstr ""

#: ../../library/turtle.rst:291
msgid ""
"In this approach, the various turtle commands are methods of objects (mostly "
"of ``Turtle`` objects). You *can* use the object-oriented approach in the "
"shell, but it would be more typical in a Python script."
msgstr ""

#: ../../library/turtle.rst:295
msgid "The example above then becomes::"
msgstr ""

#: ../../library/turtle.rst:297
msgid ""
"from turtle import Turtle\n"
"from random import random\n"
"\n"
"t = Turtle()\n"
"for i in range(100):\n"
"    steps = int(random() * 100)\n"
"    angle = int(random() * 360)\n"
"    t.right(angle)\n"
"    t.fd(steps)\n"
"\n"
"t.screen.mainloop()"
msgstr ""

#: ../../library/turtle.rst:309
msgid ""
"Note the last line. ``t.screen`` is an instance of the :class:`Screen` that "
"a Turtle instance exists on; it's created automatically along with the "
"turtle."
msgstr ""

#: ../../library/turtle.rst:313
msgid "The turtle's screen can be customised, for example::"
msgstr ""

#: ../../library/turtle.rst:315
msgid ""
"t.screen.title('Object-oriented turtle demo')\n"
"t.screen.bgcolor(\"orange\")"
msgstr ""

#: ../../library/turtle.rst:320
msgid "Turtle graphics reference"
msgstr ""

#: ../../library/turtle.rst:324
msgid ""
"In the following documentation the argument list for functions is given. "
"Methods, of course, have the additional first argument *self* which is "
"omitted here."
msgstr ""
"W poniższej dokumentacji podano listę argumentów dla funkcji. Metody, "
"oczywiście, mają dodatkowy pierwszy argument *self*, który jest tutaj "
"pominięty."

#: ../../library/turtle.rst:330
msgid "Turtle methods"
msgstr "Metody żółwia"

#: ../../library/turtle.rst:332 ../../library/turtle.rst:475
msgid "Turtle motion"
msgstr "Ruch żółwia"

#: ../../library/turtle.rst:333
msgid "Move and draw"
msgstr "Przesuwanie i rysowanie"

#: ../../library/turtle.rst:0
msgid ":func:`forward` | :func:`fd`"
msgstr ":func:`forward` | :func:`fd`"

#: ../../library/turtle.rst:0
msgid ":func:`backward` | :func:`bk` | :func:`back`"
msgstr ":func:`backward` | :func:`bk` | :func:`back`"

#: ../../library/turtle.rst:0
msgid ":func:`right` | :func:`rt`"
msgstr ":func:`right` | :func:`rt`"

#: ../../library/turtle.rst:0
msgid ":func:`left` | :func:`lt`"
msgstr ":func:`left` | :func:`lt`"

#: ../../library/turtle.rst:0
msgid ":func:`goto` | :func:`setpos` | :func:`setposition`"
msgstr ":func:`goto` | :func:`setpos` | :func:`setposition`"

#: ../../library/turtle.rst:0
msgid ":func:`teleport`"
msgstr ""

#: ../../library/turtle.rst:0
msgid ":func:`setx`"
msgstr ":func:`setx`"

#: ../../library/turtle.rst:0
msgid ":func:`sety`"
msgstr ":func:`sety`"

#: ../../library/turtle.rst:0
msgid ":func:`setheading` | :func:`seth`"
msgstr ":func:`setheading` | :func:`seth`"

#: ../../library/turtle.rst:0
msgid ":func:`home`"
msgstr ":func:`home`"

#: ../../library/turtle.rst:0 ../../library/turtle.rst:2832
msgid ":func:`circle`"
msgstr ":func:`circle`"

#: ../../library/turtle.rst:0
msgid ":func:`dot`"
msgstr ":func:`dot`"

#: ../../library/turtle.rst:0 ../../library/turtle.rst:2810
msgid ":func:`stamp`"
msgstr ":func:`stamp`"

#: ../../library/turtle.rst:0
msgid ":func:`clearstamp`"
msgstr ":func:`clearstamp`"

#: ../../library/turtle.rst:0
msgid ":func:`clearstamps`"
msgstr ":func:`clearstamps`"

#: ../../library/turtle.rst:0
msgid ":func:`undo`"
msgstr ":func:`undo`"

#: ../../library/turtle.rst:0
msgid ":func:`speed`"
msgstr ":func:`speed`"

#: ../../library/turtle.rst:352 ../../library/turtle.rst:907
msgid "Tell Turtle's state"
msgstr "Pobieranie stanu żółwia"

#: ../../library/turtle.rst:0
msgid ":func:`position` | :func:`pos`"
msgstr ":func:`position` | :func:`pos`"

#: ../../library/turtle.rst:0
msgid ":func:`towards`"
msgstr ":func:`towards`"

#: ../../library/turtle.rst:0
msgid ":func:`xcor`"
msgstr ":func:`xcor`"

#: ../../library/turtle.rst:0
msgid ":func:`ycor`"
msgstr ":func:`ycor`"

#: ../../library/turtle.rst:0
msgid ":func:`heading`"
msgstr ":func:`heading`"

#: ../../library/turtle.rst:0
msgid ":func:`distance`"
msgstr ":func:`distance`"

#: ../../library/turtle.rst:360
msgid "Setting and measurement"
msgstr "Ustawienia i pomiary"

#: ../../library/turtle.rst:0
msgid ":func:`degrees`"
msgstr ":func:`degrees`"

#: ../../library/turtle.rst:0
msgid ":func:`radians`"
msgstr ":func:`radians`"

#: ../../library/turtle.rst:365 ../../library/turtle.rst:1061
msgid "Drawing state"
msgstr "Stan rysowania"

#: ../../library/turtle.rst:0
msgid ":func:`pendown` | :func:`pd` | :func:`down`"
msgstr ":func:`pendown` | :func:`pd` | :func:`down`"

#: ../../library/turtle.rst:0
msgid ":func:`penup` | :func:`pu` | :func:`up`"
msgstr ":func:`penup` | :func:`pu` | :func:`up`"

#: ../../library/turtle.rst:0
msgid ":func:`pensize` | :func:`width`"
msgstr ":func:`pensize` | :func:`width`"

#: ../../library/turtle.rst:0
msgid ":func:`pen`"
msgstr ":func:`pen`"

#: ../../library/turtle.rst:0
msgid ":func:`isdown`"
msgstr ":func:`isdown`"

#: ../../library/turtle.rst:372 ../../library/turtle.rst:1153
msgid "Color control"
msgstr "Kontrola koloru"

#: ../../library/turtle.rst:0
msgid ":func:`color`"
msgstr ":func:`color`"

#: ../../library/turtle.rst:0
msgid ":func:`pencolor`"
msgstr ":func:`pencolor`"

#: ../../library/turtle.rst:0
msgid ":func:`fillcolor`"
msgstr ":func:`fillcolor`"

#: ../../library/turtle.rst:377 ../../library/turtle.rst:1285
msgid "Filling"
msgstr "Wypełnienie"

#: ../../library/turtle.rst:0
msgid ":func:`filling`"
msgstr ":func:`filling`"

#: ../../library/turtle.rst:0
msgid ":func:`fill`"
msgstr ""

#: ../../library/turtle.rst:0
msgid ":func:`begin_fill`"
msgstr ":func:`begin_fill`"

#: ../../library/turtle.rst:0
msgid ":func:`end_fill`"
msgstr ":func:`end_fill`"

#: ../../library/turtle.rst:383 ../../library/turtle.rst:1355
msgid "More drawing control"
msgstr "Więcej kontroli rysowania"

#: ../../library/turtle.rst:0
msgid ":func:`reset`"
msgstr ":func:`reset`"

#: ../../library/turtle.rst:0
msgid ":func:`clear`"
msgstr ":func:`clear`"

#: ../../library/turtle.rst:0
msgid ":func:`write`"
msgstr ":func:`write`"

#: ../../library/turtle.rst:388 ../../library/turtle.rst:1401
msgid "Turtle state"
msgstr "Stan żółwia"

#: ../../library/turtle.rst:389 ../../library/turtle.rst:1404
msgid "Visibility"
msgstr "Widoczność"

#: ../../library/turtle.rst:0
msgid ":func:`showturtle` | :func:`st`"
msgstr ":func:`showturtle` | :func:`st`"

#: ../../library/turtle.rst:0
msgid ":func:`hideturtle` | :func:`ht`"
msgstr ":func:`hideturtle` | :func:`ht`"

#: ../../library/turtle.rst:0
msgid ":func:`isvisible`"
msgstr ":func:`isvisible`"

#: ../../library/turtle.rst:394 ../../library/turtle.rst:1443
msgid "Appearance"
msgstr "Wygląd"

#: ../../library/turtle.rst:0
msgid ":func:`shape`"
msgstr ":func:`shape`"

#: ../../library/turtle.rst:0
msgid ":func:`resizemode`"
msgstr ":func:`resizemode`"

#: ../../library/turtle.rst:0
msgid ":func:`shapesize` | :func:`turtlesize`"
msgstr ":func:`shapesize` | :func:`turtlesize`"

#: ../../library/turtle.rst:0
msgid ":func:`shearfactor`"
msgstr ":func:`shearfactor`"

#: ../../library/turtle.rst:0
msgid ":func:`tiltangle`"
msgstr ":func:`tiltangle`"

#: ../../library/turtle.rst:0
msgid ":func:`tilt`"
msgstr ":func:`tilt`"

#: ../../library/turtle.rst:0
msgid ":func:`shapetransform`"
msgstr ":func:`shapetransform`"

#: ../../library/turtle.rst:0
msgid ":func:`get_shapepoly`"
msgstr ":func:`get_shapepoly`"

#: ../../library/turtle.rst:404 ../../library/turtle.rst:1626
msgid "Using events"
msgstr "Korzystanie ze zdarzeń"

#: ../../library/turtle.rst:0 ../../library/turtle.rst:2804
msgid ":func:`onclick`"
msgstr ":func:`onclick`"

#: ../../library/turtle.rst:0
msgid ":func:`onrelease`"
msgstr ":func:`onrelease`"

#: ../../library/turtle.rst:0 ../../library/turtle.rst:2787
msgid ":func:`ondrag`"
msgstr ":func:`ondrag`"

#: ../../library/turtle.rst:409 ../../library/turtle.rst:1700
msgid "Special Turtle methods"
msgstr "Specjalne metody żółwi"

#: ../../library/turtle.rst:0
msgid ":func:`poly`"
msgstr ""

#: ../../library/turtle.rst:0
msgid ":func:`begin_poly`"
msgstr ":func:`begin_poly`"

#: ../../library/turtle.rst:0
msgid ":func:`end_poly`"
msgstr ":func:`end_poly`"

#: ../../library/turtle.rst:0
msgid ":func:`get_poly`"
msgstr ":func:`get_poly`"

#: ../../library/turtle.rst:0 ../../library/turtle.rst:2826
msgid ":func:`clone`"
msgstr ":func:`clone`"

#: ../../library/turtle.rst:0
msgid ":func:`getturtle` | :func:`getpen`"
msgstr ":func:`getturtle` | :func:`getpen`"

#: ../../library/turtle.rst:0
msgid ":func:`getscreen`"
msgstr ":func:`getscreen`"

#: ../../library/turtle.rst:0
msgid ":func:`setundobuffer`"
msgstr ":func:`setundobuffer`"

#: ../../library/turtle.rst:0
msgid ":func:`undobufferentries`"
msgstr ":func:`undobufferentries`"

#: ../../library/turtle.rst:422
msgid "Methods of TurtleScreen/Screen"
msgstr "Metody TurtleScreen/Screen"

#: ../../library/turtle.rst:424 ../../library/turtle.rst:1871
msgid "Window control"
msgstr "Kontrola okna"

#: ../../library/turtle.rst:0
msgid ":func:`bgcolor`"
msgstr ":func:`bgcolor`"

#: ../../library/turtle.rst:0
msgid ":func:`bgpic`"
msgstr ":func:`bgpic`"

#: ../../library/turtle.rst:0
msgid ":func:`clearscreen`"
msgstr ":func:`clearscreen`"

#: ../../library/turtle.rst:0
msgid ":func:`resetscreen`"
msgstr ":func:`resetscreen`"

#: ../../library/turtle.rst:0
msgid ":func:`screensize`"
msgstr ":func:`screensize`"

#: ../../library/turtle.rst:0
msgid ":func:`setworldcoordinates`"
msgstr ":func:`setworldcoordinates`"

#: ../../library/turtle.rst:432 ../../library/turtle.rst:1995
msgid "Animation control"
msgstr "Kontrola animacji"

#: ../../library/turtle.rst:0
msgid ":func:`no_animation`"
msgstr ""

#: ../../library/turtle.rst:0
msgid ":func:`delay`"
msgstr ":func:`delay`"

#: ../../library/turtle.rst:0
msgid ":func:`tracer`"
msgstr ":func:`tracer`"

#: ../../library/turtle.rst:0
msgid ":func:`update`"
msgstr ":func:`update`"

#: ../../library/turtle.rst:438 ../../library/turtle.rst:2065
msgid "Using screen events"
msgstr "Korzystanie ze zdarzeń ekranowych"

#: ../../library/turtle.rst:0
msgid ":func:`listen`"
msgstr ":func:`listen`"

#: ../../library/turtle.rst:0
msgid ":func:`onkey` | :func:`onkeyrelease`"
msgstr ":func:`onkey` | :func:`onkeyrelease`"

#: ../../library/turtle.rst:0
msgid ":func:`onkeypress`"
msgstr ":func:`onkeypress`"

#: ../../library/turtle.rst:0
msgid ":func:`onclick` | :func:`onscreenclick`"
msgstr ":func:`onclick` | :func:`onscreenclick`"

#: ../../library/turtle.rst:0
msgid ":func:`ontimer`"
msgstr ":func:`ontimer`"

#: ../../library/turtle.rst:0
msgid ":func:`mainloop` | :func:`done`"
msgstr ":func:`mainloop` | :func:`done`"

#: ../../library/turtle.rst:446 ../../library/turtle.rst:2210
msgid "Settings and special methods"
msgstr "Ustawienia i metody specjalne"

#: ../../library/turtle.rst:0
msgid ":func:`mode`"
msgstr ":func:`mode`"

#: ../../library/turtle.rst:0
msgid ":func:`colormode`"
msgstr ":func:`colormode`"

#: ../../library/turtle.rst:0
msgid ":func:`getcanvas`"
msgstr ":func:`getcanvas`"

#: ../../library/turtle.rst:0
msgid ":func:`getshapes`"
msgstr ":func:`getshapes`"

#: ../../library/turtle.rst:0
msgid ":func:`register_shape` | :func:`addshape`"
msgstr ":func:`register_shape` | :func:`addshape`"

#: ../../library/turtle.rst:0
msgid ":func:`turtles`"
msgstr ":func:`turtles`"

#: ../../library/turtle.rst:0
msgid ":func:`window_height`"
msgstr ":func:`window_height`"

#: ../../library/turtle.rst:0
msgid ":func:`window_width`"
msgstr ":func:`window_width`"

#: ../../library/turtle.rst:456 ../../library/turtle.rst:2174
msgid "Input methods"
msgstr "Metody wprowadzania danych"

#: ../../library/turtle.rst:0
msgid ":func:`textinput`"
msgstr ":func:`textinput`"

#: ../../library/turtle.rst:0
msgid ":func:`numinput`"
msgstr ":func:`numinput`"

#: ../../library/turtle.rst:460
msgid "Methods specific to Screen"
msgstr "Metody specyficzne dla klasy Screen"

#: ../../library/turtle.rst:0
msgid ":func:`bye`"
msgstr ":func:`bye`"

#: ../../library/turtle.rst:0
msgid ":func:`exitonclick`"
msgstr ":func:`exitonclick`"

#: ../../library/turtle.rst:0
msgid ":func:`save`"
msgstr ""

#: ../../library/turtle.rst:0
msgid ":func:`setup`"
msgstr ":func:`setup`"

#: ../../library/turtle.rst:0
msgid ":func:`title`"
msgstr ":func:`title`"

#: ../../library/turtle.rst:469
msgid "Methods of RawTurtle/Turtle and corresponding functions"
msgstr "Metody RawTurtle/Turtle i odpowiadające im funkcje"

#: ../../library/turtle.rst:471
msgid ""
"Most of the examples in this section refer to a Turtle instance called "
"``turtle``."
msgstr ""
"Większość przykładów w tej sekcji odnosi się do instancji klasy Turtle o "
"nazwie ``turtle``."

#: ../../library/turtle.rst:0
msgid "Parameters"
msgstr "پارامترها"

#: ../../library/turtle.rst:480 ../../library/turtle.rst:525
#: ../../library/turtle.rst:550 ../../library/turtle.rst:648
#: ../../library/turtle.rst:671 ../../library/turtle.rst:694
msgid "a number (integer or float)"
msgstr "liczba (całkowita lub zmiennoprzecinkowa)"

#: ../../library/turtle.rst:482
msgid ""
"Move the turtle forward by the specified *distance*, in the direction the "
"turtle is headed."
msgstr ""
"Przesuwa żółwia do przodu o określony *dystans*, w kierunku, w którym żółw "
"jest skierowany."

#: ../../library/turtle.rst:485
msgid ""
">>> turtle.position()\n"
"(0.00,0.00)\n"
">>> turtle.forward(25)\n"
">>> turtle.position()\n"
"(25.00,0.00)\n"
">>> turtle.forward(-75)\n"
">>> turtle.position()\n"
"(-50.00,0.00)"
msgstr ""

#: ../../library/turtle.rst:502 ../../library/turtle.rst:744
#: ../../library/turtle.rst:1011 ../../library/turtle.rst:1542
msgid "a number"
msgstr "liczba"

#: ../../library/turtle.rst:504
msgid ""
"Move the turtle backward by *distance*, opposite to the direction the turtle "
"is headed.  Do not change the turtle's heading."
msgstr ""
"Przesuwa żółwia do tyłu o *dystans*, w kierunku przeciwnym do kierunku, w "
"którym żółw jest skierowany. Nie zmienia kierunku żółwia."

#: ../../library/turtle.rst:512
msgid ""
">>> turtle.position()\n"
"(0.00,0.00)\n"
">>> turtle.backward(30)\n"
">>> turtle.position()\n"
"(-30.00,0.00)"
msgstr ""

#: ../../library/turtle.rst:527
msgid ""
"Turn turtle right by *angle* units.  (Units are by default degrees, but can "
"be set via the :func:`degrees` and :func:`radians` functions.)  Angle "
"orientation depends on the turtle mode, see :func:`mode`."
msgstr ""
"Obraca żółwia w prawo o jednostki *kąta*.  (Jednostki to domyślnie stopnie, "
"ale można je ustawić za pomocą funkcji :func:`degrees` i :func:`radians`.) "
"Orientacja kąta zależy od trybu żółwia, patrz :func:`mode`."

#: ../../library/turtle.rst:537
msgid ""
">>> turtle.heading()\n"
"22.0\n"
">>> turtle.right(45)\n"
">>> turtle.heading()\n"
"337.0"
msgstr ""

#: ../../library/turtle.rst:552
msgid ""
"Turn turtle left by *angle* units.  (Units are by default degrees, but can "
"be set via the :func:`degrees` and :func:`radians` functions.)  Angle "
"orientation depends on the turtle mode, see :func:`mode`."
msgstr ""
"Obraca żółwia w lewo o jednostki *kąta*.  (Jednostki to domyślnie stopnie, "
"ale można je ustawić za pomocą funkcji :func:`degrees` i :func:`radians`.) "
"Orientacja kąta zależy od trybu żółwia, patrz :func:`mode`."

#: ../../library/turtle.rst:562
msgid ""
">>> turtle.heading()\n"
"22.0\n"
">>> turtle.left(45)\n"
">>> turtle.heading()\n"
"67.0"
msgstr ""

#: ../../library/turtle.rst:576
msgid "a number or a pair/vector of numbers"
msgstr "liczba lub para/wektor liczb"

#: ../../library/turtle.rst:577 ../../library/turtle.rst:610
#: ../../library/turtle.rst:611
msgid "a number or ``None``"
msgstr "liczba lub ``None``"

#: ../../library/turtle.rst:579
msgid ""
"If *y* is ``None``, *x* must be a pair of coordinates or a :class:`Vec2D` (e."
"g. as returned by :func:`pos`)."
msgstr ""
"Jeśli *y* to ``None``, *x* musi być parą współrzędnych lub obiektem :class:"
"`Vec2D` (np. zwróconym przez :func:`pos`)."

#: ../../library/turtle.rst:582
msgid ""
"Move turtle to an absolute position.  If the pen is down, draw line.  Do not "
"change the turtle's orientation."
msgstr ""
"Przesuwa żółwia do pozycji bezwzględnej. Jeśli pióro jest opuszczone, rysuje "
"linię. Nie zmienia orientacji żółwia."

#: ../../library/turtle.rst:591
msgid ""
">>> tp = turtle.pos()\n"
">>> tp\n"
"(0.00,0.00)\n"
">>> turtle.setpos(60,30)\n"
">>> turtle.pos()\n"
"(60.00,30.00)\n"
">>> turtle.setpos((20,80))\n"
">>> turtle.pos()\n"
"(20.00,80.00)\n"
">>> turtle.setpos(tp)\n"
">>> turtle.pos()\n"
"(0.00,0.00)"
msgstr ""

#: ../../library/turtle.rst:612
msgid "a boolean"
msgstr "wartość logiczna"

#: ../../library/turtle.rst:614
msgid ""
"Move turtle to an absolute position. Unlike goto(x, y), a line will not be "
"drawn. The turtle's orientation does not change. If currently filling, the "
"polygon(s) teleported from will be filled after leaving, and filling will "
"begin again after teleporting. This can be disabled with fill_gap=True, "
"which makes the imaginary line traveled during teleporting act as a fill "
"barrier like in goto(x, y)."
msgstr ""

#: ../../library/turtle.rst:627
msgid ""
">>> tp = turtle.pos()\n"
">>> tp\n"
"(0.00,0.00)\n"
">>> turtle.teleport(60)\n"
">>> turtle.pos()\n"
"(60.00,0.00)\n"
">>> turtle.teleport(y=10)\n"
">>> turtle.pos()\n"
"(60.00,10.00)\n"
">>> turtle.teleport(20, 30)\n"
">>> turtle.pos()\n"
"(20.00,30.00)"
msgstr ""

#: ../../library/turtle.rst:650
msgid ""
"Set the turtle's first coordinate to *x*, leave second coordinate unchanged."
msgstr ""
"Ustawia pierwszą współrzędną żółwia na *x*, drugą pozostawiając bez zmian."

#: ../../library/turtle.rst:659
msgid ""
">>> turtle.position()\n"
"(0.00,240.00)\n"
">>> turtle.setx(10)\n"
">>> turtle.position()\n"
"(10.00,240.00)"
msgstr ""

#: ../../library/turtle.rst:673
msgid ""
"Set the turtle's second coordinate to *y*, leave first coordinate unchanged."
msgstr ""
"Ustawia drugą współrzędną żółwia na *y*, pozostawiąc pierwszą współrzędną "
"bez zmian."

#: ../../library/turtle.rst:681
msgid ""
">>> turtle.position()\n"
"(0.00,40.00)\n"
">>> turtle.sety(-10)\n"
">>> turtle.position()\n"
"(0.00,-10.00)"
msgstr ""

#: ../../library/turtle.rst:696
msgid ""
"Set the orientation of the turtle to *to_angle*.  Here are some common "
"directions in degrees:"
msgstr ""
"Ustawia orientację żółwia na *to_angle*.  Oto kilka często używanych "
"kierunków w stopniach:"

#: ../../library/turtle.rst:700
msgid "standard mode"
msgstr "tryb standardowy"

#: ../../library/turtle.rst:700
msgid "logo mode"
msgstr "tryb logo"

#: ../../library/turtle.rst:702
msgid "0 - east"
msgstr "0 – wschód"

#: ../../library/turtle.rst:702
msgid "0 - north"
msgstr "0 – północ"

#: ../../library/turtle.rst:703
msgid "90 - north"
msgstr "90 – północ"

#: ../../library/turtle.rst:703
msgid "90 - east"
msgstr "90 – wschód"

#: ../../library/turtle.rst:704
msgid "180 - west"
msgstr "180 – zachód"

#: ../../library/turtle.rst:704
msgid "180 - south"
msgstr "180 – południe"

#: ../../library/turtle.rst:705
msgid "270 - south"
msgstr "270 – południe"

#: ../../library/turtle.rst:705
msgid "270 - west"
msgstr "270 – zachód"

#: ../../library/turtle.rst:708
msgid ""
">>> turtle.setheading(90)\n"
">>> turtle.heading()\n"
"90.0"
msgstr ""

#: ../../library/turtle.rst:718
msgid ""
"Move turtle to the origin -- coordinates (0,0) -- and set its heading to its "
"start-orientation (which depends on the mode, see :func:`mode`)."
msgstr ""
"Przesuwa żółwia do punktu początkowego – współrzędne (0,0) – i ustawia jego "
"kurs na orientację początkową (która zależy od trybu, patrz :func:`mode`)."

#: ../../library/turtle.rst:728
msgid ""
">>> turtle.heading()\n"
"90.0\n"
">>> turtle.position()\n"
"(0.00,-10.00)\n"
">>> turtle.home()\n"
">>> turtle.position()\n"
"(0.00,0.00)\n"
">>> turtle.heading()\n"
"0.0"
msgstr ""

#: ../../library/turtle.rst:745
msgid "a number (or ``None``)"
msgstr "liczba (lub ``None``)"

#: ../../library/turtle.rst:746 ../../library/turtle.rst:839
msgid "an integer (or ``None``)"
msgstr "liczba całkowita (lub ``None``)"

#: ../../library/turtle.rst:748
msgid ""
"Draw a circle with given *radius*.  The center is *radius* units left of the "
"turtle; *extent* -- an angle -- determines which part of the circle is "
"drawn.  If *extent* is not given, draw the entire circle.  If *extent* is "
"not a full circle, one endpoint of the arc is the current pen position.  "
"Draw the arc in counterclockwise direction if *radius* is positive, "
"otherwise in clockwise direction.  Finally the direction of the turtle is "
"changed by the amount of *extent*."
msgstr ""
"Rysuje okrąg o podanym *promieniu*. Środek znajduje się w odległości "
"*radius* na lewo od żółwia; *extent* – kąt – określa, która część okręgu "
"zostanie narysowana. Jeśli *extent* nie jest podany, rysowany jest cały "
"okrąg. Jeśli *extent* nie jest pełnym okręgiem, jednym z punktów końcowych "
"łuku jest bieżąca pozycja pióra. Rysuje łuk w kierunku przeciwnym do ruchu "
"wskazówek zegara, jeśli *radius* jest dodatni, w przeciwnym razie w kierunku "
"zgodnym z ruchem wskazówek zegara. Kierunek żółwia jest zmieniany o wartość "
"*extent*."

#: ../../library/turtle.rst:756
msgid ""
"As the circle is approximated by an inscribed regular polygon, *steps* "
"determines the number of steps to use.  If not given, it will be calculated "
"automatically.  May be used to draw regular polygons."
msgstr ""
"Ponieważ okrąg jest przybliżany przez wpisany wielokąt foremny, *steps* "
"określa liczbę kroków do użycia. Jeśli nie zostanie podana, zostanie "
"obliczona automatycznie. Może być używana do rysowania wielokątów foremnych."

#: ../../library/turtle.rst:760
msgid ""
">>> turtle.home()\n"
">>> turtle.position()\n"
"(0.00,0.00)\n"
">>> turtle.heading()\n"
"0.0\n"
">>> turtle.circle(50)\n"
">>> turtle.position()\n"
"(-0.00,0.00)\n"
">>> turtle.heading()\n"
"0.0\n"
">>> turtle.circle(120, 180)  # draw a semicircle\n"
">>> turtle.position()\n"
"(0.00,240.00)\n"
">>> turtle.heading()\n"
"180.0"
msgstr ""

#: ../../library/turtle.rst:782
msgid "an integer >= 1 (if given)"
msgstr "liczba całkowita >= 1 (jeśli podano)"

#: ../../library/turtle.rst:783
msgid "a colorstring or a numeric color tuple"
msgstr "colorstring lub numeryczna krotka koloru"

#: ../../library/turtle.rst:785
msgid ""
"Draw a circular dot with diameter *size*, using *color*.  If *size* is not "
"given, the maximum of pensize+4 and 2*pensize is used."
msgstr ""
"Rysuje okrągłą kropkę o średnicy *size*, używając koloru *color*.  Jeśli nie "
"podano *size*, używana jest maksymalna wartość z pensize+4 i 2*pensize."

#: ../../library/turtle.rst:789
msgid ""
">>> turtle.home()\n"
">>> turtle.dot()\n"
">>> turtle.fd(50); turtle.dot(20, \"blue\"); turtle.fd(50)\n"
">>> turtle.position()\n"
"(100.00,-0.00)\n"
">>> turtle.heading()\n"
"0.0"
msgstr ""

#: ../../library/turtle.rst:803
msgid ""
"Stamp a copy of the turtle shape onto the canvas at the current turtle "
"position.  Return a stamp_id for that stamp, which can be used to delete it "
"by calling ``clearstamp(stamp_id)``."
msgstr ""
"Stempluje kopię kształtu żółwia na płótnie w bieżącej pozycji żółwia. Zwraca "
"stamp_id dla tego stempla, który może być użyty do usunięcia go przez "
"wywołanie ``clearstamp(stamp_id)``."

#: ../../library/turtle.rst:807
msgid ""
">>> turtle.color(\"blue\")\n"
">>> stamp_id = turtle.stamp()\n"
">>> turtle.fd(50)"
msgstr ""

#: ../../library/turtle.rst:817
msgid "an integer, must be return value of previous :func:`stamp` call"
msgstr ""
"liczba całkowita, musi być wartością zwróconą przez wywołanie poprzedniego :"
"func:`stamp`"

#: ../../library/turtle.rst:820
msgid "Delete stamp with given *stampid*."
msgstr "Usunięcie stempla z podanym *stampid*."

#: ../../library/turtle.rst:822
msgid ""
">>> turtle.position()\n"
"(150.00,-0.00)\n"
">>> turtle.color(\"blue\")\n"
">>> astamp = turtle.stamp()\n"
">>> turtle.fd(50)\n"
">>> turtle.position()\n"
"(200.00,-0.00)\n"
">>> turtle.clearstamp(astamp)\n"
">>> turtle.position()\n"
"(200.00,-0.00)"
msgstr ""

#: ../../library/turtle.rst:841
msgid ""
"Delete all or first/last *n* of turtle's stamps.  If *n* is ``None``, delete "
"all stamps, if *n* > 0 delete first *n* stamps, else if *n* < 0 delete last "
"*n* stamps."
msgstr ""
"Usuwa wszystkie lub pierwsze/ostatnie *n* stempli żółwia. Jeśli *n* to "
"``None``, usuwa wszystkie stemple, jeśli *n* > 0 usuwa pierwsze *n* stempli, "
"inaczej jeśli *n* < 0 usuwa ostatnie *n* stempli."

#: ../../library/turtle.rst:845
msgid ""
">>> for i in range(8):\n"
"...     unused_stamp_id = turtle.stamp()\n"
"...     turtle.fd(30)\n"
">>> turtle.clearstamps(2)\n"
">>> turtle.clearstamps(-2)\n"
">>> turtle.clearstamps()"
msgstr ""

#: ../../library/turtle.rst:857
msgid ""
"Undo (repeatedly) the last turtle action(s).  Number of available undo "
"actions is determined by the size of the undobuffer."
msgstr ""
"Cofa (wielokrotnie) ostatnią akcję (akcje) żółwia. Liczba dostępnych cofnięć "
"zależy od rozmiaru bufora cofania."

#: ../../library/turtle.rst:860
msgid ""
">>> for i in range(4):\n"
"...     turtle.fd(50); turtle.lt(80)\n"
"...\n"
">>> for i in range(8):\n"
"...     turtle.undo()"
msgstr ""

#: ../../library/turtle.rst:872
msgid "an integer in the range 0..10 or a speedstring (see below)"
msgstr "liczba całkowita w zakresie 0..10 lub nazwa prędkości (patrz poniżej)"

#: ../../library/turtle.rst:874
msgid ""
"Set the turtle's speed to an integer value in the range 0..10.  If no "
"argument is given, return current speed."
msgstr ""
"Ustawia prędkość żółwia na wartość liczby całkowitej w zakresie 0..10. Jeśli "
"nie podano argumentu, zwraca aktualną prędkość."

#: ../../library/turtle.rst:877
msgid ""
"If input is a number greater than 10 or smaller than 0.5, speed is set to "
"0.  Speedstrings are mapped to speedvalues as follows:"
msgstr ""
"Jeśli wartość wejściowa jest większa niż 10 lub mniejsza niż 0,5, prędkość "
"jest ustawiana na 0. Nazwy prędkości są mapowane na wartości prędkości w "
"następujący sposób:"

#: ../../library/turtle.rst:880
msgid "\"fastest\":  0"
msgstr "\"fastest\":  0"

#: ../../library/turtle.rst:881
msgid "\"fast\":  10"
msgstr "\"fast\":  10"

#: ../../library/turtle.rst:882
msgid "\"normal\":  6"
msgstr "\"normal\":  6"

#: ../../library/turtle.rst:883
msgid "\"slow\":  3"
msgstr "\"slow\":  3"

#: ../../library/turtle.rst:884
msgid "\"slowest\":  1"
msgstr "\"slowest\":  1"

#: ../../library/turtle.rst:886
msgid ""
"Speeds from 1 to 10 enforce increasingly faster animation of line drawing "
"and turtle turning."
msgstr ""
"Prędkości od 1 do 10 wymuszają coraz szybszą animację rysowania linii i "
"obracania żółwia."

#: ../../library/turtle.rst:889
msgid ""
"Attention: *speed* = 0 means that *no* animation takes place. forward/back "
"makes turtle jump and likewise left/right make the turtle turn instantly."
msgstr ""
"Uwaga: *speed* = 0 oznacza, że *żadna* animacja nie ma miejsca. forward/back "
"sprawia, że żółw skacze i podobnie left/right sprawia, że żółw natychmiast "
"się obraca."

#: ../../library/turtle.rst:893
msgid ""
">>> turtle.speed()\n"
"3\n"
">>> turtle.speed('normal')\n"
">>> turtle.speed()\n"
"6\n"
">>> turtle.speed(9)\n"
">>> turtle.speed()\n"
"9"
msgstr ""

#: ../../library/turtle.rst:912
msgid ""
"Return the turtle's current location (x,y) (as a :class:`Vec2D` vector)."
msgstr "Zwraca bieżącą lokalizację żółwia (x,y) (jako wektor :class:`Vec2D`)."

#: ../../library/turtle.rst:914
msgid ""
">>> turtle.pos()\n"
"(440.00,-0.00)"
msgstr ""

#: ../../library/turtle.rst:923 ../../library/turtle.rst:986
msgid "a number or a pair/vector of numbers or a turtle instance"
msgstr "liczba lub para/wektor liczb lub instancja żółwia"

#: ../../library/turtle.rst:924 ../../library/turtle.rst:987
msgid "a number if *x* is a number, else ``None``"
msgstr "liczba, jeśli *x* jest liczbą, w przeciwnym razie ``None``"

#: ../../library/turtle.rst:926
msgid ""
"Return the angle between the line from turtle position to position specified "
"by (x,y), the vector or the other turtle.  This depends on the turtle's "
"start orientation which depends on the mode - \"standard\"/\"world\" or "
"\"logo\"."
msgstr ""
"Zwraca kąt między linią od pozycji żółwia do pozycji określonej przez (x,y), "
"wektor lub drugiego żółwia. Zależy to od orientacji początkowej żółwia, "
"która zależy od trybu – „standard”/„world” lub „logo”."

#: ../../library/turtle.rst:930
msgid ""
">>> turtle.goto(10, 10)\n"
">>> turtle.towards(0,0)\n"
"225.0"
msgstr ""

#: ../../library/turtle.rst:940
msgid "Return the turtle's x coordinate."
msgstr "Zwraca współrzędną x żółwia."

#: ../../library/turtle.rst:942
msgid ""
">>> turtle.home()\n"
">>> turtle.left(50)\n"
">>> turtle.forward(100)\n"
">>> turtle.pos()\n"
"(64.28,76.60)\n"
">>> print(round(turtle.xcor(), 5))\n"
"64.27876"
msgstr ""

#: ../../library/turtle.rst:956
msgid "Return the turtle's y coordinate."
msgstr "Zwraca współrzędną y żółwia."

#: ../../library/turtle.rst:958
msgid ""
">>> turtle.home()\n"
">>> turtle.left(60)\n"
">>> turtle.forward(100)\n"
">>> print(turtle.pos())\n"
"(50.00,86.60)\n"
">>> print(round(turtle.ycor(), 5))\n"
"86.60254"
msgstr ""

#: ../../library/turtle.rst:972
msgid ""
"Return the turtle's current heading (value depends on the turtle mode, see :"
"func:`mode`)."
msgstr ""
"Zwraca aktualny kierunek żółwia (wartość zależy od trybu żółwia, patrz :func:"
"`mode`)."

#: ../../library/turtle.rst:975
msgid ""
">>> turtle.home()\n"
">>> turtle.left(67)\n"
">>> turtle.heading()\n"
"67.0"
msgstr ""

#: ../../library/turtle.rst:989
msgid ""
"Return the distance from the turtle to (x,y), the given vector, or the given "
"other turtle, in turtle step units."
msgstr ""
"Zwraca odległość od żółwia do (x,y), podanego wektora lub podanego innego "
"żółwia, w jednostkach kroku żółwia."

#: ../../library/turtle.rst:992
msgid ""
">>> turtle.home()\n"
">>> turtle.distance(30,40)\n"
"50.0\n"
">>> turtle.distance((30,40))\n"
"50.0\n"
">>> joe = Turtle()\n"
">>> joe.forward(77)\n"
">>> turtle.distance(joe)\n"
"77.0"
msgstr ""

#: ../../library/turtle.rst:1007
msgid "Settings for measurement"
msgstr "Ustawienia pomiarowe"

#: ../../library/turtle.rst:1013
msgid ""
"Set angle measurement units, i.e. set number of \"degrees\" for a full "
"circle. Default value is 360 degrees."
msgstr ""
"Ustawia jednostki pomiaru kąta, tj. liczbę „stopni” dla pełnego okręgu. "
"Domyślna wartość to 360 stopni."

#: ../../library/turtle.rst:1016
msgid ""
">>> turtle.home()\n"
">>> turtle.left(90)\n"
">>> turtle.heading()\n"
"90.0\n"
"\n"
">>> # Change angle measurement unit to grad (also known as gon,\n"
">>> # grade, or gradian and equals 1/100-th of the right angle.)\n"
">>> turtle.degrees(400.0)\n"
">>> turtle.heading()\n"
"100.0\n"
">>> turtle.degrees(360)\n"
">>> turtle.heading()\n"
"90.0"
msgstr ""

#: ../../library/turtle.rst:1036
msgid ""
"Set the angle measurement units to radians.  Equivalent to ``degrees(2*math."
"pi)``."
msgstr ""
"Ustawia jednostki miary kąta na radiany. Odpowiednik ``degrees(2*math.pi)``."

#: ../../library/turtle.rst:1039
msgid ""
">>> turtle.home()\n"
">>> turtle.left(90)\n"
">>> turtle.heading()\n"
"90.0\n"
">>> turtle.radians()\n"
">>> turtle.heading()\n"
"1.5707963267948966"
msgstr ""

#: ../../library/turtle.rst:1067
msgid "Pull the pen down -- drawing when moving."
msgstr "Opuszcza pióro w dół – rysowanie podczas ruchu."

#: ../../library/turtle.rst:1074
msgid "Pull the pen up -- no drawing when moving."
msgstr "Podnosi pióro do góry – nierysowanie podczas ruchu."

#: ../../library/turtle.rst:1080
msgid "a positive number"
msgstr "liczba dodatnia"

#: ../../library/turtle.rst:1082
msgid ""
"Set the line thickness to *width* or return it.  If resizemode is set to "
"\"auto\" and turtleshape is a polygon, that polygon is drawn with the same "
"line thickness.  If no argument is given, the current pensize is returned."
msgstr ""
"Ustawia grubość linii na *width* lub zwraca ją. Jeśli resizemode jest "
"ustawiony na „auto”, a turtleshape jest wielokątem, wielokąt ten jest "
"rysowany z taką samą grubością linii. Jeśli nie podano argumentu, zwracany "
"jest bieżący rozmiar pióra."

#: ../../library/turtle.rst:1086
msgid ""
">>> turtle.pensize()\n"
"1\n"
">>> turtle.pensize(10)   # from here on lines of width 10 are drawn"
msgstr ""

#: ../../library/turtle.rst:1096
msgid "a dictionary with some or all of the below listed keys"
msgstr "słownik z niektórymi lub wszystkimi z poniższych kluczy"

#: ../../library/turtle.rst:1097
msgid "one or more keyword-arguments with the below listed keys as keywords"
msgstr ""
"jedno lub więcej argumentów nazwanych z poniższymi kluczami jako nazwami"

#: ../../library/turtle.rst:1099
msgid ""
"Return or set the pen's attributes in a \"pen-dictionary\" with the "
"following key/value pairs:"
msgstr ""
"Zwraca lub ustawia atrybuty pióra w „pióro-słowniku” z następującymi parami "
"klucz/wartość:"

#: ../../library/turtle.rst:1102
msgid "\"shown\": True/False"
msgstr "„shown”: True/False"

#: ../../library/turtle.rst:1103
msgid "\"pendown\": True/False"
msgstr "„pendown”: True/False"

#: ../../library/turtle.rst:1104
msgid "\"pencolor\": color-string or color-tuple"
msgstr "„pencolor”: nazwa koloru (color-string) lub kolor-krotka"

#: ../../library/turtle.rst:1105
msgid "\"fillcolor\": color-string or color-tuple"
msgstr "„fillcolor”: nazwa koloru (color-string) lub kolor-krotka"

#: ../../library/turtle.rst:1106
msgid "\"pensize\": positive number"
msgstr "„pensize”: liczba dodatnia"

#: ../../library/turtle.rst:1107
msgid "\"speed\": number in range 0..10"
msgstr "„speed”: liczba z przedziału 0..10"

#: ../../library/turtle.rst:1108
msgid "\"resizemode\": \"auto\" or \"user\" or \"noresize\""
msgstr "„resizemode”: „auto” lub „user” lub „noresize”"

#: ../../library/turtle.rst:1109
msgid "\"stretchfactor\": (positive number, positive number)"
msgstr "„stretchfactor”: (liczba dodatnia, liczba dodatnia)"

#: ../../library/turtle.rst:1110
msgid "\"outline\": positive number"
msgstr "„outline”: liczba dodatnia"

#: ../../library/turtle.rst:1111
msgid "\"tilt\": number"
msgstr "„tilt”: liczba"

#: ../../library/turtle.rst:1113
msgid ""
"This dictionary can be used as argument for a subsequent call to :func:`pen` "
"to restore the former pen-state.  Moreover one or more of these attributes "
"can be provided as keyword-arguments.  This can be used to set several pen "
"attributes in one statement."
msgstr ""
"Ten słownik może być użyty jako argument dla kolejnego wywołania :func:`pen` "
"w celu przywrócenia poprzedniego stanu pióra. Co więcej, jeden lub więcej z "
"tych atrybutów może być przekazany jako argument nazwany. Można to "
"wykorzystać do ustawienia kilku atrybutów pióra w jednej instrukcji."

#: ../../library/turtle.rst:1118
msgid ""
">>> turtle.pen(fillcolor=\"black\", pencolor=\"red\", pensize=10)\n"
">>> sorted(turtle.pen().items())\n"
"[('fillcolor', 'black'), ('outline', 1), ('pencolor', 'red'),\n"
" ('pendown', True), ('pensize', 10), ('resizemode', 'noresize'),\n"
" ('shearfactor', 0.0), ('shown', True), ('speed', 9),\n"
" ('stretchfactor', (1.0, 1.0)), ('tilt', 0.0)]\n"
">>> penstate=turtle.pen()\n"
">>> turtle.color(\"yellow\", \"\")\n"
">>> turtle.penup()\n"
">>> sorted(turtle.pen().items())[:3]\n"
"[('fillcolor', ''), ('outline', 1), ('pencolor', 'yellow')]\n"
">>> turtle.pen(penstate, fillcolor=\"green\")\n"
">>> sorted(turtle.pen().items())[:3]\n"
"[('fillcolor', 'green'), ('outline', 1), ('pencolor', 'red')]"
msgstr ""

#: ../../library/turtle.rst:1139
msgid "Return ``True`` if pen is down, ``False`` if it's up."
msgstr ""
"Zwraca ``True`` jeśli pióro jest opuszczone, ``False`` jeśli jest "
"podniesione."

#: ../../library/turtle.rst:1141
msgid ""
">>> turtle.penup()\n"
">>> turtle.isdown()\n"
"False\n"
">>> turtle.pendown()\n"
">>> turtle.isdown()\n"
"True"
msgstr ""

#: ../../library/turtle.rst:1157
msgid "Return or set the pencolor."
msgstr "Zwraca lub ustawia kolor pióra."

#: ../../library/turtle.rst:1159 ../../library/turtle.rst:1208
msgid "Four input formats are allowed:"
msgstr "Dozwolone są cztery formaty wejściowe:"

#: ../../library/turtle.rst:1161
msgid "``pencolor()``"
msgstr "``pencolor()``"

#: ../../library/turtle.rst:1162
msgid ""
"Return the current pencolor as color specification string or as a tuple (see "
"example).  May be used as input to another color/pencolor/fillcolor call."
msgstr ""
"Zwraca bieżący kolor pióra jako ciąg specyfikacji koloru lub jako krotkę "
"(patrz przykład). Może być użyty jako dane wejściowe do innego wywołania "
"color/pencolor/fillcolor."

#: ../../library/turtle.rst:1166
msgid "``pencolor(colorstring)``"
msgstr "``pencolor(colorstring)``"

#: ../../library/turtle.rst:1167
msgid ""
"Set pencolor to *colorstring*, which is a Tk color specification string, "
"such as ``\"red\"``, ``\"yellow\"``, or ``\"#33cc8c\"``."
msgstr ""
"Ustawia kolor pióra na *colorstring*, który jest ciągiem specyfikacji koloru "
"Tk, takim jak ``\"red\"``, ``\"yellow\"``, lub ``\"#33cc8c\"``."

#: ../../library/turtle.rst:1170
msgid "``pencolor((r, g, b))``"
msgstr "``pencolor((r, g, b))``"

#: ../../library/turtle.rst:1171
msgid ""
"Set pencolor to the RGB color represented by the tuple of *r*, *g*, and "
"*b*.  Each of *r*, *g*, and *b* must be in the range 0..colormode, where "
"colormode is either 1.0 or 255 (see :func:`colormode`)."
msgstr ""
"Ustawia kolor pióra na kolor RGB reprezentowany przez krotkę *r*, *g* i *b*. "
"Każda z *r*, *g* i *b* musi należeć do zakresu 0..colormode, gdzie colormode "
"to 1.0 lub 255 (patrz :func:`colormode`)."

#: ../../library/turtle.rst:1175
msgid "``pencolor(r, g, b)``"
msgstr "``pencolor(r, g, b)``"

#: ../../library/turtle.rst:1176
msgid ""
"Set pencolor to the RGB color represented by *r*, *g*, and *b*.  Each of "
"*r*, *g*, and *b* must be in the range 0..colormode."
msgstr ""
"Ustawia kolor pióra na kolor RGB reprezentowany przez *r*, *g* i *b*.  Każda "
"z *r*, *g* i *b* musi należeć do zakresu 0..colormode."

#: ../../library/turtle.rst:1179
msgid ""
"If turtleshape is a polygon, the outline of that polygon is drawn with the "
"newly set pencolor."
msgstr ""
"Jeśli turtleshape jest wielokątem, kontur tego wielokąta jest rysowany przy "
"użyciu nowo ustawionego koloru pióra."

#: ../../library/turtle.rst:1182
msgid ""
">>> colormode()\n"
"1.0\n"
">>> turtle.pencolor()\n"
"'red'\n"
">>> turtle.pencolor(\"brown\")\n"
">>> turtle.pencolor()\n"
"'brown'\n"
">>> tup = (0.2, 0.8, 0.55)\n"
">>> turtle.pencolor(tup)\n"
">>> turtle.pencolor()\n"
"(0.2, 0.8, 0.5490196078431373)\n"
">>> colormode(255)\n"
">>> turtle.pencolor()\n"
"(51.0, 204.0, 140.0)\n"
">>> turtle.pencolor('#32c18f')\n"
">>> turtle.pencolor()\n"
"(50.0, 193.0, 143.0)"
msgstr ""

#: ../../library/turtle.rst:1206
msgid "Return or set the fillcolor."
msgstr "Zwraca lub ustawia kolor wypełnienia."

#: ../../library/turtle.rst:1210
msgid "``fillcolor()``"
msgstr "``fillcolor()``"

#: ../../library/turtle.rst:1211
msgid ""
"Return the current fillcolor as color specification string, possibly in "
"tuple format (see example).  May be used as input to another color/pencolor/"
"fillcolor call."
msgstr ""
"Zwraca bieżący kolor wypełnienia jako ciąg specyfikacji koloru, ewentualnie "
"w formacie krotki (patrz przykład). Może być użyty jako dane wejściowe do "
"innego wywołania color/pencolor/fillcolor."

#: ../../library/turtle.rst:1215
msgid "``fillcolor(colorstring)``"
msgstr "``fillcolor(colorstring)``"

#: ../../library/turtle.rst:1216
msgid ""
"Set fillcolor to *colorstring*, which is a Tk color specification string, "
"such as ``\"red\"``, ``\"yellow\"``, or ``\"#33cc8c\"``."
msgstr ""
"Ustawia kolor wypełnienia na *colorstring*, który jest ciągiem specyfikacji "
"koloru Tk, takim jak ``\"red\"``, ``\"yellow\"``, lub ``\"#33cc8c\"``."

#: ../../library/turtle.rst:1219
msgid "``fillcolor((r, g, b))``"
msgstr "``fillcolor((r, g, b))``"

#: ../../library/turtle.rst:1220
msgid ""
"Set fillcolor to the RGB color represented by the tuple of *r*, *g*, and "
"*b*.  Each of *r*, *g*, and *b* must be in the range 0..colormode, where "
"colormode is either 1.0 or 255 (see :func:`colormode`)."
msgstr ""
"Ustawia kolor wypełnienia na kolor RGB reprezentowany przez krotkę *r*, *g* "
"i *b*.  Każdy z *r*, *g* i *b* musi należeć do zakresu 0..colormode, gdzie "
"colormode to 1.0 lub 255 (patrz :func:`colormode`)."

#: ../../library/turtle.rst:1224
msgid "``fillcolor(r, g, b)``"
msgstr "``fillcolor(r, g, b)``"

#: ../../library/turtle.rst:1225
msgid ""
"Set fillcolor to the RGB color represented by *r*, *g*, and *b*.  Each of "
"*r*, *g*, and *b* must be in the range 0..colormode."
msgstr ""
"Ustawia kolor wypełnienia na kolor RGB reprezentowany przez *r*, *g* i *b*.  "
"Każde z *r*, *g* i *b* musi należeć do zakresu 0..colormode."

#: ../../library/turtle.rst:1228
msgid ""
"If turtleshape is a polygon, the interior of that polygon is drawn with the "
"newly set fillcolor."
msgstr ""
"Jeśli turtleshape jest wielokątem, wnętrze tego wielokąta jest rysowane z "
"nowo ustawionym kolorem wypełnienia."

#: ../../library/turtle.rst:1231
msgid ""
">>> turtle.fillcolor(\"violet\")\n"
">>> turtle.fillcolor()\n"
"'violet'\n"
">>> turtle.pencolor()\n"
"(50.0, 193.0, 143.0)\n"
">>> turtle.fillcolor((50, 193, 143))  # Integers, not floats\n"
">>> turtle.fillcolor()\n"
"(50.0, 193.0, 143.0)\n"
">>> turtle.fillcolor('#ffffff')\n"
">>> turtle.fillcolor()\n"
"(255.0, 255.0, 255.0)"
msgstr ""

#: ../../library/turtle.rst:1249
msgid "Return or set pencolor and fillcolor."
msgstr "Zwraca lub ustawia kolor pióra i wypełnienia."

#: ../../library/turtle.rst:1251
msgid ""
"Several input formats are allowed.  They use 0 to 3 arguments as follows:"
msgstr ""
"Dozwolonych jest kilka formatów wejściowych. Używają one od 0 do 3 "
"argumentów w następujący sposób:"

#: ../../library/turtle.rst:1254
msgid "``color()``"
msgstr "``color()``"

#: ../../library/turtle.rst:1255
msgid ""
"Return the current pencolor and the current fillcolor as a pair of color "
"specification strings or tuples as returned by :func:`pencolor` and :func:"
"`fillcolor`."
msgstr ""
"Zwraca bieżący kolor pióra i bieżący kolor wypełnienia jako parę ciągów "
"specyfikacji kolorów lub krotek zwracanych przez :func:`pencolor` i :func:"
"`fillcolor`."

#: ../../library/turtle.rst:1259
msgid "``color(colorstring)``, ``color((r,g,b))``, ``color(r,g,b)``"
msgstr "``color(colorstring)``, ``color((r,g,b))``, ``color(r,g,b)``"

#: ../../library/turtle.rst:1260
msgid ""
"Inputs as in :func:`pencolor`, set both, fillcolor and pencolor, to the "
"given value."
msgstr ""
"Dane wejściowe jak w :func:`pencolor`, ustawiają zarówno kolor wypełnienia, "
"jak i kolor pióra na podaną wartość."

#: ../../library/turtle.rst:1263
msgid ""
"``color(colorstring1, colorstring2)``, ``color((r1,g1,b1), (r2,g2,b2))``"
msgstr ""
"``color(colorstring1, colorstring2)``, ``color((r1,g1,b1), (r2,g2,b2))``"

#: ../../library/turtle.rst:1264
msgid ""
"Equivalent to ``pencolor(colorstring1)`` and ``fillcolor(colorstring2)`` and "
"analogously if the other input format is used."
msgstr ""
"Odpowiednik dla ``pencolor(colorstring1)`` i ``fillcolor(colorstring2)`` "
"oraz analogicznie, jeśli używany jest inny format wejścia."

#: ../../library/turtle.rst:1267
msgid ""
"If turtleshape is a polygon, outline and interior of that polygon is drawn "
"with the newly set colors."
msgstr ""
"Jeśli turtleshape jest wielokątem, kontur i wnętrze tego wielokąta są "
"rysowane z nowo ustawionymi kolorami."

#: ../../library/turtle.rst:1270
msgid ""
">>> turtle.color(\"red\", \"green\")\n"
">>> turtle.color()\n"
"('red', 'green')\n"
">>> color(\"#285078\", \"#a0c8f0\")\n"
">>> color()\n"
"((40.0, 80.0, 120.0), (160.0, 200.0, 240.0))"
msgstr ""

#: ../../library/turtle.rst:1281
msgid "See also: Screen method :func:`colormode`."
msgstr "Zobacz także: Metoda klasy Screen :func:`colormode`."

#: ../../library/turtle.rst:1295
msgid "Return fillstate (``True`` if filling, ``False`` else)."
msgstr ""
"Zwraca fillstate (``True`` jeśli wypełnienie, ``False`` w przeciwnym razie)."

#: ../../library/turtle.rst:1297
msgid ""
">>> turtle.begin_fill()\n"
">>> if turtle.filling():\n"
"...    turtle.pensize(5)\n"
"... else:\n"
"...    turtle.pensize(3)"
msgstr ""

#: ../../library/turtle.rst:1308
msgid "Fill the shape drawn in the ``with turtle.fill():`` block."
msgstr ""

#: ../../library/turtle.rst:1310
msgid ""
">>> turtle.color(\"black\", \"red\")\n"
">>> with turtle.fill():\n"
"...     turtle.circle(80)"
msgstr ""

#: ../../library/turtle.rst:1317
msgid ""
"Using :func:`!fill` is equivalent to adding the :func:`begin_fill` before "
"the fill-block and :func:`end_fill` after the fill-block:"
msgstr ""

#: ../../library/turtle.rst:1320 ../../library/turtle.rst:1345
msgid ""
">>> turtle.color(\"black\", \"red\")\n"
">>> turtle.begin_fill()\n"
">>> turtle.circle(80)\n"
">>> turtle.end_fill()"
msgstr ""

#: ../../library/turtle.rst:1333
msgid "To be called just before drawing a shape to be filled."
msgstr "Do wywołania tuż przed rysowaniem kształtu do wypełnienia."

#: ../../library/turtle.rst:1338
msgid "Fill the shape drawn after the last call to :func:`begin_fill`."
msgstr "Wypełnia kształt narysowany po ostatnim wywołaniu :func:`begin_fill`."

#: ../../library/turtle.rst:1340
msgid ""
"Whether or not overlap regions for self-intersecting polygons or multiple "
"shapes are filled depends on the operating system graphics, type of overlap, "
"and number of overlaps.  For example, the Turtle star above may be either "
"all yellow or have some white regions."
msgstr ""
"To, czy obszary nakładania się przecinających się wielokątów lub wielu "
"kształtów są wypełnione, zależy od grafiki systemu operacyjnego, typu "
"nakładania się i liczby nakładających się obszarów.  Na przykład żółwiowa "
"gwiazda na górze rozdziału może być cała żółta lub mieć kilka białych "
"obszarów."

#: ../../library/turtle.rst:1359
msgid ""
"Delete the turtle's drawings from the screen, re-center the turtle and set "
"variables to the default values."
msgstr ""
"Usuń rysunki żółwia z ekranu, ponownie wyśrodkuj żółwia i ustaw zmienne na "
"wartości domyślne."

#: ../../library/turtle.rst:1362
msgid ""
">>> turtle.goto(0,-22)\n"
">>> turtle.left(100)\n"
">>> turtle.position()\n"
"(0.00,-22.00)\n"
">>> turtle.heading()\n"
"100.0\n"
">>> turtle.reset()\n"
">>> turtle.position()\n"
"(0.00,0.00)\n"
">>> turtle.heading()\n"
"0.0"
msgstr ""

#: ../../library/turtle.rst:1380
msgid ""
"Delete the turtle's drawings from the screen.  Do not move turtle.  State "
"and position of the turtle as well as drawings of other turtles are not "
"affected."
msgstr ""
"Usuwa rysunki żółwia z ekranu. Nie rusza żółwia. Stan i pozycja żółwia, a "
"także rysunki innych żółwi, nie zostaną zmienione."

#: ../../library/turtle.rst:1386
msgid "object to be written to the TurtleScreen"
msgstr "obiekt, który ma zostać zapisany na TurtleScreen"

#: ../../library/turtle.rst:1387
msgid "True/False"
msgstr "True/False"

#: ../../library/turtle.rst:1388
msgid "one of the strings \"left\", \"center\" or right\""
msgstr "jedna z wartości „left”, „center” lub „right”"

#: ../../library/turtle.rst:1389
msgid "a triple (fontname, fontsize, fonttype)"
msgstr "trójka wartości (fontname, fontsize, fonttype)"

#: ../../library/turtle.rst:1391
msgid ""
"Write text - the string representation of *arg* - at the current turtle "
"position according to *align* (\"left\", \"center\" or \"right\") and with "
"the given font.  If *move* is true, the pen is moved to the bottom-right "
"corner of the text.  By default, *move* is ``False``."
msgstr ""
"Pisze tekst – reprezentację obiektu *arg* – w bieżącej pozycji żółwia "
"zgodnie z *align* (\"left\", \"center\" lub \"right\") i z podaną czcionką.  "
"Jeśli *move* to ``True``, pióro jest przesuwane do prawego dolnego rogu "
"tekstu.  Domyślnie *move* ma wartość ``False``."

#: ../../library/turtle.rst:1409
msgid ""
"Make the turtle invisible.  It's a good idea to do this while you're in the "
"middle of doing some complex drawing, because hiding the turtle speeds up "
"the drawing observably."
msgstr ""
"Czyni żółwia niewidocznym. Dobrym pomysłem jest zrobienie tego w trakcie "
"wykonywania złożonego rysunku, ponieważ ukrycie żółwia znacznie przyspiesza "
"rysowanie."

#: ../../library/turtle.rst:1413
msgid ">>> turtle.hideturtle()"
msgstr ""

#: ../../library/turtle.rst:1422
msgid "Make the turtle visible."
msgstr "Sprawia, że żółw jest widoczny."

#: ../../library/turtle.rst:1424
msgid ">>> turtle.showturtle()"
msgstr ""

#: ../../library/turtle.rst:1432
msgid "Return ``True`` if the Turtle is shown, ``False`` if it's hidden."
msgstr "Zwraca ``True`` jeśli żółw jest widoczny, ``False`` jeśli jest ukryty."

#: ../../library/turtle.rst:1447
msgid "a string which is a valid shapename"
msgstr "ciąg znaków, który jest prawidłową nazwą kształtu"

#: ../../library/turtle.rst:1449
msgid ""
"Set turtle shape to shape with given *name* or, if name is not given, return "
"name of current shape.  Shape with *name* must exist in the TurtleScreen's "
"shape dictionary.  Initially there are the following polygon shapes: "
"\"arrow\", \"turtle\", \"circle\", \"square\", \"triangle\", \"classic\".  "
"To learn about how to deal with shapes see Screen method :func:"
"`register_shape`."
msgstr ""
"Ustawia kształt żółwia na kształt o podanej nazwie *name* lub, jeśli nazwa "
"nie została podana, zwraca nazwę bieżącego kształtu. Kształt o nazwie *name* "
"musi istnieć w słowniku kształtów TurtleScreen. Początkowo dostępne są "
"następujące kształty wielokątów: \"arrow\", \"turtle\", \"circle\", "
"\"square\", \"triangle\", \"classic\". Aby dowiedzieć się, jak radzić sobie "
"z kształtami, zobacz metodę Screen :func:`register_shape`."

#: ../../library/turtle.rst:1455
msgid ""
">>> turtle.shape()\n"
"'classic'\n"
">>> turtle.shape(\"turtle\")\n"
">>> turtle.shape()\n"
"'turtle'"
msgstr ""

#: ../../library/turtle.rst:1467
msgid "one of the strings \"auto\", \"user\", \"noresize\""
msgstr "jeden z ciągów znaków „auto”, „user”, „noresize”"

#: ../../library/turtle.rst:1469
msgid ""
"Set resizemode to one of the values: \"auto\", \"user\", \"noresize\".  If "
"*rmode* is not given, return current resizemode.  Different resizemodes have "
"the following effects:"
msgstr ""
"Ustawia tryb zmiany rozmiaru na jedną z wartości: „auto”, „user”, "
"„noresize”. Jeśli nie podano *rmode*, zwraca bieżący tryb zmiany rozmiaru. "
"Różne tryby zmiany rozmiaru mają następujące skutki:"

#: ../../library/turtle.rst:1473
msgid ""
"\"auto\": adapts the appearance of the turtle corresponding to the value of "
"pensize."
msgstr "\"auto\": dostosowuje wygląd żółwia do wartości rozmiaru pióra."

#: ../../library/turtle.rst:1474
msgid ""
"\"user\": adapts the appearance of the turtle according to the values of "
"stretchfactor and outlinewidth (outline), which are set by :func:`shapesize`."
msgstr ""
"\"user\": адаптує зовнішній вигляд черепахи відповідно до значень "
"stretchfactor і outlinewidth (контур), які встановлюються :func:`shapesize`."

#: ../../library/turtle.rst:1477
msgid "\"noresize\": no adaption of the turtle's appearance takes place."
msgstr "\"noresize\": адаптація зовнішнього вигляду черепахи не відбувається."

#: ../../library/turtle.rst:1479
msgid ""
"``resizemode(\"user\")`` is called by :func:`shapesize` when used with "
"arguments."
msgstr ""
"``resizemode(\"user\")`` викликається :func:`shapesize` при використанні з "
"аргументами."

#: ../../library/turtle.rst:1481
msgid ""
">>> turtle.resizemode()\n"
"'noresize'\n"
">>> turtle.resizemode(\"auto\")\n"
">>> turtle.resizemode()\n"
"'auto'"
msgstr ""

#: ../../library/turtle.rst:1494 ../../library/turtle.rst:1495
#: ../../library/turtle.rst:1496
msgid "positive number"
msgstr "позитивне число"

#: ../../library/turtle.rst:1498
msgid ""
"Return or set the pen's attributes x/y-stretchfactors and/or outline.  Set "
"resizemode to \"user\".  If and only if resizemode is set to \"user\", the "
"turtle will be displayed stretched according to its stretchfactors: "
"*stretch_wid* is stretchfactor perpendicular to its orientation, "
"*stretch_len* is stretchfactor in direction of its orientation, *outline* "
"determines the width of the shape's outline."
msgstr ""

#: ../../library/turtle.rst:1505
msgid ""
">>> turtle.shapesize()\n"
"(1.0, 1.0, 1)\n"
">>> turtle.resizemode(\"user\")\n"
">>> turtle.shapesize(5, 5, 12)\n"
">>> turtle.shapesize()\n"
"(5, 5, 12)\n"
">>> turtle.shapesize(outline=8)\n"
">>> turtle.shapesize()\n"
"(5, 5, 8)"
msgstr ""

#: ../../library/turtle.rst:1521 ../../library/turtle.rst:2193
#: ../../library/turtle.rst:2194 ../../library/turtle.rst:2195
msgid "number (optional)"
msgstr "номер (необов'язково)"

#: ../../library/turtle.rst:1523
msgid ""
"Set or return the current shearfactor. Shear the turtleshape according to "
"the given shearfactor shear, which is the tangent of the shear angle. Do "
"*not* change the turtle's heading (direction of movement). If shear is not "
"given: return the current shearfactor, i. e. the tangent of the shear angle, "
"by which lines parallel to the heading of the turtle are sheared."
msgstr ""
"Встановити або повернути поточний коефіцієнт зсуву. Зрізайте форму черепахи "
"відповідно до заданого коефіцієнта зсуву, який є тангенсом кута зсуву. *Не* "
"змінюйте курс (напрямок руху) черепахи. Якщо зсув не вказано: повернути "
"поточний коефіцієнт зсуву, тобто. д. тангенс кута зсуву, за яким зрізаються "
"лінії, паралельні курсу черепахи."

#: ../../library/turtle.rst:1530
msgid ""
">>> turtle.shape(\"circle\")\n"
">>> turtle.shapesize(5,2)\n"
">>> turtle.shearfactor(0.5)\n"
">>> turtle.shearfactor()\n"
"0.5"
msgstr ""

#: ../../library/turtle.rst:1544
msgid ""
"Rotate the turtleshape by *angle* from its current tilt-angle, but do *not* "
"change the turtle's heading (direction of movement)."
msgstr ""
"Поверніть форму черепахи на *кут* від її поточного кута нахилу, але *не* "
"змінюйте напрям черепахи (напрямок руху)."

#: ../../library/turtle.rst:1547
msgid ""
">>> turtle.reset()\n"
">>> turtle.shape(\"circle\")\n"
">>> turtle.shapesize(5,2)\n"
">>> turtle.tilt(30)\n"
">>> turtle.fd(50)\n"
">>> turtle.tilt(30)\n"
">>> turtle.fd(50)"
msgstr ""

#: ../../library/turtle.rst:1561 ../../library/turtle.rst:1584
#: ../../library/turtle.rst:1585 ../../library/turtle.rst:1586
#: ../../library/turtle.rst:1587
msgid "a number (optional)"
msgstr "число (необов'язково)"

#: ../../library/turtle.rst:1563
msgid ""
"Set or return the current tilt-angle. If angle is given, rotate the "
"turtleshape to point in the direction specified by angle, regardless of its "
"current tilt-angle. Do *not* change the turtle's heading (direction of "
"movement). If angle is not given: return the current tilt-angle, i. e. the "
"angle between the orientation of the turtleshape and the heading of the "
"turtle (its direction of movement)."
msgstr ""
"Встановити або повернути поточний кут нахилу. Якщо задано кут, обертайте "
"фігуру черепахи в напрямку, визначеному кутом, незалежно від її поточного "
"кута нахилу. *Не* змінюйте курс (напрямок руху) черепахи. Якщо кут не "
"вказано: повернути поточний кут нахилу, тобто. д. кут між орієнтацією фігури "
"черепахи та курсом черепахи (напрямок її руху)."

#: ../../library/turtle.rst:1571
msgid ""
">>> turtle.reset()\n"
">>> turtle.shape(\"circle\")\n"
">>> turtle.shapesize(5,2)\n"
">>> turtle.tilt(45)\n"
">>> turtle.tiltangle()\n"
"45.0"
msgstr ""

#: ../../library/turtle.rst:1589
msgid "Set or return the current transformation matrix of the turtle shape."
msgstr "Встановити або повернути поточну матрицю перетворення фігури черепахи."

#: ../../library/turtle.rst:1591
msgid ""
"If none of the matrix elements are given, return the transformation matrix "
"as a tuple of 4 elements. Otherwise set the given elements and transform the "
"turtleshape according to the matrix consisting of first row t11, t12 and "
"second row t21, t22. The determinant t11 * t22 - t12 * t21 must not be zero, "
"otherwise an error is raised. Modify stretchfactor, shearfactor and "
"tiltangle according to the given matrix."
msgstr ""
"Якщо жоден з елементів матриці не задано, поверніть матрицю перетворення як "
"кортеж із 4 елементів. В іншому випадку встановіть задані елементи та "
"перетворіть форму черепахи відповідно до матриці, що складається з першого "
"рядка t11, t12 і другого рядка t21, t22. Визначник t11 * t22 - t12 * t21 не "
"повинен дорівнювати нулю, інакше виникає помилка. Змініть коефіцієнт "
"розтягування, коефіцієнт зсуву та кут нахилу відповідно до заданої матриці."

#: ../../library/turtle.rst:1600
msgid ""
">>> turtle = Turtle()\n"
">>> turtle.shape(\"square\")\n"
">>> turtle.shapesize(4,2)\n"
">>> turtle.shearfactor(-0.5)\n"
">>> turtle.shapetransform()\n"
"(4.0, -1.0, -0.0, 2.0)"
msgstr ""

#: ../../library/turtle.rst:1613
msgid ""
"Return the current shape polygon as tuple of coordinate pairs. This can be "
"used to define a new shape or components of a compound shape."
msgstr ""
"Повертає поточний полігон форми як кортеж пар координат. Це можна "
"використовувати для визначення нової форми або компонентів складеної форми."

#: ../../library/turtle.rst:1616
msgid ""
">>> turtle.shape(\"square\")\n"
">>> turtle.shapetransform(4, -1, 0, 2)\n"
">>> turtle.get_shapepoly()\n"
"((50, -20), (30, 20), (-50, 20), (-30, -20))"
msgstr ""

#: ../../library/turtle.rst:1631 ../../library/turtle.rst:1653
#: ../../library/turtle.rst:1678 ../../library/turtle.rst:2117
msgid ""
"a function with two arguments which will be called with the coordinates of "
"the clicked point on the canvas"
msgstr ""
"функція з двома аргументами, яка буде викликана з координатами вибраної "
"точки на полотні"

#: ../../library/turtle.rst:1633 ../../library/turtle.rst:1655
#: ../../library/turtle.rst:1680 ../../library/turtle.rst:2119
msgid "number of the mouse-button, defaults to 1 (left mouse button)"
msgstr "номер кнопки миші, за замовчуванням 1 (ліва кнопка миші)"

#: ../../library/turtle.rst:1634 ../../library/turtle.rst:1656
#: ../../library/turtle.rst:1681 ../../library/turtle.rst:2120
msgid ""
"``True`` or ``False`` -- if ``True``, a new binding will be added, otherwise "
"it will replace a former binding"
msgstr ""
"``True`` або ``False`` - якщо ``True``, буде додано нове прив'язування, "
"інакше воно замінить попереднє прив'язування"

#: ../../library/turtle.rst:1637
msgid ""
"Bind *fun* to mouse-click events on this turtle.  If *fun* is ``None``, "
"existing bindings are removed.  Example for the anonymous turtle, i.e. the "
"procedural way:"
msgstr ""
"Прив’яжіть *fun* до подій клацання миші на цій черепахі. Якщо *fun* має "
"значення ``None``, існуючі прив’язки видаляються. Приклад для анонімної "
"черепахи, тобто процедурний спосіб:"

#: ../../library/turtle.rst:1641
msgid ""
">>> def turn(x, y):\n"
"...     left(180)\n"
"...\n"
">>> onclick(turn)  # Now clicking into the turtle will turn it.\n"
">>> onclick(None)  # event-binding will be removed"
msgstr ""

#: ../../library/turtle.rst:1659
msgid ""
"Bind *fun* to mouse-button-release events on this turtle.  If *fun* is "
"``None``, existing bindings are removed."
msgstr ""
"Прив’яжіть *fun* до подій натискання кнопки миші на цій черепашці. Якщо "
"*fun* має значення ``None``, існуючі прив’язки видаляються."

#: ../../library/turtle.rst:1662
msgid ""
">>> class MyTurtle(Turtle):\n"
"...     def glow(self,x,y):\n"
"...         self.fillcolor(\"red\")\n"
"...     def unglow(self,x,y):\n"
"...         self.fillcolor(\"\")\n"
"...\n"
">>> turtle = MyTurtle()\n"
">>> turtle.onclick(turtle.glow)     # clicking on turtle turns fillcolor "
"red,\n"
">>> turtle.onrelease(turtle.unglow) # releasing turns it to transparent."
msgstr ""

#: ../../library/turtle.rst:1684
msgid ""
"Bind *fun* to mouse-move events on this turtle.  If *fun* is ``None``, "
"existing bindings are removed."
msgstr ""
"Прив’яжіть *fun* до подій руху миші на цій черепахі. Якщо *fun* має значення "
"``None``, існуючі прив’язки видаляються."

#: ../../library/turtle.rst:1687
msgid ""
"Remark: Every sequence of mouse-move-events on a turtle is preceded by a "
"mouse-click event on that turtle."
msgstr ""
"Примітка: кожній послідовності подій переміщення миші на черепахі передує "
"подія клацання миші на цій черепашці."

#: ../../library/turtle.rst:1690
msgid ">>> turtle.ondrag(turtle.goto)"
msgstr ""

#: ../../library/turtle.rst:1695
msgid ""
"Subsequently, clicking and dragging the Turtle will move it across the "
"screen thereby producing handdrawings (if pen is down)."
msgstr ""
"Згодом, клацання та перетягування Черепахи переміщуватиме її по екрану, "
"таким чином створюючи малюнки (якщо ручка опущена)."

#: ../../library/turtle.rst:1705
msgid ""
"Record the vertices of a polygon drawn in the ``with turtle.poly():`` block. "
"The first and last vertices will be connected."
msgstr ""

#: ../../library/turtle.rst:1708
msgid ""
">>> with turtle.poly():\n"
"...     turtle.forward(100)\n"
"...     turtle.right(60)\n"
"...     turtle.forward(100)"
msgstr ""

#: ../../library/turtle.rst:1721
msgid ""
"Start recording the vertices of a polygon.  Current turtle position is first "
"vertex of polygon."
msgstr ""
"Почніть записувати вершини багатокутника. Поточна позиція черепахи є першою "
"вершиною багатокутника."

#: ../../library/turtle.rst:1727
msgid ""
"Stop recording the vertices of a polygon.  Current turtle position is last "
"vertex of polygon.  This will be connected with the first vertex."
msgstr ""
"Припинення запису вершин багатокутника. Поточна позиція черепахи є останньою "
"вершиною багатокутника. Це буде пов'язано з першою вершиною."

#: ../../library/turtle.rst:1733
msgid "Return the last recorded polygon."
msgstr "Повернути останній записаний багатокутник."

#: ../../library/turtle.rst:1735
msgid ""
">>> turtle.home()\n"
">>> turtle.begin_poly()\n"
">>> turtle.fd(100)\n"
">>> turtle.left(20)\n"
">>> turtle.fd(30)\n"
">>> turtle.left(60)\n"
">>> turtle.fd(50)\n"
">>> turtle.end_poly()\n"
">>> p = turtle.get_poly()\n"
">>> register_shape(\"myFavouriteShape\", p)"
msgstr ""

#: ../../library/turtle.rst:1752
msgid ""
"Create and return a clone of the turtle with same position, heading and "
"turtle properties."
msgstr ""
"Створити та повернути клон черепахи з такими ж властивостями положення, "
"заголовка та черепахи."

#: ../../library/turtle.rst:1755
msgid ""
">>> mick = Turtle()\n"
">>> joe = mick.clone()"
msgstr ""

#: ../../library/turtle.rst:1765
msgid ""
"Return the Turtle object itself.  Only reasonable use: as a function to "
"return the \"anonymous turtle\":"
msgstr ""
"Поверніть сам об'єкт Черепаха. Лише розумне використання: як функція для "
"повернення \"анонімної черепахи\":"

#: ../../library/turtle.rst:1768
msgid ""
">>> pet = getturtle()\n"
">>> pet.fd(50)\n"
">>> pet\n"
"<turtle.Turtle object at 0x...>"
msgstr ""

#: ../../library/turtle.rst:1779
msgid ""
"Return the :class:`TurtleScreen` object the turtle is drawing on. "
"TurtleScreen methods can then be called for that object."
msgstr ""
"Повертає об’єкт :class:`TurtleScreen`, на якому малює черепаха. Тоді для "
"цього об’єкта можна викликати методи TurtleScreen."

#: ../../library/turtle.rst:1782
msgid ""
">>> ts = turtle.getscreen()\n"
">>> ts\n"
"<turtle._Screen object at 0x...>\n"
">>> ts.bgcolor(\"pink\")"
msgstr ""

#: ../../library/turtle.rst:1793
msgid "an integer or ``None``"
msgstr "ціле число або ``Жодного``"

#: ../../library/turtle.rst:1795
msgid ""
"Set or disable undobuffer.  If *size* is an integer, an empty undobuffer of "
"given size is installed.  *size* gives the maximum number of turtle actions "
"that can be undone by the :func:`undo` method/function.  If *size* is "
"``None``, the undobuffer is disabled."
msgstr ""
"Встановити або вимкнути undobuffer. Якщо *size* є цілим числом, "
"встановлюється порожній undobuffer заданого розміру. *size* визначає "
"максимальну кількість дій черепахи, які можна скасувати за допомогою методу/"
"функції :func:`undo`. Якщо *size* має значення ``None``, undobuffer вимкнено."

#: ../../library/turtle.rst:1800
msgid ">>> turtle.setundobuffer(42)"
msgstr ""

#: ../../library/turtle.rst:1808
msgid "Return number of entries in the undobuffer."
msgstr "Повертає кількість записів у undobuffer."

#: ../../library/turtle.rst:1810
msgid ""
">>> while undobufferentries():\n"
"...     undo()"
msgstr ""

#: ../../library/turtle.rst:1821
msgid "Compound shapes"
msgstr "Складені форми"

#: ../../library/turtle.rst:1823
msgid ""
"To use compound turtle shapes, which consist of several polygons of "
"different color, you must use the helper class :class:`Shape` explicitly as "
"described below:"
msgstr ""
"Щоб використовувати складені форми черепахи, які складаються з кількох "
"багатокутників різного кольору, ви повинні використовувати допоміжний клас :"
"class:`Shape` явно, як описано нижче:"

#: ../../library/turtle.rst:1827
msgid "Create an empty Shape object of type \"compound\"."
msgstr "Створіть порожній об'єкт Shape типу \"compound\"."

#: ../../library/turtle.rst:1828
msgid ""
"Add as many components to this object as desired, using the :meth:`~Shape."
"addcomponent` method."
msgstr ""

#: ../../library/turtle.rst:1831
msgid "For example:"
msgstr "Na przykład::"

#: ../../library/turtle.rst:1833
msgid ""
">>> s = Shape(\"compound\")\n"
">>> poly1 = ((0,0),(10,-5),(0,10),(-10,-5))\n"
">>> s.addcomponent(poly1, \"red\", \"blue\")\n"
">>> poly2 = ((0,0),(10,-5),(-10,-5))\n"
">>> s.addcomponent(poly2, \"blue\", \"red\")"
msgstr ""

#: ../../library/turtle.rst:1842
msgid "Now add the Shape to the Screen's shapelist and use it:"
msgstr "Тепер додайте форму до списку форм екрана та використовуйте її:"

#: ../../library/turtle.rst:1844
msgid ""
">>> register_shape(\"myshape\", s)\n"
">>> shape(\"myshape\")"
msgstr ""

#: ../../library/turtle.rst:1853
msgid ""
"The :class:`Shape` class is used internally by the :func:`register_shape` "
"method in different ways.  The application programmer has to deal with the "
"Shape class *only* when using compound shapes like shown above!"
msgstr ""
"Клас :class:`Shape` використовується внутрішньо методом :func:"
"`register_shape` різними способами. Програміст прикладної програми має "
"працювати з класом Shape *тільки* під час використання складених фігур, як "
"показано вище!"

#: ../../library/turtle.rst:1859
msgid "Methods of TurtleScreen/Screen and corresponding functions"
msgstr "Методи TurtleScreen/Screen та відповідні функції"

#: ../../library/turtle.rst:1861
msgid ""
"Most of the examples in this section refer to a TurtleScreen instance called "
"``screen``."
msgstr ""
"Більшість прикладів у цьому розділі стосуються екземпляра TurtleScreen під "
"назвою ``screen``."

#: ../../library/turtle.rst:1875
msgid ""
"a color string or three numbers in the range 0..colormode or a 3-tuple of "
"such numbers"
msgstr ""
"кольоровий рядок або три числа в діапазоні 0..colormode або 3-кортеж таких "
"чисел"

#: ../../library/turtle.rst:1879
msgid "Set or return background color of the TurtleScreen."
msgstr "Встановити або повернути фоновий колір TurtleScreen."

#: ../../library/turtle.rst:1881
msgid ""
">>> screen.bgcolor(\"orange\")\n"
">>> screen.bgcolor()\n"
"'orange'\n"
">>> screen.bgcolor(\"#800080\")\n"
">>> screen.bgcolor()\n"
"(128.0, 0.0, 128.0)"
msgstr ""

#: ../../library/turtle.rst:1894
msgid ""
"a string, name of an image file (PNG, GIF, PGM, and PPM) or ``\"nopic\"``, "
"or ``None``"
msgstr ""

#: ../../library/turtle.rst:1897
msgid ""
"Set background image or return name of current backgroundimage.  If "
"*picname* is a filename, set the corresponding image as background.  If "
"*picname* is ``\"nopic\"``, delete background image, if present.  If "
"*picname* is ``None``, return the filename of the current backgroundimage. ::"
msgstr ""
"Установити фонове зображення або повернути назву поточного фонового "
"зображення. Якщо *picname* є назвою файлу, встановіть відповідне зображення "
"як фонове зображення. Якщо *picname* має значення ``\"nopic\"``, видаліть "
"фонове зображення, якщо воно є. Якщо *picname* має значення ``None``, "
"повертає назву файлу поточного фонового зображення. ::"

#: ../../library/turtle.rst:1902
msgid ""
">>> screen.bgpic()\n"
"'nopic'\n"
">>> screen.bgpic(\"landscape.gif\")\n"
">>> screen.bgpic()\n"
"\"landscape.gif\""
msgstr ""

#: ../../library/turtle.rst:1913
msgid ""
"This TurtleScreen method is available as a global function only under the "
"name ``clearscreen``.  The global function ``clear`` is a different one "
"derived from the Turtle method ``clear``."
msgstr ""
"Цей метод TurtleScreen доступний як глобальна функція лише під назвою "
"``clearscreen``. Глобальна функція ``clear`` є іншою, похідною від методу "
"Turtle ``clear``."

#: ../../library/turtle.rst:1920
msgid ""
"Delete all drawings and all turtles from the TurtleScreen.  Reset the now "
"empty TurtleScreen to its initial state: white background, no background "
"image, no event bindings and tracing on."
msgstr ""
"Видаліть усі малюнки та всіх черепах із TurtleScreen. Скиньте тепер порожній "
"TurtleScreen до початкового стану: білий фон, без фонового зображення, без "
"прив’язок подій і трасування."

#: ../../library/turtle.rst:1929
msgid ""
"This TurtleScreen method is available as a global function only under the "
"name ``resetscreen``.  The global function ``reset`` is another one derived "
"from the Turtle method ``reset``."
msgstr ""
"Цей метод TurtleScreen доступний як глобальна функція лише під назвою "
"``resetscreen``. Глобальна функція ``reset`` є ще однією похідною від методу "
"Turtle ``reset``."

#: ../../library/turtle.rst:1936
msgid "Reset all Turtles on the Screen to their initial state."
msgstr "Скинути всіх Черепашок на екрані до початкового стану."

#: ../../library/turtle.rst:1941
msgid "positive integer, new width of canvas in pixels"
msgstr "додатне ціле число, нова ширина полотна в пікселях"

#: ../../library/turtle.rst:1942
msgid "positive integer, new height of canvas in pixels"
msgstr "натуральне число, нова висота полотна в пікселях"

#: ../../library/turtle.rst:1943
msgid "colorstring or color-tuple, new background color"
msgstr "рядок кольорів або кортеж кольорів, новий колір тла"

#: ../../library/turtle.rst:1945
msgid ""
"If no arguments are given, return current (canvaswidth, canvasheight).  Else "
"resize the canvas the turtles are drawing on.  Do not alter the drawing "
"window.  To observe hidden parts of the canvas, use the scrollbars. With "
"this method, one can make visible those parts of a drawing which were "
"outside the canvas before."
msgstr ""
"Якщо аргументи не вказано, повертає поточний (ширина полотна, висота "
"полотна). Інакше змініть розмір полотна, на якому малюють черепахи. Не "
"змінюйте вікно малювання. Щоб спостерігати за прихованими частинами полотна, "
"використовуйте смуги прокрутки. За допомогою цього методу можна зробити "
"видимими ті частини малюнка, які раніше були за межами полотна."

#: ../../library/turtle.rst:1957
msgid "e.g. to search for an erroneously escaped turtle ;-)"
msgstr "напр. шукати черепаху, яка помилково втекла ;-)"

#: ../../library/turtle.rst:1962
msgid "a number, x-coordinate of lower left corner of canvas"
msgstr "число, х-координата нижнього лівого кута полотна"

#: ../../library/turtle.rst:1963
msgid "a number, y-coordinate of lower left corner of canvas"
msgstr "число, y-координата нижнього лівого кута полотна"

#: ../../library/turtle.rst:1964
msgid "a number, x-coordinate of upper right corner of canvas"
msgstr "число, х-координата верхнього правого кута полотна"

#: ../../library/turtle.rst:1965
msgid "a number, y-coordinate of upper right corner of canvas"
msgstr "число, y-координата верхнього правого кута полотна"

#: ../../library/turtle.rst:1967
msgid ""
"Set up user-defined coordinate system and switch to mode \"world\" if "
"necessary.  This performs a ``screen.reset()``.  If mode \"world\" is "
"already active, all drawings are redrawn according to the new coordinates."
msgstr ""
"Налаштуйте визначену користувачем систему координат і за необхідності "
"перейдіть у режим \"світ\". Це виконує ``screen.reset()``. Якщо режим "
"\"світ\" вже активний, то всі малюнки перемальовуються відповідно до нових "
"координат."

#: ../../library/turtle.rst:1971
msgid ""
"**ATTENTION**: in user-defined coordinate systems angles may appear "
"distorted."
msgstr ""
"**УВАГА**: у визначених користувачем системах координат кути можуть "
"виглядати спотвореними."

#: ../../library/turtle.rst:1974
msgid ""
">>> screen.reset()\n"
">>> screen.setworldcoordinates(-50,-7.5,50,7.5)\n"
">>> for _ in range(72):\n"
"...     left(10)\n"
"...\n"
">>> for _ in range(8):\n"
"...     left(45); fd(2)   # a regular octagon"
msgstr ""

#: ../../library/turtle.rst:1999
msgid ""
"Temporarily disable turtle animation. The code written inside the "
"``no_animation`` block will not be animated; once the code block is exited, "
"the drawing will appear."
msgstr ""

#: ../../library/turtle.rst:2003
msgid ""
">>> with screen.no_animation():\n"
"...     for dist in range(2, 400, 2):\n"
"...         fd(dist)\n"
"...         rt(90)"
msgstr ""

#: ../../library/turtle.rst:2016
msgid "positive integer"
msgstr "натуральне число"

#: ../../library/turtle.rst:2018
msgid ""
"Set or return the drawing *delay* in milliseconds.  (This is approximately "
"the time interval between two consecutive canvas updates.)  The longer the "
"drawing delay, the slower the animation."
msgstr ""
"Встановити або повернути *затримку* малювання в мілісекундах. (Це приблизно "
"інтервал часу між двома послідовними оновленнями полотна.) Що довша затримка "
"малювання, то повільніша анімація."

#: ../../library/turtle.rst:2022
msgid "Optional argument:"
msgstr "Необов'язковий аргумент:"

#: ../../library/turtle.rst:2024
msgid ""
">>> screen.delay()\n"
"10\n"
">>> screen.delay(5)\n"
">>> screen.delay()\n"
"5"
msgstr ""

#: ../../library/turtle.rst:2036 ../../library/turtle.rst:2037
msgid "nonnegative integer"
msgstr "ціле невід’ємне число"

#: ../../library/turtle.rst:2039
msgid ""
"Turn turtle animation on/off and set delay for update drawings.  If *n* is "
"given, only each n-th regular screen update is really performed.  (Can be "
"used to accelerate the drawing of complex graphics.)  When called without "
"arguments, returns the currently stored value of n. Second argument sets "
"delay value (see :func:`delay`)."
msgstr ""
"Увімкніть/вимкніть анімацію черепахи та встановіть затримку для оновлення "
"малюнків. Якщо задано *n*, дійсно виконується лише кожне n-е регулярне "
"оновлення екрана. (Можна використовувати для прискорення малювання складної "
"графіки.) При виклику без аргументів повертає поточне збережене значення n. "
"Другий аргумент встановлює значення затримки (див. :func:`delay`)."

#: ../../library/turtle.rst:2046
msgid ""
">>> screen.tracer(8, 25)\n"
">>> dist = 2\n"
">>> for i in range(200):\n"
"...     fd(dist)\n"
"...     rt(90)\n"
"...     dist += 2"
msgstr ""

#: ../../library/turtle.rst:2059
msgid "Perform a TurtleScreen update. To be used when tracer is turned off."
msgstr ""
"Виконайте оновлення TurtleScreen. Використовується, коли трасувальник "
"вимкнено."

#: ../../library/turtle.rst:2061
msgid "See also the RawTurtle/Turtle method :func:`speed`."
msgstr "Дивіться також метод RawTurtle/Turtle :func:`speed`."

#: ../../library/turtle.rst:2069
msgid ""
"Set focus on TurtleScreen (in order to collect key-events).  Dummy arguments "
"are provided in order to be able to pass :func:`listen` to the onclick "
"method."
msgstr ""
"Встановити фокус на TurtleScreen (щоб збирати ключові події). Фіктивні "
"аргументи надаються, щоб можна було передати :func:`listen` методу onclick."

#: ../../library/turtle.rst:2076 ../../library/turtle.rst:2096
msgid "a function with no arguments or ``None``"
msgstr "функція без аргументів або ``None``"

#: ../../library/turtle.rst:2077 ../../library/turtle.rst:2097
msgid "a string: key (e.g. \"a\") or key-symbol (e.g. \"space\")"
msgstr ""
"рядок: клавіша (наприклад, \"a\") або клавіша-символ (наприклад, \"пробіл\")"

#: ../../library/turtle.rst:2079
msgid ""
"Bind *fun* to key-release event of key.  If *fun* is ``None``, event "
"bindings are removed. Remark: in order to be able to register key-events, "
"TurtleScreen must have the focus. (See method :func:`listen`.)"
msgstr ""
"Прив’яжіть *fun* до події звільнення ключа ключа. Якщо *fun* має значення "
"``None``, прив’язки подій видаляються. Примітка: щоб мати можливість "
"реєструвати ключові події, TurtleScreen повинен мати фокус. (Див. метод :"
"func:`listen`.)"

#: ../../library/turtle.rst:2083
msgid ""
">>> def f():\n"
"...     fd(50)\n"
"...     lt(60)\n"
"...\n"
">>> screen.onkey(f, \"Up\")\n"
">>> screen.listen()"
msgstr ""

#: ../../library/turtle.rst:2099
msgid ""
"Bind *fun* to key-press event of key if key is given, or to any key-press-"
"event if no key is given. Remark: in order to be able to register key-"
"events, TurtleScreen must have focus. (See method :func:`listen`.)"
msgstr ""
"Прив’яжіть *fun* до події натискання клавіші key, якщо клавішу вказано, або "
"до будь-якої події натискання клавіші, якщо клавіша не вказана. Примітка: "
"щоб мати можливість реєструвати ключові події, TurtleScreen повинен мати "
"фокус. (Див. метод :func:`listen`.)"

#: ../../library/turtle.rst:2104
msgid ""
">>> def f():\n"
"...     fd(50)\n"
"...\n"
">>> screen.onkey(f, \"Up\")\n"
">>> screen.listen()"
msgstr ""

#: ../../library/turtle.rst:2123
msgid ""
"Bind *fun* to mouse-click events on this screen.  If *fun* is ``None``, "
"existing bindings are removed."
msgstr ""
"Прив’яжіть *fun* до подій клацання миші на цьому екрані. Якщо *fun* має "
"значення ``None``, існуючі прив’язки видаляються."

#: ../../library/turtle.rst:2126
msgid ""
"Example for a TurtleScreen instance named ``screen`` and a Turtle instance "
"named ``turtle``:"
msgstr ""
"Приклад екземпляра TurtleScreen під назвою ``screen`` і примірника Turtle "
"під назвою ``turtle``:"

#: ../../library/turtle.rst:2129
msgid ""
">>> screen.onclick(turtle.goto) # Subsequently clicking into the "
"TurtleScreen will\n"
">>>                             # make the turtle move to the clicked "
"point.\n"
">>> screen.onclick(None)        # remove event binding again"
msgstr ""

#: ../../library/turtle.rst:2137
msgid ""
"This TurtleScreen method is available as a global function only under the "
"name ``onscreenclick``.  The global function ``onclick`` is another one "
"derived from the Turtle method ``onclick``."
msgstr ""
"Цей метод TurtleScreen доступний як глобальна функція лише під назвою "
"``onscreenclick``. Глобальна функція ``onclick`` є ще однією похідною від "
"методу Turtle ``onclick``."

#: ../../library/turtle.rst:2144
msgid "a function with no arguments"
msgstr "функція без аргументів"

#: ../../library/turtle.rst:2145
msgid "a number >= 0"
msgstr "число >= 0"

#: ../../library/turtle.rst:2147
msgid "Install a timer that calls *fun* after *t* milliseconds."
msgstr "Встановіть таймер, який викликає *fun* через *t* мілісекунд."

#: ../../library/turtle.rst:2149
msgid ""
">>> running = True\n"
">>> def f():\n"
"...     if running:\n"
"...         fd(50)\n"
"...         lt(60)\n"
"...         screen.ontimer(f, 250)\n"
">>> f()   ### makes the turtle march around\n"
">>> running = False"
msgstr ""

#: ../../library/turtle.rst:2165
msgid ""
"Starts event loop - calling Tkinter's mainloop function. Must be the last "
"statement in a turtle graphics program. Must *not* be used if a script is "
"run from within IDLE in -n mode (No subprocess) - for interactive use of "
"turtle graphics. ::"
msgstr ""
"Запускає цикл подій - виклик функції основного циклу Tkinter. Має бути "
"останнім оператором у графічній програмі Turtle. Його *не* можна "
"використовувати, якщо сценарій запускається з IDLE у режимі -n (без "
"підпроцесу) — для інтерактивного використання черепахової графіки. ::"

#: ../../library/turtle.rst:2170
msgid ">>> screen.mainloop()"
msgstr ""

#: ../../library/turtle.rst:2178 ../../library/turtle.rst:2179
#: ../../library/turtle.rst:2191 ../../library/turtle.rst:2192
msgid "string"
msgstr "رشته"

#: ../../library/turtle.rst:2181
msgid ""
"Pop up a dialog window for input of a string. Parameter title is the title "
"of the dialog window, prompt is a text mostly describing what information to "
"input. Return the string input. If the dialog is canceled, return "
"``None``. ::"
msgstr ""
"Відкрити діалогове вікно для введення рядка. Заголовок параметра — це "
"заголовок діалогового вікна, підказка — це текст, який переважно описує, яку "
"інформацію потрібно ввести. Повернути введений рядок. Якщо діалогове вікно "
"скасовано, поверніть ``None``. ::"

#: ../../library/turtle.rst:2186
msgid ">>> screen.textinput(\"NIM\", \"Name of first player:\")"
msgstr ""

#: ../../library/turtle.rst:2197
msgid ""
"Pop up a dialog window for input of a number. title is the title of the "
"dialog window, prompt is a text mostly describing what numerical information "
"to input. default: default value, minval: minimum value for input, maxval: "
"maximum value for input. The number input must be in the range minval .. "
"maxval if these are given. If not, a hint is issued and the dialog remains "
"open for correction. Return the number input. If the dialog is canceled,  "
"return ``None``. ::"
msgstr ""

#: ../../library/turtle.rst:2206
msgid ""
">>> screen.numinput(\"Poker\", \"Your stakes:\", 1000, minval=10, "
"maxval=10000)"
msgstr ""

#: ../../library/turtle.rst:2214
msgid "one of the strings \"standard\", \"logo\" or \"world\""
msgstr "один із рядків \"standard\", \"logo\" або \"world\""

#: ../../library/turtle.rst:2216
msgid ""
"Set turtle mode (\"standard\", \"logo\" or \"world\") and perform reset.  If "
"mode is not given, current mode is returned."
msgstr ""
"Встановіть режим черепахи (\"стандартний\", \"логотип\" або \"світ\") і "
"виконайте скидання. Якщо режим не вказано, повертається поточний режим."

#: ../../library/turtle.rst:2219
msgid ""
"Mode \"standard\" is compatible with old :mod:`turtle`.  Mode \"logo\" is "
"compatible with most Logo turtle graphics.  Mode \"world\" uses user-defined "
"\"world coordinates\". **Attention**: in this mode angles appear distorted "
"if ``x/y`` unit-ratio doesn't equal 1."
msgstr ""
"Режим \"стандартний\" сумісний зі старим :mod:`turtle`. Режим \"логотип\" "
"сумісний із більшістю зображень логотипів черепахи. Режим \"світ\" "
"використовує визначені користувачем \"світові координати\". **Увага**: у "
"цьому режимі кути виглядають спотвореними, якщо одиничне співвідношення ``x/"
"y`` не дорівнює 1."

#: ../../library/turtle.rst:2225
msgid "Mode"
msgstr "Режим"

#: ../../library/turtle.rst:2225
msgid "Initial turtle heading"
msgstr "Початковий курс черепахи"

#: ../../library/turtle.rst:2225
msgid "positive angles"
msgstr "позитивні кути"

#: ../../library/turtle.rst:2227
msgid "\"standard\""
msgstr "\"стандарт\""

#: ../../library/turtle.rst:2227
msgid "to the right (east)"
msgstr "праворуч (схід)"

#: ../../library/turtle.rst:2227
msgid "counterclockwise"
msgstr "проти годинникової стрілки"

#: ../../library/turtle.rst:2228
msgid "\"logo\""
msgstr "\"логотип\""

#: ../../library/turtle.rst:2228
msgid "upward    (north)"
msgstr "вгору (на північ)"

#: ../../library/turtle.rst:2228
msgid "clockwise"
msgstr "за годинниковою стрілкою"

#: ../../library/turtle.rst:2231
msgid ""
">>> mode(\"logo\")   # resets turtle heading to north\n"
">>> mode()\n"
"'logo'"
msgstr ""

#: ../../library/turtle.rst:2241
msgid "one of the values 1.0 or 255"
msgstr "одне зі значень 1,0 або 255"

#: ../../library/turtle.rst:2243
msgid ""
"Return the colormode or set it to 1.0 or 255.  Subsequently *r*, *g*, *b* "
"values of color triples have to be in the range 0..*cmode*."
msgstr ""

#: ../../library/turtle.rst:2246
msgid ""
">>> screen.colormode(1)\n"
">>> turtle.pencolor(240, 160, 80)\n"
"Traceback (most recent call last):\n"
"     ...\n"
"TurtleGraphicsError: bad color sequence: (240, 160, 80)\n"
">>> screen.colormode()\n"
"1.0\n"
">>> screen.colormode(255)\n"
">>> screen.colormode()\n"
"255\n"
">>> turtle.pencolor(240,160,80)"
msgstr ""

#: ../../library/turtle.rst:2264
msgid ""
"Return the Canvas of this TurtleScreen.  Useful for insiders who know what "
"to do with a Tkinter Canvas."
msgstr ""
"Поверніть Canvas цього TurtleScreen. Корисно для інсайдерів, які знають, що "
"робити з Tkinter Canvas."

#: ../../library/turtle.rst:2267
msgid ""
">>> cv = screen.getcanvas()\n"
">>> cv\n"
"<turtle.ScrolledCanvas object ...>"
msgstr ""

#: ../../library/turtle.rst:2277
msgid "Return a list of names of all currently available turtle shapes."
msgstr "Повертає список імен усіх наявних на даний момент форм черепахи."

#: ../../library/turtle.rst:2279
msgid ""
">>> screen.getshapes()\n"
"['arrow', 'blank', 'circle', ..., 'turtle']"
msgstr ""

#: ../../library/turtle.rst:2289
msgid "There are four different ways to call this function:"
msgstr ""

#: ../../library/turtle.rst:2291
msgid ""
"*name* is the name of an image file (PNG, GIF, PGM, and PPM) and *shape* is "
"``None``: Install the corresponding image shape. ::"
msgstr ""

#: ../../library/turtle.rst:2294
msgid ">>> screen.register_shape(\"turtle.gif\")"
msgstr ""

#: ../../library/turtle.rst:2297 ../../library/turtle.rst:2306
msgid ""
"Image shapes *do not* rotate when turning the turtle, so they do not display "
"the heading of the turtle!"
msgstr ""
"Фігури зображень *не* обертаються під час повороту черепахи, тому вони не "
"відображають напрямок черепахи!"

#: ../../library/turtle.rst:2300
msgid ""
"*name* is an arbitrary string and *shape* is the name of an image file (PNG, "
"GIF, PGM, and PPM): Install the corresponding image shape. ::"
msgstr ""

#: ../../library/turtle.rst:2303
msgid ">>> screen.register_shape(\"turtle\", \"turtle.gif\")"
msgstr ""

#: ../../library/turtle.rst:2309
msgid ""
"*name* is an arbitrary string and *shape* is a tuple of pairs of "
"coordinates: Install the corresponding polygon shape."
msgstr ""
"*name* — це довільний рядок, а *shape* — кортеж пар координат: установіть "
"відповідну форму багатокутника."

#: ../../library/turtle.rst:2312
msgid ">>> screen.register_shape(\"triangle\", ((5,-3), (0,5), (-5,-3)))"
msgstr ""

#: ../../library/turtle.rst:2317
msgid ""
"*name* is an arbitrary string and *shape* is a (compound) :class:`Shape` "
"object: Install the corresponding compound shape."
msgstr ""

#: ../../library/turtle.rst:2320
msgid ""
"Add a turtle shape to TurtleScreen's shapelist.  Only thusly registered "
"shapes can be used by issuing the command ``shape(shapename)``."
msgstr ""
"Додайте форму черепахи до списку форм TurtleScreen. Тільки таким чином "
"зареєстровані форми можна використовувати за допомогою команди "
"``shape(shapename)``."

#: ../../library/turtle.rst:2323
msgid ""
"Added support for PNG, PGM, and PPM image formats. Both a shape name and an "
"image file name can be specified."
msgstr ""

#: ../../library/turtle.rst:2330
msgid "Return the list of turtles on the screen."
msgstr "Поверніть список черепах на екран."

#: ../../library/turtle.rst:2332
msgid ""
">>> for turtle in screen.turtles():\n"
"...     turtle.color(\"red\")"
msgstr ""

#: ../../library/turtle.rst:2341
msgid "Return the height of the turtle window. ::"
msgstr "Поверніть висоту вікна черепахи. ::"

#: ../../library/turtle.rst:2343
msgid ""
">>> screen.window_height()\n"
"480"
msgstr ""

#: ../../library/turtle.rst:2349
msgid "Return the width of the turtle window. ::"
msgstr "Поверніть ширину вікна черепахи. ::"

#: ../../library/turtle.rst:2351
msgid ""
">>> screen.window_width()\n"
"640"
msgstr ""

#: ../../library/turtle.rst:2358
msgid "Methods specific to Screen, not inherited from TurtleScreen"
msgstr "Методи, специфічні для Screen, не успадковані від TurtleScreen"

#: ../../library/turtle.rst:2362
msgid "Shut the turtlegraphics window."
msgstr "Закрийте вікно turtlegraphics."

#: ../../library/turtle.rst:2367
msgid "Bind ``bye()`` method to mouse clicks on the Screen."
msgstr "Прив’яжіть метод ``bye()`` до клацань миші на екрані."

#: ../../library/turtle.rst:2370
msgid ""
"If the value \"using_IDLE\" in the configuration dictionary is ``False`` "
"(default value), also enter mainloop.  Remark: If IDLE with the ``-n`` "
"switch (no subprocess) is used, this value should be set to ``True`` in :"
"file:`turtle.cfg`.  In this case IDLE's own mainloop is active also for the "
"client script."
msgstr ""
"Якщо значення \"using_IDLE\" у словнику конфігурації має значення ``False`` "
"(значення за замовчуванням), також введіть mainloop. Примітка: якщо "
"використовується IDLE з перемикачем ``-n`` (без підпроцесу), це значення має "
"бути встановлено на ``True`` у :file:`turtle.cfg`. У цьому випадку основний "
"цикл IDLE також активний для клієнтського сценарію."

#: ../../library/turtle.rst:2379
msgid "Save the current turtle drawing (and turtles) as a PostScript file."
msgstr ""

#: ../../library/turtle.rst:2381
msgid "the path of the saved PostScript file"
msgstr ""

#: ../../library/turtle.rst:2382
msgid ""
"if ``False`` and there already exists a file with the given filename, then "
"the function will raise a ``FileExistsError``. If it is ``True``, the file "
"will be overwritten."
msgstr ""

#: ../../library/turtle.rst:2387
msgid ""
">>> screen.save(\"my_drawing.ps\")\n"
">>> screen.save(\"my_drawing.ps\", overwrite=True)"
msgstr ""

#: ../../library/turtle.rst:2397
msgid ""
"Set the size and position of the main window.  Default values of arguments "
"are stored in the configuration dictionary and can be changed via a :file:"
"`turtle.cfg` file."
msgstr ""
"Встановіть розмір і положення головного вікна. Стандартні значення "
"аргументів зберігаються у словнику конфігурації та можуть бути змінені за "
"допомогою файлу :file:`turtle.cfg`."

#: ../../library/turtle.rst:2401
msgid ""
"if an integer, a size in pixels, if a float, a fraction of the screen; "
"default is 50% of screen"
msgstr ""
"якщо ціле число, то розмір у пікселях, якщо число з плаваючою точкою, то "
"частка екрана; за замовчуванням 50% екрана"

#: ../../library/turtle.rst:2403
msgid ""
"if an integer, the height in pixels, if a float, a fraction of the screen; "
"default is 75% of screen"
msgstr ""
"якщо ціле число, то висота в пікселях, якщо число з плаваючою точкою, то "
"частка екрана; за замовчуванням 75% екрана"

#: ../../library/turtle.rst:2405
msgid ""
"if positive, starting position in pixels from the left edge of the screen, "
"if negative from the right edge, if ``None``, center window horizontally"
msgstr ""
"якщо позитивне, початкова позиція в пікселях від лівого краю екрана, якщо "
"негативне від правого краю, якщо ``None``, центр вікна по горизонталі"

#: ../../library/turtle.rst:2408
msgid ""
"if positive, starting position in pixels from the top edge of the screen, if "
"negative from the bottom edge, if ``None``, center window vertically"
msgstr ""
"якщо додатне, початкова позиція в пікселях від верхнього краю екрана, якщо "
"негативне від нижнього краю, якщо ``None``, центр вікна по вертикалі"

#: ../../library/turtle.rst:2412
msgid ""
">>> screen.setup (width=200, height=200, startx=0, starty=0)\n"
">>>              # sets window to 200x200 pixels, in upper left of screen\n"
">>> screen.setup(width=.75, height=0.5, startx=None, starty=None)\n"
">>>              # sets window to 75% of screen by 50% of screen and centers"
msgstr ""

#: ../../library/turtle.rst:2423
msgid "a string that is shown in the titlebar of the turtle graphics window"
msgstr "рядок, який відображається в рядку заголовка графічного вікна Turtle"

#: ../../library/turtle.rst:2426
msgid "Set title of turtle window to *titlestring*."
msgstr "Встановіть назву вікна Turtle на *titlestring*."

#: ../../library/turtle.rst:2428
msgid ">>> screen.title(\"Welcome to the turtle zoo!\")"
msgstr ""

#: ../../library/turtle.rst:2435
msgid "Public classes"
msgstr "Публічні заняття"

#: ../../library/turtle.rst:2441
msgid ""
"a :class:`!tkinter.Canvas`, a :class:`ScrolledCanvas` or a :class:"
"`TurtleScreen`"
msgstr ""

#: ../../library/turtle.rst:2444
msgid ""
"Create a turtle.  The turtle has all methods described above as \"methods of "
"Turtle/RawTurtle\"."
msgstr ""
"Створіть черепаху. Черепаха має всі методи, описані вище як \"методи Turtle/"
"RawTurtle\"."

#: ../../library/turtle.rst:2450
msgid ""
"Subclass of RawTurtle, has the same interface but draws on a default :class:"
"`Screen` object created automatically when needed for the first time."
msgstr ""
"Підклас RawTurtle має той самий інтерфейс, але використовує стандартний "
"об’єкт :class:`Screen`, створений автоматично, коли це потрібно вперше."

#: ../../library/turtle.rst:2456
msgid "a :class:`!tkinter.Canvas`"
msgstr ""

#: ../../library/turtle.rst:2458
msgid ""
"Provides screen oriented methods like :func:`bgcolor` etc. that are "
"described above."
msgstr ""

#: ../../library/turtle.rst:2463
msgid ""
"Subclass of TurtleScreen, with :ref:`four methods added <screenspecific>`."
msgstr ""
"Підклас TurtleScreen із :ref:`чотирма доданими методами <screenspecific>`."

#: ../../library/turtle.rst:2468
msgid ""
"some Tkinter widget to contain the ScrolledCanvas, i.e. a Tkinter-canvas "
"with scrollbars added"
msgstr ""
"деякий віджет Tkinter, який містить ScrolledCanvas, тобто Tkinter-полотно з "
"доданими смугами прокрутки"

#: ../../library/turtle.rst:2471
msgid ""
"Used by class Screen, which thus automatically provides a ScrolledCanvas as "
"playground for the turtles."
msgstr ""
"Використовується класом Screen, який таким чином автоматично надає "
"ScrolledCanvas як ігровий майданчик для черепах."

#: ../../library/turtle.rst:2476
msgid "one of the strings \"polygon\", \"image\", \"compound\""
msgstr "один із рядків \"polygon\", \"image\", \"compound\""

#: ../../library/turtle.rst:2478
msgid ""
"Data structure modeling shapes.  The pair ``(type_, data)`` must follow this "
"specification:"
msgstr ""
"Форми моделювання структури даних. Пара ``(тип_, дані)`` має відповідати цій "
"специфікації:"

#: ../../library/turtle.rst:2483
msgid "*type_*"
msgstr "*тип_*"

#: ../../library/turtle.rst:2483
msgid "*data*"
msgstr "*дані*"

#: ../../library/turtle.rst:2485
msgid "\"polygon\""
msgstr "\"багатокутник\""

#: ../../library/turtle.rst:2485
msgid "a polygon-tuple, i.e. a tuple of pairs of coordinates"
msgstr "полігон-кортеж, тобто кортеж пар координат"

#: ../../library/turtle.rst:2486
msgid "\"image\""
msgstr "\"зображення\""

#: ../../library/turtle.rst:2486
msgid "an image  (in this form only used internally!)"
msgstr "зображення (у цій формі використовується лише внутрішньо!)"

#: ../../library/turtle.rst:2487
msgid "\"compound\""
msgstr "\"з'єднання\""

#: ../../library/turtle.rst:2487
msgid ""
"``None`` (a compound shape has to be constructed using the :meth:"
"`addcomponent` method)"
msgstr ""
"``None`` (складена форма має бути створена за допомогою методу :meth:"
"`addcomponent`)"

#: ../../library/turtle.rst:2493
msgid "a polygon, i.e. a tuple of pairs of numbers"
msgstr "багатокутник, тобто кортеж пар чисел"

#: ../../library/turtle.rst:2494
msgid "a color the *poly* will be filled with"
msgstr "колір, яким буде заповнено *poly*"

#: ../../library/turtle.rst:2495
msgid "a color for the poly's outline (if given)"
msgstr "колір контуру поля (якщо вказано)"

#: ../../library/turtle.rst:2497
msgid "Example:"
msgstr "مثال:"

#: ../../library/turtle.rst:2499
msgid ""
">>> poly = ((0,0),(10,-5),(0,10),(-10,-5))\n"
">>> s = Shape(\"compound\")\n"
">>> s.addcomponent(poly, \"red\", \"blue\")\n"
">>> # ... add more components and then use register_shape()"
msgstr ""

#: ../../library/turtle.rst:2507
msgid "See :ref:`compoundshapes`."
msgstr "Дивіться :ref:`compoundshapes`."

#: ../../library/turtle.rst:2512
msgid ""
"A two-dimensional vector class, used as a helper class for implementing "
"turtle graphics.  May be useful for turtle graphics programs too.  Derived "
"from tuple, so a vector is a tuple!"
msgstr ""
"Двовимірний векторний клас, який використовується як допоміжний клас для "
"реалізації графіки черепахи. Також може бути корисним для графічних програм "
"черепах. Походить від кортежу, тому вектор є кортежем!"

#: ../../library/turtle.rst:2516
msgid "Provides (for *a*, *b* vectors, *k* number):"
msgstr "Надає (для *a*, *b* векторів, *k* числа):"

#: ../../library/turtle.rst:2518
msgid "``a + b`` vector addition"
msgstr "``a + b`` додавання вектора"

#: ../../library/turtle.rst:2519
msgid "``a - b`` vector subtraction"
msgstr "Віднімання вектора ``a - b``"

#: ../../library/turtle.rst:2520
msgid "``a * b`` inner product"
msgstr "``a * b`` скалярний добуток"

#: ../../library/turtle.rst:2521
msgid "``k * a`` and ``a * k`` multiplication with scalar"
msgstr "Множення ``k * a`` і ``a * k`` на скаляр"

#: ../../library/turtle.rst:2522
msgid "``abs(a)`` absolute value of a"
msgstr "``abs(a)`` абсолютне значення a"

#: ../../library/turtle.rst:2523
msgid "``a.rotate(angle)`` rotation"
msgstr "``a.rotate(angle)`` rotation"

#: ../../library/turtle.rst:2529
msgid "Explanation"
msgstr "Wytłumaczenie"

#: ../../library/turtle.rst:2531
msgid ""
"A turtle object draws on a screen object, and there a number of key classes "
"in the turtle object-oriented interface that can be used to create them and "
"relate them to each other."
msgstr ""

#: ../../library/turtle.rst:2535
msgid ""
"A :class:`Turtle` instance will automatically create a :class:`Screen` "
"instance if one is not already present."
msgstr ""

#: ../../library/turtle.rst:2538
msgid ""
"``Turtle`` is a subclass of :class:`RawTurtle`, which *doesn't* "
"automatically create a drawing surface - a *canvas* will need to be provided "
"or created for it. The *canvas* can be a :class:`!tkinter.Canvas`, :class:"
"`ScrolledCanvas` or :class:`TurtleScreen`."
msgstr ""

#: ../../library/turtle.rst:2544
msgid ""
":class:`TurtleScreen` is the basic drawing surface for a turtle. :class:"
"`Screen` is a subclass of ``TurtleScreen``, and includes :ref:`some "
"additional methods <screenspecific>` for managing its appearance (including "
"size and title) and behaviour. ``TurtleScreen``'s constructor needs a :class:"
"`!tkinter.Canvas` or a :class:`ScrolledCanvas` as an argument."
msgstr ""

#: ../../library/turtle.rst:2551
msgid ""
"The functional interface for turtle graphics uses the various methods of "
"``Turtle`` and ``TurtleScreen``/``Screen``. Behind the scenes, a screen "
"object is automatically created whenever a function derived from a "
"``Screen`` method is called. Similarly, a turtle object is automatically "
"created whenever any of the functions derived from a Turtle method is called."
msgstr ""

#: ../../library/turtle.rst:2557
msgid ""
"To use multiple turtles on a screen, the object-oriented interface must be "
"used."
msgstr ""

#: ../../library/turtle.rst:2562
msgid "Help and configuration"
msgstr "Допомога та налаштування"

#: ../../library/turtle.rst:2565
msgid "How to use help"
msgstr "Як користуватися довідкою"

#: ../../library/turtle.rst:2567
msgid ""
"The public methods of the Screen and Turtle classes are documented "
"extensively via docstrings.  So these can be used as online-help via the "
"Python help facilities:"
msgstr ""
"Загальнодоступні методи класів Screen і Turtle широко задокументовані в "
"рядках документації. Тож їх можна використовувати як онлайн-довідку через "
"засоби довідки Python:"

#: ../../library/turtle.rst:2571
msgid ""
"When using IDLE, tooltips show the signatures and first lines of the "
"docstrings of typed in function-/method calls."
msgstr ""
"Під час використання IDLE підказки показують підписи та перші рядки рядків "
"документації введених викликів функцій/методів."

#: ../../library/turtle.rst:2574
msgid "Calling :func:`help` on methods or functions displays the docstrings::"
msgstr ""
"Виклик :func:`help` для методів або функцій відображає рядки документів::"

#: ../../library/turtle.rst:2576
msgid ""
">>> help(Screen.bgcolor)\n"
"Help on method bgcolor in module turtle:\n"
"\n"
"bgcolor(self, *args) unbound turtle.Screen method\n"
"    Set or return backgroundcolor of the TurtleScreen.\n"
"\n"
"    Arguments (if given): a color string or three numbers\n"
"    in the range 0..colormode or a 3-tuple of such numbers.\n"
"\n"
"\n"
"    >>> screen.bgcolor(\"orange\")\n"
"    >>> screen.bgcolor()\n"
"    \"orange\"\n"
"    >>> screen.bgcolor(0.5,0,0.5)\n"
"    >>> screen.bgcolor()\n"
"    \"#800080\"\n"
"\n"
">>> help(Turtle.penup)\n"
"Help on method penup in module turtle:\n"
"\n"
"penup(self) unbound turtle.Turtle method\n"
"    Pull the pen up -- no drawing when moving.\n"
"\n"
"    Aliases: penup | pu | up\n"
"\n"
"    No argument\n"
"\n"
"    >>> turtle.penup()"
msgstr ""

#: ../../library/turtle.rst:2605
msgid ""
"The docstrings of the functions which are derived from methods have a "
"modified form::"
msgstr ""
"Документаційні рядки функцій, які є похідними від методів, мають змінену "
"форму:"

#: ../../library/turtle.rst:2608
msgid ""
">>> help(bgcolor)\n"
"Help on function bgcolor in module turtle:\n"
"\n"
"bgcolor(*args)\n"
"    Set or return backgroundcolor of the TurtleScreen.\n"
"\n"
"    Arguments (if given): a color string or three numbers\n"
"    in the range 0..colormode or a 3-tuple of such numbers.\n"
"\n"
"    Example::\n"
"\n"
"      >>> bgcolor(\"orange\")\n"
"      >>> bgcolor()\n"
"      \"orange\"\n"
"      >>> bgcolor(0.5,0,0.5)\n"
"      >>> bgcolor()\n"
"      \"#800080\"\n"
"\n"
">>> help(penup)\n"
"Help on function penup in module turtle:\n"
"\n"
"penup()\n"
"    Pull the pen up -- no drawing when moving.\n"
"\n"
"    Aliases: penup | pu | up\n"
"\n"
"    No argument\n"
"\n"
"    Example:\n"
"    >>> penup()"
msgstr ""

#: ../../library/turtle.rst:2639
msgid ""
"These modified docstrings are created automatically together with the "
"function definitions that are derived from the methods at import time."
msgstr ""
"Ці змінені рядки документації створюються автоматично разом із визначеннями "
"функцій, отриманими з методів під час імпорту."

#: ../../library/turtle.rst:2644
msgid "Translation of docstrings into different languages"
msgstr "Переклад рядків документів різними мовами"

#: ../../library/turtle.rst:2646
msgid ""
"There is a utility to create a dictionary the keys of which are the method "
"names and the values of which are the docstrings of the public methods of "
"the classes Screen and Turtle."
msgstr ""
"Існує утиліта для створення словника, ключами якого є імена методів, а "
"значеннями яких є рядки документів відкритих методів класів Screen і Turtle."

#: ../../library/turtle.rst:2652
msgid "a string, used as filename"
msgstr "рядок, який використовується як ім'я файлу"

#: ../../library/turtle.rst:2654
msgid ""
"Create and write docstring-dictionary to a Python script with the given "
"filename.  This function has to be called explicitly (it is not used by the "
"turtle graphics classes).  The docstring dictionary will be written to the "
"Python script :file:`{filename}.py`.  It is intended to serve as a template "
"for translation of the docstrings into different languages."
msgstr ""
"Створіть і запишіть docstring-dictionary у сценарій Python із вказаною "
"назвою файлу. Цю функцію потрібно викликати явно (вона не використовується "
"графічними класами turtle). Словник рядків документів буде записаний у "
"сценарій Python :file:`{filename}.py`. Він призначений для того, щоб служити "
"шаблоном для перекладу рядків документів різними мовами."

#: ../../library/turtle.rst:2660
msgid ""
"If you (or your students) want to use :mod:`turtle` with online help in your "
"native language, you have to translate the docstrings and save the resulting "
"file as e.g. :file:`turtle_docstringdict_german.py`."
msgstr ""
"Якщо ви (або ваші студенти) бажаєте використовувати :mod:`turtle` з онлайн-"
"довідкою вашою рідною мовою, вам потрібно перекласти рядки документації та "
"зберегти отриманий файл як, напр. :file:`turtle_docstringdict_german.py`."

#: ../../library/turtle.rst:2664
msgid ""
"If you have an appropriate entry in your :file:`turtle.cfg` file this "
"dictionary will be read in at import time and will replace the original "
"English docstrings."
msgstr ""
"Якщо у вашому файлі :file:`turtle.cfg` є відповідний запис, цей словник буде "
"зчитано під час імпортування та замінить оригінальні англійські рядки "
"документів."

#: ../../library/turtle.rst:2667
msgid ""
"At the time of this writing there are docstring dictionaries in German and "
"in Italian.  (Requests please to glingl@aon.at.)"
msgstr ""
"На момент написання цієї статті існують словники docstring німецькою та "
"італійською мовами. (Запити надсилайте на glingl@aon.at.)"

#: ../../library/turtle.rst:2673
msgid "How to configure Screen and Turtles"
msgstr "Як налаштувати екран і черепахи"

#: ../../library/turtle.rst:2675
msgid ""
"The built-in default configuration mimics the appearance and behaviour of "
"the old turtle module in order to retain best possible compatibility with it."
msgstr ""
"Вбудована конфігурація за замовчуванням імітує зовнішній вигляд і поведінку "
"старого модуля Turtle, щоб зберегти найкращу сумісність із ним."

#: ../../library/turtle.rst:2678
msgid ""
"If you want to use a different configuration which better reflects the "
"features of this module or which better fits to your needs, e.g. for use in "
"a classroom, you can prepare a configuration file ``turtle.cfg`` which will "
"be read at import time and modify the configuration according to its "
"settings."
msgstr ""
"Якщо ви хочете використовувати іншу конфігурацію, яка краще відображає "
"функції цього модуля або яка краще відповідає вашим потребам, напр. для "
"використання в класі ви можете підготувати файл конфігурації ``turtle.cfg``, "
"який буде прочитано під час імпорту та змінено конфігурацію відповідно до "
"його параметрів."

#: ../../library/turtle.rst:2683
msgid ""
"The built in configuration would correspond to the following ``turtle.cfg``:"
msgstr ""

#: ../../library/turtle.rst:2685
msgid ""
"width = 0.5\n"
"height = 0.75\n"
"leftright = None\n"
"topbottom = None\n"
"canvwidth = 400\n"
"canvheight = 300\n"
"mode = standard\n"
"colormode = 1.0\n"
"delay = 10\n"
"undobuffersize = 1000\n"
"shape = classic\n"
"pencolor = black\n"
"fillcolor = black\n"
"resizemode = noresize\n"
"visible = True\n"
"language = english\n"
"exampleturtle = turtle\n"
"examplescreen = screen\n"
"title = Python Turtle Graphics\n"
"using_IDLE = False"
msgstr ""

#: ../../library/turtle.rst:2708
msgid "Short explanation of selected entries:"
msgstr "Коротке пояснення вибраних записів:"

#: ../../library/turtle.rst:2710
msgid ""
"The first four lines correspond to the arguments of the :func:`Screen.setup "
"<setup>` method."
msgstr ""

#: ../../library/turtle.rst:2712
msgid ""
"Line 5 and 6 correspond to the arguments of the method :func:`Screen."
"screensize <screensize>`."
msgstr ""

#: ../../library/turtle.rst:2714
msgid ""
"*shape* can be any of the built-in shapes, e.g: arrow, turtle, etc.  For "
"more info try ``help(shape)``."
msgstr ""
"*shape* може бути будь-якою вбудованою формою, наприклад: стрілка, черепаха "
"тощо. Щоб дізнатися більше, спробуйте ``help(shape)``."

#: ../../library/turtle.rst:2716
msgid ""
"If you want to use no fill color (i.e. make the turtle transparent), you "
"have to write ``fillcolor = \"\"`` (but all nonempty strings must not have "
"quotes in the cfg file)."
msgstr ""

#: ../../library/turtle.rst:2719
msgid ""
"If you want to reflect the turtle its state, you have to use ``resizemode = "
"auto``."
msgstr ""
"Якщо ви хочете відобразити черепаху в її стані, ви повинні використовувати "
"``resizemode = auto``."

#: ../../library/turtle.rst:2721
msgid ""
"If you set e.g. ``language = italian`` the docstringdict :file:"
"`turtle_docstringdict_italian.py` will be loaded at import time (if present "
"on the import path, e.g. in the same directory as :mod:`turtle`)."
msgstr ""

#: ../../library/turtle.rst:2724
msgid ""
"The entries *exampleturtle* and *examplescreen* define the names of these "
"objects as they occur in the docstrings.  The transformation of method-"
"docstrings to function-docstrings will delete these names from the "
"docstrings."
msgstr ""
"Записи *exampleturtle* і *examplescreen* визначають імена цих об’єктів, як "
"вони зустрічаються в рядках документації. Трансформація method-docstrings у "
"function-docstrings видалить ці імена з docstrings."

#: ../../library/turtle.rst:2728
msgid ""
"*using_IDLE*: Set this to ``True`` if you regularly work with IDLE and its "
"``-n`` switch (\"no subprocess\").  This will prevent :func:`exitonclick` to "
"enter the mainloop."
msgstr ""

#: ../../library/turtle.rst:2732
msgid ""
"There can be a :file:`turtle.cfg` file in the directory where :mod:`turtle` "
"is stored and an additional one in the current working directory.  The "
"latter will override the settings of the first one."
msgstr ""
"У каталозі, де зберігається :mod:`turtle`, може бути файл :file:`turtle.cfg` "
"і додатковий у поточному робочому каталозі. Останній замінить налаштування "
"першого."

#: ../../library/turtle.rst:2736
msgid ""
"The :file:`Lib/turtledemo` directory contains a :file:`turtle.cfg` file.  "
"You can study it as an example and see its effects when running the demos "
"(preferably not from within the demo-viewer)."
msgstr ""
"Каталог :file:`Lib/turtledemo` містить файл :file:`turtle.cfg`. Ви можете "
"вивчити його як приклад і побачити його вплив під час запуску демонстрацій "
"(бажано не з програми перегляду демонстрацій)."

#: ../../library/turtle.rst:2742
msgid ":mod:`turtledemo` --- Demo scripts"
msgstr ":mod:`turtledemo` --- Демонстраційні скрипти"

#: ../../library/turtle.rst:2747
msgid ""
"The :mod:`turtledemo` package includes a set of demo scripts.  These scripts "
"can be run and viewed using the supplied demo viewer as follows::"
msgstr ""
"Пакет :mod:`turtledemo` містить набір демонстраційних скриптів. Ці сценарії "
"можна запускати та переглядати за допомогою демонстраційного засобу "
"перегляду, що входить до комплекту, наступним чином:"

#: ../../library/turtle.rst:2750
msgid "python -m turtledemo"
msgstr ""

#: ../../library/turtle.rst:2752
msgid ""
"Alternatively, you can run the demo scripts individually.  For example, ::"
msgstr ""
"Крім того, ви можете запускати демонстраційні сценарії окремо. Наприклад, ::"

#: ../../library/turtle.rst:2754
msgid "python -m turtledemo.bytedesign"
msgstr ""

#: ../../library/turtle.rst:2756
msgid "The :mod:`turtledemo` package directory contains:"
msgstr "Каталог пакунків :mod:`turtledemo` містить:"

#: ../../library/turtle.rst:2758
msgid ""
"A demo viewer :file:`__main__.py` which can be used to view the sourcecode "
"of the scripts and run them at the same time."
msgstr ""
"Демо-переглядач :file:`__main__.py`, який можна використовувати для "
"перегляду вихідного коду сценаріїв і запуску їх одночасно."

#: ../../library/turtle.rst:2760
msgid ""
"Multiple scripts demonstrating different features of the :mod:`turtle` "
"module.  Examples can be accessed via the Examples menu.  They can also be "
"run standalone."
msgstr ""
"Кілька сценаріїв, що демонструють різні функції модуля :mod:`turtle`. Доступ "
"до прикладів можна отримати через меню \"Приклади\". Їх також можна "
"запускати автономно."

#: ../../library/turtle.rst:2763
msgid ""
"A :file:`turtle.cfg` file which serves as an example of how to write and use "
"such files."
msgstr ""
"Файл :file:`turtle.cfg`, який служить прикладом того, як писати та "
"використовувати такі файли."

#: ../../library/turtle.rst:2766
msgid "The demo scripts are:"
msgstr "Демонстраційні сценарії:"

#: ../../library/turtle.rst:2773
msgid "Name"
msgstr "نام"

#: ../../library/turtle.rst:2773
msgid "Description"
msgstr "توضیحات"

#: ../../library/turtle.rst:2773
msgid "Features"
msgstr "особливості"

#: ../../library/turtle.rst:2775
msgid "bytedesign"
msgstr "bytedesign"

#: ../../library/turtle.rst:2775
msgid "complex classical turtle graphics pattern"
msgstr "складний класичний графічний візерунок черепахи"

#: ../../library/turtle.rst:2775
msgid ":func:`tracer`, delay, :func:`update`"
msgstr ":func:`tracer`, delay, :func:`update`"

#: ../../library/turtle.rst:2778
msgid "chaos"
msgstr "хаос"

#: ../../library/turtle.rst:2778
msgid ""
"graphs Verhulst dynamics, shows that computer's computations can generate "
"results sometimes against the common sense expectations"
msgstr ""
"графіки динаміки Верхульста показують, що комп’ютерні обчислення можуть "
"генерувати результати, іноді проти очікувань здорового глузду"

#: ../../library/turtle.rst:2778
msgid "world coordinates"
msgstr "світові координати"

#: ../../library/turtle.rst:2784
msgid "clock"
msgstr "годинник"

#: ../../library/turtle.rst:2784
msgid "analog clock showing time of your computer"
msgstr "аналоговий годинник, який показує час вашого комп'ютера"

#: ../../library/turtle.rst:2784
msgid "turtles as clock's hands, ontimer"
msgstr "черепахи як стрілки годинника, онтаймер"

#: ../../library/turtle.rst:2787
msgid "colormixer"
msgstr "colormixer"

#: ../../library/turtle.rst:2787
msgid "experiment with r, g, b"
msgstr "дослід з r, g, b"

#: ../../library/turtle.rst:2789
msgid "forest"
msgstr "ліс"

#: ../../library/turtle.rst:2789
msgid "3 breadth-first trees"
msgstr "3 дерева в ширину"

#: ../../library/turtle.rst:2789
msgid "randomization"
msgstr "рандомізація"

#: ../../library/turtle.rst:2791
msgid "fractalcurves"
msgstr "фрактальні криві"

#: ../../library/turtle.rst:2791
msgid "Hilbert & Koch curves"
msgstr "Криві Гільберта і Коха"

#: ../../library/turtle.rst:2791
msgid "recursion"
msgstr "рекурсія"

#: ../../library/turtle.rst:2793
msgid "lindenmayer"
msgstr "лінденмайер"

#: ../../library/turtle.rst:2793
msgid "ethnomathematics (indian kolams)"
msgstr "етноматематика (індійські колами)"

#: ../../library/turtle.rst:2793
msgid "L-System"
msgstr "L-система"

#: ../../library/turtle.rst:2796
msgid "minimal_hanoi"
msgstr "minimal_hanoi"

#: ../../library/turtle.rst:2796
msgid "Towers of Hanoi"
msgstr "Ханойські вежі"

#: ../../library/turtle.rst:2796
msgid "Rectangular Turtles as Hanoi discs (shape, shapesize)"
msgstr "Прямокутні черепахи як ханойські диски (форма, розмір)"

#: ../../library/turtle.rst:2800
msgid "nim"
msgstr "нім"

#: ../../library/turtle.rst:2800
msgid ""
"play the classical nim game with three heaps of sticks against the computer."
msgstr "грати в класичну гру nim з трьома купами палиць проти комп'ютера."

#: ../../library/turtle.rst:2800
msgid "turtles as nimsticks, event driven (mouse, keyboard)"
msgstr "черепахи як німки, керовані подіями (миша, клавіатура)"

#: ../../library/turtle.rst:2804
msgid "paint"
msgstr "фарба"

#: ../../library/turtle.rst:2804
msgid "super minimalistic drawing program"
msgstr "супер мінімалістична програма для малювання"

#: ../../library/turtle.rst:2807
msgid "peace"
msgstr "мир"

#: ../../library/turtle.rst:2807
msgid "elementary"
msgstr "елементарний"

#: ../../library/turtle.rst:2807
msgid "turtle: appearance and animation"
msgstr "черепаха: зовнішній вигляд і анімація"

#: ../../library/turtle.rst:2810
msgid "penrose"
msgstr "Пенроуз"

#: ../../library/turtle.rst:2810
msgid "aperiodic tiling with kites and darts"
msgstr "аперіодичне укладання з повітряними зміями та дротиками"

#: ../../library/turtle.rst:2813
msgid "planet_and_moon"
msgstr "планета_і_місяць"

#: ../../library/turtle.rst:2813
msgid "simulation of gravitational system"
msgstr "моделювання гравітаційної системи"

#: ../../library/turtle.rst:2813
msgid "compound shapes, :class:`Vec2D`"
msgstr "складені форми, :class:`Vec2D`"

#: ../../library/turtle.rst:2816
msgid "rosette"
msgstr ""

#: ../../library/turtle.rst:2816
msgid "a pattern from the wikipedia article on turtle graphics"
msgstr "зразок зі статті у Вікіпедії про черепахову графіку"

#: ../../library/turtle.rst:2816
msgid ":func:`clone`, :func:`undo`"
msgstr ":func:`clone`, :func:`undo`"

#: ../../library/turtle.rst:2819
msgid "round_dance"
msgstr "хоровод"

#: ../../library/turtle.rst:2819
msgid "dancing turtles rotating pairwise in opposite direction"
msgstr "танцюючі черепахи, що обертаються попарно в протилежному напрямку"

#: ../../library/turtle.rst:2819
msgid "compound shapes, clone shapesize, tilt, get_shapepoly, update"
msgstr "складені форми, клон shapesize, нахил, get_shapepoly, оновлення"

#: ../../library/turtle.rst:2823
msgid "sorting_animate"
msgstr "sorting_animate"

#: ../../library/turtle.rst:2823
msgid "visual demonstration of different sorting methods"
msgstr "наочна демонстрація різних методів сортування"

#: ../../library/turtle.rst:2823
msgid "simple alignment, randomization"
msgstr "просте вирівнювання, рандомізація"

#: ../../library/turtle.rst:2826
msgid "tree"
msgstr "pohon"

#: ../../library/turtle.rst:2826
msgid "a (graphical) breadth first tree (using generators)"
msgstr "(графічне) дерево в ширину (з використанням генераторів)"

#: ../../library/turtle.rst:2829
msgid "two_canvases"
msgstr "два_полотна"

#: ../../library/turtle.rst:2829
msgid "simple design"
msgstr "простий дизайн"

#: ../../library/turtle.rst:2829
msgid "turtles on two canvases"
msgstr "черепахи на двох полотнах"

#: ../../library/turtle.rst:2832
msgid "yinyang"
msgstr "Інь Янь"

#: ../../library/turtle.rst:2832
msgid "another elementary example"
msgstr "ще один елементарний приклад"

#: ../../library/turtle.rst:2835
msgid "Have fun!"
msgstr "весело провести час!"

#: ../../library/turtle.rst:2839
msgid "Changes since Python 2.6"
msgstr "Зміни з Python 2.6"

#: ../../library/turtle.rst:2841
msgid ""
"The methods :func:`Turtle.tracer <tracer>`, :func:`Turtle.window_width "
"<window_width>` and :func:`Turtle.window_height <window_height>` have been "
"eliminated. Methods with these names and functionality are now available "
"only as methods of :class:`Screen`. The functions derived from these remain "
"available. (In fact already in Python 2.6 these methods were merely "
"duplications of the corresponding :class:`TurtleScreen`/:class:`Screen` "
"methods.)"
msgstr ""

#: ../../library/turtle.rst:2849
msgid ""
"The method :func:`!Turtle.fill` has been eliminated. The behaviour of :func:"
"`begin_fill` and :func:`end_fill` have changed slightly: now every filling "
"process must be completed with an ``end_fill()`` call."
msgstr ""

#: ../../library/turtle.rst:2854
msgid ""
"A method :func:`Turtle.filling <filling>` has been added. It returns a "
"boolean value: ``True`` if a filling process is under way, ``False`` "
"otherwise. This behaviour corresponds to a ``fill()`` call without arguments "
"in Python 2.6."
msgstr ""

#: ../../library/turtle.rst:2860
msgid "Changes since Python 3.0"
msgstr "Зміни з Python 3.0"

#: ../../library/turtle.rst:2862
msgid ""
"The :class:`Turtle` methods :func:`shearfactor`, :func:`shapetransform` and :"
"func:`get_shapepoly` have been added. Thus the full range of regular linear "
"transforms is now available for transforming turtle shapes. :func:"
"`tiltangle` has been enhanced in functionality: it now can be used to get or "
"set the tilt angle."
msgstr ""

#: ../../library/turtle.rst:2868
msgid ""
"The :class:`Screen` method :func:`onkeypress` has been added as a complement "
"to :func:`onkey`. As the latter binds actions to the key release event, an "
"alias: :func:`onkeyrelease` was also added for it."
msgstr ""

#: ../../library/turtle.rst:2872
msgid ""
"The method :func:`Screen.mainloop <mainloop>` has been added, so there is no "
"longer a need to use the standalone :func:`mainloop` function when working "
"with :class:`Screen` and :class:`Turtle` objects."
msgstr ""

#: ../../library/turtle.rst:2876
msgid ""
"Two input methods have been added: :func:`Screen.textinput <textinput>` and :"
"func:`Screen.numinput <numinput>`. These pop up input dialogs and return "
"strings and numbers respectively."
msgstr ""
