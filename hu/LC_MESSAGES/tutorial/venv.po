# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# Rafael Fontenelle <rffontenelle@gmail.com>, 2023
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.11\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-01-03 15:28+0000\n"
"PO-Revision-Date: 2023-05-24 02:23+0000\n"
"Last-Translator: Rafael Fontenelle <rffontenelle@gmail.com>, 2023\n"
"Language-Team: Hungarian (https://app.transifex.com/python-doc/teams/5390/"
"hu/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: hu\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"

#: ../../tutorial/venv.rst:6
msgid "Virtual Environments and Packages"
msgstr "Virtuális környezetek és csomagok"

#: ../../tutorial/venv.rst:9
msgid "Introduction"
msgstr "Bevezetés"

#: ../../tutorial/venv.rst:11
msgid ""
"Python applications will often use packages and modules that don't come as "
"part of the standard library.  Applications will sometimes need a specific "
"version of a library, because the application may require that a particular "
"bug has been fixed or the application may be written using an obsolete "
"version of the library's interface."
msgstr ""
"A Python-alkalmazások gyakran használnak csomagokat és modulokat, amelyek "
"nem részei a sztenderd könyvtárnak. Egyes alkalmazásoknak néha egy "
"könyvtárnak egy speciális verziójára van szüksége, mert az alkalmazás "
"feltételezi, hogy egy bizonyos hibát javította, vagy esetleg az alkalmazás a "
"könyvtárnak egy idejétmúlt verziójához készült."

#: ../../tutorial/venv.rst:17
msgid ""
"This means it may not be possible for one Python installation to meet the "
"requirements of every application.  If application A needs version 1.0 of a "
"particular module but application B needs version 2.0, then the requirements "
"are in conflict and installing either version 1.0 or 2.0 will leave one "
"application unable to run."
msgstr ""
"Ez azt jelenti, hogy talán nem elég egyetlen Python telepítése, hogy az "
"összes alkalmazás igényeit kielégítse. Ha az A alkalmazásnak egy modul 1.0-"
"ás verziójára van szüksége, a B alkalmazásnak pedig a 2.0-ásra, ez "
"konfliktust okoz, és akár az 1.0-ás, akár a 2.0-ás verziót telepítem, az "
"egyik alkalmazás képtelen lesz működni."

#: ../../tutorial/venv.rst:23
msgid ""
"The solution for this problem is to create a :term:`virtual environment`, a "
"self-contained directory tree that contains a Python installation for a "
"particular version of Python, plus a number of additional packages."
msgstr ""
"Erre a problémára az a megoldás, hogy :term:`virtual environment`-et hozunk "
"létre: egy könyvtárstruktúrát, amelyben egy Python van telepítve egy "
"bizonyos Python-verzióval, és pár további csomaggal."

#: ../../tutorial/venv.rst:27
msgid ""
"Different applications can then use different virtual environments. To "
"resolve the earlier example of conflicting requirements, application A can "
"have its own virtual environment with version 1.0 installed while "
"application B has another virtual environment with version 2.0. If "
"application B requires a library be upgraded to version 3.0, this will not "
"affect application A's environment."
msgstr ""
"A különböző alkalmazások így különböző virtuális környezeteket "
"használhatnak. Ahhoz, hogy a korábbi példa ellentmondásos követelményeit "
"feloldjuk, az A alkalmazás ezután a saját virtuális környezetét "
"használhatja, amelyben az 1.0-ás verzió került telepítésre, a B alkalmazás "
"egy másik virtuális környezetet, amelyben a 2.0-ás. Ha a B alkalmazás "
"könyvtárát 3.0-ásra kell frissíteni, az nem befolyásolja az A alkalmazás "
"környezetét."

#: ../../tutorial/venv.rst:36
msgid "Creating Virtual Environments"
msgstr "Virtuális környezet létrehozása"

#: ../../tutorial/venv.rst:38
msgid ""
"The module used to create and manage virtual environments is called :mod:"
"`venv`.  :mod:`venv` will usually install the most recent version of Python "
"that you have available. If you have multiple versions of Python on your "
"system, you can select a specific Python version by running ``python3`` or "
"whichever version you want."
msgstr ""
"A modult, amely képes virtuális környezetek létrehozására és kezelésére,  :"
"mod:`venv`-nek hívják.  A :mod:`venv` gyakran a Python legfrissebb elérhető "
"verzióját telepítik. Ha többféle Python-verzióra van szükségünk a "
"rendszerünkön, a kiválaszthatunk egy speciális Python-verziót, a  "
"``python3`` futtatásával, vagy amelyik verziót csak akarjuk."

#: ../../tutorial/venv.rst:44
msgid ""
"To create a virtual environment, decide upon a directory where you want to "
"place it, and run the :mod:`venv` module as a script with the directory "
"path::"
msgstr ""
"Egy virtuális környezet létrehozásához határozzuk el, melyik könyvtárba "
"szeretnénk helyezni, és futtassuk a :mod:`venv` modult szkriptként evvel a "
"könyvtár-útvonallal::"

#: ../../tutorial/venv.rst:49
msgid ""
"This will create the ``tutorial-env`` directory if it doesn't exist, and "
"also create directories inside it containing a copy of the Python "
"interpreter and various supporting files."
msgstr ""

#: ../../tutorial/venv.rst:53
msgid ""
"A common directory location for a virtual environment is ``.venv``. This "
"name keeps the directory typically hidden in your shell and thus out of the "
"way while giving it a name that explains why the directory exists. It also "
"prevents clashing with ``.env`` environment variable definition files that "
"some tooling supports."
msgstr ""

#: ../../tutorial/venv.rst:59
msgid "Once you've created a virtual environment, you may activate it."
msgstr "Amikor létrehoztuk a virtuális környezetet, aktiválhatjuk."

#: ../../tutorial/venv.rst:61
msgid "On Windows, run::"
msgstr "Windowson így::"

#: ../../tutorial/venv.rst:65
msgid "On Unix or MacOS, run::"
msgstr "Unixon (beleértve a Linuxokat) vagy MacOS-en így::"

#: ../../tutorial/venv.rst:69
msgid ""
"(This script is written for the bash shell.  If you use the :program:`csh` "
"or :program:`fish` shells, there are alternate ``activate.csh`` and "
"``activate.fish`` scripts you should use instead.)"
msgstr ""
"(Ez a szkript bash-shellhez készült. Ha :program:`csh` vagy :program:`fish` "
"shellt használunk, akkor a ``activate.csh`` illetve ``activate.fish`` "
"szkripteket kell használnunk.)"

#: ../../tutorial/venv.rst:74
msgid ""
"Activating the virtual environment will change your shell's prompt to show "
"what virtual environment you're using, and modify the environment so that "
"running ``python`` will get you that particular version and installation of "
"Python. For example:"
msgstr ""
"A virtuális környezet megváltoztatása a shell-promptot is megváltoztatja, "
"hogy mutassa, melyik virtuális környezetben vagyunk, és úgy módosítja a "
"környezetet, hogy a ``python`` parancs futtatása a megfelelő Python-verziót "
"és telepítést futtassa. Például:"

#: ../../tutorial/venv.rst:91
msgid "To deactivate a virtual environment, type::"
msgstr ""

#: ../../tutorial/venv.rst:95
msgid "into the terminal."
msgstr ""

#: ../../tutorial/venv.rst:98
msgid "Managing Packages with pip"
msgstr "Csomagkezelés pip-pel"

#: ../../tutorial/venv.rst:100
msgid ""
"You can install, upgrade, and remove packages using a program called :"
"program:`pip`.  By default ``pip`` will install packages from the `Python "
"Package Index <https://pypi.org>`_.  You can browse the Python Package Index "
"by going to it in your web browser."
msgstr ""

#: ../../tutorial/venv.rst:105
msgid ""
"``pip`` has a number of subcommands: \"install\", \"uninstall\", \"freeze\", "
"etc.  (Consult the :ref:`installing-index` guide for complete documentation "
"for ``pip``.)"
msgstr ""

#: ../../tutorial/venv.rst:109
msgid ""
"You can install the latest version of a package by specifying a package's "
"name:"
msgstr "A csomag legfrissebb verzióját a csomagnév megadásával telepíthetjük:"

#: ../../tutorial/venv.rst:120
msgid ""
"You can also install a specific version of a package by giving the package "
"name  followed by ``==`` and the version number:"
msgstr ""
"A csomag egy adott verzióját is telepíthetjük, ha megadjuk a csomag nevét, "
"amelyet ``==`` követ, majd a verziószám:"

#: ../../tutorial/venv.rst:131
msgid ""
"If you re-run this command, ``pip`` will notice that the requested version "
"is already installed and do nothing.  You can supply a different version "
"number to get that version, or you can run ``python -m pip install --"
"upgrade`` to upgrade the package to the latest version:"
msgstr ""

#: ../../tutorial/venv.rst:146
msgid ""
"``python -m pip uninstall`` followed by one or more package names will "
"remove the packages from the virtual environment."
msgstr ""

#: ../../tutorial/venv.rst:149
msgid ""
"``python -m pip show`` will display information about a particular package:"
msgstr ""

#: ../../tutorial/venv.rst:166
msgid ""
"``python -m pip list`` will display all of the packages installed in the "
"virtual environment:"
msgstr ""

#: ../../tutorial/venv.rst:178
msgid ""
"``python -m pip freeze`` will produce a similar list of the installed "
"packages, but the output uses the format that ``python -m pip install`` "
"expects. A common convention is to put this list in a ``requirements.txt`` "
"file:"
msgstr ""

#: ../../tutorial/venv.rst:190
msgid ""
"The ``requirements.txt`` can then be committed to version control and "
"shipped as part of an application.  Users can then install all the necessary "
"packages with ``install -r``:"
msgstr ""
"A ``requirements.txt`` ezután feltölthető a verziókövető rendszerbe, és az "
"alkalmazással együtt közzétehető. Ekkor a felhasználók a szükséges "
"csomagokat az ``install -r`` paranccsal telepíthetik:"

#: ../../tutorial/venv.rst:207
msgid ""
"``pip`` has many more options.  Consult the :ref:`installing-index` guide "
"for complete documentation for ``pip``.  When you've written a package and "
"want to make it available on the Python Package Index, consult the `Python "
"packaging user guide`_."
msgstr ""
