# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# Rafael Fontenelle <rffontenelle@gmail.com>, 2022
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.10\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-01-10 16:06+0000\n"
"PO-Revision-Date: 2022-11-05 17:21+0000\n"
"Last-Translator: Rafael Fontenelle <rffontenelle@gmail.com>, 2022\n"
"Language-Team: Ukrainian (https://app.transifex.com/python-doc/teams/5390/"
"uk/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: uk\n"
"Plural-Forms: nplurals=4; plural=(n % 1 == 0 && n % 10 == 1 && n % 100 != "
"11 ? 0 : n % 1 == 0 && n % 10 >= 2 && n % 10 <= 4 && (n % 100 < 12 || n % "
"100 > 14) ? 1 : n % 1 == 0 && (n % 10 ==0 || (n % 10 >=5 && n % 10 <=9) || "
"(n % 100 >=11 && n % 100 <=14 )) ? 2: 3);\n"

#: ../../c-api/code.rst:8
msgid "Code Objects"
msgstr "Об'єкти коду"

#: ../../c-api/code.rst:12
msgid ""
"Code objects are a low-level detail of the CPython implementation. Each one "
"represents a chunk of executable code that hasn't yet been bound into a "
"function."
msgstr ""
"Об’єкти коду є низькорівневими деталями реалізації CPython. Кожен з них "
"представляє фрагмент виконуваного коду, який ще не прив’язано до функції."

#: ../../c-api/code.rst:18
msgid ""
"The C structure of the objects used to describe code objects.  The fields of "
"this type are subject to change at any time."
msgstr ""
"Структура C об’єктів, яка використовується для опису об’єктів коду. Поля "
"цього типу можуть бути змінені в будь-який час."

#: ../../c-api/code.rst:24
msgid ""
"This is an instance of :c:type:`PyTypeObject` representing the Python :class:"
"`code` type."
msgstr ""
"Це екземпляр :c:type:`PyTypeObject`, що представляє тип :class:`code` Python."

#: ../../c-api/code.rst:30
msgid ""
"Return true if *co* is a :class:`code` object.  This function always "
"succeeds."
msgstr ""
"Повертає true, якщо *co* є об’єктом :class:`code`. Ця функція завжди успішна."

#: ../../c-api/code.rst:34
msgid "Return the number of free variables in *co*."
msgstr "Повертає кількість вільних змінних у *co*."

#: ../../c-api/code.rst:38
msgid ""
"Return a new code object.  If you need a dummy code object to create a "
"frame, use :c:func:`PyCode_NewEmpty` instead.  Calling :c:func:`PyCode_New` "
"directly can bind you to a precise Python version since the definition of "
"the bytecode changes often."
msgstr ""
"Повертає новий обьект коду. Якщо вам потрібен порожній об’єкт для створення "
"фрейму, використовуйте :c:func:`PyCode_NewEmpty`. Виклик :c:func:"
"`PyCode_New` напряму може прив'язати вас до конкретної версії Python в той "
"час як байткод змінюється дуже часто."

#: ../../c-api/code.rst:45
msgid ""
"Similar to :c:func:`PyCode_New`, but with an extra \"posonlyargcount\" for "
"positional-only arguments."
msgstr ""
"Подібний до :c:func:`PyCode_New`, але з додатковим аргументом "
"\"posonlyargcount\" для позиційних аргументів."

#: ../../c-api/code.rst:51
msgid ""
"Return a new empty code object with the specified filename, function name, "
"and first line number.  It is illegal to :func:`exec` or :func:`eval` the "
"resulting code object."
msgstr ""
"Повертає новий порожній об'єкт коду з вказаним ім'ям файлу, ім'ям функції та "
"номером першого рядка. Виконувати :func:`exec` або :func:`eval` отриманий "
"об'єкт коду заборонено."

#: ../../c-api/code.rst:57
msgid ""
"Return the line number of the instruction that occurs on or before "
"``byte_offset`` and ends after it. If you just need the line number of a "
"frame, use :c:func:`PyFrame_GetLineNumber` instead."
msgstr ""
"Повертає номер рядка інструкції, яка виникає до або перед ``byte_offset`` і "
"закінчується після нього. Якщо вам потрібен лише номер рядка кадру, "
"використовуйте натомість :c:func:`PyFrame_GetLineNumber`."

#: ../../c-api/code.rst:60
msgid ""
"For efficiently iterating over the line numbers in a code object, use `the "
"API described in PEP 626 <https://www.python.org/dev/peps/pep-0626/#out-of-"
"process-debuggers-and-profilers>`_."
msgstr ""
"Для ефективного перебору номерів рядків в об'єкті коду використовуйте `API, "
"описаний в PEP 626 <https://www.python.org/dev/peps/pep-0626/#out-of-process-"
"debuggers-and-profilers>`_."
