# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# Rafael Fontenelle <rffontenelle@gmail.com>, 2022
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.10\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-01-10 16:06+0000\n"
"PO-Revision-Date: 2022-11-05 17:21+0000\n"
"Last-Translator: Rafael Fontenelle <rffontenelle@gmail.com>, 2022\n"
"Language-Team: Ukrainian (https://app.transifex.com/python-doc/teams/5390/"
"uk/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: uk\n"
"Plural-Forms: nplurals=4; plural=(n % 1 == 0 && n % 10 == 1 && n % 100 != "
"11 ? 0 : n % 1 == 0 && n % 10 >= 2 && n % 10 <= 4 && (n % 100 < 12 || n % "
"100 > 14) ? 1 : n % 1 == 0 && (n % 10 ==0 || (n % 10 >=5 && n % 10 <=9) || "
"(n % 100 >=11 && n % 100 <=14 )) ? 2: 3);\n"

#: ../../faq/gui.rst:5
msgid "Graphic User Interface FAQ"
msgstr "Поширені запитання про графічний інтерфейс користувача"

#: ../../faq/gui.rst:8
msgid "Contents"
msgstr "Зміст"

#: ../../faq/gui.rst:15
msgid "General GUI Questions"
msgstr "Загальні запитання графічного інтерфейсу"

#: ../../faq/gui.rst:18
msgid "What GUI toolkits exist for Python?"
msgstr "Які інструменти GUI існують для Python?"

#: ../../faq/gui.rst:20
msgid ""
"Standard builds of Python include an object-oriented interface to the Tcl/Tk "
"widget set, called :ref:`tkinter <Tkinter>`.  This is probably the easiest "
"to install (since it comes included with most `binary distributions <https://"
"www.python.org/downloads/>`_ of Python) and use. For more info about Tk, "
"including pointers to the source, see the `Tcl/Tk home page <https://www.tcl."
"tk>`_.  Tcl/Tk is fully portable to the macOS, Windows, and Unix platforms."
msgstr ""
"Стандартні збірки Python містять об’єктно-орієнтований інтерфейс до набору "
"віджетів Tcl/Tk під назвою :ref:`tkinter <Tkinter>`. Це, мабуть, "
"найпростіший для встановлення (оскільки він входить до складу більшості "
"`бінарних дистрибутивів <https://www.python.org/downloads/>`_ Python) і "
"використання. Для отримання додаткової інформації про Tk, включаючи "
"покажчики на джерело, перегляньте `домашню сторінку Tcl/Tk <https://www.tcl."
"tk>`_. Tcl/Tk повністю переноситься на платформи macOS, Windows і Unix."

#: ../../faq/gui.rst:28
msgid ""
"Depending on what platform(s) you are aiming at, there are also several "
"alternatives. A `list of cross-platform <https://wiki.python.org/moin/"
"GuiProgramming#Cross-Platform_Frameworks>`_ and `platform-specific <https://"
"wiki.python.org/moin/GuiProgramming#Platform-specific_Frameworks>`_ GUI "
"frameworks can be found on the python wiki."
msgstr ""
"Залежно від того, на яку платформу(и) ви орієнтуєтеся, є також кілька "
"альтернатив. `Список кросплатформних <https://wiki.python.org/moin/"
"GuiProgramming#Cross-Platform_Frameworks>`_ і `специфічних для платформи "
"<https://wiki.python.org/moin/GuiProgramming#Platform-specific_Frameworks>`_ "
"фреймворків графічного інтерфейсу можна знайти на python wiki."

#: ../../faq/gui.rst:36
msgid "Tkinter questions"
msgstr "Питання по Tkinter"

#: ../../faq/gui.rst:39
msgid "How do I freeze Tkinter applications?"
msgstr "Як заморозити програми Tkinter?"

#: ../../faq/gui.rst:41
msgid ""
"Freeze is a tool to create stand-alone applications.  When freezing Tkinter "
"applications, the applications will not be truly stand-alone, as the "
"application will still need the Tcl and Tk libraries."
msgstr ""
"Freeze — це інструмент для створення автономних програм. Під час "
"заморожування програм Tkinter програми не будуть справді автономними, "
"оскільки програмі все одно знадобляться бібліотеки Tcl і Tk."

#: ../../faq/gui.rst:45
msgid ""
"One solution is to ship the application with the Tcl and Tk libraries, and "
"point to them at run-time using the :envvar:`TCL_LIBRARY` and :envvar:"
"`TK_LIBRARY` environment variables."
msgstr ""
"Одне з рішень полягає в тому, щоб завантажити програму з бібліотеками Tcl і "
"Tk і вказати на них під час виконання за допомогою змінних середовища :"
"envvar:`TCL_LIBRARY` і :envvar:`TK_LIBRARY`."

#: ../../faq/gui.rst:49
msgid ""
"To get truly stand-alone applications, the Tcl scripts that form the library "
"have to be integrated into the application as well. One tool supporting that "
"is SAM (stand-alone modules), which is part of the Tix distribution (https://"
"tix.sourceforge.net/)."
msgstr ""

#: ../../faq/gui.rst:54
msgid ""
"Build Tix with SAM enabled, perform the appropriate call to :c:func:"
"`Tclsam_init`, etc. inside Python's :file:`Modules/tkappinit.c`, and link "
"with libtclsam and libtksam (you might include the Tix libraries as well)."
msgstr ""
"Створіть Tix із увімкненим SAM, виконайте відповідний виклик :c:func:"
"`Tclsam_init` тощо всередині :file:`Modules/tkappinit.c` Python і зв’яжіться "
"з libtclsam і libtksam (ви також можете включити бібліотеки Tix )."

#: ../../faq/gui.rst:61
msgid "Can I have Tk events handled while waiting for I/O?"
msgstr "Чи можу я обробляти події Tk під час очікування введення-виведення?"

#: ../../faq/gui.rst:63
msgid ""
"On platforms other than Windows, yes, and you don't even need threads!  But "
"you'll have to restructure your I/O code a bit.  Tk has the equivalent of "
"Xt's :c:func:`XtAddInput()` call, which allows you to register a callback "
"function which will be called from the Tk mainloop when I/O is possible on a "
"file descriptor.  See :ref:`tkinter-file-handlers`."
msgstr ""
"На платформах, відмінних від Windows, так, і вам навіть не потрібні потоки! "
"Але вам доведеться дещо змінити структуру коду введення-виведення. Tk має "
"еквівалент виклику Xt :c:func:`XtAddInput()`, який дозволяє вам "
"зареєструвати функцію зворотного виклику, яка буде викликана з основного "
"циклу Tk, коли введення/виведення можливе для дескриптора файлу. Див. :ref:"
"`tkinter-file-handlers`."

#: ../../faq/gui.rst:71
msgid "I can't get key bindings to work in Tkinter: why?"
msgstr "Я не можу змусити прив’язки клавіш працювати в Tkinter: чому?"

#: ../../faq/gui.rst:73
msgid ""
"An often-heard complaint is that event handlers bound to events with the :"
"meth:`bind` method don't get handled even when the appropriate key is "
"pressed."
msgstr ""
"Часто можна почути скаргу на те, що обробники подій, пов’язані з подіями за "
"допомогою методу :meth:`bind`, не обробляються навіть після натискання "
"відповідної клавіші."

#: ../../faq/gui.rst:76
msgid ""
"The most common cause is that the widget to which the binding applies "
"doesn't have \"keyboard focus\".  Check out the Tk documentation for the "
"focus command. Usually a widget is given the keyboard focus by clicking in "
"it (but not for labels; see the takefocus option)."
msgstr ""
"Найпоширенішою причиною є те, що віджет, до якого застосовується прив’язка, "
"не має \"фокусу клавіатури\". Перегляньте документацію Tk для команди focus. "
"Зазвичай віджет отримує фокус клавіатури, клацнувши його (але не для міток; "
"див. опцію takefocus)."
