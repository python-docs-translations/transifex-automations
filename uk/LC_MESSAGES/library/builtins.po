# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# Rafael Fontenelle <rffontenelle@gmail.com>, 2025
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.11\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-07-18 17:29+0000\n"
"PO-Revision-Date: 2023-05-24 02:13+0000\n"
"Last-Translator: Rafael Fontenelle <rffontenelle@gmail.com>, 2025\n"
"Language-Team: Ukrainian (https://app.transifex.com/python-doc/teams/5390/"
"uk/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: uk\n"
"Plural-Forms: nplurals=4; plural=(n % 1 == 0 && n % 10 == 1 && n % 100 != "
"11 ? 0 : n % 1 == 0 && n % 10 >= 2 && n % 10 <= 4 && (n % 100 < 12 || n % "
"100 > 14) ? 1 : n % 1 == 0 && (n % 10 ==0 || (n % 10 >=5 && n % 10 <=9) || "
"(n % 100 >=11 && n % 100 <=14 )) ? 2: 3);\n"

#: ../../library/builtins.rst:2
msgid ":mod:`builtins` --- Built-in objects"
msgstr ":mod:`builtins` --- 내장 객체"

#: ../../library/builtins.rst:9
msgid ""
"This module provides direct access to all 'built-in' identifiers of Python; "
"for example, ``builtins.open`` is the full name for the built-in function :"
"func:`open`.  See :ref:`built-in-funcs` and :ref:`built-in-consts` for "
"documentation."
msgstr ""
"Цей модуль забезпечує прямий доступ до всіх \"вбудованих\" ідентифікаторів "
"Python; наприклад, ``builtins.open`` є повною назвою для вбудованої функції :"
"func:`open`. Дивіться :ref:`built-in-funcs` і :ref:`built-in-consts` для "
"документації."

#: ../../library/builtins.rst:15
msgid ""
"This module is not normally accessed explicitly by most applications, but "
"can be useful in modules that provide objects with the same name as a built-"
"in value, but in which the built-in of that name is also needed.  For "
"example, in a module that wants to implement an :func:`open` function that "
"wraps the built-in :func:`open`, this module can be used directly::"
msgstr ""
"Modul ini biasanya tidak diakses secara eksplisit oleh sebagian besar "
"aplikasi, tetapi dapat berguna dalam modul yang menyediakan objek dengan "
"nama yang sama dengan nilai bawaan, tetapi di dalamnya bawaan dari nama itu "
"juga diperlukan. Sebagai contoh, dalam modul yang ingin mengimplementasikan "
"fungsi :func:`open` yang membungkus bawaan :func:`open`, modul ini dapat "
"digunakan secara langsung::"

#: ../../library/builtins.rst:38
msgid ""
"As an implementation detail, most modules have the name ``__builtins__`` "
"made available as part of their globals.  The value of ``__builtins__`` is "
"normally either this module or the value of this module's :attr:`~object."
"__dict__` attribute. Since this is an implementation detail, it may not be "
"used by alternate implementations of Python."
msgstr ""
"Sebagai detil implementasi, sebagian besar modul memiliki nama "
"``__builtins__`` yang tersedia sebagai bagian dari globalnya. Nilai "
"``__builtins__`` biasanya berupa modul ini atau nilai dari modul ini "
"atribut :attr:`~object .__ dict__`. Karena ini merupakan detil implementasi, "
"ini mungkin tidak digunakan oleh implementasi alternatif Python."
