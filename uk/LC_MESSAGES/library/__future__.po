# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001 Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# python-doc bot, 2025
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.14\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-09 14:15+0000\n"
"PO-Revision-Date: 2025-08-15 19:00+0000\n"
"Last-Translator: python-doc bot, 2025\n"
"Language-Team: Ukrainian (https://app.transifex.com/python-doc/teams/5390/"
"uk/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: uk\n"
"Plural-Forms: nplurals=4; plural=(n % 1 == 0 && n % 10 == 1 && n % 100 != "
"11 ? 0 : n % 1 == 0 && n % 10 >= 2 && n % 10 <= 4 && (n % 100 < 12 || n % "
"100 > 14) ? 1 : n % 1 == 0 && (n % 10 ==0 || (n % 10 >=5 && n % 10 <=9) || "
"(n % 100 >=11 && n % 100 <=14 )) ? 2: 3);\n"

#: ../../library/__future__.rst:2
msgid ":mod:`!__future__` --- Future statement definitions"
msgstr ""

#: ../../library/__future__.rst:7
msgid "**Source code:** :source:`Lib/__future__.py`"
msgstr "**Вихідний код:** :source:`Lib/__future__.py`"

#: ../../library/__future__.rst:11
msgid ""
"Imports of the form ``from __future__ import feature`` are called :ref:"
"`future statements <future>`. These are special-cased by the Python compiler "
"to allow the use of new Python features in modules containing the future "
"statement before the release in which the feature becomes standard."
msgstr ""

#: ../../library/__future__.rst:16
msgid ""
"While these future statements are given additional special meaning by the "
"Python compiler, they are still executed like any other import statement and "
"the :mod:`__future__` exists and is handled by the import system the same "
"way any other Python module would be. This design serves three purposes:"
msgstr ""

#: ../../library/__future__.rst:21
msgid ""
"To avoid confusing existing tools that analyze import statements and expect "
"to find the modules they're importing."
msgstr ""
"Щоб не плутати існуючі інструменти, які аналізують оператори імпорту та "
"очікують знайти модулі, які вони імпортують."

#: ../../library/__future__.rst:24
msgid ""
"To document when incompatible changes were introduced, and when they will be "
"--- or were --- made mandatory.  This is a form of executable documentation, "
"and can be inspected programmatically via importing :mod:`__future__` and "
"examining its contents."
msgstr ""
"Щоб задокументувати, коли були внесені несумісні зміни, і коли вони будуть "
"--- або були --- зроблені обов'язковими. Це форма виконуваної документації, "
"яку можна перевірити програмним шляхом, імпортувавши :mod:`__future__` і "
"перевіривши його вміст."

#: ../../library/__future__.rst:29
msgid ""
"To ensure that :ref:`future statements <future>` run under releases prior to "
"Python 2.1 at least yield runtime exceptions (the import of :mod:"
"`__future__` will fail, because there was no module of that name prior to "
"2.1)."
msgstr ""

#: ../../library/__future__.rst:34
msgid "Module Contents"
msgstr "Зміст модуля"

#: ../../library/__future__.rst:36
msgid ""
"No feature description will ever be deleted from :mod:`__future__`. Since "
"its introduction in Python 2.1 the following features have found their way "
"into the language using this mechanism:"
msgstr ""
"Жоден опис функції ніколи не буде видалено з :mod:`__future__`. З моменту "
"появи в Python 2.1 наступні функції знайшли шлях до мови за допомогою цього "
"механізму:"

#: ../../library/__future__.rst:45
msgid "feature"
msgstr "функція"

#: ../../library/__future__.rst:46
msgid "optional in"
msgstr "факультативно в"

#: ../../library/__future__.rst:47
msgid "mandatory in"
msgstr "обов'язкове в"

#: ../../library/__future__.rst:48
msgid "effect"
msgstr "ефект"

#: ../../library/__future__.rst:50
msgid "2.1.0b1"
msgstr "2.1.0b1"

#: ../../library/__future__.rst:51
msgid "2.2"
msgstr "2.2"

#: ../../library/__future__.rst:52
msgid ":pep:`227`: *Statically Nested Scopes*"
msgstr ":pep:`227`: *Статично вкладені області*"

#: ../../library/__future__.rst:54
msgid "2.2.0a1"
msgstr "2.2.0a1"

#: ../../library/__future__.rst:55
msgid "2.3"
msgstr "2.3"

#: ../../library/__future__.rst:56
msgid ":pep:`255`: *Simple Generators*"
msgstr ":pep:`255`: *Прості генератори*"

#: ../../library/__future__.rst:58
msgid "2.2.0a2"
msgstr "2.2.0a2"

#: ../../library/__future__.rst:59 ../../library/__future__.rst:63
#: ../../library/__future__.rst:71 ../../library/__future__.rst:75
msgid "3.0"
msgstr "3.0"

#: ../../library/__future__.rst:60
msgid ":pep:`238`: *Changing the Division Operator*"
msgstr ":pep:`238`: *Зміна оператора ділення*"

#: ../../library/__future__.rst:62 ../../library/__future__.rst:66
msgid "2.5.0a1"
msgstr "2.5.0a1"

#: ../../library/__future__.rst:64
msgid ":pep:`328`: *Imports: Multi-Line and Absolute/Relative*"
msgstr ":pep:`328`: *Імпорт: багаторядковий і абсолютний/відносний*"

#: ../../library/__future__.rst:67
msgid "2.6"
msgstr "2.6"

#: ../../library/__future__.rst:68
msgid ":pep:`343`: *The “with” Statement*"
msgstr ""

#: ../../library/__future__.rst:70 ../../library/__future__.rst:74
msgid "2.6.0a2"
msgstr "2.6.0a2"

#: ../../library/__future__.rst:72
msgid ":pep:`3105`: *Make print a function*"
msgstr ":pep:`3105`: *Зробити функцію друку*"

#: ../../library/__future__.rst:76
msgid ":pep:`3112`: *Bytes literals in Python 3000*"
msgstr ":pep:`3112`: *Байтові літерали в Python 3000*"

#: ../../library/__future__.rst:78
msgid "3.5.0b1"
msgstr "3.5.0b1"

#: ../../library/__future__.rst:79
msgid "3.7"
msgstr "3.7"

#: ../../library/__future__.rst:80
msgid ":pep:`479`: *StopIteration handling inside generators*"
msgstr ":pep:`479`: *Обробка StopIteration всередині генераторів*"

#: ../../library/__future__.rst:82
msgid "3.7.0b1"
msgstr "3.7.0b1"

#: ../../library/__future__.rst:83
msgid "Never [1]_"
msgstr ""

#: ../../library/__future__.rst:84
msgid ""
":pep:`563`: *Postponed evaluation of annotations*, :pep:`649`: *Deferred "
"evaluation of annotations using descriptors*"
msgstr ""

#: ../../library/__future__.rst:93
msgid "Each statement in :file:`__future__.py` is of the form::"
msgstr "Кожен оператор у :file:`__future__.py` має форму::"

#: ../../library/__future__.rst:95
msgid ""
"FeatureName = _Feature(OptionalRelease, MandatoryRelease,\n"
"                       CompilerFlag)"
msgstr ""

#: ../../library/__future__.rst:98
msgid ""
"where, normally, *OptionalRelease* is less than *MandatoryRelease*, and both "
"are 5-tuples of the same form as :data:`sys.version_info`::"
msgstr ""
"де, як правило, *OptionalRelease* менше ніж *MandatoryRelease*, і обидва є 5-"
"кортежами тієї самої форми, що й :data:`sys.version_info`::"

#: ../../library/__future__.rst:101
msgid ""
"(PY_MAJOR_VERSION, # the 2 in 2.1.0a3; an int\n"
" PY_MINOR_VERSION, # the 1; an int\n"
" PY_MICRO_VERSION, # the 0; an int\n"
" PY_RELEASE_LEVEL, # \"alpha\", \"beta\", \"candidate\" or \"final\"; "
"string\n"
" PY_RELEASE_SERIAL # the 3; an int\n"
")"
msgstr ""

#: ../../library/__future__.rst:110
msgid ""
"*OptionalRelease* records the first release in which the feature was "
"accepted."
msgstr ""
"*OptionalRelease* записує перший випуск, у якому цю функцію було прийнято."

#: ../../library/__future__.rst:114
msgid ""
"In the case of a *MandatoryRelease* that has not yet occurred, "
"*MandatoryRelease* predicts the release in which the feature will become "
"part of the language."
msgstr ""
"У випадку *MandatoryRelease*, який ще не відбувся, *MandatoryRelease* "
"передбачає випуск, у якому ця функція стане частиною мови."

#: ../../library/__future__.rst:118
msgid ""
"Else *MandatoryRelease* records when the feature became part of the "
"language; in releases at or after that, modules no longer need a future "
"statement to use the feature in question, but may continue to use such "
"imports."
msgstr ""
"Інакше *MandatoryRelease* записує, коли функція стала частиною мови; у "
"випусках на цьому або після цього модулям більше не потрібен майбутній "
"оператор для використання відповідної функції, але вони можуть продовжувати "
"використовувати такий імпорт."

#: ../../library/__future__.rst:122
msgid ""
"*MandatoryRelease* may also be ``None``, meaning that a planned feature got "
"dropped or that it is not yet decided."
msgstr ""

#: ../../library/__future__.rst:127
msgid ""
"*CompilerFlag* is the (bitfield) flag that should be passed in the fourth "
"argument to the built-in function :func:`compile` to enable the feature in "
"dynamically compiled code.  This flag is stored in the :attr:`_Feature."
"compiler_flag` attribute on :class:`_Feature` instances."
msgstr ""

#: ../../library/__future__.rst:133
msgid ""
"``from __future__ import annotations`` was previously scheduled to become "
"mandatory in Python 3.10, but the change was delayed and ultimately "
"canceled. This feature will eventually be deprecated and removed. See :pep:"
"`649` and :pep:`749`."
msgstr ""

#: ../../library/__future__.rst:141
msgid ":ref:`future`"
msgstr ":ref:`future`"

#: ../../library/__future__.rst:142
msgid "How the compiler treats future imports."
msgstr "Як компілятор обробляє майбутні імпорти."

#: ../../library/__future__.rst:144
msgid ":pep:`236` - Back to the __future__"
msgstr ":pep:`236` - Назад у __future__"

#: ../../library/__future__.rst:145
msgid "The original proposal for the __future__ mechanism."
msgstr "Оригінальна пропозиція щодо механізму __future__."
