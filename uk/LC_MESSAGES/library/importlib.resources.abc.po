# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# Rafael Fontenelle <rffontenelle@gmail.com>, 2023
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.11\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-01-10 15:26+0000\n"
"PO-Revision-Date: 2023-05-24 02:16+0000\n"
"Last-Translator: Rafael Fontenelle <rffontenelle@gmail.com>, 2023\n"
"Language-Team: Ukrainian (https://app.transifex.com/python-doc/teams/5390/"
"uk/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: uk\n"
"Plural-Forms: nplurals=4; plural=(n % 1 == 0 && n % 10 == 1 && n % 100 != "
"11 ? 0 : n % 1 == 0 && n % 10 >= 2 && n % 10 <= 4 && (n % 100 < 12 || n % "
"100 > 14) ? 1 : n % 1 == 0 && (n % 10 ==0 || (n % 10 >=5 && n % 10 <=9) || "
"(n % 100 >=11 && n % 100 <=14 )) ? 2: 3);\n"

#: ../../library/importlib.resources.abc.rst:2
msgid ":mod:`importlib.resources.abc` -- Abstract base classes for resources"
msgstr ""

#: ../../library/importlib.resources.abc.rst:7
msgid "**Source code:** :source:`Lib/importlib/resources/abc.py`"
msgstr ""

#: ../../library/importlib.resources.abc.rst:15
msgid "*Superseded by TraversableResources*"
msgstr "*Замінено TraversableResources*"

#: ../../library/importlib.resources.abc.rst:17
msgid ""
"An :term:`abstract base class` to provide the ability to read *resources*."
msgstr ":term:`abstract base class` для надання можливості читати *ресурси*."

#: ../../library/importlib.resources.abc.rst:20
msgid ""
"From the perspective of this ABC, a *resource* is a binary artifact that is "
"shipped within a package. Typically this is something like a data file that "
"lives next to the ``__init__.py`` file of the package. The purpose of this "
"class is to help abstract out the accessing of such data files so that it "
"does not matter if the package and its data file(s) are stored in a e.g. zip "
"file versus on the file system."
msgstr ""
"З точки зору цієї ABC, *ресурс* — це бінарний артефакт, який доставляється в "
"пакеті. Зазвичай це щось на зразок файлу даних, який знаходиться поруч із "
"файлом ``__init__.py`` файлу пакета. Мета цього класу полягає в тому, щоб "
"допомогти абстрагуватися від доступу до таких файлів даних, щоб не мати "
"значення, чи зберігається пакет і його файл(и) даних у, наприклад, zip-файл "
"проти файлової системи."

#: ../../library/importlib.resources.abc.rst:28
msgid ""
"For any of methods of this class, a *resource* argument is expected to be a :"
"term:`path-like object` which represents conceptually just a file name. This "
"means that no subdirectory paths should be included in the *resource* "
"argument. This is because the location of the package the reader is for, "
"acts as the \"directory\". Hence the metaphor for directories and file names "
"is packages and resources, respectively. This is also why instances of this "
"class are expected to directly correlate to a specific package (instead of "
"potentially representing multiple packages or a module)."
msgstr ""
"Для будь-якого методу цього класу очікується, що аргумент *resource* буде :"
"term:`path-like object`, який концептуально представляє лише ім’я файлу. Це "
"означає, що шляхи підкаталогів не повинні включатися в аргумент *resource*. "
"Це пояснюється тим, що місце розташування пакета, для якого призначений "
"зчитувач, діє як \"каталог\". Тому метафорою для каталогів і імен файлів є "
"пакети та ресурси відповідно. Ось чому очікується, що екземпляри цього класу "
"безпосередньо співвідносяться з певним пакетом (замість того, щоб потенційно "
"представляти кілька пакетів або модуль)."

#: ../../library/importlib.resources.abc.rst:39
msgid ""
"Loaders that wish to support resource reading are expected to provide a "
"method called ``get_resource_reader(fullname)`` which returns an object "
"implementing this ABC's interface. If the module specified by fullname is "
"not a package, this method should return :const:`None`. An object compatible "
"with this ABC should only be returned when the specified module is a package."
msgstr ""
"Очікується, що завантажувачі, які бажають підтримувати читання ресурсів, "
"нададуть метод під назвою ``get_resource_reader(fullname)``, який повертає "
"об’єкт, що реалізує цей інтерфейс ABC. Якщо модуль, указаний повним іменем, "
"не є пакетом, цей метод має повернути :const:`None`. Об’єкт, сумісний із цим "
"ABC, слід повертати лише тоді, коли вказаний модуль є пакетом."

#: ../../library/importlib.resources.abc.rst:50
msgid ""
"Returns an opened, :term:`file-like object` for binary reading of the "
"*resource*."
msgstr ""
"Повертає відкритий :term:`file-like object` для двійкового читання *ресурсу*."

#: ../../library/importlib.resources.abc.rst:53
msgid "If the resource cannot be found, :exc:`FileNotFoundError` is raised."
msgstr "Якщо ресурс не знайдено, виникає :exc:`FileNotFoundError`."

#: ../../library/importlib.resources.abc.rst:58
msgid "Returns the file system path to the *resource*."
msgstr "Повертає шлях файлової системи до *ресурсу*."

#: ../../library/importlib.resources.abc.rst:60
msgid ""
"If the resource does not concretely exist on the file system, raise :exc:"
"`FileNotFoundError`."
msgstr ""
"Якщо ресурс конкретно не існує у файловій системі, викликайте :exc:"
"`FileNotFoundError`."

#: ../../library/importlib.resources.abc.rst:65
msgid ""
"Returns ``True`` if the named *name* is considered a resource. :exc:"
"`FileNotFoundError` is raised if *name* does not exist."
msgstr ""
"Повертає ``True``, якщо назване *ім’я* вважається ресурсом. :exc:"
"`FileNotFoundError` виникає, якщо *name* не існує."

#: ../../library/importlib.resources.abc.rst:70
msgid ""
"Returns an :term:`iterable` of strings over the contents of the package. Do "
"note that it is not required that all names returned by the iterator be "
"actual resources, e.g. it is acceptable to return names for which :meth:"
"`is_resource` would be false."
msgstr ""
"Повертає :term:`iterable` рядків над вмістом пакета. Зауважте, що не "
"обов’язково, щоб усі імена, які повертає ітератор, були фактичними "
"ресурсами, наприклад. прийнятно повертати імена, для яких :meth:"
"`is_resource` буде false."

#: ../../library/importlib.resources.abc.rst:76
msgid ""
"Allowing non-resource names to be returned is to allow for situations where "
"how a package and its resources are stored are known a priori and the non-"
"resource names would be useful. For instance, returning subdirectory names "
"is allowed so that when it is known that the package and resources are "
"stored on the file system then those subdirectory names can be used directly."
msgstr ""
"Дозволити повертати нересурсні імена, щоб дозволити ситуації, коли те, як "
"пакет і його ресурси зберігаються, відомі апріорі, і нересурсні імена будуть "
"корисними. Наприклад, дозволено повертати імена підкаталогів, щоб, якщо "
"відомо, що пакет і ресурси зберігаються у файловій системі, ці імена "
"підкаталогів можна було використовувати безпосередньо."

#: ../../library/importlib.resources.abc.rst:84
msgid "The abstract method returns an iterable of no items."
msgstr "Абстрактний метод повертає ітерацію без елементів."

#: ../../library/importlib.resources.abc.rst:89
msgid ""
"An object with a subset of :class:`pathlib.Path` methods suitable for "
"traversing directories and opening files."
msgstr ""

#: ../../library/importlib.resources.abc.rst:92
msgid ""
"For a representation of the object on the file-system, use :meth:`importlib."
"resources.as_file`."
msgstr ""

#: ../../library/importlib.resources.abc.rst:99
msgid "Abstract. The base name of this object without any parent references."
msgstr ""

#: ../../library/importlib.resources.abc.rst:103
msgid "Yield Traversable objects in self."
msgstr "Прибуток Traversable об'єктів в себе."

#: ../../library/importlib.resources.abc.rst:107
msgid "Return True if self is a directory."
msgstr "Повертає True, якщо self є каталогом."

#: ../../library/importlib.resources.abc.rst:111
msgid "Return True if self is a file."
msgstr "Повертає True, якщо self є файлом."

#: ../../library/importlib.resources.abc.rst:115
#: ../../library/importlib.resources.abc.rst:119
msgid "Return Traversable child in self."
msgstr "Повернення Прохідної дитини в себе."

#: ../../library/importlib.resources.abc.rst:123
msgid ""
"*mode* may be 'r' or 'rb' to open as text or binary. Return a handle "
"suitable for reading (same as :attr:`pathlib.Path.open`)."
msgstr ""
"*mode* може бути \"r\" або \"rb\", щоб відкрити як текстовий або двійковий "
"файл. Повертає дескриптор, придатний для читання (те саме, що :attr:`pathlib."
"Path.open`)."

#: ../../library/importlib.resources.abc.rst:126
msgid ""
"When opening as text, accepts encoding parameters such as those accepted by :"
"class:`io.TextIOWrapper`."
msgstr ""

#: ../../library/importlib.resources.abc.rst:131
msgid "Read contents of self as bytes."
msgstr "Читати вміст себе як байти."

#: ../../library/importlib.resources.abc.rst:135
msgid "Read contents of self as text."
msgstr "Прочитати вміст себе як текст."

#: ../../library/importlib.resources.abc.rst:140
msgid ""
"An abstract base class for resource readers capable of serving the :meth:"
"`importlib.resources.files` interface. Subclasses :class:`ResourceReader` "
"and provides concrete implementations of the :class:`!ResourceReader`'s "
"abstract methods. Therefore, any loader supplying :class:`!"
"TraversableResources` also supplies :class:`!ResourceReader`."
msgstr ""

#: ../../library/importlib.resources.abc.rst:147
msgid ""
"Loaders that wish to support resource reading are expected to implement this "
"interface."
msgstr ""
"Очікується, що завантажувачі, які бажають підтримувати читання ресурсів, "
"реалізують цей інтерфейс."

#: ../../library/importlib.resources.abc.rst:154
msgid ""
"Returns a :class:`importlib.resources.abc.Traversable` object for the loaded "
"package."
msgstr ""
