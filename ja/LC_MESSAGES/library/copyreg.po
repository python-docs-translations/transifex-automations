# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# Rafael Fontenelle <rffontenelle@gmail.com>, 2025
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.11\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-07-18 17:29+0000\n"
"PO-Revision-Date: 2023-05-24 02:13+0000\n"
"Last-Translator: Rafael Fontenelle <rffontenelle@gmail.com>, 2025\n"
"Language-Team: Japanese (https://app.transifex.com/python-doc/teams/5390/"
"ja/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ja\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../library/copyreg.rst:2
msgid ":mod:`copyreg` --- Register :mod:`pickle` support functions"
msgstr ":mod:`copyreg` --- :mod:`pickle` サポート関数を登録する"

#: ../../library/copyreg.rst:7
msgid "**Source code:** :source:`Lib/copyreg.py`"
msgstr "**Kod źródłowy:** :source:`Lib/copyreg.py`"

#: ../../library/copyreg.rst:15
msgid ""
"The :mod:`copyreg` module offers a way to define functions used while "
"pickling specific objects.  The :mod:`pickle` and :mod:`copy` modules use "
"those functions when pickling/copying those objects.  The module provides "
"configuration information about object constructors which are not classes. "
"Such constructors may be factory functions or class instances."
msgstr ""
"Модуль :mod:`copyreg` пропонує спосіб визначення функцій, які "
"використовуються під час маринування конкретних об’єктів. Модулі :mod:"
"`pickle` і :mod:`copy` використовують ці функції під час маринування/"
"копіювання цих об’єктів. Модуль надає конфігураційну інформацію про "
"конструктори об’єктів, які не є класами. Такими конструкторами можуть бути "
"фабричні функції або екземпляри класу."

#: ../../library/copyreg.rst:24
msgid ""
"Declares *object* to be a valid constructor.  If *object* is not callable "
"(and hence not valid as a constructor), raises :exc:`TypeError`."
msgstr ""
"Оголошує *object* як дійсний конструктор. Якщо *object* не можна викликати "
"(і, отже, недійсний як конструктор), викликає :exc:`TypeError`."

#: ../../library/copyreg.rst:30
msgid ""
"Declares that *function* should be used as a \"reduction\" function for "
"objects of type *type*.  *function* must return either a string or a tuple "
"containing between two and six elements. See the :attr:`~pickle.Pickler."
"dispatch_table` for more details on the interface of *function*."
msgstr ""
"Объявляет, что *функция* должна использоваться как функция «сокращения» для "
"объектов типа *тип*. *функция* должна возвращать либо строку, либо кортеж, "
"содержащий от двух до шести элементов. См. :attr:`~pickle.Pickler."
"dispatch_table` для получения более подробной информации об интерфейсе "
"*функции*."

#: ../../library/copyreg.rst:35
msgid ""
"The *constructor_ob* parameter is a legacy feature and is now ignored, but "
"if passed it must be a callable."
msgstr ""
"Параметр *constructor_ob* является устаревшей функцией и теперь "
"игнорируется, но если он передан, он должен быть вызываемым."

#: ../../library/copyreg.rst:38
msgid ""
"Note that the :attr:`~pickle.Pickler.dispatch_table` attribute of a pickler "
"object or subclass of :class:`pickle.Pickler` can also be used for declaring "
"reduction functions."
msgstr ""
"Обратите внимание, что атрибут :attr:`~pickle.Pickler.dispatch_table` "
"объекта пиклера или подкласса :class:`pickle.Pickler` также может "
"использоваться для объявления функций сокращения."

#: ../../library/copyreg.rst:43
msgid "Example"
msgstr "Przykład"

#: ../../library/copyreg.rst:45
msgid ""
"The example below would like to show how to register a pickle function and "
"how it will be used:"
msgstr ""
"Наведений нижче приклад показує, як зареєструвати функцію pickle і як вона "
"буде використовуватися:"

#: ../../library/copyreg.rst:9
msgid "module"
msgstr "moduł"

#: ../../library/copyreg.rst:9
msgid "pickle"
msgstr "pickle"

#: ../../library/copyreg.rst:9
msgid "copy"
msgstr "копировать"
