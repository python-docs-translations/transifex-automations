# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001 Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# python-doc bot, 2025
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.14\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-08-07 20:38+0000\n"
"PO-Revision-Date: 2025-08-02 17:34+0000\n"
"Last-Translator: python-doc bot, 2025\n"
"Language-Team: Japanese (https://app.transifex.com/python-doc/teams/5390/"
"ja/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ja\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../library/email.errors.rst:2
msgid ":mod:`!email.errors`: Exception and Defect classes"
msgstr ""

#: ../../library/email.errors.rst:7
msgid "**Source code:** :source:`Lib/email/errors.py`"
msgstr "**ソースコード:** :source:`Lib/email/errors.py`"

#: ../../library/email.errors.rst:11
msgid ""
"The following exception classes are defined in the :mod:`email.errors` "
"module:"
msgstr ""
":mod:`email.errors` モジュールでは、以下の例外クラスが定義されています:"

#: ../../library/email.errors.rst:16
msgid ""
"This is the base class for all exceptions that the :mod:`email` package can "
"raise.  It is derived from the standard :exc:`Exception` class and defines "
"no additional methods."
msgstr ""
"これは :mod:`email` パッケージが送出しうるすべての例外の基底クラスです。これ"
"は標準の :exc:`Exception` クラスから派生しており、追加のメソッドは定義されて"
"いません。"

#: ../../library/email.errors.rst:23
msgid ""
"This is the base class for exceptions raised by the :class:`~email.parser."
"Parser` class.  It is derived from :exc:`MessageError`.  This class is also "
"used internally by the parser used by :mod:`~email.headerregistry`."
msgstr ""
"Це базовий клас для винятків, викликаних класом :class:`~email.parser."
"Parser`. Він походить від :exc:`MessageError`. Цей клас також "
"використовується внутрішньо аналізатором, який використовує :mod:`~email."
"headerregistry`."

#: ../../library/email.errors.rst:31
msgid ""
"Raised under some error conditions when parsing the :rfc:`5322` headers of a "
"message, this class is derived from :exc:`MessageParseError`.  The :meth:"
"`~email.message.EmailMessage.set_boundary` method will raise this error if "
"the content type is unknown when the method is called. :class:`~email.header."
"Header` may raise this error for certain base64 decoding errors, and when an "
"attempt is made to create a header that appears to contain an embedded "
"header (that is, there is what is supposed to be a continuation line that "
"has no leading whitespace and looks like a header)."
msgstr ""
"Виникає за деяких умов помилки під час аналізу заголовків :rfc:`5322` "
"повідомлення, цей клас походить від :exc:`MessageParseError`. Метод :meth:"
"`~email.message.EmailMessage.set_boundary` викличе цю помилку, якщо під час "
"виклику методу тип вмісту невідомий. :class:`~email.header.Header` може "
"викликати цю помилку для певних помилок декодування base64, а також коли "
"робиться спроба створити заголовок, який, здається, містить вбудований "
"заголовок (тобто, є те, що має бути рядок продовження, який не має "
"початкових пробілів і виглядає як заголовок)."

#: ../../library/email.errors.rst:43
msgid "Deprecated and no longer used."
msgstr "Застарілий і більше не використовується."

#: ../../library/email.errors.rst:48
msgid ""
"Raised if the :meth:`~email.message.Message.attach` method is called on an "
"instance of a class derived from :class:`~email.mime.nonmultipart."
"MIMENonMultipart` (e.g. :class:`~email.mime.image.MIMEImage`). :exc:"
"`MultipartConversionError` multiply inherits from :exc:`MessageError` and "
"the built-in :exc:`TypeError`."
msgstr ""

#: ../../library/email.errors.rst:58
msgid ""
"Raised when an error occurs when the :mod:`~email.generator` outputs headers."
msgstr ""
"Возникает, когда возникает ошибка, когда :mod:`~email.generator` выводит "
"заголовки."

#: ../../library/email.errors.rst:64
msgid ""
"This is the base class for all defects found when parsing email messages. It "
"is derived from :exc:`ValueError`."
msgstr ""

#: ../../library/email.errors.rst:69
msgid ""
"This is the base class for all defects found when parsing email headers. It "
"is derived from :exc:`MessageDefect`."
msgstr ""

#: ../../library/email.errors.rst:72
msgid ""
"Here is the list of the defects that the :class:`~email.parser.FeedParser` "
"can find while parsing messages.  Note that the defects are added to the "
"message where the problem was found, so for example, if a message nested "
"inside a :mimetype:`multipart/alternative` had a malformed header, that "
"nested message object would have a defect, but the containing messages would "
"not."
msgstr ""
"以下は :class:`~email.parser.FeedParser` がメッセージの解析中に検出する障害 "
"(defect) の一覧です。これらの障害は、問題が見つかったメッセージに追加されるた"
"め、たとえば :mimetype:`multipart/alternative` 内にあるネストしたメッセージが"
"異常なヘッダをもっていた場合には、そのネストしたメッセージが障害を持っている"
"が、その親メッセージには障害はないとみなされることに注意してください。"

#: ../../library/email.errors.rst:78
msgid ""
"All defect classes are subclassed from :class:`email.errors.MessageDefect`."
msgstr ""
"すべての障害クラスは :class:`email.errors.MessageDefect` のサブクラスです。"

#: ../../library/email.errors.rst:82
msgid ""
"A message claimed to be a multipart, but had no :mimetype:`boundary` "
"parameter."
msgstr ""

#: ../../library/email.errors.rst:87
msgid ""
"The start boundary claimed in the :mailheader:`Content-Type` header was "
"never found."
msgstr ""

#: ../../library/email.errors.rst:92
msgid ""
"A start boundary was found, but no corresponding close boundary was ever "
"found."
msgstr ""

#: ../../library/email.errors.rst:99
msgid "The message had a continuation line as its first header line."
msgstr ""

#: ../../library/email.errors.rst:103
msgid "A \"Unix From\" header was found in the middle of a header block."
msgstr ""

#: ../../library/email.errors.rst:107
msgid ""
"A line was found while parsing headers that had no leading white space but "
"contained no ':'.  Parsing continues assuming that the line represents the "
"first line of the body."
msgstr ""

#: ../../library/email.errors.rst:115
msgid ""
"A header was found that was missing a colon, or was otherwise malformed."
msgstr ""

#: ../../library/email.errors.rst:117
msgid "This defect has not been used for several Python versions."
msgstr "この欠陥が使われていないPythonバージョンがいくつかあります。"

#: ../../library/email.errors.rst:122
msgid ""
"A message claimed to be a :mimetype:`multipart`, but no subparts were found. "
"Note that when a message has this defect, its :meth:`~email.message.Message."
"is_multipart` method may return ``False`` even though its content type "
"claims to be :mimetype:`multipart`."
msgstr ""

#: ../../library/email.errors.rst:129
msgid ""
"When decoding a block of base64 encoded bytes, the padding was not correct. "
"Enough padding is added to perform the decode, but the resulting decoded "
"bytes may be invalid."
msgstr ""

#: ../../library/email.errors.rst:135
msgid ""
"When decoding a block of base64 encoded bytes, characters outside the base64 "
"alphabet were encountered.  The characters are ignored, but the resulting "
"decoded bytes may be invalid."
msgstr ""

#: ../../library/email.errors.rst:141
msgid ""
"When decoding a block of base64 encoded bytes, the number of non-padding "
"base64 characters was invalid (1 more than a multiple of 4).  The encoded "
"block was kept as-is."
msgstr ""

#: ../../library/email.errors.rst:147
msgid ""
"When decoding an invalid or unparsable date field.  The original value is "
"kept as-is."
msgstr ""
