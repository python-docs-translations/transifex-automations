# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# python-doc bot, 2025
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.13\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-15 15:19+0000\n"
"PO-Revision-Date: 2025-09-15 01:04+0000\n"
"Last-Translator: python-doc bot, 2025\n"
"Language-Team: Japanese (https://app.transifex.com/python-doc/teams/5390/"
"ja/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ja\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../library/builtins.rst:2
msgid ":mod:`!builtins` --- Built-in objects"
msgstr ":mod:`!builtins` --- 組み込みオブジェクト"

#: ../../library/builtins.rst:9
msgid ""
"This module provides direct access to all 'built-in' identifiers of Python; "
"for example, ``builtins.open`` is the full name for the built-in "
"function :func:`open`."
msgstr ""

#: ../../library/builtins.rst:12
msgid ""
"This module is not normally accessed explicitly by most applications, but "
"can be useful in modules that provide objects with the same name as a built-"
"in value, but in which the built-in of that name is also needed.  For "
"example, in a module that wants to implement an :func:`open` function that "
"wraps the built-in :func:`open`, this module can be used directly::"
msgstr ""
"通常このモジュールはほとんどのアプリケーションで明示的にアクセスされることは"
"ありませんが、組み込みの値と同じ名前のオブジェクトを提供するモジュールが同時"
"にその名前の組み込みオブジェクトも必要とするような場合には有用です。たとえ"
"ば、組み込みの :func:`open` をラップした :func:`open` という関数を実装したい"
"モジュールがあったとすると、このモジュールは次のように直接的に使われます::"

#: ../../library/builtins.rst:18
msgid ""
"import builtins\n"
"\n"
"def open(path):\n"
"    f = builtins.open(path, 'r')\n"
"    return UpperCaser(f)\n"
"\n"
"class UpperCaser:\n"
"    '''Wrapper around a file that converts output to uppercase.'''\n"
"\n"
"    def __init__(self, f):\n"
"        self._f = f\n"
"\n"
"    def read(self, count=-1):\n"
"        return self._f.read(count).upper()\n"
"\n"
"    # ..."
msgstr ""

#: ../../library/builtins.rst:35
msgid ""
"As an implementation detail, most modules have the name ``__builtins__`` "
"made available as part of their globals.  The value of ``__builtins__`` is "
"normally either this module or the value of this "
"module's :attr:`~object.__dict__` attribute. Since this is an implementation "
"detail, it may not be used by alternate implementations of Python."
msgstr ""
"ほとんどのモジュールではグローバル変数の一部として ``__builtins__`` が利用で"
"きるようになっています。 ``__builtins__`` の内容は通常このモジュールそのもの"
"か、あるいはこのモジュールの :attr:`~object.__dict__` 属性です。これは実装の"
"詳細部分なので、異なる Python の実装では ``__builtins__`` は使われていないこ"
"ともあります。"

#: ../../library/builtins.rst:43
msgid ":ref:`built-in-consts`"
msgstr ""

#: ../../library/builtins.rst:44
msgid ":ref:`bltin-exceptions`"
msgstr ""

#: ../../library/builtins.rst:45
msgid ":ref:`built-in-funcs`"
msgstr ""

#: ../../library/builtins.rst:46
msgid ":ref:`bltin-types`"
msgstr ""
