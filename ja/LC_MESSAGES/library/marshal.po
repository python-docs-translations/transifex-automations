# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001 Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# Takanori Suzuki <takanori@takanory.net>, 2021
# 秘湯 <xwhhsprings@gmail.com>, 2023
# 石井明久, 2024
# Arihiro TAKASE, 2025
# tomo, 2025
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.14\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-05-08 02:53-0300\n"
"PO-Revision-Date: 2021-06-28 01:09+0000\n"
"Last-Translator: tomo, 2025\n"
"Language-Team: Japanese (https://app.transifex.com/python-doc/teams/5390/"
"ja/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ja\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../library/marshal.rst:2
msgid ":mod:`!marshal` --- Internal Python object serialization"
msgstr ":mod:`!marshal` --- 内部使用向けの Python オブジェクト直列化"

#: ../../library/marshal.rst:10
msgid ""
"This module contains functions that can read and write Python values in a "
"binary format.  The format is specific to Python, but independent of machine "
"architecture issues (e.g., you can write a Python value to a file on a PC, "
"transport the file to a Mac, and read it back there).  Details of the format "
"are undocumented on purpose; it may change between Python versions (although "
"it rarely does). [#]_"
msgstr ""

#: ../../library/marshal.rst:21
msgid ""
"This is not a general \"persistence\" module.  For general persistence and "
"transfer of Python objects through RPC calls, see the modules :mod:`pickle` "
"and :mod:`shelve`.  The :mod:`marshal` module exists mainly to support "
"reading and writing the \"pseudo-compiled\" code for Python modules of :file:"
"`.pyc` files. Therefore, the Python maintainers reserve the right to modify "
"the marshal format in backward incompatible ways should the need arise. The "
"format of code objects is not compatible between Python versions, even if "
"the version of the format is the same. De-serializing a code object in the "
"incorrect Python version has undefined behavior. If you're serializing and "
"de-serializing Python objects, use the :mod:`pickle` module instead -- the "
"performance is comparable, version independence is guaranteed, and pickle "
"supports a substantially wider range of objects than marshal."
msgstr ""

#: ../../library/marshal.rst:37
msgid ""
"The :mod:`marshal` module is not intended to be secure against erroneous or "
"maliciously constructed data.  Never unmarshal data received from an "
"untrusted or unauthenticated source."
msgstr ""
":mod:`marshal` モジュールは、誤ったデータや悪意を持って作成されたデータに対す"
"る安全性を考慮していません。信頼できない、もしくは認証されていない出所からの"
"データを非整列化してはなりません。"

#: ../../library/marshal.rst:41
msgid ""
"There are functions that read/write files as well as functions operating on "
"bytes-like objects."
msgstr ""
"bytes-like オブジェクトを操作する関数と同様に、ファイルの読み書きを行う関数が"
"提供されています。"

#: ../../library/marshal.rst:46
msgid ""
"Not all Python object types are supported; in general, only objects whose "
"value is independent from a particular invocation of Python can be written "
"and read by this module.  The following types are supported:"
msgstr ""

#: ../../library/marshal.rst:50
msgid ""
"Numeric types: :class:`int`, :class:`bool`, :class:`float`, :class:`complex`."
msgstr ""

#: ../../library/marshal.rst:51
msgid ""
"Strings (:class:`str`) and :class:`bytes`. :term:`Bytes-like objects <bytes-"
"like object>` like :class:`bytearray` are marshalled as :class:`!bytes`."
msgstr ""

#: ../../library/marshal.rst:54
msgid ""
"Containers: :class:`tuple`, :class:`list`, :class:`set`, :class:`frozenset`, "
"and (since :data:`version` 5), :class:`slice`. It should be understood that "
"these are supported only if the values contained therein are themselves "
"supported. Recursive containers are supported since :data:`version` 3."
msgstr ""

#: ../../library/marshal.rst:59
msgid ""
"The singletons :const:`None`, :const:`Ellipsis` and :exc:`StopIteration`."
msgstr ""

#: ../../library/marshal.rst:60
msgid ""
":class:`code` objects, if *allow_code* is true. See note above about version "
"dependence."
msgstr ""

#: ../../library/marshal.rst:65
msgid ""
"Added format version 3, which supports marshalling recursive lists, sets and "
"dictionaries."
msgstr ""

#: ../../library/marshal.rst:67
msgid ""
"Added format version 4, which supports efficient representations of short "
"strings."
msgstr ""

#: ../../library/marshal.rst:72
msgid "Added format version 5, which allows marshalling slices."
msgstr ""

#: ../../library/marshal.rst:75
msgid "The module defines these functions:"
msgstr "このモジュールでは、以下の関数が定義されています。"

#: ../../library/marshal.rst:80
msgid ""
"Write the value on the open file.  The value must be a supported type.  The "
"file must be a writeable :term:`binary file`."
msgstr ""
"開かれたファイルに値を書き込みます。値はサポートされている型でなくてはなりま"
"せん。file は書き込み可能な  :term:`バイナリファイル <binary file>` である必"
"要があります。"

#: ../../library/marshal.rst:83
msgid ""
"If the value has (or contains an object that has) an unsupported type, a :"
"exc:`ValueError` exception is raised --- but garbage data will also be "
"written to the file.  The object will not be properly read back by :func:"
"`load`. :ref:`Code objects <code-objects>` are only supported if "
"*allow_code* is true."
msgstr ""

#: ../../library/marshal.rst:88
msgid ""
"The *version* argument indicates the data format that ``dump`` should use "
"(see below)."
msgstr ""
"*version* 引数は ``dump`` が使用するデータフォーマットを指定します (下記を参"
"照してください)。"

#: ../../library/marshal.rst:91 ../../library/marshal.rst:131
msgid ""
"Raises an :ref:`auditing event <auditing>` ``marshal.dumps`` with arguments "
"``value``, ``version``."
msgstr ""
"引数 ``value``, ``version`` を指定して :ref:`監査イベント <auditing>` "
"``marshal.dumps`` を送出します。 "

#: ../../library/marshal.rst:93 ../../library/marshal.rst:117
#: ../../library/marshal.rst:133 ../../library/marshal.rst:151
msgid "Added the *allow_code* parameter."
msgstr ""

#: ../../library/marshal.rst:99
msgid ""
"Read one value from the open file and return it.  If no valid value is read "
"(e.g. because the data has a different Python version's incompatible marshal "
"format), raise :exc:`EOFError`, :exc:`ValueError` or :exc:`TypeError`. :ref:"
"`Code objects <code-objects>` are only supported if *allow_code* is true. "
"The file must be a readable :term:`binary file`."
msgstr ""

#: ../../library/marshal.rst:105
msgid ""
"Raises an :ref:`auditing event <auditing>` ``marshal.load`` with no "
"arguments."
msgstr ""
"引数無しで :ref:`監査イベント <auditing>` ``marshal.load`` を送出します。 "

#: ../../library/marshal.rst:109
msgid ""
"If an object containing an unsupported type was marshalled with :func:"
"`dump`, :func:`load` will substitute ``None`` for the unmarshallable type."
msgstr ""
"サポートされていない型を含むオブジェクトが :func:`dump` で整列化されている場"
"合、 :func:`load` は整列化不能な値を ``None`` で置き換えます。"

#: ../../library/marshal.rst:114
msgid ""
"This call used to raise a ``code.__new__`` audit event for each code object. "
"Now it raises a single ``marshal.load`` event for the entire load operation."
msgstr ""

#: ../../library/marshal.rst:123
msgid ""
"Return the bytes object that would be written to a file by ``dump(value, "
"file)``.  The value must be a supported type.  Raise a :exc:`ValueError` "
"exception if value has (or contains an object that has) an unsupported "
"type. :ref:`Code objects <code-objects>` are only supported if *allow_code* "
"is true."
msgstr ""

#: ../../library/marshal.rst:128
msgid ""
"The *version* argument indicates the data format that ``dumps`` should use "
"(see below)."
msgstr ""
"*version* 引数は ``dumps`` が使用するデータフォーマットを指定します (下記を参"
"照してください)。"

#: ../../library/marshal.rst:139
msgid ""
"Convert the :term:`bytes-like object` to a value.  If no valid value is "
"found, raise :exc:`EOFError`, :exc:`ValueError` or :exc:`TypeError`. :ref:"
"`Code objects <code-objects>` are only supported if *allow_code* is true. "
"Extra bytes in the input are ignored."
msgstr ""

#: ../../library/marshal.rst:144
msgid ""
"Raises an :ref:`auditing event <auditing>` ``marshal.loads`` with argument "
"``bytes``."
msgstr ""
"引数 ``bytes`` を指定して :ref:`監査イベント <auditing>` ``marshal.loads`` を"
"送出します。 "

#: ../../library/marshal.rst:148
msgid ""
"This call used to raise a ``code.__new__`` audit event for each code object. "
"Now it raises a single ``marshal.loads`` event for the entire load operation."
msgstr ""

#: ../../library/marshal.rst:155
msgid "In addition, the following constants are defined:"
msgstr "これに加えて、以下の定数が定義されています:"

#: ../../library/marshal.rst:159
msgid ""
"Indicates the format that the module uses. Version 0 is the historical first "
"version; subsequent versions add new features. Generally, a new version "
"becomes the default when it is introduced."
msgstr ""

#: ../../library/marshal.rst:165
msgid "Version"
msgstr "Version"

#: ../../library/marshal.rst:165
msgid "Available since"
msgstr ""

#: ../../library/marshal.rst:165
msgid "New features"
msgstr ""

#: ../../library/marshal.rst:167
msgid "1"
msgstr "1"

#: ../../library/marshal.rst:167
msgid "Python 2.4"
msgstr "Python 2.4"

#: ../../library/marshal.rst:167
msgid "Sharing interned strings"
msgstr ""

#: ../../library/marshal.rst:169
msgid "2"
msgstr "2"

#: ../../library/marshal.rst:169
msgid "Python 2.5"
msgstr "Python 2.5"

#: ../../library/marshal.rst:169
msgid "Binary representation of floats"
msgstr ""

#: ../../library/marshal.rst:171
msgid "3"
msgstr "3"

#: ../../library/marshal.rst:171 ../../library/marshal.rst:173
msgid "Python 3.4"
msgstr ""

#: ../../library/marshal.rst:171
msgid "Support for object instancing and recursion"
msgstr ""

#: ../../library/marshal.rst:173
msgid "4"
msgstr "4"

#: ../../library/marshal.rst:173
msgid "Efficient representation of short strings"
msgstr ""

#: ../../library/marshal.rst:175
msgid "5"
msgstr "5"

#: ../../library/marshal.rst:175
msgid "Python 3.14"
msgstr ""

#: ../../library/marshal.rst:175
msgid "Support for :class:`slice` objects"
msgstr ""

#: ../../library/marshal.rst:180
msgid "Footnotes"
msgstr "脚注"

#: ../../library/marshal.rst:181
msgid ""
"The name of this module stems from a bit of terminology used by the "
"designers of Modula-3 (amongst others), who use the term \"marshalling\" for "
"shipping of data around in a self-contained form. Strictly speaking, \"to "
"marshal\" means to convert some data from internal to external form (in an "
"RPC buffer for instance) and \"unmarshalling\" for the reverse process."
msgstr ""
"このモジュールの名前は (特に) Modula-3 の設計者の間で使われていた用語の一つに"
"由来しています。彼らはデータを自己充足的な形式で輸送する操作に \"整列化 "
"(marshalling)\" という用語を使いました。厳密に言えば、\"整列させる (to "
"marshal)\" とは、あるデータを (例えば RPC バッファのように) 内部表現形式から"
"外部表現形式に変換することを意味し、\"非整列化 (unmarshalling)\" とはその逆を"
"意味します。"

#: ../../library/marshal.rst:17
msgid "module"
msgstr "module"

#: ../../library/marshal.rst:17
msgid "pickle"
msgstr "pickle"

#: ../../library/marshal.rst:17
msgid "shelve"
msgstr "shelve"

#: ../../library/marshal.rst:44
msgid "object"
msgstr "object"

#: ../../library/marshal.rst:44
msgid "code"
msgstr "コード"

#: ../../library/marshal.rst:44
msgid "code object"
msgstr "コードオブジェクト"
