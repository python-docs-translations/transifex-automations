# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# Rafael Fontenelle <rffontenelle@gmail.com>, 2024
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.11\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-01-03 15:28+0000\n"
"PO-Revision-Date: 2023-05-24 02:18+0000\n"
"Last-Translator: Rafael Fontenelle <rffontenelle@gmail.com>, 2024\n"
"Language-Team: Japanese (https://app.transifex.com/python-doc/teams/5390/"
"ja/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ja\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../library/pathlib.rst:3
msgid ":mod:`pathlib` --- Object-oriented filesystem paths"
msgstr ":mod:`pathlib` --- オブジェクト指向のファイルシステムパス"

#: ../../library/pathlib.rst:10
msgid "**Source code:** :source:`Lib/pathlib.py`"
msgstr "**ソースコード:** :source:`Lib/pathlib.py`"

#: ../../library/pathlib.rst:16
msgid ""
"This module offers classes representing filesystem paths with semantics "
"appropriate for different operating systems.  Path classes are divided "
"between :ref:`pure paths <pure-paths>`, which provide purely computational "
"operations without I/O, and :ref:`concrete paths <concrete-paths>`, which "
"inherit from pure paths but also provide I/O operations."
msgstr ""
"このモジュールはファイルシステムのパスを表すクラスを提供していて、様々なオペ"
"レーティングシステムについての適切な意味論をそれらのクラスに持たせていま"
"す。\n"
"Path クラスは :ref:`純粋パス <pure-paths>` と :ref:`具象パス <concrete-"
"paths>` からなります。\n"
"純粋パスは I/O を伴わない純粋な計算操作を提供します。\n"
"具象パスは純粋パスを継承していますが、 I/O 操作も提供しています。"

#: ../../library/pathlib.rst:26
msgid ""
"If you've never used this module before or just aren't sure which class is "
"right for your task, :class:`Path` is most likely what you need. It "
"instantiates a :ref:`concrete path <concrete-paths>` for the platform the "
"code is running on."
msgstr ""
"あなたが今までこのモジュールを使用したことがない場合や、タスクに適しているの"
"がどのクラスかわからない場合は、 :class:`Path` はきっとあなたに必要なもので"
"しょう。\n"
":class:`Path` はコードが実行されているプラットフォーム用の :ref:`具象パス "
"<concrete-paths>` のインスタンスを作成します。"

#: ../../library/pathlib.rst:30
msgid "Pure paths are useful in some special cases; for example:"
msgstr "純粋パスは、以下のようないくつかの特殊なケースで有用です:"

#: ../../library/pathlib.rst:32
msgid ""
"If you want to manipulate Windows paths on a Unix machine (or vice versa). "
"You cannot instantiate a :class:`WindowsPath` when running on Unix, but you "
"can instantiate :class:`PureWindowsPath`."
msgstr ""
"Unix マシン上で Windows のパスを扱いたいとき (またはその逆)。Unix 上で実行し"
"ているときに :class:`WindowsPath` のインスタンスを作成することはできません"
"が、:class:`PureWindowsPath` なら可能になります。"

#: ../../library/pathlib.rst:35
msgid ""
"You want to make sure that your code only manipulates paths without actually "
"accessing the OS. In this case, instantiating one of the pure classes may be "
"useful since those simply don't have any OS-accessing operations."
msgstr ""
"実際に OS にアクセスすることなしにパスを操作するだけのコードを確認したいと"
"き。この場合、純粋クラスのインスタンスを一つ作成すれば、それが OS にアクセス"
"することはないので便利です。"

#: ../../library/pathlib.rst:40
msgid ":pep:`428`: The pathlib module -- object-oriented filesystem paths."
msgstr ""
":pep:`428`: The pathlib module -- オブジェクト指向のファイルシステムパス。"

#: ../../library/pathlib.rst:43
msgid ""
"For low-level path manipulation on strings, you can also use the :mod:`os."
"path` module."
msgstr "文字列による低水準のパス操作の場合は :mod:`os.path` も使用できます。"

#: ../../library/pathlib.rst:48
msgid "Basic use"
msgstr "基本的な使い方"

#: ../../library/pathlib.rst:50
msgid "Importing the main class::"
msgstr "メインクラスをインポートします::"

#: ../../library/pathlib.rst:54
msgid "Listing subdirectories::"
msgstr "サブディレクトリの一覧を取得します::"

#: ../../library/pathlib.rst:61
msgid "Listing Python source files in this directory tree::"
msgstr "このディレクトリツリー内の Python ソースファイルの一覧を取得します::"

#: ../../library/pathlib.rst:68
msgid "Navigating inside a directory tree::"
msgstr "ディレクトリツリー内を移動します::"

#: ../../library/pathlib.rst:77
msgid "Querying path properties::"
msgstr "パスのプロパティを問い合わせます::"

#: ../../library/pathlib.rst:84
msgid "Opening a file::"
msgstr "ファイルを開きます::"

#: ../../library/pathlib.rst:94
msgid "Pure paths"
msgstr "純粋パス"

#: ../../library/pathlib.rst:96
msgid ""
"Pure path objects provide path-handling operations which don't actually "
"access a filesystem.  There are three ways to access these classes, which we "
"also call *flavours*:"
msgstr ""
"純粋パスオブジェクトは実際にファイルシステムにアクセスしないパス操作処理を提"
"供します。これらのクラスにアクセスするには 3 つの方法があり、それらを *フレー"
"バー* と呼んでいます:"

#: ../../library/pathlib.rst:102
msgid ""
"A generic class that represents the system's path flavour (instantiating it "
"creates either a :class:`PurePosixPath` or a :class:`PureWindowsPath`)::"
msgstr ""
"システムのパスのフレーバーを表すジェネリッククラスです (インスタンスを作成す"
"ることで :class:`PurePosixPath` または :class:`PureWindowsPath` のどちらかが"
"作成されます)::"

#: ../../library/pathlib.rst:108
msgid ""
"Each element of *pathsegments* can be either a string representing a path "
"segment, an object implementing the :class:`os.PathLike` interface which "
"returns a string, or another path object::"
msgstr ""

#: ../../library/pathlib.rst:117
msgid "When *pathsegments* is empty, the current directory is assumed::"
msgstr "*pathsegments* が空のとき、現在のディレクトリとみなされます::"

#: ../../library/pathlib.rst:122
msgid ""
"If a segment is an absolute path, all previous segments are ignored (like :"
"func:`os.path.join`)::"
msgstr ""
"あるパス構成要素が絶対パスである場合、それより前の要素はすべて無視されます (:"
"func:`os.path.join` と同様)::"

#: ../../library/pathlib.rst:130
msgid ""
"On Windows, the drive is not reset when a rooted relative path segment (e."
"g., ``r'\\foo'``) is encountered::"
msgstr ""
"Windowsの場合、ルート相対パス (例えば ``r'\\foo'``) があってもドライブ名はそ"
"のまま変わりません::"

#: ../../library/pathlib.rst:136
msgid ""
"Spurious slashes and single dots are collapsed, but double dots (``'..'``) "
"and leading double slashes (``'//'``) are not, since this would change the "
"meaning of a path for various reasons (e.g. symbolic links, UNC paths)::"
msgstr ""
"単一スラッシュと等価な複数スラッシュやシングルドットは簡略化されますが、ダブ"
"ルドット (``'..'``) や先頭に位置するダブルスラッシュ (``'//'``) は簡略化され"
"ません。\n"
"これは、様々な理由でパスの意味が簡略化した場合と異なってしまうからです (例: "
"シンボリックリンク、UNCパス)::"

#: ../../library/pathlib.rst:149
msgid ""
"(a naïve approach would make ``PurePosixPath('foo/../bar')`` equivalent to "
"``PurePosixPath('bar')``, which is wrong if ``foo`` is a symbolic link to "
"another directory)"
msgstr ""
"(通常 ``PurePosixPath('foo/../bar')`` は ``PurePosixPath('bar')`` と等価にな"
"りますが、``foo`` が他のディレクトリへのシンボリックリンクの場合は等価になり"
"ません)"

#: ../../library/pathlib.rst:153
msgid ""
"Pure path objects implement the :class:`os.PathLike` interface, allowing "
"them to be used anywhere the interface is accepted."
msgstr ""
"純粋パスオブジェクトは :class:`os.PathLike` インターフェースを実装しており、"
"そのインターフェースを受理する箇所ならどこでも使用することができます。"

#: ../../library/pathlib.rst:156
msgid "Added support for the :class:`os.PathLike` interface."
msgstr ":class:`os.PathLike` インターフェースがサポートされました。"

#: ../../library/pathlib.rst:161
msgid ""
"A subclass of :class:`PurePath`, this path flavour represents non-Windows "
"filesystem paths::"
msgstr ""
":class:`PurePath` のサブクラスです。このパスフレーバーは非 Windows パスを表し"
"ます::"

#: ../../library/pathlib.rst:167 ../../library/pathlib.rst:179
#: ../../library/pathlib.rst:683 ../../library/pathlib.rst:693
#: ../../library/pathlib.rst:703
msgid "*pathsegments* is specified similarly to :class:`PurePath`."
msgstr "*pathsegments* の指定は :class:`PurePath` と同じです。"

#: ../../library/pathlib.rst:171
msgid ""
"A subclass of :class:`PurePath`, this path flavour represents Windows "
"filesystem paths, including `UNC paths`_::"
msgstr ""
":class:`PurePath` のサブクラスです。このパスフレーバー `UNC paths`_ を含む "
"Windows ファイルシステムパスを表します::"

#: ../../library/pathlib.rst:183
msgid ""
"Regardless of the system you're running on, you can instantiate all of these "
"classes, since they don't provide any operation that does system calls."
msgstr ""
"これらクラスはあらゆるシステムコールを行わないため、起動しているシステムにか"
"かわらずインスタンスを作成できます。"

#: ../../library/pathlib.rst:188
msgid "General properties"
msgstr "全般的な性質"

#: ../../library/pathlib.rst:190
msgid ""
"Paths are immutable and :term:`hashable`.  Paths of a same flavour are "
"comparable and orderable.  These properties respect the flavour's case-"
"folding semantics::"
msgstr ""
"パスオブジェクトはイミュータブルで :term:`ハッシュ可能 <hashable>` です。同じ"
"フレーバーのパスオブジェクトは比較ならびに順序付け可能です。これらのプロパ"
"ティは、フレーバーのケースフォールディング (訳注: 比較のために正規化するこ"
"と、例えば全て大文字にする) のセマンティクスに従います。"

#: ../../library/pathlib.rst:203
msgid "Paths of a different flavour compare unequal and cannot be ordered::"
msgstr ""
"異なるフレーバーのパスオブジェクト同士の比較は等価になることはなく、順序付け"
"もできません::"

#: ../../library/pathlib.rst:214
msgid "Operators"
msgstr "演算子"

#: ../../library/pathlib.rst:216
msgid ""
"The slash operator helps create child paths, like :func:`os.path.join`. If "
"the argument is an absolute path, the previous path is ignored. On Windows, "
"the drive is not reset when the argument is a rooted relative path (e.g., "
"``r'\\foo'``)::"
msgstr ""
"スラッシュ演算子を使って、 :func:`os.path.join` のように子パスを作成すること"
"ができます。\n"
"スラッシュの右側が絶対パスである場合、左側のパスは無視されます。\n"
"Windows環境で、右側のパスがルート相対パス (例: ``r'\\foo'``) である場合、ドラ"
"イブ名はリセットされません::"

#: ../../library/pathlib.rst:234
msgid ""
"A path object can be used anywhere an object implementing :class:`os."
"PathLike` is accepted::"
msgstr ""
":class:`os.PathLike` を実装したオブジェクトが受理できる箇所ならどこでも、パス"
"オブジェクトが使用できます::"

#: ../../library/pathlib.rst:242
msgid ""
"The string representation of a path is the raw filesystem path itself (in "
"native form, e.g. with backslashes under Windows), which you can pass to any "
"function taking a file path as a string::"
msgstr ""
"パスオブジェクトの文字列表現はそのシステム自身の Raw ファイルシステムパス (ネ"
"イティブの形式、例えば Windows では区切り文字がバックスラッシュ) になり、文字"
"列としてファイルパスを取るあらゆる関数に渡すことができます::"

#: ../../library/pathlib.rst:253
msgid ""
"Similarly, calling :class:`bytes` on a path gives the raw filesystem path as "
"a bytes object, as encoded by :func:`os.fsencode`::"
msgstr ""
"同様に、パスオブジェクトを :class:`bytes` で呼び出すと、Raw ファイルシステム"
"パスを :func:`os.fsencode` でエンコードされたバイト列オブジェクトで返します::"

#: ../../library/pathlib.rst:260
msgid ""
"Calling :class:`bytes` is only recommended under Unix.  Under Windows, the "
"unicode form is the canonical representation of filesystem paths."
msgstr ""
":class:`bytes` での呼び出しは Unix 上での使用のみ推奨します。Windows では "
"Unicode 形式が標準的なファイルシステムパス表現になります。"

#: ../../library/pathlib.rst:265
msgid "Accessing individual parts"
msgstr "個別の構成要素へのアクセス"

#: ../../library/pathlib.rst:267
msgid ""
"To access the individual \"parts\" (components) of a path, use the following "
"property:"
msgstr ""
"パスの個別の \"構成要素\" へアクセスするには、以下のプロパティを使用します:"

#: ../../library/pathlib.rst:272
msgid "A tuple giving access to the path's various components::"
msgstr "パスのさまざまな構成要素へのアクセス手段を提供するタプルになります::"

#: ../../library/pathlib.rst:282
msgid "(note how the drive and local root are regrouped in a single part)"
msgstr "(ドライブ名とローカルルートは単一要素にまとめられます)"

#: ../../library/pathlib.rst:286
msgid "Methods and properties"
msgstr "メソッドとプロパティ"

#: ../../library/pathlib.rst:292
msgid "Pure paths provide the following methods and properties:"
msgstr "純粋パスは以下のメソッドとプロパティを提供します:"

#: ../../library/pathlib.rst:296
msgid "A string representing the drive letter or name, if any::"
msgstr "ドライブ文字または名前を表す文字列があればそれになります::"

#: ../../library/pathlib.rst:305
msgid "UNC shares are also considered drives::"
msgstr "UNC 共有名もドライブとみなされます::"

#: ../../library/pathlib.rst:312
msgid "A string representing the (local or global) root, if any::"
msgstr "ローカルまたはグローバルルートを表す文字列があればそれになります::"

#: ../../library/pathlib.rst:321
msgid "UNC shares always have a root::"
msgstr "UNC 共有名は常にルートを持ちます::"

#: ../../library/pathlib.rst:326
msgid ""
"If the path starts with more than two successive slashes, :class:`~pathlib."
"PurePosixPath` collapses them::"
msgstr ""
":class:`~pathlib.PurePosixPath` でパスの先頭が３つ以上の連続したスラッシュで"
"ある場合、 余分なスラッシュは除去されます::"

#: ../../library/pathlib.rst:338
msgid ""
"This behavior conforms to *The Open Group Base Specifications Issue 6*, "
"paragraph `4.11 Pathname Resolution <https://pubs.opengroup.org/"
"onlinepubs/009695399/basedefs/xbd_chap04.html#tag_04_11>`_:"
msgstr ""
"この挙動は、以下に示す、 *The Open Group Base Specifications Issue 6* の "
"`4.11 Pathname Resolution <https://pubs.opengroup.org/onlinepubs/009695399/"
"basedefs/xbd_chap04.html#tag_04_11>`_ に沿ったものです:"

#: ../../library/pathlib.rst:342
msgid ""
"*\"A pathname that begins with two successive slashes may be interpreted in "
"an implementation-defined manner, although more than two leading slashes "
"shall be treated as a single slash.\"*"
msgstr ""

#: ../../library/pathlib.rst:348
msgid "The concatenation of the drive and root::"
msgstr "ドライブとルートを結合した文字列になります::"

#: ../../library/pathlib.rst:362
msgid ""
"An immutable sequence providing access to the logical ancestors of the path::"
msgstr ""
"パスの論理的な上位パスにアクセスできるイミュータブルなシーケンスになります::"

#: ../../library/pathlib.rst:373
msgid ""
"The parents sequence now supports :term:`slices <slice>` and negative index "
"values."
msgstr ""
"parents シーケンスが、:term:`スライス <slice>` と負のインデックスをサポートす"
"るようになりました。"

#: ../../library/pathlib.rst:378
msgid "The logical parent of the path::"
msgstr "パスの論理的な上位パスになります::"

#: ../../library/pathlib.rst:384
msgid "You cannot go past an anchor, or empty path::"
msgstr "アンカーの位置を超えることや空のパスになる位置には対応していません::"

#: ../../library/pathlib.rst:394
msgid "This is a purely lexical operation, hence the following behaviour::"
msgstr "これは純粋な字句操作であるため、以下のような挙動になります::"

#: ../../library/pathlib.rst:400
msgid ""
"If you want to walk an arbitrary filesystem path upwards, it is recommended "
"to first call :meth:`Path.resolve` so as to resolve symlinks and eliminate "
"``\"..\"`` components."
msgstr ""
"任意のファイルシステムパスを上位方向に移動したい場合、シンボリックリンクの解"
"決や ``\"..\"`` 要素の除去のため、最初に :meth:`Path.resolve` を呼ぶことを推"
"奨します。"

#: ../../library/pathlib.rst:407
msgid ""
"A string representing the final path component, excluding the drive and "
"root, if any::"
msgstr ""
"パス要素の末尾を表す文字列があればそれになります。ドライブやルートは含まれま"
"せん::"

#: ../../library/pathlib.rst:413
msgid "UNC drive names are not considered::"
msgstr "UNC ドライブ名は考慮されません::"

#: ../../library/pathlib.rst:423
msgid "The file extension of the final component, if any::"
msgstr "末尾の要素に拡張子があればそれになります::"

#: ../../library/pathlib.rst:435
msgid "A list of the path's file extensions::"
msgstr "パスのファイル拡張子のリストになります::"

#: ../../library/pathlib.rst:447
msgid "The final path component, without its suffix::"
msgstr "パス要素の末尾から拡張子を除いたものになります::"

#: ../../library/pathlib.rst:459
msgid ""
"Return a string representation of the path with forward slashes (``/``)::"
msgstr "フォワードスラッシュ (``/``) を使用したパスを表す文字列を返します::"

#: ../../library/pathlib.rst:470
msgid ""
"Represent the path as a ``file`` URI.  :exc:`ValueError` is raised if the "
"path isn't absolute."
msgstr ""
"``file`` URI で表したパスを返します。絶対パスではない場合に :exc:"
"`ValueError` を送出します。"

#: ../../library/pathlib.rst:483
msgid ""
"Return whether the path is absolute or not.  A path is considered absolute "
"if it has both a root and (if the flavour allows) a drive::"
msgstr ""
"パスが絶対パスかどうかを返します。パスが絶対パスとみなされるのは、ルートと "
"(フレーバーが許す場合) ドライブとの両方が含まれる場合です::"

#: ../../library/pathlib.rst:503
msgid "Return whether or not this path is relative to the *other* path."
msgstr ""
"このパスが *other* パスに対して相対なのかそうでないのかの結果を返します。"

#: ../../library/pathlib.rst:511 ../../library/pathlib.rst:601
msgid "If multiple arguments are supplied, they are joined together."
msgstr ""

#: ../../library/pathlib.rst:513
msgid ""
"This method is string-based; it neither accesses the filesystem nor treats "
"\"``..``\" segments specially. The following code is equivalent:"
msgstr ""

#: ../../library/pathlib.rst:525
msgid ""
"With :class:`PureWindowsPath`, return ``True`` if the path is considered "
"reserved under Windows, ``False`` otherwise.  With :class:`PurePosixPath`, "
"``False`` is always returned."
msgstr ""
":class:`PureWindowsPath` の場合はパスが Windows 上で予約されていれば "
"``True`` を返し、そうでなければ ``False`` を返します。:class:`PurePosixPath` "
"の場合は常に ``False`` を返します。"

#: ../../library/pathlib.rst:534
msgid ""
"File system calls on reserved paths can fail mysteriously or have unintended "
"effects."
msgstr ""
"ファイルシステムで予約されたパスを呼び出すと、原因不明で失敗したり、予期せぬ"
"結果になります。"

#: ../../library/pathlib.rst:540
msgid ""
"Calling this method is equivalent to combining the path with each of the "
"*other* arguments in turn::"
msgstr ""

#: ../../library/pathlib.rst:555
msgid ""
"Match this path against the provided glob-style pattern.  Return ``True`` if "
"matching is successful, ``False`` otherwise."
msgstr ""
"現在のパスが glob 形式で与えられたパターンと一致したら ``True`` を、一致しな"
"ければ ``False`` を返します。"

#: ../../library/pathlib.rst:558
msgid ""
"If *pattern* is relative, the path can be either relative or absolute, and "
"matching is done from the right::"
msgstr ""
"*pattern* が相対表記であればパスは相対および絶対パスを取ることができ、右から"
"一致を調べます::"

#: ../../library/pathlib.rst:568
msgid ""
"If *pattern* is absolute, the path must be absolute, and the whole path must "
"match::"
msgstr ""
"*pattern* が絶対表記であれば、パスは絶対パスでなければならず、パス全体が一致"
"しなければなりません::"

#: ../../library/pathlib.rst:576
msgid "As with other methods, case-sensitivity follows platform defaults::"
msgstr ""
"他のメソッドと同様に、大文字小文字の区別はプラットフォームの設定に従います::"

#: ../../library/pathlib.rst:586
msgid ""
"Compute a version of this path relative to the path represented by *other*.  "
"If it's impossible, ValueError is raised::"
msgstr ""

#: ../../library/pathlib.rst:603
msgid ""
"NOTE: This function is part of :class:`PurePath` and works with strings. It "
"does not check or access the underlying file structure."
msgstr ""

#: ../../library/pathlib.rst:608
msgid ""
"Return a new path with the :attr:`name` changed.  If the original path "
"doesn't have a name, ValueError is raised::"
msgstr ""
"現在のパスの :attr:`name` 部分を変更したパスを返します。オリジナルパスに :"
"attr:`name` 部分がない場合は ValueError が送出されます::"

#: ../../library/pathlib.rst:625
msgid ""
"Return a new path with the :attr:`stem` changed.  If the original path "
"doesn't have a name, ValueError is raised::"
msgstr ""
"現在のパスの :attr:`stem` 部分を変更したパスを返します。オリジナルパスに :"
"attr:`stem` 部分がない場合は ValueError が送出されます::"

#: ../../library/pathlib.rst:649
msgid ""
"Return a new path with the :attr:`suffix` changed.  If the original path "
"doesn't have a suffix, the new *suffix* is appended instead.  If the "
"*suffix* is an empty string, the original suffix is removed::"
msgstr ""
":attr:`suffix` を変更した新しいパスを返します。\n"
"元のパスに suffix が無かった場合、代わりに新しい *suffix* が追加されます。\n"
"*suffix* が空文字列だった場合、元の suffix は除去されます::"

#: ../../library/pathlib.rst:668
msgid "Concrete paths"
msgstr "具象パス"

#: ../../library/pathlib.rst:670
msgid ""
"Concrete paths are subclasses of the pure path classes.  In addition to "
"operations provided by the latter, they also provide methods to do system "
"calls on path objects.  There are three ways to instantiate concrete paths:"
msgstr ""
"具象パスは純粋パスクラスのサブクラスです。純粋パスが提供する操作に加え、パス"
"オブジェクト上でシステムコールを呼ぶメソッドも提供しています。具象パスのイン"
"スタンスを作成するには 3 つの方法があります:"

#: ../../library/pathlib.rst:676
msgid ""
"A subclass of :class:`PurePath`, this class represents concrete paths of the "
"system's path flavour (instantiating it creates either a :class:`PosixPath` "
"or a :class:`WindowsPath`)::"
msgstr ""
":class:`PurePath` のサブクラスであり、システムのパスフレーバーの具象パスを表"
"します (このインスタンスの作成で :class:`PosixPath` か :class:`WindowsPath` "
"のどちらかが作成されます)::"

#: ../../library/pathlib.rst:687
msgid ""
"A subclass of :class:`Path` and :class:`PurePosixPath`, this class "
"represents concrete non-Windows filesystem paths::"
msgstr ""
":class:`Path` および :class:`PurePosixPath` のサブクラスで、非 Windows ファイ"
"ルシステムの具象パスを表します::"

#: ../../library/pathlib.rst:697
msgid ""
"A subclass of :class:`Path` and :class:`PureWindowsPath`, this class "
"represents concrete Windows filesystem paths::"
msgstr ""
":class:`Path` および :class:`PureWindowsPath` のサブクラスで、Windows ファイ"
"ルシステムの具象パスを表します::"

#: ../../library/pathlib.rst:705
msgid ""
"You can only instantiate the class flavour that corresponds to your system "
"(allowing system calls on non-compatible path flavours could lead to bugs or "
"failures in your application)::"
msgstr ""
"インスタンスを作成できるのはシステムと一致するフレーバーのみです (互換性のな"
"いパスフレーバーでのシステムコールの許可はバグやアプリケーションの異常終了の"
"原因になります)::"

#: ../../library/pathlib.rst:725
msgid "Methods"
msgstr "メソッド"

#: ../../library/pathlib.rst:727
msgid ""
"Concrete paths provide the following methods in addition to pure paths "
"methods.  Many of these methods can raise an :exc:`OSError` if a system call "
"fails (for example because the path doesn't exist)."
msgstr ""
"具象パスは純粋パスに加え、以下のメソッドを提供します。これらメソッドの多くは"
"システムコールが失敗すると :exc:`OSError` を送出します。(例えばパスが存在しな"
"い場合)"

#: ../../library/pathlib.rst:733
msgid ""
":meth:`~Path.exists()`, :meth:`~Path.is_dir()`, :meth:`~Path.is_file()`, :"
"meth:`~Path.is_mount()`, :meth:`~Path.is_symlink()`, :meth:`~Path."
"is_block_device()`, :meth:`~Path.is_char_device()`, :meth:`~Path."
"is_fifo()`, :meth:`~Path.is_socket()` now return ``False`` instead of "
"raising an exception for paths that contain characters unrepresentable at "
"the OS level."
msgstr ""
":meth:`~Path.exists()`, :meth:`~Path.is_dir()`, :meth:`~Path.is_file()`, :"
"meth:`~Path.is_mount()`, :meth:`~Path.is_symlink()`, :meth:`~Path."
"is_block_device()`, :meth:`~Path.is_char_device()`, :meth:`~Path."
"is_fifo()`, :meth:`~Path.is_socket()` は、OSレベルで表現不能な文字を含むパス"
"に対して、例外を送出する代わりに ``False`` を返すようになりました。 "

#: ../../library/pathlib.rst:743
msgid ""
"Return a new path object representing the current directory (as returned by :"
"func:`os.getcwd`)::"
msgstr ""
"(:func:`os.getcwd` が返す) 現在のディレクトリを表す新しいパスオブジェクトを返"
"します::"

#: ../../library/pathlib.rst:752
msgid ""
"Return a new path object representing the user's home directory (as returned "
"by :func:`os.path.expanduser` with ``~`` construct). If the home directory "
"can't be resolved, :exc:`RuntimeError` is raised."
msgstr ""
"ユーザーのホームディレクトリ (:func:`os.path.expanduser` での ``~`` の返り"
"値) を表す新しいパスオブジェクトを返します。ホームディレクトリが解決できない"
"場合は、 :exc:`RuntimeError` を送出します。"

#: ../../library/pathlib.rst:766
msgid ""
"Return a :class:`os.stat_result` object containing information about this "
"path, like :func:`os.stat`. The result is looked up at each call to this "
"method."
msgstr ""
"(:func:`os.stat` と同様の) 現在のパスについて :class:`os.stat_result` オブ"
"ジェクトが含む情報を返します。値はそれぞれのメソッドを呼び出した時点のものに"
"なります。"

#: ../../library/pathlib.rst:769
msgid ""
"This method normally follows symlinks; to stat a symlink add the argument "
"``follow_symlinks=False``, or use :meth:`~Path.lstat`."
msgstr ""
"このメソッドは通常はシンボリックリンクをたどります。シンボリックリンクに対し"
"て stat したい場合は ``follow_symlinks=False`` とするか、 :meth:`~Path."
"lstat` を利用してください。"

#: ../../library/pathlib.rst:780 ../../library/pathlib.rst:800
msgid "The *follow_symlinks* parameter was added."
msgstr "*follow_symlinks* パラメータが追加されました。"

#: ../../library/pathlib.rst:785
msgid "Change the file mode and permissions, like :func:`os.chmod`."
msgstr ":func:`os.chmod` のようにファイルのモードとアクセス権限を変更します。"

#: ../../library/pathlib.rst:787
msgid ""
"This method normally follows symlinks. Some Unix flavours support changing "
"permissions on the symlink itself; on these platforms you may add the "
"argument ``follow_symlinks=False``, or use :meth:`~Path.lchmod`."
msgstr ""
"このメソッドは通常シンボリックリンクをたどります。一部のUnixではシンボリック"
"リンク自体のパーミッション変更をサポートしています。そのようなプラットフォー"
"ムでは引数に``follow_symlinks=False`` を追加するか、:meth:`~Path.lchmod` を使"
"用してください。"

#: ../../library/pathlib.rst:805
msgid "Whether the path points to an existing file or directory::"
msgstr ""

#: ../../library/pathlib.rst:817
msgid ""
"If the path points to a symlink, :meth:`exists` returns whether the symlink "
"*points to* an existing file or directory."
msgstr ""

#: ../../library/pathlib.rst:823
msgid ""
"Return a new path with expanded ``~`` and ``~user`` constructs, as returned "
"by :meth:`os.path.expanduser`. If a home directory can't be resolved, :exc:"
"`RuntimeError` is raised."
msgstr ""
"パス要素 ``~`` および ``~user`` を :meth:`os.path.expanduser` が返すように展"
"開した新しいパスオブジェクトを返します。ホームディレクトリが解決できない場合"
"は、 :exc:`RuntimeError` を送出します。"

#: ../../library/pathlib.rst:838
msgid ""
"Glob the given relative *pattern* in the directory represented by this path, "
"yielding all matching files (of any kind)::"
msgstr ""
"現在のパスが表すディレクトリ内で相対 *pattern* に一致する (あらゆる種類の) す"
"べてのファイルを yield します::"

#: ../../library/pathlib.rst:846
msgid ""
"Patterns are the same as for :mod:`fnmatch`, with the addition of \"``**``\" "
"which means \"this directory and all subdirectories, recursively\".  In "
"other words, it enables recursive globbing::"
msgstr ""
"パターンは :mod:`fnmatch` と同じで、追加の ``**`` は \"このディレクトリおよび"
"すべてのサブディレクトリを再帰的に走査\" を意味します。言い換えれば、再帰的"
"な Glob 走査が可能という意味です::"

#: ../../library/pathlib.rst:858
msgid ""
"Using the \"``**``\" pattern in large directory trees may consume an "
"inordinate amount of time."
msgstr ""
"パターン \"``**``\" を大きなディレクトリツリーで使用するととてつもなく時間が"
"かかるかもしれません。"

#: ../../library/pathlib.rst:861
msgid ""
"Raises an :ref:`auditing event <auditing>` ``pathlib.Path.glob`` with "
"arguments ``self``, ``pattern``."
msgstr ""
"引数 ``self``, ``pattern`` を指定して :ref:`監査イベント <auditing>` "
"``pathlib.Path.glob`` を送出します。 "

#: ../../library/pathlib.rst:863 ../../library/pathlib.rst:1158
msgid ""
"Return only directories if *pattern* ends with a pathname components "
"separator (:data:`~os.sep` or :data:`~os.altsep`)."
msgstr ""
"*pattern* がパスを分割する文字(:data:`~os.sep` または :data:`~os.altsep`)で終"
"わる場合はディレクトリのみを返します。"

#: ../../library/pathlib.rst:869
msgid ""
"Return the name of the group owning the file.  :exc:`KeyError` is raised if "
"the file's gid isn't found in the system database."
msgstr ""
"ファイルを所有するグループ名を返します。ファイルの GID がシステムのデータベー"
"スに見つからなかった場合は :exc:`KeyError` が送出されます。"

#: ../../library/pathlib.rst:875
msgid ""
"Return ``True`` if the path points to a directory (or a symbolic link "
"pointing to a directory), ``False`` if it points to another kind of file."
msgstr ""
"パスがディレクトリ (またはディレクトリへのシンボリックリンク) を指していた場"
"合 ``True`` を返し、その他の種類のファイルだった場合 ``False`` を返します。"

#: ../../library/pathlib.rst:878 ../../library/pathlib.rst:887
#: ../../library/pathlib.rst:916 ../../library/pathlib.rst:925
#: ../../library/pathlib.rst:934 ../../library/pathlib.rst:943
msgid ""
"``False`` is also returned if the path doesn't exist or is a broken symlink; "
"other errors (such as permission errors) are propagated."
msgstr ""
"パスが存在しないか壊れたシンボリックリンクだった場合にも ``False`` が返されま"
"す; (パーミッションエラーのような) その他のエラーは伝搬されます。"

#: ../../library/pathlib.rst:884
msgid ""
"Return ``True`` if the path points to a regular file (or a symbolic link "
"pointing to a regular file), ``False`` if it points to another kind of file."
msgstr ""
"パスが一般ファイル (または一般ファイルへのシンボリックリンク) を指していた場"
"合 ``True`` を返します。その他の種類のファイルを指していた場合 ``False`` を返"
"します。"

#: ../../library/pathlib.rst:893
msgid ""
"Return ``True`` if the path is a :dfn:`mount point`: a point in a file "
"system where a different file system has been mounted.  On POSIX, the "
"function checks whether *path*'s parent, :file:`path/..`, is on a different "
"device than *path*, or whether :file:`path/..` and *path* point to the same "
"i-node on the same device --- this should detect mount points for all Unix "
"and POSIX variants.  Not implemented on Windows."
msgstr ""

#: ../../library/pathlib.rst:905
msgid ""
"Return ``True`` if the path points to a symbolic link, ``False`` otherwise."
msgstr ""
"パスがシンボリックリンクを指していた場合 ``True`` を返し、その他の場合は "
"``False`` を返します。"

#: ../../library/pathlib.rst:907
msgid ""
"``False`` is also returned if the path doesn't exist; other errors (such as "
"permission errors) are propagated."
msgstr ""
"パスが存在しない場合も ``False`` を返します; (パーミッションエラーのような) "
"その他のエラーは伝搬されます。"

#: ../../library/pathlib.rst:913
msgid ""
"Return ``True`` if the path points to a Unix socket (or a symbolic link "
"pointing to a Unix socket), ``False`` if it points to another kind of file."
msgstr ""
"パスが Unix ソケット (または Unix ソケットへのシンボリックリンク) を指してい"
"た場合 ``True`` を返します。その他の種類のファイルの場合 ``False`` を返しま"
"す。"

#: ../../library/pathlib.rst:922
msgid ""
"Return ``True`` if the path points to a FIFO (or a symbolic link pointing to "
"a FIFO), ``False`` if it points to another kind of file."
msgstr ""
"パスが FIFO (または FIFO へのシンボリックリンク) を指していた場合 ``True`` を"
"返します。その他の種類のファイルの場合は ``False`` を返します。"

#: ../../library/pathlib.rst:931
msgid ""
"Return ``True`` if the path points to a block device (or a symbolic link "
"pointing to a block device), ``False`` if it points to another kind of file."
msgstr ""
"パスがブロックデバイス (またはブロックデバイスへのシンボリックリンク) を指し"
"ていた場合 ``True`` を返します。その他の種類のファイルの場合は ``False`` を返"
"します。"

#: ../../library/pathlib.rst:940
msgid ""
"Return ``True`` if the path points to a character device (or a symbolic link "
"pointing to a character device), ``False`` if it points to another kind of "
"file."
msgstr ""
"パスがキャラクターデバイス (またはキャラクターデバイスへのシンボリックリン"
"ク) を指していた場合、``True`` を返します。その他の種類のファイルの場合 "
"``False`` を返します。"

#: ../../library/pathlib.rst:949
msgid ""
"When the path points to a directory, yield path objects of the directory "
"contents::"
msgstr ""
"パスがディレクトリを指していた場合、ディレクトリの内容のパスオブジェクトを "
"yield します::"

#: ../../library/pathlib.rst:963
msgid ""
"The children are yielded in arbitrary order, and the special entries ``'.'`` "
"and ``'..'`` are not included.  If a file is removed from or added to the "
"directory after creating the iterator, whether a path object for that file "
"be included is unspecified."
msgstr ""
"子の要素は任意の順番で yield されます。特殊なパスの ``'.'`` と ``'..'`` は含"
"まれません。イテレーターを生成したあとにディレクトリにファイルを削除または追"
"加した場合に、そのファイルのパスオブジェクトが含まれるかは定義されていませ"
"ん。"

#: ../../library/pathlib.rst:970
msgid ""
"Like :meth:`Path.chmod` but, if the path points to a symbolic link, the "
"symbolic link's mode is changed rather than its target's."
msgstr ""
":meth:`Path.chmod` のように振る舞いますが、パスがシンボリックリンクを指してい"
"た場合、リンク先ではなくシンボリックリンク自身のモードが変更されます。"

#: ../../library/pathlib.rst:976
msgid ""
"Like :meth:`Path.stat` but, if the path points to a symbolic link, return "
"the symbolic link's information rather than its target's."
msgstr ""
":meth:`Path.stat` のように振る舞いますが、パスがシンボリックリンクを指してい"
"た場合、リンク先ではなくシンボリックリンク自身の情報を返します。"

#: ../../library/pathlib.rst:982
msgid ""
"Create a new directory at this given path.  If *mode* is given, it is "
"combined with the process' ``umask`` value to determine the file mode and "
"access flags.  If the path already exists, :exc:`FileExistsError` is raised."
msgstr ""
"与えられたパスに新しくディレクトリを作成します。*mode* が与えられていた場合、"
"プロセスの ``umask`` 値と組み合わせてファイルのモードとアクセスフラグを決定し"
"ます。パスがすでに存在していた場合 :exc:`FileExistsError` が送出されます。"

#: ../../library/pathlib.rst:987
msgid ""
"If *parents* is true, any missing parents of this path are created as "
"needed; they are created with the default permissions without taking *mode* "
"into account (mimicking the POSIX ``mkdir -p`` command)."
msgstr ""
"*parents* の値が真の場合、このパスの親ディレクトリを必要に応じて作成します; "
"それらのアクセス制限はデフォルト値が取られ、*mode* は使用されません (POSIX "
"の ``mkdir -p`` コマンドを真似ています)。"

#: ../../library/pathlib.rst:991
msgid ""
"If *parents* is false (the default), a missing parent raises :exc:"
"`FileNotFoundError`."
msgstr ""
"*parents* の値が偽の場合 (デフォルト)、親ディレクトリがないと :exc:"
"`FileNotFoundError` を送出します。"

#: ../../library/pathlib.rst:994
msgid ""
"If *exist_ok* is false (the default), :exc:`FileExistsError` is raised if "
"the target directory already exists."
msgstr ""
"*exist_ok* の値が (デフォルトの) 偽の場合、対象のディレクトリがすでに存在する"
"と :exc:`FileExistsError` を送出します。"

#: ../../library/pathlib.rst:997
msgid ""
"If *exist_ok* is true, :exc:`FileExistsError` will not be raised unless the "
"given path already exists in the file system and is not a directory (same "
"behavior as the POSIX ``mkdir -p`` command)."
msgstr ""

#: ../../library/pathlib.rst:1001
msgid "The *exist_ok* parameter was added."
msgstr "*exist_ok* 引数が追加されました。"

#: ../../library/pathlib.rst:1007
msgid ""
"Open the file pointed to by the path, like the built-in :func:`open` "
"function does::"
msgstr "組み込み関数 :func:`open` のようにパスが指しているファイルを開きます::"

#: ../../library/pathlib.rst:1019
msgid ""
"Return the name of the user owning the file.  :exc:`KeyError` is raised if "
"the file's uid isn't found in the system database."
msgstr ""
"ファイルの所有者のユーザー名を返します。ファイルの UID がシステムのデータベー"
"スに見つからない場合 :exc:`KeyError` が送出されます。"

#: ../../library/pathlib.rst:1025
msgid "Return the binary contents of the pointed-to file as a bytes object::"
msgstr "指定されたファイルの内容をバイナリオブジェクトで返します::"

#: ../../library/pathlib.rst:1038
msgid "Return the decoded contents of the pointed-to file as a string::"
msgstr "指定されたファイルの内容を文字列としてデコードして返します::"

#: ../../library/pathlib.rst:1046
msgid ""
"The file is opened and then closed. The optional parameters have the same "
"meaning as in :func:`open`."
msgstr ""
"ファイルを開いた後に閉じます。\n"
"オプションのパラメーターの意味は :func:`open` と同じです。"

#: ../../library/pathlib.rst:1054
msgid ""
"Return the path to which the symbolic link points (as returned by :func:`os."
"readlink`)::"
msgstr "( :func:`os.readlink` が返す) シンボリックリンクが指すパスを返します::"

#: ../../library/pathlib.rst:1067
msgid ""
"Rename this file or directory to the given *target*, and return a new Path "
"instance pointing to *target*.  On Unix, if *target* exists and is a file, "
"it will be replaced silently if the user has permission. On Windows, if "
"*target* exists, :exc:`FileExistsError` will be raised. *target* can be "
"either a string or another path object::"
msgstr ""
"このファイルかディレクトリを与えられた *target* にリネームし、 *target* を指"
"すパスのインスタンスを返します。\n"
"Unix では *target* が存在するファイルの場合、ユーザにパーミッションがあれば静"
"かに置換されます。\n"
"Windows では *target* が存在する場合、:exc:`FileExistsError` が送出されま"
"す。\n"
"*target* は文字列か別のパスオブジェクトです::"

#: ../../library/pathlib.rst:1082 ../../library/pathlib.rst:1098
msgid ""
"The target path may be absolute or relative. Relative paths are interpreted "
"relative to the current working directory, *not* the directory of the Path "
"object."
msgstr ""
"targetパスは絶対または相対で指定できます。相対パスは現在の作業ディレクトリか"
"らの相対パスとして解釈し、Pathオブジェクトのディレクトリ *ではありません*。"

#: ../../library/pathlib.rst:1086
msgid ""
"It is implemented in terms of :func:`os.rename` and gives the same "
"guarantees."
msgstr ""

#: ../../library/pathlib.rst:1088 ../../library/pathlib.rst:1102
msgid "Added return value, return the new Path instance."
msgstr "戻り値を追加し、新しい Path インスタンスを返します。"

#: ../../library/pathlib.rst:1094
msgid ""
"Rename this file or directory to the given *target*, and return a new Path "
"instance pointing to *target*.  If *target* points to an existing file or "
"empty directory, it will be unconditionally replaced."
msgstr ""
"現在のファイルまたはディレクトリの名前を *target* に変更し、 *target* を指す"
"パスのインスタンスを返します。*target* が既存のファイルか空のディレクトリを指"
"していた場合、無条件に置き換えられます。"

#: ../../library/pathlib.rst:1108
msgid ""
"Make the path absolute, without normalization or resolving symlinks. Returns "
"a new path object::"
msgstr ""
"正規化やシンボリックリンクの解決をせずに、パスを絶対パスにします。新しいパス"
"オブジェクトを返します::"

#: ../../library/pathlib.rst:1120
msgid ""
"Make the path absolute, resolving any symlinks.  A new path object is "
"returned::"
msgstr ""
"パスを絶対パスにし、あらゆるシンボリックリンクを解決します。新しいパスオブ"
"ジェクトが返されます::"

#: ../../library/pathlib.rst:1129
msgid ""
"\"``..``\" components are also eliminated (this is the only method to do "
"so)::"
msgstr ""
"\"``..``\" 要素は除去されます (このような挙動を示すのはこのメソッドだけで"
"す)::"

#: ../../library/pathlib.rst:1135
msgid ""
"If the path doesn't exist and *strict* is ``True``, :exc:`FileNotFoundError` "
"is raised.  If *strict* is ``False``, the path is resolved as far as "
"possible and any remainder is appended without checking whether it exists.  "
"If an infinite loop is encountered along the resolution path, :exc:"
"`RuntimeError` is raised."
msgstr ""
"パスが存在せず *strict* が ``True`` の場合、 :exc:`FileNotFoundError` が送出"
"されます。\n"
"*strict* が ``False`` の場合は、パスは可能な限り解決され、残りの部分は存在す"
"るかのチェックをせずに追加されます。\n"
"もしパスの解決にあたって無限ループする場合は、:exc:`RuntimeError` が送出され"
"ます。"

#: ../../library/pathlib.rst:1141
msgid "The *strict* argument (pre-3.6 behavior is strict)."
msgstr "*strict* 引数 (3.6以前の挙動は strict です。)"

#: ../../library/pathlib.rst:1146
msgid ""
"This is like calling :func:`Path.glob` with \"``**/``\" added in front of "
"the given relative *pattern*::"
msgstr ""

#: ../../library/pathlib.rst:1156
msgid ""
"Raises an :ref:`auditing event <auditing>` ``pathlib.Path.rglob`` with "
"arguments ``self``, ``pattern``."
msgstr ""
"引数 ``self``, ``pattern`` を指定して :ref:`監査イベント <auditing>` "
"``pathlib.Path.rglob`` を送出します。 "

#: ../../library/pathlib.rst:1164
msgid "Remove this directory.  The directory must be empty."
msgstr "現在のディレクトリを削除します。ディレクトリは空でなければなりません。"

#: ../../library/pathlib.rst:1169
msgid ""
"Return whether this path points to the same file as *other_path*, which can "
"be either a Path object, or a string.  The semantics are similar to :func:"
"`os.path.samefile` and :func:`os.path.samestat`."
msgstr ""
"このパスが参照するファイルが *other_path* (Path オブジェクトか文字列) と同じ"
"であれば ``True`` を、異なるファイルであれば ``False`` を返します。意味的に"
"は :func:`os.path.samefile` および :func:`os.path.samestat` と同じです。"

#: ../../library/pathlib.rst:1173
msgid ""
"An :exc:`OSError` can be raised if either file cannot be accessed for some "
"reason."
msgstr ""
"なんらかの理由でどちらかのファイルにアクセスできない場合は :exc:`OSError` が"
"送出されます。"

#: ../../library/pathlib.rst:1190
msgid "Make this path a symbolic link pointing to *target*."
msgstr ""

#: ../../library/pathlib.rst:1192
msgid ""
"On Windows, a symlink represents either a file or a directory, and does not "
"morph to the target dynamically.  If the target is present, the type of the "
"symlink will be created to match. Otherwise, the symlink will be created as "
"a directory if *target_is_directory* is ``True`` or a file symlink (the "
"default) otherwise.  On non-Windows platforms, *target_is_directory* is "
"ignored."
msgstr ""
"Windows では、シンボリックリンクはファイルかディレクトリのどちらかを表します"
"が、ターゲットに合わせて動的に変化することはありません。ターゲットが存在する"
"場合、シンボリックリンクの種類は対象に合わせて作成されます。ターゲットが存在"
"せず *target_is_directory* に ``True`` が設定された場合、シンボリックリンクは"
"ディレクトリのリンクとして作成され、``False`` に設定された場合 (デフォルト) "
"はファイルのリンクになります。Windows 以外のプラットフォームでは "
"*target_is_directory* は無視されます。"

#: ../../library/pathlib.rst:1210
msgid ""
"The order of arguments (link, target) is the reverse of :func:`os.symlink`'s."
msgstr "引数の並び (link, target) は :func:`os.symlink` とは逆です。"

#: ../../library/pathlib.rst:1215
msgid "Make this path a hard link to the same file as *target*."
msgstr "このパスを *target* と同じファイルへのハードリンクにします。"

#: ../../library/pathlib.rst:1218
msgid ""
"The order of arguments (link, target) is the reverse of :func:`os.link`'s."
msgstr "引数の並び (link, target) は :func:`os.link` とは逆です。"

#: ../../library/pathlib.rst:1225
msgid "Make *target* a hard link to this path."
msgstr ""

#: ../../library/pathlib.rst:1229
msgid ""
"This function does not make this path a hard link to *target*, despite the "
"implication of the function and argument names. The argument order (target, "
"link) is the reverse of :func:`Path.symlink_to` and :func:`Path."
"hardlink_to`, but matches that of :func:`os.link`."
msgstr ""

#: ../../library/pathlib.rst:1238
msgid ""
"This method is deprecated in favor of :meth:`Path.hardlink_to`, as the "
"argument order of :meth:`Path.link_to`  does not match that of :meth:`Path."
"symlink_to`."
msgstr ""

#: ../../library/pathlib.rst:1245
msgid ""
"Create a file at this given path.  If *mode* is given, it is combined with "
"the process' ``umask`` value to determine the file mode and access flags.  "
"If the file already exists, the function succeeds if *exist_ok* is true (and "
"its modification time is updated to the current time), otherwise :exc:"
"`FileExistsError` is raised."
msgstr ""
"与えられたパスにファイルを作成します。*mode* が与えられた場合、プロセスの "
"``umask`` 値と組み合わせてファイルのモードとアクセスフラグが決定されます。"
"ファイルがすでに存在した場合、*exist_ok* が真ならばこの関数は正常に終了しま"
"す (そしてファイルの更新日付が現在の日時に変更されます)。その他の場合は :exc:"
"`FileExistsError` が送出されます。"

#: ../../library/pathlib.rst:1254
msgid ""
"Remove this file or symbolic link.  If the path points to a directory, use :"
"func:`Path.rmdir` instead."
msgstr ""
"このファイルまたはシンボリックリンクを削除します。パスがディレクトリを指して"
"いる場合は :func:`Path.rmdir` を使用してください。"

#: ../../library/pathlib.rst:1257
msgid ""
"If *missing_ok* is false (the default), :exc:`FileNotFoundError` is raised "
"if the path does not exist."
msgstr ""
"*missing_ok* の値が (デフォルトの) 偽の場合、対象のファイルが存在しないと :"
"exc:`FileNotFoundError` を送出します。"

#: ../../library/pathlib.rst:1260
msgid ""
"If *missing_ok* is true, :exc:`FileNotFoundError` exceptions will be ignored "
"(same behavior as the POSIX ``rm -f`` command)."
msgstr ""
"*missing_ok* の値が真の場合、 :exc:`FileExistsError` 例外を送出しません "
"(POSIX の ``rm -f`` コマンドの挙動と同じ)。"

#: ../../library/pathlib.rst:1263
msgid "The *missing_ok* parameter was added."
msgstr "*missing_ok* 引数が追加されました。"

#: ../../library/pathlib.rst:1269
msgid ""
"Open the file pointed to in bytes mode, write *data* to it, and close the "
"file::"
msgstr ""
"指定されたファイルをバイトモードで開き、*data* を書き込み、ファイルを閉じま"
"す::"

#: ../../library/pathlib.rst:1278
msgid "An existing file of the same name is overwritten."
msgstr "同じ名前のファイルがすでにあれば上書きされます。"

#: ../../library/pathlib.rst:1285
msgid ""
"Open the file pointed to in text mode, write *data* to it, and close the "
"file::"
msgstr ""
"指定されたファイルをテキストモードで開き、*data* を書き込み、ファイルを閉じま"
"す::"

#: ../../library/pathlib.rst:1294
msgid ""
"An existing file of the same name is overwritten. The optional parameters "
"have the same meaning as in :func:`open`."
msgstr ""
"同じ名前のファイルが存在する場合は上書きされます。オプションのパラメーターの"
"意味は :func:`open` と同じです。"

#: ../../library/pathlib.rst:1299
msgid "The *newline* parameter was added."
msgstr "*newline* パラメータが追加されました。"

#: ../../library/pathlib.rst:1303
msgid "Correspondence to tools in the :mod:`os` module"
msgstr ":mod:`os` モジュールにあるツールとの対応付け"

#: ../../library/pathlib.rst:1305
msgid ""
"Below is a table mapping various :mod:`os` functions to their corresponding :"
"class:`PurePath`/:class:`Path` equivalent."
msgstr ""
"下にあるのは、様々な :mod:`os` 関数とそれに相当する :class:`PurePath` あるい"
"は :class:`Path` の同等のものとの対応表です。"

#: ../../library/pathlib.rst:1310
msgid ""
"Not all pairs of functions/methods below are equivalent. Some of them, "
"despite having some overlapping use-cases, have different semantics. They "
"include :func:`os.path.abspath` and :meth:`Path.absolute`, :func:`os.path."
"relpath` and :meth:`PurePath.relative_to`."
msgstr ""
"以下の関数とメソッドのペアは、全てが等価ではありません。いくつかのユースケー"
"スが共通しているが、異なる意味を持つものもあります。:func:`os.path.abspath` "
"と :meth:`Path.absolute`、:func:`os.path.relpath` と :meth:`PurePath."
"relative_to` などを含みます。"

#: ../../library/pathlib.rst:1316
msgid ":mod:`os` and :mod:`os.path`"
msgstr ":mod:`os` と :mod:`os.path`"

#: ../../library/pathlib.rst:1316
msgid ":mod:`pathlib`"
msgstr ":mod:`pathlib`"

#: ../../library/pathlib.rst:1318
msgid ":func:`os.path.abspath`"
msgstr ":func:`os.path.abspath`"

#: ../../library/pathlib.rst:1318
msgid ":meth:`Path.absolute` [#]_"
msgstr ":meth:`Path.absolute` [#]_"

#: ../../library/pathlib.rst:1319
msgid ":func:`os.path.realpath`"
msgstr ":func:`os.path.realpath`"

#: ../../library/pathlib.rst:1319
msgid ":meth:`Path.resolve`"
msgstr ":meth:`Path.resolve`"

#: ../../library/pathlib.rst:1320
msgid ":func:`os.chmod`"
msgstr ":func:`os.chmod`"

#: ../../library/pathlib.rst:1320
msgid ":meth:`Path.chmod`"
msgstr ":meth:`Path.chmod`"

#: ../../library/pathlib.rst:1321
msgid ":func:`os.mkdir`"
msgstr ":func:`os.mkdir`"

#: ../../library/pathlib.rst:1321 ../../library/pathlib.rst:1322
msgid ":meth:`Path.mkdir`"
msgstr ":meth:`Path.mkdir`"

#: ../../library/pathlib.rst:1322
msgid ":func:`os.makedirs`"
msgstr ":func:`os.makedirs`"

#: ../../library/pathlib.rst:1323
msgid ":func:`os.rename`"
msgstr ":func:`os.rename`"

#: ../../library/pathlib.rst:1323
msgid ":meth:`Path.rename`"
msgstr ":meth:`Path.rename`"

#: ../../library/pathlib.rst:1324
msgid ":func:`os.replace`"
msgstr ":func:`os.replace`"

#: ../../library/pathlib.rst:1324
msgid ":meth:`Path.replace`"
msgstr ":meth:`Path.replace`"

#: ../../library/pathlib.rst:1325
msgid ":func:`os.rmdir`"
msgstr ":func:`os.rmdir`"

#: ../../library/pathlib.rst:1325
msgid ":meth:`Path.rmdir`"
msgstr ":meth:`Path.rmdir`"

#: ../../library/pathlib.rst:1326
msgid ":func:`os.remove`, :func:`os.unlink`"
msgstr ":func:`os.remove`, :func:`os.unlink`"

#: ../../library/pathlib.rst:1326
msgid ":meth:`Path.unlink`"
msgstr ":meth:`Path.unlink`"

#: ../../library/pathlib.rst:1327
msgid ":func:`os.getcwd`"
msgstr ":func:`os.getcwd`"

#: ../../library/pathlib.rst:1327
msgid ":func:`Path.cwd`"
msgstr ":func:`Path.cwd`"

#: ../../library/pathlib.rst:1328
msgid ":func:`os.path.exists`"
msgstr ":func:`os.path.exists`"

#: ../../library/pathlib.rst:1328
msgid ":meth:`Path.exists`"
msgstr ":meth:`Path.exists`"

#: ../../library/pathlib.rst:1329
msgid ":func:`os.path.expanduser`"
msgstr ":func:`os.path.expanduser`"

#: ../../library/pathlib.rst:1329
msgid ":meth:`Path.expanduser` and :meth:`Path.home`"
msgstr ":meth:`Path.expanduser` および :meth:`Path.home`"

#: ../../library/pathlib.rst:1331
msgid ":func:`os.listdir`"
msgstr ":func:`os.listdir`"

#: ../../library/pathlib.rst:1331
msgid ":meth:`Path.iterdir`"
msgstr ":meth:`Path.iterdir`"

#: ../../library/pathlib.rst:1332
msgid ":func:`os.path.isdir`"
msgstr ":func:`os.path.isdir`"

#: ../../library/pathlib.rst:1332
msgid ":meth:`Path.is_dir`"
msgstr ":meth:`Path.is_dir`"

#: ../../library/pathlib.rst:1333
msgid ":func:`os.path.isfile`"
msgstr ":func:`os.path.isfile`"

#: ../../library/pathlib.rst:1333
msgid ":meth:`Path.is_file`"
msgstr ":meth:`Path.is_file`"

#: ../../library/pathlib.rst:1334
msgid ":func:`os.path.islink`"
msgstr ":func:`os.path.islink`"

#: ../../library/pathlib.rst:1334
msgid ":meth:`Path.is_symlink`"
msgstr ":meth:`Path.is_symlink`"

#: ../../library/pathlib.rst:1335
msgid ":func:`os.link`"
msgstr ":func:`os.link`"

#: ../../library/pathlib.rst:1335
msgid ":meth:`Path.hardlink_to`"
msgstr ":meth:`Path.hardlink_to`"

#: ../../library/pathlib.rst:1336
msgid ":func:`os.symlink`"
msgstr ":func:`os.symlink`"

#: ../../library/pathlib.rst:1336
msgid ":meth:`Path.symlink_to`"
msgstr ":meth:`Path.symlink_to`"

#: ../../library/pathlib.rst:1337
msgid ":func:`os.readlink`"
msgstr ":func:`os.readlink`"

#: ../../library/pathlib.rst:1337
msgid ":meth:`Path.readlink`"
msgstr ":meth:`Path.readlink`"

#: ../../library/pathlib.rst:1338
msgid ":func:`os.path.relpath`"
msgstr ":func:`os.path.relpath`"

#: ../../library/pathlib.rst:1338
msgid ":meth:`PurePath.relative_to` [#]_"
msgstr ":meth:`PurePath.relative_to` [#]_"

#: ../../library/pathlib.rst:1339
msgid ":func:`os.stat`"
msgstr ":func:`os.stat`"

#: ../../library/pathlib.rst:1339
msgid ":meth:`Path.stat`, :meth:`Path.owner`, :meth:`Path.group`"
msgstr ":meth:`Path.stat`, :meth:`Path.owner`, :meth:`Path.group`"

#: ../../library/pathlib.rst:1342
msgid ":func:`os.path.isabs`"
msgstr ":func:`os.path.isabs`"

#: ../../library/pathlib.rst:1342
msgid ":meth:`PurePath.is_absolute`"
msgstr ":meth:`PurePath.is_absolute`"

#: ../../library/pathlib.rst:1343
msgid ":func:`os.path.join`"
msgstr ":func:`os.path.join`"

#: ../../library/pathlib.rst:1343
msgid ":func:`PurePath.joinpath`"
msgstr ":func:`PurePath.joinpath`"

#: ../../library/pathlib.rst:1344
msgid ":func:`os.path.basename`"
msgstr ":func:`os.path.basename`"

#: ../../library/pathlib.rst:1344
msgid ":attr:`PurePath.name`"
msgstr ":attr:`PurePath.name`"

#: ../../library/pathlib.rst:1345
msgid ":func:`os.path.dirname`"
msgstr ":func:`os.path.dirname`"

#: ../../library/pathlib.rst:1345
msgid ":attr:`PurePath.parent`"
msgstr ":attr:`PurePath.parent`"

#: ../../library/pathlib.rst:1346
msgid ":func:`os.path.samefile`"
msgstr ":func:`os.path.samefile`"

#: ../../library/pathlib.rst:1346
msgid ":meth:`Path.samefile`"
msgstr ":meth:`Path.samefile`"

#: ../../library/pathlib.rst:1347
msgid ":func:`os.path.splitext`"
msgstr ":func:`os.path.splitext`"

#: ../../library/pathlib.rst:1347
msgid ":attr:`PurePath.stem` and :attr:`PurePath.suffix`"
msgstr ":attr:`PurePath.stem` および :attr:`PurePath.suffix`"

#: ../../library/pathlib.rst:1352
msgid "Footnotes"
msgstr "脚注"

#: ../../library/pathlib.rst:1353
msgid ""
":func:`os.path.abspath` normalizes the resulting path, which may change its "
"meaning in the presence of symlinks, while :meth:`Path.absolute` does not."
msgstr ""
":func:`os.path.abspath` は結果のパスを正規化し、シンボリックリンクが存在する"
"と意味が変わる場合がありますが、:meth:`Path.absolute` では正規化は行われませ"
"ん。"

#: ../../library/pathlib.rst:1354
msgid ""
":meth:`PurePath.relative_to` requires ``self`` to be the subpath of the "
"argument, but :func:`os.path.relpath` does not."
msgstr ""
":meth:`PurePath.relative_to` は ``self`` が引数のサブパスであることを要求しま"
"すが、:func:`os.path.relpath` はそうではありません。"

#: ../../library/pathlib.rst:12
msgid "path"
msgstr "パス"

#: ../../library/pathlib.rst:12
msgid "operations"
msgstr "操作"
