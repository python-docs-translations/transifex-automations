# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# Rafael Fontenelle <rffontenelle@gmail.com>, 2023
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.11\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-01-21 22:20+0000\n"
"PO-Revision-Date: 2023-05-24 02:20+0000\n"
"Last-Translator: Rafael Fontenelle <rffontenelle@gmail.com>, 2023\n"
"Language-Team: Japanese (https://app.transifex.com/python-doc/teams/5390/"
"ja/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ja\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../library/tempfile.rst:2
msgid ":mod:`tempfile` --- Generate temporary files and directories"
msgstr ":mod:`tempfile` --- 一時ファイルやディレクトリの作成"

#: ../../library/tempfile.rst:9
msgid "**Source code:** :source:`Lib/tempfile.py`"
msgstr "**ソースコード:** :source:`Lib/tempfile.py`"

#: ../../library/tempfile.rst:17
msgid ""
"This module creates temporary files and directories.  It works on all "
"supported platforms. :class:`TemporaryFile`, :class:`NamedTemporaryFile`, :"
"class:`TemporaryDirectory`, and :class:`SpooledTemporaryFile` are high-level "
"interfaces which provide automatic cleanup and can be used as :term:`context "
"managers <context manager>`. :func:`mkstemp` and :func:`mkdtemp` are lower-"
"level functions which require manual cleanup."
msgstr ""

#: ../../library/tempfile.rst:24
msgid ""
"All the user-callable functions and constructors take additional arguments "
"which allow direct control over the location and name of temporary files and "
"directories. Files names used by this module include a string of random "
"characters which allows those files to be securely created in shared "
"temporary directories. To maintain backward compatibility, the argument "
"order is somewhat odd; it is recommended to use keyword arguments for "
"clarity."
msgstr ""
"ユーザが呼び出し可能な全ての関数とコンストラクタは追加の引数を受け取りま"
"す。\n"
"その引数によって一時ファイルやディレクトリの場所と名前を直接操作することが出"
"来ます。\n"
"このモジュールに使用されるファイル名はランダムな文字を含みます。そのためファ"
"イルは共有された一時ディレクトリに安全に作成されます。\n"
"後方互換性を保つために引数の順序は若干奇妙です。\n"
"分かりやすさのためにキーワード引数を使用してください。"

#: ../../library/tempfile.rst:32
msgid "The module defines the following user-callable items:"
msgstr "このモジュールではユーザが呼び出し可能な以下の項目を定義しています:"

#: ../../library/tempfile.rst:36
msgid ""
"Return a :term:`file-like object` that can be used as a temporary storage "
"area. The file is created securely, using the same rules as :func:`mkstemp`. "
"It will be destroyed as soon as it is closed (including an implicit close "
"when the object is garbage collected).  Under Unix, the directory entry for "
"the file is either not created at all or is removed immediately after the "
"file is created.  Other platforms do not support this; your code should not "
"rely on a temporary file created using this function having or not having a "
"visible name in the file system."
msgstr ""
"一時的な記憶領域として使うことの出来る :term:`file-like object` を返しま"
"す。\n"
"ファイルは :func:`mkstemp` と同じルールにより安全に作成されます。\n"
"オブジェクトは閉じられる (オブジェクトのガベージコレクションによる暗黙的なも"
"のも含みます) とすぐに破壊されます。\n"
"Unix では、そのファイルのディレクトリエントリは全く作成されないか、ファイル作"
"成後すぐに削除されます。\n"
"これは他のプラットフォームではサポートされません。\n"
"よって、この関数で作成された一時ファイルがファイルシステムで可視な名前を持つ"
"かどうかをコードで当てにすべきではありません。"

#: ../../library/tempfile.rst:44
msgid ""
"The resulting object can be used as a :term:`context manager` (see :ref:"
"`tempfile-examples`).  On completion of the context or destruction of the "
"file object the temporary file will be removed from the filesystem."
msgstr ""

#: ../../library/tempfile.rst:49
msgid ""
"The *mode* parameter defaults to ``'w+b'`` so that the file created can be "
"read and written without being closed.  Binary mode is used so that it "
"behaves consistently on all platforms without regard for the data that is "
"stored.  *buffering*, *encoding*, *errors* and *newline* are interpreted as "
"for :func:`open`."
msgstr ""
"作成されたファイルを閉じることなく読み書きできるように、 *mode* 引数のデフォ"
"ルトは ``'w+b'`` です。\n"
"保存されるデータに関わらず全てのプラットフォーム上で一貫して動作するようにバ"
"イナリモードが使用されます。\n"
"*buffering*、*encoding*、*errors*、*newline* は、 :func:`open` に対する引数と"
"して解釈されます。"

#: ../../library/tempfile.rst:55
msgid ""
"The *dir*, *prefix* and *suffix* parameters have the same meaning and "
"defaults as with :func:`mkstemp`."
msgstr ""
"*dir*、*prefix*、*suffix* 引数の意味とデフォルトは :func:`mkstemp` のものと同"
"じです。"

#: ../../library/tempfile.rst:58
msgid ""
"The returned object is a true file object on POSIX platforms.  On other "
"platforms, it is a file-like object whose :attr:`!file` attribute is the "
"underlying true file object."
msgstr ""
"返されたオブジェクトは、POSIXプラットフォームでは本物のファイルオブジェクトで"
"す。\n"
"それ以外のプラットフォームでは、:attr:`!file` 属性が下層の本物のファイルであ"
"るファイル様オブジェクトです。"

#: ../../library/tempfile.rst:62
msgid ""
"The :py:const:`os.O_TMPFILE` flag is used if it is available and works "
"(Linux-specific, requires Linux kernel 3.11 or later)."
msgstr ""

#: ../../library/tempfile.rst:65
msgid ""
"On platforms that are neither Posix nor Cygwin, TemporaryFile is an alias "
"for NamedTemporaryFile."
msgstr ""

#: ../../library/tempfile.rst:68 ../../library/tempfile.rst:96
#: ../../library/tempfile.rst:211
msgid ""
"Raises an :ref:`auditing event <auditing>` ``tempfile.mkstemp`` with "
"argument ``fullpath``."
msgstr ""
"引数 ``fullpath`` を指定して :ref:`監査イベント <auditing>` ``tempfile."
"mkstemp`` を送出します。 "

#: ../../library/tempfile.rst:72
msgid "The :py:const:`os.O_TMPFILE` flag is now used if available."
msgstr ""

#: ../../library/tempfile.rst:74 ../../library/tempfile.rst:98
#: ../../library/tempfile.rst:125
msgid "Added *errors* parameter."
msgstr "*errors* 引数が追加されました。"

#: ../../library/tempfile.rst:80
msgid ""
"This function operates exactly as :func:`TemporaryFile` does, except that "
"the file is guaranteed to have a visible name in the file system (on Unix, "
"the directory entry is not unlinked).  That name can be retrieved from the :"
"attr:`name` attribute of the returned file-like object.  Whether the name "
"can be used to open the file a second time, while the named temporary file "
"is still open, varies across platforms (it can be so used on Unix; it cannot "
"on Windows).  If *delete* is true (the default), the file is deleted as soon "
"as it is closed. The returned object is always a file-like object whose :"
"attr:`!file` attribute is the underlying true file object. This file-like "
"object can be used in a :keyword:`with` statement, just like a normal file."
msgstr ""

#: ../../library/tempfile.rst:93
msgid ""
"On POSIX (only), a process that is terminated abruptly with SIGKILL cannot "
"automatically delete any NamedTemporaryFiles it created."
msgstr ""

#: ../../library/tempfile.rst:104
msgid ""
"This class operates exactly as :func:`TemporaryFile` does, except that data "
"is spooled in memory until the file size exceeds *max_size*, or until the "
"file's :func:`~io.IOBase.fileno` method is called, at which point the "
"contents are written to disk and operation proceeds as with :func:"
"`TemporaryFile`."
msgstr ""

#: ../../library/tempfile.rst:112
msgid ""
"The resulting file has one additional method, :meth:`!rollover`, which "
"causes the file to roll over to an on-disk file regardless of its size."
msgstr ""

#: ../../library/tempfile.rst:115
msgid ""
"The returned object is a file-like object whose :attr:`!_file` attribute is "
"either an :class:`io.BytesIO` or :class:`io.TextIOWrapper` object (depending "
"on whether binary or text *mode* was specified) or a true file object, "
"depending on whether :meth:`rollover` has been called.  This file-like "
"object can be used in a :keyword:`with` statement, just like a normal file."
msgstr ""

#: ../../library/tempfile.rst:122
msgid "the truncate method now accepts a *size* argument."
msgstr ""

#: ../../library/tempfile.rst:128
msgid ""
"Fully implements the :class:`io.BufferedIOBase` and :class:`io.TextIOBase` "
"abstract base classes (depending on whether binary or text *mode* was "
"specified)."
msgstr ""

#: ../../library/tempfile.rst:136
msgid ""
"This class securely creates a temporary directory using the same rules as :"
"func:`mkdtemp`. The resulting object can be used as a :term:`context "
"manager` (see :ref:`tempfile-examples`).  On completion of the context or "
"destruction of the temporary directory object, the newly created temporary "
"directory and all its contents are removed from the filesystem."
msgstr ""

#: ../../library/tempfile.rst:144
msgid ""
"The directory name can be retrieved from the :attr:`!name` attribute of the "
"returned object.  When the returned object is used as a :term:`context "
"manager`, the :attr:`!name` will be assigned to the target of the :keyword:`!"
"as` clause in the :keyword:`with` statement, if there is one."
msgstr ""

#: ../../library/tempfile.rst:151
msgid ""
"The directory can be explicitly cleaned up by calling the :meth:`!cleanup` "
"method. If *ignore_cleanup_errors* is true, any unhandled exceptions during "
"explicit or implicit cleanup (such as a :exc:`PermissionError` removing open "
"files on Windows) will be ignored, and the remaining removable items deleted "
"on a \"best-effort\" basis. Otherwise, errors will be raised in whatever "
"context cleanup occurs (the :meth:`!cleanup` call, exiting the context "
"manager, when the object is garbage-collected or during interpreter "
"shutdown)."
msgstr ""

#: ../../library/tempfile.rst:160 ../../library/tempfile.rst:240
msgid ""
"Raises an :ref:`auditing event <auditing>` ``tempfile.mkdtemp`` with "
"argument ``fullpath``."
msgstr ""
"引数 ``fullpath`` を指定して :ref:`監査イベント <auditing>` ``tempfile."
"mkdtemp`` を送出します。 "

#: ../../library/tempfile.rst:164
msgid "Added *ignore_cleanup_errors* parameter."
msgstr "*ignore_cleanup_errors* 引数が追加されました。"

#: ../../library/tempfile.rst:170
msgid ""
"Creates a temporary file in the most secure manner possible.  There are no "
"race conditions in the file's creation, assuming that the platform properly "
"implements the :const:`os.O_EXCL` flag for :func:`os.open`.  The file is "
"readable and writable only by the creating user ID.  If the platform uses "
"permission bits to indicate whether a file is executable, the file is "
"executable by no one.  The file descriptor is not inherited by child "
"processes."
msgstr ""
"可能な限り最も安全な手段で一時ファイルを生成します。\n"
"プラットフォームが :func:`os.open` の :const:`os.O_EXCL` フラグを正しく実装し"
"ている限り、ファイルの作成で競合が起こることはありません。\n"
"作成したユーザのユーザ ID からのみファイルを読み書き出来ます。\n"
"プラットフォームがファイルが実行可能かどうかを示す許可ビットを使用している場"
"合、ファイルは誰からも実行不可です。\n"
"このファイルのファイル記述子は子プロセスに継承されません。"

#: ../../library/tempfile.rst:178
msgid ""
"Unlike :func:`TemporaryFile`, the user of :func:`mkstemp` is responsible for "
"deleting the temporary file when done with it."
msgstr ""
":func:`TemporaryFile` と違って、 :func:`mkstemp` のユーザは用済みになった時に"
"一時ファイルを削除しなければなりません。"

#: ../../library/tempfile.rst:181
msgid ""
"If *suffix* is not ``None``, the file name will end with that suffix, "
"otherwise there will be no suffix.  :func:`mkstemp` does not put a dot "
"between the file name and the suffix; if you need one, put it at the "
"beginning of *suffix*."
msgstr ""
"*suffix* が ``None`` でない場合、ファイル名はその接尾辞で終わります。\n"
"そうでない場合、接尾辞はありません。\n"
":func:`mkstemp` はファイル名と接尾辞の間にドットを追加しません。\n"
"必要であれば *suffix* の先頭につけてください。"

#: ../../library/tempfile.rst:186
msgid ""
"If *prefix* is not ``None``, the file name will begin with that prefix; "
"otherwise, a default prefix is used.  The default is the return value of :"
"func:`gettempprefix` or :func:`gettempprefixb`, as appropriate."
msgstr ""
"*prefix* が ``None`` でない場合、ファイル名はその接頭辞で始まります。\n"
"そうでない場合、デフォルトの接頭辞が使われます。\n"
"必要に応じ、デフォルトは :func:`gettempprefix` または :func:`gettempprefixb` "
"の返り値です。"

#: ../../library/tempfile.rst:190
msgid ""
"If *dir* is not ``None``, the file will be created in that directory; "
"otherwise, a default directory is used.  The default directory is chosen "
"from a platform-dependent list, but the user of the application can control "
"the directory location by setting the *TMPDIR*, *TEMP* or *TMP* environment "
"variables.  There is thus no guarantee that the generated filename will have "
"any nice properties, such as not requiring quoting when passed to external "
"commands via ``os.popen()``."
msgstr ""
"*dir* が ``None`` でない場合、ファイルはそのディレクトリ下に作成されます。 "
"``None`` の場合、デフォルトのディレクトリが使われます。デフォルトのディレクト"
"リはプラットフォームに依存するリストから選ばれますが、アプリケーションのユー"
"ザは *TMPDIR*、*TEMP*、または *TMP* 環境変数を設定することでディレクトリの場"
"所を管理することができます。そのため、生成されるファイル名が、``os.popen()`` "
"で外部コマンドにクォーティング無しで渡すことができるなどといった、扱いやすい"
"性質を持つ保証はありません。"

#: ../../library/tempfile.rst:198
msgid ""
"If any of *suffix*, *prefix*, and *dir* are not ``None``, they must be the "
"same type. If they are bytes, the returned name will be bytes instead of "
"str. If you want to force a bytes return value with otherwise default "
"behavior, pass ``suffix=b''``."
msgstr ""
"*suffix*、*prefix*、*dir* のいずれかが ``None`` でない場合、それらは同じ型で"
"なければなりません。\n"
"bytes の場合、返された名前は str でなはく bytes です。\n"
"他の挙動はデフォルトで返り値を bytes に強制的にしたい場合は ``suffix=b''`` を"
"渡してください。"

#: ../../library/tempfile.rst:204
msgid ""
"If *text* is specified and true, the file is opened in text mode. Otherwise, "
"(the default) the file is opened in binary mode."
msgstr ""
"*text* に真を指定した場合は、ファイルはテキストモードで開かれます。そうでない"
"場合(デフォルト)は、ファイルはバイナリモードで開かれます。"

#: ../../library/tempfile.rst:207
msgid ""
":func:`mkstemp` returns a tuple containing an OS-level handle to an open "
"file (as would be returned by :func:`os.open`) and the absolute pathname of "
"that file, in that order."
msgstr ""
":func:`mkstemp` は開かれたファイルを扱うための OS レベルのハンドル (:func:"
"`os.open` が返すものと同じ) とファイルの絶対パス名が順番に並んだタプルを返し"
"ます。"

#: ../../library/tempfile.rst:213 ../../library/tempfile.rst:242
msgid ""
"*suffix*, *prefix*, and *dir* may now be supplied in bytes in order to "
"obtain a bytes return value.  Prior to this, only str was allowed. *suffix* "
"and *prefix* now accept and default to ``None`` to cause an appropriate "
"default value to be used."
msgstr ""
"*suffix*、*prefix*、*dir* は bytes の返り値を得るために bytes で渡すことが出"
"来ます。\n"
"それ以前は str のみ許されていました。\n"
"適切なデフォルト値を使用するよう、*suffix* と *prefix* は ``None`` を受け入"
"れ、デフォルトにするようになりました。"

#: ../../library/tempfile.rst:219 ../../library/tempfile.rst:248
msgid "The *dir* parameter now accepts a :term:`path-like object`."
msgstr ""
"*dir* パラメタが :term:`path-like object` を受け付けるようになりました。"

#: ../../library/tempfile.rst:225
msgid ""
"Creates a temporary directory in the most secure manner possible. There are "
"no race conditions in the directory's creation.  The directory is readable, "
"writable, and searchable only by the creating user ID."
msgstr ""
"可能な限り安全な方法で一時ディレクトリを作成します。\n"
"ディレクトリの生成で競合は発生しません。\n"
"ディレクトリを作成したユーザ ID だけが、このディレクトリに対して内容を読み出"
"したり、書き込んだり、検索したりすることができます。"

#: ../../library/tempfile.rst:229
msgid ""
"The user of :func:`mkdtemp` is responsible for deleting the temporary "
"directory and its contents when done with it."
msgstr ""
":func:`mkdtemp` のユーザは用済みになった時に一時ディレクトリとその中身を削除"
"しなければなりません。"

#: ../../library/tempfile.rst:232
msgid ""
"The *prefix*, *suffix*, and *dir* arguments are the same as for :func:"
"`mkstemp`."
msgstr ""
"*prefix*, *suffix*, *dir* 引数は :func:`mkstemp` 関数のものと同じです。"

#: ../../library/tempfile.rst:235
msgid ""
":func:`mkdtemp` returns the absolute pathname of the new directory if *dir* "
"is ``None`` or is an absolute path. If *dir* is a relative path, :func:"
"`mkdtemp` returns a relative path on Python 3.11 and lower. However, on 3.12 "
"it will return an absolute path in all situations."
msgstr ""

#: ../../library/tempfile.rst:254
msgid ""
"Return the name of the directory used for temporary files. This defines the "
"default value for the *dir* argument to all functions in this module."
msgstr ""
"一時ファイルに用いられるディレクトリの名前を返します。\n"
"これはモジュール内の全ての関数の *dir* 引数のデフォルト値を定義します。"

#: ../../library/tempfile.rst:258
msgid ""
"Python searches a standard list of directories to find one which the calling "
"user can create files in.  The list is:"
msgstr ""
"Python は呼び出したユーザがファイルを作ることの出来るディレクトリを検索するの"
"に標準的なリストを使用します。\n"
"そのリストは:"

#: ../../library/tempfile.rst:261
msgid "The directory named by the :envvar:`TMPDIR` environment variable."
msgstr "環境変数 :envvar:`TMPDIR` で与えられているディレクトリ名。"

#: ../../library/tempfile.rst:263
msgid "The directory named by the :envvar:`TEMP` environment variable."
msgstr "環境変数 :envvar:`TEMP` で与えられているディレクトリ名。"

#: ../../library/tempfile.rst:265
msgid "The directory named by the :envvar:`TMP` environment variable."
msgstr "環境変数 :envvar:`TMP` で与えられているディレクトリ名。"

#: ../../library/tempfile.rst:267
msgid "A platform-specific location:"
msgstr "プラットフォーム依存の場所:"

#: ../../library/tempfile.rst:269
msgid ""
"On Windows, the directories :file:`C:\\\\TEMP`, :file:`C:\\\\TMP`, :file:`\\"
"\\TEMP`, and :file:`\\\\TMP`, in that order."
msgstr ""
"Windows ではディレクトリ :file:`C:\\\\TEMP` 、 :file:`C:\\\\TMP` 、 :file:`\\"
"\\TEMP` 、および :file:`\\\\TMP` の順。"

#: ../../library/tempfile.rst:272
msgid ""
"On all other platforms, the directories :file:`/tmp`, :file:`/var/tmp`, and :"
"file:`/usr/tmp`, in that order."
msgstr ""
"その他の全てのプラットフォームでは、 :file:`/tmp` 、 :file:`/var/tmp` 、およ"
"び :file:`/usr/tmp` の順。"

#: ../../library/tempfile.rst:275
msgid "As a last resort, the current working directory."
msgstr "最後の手段として、現在の作業ディレクトリ。"

#: ../../library/tempfile.rst:277
msgid ""
"The result of this search is cached, see the description of :data:`tempdir` "
"below."
msgstr ""
"この検索の結果はキャッシュされます。以下の :data:`tempdir` の記述を参照してく"
"ださい。"

#: ../../library/tempfile.rst:282
msgid ""
"Always returns a str.  Previously it would return any :data:`tempdir` value "
"regardless of type so long as it was not ``None``."
msgstr ""

#: ../../library/tempfile.rst:287
msgid "Same as :func:`gettempdir` but the return value is in bytes."
msgstr ":func:`gettempdir` と同じですが返り値は bytesです。"

#: ../../library/tempfile.rst:293
msgid ""
"Return the filename prefix used to create temporary files.  This does not "
"contain the directory component."
msgstr ""
"一時ファイルを生成する際に使われるファイル名の接頭辞を返します。\n"
"これにはディレクトリ部は含まれません。"

#: ../../library/tempfile.rst:298
msgid "Same as :func:`gettempprefix` but the return value is in bytes."
msgstr ":func:`gettempprefix` と同じですが返り値は bytes です。"

#: ../../library/tempfile.rst:302
msgid ""
"The module uses a global variable to store the name of the directory used "
"for temporary files returned by :func:`gettempdir`.  It can be set directly "
"to override the selection process, but this is discouraged. All functions in "
"this module take a *dir* argument which can be used to specify the "
"directory. This is the recommended approach that does not surprise other "
"unsuspecting code by changing global API behavior."
msgstr ""

#: ../../library/tempfile.rst:311
msgid ""
"When set to a value other than ``None``, this variable defines the default "
"value for the *dir* argument to the functions defined in this module, "
"including its type, bytes or str.  It cannot be a :term:`path-like object`."
msgstr ""

#: ../../library/tempfile.rst:316
msgid ""
"If ``tempdir`` is ``None`` (the default) at any call to any of the above "
"functions except :func:`gettempprefix` it is initialized following the "
"algorithm described in :func:`gettempdir`."
msgstr ""
"``tempdir`` が (デフォルトの) ``None`` の場合、 :func:`gettempprefix` を除く"
"上記のいずれかの関数を呼び出す際は常に :func:`gettempdir` で述べられているア"
"ルゴリズムによって初期化されます。"

#: ../../library/tempfile.rst:322
msgid ""
"Beware that if you set ``tempdir`` to a bytes value, there is a nasty side "
"effect: The global default return type of :func:`mkstemp` and :func:"
"`mkdtemp` changes to bytes when no explicit ``prefix``, ``suffix``, or "
"``dir`` arguments of type str are supplied. Please do not write code "
"expecting or depending on this. This awkward behavior is maintained for "
"compatibility with the historical implementation."
msgstr ""

#: ../../library/tempfile.rst:333
msgid "Examples"
msgstr "使用例"

#: ../../library/tempfile.rst:335
msgid "Here are some examples of typical usage of the :mod:`tempfile` module::"
msgstr ":mod:`tempfile` モジュールの典型的な使用法のいくつかの例を挙げます::"

#: ../../library/tempfile.rst:367
msgid "Deprecated functions and variables"
msgstr "非推奨の関数と変数"

#: ../../library/tempfile.rst:369
msgid ""
"A historical way to create temporary files was to first generate a file name "
"with the :func:`mktemp` function and then create a file using this name. "
"Unfortunately this is not secure, because a different process may create a "
"file with this name in the time between the call to :func:`mktemp` and the "
"subsequent attempt to create the file by the first process. The solution is "
"to combine the two steps and create the file immediately. This approach is "
"used by :func:`mkstemp` and the other functions described above."
msgstr ""
"一時ファイルを作成する歴史的な手法は、まず :func:`mktemp` 関数でファイル名を"
"作り、その名前を使ってファイルを作成するというものでした。\n"
"残念ながらこの方法は安全ではありません。\n"
"なぜなら、:func:`mktemp` の呼び出しと最初のプロセスが続いてファイル作成を試み"
"る間に、異なるプロセスがその名前でファイルを同時に作成するかもしれないからで"
"す。\n"
"解決策は二つのステップを同時に行い、ファイルをすぐに作成するというもので"
"す。\n"
"この方法は :func:`mkstemp` や上述している他の関数で使用されています。"

#: ../../library/tempfile.rst:380
msgid "Use :func:`mkstemp` instead."
msgstr "代わりに :func:`mkstemp` を使って下さい。"

#: ../../library/tempfile.rst:383
msgid ""
"Return an absolute pathname of a file that did not exist at the time the "
"call is made.  The *prefix*, *suffix*, and *dir* arguments are similar to "
"those of :func:`mkstemp`, except that bytes file names, ``suffix=None`` and "
"``prefix=None`` are not supported."
msgstr ""
"呼び出し時には存在しなかった、ファイルの絶対パス名を返します。\n"
"*prefix*、*suffix*、*dir* 引数は :func:`mkstemp` のものと似ていますが、bytes "
"のファイル名、``suffix=None``、そして ``prefix=None`` がサポートされていない"
"点で異なります。"

#: ../../library/tempfile.rst:390
msgid ""
"Use of this function may introduce a security hole in your program.  By the "
"time you get around to doing anything with the file name it returns, someone "
"else may have beaten you to the punch.  :func:`mktemp` usage can be replaced "
"easily with :func:`NamedTemporaryFile`, passing it the ``delete=False`` "
"parameter::"
msgstr ""
"この関数を使うとプログラムのセキュリティホールになる可能性があります。この関"
"数がファイル名を返した後、あなたがそのファイル名を使って次に何かをしようとす"
"る段階に至る前に、誰か他の人間があなたを出し抜くことができてしまいます。 :"
"func:`mktemp` の利用は、 :func:`NamedTemporaryFile` に ``delete=False`` 引数"
"を渡すことで、簡単に置き換えることができます::"

#: ../../library/tempfile.rst:11
msgid "temporary"
msgstr "テンポラリ"

#: ../../library/tempfile.rst:11
msgid "file name"
msgstr "ファイル名"

#: ../../library/tempfile.rst:11
msgid "file"
msgstr "ファイル"
