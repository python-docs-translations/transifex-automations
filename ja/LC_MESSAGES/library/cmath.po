# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# Rafael Fontenelle <rffontenelle@gmail.com>, 2025
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.11\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-07-18 17:29+0000\n"
"PO-Revision-Date: 2023-05-24 02:13+0000\n"
"Last-Translator: Rafael Fontenelle <rffontenelle@gmail.com>, 2025\n"
"Language-Team: Japanese (https://app.transifex.com/python-doc/teams/5390/"
"ja/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ja\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../library/cmath.rst:2
msgid ":mod:`cmath` --- Mathematical functions for complex numbers"
msgstr ":mod:`cmath` --- 複素数のための数学関数"

#: ../../library/cmath.rst:9
msgid ""
"This module provides access to mathematical functions for complex numbers.  "
"The functions in this module accept integers, floating-point numbers or "
"complex numbers as arguments. They will also accept any Python object that "
"has either a :meth:`~object.__complex__` or a :meth:`~object.__float__` "
"method: these methods are used to convert the object to a complex or "
"floating-point number, respectively, and the function is then applied to the "
"result of the conversion."
msgstr ""
"Этот модуль обеспечивает доступ к математическим функциям для комплексных "
"чисел. Функции в этом модуле принимают в качестве аргументов целые числа, "
"числа с плавающей запятой или комплексные числа. Они также будут принимать "
"любой объект Python, имеющий метод :meth:`~object.__complex__` или :meth:"
"`~object.__float__`: эти методы используются для преобразования объекта в "
"комплексное число или число с плавающей запятой, соответственно, а затем "
"функция применяется к результату преобразования."

#: ../../library/cmath.rst:18
msgid ""
"For functions involving branch cuts, we have the problem of deciding how to "
"define those functions on the cut itself. Following Kahan's \"Branch cuts "
"for complex elementary functions\" paper, as well as Annex G of C99 and "
"later C standards, we use the sign of zero to distinguish one side of the "
"branch cut from the other: for a branch cut along (a portion of) the real "
"axis we look at the sign of the imaginary part, while for a branch cut along "
"the imaginary axis we look at the sign of the real part."
msgstr ""
"Для функций, включающих разрезы ветвей, у нас возникает проблема: как "
"определить эти функции на самом разрезе. Следуя статье Кахана «Разрезы "
"ветвей для сложных элементарных функций», а также Приложению G стандартов "
"C99 и более поздних версий C, мы используем знак нуля, чтобы отличить одну "
"сторону разреза от другой: для разрезанной ветви вдоль (часть о) "
"действительной оси смотрим на знак мнимой части, а для ветви, разрезанной по "
"мнимой оси, смотрим на знак действительной части."

#: ../../library/cmath.rst:26
msgid ""
"For example, the :func:`cmath.sqrt` function has a branch cut along the "
"negative real axis. An argument of ``complex(-2.0, -0.0)`` is treated as "
"though it lies *below* the branch cut, and so gives a result on the negative "
"imaginary axis::"
msgstr ""
"Например, функция :func:`cmath.sqrt` имеет ветвь, разрезанную вдоль "
"отрицательной действительной оси. Аргумент ``complex(-2.0, -0.0)`` "
"рассматривается так, как если бы он находился *ниже* разреза ветки, и "
"поэтому дает результат на отрицательной мнимой оси:"

#: ../../library/cmath.rst:34
msgid ""
"But an argument of ``complex(-2.0, 0.0)`` is treated as though it lies above "
"the branch cut::"
msgstr ""
"Но аргумент ``complex(-2.0, 0.0)`` рассматривается так, как будто он "
"находится над разрезом ветки::"

#: ../../library/cmath.rst:42
msgid "Conversions to and from polar coordinates"
msgstr "Перетворення в і з полярних координат"

#: ../../library/cmath.rst:44
msgid ""
"A Python complex number ``z`` is stored internally using *rectangular* or "
"*Cartesian* coordinates.  It is completely determined by its *real part* ``z."
"real`` and its *imaginary part* ``z.imag``.  In other words::"
msgstr ""
"Python の複素数 ``z`` は内部的には *直交座標* もしくは *デカルト座標* と呼ば"
"れる座標を使って格納されています。この座標はその複素数の *実部* ``z.real`` "
"と *虚部* ``z.imag`` で決まります。言い換えると::"

#: ../../library/cmath.rst:51
msgid ""
"*Polar coordinates* give an alternative way to represent a complex number.  "
"In polar coordinates, a complex number *z* is defined by the modulus *r* and "
"the phase angle *phi*. The modulus *r* is the distance from *z* to the "
"origin, while the phase *phi* is the counterclockwise angle, measured in "
"radians, from the positive x-axis to the line segment that joins the origin "
"to *z*."
msgstr ""
"*Полярні координати* дають альтернативний спосіб представлення комплексного "
"числа. У полярних координатах комплексне число *z* визначається модулем *r* "
"і фазовим кутом *phi*. Модуль *r* — це відстань від *z* до початку "
"координат, тоді як фаза *phi* — це кут проти годинникової стрілки, виміряний "
"у радіанах, від додатної осі x до відрізка лінії, який з’єднує початок "
"координат із *z*."

#: ../../library/cmath.rst:58
msgid ""
"The following functions can be used to convert from the native rectangular "
"coordinates to polar coordinates and back."
msgstr ""
"Наступні функції можна використовувати для перетворення вихідних прямокутних "
"координат у полярні координати та назад."

#: ../../library/cmath.rst:63
msgid ""
"Return the phase of *x* (also known as the *argument* of *x*), as a float. "
"``phase(x)`` is equivalent to ``math.atan2(x.imag, x.real)``.  The result "
"lies in the range [-\\ *π*, *π*], and the branch cut for this operation lies "
"along the negative real axis.  The sign of the result is the same as the "
"sign of ``x.imag``, even when ``x.imag`` is zero::"
msgstr ""
"*x* の位相 (*x* の *偏角* とも呼びます) を浮動小数点数で返します。"
"``phase(x)`` は ``math.atan2(x.imag, x.real)`` と同等です。返り値は [-\\ "
"*π*, *π*] の範囲にあり、この演算の分枝切断は負の実軸に沿って延びています。結"
"果の符号は ``x.imag`` がゼロであってさえ ``x.imag`` の符号と等しくなります::"

#: ../../library/cmath.rst:77
msgid ""
"The modulus (absolute value) of a complex number *x* can be computed using "
"the built-in :func:`abs` function.  There is no separate :mod:`cmath` module "
"function for this operation."
msgstr ""
"複素数 *x* のモジュラス (絶対値) は組み込みの :func:`abs` 関数で計算できま"
"す。この演算を行う :mod:`cmath` モジュールの関数はありません。"

#: ../../library/cmath.rst:84
msgid ""
"Return the representation of *x* in polar coordinates.  Returns a pair ``(r, "
"phi)`` where *r* is the modulus of *x* and phi is the phase of *x*.  "
"``polar(x)`` is equivalent to ``(abs(x), phase(x))``."
msgstr ""
"*x* の極座標表現を返します。*x* の半径 *r* と *x* の位相 *phi* の組 ``(r, "
"phi)`` を返します。``polar(x)`` は ``(abs(x), phase(x))`` に等しいです。"

#: ../../library/cmath.rst:92
msgid ""
"Return the complex number *x* with polar coordinates *r* and *phi*. "
"Equivalent to ``r * (math.cos(phi) + math.sin(phi)*1j)``."
msgstr ""
"極座標 *r*, *phi* を持つ複素数 *x* を返します。値は ``r * (math.cos(phi) + "
"math.sin(phi)*1j)`` に等しいです。"

#: ../../library/cmath.rst:97
msgid "Power and logarithmic functions"
msgstr "Степеневі та логарифмічні функції"

#: ../../library/cmath.rst:101
msgid ""
"Return *e* raised to the power *x*, where *e* is the base of natural "
"logarithms."
msgstr "*e* を自然対数の底として、 *e* の *x* 乗を返します。"

#: ../../library/cmath.rst:107
msgid ""
"Returns the logarithm of *x* to the given *base*. If the *base* is not "
"specified, returns the natural logarithm of *x*. There is one branch cut, "
"from 0 along the negative real axis to -∞."
msgstr ""
"*base* を底とする *x* の対数を返します。もし *base* が指定されていない場合に"
"は、*x* の自然対数を返します。分枝切断を一つもち、``0`` から負の実数軸に沿っ"
"て ``-∞`` へと延びています。"

#: ../../library/cmath.rst:114
msgid ""
"Return the base-10 logarithm of *x*. This has the same branch cut as :func:"
"`log`."
msgstr ""
"*x* の底を 10 とする対数を返します。 :func:`log` と同じ分枝切断を持ちます。"

#: ../../library/cmath.rst:120
msgid ""
"Return the square root of *x*. This has the same branch cut as :func:`log`."
msgstr "*x* の平方根を返します。 :func:`log` と同じ分枝切断を持ちます。"

#: ../../library/cmath.rst:124
msgid "Trigonometric functions"
msgstr "Тригонометричні функції"

#: ../../library/cmath.rst:128
msgid ""
"Return the arc cosine of *x*. There are two branch cuts: One extends right "
"from 1 along the real axis to ∞. The other extends left from -1 along the "
"real axis to -∞."
msgstr ""
"*x* の逆余弦を返します。この関数には二つの分枝切断 (branch cut) があります: "
"一つは 1 から右側に実数軸に沿って∞へと延びています。もう一つは -1 から左側に"
"実数軸に沿って -∞へと延びています。"

#: ../../library/cmath.rst:135
msgid ""
"Return the arc sine of *x*. This has the same branch cuts as :func:`acos`."
msgstr "*x* の逆正弦を返します。 :func:`acos` と同じ分枝切断を持ちます。"

#: ../../library/cmath.rst:140
msgid ""
"Return the arc tangent of *x*. There are two branch cuts: One extends from "
"``1j`` along the imaginary axis to ``∞j``. The other extends from ``-1j`` "
"along the imaginary axis to ``-∞j``."
msgstr ""
"*x* の逆正接を返します。二つの分枝切断があります: 一つは ``1j`` から虚数軸に"
"沿って ``∞j`` へと延びています。もう一つは ``-1j`` から虚数軸に沿って ``-"
"∞j`` へと延びています。"

#: ../../library/cmath.rst:147
msgid "Return the cosine of *x*."
msgstr "*x* の余弦を返します。"

#: ../../library/cmath.rst:152
msgid "Return the sine of *x*."
msgstr "*x* の正弦を返します。"

#: ../../library/cmath.rst:157
msgid "Return the tangent of *x*."
msgstr "*x* の正接を返します。"

#: ../../library/cmath.rst:161
msgid "Hyperbolic functions"
msgstr "Гіперболічні функції"

#: ../../library/cmath.rst:165
msgid ""
"Return the inverse hyperbolic cosine of *x*. There is one branch cut, "
"extending left from 1 along the real axis to -∞."
msgstr ""
"*x* の逆双曲線余弦を返します。分枝切断が一つあり、1 の左側に実数軸に沿って -∞"
"へと延びています。"

#: ../../library/cmath.rst:171
msgid ""
"Return the inverse hyperbolic sine of *x*. There are two branch cuts: One "
"extends from ``1j`` along the imaginary axis to ``∞j``.  The other extends "
"from ``-1j`` along the imaginary axis to ``-∞j``."
msgstr ""
"*x* の逆双曲線正弦を返します。二つの分枝切断があります: 一つは ``1j`` から虚"
"数軸に沿って ``∞j`` へと延びています。もう一つは ``-1j`` から虚数軸に沿って "
"``-∞j`` へと延びています。"

#: ../../library/cmath.rst:178
msgid ""
"Return the inverse hyperbolic tangent of *x*. There are two branch cuts: One "
"extends from ``1`` along the real axis to ``∞``. The other extends from "
"``-1`` along the real axis to ``-∞``."
msgstr ""
"*x* の逆双曲線正接を返します。二つの分枝切断があります: 一つは ``1`` から実数"
"軸に沿って ``∞`` へと延びています。もう一つは ``-1`` から実数軸に沿って ``-"
"∞`` へと延びています。"

#: ../../library/cmath.rst:185
msgid "Return the hyperbolic cosine of *x*."
msgstr "Zwraca cosinus hiperboliczny z *x*."

#: ../../library/cmath.rst:190
msgid "Return the hyperbolic sine of *x*."
msgstr "Zwraca sinus hiperboliczny z *x*."

#: ../../library/cmath.rst:195
msgid "Return the hyperbolic tangent of *x*."
msgstr "Zwraca tangens hiperboliczny z *x*."

#: ../../library/cmath.rst:199
msgid "Classification functions"
msgstr "Funkcje klasyfikujące"

#: ../../library/cmath.rst:203
msgid ""
"Return ``True`` if both the real and imaginary parts of *x* are finite, and "
"``False`` otherwise."
msgstr ""
"*x* の実部、虚部ともに有限であれば ``True`` を返し、それ以外の場合  "
"``False`` を返します。"

#: ../../library/cmath.rst:211
msgid ""
"Return ``True`` if either the real or the imaginary part of *x* is an "
"infinity, and ``False`` otherwise."
msgstr ""
"*x* の実数部または虚数部が正または負の無限大であれば ``True`` を、そうでなけ"
"れば ``False`` を返します。"

#: ../../library/cmath.rst:217
msgid ""
"Return ``True`` if either the real or the imaginary part of *x* is a NaN, "
"and ``False`` otherwise."
msgstr ""
"*x* の実部と虚部のどちらかが NaN のとき ``True`` を返し、それ以外の場合  "
"``False`` を返します。"

#: ../../library/cmath.rst:223
msgid ""
"Return ``True`` if the values *a* and *b* are close to each other and "
"``False`` otherwise."
msgstr ""
"Zwraca ``True`` jeżeli wartości *a* i *b* są zbliżone do siebie i ``False`` "
"w przeciwnym wypadku."

#: ../../library/cmath.rst:226
msgid ""
"Whether or not two values are considered close is determined according to "
"given absolute and relative tolerances."
msgstr ""
"2値が近いと見なされるかどうかは与えられた絶対または相対許容差により決定されま"
"す。"

#: ../../library/cmath.rst:229
msgid ""
"*rel_tol* is the relative tolerance -- it is the maximum allowed difference "
"between *a* and *b*, relative to the larger absolute value of *a* or *b*. "
"For example, to set a tolerance of 5%, pass ``rel_tol=0.05``.  The default "
"tolerance is ``1e-09``, which assures that the two values are the same "
"within about 9 decimal digits.  *rel_tol* must be greater than zero."
msgstr ""
"*rel_tol* は相対許容差、すなわち *a* と *b* の絶対値の大きい方に対する *a* "
"と *b* の許容される最大の差です。\n"
"例えば許容差を 5% に設定する場合 ``rel_tol=0.05`` を渡します。\n"
"デフォルトの許容差は ``1e-09`` で、2値が9桁同じことを保証します。\n"
"*rel_tol* は0より大きくなければなりません。"

#: ../../library/cmath.rst:235
msgid ""
"*abs_tol* is the minimum absolute tolerance -- useful for comparisons near "
"zero. *abs_tol* must be at least zero."
msgstr ""
"*abs_tol* は最小の絶対許容差です。0に近い値を比較するのに有用です。*abs_tol* "
"は0以上でなければなりません。"

#: ../../library/cmath.rst:238
msgid ""
"If no errors occur, the result will be: ``abs(a-b) <= max(rel_tol * "
"max(abs(a), abs(b)), abs_tol)``."
msgstr ""
"エラーが起こらなければ結果は ``abs(a-b) <= max(rel_tol * max(abs(a), "
"abs(b)), abs_tol)`` です。"

#: ../../library/cmath.rst:241
msgid ""
"The IEEE 754 special values of ``NaN``, ``inf``, and ``-inf`` will be "
"handled according to IEEE rules.  Specifically, ``NaN`` is not considered "
"close to any other value, including ``NaN``.  ``inf`` and ``-inf`` are only "
"considered close to themselves."
msgstr ""
"Спеціальні значення IEEE 754 ``NaN``, ``inf`` і ``-inf`` оброблятимуться "
"відповідно до правил IEEE. Зокрема, ``NaN`` не вважається близьким до будь-"
"якого іншого значення, включаючи ``NaN``. ``inf`` і ``-inf`` вважаються лише "
"близькими до самих себе."

#: ../../library/cmath.rst:250
msgid ":pep:`485` -- A function for testing approximate equality"
msgstr ":pep:`485` -- Функція для перевірки приблизної рівності"

#: ../../library/cmath.rst:254
msgid "Constants"
msgstr "Stały"

#: ../../library/cmath.rst:258
msgid "The mathematical constant *π*, as a float."
msgstr "Stałą matematyczną *π*, jako liczbę zmiennoprzecinkową"

#: ../../library/cmath.rst:263
msgid "The mathematical constant *e*, as a float."
msgstr "Stałą matematyczną *e*, jako liczbę zmiennoprzecinkową"

#: ../../library/cmath.rst:268
msgid "The mathematical constant *τ*, as a float."
msgstr "Stałą matematyczną *τ*, jako liczbę zmiennoprzecinkową"

#: ../../library/cmath.rst:275
msgid "Floating-point positive infinity. Equivalent to ``float('inf')``."
msgstr ""
"Додатна нескінченність із плаваючою комою. Еквівалент ``float('inf')``."

#: ../../library/cmath.rst:282
msgid ""
"Complex number with zero real part and positive infinity imaginary part. "
"Equivalent to ``complex(0.0, float('inf'))``."
msgstr ""
"Комплексне число з нульовою дійсною частиною та додатною нескінченною уявною "
"частиною. Еквівалент ``complex(0.0, float('inf'))``."

#: ../../library/cmath.rst:290
msgid ""
"A floating-point \"not a number\" (NaN) value.  Equivalent to "
"``float('nan')``."
msgstr ""
"Значення з плаваючою комою \"не число\" (NaN). Еквівалент ``float('nan')``."

#: ../../library/cmath.rst:298
msgid ""
"Complex number with zero real part and NaN imaginary part. Equivalent to "
"``complex(0.0, float('nan'))``."
msgstr ""
"Комплексне число з нульовою дійсною частиною та NaN уявною частиною. "
"Еквівалент ``complex(0.0, float('nan'))``."

#: ../../library/cmath.rst:306
msgid ""
"Note that the selection of functions is similar, but not identical, to that "
"in module :mod:`math`.  The reason for having two modules is that some users "
"aren't interested in complex numbers, and perhaps don't even know what they "
"are.  They would rather have ``math.sqrt(-1)`` raise an exception than "
"return a complex number. Also note that the functions defined in :mod:"
"`cmath` always return a complex number, even if the answer can be expressed "
"as a real number (in which case the complex number has an imaginary part of "
"zero)."
msgstr ""
"Зауважте, що вибір функцій подібний, але не ідентичний до вибору в модулі :"
"mod:`math`. Причина наявності двох модулів полягає в тому, що деякі "
"користувачі не цікавляться комплексними числами і, можливо, навіть не "
"знають, що це таке. Вони радше, щоб ``math.sqrt(-1)`` викликав виняток, ніж "
"повертав комплексне число. Також зауважте, що функції, визначені в :mod:"
"`cmath`, завжди повертають комплексне число, навіть якщо відповідь може бути "
"виражена як дійсне число (у цьому випадку комплексне число має уявну частину "
"нуля)."

#: ../../library/cmath.rst:314
msgid ""
"A note on branch cuts: They are curves along which the given function fails "
"to be continuous.  They are a necessary feature of many complex functions.  "
"It is assumed that if you need to compute with complex functions, you will "
"understand about branch cuts.  Consult almost any (not too elementary) book "
"on complex variables for enlightenment.  For information of the proper "
"choice of branch cuts for numerical purposes, a good reference should be the "
"following:"
msgstr ""
"Примітка щодо розрізів гілок: це криві, уздовж яких дана функція не є "
"неперервною. Вони є необхідною ознакою багатьох складних функцій. "
"Передбачається, що якщо вам потрібно обчислювати зі складними функціями, ви "
"зрозумієте про скорочення гілок. Зверніться до майже будь-якої (не надто "
"елементарної) книги про комплексні змінні для просвітлення. Щоб отримати "
"інформацію щодо правильного вибору обрізків гілок для чисельних цілей, "
"гарною довідкою має бути наступне:"

#: ../../library/cmath.rst:324
msgid ""
"Kahan, W:  Branch cuts for complex elementary functions; or, Much ado about "
"nothing's sign bit.  In Iserles, A., and Powell, M. (eds.), The state of the "
"art in numerical analysis. Clarendon Press (1987) pp165--211."
msgstr ""
"Kahan, W: Розрізи гілок для складних елементарних функцій; або \"Багато шуму "
"з нічого\". У Ізерлес, А. та Пауелл, М. (ред.), Сучасний стан числового "
"аналізу. Clarendon Press (1987) pp165--211."

#: ../../library/cmath.rst:304
msgid "module"
msgstr "moduł"

#: ../../library/cmath.rst:304
msgid "math"
msgstr "math"
