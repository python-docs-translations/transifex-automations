# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# Rafael Fontenelle <rffontenelle@gmail.com>, 2024
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.10\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-01-21 22:53+0000\n"
"PO-Revision-Date: 2022-11-05 17:23+0000\n"
"Last-Translator: Rafael Fontenelle <rffontenelle@gmail.com>, 2024\n"
"Language-Team: Japanese (https://app.transifex.com/python-doc/teams/5390/"
"ja/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ja\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../using/configure.rst:3
msgid "Configure Python"
msgstr "Python を構成する"

#: ../../using/configure.rst:8
msgid "Configure Options"
msgstr "Configureオプション"

#: ../../using/configure.rst:10
msgid "List all ``./configure`` script options using::"
msgstr "次のコマンドで、全ての ``./configure`` オプションを表示できます。"

#: ../../using/configure.rst:14
msgid ""
"See also the :file:`Misc/SpecialBuilds.txt` in the Python source "
"distribution."
msgstr ""
"Pythonのソース配布の中の :file:`Misc/SpecialBuilds.txt` も参照してください。"

#: ../../using/configure.rst:17
msgid "General Options"
msgstr "一般的なオプション"

#: ../../using/configure.rst:21
msgid ""
"Support loadable extensions in the :mod:`_sqlite` extension module (default "
"is no)."
msgstr ""

#: ../../using/configure.rst:24
msgid ""
"See the :meth:`sqlite3.Connection.enable_load_extension` method of the :mod:"
"`sqlite3` module."
msgstr ""
":mod:`sqlite3` モジュールの :meth:`sqlite3.Connection.enable_load_extension` "
"メソッドを参照してください。"

#: ../../using/configure.rst:31
msgid ""
"Disable IPv6 support (enabled by default if supported), see the :mod:"
"`socket` module."
msgstr ""
"IPv6サポートを無効にします(サポートされている場合はデフォルトで有効)、 :mod:"
"`socket` モジュールを参照してください。"

#: ../../using/configure.rst:36
msgid "Define the size in bits of Python :class:`int` digits: 15 or 30 bits."
msgstr ""
"Python :class:`int` の桁の大きさをビット単位で定義します: 15ビットまたは30"
"ビットです。"

#: ../../using/configure.rst:38
msgid ""
"By default, the number of bits is selected depending on ``sizeof(void*)``: "
"30 bits if ``void*`` size is 64-bit or larger, 15 bits otherwise."
msgstr ""

#: ../../using/configure.rst:41
msgid "Define the ``PYLONG_BITS_IN_DIGIT`` to ``15`` or ``30``."
msgstr "``PYLONG_BITS_IN_DIGIT`` を ``15`` または ``30`` に定義します。"

#: ../../using/configure.rst:43
msgid "See :data:`sys.int_info.bits_per_digit <sys.int_info>`."
msgstr ""
":data:`sys.int_info.bits_per_digit <sys.int_info>` を参照してください。"

#: ../../using/configure.rst:48
msgid ""
"Compile the Python ``main()`` function and link Python executable with C++ "
"compiler: ``$CXX``, or *COMPILER* if specified."
msgstr ""

#: ../../using/configure.rst:53
msgid "Set the Python executable suffix to *SUFFIX*."
msgstr "Python の実行ファイルの接尾辞を *SUFFIX* に設定します。"

#: ../../using/configure.rst:55
msgid ""
"The default suffix is ``.exe`` on Windows and macOS (``python.exe`` "
"executable), and an empty string on other platforms (``python`` executable)."
msgstr ""

#: ../../using/configure.rst:60
msgid ""
"Select the default time zone search path for :data:`zoneinfo.TZPATH`. See "
"the :ref:`Compile-time configuration <zoneinfo_data_compile_time_config>` of "
"the :mod:`zoneinfo` module."
msgstr ""

#: ../../using/configure.rst:64
msgid ""
"Default: ``/usr/share/zoneinfo:/usr/lib/zoneinfo:/usr/share/lib/zoneinfo:/"
"etc/zoneinfo``."
msgstr ""
"デフォルト: ``/usr/share/zoneinfo:/usr/lib/zoneinfo:/usr/share/lib/zoneinfo:/"
"etc/zoneinfo``"

#: ../../using/configure.rst:66
msgid "See :data:`os.pathsep` path separator."
msgstr ":data:`os.pathsep` パスセパレータを参照してください。"

#: ../../using/configure.rst:72
msgid ""
"Build the ``_decimal`` extension module using a thread-local context rather "
"than a coroutine-local context (default), see the :mod:`decimal` module."
msgstr ""
"コルーチンローカルコンテキスト(デフォルト)ではなく、スレッドローカルコンテキ"
"ストを使用して ``_decimal`` 拡張モジュールをビルドします。 :mod:`decimal` モ"
"ジュールを参照してください。"

#: ../../using/configure.rst:75
msgid "See :data:`decimal.HAVE_CONTEXTVAR` and the :mod:`contextvars` module."
msgstr ""

#: ../../using/configure.rst:81
msgid "Override order to check db backends for the :mod:`dbm` module"
msgstr ""
":mod:`dbm` モジュールの DB バックエンドをチェックする順序をオーバーライドしま"
"す。"

#: ../../using/configure.rst:83
msgid ""
"A valid value is a colon (``:``) separated string with the backend names:"
msgstr "有効な値は、バックエンド名をコロン( ``:`` )で区切った文字列です:"

#: ../../using/configure.rst:85
msgid "``ndbm``;"
msgstr "``ndbm``;"

#: ../../using/configure.rst:86
msgid "``gdbm``;"
msgstr "``gdbm``;"

#: ../../using/configure.rst:87
msgid "``bdb``."
msgstr "``bdb``。"

#: ../../using/configure.rst:91
msgid "Disable C locale coercion to a UTF-8 based locale (enabled by default)."
msgstr ""
"UTF-8 ベースのロケールへの C ロケールの強制を無効にします(デフォルトで有効)。"

#: ../../using/configure.rst:93
msgid "Don't define the ``PY_COERCE_C_LOCALE`` macro."
msgstr "``PY_COERCE_C_LOCALE`` マクロは定義しないでください。"

#: ../../using/configure.rst:95
msgid "See :envvar:`PYTHONCOERCECLOCALE` and the :pep:`538`."
msgstr ":envvar:`PYTHONCOERCECLOCALE` および :pep:`538` を参照してください。"

#: ../../using/configure.rst:99
msgid "Python library directory name (default is ``lib``)."
msgstr "Python のライブラリディレクトリ名(デフォルトは ``lib`` )。"

#: ../../using/configure.rst:101
msgid "Fedora and SuSE use ``lib64`` on 64-bit platforms."
msgstr "Fedora と SuSE は64ビットプラットフォームで ``lib64`` を使用します。"

#: ../../using/configure.rst:103
msgid "See :data:`sys.platlibdir`."
msgstr ":data:`sys.platlibdir` を参照してください。"

#: ../../using/configure.rst:109
msgid ""
"Directory of wheel packages used by the :mod:`ensurepip` module (none by "
"default)."
msgstr ""
":mod:`ensurepip` モジュールが使用する wheel パッケージのディレクトリです(デ"
"フォルトはなし)。"

#: ../../using/configure.rst:112
msgid ""
"Some Linux distribution packaging policies recommend against bundling "
"dependencies. For example, Fedora installs wheel packages in the ``/usr/"
"share/python-wheels/`` directory and don't install the :mod:`ensurepip."
"_bundled` package."
msgstr ""

#: ../../using/configure.rst:121
msgid "Install Options"
msgstr "インストールオプション"

#: ../../using/configure.rst:125
msgid ""
"Install architecture-independent files in PREFIX. On Unix, it defaults to :"
"file:`/usr/local`."
msgstr ""
"アーキテクチャに依存しないファイルを PREFIX にインストールします。Unix の場"
"合、デフォルトは :file:`/usr/local` です。"

#: ../../using/configure.rst:128
msgid "This value can be retrived at runtime using :data:`sys.prefix`."
msgstr ""

#: ../../using/configure.rst:130
msgid ""
"As an example, one can use ``--prefix=\"$HOME/.local/\"`` to install a "
"Python in its home directory."
msgstr ""
"例として、 ``--prefix=\"$HOME/.local/\"`` を使用すると、 Python をそのホーム"
"ディレクトリにインストールすることができます。"

#: ../../using/configure.rst:135
msgid ""
"Install architecture-dependent files in EPREFIX, defaults to :option:`--"
"prefix`."
msgstr ""
"アーキテクチャ依存のファイルを EPREFIX にインストールします。デフォルトは :"
"option:`--prefix` です。"

#: ../../using/configure.rst:137
msgid "This value can be retrived at runtime using :data:`sys.exec_prefix`."
msgstr ""

#: ../../using/configure.rst:141
msgid ""
"Don't build nor install test modules, like the :mod:`test` package or the :"
"mod:`_testcapi` extension module (built and installed by default)."
msgstr ""

#: ../../using/configure.rst:148
msgid "Select the :mod:`ensurepip` command run on Python installation:"
msgstr ""
"Python のインストール時に実行される :mod:`ensurepip` コマンドを選択します:"

#: ../../using/configure.rst:150
msgid ""
"``upgrade`` (default): run ``python -m ensurepip --altinstall --upgrade`` "
"command."
msgstr ""
"``upgrade`` (デフォルト): ``python -m ensurepip --altinstall --upgrade`` コマ"
"ンドを実行します。"

#: ../../using/configure.rst:152
msgid "``install``: run ``python -m ensurepip --altinstall`` command;"
msgstr ""
"``install``: ``python -m ensurepip --altinstall`` コマンドを実行します。"

#: ../../using/configure.rst:153
msgid "``no``: don't run ensurepip;"
msgstr "``no``: ensurepip を実行しない;"

#: ../../using/configure.rst:159
msgid "Performance options"
msgstr "パフォーマンスに関するオプション"

#: ../../using/configure.rst:161
msgid ""
"Configuring Python using ``--enable-optimizations --with-lto`` (PGO + LTO) "
"is recommended for best performance."
msgstr ""

#: ../../using/configure.rst:166
msgid ""
"Enable Profile Guided Optimization (PGO) using :envvar:`PROFILE_TASK` "
"(disabled by default)."
msgstr ""
":envvar:`PROFILE_TASK` を使用して Profile Guided Optimization (PGO) を有効に"
"します(デフォルトでは無効です)。"

#: ../../using/configure.rst:169
msgid ""
"The C compiler Clang requires ``llvm-profdata`` program for PGO. On macOS, "
"GCC also requires it: GCC is just an alias to Clang on macOS."
msgstr ""
"Cコンパイラの Clang では、 PGO のために ``llvm-profdata`` プログラムが必要で"
"す。macOS では、 GCC もこれを必要とします: GCC は macOS の Clang のエイリアス"
"にすぎません。"

#: ../../using/configure.rst:172
msgid ""
"Disable also semantic interposition in libpython if ``--enable-shared`` and "
"GCC is used: add ``-fno-semantic-interposition`` to the compiler and linker "
"flags."
msgstr ""

#: ../../using/configure.rst:178
msgid "Use ``-fno-semantic-interposition`` on GCC."
msgstr "GCC で ``-fno-semantic-interposition`` を使用する。"

#: ../../using/configure.rst:183
msgid ""
"Environment variable used in the Makefile: Python command line arguments for "
"the PGO generation task."
msgstr ""

#: ../../using/configure.rst:186
msgid "Default: ``-m test --pgo --timeout=$(TESTTIMEOUT)``."
msgstr "デフォルト: ``-m test --pgo --timeout=$(TESTTIMEOUT)``"

#: ../../using/configure.rst:192
msgid "Enable Link Time Optimization (LTO) in any build (disabled by default)."
msgstr ""

#: ../../using/configure.rst:194
msgid ""
"The C compiler Clang requires ``llvm-ar`` for LTO (``ar`` on macOS), as well "
"as an LTO-aware linker (``ld.gold`` or ``lld``)."
msgstr ""

#: ../../using/configure.rst:201
msgid ""
"Enable computed gotos in evaluation loop (enabled by default on supported "
"compilers)."
msgstr ""

#: ../../using/configure.rst:206
msgid ""
"Disable the specialized Python memory allocator :ref:`pymalloc <pymalloc>` "
"(enabled by default)."
msgstr ""

#: ../../using/configure.rst:209
msgid "See also :envvar:`PYTHONMALLOC` environment variable."
msgstr ""

#: ../../using/configure.rst:213
msgid ""
"Disable static documentation strings to reduce the memory footprint (enabled "
"by default). Documentation strings defined in Python are not affected."
msgstr ""

#: ../../using/configure.rst:216
msgid "Don't define the ``WITH_DOC_STRINGS`` macro."
msgstr ""

#: ../../using/configure.rst:218
msgid "See the ``PyDoc_STRVAR()`` macro."
msgstr ""

#: ../../using/configure.rst:222
msgid "Enable C-level code profiling with ``gprof`` (disabled by default)."
msgstr ""

#: ../../using/configure.rst:228
msgid "Python Debug Build"
msgstr ""

#: ../../using/configure.rst:230
msgid ""
"A debug build is Python built with the :option:`--with-pydebug` configure "
"option."
msgstr ""

#: ../../using/configure.rst:233
msgid "Effects of a debug build:"
msgstr ""

#: ../../using/configure.rst:235
msgid ""
"Display all warnings by default: the list of default warning filters is "
"empty in the :mod:`warnings` module."
msgstr ""

#: ../../using/configure.rst:237
msgid "Add ``d`` to :data:`sys.abiflags`."
msgstr ""

#: ../../using/configure.rst:238
msgid "Add :func:`sys.gettotalrefcount` function."
msgstr ""

#: ../../using/configure.rst:239
msgid "Add :option:`-X showrefcount <-X>` command line option."
msgstr ""

#: ../../using/configure.rst:240
msgid "Add :envvar:`PYTHONTHREADDEBUG` environment variable."
msgstr ""

#: ../../using/configure.rst:241
msgid ""
"Add support for the ``__ltrace__`` variable: enable low-level tracing in the "
"bytecode evaluation loop if the variable is defined."
msgstr ""

#: ../../using/configure.rst:243
msgid ""
"Install :ref:`debug hooks on memory allocators <default-memory-allocators>` "
"to detect buffer overflow and other memory errors."
msgstr ""

#: ../../using/configure.rst:245
msgid "Define ``Py_DEBUG`` and ``Py_REF_DEBUG`` macros."
msgstr ""

#: ../../using/configure.rst:246
msgid ""
"Add runtime checks: code surroundeded by ``#ifdef Py_DEBUG`` and ``#endif``. "
"Enable ``assert(...)`` and ``_PyObject_ASSERT(...)`` assertions: don't set "
"the ``NDEBUG`` macro (see also the :option:`--with-assertions` configure "
"option). Main runtime checks:"
msgstr ""

#: ../../using/configure.rst:251
msgid "Add sanity checks on the function arguments."
msgstr ""

#: ../../using/configure.rst:252
msgid ""
"Unicode and int objects are created with their memory filled with a pattern "
"to detect usage of uninitialized objects."
msgstr ""

#: ../../using/configure.rst:254
msgid ""
"Ensure that functions which can clear or replace the current exception are "
"not called with an exception raised."
msgstr ""

#: ../../using/configure.rst:256
msgid ""
"The garbage collector (:func:`gc.collect` function) runs some basic checks "
"on objects consistency."
msgstr ""

#: ../../using/configure.rst:258
msgid ""
"The :c:macro:`Py_SAFE_DOWNCAST()` macro checks for integer underflow and "
"overflow when downcasting from wide types to narrow types."
msgstr ""

#: ../../using/configure.rst:261
msgid ""
"See also the :ref:`Python Development Mode <devmode>` and the :option:`--"
"with-trace-refs` configure option."
msgstr ""

#: ../../using/configure.rst:264
msgid ""
"Release builds and debug builds are now ABI compatible: defining the "
"``Py_DEBUG`` macro no longer implies the ``Py_TRACE_REFS`` macro (see the :"
"option:`--with-trace-refs` option), which introduces the only ABI "
"incompatibility."
msgstr ""

#: ../../using/configure.rst:272
msgid "Debug options"
msgstr ""

#: ../../using/configure.rst:276
msgid ""
":ref:`Build Python in debug mode <debug-build>`: define the ``Py_DEBUG`` "
"macro (disabled by default)."
msgstr ""

#: ../../using/configure.rst:281
msgid "Enable tracing references for debugging purpose (disabled by default)."
msgstr ""

#: ../../using/configure.rst:283
msgid "Effects:"
msgstr ""

#: ../../using/configure.rst:285
msgid "Define the ``Py_TRACE_REFS`` macro."
msgstr ""

#: ../../using/configure.rst:286
msgid "Add :func:`sys.getobjects` function."
msgstr ""

#: ../../using/configure.rst:287
msgid "Add :envvar:`PYTHONDUMPREFS` environment variable."
msgstr ""

#: ../../using/configure.rst:289
msgid ""
"This build is not ABI compatible with release build (default build) or debug "
"build (``Py_DEBUG`` and ``Py_REF_DEBUG`` macros)."
msgstr ""

#: ../../using/configure.rst:296
msgid ""
"Build with C assertions enabled (default is no): ``assert(...);`` and "
"``_PyObject_ASSERT(...);``."
msgstr ""

#: ../../using/configure.rst:299
msgid ""
"If set, the ``NDEBUG`` macro is not defined in the :envvar:`OPT` compiler "
"variable."
msgstr ""

#: ../../using/configure.rst:302
msgid ""
"See also the :option:`--with-pydebug` option (:ref:`debug build <debug-"
"build>`) which also enables assertions."
msgstr ""

#: ../../using/configure.rst:309
msgid "Enable Valgrind support (default is no)."
msgstr ""

#: ../../using/configure.rst:313
msgid "Enable DTrace support (default is no)."
msgstr ""

#: ../../using/configure.rst:315
msgid ""
"See :ref:`Instrumenting CPython with DTrace and SystemTap <instrumentation>`."
msgstr ""

#: ../../using/configure.rst:322
msgid ""
"Enable AddressSanitizer memory error detector, ``asan`` (default is no)."
msgstr ""

#: ../../using/configure.rst:328
msgid ""
"Enable MemorySanitizer allocation error detector, ``msan`` (default is no)."
msgstr ""

#: ../../using/configure.rst:334
msgid ""
"Enable UndefinedBehaviorSanitizer undefined behaviour detector, ``ubsan`` "
"(default is no)."
msgstr ""

#: ../../using/configure.rst:341
msgid "Linker options"
msgstr "リンカのオプション"

#: ../../using/configure.rst:345
msgid "Enable building a shared Python library: ``libpython`` (default is no)."
msgstr ""

#: ../../using/configure.rst:349
msgid ""
"Do not build ``libpythonMAJOR.MINOR.a`` and do not install ``python.o`` "
"(built and enabled by default)."
msgstr ""

#: ../../using/configure.rst:356
msgid "Libraries options"
msgstr ""

#: ../../using/configure.rst:360
msgid "Link against additional libraries (default is no)."
msgstr ""

#: ../../using/configure.rst:364
msgid ""
"Build the :mod:`pyexpat` module using an installed ``expat`` library "
"(default is no)."
msgstr ""

#: ../../using/configure.rst:369
msgid ""
"Build the :mod:`_ctypes` extension module using an installed ``ffi`` "
"library, see the :mod:`ctypes` module (default is system-dependent)."
msgstr ""

#: ../../using/configure.rst:374
msgid ""
"Build the ``_decimal`` extension module using an installed ``mpdec`` "
"library, see the :mod:`decimal` module (default is no)."
msgstr ""

#: ../../using/configure.rst:381
msgid "Use ``editline`` library for backend of the :mod:`readline` module."
msgstr ""

#: ../../using/configure.rst:383
msgid "Define the ``WITH_EDITLINE`` macro."
msgstr ""

#: ../../using/configure.rst:389
msgid "Don't build the :mod:`readline` module (built by default)."
msgstr ""

#: ../../using/configure.rst:391
msgid "Don't define the ``HAVE_LIBREADLINE`` macro."
msgstr ""

#: ../../using/configure.rst:397
msgid "Override search for Tcl and Tk include files."
msgstr ""

#: ../../using/configure.rst:401
msgid "Override search for Tcl and Tk libraries."
msgstr ""

#: ../../using/configure.rst:405
msgid ""
"Override ``libm`` math library to *STRING* (default is system-dependent)."
msgstr ""

#: ../../using/configure.rst:409
msgid "Override ``libc`` C library to *STRING* (default is system-dependent)."
msgstr ""

#: ../../using/configure.rst:413
msgid "Root of the OpenSSL directory."
msgstr ""

#: ../../using/configure.rst:419
msgid "Set runtime library directory (rpath) for OpenSSL libraries:"
msgstr ""

#: ../../using/configure.rst:421
msgid "``no`` (default): don't set rpath;"
msgstr ""

#: ../../using/configure.rst:422
msgid ""
"``auto``: auto-detect rpath from :option:`--with-openssl` and ``pkg-config``;"
msgstr ""

#: ../../using/configure.rst:424
msgid "*DIR*: set an explicit rpath."
msgstr ""

#: ../../using/configure.rst:430
msgid "Security Options"
msgstr ""

#: ../../using/configure.rst:434
msgid "Select hash algorithm for use in ``Python/pyhash.c``:"
msgstr ""

#: ../../using/configure.rst:436
msgid "``siphash24`` (default)."
msgstr ""

#: ../../using/configure.rst:437
msgid "``fnv``;"
msgstr ""

#: ../../using/configure.rst:443
msgid "Built-in hash modules:"
msgstr ""

#: ../../using/configure.rst:445
msgid "``md5``;"
msgstr ""

#: ../../using/configure.rst:446
msgid "``sha1``;"
msgstr ""

#: ../../using/configure.rst:447
msgid "``sha256``;"
msgstr ""

#: ../../using/configure.rst:448
msgid "``sha512``;"
msgstr "``sha512``;"

#: ../../using/configure.rst:449
msgid "``sha3`` (with shake);"
msgstr ""

#: ../../using/configure.rst:450
msgid "``blake2``."
msgstr ""

#: ../../using/configure.rst:456
msgid "Override the OpenSSL default cipher suites string:"
msgstr ""

#: ../../using/configure.rst:458
msgid "``python`` (default): use Python's preferred selection;"
msgstr ""

#: ../../using/configure.rst:459
msgid "``openssl``: leave OpenSSL's defaults untouched;"
msgstr ""

#: ../../using/configure.rst:460
msgid "*STRING*: use a custom string"
msgstr ""

#: ../../using/configure.rst:462
msgid "See the :mod:`ssl` module."
msgstr ""

#: ../../using/configure.rst:468
msgid ""
"The settings ``python`` and *STRING* also set TLS 1.2 as minimum protocol "
"version."
msgstr ""

#: ../../using/configure.rst:472
msgid "macOS Options"
msgstr "macOS のオプション"

#: ../../using/configure.rst:474
msgid "See ``Mac/README.rst``."
msgstr ""

#: ../../using/configure.rst:479
msgid ""
"Create a universal binary build. *SDKDIR* specifies which macOS SDK should "
"be used to perform the build (default is no)."
msgstr ""
"ユニバーサルバイナリビルドを作成します。 *SDKDIR* はビルドの実行にどの macOS "
"SDK が使用されるべきかを指定します (デフォルトでは指定しません) 。"

#: ../../using/configure.rst:485
msgid ""
"Create a Python.framework rather than a traditional Unix install. Optional "
"*INSTALLDIR* specifies the installation path (default is no)."
msgstr ""
"従来の Unix インストールではなく、 Python.framework を作成します。オプション"
"の *INSTALLDIR* はインストール先のパスを指定します (デフォルトでは指定しませ"
"ん) 。"

#: ../../using/configure.rst:490
msgid ""
"Specify the kind of universal binary that should be created. This option is "
"only valid when :option:`--enable-universalsdk` is set."
msgstr ""
"作成するユニバーサルバイナリの種類を指定します。このオプションは、 :option:"
"`--enable-universalsdk` が指定された場合のみ有効です。"

#: ../../using/configure.rst:493
msgid "Options:"
msgstr "オプション:"

#: ../../using/configure.rst:495
msgid "``universal2``;"
msgstr "``universal2``;"

#: ../../using/configure.rst:496
msgid "``32-bit``;"
msgstr "``32-bit``;"

#: ../../using/configure.rst:497
msgid "``64-bit``;"
msgstr "``64-bit``;"

#: ../../using/configure.rst:498
msgid "``3-way``;"
msgstr "``3-way``;"

#: ../../using/configure.rst:499
msgid "``intel``;"
msgstr "``intel``;"

#: ../../using/configure.rst:500
msgid "``intel-32``;"
msgstr "``intel-32``;"

#: ../../using/configure.rst:501
msgid "``intel-64``;"
msgstr "``intel-64``;"

#: ../../using/configure.rst:502
msgid "``all``."
msgstr "``all``。"

#: ../../using/configure.rst:506
msgid ""
"Specify the name for the python framework on macOS only valid when :option:"
"`--enable-framework` is set (default: ``Python``)."
msgstr ""
"macOS の Python フレームワークの名前を指定します。 :option:`--enable-"
"framework` が指定された場合のみ有効です (デフォルトでは ``Python``) 。"

#: ../../using/configure.rst:511
msgid "Python Build System"
msgstr "Python ビルドシステム"

#: ../../using/configure.rst:514
msgid "Main files of the build system"
msgstr "ビルドシステムの主要なファイル"

#: ../../using/configure.rst:516
msgid ":file:`configure.ac` => :file:`configure`;"
msgstr ":file:`configure.ac` => :file:`configure`;"

#: ../../using/configure.rst:517
msgid ""
":file:`Makefile.pre.in` => :file:`Makefile` (created by :file:`configure`);"
msgstr ""
":file:`Makefile.pre.in` => :file:`Makefile` (:file:`configure` により作成され"
"ます);"

#: ../../using/configure.rst:518
msgid ":file:`pyconfig.h` (created by :file:`configure`);"
msgstr ":file:`pyconfig.h` (:file:`configure` により作成されます);"

#: ../../using/configure.rst:519
msgid ""
":file:`Modules/Setup`: C extensions built by the Makefile using :file:"
"`Module/makesetup` shell script;"
msgstr ""
":file:`Modules/Setup`: :file:`Module/makesetup` シェルスクリプトを使用して "
"Makefile がビルドする C 拡張。"

#: ../../using/configure.rst:521
msgid ":file:`setup.py`: C extensions built using the :mod:`distutils` module."
msgstr ""

#: ../../using/configure.rst:524
msgid "Main build steps"
msgstr "主要なビルドステップ"

#: ../../using/configure.rst:526
msgid "C files (``.c``) are built as object files (``.o``)."
msgstr ""

#: ../../using/configure.rst:527
msgid "A static ``libpython`` library (``.a``) is created from objects files."
msgstr ""

#: ../../using/configure.rst:528
msgid ""
"``python.o`` and the static ``libpython`` library are linked into the final "
"``python`` program."
msgstr ""

#: ../../using/configure.rst:530
msgid ""
"C extensions are built by the Makefile (see :file:`Modules/Setup`) and "
"``python setup.py build``."
msgstr ""

#: ../../using/configure.rst:534
msgid "Main Makefile targets"
msgstr ""

#: ../../using/configure.rst:536
msgid "``make``: Build Python with the standard library."
msgstr ""

#: ../../using/configure.rst:537
msgid ""
"``make platform:``: build the ``python`` program, but don't build the "
"standard library extension modules."
msgstr ""

#: ../../using/configure.rst:539
msgid ""
"``make profile-opt``: build Python using Profile Guided Optimization (PGO). "
"You can use the configure :option:`--enable-optimizations` option to make "
"this the default target of the ``make`` command (``make all`` or just "
"``make``)."
msgstr ""

#: ../../using/configure.rst:543
msgid ""
"``make buildbottest``: Build Python and run the Python test suite, the same "
"way than buildbots test Python. Set ``TESTTIMEOUT`` variable (in seconds) to "
"change the test timeout (1200 by default: 20 minutes)."
msgstr ""

#: ../../using/configure.rst:546
msgid "``make install``: Build and install Python."
msgstr ""

#: ../../using/configure.rst:547
msgid ""
"``make regen-all``: Regenerate (almost) all generated files; ``make regen-"
"stdlib-module-names`` and ``autoconf`` must be run separately for the "
"remaining generated files."
msgstr ""

#: ../../using/configure.rst:550
msgid "``make clean``: Remove built files."
msgstr ""

#: ../../using/configure.rst:551
msgid ""
"``make distclean``: Same than ``make clean``, but remove also files created "
"by the configure script."
msgstr ""

#: ../../using/configure.rst:555
msgid "C extensions"
msgstr ""

#: ../../using/configure.rst:557
msgid ""
"Some C extensions are built as built-in modules, like the ``sys`` module. "
"They are built with the ``Py_BUILD_CORE_BUILTIN`` macro defined. Built-in "
"modules have no ``__file__`` attribute::"
msgstr ""

#: ../../using/configure.rst:569
msgid ""
"Other C extensins are built as dynamic libraries, like the ``_asyncio`` "
"module. They are built with the ``Py_BUILD_CORE_MODULE`` macro defined. "
"Example on Linux x86-64::"
msgstr ""

#: ../../using/configure.rst:579
msgid ""
":file:`Modules/Setup` is used to generate Makefile targets to build C "
"extensions. At the beginning of the files, C extensions are built as built-"
"in modules. Extensions defined after the ``*shared*`` marker are built as "
"dynamic libraries."
msgstr ""

#: ../../using/configure.rst:583
msgid ""
"The :file:`setup.py` script only builds C extensions as shared libraries "
"using the :mod:`distutils` module."
msgstr ""

#: ../../using/configure.rst:586
msgid ""
"The :c:macro:`PyAPI_FUNC()`, :c:macro:`PyAPI_API()` and :c:macro:"
"`PyMODINIT_FUNC()` macros of :file:`Include/pyport.h` are defined "
"differently depending if the ``Py_BUILD_CORE_MODULE`` macro is defined:"
msgstr ""

#: ../../using/configure.rst:590
msgid "Use ``Py_EXPORTED_SYMBOL`` if the ``Py_BUILD_CORE_MODULE`` is defined"
msgstr ""

#: ../../using/configure.rst:591
msgid "Use ``Py_IMPORTED_SYMBOL`` otherwise."
msgstr ""

#: ../../using/configure.rst:593
msgid ""
"If the ``Py_BUILD_CORE_BUILTIN`` macro is used by mistake on a C extension "
"built as a shared library, its ``PyInit_xxx()`` function is not exported, "
"causing an :exc:`ImportError` on import."
msgstr ""

#: ../../using/configure.rst:599
msgid "Compiler and linker flags"
msgstr ""

#: ../../using/configure.rst:601
msgid ""
"Options set by the ``./configure`` script and environment variables and used "
"by ``Makefile``."
msgstr ""

#: ../../using/configure.rst:605
msgid "Preprocessor flags"
msgstr ""

#: ../../using/configure.rst:609
msgid ""
"Value of :envvar:`CPPFLAGS` variable passed to the ``./configure`` script."
msgstr ""

#: ../../using/configure.rst:615
msgid ""
"(Objective) C/C++ preprocessor flags, e.g. ``-I<include dir>`` if you have "
"headers in a nonstandard directory ``<include dir>``."
msgstr ""

#: ../../using/configure.rst:618 ../../using/configure.rst:813
msgid ""
"Both :envvar:`CPPFLAGS` and :envvar:`LDFLAGS` need to contain the shell's "
"value for setup.py to be able to build extension modules using the "
"directories specified in the environment variables."
msgstr ""

#: ../../using/configure.rst:628
msgid ""
"Extra preprocessor flags added for building the interpreter object files."
msgstr ""

#: ../../using/configure.rst:630
msgid ""
"Default: ``$(BASECPPFLAGS) -I. -I$(srcdir)/Include $(CONFIGURE_CPPFLAGS) "
"$(CPPFLAGS)``."
msgstr ""

#: ../../using/configure.rst:635
msgid "Compiler flags"
msgstr ""

#: ../../using/configure.rst:639
msgid "C compiler command."
msgstr "C コンパイラのコマンド。"

#: ../../using/configure.rst:641
msgid "Example: ``gcc -pthread``."
msgstr ""

#: ../../using/configure.rst:645
msgid ""
"C compiler command used to build the ``main()`` function of programs like "
"``python``."
msgstr ""

#: ../../using/configure.rst:648
msgid ""
"Variable set by the :option:`--with-cxx-main` option of the configure script."
msgstr ""

#: ../../using/configure.rst:651
msgid "Default: ``$(CC)``."
msgstr ""

#: ../../using/configure.rst:655
msgid "C++ compiler command."
msgstr ""

#: ../../using/configure.rst:657
msgid "Used if the :option:`--with-cxx-main` option is used."
msgstr ""

#: ../../using/configure.rst:659
msgid "Example: ``g++ -pthread``."
msgstr ""

#: ../../using/configure.rst:663
msgid "C compiler flags."
msgstr "C コンパイラのフラグ。"

#: ../../using/configure.rst:667
msgid ""
":envvar:`CFLAGS_NODIST` is used for building the interpreter and stdlib C "
"extensions.  Use it when a compiler flag should *not* be part of the "
"distutils :envvar:`CFLAGS` once Python is installed (:issue:`21121`)."
msgstr ""

#: ../../using/configure.rst:671
msgid "In particular, :envvar:`CFLAGS` should not contain:"
msgstr ""

#: ../../using/configure.rst:673
msgid ""
"the compiler flag ``-I`` (for setting the search path for include files). "
"The ``-I`` flags are processed from left to right, and any flags in :envvar:"
"`CFLAGS` would take precedence over user- and package-supplied ``-I`` flags."
msgstr ""

#: ../../using/configure.rst:678
msgid ""
"hardening flags such as ``-Werror`` because distributions cannot control "
"whether packages installed by users conform to such heightened standards."
msgstr ""

#: ../../using/configure.rst:686
msgid "Extra C compiler flags."
msgstr ""

#: ../../using/configure.rst:690
msgid ""
"Value of :envvar:`CFLAGS` variable passed to the ``./configure`` script."
msgstr ""

#: ../../using/configure.rst:697
msgid ""
"Value of :envvar:`CFLAGS_NODIST` variable passed to the ``./configure`` "
"script."
msgstr ""

#: ../../using/configure.rst:704
msgid "Base compiler flags."
msgstr ""

#: ../../using/configure.rst:708
msgid "Optimization flags."
msgstr ""

#: ../../using/configure.rst:712
msgid "Strict or non-strict aliasing flags used to compile ``Python/dtoa.c``."
msgstr ""

#: ../../using/configure.rst:718
msgid "Compiler flags used to build a shared library."
msgstr ""

#: ../../using/configure.rst:720
msgid "For example, ``-fPIC`` is used on Linux and on BSD."
msgstr ""

#: ../../using/configure.rst:724
msgid "Extra C flags added for building the interpreter object files."
msgstr ""

#: ../../using/configure.rst:726
msgid ""
"Default: ``$(CCSHARED)`` when :option:`--enable-shared` is used, or an empty "
"string otherwise."
msgstr ""

#: ../../using/configure.rst:731
msgid ""
"Default: ``$(BASECFLAGS) $(OPT) $(CONFIGURE_CFLAGS) $(CFLAGS) "
"$(EXTRA_CFLAGS)``."
msgstr ""

#: ../../using/configure.rst:735
msgid ""
"Default: ``$(CONFIGURE_CFLAGS_NODIST) $(CFLAGS_NODIST) -I$(srcdir)/Include/"
"internal``."
msgstr ""

#: ../../using/configure.rst:741
msgid "C flags used for building the interpreter object files."
msgstr ""

#: ../../using/configure.rst:743
msgid ""
"Default: ``$(PY_CFLAGS) $(PY_CFLAGS_NODIST) $(PY_CPPFLAGS) "
"$(CFLAGSFORSHARED)``."
msgstr ""

#: ../../using/configure.rst:749
msgid "Default: ``$(PY_STDMODULE_CFLAGS) -DPy_BUILD_CORE``."
msgstr ""

#: ../../using/configure.rst:755
msgid ""
"Compiler flags to build a standard library extension module as a built-in "
"module, like the :mod:`posix` module."
msgstr ""

#: ../../using/configure.rst:758
msgid "Default: ``$(PY_STDMODULE_CFLAGS) -DPy_BUILD_CORE_BUILTIN``."
msgstr ""

#: ../../using/configure.rst:764
msgid "Purify command. Purify is a memory debugger program."
msgstr ""

#: ../../using/configure.rst:766
msgid "Default: empty string (not used)."
msgstr ""

#: ../../using/configure.rst:770
msgid "Linker flags"
msgstr ""

#: ../../using/configure.rst:774
msgid ""
"Linker command used to build programs like ``python`` and ``_testembed``."
msgstr ""

#: ../../using/configure.rst:776
msgid "Default: ``$(PURIFY) $(MAINCC)``."
msgstr ""

#: ../../using/configure.rst:780
msgid ""
"Value of :envvar:`LDFLAGS` variable passed to the ``./configure`` script."
msgstr ""

#: ../../using/configure.rst:782
msgid ""
"Avoid assigning :envvar:`CFLAGS`, :envvar:`LDFLAGS`, etc. so users can use "
"them on the command line to append to these values without stomping the pre-"
"set values."
msgstr ""

#: ../../using/configure.rst:790
msgid ""
":envvar:`LDFLAGS_NODIST` is used in the same manner as :envvar:"
"`CFLAGS_NODIST`.  Use it when a linker flag should *not* be part of the "
"distutils :envvar:`LDFLAGS` once Python is installed (:issue:`35257`)."
msgstr ""

#: ../../using/configure.rst:794
msgid "In particular, :envvar:`LDFLAGS` should not contain:"
msgstr ""

#: ../../using/configure.rst:796
msgid ""
"the compiler flag ``-L`` (for setting the search path for libraries). The ``-"
"L`` flags are processed from left to right, and any flags in :envvar:"
"`LDFLAGS` would take precedence over user- and package-supplied ``-L`` flags."
msgstr ""

#: ../../using/configure.rst:803
msgid ""
"Value of :envvar:`LDFLAGS_NODIST` variable passed to the ``./configure`` "
"script."
msgstr ""

#: ../../using/configure.rst:810
msgid ""
"Linker flags, e.g. ``-L<lib dir>`` if you have libraries in a nonstandard "
"directory ``<lib dir>``."
msgstr ""

#: ../../using/configure.rst:819
msgid ""
"Linker flags to pass libraries to the linker when linking the Python "
"executable."
msgstr ""

#: ../../using/configure.rst:822
msgid "Example: ``-lrt``."
msgstr ""

#: ../../using/configure.rst:826
msgid "Command to build a shared library."
msgstr ""

#: ../../using/configure.rst:828
msgid "Default: ``@LDSHARED@ $(PY_LDFLAGS)``."
msgstr ""

#: ../../using/configure.rst:832
msgid "Command to build ``libpython`` shared library."
msgstr ""

#: ../../using/configure.rst:834
msgid "Default: ``@BLDSHARED@ $(PY_CORE_LDFLAGS)``."
msgstr ""

#: ../../using/configure.rst:838
msgid "Default: ``$(CONFIGURE_LDFLAGS) $(LDFLAGS)``."
msgstr ""

#: ../../using/configure.rst:842
msgid "Default: ``$(CONFIGURE_LDFLAGS_NODIST) $(LDFLAGS_NODIST)``."
msgstr ""

#: ../../using/configure.rst:848
msgid "Linker flags used for building the interpreter object files."
msgstr ""
