# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# Rafael Fontenelle <rffontenelle@gmail.com>, 2025
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.13\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-07-25 15:00+0000\n"
"PO-Revision-Date: 2025-07-18 19:22+0000\n"
"Last-Translator: Rafael Fontenelle <rffontenelle@gmail.com>, 2025\n"
"Language-Team: Korean (https://app.transifex.com/python-doc/teams/5390/ko/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ko\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../reference/introduction.rst:6
msgid "Introduction"
msgstr "소개"

#: ../../reference/introduction.rst:8
msgid ""
"This reference manual describes the Python programming language. It is not "
"intended as a tutorial."
msgstr ""
"Цей довідковий посібник описує мову програмування Python. Він не призначений "
"як підручник."

#: ../../reference/introduction.rst:11
msgid ""
"While I am trying to be as precise as possible, I chose to use English "
"rather than formal specifications for everything except syntax and lexical "
"analysis. This should make the document more understandable to the average "
"reader, but will leave room for ambiguities. Consequently, if you were "
"coming from Mars and tried to re-implement Python from this document alone, "
"you might have to guess things and in fact you would probably end up "
"implementing quite a different language. On the other hand, if you are using "
"Python and wonder what the precise rules about a particular area of the "
"language are, you should definitely be able to find them here. If you would "
"like to see a more formal definition of the language, maybe you could "
"volunteer your time --- or invent a cloning machine :-)."
msgstr ""
"Хоча я намагаюся бути максимально точним, я вирішив використовувати "
"англійську, а не формальні специфікації для всього, крім синтаксису та "
"лексичного аналізу. Це повинно зробити документ більш зрозумілим для "
"пересічного читача, але залишить місце для неоднозначностей. Отже, якби ви "
"прилетіли з Марса й спробували повторно впровадити Python лише з цього "
"документу, вам, можливо, доведеться щось здогадуватися, і насправді ви, "
"ймовірно, закінчили б впровадженням зовсім іншої мови. З іншого боку, якщо "
"ви використовуєте Python і вам цікаво, якими є точні правила щодо певної "
"області мови, ви точно зможете знайти їх тут. Якщо ви бажаєте побачити більш "
"формальне визначення мови, можливо, ви можете приділити свій час --- або "
"винайти машину для клонування :-)."

#: ../../reference/introduction.rst:23
msgid ""
"It is dangerous to add too many implementation details to a language "
"reference document --- the implementation may change, and other "
"implementations of the same language may work differently.  On the other "
"hand, CPython is the one Python implementation in widespread use (although "
"alternate implementations continue to gain support), and its particular "
"quirks are sometimes worth being mentioned, especially where the "
"implementation imposes additional limitations. Therefore, you'll find short "
"\"implementation notes\" sprinkled throughout the text."
msgstr ""
"Небезпечно додавати забагато деталей реалізації до довідкового документа про "
"мову -- реалізація може змінитися, а інші реалізації тієї самої мови можуть "
"працювати по-різному. З іншого боку, CPython є єдиною реалізацією Python, "
"яка широко використовується (хоча альтернативні реалізації продовжують "
"отримувати підтримку), і іноді варто згадати його особливості, особливо якщо "
"реалізація накладає додаткові обмеження. Таким чином, ви знайдете короткі "
"\"нотатки щодо реалізації\", розкидані по всьому тексту."

#: ../../reference/introduction.rst:32
msgid ""
"Every Python implementation comes with a number of built-in and standard "
"modules.  These are documented in :ref:`library-index`.  A few built-in "
"modules are mentioned when they interact in a significant way with the "
"language definition."
msgstr ""
"Кожна реалізація Python має низку вбудованих і стандартних модулів. Вони "
"задокументовані в :ref:`library-index`. Кілька вбудованих модулів "
"згадуються, коли вони суттєво взаємодіють із визначенням мови."

#: ../../reference/introduction.rst:41
msgid "Alternate Implementations"
msgstr "Implementasi Alternatif"

#: ../../reference/introduction.rst:43
msgid ""
"Though there is one Python implementation which is by far the most popular, "
"there are some alternate implementations which are of particular interest to "
"different audiences."
msgstr ""
"Хоча існує одна реалізація Python, яка на сьогоднішній день є "
"найпопулярнішою, є кілька альтернативних реалізацій, які становлять "
"особливий інтерес для різних аудиторій."

#: ../../reference/introduction.rst:47
msgid "Known implementations include:"
msgstr "Implementasi yang diketahui meliputi:"

#: ../../reference/introduction.rst:49
msgid "CPython"
msgstr "CPython"

#: ../../reference/introduction.rst:50
msgid ""
"This is the original and most-maintained implementation of Python, written "
"in C. New language features generally appear here first."
msgstr ""
"Це оригінальна і найбільш підтримувана реалізація Python, написана мовою C. "
"Нові функції мови зазвичай з’являються тут першими."

#: ../../reference/introduction.rst:53
msgid "Jython"
msgstr "Jython"

#: ../../reference/introduction.rst:54
msgid ""
"Python implemented in Java.  This implementation can be used as a scripting "
"language for Java applications, or can be used to create applications using "
"the Java class libraries.  It is also often used to create tests for Java "
"libraries. More information can be found at `the Jython website <https://www."
"jython.org/>`_."
msgstr ""
"Python реализован в Java. Эта реализация может использоваться как язык "
"сценариев для приложений Java или может использоваться для создания "
"приложений с использованием библиотек классов Java. Он также часто "
"используется для создания тестов для библиотек Java. Более подробную "
"информацию можно найти на `веб-сайте Jython <https://www.jython.org/>`_."

#: ../../reference/introduction.rst:59
msgid "Python for .NET"
msgstr "Python untuk .NET"

#: ../../reference/introduction.rst:60
msgid ""
"This implementation actually uses the CPython implementation, but is a "
"managed .NET application and makes .NET libraries available.  It was created "
"by Brian Lloyd.  For more information, see the `Python for .NET home page "
"<https://pythonnet.github.io/>`_."
msgstr ""
"Ця реалізація фактично використовує реалізацію CPython, але є керованою "
"програмою .NET і робить доступними бібліотеки .NET. Його створив Браян "
"Ллойд. Щоб отримати додаткові відомості, перегляньте `домашню сторінку "
"Python для .NET <https://pythonnet.github.io/>`_."

#: ../../reference/introduction.rst:65
msgid "IronPython"
msgstr "IronPython"

#: ../../reference/introduction.rst:66
msgid ""
"An alternate Python for .NET.  Unlike Python.NET, this is a complete Python "
"implementation that generates IL, and compiles Python code directly to .NET "
"assemblies.  It was created by Jim Hugunin, the original creator of Jython.  "
"For more information, see `the IronPython website <https://ironpython.net/"
">`_."
msgstr ""
"Альтернативный Python для .NET. В отличие от Python.NET - это полная "
"реализация на Python, которая генерирует IL и компилирует код на Python "
"непосредственно в сборки .NET. Она была создана Джимом Хугунином, "
"первоначальным создателем Jython. Для получения дополнительной информации "
"смотрите `веб-сайт IronPython <https://ironpython.net/>`_."

#: ../../reference/introduction.rst:71
msgid "PyPy"
msgstr "PyPy"

#: ../../reference/introduction.rst:72
msgid ""
"An implementation of Python written completely in Python. It supports "
"several advanced features not found in other implementations like stackless "
"support and a Just in Time compiler. One of the goals of the project is to "
"encourage experimentation with the language itself by making it easier to "
"modify the interpreter (since it is written in Python).  Additional "
"information is available on `the PyPy project's home page <https://pypy.org/"
">`_."
msgstr ""
"Реализация Python, полностью написанная на Python. Он поддерживает несколько "
"расширенных функций, отсутствующих в других реализациях, таких как поддержка "
"стека и компилятор Just in Time. Одна из целей проекта — стимулировать "
"экспериментирование с самим языком, упрощая модификацию интерпретатора "
"(поскольку он написан на Python). Дополнительную информацию можно найти на "
"`домашней странице проекта PyPy <https://pypy.org/>`_."

#: ../../reference/introduction.rst:79
msgid ""
"Each of these implementations varies in some way from the language as "
"documented in this manual, or introduces specific information beyond what's "
"covered in the standard Python documentation.  Please refer to the "
"implementation-specific documentation to determine what else you need to "
"know about the specific implementation you're using."
msgstr ""
"Кожна з цих реалізацій певним чином відрізняється від мови, задокументованої "
"в цьому посібнику, або вводить певну інформацію, окрім того, що описано в "
"стандартній документації Python. Зверніться до документації щодо реалізації, "
"щоб визначити, що ще вам потрібно знати про конкретну реалізацію, яку ви "
"використовуєте."

#: ../../reference/introduction.rst:89
msgid "Notation"
msgstr "Notasi"

#: ../../reference/introduction.rst:93
msgid ""
"The descriptions of lexical analysis and syntax use a modified `Backus–Naur "
"form (BNF) <https://en.wikipedia.org/wiki/Backus%E2%80%93Naur_form>`_ "
"grammar notation.  This uses the following style of definition:"
msgstr ""

#: ../../reference/introduction.rst:101
msgid ""
"The first line says that a ``name`` is an ``lc_letter`` followed by a "
"sequence of zero or more ``lc_letter``\\ s and underscores.  An "
"``lc_letter`` in turn is any of the single characters ``'a'`` through "
"``'z'``.  (This rule is actually adhered to for the names defined in lexical "
"and grammar rules in this document.)"
msgstr ""

#: ../../reference/introduction.rst:106
msgid ""
"Each rule begins with a name (which is the name defined by the rule) and ``::"
"=``.  A vertical bar (``|``) is used to separate alternatives; it is the "
"least binding operator in this notation.  A star (``*``) means zero or more "
"repetitions of the preceding item; likewise, a plus (``+``) means one or "
"more repetitions, and a phrase enclosed in square brackets (``[ ]``) means "
"zero or one occurrences (in other words, the enclosed phrase is optional).  "
"The ``*`` and ``+`` operators bind as tightly as possible; parentheses are "
"used for grouping.  Literal strings are enclosed in quotes.  White space is "
"only meaningful to separate tokens. Rules are normally contained on a single "
"line; rules with many alternatives may be formatted alternatively with each "
"line after the first beginning with a vertical bar."
msgstr ""

#: ../../reference/introduction.rst:120
msgid ""
"In lexical definitions (as the example above), two more conventions are "
"used: Two literal characters separated by three dots mean a choice of any "
"single character in the given (inclusive) range of ASCII characters.  A "
"phrase between angular brackets (``<...>``) gives an informal description of "
"the symbol defined; e.g., this could be used to describe the notion of "
"'control character' if needed."
msgstr ""

#: ../../reference/introduction.rst:127
msgid ""
"Even though the notation used is almost the same, there is a big difference "
"between the meaning of lexical and syntactic definitions: a lexical "
"definition operates on the individual characters of the input source, while "
"a syntax definition operates on the stream of tokens generated by the "
"lexical analysis. All uses of BNF in the next chapter (\"Lexical Analysis\") "
"are lexical definitions; uses in subsequent chapters are syntactic "
"definitions."
msgstr ""

#: ../../reference/introduction.rst:91
msgid "BNF"
msgstr "BNF"

#: ../../reference/introduction.rst:91
msgid "grammar"
msgstr "грамматика"

#: ../../reference/introduction.rst:91
msgid "syntax"
msgstr "синтаксис"

#: ../../reference/introduction.rst:91
msgid "notation"
msgstr "нотация"

#: ../../reference/introduction.rst:118
msgid "lexical definitions"
msgstr "лексические определения"

#: ../../reference/introduction.rst:118
msgid "ASCII"
msgstr "ASCII"
