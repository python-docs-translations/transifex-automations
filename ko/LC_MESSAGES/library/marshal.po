# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# Rafael Fontenelle <rffontenelle@gmail.com>, 2025
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.13\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-07-25 15:00+0000\n"
"PO-Revision-Date: 2025-07-18 19:22+0000\n"
"Last-Translator: Rafael Fontenelle <rffontenelle@gmail.com>, 2025\n"
"Language-Team: Korean (https://app.transifex.com/python-doc/teams/5390/ko/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ko\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../library/marshal.rst:2
msgid ":mod:`!marshal` --- Internal Python object serialization"
msgstr ":mod:`!marshal` --- Внутренняя сериализация объектов Python"

#: ../../library/marshal.rst:10
msgid ""
"This module contains functions that can read and write Python values in a "
"binary format.  The format is specific to Python, but independent of machine "
"architecture issues (e.g., you can write a Python value to a file on a PC, "
"transport the file to a Mac, and read it back there).  Details of the format "
"are undocumented on purpose; it may change between Python versions (although "
"it rarely does). [#]_"
msgstr ""
"Этот модуль содержит функции, которые могут читать и записывать значения "
"Python в двоичном формате. Формат специфичен для Python, но не зависит от "
"проблем машинной архитектуры (например, вы можете записать значение Python в "
"файл на ПК, перенести файл на Mac и прочитать его там). Детали формата "
"намеренно недокументированы; оно может меняться в разных версиях Python "
"(хотя это случается редко). [#]_"

#: ../../library/marshal.rst:21
msgid ""
"This is not a general \"persistence\" module.  For general persistence and "
"transfer of Python objects through RPC calls, see the modules :mod:`pickle` "
"and :mod:`shelve`.  The :mod:`marshal` module exists mainly to support "
"reading and writing the \"pseudo-compiled\" code for Python modules of :file:"
"`.pyc` files. Therefore, the Python maintainers reserve the right to modify "
"the marshal format in backward incompatible ways should the need arise. The "
"format of code objects is not compatible between Python versions, even if "
"the version of the format is the same. De-serializing a code object in the "
"incorrect Python version has undefined behavior. If you're serializing and "
"de-serializing Python objects, use the :mod:`pickle` module instead -- the "
"performance is comparable, version independence is guaranteed, and pickle "
"supports a substantially wider range of objects than marshal."
msgstr ""
"Это не общий модуль «постоянства». Общие сведения о сохранении и передаче "
"объектов Python посредством вызовов RPC см. в модулях :mod:`pickle` и :mod:"
"`shelve`. Модуль :mod:`marshal` существует главным образом для поддержки "
"чтения и записи «псевдоскомпилированного» кода для модулей Python файлов :"
"file:`.pyc`. Поэтому сопровождающие Python оставляют за собой право изменять "
"формат маршала обратно несовместимыми способами, если возникнет такая "
"необходимость. Формат объектов кода несовместим между версиями Python, даже "
"если версия формата одинакова. Десериализация объекта кода в неправильной "
"версии Python имеет неопределенное поведение. Если вы сериализуете и "
"десериализуете объекты Python, используйте вместо этого модуль :mod:`pickle` "
"— производительность сопоставима, независимость версий гарантирована, а "
"Pickle поддерживает значительно более широкий диапазон объектов, чем Marshal."

#: ../../library/marshal.rst:37
msgid ""
"The :mod:`marshal` module is not intended to be secure against erroneous or "
"maliciously constructed data.  Never unmarshal data received from an "
"untrusted or unauthenticated source."
msgstr ""
"Модуль :mod:`marshal` не призначений для захисту від помилкових або "
"зловмисно створених даних. Ніколи не скасовуйте дані, отримані з ненадійного "
"або неавтентифікованого джерела."

#: ../../library/marshal.rst:43
msgid ""
"Not all Python object types are supported; in general, only objects whose "
"value is independent from a particular invocation of Python can be written "
"and read by this module.  The following types are supported: booleans, "
"integers, floating-point numbers, complex numbers, strings, bytes, "
"bytearrays, tuples, lists, sets, frozensets, dictionaries, and code objects "
"(if *allow_code* is true), where it should be understood that tuples, lists, "
"sets, frozensets and dictionaries are only supported as long as the values "
"contained therein are themselves supported.  The singletons :const:`None`, :"
"const:`Ellipsis` and :exc:`StopIteration` can also be marshalled and "
"unmarshalled. For format *version* lower than 3, recursive lists, sets and "
"dictionaries cannot be written (see below)."
msgstr ""

#: ../../library/marshal.rst:56
msgid ""
"There are functions that read/write files as well as functions operating on "
"bytes-like objects."
msgstr ""
"Існують функції, які читають/записують файли, а також функції, що працюють з "
"байтоподібними об’єктами."

#: ../../library/marshal.rst:59
msgid "The module defines these functions:"
msgstr "Модуль визначає такі функції:"

#: ../../library/marshal.rst:64
msgid ""
"Write the value on the open file.  The value must be a supported type.  The "
"file must be a writeable :term:`binary file`."
msgstr ""
"Запишіть значення у відкритий файл. Значення має бути підтримуваного типу. "
"Файл має бути записуваним :term:`binary file`."

#: ../../library/marshal.rst:67
msgid ""
"If the value has (or contains an object that has) an unsupported type, a :"
"exc:`ValueError` exception is raised --- but garbage data will also be "
"written to the file.  The object will not be properly read back by :func:"
"`load`. :ref:`Code objects <code-objects>` are only supported if "
"*allow_code* is true."
msgstr ""
"Если значение имеет (или содержит объект, который имеет) неподдерживаемый "
"тип, возникает исключение :exc:`ValueError` --- но в файл также будут "
"записаны мусорные данные. Объект не будет правильно прочитан функцией :func:"
"`load`. :ref:`Объекты кода <code-objects>` поддерживаются только в том "
"случае, если *allow_code* имеет значение true."

#: ../../library/marshal.rst:72
msgid ""
"The *version* argument indicates the data format that ``dump`` should use "
"(see below)."
msgstr ""
"Аргумент *version* вказує на формат даних, який має використовувати ``damp`` "
"(див. нижче)."

#: ../../library/marshal.rst:75 ../../library/marshal.rst:115
msgid ""
"Raises an :ref:`auditing event <auditing>` ``marshal.dumps`` with arguments "
"``value``, ``version``."
msgstr ""
"Викликає :ref:`подію аудиту <auditing>` ``marshal.dumps`` з аргументами "
"``значення``, ``версія``."

#: ../../library/marshal.rst:77 ../../library/marshal.rst:101
#: ../../library/marshal.rst:117 ../../library/marshal.rst:135
msgid "Added the *allow_code* parameter."
msgstr "Добавлен параметр *allow_code*."

#: ../../library/marshal.rst:83
msgid ""
"Read one value from the open file and return it.  If no valid value is read "
"(e.g. because the data has a different Python version's incompatible marshal "
"format), raise :exc:`EOFError`, :exc:`ValueError` or :exc:`TypeError`. :ref:"
"`Code objects <code-objects>` are only supported if *allow_code* is true. "
"The file must be a readable :term:`binary file`."
msgstr ""
"Прочитайте одно значение из открытого файла и верните его. Если допустимое "
"значение не считывается (например, потому что данные имеют формат маршала, "
"несовместимый с другой версией Python), вызовите :exc:`EOFError`, :exc:"
"`ValueError` или :exc:`TypeError`. :ref:`Объекты кода <code-objects>` "
"поддерживаются только в том случае, если *allow_code* имеет значение true. "
"Файл должен быть читаемым:term:`двоичным файлом`."

#: ../../library/marshal.rst:89
msgid ""
"Raises an :ref:`auditing event <auditing>` ``marshal.load`` with no "
"arguments."
msgstr ""
"Викликає :ref:`подію аудиту <auditing>` ``marshal.load`` без аргументів."

#: ../../library/marshal.rst:93
msgid ""
"If an object containing an unsupported type was marshalled with :func:"
"`dump`, :func:`load` will substitute ``None`` for the unmarshallable type."
msgstr ""
"Якщо об’єкт, що містить непідтримуваний тип, був маршалований за допомогою :"
"func:`dump`, :func:`load` замінить ``None`` для типу, який не можна "
"маршалювати."

#: ../../library/marshal.rst:98
msgid ""
"This call used to raise a ``code.__new__`` audit event for each code object. "
"Now it raises a single ``marshal.load`` event for the entire load operation."
msgstr ""
"Цей виклик використовувався для виклику події аудиту ``code.__new__`` для "
"кожного об’єкта коду. Тепер він викликає одну подію ``marshal.load`` для "
"всієї операції завантаження."

#: ../../library/marshal.rst:107
msgid ""
"Return the bytes object that would be written to a file by ``dump(value, "
"file)``.  The value must be a supported type.  Raise a :exc:`ValueError` "
"exception if value has (or contains an object that has) an unsupported "
"type. :ref:`Code objects <code-objects>` are only supported if *allow_code* "
"is true."
msgstr ""
"Возвращает объект байтов, который будет записан в файл с помощью "
"``dump(value, file)``. Значение должно быть поддерживаемого типа. Вызовите "
"исключение :exc:`ValueError`, если значение имеет (или содержит объект, "
"который имеет) неподдерживаемый тип. :ref:`Объекты кода <code-objects>` "
"поддерживаются только в том случае, если *allow_code* имеет значение true."

#: ../../library/marshal.rst:112
msgid ""
"The *version* argument indicates the data format that ``dumps`` should use "
"(see below)."
msgstr ""
"Аргумент *version* вказує формат даних, який мають використовувати ``дампи`` "
"(див. нижче)."

#: ../../library/marshal.rst:123
msgid ""
"Convert the :term:`bytes-like object` to a value.  If no valid value is "
"found, raise :exc:`EOFError`, :exc:`ValueError` or :exc:`TypeError`. :ref:"
"`Code objects <code-objects>` are only supported if *allow_code* is true. "
"Extra bytes in the input are ignored."
msgstr ""
"Преобразуйте :term:`байтовый объект` в значение. Если допустимое значение не "
"найдено, вызовите :exc:`EOFError`, :exc:`ValueError` или :exc:`TypeError`. :"
"ref:`Объекты кода <code-objects>` поддерживаются только в том случае, если "
"*allow_code* имеет значение true. Дополнительные байты во входных данных "
"игнорируются."

#: ../../library/marshal.rst:128
msgid ""
"Raises an :ref:`auditing event <auditing>` ``marshal.loads`` with argument "
"``bytes``."
msgstr ""
"Викликає :ref:`подію аудиту <auditing>` ``marshal.loads`` з аргументом "
"``bytes``."

#: ../../library/marshal.rst:132
msgid ""
"This call used to raise a ``code.__new__`` audit event for each code object. "
"Now it raises a single ``marshal.loads`` event for the entire load operation."
msgstr ""
"Цей виклик використовувався для виклику події аудиту ``code.__new__`` для "
"кожного об’єкта коду. Тепер він викликає одну подію ``marshal.loads`` для "
"всієї операції завантаження."

#: ../../library/marshal.rst:139
msgid "In addition, the following constants are defined:"
msgstr "Крім того, визначено такі константи:"

#: ../../library/marshal.rst:143
msgid ""
"Indicates the format that the module uses. Version 0 is the historical "
"format, version 1 shares interned strings and version 2 uses a binary format "
"for floating-point numbers. Version 3 adds support for object instancing and "
"recursion. The current version is 4."
msgstr ""

#: ../../library/marshal.rst:151
msgid "Footnotes"
msgstr "각주"

#: ../../library/marshal.rst:152
msgid ""
"The name of this module stems from a bit of terminology used by the "
"designers of Modula-3 (amongst others), who use the term \"marshalling\" for "
"shipping of data around in a self-contained form. Strictly speaking, \"to "
"marshal\" means to convert some data from internal to external form (in an "
"RPC buffer for instance) and \"unmarshalling\" for the reverse process."
msgstr ""
"Назва цього модуля походить від певної термінології, яка використовується "
"розробниками Modula-3 (серед інших), які використовують термін \"маршалінг\" "
"для доставки даних у автономній формі. Строго кажучи, \"маршалінг\" означає "
"перетворення деяких даних із внутрішньої форми у зовнішню (наприклад, у "
"буфері RPC) і \"демаршалінг\" для зворотного процесу."

#: ../../library/marshal.rst:17
msgid "module"
msgstr "모듈"

#: ../../library/marshal.rst:17
msgid "pickle"
msgstr "pickle"

#: ../../library/marshal.rst:17
msgid "shelve"
msgstr "полиця"

#: ../../library/marshal.rst:41
msgid "object"
msgstr "object"

#: ../../library/marshal.rst:41
msgid "code"
msgstr "code"

#: ../../library/marshal.rst:41
msgid "code object"
msgstr "об'єкт коду"
