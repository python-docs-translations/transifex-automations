# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# Rafael Fontenelle <rffontenelle@gmail.com>, 2025
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.9\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-07-25 19:10+0000\n"
"PO-Revision-Date: 2025-07-18 19:17+0000\n"
"Last-Translator: Rafael Fontenelle <rffontenelle@gmail.com>, 2025\n"
"Language-Team: Korean (https://app.transifex.com/python-doc/teams/5390/ko/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ko\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../c-api/apiabiversion.rst:7
msgid "API and ABI Versioning"
msgstr "API 와 ABI 버전 관리"

#: ../../c-api/apiabiversion.rst:9
msgid ""
"``PY_VERSION_HEX`` is the Python version number encoded in a single integer."
msgstr "``PY_VERSION_HEX``는 하나의 정수로 인코딩된 Python 버전명입니다."

#: ../../c-api/apiabiversion.rst:11
msgid ""
"For example if the ``PY_VERSION_HEX`` is set to ``0x030401a2``, the "
"underlying version information can be found by treating it as a 32 bit "
"number in the following manner:"
msgstr ""
"예를 들어 ``PY_VERSION_HEX``이 ``0x030401a2``로 설정되어 있다면, 다음과 같은 "
"방식으로 32 비트 수로서 처리하여 내포된 버전 정보를 찾을 수 있습니다."

#: ../../c-api/apiabiversion.rst:16
msgid "Bytes"
msgstr "바이트"

#: ../../c-api/apiabiversion.rst:16
msgid "Bits (big endian order)"
msgstr "비트 (빅 엔디안)"

#: ../../c-api/apiabiversion.rst:16
msgid "Meaning"
msgstr "의미"

#: ../../c-api/apiabiversion.rst:18
msgid "``1``"
msgstr "``1``"

#: ../../c-api/apiabiversion.rst:18
msgid "``1-8``"
msgstr "``1-8``"

#: ../../c-api/apiabiversion.rst:18
msgid "``PY_MAJOR_VERSION`` (the ``3`` in ``3.4.1a2``)"
msgstr "``PY_MAJOR_VERSION`` (``3.4.1a2``에서 ``3``)"

#: ../../c-api/apiabiversion.rst:21
msgid "``2``"
msgstr "``2``"

#: ../../c-api/apiabiversion.rst:21
msgid "``9-16``"
msgstr "``9-16``"

#: ../../c-api/apiabiversion.rst:21
msgid "``PY_MINOR_VERSION`` (the ``4`` in ``3.4.1a2``)"
msgstr "``PY_MINOR_VERSION`` (``3.4.1a2``에서 ``4``)"

#: ../../c-api/apiabiversion.rst:24
msgid "``3``"
msgstr "``3``"

#: ../../c-api/apiabiversion.rst:24
msgid "``17-24``"
msgstr "``17-24``"

#: ../../c-api/apiabiversion.rst:24
msgid "``PY_MICRO_VERSION`` (the ``1`` in ``3.4.1a2``)"
msgstr "``PY_MICRO_VERSION`` (``3.4.1a2``에서 ``1``)"

#: ../../c-api/apiabiversion.rst:27
msgid "``4``"
msgstr "``4``"

#: ../../c-api/apiabiversion.rst:27
msgid "``25-28``"
msgstr "``25-28``"

#: ../../c-api/apiabiversion.rst:27
msgid ""
"``PY_RELEASE_LEVEL`` (``0xA`` for alpha, ``0xB`` for beta, ``0xC`` for "
"release candidate and ``0xF`` for final), in this case it is alpha."
msgstr ""
"``PY_RELEASE_LEVEL`` (``0xA``는 알파 버전, ``0xB``는 베타 버전, ``0xC``는 출"
"시직전 최종후보 버전, ``0xF``는 최종 버전), 이 경우에는 알파 버전입니다."

#: ../../c-api/apiabiversion.rst:32
msgid "``29-32``"
msgstr "``29-32``"

#: ../../c-api/apiabiversion.rst:32
msgid ""
"``PY_RELEASE_SERIAL`` (the ``2`` in ``3.4.1a2``, zero for final releases)"
msgstr "``PY_RELEASE_SERIAL`` (``3.4.1a2``에서 ``2``, 0은 마지막 출시 버전)"

#: ../../c-api/apiabiversion.rst:36
msgid "Thus ``3.4.1a2`` is hexversion ``0x030401a2``."
msgstr "그러므로 ``3.4.1a2``는 16진수 버전으로 ``0x030401a2``입니다."

#: ../../c-api/apiabiversion.rst:38
msgid "All the given macros are defined in :source:`Include/patchlevel.h`."
msgstr ""
"모든 주어진 매크로들은 :source:`Include/patchlevel.h`에 정의되어 있습니다."
