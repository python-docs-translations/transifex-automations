# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# python-doc bot, 2025
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.9\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-22 21:56+0000\n"
"PO-Revision-Date: 2025-09-22 17:55+0000\n"
"Last-Translator: python-doc bot, 2025\n"
"Language-Team: Chinese (China) (https://app.transifex.com/python-doc/"
"teams/5390/zh_CN/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: zh_CN\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../library/tkinter.rst:2
msgid ":mod:`tkinter` --- Python interface to Tcl/Tk"
msgstr ":mod:`tkinter` —— Tcl/Tk 的 Python 接口"

#: ../../library/tkinter.rst:9
msgid "**Source code:** :source:`Lib/tkinter/__init__.py`"
msgstr "**源代码:** :source:`Lib/tkinter/__init__.py`"

#: ../../library/tkinter.rst:13
msgid ""
"The :mod:`tkinter` package (\"Tk interface\") is the standard Python "
"interface to the Tcl/Tk GUI toolkit.  Both Tk and :mod:`tkinter` are "
"available on most Unix platforms, including macOS, as well as on Windows "
"systems."
msgstr ""
":mod:`tkinter` 包 (\"Tk 接口\") 是针对 Tcl/Tk GUI 工具包的标准 Python 接口。 "
"Tk 和 :mod:`tkinter` 在大多数 Unix 平台，包括 macOS，以及 Windows 系统上均可"
"使用。"

#: ../../library/tkinter.rst:17
msgid ""
"Running ``python -m tkinter`` from the command line should open a window "
"demonstrating a simple Tk interface, letting you know that :mod:`tkinter` is "
"properly installed on your system, and also showing what version of Tcl/Tk "
"is installed, so you can read the Tcl/Tk documentation specific to that "
"version."
msgstr ""
"若在命令行执行 ``python -m tkinter``，应会弹出一个简单的 Tk 界面窗口， 表明 :"
"mod:`tkinter` 包已安装完成，还会显示当前安装的 Tcl/Tk 版本，以便阅读对应版本"
"的 Tcl/Tk 文档。"

#: ../../library/tkinter.rst:26
msgid "`TkDocs <http://tkdocs.com/>`_"
msgstr ""

#: ../../library/tkinter.rst:25
msgid ""
"Extensive tutorial on creating user interfaces with Tkinter.  Explains key "
"concepts, and illustrates recommended approaches using the modern API."
msgstr ""
"关于使用 Tkinter 创建用户界面的详细教程。 讲解了关键概念，并介绍了使用现代 "
"API 的推荐方式。"

#: ../../library/tkinter.rst:29
msgid ""
"`Tkinter 8.5 reference: a GUI for Python <https://www.tkdocs.com/shipman/>`_"
msgstr ""
"`Tkinter 8.5 参考手册：一种 Python GUI <https://www.tkdocs.com/shipman/>`_"

#: ../../library/tkinter.rst:29
msgid ""
"Reference documentation for Tkinter 8.5 detailing available classes, "
"methods, and options."
msgstr "详细讲解可用的类、方法和选项的 Tkinter 8.5 参考文档。"

#: ../../library/tkinter.rst:31
msgid "Tcl/Tk Resources:"
msgstr "Tcl/Tk 资源:"

#: ../../library/tkinter.rst:34
msgid "`Tk commands <https://www.tcl.tk/man/tcl8.6/TkCmd/contents.htm>`_"
msgstr "`Tk 命令 <https://www.tcl.tk/man/tcl8.6/TkCmd/contents.htm>`_"

#: ../../library/tkinter.rst:34
msgid ""
"Comprehensive reference to each of the underlying Tcl/Tk commands used by "
"Tkinter."
msgstr "有关 Tkinter 所使用的每个底层 Tcl/Tk 命令的完整参考文档。"

#: ../../library/tkinter.rst:37
msgid "`Tcl/Tk Home Page <https://www.tcl.tk>`_"
msgstr "`Tcl/Tk 主页 <https://www.tcl.tk>`_"

#: ../../library/tkinter.rst:37
msgid "Additional documentation, and links to Tcl/Tk core development."
msgstr "额外的文档，以及 Tcl/Tk 核心开发相关链接。"

#: ../../library/tkinter.rst:39
msgid "Books:"
msgstr "书籍:"

#: ../../library/tkinter.rst:42
msgid ""
"`Modern Tkinter for Busy Python Developers <https://tkdocs.com/book.html>`_"
msgstr ""
"`Modern Tkinter for Busy Python Developers <https://tkdocs.com/book.html>`_"

#: ../../library/tkinter.rst:42
msgid "By Mark Roseman. (ISBN 978-1999149567)"
msgstr "Mark Roseman 著。 (ISBN 978-1999149567)"

#: ../../library/tkinter.rst:45
msgid ""
"`Python and Tkinter Programming <https://www.packtpub.com/product/python-gui-"
"programming-with-tkinter/9781788835886>`_"
msgstr ""
"`Python and Tkinter Programming <https://www.packtpub.com/product/python-gui-"
"programming-with-tkinter/9781788835886>`_"

#: ../../library/tkinter.rst:45
msgid "By Alan Moore. (ISBN 978-1788835886)"
msgstr "Alan Moore 著。 (ISBN 978-1788835886)"

#: ../../library/tkinter.rst:48
msgid "`Programming Python <http://learning-python.com/about-pp4e.html>`_"
msgstr ""

#: ../../library/tkinter.rst:48
msgid "By Mark Lutz; has excellent coverage of Tkinter. (ISBN 978-0596158101)"
msgstr "Mark Lutz 著；对 Tkinter 进行了精彩的讲解。 (ISBN 978-0596158101)"

#: ../../library/tkinter.rst:50
msgid ""
"`Tcl and the Tk Toolkit (2nd edition)  <https://www.amazon.com/exec/obidos/"
"ASIN/032133633X>`_"
msgstr ""
"`Tcl and the Tk Toolkit (2nd edition)  <https://www.amazon.com/exec/obidos/"
"ASIN/032133633X>`_"

#: ../../library/tkinter.rst:51
msgid ""
"By John Ousterhout, inventor of Tcl/Tk, and Ken Jones; does not cover "
"Tkinter. (ISBN 978-0321336330)"
msgstr ""
"John Ousterhout ，Tcl/Tk 的创造者，与 Ken Jones 合著；未涉及 Tkinter。 (ISBN "
"978-0321336330)"

#: ../../library/tkinter.rst:55
msgid "Tkinter Modules"
msgstr "Tkinter 模块"

#: ../../library/tkinter.rst:57
msgid ""
"Support for Tkinter is spread across several modules. Most applications will "
"need the main :mod:`tkinter` module, as well as the :mod:`tkinter.ttk` "
"module, which provides the modern themed widget set and API::"
msgstr ""
"对 Tkinter 的支持分布在多个模块中。 大多数应用程序将需要主模块 :mod:"
"`tkinter`，以及 :mod:`tkinter.ttk` 模块，后者提供了带主题的现代部件集及相应"
"的 API::"

#: ../../library/tkinter.rst:68
msgid ""
"Construct a toplevel Tk widget, which is usually the main window of an "
"application, and initialize a Tcl interpreter for this widget.  Each "
"instance has its own associated Tcl interpreter."
msgstr ""
"构造一个最高层级的 Tk 部件，这通常是一个应用程序的主窗口，并为这个部件初始化 "
"Tcl 解释器。 每个实例都有其各自所关联的 Tcl 解释器。"

#: ../../library/tkinter.rst:72
msgid ""
"The :class:`Tk` class is typically instantiated using all default values. "
"However, the following keyword arguments are currently recognized:"
msgstr ""
":class:`Tk` 类通常全部使用默认值来初始化。 不过，目前还可识别下列关键字参数:"

#: ../../library/tkinter.rst:76
msgid "*screenName*"
msgstr "*screenName*"

#: ../../library/tkinter.rst:76
msgid ""
"When given (as a string), sets the :envvar:`DISPLAY` environment variable. "
"(X11 only)"
msgstr "当（作为字符串）给出时，设置 :envvar:`DISPLAY` 环境变量。 （仅限 X11）"

#: ../../library/tkinter.rst:79
msgid "*baseName*"
msgstr "*baseName*"

#: ../../library/tkinter.rst:79
msgid ""
"Name of the profile file.  By default, *baseName* is derived from the "
"program name (``sys.argv[0]``)."
msgstr ""
"预置文件的名称。 在默认情况下，*baseName* 是来自于程序名称 (``sys."
"argv[0]``)。"

#: ../../library/tkinter.rst:82
msgid "*className*"
msgstr "*className*"

#: ../../library/tkinter.rst:82
msgid ""
"Name of the widget class.  Used as a profile file and also as the name with "
"which Tcl is invoked (*argv0* in *interp*)."
msgstr ""
"控件类的名称。 会被用作预置文件同时也作为 Tcl 唤起的名称 (*interp* 中的 "
"*argv0*)。"

#: ../../library/tkinter.rst:85
msgid "*useTk*"
msgstr "*useTk*"

#: ../../library/tkinter.rst:85
msgid ""
"If ``True``, initialize the Tk subsystem.  The :func:`tkinter.Tcl() <Tcl>` "
"function sets this to ``False``."
msgstr ""
"如果为 ``True``，则初始化 Tk 子系统。 :func:`tkinter.Tcl() <Tcl>` 函数会将其"
"设为 ``False``。"

#: ../../library/tkinter.rst:88
msgid "*sync*"
msgstr "*sync*"

#: ../../library/tkinter.rst:88
msgid ""
"If ``True``, execute all X server commands synchronously, so that errors are "
"reported immediately.  Can be used for debugging. (X11 only)"
msgstr ""
"如果为 ``True``，则同步执行所有 X 服务器命令，以便立即报告错误。 可被用于调"
"试。 （仅限 X11）"

#: ../../library/tkinter.rst:98
msgid "*use*"
msgstr "*use*"

#: ../../library/tkinter.rst:91
msgid ""
"Specifies the *id* of the window in which to embed the application, instead "
"of it being created as an independent toplevel window. *id* must be "
"specified in the same way as the value for the -use option for toplevel "
"widgets (that is, it has a form like that returned by :meth:`winfo_id`)."
msgstr ""
"指定嵌入应用程序的窗口 *id*，而不是将其创建为独立的顶层窗口。 *id* 必须以与顶"
"层控件的 -use 选项值相同的方式来指定（也就是说，它具有与 :meth:`winfo_id` 的"
"返回值相同的形式）。"

#: ../../library/tkinter.rst:97
msgid ""
"Note that on some platforms this will only work correctly if *id* refers to "
"a Tk frame or toplevel that has its -container option enabled."
msgstr ""
"请注意在某些平台上只有当 *id* 是指向一个启用了 -container 选项的 Tk 框架或顶"
"层窗口时此参数才能正确生效。"

#: ../../library/tkinter.rst:100
msgid ""
":class:`Tk` reads and interprets profile files, named :file:`.{className}."
"tcl` and :file:`.{baseName}.tcl`, into the Tcl interpreter and calls :func:"
"`exec` on the contents of :file:`.{className}.py` and :file:`.{baseName}."
"py`.  The path for the profile files is the :envvar:`HOME` environment "
"variable or, if that isn't defined, then :attr:`os.curdir`."
msgstr ""
":class:`Tk` 读取并解释预置文件，其名称为 :file:`.{className}.tcl` 和 :file:`."
"{baseName}.tcl`，进入 Tcl 解释器并基于 :file:`.{className}.py` 在 :file:`."
"{baseName}.py` 的内容调用 :func:`exec`。 预置文件的路径为 :envvar:`HOME` 环境"
"变量，或者如果它未被设置，则为 :attr:`os.curdir`。"

#: ../../library/tkinter.rst:109
msgid ""
"The Tk application object created by instantiating :class:`Tk`.  This "
"provides access to the Tcl interpreter.  Each widget that is attached the "
"same instance of :class:`Tk` has the same value for its :attr:`tk` attribute."
msgstr ""
"通过实例化 :class:`Tk` 创建的 Tk 应用程序对象。 这提供了对 Tcl 解释器的访"
"问。 每个被附加到相同 :class:`Tk` 实例的控件都具有相同的 :attr:`tk` 属性值。"

#: ../../library/tkinter.rst:116
msgid ""
"The widget object that contains this widget.  For :class:`Tk`, the *master* "
"is :const:`None` because it is the main window.  The terms *master* and "
"*parent* are similar and sometimes used interchangeably as argument names; "
"however, calling :meth:`winfo_parent` returns a string of the widget name "
"whereas :attr:`master` returns the object. *parent*/*child* reflects the "
"tree-like relationship while *master*/*slave* reflects the container "
"structure."
msgstr ""
"包含此控件的控件对象。 对于 :class:`Tk`，*master* 将为 :const:`None` 因为它是"
"主窗口。 术语 *master* 和 *parent* 是类似的且有时作为参数名称被交替使用；但"
"是，调用 :meth:`winfo_parent` 将返回控件名称字符串而 :attr:`master` 将返回控"
"件对象。 *parent*/*child* 反映了树型关系而 *master*/*slave* 反映了容器结构。"

#: ../../library/tkinter.rst:126
msgid ""
"The immediate descendants of this widget as a :class:`dict` with the child "
"widget names as the keys and the child instance objects as the values."
msgstr ""
"以 :class:`dict` 表示的此控件的直接下级其中的键为子控件名称而值为子实例对象。"

#: ../../library/tkinter.rst:133
msgid ""
"The :func:`Tcl` function is a factory function which creates an object much "
"like that created by the :class:`Tk` class, except that it does not "
"initialize the Tk subsystem.  This is most often useful when driving the Tcl "
"interpreter in an environment where one doesn't want to create extraneous "
"toplevel windows, or where one cannot (such as Unix/Linux systems without an "
"X server).  An object created by the :func:`Tcl` object can have a Toplevel "
"window created (and the Tk subsystem initialized) by calling its :meth:"
"`loadtk` method."
msgstr ""
":func:`Tcl` 函数是一个工厂函数，它创建的对象类似于 :class:`Tk` 类创建的，只是"
"不会初始化 Tk 子系统。这在调动 Tcl 解释器时最为有用，这时不想创建多余的顶层窗"
"口，或者无法创建（比如不带 X 服务的 Unix/Linux 系统）。由 :func:`Tcl` 创建的"
"对象可调用 :meth:`loadtk` 方法创建一个顶层窗口（且会初始化 Tk 子系统）。"

#: ../../library/tkinter.rst:142
msgid "The modules that provide Tk support include:"
msgstr "提供 Tk 支持的模块包括:"

#: ../../library/tkinter.rst:145
msgid ":mod:`tkinter`"
msgstr ":mod:`tkinter`"

#: ../../library/tkinter.rst:145
msgid "Main Tkinter module."
msgstr "主 Tkinter 模块。"

#: ../../library/tkinter.rst:148
msgid ":mod:`tkinter.colorchooser`"
msgstr ":mod:`tkinter.colorchooser`"

#: ../../library/tkinter.rst:148
msgid "Dialog to let the user choose a color."
msgstr "让用户选择颜色的对话框。"

#: ../../library/tkinter.rst:151
msgid ":mod:`tkinter.commondialog`"
msgstr ":mod:`tkinter.commondialog`"

#: ../../library/tkinter.rst:151
msgid "Base class for the dialogs defined in the other modules listed here."
msgstr "本文其他模块定义的对话框的基类。"

#: ../../library/tkinter.rst:154
msgid ":mod:`tkinter.filedialog`"
msgstr ":mod:`tkinter.filedialog`"

#: ../../library/tkinter.rst:154
msgid "Common dialogs to allow the user to specify a file to open or save."
msgstr "允许用户指定文件的通用对话框，用于打开或保存文件。"

#: ../../library/tkinter.rst:157
msgid ":mod:`tkinter.font`"
msgstr ":mod:`tkinter.font`"

#: ../../library/tkinter.rst:157
msgid "Utilities to help work with fonts."
msgstr "帮助操作字体的工具。"

#: ../../library/tkinter.rst:160
msgid ":mod:`tkinter.messagebox`"
msgstr ":mod:`tkinter.messagebox`"

#: ../../library/tkinter.rst:160
msgid "Access to standard Tk dialog boxes."
msgstr "访问标准的 Tk 对话框。"

#: ../../library/tkinter.rst:163
msgid ":mod:`tkinter.scrolledtext`"
msgstr ":mod:`tkinter.scrolledtext`"

#: ../../library/tkinter.rst:163
msgid "Text widget with a vertical scroll bar built in."
msgstr "内置纵向滚动条的文本组件。"

#: ../../library/tkinter.rst:166
msgid ":mod:`tkinter.simpledialog`"
msgstr ":mod:`tkinter.simpledialog`"

#: ../../library/tkinter.rst:166
msgid "Basic dialogs and convenience functions."
msgstr "基础对话框和一些便捷功能。"

#: ../../library/tkinter.rst:170
msgid ":mod:`tkinter.ttk`"
msgstr ":mod:`tkinter.ttk`"

#: ../../library/tkinter.rst:169
msgid ""
"Themed widget set introduced in Tk 8.5, providing modern alternatives for "
"many of the classic widgets in the main :mod:`tkinter` module."
msgstr ""
"在 Tk 8.5 中引入的带主题的控件集，提供了对应于 :mod:`tkinter` 模块中许多经典"
"控件的现代替代。"

#: ../../library/tkinter.rst:172
msgid "Additional modules:"
msgstr "附加模块:"

#: ../../library/tkinter.rst:179
msgid ":mod:`_tkinter`"
msgstr ":mod:`_tkinter`"

#: ../../library/tkinter.rst:175
msgid ""
"A binary module that contains the low-level interface to Tcl/Tk. It is "
"automatically imported by the main :mod:`tkinter` module, and should never "
"be used directly by application programmers. It is usually a shared library "
"(or DLL), but might in some cases be statically linked with the Python "
"interpreter."
msgstr ""
"一个包含低层级 Tcl/Tk 接口的二进制模块。 它会被主 :mod:`tkinter` 模块自动导"
"入，且永远不应被应用程序员所直接使用。 它通常是一个共享库（或 DLL），但在某些"
"情况下可能被动态链接到 Python 解释器。"

#: ../../library/tkinter.rst:183
msgid ":mod:`idlelib`"
msgstr ":mod:`idlelib`"

#: ../../library/tkinter.rst:182
msgid ""
"Python's Integrated Development and Learning Environment (IDLE). Based on :"
"mod:`tkinter`."
msgstr "Python 的集成开发与学习环境（IDLE）。 基于 :mod:`tkinter`。"

#: ../../library/tkinter.rst:188
msgid ":mod:`tkinter.constants`"
msgstr ":mod:`tkinter.constants`"

#: ../../library/tkinter.rst:186
msgid ""
"Symbolic constants that can be used in place of strings when passing various "
"parameters to Tkinter calls. Automatically imported by the main :mod:"
"`tkinter` module."
msgstr ""
"当向 Tkinter 调用传入各种形参时可被用来代替字符串的符号常量。 由主 :mod:"
"`tkinter` 模块自动导入。"

#: ../../library/tkinter.rst:192
msgid ":mod:`tkinter.dnd`"
msgstr ":mod:`tkinter.dnd`"

#: ../../library/tkinter.rst:191
msgid ""
"(experimental) Drag-and-drop support for :mod:`tkinter`. This will become "
"deprecated when it is replaced with the Tk DND."
msgstr ""
"针对 :mod:`tkinter` 的（实验性的）拖放支持。 当以 Tk DND 代替时它将会被弃用。"

#: ../../library/tkinter.rst:196
msgid ":mod:`tkinter.tix`"
msgstr ":mod:`tkinter.tix`"

#: ../../library/tkinter.rst:195
msgid ""
"(deprecated) An older third-party Tcl/Tk package that adds several new "
"widgets. Better alternatives for most can be found in :mod:`tkinter.ttk`."
msgstr ""
"（已弃用）一个增加了部分新控件的较老的第三方 Tcl/Tk 包。 对多数人来说可以在 :"
"mod:`tkinter.ttk` 中找到更好的替代品。"

#: ../../library/tkinter.rst:200
msgid ":mod:`turtle`"
msgstr ":mod:`turtle`"

#: ../../library/tkinter.rst:199
msgid "Turtle graphics in a Tk window."
msgstr "Tk 窗口中的海龟绘图库。"

#: ../../library/tkinter.rst:203
msgid "Tkinter Life Preserver"
msgstr "Tkinter 拾遗"

#: ../../library/tkinter.rst:208
msgid ""
"This section is not designed to be an exhaustive tutorial on either Tk or "
"Tkinter.  Rather, it is intended as a stop gap, providing some introductory "
"orientation on the system."
msgstr ""

#: ../../library/tkinter.rst:212
msgid "Credits:"
msgstr ""

#: ../../library/tkinter.rst:214
msgid "Tk was written by John Ousterhout while at Berkeley."
msgstr ""

#: ../../library/tkinter.rst:216
msgid "Tkinter was written by Steen Lumholt and Guido van Rossum."
msgstr ""

#: ../../library/tkinter.rst:218
msgid ""
"This Life Preserver was written by Matt Conway at the University of Virginia."
msgstr ""

#: ../../library/tkinter.rst:220
msgid ""
"The HTML rendering, and some liberal editing, was produced from a FrameMaker "
"version by Ken Manheimer."
msgstr ""

#: ../../library/tkinter.rst:223
msgid ""
"Fredrik Lundh elaborated and revised the class interface descriptions, to "
"get them current with Tk 4.2."
msgstr ""

#: ../../library/tkinter.rst:226
msgid ""
"Mike Clarkson converted the documentation to LaTeX, and compiled the  User "
"Interface chapter of the reference manual."
msgstr ""

#: ../../library/tkinter.rst:231
msgid "How To Use This Section"
msgstr ""

#: ../../library/tkinter.rst:233
msgid ""
"This section is designed in two parts: the first half (roughly) covers "
"background material, while the second half can be taken to the keyboard as a "
"handy reference."
msgstr ""

#: ../../library/tkinter.rst:237
msgid ""
"When trying to answer questions of the form \"how do I do blah\", it is "
"often best to find out how to do \"blah\" in straight Tk, and then convert "
"this back into the corresponding :mod:`tkinter` call. Python programmers can "
"often guess at the correct Python command by looking at the Tk "
"documentation. This means that in order to use Tkinter, you will have to "
"know a little bit about Tk. This document can't fulfill that role, so the "
"best we can do is point you to the best documentation that exists. Here are "
"some hints:"
msgstr ""

#: ../../library/tkinter.rst:245
msgid ""
"The authors strongly suggest getting a copy of the Tk man pages. "
"Specifically, the man pages in the ``manN`` directory are most useful. The "
"``man3`` man pages describe the C interface to the Tk library and thus are "
"not especially helpful for script writers."
msgstr ""

#: ../../library/tkinter.rst:250
msgid ""
"Addison-Wesley publishes a book called Tcl and the Tk Toolkit by John "
"Ousterhout (ISBN 0-201-63337-X) which is a good introduction to Tcl and Tk "
"for the novice.  The book is not exhaustive, and for many details it defers "
"to the man pages."
msgstr ""

#: ../../library/tkinter.rst:255
msgid ""
":file:`tkinter/__init__.py` is a last resort for most, but can be a good "
"place to go when nothing else makes sense."
msgstr ""

#: ../../library/tkinter.rst:260
msgid "A Simple Hello World Program"
msgstr ""

#: ../../library/tkinter.rst:292
msgid "A (Very) Quick Look at Tcl/Tk"
msgstr ""

#: ../../library/tkinter.rst:294
msgid ""
"The class hierarchy looks complicated, but in actual practice, application "
"programmers almost always refer to the classes at the very bottom of the "
"hierarchy."
msgstr ""

#: ../../library/tkinter.rst:298
msgid "Notes:"
msgstr "注释："

#: ../../library/tkinter.rst:300
msgid ""
"These classes are provided for the purposes of organizing certain functions "
"under one namespace. They aren't meant to be instantiated independently."
msgstr ""

#: ../../library/tkinter.rst:303
msgid ""
"The :class:`Tk` class is meant to be instantiated only once in an "
"application. Application programmers need not instantiate one explicitly, "
"the system creates one whenever any of the other classes are instantiated."
msgstr ""

#: ../../library/tkinter.rst:307
msgid ""
"The :class:`Widget` class is not meant to be instantiated, it is meant only "
"for subclassing to make \"real\" widgets (in C++, this is called an "
"'abstract class')."
msgstr ""

#: ../../library/tkinter.rst:311
msgid ""
"To make use of this reference material, there will be times when you will "
"need to know how to read short passages of Tk and how to identify the "
"various parts of a Tk command.   (See section :ref:`tkinter-basic-mapping` "
"for the :mod:`tkinter` equivalents of what's below.)"
msgstr ""

#: ../../library/tkinter.rst:316
msgid ""
"Tk scripts are Tcl programs.  Like all Tcl programs, Tk scripts are just "
"lists of tokens separated by spaces.  A Tk widget is just its *class*, the "
"*options* that help configure it, and the *actions* that make it do useful "
"things."
msgstr ""

#: ../../library/tkinter.rst:320
msgid "To make a widget in Tk, the command is always of the form::"
msgstr ""

#: ../../library/tkinter.rst:325
msgid "*classCommand*"
msgstr ""

#: ../../library/tkinter.rst:325
msgid "denotes which kind of widget to make (a button, a label, a menu...)"
msgstr ""

#: ../../library/tkinter.rst:334
msgid "*newPathname*"
msgstr ""

#: ../../library/tkinter.rst:330
msgid ""
"is the new name for this widget.  All names in Tk must be unique.  To help "
"enforce this, widgets in Tk are named with *pathnames*, just like files in a "
"file system.  The top level widget, the *root*, is called ``.`` (period) and "
"children are delimited by more periods.  For example, ``.myApp.controlPanel."
"okButton`` might be the name of a widget."
msgstr ""

#: ../../library/tkinter.rst:340
msgid "*options*"
msgstr "*options*"

#: ../../library/tkinter.rst:337
msgid ""
"configure the widget's appearance and in some cases, its behavior.  The "
"options come in the form of a list of flags and values. Flags are preceded "
"by a '-', like Unix shell command flags, and values are put in quotes if "
"they are more than one word."
msgstr ""

#: ../../library/tkinter.rst:342 ../../library/tkinter.rst:603
#: ../../library/tkinter.rst:782
msgid "For example::"
msgstr "例如："

#: ../../library/tkinter.rst:350
msgid ""
"Once created, the pathname to the widget becomes a new command.  This new "
"*widget command* is the programmer's handle for getting the new widget to "
"perform some *action*.  In C, you'd express this as someAction(fred, "
"someOptions), in C++, you would express this as fred."
"someAction(someOptions), and in Tk, you say::"
msgstr ""

#: ../../library/tkinter.rst:358
msgid "Note that the object name, ``.fred``, starts with a dot."
msgstr ""

#: ../../library/tkinter.rst:360
msgid ""
"As you'd expect, the legal values for *someAction* will depend on the "
"widget's class: ``.fred disable`` works if fred is a button (fred gets "
"greyed out), but does not work if fred is a label (disabling of labels is "
"not supported in Tk)."
msgstr ""

#: ../../library/tkinter.rst:364
msgid ""
"The legal values of *someOptions* is action dependent.  Some actions, like "
"``disable``, require no arguments, others, like a text-entry box's "
"``delete`` command, would need arguments to specify what range of text to "
"delete."
msgstr ""

#: ../../library/tkinter.rst:372
msgid "Mapping Basic Tk into Tkinter"
msgstr ""

#: ../../library/tkinter.rst:374
msgid "Class commands in Tk correspond to class constructors in Tkinter. ::"
msgstr ""

#: ../../library/tkinter.rst:378
msgid ""
"The master of an object is implicit in the new name given to it at creation "
"time.  In Tkinter, masters are specified explicitly. ::"
msgstr ""

#: ../../library/tkinter.rst:383
msgid ""
"The configuration options in Tk are given in lists of hyphened tags followed "
"by values.  In Tkinter, options are specified as keyword-arguments in the "
"instance constructor, and keyword-args for configure calls or as instance "
"indices, in dictionary style, for established instances.  See section :ref:"
"`tkinter-setting-options` on setting options. ::"
msgstr ""

#: ../../library/tkinter.rst:393
msgid ""
"In Tk, to perform an action on a widget, use the widget name as a command, "
"and follow it with an action name, possibly with arguments (options).  In "
"Tkinter, you call methods on the class instance to invoke actions on the "
"widget.  The actions (methods) that a given widget can perform are listed "
"in :file:`tkinter/__init__.py`. ::"
msgstr ""

#: ../../library/tkinter.rst:401
msgid ""
"To give a widget to the packer (geometry manager), you call pack with "
"optional arguments.  In Tkinter, the Pack class holds all this "
"functionality, and the various forms of the pack command are implemented as "
"methods.  All widgets in :mod:`tkinter` are subclassed from the Packer, and "
"so inherit all the packing methods. See the :mod:`tkinter.tix` module "
"documentation for additional information on the Form geometry manager. ::"
msgstr ""

#: ../../library/tkinter.rst:412
msgid "How Tk and Tkinter are Related"
msgstr ""

#: ../../library/tkinter.rst:414
msgid "From the top down:"
msgstr ""

#: ../../library/tkinter.rst:417
msgid "Your App Here (Python)"
msgstr ""

#: ../../library/tkinter.rst:417
msgid "A Python application makes a :mod:`tkinter` call."
msgstr ""

#: ../../library/tkinter.rst:424
msgid "tkinter (Python Package)"
msgstr ""

#: ../../library/tkinter.rst:420
msgid ""
"This call (say, for example, creating a button widget), is implemented in "
"the :mod:`tkinter` package, which is written in Python.  This Python "
"function will parse the commands and the arguments and convert them into a "
"form that makes them look as if they had come from a Tk script instead of a "
"Python script."
msgstr ""

#: ../../library/tkinter.rst:428
msgid "_tkinter (C)"
msgstr ""

#: ../../library/tkinter.rst:427
msgid ""
"These commands and their arguments will be passed to a C function in the :"
"mod:`_tkinter` - note the underscore - extension module."
msgstr ""

#: ../../library/tkinter.rst:435
msgid "Tk Widgets (C and Tcl)"
msgstr ""

#: ../../library/tkinter.rst:431
msgid ""
"This C function is able to make calls into other C modules, including the C "
"functions that make up the Tk library.  Tk is implemented in C and some Tcl. "
"The Tcl part of the Tk widgets is used to bind certain default behaviors to "
"widgets, and is executed once at the point where the Python :mod:`tkinter` "
"package is imported. (The user never sees this stage)."
msgstr ""

#: ../../library/tkinter.rst:438
msgid "Tk (C)"
msgstr ""

#: ../../library/tkinter.rst:438
msgid "The Tk part of the Tk Widgets implement the final mapping to ..."
msgstr ""

#: ../../library/tkinter.rst:442
msgid "Xlib (C)"
msgstr ""

#: ../../library/tkinter.rst:441
msgid "the Xlib library to draw graphics on the screen."
msgstr ""

#: ../../library/tkinter.rst:445
msgid "Handy Reference"
msgstr "快速参考"

#: ../../library/tkinter.rst:451
msgid "Setting Options"
msgstr "可选配置项"

#: ../../library/tkinter.rst:453
msgid ""
"Options control things like the color and border width of a widget. Options "
"can be set in three ways:"
msgstr "配置参数可以控制组件颜色和边框宽度等。可通过三种方式进行设置："

#: ../../library/tkinter.rst:459
msgid "At object creation time, using keyword arguments"
msgstr "在对象创建时，使用关键字参数"

#: ../../library/tkinter.rst:465
msgid "After object creation, treating the option name like a dictionary index"
msgstr "在对象创建后，将参数名用作字典索引"

#: ../../library/tkinter.rst:470
msgid ""
"Use the config() method to update multiple attrs subsequent to object "
"creation"
msgstr "利用 config() 方法修改对象的多个属性"

#: ../../library/tkinter.rst:472
msgid ""
"For a complete explanation of a given option and its behavior, see the Tk "
"man pages for the widget in question."
msgstr ""
"关于这些参数及其表现的完整解释，请参阅 Tk 手册中有关组件的 man 帮助页。"

#: ../../library/tkinter.rst:475
msgid ""
"Note that the man pages list \"STANDARD OPTIONS\" and \"WIDGET SPECIFIC "
"OPTIONS\" for each widget.  The former is a list of options that are common "
"to many widgets, the latter are the options that are idiosyncratic to that "
"particular widget.  The Standard Options are documented on the :manpage:"
"`options(3)` man page."
msgstr ""
"请注意，man 手册页列出了每个部件的“标准选项”和“组件特有选项”。前者是很多组件"
"通用的选项列表，后者是该组件特有的选项。标准选项在  :manpage:`options(3)` "
"man 手册中有文档。"

#: ../../library/tkinter.rst:481
msgid ""
"No distinction between standard and widget-specific options is made in this "
"document.  Some options don't apply to some kinds of widgets. Whether a "
"given widget responds to a particular option depends on the class of the "
"widget; buttons have a ``command`` option, labels do not."
msgstr ""
"本文没有区分标准选项和部件特有选项。有些选项不适用于某类组件。组件是否对某选"
"项做出响应，取决于组件的类别；按钮组件有一个 ``command`` 选项，而标签组件就没"
"有。"

#: ../../library/tkinter.rst:486
msgid ""
"The options supported by a given widget are listed in that widget's man "
"page, or can be queried at runtime by calling the :meth:`config` method "
"without arguments, or by calling the :meth:`keys` method on that widget.  "
"The return value of these calls is a dictionary whose key is the name of the "
"option as a string (for example, ``'relief'``) and whose values are 5-tuples."
msgstr ""
"组件支持的选项在其手册中有列出，也可在运行时调用 :meth:`config` 方法（不带参"
"数）查看，或者通过调用组件的 :meth:`keys` 方法进行查询。这些调用的返回值为字"
"典，字典的键是字符串格式的选项名（比如 ``'relief'``），字典的值为五元组。"

#: ../../library/tkinter.rst:492
msgid ""
"Some options, like ``bg`` are synonyms for common options with long names "
"(``bg`` is shorthand for \"background\"). Passing the ``config()`` method "
"the name of a shorthand option will return a 2-tuple, not 5-tuple. The 2-"
"tuple passed back will contain the name of the synonym and the \"real\" "
"option (such as ``('bg', 'background')``)."
msgstr ""
"有些选项，比如 ``bg`` 是全名通用选项的同义词（``bg`` 是 “background”的简"
"写）。向 ``config()`` 方法传入选项的简称将返回一个二元组，而不是五元组。传回"
"的二元组将包含同义词的全名和“真正的”选项（比如 ``('bg', 'background')``）。"

#: ../../library/tkinter.rst:499
msgid "Index"
msgstr "索引"

#: ../../library/tkinter.rst:499
msgid "Meaning"
msgstr "含意"

#: ../../library/tkinter.rst:499
msgid "Example"
msgstr "示例"

#: ../../library/tkinter.rst:501
msgid "0"
msgstr "0"

#: ../../library/tkinter.rst:501
msgid "option name"
msgstr "选项名称"

#: ../../library/tkinter.rst:501 ../../library/tkinter.rst:503
msgid "``'relief'``"
msgstr "``'relief'``"

#: ../../library/tkinter.rst:503
msgid "1"
msgstr "1"

#: ../../library/tkinter.rst:503
msgid "option name for database lookup"
msgstr "数据库查找的选项名称"

#: ../../library/tkinter.rst:505
msgid "2"
msgstr "2"

#: ../../library/tkinter.rst:505
msgid "option class for database lookup"
msgstr "数据库查找的选项类"

#: ../../library/tkinter.rst:505
msgid "``'Relief'``"
msgstr "``'Relief'``"

#: ../../library/tkinter.rst:508
msgid "3"
msgstr "3"

#: ../../library/tkinter.rst:508
msgid "default value"
msgstr "默认值"

#: ../../library/tkinter.rst:508
msgid "``'raised'``"
msgstr "``'raised'``"

#: ../../library/tkinter.rst:510
msgid "4"
msgstr "4"

#: ../../library/tkinter.rst:510
msgid "current value"
msgstr "当前值"

#: ../../library/tkinter.rst:510
msgid "``'groove'``"
msgstr "``'groove'``"

#: ../../library/tkinter.rst:513
msgid "Example::"
msgstr "示例::"

#: ../../library/tkinter.rst:518
msgid ""
"Of course, the dictionary printed will include all the options available and "
"their values.  This is meant only as an example."
msgstr "当然，输出的字典将包含所有可用选项及其值。这里只是举个例子。"

#: ../../library/tkinter.rst:523
msgid "The Packer"
msgstr "包装器"

#: ../../library/tkinter.rst:527
msgid ""
"The packer is one of Tk's geometry-management mechanisms.    Geometry "
"managers are used to specify the relative positioning of widgets within "
"their container - their mutual *master*.  In contrast to the more cumbersome "
"*placer* (which is used less commonly, and we do not cover here), the packer "
"takes qualitative relationship specification - *above*, *to the left of*, "
"*filling*, etc - and works everything out to determine the exact placement "
"coordinates for you."
msgstr ""
"包装器是 Tk 的形状管理机制之一。 形状（geometry ）管理器用于指定多个部件在容"
"器（共同的 *主* 组件）内的相对位置。与更为麻烦的 *定位器* 相比（不太常用，这"
"里不做介绍），包装器可接受定性的相对关系—— *上面* 、*左边* 、*填充* 等，并确"
"定精确的位置坐标。"

#: ../../library/tkinter.rst:534
msgid ""
"The size of any *master* widget is determined by the size of the \"slave "
"widgets\" inside.  The packer is used to control where slave widgets appear "
"inside the master into which they are packed.  You can pack widgets into "
"frames, and frames into other frames, in order to achieve the kind of layout "
"you desire. Additionally, the arrangement is dynamically adjusted to "
"accommodate incremental changes to the configuration, once it is packed."
msgstr ""
"*主* 部件的大小都由其内部的 “从属部件” 的大小决定。包装器用于控制从属部件在主"
"部件中出现的位置。可以把部件包入框架，再把框架包入其他框架中，搭建出所需的布"
"局。此外，只要完成了包装，组件的布局就会进行动态调整，以适应布局参数的变化。"

#: ../../library/tkinter.rst:541
msgid ""
"Note that widgets do not appear until they have had their geometry specified "
"with a geometry manager.  It's a common early mistake to leave out the "
"geometry specification, and then be surprised when the widget is created but "
"nothing appears.  A widget will appear only after it has had, for example, "
"the packer's :meth:`pack` method applied to it."
msgstr ""
"请注意，只有用形状管理器指定几何形状后，部件才会显示出来。忘记设置形状参数是"
"新手常犯的错误，惊讶于创建完部件却啥都没出现。部件只有在应用了类似于打包器"
"的 :meth:`pack` 方法之后才会显示在屏幕上。"

#: ../../library/tkinter.rst:547
msgid ""
"The pack() method can be called with keyword-option/value pairs that control "
"where the widget is to appear within its container, and how it is to behave "
"when the main application window is resized.  Here are some examples::"
msgstr ""
"调用 pack() 方法时可以给出由关键字/参数值组成的键值对，以便控制组件在其容器中"
"出现的位置，以及主程序窗口大小变动时的行为。下面是一些例子："

#: ../../library/tkinter.rst:557
msgid "Packer Options"
msgstr "包装器的参数"

#: ../../library/tkinter.rst:559
msgid ""
"For more extensive information on the packer and the options that it can "
"take, see the man pages and page 183 of John Ousterhout's book."
msgstr ""
"关于包装器及其可接受的参数，更多信息请参阅 man 手册和 John Ousterhout 书中的"
"第 183 页。"

#: ../../library/tkinter.rst:563 ../../library/tkinter.rst:683
msgid "anchor"
msgstr "anchor"

#: ../../library/tkinter.rst:563
msgid ""
"Anchor type.  Denotes where the packer is to place each slave in its parcel."
msgstr "anchor 类型。 表示包装器要放置的每个从属组件的位置。"

#: ../../library/tkinter.rst:566
msgid "expand"
msgstr "expand"

#: ../../library/tkinter.rst:566
msgid "Boolean, ``0`` or ``1``."
msgstr "布尔型，``0`` 或 ``1`` 。"

#: ../../library/tkinter.rst:569
msgid "fill"
msgstr "fill"

#: ../../library/tkinter.rst:569
msgid "Legal values: ``'x'``, ``'y'``, ``'both'``, ``'none'``."
msgstr "合法值为：``'x'`` 、``'y'`` 、``'both'`` 、``'none'``。"

#: ../../library/tkinter.rst:572
msgid "ipadx and ipady"
msgstr "ipadx 和 ipady"

#: ../../library/tkinter.rst:572
msgid ""
"A distance - designating internal padding on each side of the slave widget."
msgstr "距离值，指定从属部件的内边距。"

#: ../../library/tkinter.rst:575
msgid "padx and pady"
msgstr "padx 和 pady"

#: ../../library/tkinter.rst:575
msgid ""
"A distance - designating external padding on each side of the slave widget."
msgstr "距离值，指定从属部件的外边距。"

#: ../../library/tkinter.rst:579
msgid "side"
msgstr "side"

#: ../../library/tkinter.rst:578
msgid "Legal values are: ``'left'``, ``'right'``, ``'top'``, ``'bottom'``."
msgstr "合法值为：``'left'``、 ``'right'`` 、 ``'top'``、 ``'bottom'``。"

#: ../../library/tkinter.rst:582
msgid "Coupling Widget Variables"
msgstr "部件与变量的关联"

#: ../../library/tkinter.rst:584
msgid ""
"The current-value setting of some widgets (like text entry widgets) can be "
"connected directly to application variables by using special options.  These "
"options are ``variable``, ``textvariable``, ``onvalue``, ``offvalue``, and "
"``value``.  This connection works both ways: if the variable changes for any "
"reason, the widget it's connected to will be updated to reflect the new "
"value."
msgstr ""
"通过一些特定参数，某些组件（如文本输入组件）的当前设置可直接与应用程序的变量"
"关联。这些参数包括 ``variable`` 、 ``textvariable`` 、 ``onvalue`` 、 "
"``offvalue``  、 ``value``。这种关联是双向的：只要这些变量因任何原因发生变"
"化，其关联的部件就会更新以反映新的参数值。"

#: ../../library/tkinter.rst:590
msgid ""
"Unfortunately, in the current implementation of :mod:`tkinter` it is not "
"possible to hand over an arbitrary Python variable to a widget through a "
"``variable`` or ``textvariable`` option.  The only kinds of variables for "
"which this works are variables that are subclassed from a class called "
"Variable, defined in :mod:`tkinter`."
msgstr ""
"不幸的是，在目前 :mod:`tkinter` 的实现代码中，不可能通过 ``variable`` 或 "
"``textvariable`` 参数将任意 Python 变量移交给组件。变量只有是 :mod:`tkinter` "
"中定义的 Variable 类的子类，才能生效。"

#: ../../library/tkinter.rst:596
msgid ""
"There are many useful subclasses of Variable already defined: :class:"
"`StringVar`, :class:`IntVar`, :class:`DoubleVar`, and :class:`BooleanVar`.  "
"To read the current value of such a variable, call the :meth:`get` method on "
"it, and to change its value you call the :meth:`!set` method.  If you follow "
"this protocol, the widget will always track the value of the variable, with "
"no further intervention on your part."
msgstr ""
"已经定义了很多有用的 Variable 子类： :class:`StringVar` 、 :class:"
"`IntVar` 、:class:`DoubleVar` 和 :class:`BooleanVar`。调用 :meth:`get` 方法可"
"以读取这些变量的当前值；调用 :meth:`!set` 方法则可改变变量值。只要遵循这种用"
"法，组件就会保持跟踪变量的值，而不需要更多的干预。"

#: ../../library/tkinter.rst:636
msgid "The Window Manager"
msgstr "窗口管理器"

#: ../../library/tkinter.rst:640
msgid ""
"In Tk, there is a utility command, ``wm``, for interacting with the window "
"manager.  Options to the ``wm`` command allow you to control things like "
"titles, placement, icon bitmaps, and the like.  In :mod:`tkinter`, these "
"commands have been implemented as methods on the :class:`Wm` class.  "
"Toplevel widgets are subclassed from the :class:`Wm` class, and so can call "
"the :class:`Wm` methods directly."
msgstr ""
"Tk 有个实用命令 ``wm``，用于与窗口管理器进行交互。``wm`` 命令的参数可用于控制"
"标题、位置、图标之类的东西。在 :mod:`tkinter` 中，这些命令已被实现为 :class:"
"`Wm` 类的方法。顶层部件是 :class:`Wm` 类的子类，所以可以直接调用 :class:`Wm` "
"的这些方法。"

#: ../../library/tkinter.rst:647
msgid ""
"To get at the toplevel window that contains a given widget, you can often "
"just refer to the widget's master.  Of course if the widget has been packed "
"inside of a frame, the master won't represent a toplevel window.  To get at "
"the toplevel window that contains an arbitrary widget, you can call the :"
"meth:`_root` method. This method begins with an underscore to denote the "
"fact that this function is part of the implementation, and not an interface "
"to Tk functionality."
msgstr ""
"要获得指定部件所在的顶层窗口，通常只要引用该部件的主窗口即可。当然，如果该部"
"件是包装在框架内的，那么主窗口不代表就是顶层窗口。为了获得任意组件所在的顶层"
"窗口，可以调用 :meth:`_root` 方法。该方法以下划线开头，表明其为 Python 实现的"
"代码，而非 Tk 提供的某个接口。"

#: ../../library/tkinter.rst:654
msgid "Here are some examples of typical usage::"
msgstr "以下是一些典型用法："

#: ../../library/tkinter.rst:677
msgid "Tk Option Data Types"
msgstr "Tk 参数的数据类型"

#: ../../library/tkinter.rst:682
msgid ""
"Legal values are points of the compass: ``\"n\"``, ``\"ne\"``, ``\"e\"``, "
"``\"se\"``, ``\"s\"``, ``\"sw\"``, ``\"w\"``, ``\"nw\"``, and also "
"``\"center\"``."
msgstr ""
"合法值是罗盘的方位点：``\"n\"`` 、``\"ne\"`` 、``\"e\"`` 、``\"se\"`` 、"
"``\"s\"`` 、``\"sw\"`` 、``\"w\"`` 、``\"nw\"``  和 ``\"center\"`` 。"

#: ../../library/tkinter.rst:689
msgid "bitmap"
msgstr "bitmap"

#: ../../library/tkinter.rst:686
msgid ""
"There are eight built-in, named bitmaps: ``'error'``, ``'gray25'``, "
"``'gray50'``, ``'hourglass'``, ``'info'``, ``'questhead'``, ``'question'``, "
"``'warning'``.  To specify an X bitmap filename, give the full path to the "
"file, preceded with an ``@``, as in ``\"@/usr/contrib/bitmap/gumby.bit\"``."
msgstr ""
"内置已命名的位图有八个：``'error'``、 ``'gray25'`` 、``'gray50'`` 、"
"``'hourglass'``、 ``'info'`` 、``'questhead'`` 、``'question'`` 、"
"``'warning'`` 。若要指定位图的文件名，请给出完整路径，前面加一个 ``@``，比如 "
"``\"@/usr/contrib/bitmap/gumby.bit\"``。"

#: ../../library/tkinter.rst:692
msgid "boolean"
msgstr "boolean"

#: ../../library/tkinter.rst:692
msgid "You can pass integers 0 or 1 or the strings ``\"yes\"`` or ``\"no\"``."
msgstr "可以传入整数 0 或 1，或是字符串 ``\"yes\"`` 或 ``\"no\"``。"

#: ../../library/tkinter.rst:699
msgid "callback"
msgstr "callback -- 回调"

#: ../../library/tkinter.rst:695
msgid "This is any Python function that takes no arguments.  For example::"
msgstr "指任何无需调用参数的 Python 函数。 例如："

#: ../../library/tkinter.rst:705
msgid "color"
msgstr "color"

#: ../../library/tkinter.rst:702
msgid ""
"Colors can be given as the names of X colors in the rgb.txt file, or as "
"strings representing RGB values in 4 bit: ``\"#RGB\"``, 8 bit: "
"``\"#RRGGBB\"``, 12 bit: ``\"#RRRGGGBBB\"``, or 16 bit: "
"``\"#RRRRGGGGBBBB\"`` ranges, where R,G,B here represent any legal hex "
"digit.  See page 160 of Ousterhout's book for details."
msgstr ""
"可在 rgb.txt 文件中以颜色名的形式给出，或是 RGB 字符串的形式，4 位 ："
"``\"#RGB\"`` ，8 位 ：``\"#RRGGBB\"``，12 位：``\"#RRRGGGBBB\"``，16 位："
"``\"#RRRRGGGGBBBB\"``，其中R、G、B 为合法的十六进制数值。 详见 Ousterhout 书"
"中的第 160 页。"

#: ../../library/tkinter.rst:711
msgid "cursor"
msgstr "cursor"

#: ../../library/tkinter.rst:708
msgid ""
"The standard X cursor names from :file:`cursorfont.h` can be used, without "
"the ``XC_`` prefix.  For example to get a hand cursor (:const:`XC_hand2`), "
"use the string ``\"hand2\"``.  You can also specify a bitmap and mask file "
"of your own. See page 179 of Ousterhout's book."
msgstr ""
"可采用 :file:`cursorfont.h` 中的标准光标名称，去掉 ``XC_`` 前缀。 比如要获取"
"一个手形光标（:const:`XC_hand2`），可以用字符串 ``\"hand2\"``。也可以指定自己"
"的位图和掩码文件作为光标。参见 Ousterhout 书中的第 179 页。"

#: ../../library/tkinter.rst:718
msgid "distance"
msgstr "distance"

#: ../../library/tkinter.rst:714
msgid ""
"Screen distances can be specified in either pixels or absolute distances. "
"Pixels are given as numbers and absolute distances as strings, with the "
"trailing character denoting units: ``c`` for centimetres, ``i`` for inches, "
"``m`` for millimetres, ``p`` for printer's points.  For example, 3.5 inches "
"is expressed as ``\"3.5i\"``."
msgstr ""
"屏幕距离可以用像素或绝对距离来指定。像素是数字，绝对距离是字符串，后面的字符"
"表示单位：``c`` 是厘米，``i`` 是英寸，``m`` 是毫米，``p`` 则表示打印机的点"
"数。例如，3.5 英寸可表示为 ``\"3.5i\"``。"

#: ../../library/tkinter.rst:723
msgid "font"
msgstr "font"

#: ../../library/tkinter.rst:721
msgid ""
"Tk uses a list font name format, such as ``{courier 10 bold}``. Font sizes "
"with positive numbers are measured in points; sizes with negative numbers "
"are measured in pixels."
msgstr ""
"Tk 采用一串名称的格式表示字体，例如 ``{courier 10 bold}``。正数的字体大小以点"
"为单位，负数的大小以像素为单位。"

#: ../../library/tkinter.rst:728
msgid "geometry"
msgstr "geometry"

#: ../../library/tkinter.rst:726
msgid ""
"This is a string of the form ``widthxheight``, where width and height are "
"measured in pixels for most widgets (in characters for widgets displaying "
"text). For example: ``fred[\"geometry\"] = \"200x100\"``."
msgstr ""
"这是一个 ``widthxheight`` 形式的字符串，其中宽度和高度对于大多数部件来说是以"
"像素为单位的（对于显示文本的部件来说是以字符为单位的）。例如："
"fred[\"geometry\"] = \"200x100\"。"

#: ../../library/tkinter.rst:732
msgid "justify"
msgstr "justify"

#: ../../library/tkinter.rst:731
msgid ""
"Legal values are the strings: ``\"left\"``, ``\"center\"``, ``\"right\"``, "
"and ``\"fill\"``."
msgstr ""
"合法的值为字符串： ``\"left\"`` 、 ``\"center\"`` 、 ``\"right\"`` 和 "
"``\"fill\"`` 。"

#: ../../library/tkinter.rst:737
msgid "region"
msgstr "区域"

#: ../../library/tkinter.rst:735
msgid ""
"This is a string with four space-delimited elements, each of which is a "
"legal distance (see above).  For example: ``\"2 3 4 5\"`` and ``\"3i 2i 4.5i "
"2i\"`` and ``\"3c 2c 4c 10.43c\"``  are all legal regions."
msgstr ""
"这是包含四个元素的字符串，以空格分隔，每个元素是表示一个合法的距离值（见上"
"文）。例如：``\"2 3 4 5\"`` 、 ``\"3i 2i 4.5i 2i\"`` 和 ``\"3c 2c 4c "
"10.43c\"`` 都是合法的区域值。"

#: ../../library/tkinter.rst:741
msgid "relief"
msgstr "relief"

#: ../../library/tkinter.rst:740
msgid ""
"Determines what the border style of a widget will be.  Legal values are: "
"``\"raised\"``, ``\"sunken\"``, ``\"flat\"``, ``\"groove\"``, and "
"``\"ridge\"``."
msgstr ""
"决定了组件的边框样式。 合法值包括：``\"raised\"``、 ``\"sunken\"`` 、"
"``\"flat\"`` 、``\"groove\"``  和 ``\"ridge\"`` 。"

#: ../../library/tkinter.rst:745
msgid "scrollcommand"
msgstr "scrollcommand"

#: ../../library/tkinter.rst:744
msgid ""
"This is almost always the :meth:`!set` method of some scrollbar widget, but "
"can be any widget method that takes a single argument."
msgstr ""
"这几乎就是带滚动条部件的 :meth:`!set` 方法，但也可是任一只有一个参数的部件方"
"法。"

#: ../../library/tkinter.rst:748
msgid "wrap"
msgstr "wrap"

#: ../../library/tkinter.rst:748
msgid "Must be one of: ``\"none\"``, ``\"char\"``, or ``\"word\"``."
msgstr "只能是以下值之一：``\"none\"`` 、 ``\"char\"`` 、 ``\"word\"``。"

#: ../../library/tkinter.rst:753
msgid "Bindings and Events"
msgstr "绑定和事件"

#: ../../library/tkinter.rst:759
msgid ""
"The bind method from the widget command allows you to watch for certain "
"events and to have a callback function trigger when that event type occurs.  "
"The form of the bind method is::"
msgstr ""
"部件命令中的 bind 方法可觉察某些事件，并在事件发生时触发一个回调函数。bind 方"
"法的形式是："

#: ../../library/tkinter.rst:765
msgid "where:"
msgstr "其中："

#: ../../library/tkinter.rst:769
msgid "sequence"
msgstr "sequence"

#: ../../library/tkinter.rst:768
msgid ""
"is a string that denotes the target kind of event.  (See the bind man page "
"and page 201 of John Ousterhout's book for details)."
msgstr ""

#: ../../library/tkinter.rst:774
msgid "func"
msgstr "func"

#: ../../library/tkinter.rst:772
msgid ""
"is a Python function, taking one argument, to be invoked when the event "
"occurs. An Event instance will be passed as the argument. (Functions "
"deployed this way are commonly known as *callbacks*.)"
msgstr ""
"是带有一个参数的 Python 函数，发生事件时将会调用。传入的参数为一个 Event 实"
"例。（以这种方式部署的函数通常称为 *回调函数*。）"

#: ../../library/tkinter.rst:780
msgid "add"
msgstr "add"

#: ../../library/tkinter.rst:777
msgid ""
"is optional, either ``''`` or ``'+'``.  Passing an empty string denotes that "
"this binding is to replace any other bindings that this event is associated "
"with.  Passing a ``'+'`` means that this function is to be added to the list "
"of functions bound to this event type."
msgstr ""
"可选项， ``''`` 或 ``'+'`` 。传入空字符串表示本次绑定将替换与此事件关联的其他"
"所有绑定。传递 ``'+'`` 则意味着加入此事件类型已绑定函数的列表中。"

#: ../../library/tkinter.rst:789
msgid ""
"Notice how the widget field of the event is being accessed in the "
"``turn_red()`` callback.  This field contains the widget that caught the X "
"event.  The following table lists the other event fields you can access, and "
"how they are denoted in Tk, which can be useful when referring to the Tk man "
"pages."
msgstr ""
"请注意，在 ``turn_red()`` 回调函数中如何访问事件的 widget 字段。该字段包含了"
"捕获 X 事件的控件。下表列出了事件可供访问的其他字段，及其在 Tk 中的表示方式，"
"这在查看 Tk 手册时很有用处。"

#: ../../library/tkinter.rst:795
msgid "Tk"
msgstr "Tk"

#: ../../library/tkinter.rst:795
msgid "Tkinter Event Field"
msgstr "Tkinter 事件字段"

#: ../../library/tkinter.rst:797
msgid "%f"
msgstr "%f"

#: ../../library/tkinter.rst:797
msgid "focus"
msgstr "focus"

#: ../../library/tkinter.rst:797
msgid "%A"
msgstr "%A"

#: ../../library/tkinter.rst:797
msgid "char"
msgstr "char"

#: ../../library/tkinter.rst:799
msgid "%h"
msgstr "%h"

#: ../../library/tkinter.rst:799
msgid "height"
msgstr "height"

#: ../../library/tkinter.rst:799
msgid "%E"
msgstr "%E"

#: ../../library/tkinter.rst:799
msgid "send_event"
msgstr "send_event"

#: ../../library/tkinter.rst:801
msgid "%k"
msgstr "%k"

#: ../../library/tkinter.rst:801
msgid "keycode"
msgstr "keycode"

#: ../../library/tkinter.rst:801
msgid "%K"
msgstr "%K"

#: ../../library/tkinter.rst:801
msgid "keysym"
msgstr "keysym"

#: ../../library/tkinter.rst:803
msgid "%s"
msgstr "%s"

#: ../../library/tkinter.rst:803
msgid "state"
msgstr "state"

#: ../../library/tkinter.rst:803
msgid "%N"
msgstr "%N"

#: ../../library/tkinter.rst:803
msgid "keysym_num"
msgstr "keysym_num"

#: ../../library/tkinter.rst:805
msgid "%t"
msgstr "%t"

#: ../../library/tkinter.rst:805
msgid "time"
msgstr "time"

#: ../../library/tkinter.rst:805
msgid "%T"
msgstr "%T"

#: ../../library/tkinter.rst:805
msgid "type"
msgstr "type"

#: ../../library/tkinter.rst:807
msgid "%w"
msgstr "%w"

#: ../../library/tkinter.rst:807
msgid "width"
msgstr "width"

#: ../../library/tkinter.rst:807
msgid "%W"
msgstr "%W"

#: ../../library/tkinter.rst:807
msgid "widget"
msgstr "widget"

#: ../../library/tkinter.rst:809
msgid "%x"
msgstr "%x"

#: ../../library/tkinter.rst:809
msgid "x"
msgstr "x"

#: ../../library/tkinter.rst:809
msgid "%X"
msgstr "%X"

#: ../../library/tkinter.rst:809
msgid "x_root"
msgstr "x_root"

#: ../../library/tkinter.rst:811
msgid "%y"
msgstr "%y"

#: ../../library/tkinter.rst:811
msgid "y"
msgstr "y"

#: ../../library/tkinter.rst:811
msgid "%Y"
msgstr "%Y"

#: ../../library/tkinter.rst:811
msgid "y_root"
msgstr "y_root"

#: ../../library/tkinter.rst:816
msgid "The index Parameter"
msgstr "index 参数"

#: ../../library/tkinter.rst:818
msgid ""
"A number of widgets require \"index\" parameters to be passed.  These are "
"used to point at a specific place in a Text widget, or to particular "
"characters in an Entry widget, or to particular menu items in a Menu widget."
msgstr ""
"很多控件都需要传入 index 参数。该参数用于指明 Text 控件中的位置，或指明 "
"Entry 控件中的字符，或指明 Menu 控件中的菜单项。"

#: ../../library/tkinter.rst:825
msgid "Entry widget indexes (index, view index, etc.)"
msgstr "Entry 控件的索引（index、view index 等）"

#: ../../library/tkinter.rst:823
msgid ""
"Entry widgets have options that refer to character positions in the text "
"being displayed.  You can use these :mod:`tkinter` functions to access these "
"special points in text widgets:"
msgstr ""
"Entry 控件带有索引属性，指向显示文本中的字符位置。这些 :mod:`tkinter`  函数可"
"用于访问文本控件中的这些特定位置："

#: ../../library/tkinter.rst:829
msgid "Text widget indexes"
msgstr "Text 控件的索引"

#: ../../library/tkinter.rst:828
msgid ""
"The index notation for Text widgets is very rich and is best described in "
"the Tk man pages."
msgstr "Text 控件的索引语法非常复杂，最好还是在 Tk 手册中查看。"

#: ../../library/tkinter.rst:854
msgid "Menu indexes (menu.invoke(), menu.entryconfig(), etc.)"
msgstr "Menu 索引（menu.invoke()、menu.entryconfig() 等）"

#: ../../library/tkinter.rst:832
msgid ""
"Some options and methods for menus manipulate specific menu entries. Anytime "
"a menu index is needed for an option or a parameter, you may pass in:"
msgstr ""
"菜单的某些属性和方法可以操纵特定的菜单项。只要属性或参数需要用到菜单索引，就"
"可用以下方式传入："

#: ../../library/tkinter.rst:835
msgid ""
"an integer which refers to the numeric position of the entry in the widget, "
"counted from the top, starting with 0;"
msgstr "一个整数，指的是菜单项的数字位置，从顶部开始计数，从 0 开始；"

#: ../../library/tkinter.rst:838
msgid ""
"the string ``\"active\"``, which refers to the menu position that is "
"currently under the cursor;"
msgstr "字符串 ``\"active\"``，指的是当前光标所在的菜单；"

#: ../../library/tkinter.rst:841
msgid "the string ``\"last\"`` which refers to the last menu item;"
msgstr "字符串 ``\"last\"``，指的是上一个菜单项；"

#: ../../library/tkinter.rst:843
msgid ""
"An integer preceded by ``@``, as in ``@6``, where the integer is interpreted "
"as a y pixel coordinate in the menu's coordinate system;"
msgstr ""
"带有 ``@`` 前缀的整数，比如 ``@6``，这里的整数解释为菜单坐标系中的 y 像素坐"
"标；"

#: ../../library/tkinter.rst:846
msgid ""
"the string ``\"none\"``, which indicates no menu entry at all, most often "
"used with menu.activate() to deactivate all entries, and finally,"
msgstr ""
"表示没有任何菜单条目的字符串 ``\"none\"`` 经常与 menu.activate() 一同被用来停"
"用所有条目，以及 ——"

#: ../../library/tkinter.rst:849
msgid ""
"a text string that is pattern matched against the label of the menu entry, "
"as scanned from the top of the menu to the bottom.  Note that this index "
"type is considered after all the others, which means that matches for menu "
"items labelled ``last``, ``active``, or ``none`` may be interpreted as the "
"above literals, instead."
msgstr ""
"与菜单项的文本标签进行模式匹配的文本串，从菜单顶部扫描到底部。请注意，此索引"
"类型是在其他所有索引类型之后才会考虑的，这意味着文本标签为 ``last``、"
"``active`` 或 ``none``  的菜单项匹配成功后，可能会视为这些单词文字本身。"

#: ../../library/tkinter.rst:857
msgid "Images"
msgstr "图片"

#: ../../library/tkinter.rst:859
msgid ""
"Images of different formats can be created through the corresponding "
"subclass of :class:`tkinter.Image`:"
msgstr "通过 :class:`tkinter.Image` 的各种子类可以创建相应格式的图片："

#: ../../library/tkinter.rst:862
msgid ":class:`BitmapImage` for images in XBM format."
msgstr ":class:`BitmapImage` 对应 XBM 格式的图片。"

#: ../../library/tkinter.rst:864
msgid ""
":class:`PhotoImage` for images in PGM, PPM, GIF and PNG formats. The latter "
"is supported starting with Tk 8.6."
msgstr ""
":class:`PhotoImage` 对应 PGM、PPM、GIF 和 PNG 格式的图片。后者自 Tk 8.6 开始"
"支持。"

#: ../../library/tkinter.rst:867
msgid ""
"Either type of image is created through either the ``file`` or the ``data`` "
"option (other options are available as well)."
msgstr ""
"这两种图片可通过 ``file`` 或 ``data`` 属性创建的（也可能由其他属性创建）。"

#: ../../library/tkinter.rst:870
msgid ""
"The image object can then be used wherever an ``image`` option is supported "
"by some widget (e.g. labels, buttons, menus). In these cases, Tk will not "
"keep a reference to the image. When the last Python reference to the image "
"object is deleted, the image data is deleted as well, and Tk will display an "
"empty box wherever the image was used."
msgstr ""
"然后可在某些支持 ``image`` 属性的控件中（如标签、按钮、菜单）使用图片对象。这"
"时，Tk 不会保留对图片对象的引用。当图片对象的最后一个 Python 引用被删除时，图"
"片数据也会删除，并且 Tk 会在用到图片对象的地方显示一个空白框。"

#: ../../library/tkinter.rst:878
msgid ""
"The `Pillow <http://python-pillow.org/>`_ package adds support for formats "
"such as BMP, JPEG, TIFF, and WebP, among others."
msgstr ""

#: ../../library/tkinter.rst:884
msgid "File Handlers"
msgstr "文件处理程序"

#: ../../library/tkinter.rst:886
msgid ""
"Tk allows you to register and unregister a callback function which will be "
"called from the Tk mainloop when I/O is possible on a file descriptor. Only "
"one handler may be registered per file descriptor. Example code::"
msgstr ""
"Tk 允许为文件操作注册和注销一个回调函数，当对文件描述符进行 I/O 时，Tk 的主循"
"环会调用该回调函数。每个文件描述符只能注册一个处理程序。示例代码如下："

#: ../../library/tkinter.rst:897
msgid "This feature is not available on Windows."
msgstr "在 Windows 系统中不可用。"

#: ../../library/tkinter.rst:899
msgid ""
"Since you don't know how many bytes are available for reading, you may not "
"want to use the :class:`~io.BufferedIOBase` or :class:`~io.TextIOBase` :meth:"
"`~io.BufferedIOBase.read` or :meth:`~io.IOBase.readline` methods, since "
"these will insist on reading a predefined number of bytes. For sockets, the :"
"meth:`~socket.socket.recv` or :meth:`~socket.socket.recvfrom` methods will "
"work fine; for other files, use raw reads or ``os.read(file.fileno(), "
"maxbytecount)``."
msgstr ""
"由于不知道可读取多少字节，你可能不希望使用 :class:`~io.BufferedIOBase` 或 :"
"class:`~io.TextIOBase` 的 :meth:`~io.BufferedIOBase.read` 或 :meth:`~io."
"IOBase.readline` 方法，因为这些方法必须读取预定数量的字节。 对于套接字，可使"
"用 :meth:`~socket.socket.recv` 或 :meth:`~socket.socket.recvfrom` 方法；对于"
"其他文件，可使用原始读取方法或 ``os.read(file.fileno(), maxbytecount)``。"

#: ../../library/tkinter.rst:910
msgid ""
"Registers the file handler callback function *func*. The *file* argument may "
"either be an object with a :meth:`~io.IOBase.fileno` method (such as a file "
"or socket object), or an integer file descriptor. The *mask* argument is an "
"ORed combination of any of the three constants below. The callback is called "
"as follows::"
msgstr ""
"注册文件处理程序的回调函数 *func*。 *file* 参数可以是具备 :meth:`~io.IOBase."
"fileno` 方法的对象（例如文件或套接字对象），也可以是整数文件描述符。 *mask* "
"参数是下述三个常量的逻辑“或”组合。回调函数将用以下格式调用："

#: ../../library/tkinter.rst:921
msgid "Unregisters a file handler."
msgstr "注销文件处理函数。"

#: ../../library/tkinter.rst:928
msgid "Constants used in the *mask* arguments."
msgstr " *mask* 参数用到的常量。"
