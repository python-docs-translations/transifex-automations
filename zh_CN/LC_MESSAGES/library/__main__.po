# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# Rafael Fontenelle <rffontenelle@gmail.com>, 2025
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.9\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-13 17:35+0000\n"
"PO-Revision-Date: 2025-07-18 19:17+0000\n"
"Last-Translator: Rafael Fontenelle <rffontenelle@gmail.com>, 2025\n"
"Language-Team: Chinese (China) (https://app.transifex.com/python-doc/"
"teams/5390/zh_CN/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: zh_CN\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../library/__main__.rst:3
msgid ":mod:`__main__` --- Top-level script environment"
msgstr ":mod:`__main__` --- 顶层脚本环境"

#: ../../library/__main__.rst:10
msgid ""
"``'__main__'`` is the name of the scope in which top-level code executes. A "
"module's __name__ is set equal to ``'__main__'`` when read from standard "
"input, a script, or from an interactive prompt."
msgstr ""
"``'__main__'`` 是顶层代码执行的作用域的名称。模块的 __name__ 在通过标准输入、"
"脚本文件或是交互式命令读入的时候会等于 ``'__main__'``。"

#: ../../library/__main__.rst:14
msgid ""
"A module can discover whether or not it is running in the main scope by "
"checking its own ``__name__``, which allows a common idiom for conditionally "
"executing code in a module when it is run as a script or with ``python -m`` "
"but not when it is imported::"
msgstr ""
"模块可以通过检查自己的 ``__name__`` 来得知是否运行在 main 作用域中，这使得模"
"块可以在作为脚本或是通过 ``python -m`` 运行时条件性地执行一些代码，而在被 "
"import 时不会执行。"

#: ../../library/__main__.rst:23
msgid ""
"For a package, the same effect can be achieved by including a ``__main__."
"py`` module, the contents of which will be executed when the module is run "
"with ``-m``."
msgstr ""
"对软件包来说，通过加入 ``__main__.py`` 模块可以达到同样的效果，当使用 ``-m`` "
"运行模块时，其中的代码会被执行。"
