# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001 Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# python-doc bot, 2025
# 汇民 王 <whuim@qq.com>, 2025
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.14\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-17 14:21+0000\n"
"PO-Revision-Date: 2025-09-16 00:02+0000\n"
"Last-Translator: 汇民 王 <whuim@qq.com>, 2025\n"
"Language-Team: Chinese (China) (https://app.transifex.com/python-doc/teams/"
"5390/zh_CN/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: zh_CN\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../library/unicodedata.rst:2
msgid ":mod:`!unicodedata` --- Unicode Database"
msgstr ":mod:`!unicodedata` --- Unicode 数据库"

#: ../../library/unicodedata.rst:18
msgid ""
"This module provides access to the Unicode Character Database (UCD) which "
"defines character properties for all Unicode characters. The data contained "
"in this database is compiled from the `UCD version 16.0.0 <https://"
"www.unicode.org/Public/16.0.0/ucd>`_."
msgstr ""
"此模块提供了对 Unicode Character Database (UCD) 的访问，其中定义了所有 "
"Unicode 字符的字符属性。 此数据库中包含的数据编译自 `UCD 版本 16.0.0 "
"<https://www.unicode.org/Public/16.0.0/ucd>`_。"

#: ../../library/unicodedata.rst:23
msgid ""
"The module uses the same names and symbols as defined by Unicode Standard "
"Annex #44, `\"Unicode Character Database\" <https://www.unicode.org/reports/"
"tr44/>`_.  It defines the following functions:"
msgstr ""
"该模块使用与 Unicode 标准附件 #44 `“Unicode 字符数据库” <https://"
"www.unicode.org/reports/tr44/>`_ 中所定义的相同名称和符号。 它定义了以下函"
"数："

#: ../../library/unicodedata.rst:30
msgid ""
"The :ref:`unicode-howto` for more information about Unicode and how to use "
"this module."
msgstr ""
"有关 Unicode 以及如何使用此模块的更多信息，请参阅 :ref:`unicode-howto`。"

#: ../../library/unicodedata.rst:36
msgid ""
"Look up character by name.  If a character with the given name is found, "
"return the corresponding character.  If not found, :exc:`KeyError` is "
"raised. For example::"
msgstr ""
"按名称查找字符。如果找到具有给定名称的字符，则返回相应的字符。 如果没有找到，"
"则引发 :exc:`KeyError`。例如::"

#: ../../library/unicodedata.rst:40
msgid ""
">>> unicodedata.lookup('LEFT CURLY BRACKET')\n"
"'{'"
msgstr ""
">>> unicodedata.lookup('LEFT CURLY BRACKET')\n"
"'{'"

#: ../../library/unicodedata.rst:43
msgid ""
"The characters returned by this function are the same as those produced by "
"``\\N`` escape sequence in string literals. For example::"
msgstr ""
"此函数返回的字符与字符串字面值中 ``\\N`` 转义序列生成的字符相同。例如："

#: ../../library/unicodedata.rst:46
msgid ""
">>> unicodedata.lookup('MIDDLE DOT') == '\\N{MIDDLE DOT}'\n"
"True"
msgstr ""
">>> unicodedata.lookup('MIDDLE DOT') == '\\N{MIDDLE DOT}'\n"
"True"

#: ../../library/unicodedata.rst:49
msgid "Support for name aliases [#]_ and named sequences [#]_ has been added."
msgstr "已添加对名称别名 [#]_ 和命名序列 [#]_ 的支持。"

#: ../../library/unicodedata.rst:55
msgid ""
"Returns the name assigned to the character *chr* as a string. If no name is "
"defined, *default* is returned, or, if not given, :exc:`ValueError` is "
"raised. For example::"
msgstr ""
"返回分配给字符 *chr* 的名称（字符串形式）。如果未定义名称，则返回 *default*；"
"如果未指定 *default*，则会引发 :exc:`ValueError`。例如： "

#: ../../library/unicodedata.rst:59
msgid ""
">>> unicodedata.name('½')\n"
"'VULGAR FRACTION ONE HALF'\n"
">>> unicodedata.name('\\uFFFF', 'fallback')\n"
"'fallback'"
msgstr ""
">>> unicodedata.name('½')\n"
"'VULGAR FRACTION ONE HALF'\n"
">>> unicodedata.name('\\uFFFF', 'fallback')\n"
"'fallback'"

#: ../../library/unicodedata.rst:67
msgid ""
"Returns the decimal value assigned to the character *chr* as integer. If no "
"such value is defined, *default* is returned, or, if not "
"given, :exc:`ValueError` is raised. For example::"
msgstr ""
"返回分配给字符 *chr* 的十进制值作为整数。 如果没有定义这样的值，则返回 "
"*default* ，如果没有给出，则 :exc:`ValueError` 被引发。例如::"

#: ../../library/unicodedata.rst:71
msgid ""
">>> unicodedata.decimal('\\N{ARABIC-INDIC DIGIT NINE}')\n"
"9\n"
">>> unicodedata.decimal('\\N{SUPERSCRIPT NINE}', -1)\n"
"-1"
msgstr ""
">>> unicodedata.decimal('\\N{ARABIC-INDIC DIGIT NINE}')\n"
"9\n"
">>> unicodedata.decimal('\\N{SUPERSCRIPT NINE}', -1)\n"
"-1"

#: ../../library/unicodedata.rst:79
msgid ""
"Returns the digit value assigned to the character *chr* as integer. If no "
"such value is defined, *default* is returned, or, if not "
"given, :exc:`ValueError` is raised::"
msgstr ""
"返回分配给字符 *chr* 的数字值作为整数。 如果没有定义这样的值，则返回 "
"*default* ，如果没有给出，则引发 :exc:`ValueError` ：："

#: ../../library/unicodedata.rst:83
msgid ""
">>> unicodedata.digit('\\N{SUPERSCRIPT NINE}')\n"
"9"
msgstr ""
">>> unicodedata.digit('\\N{SUPERSCRIPT NINE}')\n"
"9"

#: ../../library/unicodedata.rst:89
msgid ""
"Returns the numeric value assigned to the character *chr* as float. If no "
"such value is defined, *default* is returned, or, if not "
"given, :exc:`ValueError` is raised::"
msgstr ""
"返回分配给字符 *chr* 的数值作为浮点数。 如果没有定义这样的值，则返回 "
"*default* ，如果没有给出，则引发 :exc:`ValueError` ::"

#: ../../library/unicodedata.rst:93
msgid ""
">>> unicodedata.numeric('½')\n"
"0.5"
msgstr ""
">>> unicodedata.numeric('½')\n"
"0.5"

#: ../../library/unicodedata.rst:99
msgid ""
"Returns the general category assigned to the character *chr* as string. "
"General category names consist of two letters. See the `General Category "
"Values section of the Unicode Character Database documentation <https://"
"www.unicode.org/reports/tr44/tr44-34.html#General_Category_Values>`_ for a "
"list of category codes. For example::"
msgstr ""
"返回分配给字符 *chr* 的通用类别（字符串形式）。通用类别名称由两个字母组成。有"
"关类别代码的列表，请参阅 `Unicode 字符数据库文档的“通用类别值”部分 <https://"
"www.unicode.org/reports/tr44/tr44-34.html#General_Category_Values>`_。例如::"

#: ../../library/unicodedata.rst:105
msgid ""
">>> unicodedata.category('A')  # 'L'etter, 'u'ppercase\n"
"'Lu'"
msgstr ""
">>> unicodedata.category('A')  # 'L'etter, 'u'ppercase\n"
"'Lu'"

#: ../../library/unicodedata.rst:111
msgid ""
"Returns the bidirectional class assigned to the character *chr* as string. "
"If no such value is defined, an empty string is returned. See the "
"`Bidirectional Class Values section of the Unicode Character Database "
"<https://www.unicode.org/reports/tr44/tr44-34.html#Bidi_Class_Values>`_ "
"documentation for a list of bidirectional codes. For example::"
msgstr ""
"返回分配给字符 *chr* 的双向类，以字符串形式表示。如果未定义该值，则返回空字符"
"串。有关双向代码的列表，请参阅 `Unicode 字符数据库的双向类值部分 <https://"
"www.unicode.org/reports/tr44/tr44-34.html#Bidi_Class_Values>`_ 文档。例如::"

#: ../../library/unicodedata.rst:117
msgid ""
">>> unicodedata.bidirectional('\\N{ARABIC-INDIC DIGIT SEVEN}') # 'A'rabic, "
"'N'umber\n"
"'AN'"
msgstr ""
">>> unicodedata.bidirectional('\\N{ARABIC-INDIC DIGIT SEVEN}') # 'A'rabic, "
"'N'umber\n"
"'AN'"

#: ../../library/unicodedata.rst:123
msgid ""
"Returns the canonical combining class assigned to the character *chr* as "
"integer. Returns ``0`` if no combining class is defined. See the `Canonical "
"Combining Class Values section of the Unicode Character Database "
"<www.unicode.org/reports/tr44/"
"tr44-34.html#Canonical_Combining_Class_Values>`_ for more information."
msgstr ""
"返回分配给字符 *chr* 的规范组合类，以整数形式表示。如果未定义组合类，则返回 "
"``0``。有关更多信息，请参阅 `Unicode 字符数据库的规范组合类值部分 "
"<www.unicode.org/reports/tr44/"
"tr44-34.html#Canonical_Combining_Class_Values>`_。"

#: ../../library/unicodedata.rst:132
msgid ""
"Returns the east asian width assigned to the character *chr* as string. For "
"a list of widths and or more information, see the `Unicode Standard Annex "
"#11 <https://www.unicode.org/reports/tr11/tr11-43.html>`_."
msgstr ""
"返回分配给字符 *chr* 的东亚宽度，以字符串形式表示。有关宽度列表和更多信息，请"
"参阅 `Unicode 标准附件 #11 <https://www.unicode.org/reports/tr11/"
"tr11-43.html>`_。"

#: ../../library/unicodedata.rst:139
msgid ""
"Returns the mirrored property assigned to the character *chr* as integer. "
"Returns ``1`` if the character has been identified as a \"mirrored\" "
"character in bidirectional text, ``0`` otherwise. For example::"
msgstr ""
"返回分配给字符 *chr* 的镜像属性为整数。如果字符在双向文本中被识别为“镜像”字"
"符，则返回 ``1`` ，否则返回 ``0`` 。例如::"

#: ../../library/unicodedata.rst:143
msgid ""
">>> unicodedata.mirrored('>')\n"
"1"
msgstr ""
">>> unicodedata.mirrored('>')\n"
"1"

#: ../../library/unicodedata.rst:149
msgid ""
"Returns the character decomposition mapping assigned to the character *chr* "
"as string. An empty string is returned in case no such mapping is defined. "
"For example::"
msgstr ""
"返回分配给字符 *chr* 的字符分解映射作为字符串。如果未定义此类映射，则返回空字"
"符串。例如::"

#: ../../library/unicodedata.rst:153
msgid ""
">>> unicodedata.decomposition('Ã')\n"
"'0041 0303'"
msgstr ""
">>> unicodedata.decomposition('Ã')\n"
"'0041 0303'"

#: ../../library/unicodedata.rst:159
msgid ""
"Return the normal form *form* for the Unicode string *unistr*. Valid values "
"for *form* are 'NFC', 'NFKC', 'NFD', and 'NFKD'."
msgstr ""
"返回 Unicode 字符串 *unistr* 的正常形式 *form* 。 *form* 的有效值为 'NFC' 、 "
"'NFKC' 、 'NFD' 和 'NFKD' 。"

#: ../../library/unicodedata.rst:162
msgid ""
"The Unicode standard defines various normalization forms of a Unicode "
"string, based on the definition of canonical equivalence and compatibility "
"equivalence. In Unicode, several characters can be expressed in various way. "
"For example, the character U+00C7 (LATIN CAPITAL LETTER C WITH CEDILLA) can "
"also be expressed as the sequence U+0043 (LATIN CAPITAL LETTER C) U+0327 "
"(COMBINING CEDILLA)."
msgstr ""
"Unicode 标准基于规范等价和兼容性等效的定义定义了 Unicode 字符串的各种规范化形"
"式。在 Unicode 中，可以以各种方式表示多个字符。 例如，字符 U+00C7 （带有 "
"CEDILLA 的 LATIN CAPITAL LETTER C ）也可以表示为序列 U+0043（ LATIN CAPITAL "
"LETTER C ）U+0327（ COMBINING CEDILLA ）。"

#: ../../library/unicodedata.rst:168
msgid ""
"For each character, there are two normal forms: normal form C and normal "
"form D. Normal form D (NFD) is also known as canonical decomposition, and "
"translates each character into its decomposed form. Normal form C (NFC) "
"first applies a canonical decomposition, then composes pre-combined "
"characters again."
msgstr ""
"对于每个字符，有两种正规形式：正规形式 C 和正规形式 D 。正规形式D（NFD）也称"
"为规范分解，并将每个字符转换为其分解形式。 正规形式C（NFC）首先应用规范分解，"
"然后再次组合预组合字符。"

#: ../../library/unicodedata.rst:173
msgid ""
"In addition to these two forms, there are two additional normal forms based "
"on compatibility equivalence. In Unicode, certain characters are supported "
"which normally would be unified with other characters. For example, U+2160 "
"(ROMAN NUMERAL ONE) is really the same thing as U+0049 (LATIN CAPITAL LETTER "
"I). However, it is supported in Unicode for compatibility with existing "
"character sets (for example, gb2312)."
msgstr ""
"除了这两种形式之外，还有两种基于兼容性等效的其他常规形式。 在 Unicode 中，支"
"持某些字符，这些字符通常与其他字符统一。 例如， U+2160（ROMAN NUMERAL ONE）"
"与 U+0049（LATIN CAPITAL LETTER I）完全相同。 但是， Unicode 支持它与现有字符"
"集（例如 gb2312 ）的兼容性。"

#: ../../library/unicodedata.rst:180
msgid ""
"The normal form KD (NFKD) will apply the compatibility decomposition, that "
"is, replace all compatibility characters with their equivalents. The normal "
"form KC (NFKC) first applies the compatibility decomposition, followed by "
"the canonical composition."
msgstr ""
"正规形式KD（NFKD）将应用兼容性分解，也就是用其等价项替换所有兼容性字符。 正规"
"形式KC（NFKC）首先应用兼容性分解，然后是规范组合。"

#: ../../library/unicodedata.rst:185
msgid ""
"Even if two unicode strings are normalized and look the same to a human "
"reader, if one has combining characters and the other doesn't, they may not "
"compare equal."
msgstr ""
"即使两个 unicode 字符串被规范化并且人类读者看起来相同，如果一个具有组合字符而"
"另一个没有，则它们可能无法相等。"

#: ../../library/unicodedata.rst:192
msgid ""
"Return whether the Unicode string *unistr* is in the normal form *form*. "
"Valid values for *form* are 'NFC', 'NFKC', 'NFD', and 'NFKD'."
msgstr ""
"判断 Unicode 字符串 *unistr* 是否为正规形式 *form*。 *form* 的有效值为 "
"'NFC', 'NFKC', 'NFD' 和 'NFKD'。"

#: ../../library/unicodedata.rst:198
msgid "In addition, the module exposes the following constant:"
msgstr "此外，该模块暴露了以下常量："

#: ../../library/unicodedata.rst:202
msgid "The version of the Unicode database used in this module."
msgstr "此模块中使用的 Unicode 数据库的版本。"

#: ../../library/unicodedata.rst:207
msgid ""
"This is an object that has the same methods as the entire module, but uses "
"the Unicode database version 3.2 instead, for applications that require this "
"specific version of the Unicode database (such as IDNA)."
msgstr ""
"这是一个与整个模块具有相同方法的对象，但对于需要此特定版本的 Unicode 数据库"
"（如 IDNA ）的应用程序，则使用 Unicode 数据库版本 3.2 。"

#: ../../library/unicodedata.rst:213
msgid "Footnotes"
msgstr "备注"

#: ../../library/unicodedata.rst:214
msgid "https://www.unicode.org/Public/16.0.0/ucd/NameAliases.txt"
msgstr "https://www.unicode.org/Public/16.0.0/ucd/NameAliases.txt"

#: ../../library/unicodedata.rst:216
msgid "https://www.unicode.org/Public/16.0.0/ucd/NamedSequences.txt"
msgstr "https://www.unicode.org/Public/16.0.0/ucd/NamedSequences.txt"

#: ../../library/unicodedata.rst:11
msgid "Unicode"
msgstr "Unicode"

#: ../../library/unicodedata.rst:11
msgid "character"
msgstr "字符"

#: ../../library/unicodedata.rst:11
msgid "database"
msgstr "数据库"
