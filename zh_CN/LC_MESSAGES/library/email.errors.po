# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# Rafael Fontenelle <rffontenelle@gmail.com>, 2025
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.12\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-07-11 15:45+0000\n"
"PO-Revision-Date: 2024-05-11 00:33+0000\n"
"Last-Translator: Rafael Fontenelle <rffontenelle@gmail.com>, 2025\n"
"Language-Team: Chinese (China) (https://app.transifex.com/python-doc/"
"teams/5390/zh_CN/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: zh_CN\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../library/email.errors.rst:2
msgid ":mod:`!email.errors`: Exception and Defect classes"
msgstr ""

#: ../../library/email.errors.rst:7
msgid "**Source code:** :source:`Lib/email/errors.py`"
msgstr ""

#: ../../library/email.errors.rst:11
msgid ""
"The following exception classes are defined in the :mod:`email.errors` "
"module:"
msgstr ""

#: ../../library/email.errors.rst:16
msgid ""
"This is the base class for all exceptions that the :mod:`email` package can "
"raise.  It is derived from the standard :exc:`Exception` class and defines "
"no additional methods."
msgstr ""

#: ../../library/email.errors.rst:23
msgid ""
"This is the base class for exceptions raised by the :class:`~email.parser."
"Parser` class.  It is derived from :exc:`MessageError`.  This class is also "
"used internally by the parser used by :mod:`~email.headerregistry`."
msgstr ""

#: ../../library/email.errors.rst:31
msgid ""
"Raised under some error conditions when parsing the :rfc:`5322` headers of a "
"message, this class is derived from :exc:`MessageParseError`.  The :meth:"
"`~email.message.EmailMessage.set_boundary` method will raise this error if "
"the content type is unknown when the method is called. :class:`~email.header."
"Header` may raise this error for certain base64 decoding errors, and when an "
"attempt is made to create a header that appears to contain an embedded "
"header (that is, there is what is supposed to be a continuation line that "
"has no leading whitespace and looks like a header)."
msgstr ""

#: ../../library/email.errors.rst:43
msgid "Deprecated and no longer used."
msgstr ""

#: ../../library/email.errors.rst:48
msgid ""
"Raised if the :meth:`~email.message.Message.attach` method is called on an "
"instance of a class derived from :class:`~email.mime.nonmultipart."
"MIMENonMultipart` (e.g. :class:`~email.mime.image.MIMEImage`). :exc:"
"`MultipartConversionError` multiply inherits from :exc:`MessageError` and "
"the built-in :exc:`TypeError`."
msgstr ""
"Raised 当 :meth:`~email.message.Message.attach` 方法是在一个派生自 :class:"
"`~email.mime.nonmultipart.MIMENonMultipart` 的类 (例如 :class:`~email.mime."
"image.MIMEImage`) 的实例上被调用时会引发该异常。 :exc:"
"`MultipartConversionError` 多重继承自 :exc:`MessageError` 和内置的 :exc:"
"`TypeError`。"

#: ../../library/email.errors.rst:58
msgid ""
"Raised when an error occurs when the :mod:`~email.generator` outputs headers."
msgstr ""

#: ../../library/email.errors.rst:64
msgid ""
"This is the base class for all defects found when parsing email messages. It "
"is derived from :exc:`ValueError`."
msgstr ""

#: ../../library/email.errors.rst:69
msgid ""
"This is the base class for all defects found when parsing email headers. It "
"is derived from :exc:`MessageDefect`."
msgstr ""

#: ../../library/email.errors.rst:72
msgid ""
"Here is the list of the defects that the :class:`~email.parser.FeedParser` "
"can find while parsing messages.  Note that the defects are added to the "
"message where the problem was found, so for example, if a message nested "
"inside a :mimetype:`multipart/alternative` had a malformed header, that "
"nested message object would have a defect, but the containing messages would "
"not."
msgstr ""

#: ../../library/email.errors.rst:78
msgid ""
"All defect classes are subclassed from :class:`email.errors.MessageDefect`."
msgstr ""

#: ../../library/email.errors.rst:82
msgid ""
"A message claimed to be a multipart, but had no :mimetype:`boundary` "
"parameter."
msgstr "一条消息宣称有多个部分，但却没有 :mimetype:`boundary` 形参。"

#: ../../library/email.errors.rst:87
msgid ""
"The start boundary claimed in the :mailheader:`Content-Type` header was "
"never found."
msgstr "在 :mailheader:`Content-Type` 标头中宣称的开始边界无法找到。"

#: ../../library/email.errors.rst:92
msgid ""
"A start boundary was found, but no corresponding close boundary was ever "
"found."
msgstr "找到了开始边界，但找不到对应的结束边界。"

#: ../../library/email.errors.rst:99
msgid "The message had a continuation line as its first header line."
msgstr "消息以一个后续行作为其第一个标头行。"

#: ../../library/email.errors.rst:103
msgid "A \"Unix From\" header was found in the middle of a header block."
msgstr "在标头块中间发现了一个 \"Unix From\" 标头。"

#: ../../library/email.errors.rst:107
msgid ""
"A line was found while parsing headers that had no leading white space but "
"contained no ':'.  Parsing continues assuming that the line represents the "
"first line of the body."
msgstr ""

#: ../../library/email.errors.rst:115
msgid ""
"A header was found that was missing a colon, or was otherwise malformed."
msgstr "找到一个缺失了冒号，或者是格式错误的标头。"

#: ../../library/email.errors.rst:117
msgid "This defect has not been used for several Python versions."
msgstr ""

#: ../../library/email.errors.rst:122
msgid ""
"A message claimed to be a :mimetype:`multipart`, but no subparts were found. "
"Note that when a message has this defect, its :meth:`~email.message.Message."
"is_multipart` method may return ``False`` even though its content type "
"claims to be :mimetype:`multipart`."
msgstr ""

#: ../../library/email.errors.rst:129
msgid ""
"When decoding a block of base64 encoded bytes, the padding was not correct. "
"Enough padding is added to perform the decode, but the resulting decoded "
"bytes may be invalid."
msgstr ""

#: ../../library/email.errors.rst:135
msgid ""
"When decoding a block of base64 encoded bytes, characters outside the base64 "
"alphabet were encountered.  The characters are ignored, but the resulting "
"decoded bytes may be invalid."
msgstr ""
"当解码一个 base64 编码的字节分块时，遇到了 base64 字符表以外的字符。 这些字符"
"会被忽略，但作为结果的已解码字节串可能无效。"

#: ../../library/email.errors.rst:141
msgid ""
"When decoding a block of base64 encoded bytes, the number of non-padding "
"base64 characters was invalid (1 more than a multiple of 4).  The encoded "
"block was kept as-is."
msgstr ""

#: ../../library/email.errors.rst:147
msgid ""
"When decoding an invalid or unparsable date field.  The original value is "
"kept as-is."
msgstr "当解码一个无效或不可解析的数据字段时引发。 原始值会被保持原样。"
