# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# Rafael Fontenelle <rffontenelle@gmail.com>, 2025
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.9\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-13 17:35+0000\n"
"PO-Revision-Date: 2025-07-18 19:18+0000\n"
"Last-Translator: Rafael Fontenelle <rffontenelle@gmail.com>, 2025\n"
"Language-Team: Chinese (China) (https://app.transifex.com/python-doc/"
"teams/5390/zh_CN/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: zh_CN\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../library/venv.rst:2
msgid ":mod:`venv` --- Creation of virtual environments"
msgstr ":mod:`venv` --- 创建虚拟环境"

#: ../../library/venv.rst:12
msgid "**Source code:** :source:`Lib/venv/`"
msgstr "**源码：** :source:`Lib/venv/`"

#: ../../library/venv.rst:18
msgid ""
"The :mod:`venv` module provides support for creating lightweight \"virtual "
"environments\" with their own site directories, optionally isolated from "
"system site directories.  Each virtual environment has its own Python binary "
"(which matches the version of the binary that was used to create this "
"environment) and can have its own independent set of installed Python "
"packages in its site directories."
msgstr ""
":mod:`venv` 模块支持使用自己的站点目录创建轻量级“虚拟环境”，可选择与系统站点"
"目录隔离。每个虚拟环境都有自己的 Python 二进制文件（与用于创建此环境的二进制"
"文件的版本相匹配），并且可以在其站点目录中拥有自己独立的已安装 Python 软件包"
"集。"

#: ../../library/venv.rst:25
msgid "See :pep:`405` for more information about Python virtual environments."
msgstr "有关 Python 虚拟环境的更多信息，请参阅 :pep:`405` 。"

#: ../../library/venv.rst:29
msgid ""
"`Python Packaging User Guide: Creating and using virtual environments "
"<https://packaging.python.org/guides/installing-using-pip-and-virtual-"
"environments/#creating-a-virtual-environment>`__"
msgstr ""
"`Python 打包用户指南：创建和使用虚拟环境 <https://packaging.python.org/"
"guides/installing-using-pip-and-virtual-environments/#creating-a-virtual-"
"environment>`__"

#: ../../library/venv.rst:34
msgid "Creating virtual environments"
msgstr "创建虚拟环境"

#: ../../using/venv-create.inc:1
msgid ""
"Creation of :ref:`virtual environments <venv-def>` is done by executing the "
"command ``venv``::"
msgstr "通过执行 ``venv`` 指令来创建一个 :ref:`虚拟环境 <venv-def>`::"

#: ../../using/venv-create.inc:6
msgid ""
"Running this command creates the target directory (creating any parent "
"directories that don't exist already) and places a ``pyvenv.cfg`` file in it "
"with a ``home`` key pointing to the Python installation from which the "
"command was run (a common name for the target directory is ``.venv``).  It "
"also creates a ``bin`` (or ``Scripts`` on Windows) subdirectory containing a "
"copy/symlink of the Python binary/binaries (as appropriate for the platform "
"or arguments used at environment creation time). It also creates an "
"(initially empty) ``lib/pythonX.Y/site-packages`` subdirectory (on Windows, "
"this is ``Lib\\site-packages``). If an existing directory is specified, it "
"will be re-used."
msgstr ""
"运行此命令将创建目标目录（父目录若不存在也将创建），并放置一个 ``pyvenv."
"cfg`` 文件在其中，文件中有一个 ``home`` 键，它的值指向运行此命令的 Python 安"
"装（目标目录的常用名称是 ``.venv``）。它还会创建一个 ``bin`` 子目录（在 "
"Windows 上是 ``Scripts``），其中包含 Python 二进制文件的副本或符号链接（视创"
"建环境时使用的平台或参数而定）。它还会创建一个（初始为空的） ``lib/pythonX.Y/"
"site-packages`` 子目录（在 Windows 上是 ``Lib\\site-packages``）。如果指定了"
"一个现有的目录，这个目录就将被重新使用。"

#: ../../using/venv-create.inc:17
msgid ""
"``pyvenv`` was the recommended tool for creating virtual environments for "
"Python 3.3 and 3.4, and is `deprecated in Python 3.6 <https://docs.python."
"org/dev/whatsnew/3.6.html#deprecated-features>`_."
msgstr ""
"``pyvenv`` 是 Python 3.3 和 3.4 中创建虚拟环境的推荐工具，不过 `在 Python "
"3.6 中已弃用 <https://docs.python.org/dev/whatsnew/3.6.html#deprecated-"
"features>`_。"

#: ../../using/venv-create.inc:22
msgid ""
"The use of ``venv`` is now recommended for creating virtual environments."
msgstr "现在推荐使用 ``venv`` 来创建虚拟环境。"

#: ../../using/venv-create.inc:27
msgid "On Windows, invoke the ``venv`` command as follows::"
msgstr "在 Windows 上，调用 ``venv`` 命令如下::"

#: ../../using/venv-create.inc:31
msgid ""
"Alternatively, if you configured the ``PATH`` and ``PATHEXT`` variables for "
"your :ref:`Python installation <using-on-windows>`::"
msgstr ""
"或者，如果已经为 :ref:`Python 安装 <using-on-windows>` 配置好 ``PATH`` 和 "
"``PATHEXT`` 变量::"

#: ../../using/venv-create.inc:36
msgid "The command, if run with ``-h``, will show the available options::"
msgstr "本命令如果以 ``-h`` 参数运行，将显示可用的选项::"

#: ../../using/venv-create.inc:70
msgid ""
"Add ``--upgrade-deps`` option to upgrade pip + setuptools to the latest on "
"PyPI"
msgstr ""
"添加 ``--upgrade-deps`` 选项，用于将 pip + setuptools 升级到 PyPI 上的最新版"
"本"

#: ../../using/venv-create.inc:73
msgid ""
"Installs pip by default, added the ``--without-pip``  and ``--copies`` "
"options"
msgstr "默认安装 pip，并添加 ``--without-pip`` 和 ``--copies`` 选项"

#: ../../using/venv-create.inc:77
msgid ""
"In earlier versions, if the target directory already existed, an error was "
"raised, unless the ``--clear`` or ``--upgrade`` option was provided."
msgstr ""
"在早期版本中，如果目标目录已存在，将引发错误，除非使用了 ``--clear`` 或 ``--"
"upgrade`` 选项。"

#: ../../using/venv-create.inc:82
msgid ""
"While symlinks are supported on Windows, they are not recommended. Of "
"particular note is that double-clicking ``python.exe`` in File Explorer will "
"resolve the symlink eagerly and ignore the virtual environment."
msgstr ""
"虽然 Windows 支持符号链接，但不推荐使用它们。特别注意，在文件资源管理器中双"
"击 ``python.exe`` 将立即解析符号链接，并忽略虚拟环境。"

#: ../../using/venv-create.inc:87
msgid ""
"On Microsoft Windows, it may be required to enable the ``Activate.ps1`` "
"script by setting the execution policy for the user. You can do this by "
"issuing the following PowerShell command:"
msgstr ""
"在 Microsoft Windows 上，为了启用 ``Activate.ps1`` 脚本，可能需要修改用户的执"
"行策略。可以运行以下 PowerShell 命令来执行此操作："

#: ../../using/venv-create.inc:91
msgid ""
"PS C:\\> Set-ExecutionPolicy -ExecutionPolicy RemoteSigned -Scope CurrentUser"
msgstr ""
"PS C:\\> Set-ExecutionPolicy -ExecutionPolicy RemoteSigned -Scope CurrentUser"

#: ../../using/venv-create.inc:93
msgid ""
"See `About Execution Policies <https://go.microsoft.com/fwlink/?"
"LinkID=135170>`_ for more information."
msgstr ""
"参阅 `About Execution Policies <https://go.microsoft.com/fwlink/?"
"LinkID=135170>`_ 以获取更多信息。"

#: ../../using/venv-create.inc:97
msgid ""
"The created ``pyvenv.cfg`` file also includes the ``include-system-site-"
"packages`` key, set to ``true`` if ``venv`` is run with the ``--system-site-"
"packages`` option, ``false`` otherwise."
msgstr ""
"生成的 ``pyvenv.cfg`` 文件还包括 ``include-system-site-packages`` 键，如果运"
"行 ``venv`` 时带有 ``--system-site-packages`` 选项，则键值为 ``true``，否则"
"为 ``false``。"

#: ../../using/venv-create.inc:101
msgid ""
"Unless the ``--without-pip`` option is given, :mod:`ensurepip` will be "
"invoked to bootstrap ``pip`` into the virtual environment."
msgstr ""
"除非采用 ``--without-pip`` 选项，否则将会调用 :mod:`ensurepip` 将 ``pip`` 引"
"导到虚拟环境中。"

#: ../../using/venv-create.inc:104
msgid ""
"Multiple paths can be given to ``venv``, in which case an identical virtual "
"environment will be created, according to the given options, at each "
"provided path."
msgstr ""
"可以向 ``venv`` 传入多个路径，此时将根据给定的选项，在所给的每个路径上创建相"
"同的虚拟环境。"

#: ../../using/venv-create.inc:108
msgid ""
"Once a virtual environment has been created, it can be \"activated\" using a "
"script in the virtual environment's binary directory. The invocation of the "
"script is platform-specific (`<venv>` must be replaced by the path of the "
"directory containing the virtual environment):"
msgstr ""
"创建虚拟环境后，可以使用虚拟环境的二进制目录中的脚本来“激活”该环境。不同平台"
"调用的脚本是不同的（须将 `<venv>` 替换为包含虚拟环境的目录路径）："

#: ../../using/venv-create.inc:114
msgid "Platform"
msgstr "平台"

#: ../../using/venv-create.inc:114
msgid "Shell"
msgstr "Shell"

#: ../../using/venv-create.inc:114
msgid "Command to activate virtual environment"
msgstr "用于激活虚拟环境的命令"

#: ../../using/venv-create.inc:116
msgid "POSIX"
msgstr "POSIX"

#: ../../using/venv-create.inc:116
msgid "bash/zsh"
msgstr "bash/zsh"

#: ../../using/venv-create.inc:116
msgid "$ source <venv>/bin/activate"
msgstr "$ source <venv>/bin/activate"

#: ../../using/venv-create.inc:118
msgid "fish"
msgstr "fish"

#: ../../using/venv-create.inc:118
msgid "$ source <venv>/bin/activate.fish"
msgstr "$ source <venv>/bin/activate.fish"

#: ../../using/venv-create.inc:120
msgid "csh/tcsh"
msgstr "csh/tcsh"

#: ../../using/venv-create.inc:120
msgid "$ source <venv>/bin/activate.csh"
msgstr "$ source <venv>/bin/activate.csh"

#: ../../using/venv-create.inc:122
msgid "PowerShell Core"
msgstr "PowerShell Core"

#: ../../using/venv-create.inc:122
msgid "$ <venv>/bin/Activate.ps1"
msgstr "$ <venv>/bin/Activate.ps1"

#: ../../using/venv-create.inc:124
msgid "Windows"
msgstr "Windows"

#: ../../using/venv-create.inc:124
msgid "cmd.exe"
msgstr "cmd.exe"

#: ../../using/venv-create.inc:124
msgid "C:\\\\> <venv>\\\\Scripts\\\\activate.bat"
msgstr "C:\\\\> <venv>\\\\Scripts\\\\activate.bat"

#: ../../using/venv-create.inc:126
msgid "PowerShell"
msgstr "PowerShell"

#: ../../using/venv-create.inc:126
msgid "PS C:\\\\> <venv>\\\\Scripts\\\\Activate.ps1"
msgstr "PS C:\\\\> <venv>\\\\Scripts\\\\Activate.ps1"

#: ../../using/venv-create.inc:129
msgid ""
"When a virtual environment is active, the :envvar:`VIRTUAL_ENV` environment "
"variable is set to the path of the virtual environment. This can be used to "
"check if one is running inside a virtual environment."
msgstr ""
"当一个虚拟环境被激活时，:envvar:`VIRTUAL_ENV` 环境变量会被设为该虚拟环境的路"
"径。 这可被用来检测程序是否运行在虚拟环境中。"

#: ../../using/venv-create.inc:133
msgid ""
"You don't specifically *need* to activate an environment; activation just "
"prepends the virtual environment's binary directory to your path, so that "
"\"python\" invokes the virtual environment's Python interpreter and you can "
"run installed scripts without having to use their full path. However, all "
"scripts installed in a virtual environment should be runnable without "
"activating it, and run with the virtual environment's Python automatically."
msgstr ""
"激活环境不是 *必须* 的，激活只是将虚拟环境的二进制目录添加到搜索路径中，这样 "
"\"python\" 命令将调用虚拟环境的 Python 解释器，可以运行其中已安装的脚本，而不"
"必输入其完整路径。但是，安装在虚拟环境中的所有脚本都应在不激活的情况下可运"
"行，并自动与虚拟环境的 Python 一起运行。"

#: ../../using/venv-create.inc:140
msgid ""
"You can deactivate a virtual environment by typing \"deactivate\" in your "
"shell. The exact mechanism is platform-specific and is an internal "
"implementation detail (typically a script or shell function will be used)."
msgstr ""
"在 shell 中输入 \"deactivate\" 可以退出虚拟环境。具体机制取决于不同平台，并且"
"是内部实现（通常使用脚本或 shell 函数）。"

#: ../../using/venv-create.inc:144
msgid "``fish`` and ``csh`` activation scripts."
msgstr "``fish`` 和 ``csh`` 激活脚本。"

#: ../../using/venv-create.inc:147
msgid ""
"PowerShell activation scripts installed under POSIX for PowerShell Core "
"support."
msgstr "在 POSIX 上安装 PowerShell 激活脚本，以支持 PowerShell Core。"

#: ../../library/venv.rst:41
msgid ""
"A virtual environment is a Python environment such that the Python "
"interpreter, libraries and scripts installed into it are isolated from those "
"installed in other virtual environments, and (by default) any libraries "
"installed in a \"system\" Python, i.e., one which is installed as part of "
"your operating system."
msgstr ""
"虚拟环境是一个 Python 环境，安装到其中的 Python 解释器、库和脚本与其他虚拟环"
"境中的内容是隔离的，且（默认）与“系统级” Python（操作系统的一部分）中安装的库"
"是隔离的。"

#: ../../library/venv.rst:47
msgid ""
"A virtual environment is a directory tree which contains Python executable "
"files and other files which indicate that it is a virtual environment."
msgstr ""
"虚拟环境是一个目录树，其中包含 Python 可执行文件和其他文件，其他文件指示了这"
"是一个是虚拟环境。"

#: ../../library/venv.rst:50
msgid ""
"Common installation tools such as setuptools_ and pip_ work as expected with "
"virtual environments. In other words, when a virtual environment is active, "
"they install Python packages into the virtual environment without needing to "
"be told to do so explicitly."
msgstr ""
"常用安装工具如 setuptools_ 和 pip_ 可以在虚拟环境中按预期工作。换句话说，当虚"
"拟环境被激活，它们就会将 Python 软件包安装到虚拟环境中，无需明确指示。"

#: ../../library/venv.rst:55
msgid ""
"When a virtual environment is active (i.e., the virtual environment's Python "
"interpreter is running), the attributes :attr:`sys.prefix` and :attr:`sys."
"exec_prefix` point to the base directory of the virtual environment, "
"whereas :attr:`sys.base_prefix` and :attr:`sys.base_exec_prefix` point to "
"the non-virtual environment Python installation which was used to create the "
"virtual environment. If a virtual environment is not active, then :attr:`sys."
"prefix` is the same as :attr:`sys.base_prefix` and :attr:`sys.exec_prefix` "
"is the same as :attr:`sys.base_exec_prefix` (they all point to a non-virtual "
"environment Python installation)."
msgstr ""
"当虚拟环境被激活（即虚拟环境的 Python 解释器正在运行），属性 :attr:`sys."
"prefix` 和 :attr:`sys.exec_prefix` 指向的是虚拟环境的基础目录，而 :attr:`sys."
"base_prefix` 和 :attr:`sys.base_exec_prefix` 指向非虚拟环境的 Python 安装，即"
"曾用于创建虚拟环境的那个 Python 安装。如果虚拟环境没有被激活，则 :attr:`sys."
"prefix` 与 :attr:`sys.base_prefix` 相同，且 :attr:`sys.exec_prefix` 与 :attr:"
"`sys.base_exec_prefix` 相同（它们均指向非虚拟环境的 Python 安装）。"

#: ../../library/venv.rst:66
msgid ""
"When a virtual environment is active, any options that change the "
"installation path will be ignored from all :mod:`distutils` configuration "
"files to prevent projects being inadvertently installed outside of the "
"virtual environment."
msgstr ""
"当虚拟环境被激活，所有 :mod:`distutils` 配置文件中更改安装路径的选项都会被忽"
"略，以防止无意中将项目安装在虚拟环境之外。"

#: ../../library/venv.rst:71
msgid ""
"When working in a command shell, users can make a virtual environment active "
"by running an ``activate`` script in the virtual environment's executables "
"directory (the precise filename and command to use the file is shell-"
"dependent), which prepends the virtual environment's directory for "
"executables to the ``PATH`` environment variable for the running shell. "
"There should be no need in other circumstances to activate a virtual "
"environment; scripts installed into virtual environments have a \"shebang\" "
"line which points to the virtual environment's Python interpreter. This "
"means that the script will run with that interpreter regardless of the value "
"of ``PATH``. On Windows, \"shebang\" line processing is supported if you "
"have the Python Launcher for Windows installed (this was added to Python in "
"3.3 - see :pep:`397` for more details). Thus, double-clicking an installed "
"script in a Windows Explorer window should run the script with the correct "
"interpreter without there needing to be any reference to its virtual "
"environment in ``PATH``."
msgstr ""
"在命令行 shell 中工作时，用户可以运行虚拟环境可执行文件目录中的 ``activate`` "
"脚本来激活虚拟环境（调用该文件的确切文件名和命令取决于 shell），这会将虚拟环"
"境的可执行文件目录添加到当前 shell 的 ``PATH`` 环境变量。在其他情况下，无需激"
"活虚拟环境。安装到虚拟环境中的脚本有 \"shebang\" 行，指向虚拟环境的 Python 解"
"释器。这意味着无论 ``PATH`` 的值如何，脚本都将与该解释器一起运行。在 Windows "
"上，如果已安装 Python Launcher for Windows，则支持处理 \"shebang\" 行（此功能"
"在 Python 3.3 中添加，详情请参阅 :pep:`397`）。这样，在 Windows 资源管理器中"
"双击已安装的脚本，应该会使用正确的解释器运行该脚本，而在 ``PATH`` 中无需指向"
"其虚拟环境。"

#: ../../library/venv.rst:91
msgid "API"
msgstr "API"

#: ../../library/venv.rst:95
msgid ""
"The high-level method described above makes use of a simple API which "
"provides mechanisms for third-party virtual environment creators to "
"customize environment creation according to their needs, the :class:"
"`EnvBuilder` class."
msgstr ""
"上述的高级方法使用了一个简单的 API，该 API 提供了一种机制，第三方虚拟环境创建"
"者可以根据其需求自定义环境创建过程，该 API 为 :class:`EnvBuilder` 类。"

#: ../../library/venv.rst:103
msgid ""
"The :class:`EnvBuilder` class accepts the following keyword arguments on "
"instantiation:"
msgstr ":class:`EnvBuilder` 类在实例化时接受以下关键字参数："

#: ../../library/venv.rst:106
msgid ""
"``system_site_packages`` -- a Boolean value indicating that the system "
"Python site-packages should be available to the environment (defaults to "
"``False``)."
msgstr ""
"``system_site_packages`` -- 一个布尔值，要求系统 Python 的 site-packages 对环"
"境可用（默认为 ``False``）。"

#: ../../library/venv.rst:109
msgid ""
"``clear`` -- a Boolean value which, if true, will delete the contents of any "
"existing target directory, before creating the environment."
msgstr ""
"``clear`` -- 一个布尔值，如果为 true，则在创建环境前将删除目标目录的现有内"
"容。"

#: ../../library/venv.rst:112
msgid ""
"``symlinks`` -- a Boolean value indicating whether to attempt to symlink the "
"Python binary rather than copying."
msgstr ""
"``symlinks`` -- 一个布尔值，指示是否尝试符号链接 Python 二进制文件，而不是进"
"行复制。"

#: ../../library/venv.rst:115
msgid ""
"``upgrade`` -- a Boolean value which, if true, will upgrade an existing "
"environment with the running Python - for use when that Python has been "
"upgraded in-place (defaults to ``False``)."
msgstr ""
"``upgrade`` -- 一个布尔值，如果为 true，则将使用当前运行的 Python 去升级一个"
"现有的环境，这主要在原位置的 Python 更新后使用（默认为 ``False``）。"

#: ../../library/venv.rst:119
msgid ""
"``with_pip`` -- a Boolean value which, if true, ensures pip is installed in "
"the virtual environment. This uses :mod:`ensurepip` with the ``--default-"
"pip`` option."
msgstr ""
"``with_pip`` -- 一个布尔值，如果为 true，则确保在虚拟环境中已安装 pip。这使用"
"的是带有 ``--default-pip`` 选项的 :mod:`ensurepip`。"

#: ../../library/venv.rst:123
msgid ""
"``prompt`` -- a String to be used after virtual environment is activated "
"(defaults to ``None`` which means directory name of the environment would be "
"used). If the special string ``\".\"`` is provided, the basename of the "
"current directory is used as the prompt."
msgstr ""
"``prompt`` -- 激活虚拟环境后显示的提示符（默认为 ``None``，表示使用环境所在的"
"目录名称）。如果使用了 ``\".\"`` 这一特殊字符串，则使用当前目录的基本名称作为"
"提示符。"

#: ../../library/venv.rst:128
msgid "``upgrade_deps`` -- Update the base venv modules to the latest on PyPI"
msgstr "``upgrade_deps`` -- 将基本 venv 模块更新为 PyPI 上的最新版本。"

#: ../../library/venv.rst:130 ../../library/venv.rst:259
msgid "Added the ``with_pip`` parameter"
msgstr "添加 ``with_pip`` 参数"

#: ../../library/venv.rst:133 ../../library/venv.rst:262
msgid "Added the ``prompt`` parameter"
msgstr "添加 ``prompt`` 参数"

#: ../../library/venv.rst:136
msgid "Added the ``upgrade_deps`` parameter"
msgstr "添加 ``upgrade_deps`` 参数"

#: ../../library/venv.rst:139
msgid ""
"Creators of third-party virtual environment tools will be free to use the "
"provided :class:`EnvBuilder` class as a base class."
msgstr ""
"第三方虚拟环境工具的创建者可以自由地将此处提供的 :class:`EnvBuilder` 类作为基"
"类。"

#: ../../library/venv.rst:142
msgid "The returned env-builder is an object which has a method, ``create``:"
msgstr "返回的 env-builder 是一个对象，包含一个 ``create`` 方法："

#: ../../library/venv.rst:146
msgid ""
"Create a virtual environment by specifying the target directory (absolute or "
"relative to the current directory) which is to contain the virtual "
"environment.  The ``create`` method will either create the environment in "
"the specified directory, or raise an appropriate exception."
msgstr ""
"指定要建立虚拟环境的目标目录（绝对路径或相对于当前路径）来创建虚拟环境。"
"``create`` 方法将在指定目录中创建环境，或者引发对应的异常。"

#: ../../library/venv.rst:152
msgid ""
"The ``create`` method of the :class:`EnvBuilder` class illustrates the hooks "
"available for subclass customization::"
msgstr ":class:`EnvBuilder` 类的 ``create`` 方法定义了可用于定制子类的钩子::"

#: ../../library/venv.rst:167
msgid ""
"Each of the methods :meth:`ensure_directories`, :meth:"
"`create_configuration`, :meth:`setup_python`, :meth:`setup_scripts` and :"
"meth:`post_setup` can be overridden."
msgstr ""
"每个方法 :meth:`ensure_directories`, :meth:`create_configuration`, :meth:"
"`setup_python`, :meth:`setup_scripts` 和 :meth:`post_setup` 都可以被重写。"

#: ../../library/venv.rst:173
msgid ""
"Creates the environment directory and all necessary directories, and returns "
"a context object.  This is just a holder for attributes (such as paths), for "
"use by the other methods. The directories are allowed to exist already, as "
"long as either ``clear`` or ``upgrade`` were specified to allow operating on "
"an existing environment directory."
msgstr ""
"创建环境目录和所有必需的目录，并返回一个上下文对象。该对象只是一个容器，保存"
"属性（如路径），供其他方法使用。允许目录已经存在，如果指定了 ``clear`` 或 "
"``upgrade`` 就允许在现有环境目录上进行操作。"

#: ../../library/venv.rst:181
msgid "Creates the ``pyvenv.cfg`` configuration file in the environment."
msgstr "在环境中创建 ``pyvenv.cfg`` 配置文件。"

#: ../../library/venv.rst:185
msgid ""
"Creates a copy or symlink to the Python executable in the environment. On "
"POSIX systems, if a specific executable ``python3.x`` was used, symlinks to "
"``python`` and ``python3`` will be created pointing to that executable, "
"unless files with those names already exist."
msgstr ""
"在环境中创建 Python 可执行文件的拷贝或符号链接。在 POSIX 系统上，如果给定了可"
"执行文件 ``python3.x``，将创建指向该可执行文件的 ``python`` 和 ``python3`` 符"
"号链接，除非相同名称的文件已经存在。"

#: ../../library/venv.rst:192
msgid ""
"Installs activation scripts appropriate to the platform into the virtual "
"environment."
msgstr "将适用于平台的激活脚本安装到虚拟环境中。"

#: ../../library/venv.rst:197
msgid ""
"Upgrades the core venv dependency packages (currently ``pip`` and "
"``setuptools``) in the environment. This is done by shelling out to the "
"``pip`` executable in the environment."
msgstr ""
"升级环境中 venv 依赖的核心软件包（当前为 ``pip`` 和 ``setuptools``）。通过在"
"环境中使用 ``pip`` 可执行文件来完成。"

#: ../../library/venv.rst:205
msgid ""
"A placeholder method which can be overridden in third party implementations "
"to pre-install packages in the virtual environment or perform other post-"
"creation steps."
msgstr ""
"占位方法，可以在第三方实现中重写，用于在虚拟环境中预安装软件包，或是其他创建"
"后要执行的步骤。"

#: ../../library/venv.rst:209
msgid ""
"Windows now uses redirector scripts for ``python[w].exe`` instead of copying "
"the actual binaries. In 3.7.2 only :meth:`setup_python` does nothing unless "
"running from a build in the source tree."
msgstr ""
"Windows 现在为 ``python[w].exe`` 使用重定向脚本，而不是复制实际的二进制文件。"
"仅在 3.7.2 中，除非运行的是源码树中的构建，否则 :meth:`setup_python` 不会执行"
"任何操作。"

#: ../../library/venv.rst:214
msgid ""
"Windows copies the redirector scripts as part of :meth:`setup_python` "
"instead of :meth:`setup_scripts`. This was not the case in 3.7.2. When using "
"symlinks, the original executables will be linked."
msgstr ""
"Windows 将重定向脚本复制为 :meth:`setup_python` 的一部分而非 :meth:"
"`setup_scripts`。在 3.7.2 中不是这种情况。使用符号链接时，将链接至原始可执行"
"文件。"

#: ../../library/venv.rst:219
msgid ""
"In addition, :class:`EnvBuilder` provides this utility method that can be "
"called from :meth:`setup_scripts` or :meth:`post_setup` in subclasses to "
"assist in installing custom scripts into the virtual environment."
msgstr ""
"此外，:class:`EnvBuilder` 提供了如下实用方法，可以从子类的 :meth:"
"`setup_scripts` 或 :meth:`post_setup` 调用，用来将自定义脚本安装到虚拟环境"
"中。"

#: ../../library/venv.rst:225
msgid ""
"*path* is the path to a directory that should contain subdirectories "
"\"common\", \"posix\", \"nt\", each containing scripts destined for the bin "
"directory in the environment.  The contents of \"common\" and the directory "
"corresponding to :data:`os.name` are copied after some text replacement of "
"placeholders:"
msgstr ""
"*path* 是一个目录的路径，该目录应包含子目录 \"common\", \"posix\", \"nt\"，每"
"个子目录存有发往对应环境中 bin 目录的脚本。在下列占位符替换完毕后，将复制 "
"\"common\" 的内容和与 :data:`os.name` 对应的子目录："

#: ../../library/venv.rst:231
msgid ""
"``__VENV_DIR__`` is replaced with the absolute path of the environment "
"directory."
msgstr "``__VENV_DIR__`` 会被替换为环境目录的绝对路径。"

#: ../../library/venv.rst:234
msgid ""
"``__VENV_NAME__`` is replaced with the environment name (final path segment "
"of environment directory)."
msgstr "``__VENV_NAME__`` 会被替换为环境名称（环境目录的最后一个字段）。"

#: ../../library/venv.rst:237
msgid ""
"``__VENV_PROMPT__`` is replaced with the prompt (the environment name "
"surrounded by parentheses and with a following space)"
msgstr ""
"``__VENV_PROMPT__`` 会被替换为提示符（用括号括起来的环境名称紧跟着一个空"
"格）。"

#: ../../library/venv.rst:240
msgid ""
"``__VENV_BIN_NAME__`` is replaced with the name of the bin directory (either "
"``bin`` or ``Scripts``)."
msgstr ""
"``__VENV_BIN_NAME__`` 会被替换为 bin 目录的名称（ ``bin`` 或 ``Scripts`` ）。"

#: ../../library/venv.rst:243
msgid ""
"``__VENV_PYTHON__`` is replaced with the absolute path of the environment's "
"executable."
msgstr "``__VENV_PYTHON__`` 会被替换为环境可执行文件的绝对路径。"

#: ../../library/venv.rst:246
msgid ""
"The directories are allowed to exist (for when an existing environment is "
"being upgraded)."
msgstr "允许目录已存在（用于升级现有环境时）。"

#: ../../library/venv.rst:249
msgid "There is also a module-level convenience function:"
msgstr "有一个方便实用的模块级别的函数:"

#: ../../library/venv.rst:254
msgid ""
"Create an :class:`EnvBuilder` with the given keyword arguments, and call "
"its :meth:`~EnvBuilder.create` method with the *env_dir* argument."
msgstr ""
"通过关键词参数来创建一个 :class:`EnvBuilder`，并且使用 *env_dir* 参数来调用它"
"的 :meth:`~EnvBuilder.create` 方法。"

#: ../../library/venv.rst:266
msgid "An example of extending ``EnvBuilder``"
msgstr "一个扩展 ``EnvBuilder`` 的例子"

#: ../../library/venv.rst:268
msgid ""
"The following script shows how to extend :class:`EnvBuilder` by implementing "
"a subclass which installs setuptools and pip into a created virtual "
"environment::"
msgstr ""
"下面的脚本展示了如何通过实现一个子类来扩展 :class:`EnvBuilder`。这个子类会安"
"装 setuptools 和 pip 到被创建的虚拟环境中。"

#: ../../library/venv.rst:487
msgid ""
"This script is also available for download `online <https://gist.github.com/"
"vsajip/4673395>`_."
msgstr ""
"这个脚本同样可以 `在线下载 <https://gist.github.com/vsajip/4673395>`_。"
