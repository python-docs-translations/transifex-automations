# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# eulalio barbero espinosa <eulalio@disroot.org>, 2024
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.10\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-01-10 16:06+0000\n"
"PO-Revision-Date: 2022-11-05 17:21+0000\n"
"Last-Translator: eulalio barbero espinosa <eulalio@disroot.org>, 2024\n"
"Language-Team: Spanish (Spain) (https://app.transifex.com/python-doc/"
"teams/5390/es_ES/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: es_ES\n"
"Plural-Forms: nplurals=3; plural=n == 1 ? 0 : n != 0 && n % 1000000 == 0 ? "
"1 : 2;\n"

#: ../../distutils/extending.rst:5
msgid "Extending Distutils"
msgstr "Extender Distutils"

#: ../../distutils/_setuptools_disclaimer.rst:3
msgid ""
"This document is being retained solely until the ``setuptools`` "
"documentation at https://setuptools.readthedocs.io/en/latest/setuptools.html "
"independently covers all of the relevant information currently included here."
msgstr ""
"Este documento se mantiene únicamente hasta que la documentación de "
"``setuptools`` en https://setuptools.readthedocs.io/en/latest/setuptools."
"html cubra de forma independiente toda la información relevante incluida "
"aquí actualmente."

#: ../../distutils/extending.rst:9
msgid ""
"Distutils can be extended in various ways.  Most extensions take the form of "
"new commands or replacements for existing commands.  New commands may be "
"written to support new types of platform-specific packaging, for example, "
"while replacements for existing commands may be made to modify details of "
"how the command operates on a package."
msgstr ""
"Distutils se puede ampliar de varias formas. La mayoría de las extensiones "
"toman la forma de nuevos comandos o reemplazos de comandos existentes. Se "
"pueden escribir nuevos comandos para admitir nuevos tipos de empaquetado "
"específicos de la plataforma, por ejemplo, mientras que los reemplazos de "
"comandos existentes se pueden hacer para modificar los detalles de cómo "
"opera el comando en un paquete."

#: ../../distutils/extending.rst:15
msgid ""
"Most extensions of the distutils are made within :file:`setup.py` scripts "
"that want to modify existing commands; many simply add a few file extensions "
"that should be copied into packages in addition to :file:`.py` files as a "
"convenience."
msgstr ""
"La mayoría de las extensiones de distutils se realizan dentro de los "
"scripts :file:`setup.py` que desean modificar comandos existentes; muchos "
"simplemente agregan algunas extensiones de archivo que deben copiarse en "
"paquetes además de los archivos :file:`.py` como una conveniencia."

#: ../../distutils/extending.rst:20
msgid ""
"Most distutils command implementations are subclasses of the :class:"
"`distutils.cmd.Command` class.  New commands may directly inherit from :"
"class:`Command`, while replacements often derive from :class:`Command` "
"indirectly, directly subclassing the command they are replacing.  Commands "
"are required to derive from :class:`Command`."
msgstr ""
"La mayoría de las implementaciones de comandos de distutils son subclases de "
"la clase :class:`distutils.cmd.Command`.  Los nuevos comandos pueden heredar "
"directamente de :class:`Command`, mientras que las sustituciones a menudo "
"derivan de :class:`Command` indirectamente, subclasificando directamente el "
"comando al que sustituyen.  Los comandos deben derivar de :class:`Command`."

#: ../../distutils/extending.rst:35
msgid "Integrating new commands"
msgstr "Integración de nuevos comandos"

#: ../../distutils/extending.rst:37
msgid ""
"There are different ways to integrate new command implementations into "
"distutils.  The most difficult is to lobby for the inclusion of the new "
"features in distutils itself, and wait for (and require) a version of Python "
"that provides that support.  This is really hard for many reasons."
msgstr ""
"Hay diferentes formas de integrar nuevas implementaciones de comandos en "
"distutils. La más difícil es hacer lobby para la inclusión de las nuevas "
"características en distutils en sí mismo, y esperar (y requerir) una versión "
"de Python que proporcione ese soporte. Esto es realmente difícil por muchas "
"razones."

#: ../../distutils/extending.rst:42
msgid ""
"The most common, and possibly the most reasonable for most needs, is to "
"include the new implementations with your :file:`setup.py` script, and cause "
"the :func:`distutils.core.setup` function use them::"
msgstr ""
"Lo más común, y posiblemente lo más razonable para la mayoría de las "
"necesidades, es incluir las nuevas implementaciones con tu script :file:"
"`setup.py`, y hacer que la función :func:`distutils.core.setup` las utilice."

#: ../../distutils/extending.rst:57
msgid ""
"This approach is most valuable if the new implementations must be used to "
"use a particular package, as everyone interested in the package will need to "
"have the new command implementation."
msgstr ""
"Este enfoque es más valioso si las nuevas implementaciones deben usarse para "
"utilizar un paquete concreto, ya que todos los interesados en el paquete "
"necesitarán tener la nueva implementación del comando."

#: ../../distutils/extending.rst:61
msgid ""
"Beginning with Python 2.4, a third option is available, intended to allow "
"new commands to be added which can support existing :file:`setup.py` scripts "
"without requiring modifications to the Python installation.  This is "
"expected to allow third-party extensions to provide support for additional "
"packaging systems, but the commands can be used for anything distutils "
"commands can be used for.  A new configuration option, ``command_packages`` "
"(command-line option :option:`!--command-packages`), can be used to specify "
"additional packages to be searched for modules implementing commands.  Like "
"all distutils options, this can be specified on the command line or in a "
"configuration file.  This option can only be set in the ``[global]`` section "
"of a configuration file, or before any commands on the command line.  If set "
"in a configuration file, it can be overridden from the command line; setting "
"it to an empty string on the command line causes the default to be used.  "
"This should never be set in a configuration file provided with a package."
msgstr ""
"A partir de Python 2.4, hay disponible una tercera opción, pensada para "
"permitir que se añadan nuevos comandos que puedan soportar los scripts "
"existentes de :file:`setup.py` sin requerir modificaciones en la instalación "
"de Python.  Se espera que esto permita que extensiones de terceros "
"proporcionen soporte para sistemas de empaquetado adicionales, pero los "
"comandos se pueden utilizar para cualquier cosa para la que se puedan "
"utilizar los comandos de distutils.  Una nueva opción de configuración, "
"``command_packages`` (opción de línea de comandos :option:`!--command-"
"packages`), puede usarse para especificar paquetes adicionales en los que "
"buscar módulos que implementen comandos.  Como todas las opciones de "
"distutils, puede especificarse en la línea de órdenes o en un archivo de "
"configuración.  Esta opción sólo puede establecerse en la sección "
"``[global]`` de un archivo de configuración, o antes de cualquier orden en "
"la línea de órdenes.  Si se establece en un archivo de configuración, puede "
"anularse desde la línea de comandos; si se establece como una cadena vacía "
"en la línea de comandos, se utilizará el valor predeterminado.  Nunca debe "
"establecerse en un fichero de configuración proporcionado con un paquete."

#: ../../distutils/extending.rst:76
msgid ""
"This new option can be used to add any number of packages to the list of "
"packages searched for command implementations; multiple package names should "
"be separated by commas.  When not specified, the search is only performed in "
"the :mod:`distutils.command` package.  When :file:`setup.py` is run with the "
"option ``--command-packages distcmds,buildcmds``, however, the packages :mod:"
"`distutils.command`, :mod:`distcmds`, and :mod:`buildcmds` will be searched "
"in that order.  New commands are expected to be implemented in modules of "
"the same name as the command by classes sharing the same name.  Given the "
"example command line option above, the command :command:`bdist_openpkg` "
"could be implemented by the class :class:`distcmds.bdist_openpkg."
"bdist_openpkg` or :class:`buildcmds.bdist_openpkg.bdist_openpkg`."
msgstr ""
"Esta nueva opción se puede usar para añadir cualquier número de paquetes a "
"la lista de paquetes en los que se buscan implementaciones de comandos; los "
"nombres de varios paquetes deben separarse mediante comas.  Cuando no se "
"especifica, la búsqueda sólo se realiza en el paquete :mod:`distutils."
"command`.  Sin embargo, cuando se ejecuta :file:`setup.py` con la opción ``--"
"command-packages distcmds,buildcmds``, se buscará en los paquetes :mod:"
"`distutils.command`, :mod:`distcmds` y :mod:`buildcmds` en ese orden.  Se "
"espera que los nuevos comandos se implementen en módulos del mismo nombre "
"que el comando mediante clases que compartan el mismo nombre.  Dado el "
"ejemplo de la opción de línea de comandos anterior, el comando :command:"
"`bdist_openpkg` podría ser implementado por la clase :class:`distcmds."
"bdist_openpkg.bdist_openpkg` o :class:`buildcmds.bdist_openpkg."
"bdist_openpkg`."

#: ../../distutils/extending.rst:90
msgid "Adding new distribution types"
msgstr "Añadiendo nuevos tipos de distribución"

#: ../../distutils/extending.rst:92
msgid ""
"Commands that create distributions (files in the :file:`dist/` directory) "
"need to add ``(command, filename)`` pairs to ``self.distribution."
"dist_files`` so that :command:`upload` can upload it to PyPI.  The "
"*filename* in the pair contains no path information, only the name of the "
"file itself.  In dry-run mode, pairs should still be added to represent what "
"would have been created."
msgstr ""
"Los comandos que crean distribuciones (ficheros en el directorio :file:`dist/"
"` ) necesitan añadir pares ``(command, filename)`` a ``self.distribution."
"dist_files`` para que :command:`upload` pueda subirlo a PyPI.  El *filename* "
"en el par no contiene información de ruta, sólo el nombre del archivo en "
"sí.  En el modo de ejecución en seco, los pares deben seguir añadiéndose "
"para representar lo que se habría creado."
