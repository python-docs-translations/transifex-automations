# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# Rafael Fontenelle <rffontenelle@gmail.com>, 2025
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.13\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-07-25 15:00+0000\n"
"PO-Revision-Date: 2025-07-18 19:20+0000\n"
"Last-Translator: Rafael Fontenelle <rffontenelle@gmail.com>, 2025\n"
"Language-Team: Spanish (Spain) (https://app.transifex.com/python-doc/"
"teams/5390/es_ES/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: es_ES\n"
"Plural-Forms: nplurals=3; plural=n == 1 ? 0 : n != 0 && n % 1000000 == 0 ? "
"1 : 2;\n"

#: ../../c-api/list.rst:6
msgid "List Objects"
msgstr "Lista de objetos"

#: ../../c-api/list.rst:13
msgid "This subtype of :c:type:`PyObject` represents a Python list object."
msgstr ""
"Este subtipo de :c:type:`PyObject` representa un objeto de lista de Python."

#: ../../c-api/list.rst:18
msgid ""
"This instance of :c:type:`PyTypeObject` represents the Python list type. "
"This is the same object as :class:`list` in the Python layer."
msgstr ""
"Esta instancia de :c:type:`PyTypeObject` representa el tipo de lista de "
"Python. Es el mismo objeto que :class:`list` en la capa Python."

#: ../../c-api/list.rst:24
msgid ""
"Return true if *p* is a list object or an instance of a subtype of the list "
"type.  This function always succeeds."
msgstr ""
"Devuelve true si *p* es un objeto lista o una instancia de un subtipo del "
"tipo lista.  Esta función siempre tiene éxito."

#: ../../c-api/list.rst:30
msgid ""
"Return true if *p* is a list object, but not an instance of a subtype of the "
"list type.  This function always succeeds."
msgstr ""
"Devuelve true si *p* es un objeto lista, pero no una instancia de un subtipo "
"del tipo lista.  Esta función siempre tiene éxito."

#: ../../c-api/list.rst:36
msgid "Return a new list of length *len* on success, or ``NULL`` on failure."
msgstr ""
"Devuelve una nueva lista de longitud *len* en caso de éxito, o ``NULL`` en "
"caso de fallo."

#: ../../c-api/list.rst:40
msgid ""
"If *len* is greater than zero, the returned list object's items are set to "
"``NULL``. Thus you cannot use abstract API functions such as :c:func:"
"`PySequence_SetItem` or expose the object to Python code before setting all "
"items to a real object with :c:func:`PyList_SetItem` or :c:func:"
"`PyList_SET_ITEM()`. The following APIs are safe APIs before the list is "
"fully initialized: :c:func:`PyList_SetItem()` and :c:func:"
"`PyList_SET_ITEM()`."
msgstr ""
"Если *len* больше нуля, элементы возвращаемого объекта списка имеют значение "
"``NULL``. Таким образом, вы не можете использовать абстрактные функции API, "
"такие как :c:func:`PySequence_SetItem`, или предоставлять объект коду Python "
"перед присвоением всех элементов реальному объекту с помощью :c:func:"
"`PyList_SetItem` или :c:func:`PyList_SET_ITEM( )`. Следующие API являются "
"безопасными API до полной инициализации списка: :c:func:`PyList_SetItem()` "
"и :c:func:`PyList_SET_ITEM()`."

#: ../../c-api/list.rst:53
msgid ""
"Return the length of the list object in *list*; this is equivalent to "
"``len(list)`` on a list object."
msgstr ""
"Devuelve la longitud del objeto de lista en *list*; esto equivale a "
"``len(list)`` en un objeto de lista."

#: ../../c-api/list.rst:59
msgid "Similar to :c:func:`PyList_Size`, but without error checking."
msgstr "Аналогично :c:func:`PyList_Size`, но без проверки ошибок."

#: ../../c-api/list.rst:64
msgid ""
"Return the object at position *index* in the list pointed to by *list*.  The "
"position must be non-negative; indexing from the end of the list is not "
"supported.  If *index* is out of bounds (:code:`<0 or >=len(list)`), return "
"``NULL`` and set an :exc:`IndexError` exception."
msgstr ""
"Верните объект в позиции *index* в списке, на который указывает *list*. "
"Позиция должна быть неотрицательной; индексация с конца списка не "
"поддерживается. Если *index* выходит за пределы (:code:`<0 или "
">=len(list)`), верните ``NULL`` и установите исключение :exc:`IndexError`."

#: ../../c-api/list.rst:74
msgid ""
"Like :c:func:`PyList_GetItemRef`, but returns a :term:`borrowed reference` "
"instead of a :term:`strong reference`."
msgstr ""
"Подобно :c:func:`PyList_GetItemRef`, но возвращает :term:`заимствованную "
"ссылку` вместо :term:`сильной ссылки`."

#: ../../c-api/list.rst:80
msgid "Similar to :c:func:`PyList_GetItem`, but without error checking."
msgstr "Аналогично :c:func:`PyList_GetItem`, но без проверки ошибок."

#: ../../c-api/list.rst:85
msgid ""
"Set the item at index *index* in list to *item*.  Return ``0`` on success. "
"If *index* is out of bounds, return ``-1`` and set an :exc:`IndexError` "
"exception."
msgstr ""
"Establece el elemento en el índice *index* de la lista en *item*.  Devuelve "
"``0`` en caso de éxito. Si *index* está fuera de los límites, devuelve "
"``-1`` y establece una excepción :exc:`IndexError`."

#: ../../c-api/list.rst:91
msgid ""
"This function \"steals\" a reference to *item* and discards a reference to "
"an item already in the list at the affected position."
msgstr ""
"Esta función \"roba\" una referencia a *item* y descarta una referencia a un "
"elemento ya existente en la lista en la posición afectada."

#: ../../c-api/list.rst:97
msgid ""
"Macro form of :c:func:`PyList_SetItem` without error checking. This is "
"normally only used to fill in new lists where there is no previous content."
msgstr ""
"Macroforma de :c:func:`PyList_SetItem` sin comprobación de errores. "
"Normalmente sólo se utiliza para rellenar listas nuevas en las que no hay "
"contenido previo."

#: ../../c-api/list.rst:100
msgid ""
"Bounds checking is performed as an assertion if Python is built in :ref:"
"`debug mode <debug-build>` or :option:`with assertions <--with-assertions>`."
msgstr ""
"Проверка границ выполняется как утверждение, если Python встроен в :ref:"
"`режиме отладки <debug-build>` или :option:`с утверждениями <--with-"
"assertions>`."

#: ../../c-api/list.rst:106
msgid ""
"This macro \"steals\" a reference to *item*, and, unlike :c:func:"
"`PyList_SetItem`, does *not* discard a reference to any item that is being "
"replaced; any reference in *list* at position *i* will be leaked."
msgstr ""
"Esta macro \"roba\" una referencia a *item*, y, a diferencia de :c:func:"
"`PyList_SetItem`, *no* descarta una referencia a cualquier elemento que esté "
"siendo reemplazado; cualquier referencia en *list* en la posición *i* será "
"filtrada."

#: ../../c-api/list.rst:114
msgid ""
"Insert the item *item* into list *list* in front of index *index*.  Return "
"``0`` if successful; return ``-1`` and set an exception if unsuccessful. "
"Analogous to ``list.insert(index, item)``."
msgstr ""
"Inserta el elemento *item* en la lista *list* delante del índice *index*.  "
"Devuelve ``0`` si tiene éxito; devuelve ``-1`` y lanza una excepción si no "
"tiene éxito. Análogo a ``list.insert(index, item)``."

#: ../../c-api/list.rst:121
msgid ""
"Append the object *item* at the end of list *list*. Return ``0`` if "
"successful; return ``-1`` and set an exception if unsuccessful.  Analogous "
"to ``list.append(item)``."
msgstr ""
"Añade el objeto *item* al final de la lista *list*. Devuelve ``0`` si tiene "
"éxito; devuelve ``-1`` y lanza una excepción si no tiene éxito.  Análogo a "
"``list.append(item)``."

#: ../../c-api/list.rst:128
msgid ""
"Return a list of the objects in *list* containing the objects *between* "
"*low* and *high*.  Return ``NULL`` and set an exception if unsuccessful.  "
"Analogous to ``list[low:high]``.  Indexing from the end of the list is not "
"supported."
msgstr ""
"Devuelve una lista de los objetos en *list* que contiene los objetos "
"*between* *low* y *high*.  Devuelve ``NULL`` y establece una excepción si no "
"tiene éxito.  Análogo a ``list[low:high]``. No se admite la indexación desde "
"el final de la lista."

#: ../../c-api/list.rst:135
msgid ""
"Set the slice of *list* between *low* and *high* to the contents of "
"*itemlist*.  Analogous to ``list[low:high] = itemlist``. The *itemlist* may "
"be ``NULL``, indicating the assignment of an empty list (slice deletion). "
"Return ``0`` on success, ``-1`` on failure.  Indexing from the end of the "
"list is not supported."
msgstr ""
"Asigna la porción de *list* entre *low* y *high* al contenido de "
"*itemlist*.  Análogo a ``list[low:high] = itemlist``. *itemlist* puede ser "
"``NULL``, indicando la asignación de una lista vacía (borrado de segmento). "
"Devuelve ``0`` en caso de éxito, ``-1`` en caso de fallo.  No se admite la "
"indexación desde el final de la lista."

#: ../../c-api/list.rst:144
msgid ""
"Extend *list* with the contents of *iterable*.  This is the same as "
"``PyList_SetSlice(list, PY_SSIZE_T_MAX, PY_SSIZE_T_MAX, iterable)`` and "
"analogous to ``list.extend(iterable)`` or ``list += iterable``."
msgstr ""
"Расширьте *list* содержимым *iterable*. Это то же самое, что и "
"PyList_SetSlice(list, PY_SSIZE_T_MAX, PY_SSIZE_T_MAX, iterable) и аналогично "
"list.extend(iterable) или list += iterable."

#: ../../c-api/list.rst:148
msgid ""
"Raise an exception and return ``-1`` if *list* is not a :class:`list` "
"object. Return 0 on success."
msgstr ""
"Вызовите исключение и верните ``-1``, если *list* не является объектом :"
"class:`list`. Вернуть 0 в случае успеха."

#: ../../c-api/list.rst:156
msgid ""
"Remove all items from *list*.  This is the same as ``PyList_SetSlice(list, "
"0, PY_SSIZE_T_MAX, NULL)`` and analogous to ``list.clear()`` or ``del "
"list[:]``."
msgstr ""
"Удалить все элементы из *списка*. Это то же самое, что и "
"``PyList_SetSlice(list, 0, PY_SSIZE_T_MAX, NULL)`` и аналогично ``list."
"clear()`` или ``del list[:]``."

#: ../../c-api/list.rst:160
msgid ""
"Raise an exception and return ``-1`` if *list* is not a :class:`list` "
"object.  Return 0 on success."
msgstr ""
"Вызовите исключение и верните ``-1``, если *list* не является объектом :"
"class:`list`. Вернуть 0 в случае успеха."

#: ../../c-api/list.rst:168
msgid ""
"Sort the items of *list* in place.  Return ``0`` on success, ``-1`` on "
"failure.  This is equivalent to ``list.sort()``."
msgstr ""
"Ordena los elementos de *list* en su lugar.  Devuelve ``0`` en caso de "
"éxito, ``-1`` en caso de fallo.  Esto es equivalente a ``list.sort()``."

#: ../../c-api/list.rst:174
msgid ""
"Reverse the items of *list* in place.  Return ``0`` on success, ``-1`` on "
"failure.  This is the equivalent of ``list.reverse()``."
msgstr ""
"Invierte los elementos de *list* en su lugar.  Devuelve ``0`` en caso de "
"éxito, en caso de fallo ``-1`` .  Equivale a ``list.reverse()``."

#: ../../c-api/list.rst:182
msgid ""
"Return a new tuple object containing the contents of *list*; equivalent to "
"``tuple(list)``."
msgstr ""
"Devuelve un nuevo objeto tupla que contiene el contenido de *list*; "
"equivalente a ``tuple(list)``."

#: ../../c-api/list.rst:8
msgid "object"
msgstr "objeto"

#: ../../c-api/list.rst:8
msgid "list"
msgstr "lista"

#: ../../c-api/list.rst:51 ../../c-api/list.rst:180
msgid "built-in function"
msgstr "funkcja wbudowana"

#: ../../c-api/list.rst:51
msgid "len"
msgstr "len"

#: ../../c-api/list.rst:180
msgid "tuple"
msgstr "tupla"
