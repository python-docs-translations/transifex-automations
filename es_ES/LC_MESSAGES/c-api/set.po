# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# Rafael Fontenelle <rffontenelle@gmail.com>, 2024
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.11\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-01-03 15:28+0000\n"
"PO-Revision-Date: 2023-05-24 02:09+0000\n"
"Last-Translator: Rafael Fontenelle <rffontenelle@gmail.com>, 2024\n"
"Language-Team: Spanish (Spain) (https://app.transifex.com/python-doc/"
"teams/5390/es_ES/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: es_ES\n"
"Plural-Forms: nplurals=3; plural=n == 1 ? 0 : n != 0 && n % 1000000 == 0 ? "
"1 : 2;\n"

#: ../../c-api/set.rst:6
msgid "Set Objects"
msgstr "Establecer objetos"

#: ../../c-api/set.rst:15
msgid ""
"This section details the public API for :class:`set` and :class:`frozenset` "
"objects.  Any functionality not listed below is best accessed using either "
"the abstract object protocol (including :c:func:`PyObject_CallMethod`, :c:"
"func:`PyObject_RichCompareBool`, :c:func:`PyObject_Hash`, :c:func:"
"`PyObject_Repr`, :c:func:`PyObject_IsTrue`, :c:func:`PyObject_Print`, and :c:"
"func:`PyObject_GetIter`) or the abstract number protocol (including :c:func:"
"`PyNumber_And`, :c:func:`PyNumber_Subtract`, :c:func:`PyNumber_Or`, :c:func:"
"`PyNumber_Xor`, :c:func:`PyNumber_InPlaceAnd`, :c:func:"
"`PyNumber_InPlaceSubtract`, :c:func:`PyNumber_InPlaceOr`, and :c:func:"
"`PyNumber_InPlaceXor`)."
msgstr ""
"Esta sección detalla la API pública para los objetos :class:`set` y :class:"
"`frozenset`. Cualquier funcionalidad no incluida a continuación se accede "
"mejor utilizando el protocolo de objeto abstracto (incluyendo :c:func:"
"`PyObject_CallMethod`, :c:func:`PyObject_RichCompareBool`, :c:func:"
"`PyObject_Hash`, :c:func:`PyObject_Repr`, :c:func:`PyObject_IsTrue`, :c:func:"
"`PyObject_Print` y :c:func:`PyObject_GetIter`) o el protocolo de número "
"abstracto (incluyendo :c:func:`PyNumber_And`, :c:func:`PyNumber_Subtract`, :"
"c:func:`PyNumber_Or`, :c:func:`PyNumber_Xor`, :c:func:"
"`PyNumber_InPlaceAnd`, :c:func:`PyNumber_InPlaceSubtract`, :c:func:"
"`PyNumber_InPlaceOr` y :c:func:`PyNumber_InPlaceXor`)."

#: ../../c-api/set.rst:29
msgid ""
"This subtype of :c:type:`PyObject` is used to hold the internal data for "
"both :class:`set` and :class:`frozenset` objects.  It is like a :c:type:"
"`PyDictObject` in that it is a fixed size for small sets (much like tuple "
"storage) and will point to a separate, variable sized block of memory for "
"medium and large sized sets (much like list storage). None of the fields of "
"this structure should be considered public and all are subject to change.  "
"All access should be done through the documented API rather than by "
"manipulating the values in the structure."
msgstr ""
"Este subtipo de :c:type:`PyObject` se utiliza para almacenar los datos "
"internos tanto de los objetos :class:`set` como de los objetos :class:"
"`frozenset`. Es similar a un :c:type:`PyDictObject` en el sentido de que "
"tiene un tamaño fijo para conjuntos pequeños (similar al almacenamiento de "
"tuplas) y apuntará a un bloque de memoria separado y de tamaño variable para "
"conjuntos de tamaño mediano y grande (similar al almacenamiento de listas). "
"Ninguno de los campos de esta estructura debe considerarse público y todos "
"están sujetos a cambios. Todo el acceso debe realizarse a través de la API "
"documentada en lugar de manipular los valores en la estructura."

#: ../../c-api/set.rst:40
msgid ""
"This is an instance of :c:type:`PyTypeObject` representing the Python :class:"
"`set` type."
msgstr ""
"Se trata de una instancia de :c:type:`PyTypeObject` que representa el tipo :"
"class:`set` de Python."

#: ../../c-api/set.rst:46
msgid ""
"This is an instance of :c:type:`PyTypeObject` representing the Python :class:"
"`frozenset` type."
msgstr ""
"Se trata de una instancia de :c:type:`PyTypeObject` que representa el tipo :"
"class:`frozenset` de Python."

#: ../../c-api/set.rst:49
msgid ""
"The following type check macros work on pointers to any Python object. "
"Likewise, the constructor functions work with any iterable Python object."
msgstr ""
"Los siguientes macros de verificación de tipo funcionan en punteros a "
"cualquier objeto de Python. Del mismo modo, las funciones constructoras "
"funcionan con cualquier objeto iterable de Python."

#: ../../c-api/set.rst:55
msgid ""
"Return true if *p* is a :class:`set` object or an instance of a subtype. "
"This function always succeeds."
msgstr ""
"Devuelve verdadero si *p* es un objeto :class:`set` o una instancia de un "
"subtipo. Esta función siempre tiene éxito."

#: ../../c-api/set.rst:60
msgid ""
"Return true if *p* is a :class:`frozenset` object or an instance of a "
"subtype.  This function always succeeds."
msgstr ""
"Devuelve true si *p* es un objeto :class:`frozenset` o una instancia de un "
"subtipo.  Esta función siempre tiene éxito."

#: ../../c-api/set.rst:65
msgid ""
"Return true if *p* is a :class:`set` object, a :class:`frozenset` object, or "
"an instance of a subtype.  This function always succeeds."
msgstr ""
"Devuelve true si *p* es un objeto :class:`set`, un objeto :class:"
"`frozenset`, o una instancia de un subtipo.  Esta función siempre tiene "
"éxito."

#: ../../c-api/set.rst:70
msgid ""
"Return true if *p* is a :class:`set` object but not an instance of a "
"subtype.  This function always succeeds."
msgstr ""
"Devuelve verdadero si *p* es un objeto :class:`set` pero no una instancia de "
"un subtipo.  Esta función siempre tiene éxito."

#: ../../c-api/set.rst:77
msgid ""
"Return true if *p* is a :class:`set` object or a :class:`frozenset` object "
"but not an instance of a subtype.  This function always succeeds."
msgstr ""
"Devuelve true si *p* es un objeto :class:`set` o un objeto :class:"
"`frozenset` pero no una instancia de un subtipo.  Esta función siempre tiene "
"éxito."

#: ../../c-api/set.rst:83
msgid ""
"Return true if *p* is a :class:`frozenset` object but not an instance of a "
"subtype.  This function always succeeds."
msgstr ""
"Devuelve verdadero si *p* es un objeto :class:`frozenset` pero no una "
"instancia de un subtipo. Esta función siempre tiene éxito."

#: ../../c-api/set.rst:89
msgid ""
"Return a new :class:`set` containing objects returned by the *iterable*.  "
"The *iterable* may be ``NULL`` to create a new empty set.  Return the new "
"set on success or ``NULL`` on failure.  Raise :exc:`TypeError` if *iterable* "
"is not actually iterable.  The constructor is also useful for copying a set "
"(``c=set(s)``)."
msgstr ""
"Devuelve un nuevo :class:`set` que contiene los objetos devueltos por el "
"*iterable*. El *iterable* puede ser ``NULL`` para crear un nuevo conjunto "
"vacío. Devuelve el nuevo conjunto en caso de éxito o ``NULL`` en caso de "
"fallo. Lanza :exc:`TypeError` si el *iterable* no es realmente iterable. El "
"constructor también es útil para copiar un conjunto (``c=set(s)``)."

#: ../../c-api/set.rst:98
msgid ""
"Return a new :class:`frozenset` containing objects returned by the "
"*iterable*. The *iterable* may be ``NULL`` to create a new empty frozenset.  "
"Return the new set on success or ``NULL`` on failure.  Raise :exc:"
"`TypeError` if *iterable* is not actually iterable."
msgstr ""
"Devuelve un nuevo :class:`frozenset` que contiene los objetos devueltos por "
"el *iterable*. El *iterable* puede ser ``NULL`` para crear un nuevo "
"frozenset vacío. Devuelve el nuevo conjunto en caso de éxito o ``NULL`` en "
"caso de fallo. Genera una excepción :exc:`TypeError` si *iterable* no es "
"realmente iterable."

#: ../../c-api/set.rst:104
msgid ""
"The following functions and macros are available for instances of :class:"
"`set` or :class:`frozenset` or instances of their subtypes."
msgstr ""
"Las siguientes funciones y macros están disponibles para instancias de :"
"class:`set` o :class:`frozenset` o instancias de sus subtipos."

#: ../../c-api/set.rst:112
msgid ""
"Return the length of a :class:`set` or :class:`frozenset` object. Equivalent "
"to ``len(anyset)``.  Raises a :exc:`SystemError` if *anyset* is not a :class:"
"`set`, :class:`frozenset`, or an instance of a subtype."
msgstr ""
"Devuelve la longitud de un objeto :class:`set` o :class:`frozenset`. "
"Equivalente a ``len(anyset)``.  Lanza un :exc:`SystemError` si *anyset* no "
"es un :class:`set`, :class:`frozenset`, o una instancia de un subtipo."

#: ../../c-api/set.rst:119
msgid "Macro form of :c:func:`PySet_Size` without error checking."
msgstr "Macro forma de :c:func:`PySet_Size` sin comprobación de errores."

#: ../../c-api/set.rst:124
msgid ""
"Return ``1`` if found, ``0`` if not found, and ``-1`` if an error is "
"encountered.  Unlike the Python :meth:`~object.__contains__` method, this "
"function does not automatically convert unhashable sets into temporary "
"frozensets.  Raise a :exc:`TypeError` if the *key* is unhashable. Raise :exc:"
"`SystemError` if *anyset* is not a :class:`set`, :class:`frozenset`, or an "
"instance of a subtype."
msgstr ""
"Devuelve ``1`` si se encuentra, ``0`` si no se encuentra, y ``-1`` si se "
"encuentra un error.  A diferencia del método :meth:`~object.__contains__` de "
"Python, esta función no convierte automáticamente los conjuntos incobrables "
"en frozensets temporales.  Lanza un :exc:`TypeError` si la *clave* es "
"incobrable. Lanza :exc:`SystemError` si *anyset* no es un :class:`set`, :"
"class:`frozenset`, o una instancia de un subtipo."

#: ../../c-api/set.rst:133
msgid ""
"Add *key* to a :class:`set` instance.  Also works with :class:`frozenset` "
"instances (like :c:func:`PyTuple_SetItem` it can be used to fill in the "
"values of brand new frozensets before they are exposed to other code).  "
"Return ``0`` on success or ``-1`` on failure. Raise a :exc:`TypeError` if "
"the *key* is unhashable. Raise a :exc:`MemoryError` if there is no room to "
"grow.  Raise a :exc:`SystemError` if *set* is not an instance of :class:"
"`set` or its subtype."
msgstr ""
"Añade *key* a una instancia de :class:`set`. También funciona con instancias "
"de :class:`frozenset` (como :c:func:`PyTuple_SetItem` se puede usar para "
"completar los valores de nuevos frozensets antes de que se expongan a otro "
"código). Devuelve ``0`` en caso de éxito o ``-1`` en caso de fallo. Lanza "
"un :exc:`TypeError` si *key* no es hasheable. Lanza un :exc:`MemoryError` si "
"no hay espacio para crecer. Lanza un :exc:`SystemError` si *set* no es una "
"instancia de :class:`set` o de su subtipo."

#: ../../c-api/set.rst:142
msgid ""
"The following functions are available for instances of :class:`set` or its "
"subtypes but not for instances of :class:`frozenset` or its subtypes."
msgstr ""
"Las siguientes funciones están disponibles para instancias de :class:`set` o "
"sus subtipos pero no para instancias de :class:`frozenset` o sus subtipos."

#: ../../c-api/set.rst:148
msgid ""
"Return ``1`` if found and removed, ``0`` if not found (no action taken), and "
"``-1`` if an error is encountered.  Does not raise :exc:`KeyError` for "
"missing keys.  Raise a :exc:`TypeError` if the *key* is unhashable.  Unlike "
"the Python :meth:`~frozenset.discard` method, this function does not "
"automatically convert unhashable sets into temporary frozensets. Raise :exc:"
"`SystemError` if *set* is not an instance of :class:`set` or its subtype."
msgstr ""
"Devuelve ``1`` si se encuentra y se elimina, ``0`` si no se encuentra (no se "
"realiza ninguna acción) y ``-1`` si se encuentra un error.  No devuelve :exc:"
"`KeyError` si faltan claves.  Lanza un :exc:`TypeError` si la *clave* es "
"incobrable.  A diferencia del método de Python :meth:`~frozenset.discard`, "
"esta función no convierte automáticamente los conjuntos incobrables en "
"frozensets temporales. Genera :exc:`SystemError` si *set* no es una "
"instancia de :class:`set` o su subtipo."

#: ../../c-api/set.rst:158
msgid ""
"Return a new reference to an arbitrary object in the *set*, and removes the "
"object from the *set*.  Return ``NULL`` on failure.  Raise :exc:`KeyError` "
"if the set is empty. Raise a :exc:`SystemError` if *set* is not an instance "
"of :class:`set` or its subtype."
msgstr ""
"Devuelve una nueva referencia a un objeto arbitrario en el *set*, y elimina "
"el objeto del *set*.  Devuelve ``NULL`` en caso de fallo.  Lanza :exc:"
"`KeyError` si el conjunto está vacío. Genera un :exc:`SystemError` si *set* "
"no es una instancia de :class:`set` o su subtipo."

#: ../../c-api/set.rst:166
msgid ""
"Empty an existing set of all elements. Return ``0`` on success. Return "
"``-1`` and raise :exc:`SystemError` if *set* is not an instance of :class:"
"`set` or its subtype."
msgstr ""
"Vacía un conjunto existente de todos los elementos. Devuelve ``0`` en caso "
"de éxito. Devuelve ``-1`` y eleva :exc:`SystemError` si *set* no es una "
"instancia de :class:`set` o su subtipo."

#: ../../c-api/set.rst:11
msgid "object"
msgstr "objeto"

#: ../../c-api/set.rst:11
msgid "set"
msgstr "conjunto"

#: ../../c-api/set.rst:11
msgid "frozenset"
msgstr "frozenset"

#: ../../c-api/set.rst:110
msgid "built-in function"
msgstr "función incorporada"

#: ../../c-api/set.rst:110
msgid "len"
msgstr "len"
