# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# Rafael Fontenelle <rffontenelle@gmail.com>, 2024
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.12\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-01-17 14:51+0000\n"
"PO-Revision-Date: 2024-05-11 00:32+0000\n"
"Last-Translator: Rafael Fontenelle <rffontenelle@gmail.com>, 2024\n"
"Language-Team: Spanish (Spain) (https://app.transifex.com/python-doc/"
"teams/5390/es_ES/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: es_ES\n"
"Plural-Forms: nplurals=3; plural=n == 1 ? 0 : n != 0 && n % 1000000 == 0 ? "
"1 : 2;\n"

#: ../../c-api/gen.rst:6
msgid "Generator Objects"
msgstr "Objetos generadores"

#: ../../c-api/gen.rst:8
msgid ""
"Generator objects are what Python uses to implement generator iterators. "
"They are normally created by iterating over a function that yields values, "
"rather than explicitly calling :c:func:`PyGen_New` or :c:func:"
"`PyGen_NewWithQualName`."
msgstr ""
"Los objetos generadores son lo que Python utiliza para implementar los "
"iteradores generadores. Normalmente se crean iterando sobre una función que "
"produce valores, en lugar de llamar explícitamente a :c:func:`PyGen_New` o :"
"c:func:`PyGen_NewWithQualName`."

#: ../../c-api/gen.rst:15
msgid "The C structure used for generator objects."
msgstr "La estructura C utilizada para los objetos generadores."

#: ../../c-api/gen.rst:20
msgid "The type object corresponding to generator objects."
msgstr "El objeto de tipo correspondiente a los objetos generadores."

#: ../../c-api/gen.rst:25
msgid ""
"Return true if *ob* is a generator object; *ob* must not be ``NULL``.  This "
"function always succeeds."
msgstr ""
"Devuelve true si *ob* es un objeto generador; *ob* no debe ser ``NULL``.  "
"Esta función siempre tiene éxito."

#: ../../c-api/gen.rst:31
msgid ""
"Return true if *ob*'s type is :c:type:`PyGen_Type`; *ob* must not be "
"``NULL``.  This function always succeeds."
msgstr ""
"Devuelve true si el tipo de *ob* es :c:type:`PyGen_Type`; *ob* no debe ser "
"``NULL``.  Esta función siempre tiene éxito."

#: ../../c-api/gen.rst:37
msgid ""
"Create and return a new generator object based on the *frame* object. A "
"reference to *frame* is stolen by this function. The argument must not be "
"``NULL``."
msgstr ""
"Crea y devuelve un nuevo objeto generador basado en el objeto *frame*. Esta "
"función roba una referencia a *frame*. El argumento no debe ser ``NULL``."

#: ../../c-api/gen.rst:43
msgid ""
"Create and return a new generator object based on the *frame* object, with "
"``__name__`` and ``__qualname__`` set to *name* and *qualname*. A reference "
"to *frame* is stolen by this function.  The *frame* argument must not be "
"``NULL``."
msgstr ""
"Crea y devuelve un nuevo objeto generador basado en el objeto *frame*, con "
"``__name__`` y ``__qualname__`` establecidos a *name* y *qualname*. Esta "
"función roba una referencia a *frame*.  El argumento *frame* no debe ser "
"``NULL``."
