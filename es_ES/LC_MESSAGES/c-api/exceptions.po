# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# python-doc bot, 2025
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.9\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-22 21:56+0000\n"
"PO-Revision-Date: 2025-09-22 17:54+0000\n"
"Last-Translator: python-doc bot, 2025\n"
"Language-Team: Spanish (Spain) (https://app.transifex.com/python-doc/"
"teams/5390/es_ES/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: es_ES\n"
"Plural-Forms: nplurals=3; plural=n == 1 ? 0 : n != 0 && n % 1000000 == 0 ? "
"1 : 2;\n"

#: ../../c-api/exceptions.rst:8
msgid "Exception Handling"
msgstr "Gestión de excepciones"

#: ../../c-api/exceptions.rst:10
msgid ""
"The functions described in this chapter will let you handle and raise Python "
"exceptions.  It is important to understand some of the basics of Python "
"exception handling.  It works somewhat like the POSIX :c:data:`errno` "
"variable: there is a global indicator (per thread) of the last error that "
"occurred.  Most C API functions don't clear this on success, but will set it "
"to indicate the cause of the error on failure.  Most C API functions also "
"return an error indicator, usually ``NULL`` if they are supposed to return a "
"pointer, or ``-1`` if they return an integer (exception: the :c:func:"
"`PyArg_\\*` functions return ``1`` for success and ``0`` for failure)."
msgstr ""

#: ../../c-api/exceptions.rst:20
msgid ""
"Concretely, the error indicator consists of three object pointers: the "
"exception's type, the exception's value, and the traceback object.  Any of "
"those pointers can be ``NULL`` if non-set (although some combinations are "
"forbidden, for example you can't have a non-``NULL`` traceback if the "
"exception type is ``NULL``)."
msgstr ""
"Concretamente, el indicador de error consta de tres punteros a objetos: el "
"tipo de la excepción, el valor de la excepción y el objeto traceback.  "
"Cualquiera de esos punteros puede ser ``NULL`` si no está establecido "
"(aunque algunas combinaciones están prohibidas, por ejemplo, no se puede "
"tener un traceback que no sea``NULL`` si el tipo de excepción es ``NULL``)."

#: ../../c-api/exceptions.rst:26
msgid ""
"When a function must fail because some function it called failed, it "
"generally doesn't set the error indicator; the function it called already "
"set it.  It is responsible for either handling the error and clearing the "
"exception or returning after cleaning up any resources it holds (such as "
"object references or memory allocations); it should *not* continue normally "
"if it is not prepared to handle the error.  If returning due to an error, it "
"is important to indicate to the caller that an error has been set.  If the "
"error is not handled or carefully propagated, additional calls into the "
"Python/C API may not behave as intended and may fail in mysterious ways."
msgstr ""
"Cuando una función debe fallar porque alguna función a la que llamó falló, "
"generalmente no establece el indicador de error; la función a la que llamó "
"ya lo estableció.  Es responsable de manejar el error y borrar la excepción "
"o volver después de limpiar cualquier recurso que tenga (como referencias a "
"objetos o asignaciones de memoria); \"no\" debería continuar normalmente si "
"no está preparada para manejar el error.  Si devuelve debido a un error, es "
"importante indicar a caller que se ha producido un error.  Si el error no es "
"manejado o propagado cuidadosamente, las llamadas adicionales a la API de "
"Python/C pueden no comportarse como se pretendía y pueden fallar de forma "
"misteriosa."

#: ../../c-api/exceptions.rst:37
msgid ""
"The error indicator is **not** the result of :func:`sys.exc_info()`. The "
"former corresponds to an exception that is not yet caught (and is therefore "
"still propagating), while the latter returns an exception after it is caught "
"(and has therefore stopped propagating)."
msgstr ""
"El indicador de error **no** es el resultado de :func:`sys.exc_info()`. El "
"primero corresponde a una excepción que aún no se ha capturado (y que, por "
"tanto, aún se está propagando), mientras que el segundo devuelve una "
"excepción después de haber sido capturada (y que, por tanto, ha dejado de "
"propagarse)."

#: ../../c-api/exceptions.rst:44
msgid "Printing and clearing"
msgstr "Impresión y limpieza"

#: ../../c-api/exceptions.rst:49
msgid ""
"Clear the error indicator.  If the error indicator is not set, there is no "
"effect."
msgstr ""
"Borre el indicador de error.  Si el indicador de error no está activado, no "
"se produce ningún efecto."

#: ../../c-api/exceptions.rst:55
msgid ""
"Print a standard traceback to ``sys.stderr`` and clear the error indicator. "
"**Unless** the error is a ``SystemExit``, in that case no traceback is "
"printed and the Python process will exit with the error code specified by "
"the ``SystemExit`` instance."
msgstr ""
"Imprime un rastreo estándar en ``sys.stderr`` y borra el indicador de error. "
"**A menos que** el error sea un ``SystemExit``, en ese caso no se imprime "
"ningún rastreo y el proceso Python saldrá con el código de error "
"especificado por la instancia ``SystemExit``."

#: ../../c-api/exceptions.rst:60
msgid ""
"Call this function **only** when the error indicator is set.  Otherwise it "
"will cause a fatal error!"
msgstr ""
"Llame a esta función **only** cuando el indicador de error esté activado.  "
"De lo contrario, provocará un error fatal."

#: ../../c-api/exceptions.rst:63
msgid ""
"If *set_sys_last_vars* is nonzero, the variables :data:`sys.last_type`, :"
"data:`sys.last_value` and :data:`sys.last_traceback` will be set to the "
"type, value and traceback of the printed exception, respectively."
msgstr ""
"Si *set_sys_last_vars* es distinto de cero, las variables :data:`sys."
"last_type`, :data:`sys.last_value` y :data:`sys.last_traceback` se "
"establecerán al tipo, valor y traza de la excepción impresa, respectivamente."

#: ../../c-api/exceptions.rst:70
msgid "Alias for ``PyErr_PrintEx(1)``."
msgstr "Alias para ``PyErr_PrintEx(1)``."

#: ../../c-api/exceptions.rst:75
msgid ""
"Call :func:`sys.unraisablehook` using the current exception and *obj* "
"argument."
msgstr ""
"Llama a :func:`sys.unraisablehook` usando la excepción actual y el argumento "
"*obj*."

#: ../../c-api/exceptions.rst:78
msgid ""
"This utility function prints a warning message to ``sys.stderr`` when an "
"exception has been set but it is impossible for the interpreter to actually "
"raise the exception.  It is used, for example, when an exception occurs in "
"an :meth:`__del__` method."
msgstr ""
"Esta función de utilidad imprime un mensaje de advertencia a ``sys.stderr`` "
"cuando se ha establecido una excepción pero es imposible que el intérprete "
"lance realmente la excepción.  Se utiliza, por ejemplo, cuando se produce "
"una excepción en un método:meth:`__del__`."

#: ../../c-api/exceptions.rst:83
msgid ""
"The function is called with a single argument *obj* that identifies the "
"context in which the unraisable exception occurred. If possible, the repr of "
"*obj* will be printed in the warning message."
msgstr ""
"La función se llama con un único argumento *obj* que identifica el contexto "
"en el que se produjo la excepción no calificable. Si es posible, la repr de "
"*obj* se imprimirá en el mensaje de advertencia."

#: ../../c-api/exceptions.rst:87
msgid "An exception must be set when calling this function."
msgstr "Debe establecerse una excepción al llamar a esta función."

#: ../../c-api/exceptions.rst:91
msgid "Raising exceptions"
msgstr "Planteamiento de excepciones"

#: ../../c-api/exceptions.rst:93
msgid ""
"These functions help you set the current thread's error indicator. For "
"convenience, some of these functions will always return a ``NULL`` pointer "
"for use in a ``return`` statement."
msgstr ""
"Estas funciones le ayudan a establecer el indicador de error del subproceso "
"actual. Por comodidad, algunas de estas funciones devolverán siempre un "
"puntero ``NULL`` para su uso en una sentencia ``return``."

#: ../../c-api/exceptions.rst:100
msgid ""
"This is the most common way to set the error indicator.  The first argument "
"specifies the exception type; it is normally one of the standard exceptions, "
"e.g. :c:data:`PyExc_RuntimeError`.  You need not increment its reference "
"count. The second argument is an error message; it is decoded from "
"``'utf-8'``."
msgstr ""

#: ../../c-api/exceptions.rst:108
msgid ""
"This function is similar to :c:func:`PyErr_SetString` but lets you specify "
"an arbitrary Python object for the \"value\" of the exception."
msgstr ""
"Esta función es similar a :c:func:`PyErr_SetString` pero permite especificar "
"un objeto Python arbitrario para el \"valor\" de la excepción."

#: ../../c-api/exceptions.rst:114
msgid ""
"This function sets the error indicator and returns ``NULL``.  *exception* "
"should be a Python exception class.  The *format* and subsequent parameters "
"help format the error message; they have the same meaning and values as in :"
"c:func:`PyUnicode_FromFormat`. *format* is an ASCII-encoded string."
msgstr ""
"Esta función establece el indicador de error y devuelve ``NULL``.  "
"*exception* debe ser una clase de excepción de Python.  Los parámetros "
"*format* y siguientes ayudan a formatear el mensaje de error; tienen el "
"mismo significado y valores que en :c:func:`PyUnicode_FromFormat`. *format* "
"es una cadena codificada en ASCII."

#: ../../c-api/exceptions.rst:123
msgid ""
"Same as :c:func:`PyErr_Format`, but taking a :c:type:`va_list` argument "
"rather than a variable number of arguments."
msgstr ""
"Igual que :c:func:`PyErr_Format`, pero tomando un argumento :c:type:"
"`va_list` en lugar de un número variable de argumentos."

#: ../../c-api/exceptions.rst:131
msgid "This is a shorthand for ``PyErr_SetObject(type, Py_None)``."
msgstr "Se trata de una abreviatura de ``PyErr_SetObject(type, Py_None)``."

#: ../../c-api/exceptions.rst:136
msgid ""
"This is a shorthand for ``PyErr_SetString(PyExc_TypeError, message)``, where "
"*message* indicates that a built-in operation was invoked with an illegal "
"argument.  It is mostly for internal use."
msgstr ""
"Esta es una abreviatura de ``PyErr_SetString(PyExc_TypeError, message)``, "
"donde *message* indica que una operación incorporada fue invocada con un "
"argumento ilegal.  Es principalmente para uso interno."

#: ../../c-api/exceptions.rst:143
msgid ""
"This is a shorthand for ``PyErr_SetNone(PyExc_MemoryError)``; it returns "
"``NULL`` so an object allocation function can write ``return "
"PyErr_NoMemory();`` when it runs out of memory."
msgstr ""
"Es una abreviatura de ``PyErr_SetNone(PyExc_MemoryError)``; devuelve "
"``NULL`` para que una función de asignación de objetos pueda escribir "
"``return PyErr_NoMemory();`` cuando se quede sin memoria."

#: ../../c-api/exceptions.rst:152
msgid ""
"This is a convenience function to raise an exception when a C library "
"function has returned an error and set the C variable :c:data:`errno`.  It "
"constructs a tuple object whose first item is the integer :c:data:`errno` "
"value and whose second item is the corresponding error message (gotten from :"
"c:func:`strerror`), and then calls ``PyErr_SetObject(type, object)``.  On "
"Unix, when the :c:data:`errno` value is :const:`EINTR`, indicating an "
"interrupted system call, this calls :c:func:`PyErr_CheckSignals`, and if "
"that set the error indicator, leaves it set to that.  The function always "
"returns ``NULL``, so a wrapper function around a system call can write "
"``return PyErr_SetFromErrno(type);`` when the system call returns an error."
msgstr ""
"Esta es una función conveniente para lanzar una excepción cuando una función "
"de la biblioteca C ha devuelto un error y establece la variable C :c:data:"
"`errno`.  Construye un objeto tupla cuyo primer elemento es el valor entero :"
"c:data:`errno` y cuyo segundo elemento es el mensaje de error "
"correspondiente (obtenido de :c:func:`strerror`), y luego llama a "
"``PyErr_SetObject(type, object)``.  En Unix, cuando el valor de :c:data:"
"`errno` es :const:`EINTR`, indicando una llamada al sistema interrumpida, "
"esto llama a :c:func:`PyErr_CheckSignals`, y si eso fija el indicador de "
"error, lo deja fijado a eso.  La función siempre devuelve ``NULL``, por lo "
"que una función envolvente alrededor de una llamada al sistema puede "
"escribir ``return PyErr_SetFromErrno(type);`` cuando la llamada al sistema "
"devuelve un error."

#: ../../c-api/exceptions.rst:166
msgid ""
"Similar to :c:func:`PyErr_SetFromErrno`, with the additional behavior that "
"if *filenameObject* is not ``NULL``, it is passed to the constructor of "
"*type* as a third parameter.  In the case of :exc:`OSError` exception, this "
"is used to define the :attr:`filename` attribute of the exception instance."
msgstr ""
"Similar a :c:func:`PyErr_SetFromErrno`, con el comportamiento adicional de "
"que si *filenameObject* no es ``NULL``, se pasa al constructor de *type* "
"como tercer parámetro.  En el caso de la excepción :exc:`OSError`, se "
"utiliza para definir el atributo :attr:`filename` de la instancia de "
"excepción."

#: ../../c-api/exceptions.rst:175
msgid ""
"Similar to :c:func:`PyErr_SetFromErrnoWithFilenameObject`, but takes a "
"second filename object, for raising errors when a function that takes two "
"filenames fails."
msgstr ""
"Similar a :c:func:`PyErr_SetFromErrnoWithFilenameObject`, pero toma un "
"segundo objeto nombre de fichero, para lanzar errores cuando una función que "
"toma dos nombres de fichero falla."

#: ../../c-api/exceptions.rst:184
msgid ""
"Similar to :c:func:`PyErr_SetFromErrnoWithFilenameObject`, but the filename "
"is given as a C string.  *filename* is decoded from the filesystem encoding "
"(:func:`os.fsdecode`)."
msgstr ""

#: ../../c-api/exceptions.rst:191
msgid ""
"This is a convenience function to raise :exc:`WindowsError`. If called with "
"*ierr* of :c:data:`0`, the error code returned by a call to :c:func:"
"`GetLastError` is used instead.  It calls the Win32 function :c:func:"
"`FormatMessage` to retrieve the Windows description of error code given by "
"*ierr* or :c:func:`GetLastError`, then it constructs a tuple object whose "
"first item is the *ierr* value and whose second item is the corresponding "
"error message (gotten from :c:func:`FormatMessage`), and then calls "
"``PyErr_SetObject(PyExc_WindowsError, object)``. This function always "
"returns ``NULL``."
msgstr ""

#: ../../c-api/exceptions.rst:200 ../../c-api/exceptions.rst:208
#: ../../c-api/exceptions.rst:217 ../../c-api/exceptions.rst:225
#: ../../c-api/exceptions.rst:234 ../../c-api/exceptions.rst:243
msgid ":ref:`Availability <availability>`: Windows."
msgstr ":ref:`Disponibilidad <availability>`: Windows."

#: ../../c-api/exceptions.rst:205
msgid ""
"Similar to :c:func:`PyErr_SetFromWindowsErr`, with an additional parameter "
"specifying the exception type to be raised."
msgstr ""
"Similar a :c:func:`PyErr_SetFromWindowsErr`, con un parámetro adicional que "
"especifica el tipo de excepción a lanzar."

#: ../../c-api/exceptions.rst:213
msgid ""
"Similar to :c:func:`PyErr_SetFromWindowsErrWithFilenameObject`, but the "
"filename is given as a C string.  *filename* is decoded from the filesystem "
"encoding (:func:`os.fsdecode`)."
msgstr ""
"Similar a :c:func:`PyErr_SetFromWindowsErrWithFilenameObject`, pero el "
"nombre de archivo se da como una cadena C.  *filename* se descodifica a "
"partir de la codificación del sistema de archivos (:func:`os.fsdecode`)."

#: ../../c-api/exceptions.rst:222
msgid ""
"Similar to :c:func:`PyErr_SetFromWindowsErrWithFilenameObject`, with an "
"additional parameter specifying the exception type to be raised."
msgstr ""
"Similar a :c:func:`PyErr_SetFromWindowsErrWithFilenameObject`, con un "
"parámetro adicional que especifica el tipo de excepción a lanzar."

#: ../../c-api/exceptions.rst:230
msgid ""
"Similar to :c:func:`PyErr_SetExcFromWindowsErrWithFilenameObject`, but "
"accepts a second filename object."
msgstr ""
"Similar a :c:func:`PyErr_SetExcFromWindowsErrWithFilenameObject`, pero "
"acepta un segundo objeto filename."

#: ../../c-api/exceptions.rst:240
msgid ""
"Similar to :c:func:`PyErr_SetFromWindowsErrWithFilename`, with an additional "
"parameter specifying the exception type to be raised."
msgstr ""
"Similar a :c:func:`PyErr_SetFromWindowsErrWithFilename`, con un parámetro "
"adicional que especifica el tipo de excepción a lanzar."

#: ../../c-api/exceptions.rst:248
msgid ""
"This is a convenience function to raise :exc:`ImportError`. *msg* will be "
"set as the exception's message string. *name* and *path*, both of which can "
"be ``NULL``, will be set as the :exc:`ImportError`'s respective ``name`` and "
"``path`` attributes."
msgstr ""
"Esta es una función práctica para lanzar :exc:`ImportError`. *msg* se "
"establecerá como la cadena de mensaje de la excepción. *name* y *path*, que "
"pueden ser ``NULL``, se establecerán como los atributos respectivos de :exc:"
"`ImportError` ``name`` y ``path``."

#: ../../c-api/exceptions.rst:258
msgid ""
"Much like :c:func:`PyErr_SetImportError` but this function allows for "
"specifying a subclass of :exc:`ImportError` to raise."
msgstr ""
"Muy similar a :c:func:`PyErr_SetImportError` pero esta función permite "
"especificar una subclase de :exc:`ImportError` para que se active."

#: ../../c-api/exceptions.rst:266
msgid ""
"Set file, line, and offset information for the current exception.  If the "
"current exception is not a :exc:`SyntaxError`, then it sets additional "
"attributes, which make the exception printing subsystem think the exception "
"is a :exc:`SyntaxError`."
msgstr ""
"Establece la información de archivo, línea y offset para la excepción "
"actual.  Si la excepción actual no es una :exc:`SyntaxError`, entonces "
"establece atributos adicionales, que hacen que el subsistema de impresión de "
"excepciones piense que la excepción es una :exc:`SyntaxError`."

#: ../../c-api/exceptions.rst:276
msgid ""
"Like :c:func:`PyErr_SyntaxLocationObject`, but *filename* is a byte string "
"decoded from the filesystem encoding (:func:`os.fsdecode`)."
msgstr ""

#: ../../c-api/exceptions.rst:284
msgid ""
"Like :c:func:`PyErr_SyntaxLocationEx`, but the *col_offset* parameter is "
"omitted."
msgstr ""
"Como :c:func:`PyErr_SyntaxLocationEx`, pero se omite el parámetro "
"*col_offset*."

#: ../../c-api/exceptions.rst:290
msgid ""
"This is a shorthand for ``PyErr_SetString(PyExc_SystemError, message)``, "
"where *message* indicates that an internal operation (e.g. a Python/C API "
"function) was invoked with an illegal argument.  It is mostly for internal "
"use."
msgstr ""
"Esta es una abreviatura de ``PyErr_SetString(PyExc_SystemError, message)``, "
"donde *message* indica que una operación interna (por ejemplo, una función "
"de la API de Python/C) se llamó con un argumento ilegal.  Es principalmente "
"para uso interno."

#: ../../c-api/exceptions.rst:297
msgid "Issuing warnings"
msgstr "Advertencias"

#: ../../c-api/exceptions.rst:299
msgid ""
"Use these functions to issue warnings from C code.  They mirror similar "
"functions exported by the Python :mod:`warnings` module.  They normally "
"print a warning message to *sys.stderr*; however, it is also possible that "
"the user has specified that warnings are to be turned into errors, and in "
"that case they will raise an exception.  It is also possible that the "
"functions raise an exception because of a problem with the warning "
"machinery. The return value is ``0`` if no exception is raised, or ``-1`` if "
"an exception is raised.  (It is not possible to determine whether a warning "
"message is actually printed, nor what the reason is for the exception; this "
"is intentional.)  If an exception is raised, the caller should do its normal "
"exception handling (for example, :c:func:`Py_DECREF` owned references and "
"return an error value)."
msgstr ""
"Utilizar estas funciones para emitir advertencias desde código C.  Reflejan "
"funciones similares exportadas por el módulo de Python :mod:`warnings`.  "
"Normalmente imprimen un mensaje de advertencia en *sys.stderr*; sin embargo, "
"también es posible que el usuario haya especificado que las advertencias se "
"conviertan en errores, y en ese caso lanzarán una excepción.  También es "
"posible que las funciones lancen una excepción debido a un problema con la "
"maquinaria de avisos. El valor de retorno es ``0`` si no se produce ninguna "
"excepción, o ``-1`` si se produce una excepción.  (No es posible determinar "
"si realmente se imprime un mensaje de advertencia, ni cuál es el motivo de "
"la excepción; esto es intencionado).  Si se produce una excepción, el "
"invocador debe hacer su manejo normal de excepciones (por ejemplo, :c:func:"
"`Py_DECREF` referencias propias y devolver un valor de error)."

#: ../../c-api/exceptions.rst:314
msgid ""
"Issue a warning message.  The *category* argument is a warning category (see "
"below) or ``NULL``; the *message* argument is a UTF-8 encoded string.  "
"*stack_level* is a positive number giving a number of stack frames; the "
"warning will be issued from the  currently executing line of code in that "
"stack frame.  A *stack_level* of 1 is the function calling :c:func:"
"`PyErr_WarnEx`, 2 is  the function above that, and so forth."
msgstr ""
"Emitir un mensaje de advertencia.  El argumento *category* es una categoría "
"de advertencia (ver más abajo) o ``NULL``; el argumento *message* es una "
"cadena codificada en UTF-8.  *stack_level* es un número positivo que da un "
"número de marcos de pila; la advertencia se emitirá desde la línea de código "
"actualmente en ejecución en ese marco de pila.  Un *stack_level* de 1 es la "
"función que llama a :c:func:`PyErr_WarnEx`, 2 es la función por encima de "
"ésta, y así sucesivamente."

#: ../../c-api/exceptions.rst:321
msgid ""
"Warning categories must be subclasses of :c:data:`PyExc_Warning`; :c:data:"
"`PyExc_Warning` is a subclass of :c:data:`PyExc_Exception`; the default "
"warning category is :c:data:`PyExc_RuntimeWarning`. The standard Python "
"warning categories are available as global variables whose names are "
"enumerated at :ref:`standardwarningcategories`."
msgstr ""
"Las categorías de advertencia deben ser subclases de :c:data:"
"`PyExc_Warning`; :c:data:`PyExc_Warning` es una subclase de :c:data:"
"`PyExc_Exception`; la categoría de advertencia por defecto es :c:data:"
"`PyExc_RuntimeWarning`. Las categorías de advertencia estándar de Python "
"están disponibles como variables globales cuyos nombres se enumeran en :ref:"
"`standardwarningcategories`."

#: ../../c-api/exceptions.rst:327
msgid ""
"For information about warning control, see the documentation for the :mod:"
"`warnings` module and the :option:`-W` option in the command line "
"documentation.  There is no C API for warning control."
msgstr ""
"Para obtener información sobre el control de avisos, ver la documentación "
"del módulo :mod:`warnings` y la opción :option:`-W` en la documentación de "
"la línea de comandos.  No existe una API en C para el control de avisos."

#: ../../c-api/exceptions.rst:334
msgid ""
"Issue a warning message with explicit control over all warning attributes.  "
"This is a straightforward wrapper around the Python function :func:`warnings."
"warn_explicit`; see there for more information.  The *module* and *registry* "
"arguments may be set to ``NULL`` to get the default effect described there."
msgstr ""
"Emitir un mensaje de advertencia con control explícito sobre todos los "
"atributos de advertencia.  Esta es una envoltura directa alrededor de la "
"función de Python :func:`warnings.warn_explicit`; ver eso para más "
"información.  Los argumentos *module* y *registry* pueden establecerse a "
"``NULL`` para obtener el efecto por defecto allí descrito."

#: ../../c-api/exceptions.rst:345
msgid ""
"Similar to :c:func:`PyErr_WarnExplicitObject` except that *message* and "
"*module* are UTF-8 encoded strings, and *filename* is decoded from the "
"filesystem encoding (:func:`os.fsdecode`)."
msgstr ""

#: ../../c-api/exceptions.rst:352
msgid ""
"Function similar to :c:func:`PyErr_WarnEx`, but use :c:func:"
"`PyUnicode_FromFormat` to format the warning message.  *format* is an ASCII-"
"encoded string."
msgstr ""
"Función similar a :c:func:`PyErr_WarnEx`, pero utiliza :c:func:"
"`PyUnicode_FromFormat` para dar formato al mensaje de advertencia.  *format* "
"es una cadena codificada en ASCII."

#: ../../c-api/exceptions.rst:361
msgid ""
"Function similar to :c:func:`PyErr_WarnFormat`, but *category* is :exc:"
"`ResourceWarning` and it passes *source* to :func:`warnings.WarningMessage`."
msgstr ""
"Función similar a :c:func:`PyErr_WarnFormat`, pero *category* es :exc:"
"`ResourceWarning` y pasa *source* a :func:`warnings.WarningMessage`."

#: ../../c-api/exceptions.rst:368
msgid "Querying the error indicator"
msgstr "Consultar del indicador de error"

#: ../../c-api/exceptions.rst:372
msgid ""
"Test whether the error indicator is set.  If set, return the exception "
"*type* (the first argument to the last call to one of the :c:func:"
"`PyErr_Set\\*` functions or to :c:func:`PyErr_Restore`).  If not set, return "
"``NULL``.  You do not own a reference to the return value, so you do not "
"need to :c:func:`Py_DECREF` it."
msgstr ""

#: ../../c-api/exceptions.rst:378
msgid "The caller must hold the GIL."
msgstr "Caller debe mantener el GIL."

#: ../../c-api/exceptions.rst:382
msgid ""
"Do not compare the return value to a specific exception; use :c:func:"
"`PyErr_ExceptionMatches` instead, shown below.  (The comparison could easily "
"fail since the exception may be an instance instead of a class, in the case "
"of a class exception, or it may be a subclass of the expected exception.)"
msgstr ""
"No comparar el valor de retorno con una excepción específica; usar :c:func:"
"`PyErr_ExceptionMatches` en su lugar, como se muestra a continuación.  (La "
"comparación podría fallar fácilmente ya que la excepción puede ser una "
"instancia en lugar de una clase, en el caso de una excepción de clase, o "
"puede ser una subclase de la excepción esperada)."

#: ../../c-api/exceptions.rst:390
msgid ""
"Equivalent to ``PyErr_GivenExceptionMatches(PyErr_Occurred(), exc)``.  This "
"should only be called when an exception is actually set; a memory access "
"violation will occur if no exception has been raised."
msgstr ""
"Equivale a ``PyErr_GivenExceptionMatches(PyErr_Occurred(), exc)``. Sólo debe "
"invocarse cuando se produce una excepción; se producirá una violación de "
"acceso a memoria si no se ha lanzado ninguna excepción."

#: ../../c-api/exceptions.rst:397
msgid ""
"Return true if the *given* exception matches the exception type in *exc*.  "
"If *exc* is a class object, this also returns true when *given* is an "
"instance of a subclass.  If *exc* is a tuple, all exception types in the "
"tuple (and recursively in subtuples) are searched for a match."
msgstr ""
"Devuelve verdadero si la excepción *given* coincide con el tipo de excepción "
"en *exc*.  Si *exc* es un objeto de clase, también devuelve true cuando "
"*given* es una instancia de una subclase.  Si *exc* es una tupla, se buscan "
"todos los tipos de excepción en la tupla (y recursivamente en las subtuplas)."

#: ../../c-api/exceptions.rst:405
msgid ""
"Retrieve the error indicator into three variables whose addresses are "
"passed. If the error indicator is not set, set all three variables to "
"``NULL``.  If it is set, it will be cleared and you own a reference to each "
"object retrieved.  The value and traceback object may be ``NULL`` even when "
"the type object is not."
msgstr ""
"Recuperar el indicador de error en tres variables cuyas direcciones se "
"pasan. Si el indicador de error no está establecido, establece las tres "
"variables en ``NULL``. Si está establecido, se borrará y poseerá una "
"referencia a cada objeto recuperado.  El objeto value y traceback pueden ser "
"``NULL`` incluso cuando el objeto type no lo sea."

#: ../../c-api/exceptions.rst:412
msgid ""
"This function is normally only used by code that needs to catch exceptions "
"or by code that needs to save and restore the error indicator temporarily, e."
"g.::"
msgstr ""
"Esta función normalmente sólo se usa por código que necesita atrapar "
"excepciones o por código que necesita guardar y restaurar el indicador de "
"error temporalmente, por ejemplo::"

#: ../../c-api/exceptions.rst:427
msgid ""
"Set  the error indicator from the three objects.  If the error indicator is "
"already set, it is cleared first.  If the objects are ``NULL``, the error "
"indicator is cleared.  Do not pass a ``NULL`` type and non-``NULL`` value or "
"traceback.  The exception type should be a class.  Do not pass an invalid "
"exception type or value. (Violating these rules will cause subtle problems "
"later.)  This call takes away a reference to each object: you must own a "
"reference to each object before the call and after the call you no longer "
"own these references.  (If you don't understand this, don't use this "
"function.  I warned you.)"
msgstr ""
"Fijar el indicador de error a partir de los tres objetos.  Si el indicador "
"de error ya está activado, primero se borra.  Si los objetos son ``NULL``, "
"el indicador de error se borra.  No pasar un tipo ``NULL`` y un valor "
"no``NULL`` o traceback.  El tipo de excepción debe ser una clase.  No pasar "
"un tipo o valor de excepción inválido. (Violar estas reglas causará "
"problemas sutiles más adelante.) Esta llamada quita una referencia a cada "
"objeto: debes poseer una referencia a cada objeto antes de la llamada y "
"después de la llamada ya no posees estas referencias.  (Si no entiendes "
"esto, no uses esta función. Te lo advierto)."

#: ../../c-api/exceptions.rst:439
msgid ""
"This function is normally only used by code that needs to save and restore "
"the error indicator temporarily.  Use :c:func:`PyErr_Fetch` to save the "
"current error indicator."
msgstr ""
"Esta función normalmente sólo la utiliza el código que necesita guardar y "
"restaurar el indicador de error temporalmente.  Usar :c:func:`PyErr_Fetch` "
"para guardar el indicador de error actual."

#: ../../c-api/exceptions.rst:446
msgid ""
"Under certain circumstances, the values returned by :c:func:`PyErr_Fetch` "
"below can be \"unnormalized\", meaning that ``*exc`` is a class object but "
"``*val`` is not an instance of the  same class.  This function can be used "
"to instantiate the class in that case.  If the values are already "
"normalized, nothing happens. The delayed normalization is implemented to "
"improve performance."
msgstr ""
"En determinadas circunstancias, los valores devueltos por :c:func:"
"`PyErr_Fetch` a continuación pueden ser \"unnormalized\", lo que significa "
"que ``*exc`` es un objeto de clase pero ``*val`` no es una instancia de la "
"misma clase.  Esta función puede utilizarse para instanciar la clase en ese "
"caso.  Si los valores ya están normalizados, no ocurre nada. La "
"normalización retardada se implementa para mejorar el rendimiento."

#: ../../c-api/exceptions.rst:454
msgid ""
"This function *does not* implicitly set the ``__traceback__`` attribute on "
"the exception value. If setting the traceback appropriately is desired, the "
"following additional snippet is needed::"
msgstr ""
"Esta función *no* establece implícitamente el atributo ``__traceback__`` en "
"el valor de la excepción. Si se desea establecer el rastreo de forma "
"apropiada, se necesita el siguiente fragmento adicional::"

#: ../../c-api/exceptions.rst:465
msgid ""
"Retrieve the exception info, as known from ``sys.exc_info()``.  This refers "
"to an exception that was *already caught*, not to an exception that was "
"freshly raised.  Returns new references for the three objects, any of which "
"may be ``NULL``.  Does not modify the exception info state."
msgstr ""
"Recupera la información de la excepción, tal y como se conoce en ``sys."
"exc_info()``. Esto se refiere a una excepción que fue *already caught*, no a "
"una excepción que se lanzó recientemente.  Devuelve nuevas referencias para "
"los tres objetos, cualquiera de los cuales puede ser ``NULL``.  No modifica "
"el estado de la información de la excepción."

#: ../../c-api/exceptions.rst:472
msgid ""
"This function is not normally used by code that wants to handle exceptions. "
"Rather, it can be used when code needs to save and restore the exception "
"state temporarily.  Use :c:func:`PyErr_SetExcInfo` to restore or clear the "
"exception state."
msgstr ""
"Esta función no se utiliza normalmente por código que quiera manejar "
"excepciones. Más bien, se puede utilizar cuando el código necesita guardar y "
"restaurar el estado de excepción temporalmente.  Usar :c:func:"
"`PyErr_SetExcInfo` para restaurar o borrar el estado de excepción."

#: ../../c-api/exceptions.rst:482
msgid ""
"Set the exception info, as known from ``sys.exc_info()``.  This refers to an "
"exception that was *already caught*, not to an exception that was freshly "
"raised.  This function steals the references of the arguments. To clear the "
"exception state, pass ``NULL`` for all three arguments. For general rules "
"about the three arguments, see :c:func:`PyErr_Restore`."
msgstr ""
"Establece la información de la excepción, como se conoce en ``sys."
"exc_info()``. Esto se refiere a una excepción que fue *already caught*, no a "
"una excepción que fue recién lanzada.  Esta función roba las referencias de "
"los argumentos. Para borrar el estado de la excepción, pasar ``NULL`` para "
"los tres argumentos. Para reglas generales sobre los tres argumentos, ver :c:"
"func:`PyErr_Restore`."

#: ../../c-api/exceptions.rst:490
msgid ""
"This function is not normally used by code that wants to handle exceptions. "
"Rather, it can be used when code needs to save and restore the exception "
"state temporarily.  Use :c:func:`PyErr_GetExcInfo` to read the exception "
"state."
msgstr ""
"Esta función no se utiliza normalmente por código que quiera manejar "
"excepciones. Más bien, se puede utilizar cuando el código necesita guardar y "
"restaurar el estado de excepción temporalmente.  Usar :c:func:"
"`PyErr_GetExcInfo` para leer el estado de excepción."

#: ../../c-api/exceptions.rst:499
msgid "Signal Handling"
msgstr "Tratamiento de señales"

#: ../../c-api/exceptions.rst:509
msgid ""
"This function interacts with Python's signal handling.  It checks whether a "
"signal has been sent to the processes and if so, invokes the corresponding "
"signal handler.  If the :mod:`signal` module is supported, this can invoke a "
"signal handler written in Python.  In all cases, the default effect for :"
"const:`SIGINT` is to raise the  :exc:`KeyboardInterrupt` exception.  If an "
"exception is raised the error indicator is set and the function returns "
"``-1``; otherwise the function returns ``0``.  The error indicator may or "
"may not be cleared if it was previously set."
msgstr ""

#: ../../c-api/exceptions.rst:525
msgid ""
"Simulate the effect of a :const:`SIGINT` signal arriving. The next time :c:"
"func:`PyErr_CheckSignals` is called,  the Python signal handler for :const:"
"`SIGINT` will be called."
msgstr ""

#: ../../c-api/exceptions.rst:529
msgid ""
"If :const:`SIGINT` isn't handled by Python (it was set to :data:`signal."
"SIG_DFL` or :data:`signal.SIG_IGN`), this function does nothing."
msgstr ""

#: ../../c-api/exceptions.rst:535
msgid ""
"This utility function specifies a file descriptor to which the signal number "
"is written as a single byte whenever a signal is received. *fd* must be non-"
"blocking. It returns the previous such file descriptor."
msgstr ""
"Esta función de utilidad especifica un descriptor de archivo en el que el "
"número de señal se escribe como un único byte cada vez que se recibe una "
"señal. *fd* debe ser no bloqueante. Devuelve el descriptor de archivo "
"anterior."

#: ../../c-api/exceptions.rst:539
msgid ""
"The value ``-1`` disables the feature; this is the initial state. This is "
"equivalent to :func:`signal.set_wakeup_fd` in Python, but without any error "
"checking.  *fd* should be a valid file descriptor.  The function should only "
"be called from the main thread."
msgstr ""
"El valor ``-1`` desactiva la función; éste es el estado inicial. Es "
"equivalente a :func:`signal.set_wakeup_fd` en Python, pero sin comprobación "
"de errores.  *fd* debe ser un descriptor de fichero válido.  La función sólo "
"debe ser llamada desde el hilo principal."

#: ../../c-api/exceptions.rst:544
msgid "On Windows, the function now also supports socket handles."
msgstr "En Windows, la función también admite ahora los manejadores de socket."

#: ../../c-api/exceptions.rst:549
msgid "Exception Classes"
msgstr "Clases de excepción"

#: ../../c-api/exceptions.rst:553
msgid ""
"This utility function creates and returns a new exception class. The *name* "
"argument must be the name of the new exception, a C string of the form "
"``module.classname``.  The *base* and *dict* arguments are normally "
"``NULL``. This creates a class object derived from :exc:`Exception` "
"(accessible in C as :c:data:`PyExc_Exception`)."
msgstr ""
"Esta función de utilidad crea y devuelve una nueva clase de excepción. El "
"argumento *name* debe ser el nombre de la nueva excepción, una cadena C de "
"la forma ``module.classname``.  Los argumentos *base* y *dict* son "
"normalmente ``NULL``. Esto crea un objeto de clase derivado de :exc:"
"`Exception` (accesible en C como :c:data:`PyExc_Exception`)."

#: ../../c-api/exceptions.rst:559
msgid ""
"The :attr:`__module__` attribute of the new class is set to the first part "
"(up to the last dot) of the *name* argument, and the class name is set to "
"the last part (after the last dot).  The *base* argument can be used to "
"specify alternate base classes; it can either be only one class or a tuple "
"of classes. The *dict* argument can be used to specify a dictionary of class "
"variables and methods."
msgstr ""
"El atributo :attr:`__module__` de la nueva clase se establece en la primera "
"parte (hasta el último punto) del argumento *name*, y el nombre de la clase "
"se establece en la última parte (después del último punto).  El argumento "
"*base* puede utilizarse para especificar clases base alternativas; puede ser "
"una sola clase o una tupla de clases. El argumento *dict* puede utilizarse "
"para especificar un diccionario de variables y métodos de clase."

#: ../../c-api/exceptions.rst:568
msgid ""
"Same as :c:func:`PyErr_NewException`, except that the new exception class "
"can easily be given a docstring: If *doc* is non-``NULL``, it will be used "
"as the docstring for the exception class."
msgstr ""
"Igual que :c:func:`PyErr_NewException`, excepto que a la nueva clase de "
"excepción se le puede dar fácilmente un docstring: Si *doc* no es``NULL``, "
"se utilizará como docstring para la clase de excepción."

#: ../../c-api/exceptions.rst:576
msgid "Exception Objects"
msgstr "Objetos de excepción"

#: ../../c-api/exceptions.rst:580
msgid ""
"Return the traceback associated with the exception as a new reference, as "
"accessible from Python through :attr:`__traceback__`.  If there is no "
"traceback associated, this returns ``NULL``."
msgstr ""
"Devuelve la traza asociada a la excepción como una nueva referencia, "
"accesible desde Python a través de :attr:`__traceback__`.  Si no hay ninguna "
"traza asociada, devuelve ``NULL``."

#: ../../c-api/exceptions.rst:587
msgid ""
"Set the traceback associated with the exception to *tb*.  Use ``Py_None`` to "
"clear it."
msgstr ""
"Establece el rastreo asociado a la excepción en *tb*.  Utilice ``Py_None`` "
"para borrarlo."

#: ../../c-api/exceptions.rst:593
msgid ""
"Return the context (another exception instance during whose handling *ex* "
"was raised) associated with the exception as a new reference, as accessible "
"from Python through :attr:`__context__`.  If there is no context associated, "
"this returns ``NULL``."
msgstr ""
"Devuelve el contexto (otra instancia de excepción durante cuyo manejo se "
"lanzó *ex*) asociado a la excepción como una nueva referencia, accesible "
"desde Python a través de :attr:`__context__`.  Si no hay contexto asociado, "
"devuelve ``NULL``."

#: ../../c-api/exceptions.rst:601
msgid ""
"Set the context associated with the exception to *ctx*.  Use ``NULL`` to "
"clear it.  There is no type check to make sure that *ctx* is an exception "
"instance. This steals a reference to *ctx*."
msgstr ""
"Establece el contexto asociado a la excepción en *ctx*.  Utilice ``NULL`` "
"para borrarlo.  No hay comprobación de tipo para asegurarse de que *ctx* es "
"una instancia de excepción. Esto roba una referencia a *ctx*."

#: ../../c-api/exceptions.rst:608
msgid ""
"Return the cause (either an exception instance, or :const:`None`, set by "
"``raise ... from ...``) associated with the exception as a new reference, as "
"accessible from Python through :attr:`__cause__`."
msgstr ""
"Devuelve la causa (ya sea una instancia de excepción, o :const:`None`, "
"establecida por ``raise ... from ...``) asociada con la excepción como una "
"nueva referencia, accesible desde Python a través de :attr:`__cause__`."

#: ../../c-api/exceptions.rst:615
msgid ""
"Set the cause associated with the exception to *cause*.  Use ``NULL`` to "
"clear it.  There is no type check to make sure that *cause* is either an "
"exception instance or :const:`None`.  This steals a reference to *cause*."
msgstr ""
"Establece la causa asociada a la excepción en *causa*.  Usa ``NULL`` para "
"borrarla.  No hay comprobación de tipo para asegurarse de que *cause* es una "
"instancia de excepción o :const:`None`. Esto roba una referencia a *cause*."

#: ../../c-api/exceptions.rst:619
msgid ""
":attr:`__suppress_context__` is implicitly set to ``True`` by this function."
msgstr ""
":attr:`__suppress_context__` se establece implícitamente en ``True`` "
"mediante esta función."

#: ../../c-api/exceptions.rst:625
msgid "Unicode Exception Objects"
msgstr "Objetos de excepción Unicode"

#: ../../c-api/exceptions.rst:627
msgid ""
"The following functions are used to create and modify Unicode exceptions "
"from C."
msgstr ""
"Las siguientes funciones se utilizan para crear y modificar excepciones "
"Unicode desde C."

#: ../../c-api/exceptions.rst:631
msgid ""
"Create a :class:`UnicodeDecodeError` object with the attributes *encoding*, "
"*object*, *length*, *start*, *end* and *reason*. *encoding* and *reason* are "
"UTF-8 encoded strings."
msgstr ""
"Crea un objeto :class:`UnicodeDecodeError` con los atributos *encoding*, "
"*object*, *length*, *start*, *end* y *reason*. *encoding* y *reason* son "
"cadenas codificadas en UTF-8."

#: ../../c-api/exceptions.rst:637
msgid ""
"Create a :class:`UnicodeEncodeError` object with the attributes *encoding*, "
"*object*, *length*, *start*, *end* and *reason*. *encoding* and *reason* are "
"UTF-8 encoded strings."
msgstr ""
"Crea un objeto :class:`UnicodeEncodeError` con los atributos *encoding*, "
"*object*, *length*, *start*, *end* y *reason*. *encoding* y *reason* son "
"cadenas codificadas en UTF-8."

#: ../../c-api/exceptions.rst:641 ../../c-api/exceptions.rst:651
msgid "3.11"
msgstr "3.11"

#: ../../c-api/exceptions.rst:643
msgid ""
"``Py_UNICODE`` is deprecated since Python 3.3. Please migrate to "
"``PyObject_CallFunction(PyExc_UnicodeEncodeError, \"sOnns\", ...)``."
msgstr ""
"``Py_UNICODE`` está obsoleto desde Python 3.3. Por favor, migre a "
"``PyObject_CallFunction(PyExc_UnicodeEncodeError, \"sOnns\", ...)``."

#: ../../c-api/exceptions.rst:648
msgid ""
"Create a :class:`UnicodeTranslateError` object with the attributes *object*, "
"*length*, *start*, *end* and *reason*. *reason* is a UTF-8 encoded string."
msgstr ""
"Crea un objeto :class:`UnicodeTranslateError` con los atributos *object*, "
"*length*, *start*, *end* y *reason*. *reason* es una cadena codificada en "
"UTF-8."

#: ../../c-api/exceptions.rst:653
msgid ""
"``Py_UNICODE`` is deprecated since Python 3.3. Please migrate to "
"``PyObject_CallFunction(PyExc_UnicodeTranslateError, \"Onns\", ...)``."
msgstr ""
"``Py_UNICODE`` está obsoleto desde Python 3.3. Por favor, migre a "
"``PyObject_CallFunction(PyExc_UnicodeTranslateError, \"Onns\", ...)``."

#: ../../c-api/exceptions.rst:659
msgid "Return the *encoding* attribute of the given exception object."
msgstr "Devuelve el atributo *encoding* del objeto de excepción dado."

#: ../../c-api/exceptions.rst:665
msgid "Return the *object* attribute of the given exception object."
msgstr "Devuelve el atributo *object* del objeto de excepción dado."

#: ../../c-api/exceptions.rst:671
msgid ""
"Get the *start* attribute of the given exception object and place it into "
"*\\*start*.  *start* must not be ``NULL``.  Return ``0`` on success, ``-1`` "
"on failure."
msgstr ""
"Obtiene el atributo *start* del objeto de excepción dado y lo coloca en "
"*\\*start*.  *start* no debe ser ``NULL``.  Devuelve ``0`` en caso de éxito, "
"``-1`` en caso de fallo."

#: ../../c-api/exceptions.rst:679
msgid ""
"Set the *start* attribute of the given exception object to *start*.  Return "
"``0`` on success, ``-1`` on failure."
msgstr ""
"Establece el atributo *start* del objeto de excepción dado a *start*.  "
"Devuelve ``0`` en caso de éxito, ``-1`` en caso de fallo."

#: ../../c-api/exceptions.rst:686
msgid ""
"Get the *end* attribute of the given exception object and place it into "
"*\\*end*.  *end* must not be ``NULL``.  Return ``0`` on success, ``-1`` on "
"failure."
msgstr ""
"Obtiene el atributo *end* del objeto de excepción dado y lo coloca en "
"*\\*end*.  *end* no debe ser ``NULL``.  Devuelve ``0`` en caso de éxito, "
"``-1`` en caso de fallo."

#: ../../c-api/exceptions.rst:694
msgid ""
"Set the *end* attribute of the given exception object to *end*.  Return "
"``0`` on success, ``-1`` on failure."
msgstr ""
"Establece el atributo *end* del objeto de excepción dado a *end*.  Devuelve "
"``0`` en caso de éxito, ``-1`` en caso de fallo."

#: ../../c-api/exceptions.rst:701
msgid "Return the *reason* attribute of the given exception object."
msgstr "Devuelve el atributo *reason* del objeto de excepción dado."

#: ../../c-api/exceptions.rst:707
msgid ""
"Set the *reason* attribute of the given exception object to *reason*.  "
"Return ``0`` on success, ``-1`` on failure."
msgstr ""
"Establece el atributo *reason* del objeto de excepción dado a *reason*.  "
"Devuelve ``0`` en caso de éxito, ``-1`` en caso de fallo."

#: ../../c-api/exceptions.rst:714
msgid "Recursion Control"
msgstr "Control de recursividad"

#: ../../c-api/exceptions.rst:716
msgid ""
"These two functions provide a way to perform safe recursive calls at the C "
"level, both in the core and in extension modules.  They are needed if the "
"recursive code does not necessarily invoke Python code (which tracks its "
"recursion depth automatically). They are also not needed for *tp_call* "
"implementations because the :ref:`call protocol <call>` takes care of "
"recursion handling."
msgstr ""
"Estas dos funciones proporcionan una forma de realizar llamadas recursivas "
"seguras a nivel de C, tanto en el núcleo como en los módulos de extensión.  "
"Son necesarias si el código recursivo no invoca necesariamente código Python "
"(que rastrea su profundidad de recursión automáticamente). Tampoco son "
"necesarias para implementaciones *tp_call* porque el protocolo :ref:`call "
"<call>` se encarga de la gestión de la recursividad."

#: ../../c-api/exceptions.rst:725
msgid "Marks a point where a recursive C-level call is about to be performed."
msgstr ""
"Marca un punto en el que se va a realizar una llamada recursiva de nivel C."

#: ../../c-api/exceptions.rst:727
msgid ""
"If :const:`USE_STACKCHECK` is defined, this function checks if the OS stack "
"overflowed using :c:func:`PyOS_CheckStack`.  In this is the case, it sets a :"
"exc:`MemoryError` and returns a nonzero value."
msgstr ""
"Si :const:`USE_STACKCHECK` está definido, esta función comprueba si la pila "
"del sistema operativo se desbordó utilizando :c:func:`PyOS_CheckStack`.  En "
"este caso, establece un :exc:`MemoryError` y devuelve un valor distinto de "
"cero."

#: ../../c-api/exceptions.rst:731
msgid ""
"The function then checks if the recursion limit is reached.  If this is the "
"case, a :exc:`RecursionError` is set and a nonzero value is returned. "
"Otherwise, zero is returned."
msgstr ""
"A continuación, la función comprueba si se ha alcanzado el límite de "
"recursividad.  Si es así, se establece un :exc:`RecursionError` y se "
"devuelve un valor distinto de cero. En caso contrario, se devuelve cero."

#: ../../c-api/exceptions.rst:735
msgid ""
"*where* should be a UTF-8 encoded string such as ``\" in instance check\"`` "
"to be concatenated to the :exc:`RecursionError` message caused by the "
"recursion depth limit."
msgstr ""
"*where* debe ser una cadena codificada en UTF-8 como ``\" in instance "
"check\"`` para concatenadarse al mensaje :exc:`RecursionError` causado por "
"el límite de profundidad de recursión."

#: ../../c-api/exceptions.rst:739 ../../c-api/exceptions.rst:747
msgid "This function is now also available in the limited API."
msgstr "Esta función ahora también está disponible en la API limitada."

#: ../../c-api/exceptions.rst:744
msgid ""
"Ends a :c:func:`Py_EnterRecursiveCall`.  Must be called once for each "
"*successful* invocation of :c:func:`Py_EnterRecursiveCall`."
msgstr ""
"Finaliza :c:func:`Py_EnterRecursiveCall`. Debe invocarse una vez por cada "
"invocación *con éxito* de :c:func:`Py_EnterRecursiveCall`."

#: ../../c-api/exceptions.rst:750
msgid ""
"Properly implementing :c:member:`~PyTypeObject.tp_repr` for container types "
"requires special recursion handling.  In addition to protecting the stack, :"
"c:member:`~PyTypeObject.tp_repr` also needs to track objects to prevent "
"cycles.  The following two functions facilitate this functionality.  "
"Effectively, these are the C equivalent to :func:`reprlib.recursive_repr`."
msgstr ""
"La correcta implementación de :c:member:`~PyTypeObject.tp_repr` para tipos "
"contenedores requiere un manejo especial de la recursividad.  Además de "
"proteger la pila, :c:member:`~PyTypeObject.tp_repr` también necesita "
"rastrear objetos para evitar ciclos.  Las dos funciones siguientes facilitan "
"esta funcionalidad.  De hecho, son el equivalente en C a :func:`reprlib."
"recursive_repr`."

#: ../../c-api/exceptions.rst:758
msgid ""
"Called at the beginning of the :c:member:`~PyTypeObject.tp_repr` "
"implementation to detect cycles."
msgstr ""
"Llamada al principio de la implementación de :c:member:`~PyTypeObject."
"tp_repr` para detectar ciclos."

#: ../../c-api/exceptions.rst:761
msgid ""
"If the object has already been processed, the function returns a positive "
"integer.  In that case the :c:member:`~PyTypeObject.tp_repr` implementation "
"should return a string object indicating a cycle.  As examples, :class:"
"`dict` objects return ``{...}`` and :class:`list` objects return ``[...]``."
msgstr ""
"Si el objeto ya ha sido procesado, la función devuelve un número entero "
"positivo.  En ese caso, la implementación de :c:member:`~PyTypeObject."
"tp_repr` debe devolver un objeto de cadena que indique un ciclo.  Como "
"ejemplos, los objetos :class:`dict` devuelven ``{...}`` y los objetos :class:"
"`list` devuelven ``[...]``."

#: ../../c-api/exceptions.rst:767
msgid ""
"The function will return a negative integer if the recursion limit is "
"reached.  In that case the :c:member:`~PyTypeObject.tp_repr` implementation "
"should typically return ``NULL``."
msgstr ""
"La función devolverá un entero negativo si se alcanza el límite de "
"recursión.  En ese caso, la implementación de :c:member:`~PyTypeObject."
"tp_repr` debería devolver ``NULL``."

#: ../../c-api/exceptions.rst:771
msgid ""
"Otherwise, the function returns zero and the :c:member:`~PyTypeObject."
"tp_repr` implementation can continue normally."
msgstr ""
"En caso contrario, la función devuelve cero y la aplicación :c:member:"
"`~PyTypeObject.tp_repr` puede continuar normalmente."

#: ../../c-api/exceptions.rst:776
msgid ""
"Ends a :c:func:`Py_ReprEnter`.  Must be called once for each invocation of :"
"c:func:`Py_ReprEnter` that returns zero."
msgstr ""
"Finaliza un :c:func:`Py_ReprEnter`. Debe llamarse una vez por cada "
"invocación de :c:func:`Py_ReprEnter` que devuelva cero."

#: ../../c-api/exceptions.rst:783
msgid "Standard Exceptions"
msgstr "Excepciones estándar"

#: ../../c-api/exceptions.rst:785
msgid ""
"All standard Python exceptions are available as global variables whose names "
"are ``PyExc_`` followed by the Python exception name.  These have the type :"
"c:type:`PyObject*`; they are all class objects.  For completeness, here are "
"all the variables:"
msgstr ""

#: ../../c-api/exceptions.rst:846 ../../c-api/exceptions.rst:979
#: ../../c-api/exceptions.rst:1024
msgid "C Name"
msgstr "C Nombre"

#: ../../c-api/exceptions.rst:846 ../../c-api/exceptions.rst:1024
msgid "Python Name"
msgstr "Nombre Python"

#: ../../c-api/exceptions.rst:846 ../../c-api/exceptions.rst:979
#: ../../c-api/exceptions.rst:1024
msgid "Notes"
msgstr "Notas"

#: ../../c-api/exceptions.rst:848
msgid ":c:data:`PyExc_BaseException`"
msgstr ":c:data:`PyExc_BaseException`"

#: ../../c-api/exceptions.rst:848
msgid ":exc:`BaseException`"
msgstr ":exc:`BaseException`"

#: ../../c-api/exceptions.rst:848 ../../c-api/exceptions.rst:850
#: ../../c-api/exceptions.rst:852 ../../c-api/exceptions.rst:898
#: ../../c-api/exceptions.rst:910
msgid "[1]_"
msgstr "[1]_"

#: ../../c-api/exceptions.rst:850
msgid ":c:data:`PyExc_Exception`"
msgstr ":c:data:`PyExc_Exception`"

#: ../../c-api/exceptions.rst:850
msgid ":exc:`Exception`"
msgstr ":exc:`Exception`"

#: ../../c-api/exceptions.rst:852
msgid ":c:data:`PyExc_ArithmeticError`"
msgstr ":c:data:`PyExc_ArithmeticError`"

#: ../../c-api/exceptions.rst:852
msgid ":exc:`ArithmeticError`"
msgstr ":exc:`ArithmeticError`"

#: ../../c-api/exceptions.rst:854
msgid ":c:data:`PyExc_AssertionError`"
msgstr ":c:data:`PyExc_AssertionError`"

#: ../../c-api/exceptions.rst:854
msgid ":exc:`AssertionError`"
msgstr ":exc:`AssertionError`"

#: ../../c-api/exceptions.rst:856
msgid ":c:data:`PyExc_AttributeError`"
msgstr ":c:data:`PyExc_AttributeError`"

#: ../../c-api/exceptions.rst:856
msgid ":exc:`AttributeError`"
msgstr ":exc:`AttributeError`"

#: ../../c-api/exceptions.rst:858
msgid ":c:data:`PyExc_BlockingIOError`"
msgstr ":c:data:`PyExc_BlockingIOError`"

#: ../../c-api/exceptions.rst:858
msgid ":exc:`BlockingIOError`"
msgstr ":exc:`BlockingIOError`"

#: ../../c-api/exceptions.rst:860
msgid ":c:data:`PyExc_BrokenPipeError`"
msgstr ":c:data:`PyExc_BrokenPipeError`"

#: ../../c-api/exceptions.rst:860
msgid ":exc:`BrokenPipeError`"
msgstr ":exc:`BrokenPipeError`"

#: ../../c-api/exceptions.rst:862
msgid ":c:data:`PyExc_BufferError`"
msgstr ":c:data:`PyExc_BufferError`"

#: ../../c-api/exceptions.rst:862
msgid ":exc:`BufferError`"
msgstr ":exc:`BufferError`"

#: ../../c-api/exceptions.rst:864
msgid ":c:data:`PyExc_ChildProcessError`"
msgstr ":c:data:`PyExc_ChildProcessError`"

#: ../../c-api/exceptions.rst:864
msgid ":exc:`ChildProcessError`"
msgstr ":exc:`ChildProcessError`"

#: ../../c-api/exceptions.rst:866
msgid ":c:data:`PyExc_ConnectionAbortedError`"
msgstr ":c:data:`PyExc_ConnectionAbortedError`"

#: ../../c-api/exceptions.rst:866
msgid ":exc:`ConnectionAbortedError`"
msgstr ":exc:`ConnectionAbortedError`"

#: ../../c-api/exceptions.rst:868
msgid ":c:data:`PyExc_ConnectionError`"
msgstr ":c:data:`PyExc_ConnectionError`"

#: ../../c-api/exceptions.rst:868
msgid ":exc:`ConnectionError`"
msgstr ":exc:`ConnectionError`"

#: ../../c-api/exceptions.rst:870
msgid ":c:data:`PyExc_ConnectionRefusedError`"
msgstr ":c:data:`PyExc_ConnectionRefusedError`"

#: ../../c-api/exceptions.rst:870
msgid ":exc:`ConnectionRefusedError`"
msgstr ":exc:`ConnectionRefusedError`"

#: ../../c-api/exceptions.rst:872
msgid ":c:data:`PyExc_ConnectionResetError`"
msgstr ":c:data:`PyExc_ConnectionResetError`"

#: ../../c-api/exceptions.rst:872
msgid ":exc:`ConnectionResetError`"
msgstr ":exc:`ConnectionResetError`"

#: ../../c-api/exceptions.rst:874
msgid ":c:data:`PyExc_EOFError`"
msgstr ":c:data:`PyExc_EOFError`"

#: ../../c-api/exceptions.rst:874
msgid ":exc:`EOFError`"
msgstr ":exc:`EOFError`"

#: ../../c-api/exceptions.rst:876
msgid ":c:data:`PyExc_FileExistsError`"
msgstr ":c:data:`PyExc_FileExistsError`"

#: ../../c-api/exceptions.rst:876
msgid ":exc:`FileExistsError`"
msgstr ":exc:`FileExistsError`"

#: ../../c-api/exceptions.rst:878
msgid ":c:data:`PyExc_FileNotFoundError`"
msgstr ":c:data:`PyExc_FileNotFoundError`"

#: ../../c-api/exceptions.rst:878
msgid ":exc:`FileNotFoundError`"
msgstr ":exc:`FileNotFoundError`"

#: ../../c-api/exceptions.rst:880
msgid ":c:data:`PyExc_FloatingPointError`"
msgstr ":c:data:`PyExc_FloatingPointError`"

#: ../../c-api/exceptions.rst:880
msgid ":exc:`FloatingPointError`"
msgstr ":exc:`FloatingPointError`"

#: ../../c-api/exceptions.rst:882
msgid ":c:data:`PyExc_GeneratorExit`"
msgstr ":c:data:`PyExc_GeneratorExit`"

#: ../../c-api/exceptions.rst:882
msgid ":exc:`GeneratorExit`"
msgstr ":exc:`GeneratorExit`"

#: ../../c-api/exceptions.rst:884
msgid ":c:data:`PyExc_ImportError`"
msgstr ":c:data:`PyExc_ImportError`"

#: ../../c-api/exceptions.rst:884
msgid ":exc:`ImportError`"
msgstr ":exc:`ImportError`"

#: ../../c-api/exceptions.rst:886
msgid ":c:data:`PyExc_IndentationError`"
msgstr ":c:data:`PyExc_IndentationError`"

#: ../../c-api/exceptions.rst:886
msgid ":exc:`IndentationError`"
msgstr ":exc:`IndentationError`"

#: ../../c-api/exceptions.rst:888
msgid ":c:data:`PyExc_IndexError`"
msgstr ":c:data:`PyExc_IndexError`"

#: ../../c-api/exceptions.rst:888
msgid ":exc:`IndexError`"
msgstr ":exc:`IndexError`"

#: ../../c-api/exceptions.rst:890
msgid ":c:data:`PyExc_InterruptedError`"
msgstr ":c:data:`PyExc_InterruptedError`"

#: ../../c-api/exceptions.rst:890
msgid ":exc:`InterruptedError`"
msgstr ":exc:`InterruptedError`"

#: ../../c-api/exceptions.rst:892
msgid ":c:data:`PyExc_IsADirectoryError`"
msgstr ":c:data:`PyExc_IsADirectoryError`"

#: ../../c-api/exceptions.rst:892
msgid ":exc:`IsADirectoryError`"
msgstr ":exc:`IsADirectoryError`"

#: ../../c-api/exceptions.rst:894
msgid ":c:data:`PyExc_KeyError`"
msgstr ":c:data:`PyExc_KeyError`"

#: ../../c-api/exceptions.rst:894
msgid ":exc:`KeyError`"
msgstr ":exc:`KeyError`"

#: ../../c-api/exceptions.rst:896
msgid ":c:data:`PyExc_KeyboardInterrupt`"
msgstr ":c:data:`PyExc_KeyboardInterrupt`"

#: ../../c-api/exceptions.rst:896
msgid ":exc:`KeyboardInterrupt`"
msgstr ":exc:`KeyboardInterrupt`"

#: ../../c-api/exceptions.rst:898
msgid ":c:data:`PyExc_LookupError`"
msgstr ":c:data:`PyExc_LookupError`"

#: ../../c-api/exceptions.rst:898
msgid ":exc:`LookupError`"
msgstr ":exc:`LookupError`"

#: ../../c-api/exceptions.rst:900
msgid ":c:data:`PyExc_MemoryError`"
msgstr ":c:data:`PyExc_MemoryError`"

#: ../../c-api/exceptions.rst:900
msgid ":exc:`MemoryError`"
msgstr ":exc:`MemoryError`"

#: ../../c-api/exceptions.rst:902
msgid ":c:data:`PyExc_ModuleNotFoundError`"
msgstr ":c:data:`PyExc_ModuleNotFoundError`"

#: ../../c-api/exceptions.rst:902
msgid ":exc:`ModuleNotFoundError`"
msgstr ":exc:`ModuleNotFoundError`"

#: ../../c-api/exceptions.rst:904
msgid ":c:data:`PyExc_NameError`"
msgstr ":c:data:`PyExc_NameError`"

#: ../../c-api/exceptions.rst:904
msgid ":exc:`NameError`"
msgstr ":exc:`NameError`"

#: ../../c-api/exceptions.rst:906
msgid ":c:data:`PyExc_NotADirectoryError`"
msgstr ":c:data:`PyExc_NotADirectoryError`"

#: ../../c-api/exceptions.rst:906
msgid ":exc:`NotADirectoryError`"
msgstr ":exc:`NotADirectoryError`"

#: ../../c-api/exceptions.rst:908
msgid ":c:data:`PyExc_NotImplementedError`"
msgstr ":c:data:`PyExc_NotImplementedError`"

#: ../../c-api/exceptions.rst:908
msgid ":exc:`NotImplementedError`"
msgstr ":exc:`NotImplementedError`"

#: ../../c-api/exceptions.rst:910
msgid ":c:data:`PyExc_OSError`"
msgstr ":c:data:`PyExc_OSError`"

#: ../../c-api/exceptions.rst:910
msgid ":exc:`OSError`"
msgstr ":exc:`OSError`"

#: ../../c-api/exceptions.rst:912
msgid ":c:data:`PyExc_OverflowError`"
msgstr ":c:data:`PyExc_OverflowError`"

#: ../../c-api/exceptions.rst:912
msgid ":exc:`OverflowError`"
msgstr ":exc:`OverflowError`"

#: ../../c-api/exceptions.rst:914
msgid ":c:data:`PyExc_PermissionError`"
msgstr ":c:data:`PyExc_PermissionError`"

#: ../../c-api/exceptions.rst:914
msgid ":exc:`PermissionError`"
msgstr ":exc:`PermissionError`"

#: ../../c-api/exceptions.rst:916
msgid ":c:data:`PyExc_ProcessLookupError`"
msgstr ":c:data:`PyExc_ProcessLookupError`"

#: ../../c-api/exceptions.rst:916
msgid ":exc:`ProcessLookupError`"
msgstr ":exc:`ProcessLookupError`"

#: ../../c-api/exceptions.rst:918
msgid ":c:data:`PyExc_RecursionError`"
msgstr ":c:data:`PyExc_RecursionError`"

#: ../../c-api/exceptions.rst:918
msgid ":exc:`RecursionError`"
msgstr ":exc:`RecursionError`"

#: ../../c-api/exceptions.rst:920
msgid ":c:data:`PyExc_ReferenceError`"
msgstr ":c:data:`PyExc_ReferenceError`"

#: ../../c-api/exceptions.rst:920
msgid ":exc:`ReferenceError`"
msgstr ":exc:`ReferenceError`"

#: ../../c-api/exceptions.rst:922
msgid ":c:data:`PyExc_RuntimeError`"
msgstr ":c:data:`PyExc_RuntimeError`"

#: ../../c-api/exceptions.rst:922
msgid ":exc:`RuntimeError`"
msgstr ":exc:`RuntimeError`"

#: ../../c-api/exceptions.rst:924
msgid ":c:data:`PyExc_StopAsyncIteration`"
msgstr ":c:data:`PyExc_StopAsyncIteration`"

#: ../../c-api/exceptions.rst:924
msgid ":exc:`StopAsyncIteration`"
msgstr ":exc:`StopAsyncIteration`"

#: ../../c-api/exceptions.rst:926
msgid ":c:data:`PyExc_StopIteration`"
msgstr ":c:data:`PyExc_StopIteration`"

#: ../../c-api/exceptions.rst:926
msgid ":exc:`StopIteration`"
msgstr ":exc:`StopIteration`"

#: ../../c-api/exceptions.rst:928
msgid ":c:data:`PyExc_SyntaxError`"
msgstr ":c:data:`PyExc_SyntaxError`"

#: ../../c-api/exceptions.rst:928
msgid ":exc:`SyntaxError`"
msgstr ":exc:`SyntaxError`"

#: ../../c-api/exceptions.rst:930
msgid ":c:data:`PyExc_SystemError`"
msgstr ":c:data:`PyExc_SystemError`"

#: ../../c-api/exceptions.rst:930
msgid ":exc:`SystemError`"
msgstr ":exc:`SystemError`"

#: ../../c-api/exceptions.rst:932
msgid ":c:data:`PyExc_SystemExit`"
msgstr ":c:data:`PyExc_SystemExit`"

#: ../../c-api/exceptions.rst:932
msgid ":exc:`SystemExit`"
msgstr ":exc:`SystemExit`"

#: ../../c-api/exceptions.rst:934
msgid ":c:data:`PyExc_TabError`"
msgstr ":c:data:`PyExc_TabError`"

#: ../../c-api/exceptions.rst:934
msgid ":exc:`TabError`"
msgstr ":exc:`TabError`"

#: ../../c-api/exceptions.rst:936
msgid ":c:data:`PyExc_TimeoutError`"
msgstr ":c:data:`PyExc_TimeoutError`"

#: ../../c-api/exceptions.rst:936
msgid ":exc:`TimeoutError`"
msgstr ":exc:`TimeoutError`"

#: ../../c-api/exceptions.rst:938
msgid ":c:data:`PyExc_TypeError`"
msgstr ":c:data:`PyExc_TypeError`"

#: ../../c-api/exceptions.rst:938
msgid ":exc:`TypeError`"
msgstr ":exc:`TypeError`"

#: ../../c-api/exceptions.rst:940
msgid ":c:data:`PyExc_UnboundLocalError`"
msgstr ":c:data:`PyExc_UnboundLocalError`"

#: ../../c-api/exceptions.rst:940
msgid ":exc:`UnboundLocalError`"
msgstr ":exc:`UnboundLocalError`"

#: ../../c-api/exceptions.rst:942
msgid ":c:data:`PyExc_UnicodeDecodeError`"
msgstr ":c:data:`PyExc_UnicodeDecodeError`"

#: ../../c-api/exceptions.rst:942
msgid ":exc:`UnicodeDecodeError`"
msgstr ":exc:`UnicodeDecodeError`"

#: ../../c-api/exceptions.rst:944
msgid ":c:data:`PyExc_UnicodeEncodeError`"
msgstr ":c:data:`PyExc_UnicodeEncodeError`"

#: ../../c-api/exceptions.rst:944
msgid ":exc:`UnicodeEncodeError`"
msgstr ":exc:`UnicodeEncodeError`"

#: ../../c-api/exceptions.rst:946
msgid ":c:data:`PyExc_UnicodeError`"
msgstr ":c:data:`PyExc_UnicodeError`"

#: ../../c-api/exceptions.rst:946
msgid ":exc:`UnicodeError`"
msgstr ":exc:`UnicodeError`"

#: ../../c-api/exceptions.rst:948
msgid ":c:data:`PyExc_UnicodeTranslateError`"
msgstr ":c:data:`PyExc_UnicodeTranslateError`"

#: ../../c-api/exceptions.rst:948
msgid ":exc:`UnicodeTranslateError`"
msgstr ":exc:`UnicodeTranslateError`"

#: ../../c-api/exceptions.rst:950
msgid ":c:data:`PyExc_ValueError`"
msgstr ":c:data:`PyExc_ValueError`"

#: ../../c-api/exceptions.rst:950
msgid ":exc:`ValueError`"
msgstr ":exc:`ValueError`"

#: ../../c-api/exceptions.rst:952
msgid ":c:data:`PyExc_ZeroDivisionError`"
msgstr ":c:data:`PyExc_ZeroDivisionError`"

#: ../../c-api/exceptions.rst:952
msgid ":exc:`ZeroDivisionError`"
msgstr ":exc:`ZeroDivisionError`"

#: ../../c-api/exceptions.rst:955
msgid ""
":c:data:`PyExc_BlockingIOError`, :c:data:`PyExc_BrokenPipeError`, :c:data:"
"`PyExc_ChildProcessError`, :c:data:`PyExc_ConnectionError`, :c:data:"
"`PyExc_ConnectionAbortedError`, :c:data:`PyExc_ConnectionRefusedError`, :c:"
"data:`PyExc_ConnectionResetError`, :c:data:`PyExc_FileExistsError`, :c:data:"
"`PyExc_FileNotFoundError`, :c:data:`PyExc_InterruptedError`, :c:data:"
"`PyExc_IsADirectoryError`, :c:data:`PyExc_NotADirectoryError`, :c:data:"
"`PyExc_PermissionError`, :c:data:`PyExc_ProcessLookupError` and :c:data:"
"`PyExc_TimeoutError` were introduced following :pep:`3151`."
msgstr ""
":c:data:`PyExc_BlockingIOError`, :c:data:`PyExc_BrokenPipeError`, :c:data:"
"`PyExc_ChildProcessError`, :c:data:`PyExc_ConnectionError`, :c:data:"
"`PyExc_ConnectionAbortedError`, :c:data:`PyExc_ConnectionRefusedError`, :c:"
"data:`PyExc_ConnectionResetError`, :c:data:`PyExc_FileExistsError`, :c:data:"
"`PyExc_FileNotFoundError`, :c:data:`PyExc_InterruptedError`, :c:data:"
"`PyExc_IsADirectoryError`, :c:data:`PyExc_NotADirectoryError`, :c:data:"
"`PyExc_PermissionError`, :c:data:`PyExc_ProcessLookupError` y :c:data:"
"`PyExc_TimeoutError` se introdujeron a continuación de :pep:`3151`."

#: ../../c-api/exceptions.rst:965
msgid ":c:data:`PyExc_StopAsyncIteration` and :c:data:`PyExc_RecursionError`."
msgstr ":c:data:`PyExc_StopAsyncIteration` y :c:data:`PyExc_RecursionError`."

#: ../../c-api/exceptions.rst:968
msgid ":c:data:`PyExc_ModuleNotFoundError`."
msgstr ":c:data:`PyExc_ModuleNotFoundError`."

#: ../../c-api/exceptions.rst:971
msgid "These are compatibility aliases to :c:data:`PyExc_OSError`:"
msgstr "Se trata de alias de compatibilidad de :c:data:`PyExc_OSError`:"

#: ../../c-api/exceptions.rst:981
msgid ":c:data:`PyExc_EnvironmentError`"
msgstr ":c:data:`PyExc_EnvironmentError`"

#: ../../c-api/exceptions.rst:983
msgid ":c:data:`PyExc_IOError`"
msgstr ":c:data:`PyExc_IOError`"

#: ../../c-api/exceptions.rst:985
msgid ":c:data:`PyExc_WindowsError`"
msgstr ":c:data:`PyExc_WindowsError`"

#: ../../c-api/exceptions.rst:985
msgid "[2]_"
msgstr "[2]_"

#: ../../c-api/exceptions.rst:988
msgid "These aliases used to be separate exception types."
msgstr "Estos alias solían ser tipos de excepción independientes."

#: ../../c-api/exceptions.rst:991 ../../c-api/exceptions.rst:1052
msgid "Notes:"
msgstr "Notas:"

#: ../../c-api/exceptions.rst:994
msgid "This is a base class for other standard exceptions."
msgstr "Se trata de una clase base para otras excepciones estándar."

#: ../../c-api/exceptions.rst:997
msgid ""
"Only defined on Windows; protect code that uses this by testing that the "
"preprocessor macro ``MS_WINDOWS`` is defined."
msgstr ""
"Sólo definida en Windows; proteja el código que la utiliza comprobando que "
"la macro de preprocesador ``MS_WINDOWS`` está definida."

#: ../../c-api/exceptions.rst:1003
msgid "Standard Warning Categories"
msgstr "Categorías de advertencia estándar"

#: ../../c-api/exceptions.rst:1005
msgid ""
"All standard Python warning categories are available as global variables "
"whose names are ``PyExc_`` followed by the Python exception name. These have "
"the type :c:type:`PyObject*`; they are all class objects. For completeness, "
"here are all the variables:"
msgstr ""

#: ../../c-api/exceptions.rst:1026
msgid ":c:data:`PyExc_Warning`"
msgstr ":c:data:`PyExc_Warning`"

#: ../../c-api/exceptions.rst:1026
msgid ":exc:`Warning`"
msgstr ":exc:`Warning`"

#: ../../c-api/exceptions.rst:1026
msgid "[3]_"
msgstr "[3]_"

#: ../../c-api/exceptions.rst:1028
msgid ":c:data:`PyExc_BytesWarning`"
msgstr ":c:data:`PyExc_BytesWarning`"

#: ../../c-api/exceptions.rst:1028
msgid ":exc:`BytesWarning`"
msgstr ":exc:`BytesWarning`"

#: ../../c-api/exceptions.rst:1030
msgid ":c:data:`PyExc_DeprecationWarning`"
msgstr ":c:data:`PyExc_DeprecationWarning`"

#: ../../c-api/exceptions.rst:1030
msgid ":exc:`DeprecationWarning`"
msgstr ":exc:`DeprecationWarning`"

#: ../../c-api/exceptions.rst:1032
msgid ":c:data:`PyExc_FutureWarning`"
msgstr ":c:data:`PyExc_FutureWarning`"

#: ../../c-api/exceptions.rst:1032
msgid ":exc:`FutureWarning`"
msgstr ":exc:`FutureWarning`"

#: ../../c-api/exceptions.rst:1034
msgid ":c:data:`PyExc_ImportWarning`"
msgstr ":c:data:`PyExc_ImportWarning`"

#: ../../c-api/exceptions.rst:1034
msgid ":exc:`ImportWarning`"
msgstr ":exc:`ImportWarning`"

#: ../../c-api/exceptions.rst:1036
msgid ":c:data:`PyExc_PendingDeprecationWarning`"
msgstr ":c:data:`PyExc_PendingDeprecationWarning`"

#: ../../c-api/exceptions.rst:1036
msgid ":exc:`PendingDeprecationWarning`"
msgstr ":exc:`PendingDeprecationWarning`"

#: ../../c-api/exceptions.rst:1038
msgid ":c:data:`PyExc_ResourceWarning`"
msgstr ":c:data:`PyExc_ResourceWarning`"

#: ../../c-api/exceptions.rst:1038
msgid ":exc:`ResourceWarning`"
msgstr ":exc:`ResourceWarning`"

#: ../../c-api/exceptions.rst:1040
msgid ":c:data:`PyExc_RuntimeWarning`"
msgstr ":c:data:`PyExc_RuntimeWarning`"

#: ../../c-api/exceptions.rst:1040
msgid ":exc:`RuntimeWarning`"
msgstr ":exc:`RuntimeWarning`"

#: ../../c-api/exceptions.rst:1042
msgid ":c:data:`PyExc_SyntaxWarning`"
msgstr ":c:data:`PyExc_SyntaxWarning`"

#: ../../c-api/exceptions.rst:1042
msgid ":exc:`SyntaxWarning`"
msgstr ":exc:`SyntaxWarning`"

#: ../../c-api/exceptions.rst:1044
msgid ":c:data:`PyExc_UnicodeWarning`"
msgstr ":c:data:`PyExc_UnicodeWarning`"

#: ../../c-api/exceptions.rst:1044
msgid ":exc:`UnicodeWarning`"
msgstr ":exc:`UnicodeWarning`"

#: ../../c-api/exceptions.rst:1046
msgid ":c:data:`PyExc_UserWarning`"
msgstr ":c:data:`PyExc_UserWarning`"

#: ../../c-api/exceptions.rst:1046
msgid ":exc:`UserWarning`"
msgstr ":exc:`UserWarning`"

#: ../../c-api/exceptions.rst:1049
msgid ":c:data:`PyExc_ResourceWarning`."
msgstr ":c:data:`PyExc_ResourceWarning`."

#: ../../c-api/exceptions.rst:1055
msgid "This is a base class for other standard warning categories."
msgstr "Se trata de una clase base para otras categorías de aviso estándar."
