# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# eulalio barbero espinosa <eulalio@disroot.org>, 2023
# Rafael Fontenelle <rffontenelle@gmail.com>, 2024
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.10\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-01-10 16:06+0000\n"
"PO-Revision-Date: 2022-11-05 17:21+0000\n"
"Last-Translator: Rafael Fontenelle <rffontenelle@gmail.com>, 2024\n"
"Language-Team: Spanish (Spain) (https://app.transifex.com/python-doc/"
"teams/5390/es_ES/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: es_ES\n"
"Plural-Forms: nplurals=3; plural=n == 1 ? 0 : n != 0 && n % 1000000 == 0 ? "
"1 : 2;\n"

#: ../../c-api/contextvars.rst:6
msgid "Context Variables Objects"
msgstr "Objetos de variables de contexto"

#: ../../c-api/contextvars.rst:13
msgid ""
"In Python 3.7.1 the signatures of all context variables C APIs were "
"**changed** to use :c:type:`PyObject` pointers instead of :c:type:"
"`PyContext`, :c:type:`PyContextVar`, and :c:type:`PyContextToken`, e.g.::"
msgstr ""
"En Python 3.7.1, las firmas de todas las API de C de variables de contexto "
"se **cambiaron** para usar punteros :c:type:`PyObject` en lugar de :c:type:"
"`PyContext`, :c:type:`PyContextVar`, y :c:type:`PyContextToken`, p.ej.::"

#: ../../c-api/contextvars.rst:24
msgid "See :issue:`34762` for more details."
msgstr "Ver para más detalles :issue:`34762`."

#: ../../c-api/contextvars.rst:29
msgid ""
"This section details the public C API for the :mod:`contextvars` module."
msgstr ""
"En esta sección se detalla la API pública en C del módulo :mod:`contextvars`."

#: ../../c-api/contextvars.rst:33
msgid ""
"The C structure used to represent a :class:`contextvars.Context` object."
msgstr ""
"La estructura C utilizada para representar un objeto :class:`contextvars."
"Context`."

#: ../../c-api/contextvars.rst:38
msgid ""
"The C structure used to represent a :class:`contextvars.ContextVar` object."
msgstr ""
"La estructura C utilizada para representar un objeto :class:`contextvars."
"ContextVar`."

#: ../../c-api/contextvars.rst:43
msgid "The C structure used to represent a :class:`contextvars.Token` object."
msgstr ""
"La estructura C utilizada para representar un objeto :class:`contextvars."
"Token`."

#: ../../c-api/contextvars.rst:47
msgid "The type object representing the *context* type."
msgstr "El objeto de tipo que representa el tipo *context*."

#: ../../c-api/contextvars.rst:51
msgid "The type object representing the *context variable* type."
msgstr "El objeto tipo que representa el tipo de *context variable*."

#: ../../c-api/contextvars.rst:55
msgid "The type object representing the *context variable token* type."
msgstr "El objeto tipo que representa el tipo *context variable token*."

#: ../../c-api/contextvars.rst:58
msgid "Type-check macros:"
msgstr "Macros de comprobación tipográfica:"

#: ../../c-api/contextvars.rst:62
msgid ""
"Return true if *o* is of type :c:data:`PyContext_Type`. *o* must not be "
"``NULL``.  This function always succeeds."
msgstr ""
"Devuelve true si *o* es de tipo :c:data:`PyContext_Type`. *o* no debe ser "
"``NULL``. Esta función siempre tiene éxito."

#: ../../c-api/contextvars.rst:67
msgid ""
"Return true if *o* is of type :c:data:`PyContextVar_Type`. *o* must not be "
"``NULL``.  This function always succeeds."
msgstr ""
"Devuelve true si *o* es de tipo :c:data:`PyContextVar_Type`. *o* no debe ser "
"``NULL``.  Esta función siempre tiene éxito."

#: ../../c-api/contextvars.rst:72
msgid ""
"Return true if *o* is of type :c:data:`PyContextToken_Type`. *o* must not be "
"``NULL``.  This function always succeeds."
msgstr ""
"Devuelve true si *o* es de tipo :c:data:`PyContextToken_Type`. *o* no debe "
"ser ``NULL``.  Esta función siempre tiene éxito."

#: ../../c-api/contextvars.rst:76
msgid "Context object management functions:"
msgstr "Funciones de gestión de objetos de contexto:"

#: ../../c-api/contextvars.rst:80
msgid ""
"Create a new empty context object.  Returns ``NULL`` if an error has "
"occurred."
msgstr ""
"Crear un nuevo objeto de contexto vacío. Devuelve ``NULL`` si ha ocurrido un "
"error."

#: ../../c-api/contextvars.rst:85
msgid ""
"Create a shallow copy of the passed *ctx* context object. Returns ``NULL`` "
"if an error has occurred."
msgstr ""
"Cree una copia superficial del objeto de contexto *ctx* pasado. Devuelve "
"``NULL`` si ha ocurrido un error."

#: ../../c-api/contextvars.rst:90
msgid ""
"Create a shallow copy of the current thread context. Returns ``NULL`` if an "
"error has occurred."
msgstr ""
"Crear una copia superficial del contexto del hilo actual. Devuelve ``NULL`` "
"si se ha producido un error."

#: ../../c-api/contextvars.rst:95
msgid ""
"Set *ctx* as the current context for the current thread. Returns ``0`` on "
"success, and ``-1`` on error."
msgstr ""
"Establecer *ctx* como el contexto actual para el subproceso actual. Devuelve "
"``0`` en caso de éxito, y ``-1`` en caso de error."

#: ../../c-api/contextvars.rst:100
msgid ""
"Deactivate the *ctx* context and restore the previous context as the current "
"context for the current thread.  Returns ``0`` on success, and ``-1`` on "
"error."
msgstr ""
"Desactivar el contexto *ctx* y restaurar el contexto anterior como el "
"contexto actual para el hilo actual. Devuelve ``0`` en caso de éxito, y "
"``-1`` de error."

#: ../../c-api/contextvars.rst:105
msgid "Context variable functions:"
msgstr "Funciones variables de contexto"

#: ../../c-api/contextvars.rst:109
msgid ""
"Create a new ``ContextVar`` object.  The *name* parameter is used for "
"introspection and debug purposes.  The *def* parameter specifies a default "
"value for the context variable, or ``NULL`` for no default. If an error has "
"occurred, this function returns ``NULL``."
msgstr ""
"Crear un nuevo objeto ``ContextVar``.  The *name* parameter is used for "
"introspection and debug purposes.  El parámetro *nombre* se utiliza con "
"fines de introspección y depuración. El parámetro *def* especifica un valor "
"predeterminado para la variable de contexto, o ``NULL``si no hay valor "
"predeterminado. Si ha ocurrido un error, esta función devuelve ``NULL``."

#: ../../c-api/contextvars.rst:116
msgid ""
"Get the value of a context variable.  Returns ``-1`` if an error has "
"occurred during lookup, and ``0`` if no error occurred, whether or not a "
"value was found."
msgstr ""
"Obtener el valor de una variable de contexto. Devuelve``-1``si se ha "
"producido un error durante la búsqueda, y ``0`` si no se ha producido ningún "
"error, se haya o no encontrado un valor."

#: ../../c-api/contextvars.rst:120
msgid ""
"If the context variable was found, *value* will be a pointer to it. If the "
"context variable was *not* found, *value* will point to:"
msgstr ""
"Si se encontró la variable de contexto, *value* será un puntero a ella. Si "
"se encontró la variable de contexto *no*, *value* apuntará a:"

#: ../../c-api/contextvars.rst:123
msgid "*default_value*, if not ``NULL``;"
msgstr "*default_value*, si no ``NULL``;"

#: ../../c-api/contextvars.rst:124
msgid "the default value of *var*, if not ``NULL``;"
msgstr "el valor por defecto de *var*, si no ``NULL``;"

#: ../../c-api/contextvars.rst:125
msgid "``NULL``"
msgstr "``NULL``"

#: ../../c-api/contextvars.rst:127
msgid "Except for ``NULL``, the function returns a new reference."
msgstr "Excepto en ``NULL``, la función devuelve una nueva referencia."

#: ../../c-api/contextvars.rst:131
msgid ""
"Set the value of *var* to *value* in the current context.  Returns a new "
"token object for this change, or ``NULL`` if an error has occurred."
msgstr ""
"Establece el valor de *var* a *value* en el contexto actual.  Devuelve un "
"nuevo objeto token para este cambio, o ``NULL`` si se ha producido un error."

#: ../../c-api/contextvars.rst:136
msgid ""
"Reset the state of the *var* context variable to that it was in before :c:"
"func:`PyContextVar_Set` that returned the *token* was called. This function "
"returns ``0`` on success and ``-1`` on error."
msgstr ""
"Restablece el estado de la variable de contexto *var* al que tenía antes de "
"llamar a :c:func:`PyContextVar_Set` que devolvió el *token*. Esta función "
"devuelve ``0`` en caso de éxito y ``-1`` en caso de error."
