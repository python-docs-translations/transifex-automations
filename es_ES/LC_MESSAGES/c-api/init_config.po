# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# Rafael Fontenelle <rffontenelle@gmail.com>, 2024
# eulalio barbero espinosa <eulalio@disroot.org>, 2024
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.12\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-01-17 14:51+0000\n"
"PO-Revision-Date: 2024-05-11 00:32+0000\n"
"Last-Translator: eulalio barbero espinosa <eulalio@disroot.org>, 2024\n"
"Language-Team: Spanish (Spain) (https://app.transifex.com/python-doc/"
"teams/5390/es_ES/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: es_ES\n"
"Plural-Forms: nplurals=3; plural=n == 1 ? 0 : n != 0 && n % 1000000 == 0 ? "
"1 : 2;\n"

#: ../../c-api/init_config.rst:7
msgid "Python Initialization Configuration"
msgstr "Configuración de inicialización de Python"

#: ../../c-api/init_config.rst:11
msgid ""
"Python can be initialized with :c:func:`Py_InitializeFromConfig` and the :c:"
"type:`PyConfig` structure. It can be preinitialized with :c:func:"
"`Py_PreInitialize` and the :c:type:`PyPreConfig` structure."
msgstr ""
"Python puede inicializarse con :c:func:`Py_InitializeFromConfig` y la "
"estructura :c:type:`PyConfig`. Se puede preinicializar con :c:func:"
"`Py_PreInitialize` y la estructura :c:type:`PyPreConfig`."

#: ../../c-api/init_config.rst:15
msgid "There are two kinds of configuration:"
msgstr "Existen dos tipos de configuración:"

#: ../../c-api/init_config.rst:17
msgid ""
"The :ref:`Python Configuration <init-python-config>` can be used to build a "
"customized Python which behaves as the regular Python. For example, "
"environment variables and command line arguments are used to configure "
"Python."
msgstr ""
"La :ref:`Configuración de Python <init-python-config>` se puede utilizar "
"para construir un Python personalizado que se comporte como el Python "
"normal. Por ejemplo, las variables de entorno y los argumentos de línea de "
"comandos se utilizan para configurar Python."

#: ../../c-api/init_config.rst:22
msgid ""
"The :ref:`Isolated Configuration <init-isolated-conf>` can be used to embed "
"Python into an application. It isolates Python from the system. For example, "
"environment variables are ignored, the LC_CTYPE locale is left unchanged and "
"no signal handler is registered."
msgstr ""
"La :ref:`Configuración Aislada <init-isolated-conf>` se puede utilizar para "
"incrustar Python en una aplicación. Aísla Python del sistema. Por ejemplo, "
"las variables de entorno se ignoran, la configuración regional LC_CTYPE no "
"se modifica y no se registra ningún manejador de señales."

#: ../../c-api/init_config.rst:27
msgid ""
"The :c:func:`Py_RunMain` function can be used to write a customized Python "
"program."
msgstr ""
"La función :c:func:`Py_RunMain` puede utilizarse para escribir un programa "
"Python personalizado."

#: ../../c-api/init_config.rst:30
msgid ""
"See also :ref:`Initialization, Finalization, and Threads <initialization>`."
msgstr ""
"Véase también :ref:`Inicialización, Finalización e Hilos <initialization>`."

#: ../../c-api/init_config.rst:33
msgid ":pep:`587` \"Python Initialization Configuration\"."
msgstr ":pep:`587` \"Configuración de inicialización de Python\"."

#: ../../c-api/init_config.rst:37
msgid "Example"
msgstr "Ejemplo"

#: ../../c-api/init_config.rst:39
msgid "Example of customized Python always running in isolated mode::"
msgstr "Ejemplo de Python personalizado ejecutándose siempre en modo aislado::"

#: ../../c-api/init_config.rst:41
msgid ""
"int main(int argc, char **argv)\n"
"{\n"
"    PyStatus status;\n"
"\n"
"    PyConfig config;\n"
"    PyConfig_InitPythonConfig(&config);\n"
"    config.isolated = 1;\n"
"\n"
"    /* Decode command line arguments.\n"
"       Implicitly preinitialize Python (in isolated mode). */\n"
"    status = PyConfig_SetBytesArgv(&config, argc, argv);\n"
"    if (PyStatus_Exception(status)) {\n"
"        goto exception;\n"
"    }\n"
"\n"
"    status = Py_InitializeFromConfig(&config);\n"
"    if (PyStatus_Exception(status)) {\n"
"        goto exception;\n"
"    }\n"
"    PyConfig_Clear(&config);\n"
"\n"
"    return Py_RunMain();\n"
"\n"
"exception:\n"
"    PyConfig_Clear(&config);\n"
"    if (PyStatus_IsExit(status)) {\n"
"        return status.exitcode;\n"
"    }\n"
"    /* Display the error message and exit the process with\n"
"       non-zero exit code */\n"
"    Py_ExitStatusException(status);\n"
"}"
msgstr ""
"int main(int argc, char **argv)\n"
"{\n"
"    PyStatus status;\n"
"\n"
"    PyConfig config;\n"
"    PyConfig_InitPythonConfig(&config);\n"
"    config.isolated = 1;\n"
"\n"
"    /* Decodificar argumentos de línea de comandos.\n"
"      Preinicializar implícitamente Python (en modo aislado). */\n"
"    status = PyConfig_SetBytesArgv(&config, argc, argv);\n"
"    if (PyStatus_Exception(status)) {\n"
"        goto exception;\n"
"    }\n"
"\n"
"    status = Py_InitializeFromConfig(&config);\n"
"    if (PyStatus_Exception(status)) {\n"
"        goto exception;\n"
"    }\n"
"    PyConfig_Clear(&config);\n"
"\n"
"    return Py_RunMain();\n"
"\n"
"exception:\n"
"    PyConfig_Clear(&config);\n"
"    if (PyStatus_IsExit(status)) {\n"
"        return status.exitcode;\n"
"    }\n"
"    /* Muestra el mensaje de error y sal del proceso con\n"
"        código de salida distinto de cero */\n"
"    Py_ExitStatusException(status);\n"
"}"

#: ../../c-api/init_config.rst:76
msgid "PyWideStringList"
msgstr "PyWideStringList"

#: ../../c-api/init_config.rst:80
msgid "List of ``wchar_t*`` strings."
msgstr "Lista de cadenas ``wchar_t*``."

#: ../../c-api/init_config.rst:82
msgid ""
"If *length* is non-zero, *items* must be non-``NULL`` and all strings must "
"be non-``NULL``."
msgstr ""
"Si *length* es distinto de cero, *items* debe ser distinto de``NULL`` y "
"todas las cadenas deben ser distintas de``NULL``."

#: ../../c-api/init_config.rst:87
msgid "Methods:"
msgstr "Métodos:"

#: ../../c-api/init_config.rst:91
msgid "Append *item* to *list*."
msgstr "Añadir *item* a *list*."

#: ../../c-api/init_config.rst:93 ../../c-api/init_config.rst:104
msgid "Python must be preinitialized to call this function."
msgstr "Python debe estar preinicializado para llamar a esta función."

#: ../../c-api/init_config.rst:97
msgid "Insert *item* into *list* at *index*."
msgstr "Insertar *item* en *list* en *index*."

#: ../../c-api/init_config.rst:99
msgid ""
"If *index* is greater than or equal to *list* length, append *item* to "
"*list*."
msgstr ""
"Si *index* es mayor o igual que la longitud de *list*, añade *item* a *list*."

#: ../../c-api/init_config.rst:102
msgid "*index* must be greater than or equal to ``0``."
msgstr "*index* debe ser mayor o igual que ``0``."

#: ../../c-api/init_config.rst:108 ../../c-api/init_config.rst:128
#: ../../c-api/init_config.rst:235 ../../c-api/init_config.rst:544
msgid "Structure fields:"
msgstr "Campos de estructura:"

#: ../../c-api/init_config.rst:112
msgid "List length."
msgstr "Longitud de la lista."

#: ../../c-api/init_config.rst:116
msgid "List items."
msgstr "Lista de items."

#: ../../c-api/init_config.rst:119
msgid "PyStatus"
msgstr "PyStatus"

#: ../../c-api/init_config.rst:123
msgid ""
"Structure to store an initialization function status: success, error or exit."
msgstr ""
"Estructura para almacenar el estado de una función de inicialización: éxito, "
"error o salida."

#: ../../c-api/init_config.rst:126
msgid "For an error, it can store the C function name which created the error."
msgstr ""
"Para un error, puede almacenar el nombre de la función C que creó el error."

#: ../../c-api/init_config.rst:132
msgid "Exit code. Argument passed to ``exit()``."
msgstr "Código de salida. Argumento pasado a ``exit()``."

#: ../../c-api/init_config.rst:136
msgid "Error message."
msgstr "Mensaje de error."

#: ../../c-api/init_config.rst:140
msgid "Name of the function which created an error, can be ``NULL``."
msgstr "Nombre de la función que creó un error, puede ser ``NULL``."

#: ../../c-api/init_config.rst:144
msgid "Functions to create a status:"
msgstr "Funciones para crear un estado:"

#: ../../c-api/init_config.rst:148
msgid "Success."
msgstr "Éxito."

#: ../../c-api/init_config.rst:152
msgid "Initialization error with a message."
msgstr "Error de inicialización con un mensaje."

#: ../../c-api/init_config.rst:154
msgid "*err_msg* must not be ``NULL``."
msgstr "*err_msg* no debe ser ``NULL``."

#: ../../c-api/init_config.rst:158
msgid "Memory allocation failure (out of memory)."
msgstr "Fallo de asignación de memoria (sin memoria)."

#: ../../c-api/init_config.rst:162
msgid "Exit Python with the specified exit code."
msgstr "Salir de Python con el código de salida especificado."

#: ../../c-api/init_config.rst:164
msgid "Functions to handle a status:"
msgstr "Funciones para gestionar un estado:"

#: ../../c-api/init_config.rst:168
msgid ""
"Is the status an error or an exit? If true, the exception must be handled; "
"by calling :c:func:`Py_ExitStatusException` for example."
msgstr ""
"¿El estado es un error o una salida? Si es verdadero, la excepción se debe "
"tratar; por ejemplo, llamando a :c:func:`Py_ExitStatusException`."

#: ../../c-api/init_config.rst:173
msgid "Is the result an error?"
msgstr "¿El resultado es un error?"

#: ../../c-api/init_config.rst:177
msgid "Is the result an exit?"
msgstr "¿El resultado es una salida?"

#: ../../c-api/init_config.rst:181
msgid ""
"Call ``exit(exitcode)`` if *status* is an exit. Print the error message and "
"exit with a non-zero exit code if *status* is an error.  Must only be called "
"if ``PyStatus_Exception(status)`` is non-zero."
msgstr ""
"Llamar a ``exit(exitcode)`` si *status* es una salida. Imprime el mensaje de "
"error y sale con un código de salida distinto de cero si *status* es un "
"error.  Sólo debe llamarse si ``PyStatus_Exception(status)`` es distinto de "
"cero."

#: ../../c-api/init_config.rst:186
msgid ""
"Internally, Python uses macros which set ``PyStatus.func``, whereas "
"functions to create a status set ``func`` to ``NULL``."
msgstr ""
"Internamente, Python utiliza macros que establecen ``PyStatus.func``, "
"mientras que las funciones para crear un estado establecen ``func`` a "
"``NULL``."

#: ../../c-api/init_config.rst:189
msgid "Example::"
msgstr "Ejemplo::"

#: ../../c-api/init_config.rst:191
msgid ""
"PyStatus alloc(void **ptr, size_t size)\n"
"{\n"
"    *ptr = PyMem_RawMalloc(size);\n"
"    if (*ptr == NULL) {\n"
"        return PyStatus_NoMemory();\n"
"    }\n"
"    return PyStatus_Ok();\n"
"}\n"
"\n"
"int main(int argc, char **argv)\n"
"{\n"
"    void *ptr;\n"
"    PyStatus status = alloc(&ptr, 16);\n"
"    if (PyStatus_Exception(status)) {\n"
"        Py_ExitStatusException(status);\n"
"    }\n"
"    PyMem_Free(ptr);\n"
"    return 0;\n"
"}"
msgstr ""
"PyStatus alloc(void **ptr, size_t size)\n"
"{\n"
"    *ptr = PyMem_RawMalloc(size);\n"
"    if (*ptr == NULL) {\n"
"        return PyStatus_NoMemory();\n"
"    }\n"
"    return PyStatus_Ok();\n"
"}\n"
"\n"
"int main(int argc, char **argv)\n"
"{\n"
"    void *ptr;\n"
"    PyStatus status = alloc(&ptr, 16);\n"
"    if (PyStatus_Exception(status)) {\n"
"        Py_ExitStatusException(status);\n"
"    }\n"
"    PyMem_Free(ptr);\n"
"    return 0;\n"
"}"

#: ../../c-api/init_config.rst:213
msgid "PyPreConfig"
msgstr "PyPreConfig"

#: ../../c-api/init_config.rst:217
msgid "Structure used to preinitialize Python."
msgstr "Estructura utilizada para preinicializar Python."

#: ../../c-api/init_config.rst:221
msgid "Function to initialize a preconfiguration:"
msgstr "Función para inicializar una preconfiguración:"

#: ../../c-api/init_config.rst:225
msgid ""
"Initialize the preconfiguration with :ref:`Python Configuration <init-python-"
"config>`."
msgstr ""
"Inicializar la preconfiguración con :ref:`Python Configuration <init-python-"
"config>`."

#: ../../c-api/init_config.rst:230
msgid ""
"Initialize the preconfiguration with :ref:`Isolated Configuration <init-"
"isolated-conf>`."
msgstr ""
"Inicialice la preconfiguración con :ref:`Isolated Configuration <init-"
"isolated-conf>`."

#: ../../c-api/init_config.rst:239
msgid "Name of the Python memory allocators:"
msgstr "Nombre de los asignadores de memoria de Python:"

#: ../../c-api/init_config.rst:241
msgid ""
"``PYMEM_ALLOCATOR_NOT_SET`` (``0``): don't change memory allocators (use "
"defaults)."
msgstr ""
"``PYMEM_ALLOCATOR_NOT_SET`` (``0``): no cambie los asignadores de memoria "
"(utilice los predeterminados)."

#: ../../c-api/init_config.rst:243
msgid ""
"``PYMEM_ALLOCATOR_DEFAULT`` (``1``): :ref:`default memory allocators "
"<default-memory-allocators>`."
msgstr ""
"``PYMEM_ALLOCATOR_DEFAULT`` (``1``): :ref:`default memory allocators "
"<default-memory-allocators>`."

#: ../../c-api/init_config.rst:245
msgid ""
"``PYMEM_ALLOCATOR_DEBUG`` (``2``): :ref:`default memory allocators <default-"
"memory-allocators>` with :ref:`debug hooks <pymem-debug-hooks>`."
msgstr ""
"``PYMEM_ALLOCATOR_DEBUG`` (``2``): :ref:`default memory allocators <default-"
"memory-allocators>` con :ref:`debug hooks <pymem-debug-hooks>`."

#: ../../c-api/init_config.rst:248
msgid "``PYMEM_ALLOCATOR_MALLOC`` (``3``): use ``malloc()`` of the C library."
msgstr ""
"``PYMEM_ALLOCATOR_MALLOC`` (``3``): utiliza ``malloc()`` de la biblioteca C."

#: ../../c-api/init_config.rst:249
msgid ""
"``PYMEM_ALLOCATOR_MALLOC_DEBUG`` (``4``): force usage of ``malloc()`` with :"
"ref:`debug hooks <pymem-debug-hooks>`."
msgstr ""
"``PYMEM_ALLOCATOR_MALLOC_DEBUG`` (``4``): fuerza el uso de ``malloc()`` con :"
"ref:`debug hooks <pymem-debug-hooks>`."

#: ../../c-api/init_config.rst:251
msgid ""
"``PYMEM_ALLOCATOR_PYMALLOC`` (``5``): :ref:`Python pymalloc memory allocator "
"<pymalloc>`."
msgstr ""
"``PYMEM_ALLOCATOR_PYMALLOC`` (``5``): :ref:`Python pymalloc memory allocator "
"<pymalloc>`."

#: ../../c-api/init_config.rst:253
msgid ""
"``PYMEM_ALLOCATOR_PYMALLOC_DEBUG`` (``6``): :ref:`Python pymalloc memory "
"allocator <pymalloc>` with :ref:`debug hooks <pymem-debug-hooks>`."
msgstr ""
"``PYMEM_ALLOCATOR_PYMALLOC_DEBUG`` (``6``): :ref:`Python pymalloc memory "
"allocator <pymalloc>` con :ref:`debug hooks <pymem-debug-hooks>`."

#: ../../c-api/init_config.rst:257
msgid ""
"``PYMEM_ALLOCATOR_PYMALLOC`` and ``PYMEM_ALLOCATOR_PYMALLOC_DEBUG`` are not "
"supported if Python is :option:`configured using --without-pymalloc <--"
"without-pymalloc>`."
msgstr ""
"``PYMEM_ALLOCATOR_PYMALLOC`` y ``PYMEM_ALLOCATOR_PYMALLOC_DEBUG`` no están "
"soportados si Python es :option:`configured using --without-pymalloc <--"
"without-pymalloc>`."

#: ../../c-api/init_config.rst:261
msgid "See :ref:`Memory Management <memory>`."
msgstr "Véase :ref:`Gestión de memoria <memory>`."

#: ../../c-api/init_config.rst:263
msgid "Default: ``PYMEM_ALLOCATOR_NOT_SET``."
msgstr "Por defecto: ``PYMEM_ALLOCATOR_NOT_SET``."

#: ../../c-api/init_config.rst:267
msgid "Set the LC_CTYPE locale to the user preferred locale."
msgstr ""
"Establece la configuración LC_CTYPE a la configuración regional preferida "
"por el usuario."

#: ../../c-api/init_config.rst:269
msgid ""
"If equals to ``0``, set :c:member:`~PyPreConfig.coerce_c_locale` and :c:"
"member:`~PyPreConfig.coerce_c_locale_warn` members to ``0``."
msgstr ""
"Si es igual a ``0``, establezca los miembros :c:member:`~PyPreConfig."
"coerce_c_locale` y :c:member:`~PyPreConfig.coerce_c_locale_warn` en ``0``."

#: ../../c-api/init_config.rst:272 ../../c-api/init_config.rst:283
msgid "See the :term:`locale encoding`."
msgstr "Véase el :term:`locale encoding`."

#: ../../c-api/init_config.rst:274 ../../c-api/init_config.rst:329
#: ../../c-api/init_config.rst:684
msgid "Default: ``1`` in Python config, ``0`` in isolated config."
msgstr ""
"Por defecto: ``1`` en configuración Python, ``0`` en configuración aislada."

#: ../../c-api/init_config.rst:278
msgid "If equals to ``2``, coerce the C locale."
msgstr "Si es igual a ``2``, coacciona la configuración regional C."

#: ../../c-api/init_config.rst:280
msgid ""
"If equals to ``1``, read the LC_CTYPE locale to decide if it should be "
"coerced."
msgstr ""
"Si es igual a ``1``, lee la configuración regional LC_CTYPE para decidir si "
"se debe forzar."

#: ../../c-api/init_config.rst:285 ../../c-api/init_config.rst:291
msgid "Default: ``-1`` in Python config, ``0`` in isolated config."
msgstr "Por defecto: ``-1`` en Python config, ``0`` en configuración aislada."

#: ../../c-api/init_config.rst:289
msgid "If non-zero, emit a warning if the C locale is coerced."
msgstr ""
"Si es distinto de cero, emite una advertencia si la configuración regional "
"de C está forzada."

#: ../../c-api/init_config.rst:295
msgid ""
":ref:`Python Development Mode <devmode>`: see :c:member:`PyConfig.dev_mode`."
msgstr ""
":ref:`Python Development Mode <devmode>`: ver :c:member:`PyConfig.dev_mode`."

#: ../../c-api/init_config.rst:298 ../../c-api/init_config.rst:693
#: ../../c-api/init_config.rst:735 ../../c-api/init_config.rst:1188
msgid "Default: ``-1`` in Python mode, ``0`` in isolated mode."
msgstr "Por defecto: ``-1`` en modo Python, ``0`` en modo aislado."

#: ../../c-api/init_config.rst:302
msgid "Isolated mode: see :c:member:`PyConfig.isolated`."
msgstr "Modo aislado: ver :c:member:`PyConfig.isolated`."

#: ../../c-api/init_config.rst:304 ../../c-api/init_config.rst:880
msgid "Default: ``0`` in Python mode, ``1`` in isolated mode."
msgstr "Por defecto: ``0`` en modo Python, ``1`` en modo aislado."

#: ../../c-api/init_config.rst:308
msgid "If non-zero:"
msgstr "Si es distinto de cero:"

#: ../../c-api/init_config.rst:310
msgid "Set :c:member:`PyPreConfig.utf8_mode` to ``0``,"
msgstr "Configura :c:member:`PyPreConfig.utf8_mode` en ``0``,"

#: ../../c-api/init_config.rst:311
msgid "Set :c:member:`PyConfig.filesystem_encoding` to ``\"mbcs\"``,"
msgstr "Configura :c:member:`PyConfig.filesystem_encoding` en ``\"mbcs\"``,"

#: ../../c-api/init_config.rst:312
msgid "Set :c:member:`PyConfig.filesystem_errors` to ``\"replace\"``."
msgstr "Configura :c:member:`PyConfig.filesystem_errors` en ``\"replace\"``."

#: ../../c-api/init_config.rst:314
msgid ""
"Initialized from the :envvar:`PYTHONLEGACYWINDOWSFSENCODING` environment "
"variable value."
msgstr ""
"Inicializado a partir del valor de la variable de entorno :envvar:"
"`PYTHONLEGACYWINDOWSFSENCODING`."

#: ../../c-api/init_config.rst:317 ../../c-api/init_config.rst:894
msgid ""
"Only available on Windows. ``#ifdef MS_WINDOWS`` macro can be used for "
"Windows specific code."
msgstr ""
"Sólo disponible en Windows. ``#ifdef MS_WINDOWS`` macro puede utilizarse "
"para código específico de Windows."

#: ../../c-api/init_config.rst:320 ../../c-api/init_config.rst:632
#: ../../c-api/init_config.rst:639 ../../c-api/init_config.rst:706
#: ../../c-api/init_config.rst:815 ../../c-api/init_config.rst:829
#: ../../c-api/init_config.rst:843 ../../c-api/init_config.rst:897
#: ../../c-api/init_config.rst:911 ../../c-api/init_config.rst:971
#: ../../c-api/init_config.rst:1023 ../../c-api/init_config.rst:1083
#: ../../c-api/init_config.rst:1123 ../../c-api/init_config.rst:1152
#: ../../c-api/init_config.rst:1239
msgid "Default: ``0``."
msgstr "Por defecto: ``0``."

#: ../../c-api/init_config.rst:324
msgid ""
"If non-zero, :c:func:`Py_PreInitializeFromArgs` and :c:func:"
"`Py_PreInitializeFromBytesArgs` parse their ``argv`` argument the same way "
"the regular Python parses command line arguments: see :ref:`Command Line "
"Arguments <using-on-cmdline>`."
msgstr ""
"Si es distinto de cero, :c:func:`Py_PreInitializeFromArgs` y :c:func:"
"`Py_PreInitializeFromBytesArgs` analizan su argumento ``argv`` de la misma "
"forma que Python analiza los argumentos de la línea de comandos: ver :ref:"
"`Argumentos de la línea de comandos <using-on-cmdline>`."

#: ../../c-api/init_config.rst:333
msgid ""
"Use :ref:`environment variables <using-on-envvars>`? See :c:member:`PyConfig."
"use_environment`."
msgstr ""
"Use :ref:`environment variables <using-on-envvars>`? Ver :c:member:`PyConfig."
"use_environment`."

#: ../../c-api/init_config.rst:336 ../../c-api/init_config.rst:1213
msgid "Default: ``1`` in Python config and ``0`` in isolated config."
msgstr ""
"Por defecto: ``1`` en configuración Python y ``0`` en configuración aislada."

#: ../../c-api/init_config.rst:340
msgid "If non-zero, enable the :ref:`Python UTF-8 Mode <utf8-mode>`."
msgstr ""
"Si es distinto de cero, activa el :ref:`Python UTF-8 Mode <utf8-mode>`."

#: ../../c-api/init_config.rst:342
msgid ""
"Set to ``0`` or ``1`` by the :option:`-X utf8 <-X>` command line option and "
"the :envvar:`PYTHONUTF8` environment variable."
msgstr ""
"Se establece en ``0`` o ``1`` mediante la opción de línea de comandos :"
"option:`-X utf8 <-X>` y la variable de entorno :envvar:`PYTHONUTF8`."

#: ../../c-api/init_config.rst:345
msgid "Also set to ``1`` if the ``LC_CTYPE`` locale is ``C`` or ``POSIX``."
msgstr ""
"También se establece en ``1`` si la configuración regional de ``LC_CTYPE`` "
"es ``C`` o ``POSIX``."

#: ../../c-api/init_config.rst:347
msgid "Default: ``-1`` in Python config and ``0`` in isolated config."
msgstr ""
"Por defecto: ``-1`` en configuración Python y ``0`` en configuración aislada."

#: ../../c-api/init_config.rst:353
msgid "Preinitialize Python with PyPreConfig"
msgstr "Preiniciar Python con PyPreConfig"

#: ../../c-api/init_config.rst:355
msgid "The preinitialization of Python:"
msgstr "La preinicialización de Python:"

#: ../../c-api/init_config.rst:357
msgid "Set the Python memory allocators (:c:member:`PyPreConfig.allocator`)"
msgstr ""
"Establecer los asignadores de memoria de Python (:c:member:`PyPreConfig."
"allocator`)"

#: ../../c-api/init_config.rst:358
msgid "Configure the LC_CTYPE locale (:term:`locale encoding`)"
msgstr ""
"Configurar la configuración regional LC_CTYPE (:term:`locale encoding`)"

#: ../../c-api/init_config.rst:359
msgid ""
"Set the :ref:`Python UTF-8 Mode <utf8-mode>` (:c:member:`PyPreConfig."
"utf8_mode`)"
msgstr ""
"Establezca el :ref:`Python UTF-8 Mode<utf8-mode>` (:c:member:`PyPreConfig."
"utf8_mode`)"

#: ../../c-api/init_config.rst:362
msgid ""
"The current preconfiguration (``PyPreConfig`` type) is stored in "
"``_PyRuntime.preconfig``."
msgstr ""
"La preconfiguración actual (tipo``PyPreConfig`` ) se almacena en "
"``_PyRuntime.preconfig``."

#: ../../c-api/init_config.rst:365
msgid "Functions to preinitialize Python:"
msgstr "Funciones para preinicializar Python:"

#: ../../c-api/init_config.rst:369 ../../c-api/init_config.rst:375
#: ../../c-api/init_config.rst:384
msgid "Preinitialize Python from *preconfig* preconfiguration."
msgstr "Preiniciar Python desde *preconfig* preconfiguración."

#: ../../c-api/init_config.rst:371 ../../c-api/init_config.rst:380
#: ../../c-api/init_config.rst:389
msgid "*preconfig* must not be ``NULL``."
msgstr "*preconfig* no debe ser ``NULL``."

#: ../../c-api/init_config.rst:377
msgid ""
"Parse *argv* command line arguments (bytes strings) if :c:member:"
"`~PyPreConfig.parse_argv` of *preconfig* is non-zero."
msgstr ""
"Analiza *argv* argumentos de línea de órdenes (cadenas de bytes) si :c:"
"member:`~PyPreConfig.parse_argv` de *preconfig* es distinto de cero."

#: ../../c-api/init_config.rst:386
msgid ""
"Parse *argv* command line arguments (wide strings) if :c:member:"
"`~PyPreConfig.parse_argv` of *preconfig* is non-zero."
msgstr ""
"Analiza *argv* argumentos de línea de órdenes (cadenas anchas) si :c:member:"
"`~PyPreConfig.parse_argv` de *preconfig* es distinto de cero."

#: ../../c-api/init_config.rst:391 ../../c-api/init_config.rst:1301
msgid ""
"The caller is responsible to handle exceptions (error or exit) using :c:func:"
"`PyStatus_Exception` and :c:func:`Py_ExitStatusException`."
msgstr ""
"El llamante es responsable de manejar las excepciones (error o salida) "
"utilizando :c:func:`PyStatus_Exception` y :c:func:`Py_ExitStatusException`."

#: ../../c-api/init_config.rst:394
msgid ""
"For :ref:`Python Configuration <init-python-config>` (:c:func:"
"`PyPreConfig_InitPythonConfig`), if Python is initialized with command line "
"arguments, the command line arguments must also be passed to preinitialize "
"Python, since they have an effect on the pre-configuration like encodings. "
"For example, the :option:`-X utf8 <-X>` command line option enables the :ref:"
"`Python UTF-8 Mode <utf8-mode>`."
msgstr ""
"Para :ref:`Python Configuration <init-python-config>` (:c:func:"
"`PyPreConfig_InitPythonConfig`), si Python se inicializa con argumentos de "
"línea de órdenes, los argumentos de línea de órdenes también deben pasarse "
"para preinicializar Python, ya que tienen un efecto sobre la "
"preconfiguración como las codificaciones. Por ejemplo, la opción de línea de "
"órdenes :option:`-X utf8 <-X>` activa el modo :ref:`Python UTF-8 <utf8-"
"mode>`."

#: ../../c-api/init_config.rst:401
msgid ""
"``PyMem_SetAllocator()`` can be called after :c:func:`Py_PreInitialize` and "
"before :c:func:`Py_InitializeFromConfig` to install a custom memory "
"allocator. It can be called before :c:func:`Py_PreInitialize` if :c:member:"
"`PyPreConfig.allocator` is set to ``PYMEM_ALLOCATOR_NOT_SET``."
msgstr ""
"``PyMem_SetAllocator()`` se puede llamar después de :c:func:"
"`Py_PreInitialize` y antes de :c:func:`Py_InitializeFromConfig` para "
"instalar un asignador de memoria personalizado. Se puede llamar antes de :c:"
"func:`Py_PreInitialize` si :c:member:`PyPreConfig.allocator` se establece en "
"``PYMEM_ALLOCATOR_NOT_SET``."

#: ../../c-api/init_config.rst:406
msgid ""
"Python memory allocation functions like :c:func:`PyMem_RawMalloc` must not "
"be used before the Python preinitialization, whereas calling directly "
"``malloc()`` and ``free()`` is always safe. :c:func:`Py_DecodeLocale` must "
"not be called before the Python preinitialization."
msgstr ""
"Las funciones de asignación de memoria de Python como :c:func:"
"`PyMem_RawMalloc` no se deben usar antes de la preinicialización de Python, "
"mientras que llamar directamente a ``malloc()`` y ``free()`` es siempre "
"seguro. :c:func:`Py_DecodeLocale` no se debe llamar antes de la "
"preinicialización de Python."

#: ../../c-api/init_config.rst:411
msgid ""
"Example using the preinitialization to enable the :ref:`Python UTF-8 Mode "
"<utf8-mode>`::"
msgstr ""
"Ejemplo de uso de la preinicialización para habilitar :ref:`Python UTF-8 "
"Mode<utf8-mode>`::"

#: ../../c-api/init_config.rst:414
msgid ""
"PyStatus status;\n"
"PyPreConfig preconfig;\n"
"PyPreConfig_InitPythonConfig(&preconfig);\n"
"\n"
"preconfig.utf8_mode = 1;\n"
"\n"
"status = Py_PreInitialize(&preconfig);\n"
"if (PyStatus_Exception(status)) {\n"
"    Py_ExitStatusException(status);\n"
"}\n"
"\n"
"/* at this point, Python speaks UTF-8 */\n"
"\n"
"Py_Initialize();\n"
"/* ... use Python API here ... */\n"
"Py_Finalize();"
msgstr ""
"PyStatus status;\n"
"PyPreConfig preconfig;\n"
"PyPreConfig_InitPythonConfig(&preconfig);\n"
"\n"
"preconfig.utf8_mode = 1;\n"
"\n"
"status = Py_PreInitialize(&preconfig);\n"
"if (PyStatus_Exception(status)) {\n"
"    Py_ExitStatusException(status);\n"
"}\n"
"\n"
"/* at this point, Python speaks UTF-8 */\n"
"\n"
"Py_Initialize();\n"
"/* ... use Python API here ... */\n"
"Py_Finalize();"

#: ../../c-api/init_config.rst:433
msgid "PyConfig"
msgstr "PyConfig"

#: ../../c-api/init_config.rst:437
msgid "Structure containing most parameters to configure Python."
msgstr ""
"Estructura que contiene la mayoría de los parámetros para configurar Python."

#: ../../c-api/init_config.rst:439
msgid ""
"When done, the :c:func:`PyConfig_Clear` function must be used to release the "
"configuration memory."
msgstr ""
"Una vez hecho esto, debe utilizarse la función :c:func:`PyConfig_Clear` para "
"liberar la memoria de configuración."

#: ../../c-api/init_config.rst:444
msgid "Structure methods:"
msgstr "Métodos de estructura:"

#: ../../c-api/init_config.rst:448
msgid ""
"Initialize configuration with the :ref:`Python Configuration <init-python-"
"config>`."
msgstr ""
"Inicializar la configuración con el :ref:`Python Configuration <init-python-"
"config>`."

#: ../../c-api/init_config.rst:453
msgid ""
"Initialize configuration with the :ref:`Isolated Configuration <init-"
"isolated-conf>`."
msgstr ""
"Inicialice la configuración con :ref:`Isolated Configuration <init-isolated-"
"conf>`."

#: ../../c-api/init_config.rst:458
msgid "Copy the wide character string *str* into ``*config_str``."
msgstr "Copie la cadena de caracteres anchos *str* en ``*config_str``."

#: ../../c-api/init_config.rst:460 ../../c-api/init_config.rst:467
#: ../../c-api/init_config.rst:474 ../../c-api/init_config.rst:482
#: ../../c-api/init_config.rst:488 ../../c-api/init_config.rst:505
msgid ":ref:`Preinitialize Python <c-preinit>` if needed."
msgstr ":ref:`Preinitialize Python <c-preinit>` si es necesario."

#: ../../c-api/init_config.rst:464
msgid ""
"Decode *str* using :c:func:`Py_DecodeLocale` and set the result into "
"``*config_str``."
msgstr ""
"Decodifica *str* usando :c:func:`Py_DecodeLocale` y coloca el resultado en "
"``*config_str``."

#: ../../c-api/init_config.rst:471
msgid ""
"Set command line arguments (:c:member:`~PyConfig.argv` member of *config*) "
"from the *argv* list of wide character strings."
msgstr ""
"Establece los argumentos de la línea de comandos (:c:member:`~PyConfig.argv` "
"miembro de *config*) a partir de la lista *argv* de cadenas de caracteres "
"anchos."

#: ../../c-api/init_config.rst:478
msgid ""
"Set command line arguments (:c:member:`~PyConfig.argv` member of *config*) "
"from the *argv* list of bytes strings. Decode bytes using :c:func:"
"`Py_DecodeLocale`."
msgstr ""
"Establecer argumentos de línea de comandos (:c:member:`~PyConfig.argv` "
"miembro de *config*) a partir de la lista *argv* de cadenas de bytes. "
"Decodificar bytes usando :c:func:`Py_DecodeLocale`."

#: ../../c-api/init_config.rst:486
msgid "Set the list of wide strings *list* to *length* and *items*."
msgstr "Establece la lista de cadenas anchas *list* a *length* e *items*."

#: ../../c-api/init_config.rst:492
msgid "Read all Python configuration."
msgstr "Leer toda la configuración de Python."

#: ../../c-api/init_config.rst:494
msgid "Fields which are already initialized are left unchanged."
msgstr "Los campos ya inicializados no se modifican."

#: ../../c-api/init_config.rst:496
msgid ""
"Fields for :ref:`path configuration <init-path-config>` are no longer "
"calculated or modified when calling this function, as of Python 3.11."
msgstr ""
"Los campos de :ref:`path configuration<init-path-config>` ya no se calculan "
"ni modifican al llamar a esta función, a partir de Python 3.11."

#: ../../c-api/init_config.rst:499 ../../c-api/init_config.rst:1000
msgid ""
"The :c:func:`PyConfig_Read` function only parses :c:member:`PyConfig.argv` "
"arguments once: :c:member:`PyConfig.parse_argv` is set to ``2`` after "
"arguments are parsed. Since Python arguments are stripped from :c:member:"
"`PyConfig.argv`, parsing arguments twice would parse the application options "
"as Python options."
msgstr ""
"La función :c:func:`PyConfig_Read` sólo analiza los argumentos de :c:member:"
"`PyConfig.argv` una vez: :c:member:`PyConfig.parse_argv` se convierte en "
"``2`` después de analizar los argumentos. Dado que los argumentos de Python "
"se eliminan de :c:member:`PyConfig.argv`, si se analizan los argumentos dos "
"veces, las opciones de la aplicación se analizarían como opciones de Python."

#: ../../c-api/init_config.rst:507
msgid ""
"The :c:member:`PyConfig.argv` arguments are now only parsed once, :c:member:"
"`PyConfig.parse_argv` is set to ``2`` after arguments are parsed, and "
"arguments are only parsed if :c:member:`PyConfig.parse_argv` equals ``1``."
msgstr ""
"Los argumentos :c:member:`PyConfig.argv` ahora sólo se analizan una vez, :c:"
"member:`PyConfig.parse_argv` se establece en ``2`` después de analizar los "
"argumentos, y los argumentos sólo se analizan si :c:member:`PyConfig."
"parse_argv` es igual a ``1``."

#: ../../c-api/init_config.rst:513
msgid ""
":c:func:`PyConfig_Read` no longer calculates all paths, and so fields listed "
"under :ref:`Python Path Configuration <init-path-config>` may no longer be "
"updated until :c:func:`Py_InitializeFromConfig` is called."
msgstr ""
":c:func:`PyConfig_Read` ya no calcula todas las rutas, por lo que es posible "
"que los campos listados en :ref:`Python Path Configuration <init-path-"
"config>` no se actualicen hasta que se llame a :c:func:"
"`Py_InitializeFromConfig`."

#: ../../c-api/init_config.rst:521
msgid "Release configuration memory."
msgstr "Liberar memoria de configuración."

#: ../../c-api/init_config.rst:523
msgid ""
"Most ``PyConfig`` methods :ref:`preinitialize Python <c-preinit>` if needed. "
"In that case, the Python preinitialization configuration (:c:type:"
"`PyPreConfig`) in based on the :c:type:`PyConfig`. If configuration fields "
"which are in common with :c:type:`PyPreConfig` are tuned, they must be set "
"before calling a :c:type:`PyConfig` method:"
msgstr ""
"La mayoría de los métodos ``PyConfig``:ref:`preinitialize Python <c-"
"preinit>` si es necesario. En ese caso, la configuración de "
"preinicialización de Python (:c:type:`PyPreConfig`) se basa en la de :c:type:"
"`PyConfig`. Si se sintonizan campos de configuración que son comunes con :c:"
"type:`PyPreConfig`, deben establecerse antes de llamar a un método :c:type:"
"`PyConfig`:"

#: ../../c-api/init_config.rst:529
msgid ":c:member:`PyConfig.dev_mode`"
msgstr ":c:member:`PyConfig.dev_mode`"

#: ../../c-api/init_config.rst:530
msgid ":c:member:`PyConfig.isolated`"
msgstr ":c:member:`PyConfig.isolated`"

#: ../../c-api/init_config.rst:531
msgid ":c:member:`PyConfig.parse_argv`"
msgstr ":c:member:`PyConfig.parse_argv`"

#: ../../c-api/init_config.rst:532
msgid ":c:member:`PyConfig.use_environment`"
msgstr ":c:member:`PyConfig.use_environment`"

#: ../../c-api/init_config.rst:534
msgid ""
"Moreover, if :c:func:`PyConfig_SetArgv` or :c:func:`PyConfig_SetBytesArgv` "
"is used, this method must be called before other methods, since the "
"preinitialization configuration depends on command line arguments (if :c:"
"member:`~PyConfig.parse_argv` is non-zero)."
msgstr ""
"Además, si se utiliza :c:func:`PyConfig_SetArgv` o :c:func:"
"`PyConfig_SetBytesArgv`, este método debe llamarse antes que otros métodos, "
"ya que la configuración de preinicialización depende de los argumentos de la "
"línea de comandos (si :c:member:`~PyConfig.parse_argv` es distinto de cero)."

#: ../../c-api/init_config.rst:539
msgid ""
"The caller of these methods is responsible to handle exceptions (error or "
"exit) using ``PyStatus_Exception()`` and ``Py_ExitStatusException()``."
msgstr ""
"El invocador de estos métodos es responsable de manejar las excepciones "
"(error o salida) utilizando ``PyStatus_Exception()`` y "
"``Py_ExitStatusException()``."

#: ../../c-api/init_config.rst:548
msgid "Command line arguments: :data:`sys.argv`."
msgstr "Argumentos de la línea de comandos: :data:`sys.argv`."

#: ../../c-api/init_config.rst:550
msgid ""
"Set :c:member:`~PyConfig.parse_argv` to ``1`` to parse :c:member:`~PyConfig."
"argv` the same way the regular Python parses Python command line arguments "
"and then to strip Python arguments from :c:member:`~PyConfig.argv`."
msgstr ""
"Establezca :c:member:`~PyConfig.parse_argv` en ``1`` para analizar :c:member:"
"`~PyConfig.argv` del mismo modo que Python analiza los argumentos de la "
"línea de comandos de Python y, a continuación, elimine los argumentos de "
"Python de :c:member:`~PyConfig.argv`."

#: ../../c-api/init_config.rst:555
msgid ""
"If :c:member:`~PyConfig.argv` is empty, an empty string is added to ensure "
"that :data:`sys.argv` always exists and is never empty."
msgstr ""
"Si :c:member:`~PyConfig.argv` está vacío, se añade una cadena vacía para "
"garantizar que :data:`sys.argv` siempre existe y nunca está vacío."

#: ../../c-api/init_config.rst:558 ../../c-api/init_config.rst:585
#: ../../c-api/init_config.rst:597 ../../c-api/init_config.rst:605
#: ../../c-api/init_config.rst:713 ../../c-api/init_config.rst:722
#: ../../c-api/init_config.rst:804 ../../c-api/init_config.rst:941
#: ../../c-api/init_config.rst:1042 ../../c-api/init_config.rst:1060
#: ../../c-api/init_config.rst:1074 ../../c-api/init_config.rst:1091
#: ../../c-api/init_config.rst:1104 ../../c-api/init_config.rst:1112
msgid "Default: ``NULL``."
msgstr "Por defecto: ``NULL``."

#: ../../c-api/init_config.rst:560
msgid "See also the :c:member:`~PyConfig.orig_argv` member."
msgstr "Ver también el miembro :c:member:`~PyConfig.orig_argv`."

#: ../../c-api/init_config.rst:564
msgid ""
"If equals to zero, ``Py_RunMain()`` prepends a potentially unsafe path to :"
"data:`sys.path` at startup:"
msgstr ""
"Si es igual a cero, ``Py_RunMain()`` antepone una ruta potencialmente "
"insegura a :data:`sys.path` al iniciarse:"

#: ../../c-api/init_config.rst:567
msgid ""
"If :c:member:`argv[0] <PyConfig.argv>` is equal to ``L\"-m\"`` (``python -m "
"module``), prepend the current working directory."
msgstr ""
"Si :c:member:`argv[0] <PyConfig.argv>` es igual a ``L\"-m\"`` (``python -m "
"module``), añade el directorio de trabajo actual."

#: ../../c-api/init_config.rst:569
msgid ""
"If running a script (``python script.py``), prepend the script's directory.  "
"If it's a symbolic link, resolve symbolic links."
msgstr ""
"Si se ejecuta un script (``python script.py``), anteponer el directorio del "
"script.  Si es un enlace simbólico, resolver enlaces simbólicos."

#: ../../c-api/init_config.rst:571
msgid ""
"Otherwise (``python -c code`` and ``python``), prepend an empty string, "
"which means the current working directory."
msgstr ""
"En caso contrario (``python -c code`` y ``python``), antepone una cadena "
"vacía, que significa el directorio de trabajo actual."

#: ../../c-api/init_config.rst:574
msgid ""
"Set to ``1`` by the :option:`-P` command line option and the :envvar:"
"`PYTHONSAFEPATH` environment variable."
msgstr ""
"Se establece en ``1`` mediante la opción de línea de comandos :option:`-P` y "
"la variable de entorno :envvar:`PYTHONSAFEPATH`."

#: ../../c-api/init_config.rst:577
msgid "Default: ``0`` in Python config, ``1`` in isolated config."
msgstr ""
"Por defecto: ``0`` en configuración Python, ``1`` en configuración aislada."

#: ../../c-api/init_config.rst:583
msgid ":data:`sys.base_exec_prefix`."
msgstr ":data:`sys.base_exec_prefix`."

#: ../../c-api/init_config.rst:587 ../../c-api/init_config.rst:599
#: ../../c-api/init_config.rst:607 ../../c-api/init_config.rst:715
#: ../../c-api/init_config.rst:724 ../../c-api/init_config.rst:958
#: ../../c-api/init_config.rst:1044
msgid "Part of the :ref:`Python Path Configuration <init-path-config>` output."
msgstr ""
"Parte de la salida :ref:`Python Path Configuration <init-path-config>`."

#: ../../c-api/init_config.rst:591
msgid "Python base executable: :data:`sys._base_executable`."
msgstr "Ejecutable base de Python: :data:`sys._base_executable`."

#: ../../c-api/init_config.rst:593
msgid "Set by the :envvar:`__PYVENV_LAUNCHER__` environment variable."
msgstr "Establecido por la variable de entorno :envvar:`__PYVENV_LAUNCHER__`."

#: ../../c-api/init_config.rst:595
msgid "Set from :c:member:`PyConfig.executable` if ``NULL``."
msgstr "Fijar desde :c:member:`PyConfig.executable` si ``NULL``."

#: ../../c-api/init_config.rst:603
msgid ":data:`sys.base_prefix`."
msgstr ":data:`sys.base_prefix`."

#: ../../c-api/init_config.rst:611
msgid ""
"If equals to ``0`` and :c:member:`~PyConfig.configure_c_stdio` is non-zero, "
"disable buffering on the C streams stdout and stderr."
msgstr ""
"Si es igual a ``0`` y :c:member:`~PyConfig.configure_c_stdio` es distinto de "
"cero, desactiva el almacenamiento en búfer en los flujos C stdout y stderr."

#: ../../c-api/init_config.rst:614
msgid ""
"Set to ``0`` by the :option:`-u` command line option and the :envvar:"
"`PYTHONUNBUFFERED` environment variable."
msgstr ""
"Se establece en ``0`` mediante la opción de línea de comandos :option:`-u` y "
"la variable de entorno :envvar:`PYTHONUNBUFFERED`."

#: ../../c-api/init_config.rst:617
msgid "stdin is always opened in buffered mode."
msgstr "stdin se abre siempre en modo de búfer."

#: ../../c-api/init_config.rst:619 ../../c-api/init_config.rst:652
#: ../../c-api/init_config.rst:1140 ../../c-api/init_config.rst:1271
msgid "Default: ``1``."
msgstr "Por defecto: ``1``."

#: ../../c-api/init_config.rst:623
msgid ""
"If equals to ``1``, issue a warning when comparing :class:`bytes` or :class:"
"`bytearray` with :class:`str`, or comparing :class:`bytes` with :class:`int`."
msgstr ""
"Si es igual a ``1``, emite una advertencia al comparar :class:`bytes` o :"
"class:`bytearray` con :class:`str`, o al comparar :class:`bytes` con :class:"
"`int`."

#: ../../c-api/init_config.rst:627
msgid ""
"If equal or greater to ``2``, raise a :exc:`BytesWarning` exception in these "
"cases."
msgstr ""
"Si es igual o mayor que ``2``, lance una excepción :exc:`BytesWarning` en "
"estos casos."

#: ../../c-api/init_config.rst:630
msgid "Incremented by the :option:`-b` command line option."
msgstr "Incrementado por la opción de línea de comandos :option:`-b`."

#: ../../c-api/init_config.rst:636
msgid ""
"If non-zero, emit a :exc:`EncodingWarning` warning when :class:`io."
"TextIOWrapper` uses its default encoding. See :ref:`io-encoding-warning` for "
"details."
msgstr ""
"Si no es cero, emite una advertencia :exc:`EncodingWarning` cuando :class:"
"`io.TextIOWrapper` utiliza su codificación por defecto. Véase :ref:`io-"
"encoding-warning` para más detalles."

#: ../../c-api/init_config.rst:645
msgid ""
"If equals to ``0``, disables the inclusion of the end line and column "
"mappings in code objects. Also disables traceback printing carets to "
"specific error locations."
msgstr ""
"Si es igual a ``0``, desactiva la inclusión de las asignaciones de fin de "
"línea y columna en los objetos de código. También desactiva la impresión de "
"caretas de rastreo a ubicaciones de error específicas."

#: ../../c-api/init_config.rst:649
msgid ""
"Set to ``0`` by the :envvar:`PYTHONNODEBUGRANGES` environment variable and "
"by the :option:`-X no_debug_ranges <-X>` command line option."
msgstr ""
"Establecido en ``0`` por la variable de entorno :envvar:"
"`PYTHONNODEBUGRANGES` y por la opción de línea de comandos :option:`-X "
"no_debug_ranges <-X>`."

#: ../../c-api/init_config.rst:658
msgid ""
"Control the validation behavior of hash-based ``.pyc`` files: value of the :"
"option:`--check-hash-based-pycs` command line option."
msgstr ""
"Controlar el comportamiento de validación de los archivos ``.pyc`` basados "
"en hash: valor de la opción de línea de comandos :option:`--check-hash-based-"
"pycs`."

#: ../../c-api/init_config.rst:661
msgid "Valid values:"
msgstr "Valores válidos:"

#: ../../c-api/init_config.rst:663
msgid ""
"``L\"always\"``: Hash the source file for invalidation regardless of value "
"of the 'check_source' flag."
msgstr ""
"``L\"always\"``: Realiza un hash del archivo fuente para invalidarlo "
"independientemente del valor de la bandera 'check_source'."

#: ../../c-api/init_config.rst:665
msgid "``L\"never\"``: Assume that hash-based pycs always are valid."
msgstr ""
"``L\"never\"``: Asumir que las pycs basadas en hash siempre son válidas."

#: ../../c-api/init_config.rst:666
msgid ""
"``L\"default\"``: The 'check_source' flag in hash-based pycs determines "
"invalidation."
msgstr ""
"``L\"default\"``: La bandera 'check_source' en pycs basado en hash determina "
"la invalidación."

#: ../../c-api/init_config.rst:669
msgid "Default: ``L\"default\"``."
msgstr "Por defecto: ``L\"default\"``."

#: ../../c-api/init_config.rst:671
msgid "See also :pep:`552` \"Deterministic pycs\"."
msgstr "Véase también :pep:`552` \"Deterministic pycs\"."

#: ../../c-api/init_config.rst:675
msgid "If non-zero, configure C standard streams:"
msgstr "Si es distinto de cero, configura los flujos estándar C:"

#: ../../c-api/init_config.rst:677
msgid ""
"On Windows, set the binary mode (``O_BINARY``) on stdin, stdout and stderr."
msgstr ""
"En Windows, establezca el modo binario (``O_BINARY``) en stdin, stdout y "
"stderr."

#: ../../c-api/init_config.rst:679
msgid ""
"If :c:member:`~PyConfig.buffered_stdio` equals zero, disable buffering of "
"stdin, stdout and stderr streams."
msgstr ""
"Si :c:member:`~PyConfig.buffered_stdio` es igual a cero, desactiva el "
"almacenamiento en búfer de los flujos stdin, stdout y stderr."

#: ../../c-api/init_config.rst:681
msgid ""
"If :c:member:`~PyConfig.interactive` is non-zero, enable stream buffering on "
"stdin and stdout (only stdout on Windows)."
msgstr ""
"Si :c:member:`~PyConfig.interactive` es distinto de cero, activa el "
"almacenamiento en búfer en stdin y stdout (sólo stdout en Windows)."

#: ../../c-api/init_config.rst:688
msgid "If non-zero, enable the :ref:`Python Development Mode <devmode>`."
msgstr ""
"Si es distinto de cero, activa el :ref:`Modo de desarrollo de Python "
"<devmode>`."

#: ../../c-api/init_config.rst:690
msgid ""
"Set to ``1`` by the :option:`-X dev <-X>` option and the :envvar:"
"`PYTHONDEVMODE` environment variable."
msgstr ""
"Se establece en ``1`` mediante la opción :option:`-X dev <-X>` y la variable "
"de entorno :envvar:`PYTHONDEVMODE`."

#: ../../c-api/init_config.rst:697
msgid "Dump Python references?"
msgstr "¿Descargar referencias de Python?"

#: ../../c-api/init_config.rst:699
msgid "If non-zero, dump all objects which are still alive at exit."
msgstr ""
"Si es distinto de cero, vuelca todos los objetos que siguen vivos al salir."

#: ../../c-api/init_config.rst:701
msgid "Set to ``1`` by the :envvar:`PYTHONDUMPREFS` environment variable."
msgstr ""
"Establecido en ``1`` por la variable de entorno :envvar:`PYTHONDUMPREFS`."

#: ../../c-api/init_config.rst:703
msgid ""
"Need a special build of Python with the ``Py_TRACE_REFS`` macro defined: see "
"the :option:`configure --with-trace-refs option <--with-trace-refs>`."
msgstr ""
"Necesita una compilación especial de Python con la macro ``Py_TRACE_REFS`` "
"definida: vea la :opción:`configure --with-trace-refs option <--with-trace-"
"refs>`."

#: ../../c-api/init_config.rst:710
msgid ""
"The site-specific directory prefix where the platform-dependent Python files "
"are installed: :data:`sys.exec_prefix`."
msgstr ""
"El prefijo del directorio específico del sitio donde se instalan los "
"archivos Python dependientes de la plataforma: :data:`sys.exec_prefix`."

#: ../../c-api/init_config.rst:719
msgid ""
"The absolute path of the executable binary for the Python interpreter: :data:"
"`sys.executable`."
msgstr ""
"La ruta absoluta del binario ejecutable para el intérprete de Python: :data:"
"`sys.executable`."

#: ../../c-api/init_config.rst:728
msgid "Enable faulthandler?"
msgstr "¿Habilitar faulthandler?"

#: ../../c-api/init_config.rst:730
msgid "If non-zero, call :func:`faulthandler.enable` at startup."
msgstr "Si no es cero, llamar a :func:`faulthandler.enable` al inicio."

#: ../../c-api/init_config.rst:732
msgid ""
"Set to ``1`` by :option:`-X faulthandler <-X>` and the :envvar:"
"`PYTHONFAULTHANDLER` environment variable."
msgstr ""
"Se establece en ``1`` mediante :option:`-X faulthandler <-X>` y la variable "
"de entorno :envvar:`PYTHONFAULTHANDLER`."

#: ../../c-api/init_config.rst:739
msgid ""
":term:`Filesystem encoding <filesystem encoding and error handler>`: :func:"
"`sys.getfilesystemencoding`."
msgstr ""
":term:`Filesystem encoding <filesystem encoding and error handler>`: :func:"
"`sys.getfilesystemencoding`."

#: ../../c-api/init_config.rst:742
msgid "On macOS, Android and VxWorks: use ``\"utf-8\"`` by default."
msgstr "En macOS, Android y VxWorks: utilice ``\"utf-8\"`` por defecto."

#: ../../c-api/init_config.rst:744
msgid ""
"On Windows: use ``\"utf-8\"`` by default, or ``\"mbcs\"`` if :c:member:"
"`~PyPreConfig.legacy_windows_fs_encoding` of :c:type:`PyPreConfig` is non-"
"zero."
msgstr ""
"En Windows: utilice ``\"utf-8\"`` por defecto, o ``\"mbcs\"`` si :c:member:"
"`~PyPreConfig.legacy_windows_fs_encoding` de :c:type:`PyPreConfig` es "
"distinto de cero."

#: ../../c-api/init_config.rst:748
msgid "Default encoding on other platforms:"
msgstr "Codificación por defecto en otras plataformas:"

#: ../../c-api/init_config.rst:750
msgid "``\"utf-8\"`` if :c:member:`PyPreConfig.utf8_mode` is non-zero."
msgstr ""
"``\"utf-8\"`` si :c:member:`PyPreConfig.utf8_mode` es distinto de cero."

#: ../../c-api/init_config.rst:751
msgid ""
"``\"ascii\"`` if Python detects that ``nl_langinfo(CODESET)`` announces the "
"ASCII encoding, whereas the ``mbstowcs()`` function decodes from a different "
"encoding (usually Latin1)."
msgstr ""
"``\"ascii\"`` si Python detecta que ``nl_langinfo(CODESET)`` anuncia la "
"codificación ASCII, mientras que la función ``mbstowcs()`` decodifica a "
"partir de una codificación diferente (normalmente Latin1)."

#: ../../c-api/init_config.rst:754
msgid "``\"utf-8\"`` if ``nl_langinfo(CODESET)`` returns an empty string."
msgstr "``\"utf-8\"`` si ``nl_langinfo(CODESET)`` devuelve una cadena vacía."

#: ../../c-api/init_config.rst:755
msgid ""
"Otherwise, use the :term:`locale encoding`: ``nl_langinfo(CODESET)`` result."
msgstr ""
"En caso contrario, utilice el resultado :term:`locale encoding`: "
"``nl_langinfo(CODESET)``."

#: ../../c-api/init_config.rst:758
msgid ""
"At Python startup, the encoding name is normalized to the Python codec name. "
"For example, ``\"ANSI_X3.4-1968\"`` is replaced with ``\"ascii\"``."
msgstr ""
"Al iniciar Python, el nombre de la codificación se normaliza con el nombre "
"del códec de Python. Por ejemplo, ``\"ANSI_X3.4-1968\"`` se sustituye por "
"``\"ascii\"``."

#: ../../c-api/init_config.rst:761
msgid "See also the :c:member:`~PyConfig.filesystem_errors` member."
msgstr "Ver también el miembro :c:member:`~PyConfig.filesystem_errors`."

#: ../../c-api/init_config.rst:765
msgid ""
":term:`Filesystem error handler <filesystem encoding and error handler>`: :"
"func:`sys.getfilesystemencodeerrors`."
msgstr ""
":term:`Filesystem error handler <filesystem encoding and error handler>`: :"
"func:`sys.getfilesystemencodeerrors`."

#: ../../c-api/init_config.rst:768
msgid ""
"On Windows: use ``\"surrogatepass\"`` by default, or ``\"replace\"``  if :c:"
"member:`~PyPreConfig.legacy_windows_fs_encoding` of :c:type:`PyPreConfig` is "
"non-zero."
msgstr ""
"En Windows: utilice ``\"surrogatepass\"`` por defecto, o ``\"replace\"`` si :"
"c:member:`~PyPreConfig.legacy_windows_fs_encoding` de :c:type:`PyPreConfig` "
"es distinto de cero."

#: ../../c-api/init_config.rst:772
msgid "On other platforms: use ``\"surrogateescape\"`` by default."
msgstr "En otras plataformas: utilice ``\"surrogateescape\"`` por defecto."

#: ../../c-api/init_config.rst:774
msgid "Supported error handlers:"
msgstr "Manejadores de error soportados:"

#: ../../c-api/init_config.rst:776
msgid "``\"strict\"``"
msgstr "``\"strict\"``"

#: ../../c-api/init_config.rst:777
msgid "``\"surrogateescape\"``"
msgstr "``\"surrogateescape\"``"

#: ../../c-api/init_config.rst:778
msgid "``\"surrogatepass\"`` (only supported with the UTF-8 encoding)"
msgstr "``\"surrogatepass\"`` (sólo compatible con la codificación UTF-8)"

#: ../../c-api/init_config.rst:780
msgid "See also the :c:member:`~PyConfig.filesystem_encoding` member."
msgstr "Ver también el miembro :c:member:`~PyConfig.filesystem_encoding`."

#: ../../c-api/init_config.rst:785
msgid "Randomized hash function seed."
msgstr "Semilla de función hash aleatoria."

#: ../../c-api/init_config.rst:787
msgid ""
"If :c:member:`~PyConfig.use_hash_seed` is zero, a seed is chosen randomly at "
"Python startup, and :c:member:`~PyConfig.hash_seed` is ignored."
msgstr ""
"Si :c:member:`~PyConfig.use_hash_seed` es cero, se elige una semilla "
"aleatoriamente al inicio de Python, y se ignora :c:member:`~PyConfig."
"hash_seed`."

#: ../../c-api/init_config.rst:790
msgid "Set by the :envvar:`PYTHONHASHSEED` environment variable."
msgstr "Establecido por la variable de entorno :envvar:`PYTHONHASHSEED`."

#: ../../c-api/init_config.rst:792
msgid ""
"Default *use_hash_seed* value: ``-1`` in Python mode, ``0`` in isolated mode."
msgstr ""
"Por defecto *use_hash_seed* value: ``-1`` en modo Python, ``0`` en modo "
"aislado."

#: ../../c-api/init_config.rst:797
msgid "Python home directory."
msgstr "Directorio personal de Python."

#: ../../c-api/init_config.rst:799
msgid ""
"If :c:func:`Py_SetPythonHome` has been called, use its argument if it is not "
"``NULL``."
msgstr ""
"Si se ha llamado a :c:func:`Py_SetPythonHome`, utiliza su argumento si no es "
"``NULL``."

#: ../../c-api/init_config.rst:802
msgid "Set by the :envvar:`PYTHONHOME` environment variable."
msgstr "Establecido por la variable de entorno :envvar:`PYTHONHOME`."

#: ../../c-api/init_config.rst:806 ../../c-api/init_config.rst:923
#: ../../c-api/init_config.rst:943 ../../c-api/init_config.rst:1032
#: ../../c-api/init_config.rst:1062
msgid "Part of the :ref:`Python Path Configuration <init-path-config>` input."
msgstr ""
"Parte de la entrada :ref:`Python Path Configuration <init-path-config>`."

#: ../../c-api/init_config.rst:810
msgid "If non-zero, profile import time."
msgstr "Si es distinto de cero, tiempo de importación del perfil."

#: ../../c-api/init_config.rst:812
msgid ""
"Set the ``1`` by the :option:`-X importtime <-X>` option and the :envvar:"
"`PYTHONPROFILEIMPORTTIME` environment variable."
msgstr ""
"Establezca ``1`` mediante la opción :option:`-X importtime <-X>` y la "
"variable de entorno :envvar:`PYTHONPROFILEIMPORTTIME`."

#: ../../c-api/init_config.rst:819
msgid "Enter interactive mode after executing a script or a command."
msgstr "Entrar en modo interactivo después de ejecutar un script o un comando."

#: ../../c-api/init_config.rst:821
msgid ""
"If greater than ``0``, enable inspect: when a script is passed as first "
"argument or the -c option is used, enter interactive mode after executing "
"the script or the command, even when :data:`sys.stdin` does not appear to be "
"a terminal."
msgstr ""
"Si es mayor que ``0``, habilita la inspección: cuando se pasa un script como "
"primer argumento o se utiliza la opción -c, entra en modo interactivo "
"después de ejecutar el script o el comando, incluso cuando :data:`sys.stdin` "
"no parece ser un terminal."

#: ../../c-api/init_config.rst:826
msgid ""
"Incremented by the :option:`-i` command line option. Set to ``1`` if the :"
"envvar:`PYTHONINSPECT` environment variable is non-empty."
msgstr ""
"Incrementado por la opción de línea de comandos :option:`-i`. Se establece "
"en ``1`` si la variable de entorno :envvar:`PYTHONINSPECT` no está vacía."

#: ../../c-api/init_config.rst:833
msgid "Install Python signal handlers?"
msgstr "¿Instalar manejadores de señales de Python?"

#: ../../c-api/init_config.rst:835 ../../c-api/init_config.rst:1006
#: ../../c-api/init_config.rst:1030 ../../c-api/init_config.rst:1223
msgid "Default: ``1`` in Python mode, ``0`` in isolated mode."
msgstr "Por defecto: ``1`` en modo Python, ``0`` en modo aislado."

#: ../../c-api/init_config.rst:839
msgid "If greater than ``0``, enable the interactive mode (REPL)."
msgstr "Si es mayor que ``0``, active el modo interactivo (REPL)."

#: ../../c-api/init_config.rst:841
msgid "Incremented by the :option:`-i` command line option."
msgstr "Incrementado por la opción de línea de comandos :option:`-i`."

#: ../../c-api/init_config.rst:847
msgid ""
"Configures the :ref:`integer string conversion length limitation "
"<int_max_str_digits>`.  An initial value of ``-1`` means the value will be "
"taken from the command line or environment or otherwise default to 4300 (:"
"data:`sys.int_info.default_max_str_digits`).  A value of ``0`` disables the "
"limitation.  Values greater than zero but less than 640 (:data:`sys.int_info."
"str_digits_check_threshold`) are unsupported and will produce an error."
msgstr ""
"Configura la limitación de longitud de conversión de cadenas :ref:`integer "
"<int_max_str_digits>`.  Un valor inicial de ``-1`` significa que el valor se "
"tomará de la línea de comandos o del entorno o, de lo contrario, será por "
"defecto 4300 (:data:`sys.int_info.default_max_str_digits`).  Un valor de "
"``0`` desactiva la limitación.  Los valores mayores que cero pero menores "
"que 640 (:data:`sys.int_info.str_digits_check_threshold`) no se soportan y "
"producirán un error."

#: ../../c-api/init_config.rst:855
msgid ""
"Configured by the :option:`-X int_max_str_digits <-X>` command line flag or "
"the :envvar:`PYTHONINTMAXSTRDIGITS` environment variable."
msgstr ""
"Configurado mediante el indicador de línea de comandos :option:`-X "
"int_max_str_digits <-X>` o la variable de entorno :envvar:"
"`PYTHONINTMAXSTRDIGITS`."

#: ../../c-api/init_config.rst:858
msgid ""
"Default: ``-1`` in Python mode.  4300 (:data:`sys.int_info."
"default_max_str_digits`) in isolated mode."
msgstr ""
"Por defecto: ``-1`` en modo Python.  4300 (:data:`sys.int_info."
"default_max_str_digits`) en modo aislado."

#: ../../c-api/init_config.rst:865
msgid "If greater than ``0``, enable isolated mode:"
msgstr "Si es mayor que ``0``, activa el modo aislado:"

#: ../../c-api/init_config.rst:867
msgid ""
"Set :c:member:`~PyConfig.safe_path` to ``1``: don't prepend a potentially "
"unsafe path to :data:`sys.path` at Python startup, such as the current "
"directory, the script's directory or an empty string."
msgstr ""
"Establezca :c:member:`~PyConfig.safe_path` en ``1``: no anteponga una ruta "
"potencialmente insegura a :data:`sys.path` al inicio de Python, como el "
"directorio actual, el directorio del script o una cadena vacía."

#: ../../c-api/init_config.rst:871
msgid ""
"Set :c:member:`~PyConfig.use_environment` to ``0``: ignore ``PYTHON`` "
"environment variables."
msgstr ""
"Establezca :c:member:`~PyConfig.use_environment` en ``0``: ignore las "
"variables de entorno ``PYTHON``."

#: ../../c-api/init_config.rst:873
msgid ""
"Set :c:member:`~PyConfig.user_site_directory` to ``0``: don't add the user "
"site directory to :data:`sys.path`."
msgstr ""
"Establezca :c:member:`~PyConfig.user_site_directory` en ``0``: no añada el "
"directorio del sitio del usuario en :data:`sys.path`."

#: ../../c-api/init_config.rst:875
msgid ""
"Python REPL doesn't import :mod:`readline` nor enable default readline "
"configuration on interactive prompts."
msgstr ""
"Python REPL no importa :mod:`readline` ni habilita la configuración readline "
"por defecto en las peticiones interactivas."

#: ../../c-api/init_config.rst:878
msgid "Set to ``1`` by the :option:`-I` command line option."
msgstr ""
"Establecido en ``1`` mediante la opción de línea de comandos :option:`-I`."

#: ../../c-api/init_config.rst:882
msgid ""
"See also the :ref:`Isolated Configuration <init-isolated-conf>` and :c:"
"member:`PyPreConfig.isolated`."
msgstr ""
"Consulte también la :ref:`Isolated Configuration <init-isolated-conf>` y :c:"
"member:`PyPreConfig.isolated`."

#: ../../c-api/init_config.rst:887
msgid ""
"If non-zero, use :class:`io.FileIO` instead of :class:`!io."
"_WindowsConsoleIO` for :data:`sys.stdin`, :data:`sys.stdout` and :data:`sys."
"stderr`."
msgstr ""
"Si es distinto de cero, utilice :class:`io.FileIO` en lugar de :class:`!io."
"_WindowsConsoleIO` para :data:`sys.stdin`, :data:`sys.stdout` y :data:`sys."
"stderr`."

#: ../../c-api/init_config.rst:891
msgid ""
"Set to ``1`` if the :envvar:`PYTHONLEGACYWINDOWSSTDIO` environment variable "
"is set to a non-empty string."
msgstr ""
"Se establece en ``1`` si la variable de entorno :envvar:"
"`PYTHONLEGACYWINDOWSSTDIO` se establece en una cadena no vacía."

#: ../../c-api/init_config.rst:899
msgid "See also the :pep:`528` (Change Windows console encoding to UTF-8)."
msgstr ""
"Ver también :pep:`528` (Cambiar la codificación de la consola de Windows a "
"UTF-8)."

#: ../../c-api/init_config.rst:903
msgid ""
"If non-zero, dump statistics on :ref:`Python pymalloc memory allocator "
"<pymalloc>` at exit."
msgstr ""
"Si no es cero, vuelca las estadísticas en :ref:`Python pymalloc memory "
"allocator <pymalloc>` al salir."

#: ../../c-api/init_config.rst:906
msgid "Set to ``1`` by the :envvar:`PYTHONMALLOCSTATS` environment variable."
msgstr ""
"Establecido en ``1`` por la variable de entorno :envvar:`PYTHONMALLOCSTATS`."

#: ../../c-api/init_config.rst:908
msgid ""
"The option is ignored if Python is :option:`configured using the --without-"
"pymalloc option <--without-pymalloc>`."
msgstr ""
"La opción se ignora si Python está :option:`configurado utilizando la opción "
"--without-pymalloc <--without-pymalloc>`."

#: ../../c-api/init_config.rst:915
msgid "Platform library directory name: :data:`sys.platlibdir`."
msgstr ""
"Nombre del directorio de la biblioteca de la plataforma: :data:`sys."
"platlibdir`."

#: ../../c-api/init_config.rst:917
msgid "Set by the :envvar:`PYTHONPLATLIBDIR` environment variable."
msgstr "Establecido por la variable de entorno :envvar:`PYTHONPLATLIBDIR`."

#: ../../c-api/init_config.rst:919
msgid ""
"Default: value of the ``PLATLIBDIR`` macro which is set by the :option:"
"`configure --with-platlibdir option <--with-platlibdir>` (default: "
"``\"lib\"``, or ``\"DLLs\"`` on Windows)."
msgstr ""
"Por defecto: valor de la macro ``PLATLIBDIR`` que se establece mediante la "
"opción :option:`configure --with-platlibdir option <--with-platlibdir>` (por "
"defecto: ``\"lib\"``, o ``\"DLLs\"`` en Windows)."

#: ../../c-api/init_config.rst:927
msgid ""
"This macro is now used on Windows to locate the standard library extension "
"modules, typically under ``DLLs``. However, for compatibility, note that "
"this value is ignored for any non-standard layouts, including in-tree builds "
"and virtual environments."
msgstr ""
"Esta macro se utiliza ahora en Windows para localizar los módulos de "
"extensión de la biblioteca estándar, normalmente en ``DLLs``. Sin embargo, "
"por motivos de compatibilidad, tenga en cuenta que este valor se ignora para "
"cualquier disposición no estándar, incluidas las compilaciones en árbol y "
"los entornos virtuales."

#: ../../c-api/init_config.rst:936
msgid ""
"Module search paths (:data:`sys.path`) as a string separated by ``DELIM`` (:"
"data:`os.pathsep`)."
msgstr ""
"Rutas de búsqueda de módulos (:data:`sys.path`) como cadena separada por "
"``DELIM`` (:data:`os.pathsep`)."

#: ../../c-api/init_config.rst:939
msgid "Set by the :envvar:`PYTHONPATH` environment variable."
msgstr "Establecido por la variable de entorno :envvar:`PYTHONPATH`."

#: ../../c-api/init_config.rst:948
msgid "Module search paths: :data:`sys.path`."
msgstr "Rutas de búsqueda de módulos: :data:`sys.path`."

#: ../../c-api/init_config.rst:950
msgid ""
"If :c:member:`~PyConfig.module_search_paths_set` is equal to ``0``, :c:func:"
"`Py_InitializeFromConfig` will replace :c:member:`~PyConfig."
"module_search_paths` and sets :c:member:`~PyConfig.module_search_paths_set` "
"to ``1``."
msgstr ""
"Si :c:member:`~PyConfig.module_search_paths_set` es igual a ``0``, :c:func:"
"`Py_InitializeFromConfig` sustituirá a :c:member:`~PyConfig."
"module_search_paths` y establece :c:member:`~PyConfig."
"module_search_paths_set` en ``1``."

#: ../../c-api/init_config.rst:955
msgid ""
"Default: empty list (``module_search_paths``) and ``0`` "
"(``module_search_paths_set``)."
msgstr ""
"Por defecto: lista vacía (``module_search_paths``) y ``0`` "
"(``module_search_paths_set``)."

#: ../../c-api/init_config.rst:962
msgid "Compilation optimization level:"
msgstr "Nivel de optimización de la compilación:"

#: ../../c-api/init_config.rst:964
msgid "``0``: Peephole optimizer, set ``__debug__`` to ``True``."
msgstr "``0``: Optimizador de peephole, ajuste ``__debug__`` a ``True``."

#: ../../c-api/init_config.rst:965
msgid "``1``: Level 0, remove assertions, set ``__debug__`` to ``False``."
msgstr ""
"``1``: Nivel 0, eliminar aserciones, establecer ``__debug__`` a ``False``."

#: ../../c-api/init_config.rst:966
msgid "``2``: Level 1, strip docstrings."
msgstr "``2``: Nivel 1, tira de docstrings."

#: ../../c-api/init_config.rst:968
msgid ""
"Incremented by the :option:`-O` command line option. Set to the :envvar:"
"`PYTHONOPTIMIZE` environment variable value."
msgstr ""
"Incrementado por la opción de línea de comandos :option:`-O`. Se establece "
"en el valor de la variable de entorno :envvar:`PYTHONOPTIMIZE`."

#: ../../c-api/init_config.rst:975
msgid ""
"The list of the original command line arguments passed to the Python "
"executable: :data:`sys.orig_argv`."
msgstr ""
"La lista de los argumentos de línea de comandos originales pasados al "
"ejecutable Python: :data:`sys.orig_argv`."

#: ../../c-api/init_config.rst:978
msgid ""
"If :c:member:`~PyConfig.orig_argv` list is empty and :c:member:`~PyConfig."
"argv` is not a list only containing an empty string, :c:func:`PyConfig_Read` "
"copies :c:member:`~PyConfig.argv` into :c:member:`~PyConfig.orig_argv` "
"before modifying :c:member:`~PyConfig.argv` (if :c:member:`~PyConfig."
"parse_argv` is non-zero)."
msgstr ""
"Si la lista :c:member:`~PyConfig.orig_argv` está vacía y :c:member:"
"`~PyConfig.argv` no es una lista que sólo contenga una cadena vacía, :c:func:"
"`PyConfig_Read` copia :c:member:`~PyConfig.argv` en :c:member:`~PyConfig."
"orig_argv` antes de modificar :c:member:`~PyConfig.argv` (si :c:member:"
"`~PyConfig.parse_argv` es distinto de cero)."

#: ../../c-api/init_config.rst:985
msgid ""
"See also the :c:member:`~PyConfig.argv` member and the :c:func:"
"`Py_GetArgcArgv` function."
msgstr ""
"Ver también el miembro :c:member:`~PyConfig.argv` y la función :c:func:"
"`Py_GetArgcArgv`."

#: ../../c-api/init_config.rst:988 ../../c-api/init_config.rst:1258
#: ../../c-api/init_config.rst:1277
msgid "Default: empty list."
msgstr "Por defecto: lista vacía."

#: ../../c-api/init_config.rst:994
msgid "Parse command line arguments?"
msgstr "¿Analizar argumentos de línea de comandos?"

#: ../../c-api/init_config.rst:996
msgid ""
"If equals to ``1``, parse :c:member:`~PyConfig.argv` the same way the "
"regular Python parses :ref:`command line arguments <using-on-cmdline>`, and "
"strip Python arguments from :c:member:`~PyConfig.argv`."
msgstr ""
"Si es igual a ``1``, analiza :c:member:`~PyConfig.argv` del mismo modo que "
"Python analiza :ref:`argumentos de línea de comandos <using-on-cmdline>`, y "
"elimina los argumentos Python de :c:member:`~PyConfig.argv`."

#: ../../c-api/init_config.rst:1008
msgid ""
"The :c:member:`PyConfig.argv` arguments are now only parsed if :c:member:"
"`PyConfig.parse_argv` equals to ``1``."
msgstr ""
"Los argumentos :c:member:`PyConfig.argv` ahora sólo se analizan si :c:member:"
"`PyConfig.parse_argv` es igual a ``1``."

#: ../../c-api/init_config.rst:1014
msgid ""
"Parser debug mode. If greater than ``0``, turn on parser debugging output "
"(for expert only, depending on compilation options)."
msgstr ""
"Modo de depuración del analizador sintáctico. Si es mayor que ``0``, activa "
"la salida de depuración del analizador (sólo para expertos, dependiendo de "
"las opciones de compilación)."

#: ../../c-api/init_config.rst:1017
msgid ""
"Incremented by the :option:`-d` command line option. Set to the :envvar:"
"`PYTHONDEBUG` environment variable value."
msgstr ""
"Incrementado por la opción de línea de comandos :option:`-d`. Se establece "
"en el valor de la variable de entorno :envvar:`PYTHONDEBUG`."

#: ../../c-api/init_config.rst:1020
msgid ""
"Need a :ref:`debug build of Python <debug-build>` (the ``Py_DEBUG`` macro "
"must be defined)."
msgstr ""
"Necesita una compilación :ref:`debug de Python <debug-build>` (la macro "
"``Py_DEBUG`` debe estar definida)."

#: ../../c-api/init_config.rst:1027
msgid ""
"If non-zero, calculation of path configuration is allowed to log warnings "
"into ``stderr``. If equals to ``0``, suppress these warnings."
msgstr ""
"Si es distinto de cero, se permite que el cálculo de la configuración de la "
"ruta registre advertencias en ``stderr``. Si es igual a ``0``, se suprimen "
"estas advertencias."

#: ../../c-api/init_config.rst:1034
msgid "Now also applies on Windows."
msgstr "Ahora también se aplica en Windows."

#: ../../c-api/init_config.rst:1039
msgid ""
"The site-specific directory prefix where the platform independent Python "
"files are installed: :data:`sys.prefix`."
msgstr ""
"El prefijo del directorio específico del sitio donde se instalan los "
"archivos Python independientes de la plataforma: :data:`sys.prefix`."

#: ../../c-api/init_config.rst:1048
msgid ""
"Program name used to initialize :c:member:`~PyConfig.executable` and in "
"early error messages during Python initialization."
msgstr ""
"Nombre del programa utilizado para inicializar :c:member:`~PyConfig."
"executable` y en los primeros mensajes de error durante la inicialización de "
"Python."

#: ../../c-api/init_config.rst:1051
msgid "If :func:`Py_SetProgramName` has been called, use its argument."
msgstr "Si se ha llamado a :func:`Py_SetProgramName`, utilice su argumento."

#: ../../c-api/init_config.rst:1052
msgid "On macOS, use :envvar:`PYTHONEXECUTABLE` environment variable if set."
msgstr ""
"En macOS, utilice la variable de entorno :envvar:`PYTHONEXECUTABLE` si está "
"configurada."

#: ../../c-api/init_config.rst:1053
msgid ""
"If the ``WITH_NEXT_FRAMEWORK`` macro is defined, use :envvar:"
"`__PYVENV_LAUNCHER__` environment variable if set."
msgstr ""
"Si la macro ``WITH_NEXT_FRAMEWORK`` está definida, utilice la variable de "
"entorno :envvar:`__PYVENV_LAUNCHER__` si está establecida."

#: ../../c-api/init_config.rst:1055
msgid ""
"Use ``argv[0]`` of :c:member:`~PyConfig.argv` if available and non-empty."
msgstr ""
"Utilice ``argv[0]`` de :c:member:`~PyConfig.argv` si está disponible y no "
"está vacío."

#: ../../c-api/init_config.rst:1057
msgid ""
"Otherwise, use ``L\"python\"`` on Windows, or ``L\"python3\"`` on other "
"platforms."
msgstr ""
"En caso contrario, utilice ``L\"python\"`` en Windows, o ``L\"python3\"`` en "
"otras plataformas."

#: ../../c-api/init_config.rst:1066
msgid ""
"Directory where cached ``.pyc`` files are written: :data:`sys."
"pycache_prefix`."
msgstr ""
"Directorio donde se escriben los archivos ``.pyc`` en caché: :data:`sys."
"pycache_prefix`."

#: ../../c-api/init_config.rst:1069
msgid ""
"Set by the :option:`-X pycache_prefix=PATH <-X>` command line option and "
"the :envvar:`PYTHONPYCACHEPREFIX` environment variable."
msgstr ""
"Se establece mediante la opción de línea de comandos :option:`-X "
"pycache_prefix=PATH <-X>` y la variable de entorno :envvar:"
"`PYTHONPYCACHEPREFIX`."

#: ../../c-api/init_config.rst:1072
msgid "If ``NULL``, :data:`sys.pycache_prefix` is set to ``None``."
msgstr "Si ``NULL``, :data:`sys.pycache_prefix` se establece en ``None``."

#: ../../c-api/init_config.rst:1078
msgid ""
"Quiet mode. If greater than ``0``, don't display the copyright and version "
"at Python startup in interactive mode."
msgstr ""
"Modo silencioso. Si es mayor que ``0``, no mostrar el copyright y la versión "
"al iniciar Python en modo interactivo."

#: ../../c-api/init_config.rst:1081
msgid "Incremented by the :option:`-q` command line option."
msgstr "Incrementado por la opción de línea de comandos :option:`-q`."

#: ../../c-api/init_config.rst:1087
msgid "Value of the :option:`-c` command line option."
msgstr "Valor de la opción de línea de comandos :option:`-c`."

#: ../../c-api/init_config.rst:1089 ../../c-api/init_config.rst:1110
msgid "Used by :c:func:`Py_RunMain`."
msgstr "Utilizado por :c:func:`Py_RunMain`."

#: ../../c-api/init_config.rst:1095
msgid ""
"Filename passed on the command line: trailing command line argument without :"
"option:`-c` or :option:`-m`. It is used by the :c:func:`Py_RunMain` function."
msgstr ""
"Nombre de archivo pasado en la línea de comandos: argumento final de la "
"línea de comandos sin :option:`-c` o :option:`-m`. Lo utiliza la función :c:"
"func:`Py_RunMain`."

#: ../../c-api/init_config.rst:1099
msgid ""
"For example, it is set to ``script.py`` by the ``python3 script.py arg`` "
"command line."
msgstr ""
"Por ejemplo, se establece en ``script.py`` mediante la línea de comandos "
"``python3 script.py arg``."

#: ../../c-api/init_config.rst:1102
msgid "See also the :c:member:`PyConfig.skip_source_first_line` option."
msgstr "Ver también la opción :c:member:`PyConfig.skip_source_first_line`."

#: ../../c-api/init_config.rst:1108
msgid "Value of the :option:`-m` command line option."
msgstr "Valor de la opción de línea de comandos :option:`-m`."

#: ../../c-api/init_config.rst:1116
msgid "Show total reference count at exit (excluding immortal objects)?"
msgstr ""
"¿Mostrar el recuento total de referencias a la salida (excluyendo los "
"objetos inmortales)?"

#: ../../c-api/init_config.rst:1118
msgid "Set to ``1`` by :option:`-X showrefcount <-X>` command line option."
msgstr ""
"Se establece en ``1`` mediante la opción de línea de comandos :option:`-X "
"showrefcount <-X>`."

#: ../../c-api/init_config.rst:1120
msgid ""
"Need a :ref:`debug build of Python <debug-build>` (the ``Py_REF_DEBUG`` "
"macro must be defined)."
msgstr ""
"Necesita una compilación :ref:`debug de Python <debug-build>` (la macro "
"``Py_REF_DEBUG`` debe estar definida)."

#: ../../c-api/init_config.rst:1127
msgid "Import the :mod:`site` module at startup?"
msgstr "¿Importar el módulo :mod:`site` al inicio?"

#: ../../c-api/init_config.rst:1129
msgid ""
"If equal to zero, disable the import of the module site and the site-"
"dependent manipulations of :data:`sys.path` that it entails."
msgstr ""
"Si es igual a cero, desactiva la importación del sitio del módulo y las "
"manipulaciones dependientes del sitio de :data:`sys.path` que conlleva."

#: ../../c-api/init_config.rst:1132
msgid ""
"Also disable these manipulations if the :mod:`site` module is explicitly "
"imported later (call :func:`site.main` if you want them to be triggered)."
msgstr ""
"Desactive también estas manipulaciones si el módulo :mod:`site` se importa "
"explícitamente más tarde (llame a :func:`site.main` si desea que se activen)."

#: ../../c-api/init_config.rst:1135
msgid "Set to ``0`` by the :option:`-S` command line option."
msgstr ""
"Establecido en ``0`` mediante la opción de línea de comandos :option:`-S`."

#: ../../c-api/init_config.rst:1137
msgid ""
":data:`sys.flags.no_site <sys.flags>` is set to the inverted value of :c:"
"member:`~PyConfig.site_import`."
msgstr ""
":data:`sys.flags.no_site <sys.flags>` se establece en el valor invertido de :"
"c:member:`~PyConfig.site_import`."

#: ../../c-api/init_config.rst:1144
msgid ""
"If non-zero, skip the first line of the :c:member:`PyConfig.run_filename` "
"source."
msgstr ""
"Si es distinto de cero, omite la primera línea de la fuente :c:member:"
"`PyConfig.run_filename`."

#: ../../c-api/init_config.rst:1147
msgid ""
"It allows the usage of non-Unix forms of ``#!cmd``. This is intended for a "
"DOS specific hack only."
msgstr ""
"Permite el uso de formas no-Unix de ``#!cmd``. Esto está pensado sólo para "
"un hack específico de DOS."

#: ../../c-api/init_config.rst:1150
msgid "Set to ``1`` by the :option:`-x` command line option."
msgstr ""
"Establecido en ``1`` mediante la opción de línea de comandos :option:`-x`."

#: ../../c-api/init_config.rst:1157
msgid ""
"Encoding and encoding errors of :data:`sys.stdin`, :data:`sys.stdout` and :"
"data:`sys.stderr` (but :data:`sys.stderr` always uses "
"``\"backslashreplace\"`` error handler)."
msgstr ""
"Codificación y errores de codificación de :data:`sys.stdin`, :data:`sys."
"stdout` y :data:`sys.stderr` (pero :data:`sys.stderr` siempre utiliza el "
"gestor de errores ``\"backslashreplace\"`` )."

#: ../../c-api/init_config.rst:1161
msgid ""
"If :c:func:`Py_SetStandardStreamEncoding` has been called, use its *error* "
"and *errors* arguments if they are not ``NULL``."
msgstr ""
"Si se ha llamado a :c:func:`Py_SetStandardStreamEncoding`, utilice sus "
"argumentos *error* y *errors* si no son ``NULL``."

#: ../../c-api/init_config.rst:1164
msgid ""
"Use the :envvar:`PYTHONIOENCODING` environment variable if it is non-empty."
msgstr ""
"Utilice la variable de entorno :envvar:`PYTHONIOENCODING` si no está vacía."

#: ../../c-api/init_config.rst:1167
msgid "Default encoding:"
msgstr "Codificación por defecto:"

#: ../../c-api/init_config.rst:1169
msgid "``\"UTF-8\"`` if :c:member:`PyPreConfig.utf8_mode` is non-zero."
msgstr ""
"``\"UTF-8\"`` si :c:member:`PyPreConfig.utf8_mode` es distinto de cero."

#: ../../c-api/init_config.rst:1170
msgid "Otherwise, use the :term:`locale encoding`."
msgstr "En caso contrario, utilice :term:`locale encoding`."

#: ../../c-api/init_config.rst:1172
msgid "Default error handler:"
msgstr "Gestor de errores por defecto:"

#: ../../c-api/init_config.rst:1174
msgid "On Windows: use ``\"surrogateescape\"``."
msgstr "En Windows: utilice ``\"surrogateescape\"``."

#: ../../c-api/init_config.rst:1175
msgid ""
"``\"surrogateescape\"`` if :c:member:`PyPreConfig.utf8_mode` is non-zero, or "
"if the LC_CTYPE locale is \"C\" or \"POSIX\"."
msgstr ""
"``\"surrogateescape\"`` si :c:member:`PyPreConfig.utf8_mode` es distinto de "
"cero, o si la configuración regional LC_CTYPE es \"C\" o \"POSIX\"."

#: ../../c-api/init_config.rst:1177
msgid "``\"strict\"`` otherwise."
msgstr "``\"strict\"`` de lo contrario."

#: ../../c-api/init_config.rst:1181
msgid "Enable tracemalloc?"
msgstr "¿Habilitar tracemalloc?"

#: ../../c-api/init_config.rst:1183
msgid "If non-zero, call :func:`tracemalloc.start` at startup."
msgstr "Si no es cero, llame a :func:`tracemalloc.start` al inicio."

#: ../../c-api/init_config.rst:1185
msgid ""
"Set by :option:`-X tracemalloc=N <-X>` command line option and by the :"
"envvar:`PYTHONTRACEMALLOC` environment variable."
msgstr ""
"Se establece mediante la opción de línea de comandos :option:`-X "
"tracemalloc=N <-X>` y mediante la variable de entorno :envvar:"
"`PYTHONTRACEMALLOC`."

#: ../../c-api/init_config.rst:1192
msgid "Enable compatibility mode with the perf profiler?"
msgstr "¿Habilitar el modo de compatibilidad con el perf profiler?"

#: ../../c-api/init_config.rst:1194
msgid ""
"If non-zero, initialize the perf trampoline. See :ref:`perf_profiling` for "
"more information."
msgstr ""
"Si no es cero, inicializa el trampolín perf. Consulte :ref:`perf_profiling` "
"para obtener más información."

#: ../../c-api/init_config.rst:1197
msgid ""
"Set by :option:`-X perf <-X>` command line option and by the :envvar:"
"`PYTHONPERFSUPPORT` environment variable."
msgstr ""
"Se establece mediante la opción de línea de comandos :option:`-X perf <-X>` "
"y mediante la variable de entorno :envvar:`PYTHONPERFSUPPORT`."

#: ../../c-api/init_config.rst:1200
msgid "Default: ``-1``."
msgstr "Por defecto: ``-1``."

#: ../../c-api/init_config.rst:1206
msgid "Use :ref:`environment variables <using-on-envvars>`?"
msgstr "Usar :ref:`variables de entorno <using-on-envvars>`?"

#: ../../c-api/init_config.rst:1208
msgid ""
"If equals to zero, ignore the :ref:`environment variables <using-on-"
"envvars>`."
msgstr ""
"Si es igual a cero, ignora las ::ref:`environment variables <using-on-"
"envvars>`."

#: ../../c-api/init_config.rst:1211
msgid "Set to ``0`` by the :option:`-E` environment variable."
msgstr "Establecido en ``0`` por la variable de entorno :option:`-E`."

#: ../../c-api/init_config.rst:1217
msgid "If non-zero, add the user site directory to :data:`sys.path`."
msgstr ""
"Si es distinto de cero, añade el directorio del sitio del usuario a :data:"
"`sys.path`."

#: ../../c-api/init_config.rst:1219
msgid "Set to ``0`` by the :option:`-s` and :option:`-I` command line options."
msgstr ""
"Se establece en ``0`` mediante las opciones de línea de comandos :option:`-"
"s` y :option:`-I`."

#: ../../c-api/init_config.rst:1221
msgid "Set to ``0`` by the :envvar:`PYTHONNOUSERSITE` environment variable."
msgstr ""
"Establecido en ``0`` por la variable de entorno :envvar:`PYTHONNOUSERSITE`."

#: ../../c-api/init_config.rst:1227
msgid ""
"Verbose mode. If greater than ``0``, print a message each time a module is "
"imported, showing the place (filename or built-in module) from which it is "
"loaded."
msgstr ""
"Modo detallado. Si es mayor que ``0``, imprime un mensaje cada vez que se "
"importa un módulo, mostrando el lugar (nombre de archivo o módulo "
"incorporado) desde el que se carga."

#: ../../c-api/init_config.rst:1231
msgid ""
"If greater than or equal to ``2``, print a message for each file that is "
"checked for when searching for a module. Also provides information on module "
"cleanup at exit."
msgstr ""
"Si es mayor o igual que ``2``, imprime un mensaje por cada archivo que se "
"comprueba al buscar un módulo. También proporciona información sobre la "
"limpieza del módulo al salir."

#: ../../c-api/init_config.rst:1235
msgid "Incremented by the :option:`-v` command line option."
msgstr "Incrementado por la opción de línea de comandos :option:`-v`."

#: ../../c-api/init_config.rst:1237
msgid "Set by the :envvar:`PYTHONVERBOSE` environment variable value."
msgstr ""
"Establecido por el valor de la variable de entorno :envvar:`PYTHONVERBOSE`."

#: ../../c-api/init_config.rst:1243
msgid ""
"Options of the :mod:`warnings` module to build warnings filters, lowest to "
"highest priority: :data:`sys.warnoptions`."
msgstr ""
"Opciones del módulo :mod:`warnings` para construir filtros de avisos, de "
"menor a mayor prioridad: :data:`sys.warnoptions`."

#: ../../c-api/init_config.rst:1246
msgid ""
"The :mod:`warnings` module adds :data:`sys.warnoptions` in the reverse "
"order: the last :c:member:`PyConfig.warnoptions` item becomes the first item "
"of :data:`warnings.filters` which is checked first (highest priority)."
msgstr ""
"El módulo :mod:`warnings` añade :data:`sys.warnoptions` en orden inverso: el "
"último elemento de :c:member:`PyConfig.warnoptions` se convierte en el "
"primer elemento de :data:`warnings.filters`, que se comprueba en primer "
"lugar (máxima prioridad)."

#: ../../c-api/init_config.rst:1251
msgid ""
"The :option:`-W` command line options adds its value to :c:member:`~PyConfig."
"warnoptions`, it can be used multiple times."
msgstr ""
"La opción de línea de comandos :option:`-W` añade su valor a :c:member:"
"`~PyConfig.warnoptions`, puede utilizarse varias veces."

#: ../../c-api/init_config.rst:1254
msgid ""
"The :envvar:`PYTHONWARNINGS` environment variable can also be used to add "
"warning options. Multiple options can be specified, separated by commas (``,"
"``)."
msgstr ""
"La variable de entorno :envvar:`PYTHONWARNINGS` también puede utilizarse "
"para añadir opciones de advertencia. Se pueden especificar varias opciones, "
"separadas por comas (``,``)."

#: ../../c-api/init_config.rst:1262
msgid ""
"If equal to ``0``, Python won't try to write ``.pyc`` files on the import of "
"source modules."
msgstr ""
"Si es igual a ``0``, Python no intentará escribir archivos ``.pyc`` en la "
"importación de módulos fuente."

#: ../../c-api/init_config.rst:1265
msgid ""
"Set to ``0`` by the :option:`-B` command line option and the :envvar:"
"`PYTHONDONTWRITEBYTECODE` environment variable."
msgstr ""
"Se establece en ``0`` mediante la opción de línea de comandos :option:`-B` y "
"la variable de entorno :envvar:`PYTHONDONTWRITEBYTECODE`."

#: ../../c-api/init_config.rst:1268
msgid ""
":data:`sys.dont_write_bytecode` is initialized to the inverted value of :c:"
"member:`~PyConfig.write_bytecode`."
msgstr ""
":data:`sys.dont_write_bytecode` se inicializa con el valor invertido de :c:"
"member:`~PyConfig.write_bytecode`."

#: ../../c-api/init_config.rst:1275
msgid "Values of the :option:`-X` command line options: :data:`sys._xoptions`."
msgstr ""
"Valores de las opciones de la línea de comandos :option:`-X`: :data:`sys."
"_xoptions`."

#: ../../c-api/init_config.rst:1279
msgid ""
"If :c:member:`~PyConfig.parse_argv` is non-zero, :c:member:`~PyConfig.argv` "
"arguments are parsed the same way the regular Python parses :ref:`command "
"line arguments <using-on-cmdline>`, and Python arguments are stripped from :"
"c:member:`~PyConfig.argv`."
msgstr ""
"Si :c:member:`~PyConfig.parse_argv` es distinto de cero, los argumentos de :"
"c:member:`~PyConfig.argv` se analizan de la misma forma que Python analiza "
"los argumentos de :ref:`línea de comandos <using-on-cmdline>`, y los "
"argumentos de Python se eliminan de :c:member:`~PyConfig.argv`."

#: ../../c-api/init_config.rst:1284
msgid ""
"The :c:member:`~PyConfig.xoptions` options are parsed to set other options: "
"see the :option:`-X` command line option."
msgstr ""
"Las opciones de :c:member:`~PyConfig.xoptions` se analizan para establecer "
"otras opciones: consulte la opción de línea de comandos :option:`-X`."

#: ../../c-api/init_config.rst:1289
msgid "The ``show_alloc_count`` field has been removed."
msgstr "Se ha eliminado el campo ``show_alloc_count``."

#: ../../c-api/init_config.rst:1293
msgid "Initialization with PyConfig"
msgstr "Inicialización con PyConfig"

#: ../../c-api/init_config.rst:1295
msgid "Function to initialize Python:"
msgstr "Función para inicializar Python:"

#: ../../c-api/init_config.rst:1299
msgid "Initialize Python from *config* configuration."
msgstr "Inicializar Python a partir de la configuración *config*."

#: ../../c-api/init_config.rst:1304
msgid ""
"If :c:func:`PyImport_FrozenModules`, :c:func:`PyImport_AppendInittab` or :c:"
"func:`PyImport_ExtendInittab` are used, they must be set or called after "
"Python preinitialization and before the Python initialization. If Python is "
"initialized multiple times, :c:func:`PyImport_AppendInittab` or :c:func:"
"`PyImport_ExtendInittab` must be called before each Python initialization."
msgstr ""
"Si se usan :c:func:`PyImport_FrozenModules`, :c:func:"
"`PyImport_AppendInittab` o :c:func:`PyImport_ExtendInittab`, se deben ser "
"fijar o llamar después de la preinicialización de Python y antes de la "
"inicialización de Python. Si Python se inicializa varias veces, :c:func:"
"`PyImport_AppendInittab` o :c:func:`PyImport_ExtendInittab` deben llamarse "
"antes de cada inicialización de Python."

#: ../../c-api/init_config.rst:1311
msgid ""
"The current configuration (``PyConfig`` type) is stored in "
"``PyInterpreterState.config``."
msgstr ""
"La configuración actual (tipo``PyConfig`` ) se almacena en "
"``PyInterpreterState.config``."

#: ../../c-api/init_config.rst:1314
msgid "Example setting the program name::"
msgstr "Ejemplo de configuración del nombre del programa::"

#: ../../c-api/init_config.rst:1316
msgid ""
"void init_python(void)\n"
"{\n"
"    PyStatus status;\n"
"\n"
"    PyConfig config;\n"
"    PyConfig_InitPythonConfig(&config);\n"
"\n"
"    /* Set the program name. Implicitly preinitialize Python. */\n"
"    status = PyConfig_SetString(&config, &config.program_name,\n"
"                                L\"/path/to/my_program\");\n"
"    if (PyStatus_Exception(status)) {\n"
"        goto exception;\n"
"    }\n"
"\n"
"    status = Py_InitializeFromConfig(&config);\n"
"    if (PyStatus_Exception(status)) {\n"
"        goto exception;\n"
"    }\n"
"    PyConfig_Clear(&config);\n"
"    return;\n"
"\n"
"exception:\n"
"    PyConfig_Clear(&config);\n"
"    Py_ExitStatusException(status);\n"
"}"
msgstr ""
"void init_python(void)\n"
"{\n"
"    PyStatus status;\n"
"\n"
"    PyConfig config;\n"
"    PyConfig_InitPythonConfig(&config);\n"
"\n"
"    /* Establecer el nombre del programa. Preinicializar implícitamente "
"Python. */\n"
"    status = PyConfig_SetString(&config, &config.program_name,\n"
"                                L\"/path/to/my_program\");\n"
"    if (PyStatus_Exception(status)) {\n"
"        goto exception;\n"
"    }\n"
"\n"
"    status = Py_InitializeFromConfig(&config);\n"
"    if (PyStatus_Exception(status)) {\n"
"        goto exception;\n"
"    }\n"
"    PyConfig_Clear(&config);\n"
"    return;\n"
"\n"
"exception:\n"
"    PyConfig_Clear(&config);\n"
"    Py_ExitStatusException(status);\n"
"}"

#: ../../c-api/init_config.rst:1342
msgid ""
"More complete example modifying the default configuration, read the "
"configuration, and then override some parameters. Note that since 3.11, many "
"parameters are not calculated until initialization, and so values cannot be "
"read from the configuration structure. Any values set before initialize is "
"called will be left unchanged by initialization::"
msgstr ""
"Ejemplo más completo modificando la configuración por defecto, leer la "
"configuración, y luego anular algunos parámetros. Tenga en cuenta que desde "
"3.11, muchos parámetros no se calculan hasta la inicialización, por lo que "
"los valores no se pueden leer de la estructura de configuración. Cualquier "
"valor establecido antes de llamar a initialize será dejado sin cambios por "
"initialization::"

#: ../../c-api/init_config.rst:1349
msgid ""
"PyStatus init_python(const char *program_name)\n"
"{\n"
"    PyStatus status;\n"
"\n"
"    PyConfig config;\n"
"    PyConfig_InitPythonConfig(&config);\n"
"\n"
"    /* Set the program name before reading the configuration\n"
"       (decode byte string from the locale encoding).\n"
"\n"
"       Implicitly preinitialize Python. */\n"
"    status = PyConfig_SetBytesString(&config, &config.program_name,\n"
"                                     program_name);\n"
"    if (PyStatus_Exception(status)) {\n"
"        goto done;\n"
"    }\n"
"\n"
"    /* Read all configuration at once */\n"
"    status = PyConfig_Read(&config);\n"
"    if (PyStatus_Exception(status)) {\n"
"        goto done;\n"
"    }\n"
"\n"
"    /* Specify sys.path explicitly */\n"
"    /* If you want to modify the default set of paths, finish\n"
"       initialization first and then use PySys_GetObject(\"path\") */\n"
"    config.module_search_paths_set = 1;\n"
"    status = PyWideStringList_Append(&config.module_search_paths,\n"
"                                     L\"/path/to/stdlib\");\n"
"    if (PyStatus_Exception(status)) {\n"
"        goto done;\n"
"    }\n"
"    status = PyWideStringList_Append(&config.module_search_paths,\n"
"                                     L\"/path/to/more/modules\");\n"
"    if (PyStatus_Exception(status)) {\n"
"        goto done;\n"
"    }\n"
"\n"
"    /* Override executable computed by PyConfig_Read() */\n"
"    status = PyConfig_SetString(&config, &config.executable,\n"
"                                L\"/path/to/my_executable\");\n"
"    if (PyStatus_Exception(status)) {\n"
"        goto done;\n"
"    }\n"
"\n"
"    status = Py_InitializeFromConfig(&config);\n"
"\n"
"done:\n"
"    PyConfig_Clear(&config);\n"
"    return status;\n"
"}"
msgstr ""
"PyStatus init_python(const char *program_name)\n"
"{\n"
"    PyStatus status;\n"
"\n"
"    PyConfig config;\n"
"    PyConfig_InitPythonConfig(&config);\n"
"\n"
"    /*Establecer el nombre del programa antes de leer la configuración\n"
"       (decodificar la cadena de bytes de la codificación local).\n"
"\n"
"      Implicitly preinitialize Python. */\n"
"    status = PyConfig_SetBytesString(&config, &config.program_name,\n"
"                                     program_name);\n"
"    if (PyStatus_Exception(status)) {\n"
"        goto done;\n"
"    }\n"
"\n"
"    /* Leer toda la configuración a la vez */\n"
"    status = PyConfig_Read(&config);\n"
"    if (PyStatus_Exception(status)) {\n"
"        goto done;\n"
"    }\n"
"\n"
"    /* Especifique sys.path explícitamente*/\n"
"    /* Si desea modificar el conjunto predeterminado de rutas, finalice\n"
"       inicialización primero y luego use PySys_GetObject(\"path\") */\n"
"    config.module_search_paths_set = 1;\n"
"    status = PyWideStringList_Append(&config.module_search_paths,\n"
"                                     L\"/path/to/stdlib\");\n"
"    if (PyStatus_Exception(status)) {\n"
"        goto done;\n"
"    }\n"
"    status = PyWideStringList_Append(&config.module_search_paths,\n"
"                                     L\"/path/to/more/modules\");\n"
"    if (PyStatus_Exception(status)) {\n"
"        goto done;\n"
"    }\n"
"\n"
"    /* Override executable computed by PyConfig_Read() */\n"
"    status = PyConfig_SetString(&config, &config.executable,\n"
"                                L\"/path/to/my_executable\");\n"
"    if (PyStatus_Exception(status)) {\n"
"        goto done;\n"
"    }\n"
"\n"
"    status = Py_InitializeFromConfig(&config);\n"
"\n"
"done:\n"
"    PyConfig_Clear(&config);\n"
"    return status;\n"
"}"

#: ../../c-api/init_config.rst:1405
msgid "Isolated Configuration"
msgstr "Configuración aislada"

#: ../../c-api/init_config.rst:1407
msgid ""
":c:func:`PyPreConfig_InitIsolatedConfig` and :c:func:"
"`PyConfig_InitIsolatedConfig` functions create a configuration to isolate "
"Python from the system. For example, to embed Python into an application."
msgstr ""
"Las funciones :c:func:`PyPreConfig_InitIsolatedConfig` y :c:func:"
"`PyConfig_InitIsolatedConfig` crean una configuración para aislar Python del "
"sistema. Por ejemplo, para incrustar Python en una aplicación."

#: ../../c-api/init_config.rst:1412
msgid ""
"This configuration ignores global configuration variables, environment "
"variables, command line arguments (:c:member:`PyConfig.argv` is not parsed) "
"and user site directory. The C standard streams (ex: ``stdout``) and the "
"LC_CTYPE locale are left unchanged. Signal handlers are not installed."
msgstr ""
"Esta configuración ignora las variables de configuración global, las "
"variables de entorno, los argumentos de línea de comandos (:c:member:"
"`PyConfig.argv` no se analiza) y el directorio del sitio de usuario. Los "
"flujos estándar C (ej: ``stdout``) y la configuración regional LC_CTYPE no "
"se modifican. Los manejadores de señales no están instalados."

#: ../../c-api/init_config.rst:1417
msgid ""
"Configuration files are still used with this configuration to determine "
"paths that are unspecified. Ensure :c:member:`PyConfig.home` is specified to "
"avoid computing the default path configuration."
msgstr ""
"Los archivos de configuración se siguen utilizando con esta configuración "
"para determinar las rutas que no se especifican. Asegúrese de que se "
"especifica :c:member:`PyConfig.home` para evitar calcular la configuración "
"de rutas por defecto."

#: ../../c-api/init_config.rst:1425
msgid "Python Configuration"
msgstr "Configuración de Python"

#: ../../c-api/init_config.rst:1427
msgid ""
":c:func:`PyPreConfig_InitPythonConfig` and :c:func:"
"`PyConfig_InitPythonConfig` functions create a configuration to build a "
"customized Python which behaves as the regular Python."
msgstr ""
"Las funciones :c:func:`PyPreConfig_InitPythonConfig` y :c:func:"
"`PyConfig_InitPythonConfig` crean una configuración para construir un Python "
"personalizado que se comporta como el Python normal."

#: ../../c-api/init_config.rst:1431
msgid ""
"Environments variables and command line arguments are used to configure "
"Python, whereas global configuration variables are ignored."
msgstr ""
"Las variables de entorno y los argumentos de línea de comandos se utilizan "
"para configurar Python, mientras que las variables de configuración global "
"se ignoran."

#: ../../c-api/init_config.rst:1434
msgid ""
"This function enables C locale coercion (:pep:`538`) and :ref:`Python UTF-8 "
"Mode <utf8-mode>` (:pep:`540`) depending on the LC_CTYPE locale, :envvar:"
"`PYTHONUTF8` and :envvar:`PYTHONCOERCECLOCALE` environment variables."
msgstr ""
"Esta función habilita la coerción de la localización C (:pep:`538`) y :ref:"
"`Modo Python UTF-8 <utf8-mode>` (:pep:`540`) dependiendo de las variables de "
"entorno LC_CTYPE locale, :envvar:`PYTHONUTF8` y :envvar:"
"`PYTHONCOERCECLOCALE`."

#: ../../c-api/init_config.rst:1443
msgid "Python Path Configuration"
msgstr "Configuración de la ruta de Python"

#: ../../c-api/init_config.rst:1445
msgid ":c:type:`PyConfig` contains multiple fields for the path configuration:"
msgstr ""
":c:type:`PyConfig` contiene varios campos para la configuración de la ruta:"

#: ../../c-api/init_config.rst:1447
msgid "Path configuration inputs:"
msgstr "Entradas de configuración de ruta:"

#: ../../c-api/init_config.rst:1449
msgid ":c:member:`PyConfig.home`"
msgstr ":c:member:`PyConfig.home`"

#: ../../c-api/init_config.rst:1450
msgid ":c:member:`PyConfig.platlibdir`"
msgstr ":c:member:`PyConfig.platlibdir`"

#: ../../c-api/init_config.rst:1451
msgid ":c:member:`PyConfig.pathconfig_warnings`"
msgstr ":c:member:`PyConfig.pathconfig_warnings`"

#: ../../c-api/init_config.rst:1452
msgid ":c:member:`PyConfig.program_name`"
msgstr ":c:member:`PyConfig.program_name`"

#: ../../c-api/init_config.rst:1453
msgid ":c:member:`PyConfig.pythonpath_env`"
msgstr ":c:member:`PyConfig.pythonpath_env`"

#: ../../c-api/init_config.rst:1454
msgid "current working directory: to get absolute paths"
msgstr "directorio de trabajo actual: para obtener rutas absolutas"

#: ../../c-api/init_config.rst:1455
msgid ""
"``PATH`` environment variable to get the program full path (from :c:member:"
"`PyConfig.program_name`)"
msgstr ""
"variable de entorno ``PATH`` para obtener la ruta completa del programa (de :"
"c:member:`PyConfig.program_name`)"

#: ../../c-api/init_config.rst:1457
msgid "``__PYVENV_LAUNCHER__`` environment variable"
msgstr "``__PYVENV_LAUNCHER__`` variable de entorno"

#: ../../c-api/init_config.rst:1458
msgid ""
"(Windows only) Application paths in the registry under "
"\"Software\\Python\\PythonCore\\X.Y\\PythonPath\" of HKEY_CURRENT_USER and "
"HKEY_LOCAL_MACHINE (where X.Y is the Python version)."
msgstr ""
"(Sólo Windows) Rutas de aplicación en el registro bajo "
"\"Software\\Python\\PythonCore\\X.Y\\PythonPath\" de HKEY_CURRENT_USER y "
"HKEY_LOCAL_MACHINE (donde X.Y es la versión de Python)."

#: ../../c-api/init_config.rst:1462
msgid "Path configuration output fields:"
msgstr "Campos de salida de configuración de ruta:"

#: ../../c-api/init_config.rst:1464
msgid ":c:member:`PyConfig.base_exec_prefix`"
msgstr ":c:member:`PyConfig.base_exec_prefix`"

#: ../../c-api/init_config.rst:1465
msgid ":c:member:`PyConfig.base_executable`"
msgstr ":c:member:`PyConfig.base_executable`"

#: ../../c-api/init_config.rst:1466
msgid ":c:member:`PyConfig.base_prefix`"
msgstr ":c:member:`PyConfig.base_prefix`"

#: ../../c-api/init_config.rst:1467
msgid ":c:member:`PyConfig.exec_prefix`"
msgstr ":c:member:`PyConfig.exec_prefix`"

#: ../../c-api/init_config.rst:1468
msgid ":c:member:`PyConfig.executable`"
msgstr ":c:member:`PyConfig.executable`"

#: ../../c-api/init_config.rst:1469
msgid ""
":c:member:`PyConfig.module_search_paths_set`, :c:member:`PyConfig."
"module_search_paths`"
msgstr ""
":c:member:`PyConfig.module_search_paths_set`, :c:member:`PyConfig."
"module_search_paths`"

#: ../../c-api/init_config.rst:1471
msgid ":c:member:`PyConfig.prefix`"
msgstr ":c:member:`PyConfig.prefix`"

#: ../../c-api/init_config.rst:1473
msgid ""
"If at least one \"output field\" is not set, Python calculates the path "
"configuration to fill unset fields. If :c:member:`~PyConfig."
"module_search_paths_set` is equal to ``0``, :c:member:`~PyConfig."
"module_search_paths` is overridden and :c:member:`~PyConfig."
"module_search_paths_set` is set to ``1``."
msgstr ""
"Si al menos un \"campo de salida\" no está establecido, Python calcula la "
"configuración de la ruta para rellenar los campos no establecidos. Si :c:"
"member:`~PyConfig.module_search_paths_set` es igual a ``0``, :c:member:"
"`~PyConfig.module_search_paths` se anula y :c:member:`~PyConfig."
"module_search_paths_set` se establece en ``1``."

#: ../../c-api/init_config.rst:1479
msgid ""
"It is possible to completely ignore the function calculating the default "
"path configuration by setting explicitly all path configuration output "
"fields listed above. A string is considered as set even if it is non-empty. "
"``module_search_paths`` is considered as set if ``module_search_paths_set`` "
"is set to ``1``. In this case, ``module_search_paths`` will be used without "
"modification."
msgstr ""
"Es posible ignorar por completo la función que calcula la configuración por "
"defecto de la ruta estableciendo explícitamente todos los campos de salida "
"de configuración de ruta enumerados anteriormente. Una cadena se considera "
"establecida incluso si no está vacía. ``module_search_paths`` se considera "
"establecida si ``module_search_paths_set`` se establece en ``1``. En este "
"caso, ``module_search_paths`` se utilizará sin modificación."

#: ../../c-api/init_config.rst:1486
msgid ""
"Set :c:member:`~PyConfig.pathconfig_warnings` to ``0`` to suppress warnings "
"when calculating the path configuration (Unix only, Windows does not log any "
"warning)."
msgstr ""
"Fijar :c:member:`~PyConfig.pathconfig_warnings` en ``0`` para suprimir las "
"advertencias al calcular la configuración de la ruta (sólo Unix, Windows no "
"registra ninguna advertencia)."

#: ../../c-api/init_config.rst:1489
msgid ""
"If :c:member:`~PyConfig.base_prefix` or :c:member:`~PyConfig."
"base_exec_prefix` fields are not set, they inherit their value from :c:"
"member:`~PyConfig.prefix` and :c:member:`~PyConfig.exec_prefix` respectively."
msgstr ""
"Si los campos :c:member:`~PyConfig.base_prefix` o :c:member:`~PyConfig."
"base_exec_prefix` no están configurados, heredan su valor de :c:member:"
"`~PyConfig.prefix` y :c:member:`~PyConfig.exec_prefix` respectivamente."

#: ../../c-api/init_config.rst:1493
msgid ":c:func:`Py_RunMain` and :c:func:`Py_Main` modify :data:`sys.path`:"
msgstr ":c:func:`Py_RunMain` y :c:func:`Py_Main` modifican :data:`sys.path`:"

#: ../../c-api/init_config.rst:1495
msgid ""
"If :c:member:`~PyConfig.run_filename` is set and is a directory which "
"contains a ``__main__.py`` script, prepend :c:member:`~PyConfig."
"run_filename` to :data:`sys.path`."
msgstr ""
"Si :c:member:`~PyConfig.run_filename` está configurado y es un directorio "
"que contiene un script ``__main__.py``, anteponer :c:member:`~PyConfig."
"run_filename` a :data:`sys.path`."

#: ../../c-api/init_config.rst:1498
msgid "If :c:member:`~PyConfig.isolated` is zero:"
msgstr "Si :c:member:`~PyConfig.isolated` es cero:"

#: ../../c-api/init_config.rst:1500
msgid ""
"If :c:member:`~PyConfig.run_module` is set, prepend the current directory "
"to :data:`sys.path`. Do nothing if the current directory cannot be read."
msgstr ""
"Si se establece :c:member:`~PyConfig.run_module`, antepone el directorio "
"actual a :data:`sys.path`. No hacer nada si no se puede leer el directorio "
"actual."

#: ../../c-api/init_config.rst:1502
msgid ""
"If :c:member:`~PyConfig.run_filename` is set, prepend the directory of the "
"filename to :data:`sys.path`."
msgstr ""
"Si se establece :c:member:`~PyConfig.run_filename`, anteponer el directorio "
"del nombre de archivo a :data:`sys.path`."

#: ../../c-api/init_config.rst:1504
msgid "Otherwise, prepend an empty string to :data:`sys.path`."
msgstr "En caso contrario, añade una cadena vacía a :data:`sys.path`."

#: ../../c-api/init_config.rst:1506
msgid ""
"If :c:member:`~PyConfig.site_import` is non-zero, :data:`sys.path` can be "
"modified by the :mod:`site` module. If :c:member:`~PyConfig."
"user_site_directory` is non-zero and the user's site-package directory "
"exists, the :mod:`site` module appends the user's site-package directory to :"
"data:`sys.path`."
msgstr ""
"Si :c:member:`~PyConfig.site_import` es distinto de cero, el módulo :mod:"
"`site` puede modificar :data:`sys.path`. Si :c:member:`~PyConfig."
"user_site_directory` es distinto de cero y el directorio del paquete del "
"sitio del usuario existe, el módulo :mod:`site` añade el directorio del "
"paquete del sitio del usuario a :data:`sys.path`."

#: ../../c-api/init_config.rst:1512
msgid "The following configuration files are used by the path configuration:"
msgstr ""
"La configuración de la ruta utiliza los siguientes archivos de configuración:"

#: ../../c-api/init_config.rst:1514
msgid "``pyvenv.cfg``"
msgstr "``pyvenv.cfg``"

#: ../../c-api/init_config.rst:1515
msgid "``._pth`` file (ex: ``python._pth``)"
msgstr "``._pth`` archivo (por ejemplo: ``python._pth``)"

#: ../../c-api/init_config.rst:1516
msgid "``pybuilddir.txt`` (Unix only)"
msgstr "``pybuilddir.txt`` (sólo Unix)"

#: ../../c-api/init_config.rst:1518
msgid "If a ``._pth`` file is present:"
msgstr "Si existe un archivo ``._pth``:"

#: ../../c-api/init_config.rst:1520
msgid "Set :c:member:`~PyConfig.isolated` to ``1``."
msgstr "Configura :c:member:`~PyConfig.isolated` en ``1``."

#: ../../c-api/init_config.rst:1521
msgid "Set :c:member:`~PyConfig.use_environment` to ``0``."
msgstr "Configura :c:member:`~PyConfig.use_environment` en ``0``."

#: ../../c-api/init_config.rst:1522
msgid "Set :c:member:`~PyConfig.site_import` to ``0``."
msgstr "Configura :c:member:`~PyConfig.site_import` en ``0``."

#: ../../c-api/init_config.rst:1523
msgid "Set :c:member:`~PyConfig.safe_path` to ``1``."
msgstr "Configura :c:member:`~PyConfig.safe_path` en ``1``."

#: ../../c-api/init_config.rst:1525
msgid ""
"The ``__PYVENV_LAUNCHER__`` environment variable is used to set :c:member:"
"`PyConfig.base_executable`"
msgstr ""
"La variable de entorno ``__PYVENV_LAUNCHER__`` se utiliza para establecer :c:"
"member:`PyConfig.base_executable`"

#: ../../c-api/init_config.rst:1530
msgid "Py_RunMain()"
msgstr "Py_RunMain()"

#: ../../c-api/init_config.rst:1534
msgid ""
"Execute the command (:c:member:`PyConfig.run_command`), the script (:c:"
"member:`PyConfig.run_filename`) or the module (:c:member:`PyConfig."
"run_module`) specified on the command line or in the configuration."
msgstr ""
"Ejecuta el comando (:c:member:`PyConfig.run_command`), el script (:c:member:"
"`PyConfig.run_filename`) o el módulo (:c:member:`PyConfig.run_module`) "
"especificados en la línea de comandos o en la configuración."

#: ../../c-api/init_config.rst:1539
msgid "By default and when if :option:`-i` option is used, run the REPL."
msgstr ""
"Por defecto y cuando se utiliza la opción :option:`-i`, ejecuta el REPL."

#: ../../c-api/init_config.rst:1541
msgid ""
"Finally, finalizes Python and returns an exit status that can be passed to "
"the ``exit()`` function."
msgstr ""
"Por último, finaliza Python y devuelve un estado de salida que se puede "
"pasar a la función ``exit()``."

#: ../../c-api/init_config.rst:1544
msgid ""
"See :ref:`Python Configuration <init-python-config>` for an example of "
"customized Python always running in isolated mode using :c:func:`Py_RunMain`."
msgstr ""
"Ver :ref:`Configuración de Python <init-python-config>` para un ejemplo de "
"Python personalizado ejecutándose siempre en modo aislado usando :c:func:"
"`Py_RunMain`."

#: ../../c-api/init_config.rst:1550
msgid "Py_GetArgcArgv()"
msgstr "Py_GetArgcArgv()"

#: ../../c-api/init_config.rst:1554
msgid "Get the original command line arguments, before Python modified them."
msgstr ""
"Obtiene los argumentos originales de la línea de comandos, antes de que "
"Python los modifique."

#: ../../c-api/init_config.rst:1556
msgid "See also :c:member:`PyConfig.orig_argv` member."
msgstr "Ver también :c:member:`PyConfig.orig_argv` member."

#: ../../c-api/init_config.rst:1560
msgid "Multi-Phase Initialization Private Provisional API"
msgstr "Inicialización multifase API privada provisional"

#: ../../c-api/init_config.rst:1562
msgid ""
"This section is a private provisional API introducing multi-phase "
"initialization, the core feature of :pep:`432`:"
msgstr ""
"Esta sección es una API privada provisional que introduce la inicialización "
"multifase, característica central de :pep:`432`:"

#: ../../c-api/init_config.rst:1565
msgid "\"Core\" initialization phase, \"bare minimum Python\":"
msgstr "Fase de inicialización \"Core\", \"bare minimum Python\":"

#: ../../c-api/init_config.rst:1567
msgid "Builtin types;"
msgstr "Tipos incorporados;"

#: ../../c-api/init_config.rst:1568
msgid "Builtin exceptions;"
msgstr "Excepciones incorporadas;"

#: ../../c-api/init_config.rst:1569
msgid "Builtin and frozen modules;"
msgstr "Módulos integrados y congelados;"

#: ../../c-api/init_config.rst:1570
msgid ""
"The :mod:`sys` module is only partially initialized (ex: :data:`sys.path` "
"doesn't exist yet)."
msgstr ""
"El módulo :mod:`sys` está sólo parcialmente inicializado (ej: :data:`sys."
"path` no existe todavía)."

#: ../../c-api/init_config.rst:1573
msgid "\"Main\" initialization phase, Python is fully initialized:"
msgstr "Fase de inicialización \"Main\", Python está totalmente inicializado:"

#: ../../c-api/init_config.rst:1575
msgid "Install and configure :mod:`importlib`;"
msgstr "Instalar y configurar :mod:`importlib`;"

#: ../../c-api/init_config.rst:1576
msgid "Apply the :ref:`Path Configuration <init-path-config>`;"
msgstr "Aplicar :ref:`Path Configuration <init-path-config>`;"

#: ../../c-api/init_config.rst:1577
msgid "Install signal handlers;"
msgstr "Instalar manejadores de señales;"

#: ../../c-api/init_config.rst:1578
msgid ""
"Finish :mod:`sys` module initialization (ex: create :data:`sys.stdout` and :"
"data:`sys.path`);"
msgstr ""
"Finalizar la inicialización del módulo :mod:`sys` (por ejemplo: crear :data:"
"`sys.stdout` y :data:`sys.path`);"

#: ../../c-api/init_config.rst:1580
msgid ""
"Enable optional features like :mod:`faulthandler` and :mod:`tracemalloc`;"
msgstr ""
"Activar funciones opcionales como :mod:`faulthandler` y :mod:`tracemalloc`;"

#: ../../c-api/init_config.rst:1581
msgid "Import the :mod:`site` module;"
msgstr "Importar el módulo :mod:`site`;"

#: ../../c-api/init_config.rst:1582
msgid "etc."
msgstr "etc."

#: ../../c-api/init_config.rst:1584
msgid "Private provisional API:"
msgstr "API privada provisional:"

#: ../../c-api/init_config.rst:1586
msgid ""
":c:member:`PyConfig._init_main`: if set to ``0``, :c:func:"
"`Py_InitializeFromConfig` stops at the \"Core\" initialization phase."
msgstr ""
":c:member:`PyConfig._init_main`: si se establece en ``0``, :c:func:"
"`Py_InitializeFromConfig` se detiene en la fase de inicialización \"Core\"."

#: ../../c-api/init_config.rst:1591
msgid ""
"Move to the \"Main\" initialization phase, finish the Python initialization."
msgstr ""
"Pasa a la fase de inicialización \"Principal\", termina la inicialización de "
"Python."

#: ../../c-api/init_config.rst:1593
msgid ""
"No module is imported during the \"Core\" phase and the ``importlib`` module "
"is not configured: the :ref:`Path Configuration <init-path-config>` is only "
"applied during the \"Main\" phase. It may allow to customize Python in "
"Python to override or tune the :ref:`Path Configuration <init-path-config>`, "
"maybe install a custom :data:`sys.meta_path` importer or an import hook, etc."
msgstr ""
"No se importa ningún módulo durante la fase \"Core\" y no se configura el "
"módulo ``importlib``: el :ref:`Path Configuration <init-path-config>` sólo "
"se aplica durante la fase \"Main\". Puede permitir personalizar Python en "
"Python para anular o ajustar el :ref:`Path Configuration <init-path-"
"config>`, tal vez instalar un importador personalizado :data:`sys.meta_path` "
"o un gancho de importación, etc."

#: ../../c-api/init_config.rst:1599
msgid ""
"It may become possible to calculate the :ref:`Path Configuration <init-path-"
"config>` in Python, after the Core phase and before the Main phase, which is "
"one of the :pep:`432` motivation."
msgstr ""
"Puede llegar a ser posible calcular la :ref:`Configuración de la ruta <init-"
"path-config>` en Python, después de la fase Core y antes de la fase Main, "
"que es una de las motivaciones de :pep:`432`."

#: ../../c-api/init_config.rst:1603
msgid ""
"The \"Core\" phase is not properly defined: what should be and what should "
"not be available at this phase is not specified yet. The API is marked as "
"private and provisional: the API can be modified or even be removed anytime "
"until a proper public API is designed."
msgstr ""
"La fase \"Core\" no está bien definida: aún no se ha especificado qué debe "
"estar y qué no debe estar disponible en esta fase. La API está marcada como "
"privada y provisional: la API puede modificarse o incluso eliminarse en "
"cualquier momento hasta que se diseñe una API pública adecuada."

#: ../../c-api/init_config.rst:1608
msgid ""
"Example running Python code between \"Core\" and \"Main\" initialization "
"phases::"
msgstr ""
"Ejemplo de ejecución de código Python entre las fases de inicialización "
"\"Core\" y \"Main\"::"

#: ../../c-api/init_config.rst:1611
msgid ""
"void init_python(void)\n"
"{\n"
"    PyStatus status;\n"
"\n"
"    PyConfig config;\n"
"    PyConfig_InitPythonConfig(&config);\n"
"    config._init_main = 0;\n"
"\n"
"    /* ... customize 'config' configuration ... */\n"
"\n"
"    status = Py_InitializeFromConfig(&config);\n"
"    PyConfig_Clear(&config);\n"
"    if (PyStatus_Exception(status)) {\n"
"        Py_ExitStatusException(status);\n"
"    }\n"
"\n"
"    /* Use sys.stderr because sys.stdout is only created\n"
"       by _Py_InitializeMain() */\n"
"    int res = PyRun_SimpleString(\n"
"        \"import sys; \"\n"
"        \"print('Run Python code before _Py_InitializeMain', \"\n"
"               \"file=sys.stderr)\");\n"
"    if (res < 0) {\n"
"        exit(1);\n"
"    }\n"
"\n"
"    /* ... put more configuration code here ... */\n"
"\n"
"    status = _Py_InitializeMain();\n"
"    if (PyStatus_Exception(status)) {\n"
"        Py_ExitStatusException(status);\n"
"    }\n"
"}"
msgstr ""
"void init_python(void)\n"
"{\n"
"    PyStatus status;\n"
"\n"
"    PyConfig config;\n"
"    PyConfig_InitPythonConfig(&config);\n"
"    config._init_main = 0;\n"
"\n"
"    /* ... customize 'config' configuration ... */\n"
"\n"
"    status = Py_InitializeFromConfig(&config);\n"
"    PyConfig_Clear(&config);\n"
"    if (PyStatus_Exception(status)) {\n"
"        Py_ExitStatusException(status);\n"
"    }\n"
"\n"
"    /* Utilice sys.stderr porque sys.stdout solo se crea\n"
"       by _Py_InitializeMain() */\n"
"    int res = PyRun_SimpleString(\n"
"        \"import sys; \"\n"
"        \"print('Run Python code before _Py_InitializeMain', \"\n"
"               \"file=sys.stderr)\");\n"
"    if (res < 0) {\n"
"        exit(1);\n"
"    }\n"
"\n"
"    /* ...ponga más código de configuración aquí ... */\n"
"\n"
"    status = _Py_InitializeMain();\n"
"    if (PyStatus_Exception(status)) {\n"
"        Py_ExitStatusException(status);\n"
"    }\n"
"}"
