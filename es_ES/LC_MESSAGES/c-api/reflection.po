# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# Rafael Fontenelle <rffontenelle@gmail.com>, 2025
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.13\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-07-25 15:00+0000\n"
"PO-Revision-Date: 2025-07-18 19:21+0000\n"
"Last-Translator: Rafael Fontenelle <rffontenelle@gmail.com>, 2025\n"
"Language-Team: Spanish (Spain) (https://app.transifex.com/python-doc/"
"teams/5390/es_ES/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: es_ES\n"
"Plural-Forms: nplurals=3; plural=n == 1 ? 0 : n != 0 && n % 1000000 == 0 ? "
"1 : 2;\n"

#: ../../c-api/reflection.rst:6
msgid "Reflection"
msgstr "Reflexión"

#: ../../c-api/reflection.rst:12
msgid "Use :c:func:`PyEval_GetFrameBuiltins` instead."
msgstr "Вместо этого используйте :c:func:`PyEval_GetFrameBuiltins`."

#: ../../c-api/reflection.rst:14 ../../c-api/reflection.rst:66
msgid ""
"Return a dictionary of the builtins in the current execution frame, or the "
"interpreter of the thread state if no frame is currently executing."
msgstr ""
"Devuelve un diccionario de los builtins en el marco de ejecución actual, o "
"el intérprete del estado del hilo si ningún marco se está ejecutando "
"actualmente."

#: ../../c-api/reflection.rst:22
msgid ""
"Use either :c:func:`PyEval_GetFrameLocals` to obtain the same behaviour as "
"calling :func:`locals` in Python code, or else call :c:func:"
"`PyFrame_GetLocals` on the result of :c:func:`PyEval_GetFrame` to access "
"the :attr:`~frame.f_locals` attribute of the currently executing frame."
msgstr ""
"Используйте либо :c:func:`PyEval_GetFrameLocals`, чтобы получить то же "
"поведение, что и вызов :func:`locals` в коде Python, либо вызовите :c:func:"
"`PyFrame_GetLocals` для результата :c:func:`PyEval_GetFrame` для доступа к "
"атрибуту :attr:`~frame.f_locals` текущего исполняемого кадра."

#: ../../c-api/reflection.rst:27
msgid ""
"Return a mapping providing access to the local variables in the current "
"execution frame, or ``NULL`` if no frame is currently executing."
msgstr ""
"Возвращает отображение, обеспечивающее доступ к локальным переменным в "
"текущем кадре выполнения, или NULL, если в данный момент ни один кадр не "
"выполняется."

#: ../../c-api/reflection.rst:30
msgid ""
"Refer to :func:`locals` for details of the mapping returned at different "
"scopes."
msgstr ""
"Обратитесь к :func:`locals` для получения подробной информации о "
"сопоставлении, возвращаемом в различных областях видимости."

#: ../../c-api/reflection.rst:32
msgid ""
"As this function returns a :term:`borrowed reference`, the dictionary "
"returned for :term:`optimized scopes <optimized scope>` is cached on the "
"frame object and will remain alive as long as the frame object does. Unlike :"
"c:func:`PyEval_GetFrameLocals` and :func:`locals`, subsequent calls to this "
"function in the same frame will update the contents of the cached dictionary "
"to reflect changes in the state of the local variables rather than returning "
"a new snapshot."
msgstr ""
"Поскольку эта функция возвращает :term:`заимствованную ссылку`, словарь, "
"возвращаемый для :term:`оптимизированных областей <оптимизированная "
"область>`, кэшируется в объекте фрейма и будет оставаться активным до тех "
"пор, пока работает объект фрейма. В отличие от :c:func:"
"`PyEval_GetFrameLocals` и :func:`locals`, последующие вызовы этой функции в "
"том же кадре будут обновлять содержимое кэшированного словаря, чтобы "
"отразить изменения в состоянии локальных переменных, а не возвращать новый "
"снимок. ."

#: ../../c-api/reflection.rst:39
msgid ""
"As part of :pep:`667`, :c:func:`PyFrame_GetLocals`, :func:`locals`, and :"
"attr:`FrameType.f_locals <frame.f_locals>` no longer make use of the shared "
"cache dictionary. Refer to the :ref:`What's New entry <whatsnew313-locals-"
"semantics>` for additional details."
msgstr ""
"Как часть :pep:`667`, :c:func:`PyFrame_GetLocals`, :func:`locals` и :attr:"
"`FrameType.f_locals <frame.f_locals>` больше не используют словарь общего "
"кэша. Дополнительные сведения см. в разделе :ref:`Что нового <whatsnew313-"
"locals-semantics>`."

#: ../../c-api/reflection.rst:50
msgid "Use :c:func:`PyEval_GetFrameGlobals` instead."
msgstr "Вместо этого используйте :c:func:`PyEval_GetFrameGlobals`."

#: ../../c-api/reflection.rst:52
msgid ""
"Return a dictionary of the global variables in the current execution frame, "
"or ``NULL`` if no frame is currently executing."
msgstr ""
"Devuelve un diccionario de las variables globales en el marco de ejecución "
"actual, o ``NULL`` si no se está ejecutando ningún marco."

#: ../../c-api/reflection.rst:58
msgid ""
"Return the current thread state's frame, which is ``NULL`` if no frame is "
"currently executing."
msgstr ""
"Devuelve la trama del estado actual del hilo, que es ``NULL`` si no se está "
"ejecutando ninguna trama."

#: ../../c-api/reflection.rst:61
msgid "See also :c:func:`PyThreadState_GetFrame`."
msgstr "Ver también :c:func:`PyThreadState_GetFrame`."

#: ../../c-api/reflection.rst:74
msgid ""
"Return a dictionary of the local variables in the current execution frame, "
"or ``NULL`` if no frame is currently executing. Equivalent to calling :func:"
"`locals` in Python code."
msgstr ""
"Возвращает словарь локальных переменных в текущем кадре выполнения или "
"``NULL``, если ни один кадр в данный момент не выполняется. Эквивалент "
"вызова :func:`locals` в коде Python."

#: ../../c-api/reflection.rst:78
msgid ""
"To access :attr:`~frame.f_locals` on the current frame without making an "
"independent snapshot in :term:`optimized scopes <optimized scope>`, call :c:"
"func:`PyFrame_GetLocals` on the result of :c:func:`PyEval_GetFrame`."
msgstr ""
"Чтобы получить доступ к :attr:`~frame.f_locals` в текущем кадре без создания "
"независимого снимка в :term:`optimized Scops <optimized Scope>`, вызовите :c:"
"func:`PyFrame_GetLocals` для результата :c:func :`PyEval_GetFrame`."

#: ../../c-api/reflection.rst:87
msgid ""
"Return a dictionary of the global variables in the current execution frame, "
"or ``NULL`` if no frame is currently executing. Equivalent to calling :func:"
"`globals` in Python code."
msgstr ""
"Возвращает словарь глобальных переменных в текущем кадре выполнения или "
"``NULL``, если ни один кадр в данный момент не выполняется. Эквивалент "
"вызова :func:`globals` в коде Python."

#: ../../c-api/reflection.rst:96
msgid ""
"Return the name of *func* if it is a function, class or instance object, "
"else the name of *func*\\s type."
msgstr ""
"Devuelve el nombre de *func* si es una función, clase u objeto instancia, en "
"caso contrario el nombre de *func*\\s tipo."

#: ../../c-api/reflection.rst:102
msgid ""
"Return a description string, depending on the type of *func*. Return values "
"include \"()\" for functions and methods, \" constructor\", \" instance\", "
"and \" object\".  Concatenated with the result of :c:func:"
"`PyEval_GetFuncName`, the result will be a description of *func*."
msgstr ""
"Devuelve una cadena de descripción, dependiendo del tipo de *func*. Los "
"valores de retorno incluyen \"()\" para funciones y métodos, \" "
"constructor\", \" instancia\" y \" objeto\".  Concatenado con el resultado "
"de :c:func:`PyEval_GetFuncName`, el resultado será una descripción de *func*."
