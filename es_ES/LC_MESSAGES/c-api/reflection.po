# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# eulalio barbero espinosa <eulalio@disroot.org>, 2023
# Rafael Fontenelle <rffontenelle@gmail.com>, 2024
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.10\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-01-10 16:06+0000\n"
"PO-Revision-Date: 2022-11-05 17:21+0000\n"
"Last-Translator: Rafael Fontenelle <rffontenelle@gmail.com>, 2024\n"
"Language-Team: Spanish (Spain) (https://app.transifex.com/python-doc/"
"teams/5390/es_ES/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: es_ES\n"
"Plural-Forms: nplurals=3; plural=n == 1 ? 0 : n != 0 && n % 1000000 == 0 ? "
"1 : 2;\n"

#: ../../c-api/reflection.rst:6
msgid "Reflection"
msgstr "Reflexión"

#: ../../c-api/reflection.rst:10
msgid ""
"Return a dictionary of the builtins in the current execution frame, or the "
"interpreter of the thread state if no frame is currently executing."
msgstr ""
"Devuelve un diccionario de los builtins en el marco de ejecución actual, o "
"el intérprete del estado del hilo si ningún marco se está ejecutando "
"actualmente."

#: ../../c-api/reflection.rst:16
msgid ""
"Return a dictionary of the local variables in the current execution frame, "
"or ``NULL`` if no frame is currently executing."
msgstr ""
"Devuelve un diccionario de las variables locales en el marco de ejecución "
"actual, o ``NULL`` si no se está ejecutando ningún marco."

#: ../../c-api/reflection.rst:22
msgid ""
"Return a dictionary of the global variables in the current execution frame, "
"or ``NULL`` if no frame is currently executing."
msgstr ""
"Devuelve un diccionario de las variables globales en el marco de ejecución "
"actual, o ``NULL`` si no se está ejecutando ningún marco."

#: ../../c-api/reflection.rst:28
msgid ""
"Return the current thread state's frame, which is ``NULL`` if no frame is "
"currently executing."
msgstr ""
"Devuelve la trama del estado actual del hilo, que es ``NULL`` si no se está "
"ejecutando ninguna trama."

#: ../../c-api/reflection.rst:31
msgid "See also :c:func:`PyThreadState_GetFrame`."
msgstr "Ver también :c:func:`PyThreadState_GetFrame`."

#: ../../c-api/reflection.rst:36
msgid "Get the *frame* next outer frame."
msgstr "Obtiene el *cuadro* exterior siguiente."

#: ../../c-api/reflection.rst:38
msgid ""
"Return a :term:`strong reference`, or ``NULL`` if *frame* has no outer frame."
msgstr ""
"Devuelve una referencia :term:`strong`, o ``NULL`` si *frame* no tiene marco "
"exterior."

#: ../../c-api/reflection.rst:40 ../../c-api/reflection.rst:60
msgid "*frame* must not be ``NULL``."
msgstr "*frame* no debe ser ``NULL``."

#: ../../c-api/reflection.rst:47
msgid "Get the *frame* code."
msgstr "Consigue el código *frame*."

#: ../../c-api/reflection.rst:49
msgid "Return a :term:`strong reference`."
msgstr "Devuelve una :term:`strong reference`."

#: ../../c-api/reflection.rst:51
msgid ""
"*frame* must not be ``NULL``. The result (frame code) cannot be ``NULL``."
msgstr ""
"*frame* no puede ser ``NULL``. El resultado (código de trama) no puede ser "
"``NULL``."

#: ../../c-api/reflection.rst:58
msgid "Return the line number that *frame* is currently executing."
msgstr "Devuelve el número de línea que *frame* está ejecutando actualmente."

#: ../../c-api/reflection.rst:65
msgid ""
"Return the name of *func* if it is a function, class or instance object, "
"else the name of *func*\\s type."
msgstr ""
"Devuelve el nombre de *func* si es una función, clase u objeto instancia, en "
"caso contrario el nombre de *func*\\s tipo."

#: ../../c-api/reflection.rst:71
msgid ""
"Return a description string, depending on the type of *func*. Return values "
"include \"()\" for functions and methods, \" constructor\", \" instance\", "
"and \" object\".  Concatenated with the result of :c:func:"
"`PyEval_GetFuncName`, the result will be a description of *func*."
msgstr ""
"Devuelve una cadena de descripción, dependiendo del tipo de *func*. Los "
"valores de retorno incluyen \"()\" para funciones y métodos, \" "
"constructor\", \" instancia\" y \" objeto\".  Concatenado con el resultado "
"de :c:func:`PyEval_GetFuncName`, el resultado será una descripción de *func*."
