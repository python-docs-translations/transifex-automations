# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# Rafael Fontenelle <rffontenelle@gmail.com>, 2024
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.11\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-01-10 15:26+0000\n"
"PO-Revision-Date: 2023-05-24 02:09+0000\n"
"Last-Translator: Rafael Fontenelle <rffontenelle@gmail.com>, 2024\n"
"Language-Team: Spanish (Spain) (https://app.transifex.com/python-doc/"
"teams/5390/es_ES/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: es_ES\n"
"Plural-Forms: nplurals=3; plural=n == 1 ? 0 : n != 0 && n % 1000000 == 0 ? "
"1 : 2;\n"

#: ../../c-api/method.rst:6
msgid "Instance Method Objects"
msgstr "Objetos del método de instancia"

#: ../../c-api/method.rst:10
msgid ""
"An instance method is a wrapper for a :c:type:`PyCFunction` and the new way "
"to bind a :c:type:`PyCFunction` to a class object. It replaces the former "
"call ``PyMethod_New(func, NULL, class)``."
msgstr ""
"Un método de instancia es una envoltura para un :c:type:`PyCFunction` y la "
"nueva forma de vincular un :c:type:`PyCFunction` a un objeto de clase. "
"Sustituye a la antigua llamada ``PyMethod_New(func, NULL, class)``."

#: ../../c-api/method.rst:17
msgid ""
"This instance of :c:type:`PyTypeObject` represents the Python instance "
"method type. It is not exposed to Python programs."
msgstr ""
"Esta instancia de :c:type:`PyTypeObject` representa el tipo de método de "
"instancia de Python. No está expuesto a los programas Python."

#: ../../c-api/method.rst:23
msgid ""
"Return true if *o* is an instance method object (has type :c:data:"
"`PyInstanceMethod_Type`).  The parameter must not be ``NULL``. This function "
"always succeeds."
msgstr ""
"Devuelve true si *o* es un objeto de método de instancia (tiene el tipo :c:"
"data:`PyInstanceMethod_Type`).  El parámetro no debe ser ``NULL``. Esta "
"función siempre tiene éxito."

#: ../../c-api/method.rst:30
msgid ""
"Return a new instance method object, with *func* being any callable object. "
"*func* is the function that will be called when the instance method is "
"called."
msgstr ""
"Devuelve un nuevo objeto método de instancia, siendo *func* cualquier objeto "
"invocable. *func* es la función a la que se llamará cuando se llame al "
"método de instancia."

#: ../../c-api/method.rst:37
msgid "Return the function object associated with the instance method *im*."
msgstr "Devuelve el objeto función asociado al método de instancia *im*."

#: ../../c-api/method.rst:42
msgid ""
"Macro version of :c:func:`PyInstanceMethod_Function` which avoids error "
"checking."
msgstr ""
"Versión macro de :c:func:`PyInstanceMethod_Function` que evita la "
"comprobación de errores."

#: ../../c-api/method.rst:48
msgid "Method Objects"
msgstr "Método Objetos"

#: ../../c-api/method.rst:52
msgid ""
"Methods are bound function objects. Methods are always bound to an instance "
"of a user-defined class. Unbound methods (methods bound to a class object) "
"are no longer available."
msgstr ""
"Los métodos son objetos de función vinculados. Los métodos siempre están "
"vinculados a una instancia de una clase definida por el usuario. Los métodos "
"no vinculados (métodos vinculados a un objeto de clase) ya no están "
"disponibles."

#: ../../c-api/method.rst:61
msgid ""
"This instance of :c:type:`PyTypeObject` represents the Python method type.  "
"This is exposed to Python programs as ``types.MethodType``."
msgstr ""
"Esta instancia de :c:type:`PyTypeObject` representa el tipo de método "
"Python.  Se expone a los programas Python como ``types.MethodType``."

#: ../../c-api/method.rst:67
msgid ""
"Return true if *o* is a method object (has type :c:data:`PyMethod_Type`).  "
"The parameter must not be ``NULL``.  This function always succeeds."
msgstr ""
"Devuelve true si *o* es un objeto método (tiene el tipo :c:data:"
"`PyMethod_Type`).  El parámetro no debe ser ``NULL``.  Esta función siempre "
"tiene éxito."

#: ../../c-api/method.rst:73
msgid ""
"Return a new method object, with *func* being any callable object and *self* "
"the instance the method should be bound. *func* is the function that will be "
"called when the method is called. *self* must not be ``NULL``."
msgstr ""
"Devuelve un nuevo objeto método, siendo *func* cualquier objeto invocable y "
"*self* la instancia a la que el método debe estar vinculado. *func* es la "
"función a la que se llamará cuando se invoque al método. *self* no debe ser "
"``NULL``."

#: ../../c-api/method.rst:80
msgid "Return the function object associated with the method *meth*."
msgstr "Devuelve el objeto función asociado al método *meth*."

#: ../../c-api/method.rst:85
msgid ""
"Macro version of :c:func:`PyMethod_Function` which avoids error checking."
msgstr ""
"Versión macro de :c:func:`PyMethod_Function` que evita la comprobación de "
"errores."

#: ../../c-api/method.rst:90
msgid "Return the instance associated with the method *meth*."
msgstr "Devuelve la instancia asociada al método *meth*."

#: ../../c-api/method.rst:95
msgid "Macro version of :c:func:`PyMethod_Self` which avoids error checking."
msgstr ""
"Versión macro de :c:func:`PyMethod_Self` que evita la comprobación de "
"errores."

#: ../../c-api/method.rst:8 ../../c-api/method.rst:50
msgid "object"
msgstr "objeto"

#: ../../c-api/method.rst:8
msgid "instancemethod"
msgstr "método de instancia"

#: ../../c-api/method.rst:50
msgid "method"
msgstr "método"

#: ../../c-api/method.rst:59
msgid "MethodType (in module types)"
msgstr "MethodType (en tipos de módulo)"
