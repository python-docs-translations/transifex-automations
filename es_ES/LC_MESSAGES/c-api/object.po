# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# eulalio barbero espinosa <eulalio@disroot.org>, 2023
# Rafael Fontenelle <rffontenelle@gmail.com>, 2024
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.10\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-01-10 16:06+0000\n"
"PO-Revision-Date: 2022-11-05 17:21+0000\n"
"Last-Translator: Rafael Fontenelle <rffontenelle@gmail.com>, 2024\n"
"Language-Team: Spanish (Spain) (https://app.transifex.com/python-doc/"
"teams/5390/es_ES/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: es_ES\n"
"Plural-Forms: nplurals=3; plural=n == 1 ? 0 : n != 0 && n % 1000000 == 0 ? "
"1 : 2;\n"

#: ../../c-api/object.rst:6
msgid "Object Protocol"
msgstr "Protocolo de objetos"

#: ../../c-api/object.rst:11
msgid ""
"The ``NotImplemented`` singleton, used to signal that an operation is not "
"implemented for the given type combination."
msgstr ""
"El singleton ``NotImplemented``, utilizado para señalar que una operación no "
"está implementada para la combinación de tipos dada."

#: ../../c-api/object.rst:17
msgid ""
"Properly handle returning :c:data:`Py_NotImplemented` from within a C "
"function (that is, create a new :term:`strong reference` to NotImplemented "
"and return it)."
msgstr ""
"Manejar correctamente la devolución de :c:data:`Py_NotImplemented` desde "
"dentro de una función C (es decir, crear una nueva referencia :term:`strong` "
"a NotImplemented y devolverla)."

#: ../../c-api/object.rst:24
msgid ""
"Print an object *o*, on file *fp*.  Returns ``-1`` on error.  The flags "
"argument is used to enable certain printing options.  The only option "
"currently supported is :const:`Py_PRINT_RAW`; if given, the :func:`str` of "
"the object is written instead of the :func:`repr`."
msgstr ""
"Imprime un objeto *o*, en el fichero *fp*.  Devuelve ``-1`` en caso de "
"error.  El argumento flags se utiliza para activar ciertas opciones de "
"impresión.  La única opción actualmente soportada es :const:`Py_PRINT_RAW`; "
"si se da, se escribe el :func:`str` del objeto en lugar del :func:`repr`."

#: ../../c-api/object.rst:32 ../../c-api/object.rst:43
msgid ""
"Returns ``1`` if *o* has the attribute *attr_name*, and ``0`` otherwise.  "
"This is equivalent to the Python expression ``hasattr(o, attr_name)``.  This "
"function always succeeds."
msgstr ""
"Devuelve ``1`` si *o* tiene el atributo *attr_name*, y ``0`` en caso "
"contrario.  Esto es equivalente a la expresión de Python ``hasattr(o, "
"attr_name)``.  Esta función siempre tiene éxito."

#: ../../c-api/object.rst:36
msgid ""
"Note that exceptions which occur while calling :meth:`__getattr__` and :meth:"
"`__getattribute__` methods will get suppressed. To get error reporting use :"
"c:func:`PyObject_GetAttr()` instead."
msgstr ""
"Tener en cuenta que las excepciones que se produzcan al llamar a los "
"métodos :meth:`__getattr__` y :meth:`__getattribute__` se suprimirán. Para "
"obtener un informe de errores, usar en su lugar :c:func:`PyObject_GetAttr()`."

#: ../../c-api/object.rst:47
msgid ""
"Note that exceptions which occur while calling :meth:`__getattr__` and :meth:"
"`__getattribute__` methods and creating a temporary string object will get "
"suppressed. To get error reporting use :c:func:`PyObject_GetAttrString()` "
"instead."
msgstr ""
"Tener en cuenta que se suprimirán las excepciones que se produzcan al llamar "
"a los métodos :meth:`__getattr__` y :meth:`__getattribute__` y al crear un "
"objeto de cadena temporal. Para obtener un informe de errores, usar en su "
"lugar :c:func:`PyObject_GetAttrString()`."

#: ../../c-api/object.rst:55
msgid ""
"Retrieve an attribute named *attr_name* from object *o*. Returns the "
"attribute value on success, or ``NULL`` on failure.  This is the equivalent "
"of the Python expression ``o.attr_name``."
msgstr ""
"Recupera un atributo llamado *attr_name* del objeto *o*. Devuelve el valor "
"del atributo en caso de éxito, o ``NULL`` en caso de fallo.  Equivale a la "
"expresión de Python ``o.attr_name``."

#: ../../c-api/object.rst:62
msgid ""
"Retrieve an attribute named *attr_name* from object *o*. Returns the "
"attribute value on success, or ``NULL`` on failure. This is the equivalent "
"of the Python expression ``o.attr_name``."
msgstr ""
"Recupera un atributo llamado *attr_name* del objeto *o*. Devuelve el valor "
"del atributo en caso de éxito, o ``NULL`` en caso de fallo. Equivale a la "
"expresión de Python ``o.attr_name``."

#: ../../c-api/object.rst:69
msgid ""
"Generic attribute getter function that is meant to be put into a type "
"object's ``tp_getattro`` slot.  It looks for a descriptor in the dictionary "
"of classes in the object's MRO as well as an attribute in the object's :attr:"
"`~object.__dict__` (if present).  As outlined in :ref:`descriptors`, data "
"descriptors take preference over instance attributes, while non-data "
"descriptors don't.  Otherwise, an :exc:`AttributeError` is raised."
msgstr ""
"Función genérica de obtención de atributos que se coloca en la ranura "
"``tp_getattro`` de un objeto de tipo.  Busca un descriptor en el diccionario "
"de clases del MRO del objeto, así como un atributo en el :attr:`~object."
"__dict__` del objeto (si está presente).  Como se indica en :ref:"
"`descriptors`, los descriptores de datos tienen preferencia sobre los "
"atributos de instancia, mientras que los descriptores que no son de datos no "
"la tienen.  En caso contrario, se produce un :exc:`AttributeError`."

#: ../../c-api/object.rst:79 ../../c-api/object.rst:91
msgid ""
"Set the value of the attribute named *attr_name*, for object *o*, to the "
"value *v*. Raise an exception and return ``-1`` on failure; return ``0`` on "
"success.  This is the equivalent of the Python statement ``o.attr_name = v``."
msgstr ""
"Establece el valor del atributo llamado *attr_name*, para el objeto *o*, al "
"valor *v*. Lanza una excepción y devuelve ``-1`` en caso de fallo; devuelve "
"``0`` en caso de éxito.  Esto es equivalente a la sentencia de Python ``o."
"attr_name = v``."

#: ../../c-api/object.rst:84
msgid ""
"If *v* is ``NULL``, the attribute is deleted. This behaviour is deprecated "
"in favour of using :c:func:`PyObject_DelAttr`, but there are currently no "
"plans to remove it."
msgstr ""
"Si *v* es ``NULL``, el atributo se elimina. Este comportamiento está "
"obsoleto en favor del uso de :c:func:`PyObject_DelAttr`, pero actualmente no "
"hay planes para eliminarlo."

#: ../../c-api/object.rst:96
msgid ""
"If *v* is ``NULL``, the attribute is deleted, but this feature is deprecated "
"in favour of using :c:func:`PyObject_DelAttrString`."
msgstr ""
"Si *v* es ``NULL``, el atributo se elimina, pero esta función está obsoleta "
"en favor del uso de :c:func:`PyObject_DelAttrString`."

#: ../../c-api/object.rst:102
msgid ""
"Generic attribute setter and deleter function that is meant to be put into a "
"type object's :c:member:`~PyTypeObject.tp_setattro` slot.  It looks for a "
"data descriptor in the dictionary of classes in the object's MRO, and if "
"found it takes preference over setting or deleting the attribute in the "
"instance dictionary. Otherwise, the attribute is set or deleted in the "
"object's :attr:`~object.__dict__` (if present). On success, ``0`` is "
"returned, otherwise an :exc:`AttributeError` is raised and ``-1`` is "
"returned."
msgstr ""
"Función genérica de establecimiento y borrado de atributos que debe "
"colocarse en la ranura :c:member:`~PyTypeObject.tp_setattro` de un objeto de "
"tipo.  Busca un descriptor de datos en el diccionario de clases de la MRO "
"del objeto, y si lo encuentra tiene preferencia sobre el establecimiento o "
"borrado del atributo en el diccionario de instancia. De lo contrario, el "
"atributo se establece o elimina en el :attr:`~object.__dict__` del objeto "
"(si está presente). En caso de éxito, se devuelve ``0``; en caso contrario, "
"se genera un :exc:`AttributeError` y se devuelve ``-1``."

#: ../../c-api/object.rst:114 ../../c-api/object.rst:120
msgid ""
"Delete attribute named *attr_name*, for object *o*. Returns ``-1`` on "
"failure. This is the equivalent of the Python statement ``del o.attr_name``."
msgstr ""
"Elimina el atributo *attr_name* del objeto *o*. Devuelve ``-1`` en caso de "
"fallo. Equivale a la sentencia de Python ``del o.attr_name``."

#: ../../c-api/object.rst:126
msgid ""
"A generic implementation for the getter of a ``__dict__`` descriptor. It "
"creates the dictionary if necessary."
msgstr ""
"Una implementación genérica para el getter de un descriptor ``__dict__``. "
"Crea el diccionario si es necesario."

#: ../../c-api/object.rst:134
msgid ""
"A generic implementation for the setter of a ``__dict__`` descriptor. This "
"implementation does not allow the dictionary to be deleted."
msgstr ""
"Una implementación genérica para el setter de un descriptor ``__dict__``. "
"Esta implementación no permite borrar el diccionario."

#: ../../c-api/object.rst:142
msgid ""
"Compare the values of *o1* and *o2* using the operation specified by *opid*, "
"which must be one of :const:`Py_LT`, :const:`Py_LE`, :const:`Py_EQ`, :const:"
"`Py_NE`, :const:`Py_GT`, or :const:`Py_GE`, corresponding to ``<``, ``<=``, "
"``==``, ``!=``, ``>``, or ``>=`` respectively. This is the equivalent of the "
"Python expression ``o1 op o2``, where ``op`` is the operator corresponding "
"to *opid*. Returns the value of the comparison on success, or ``NULL`` on "
"failure."
msgstr ""
"Compara los valores de *o1* y *o2* utilizando la operación especificada por "
"*opid*, que debe ser una de :const:`Py_LT`, :const:`Py_LE`, :const:`Py_EQ`, :"
"const:`Py_NE`, :const:`Py_GT`, o :const:`Py_GE`, correspondientes a ``<``, "
"``<=``, ``==``, ``!=``, ``>``, o ``>=`` respectivamente. Esto equivale a la "
"expresión de Python ``o1 op o2``, donde ``op`` es el operador "
"correspondiente a *opid*. Devuelve el valor de la comparación en caso de "
"éxito, o ``NULL`` en caso de fallo."

#: ../../c-api/object.rst:152
msgid ""
"Compare the values of *o1* and *o2* using the operation specified by *opid*, "
"which must be one of :const:`Py_LT`, :const:`Py_LE`, :const:`Py_EQ`, :const:"
"`Py_NE`, :const:`Py_GT`, or :const:`Py_GE`, corresponding to ``<``, ``<=``, "
"``==``, ``!=``, ``>``, or ``>=`` respectively. Returns ``-1`` on error, "
"``0`` if the result is false, ``1`` otherwise. This is the equivalent of the "
"Python expression ``o1 op o2``, where ``op`` is the operator corresponding "
"to *opid*."
msgstr ""
"Compara los valores de *o1* y *o2* utilizando la operación especificada por "
"*opid*, que debe ser una de :const:`Py_LT`, :const:`Py_LE`, :const:`Py_EQ`, :"
"const:`Py_NE`, :const:`Py_GT`, o :const:`Py_GE`, correspondientes a ``<``, "
"``<=``, ``==``, ``!=``, ``>``, o ``>=`` respectivamente. Devuelve ``-1`` en "
"caso de error, ``0`` si el resultado es falso, ``1`` en caso contrario. "
"Equivale a la expresión de Python ``o1 op o2``, donde ``op`` es el operador "
"correspondiente a *opid*."

#: ../../c-api/object.rst:161
msgid ""
"If *o1* and *o2* are the same object, :c:func:`PyObject_RichCompareBool` "
"will always return ``1`` for :const:`Py_EQ` and ``0`` for :const:`Py_NE`."
msgstr ""
"Si *o1* y *o2* son el mismo objeto, :c:func:`PyObject_RichCompareBool` "
"devolverá siempre ``1`` para :const:`Py_EQ` y ``0`` para :const:`Py_NE`."

#: ../../c-api/object.rst:166
msgid ""
"Format *obj* using *format_spec*. This is equivalent to the Python "
"expression ``format(obj, format_spec)``."
msgstr ""
"Formatea *obj* usando *format_spec*. Esto equivale a la expresión de Python "
"``format(obj, format_spec)``."

#: ../../c-api/object.rst:169
msgid ""
"*format_spec* may be ``NULL``. In this case the call is equivalent to "
"``format(obj)``. Returns the formatted string on success, ``NULL`` on "
"failure."
msgstr ""
"*format_spec* puede ser ``NULL``. En este caso la llamada es equivalente a "
"``format(obj)``. Devuelve la cadena formateada en caso de éxito, ``NULL`` en "
"caso de fallo."

#: ../../c-api/object.rst:177
msgid ""
"Compute a string representation of object *o*.  Returns the string "
"representation on success, ``NULL`` on failure.  This is the equivalent of "
"the Python expression ``repr(o)``.  Called by the :func:`repr` built-in "
"function."
msgstr ""
"Calcula una representación de cadena del objeto *o*.  Devuelve la "
"representación de cadena en caso de éxito, ``NULL`` en caso de fallo.  "
"Equivale a la expresión de Python ``repr(o)``.  Llamada por la función "
"incorporada :func:`repr`."

#: ../../c-api/object.rst:181 ../../c-api/object.rst:205
msgid ""
"This function now includes a debug assertion to help ensure that it does not "
"silently discard an active exception."
msgstr ""
"Esta función incluye ahora una aserción de depuración para ayudar a "
"garantizar que no descarta silenciosamente una excepción activa."

#: ../../c-api/object.rst:189
msgid ""
"As :c:func:`PyObject_Repr`, compute a string representation of object *o*, "
"but escape the non-ASCII characters in the string returned by :c:func:"
"`PyObject_Repr` with ``\\x``, ``\\u`` or ``\\U`` escapes.  This generates a "
"string similar to that returned by :c:func:`PyObject_Repr` in Python 2. "
"Called by the :func:`ascii` built-in function."
msgstr ""
"Como :c:func:`PyObject_Repr`, calcula una representación de cadena del "
"objeto *o*, pero escapa los caracteres no ASCII de la cadena devuelta por :c:"
"func:`PyObject_Repr` con escapes ``\\x``, ``\\u`` o ``\\U``.  Esto genera "
"una cadena similar a la devuelta por :c:func:`PyObject_Repr` en Python 2. "
"Llamado por la función incorporada :func:`ascii`."

#: ../../c-api/object.rst:200
msgid ""
"Compute a string representation of object *o*.  Returns the string "
"representation on success, ``NULL`` on failure.  This is the equivalent of "
"the Python expression ``str(o)``.  Called by the :func:`str` built-in "
"function and, therefore, by the :func:`print` function."
msgstr ""
"Calcula una representación de cadena del objeto *o*.  Devuelve la "
"representación de cadena en caso de éxito, ``NULL`` en caso de fallo.  "
"Equivale a la expresión de Python ``str(o)``.  Llamada por la función "
"incorporada :func:`str` y, por tanto, por la función :func:`print`."

#: ../../c-api/object.rst:214
msgid ""
"Compute a bytes representation of object *o*.  ``NULL`` is returned on "
"failure and a bytes object on success.  This is equivalent to the Python "
"expression ``bytes(o)``, when *o* is not an integer.  Unlike ``bytes(o)``, a "
"TypeError is raised when *o* is an integer instead of a zero-initialized "
"bytes object."
msgstr ""
"Calcula una representación en bytes del objeto *o*. ``NULL`` se devuelve en "
"caso de fallo y un objeto bytes en caso de éxito.  Esto es equivalente a la "
"expresión de Python ``bytes(o)``, cuando *o* no es un entero.  A diferencia "
"de ``bytes(o)``, se produce un error de tipo TypeError cuando *o* es un "
"entero en lugar de un objeto bytes inicializado a cero."

#: ../../c-api/object.rst:223
msgid ""
"Return ``1`` if the class *derived* is identical to or derived from the "
"class *cls*, otherwise return ``0``.  In case of an error, return ``-1``."
msgstr ""
"Devuelve ``1`` si la clase *derived* es idéntica o derivada de la clase "
"*cls*, en caso contrario devuelve ``0``.  En caso de error, devuelve ``-1``."

#: ../../c-api/object.rst:226 ../../c-api/object.rst:245
msgid ""
"If *cls* is a tuple, the check will be done against every entry in *cls*. "
"The result will be ``1`` when at least one of the checks returns ``1``, "
"otherwise it will be ``0``."
msgstr ""
"Si *cls* es una tupla, la comprobación se realizará con cada entrada de "
"*cls*. El resultado será ``1`` cuando al menos una de las comprobaciones "
"devuelva ``1``, en caso contrario será ``0``."

#: ../../c-api/object.rst:230
msgid ""
"If *cls* has a :meth:`~class.__subclasscheck__` method, it will be called to "
"determine the subclass status as described in :pep:`3119`.  Otherwise, "
"*derived* is a subclass of *cls* if it is a direct or indirect subclass, i."
"e. contained in ``cls.__mro__``."
msgstr ""
"Si *cls* tiene un método :meth:`~class.__subclasscheck__`, se llamará a éste "
"para determinar el estado de subclase como se describe en :pep:`3119`.  En "
"caso contrario, *derived* es una subclase de *cls* si es una subclase "
"directa o indirecta, es decir, contenida en ``cls.__mro__``."

#: ../../c-api/object.rst:235
msgid ""
"Normally only class objects, i.e. instances of :class:`type` or a derived "
"class, are considered classes.  However, objects can override this by having "
"a :attr:`__bases__` attribute (which must be a tuple of base classes)."
msgstr ""
"Normalmente, sólo se consideran clases los objetos de clase, es decir, las "
"instancias de :class:`type` o de una clase derivada.  Sin embargo, los "
"objetos pueden anular esta regla si tienen un atributo :attr:`__bases__` "
"(que debe ser una tupla de clases base)."

#: ../../c-api/object.rst:242
msgid ""
"Return ``1`` if *inst* is an instance of the class *cls* or a subclass of "
"*cls*, or ``0`` if not.  On error, returns ``-1`` and sets an exception."
msgstr ""
"Devuelve ``1`` si *inst* es una instancia de la clase *cls* o una subclase "
"de *cls*, o ``0`` en caso contrario.  En caso de error, devuelve ``-1`` y "
"establece una excepción."

#: ../../c-api/object.rst:249
msgid ""
"If *cls* has a :meth:`~class.__instancecheck__` method, it will be called to "
"determine the subclass status as described in :pep:`3119`.  Otherwise, "
"*inst* is an instance of *cls* if its class is a subclass of *cls*."
msgstr ""
"Si *cls* tiene un método :meth:`~class.__instancecheck__`, se llamará para "
"determinar el estado de la subclase como se describe en :pep:`3119`.  En "
"caso contrario, *inst* es una instancia de *cls* si su clase es una subclase "
"de *cls*."

#: ../../c-api/object.rst:253
msgid ""
"An instance *inst* can override what is considered its class by having a :"
"attr:`__class__` attribute."
msgstr ""
"Una instancia *inst* puede anular lo que se considera su clase teniendo un "
"atributo :attr:`__class__`."

#: ../../c-api/object.rst:256
msgid ""
"An object *cls* can override if it is considered a class, and what its base "
"classes are, by having a :attr:`__bases__` attribute (which must be a tuple "
"of base classes)."
msgstr ""
"Un objeto *cls* puede anular si se considera una clase, y cuáles son sus "
"clases base, teniendo un atributo :attr:`__bases__` (que debe ser una tupla "
"de clases base)."

#: ../../c-api/object.rst:265
msgid ""
"Compute and return the hash value of an object *o*.  On failure, return "
"``-1``. This is the equivalent of the Python expression ``hash(o)``."
msgstr ""
"Calcula y devuelve el valor hash de un objeto *o*.  En caso de fallo, "
"devuelve ``-1``. Esto es equivalente a la expresión de Python ``hash(o)``."

#: ../../c-api/object.rst:268
msgid ""
"The return type is now Py_hash_t.  This is a signed integer the same size "
"as :c:type:`Py_ssize_t`."
msgstr ""
"El tipo de retorno es ahora Py_hash_t.  Se trata de un entero con signo del "
"mismo tamaño que :c:type:`Py_ssize_t`."

#: ../../c-api/object.rst:275
msgid ""
"Set a :exc:`TypeError` indicating that ``type(o)`` is not :term:`hashable` "
"and return ``-1``. This function receives special treatment when stored in a "
"``tp_hash`` slot, allowing a type to explicitly indicate to the interpreter "
"that it is not hashable."
msgstr ""
"Establece un :exc:`TypeError` indicando que ``type(o)`` no es :term:"
"`hashable` y devuelve ``-1``. Esta función recibe un tratamiento especial "
"cuando se almacena en una ranura ``tp_hash``, permitiendo que un tipo "
"indique explícitamente al intérprete que no es hashable."

#: ../../c-api/object.rst:283
msgid ""
"Returns ``1`` if the object *o* is considered to be true, and ``0`` "
"otherwise. This is equivalent to the Python expression ``not not o``.  On "
"failure, return ``-1``."
msgstr ""
"Devuelve ``1`` si el objeto *o* se considera verdadero, y ``0`` en caso "
"contrario. Esto es equivalente a la expresión de Python ``not not o``.  En "
"caso de fallo, devuelve ``-1``."

#: ../../c-api/object.rst:290
msgid ""
"Returns ``0`` if the object *o* is considered to be true, and ``1`` "
"otherwise. This is equivalent to the Python expression ``not o``.  On "
"failure, return ``-1``."
msgstr ""
"Devuelve ``0`` si el objeto *o* se considera verdadero, y ``1`` en caso "
"contrario. Esto es equivalente a la expresión de Python ``not o``.  En caso "
"de fallo, devuelve ``-1``."

#: ../../c-api/object.rst:299
msgid ""
"When *o* is non-``NULL``, returns a type object corresponding to the object "
"type of object *o*. On failure, raises :exc:`SystemError` and returns "
"``NULL``.  This is equivalent to the Python expression ``type(o)``. This "
"function creates a new :term:`strong reference` to the return value. There's "
"really no reason to use this function instead of the :c:func:`Py_TYPE()` "
"function, which returns a pointer of type :c:expr:`PyTypeObject*`, except "
"when a new :term:`strong reference` is needed."
msgstr ""
"Cuando *o* no es``NULL``, devuelve un objeto de tipo correspondiente al tipo "
"del objeto *o*. En caso de fallo, lanza :exc:`SystemError` y devuelve "
"``NULL``.  Esto es equivalente a la expresión de Python ``type(o)``. Esta "
"función crea una nueva :term:`strong reference`  al valor devuelto. "
"Realmente no hay razón para usar esta función en lugar de la función :c:func:"
"`Py_TYPE()`, que devuelve un puntero de tipo :c:expr:`PyTypeObject*`, "
"excepto cuando se necesita una nueva :term:`strong reference` ."

#: ../../c-api/object.rst:311
msgid ""
"Return non-zero if the object *o* is of type *type* or a subtype of *type*, "
"and ``0`` otherwise.  Both parameters must be non-``NULL``."
msgstr ""
"Devuelve un valor distinto de cero si el objeto *o* es del tipo *type* o un "
"subtipo de *type*, y ``0`` en caso contrario.  Ambos parámetros deben ser "
"distintos de``NULL``."

#: ../../c-api/object.rst:320
msgid ""
"Return the length of object *o*.  If the object *o* provides either the "
"sequence and mapping protocols, the sequence length is returned.  On error, "
"``-1`` is returned.  This is the equivalent to the Python expression "
"``len(o)``."
msgstr ""
"Devuelve la longitud del objeto *o*.  Si el objeto *o* proporciona los "
"protocolos de secuencia y asignación, se devuelve la longitud de la "
"secuencia.  En caso de error, se devuelve ``-1``.  Esto es equivalente a la "
"expresión de Python ``len(o)``."

#: ../../c-api/object.rst:327
msgid ""
"Return an estimated length for the object *o*. First try to return its "
"actual length, then an estimate using :meth:`~object.__length_hint__`, and "
"finally return the default value. On error return ``-1``. This is the "
"equivalent to the Python expression ``operator.length_hint(o, "
"defaultvalue)``."
msgstr ""
"Devuelve una longitud estimada para el objeto *o*. Primero intenta devolver "
"su longitud real, luego una estimación usando :meth:`~object."
"__length_hint__`, y finalmente devuelve el valor por defecto. En caso de "
"error devuelve ``-1``. Esto es equivalente a la expresión de Python "
"``operator.length_hint(o, defaultvalue)``."

#: ../../c-api/object.rst:337
msgid ""
"Return element of *o* corresponding to the object *key* or ``NULL`` on "
"failure. This is the equivalent of the Python expression ``o[key]``."
msgstr ""
"Devuelve el elemento de *o* correspondiente al objeto *key* o ``NULL`` en "
"caso de fallo. Equivale a la expresión de Python ``o[key]``."

#: ../../c-api/object.rst:343
msgid ""
"Map the object *key* to the value *v*.  Raise an exception and return ``-1`` "
"on failure; return ``0`` on success.  This is the equivalent of the Python "
"statement ``o[key] = v``.  This function *does not* steal a reference to *v*."
msgstr ""
"Asigna el objeto *key* al valor *v*.  Lanza una excepción y devuelve ``-1`` "
"si falla; devuelve ``0`` en caso de éxito.  Esto es equivalente a la "
"sentencia de Python ``o[key] = v``.  Esta función *no* roba una referencia a "
"*v*."

#: ../../c-api/object.rst:351
msgid ""
"Remove the mapping for the object *key* from the object *o*.  Return ``-1`` "
"on failure.  This is equivalent to the Python statement ``del o[key]``."
msgstr ""
"Elimina la asignación del objeto *key* del objeto *o*.  Devuelve ``-1`` en "
"caso de fallo.  Esto es equivalente a la sentencia de Python ``del o[key]``."

#: ../../c-api/object.rst:357
msgid ""
"This is equivalent to the Python expression ``dir(o)``, returning a "
"(possibly empty) list of strings appropriate for the object argument, or "
"``NULL`` if there was an error.  If the argument is ``NULL``, this is like "
"the Python ``dir()``, returning the names of the current locals; in this "
"case, if no execution frame is active then ``NULL`` is returned but :c:func:"
"`PyErr_Occurred` will return false."
msgstr ""
"Esto es equivalente a la expresión de Python ``dir(o)``, devolviendo una "
"lista (posiblemente vacía) de cadenas apropiadas para el argumento objeto, o "
"``NULL`` si hubo un error.  Si el argumento es ``NULL``, esto es como la "
"expresión de Python ``dir()``, devolviendo los nombres de los locales "
"actuales; en este caso, si no hay ningún marco de ejecución activo entonces "
"se devuelve ``NULL`` pero :c:func:`PyErr_Occurred` devolverá falso."

#: ../../c-api/object.rst:366
msgid ""
"This is equivalent to the Python expression ``iter(o)``. It returns a new "
"iterator for the object argument, or the object  itself if the object is "
"already an iterator.  Raises :exc:`TypeError` and returns ``NULL`` if the "
"object cannot be iterated."
msgstr ""
"Equivale a la expresión de Python ``iter(o)``. Devuelve un nuevo iterador "
"para el argumento objeto, o el objeto mismo si el objeto ya es un iterador.  "
"Lanza :exc:`TypeError` y devuelve ``NULL`` si el objeto no puede ser iterado."

#: ../../c-api/object.rst:374
msgid ""
"This is the equivalent to the Python expression ``aiter(o)``. Takes an :"
"class:`AsyncIterable` object and returns an :class:`AsyncIterator` for it. "
"This is typically a new iterator but if the argument is an :class:"
"`AsyncIterator`, this returns itself. Raises :exc:`TypeError` and returns "
"``NULL`` if the object cannot be iterated."
msgstr ""
"Equivale a la expresión de Python ``aiter(o)``. Toma un objeto :class:"
"`AsyncIterable` y devuelve un :class:`AsyncIterator` para él. Normalmente es "
"un nuevo iterador, pero si el argumento es :class:`AsyncIterator`, se "
"devuelve a sí mismo. Lanza :exc:`TypeError` y devuelve ``NULL`` si el objeto "
"no puede ser iterado."
