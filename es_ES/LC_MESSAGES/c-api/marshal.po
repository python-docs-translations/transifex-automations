# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# Rafael Fontenelle <rffontenelle@gmail.com>, 2024
# eulalio barbero espinosa <eulalio@disroot.org>, 2024
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.12\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-01-10 14:49+0000\n"
"PO-Revision-Date: 2024-05-11 00:32+0000\n"
"Last-Translator: eulalio barbero espinosa <eulalio@disroot.org>, 2024\n"
"Language-Team: Spanish (Spain) (https://app.transifex.com/python-doc/"
"teams/5390/es_ES/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: es_ES\n"
"Plural-Forms: nplurals=3; plural=n == 1 ? 0 : n != 0 && n % 1000000 == 0 ? "
"1 : 2;\n"

#: ../../c-api/marshal.rst:6
msgid "Data marshalling support"
msgstr "Soporte para la transferencia de datos"

#: ../../c-api/marshal.rst:8
msgid ""
"These routines allow C code to work with serialized objects using the same "
"data format as the :mod:`marshal` module.  There are functions to write data "
"into the serialization format, and additional functions that can be used to "
"read the data back.  Files used to store marshalled data must be opened in "
"binary mode."
msgstr ""
"Estas rutinas permiten al código C trabajar con objetos serializados "
"utilizando el mismo formato de datos que el módulo :mod:`marshal`.  Existen "
"funciones para escribir datos en el formato de serialización, y funciones "
"adicionales que pueden utilizarse para leer los datos de vuelta.  Los "
"archivos utilizados para almacenar datos marshalled deben abrirse en modo "
"binario."

#: ../../c-api/marshal.rst:14
msgid "Numeric values are stored with the least significant byte first."
msgstr ""
"Los valores numéricos se almacenan con el byte menos significativo primero."

#: ../../c-api/marshal.rst:16
msgid ""
"The module supports two versions of the data format: version 0 is the "
"historical version, version 1 shares interned strings in the file, and upon "
"unmarshalling.  Version 2 uses a binary format for floating-point numbers. "
"``Py_MARSHAL_VERSION`` indicates the current file format (currently 2)."
msgstr ""
"El módulo admite dos versiones del formato de datos: la versión 0 es la "
"versión histórica, la versión 1 comparte cadenas internadas en el archivo y "
"al desmarcarse.  La versión 2 utiliza un formato binario para números de "
"punto flotante. ``Py_MARSHAL_VERSION`` indica el formato de archivo actual "
"(actualmente 2)."

#: ../../c-api/marshal.rst:24
msgid ""
"Marshal a :c:expr:`long` integer, *value*, to *file*.  This will only write "
"the least-significant 32 bits of *value*; regardless of the size of the "
"native :c:expr:`long` type.  *version* indicates the file format."
msgstr ""
"Envía un entero :c:expr:`long`, *value*, a *file*.  Esto sólo escribirá los "
"32 bits menos significativos de *value*; independientemente del tamaño del "
"tipo nativo :c:expr:`long`.  *version* indica el formato del fichero."

#: ../../c-api/marshal.rst:28 ../../c-api/marshal.rst:36
msgid ""
"This function can fail, in which case it sets the error indicator. Use :c:"
"func:`PyErr_Occurred` to check for that."
msgstr ""
"Esta función puede fallar, en cuyo caso establece el indicador de error. "
"Usar :c:func:`PyErr_Occurred` para comprobarlo."

#: ../../c-api/marshal.rst:33
msgid ""
"Marshal a Python object, *value*, to *file*. *version* indicates the file "
"format."
msgstr ""
"Transfiere un objeto Python, *valor*, a *archivo*. *versión* indica el "
"formato del fichero."

#: ../../c-api/marshal.rst:41
msgid ""
"Return a bytes object containing the marshalled representation of *value*. "
"*version* indicates the file format."
msgstr ""
"Devuelve un objeto bytes que contiene la representación marshalled de "
"*value*. *version* indica el formato del fichero."

#: ../../c-api/marshal.rst:45
msgid "The following functions allow marshalled values to be read back in."
msgstr ""
"Las siguientes funciones permiten volver a leer los valores marshalled."

#: ../../c-api/marshal.rst:50
msgid ""
"Return a C :c:expr:`long` from the data stream in a :c:expr:`FILE*` opened "
"for reading.  Only a 32-bit value can be read in using this function, "
"regardless of the native size of :c:expr:`long`."
msgstr ""
"Devuelve un C :c:expr:`long` del flujo de datos en un :c:expr:`FILE*` "
"abierto para lectura.  Sólo se puede leer un valor de 32 bits utilizando "
"esta función, independientemente del tamaño nativo de :c:expr:`long`."

#: ../../c-api/marshal.rst:54 ../../c-api/marshal.rst:64
msgid ""
"On error, sets the appropriate exception (:exc:`EOFError`) and returns "
"``-1``."
msgstr ""
"En caso de error, establece la excepción correspondiente (:exc:`EOFError`) y "
"devuelve ``-1``."

#: ../../c-api/marshal.rst:60
msgid ""
"Return a C :c:expr:`short` from the data stream in a :c:expr:`FILE*` opened "
"for reading.  Only a 16-bit value can be read in using this function, "
"regardless of the native size of :c:expr:`short`."
msgstr ""
"Devuelve un C :c:expr:`short` del flujo de datos en un :c:expr:`FILE*` "
"abierto para lectura.  Sólo se puede leer un valor de 16 bits utilizando "
"esta función, independientemente del tamaño nativo de :c:expr:`short`."

#: ../../c-api/marshal.rst:70
msgid ""
"Return a Python object from the data stream in a :c:expr:`FILE*` opened for "
"reading."
msgstr ""
"Devuelve un objeto Python del flujo de datos en un :c:expr:`FILE*` abierto "
"para lectura."

#: ../../c-api/marshal.rst:73 ../../c-api/marshal.rst:87
#: ../../c-api/marshal.rst:96
msgid ""
"On error, sets the appropriate exception (:exc:`EOFError`, :exc:`ValueError` "
"or :exc:`TypeError`) and returns ``NULL``."
msgstr ""
"En caso de error, fija la excepción apropiada (:exc:`EOFError`, :exc:"
"`ValueError` o :exc:`TypeError`) y devuelve ``NULL``."

#: ../../c-api/marshal.rst:79
msgid ""
"Return a Python object from the data stream in a :c:expr:`FILE*` opened for "
"reading.  Unlike :c:func:`PyMarshal_ReadObjectFromFile`, this function "
"assumes that no further objects will be read from the file, allowing it to "
"aggressively load file data into memory so that the de-serialization can "
"operate from data in memory rather than reading a byte at a time from the "
"file.  Only use these variant if you are certain that you won't be reading "
"anything else from the file."
msgstr ""
"Devuelve un objeto Python del flujo de datos en un :c:expr:`FILE*` abierto "
"para lectura.  A diferencia de :c:func:`PyMarshal_ReadObjectFromFile`, esta "
"función asume que no se leerán más objetos del archivo, lo que le permite "
"cargar agresivamente los datos del archivo en memoria para que la de-"
"serialización pueda operar a partir de los datos en memoria en lugar de leer "
"un byte a la vez del archivo.  Utilice esta variante sólo si está seguro de "
"que no va a leer nada más del fichero."

#: ../../c-api/marshal.rst:93
msgid ""
"Return a Python object from the data stream in a byte buffer containing "
"*len* bytes pointed to by *data*."
msgstr ""
"Devuelve un objeto Python del flujo de datos en un buffer de bytes que "
"contiene *len* bytes apuntados por *data*."
