# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# eulalio barbero espinosa <eulalio@disroot.org>, 2023
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.10\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-01-10 16:06+0000\n"
"PO-Revision-Date: 2022-11-05 17:21+0000\n"
"Last-Translator: eulalio barbero espinosa <eulalio@disroot.org>, 2023\n"
"Language-Team: Spanish (Spain) (https://app.transifex.com/python-doc/"
"teams/5390/es_ES/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: es_ES\n"
"Plural-Forms: nplurals=3; plural=n == 1 ? 0 : n != 0 && n % 1000000 == 0 ? "
"1 : 2;\n"

#: ../../c-api/datetime.rst:6
msgid "DateTime Objects"
msgstr "Objetos DateTime"

#: ../../c-api/datetime.rst:8
msgid ""
"Various date and time objects are supplied by the :mod:`datetime` module. "
"Before using any of these functions, the header file :file:`datetime.h` must "
"be included in your source (note that this is not included by :file:`Python."
"h`), and the macro :c:macro:`PyDateTime_IMPORT` must be invoked, usually as "
"part of the module initialisation function.  The macro puts a pointer to a C "
"structure into a static variable, :c:data:`PyDateTimeAPI`, that is used by "
"the following macros."
msgstr ""
"El módulo :mod:`datetime` proporciona varios objetos de fecha y hora. Antes "
"de utilizar cualquiera de estas funciones, debe incluirse en el código "
"fuente el fichero de cabecera :file:`datetime.h` (tener en cuenta que no lo "
"incluye :file:`Python.h`), e invocar la macro :c:macro:`PyDateTime_IMPORT`, "
"normalmente como parte de la función de inicialización del módulo.  La macro "
"pone un puntero a una estructura C en una variable estática, :c:data:"
"`PyDateTimeAPI`, que es utilizada por las siguientes macros."

#: ../../c-api/datetime.rst:16
msgid "Macro for access to the UTC singleton:"
msgstr "Macro para acceder al tono sencillo de UTC:"

#: ../../c-api/datetime.rst:20
msgid ""
"Returns the time zone singleton representing UTC, the same object as :attr:"
"`datetime.timezone.utc`."
msgstr ""
"Devuelve el tono simple de zona horaria que representa UTC, el mismo objeto "
"que :attr:`datetime.timezone.utc`."

#: ../../c-api/datetime.rst:26
msgid "Type-check macros:"
msgstr "Macros de comprobación tipográfica:"

#: ../../c-api/datetime.rst:30
msgid ""
"Return true if *ob* is of type :c:data:`PyDateTime_DateType` or a subtype "
"of :c:data:`PyDateTime_DateType`.  *ob* must not be ``NULL``.  This function "
"always succeeds."
msgstr ""
"Devolver true si *ob* es del tipo :c:data:`PyDateTime_DateType` o un subtipo "
"de :c:data:`PyDateTime_DateType`.  *ob* no debe ser ``NULL``.  Esta función "
"siempre tiene éxito."

#: ../../c-api/datetime.rst:37
msgid ""
"Return true if *ob* is of type :c:data:`PyDateTime_DateType`. *ob* must not "
"be ``NULL``.  This function always succeeds."
msgstr ""
"Devuelve true si *ob* es del tipo :c:data:`PyDateTime_DateType`. *ob* no "
"debe ser ``NULL``.  Esta función siempre tiene éxito."

#: ../../c-api/datetime.rst:43
msgid ""
"Return true if *ob* is of type :c:data:`PyDateTime_DateTimeType` or a "
"subtype of :c:data:`PyDateTime_DateTimeType`.  *ob* must not be ``NULL``.  "
"This function always succeeds."
msgstr ""
"Devuelve true si *ob* es del tipo :c:data:`PyDateTime_DateTimeType` o un "
"subtipo de :c:data:`PyDateTime_DateTimeType`.  *ob* no debe ser ``NULL``.  "
"Esta función siempre tiene éxito."

#: ../../c-api/datetime.rst:50
msgid ""
"Return true if *ob* is of type :c:data:`PyDateTime_DateTimeType`. *ob* must "
"not be ``NULL``.  This function always succeeds."
msgstr ""
"Devuelve true si *ob* es del tipo :c:data:`PyDateTime_DateTimeType`. *ob* no "
"debe ser ``NULL``.  Esta función siempre tiene éxito."

#: ../../c-api/datetime.rst:56
msgid ""
"Return true if *ob* is of type :c:data:`PyDateTime_TimeType` or a subtype "
"of :c:data:`PyDateTime_TimeType`.  *ob* must not be ``NULL``.  This function "
"always succeeds."
msgstr ""
"Devuelve true si *ob* es del tipo :c:data:`PyDateTime_TimeType` o un subtipo "
"de :c:data:`PyDateTime_TimeType`.  *ob* no debe ser ``NULL``.  Esta función "
"siempre tiene éxito."

#: ../../c-api/datetime.rst:63
msgid ""
"Return true if *ob* is of type :c:data:`PyDateTime_TimeType`. *ob* must not "
"be ``NULL``.  This function always succeeds."
msgstr ""
"Devuelve true si *ob* es del tipo :c:data:`PyDateTime_TimeType`. *ob* no "
"debe ser ``NULL``.  Esta función siempre tiene éxito."

#: ../../c-api/datetime.rst:69
msgid ""
"Return true if *ob* is of type :c:data:`PyDateTime_DeltaType` or a subtype "
"of :c:data:`PyDateTime_DeltaType`.  *ob* must not be ``NULL``.  This "
"function always succeeds."
msgstr ""
"Devuelve true si *ob* es del tipo :c:data:`PyDateTime_DeltaType` o un "
"subtipo de :c:data:`PyDateTime_DeltaType`.  *ob* no debe ser ``NULL``.  Esta "
"función siempre tiene éxito."

#: ../../c-api/datetime.rst:76
msgid ""
"Return true if *ob* is of type :c:data:`PyDateTime_DeltaType`. *ob* must not "
"be ``NULL``.  This function always succeeds."
msgstr ""
"Devuelve true si *ob* es del tipo :c:data:`PyDateTime_DeltaType`. *ob* no "
"debe ser ``NULL``.  Esta función siempre tiene éxito."

#: ../../c-api/datetime.rst:82
msgid ""
"Return true if *ob* is of type :c:data:`PyDateTime_TZInfoType` or a subtype "
"of :c:data:`PyDateTime_TZInfoType`.  *ob* must not be ``NULL``.  This "
"function always succeeds."
msgstr ""
"Devuelve true si *ob* es del tipo :c:data:`PyDateTime_TZInfoType` o un "
"subtipo de :c:data:`PyDateTime_TZInfoType`.  *ob* no debe ser ``NULL``.  "
"Esta función siempre tiene éxito."

#: ../../c-api/datetime.rst:89
msgid ""
"Return true if *ob* is of type :c:data:`PyDateTime_TZInfoType`. *ob* must "
"not be ``NULL``.  This function always succeeds."
msgstr ""
"Devuelve true si *ob* es del tipo :c:data:`PyDateTime_TZInfoType`. *ob* no "
"debe ser ``NULL``.  Esta función siempre tiene éxito."

#: ../../c-api/datetime.rst:93
msgid "Macros to create objects:"
msgstr "Macros para crear objetos:"

#: ../../c-api/datetime.rst:97
msgid ""
"Return a :class:`datetime.date` object with the specified year, month and "
"day."
msgstr ""
"Devuelve un objeto :class:`datetime.date` con el año, mes y día "
"especificados."

#: ../../c-api/datetime.rst:102
msgid ""
"Return a :class:`datetime.datetime` object with the specified year, month, "
"day, hour, minute, second and microsecond."
msgstr ""
"Devuelve un objeto :class:`datetime.datetime` con el año, mes, día, hora, "
"minuto, segundo y microsegundo especificados."

#: ../../c-api/datetime.rst:108
msgid ""
"Return a :class:`datetime.datetime` object with the specified year, month, "
"day, hour, minute, second, microsecond and fold."
msgstr ""
"Devuelve un objeto :class:`datetime.datetime` con el año, mes, día, hora, "
"minuto, segundo, microsegundo y pliegue especificados."

#: ../../c-api/datetime.rst:116
msgid ""
"Return a :class:`datetime.time` object with the specified hour, minute, "
"second and microsecond."
msgstr ""
"Devuelve un objeto :class:`datetime.time` con la hora, minuto, segundo y "
"microsegundo especificados."

#: ../../c-api/datetime.rst:122
msgid ""
"Return a :class:`datetime.time` object with the specified hour, minute, "
"second, microsecond and fold."
msgstr ""
"Devuelve un objeto :class:`datetime.time` con la hora, minuto, segundo, "
"microsegundo y pliegue especificados."

#: ../../c-api/datetime.rst:130
msgid ""
"Return a :class:`datetime.timedelta` object representing the given number of "
"days, seconds and microseconds.  Normalization is performed so that the "
"resulting number of microseconds and seconds lie in the ranges documented "
"for :class:`datetime.timedelta` objects."
msgstr ""
"Devuelve un objeto :class:`datetime.timedelta` que representa el número dado "
"de días, segundos y microsegundos.  La normalización se realiza de forma que "
"el número resultante de microsegundos y segundos se encuentre dentro de los "
"rangos documentados para los objetos :class:`datetime.timedelta`."

#: ../../c-api/datetime.rst:138
msgid ""
"Return a :class:`datetime.timezone` object with an unnamed fixed offset "
"represented by the *offset* argument."
msgstr ""
"Devuelve un objeto :class:`datetime.timezone` con un desplazamiento fijo sin "
"nombre representado por el argumento *offset*."

#: ../../c-api/datetime.rst:146
msgid ""
"Return a :class:`datetime.timezone` object with a fixed offset represented "
"by the *offset* argument and with tzname *name*."
msgstr ""
"Devuelve un objeto :class:`datetime.timezone` con un desplazamiento fijo "
"representado por el argumento *offset* y con tzname *name*."

#: ../../c-api/datetime.rst:152
msgid ""
"Macros to extract fields from date objects.  The argument must be an "
"instance of :c:data:`PyDateTime_Date`, including subclasses (such as :c:data:"
"`PyDateTime_DateTime`).  The argument must not be ``NULL``, and the type is "
"not checked:"
msgstr ""
"Macros para extraer campos de objetos de fecha.  El argumento debe ser una "
"instancia de :c:data:`PyDateTime_Date`, incluidas las subclases (como :c:"
"data:`PyDateTime_DateTime`).  El argumento no debe ser ``NULL``, y no se "
"comprueba el tipo:"

#: ../../c-api/datetime.rst:159
msgid "Return the year, as a positive int."
msgstr "Devuelve el año, como un int positivo."

#: ../../c-api/datetime.rst:164
msgid "Return the month, as an int from 1 through 12."
msgstr "Devuelve el mes, como un int de 1 a 12."

#: ../../c-api/datetime.rst:169
msgid "Return the day, as an int from 1 through 31."
msgstr "Devuelve el día, como un int de 1 a 31."

#: ../../c-api/datetime.rst:172
msgid ""
"Macros to extract fields from datetime objects.  The argument must be an "
"instance of :c:data:`PyDateTime_DateTime`, including subclasses. The "
"argument must not be ``NULL``, and the type is not checked:"
msgstr ""
"Macros para extraer campos de objetos datetime.  El argumento debe ser una "
"instancia de :c:data:`PyDateTime_DateTime`, incluidas las subclases. El "
"argumento no debe ser ``NULL``, y no se comprueba el tipo:"

#: ../../c-api/datetime.rst:178 ../../c-api/datetime.rst:216
msgid "Return the hour, as an int from 0 through 23."
msgstr "Devuelve la hora, como un int de 0 a 23."

#: ../../c-api/datetime.rst:183 ../../c-api/datetime.rst:221
msgid "Return the minute, as an int from 0 through 59."
msgstr "Devuelve el minuto, como un int de 0 a 59."

#: ../../c-api/datetime.rst:188 ../../c-api/datetime.rst:226
msgid "Return the second, as an int from 0 through 59."
msgstr "Devuelve el segundo, como un int de 0 a 59."

#: ../../c-api/datetime.rst:193 ../../c-api/datetime.rst:231
msgid "Return the microsecond, as an int from 0 through 999999."
msgstr "Devuelve el microsegundo, como un int de 0 a 999999."

#: ../../c-api/datetime.rst:198 ../../c-api/datetime.rst:236
msgid "Return the fold, as an int from 0 through 1."
msgstr "Devuelve la vez, como un int de 0 a 1."

#: ../../c-api/datetime.rst:205 ../../c-api/datetime.rst:243
msgid "Return the tzinfo (which may be ``None``)."
msgstr "Devuelve el tzinfo (que puede ser ``None``)."

#: ../../c-api/datetime.rst:210
msgid ""
"Macros to extract fields from time objects.  The argument must be an "
"instance of :c:data:`PyDateTime_Time`, including subclasses. The argument "
"must not be ``NULL``, and the type is not checked:"
msgstr ""
"Macros para extraer campos de objetos temporales.  El argumento debe ser una "
"instancia de :c:data:`PyDateTime_Time`, incluidas las subclases. El "
"argumento no debe ser ``NULL``, y no se comprueba el tipo:"

#: ../../c-api/datetime.rst:248
msgid ""
"Macros to extract fields from time delta objects.  The argument must be an "
"instance of :c:data:`PyDateTime_Delta`, including subclasses. The argument "
"must not be ``NULL``, and the type is not checked:"
msgstr ""
"Macros para extraer campos de objetos delta de tiempo.  El argumento debe "
"ser una instancia de :c:data:`PyDateTime_Delta`, incluidas las subclases. El "
"argumento no debe ser ``NULL``, y no se comprueba el tipo:"

#: ../../c-api/datetime.rst:254
msgid "Return the number of days, as an int from -999999999 to 999999999."
msgstr "Devuelve el número de días, como un int de -999999999 a 999999999."

#: ../../c-api/datetime.rst:261
msgid "Return the number of seconds, as an int from 0 through 86399."
msgstr "Devuelve el número de segundos, como un int de 0 a 86399."

#: ../../c-api/datetime.rst:268
msgid "Return the number of microseconds, as an int from 0 through 999999."
msgstr "Devuelve el número de microsegundos, como un int de 0 a 999999."

#: ../../c-api/datetime.rst:273
msgid "Macros for the convenience of modules implementing the DB API:"
msgstr "Macros para comodidad de los módulos que implementan la DB API:"

#: ../../c-api/datetime.rst:277
msgid ""
"Create and return a new :class:`datetime.datetime` object given an argument "
"tuple suitable for passing to :meth:`datetime.datetime.fromtimestamp()`."
msgstr ""
"Crea y devuelve un nuevo objeto :class:`datetime.datetime` dada una tupla de "
"argumentos adecuada para pasar a :meth:`datetime.datetime.fromtimestamp()`."

#: ../../c-api/datetime.rst:283
msgid ""
"Create and return a new :class:`datetime.date` object given an argument "
"tuple suitable for passing to :meth:`datetime.date.fromtimestamp()`."
msgstr ""
"Crea y devuelve un nuevo objeto :class:`datetime.date` dada una tupla de "
"argumentos adecuada para pasar a :meth:`datetime.date.fromtimestamp()`."
