# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# Rafael Fontenelle <rffontenelle@gmail.com>, 2024
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.11\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-01-03 15:28+0000\n"
"PO-Revision-Date: 2023-05-24 02:08+0000\n"
"Last-Translator: Rafael Fontenelle <rffontenelle@gmail.com>, 2024\n"
"Language-Team: Spanish (Spain) (https://app.transifex.com/python-doc/"
"teams/5390/es_ES/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: es_ES\n"
"Plural-Forms: nplurals=3; plural=n == 1 ? 0 : n != 0 && n % 1000000 == 0 ? "
"1 : 2;\n"

#: ../../c-api/dict.rst:6
msgid "Dictionary Objects"
msgstr "Objetos del diccionario"

#: ../../c-api/dict.rst:13
msgid ""
"This subtype of :c:type:`PyObject` represents a Python dictionary object."
msgstr ""
"Este subtipo de :c:type:`PyObject` representa un objeto diccionario Python."

#: ../../c-api/dict.rst:18
msgid ""
"This instance of :c:type:`PyTypeObject` represents the Python dictionary "
"type.  This is the same object as :class:`dict` in the Python layer."
msgstr ""
"Esta instancia de :c:type:`PyTypeObject` representa el tipo de diccionario "
"Python.  Es el mismo objeto que :class:`dict` en la capa Python."

#: ../../c-api/dict.rst:24
msgid ""
"Return true if *p* is a dict object or an instance of a subtype of the dict "
"type.  This function always succeeds."
msgstr ""
"Devuelve true si *p* es un objeto dict o una instancia de un subtipo del "
"tipo dict.  Esta función siempre tiene éxito."

#: ../../c-api/dict.rst:30
msgid ""
"Return true if *p* is a dict object, but not an instance of a subtype of the "
"dict type.  This function always succeeds."
msgstr ""
"Devuelve true si *p* es un objeto dict, pero no una instancia de un subtipo "
"del tipo dict.  Esta función siempre tiene éxito."

#: ../../c-api/dict.rst:36
msgid "Return a new empty dictionary, or ``NULL`` on failure."
msgstr "Devuelve un nuevo diccionario vacío, o ``NULL`` en caso de fallo."

#: ../../c-api/dict.rst:41
msgid ""
"Return a :class:`types.MappingProxyType` object for a mapping which enforces "
"read-only behavior.  This is normally used to create a view to prevent "
"modification of the dictionary for non-dynamic class types."
msgstr ""
"Devuelve un objeto :class:`types.MappingProxyType` para una asignación que "
"impone un comportamiento de sólo lectura.  Normalmente se utiliza para crear "
"una vista que impida la modificación del diccionario para tipos de clase no "
"dinámicos."

#: ../../c-api/dict.rst:48
msgid "Empty an existing dictionary of all key-value pairs."
msgstr "Vacía un diccionario existente de todos los pares clave-valor."

#: ../../c-api/dict.rst:53
msgid ""
"Determine if dictionary *p* contains *key*.  If an item in *p* is matches "
"*key*, return ``1``, otherwise return ``0``.  On error, return ``-1``. This "
"is equivalent to the Python expression ``key in p``."
msgstr ""
"Determina si el diccionario *p* contiene *key*. Si un elemento de *p* "
"coincide con *key*, devuelve ``1``, en caso contrario devuelve ``0``. En "
"caso de error, devuelve ``-1``. Esto es equivalente a la expresión Python "
"``key in p``."

#: ../../c-api/dict.rst:60
msgid "Return a new dictionary that contains the same key-value pairs as *p*."
msgstr ""
"Devuelve un nuevo diccionario que contiene los mismos pares clave-valor que "
"*p*."

#: ../../c-api/dict.rst:65
msgid ""
"Insert *val* into the dictionary *p* with a key of *key*.  *key* must be :"
"term:`hashable`; if it isn't, :exc:`TypeError` will be raised. Return ``0`` "
"on success or ``-1`` on failure.  This function *does not* steal a reference "
"to *val*."
msgstr ""
"Inserta *val* en el diccionario *p* con clave *key*.  *key* debe ser :term:"
"`hashable`; si no lo es, aparecerá :exc:`TypeError`. Devuelve ``0`` en caso "
"de éxito o ``-1`` en caso de fallo.  Esta función *no* roba una referencia a "
"*val*."

#: ../../c-api/dict.rst:73
msgid ""
"This is the same as :c:func:`PyDict_SetItem`, but *key* is specified as a :c:"
"expr:`const char*` UTF-8 encoded bytes string, rather than a :c:expr:"
"`PyObject*`."
msgstr ""
"Es lo mismo que :c:func:`PyDict_SetItem`, pero *key* se especifica como una "
"cadena de bytes :c:expr:`const char*` codificada en UTF-8, en lugar de :c:"
"expr:`PyObject*`."

#: ../../c-api/dict.rst:80
msgid ""
"Remove the entry in dictionary *p* with key *key*. *key* must be :term:"
"`hashable`; if it isn't, :exc:`TypeError` is raised. If *key* is not in the "
"dictionary, :exc:`KeyError` is raised. Return ``0`` on success or ``-1`` on "
"failure."
msgstr ""
"Elimina la entrada del diccionario *p* con la clave *key*. La clave *key* "
"debe ser :term:`hashable`; si no lo es, aparece :exc:`TypeError`. Si *clave* "
"no está en el diccionario, se muestra :exc:`KeyError`. Devuelve ``0`` en "
"caso de éxito o ``-1`` en caso de fallo."

#: ../../c-api/dict.rst:88
msgid ""
"This is the same as :c:func:`PyDict_DelItem`, but *key* is specified as a :c:"
"expr:`const char*` UTF-8 encoded bytes string, rather than a :c:expr:"
"`PyObject*`."
msgstr ""
"Es lo mismo que :c:func:`PyDict_DelItem`, pero *key* se especifica como una "
"cadena de bytes :c:expr:`const char*` codificada en UTF-8, en lugar de :c:"
"expr:`PyObject*`."

#: ../../c-api/dict.rst:95
msgid ""
"Return the object from dictionary *p* which has a key *key*.  Return "
"``NULL`` if the key *key* is not present, but *without* setting an exception."
msgstr ""
"Devuelve el objeto del diccionario *p* que tiene una clave *key*.  Devuelve "
"``NULL`` si la clave *key* no está presente, pero *without* establece una "
"excepción."

#: ../../c-api/dict.rst:100
msgid ""
"Exceptions that occur while this calls :meth:`~object.__hash__` and :meth:"
"`~object.__eq__` methods are silently ignored. Prefer the :c:func:"
"`PyDict_GetItemWithError` function instead."
msgstr ""
"Las excepciones que se producen mientras esto llama a los métodos :meth:"
"`~object.__hash__` y :meth:`~object.__eq__` se ignoran silenciosamente. "
"Prefiera la función :c:func:`PyDict_GetItemWithError` en su lugar."

#: ../../c-api/dict.rst:104
msgid ""
"Calling this API without :term:`GIL` held had been allowed for historical "
"reason. It is no longer allowed."
msgstr ""
"La llamada a esta API sin :term:`GIL` se había permitido por razones "
"históricas. Ya no se permite."

#: ../../c-api/dict.rst:111
msgid ""
"Variant of :c:func:`PyDict_GetItem` that does not suppress exceptions. "
"Return ``NULL`` **with** an exception set if an exception occurred.  Return "
"``NULL`` **without** an exception set if the key wasn't present."
msgstr ""
"Variante de :c:func:`PyDict_GetItem` que no suprime las excepciones. "
"Devuelve ``NULL`` **with** una excepción establecida si se produjo una "
"excepción.  Devuelve ``NULL`` **without** un conjunto de excepciones si la "
"clave no estaba presente."

#: ../../c-api/dict.rst:119
msgid ""
"This is the same as :c:func:`PyDict_GetItem`, but *key* is specified as a :c:"
"expr:`const char*` UTF-8 encoded bytes string, rather than a :c:expr:"
"`PyObject*`."
msgstr ""
"Es lo mismo que :c:func:`PyDict_GetItem`, pero *key* se especifica como una "
"cadena de bytes :c:expr:`const char*` codificada en UTF-8, en lugar de :c:"
"expr:`PyObject*`."

#: ../../c-api/dict.rst:125
msgid ""
"Exceptions that occur while this calls :meth:`~object.__hash__` and :meth:"
"`~object.__eq__` methods or while creating the temporary :class:`str` object "
"are silently ignored. Prefer using the :c:func:`PyDict_GetItemWithError` "
"function with your own :c:func:`PyUnicode_FromString` *key* instead."
msgstr ""
"Las excepciones que se producen mientras esto llama a los métodos :meth:"
"`~object.__hash__` y :meth:`~object.__eq__` o mientras se crea el objeto "
"temporal :class:`str` se ignoran silenciosamente. Prefiera utilizar la "
"función :c:func:`PyDict_GetItemWithError` con su propia :c:func:"
"`PyUnicode_FromString` *key* en su lugar."

#: ../../c-api/dict.rst:134
msgid ""
"This is the same as the Python-level :meth:`dict.setdefault`.  If present, "
"it returns the value corresponding to *key* from the dictionary *p*.  If the "
"key is not in the dict, it is inserted with value *defaultobj* and "
"*defaultobj* is returned.  This function evaluates the hash function of "
"*key* only once, instead of evaluating it independently for the lookup and "
"the insertion."
msgstr ""
"Es lo mismo que el nivel de Python :meth:`dict.setdefault`.  Si está "
"presente, devuelve el valor correspondiente a *key* del diccionario *p*.  Si "
"la clave no está en el diccionario, se inserta con el valor *defaultobj* y "
"se devuelve *defaultobj*.  Esta función evalúa la función hash de *key* una "
"sola vez, en lugar de evaluarla independientemente para la búsqueda y la "
"inserción."

#: ../../c-api/dict.rst:144
msgid ""
"Return a :c:type:`PyListObject` containing all the items from the dictionary."
msgstr ""
"Devuelve un :c:type:`PyListObject` que contiene todos los elementos del "
"diccionario."

#: ../../c-api/dict.rst:149
msgid ""
"Return a :c:type:`PyListObject` containing all the keys from the dictionary."
msgstr ""
"Devuelve un :c:type:`PyListObject` que contiene todas las claves del "
"diccionario."

#: ../../c-api/dict.rst:154
msgid ""
"Return a :c:type:`PyListObject` containing all the values from the "
"dictionary *p*."
msgstr ""
"Devuelve un :c:type:`PyListObject` que contiene todos los valores del "
"diccionario *p*."

#: ../../c-api/dict.rst:162
msgid ""
"Return the number of items in the dictionary.  This is equivalent to "
"``len(p)`` on a dictionary."
msgstr ""
"Devuelve el número de elementos del diccionario.  Esto equivale a ``len(p)`` "
"en un diccionario."

#: ../../c-api/dict.rst:168
msgid ""
"Iterate over all key-value pairs in the dictionary *p*.  The :c:type:"
"`Py_ssize_t` referred to by *ppos* must be initialized to ``0`` prior to the "
"first call to this function to start the iteration; the function returns "
"true for each pair in the dictionary, and false once all pairs have been "
"reported.  The parameters *pkey* and *pvalue* should either point to :c:expr:"
"`PyObject*` variables that will be filled in with each key and value, "
"respectively, or may be ``NULL``.  Any references returned through them are "
"borrowed.  *ppos* should not be altered during iteration. Its value "
"represents offsets within the internal dictionary structure, and since the "
"structure is sparse, the offsets are not consecutive."
msgstr ""
"Recorre todos los pares clave-valor del diccionario *p*.  El :c:type:"
"`Py_ssize_t` al que hace referencia *ppos* debe inicializarse a ``0`` antes "
"de la primera llamada a esta función para iniciar la iteración; la función "
"devuelve true para cada par del diccionario, y false una vez que se han "
"informado todos los pares.  Los parámetros *pkey* y *pvalue* deben apuntar a "
"variables :c:expr:`PyObject*` que se rellenarán con cada clave y valor, "
"respectivamente, o pueden ser ``NULL``.  Cualquier referencia devuelta a "
"través de ellos se toma prestada.  *ppos* no debe alterarse durante la "
"iteración. Su valor representa desplazamientos dentro de la estructura "
"interna del diccionario, y como la estructura es dispersa, los "
"desplazamientos no son consecutivos."

#: ../../c-api/dict.rst:179
msgid "For example::"
msgstr "Por ejemplo::"

#: ../../c-api/dict.rst:189
msgid ""
"The dictionary *p* should not be mutated during iteration.  It is safe to "
"modify the values of the keys as you iterate over the dictionary, but only "
"so long as the set of keys does not change.  For example::"
msgstr ""
"El diccionario *p* no debe mutar durante la iteración.  Es seguro modificar "
"los valores de las claves al iterar sobre el diccionario, pero sólo mientras "
"el conjunto de claves no cambie.  Por ejemplo::"

#: ../../c-api/dict.rst:214
msgid ""
"Iterate over mapping object *b* adding key-value pairs to dictionary *a*. "
"*b* may be a dictionary, or any object supporting :c:func:`PyMapping_Keys` "
"and :c:func:`PyObject_GetItem`. If *override* is true, existing pairs in *a* "
"will be replaced if a matching key is found in *b*, otherwise pairs will "
"only be added if there is not a matching key in *a*. Return ``0`` on success "
"or ``-1`` if an exception was raised."
msgstr ""
"Iterar sobre el objeto de mapeo *b* añadiendo pares clave-valor al "
"diccionario *a*. *b* puede ser un diccionario, o cualquier objeto que "
"soporte :c:func:`PyMapping_Keys` y :c:func:`PyObject_GetItem`. Si *override* "
"es true, los pares existentes en *a* serán reemplazados si se encuentra una "
"clave coincidente en *b*, de lo contrario sólo se añadirán pares si no hay "
"una clave coincidente en *a*. Devuelve ``0`` en caso de éxito o ``-1`` si se "
"produce una excepción."

#: ../../c-api/dict.rst:224
msgid ""
"This is the same as ``PyDict_Merge(a, b, 1)`` in C, and is similar to ``a."
"update(b)`` in Python except that :c:func:`PyDict_Update` doesn't fall back "
"to the iterating over a sequence of key value pairs if the second argument "
"has no \"keys\" attribute.  Return ``0`` on success or ``-1`` if an "
"exception was raised."
msgstr ""
"Esto es lo mismo que ``PyDict_Merge(a, b, 1)`` en C, y es similar a ``a."
"update(b)`` en Python excepto que :c:func:`PyDict_Update` no vuelve a la "
"iteración sobre una secuencia de pares clave-valor si el segundo argumento "
"no tiene el atributo \"keys\".  Devuelve ``0`` en caso de éxito o ``-1`` si "
"se produce una excepción."

#: ../../c-api/dict.rst:233
msgid ""
"Update or merge into dictionary *a*, from the key-value pairs in *seq2*. "
"*seq2* must be an iterable object producing iterable objects of length 2, "
"viewed as key-value pairs.  In case of duplicate keys, the last wins if "
"*override* is true, else the first wins. Return ``0`` on success or ``-1`` "
"if an exception was raised. Equivalent Python (except for the return value)::"
msgstr ""
"Actualizar o fusionar en el diccionario *a*, a partir de los pares clave-"
"valor en *seq2*. *seq2* debe ser un objeto iterable que produzca objetos "
"iterables de longitud 2, vistos como pares clave-valor.  En caso de claves "
"duplicadas, gana la última si *override* es verdadero, si no, gana la "
"primera. Devuelve ``0`` en caso de éxito o ``-1`` si se produce una "
"excepción. Python equivalente (excepto por el valor de retorno)::"

#: ../../c-api/dict.rst:8
msgid "object"
msgstr "objeto"

#: ../../c-api/dict.rst:8
msgid "dictionary"
msgstr "diccionario"

#: ../../c-api/dict.rst:160
msgid "built-in function"
msgstr "función incorporada"

#: ../../c-api/dict.rst:160
msgid "len"
msgstr "len"
