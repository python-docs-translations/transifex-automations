# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# eulalio barbero espinosa <eulalio@disroot.org>, 2023
# Rafael Fontenelle <rffontenelle@gmail.com>, 2024
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.10\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-01-10 16:06+0000\n"
"PO-Revision-Date: 2022-11-05 17:21+0000\n"
"Last-Translator: Rafael Fontenelle <rffontenelle@gmail.com>, 2024\n"
"Language-Team: Spanish (Spain) (https://app.transifex.com/python-doc/"
"teams/5390/es_ES/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: es_ES\n"
"Plural-Forms: nplurals=3; plural=n == 1 ? 0 : n != 0 && n % 1000000 == 0 ? "
"1 : 2;\n"

#: ../../c-api/conversion.rst:6
msgid "String conversion and formatting"
msgstr "Conversión y formateo de cadenas"

#: ../../c-api/conversion.rst:8
msgid "Functions for number conversion and formatted string output."
msgstr ""
"Funciones para la conversión de números y la salida de cadenas formateadas."

#: ../../c-api/conversion.rst:13
msgid ""
"Output not more than *size* bytes to *str* according to the format string "
"*format* and the extra arguments. See the Unix man page :manpage:"
"`snprintf(3)`."
msgstr ""
"Imprime no más de *size* bytes en *str* de acuerdo con la cadena de formato "
"*format* y los argumentos extra. Ver la página man de Unix :manpage:"
"`snprintf(3)`."

#: ../../c-api/conversion.rst:19
msgid ""
"Output not more than *size* bytes to *str* according to the format string "
"*format* and the variable argument list *va*. Unix man page :manpage:"
"`vsnprintf(3)`."
msgstr ""
"Imprime no más de *size* bytes en *str* de acuerdo con la cadena de formato "
"*format* y la lista de argumentos variables *va*. Ver la página man de "
"Unix  :manpage:`vsnprintf(3)`."

#: ../../c-api/conversion.rst:23
msgid ""
":c:func:`PyOS_snprintf` and :c:func:`PyOS_vsnprintf` wrap the Standard C "
"library functions :c:func:`snprintf` and :c:func:`vsnprintf`. Their purpose "
"is to guarantee consistent behavior in corner cases, which the Standard C "
"functions do not."
msgstr ""
":c:func:`PyOS_snprintf` y :c:func:`PyOS_vsnprintf` envuelven las funciones "
"de la biblioteca C estándar :c:func:`snprintf` y :c:func:`vsnprintf`. Su "
"propósito es garantizar un comportamiento coherente en casos extremos, algo "
"que las funciones estándar de C no hacen."

#: ../../c-api/conversion.rst:28
msgid ""
"The wrappers ensure that ``str[size-1]`` is always ``'\\0'`` upon return. "
"They never write more than *size* bytes (including the trailing ``'\\0'``) "
"into str. Both functions require that ``str != NULL``, ``size > 0``, "
"``format != NULL`` and ``size < INT_MAX``. Note that this means there is no "
"equivalent to the C99 ``n = snprintf(NULL, 0, ...)`` which would determine "
"the necessary buffer size."
msgstr ""
"Las envolturas aseguran que ``str[size-1]`` es siempre ``'\\0'`` al volver. "
"Nunca escriben más de *tamaño* bytes (incluido el final ``'\\0'``) en str. "
"Ambas funciones requieren que ``str != NULL``, ``size > 0``, ``format != "
"NULL`` y ``size < INT_MAX``. Nótese que esto significa que no hay un "
"equivalente al ``n = snprintf(NULL, 0, ...)`` de C99 que determinaría el "
"tamaño necesario del buffer."

#: ../../c-api/conversion.rst:34
msgid ""
"The return value (*rv*) for these functions should be interpreted as follows:"
msgstr ""
"El valor de retorno (*rv*) de estas funciones debe interpretarse como sigue:"

#: ../../c-api/conversion.rst:36
msgid ""
"When ``0 <= rv < size``, the output conversion was successful and *rv* "
"characters were written to *str* (excluding the trailing ``'\\0'`` byte at "
"``str[rv]``)."
msgstr ""
"Cuando ``0 <= rv < size``, la conversión de salida tuvo éxito y *rv* "
"caracteres se escribieron en *str* (excluyendo el byte ``'\\0'`` final en "
"``str[rv]``)."

#: ../../c-api/conversion.rst:40
msgid ""
"When ``rv >= size``, the output conversion was truncated and a buffer with "
"``rv + 1`` bytes would have been needed to succeed. ``str[size-1]`` is "
"``'\\0'`` in this case."
msgstr ""
"Cuando ``rv >= size``, la conversión de salida se truncó y se habría "
"necesitado un búfer con ``rv + 1`` bytes para tener éxito. ``str[size-1]`` "
"es ``'\\0'`` en este caso."

#: ../../c-api/conversion.rst:44
msgid ""
"When ``rv < 0``, \"something bad happened.\" ``str[size-1]`` is ``'\\0'`` in "
"this case too, but the rest of *str* is undefined. The exact cause of the "
"error depends on the underlying platform."
msgstr ""
"Cuando ``rv < 0``, \"algo malo sucedió\". ``str[size-1]`` es ``'\\0'`` en "
"este caso también, pero el resto de *str* es indefinido. La causa exacta del "
"error depende de la plataforma subyacente."

#: ../../c-api/conversion.rst:49
msgid ""
"The following functions provide locale-independent string to number "
"conversions."
msgstr ""
"Las siguientes funciones proporcionan conversiones de cadenas a números "
"independientes de la localización."

#: ../../c-api/conversion.rst:53
msgid ""
"Convert a string ``s`` to a :c:expr:`double`, raising a Python exception on "
"failure.  The set of accepted strings corresponds to the set of strings "
"accepted by Python's :func:`float` constructor, except that ``s`` must not "
"have leading or trailing whitespace. The conversion is independent of the "
"current locale."
msgstr ""
"Convierte una cadena ``s`` en :c:expr:`double`, lanzando una excepción "
"Python en caso de fallo.  El conjunto de cadenas aceptadas corresponde al "
"conjunto de cadenas aceptadas por el constructor :func:`float` de Python, "
"excepto que ``s`` no debe tener espacios en blanco iniciales ni finales. La "
"conversión es independiente de la configuración regional actual."

#: ../../c-api/conversion.rst:59
msgid ""
"If ``endptr`` is ``NULL``, convert the whole string.  Raise :exc:"
"`ValueError` and return ``-1.0`` if the string is not a valid representation "
"of a floating-point number."
msgstr ""
"Si ``endptr`` es ``NULL``, convierte la cadena completa.  Lanza :exc:"
"`ValueError` y devuelve ``-1.0`` si la cadena no es una representación "
"válida de un número en coma flotante."

#: ../../c-api/conversion.rst:63
msgid ""
"If endptr is not ``NULL``, convert as much of the string as possible and set "
"``*endptr`` to point to the first unconverted character.  If no initial "
"segment of the string is the valid representation of a floating-point "
"number, set ``*endptr`` to point to the beginning of the string, raise "
"ValueError, and return ``-1.0``."
msgstr ""
"Si endptr no es ``NULL``, convierte la mayor parte posible de la cadena y "
"establece ``*endptr`` para que apunte al primer carácter no convertido.  Si "
"ningún segmento inicial de la cadena es la representación válida de un "
"número de coma flotante, poner ``*endptr`` para que apunte al principio de "
"la cadena, lanzar ValueError y devolver ``-1.0``."

#: ../../c-api/conversion.rst:70
msgid ""
"If ``s`` represents a value that is too large to store in a float (for "
"example, ``\"1e500\"`` is such a string on many platforms) then if "
"``overflow_exception`` is ``NULL`` return ``Py_HUGE_VAL`` (with an "
"appropriate sign) and don't set any exception.  Otherwise, "
"``overflow_exception`` must point to a Python exception object; raise that "
"exception and return ``-1.0``.  In both cases, set ``*endptr`` to point to "
"the first character after the converted value."
msgstr ""
"Si ``s`` representa un valor demasiado grande para almacenarlo en un float "
"(por ejemplo, ``\"1e500\"`` es una cadena de este tipo en muchas "
"plataformas) entonces si ``overflow_exception`` es ``NULL`` devuelve "
"``Py_HUGE_VAL`` (con un signo apropiado) y no lanza ninguna excepción.  En "
"caso contrario, ``overflow_exception`` debe apuntar a un objeto de excepción "
"de Python; lanza esa excepción y devuelve ``-1.0``.  En ambos casos, "
"configurar ``*endptr`` para que apunte al primer carácter después del valor "
"convertido."

#: ../../c-api/conversion.rst:78
msgid ""
"If any other error occurs during the conversion (for example an out-of-"
"memory error), set the appropriate Python exception and return ``-1.0``."
msgstr ""
"Si se produce cualquier otro error durante la conversión (por ejemplo, un "
"error de memoria insuficiente), establecer la excepción Python apropiada y "
"devolver ``-1.0``."

#: ../../c-api/conversion.rst:87
msgid ""
"Convert a :c:expr:`double` *val* to a string using supplied *format_code*, "
"*precision*, and *flags*."
msgstr ""
"Convierte un *val* de :c:expr:`double` en una cadena utilizando "
"*format_code*, *precision* y *flags* suministrados."

#: ../../c-api/conversion.rst:90
msgid ""
"*format_code* must be one of ``'e'``, ``'E'``, ``'f'``, ``'F'``, ``'g'``, "
"``'G'`` or ``'r'``.  For ``'r'``, the supplied *precision* must be 0 and is "
"ignored.  The ``'r'`` format code specifies the standard :func:`repr` format."
msgstr ""
"*format_code* debe ser uno de los siguientes: ``'e'``, ``'E'``, ``'f'``, "
"``'F'``, ``'g'``, ``'G'`` o ``'r'``.  Para ``'r'``, la *precisión* "
"suministrada debe ser 0 y se ignora.  El código de formato ``'r'`` "
"especifica el formato estándar :func:`repr`."

#: ../../c-api/conversion.rst:95
msgid ""
"*flags* can be zero or more of the values ``Py_DTSF_SIGN``, "
"``Py_DTSF_ADD_DOT_0``, or ``Py_DTSF_ALT``, or-ed together:"
msgstr ""
"*flags* puede ser cero o más de los valores ``Py_DTSF_SIGN``, "
"``Py_DTSF_ADD_DOT_0``, o ``Py_DTSF_ALT``, or-ed together:"

#: ../../c-api/conversion.rst:98
msgid ""
"``Py_DTSF_SIGN`` means to always precede the returned string with a sign "
"character, even if *val* is non-negative."
msgstr ""
"``Py_DTSF_SIGN`` significa preceder siempre la cadena devuelta con un "
"carácter de signo, incluso si *val* es no negativo."

#: ../../c-api/conversion.rst:101
msgid ""
"``Py_DTSF_ADD_DOT_0`` means to ensure that the returned string will not look "
"like an integer."
msgstr ""
"``Py_DTSF_ADD_DOT_0`` para garantizar que la cadena devuelta no se parezca a "
"un número entero."

#: ../../c-api/conversion.rst:104
msgid ""
"``Py_DTSF_ALT`` means to apply \"alternate\" formatting rules.  See the "
"documentation for the :c:func:`PyOS_snprintf` ``'#'`` specifier for details."
msgstr ""
"``Py_DTSF_ALT`` significa aplicar reglas de formato \"alternativas\".  "
"Consultar la documentación del especificador :c:func:`PyOS_snprintf` ``'#'`` "
"para más detalles."

#: ../../c-api/conversion.rst:108
msgid ""
"If *ptype* is non-``NULL``, then the value it points to will be set to one "
"of ``Py_DTST_FINITE``, ``Py_DTST_INFINITE``, or ``Py_DTST_NAN``, signifying "
"that *val* is a finite number, an infinite number, or not a number, "
"respectively."
msgstr ""
"Si *ptype* no es``NULL``, entonces el valor al que apunta será uno de "
"``Py_DTST_FINITE``, ``Py_DTST_INFINITE``, o ``Py_DTST_NAN``, lo que "
"significa que *val* es un número finito, un número infinito, o no es un "
"número, respectivamente."

#: ../../c-api/conversion.rst:112
msgid ""
"The return value is a pointer to *buffer* with the converted string or "
"``NULL`` if the conversion failed. The caller is responsible for freeing the "
"returned string by calling :c:func:`PyMem_Free`."
msgstr ""
"El valor de retorno es un puntero a *buffer* con la cadena convertida o "
"``NULL`` si la conversión falló. Caller es responsable de liberar la cadena "
"devuelta llamando a :c:func:`PyMem_Free`."

#: ../../c-api/conversion.rst:121
msgid ""
"Case insensitive comparison of strings. The function works almost "
"identically to :c:func:`strcmp` except that it ignores the case."
msgstr ""
"Comparación de cadenas sin tener en cuenta mayúsculas y minúsculas. La "
"función funciona de forma casi idéntica a :c:func:`strcmp`, salvo que ignora "
"las mayúsculas y minúsculas."

#: ../../c-api/conversion.rst:127
msgid ""
"Case insensitive comparison of strings. The function works almost "
"identically to :c:func:`strncmp` except that it ignores the case."
msgstr ""
"Comparación de cadenas sin tener en cuenta mayúsculas y minúsculas. La "
"función funciona de forma casi idéntica a :c:func:`strncmp`, salvo que "
"ignora las mayúsculas y minúsculas."
