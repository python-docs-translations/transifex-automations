# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# eulalio barbero espinosa <eulalio@disroot.org>, 2023
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.10\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-01-10 16:06+0000\n"
"PO-Revision-Date: 2022-11-05 17:21+0000\n"
"Last-Translator: eulalio barbero espinosa <eulalio@disroot.org>, 2023\n"
"Language-Team: Spanish (Spain) (https://app.transifex.com/python-doc/"
"teams/5390/es_ES/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: es_ES\n"
"Plural-Forms: nplurals=3; plural=n == 1 ? 0 : n != 0 && n % 1000000 == 0 ? "
"1 : 2;\n"

#: ../../c-api/function.rst:6
msgid "Function Objects"
msgstr "Objetos funcionales"

#: ../../c-api/function.rst:10
msgid "There are a few functions specific to Python functions."
msgstr "Existen algunas funciones específicas de Python."

#: ../../c-api/function.rst:15
msgid "The C structure used for functions."
msgstr "La estructura C utilizada para las funciones."

#: ../../c-api/function.rst:22
msgid ""
"This is an instance of :c:type:`PyTypeObject` and represents the Python "
"function type.  It is exposed to Python programmers as ``types."
"FunctionType``."
msgstr ""
"Es una instancia de :c:type:`PyTypeObject` y representa el tipo de función "
"de Python.  Se presenta a los programadores de Python como ``types."
"FunctionType``."

#: ../../c-api/function.rst:28
msgid ""
"Return true if *o* is a function object (has type :c:data:"
"`PyFunction_Type`). The parameter must not be ``NULL``.  This function "
"always succeeds."
msgstr ""
"Devuelve true si *o* es un objeto función (tiene el tipo :c:data:"
"`PyFunction_Type`). El parámetro no debe ser ``NULL``.  Esta función siempre "
"tiene éxito."

#: ../../c-api/function.rst:34
msgid ""
"Return a new function object associated with the code object *code*. "
"*globals* must be a dictionary with the global variables accessible to the "
"function."
msgstr ""
"Devuelve un nuevo objeto función asociado al objeto código *code*. *globals* "
"debe ser un diccionario con las variables globales accesibles a la función."

#: ../../c-api/function.rst:37
msgid ""
"The function's docstring and name are retrieved from the code object. "
"*__module__* is retrieved from *globals*. The argument defaults, annotations "
"and closure are set to ``NULL``. *__qualname__* is set to the same value as "
"the function's name."
msgstr ""
"docstring y el nombre de la función se obtienen del objeto de código. "
"*__module__* se obtiene de *globals*. Los argumentos por defecto, las "
"anotaciones y el cierre se establecen en ``NULL``. *__qualname__* tiene el "
"mismo valor que el nombre de la función."

#: ../../c-api/function.rst:44
msgid ""
"As :c:func:`PyFunction_New`, but also allows setting the function object's "
"``__qualname__`` attribute.  *qualname* should be a unicode object or "
"``NULL``; if ``NULL``, the ``__qualname__`` attribute is set to the same "
"value as its ``__name__`` attribute."
msgstr ""
"Como :c:func:`PyFunction_New`, pero también permite establecer el atributo "
"``__qualname__`` del objeto de función.  *qualname* debe ser un objeto "
"unicode o ``NULL``; si es ``NULL``, el atributo ``__qualname__`` se "
"establece con el mismo valor que su atributo ``__name__``."

#: ../../c-api/function.rst:54
msgid "Return the code object associated with the function object *op*."
msgstr "Devuelve el objeto código asociado al objeto función *op*."

#: ../../c-api/function.rst:59
msgid "Return the globals dictionary associated with the function object *op*."
msgstr "Devuelve el diccionario globals asociado al objeto función *op*."

#: ../../c-api/function.rst:64
msgid ""
"Return a :term:`borrowed reference` to the *__module__* attribute of the "
"function object *op*. It can be *NULL*."
msgstr ""
"Devuelve :term:`borrowed reference` al atributo *__module__* del objeto "
"función *op*. Puede ser *NULL*."

#: ../../c-api/function.rst:67
msgid ""
"This is normally a string containing the module name, but can be set to any "
"other object by Python code."
msgstr ""
"Normalmente es una cadena que contiene el nombre del módulo, pero el código "
"Python puede asignarle cualquier otro objeto."

#: ../../c-api/function.rst:73
msgid ""
"Return the argument default values of the function object *op*. This can be "
"a tuple of arguments or ``NULL``."
msgstr ""
"Devuelve los valores por defecto de los argumentos del objeto función *op*. "
"Puede ser una tupla de argumentos o ``NULL``."

#: ../../c-api/function.rst:79
msgid ""
"Set the argument default values for the function object *op*. *defaults* "
"must be ``Py_None`` or a tuple."
msgstr ""
"Establece los valores por defecto de los argumentos para el objeto función "
"*op*. *defaults* debe ser ``Py_None`` o una tupla."

#: ../../c-api/function.rst:82 ../../c-api/function.rst:96
#: ../../c-api/function.rst:110
msgid "Raises :exc:`SystemError` and returns ``-1`` on failure."
msgstr "Levanta :exc:`SystemError` y devuelve ``-1`` en caso de fallo."

#: ../../c-api/function.rst:87
msgid ""
"Return the closure associated with the function object *op*. This can be "
"``NULL`` or a tuple of cell objects."
msgstr ""
"Devuelve el cierre asociado con el objeto de función *op*. Puede ser "
"``NULL`` o una tupla de objetos de celda."

#: ../../c-api/function.rst:93
msgid ""
"Set the closure associated with the function object *op*. *closure* must be "
"``Py_None`` or a tuple of cell objects."
msgstr ""
"Establece el cierre asociado al objeto de función *op*. *closure* debe ser "
"``Py_None`` o una tupla de objetos de celda."

#: ../../c-api/function.rst:101
msgid ""
"Return the annotations of the function object *op*. This can be a mutable "
"dictionary or ``NULL``."
msgstr ""
"Devuelve las anotaciones del objeto función *op*. Puede ser un diccionario "
"cambiable o ``NULL``."

#: ../../c-api/function.rst:107
msgid ""
"Set the annotations for the function object *op*. *annotations* must be a "
"dictionary or ``Py_None``."
msgstr ""
"Establece las anotaciones para el objeto función *op*. *annotations* debe "
"ser un diccionario o ``Py_None``."
