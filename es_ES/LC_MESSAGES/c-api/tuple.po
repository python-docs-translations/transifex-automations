# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# Rafael Fontenelle <rffontenelle@gmail.com>, 2025
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.13\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-07-25 15:00+0000\n"
"PO-Revision-Date: 2025-07-18 19:21+0000\n"
"Last-Translator: Rafael Fontenelle <rffontenelle@gmail.com>, 2025\n"
"Language-Team: Spanish (Spain) (https://app.transifex.com/python-doc/"
"teams/5390/es_ES/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: es_ES\n"
"Plural-Forms: nplurals=3; plural=n == 1 ? 0 : n != 0 && n % 1000000 == 0 ? "
"1 : 2;\n"

#: ../../c-api/tuple.rst:6
msgid "Tuple Objects"
msgstr "Objetos de tupla"

#: ../../c-api/tuple.rst:13
msgid "This subtype of :c:type:`PyObject` represents a Python tuple object."
msgstr ""
"Este subtipo de :c:type:`PyObject` representa un objeto tupla de Python."

#: ../../c-api/tuple.rst:18
msgid ""
"This instance of :c:type:`PyTypeObject` represents the Python tuple type; it "
"is the same object as :class:`tuple` in the Python layer."
msgstr ""
"Esta instancia de :c:type:`PyTypeObject` representa el tipo de tupla de "
"Python; es el mismo objeto que :class:`tuple` en la capa de Python."

#: ../../c-api/tuple.rst:24
msgid ""
"Return true if *p* is a tuple object or an instance of a subtype of the "
"tuple type.  This function always succeeds."
msgstr ""
"Devuelve verdadero si *p* es un objeto tupla o una instancia de un subtipo "
"del tipo tupla. Esta función siempre tiene éxito."

#: ../../c-api/tuple.rst:30
msgid ""
"Return true if *p* is a tuple object, but not an instance of a subtype of "
"the tuple type.  This function always succeeds."
msgstr ""
"Devuelve verdadero si *p* es un objeto tupla, pero no una instancia de un "
"subtipo del tipo tupla. Esta función siempre tiene éxito."

#: ../../c-api/tuple.rst:36
msgid ""
"Return a new tuple object of size *len*, or ``NULL`` with an exception set "
"on failure."
msgstr ""
"Возвращает новый объект-кортеж размером *len* или ``NULL`` с исключением, "
"установленным в случае сбоя."

#: ../../c-api/tuple.rst:42
msgid ""
"Return a new tuple object of size *n*, or ``NULL`` with an exception set on "
"failure. The tuple values are initialized to the subsequent *n* C arguments "
"pointing to Python objects. ``PyTuple_Pack(2, a, b)`` is equivalent to "
"``Py_BuildValue(\"(OO)\", a, b)``."
msgstr ""
"Вернуть новый объект-кортеж размером *n* или ``NULL`` с исключением, "
"установленным в случае сбоя. Значения кортежа инициализируются последующими "
"аргументами *n* C, указывающими на объекты Python. ``PyTuple_Pack(2, a, b)`` "
"эквивалентен ``Py_BuildValue(\"(OO)\", a, b)``."

#: ../../c-api/tuple.rst:50
msgid ""
"Take a pointer to a tuple object, and return the size of that tuple. On "
"error, return ``-1`` and with an exception set."
msgstr ""
"Возьмите указатель на объект кортежа и верните размер этого кортежа. В "
"случае ошибки вернуть ``-1`` и установить исключение."

#: ../../c-api/tuple.rst:56
msgid "Like :c:func:`PyTuple_Size`, but without error checking."
msgstr "Как :c:func:`PyTuple_Size`, но без проверки ошибок."

#: ../../c-api/tuple.rst:61
msgid ""
"Return the object at position *pos* in the tuple pointed to by *p*.  If "
"*pos* is negative or out of bounds, return ``NULL`` and set an :exc:"
"`IndexError` exception."
msgstr ""
"Повертає об’єкт у позицію *pos* у кортежі, на який вказує *p*. Якщо *pos* є "
"негативним або виходить за межі, поверніть ``NULL`` і встановіть виняток :"
"exc:`IndexError`."

#: ../../c-api/tuple.rst:64
msgid ""
"The returned reference is borrowed from the tuple *p* (that is: it is only "
"valid as long as you hold a reference to *p*). To get a :term:`strong "
"reference`, use :c:func:`Py_NewRef(PyTuple_GetItem(...)) <Py_NewRef>` or :c:"
"func:`PySequence_GetItem`."
msgstr ""
"Возвращенная ссылка заимствована из кортежа *p* (то есть: она действительна "
"только до тех пор, пока вы храните ссылку на *p*). Чтобы получить :term:"
"`сильную ссылку`, используйте :c:func:`Py_NewRef(PyTuple_GetItem(...)) "
"<Py_NewRef>` или :c:func:`PySequence_GetItem`."

#: ../../c-api/tuple.rst:73
msgid "Like :c:func:`PyTuple_GetItem`, but does no checking of its arguments."
msgstr ""
"Como :c:func:`PyTuple_GetItem`, pero no realiza ninguna comprobación de sus "
"argumentos."

#: ../../c-api/tuple.rst:78
msgid ""
"Return the slice of the tuple pointed to by *p* between *low* and *high*, or "
"``NULL`` with an exception set on failure."
msgstr ""
"Возвращает фрагмент кортежа, на который указывает *p*, между *low* и *high* "
"или ``NULL`` с исключением, установленным в случае сбоя."

#: ../../c-api/tuple.rst:81
msgid ""
"This is the equivalent of the Python expression ``p[low:high]``. Indexing "
"from the end of the tuple is not supported."
msgstr ""
"Это эквивалент выражения Python ``p[low:high]``. Индексация с конца кортежа "
"не поддерживается."

#: ../../c-api/tuple.rst:87
msgid ""
"Insert a reference to object *o* at position *pos* of the tuple pointed to "
"by *p*.  Return ``0`` on success.  If *pos* is out of bounds, return ``-1`` "
"and set an :exc:`IndexError` exception."
msgstr ""
"Insertar una referencia al objeto *o* en la posición *pos* de la tupla "
"apuntada por *p*. Devuelve ``0`` en caso de éxito. Si *pos* está fuera de "
"los límites, devuelve ``-1`` y establece una excepción :exc:`IndexError`."

#: ../../c-api/tuple.rst:93
msgid ""
"This function \"steals\" a reference to *o* and discards a reference to an "
"item already in the tuple at the affected position."
msgstr ""
"Esta función \"roba\" una referencia a *o* y descarta una referencia a un "
"elemento que ya está en la tupla en la posición afectada."

#: ../../c-api/tuple.rst:99
msgid ""
"Like :c:func:`PyTuple_SetItem`, but does no error checking, and should "
"*only* be used to fill in brand new tuples."
msgstr ""
"Como :c:func:`PyTuple_SetItem`, pero no realiza comprobaciones de errores y "
"solo debe utilizarse para rellenar tuplas completamente nuevas."

#: ../../c-api/tuple.rst:102 ../../c-api/tuple.rst:218
#: ../../c-api/tuple.rst:236
msgid ""
"Bounds checking is performed as an assertion if Python is built in :ref:"
"`debug mode <debug-build>` or :option:`with assertions <--with-assertions>`."
msgstr ""
"Проверка границ выполняется как утверждение, если Python встроен в :ref:"
"`режиме отладки <debug-build>` или :option:`с утверждениями <--with-"
"assertions>`."

#: ../../c-api/tuple.rst:107
msgid ""
"This function \"steals\" a reference to *o*, and, unlike :c:func:"
"`PyTuple_SetItem`, does *not* discard a reference to any item that is being "
"replaced; any reference in the tuple at position *pos* will be leaked."
msgstr ""
"Эта функция «крадет» ссылку на *o* и, в отличие от :c:func:"
"`PyTuple_SetItem`, *не* отбрасывает ссылку на любой заменяемый элемент; "
"любая ссылка в кортеже в позиции *pos* будет утеряна."

#: ../../c-api/tuple.rst:115
msgid ""
"Can be used to resize a tuple.  *newsize* will be the new length of the "
"tuple. Because tuples are *supposed* to be immutable, this should only be "
"used if there is only one reference to the object.  Do *not* use this if the "
"tuple may already be known to some other part of the code.  The tuple will "
"always grow or shrink at the end.  Think of this as destroying the old tuple "
"and creating a new one, only more efficiently.  Returns ``0`` on success. "
"Client code should never assume that the resulting value of ``*p`` will be "
"the same as before calling this function. If the object referenced by ``*p`` "
"is replaced, the original ``*p`` is destroyed.  On failure, returns ``-1`` "
"and sets ``*p`` to ``NULL``, and raises :exc:`MemoryError` or :exc:"
"`SystemError`."
msgstr ""
"Se puede utilizar para redimensionar una tupla. *newsize* será la nueva "
"longitud de la tupla. Debido a que las tuplas se *supone* que son "
"inmutables, esto se debe usar si solo hay una referencia al objeto. No "
"utilizar esto si la tupla se puede conocer por alguna otra parte del código. "
"La tupla siempre crecerá o disminuirá al final. Piense en esto como destruir "
"la antigua tupla y crear una nueva, solo de manera más eficiente. Devuelve "
"``0`` en caso de éxito. El código del cliente nunca debe asumir que el valor "
"resultante de ``*p`` será el mismo que antes de llamar a esta función. Si se "
"reemplaza el objeto referenciado por ``*p``, se destruye el original "
"``*p`` . En caso de fallo, devuelve ``-1`` y establece ``*p`` a ``NULL``, y "
"genera :exc:`MemoryError` o :exc:`SystemError`."

#: ../../c-api/tuple.rst:130
msgid "Struct Sequence Objects"
msgstr "Objetos de secuencia de estructura"

#: ../../c-api/tuple.rst:132
msgid ""
"Struct sequence objects are the C equivalent of :func:`~collections."
"namedtuple` objects, i.e. a sequence whose items can also be accessed "
"through attributes. To create a struct sequence, you first have to create a "
"specific struct sequence type."
msgstr ""
"Los objetos de secuencia de estructura son el equivalente en C de los "
"objetos :func:`~collections.namedtuple`, es decir, una secuencia cuyos "
"elementos también se pueden acceder a través de atributos. Para crear una "
"secuencia de estructura, primero tienes que crear un tipo de secuencia de "
"estructura específico."

#: ../../c-api/tuple.rst:139
msgid ""
"Create a new struct sequence type from the data in *desc*, described below. "
"Instances of the resulting type can be created with :c:func:"
"`PyStructSequence_New`."
msgstr ""
"Crear un nuevo tipo de secuencia de estructura a partir de los datos en "
"*desc*, descritos a continuación. Las instancias del tipo resultante se "
"pueden crear con :c:func:`PyStructSequence_New`."

#: ../../c-api/tuple.rst:142 ../../c-api/tuple.rst:211
msgid "Return ``NULL`` with an exception set on failure."
msgstr "Возвращает NULL с исключением, установленным в случае сбоя."

#: ../../c-api/tuple.rst:147
msgid "Initializes a struct sequence type *type* from *desc* in place."
msgstr ""
"Inicializa un tipo de secuencia de estructura *type* desde *desc* en su "
"lugar."

#: ../../c-api/tuple.rst:152
msgid ""
"Like :c:func:`PyStructSequence_InitType`, but returns ``0`` on success and "
"``-1`` with an exception set on failure."
msgstr ""
"Подобно :c:func:`PyStructSequence_InitType`, но возвращает ``0`` в случае "
"успеха и ``-1`` с установленным исключением в случае неудачи."

#: ../../c-api/tuple.rst:160
msgid "Contains the meta information of a struct sequence type to create."
msgstr ""
"Contiene la información meta de un tipo de secuencia de estructura para "
"crear."

#: ../../c-api/tuple.rst:164
msgid ""
"Fully qualified name of the type; null-terminated UTF-8 encoded. The name "
"must contain the module name."
msgstr ""
"Полное имя типа; в кодировке UTF-8 с нулевым завершением. Имя должно "
"содержать имя модуля."

#: ../../c-api/tuple.rst:169
msgid "Pointer to docstring for the type or ``NULL`` to omit."
msgstr ""
"Указатель на строку документации для типа или ``NULL``, который нужно "
"опустить."

#: ../../c-api/tuple.rst:173
msgid "Pointer to ``NULL``-terminated array with field names of the new type."
msgstr "Указатель на завершающийся NULL массив с именами полей нового типа."

#: ../../c-api/tuple.rst:177
msgid "Number of fields visible to the Python side (if used as tuple)."
msgstr ""
"Количество полей, видимых на стороне Python (если используется как кортеж)."

#: ../../c-api/tuple.rst:182
msgid ""
"Describes a field of a struct sequence. As a struct sequence is modeled as a "
"tuple, all fields are typed as :c:expr:`PyObject*`.  The index in the :c:"
"member:`~PyStructSequence_Desc.fields` array of the :c:type:"
"`PyStructSequence_Desc` determines which field of the struct sequence is "
"described."
msgstr ""
"Описывает поле последовательности структуры. Поскольку последовательность "
"структур моделируется как кортеж, все поля имеют тип :c:expr:` PyObject *`. "
"Индекс в массиве :c:member:`~PyStructSequence_Desc.fields` :c:type:"
"`PyStructSequence_Desc` определяет, какое поле последовательности структур "
"описывается."

#: ../../c-api/tuple.rst:190
msgid ""
"Name for the field or ``NULL`` to end the list of named fields, set to :c:"
"data:`PyStructSequence_UnnamedField` to leave unnamed."
msgstr ""
"Имя поля или ``NULL``, чтобы завершить список именованных полей, установите "
"значение :c:data:`PyStructSequence_UnnamedField`, чтобы оставить безымянным."

#: ../../c-api/tuple.rst:195
msgid "Field docstring or ``NULL`` to omit."
msgstr "Поле документации или ``NULL``, чтобы его опустить."

#: ../../c-api/tuple.rst:200
msgid "Special value for a field name to leave it unnamed."
msgstr "Valor especial para un nombre de campo para dejarlo sin nombre."

#: ../../c-api/tuple.rst:202
msgid "The type was changed from ``char *``."
msgstr "El tipo se cambió de ``char *``."

#: ../../c-api/tuple.rst:208
msgid ""
"Creates an instance of *type*, which must have been created with :c:func:"
"`PyStructSequence_NewType`."
msgstr ""
"Crea una instancia de *type*, que se debe haber creado con :c:func:"
"`PyStructSequence_NewType`."

#: ../../c-api/tuple.rst:216
msgid ""
"Return the object at position *pos* in the struct sequence pointed to by *p*."
msgstr ""
"Верните объект в позиции *pos* в последовательности структур, на которую "
"указывает *p*."

#: ../../c-api/tuple.rst:224
msgid "Alias to :c:func:`PyStructSequence_GetItem`."
msgstr "Псевдоним :c:func:`PyStructSequence_GetItem`."

#: ../../c-api/tuple.rst:226
msgid "Now implemented as an alias to :c:func:`PyStructSequence_GetItem`."
msgstr "Теперь реализован как псевдоним :c:func:`PyStructSequence_GetItem`."

#: ../../c-api/tuple.rst:232
msgid ""
"Sets the field at index *pos* of the struct sequence *p* to value *o*.  "
"Like :c:func:`PyTuple_SET_ITEM`, this should only be used to fill in brand "
"new instances."
msgstr ""
"Establece el campo en el índice *pos* de la secuencia struct *p* al valor "
"*o*.  Al igual que :c:func:`PyTuple_SET_ITEM`, sólo debe utilizarse para "
"rellenar instancias nuevas."

#: ../../c-api/tuple.rst:241
msgid "This function \"steals\" a reference to *o*."
msgstr "Esta función \"roba\" una referencia a *o*."

#: ../../c-api/tuple.rst:246
msgid "Alias to :c:func:`PyStructSequence_SetItem`."
msgstr "Псевдоним :c:func:`PyStructSequence_SetItem`."

#: ../../c-api/tuple.rst:248
msgid "Now implemented as an alias to :c:func:`PyStructSequence_SetItem`."
msgstr "Теперь реализован как псевдоним :c:func:`PyStructSequence_SetItem`."

#: ../../c-api/tuple.rst:8
msgid "object"
msgstr "objeto"

#: ../../c-api/tuple.rst:8
msgid "tuple"
msgstr "tupla"
