# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# Rafael Fontenelle <rffontenelle@gmail.com>, 2024
# eulalio barbero espinosa <eulalio@disroot.org>, 2024
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.12\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-01-10 14:49+0000\n"
"PO-Revision-Date: 2024-05-11 00:32+0000\n"
"Last-Translator: eulalio barbero espinosa <eulalio@disroot.org>, 2024\n"
"Language-Team: Spanish (Spain) (https://app.transifex.com/python-doc/"
"teams/5390/es_ES/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: es_ES\n"
"Plural-Forms: nplurals=3; plural=n == 1 ? 0 : n != 0 && n % 1000000 == 0 ? "
"1 : 2;\n"

#: ../../c-api/capsule.rst:6
msgid "Capsules"
msgstr "Cápsulas"

#: ../../c-api/capsule.rst:10
msgid ""
"Refer to :ref:`using-capsules` for more information on using these objects."
msgstr ""
"Consultar :ref:`using-capsules` para obtener más información sobre el uso de "
"estos objetos."

#: ../../c-api/capsule.rst:17
msgid ""
"This subtype of :c:type:`PyObject` represents an opaque value, useful for C "
"extension modules who need to pass an opaque value (as a :c:expr:`void*` "
"pointer) through Python code to other C code.  It is often used to make a C "
"function pointer defined in one module available to other modules, so the "
"regular import mechanism can be used to access C APIs defined in dynamically "
"loaded modules."
msgstr ""
"Este subtipo de :c:type:`PyObject` representa un valor opaco, útil para "
"módulos de extensión C que necesitan pasar un valor opaco (como un puntero :"
"c:expr:`void*` ) a través de código Python a otro código C.  A menudo se "
"utiliza para hacer que un puntero de función C definido en un módulo esté "
"disponible para otros módulos, de modo que el mecanismo de importación "
"normal pueda utilizarse para acceder a APIs C definidas en módulos cargados "
"dinámicamente."

#: ../../c-api/capsule.rst:27
msgid "The type of a destructor callback for a capsule.  Defined as::"
msgstr ""
"El tipo de una devolución de llamada destructor para una cápsula. Definido "
"como::"

#: ../../c-api/capsule.rst:29
msgid "typedef void (*PyCapsule_Destructor)(PyObject *);"
msgstr "typedef void (*PyCapsule_Destructor)(PyObject *);"

#: ../../c-api/capsule.rst:31
msgid ""
"See :c:func:`PyCapsule_New` for the semantics of PyCapsule_Destructor "
"callbacks."
msgstr ""
"ver :c:func:`PyCapsule_New` por la semántica de PyCapsule_Destructor "
"callbacks."

#: ../../c-api/capsule.rst:37
msgid ""
"Return true if its argument is a :c:type:`PyCapsule`.  This function always "
"succeeds."
msgstr ""
"Devuelve verdadero si su argumento es un :c:type:`PyCapsule`.  Esta función "
"siempre tiene éxito."

#: ../../c-api/capsule.rst:43
msgid ""
"Create a :c:type:`PyCapsule` encapsulating the *pointer*.  The *pointer* "
"argument may not be ``NULL``."
msgstr ""
"Crear un :c:type:`PyCapsule` encapsulando el *puntero*. El argumento "
"*puntero* puede no ser ``NULL``."

#: ../../c-api/capsule.rst:46
msgid "On failure, set an exception and return ``NULL``."
msgstr "En caso de fallo, establecer una excepción y devuelve ``NULL``."

#: ../../c-api/capsule.rst:48
msgid ""
"The *name* string may either be ``NULL`` or a pointer to a valid C string.  "
"If non-``NULL``, this string must outlive the capsule.  (Though it is "
"permitted to free it inside the *destructor*.)"
msgstr ""
"La cadena *nombre* puede ser ``NULL`` o un puntero a una cadena C válida. Si "
"no es-``NULL``, esta cadena debe seguir más tiempo en memoria.  (Aunque está "
"permitido liberarlo dentro de *destructor*.)"

#: ../../c-api/capsule.rst:52
msgid ""
"If the *destructor* argument is not ``NULL``, it will be called with the "
"capsule as its argument when it is destroyed."
msgstr ""
"Si el argumento *destructor* no es ``NULL``, se llamará con la cápsula como "
"argumento cuando se destruya."

#: ../../c-api/capsule.rst:55
msgid ""
"If this capsule will be stored as an attribute of a module, the *name* "
"should be specified as ``modulename.attributename``.  This will enable other "
"modules to import the capsule using :c:func:`PyCapsule_Import`."
msgstr ""
"Si esta cápsula se almacenara como un atributo de un módulo, el *nombre* "
"debe especificarse como ``modulename.attributename``.  Esto permitirá que "
"otros módulos importen la cápsula usando :c:func:`PyCapsule_Import`."

#: ../../c-api/capsule.rst:62
msgid ""
"Retrieve the *pointer* stored in the capsule.  On failure, set an exception "
"and return ``NULL``."
msgstr ""
"Recuperar el *puntero* almacenado en la cápsula. En caso de fallo, "
"establecer una excepción y regresar ``NULL``."

#: ../../c-api/capsule.rst:65
msgid ""
"The *name* parameter must compare exactly to the name stored in the capsule. "
"If the name stored in the capsule is ``NULL``, the *name* passed in must "
"also be ``NULL``.  Python uses the C function :c:func:`!strcmp` to compare "
"capsule names."
msgstr ""
"El parámetro *name* debe compararse exactamente con el nombre almacenado en "
"la cápsula. Si el nombre almacenado en la cápsula es ``NULL``, el *name* "
"pasado también debe ser ``NULL``.  Python utiliza la función C :c:func:`!"
"strcmp` para comparar los nombres de las cápsulas."

#: ../../c-api/capsule.rst:73
msgid ""
"Return the current destructor stored in the capsule.  On failure, set an "
"exception and return ``NULL``."
msgstr ""
"Devuelve el destructor actual almacenado en la cápsula.. En caso de fallo, "
"establecer una excepción y devolver ``NULL``."

#: ../../c-api/capsule.rst:76
msgid ""
"It is legal for a capsule to have a ``NULL`` destructor.  This makes a "
"``NULL`` return code somewhat ambiguous; use :c:func:`PyCapsule_IsValid` or :"
"c:func:`PyErr_Occurred` to disambiguate."
msgstr ""
"Es legal que una cápsula tenga un destructor ``NULL``.  TEsto hace que un "
"código de retorno ``NULL`` sea algo ambiguo; usar :c:func:"
"`PyCapsule_IsValid` o :c:func:`PyErr_Occurred` para eliminar la ambigüedad."

#: ../../c-api/capsule.rst:83
msgid ""
"Return the current context stored in the capsule.  On failure, set an "
"exception and return ``NULL``."
msgstr ""
"Devuelve el destructor actual almacenado en la cápsula. En caso de fallo, "
"establecer una excepción y devolver ``NULL``."

#: ../../c-api/capsule.rst:86
msgid ""
"It is legal for a capsule to have a ``NULL`` context.  This makes a ``NULL`` "
"return code somewhat ambiguous; use :c:func:`PyCapsule_IsValid` or :c:func:"
"`PyErr_Occurred` to disambiguate."
msgstr ""
"Es legal que una cápsula tenga un contexto ``NULL``.  Esto hace que un "
"código de retorno ``NULL`` sea algo ambiguo; usar :c:func:"
"`PyCapsule_IsValid` o :c:func:`PyErr_Occurred` para eliminar la ambigüedad."

#: ../../c-api/capsule.rst:93
msgid ""
"Return the current name stored in the capsule.  On failure, set an exception "
"and return ``NULL``."
msgstr ""
"Devuelve el nombre actual almacenado en la cápsula. En caso de fallo, "
"establece una excepción y devuelve ``NULL``."

#: ../../c-api/capsule.rst:96
msgid ""
"It is legal for a capsule to have a ``NULL`` name.  This makes a ``NULL`` "
"return code somewhat ambiguous; use :c:func:`PyCapsule_IsValid` or :c:func:"
"`PyErr_Occurred` to disambiguate."
msgstr ""
"Es legal que una cápsula tenga un nombre ``NULL``.  Esto hace que un código "
"de retorno ``NULL`` sea algo ambiguo; usar :c:func:`PyCapsule_IsValid` o :c:"
"func:`PyErr_Occurred` para eliminar la ambigüedad."

#: ../../c-api/capsule.rst:103
msgid ""
"Import a pointer to a C object from a capsule attribute in a module.  The "
"*name* parameter should specify the full name to the attribute, as in "
"``module.attribute``.  The *name* stored in the capsule must match this "
"string exactly."
msgstr ""
"Importa un puntero a un objeto C desde un atributo cápsula en un módulo.  El "
"parámetro *name* debe especificar el nombre completo del atributo, como en "
"``module.attribute``.  El *nombre* almacenado en la cápsula debe coincidir "
"exactamente con esta cadena."

#: ../../c-api/capsule.rst:108
msgid ""
"Return the capsule's internal *pointer* on success.  On failure, set an "
"exception and return ``NULL``."
msgstr ""
"Devuelve el *puntero* interno de la cápsula en caso de éxito. En caso de "
"error, establezer una excepción y regresar ``NULL``."

#: ../../c-api/capsule.rst:111
msgid "*no_block* has no effect anymore."
msgstr "*no_block* ya no tiene efecto."

#: ../../c-api/capsule.rst:117
msgid ""
"Determines whether or not *capsule* is a valid capsule.  A valid capsule is "
"non-``NULL``, passes :c:func:`PyCapsule_CheckExact`, has a non-``NULL`` "
"pointer stored in it, and its internal name matches the *name* parameter.  "
"(See :c:func:`PyCapsule_GetPointer` for information on how capsule names are "
"compared.)"
msgstr ""
"Determina si *capsule* es o no una cápsula válida. Una cápsula válida no es -"
"``NULL``, pasar :c:func:`PyCapsule_CheckExact`, tiene un puntero que no es "
"``NULL`` almacenado y su nombre interno coincide con el parámetro *name*. "
"(Consultar :c:func:`PyCapsule_GetPointer` para información de cómo comparar "
"los nombres de las cápsulas)."

#: ../../c-api/capsule.rst:123
msgid ""
"In other words, if :c:func:`PyCapsule_IsValid` returns a true value, calls "
"to any of the accessors (any function starting with ``PyCapsule_Get``) are "
"guaranteed to succeed."
msgstr ""
"En otras palabras, si :c:func:`PyCapsule_IsValid` devuelve un valor "
"verdadero, las llamadas a cualquiera de los accesores (cualquier función que "
"empiece por ``PyCapsule_Get``) tienen garantizado el éxito."

#: ../../c-api/capsule.rst:127
msgid ""
"Return a nonzero value if the object is valid and matches the name passed "
"in. Return ``0`` otherwise.  This function will not fail."
msgstr ""
"Devuelve un valor distinto de cero si el objeto es válido y coincide con el "
"nombre pasado. De lo contrario, devuelve ``0``. Esta función no fallará."

#: ../../c-api/capsule.rst:133
msgid "Set the context pointer inside *capsule* to *context*."
msgstr "Establecer el puntero de contexto dentro de *cápsula* en *contexto*."

#: ../../c-api/capsule.rst:135 ../../c-api/capsule.rst:142
#: ../../c-api/capsule.rst:151 ../../c-api/capsule.rst:159
msgid ""
"Return ``0`` on success.  Return nonzero and set an exception on failure."
msgstr ""
"Devuelve ``0`` en caso de éxito. Devuelve distinto de cero y establece una "
"excepción en caso de fallo."

#: ../../c-api/capsule.rst:140
msgid "Set the destructor inside *capsule* to *destructor*."
msgstr "Establecer el destructor dentro de *cápsula* en *destructor*."

#: ../../c-api/capsule.rst:147
msgid ""
"Set the name inside *capsule* to *name*.  If non-``NULL``, the name must "
"outlive the capsule.  If the previous *name* stored in the capsule was not "
"``NULL``, no attempt is made to free it."
msgstr ""
"Establecer el nombre dentro de *cápsula* en *nombre*. Si no es -``NULL``, el "
"nombre debe sobrevivir a la cápsula. Si el *nombre* anterior almacenado en "
"la capsular no era ``NULL``, no se intenta liberarlo."

#: ../../c-api/capsule.rst:156
msgid ""
"Set the void pointer inside *capsule* to *pointer*.  The pointer may not be "
"``NULL``."
msgstr ""
"Establecer el puntero vacío dentro de *cápsula* en *puntero*. El puntero "
"puede no estar ``NULL``."

#: ../../c-api/capsule.rst:8
msgid "object"
msgstr "objeto"

#: ../../c-api/capsule.rst:8
msgid "Capsule"
msgstr "Cápsula"
