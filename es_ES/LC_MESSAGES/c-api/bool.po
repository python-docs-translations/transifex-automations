# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# Rafael Fontenelle <rffontenelle@gmail.com>, 2024
# eulalio barbero espinosa <eulalio@disroot.org>, 2024
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.12\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-01-03 14:53+0000\n"
"PO-Revision-Date: 2024-05-11 00:32+0000\n"
"Last-Translator: eulalio barbero espinosa <eulalio@disroot.org>, 2024\n"
"Language-Team: Spanish (Spain) (https://app.transifex.com/python-doc/"
"teams/5390/es_ES/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: es_ES\n"
"Plural-Forms: nplurals=3; plural=n == 1 ? 0 : n != 0 && n % 1000000 == 0 ? "
"1 : 2;\n"

#: ../../c-api/bool.rst:6
msgid "Boolean Objects"
msgstr "Objetos booleanos"

#: ../../c-api/bool.rst:8
msgid ""
"Booleans in Python are implemented as a subclass of integers.  There are "
"only two booleans, :c:data:`Py_False` and :c:data:`Py_True`.  As such, the "
"normal creation and deletion functions don't apply to booleans.  The "
"following macros are available, however."
msgstr ""
"Los valores booleanos en Python se implementan como una subclase de enteros. "
"Solo hay dos booleanos, :c:data:`Py_False` y :c:data:`Py_True`.  Como tal, "
"las funciones normales de creación y eliminación no se aplican a los valores "
"booleanos. Sin embargo, están disponibles las siguientes macros."

#: ../../c-api/bool.rst:16
msgid ""
"This instance of :c:type:`PyTypeObject` represents the Python boolean type; "
"it is the same object as :class:`bool` in the Python layer."
msgstr ""
"Esta instancia de :c:type:`PyTypeObject` representa el tipo booleano de "
"Python; es el mismo objeto que :class:`bool` en la capa de Python."

#: ../../c-api/bool.rst:22
msgid ""
"Return true if *o* is of type :c:data:`PyBool_Type`.  This function always "
"succeeds."
msgstr ""
"Devuelve true si *o* es de tipo :c:data:`PyBool_Type`.  Esta función siempre "
"tiene éxito."

#: ../../c-api/bool.rst:28
msgid ""
"The Python ``False`` object.  This object has no methods and is `immortal "
"<https://peps.python.org/pep-0683/>`_."
msgstr ""
"El objeto Python ``False``.  Este objeto no tiene métodos y es `inmortal "
"<https://peps.python.org/pep-0683/>`_."

#: ../../c-api/bool.rst:31
msgid ":c:data:`Py_False` is immortal."
msgstr ":c:data:`Py_False` es inmortal."

#: ../../c-api/bool.rst:37
msgid ""
"The Python ``True`` object.  This object has no methods and is `immortal "
"<https://peps.python.org/pep-0683/>`_."
msgstr ""
"El objeto Python ``True``.  Este objeto no tiene métodos y es `inmortal "
"<https://peps.python.org/pep-0683/>`_."

#: ../../c-api/bool.rst:40
msgid ":c:data:`Py_True` is immortal."
msgstr ":c:data:`Py_True` es inmortal."

#: ../../c-api/bool.rst:46
msgid "Return :c:data:`Py_False` from a function."
msgstr "Devuelve :c:data:`Py_False` desde una función."

#: ../../c-api/bool.rst:51
msgid "Return :c:data:`Py_True` from a function."
msgstr "Devuelve :c:data:`Py_True` desde una función."

#: ../../c-api/bool.rst:56
msgid ""
"Return :c:data:`Py_True` or :c:data:`Py_False`, depending on the truth value "
"of *v*."
msgstr ""
"Devuelve :c:data:`Py_True` o :c:data:`Py_False`, dependiendo del valor "
"verdadero de *v*."
