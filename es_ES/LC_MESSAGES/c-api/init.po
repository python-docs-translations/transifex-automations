# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# Rafael Fontenelle <rffontenelle@gmail.com>, 2024
# eulalio barbero espinosa <eulalio@disroot.org>, 2025
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.12\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-02-21 14:51+0000\n"
"PO-Revision-Date: 2024-05-11 00:32+0000\n"
"Last-Translator: eulalio barbero espinosa <eulalio@disroot.org>, 2025\n"
"Language-Team: Spanish (Spain) (https://app.transifex.com/python-doc/"
"teams/5390/es_ES/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: es_ES\n"
"Plural-Forms: nplurals=3; plural=n == 1 ? 0 : n != 0 && n % 1000000 == 0 ? "
"1 : 2;\n"

#: ../../c-api/init.rst:8
msgid "Initialization, Finalization, and Threads"
msgstr "Inicialización, finalización y subprocesos"

#: ../../c-api/init.rst:10
msgid "See also :ref:`Python Initialization Configuration <init-config>`."
msgstr "Ver también :ref:`Python Initialization Configuration <init-config>`."

#: ../../c-api/init.rst:15
msgid "Before Python Initialization"
msgstr "Antes de la inicialización de Python"

#: ../../c-api/init.rst:17
msgid ""
"In an application embedding  Python, the :c:func:`Py_Initialize` function "
"must be called before using any other Python/C API functions; with the "
"exception of a few functions and the :ref:`global configuration variables "
"<global-conf-vars>`."
msgstr ""
"En una aplicación que incluya Python, se debe llamar a la función :c:func:"
"`Py_Initialize` antes de utilizar cualquier otra función de la API Python/C; "
"con la excepción de unas pocas funciones y las :ref:`variables de "
"configuración global <global-conf-vars>`."

#: ../../c-api/init.rst:22
msgid ""
"The following functions can be safely called before Python is initialized:"
msgstr ""
"Las siguientes funciones se pueden llamar con seguridad antes de que Python "
"sea inicializado:"

#: ../../c-api/init.rst:24
msgid "Configuration functions:"
msgstr "Funciones de configuración:"

#: ../../c-api/init.rst:26
msgid ":c:func:`PyImport_AppendInittab`"
msgstr ":c:func:`PyImport_AppendInittab`"

#: ../../c-api/init.rst:27
msgid ":c:func:`PyImport_ExtendInittab`"
msgstr ":c:func:`PyImport_ExtendInittab`"

#: ../../c-api/init.rst:28
msgid ":c:func:`!PyInitFrozenExtensions`"
msgstr ":c:func:`!PyInitFrozenExtensions`"

#: ../../c-api/init.rst:29
msgid ":c:func:`PyMem_SetAllocator`"
msgstr ":c:func:`PyMem_SetAllocator`"

#: ../../c-api/init.rst:30
msgid ":c:func:`PyMem_SetupDebugHooks`"
msgstr ":c:func:`PyMem_SetupDebugHooks`"

#: ../../c-api/init.rst:31
msgid ":c:func:`PyObject_SetArenaAllocator`"
msgstr ":c:func:`PyObject_SetArenaAllocator`"

#: ../../c-api/init.rst:32
msgid ":c:func:`Py_SetPath`"
msgstr ":c:func:`Py_SetPath`"

#: ../../c-api/init.rst:33
msgid ":c:func:`Py_SetProgramName`"
msgstr ":c:func:`Py_SetProgramName`"

#: ../../c-api/init.rst:34
msgid ":c:func:`Py_SetPythonHome`"
msgstr ":c:func:`Py_SetPythonHome`"

#: ../../c-api/init.rst:35
msgid ":c:func:`Py_SetStandardStreamEncoding`"
msgstr ":c:func:`Py_SetStandardStreamEncoding`"

#: ../../c-api/init.rst:36
msgid ":c:func:`PySys_AddWarnOption`"
msgstr ":c:func:`PySys_AddWarnOption`"

#: ../../c-api/init.rst:37
msgid ":c:func:`PySys_AddXOption`"
msgstr ":c:func:`PySys_AddXOption`"

#: ../../c-api/init.rst:38
msgid ":c:func:`PySys_ResetWarnOptions`"
msgstr ":c:func:`PySys_ResetWarnOptions`"

#: ../../c-api/init.rst:40
msgid "Informative functions:"
msgstr "Funciones informativas:"

#: ../../c-api/init.rst:42
msgid ":c:func:`Py_IsInitialized`"
msgstr ":c:func:`Py_IsInitialized`"

#: ../../c-api/init.rst:43
msgid ":c:func:`PyMem_GetAllocator`"
msgstr ":c:func:`PyMem_GetAllocator`"

#: ../../c-api/init.rst:44
msgid ":c:func:`PyObject_GetArenaAllocator`"
msgstr ":c:func:`PyObject_GetArenaAllocator`"

#: ../../c-api/init.rst:45
msgid ":c:func:`Py_GetBuildInfo`"
msgstr ":c:func:`Py_GetBuildInfo`"

#: ../../c-api/init.rst:46
msgid ":c:func:`Py_GetCompiler`"
msgstr ":c:func:`Py_GetCompiler`"

#: ../../c-api/init.rst:47
msgid ":c:func:`Py_GetCopyright`"
msgstr ":c:func:`Py_GetCopyright`"

#: ../../c-api/init.rst:48
msgid ":c:func:`Py_GetPlatform`"
msgstr ":c:func:`Py_GetPlatform`"

#: ../../c-api/init.rst:49
msgid ":c:func:`Py_GetVersion`"
msgstr ":c:func:`Py_GetVersion`"

#: ../../c-api/init.rst:51
msgid "Utilities:"
msgstr "Utilidades:"

#: ../../c-api/init.rst:53
msgid ":c:func:`Py_DecodeLocale`"
msgstr ":c:func:`Py_DecodeLocale`"

#: ../../c-api/init.rst:55
msgid "Memory allocators:"
msgstr "Asignadores de memoria:"

#: ../../c-api/init.rst:57
msgid ":c:func:`PyMem_RawMalloc`"
msgstr ":c:func:`PyMem_RawMalloc`"

#: ../../c-api/init.rst:58
msgid ":c:func:`PyMem_RawRealloc`"
msgstr ":c:func:`PyMem_RawRealloc`"

#: ../../c-api/init.rst:59
msgid ":c:func:`PyMem_RawCalloc`"
msgstr ":c:func:`PyMem_RawCalloc`"

#: ../../c-api/init.rst:60
msgid ":c:func:`PyMem_RawFree`"
msgstr ":c:func:`PyMem_RawFree`"

#: ../../c-api/init.rst:64
msgid ""
"The following functions **should not be called** before :c:func:"
"`Py_Initialize`: :c:func:`Py_EncodeLocale`, :c:func:`Py_GetPath`, :c:func:"
"`Py_GetPrefix`, :c:func:`Py_GetExecPrefix`, :c:func:"
"`Py_GetProgramFullPath`, :c:func:`Py_GetPythonHome`, :c:func:"
"`Py_GetProgramName` and :c:func:`PyEval_InitThreads`."
msgstr ""
"Las siguientes funciones **no deben llamarse** antes de :c:func:"
"`Py_Initialize`: :c:func:`Py_EncodeLocale`, :c:func:`Py_GetPath`, :c:func:"
"`Py_GetPrefix`, :c:func:`Py_GetExecPrefix`, :c:func:"
"`Py_GetProgramFullPath`, :c:func:`Py_GetPythonHome`, :c:func:"
"`Py_GetProgramName` y :c:func:`PyEval_InitThreads`."

#: ../../c-api/init.rst:74
msgid "Global configuration variables"
msgstr "Variables de configuración global"

#: ../../c-api/init.rst:76
msgid ""
"Python has variables for the global configuration to control different "
"features and options. By default, these flags are controlled by :ref:"
"`command line options <using-on-interface-options>`."
msgstr ""
"Python tiene variables para la configuración global para controlar "
"diferentes características y opciones. Por defecto, estas banderas son "
"controladas por :ref:`command line options <using-on-interface-options>`."

#: ../../c-api/init.rst:80
msgid ""
"When a flag is set by an option, the value of the flag is the number of "
"times that the option was set. For example, ``-b`` sets :c:data:"
"`Py_BytesWarningFlag` to 1 and ``-bb`` sets :c:data:`Py_BytesWarningFlag` to "
"2."
msgstr ""
"Cuando una opción establece una bandera, el valor de la bandera es el número "
"de veces que se ha establecido la opción. Por ejemplo, ``-b`` establece :c:"
"data:`Py_BytesWarningFlag` en 1 y ``-bb`` establece :c:data:"
"`Py_BytesWarningFlag` en 2."

#: ../../c-api/init.rst:86
msgid ""
"This API is kept for backward compatibility: setting :c:member:`PyConfig."
"bytes_warning` should be used instead, see :ref:`Python Initialization "
"Configuration <init-config>`."
msgstr ""
"Esta API se mantiene por compatibilidad con versiones anteriores: en su "
"lugar debe utilizarse la configuración :c:member:`PyConfig.bytes_warning`, "
"ver :ref:`Python Initialization Configuration <init-config>`."

#: ../../c-api/init.rst:90
msgid ""
"Issue a warning when comparing :class:`bytes` or :class:`bytearray` with :"
"class:`str` or :class:`bytes` with :class:`int`.  Issue an error if greater "
"or equal to ``2``."
msgstr ""
"Emitir una advertencia al comparar :class:`bytes` o :class:`bytearray` con :"
"class:`str` o :class:`bytes` con :class:`int`. Emitir un error si es mayor o "
"igual que ``2``."

#: ../../c-api/init.rst:94
msgid "Set by the :option:`-b` option."
msgstr "Fijado por la opción :option:`-b`."

#: ../../c-api/init.rst:100
msgid ""
"This API is kept for backward compatibility: setting :c:member:`PyConfig."
"parser_debug` should be used instead, see :ref:`Python Initialization "
"Configuration <init-config>`."
msgstr ""
"Esta API se mantiene por compatibilidad con versiones anteriores: en su "
"lugar debe utilizarse la configuración :c:member:`PyConfig.parser_debug`, "
"ver :ref:`Python Initialization Configuration <init-config>`."

#: ../../c-api/init.rst:104
msgid ""
"Turn on parser debugging output (for expert only, depending on compilation "
"options)."
msgstr ""
"Activar la salida de depuración del analizador sintáctico (sólo para "
"expertos, dependiendo de las opciones de compilación)."

#: ../../c-api/init.rst:107
msgid ""
"Set by the :option:`-d` option and the :envvar:`PYTHONDEBUG` environment "
"variable."
msgstr ""
"Establecido por la opción :option:`-d` y la variable de entorno :envvar:"
"`PYTHONDEBUG`."

#: ../../c-api/init.rst:114
msgid ""
"This API is kept for backward compatibility: setting :c:member:`PyConfig."
"write_bytecode` should be used instead, see :ref:`Python Initialization "
"Configuration <init-config>`."
msgstr ""
"Esta API se mantiene por compatibilidad con versiones anteriores: en su "
"lugar debe utilizarse la configuración :c:member:`PyConfig.write_bytecode`, "
"véase :ref:`Python Initialization Configuration <init-config>`."

#: ../../c-api/init.rst:118
msgid ""
"If set to non-zero, Python won't try to write ``.pyc`` files on the import "
"of source modules."
msgstr ""
"Si se establece a un valor distinto de cero, Python no intentará escribir "
"archivos ``.pyc`` en la importación de módulos fuente."

#: ../../c-api/init.rst:121
msgid ""
"Set by the :option:`-B` option and the :envvar:`PYTHONDONTWRITEBYTECODE` "
"environment variable."
msgstr ""
"Establecido por la opción :option:`-B` y la variable de entorno :envvar:"
"`PYTHONDONTWRITEBYTECODE`."

#: ../../c-api/init.rst:128
msgid ""
"This API is kept for backward compatibility: setting :c:member:`PyConfig."
"pathconfig_warnings` should be used instead, see :ref:`Python Initialization "
"Configuration <init-config>`."
msgstr ""
"Esta API se mantiene por compatibilidad con versiones anteriores: en su "
"lugar debe utilizarse la configuración :c:member:`PyConfig."
"pathconfig_warnings`, ver :ref:`Python Initialization Configuration <init-"
"config>`."

#: ../../c-api/init.rst:132
msgid ""
"Suppress error messages when calculating the module search path in :c:func:"
"`Py_GetPath`."
msgstr ""
"Supresión de los mensajes de error al calcular la ruta de búsqueda de "
"módulos en :c:func:`Py_GetPath`."

#: ../../c-api/init.rst:135
msgid "Private flag used by ``_freeze_module`` and ``frozenmain`` programs."
msgstr ""
"Bandera privada utilizada por los programas ``_freeze_module`` y "
"``frozenmain``."

#: ../../c-api/init.rst:141
msgid ""
"This API is kept for backward compatibility: setting :c:member:`PyConfig."
"hash_seed` and :c:member:`PyConfig.use_hash_seed` should be used instead, "
"see :ref:`Python Initialization Configuration <init-config>`."
msgstr ""
"Esta API se mantiene por compatibilidad con versiones anteriores: en su "
"lugar debe utilizarse la configuración de :c:member:`PyConfig.hash_seed` y :"
"c:member:`PyConfig.use_hash_seed`, ver :ref:`Python Initialization "
"Configuration <init-config>`."

#: ../../c-api/init.rst:146
msgid ""
"Set to ``1`` if the :envvar:`PYTHONHASHSEED` environment variable is set to "
"a non-empty string."
msgstr ""
"Se establece en ``1`` si la variable de entorno :envvar:`PYTHONHASHSEED` se "
"establece en una cadena no vacía."

#: ../../c-api/init.rst:149
msgid ""
"If the flag is non-zero, read the :envvar:`PYTHONHASHSEED` environment "
"variable to initialize the secret hash seed."
msgstr ""
"Si el indicador es distinto de cero, leer la variable de entorno :envvar:"
"`PYTHONHASHSEED` para inicializar la semilla secreta hash."

#: ../../c-api/init.rst:156
msgid ""
"This API is kept for backward compatibility: setting :c:member:`PyConfig."
"use_environment` should be used instead, see :ref:`Python Initialization "
"Configuration <init-config>`."
msgstr ""
"Esta API se mantiene por compatibilidad con versiones anteriores: en su "
"lugar debe utilizarse la configuración :c:member:`PyConfig.use_environment`, "
"ver :ref:`Python Initialization Configuration <init-config>`."

#: ../../c-api/init.rst:160
msgid ""
"Ignore all :envvar:`!PYTHON*` environment variables, e.g. :envvar:"
"`PYTHONPATH` and :envvar:`PYTHONHOME`, that might be set."
msgstr ""
"Ignore todas las variables de entorno :envvar:`!PYTHON*`, por ejemplo :"
"envvar:`PYTHONPATH` y :envvar:`PYTHONHOME`, que puedan estar establecidas."

#: ../../c-api/init.rst:163
msgid "Set by the :option:`-E` and :option:`-I` options."
msgstr "Fijado por las opciones :option:`-E` y :option:`-I`."

#: ../../c-api/init.rst:169
msgid ""
"This API is kept for backward compatibility: setting :c:member:`PyConfig."
"inspect` should be used instead, see :ref:`Python Initialization "
"Configuration <init-config>`."
msgstr ""
"Esta API se mantiene por compatibilidad con versiones anteriores: en su "
"lugar debe utilizarse la configuración :c:member:`PyConfig.inspect`, ver :"
"ref:`Python Initialization Configuration <init-config>`."

#: ../../c-api/init.rst:173
msgid ""
"When a script is passed as first argument or the :option:`-c` option is "
"used, enter interactive mode after executing the script or the command, even "
"when :data:`sys.stdin` does not appear to be a terminal."
msgstr ""
"Cuando se pasa un script como primer argumento o se utiliza la opción :"
"option:`-c`, entra en modo interactivo después de ejecutar el script o el "
"comando, incluso cuando :data:`sys.stdin` no parece ser un terminal."

#: ../../c-api/init.rst:177
msgid ""
"Set by the :option:`-i` option and the :envvar:`PYTHONINSPECT` environment "
"variable."
msgstr ""
"Establecido por la opción :option:`-i` y la variable de entorno :envvar:"
"`PYTHONINSPECT`."

#: ../../c-api/init.rst:184
msgid ""
"This API is kept for backward compatibility: setting :c:member:`PyConfig."
"interactive` should be used instead, see :ref:`Python Initialization "
"Configuration <init-config>`."
msgstr ""
"Esta API se mantiene por compatibilidad con versiones anteriores: en su "
"lugar debe utilizarse la configuración :c:member:`PyConfig.interactive`, "
"ver :ref:`Python Initialization Configuration <init-config>`."

#: ../../c-api/init.rst:188
msgid "Set by the :option:`-i` option."
msgstr "Fijado por la opción :option:`-i`."

#: ../../c-api/init.rst:194
msgid ""
"This API is kept for backward compatibility: setting :c:member:`PyConfig."
"isolated` should be used instead, see :ref:`Python Initialization "
"Configuration <init-config>`."
msgstr ""
"Esta API se mantiene por compatibilidad con versiones anteriores: en su "
"lugar debe utilizarse la configuración :c:member:`PyConfig.isolated`, ver :"
"ref:`Python Initialization Configuration <init-config>`."

#: ../../c-api/init.rst:198
msgid ""
"Run Python in isolated mode. In isolated mode :data:`sys.path` contains "
"neither the script's directory nor the user's site-packages directory."
msgstr ""
"Ejecutar Python en modo aislado. En modo aislado :data:`sys.path` no "
"contiene ni el directorio del script ni el directorio site-packages del "
"usuario."

#: ../../c-api/init.rst:201
msgid "Set by the :option:`-I` option."
msgstr "Fijado por la opción :option:`-I`."

#: ../../c-api/init.rst:209
msgid ""
"This API is kept for backward compatibility: setting :c:member:`PyPreConfig."
"legacy_windows_fs_encoding` should be used instead, see :ref:`Python "
"Initialization Configuration <init-config>`."
msgstr ""
"Esta API se mantiene por compatibilidad con versiones anteriores: en su "
"lugar debe utilizarse la configuración :c:member:`PyPreConfig."
"legacy_windows_fs_encoding`, ver :ref:`Python Initialization Configuration "
"<init-config>`."

#: ../../c-api/init.rst:213
msgid ""
"If the flag is non-zero, use the ``mbcs`` encoding with ``replace`` error "
"handler, instead of the UTF-8 encoding with ``surrogatepass`` error handler, "
"for the :term:`filesystem encoding and error handler`."
msgstr ""
"Si el indicador es distinto de cero, utilice la codificación ``mbcs`` con el "
"gestor de errores ``replace``, en lugar de la codificación UTF-8 con el "
"gestor de errores ``surrogatepass``, para el :term:`filesystem encoding and "
"error handler`."

#: ../../c-api/init.rst:217
msgid ""
"Set to ``1`` if the :envvar:`PYTHONLEGACYWINDOWSFSENCODING` environment "
"variable is set to a non-empty string."
msgstr ""
"Se establece en ``1`` si la variable de entorno :envvar:"
"`PYTHONLEGACYWINDOWSFSENCODING` se establece en una cadena no vacía."

#: ../../c-api/init.rst:220
msgid "See :pep:`529` for more details."
msgstr "Ver :pep:`529` para más detalles."

#: ../../c-api/init.rst:222 ../../c-api/init.rst:240
msgid "Availability"
msgstr "Disponibilidad"

#: ../../c-api/init.rst:228
msgid ""
"This API is kept for backward compatibility: setting :c:member:`PyConfig."
"legacy_windows_stdio` should be used instead, see :ref:`Python "
"Initialization Configuration <init-config>`."
msgstr ""
"Esta API se mantiene por compatibilidad con versiones anteriores: en su "
"lugar debe utilizarse la configuración :c:member:`PyConfig."
"legacy_windows_stdio`, ver :ref:`Python Initialization Configuration <init-"
"config>`."

#: ../../c-api/init.rst:232
msgid ""
"If the flag is non-zero, use :class:`io.FileIO` instead of :class:`!io."
"_WindowsConsoleIO` for :mod:`sys` standard streams."
msgstr ""
"Si el indicador es distinto de cero, utilice :class:`io.FileIO` en lugar de :"
"class:`!io._WindowsConsoleIO` para los flujos estándar :mod:`sys`."

#: ../../c-api/init.rst:235
msgid ""
"Set to ``1`` if the :envvar:`PYTHONLEGACYWINDOWSSTDIO` environment variable "
"is set to a non-empty string."
msgstr ""
"Se establece en ``1`` si la variable de entorno :envvar:"
"`PYTHONLEGACYWINDOWSSTDIO` se establece en una cadena no vacía."

#: ../../c-api/init.rst:238
msgid "See :pep:`528` for more details."
msgstr "Ver :pep:`528` para más detalles."

#: ../../c-api/init.rst:246
msgid ""
"This API is kept for backward compatibility: setting :c:member:`PyConfig."
"site_import` should be used instead, see :ref:`Python Initialization "
"Configuration <init-config>`."
msgstr ""
"Esta API se mantiene por compatibilidad con versiones anteriores: en su "
"lugar debe utilizarse la configuración :c:member:`PyConfig.site_import`, "
"ver :ref:`Python Initialization Configuration <init-config>`."

#: ../../c-api/init.rst:250
msgid ""
"Disable the import of the module :mod:`site` and the site-dependent "
"manipulations of :data:`sys.path` that it entails.  Also disable these "
"manipulations if :mod:`site` is explicitly imported later (call :func:`site."
"main` if you want them to be triggered)."
msgstr ""
"Desactiva la importación del módulo :mod:`site` y las manipulaciones "
"dependientes del sitio de :data:`sys.path` que conlleva.  Desactiva también "
"estas manipulaciones si :mod:`site` se importa explícitamente más tarde "
"(llama a :func:`site.main` si quieres que se activen)."

#: ../../c-api/init.rst:255
msgid "Set by the :option:`-S` option."
msgstr "Fijado por la opción :option:`-S`."

#: ../../c-api/init.rst:261
msgid ""
"This API is kept for backward compatibility: setting :c:member:`PyConfig."
"user_site_directory` should be used instead, see :ref:`Python Initialization "
"Configuration <init-config>`."
msgstr ""
"Esta API se mantiene por compatibilidad con versiones anteriores: en su "
"lugar debe utilizarse la configuración :c:member:`PyConfig."
"user_site_directory`, ver :ref:`Python Initialization Configuration <init-"
"config>`."

#: ../../c-api/init.rst:265
msgid ""
"Don't add the :data:`user site-packages directory <site.USER_SITE>` to :data:"
"`sys.path`."
msgstr ""
"No añadir el directorio :data:`user site-packages <site.USER_SITE>` a :data:"
"`sys.path`."

#: ../../c-api/init.rst:268
msgid ""
"Set by the :option:`-s` and :option:`-I` options, and the :envvar:"
"`PYTHONNOUSERSITE` environment variable."
msgstr ""
"Establecido por las opciones :option:`-s` y :option:`-I`, y la variable de "
"entorno :envvar:`PYTHONNOUSERSITE`."

#: ../../c-api/init.rst:275
msgid ""
"This API is kept for backward compatibility: setting :c:member:`PyConfig."
"optimization_level` should be used instead, see :ref:`Python Initialization "
"Configuration <init-config>`."
msgstr ""
"Esta API se mantiene por compatibilidad con versiones anteriores: en su "
"lugar debe utilizarse la configuración :c:member:`PyConfig."
"optimization_level`, ver :ref:`Python Initialization Configuration <init-"
"config>`."

#: ../../c-api/init.rst:279
msgid ""
"Set by the :option:`-O` option and the :envvar:`PYTHONOPTIMIZE` environment "
"variable."
msgstr ""
"Establecido por la opción :option:`-O` y la variable de entorno :envvar:"
"`PYTHONOPTIMIZE`."

#: ../../c-api/init.rst:286
msgid ""
"This API is kept for backward compatibility: setting :c:member:`PyConfig."
"quiet` should be used instead, see :ref:`Python Initialization Configuration "
"<init-config>`."
msgstr ""
"Esta API se mantiene por compatibilidad con versiones anteriores: en su "
"lugar debe utilizarse la configuración :c:member:`PyConfig.quiet`, ver :ref:"
"`Python Initialization Configuration <init-config>`."

#: ../../c-api/init.rst:290
msgid ""
"Don't display the copyright and version messages even in interactive mode."
msgstr ""
"No mostrar los mensajes de copyright y versión ni siquiera en modo "
"interactivo."

#: ../../c-api/init.rst:292
msgid "Set by the :option:`-q` option."
msgstr "Fijado por la opción :option:`-q`."

#: ../../c-api/init.rst:300
msgid ""
"This API is kept for backward compatibility: setting :c:member:`PyConfig."
"buffered_stdio` should be used instead, see :ref:`Python Initialization "
"Configuration <init-config>`."
msgstr ""
"Esta API se mantiene por compatibilidad con versiones anteriores: en su "
"lugar debe utilizarse la configuración :c:member:`PyConfig.buffered_stdio`, "
"ver :ref:`Python Initialization Configuration <init-config>`."

#: ../../c-api/init.rst:304
msgid "Force the stdout and stderr streams to be unbuffered."
msgstr "Fuerza que los flujos stdout y stderr no tengan búfer."

#: ../../c-api/init.rst:306
msgid ""
"Set by the :option:`-u` option and the :envvar:`PYTHONUNBUFFERED` "
"environment variable."
msgstr ""
"Establecido por la opción :option:`-u` y la variable de entorno :envvar:"
"`PYTHONUNBUFFERED`."

#: ../../c-api/init.rst:313
msgid ""
"This API is kept for backward compatibility: setting :c:member:`PyConfig."
"verbose` should be used instead, see :ref:`Python Initialization "
"Configuration <init-config>`."
msgstr ""
"Esta API se mantiene por compatibilidad con versiones anteriores: en su "
"lugar debe utilizarse la configuración :c:member:`PyConfig.verbose`, ver :"
"ref:`Python Initialization Configuration <init-config>`."

#: ../../c-api/init.rst:317
msgid ""
"Print a message each time a module is initialized, showing the place "
"(filename or built-in module) from which it is loaded.  If greater or equal "
"to ``2``, print a message for each file that is checked for when searching "
"for a module. Also provides information on module cleanup at exit."
msgstr ""
"Imprime un mensaje cada vez que se inicializa un módulo, mostrando el lugar "
"(nombre de archivo o módulo incorporado) desde el que se carga.  Si es mayor "
"o igual que ``2``, imprime un mensaje por cada archivo que se comprueba al "
"buscar un módulo. También proporciona información sobre la limpieza del "
"módulo al salir."

#: ../../c-api/init.rst:322
msgid ""
"Set by the :option:`-v` option and the :envvar:`PYTHONVERBOSE` environment "
"variable."
msgstr ""
"Establecido por la opción :option:`-v` y la variable de entorno :envvar:"
"`PYTHONVERBOSE`."

#: ../../c-api/init.rst:329
msgid "Initializing and finalizing the interpreter"
msgstr "Inicialización y finalización del intérprete"

#: ../../c-api/init.rst:347
msgid ""
"Initialize the Python interpreter.  In an application embedding  Python, "
"this should be called before using any other Python/C API functions; see :"
"ref:`Before Python Initialization <pre-init-safe>` for the few exceptions."
msgstr ""
"Inicializa el intérprete de Python.  En una aplicación que incruste Python, "
"esto debería ser llamado antes de usar cualquier otra función de la API "
"Python/C; ver :ref:`Before Python Initialization  <pre-init-safe>` para las "
"pocas excepciones."

#: ../../c-api/init.rst:351
msgid ""
"This initializes the table of loaded modules (``sys.modules``), and creates "
"the fundamental modules :mod:`builtins`, :mod:`__main__` and :mod:`sys`.  It "
"also initializes the module search path (``sys.path``). It does not set "
"``sys.argv``; use :c:func:`PySys_SetArgvEx` for that.  This is a no-op when "
"called for a second time (without calling :c:func:`Py_FinalizeEx` first).  "
"There is no return value; it is a fatal error if the initialization fails."
msgstr ""
"Esto inicializa la tabla de módulos cargados (``sys.modules``), y crea los "
"módulos fundamentales :mod:`builtins`, :mod:`__main__` y :mod:`sys`. También "
"inicializa la ruta de búsqueda de módulos (``sys.path``). No establece ``sys."
"argv``; utilice :c:func:`PySys_SetArgvEx` para ello.  Es un no-op cuando se "
"llama por segunda vez (sin llamar primero a :c:func:`Py_FinalizeEx` ).  No "
"hay valor de retorno; es un error fatal si la inicialización falla."

#: ../../c-api/init.rst:359 ../../c-api/init.rst:373
msgid ""
"Use the :c:func:`Py_InitializeFromConfig` function to customize the :ref:"
"`Python Initialization Configuration <init-config>`."
msgstr ""
"Utilice la función :c:func:`Py_InitializeFromConfig` para personalizar la :"
"ref:`Configuración de inicialización de Python <init-config>`."

#: ../../c-api/init.rst:363
msgid ""
"On Windows, changes the console mode from ``O_TEXT`` to ``O_BINARY``, which "
"will also affect non-Python uses of the console using the C Runtime."
msgstr ""
"En Windows, cambia el modo de la consola de ``O_TEXT`` a ``O_BINARY``, lo "
"que también afectará a los usos de la consola no basados en Python que "
"utilicen el C Runtime."

#: ../../c-api/init.rst:369
msgid ""
"This function works like :c:func:`Py_Initialize` if *initsigs* is ``1``. If "
"*initsigs* is ``0``, it skips initialization registration of signal "
"handlers, which might be useful when Python is embedded."
msgstr ""
"Esta función funciona como :c:func:`Py_Initialize` si *initsigs* es ``1``. "
"Si *initsigs* es ``0``, se salta el registro de inicialización de los "
"manejadores de señal, lo que puede ser útil cuando Python está embebido."

#: ../../c-api/init.rst:379
msgid ""
"Return true (nonzero) when the Python interpreter has been initialized, "
"false (zero) if not.  After :c:func:`Py_FinalizeEx` is called, this returns "
"false until :c:func:`Py_Initialize` is called again."
msgstr ""
"Devuelve true (distinto de cero) cuando el intérprete de Python ha sido "
"inicializado, false (cero) en caso contrario.  Después de llamar a :c:func:"
"`Py_FinalizeEx`, devuelve false hasta que se vuelva a llamar a :c:func:"
"`Py_Initialize`."

#: ../../c-api/init.rst:386
msgid ""
"Undo all initializations made by :c:func:`Py_Initialize` and subsequent use "
"of Python/C API functions, and destroy all sub-interpreters (see :c:func:"
"`Py_NewInterpreter` below) that were created and not yet destroyed since the "
"last call to :c:func:`Py_Initialize`.  Ideally, this frees all memory "
"allocated by the Python interpreter.  This is a no-op when called for a "
"second time (without calling :c:func:`Py_Initialize` again first)."
msgstr ""
"Deshace todas las inicializaciones hechas por :c:func:`Py_Initialize` y el "
"uso subsecuente de las funciones de la API de Python/C, y destruye todos los "
"sub-intérpretes (ver :c:func:`Py_NewInterpreter` abajo) que fueron creados y "
"aún no destruidos desde la última llamada a :c:func:`Py_Initialize`. "
"Idealmente, esto libera toda la memoria asignada por el intérprete de "
"Python.  Esto es un no-op cuando se llama por segunda vez (sin llamar a :c:"
"func:`Py_Initialize` de nuevo primero)."

#: ../../c-api/init.rst:393
msgid ""
"Since this is the reverse of :c:func:`Py_Initialize`, it should be called in "
"the same thread with the same interpreter active.  That means the main "
"thread and the main interpreter. This should never be called while :c:func:"
"`Py_RunMain` is running."
msgstr ""
"Dado que esto es lo contrario de :c:func:`Py_Initialize`, debe ser llamado "
"en el mismo hilo con el mismo intérprete activo.  Es decir, el hilo "
"principal y el intérprete principal. Esto nunca debe ser llamado mientras :c:"
"func:`Py_RunMain` se está ejecutando."

#: ../../c-api/init.rst:398
msgid ""
"Normally the return value is ``0``. If there were errors during finalization "
"(flushing buffered data), ``-1`` is returned."
msgstr ""
"Normalmente, el valor devuelto es ``0``. Si se han producido errores durante "
"la finalización (vaciado de los datos almacenados en la memoria intermedia), "
"se devuelve ``-1``."

#: ../../c-api/init.rst:402
msgid ""
"This function is provided for a number of reasons.  An embedding application "
"might want to restart Python without having to restart the application "
"itself. An application that has loaded the Python interpreter from a "
"dynamically loadable library (or DLL) might want to free all memory "
"allocated by Python before unloading the DLL. During a hunt for memory leaks "
"in an application a developer might want to free all memory allocated by "
"Python before exiting from the application."
msgstr ""
"Esta función se proporciona por varias razones.  Una aplicación incrustada "
"puede querer reiniciar Python sin tener que reiniciar la propia aplicación. "
"Una aplicación que ha cargado el intérprete de Python desde una librería "
"cargable dinámicamente (o DLL) puede querer liberar toda la memoria asignada "
"por Python antes de descargar la DLL. Durante la búsqueda de fugas de "
"memoria en una aplicación, un desarrollador puede querer liberar toda la "
"memoria asignada por Python antes de salir de la aplicación."

#: ../../c-api/init.rst:410
msgid ""
"**Bugs and caveats:** The destruction of modules and objects in modules is "
"done in random order; this may cause destructors (:meth:`~object.__del__` "
"methods) to fail when they depend on other objects (even functions) or "
"modules.  Dynamically loaded extension modules loaded by Python are not "
"unloaded.  Small amounts of memory allocated by the Python interpreter may "
"not be freed (if you find a leak, please report it).  Memory tied up in "
"circular references between objects is not freed.  Some memory allocated by "
"extension modules may not be freed.  Some extensions may not work properly "
"if their initialization routine is called more than once; this can happen if "
"an application calls :c:func:`Py_Initialize` and :c:func:`Py_FinalizeEx` "
"more than once."
msgstr ""
"**Bugs y advertencias:** La destrucción de módulos y objetos en módulos se "
"hace en orden aleatorio; esto puede causar que los destructores (:meth:"
"`~object.__del__` métodos) fallen cuando dependen de otros objetos (incluso "
"funciones) o módulos.  Los módulos de extensión cargados dinámicamente por "
"Python no se descargan.  Pequeñas cantidades de memoria asignadas por el "
"intérprete de Python pueden no ser liberadas (si encuentras una fuga, por "
"favor repórtala).  La memoria ligada a referencias circulares entre objetos "
"no se libera.  Alguna memoria asignada por módulos de extensión puede no ser "
"liberada.  Algunas extensiones pueden no funcionar correctamente si su "
"rutina de inicialización es llamada más de una vez; esto puede ocurrir si "
"una aplicación llama a :c:func:`Py_Initialize` y :c:func:`Py_FinalizeEx` más "
"de una vez."

#: ../../c-api/init.rst:421
msgid ""
"Raises an :ref:`auditing event <auditing>` ``cpython."
"_PySys_ClearAuditHooks`` with no arguments."
msgstr ""
"Lanza un :ref:`auditing event <auditing>` ``cpython._PySys_ClearAuditHooks`` "
"sin argumentos."

#: ../../c-api/init.rst:427
msgid ""
"This is a backwards-compatible version of :c:func:`Py_FinalizeEx` that "
"disregards the return value."
msgstr ""
"Se trata de una versión de :c:func:`Py_FinalizeEx` compatible con versiones "
"anteriores que no tiene en cuenta el valor de retorno."

#: ../../c-api/init.rst:432
msgid "Process-wide parameters"
msgstr "Parámetros de todo el proceso"

#: ../../c-api/init.rst:442
msgid ""
"This API is kept for backward compatibility: setting :c:member:`PyConfig."
"stdio_encoding` and :c:member:`PyConfig.stdio_errors` should be used "
"instead, see :ref:`Python Initialization Configuration <init-config>`."
msgstr ""
"Esta API se mantiene por compatibilidad con versiones anteriores: en su "
"lugar debe utilizarse la configuración de :c:member:`PyConfig."
"stdio_encoding` y :c:member:`PyConfig.stdio_errors`, ver :ref:`Python "
"Initialization Configuration <init-config>`."

#: ../../c-api/init.rst:447
msgid ""
"This function should be called before :c:func:`Py_Initialize`, if it is "
"called at all. It specifies which encoding and error handling to use with "
"standard IO, with the same meanings as in :func:`str.encode`."
msgstr ""
"Esta función se debe llamar antes que :c:func:`Py_Initialize`, si es que se "
"llama. Especifica la codificación y el tratamiento de errores que se debe "
"utilizar con la E/S estándar, con el mismo significado que en :func:`str."
"encode`."

#: ../../c-api/init.rst:451
msgid ""
"It overrides :envvar:`PYTHONIOENCODING` values, and allows embedding code to "
"control IO encoding when the environment variable does not work."
msgstr ""
"Anula los valores de :envvar:`PYTHONIOENCODING` y permite incrustar código "
"para controlar la codificación IO cuando la variable de entorno no funciona."

#: ../../c-api/init.rst:454
msgid ""
"*encoding* and/or *errors* may be ``NULL`` to use :envvar:`PYTHONIOENCODING` "
"and/or default values (depending on other settings)."
msgstr ""
"*encoding* y/o *errors* pueden ser ``NULL`` para utilizar :envvar:"
"`PYTHONIOENCODING` y/o valores por defecto (dependiendo de otros ajustes)."

#: ../../c-api/init.rst:458
msgid ""
"Note that :data:`sys.stderr` always uses the \"backslashreplace\" error "
"handler, regardless of this (or any other) setting."
msgstr ""
"Tener en cuenta que :data:`sys.stderr` siempre utiliza el gestor de errores "
"\"backslashreplace\", independientemente de esta (o cualquier otra) "
"configuración."

#: ../../c-api/init.rst:461
msgid ""
"If :c:func:`Py_FinalizeEx` is called, this function will need to be called "
"again in order to affect subsequent calls to :c:func:`Py_Initialize`."
msgstr ""
"Si se llama a :c:func:`Py_FinalizeEx`, será necesario volver a llamar a esta "
"función para que afecte a las siguientes llamadas a :c:func:`Py_Initialize`."

#: ../../c-api/init.rst:464
msgid ""
"Returns ``0`` if successful, a nonzero value on error (e.g. calling after "
"the interpreter has already been initialized)."
msgstr ""
"Devuelve ``0`` si tiene éxito, un valor distinto de cero en caso de error "
"(por ejemplo, si se llama después de que el intérprete ya se ha "
"inicializado)."

#: ../../c-api/init.rst:479
msgid ""
"This API is kept for backward compatibility: setting :c:member:`PyConfig."
"program_name` should be used instead, see :ref:`Python Initialization "
"Configuration <init-config>`."
msgstr ""
"Esta API se mantiene por compatibilidad con versiones anteriores: en su "
"lugar debe utilizarse la configuración :c:member:`PyConfig.program_name`, "
"ver :ref:`Python Initialization Configuration <init-config>`."

#: ../../c-api/init.rst:483
msgid ""
"This function should be called before :c:func:`Py_Initialize` is called for "
"the first time, if it is called at all.  It tells the interpreter the value "
"of the ``argv[0]`` argument to the :c:func:`main` function of the program "
"(converted to wide characters). This is used by :c:func:`Py_GetPath` and "
"some other functions below to find the Python run-time libraries relative to "
"the interpreter executable.  The default value is ``'python'``.  The "
"argument should point to a zero-terminated wide character string in static "
"storage whose contents will not change for the duration of the program's "
"execution.  No code in the Python interpreter will change the contents of "
"this storage."
msgstr ""
"Esta función debe invocarse antes de llamar a :c:func:`Py_Initialize` por "
"primera vez, si es que se llama.  Indica al intérprete el valor del "
"argumento ``argv[0]`` a la función :c:func:`main` del programa (convertido a "
"caracteres anchos). Esto es usado por :c:func:`Py_GetPath` y algunas otras "
"funciones a continuación para encontrar las bibliotecas de tiempo de "
"ejecución de Python relativas al ejecutable del intérprete.  El valor por "
"defecto es ``'python'``.  El argumento debe apuntar a una cadena de "
"caracteres anchos terminada en cero en almacenamiento estático cuyo "
"contenido no cambiará mientras dure la ejecución del programa.  Ningún "
"código del intérprete de Python cambiará el contenido de este almacenamiento."

#: ../../c-api/init.rst:494 ../../c-api/init.rst:760 ../../c-api/init.rst:796
#: ../../c-api/init.rst:822
msgid ""
"Use :c:func:`Py_DecodeLocale` to decode a bytes string to get a :c:expr:"
"`wchar_t*` string."
msgstr ""
"Usar :c:func:`Py_DecodeLocale` para descodificar una cadena de bytes y "
"obtener una cadena :c:expr:`wchar_t*`."

#: ../../c-api/init.rst:504
msgid ""
"Return the program name set with :c:func:`Py_SetProgramName`, or the "
"default. The returned string points into static storage; the caller should "
"not modify its value."
msgstr ""
"Devuelve el nombre del programa establecido con :c:func:`Py_SetProgramName`, "
"o el predeterminado. La cadena devuelta apunta a un almacenamiento estático; "
"caller no debe modificar su valor."

#: ../../c-api/init.rst:508 ../../c-api/init.rst:527 ../../c-api/init.rst:568
#: ../../c-api/init.rst:587 ../../c-api/init.rst:611 ../../c-api/init.rst:834
msgid ""
"This function should not be called before :c:func:`Py_Initialize`, otherwise "
"it returns ``NULL``."
msgstr ""
"Esta función no debe invocarse antes de :c:func:`Py_Initialize`, de lo "
"contrario devuelve ``NULL``."

#: ../../c-api/init.rst:511 ../../c-api/init.rst:530 ../../c-api/init.rst:571
#: ../../c-api/init.rst:590 ../../c-api/init.rst:616 ../../c-api/init.rst:837
msgid "It now returns ``NULL`` if called before :c:func:`Py_Initialize`."
msgstr "Ahora devuelve ``NULL`` si se llama antes que :c:func:`Py_Initialize`."

#: ../../c-api/init.rst:517
msgid ""
"Return the *prefix* for installed platform-independent files. This is "
"derived through a number of complicated rules from the program name set "
"with :c:func:`Py_SetProgramName` and some environment variables; for "
"example, if the program name is ``'/usr/local/bin/python'``, the prefix is "
"``'/usr/local'``. The returned string points into static storage; the caller "
"should not modify its value.  This corresponds to the :makevar:`prefix` "
"variable in the top-level :file:`Makefile` and the :option:`--prefix` "
"argument to the :program:`configure` script at build time.  The value is "
"available to Python code as ``sys.prefix``. It is only useful on Unix.  See "
"also the next function."
msgstr ""
"Devuelve el *prefijo* de los archivos instalados independientes de la "
"plataforma. Se obtiene mediante una serie de complicadas reglas a partir del "
"nombre del programa establecido con :c:func:`Py_SetProgramName` y algunas "
"variables de entorno; por ejemplo, si el nombre del programa es ``'/usr/"
"local/bin/python'``, el prefijo es ``'/usr/local'``. La cadena devuelta "
"apunta a un almacenamiento estático; la persona que llama no debe modificar "
"su valor.  Esto corresponde a la variable :makevar:`prefix` en el nivel "
"superior :file:`Makefile` y al argumento :option:`--prefix` del script :"
"program:`configure` en tiempo de compilación.  El valor está disponible para "
"el código Python como ``sys.prefix``. Sólo es útil en Unix.  Véase también "
"la siguiente función."

#: ../../c-api/init.rst:536
msgid ""
"Return the *exec-prefix* for installed platform-*dependent* files.  This is "
"derived through a number of complicated rules from the program name set "
"with :c:func:`Py_SetProgramName` and some environment variables; for "
"example, if the program name is ``'/usr/local/bin/python'``, the exec-prefix "
"is ``'/usr/local'``.  The returned string points into static storage; the "
"caller should not modify its value.  This corresponds to the :makevar:"
"`exec_prefix` variable in the top-level :file:`Makefile` and the ``--exec-"
"prefix`` argument to the :program:`configure` script at build  time.  The "
"value is available to Python code as ``sys.exec_prefix``.  It is only useful "
"on Unix."
msgstr ""
"Devuelve el *exec-prefix* de los archivos *dependientes* de la plataforma "
"instalada.  Se obtiene mediante una serie de complicadas reglas a partir del "
"nombre del programa establecido con :c:func:`Py_SetProgramName` y algunas "
"variables de entorno; por ejemplo, si el nombre del programa es ``'/usr/"
"local/bin/python'``, el exec-prefix es ``'/usr/local'``.  La cadena devuelta "
"apunta a un almacenamiento estático; caller no debe modificar su valor.  "
"Esto corresponde a la variable :makevar:`exec_prefix` en el nivel superior :"
"file:`Makefile` y al argumento ``--exec-prefix`` del script :program:"
"`configure` en tiempo de compilación.  El valor está disponible para el "
"código Python como ``sys.exec_prefix``.  Sólo es útil en Unix."

#: ../../c-api/init.rst:546
msgid ""
"Background: The exec-prefix differs from the prefix when platform dependent "
"files (such as executables and shared libraries) are installed in a "
"different directory tree.  In a typical installation, platform dependent "
"files may be installed in the :file:`/usr/local/plat` subtree while platform "
"independent may be installed in :file:`/usr/local`."
msgstr ""
"Antecedentes: exec-prefix difiere del prefijo cuando los archivos "
"dependientes de la plataforma (como los ejecutables y las bibliotecas "
"compartidas) se instalan en un árbol de directorios diferente.  En una "
"instalación típica, los archivos dependientes de la plataforma pueden "
"instalarse en el subárbol :file:`/usr/local/plat`, mientras que los "
"independientes de la plataforma pueden instalarse en :file:`/usr/local`."

#: ../../c-api/init.rst:552
msgid ""
"Generally speaking, a platform is a combination of hardware and software "
"families, e.g.  Sparc machines running the Solaris 2.x operating system are "
"considered the same platform, but Intel machines running Solaris 2.x are "
"another platform, and Intel machines running Linux are yet another "
"platform.  Different major revisions of the same operating system generally "
"also form different platforms.  Non-Unix operating systems are a different "
"story; the installation strategies on those systems are so different that "
"the prefix and exec-prefix are meaningless, and set to the empty string. "
"Note that compiled Python bytecode files are platform independent (but not "
"independent from the Python version by which they were compiled!)."
msgstr ""
"En términos generales, una plataforma es una combinación de familias de "
"hardware y software, por ejemplo, las máquinas Sparc que ejecutan el sistema "
"operativo Solaris 2.x se consideran la misma plataforma, pero las máquinas "
"Intel que ejecutan Solaris 2.x son otra plataforma, y las máquinas Intel que "
"ejecutan Linux son otra plataforma más.  Las diferentes revisiones "
"principales del mismo sistema operativo también suelen formar plataformas "
"diferentes.  Los sistemas operativos no-Unix son una historia diferente; las "
"estrategias de instalación en esos sistemas son tan diferentes que el "
"prefijo y exec-prefix no tienen sentido, y se establecen en la cadena vacía. "
"Tener en cuenta que los archivos bytecode de Python compilados son "
"independientes de la plataforma (¡pero no independientes de la versión de "
"Python con la que se compilaron!)."

#: ../../c-api/init.rst:563
msgid ""
"System administrators will know how to configure the :program:`mount` or :"
"program:`automount` programs to share :file:`/usr/local` between platforms "
"while having :file:`/usr/local/plat` be a different filesystem for each "
"platform."
msgstr ""
"Los administradores de sistemas sabrán cómo configurar los programas :"
"program:`mount` o :program:`automount` para compartir :file:`/usr/local` "
"entre plataformas y que :file:`/usr/local/plat` sea un sistema de archivos "
"diferente para cada plataforma."

#: ../../c-api/init.rst:581
msgid ""
"Return the full program name of the Python executable; this is  computed as "
"a side-effect of deriving the default module search path  from the program "
"name (set by :c:func:`Py_SetProgramName` above). The returned string points "
"into static storage; the caller should not modify its value.  The value is "
"available to Python code as ``sys.executable``."
msgstr ""
"Devuelve el nombre completo del programa del ejecutable de Python; se "
"calcula como un efecto secundario de la derivación de la ruta de búsqueda "
"del módulo por defecto a partir del nombre del programa (establecido "
"anteriormente por :c:func:`Py_SetProgramName` ). La cadena devuelta apunta a "
"un almacenamiento estático; el invocador no debe modificar su valor.  El "
"valor está disponible para el código Python como ``sys.executable``."

#: ../../c-api/init.rst:601
msgid ""
"Return the default module search path; this is computed from the program "
"name (set by :c:func:`Py_SetProgramName` above) and some environment "
"variables. The returned string consists of a series of directory names "
"separated by a platform dependent delimiter character.  The delimiter "
"character is ``':'`` on Unix and macOS, ``';'`` on Windows.  The returned "
"string points into static storage; the caller should not modify its value.  "
"The list :data:`sys.path` is initialized with this value on interpreter "
"startup; it can be (and usually is) modified later to change the search path "
"for loading modules."
msgstr ""
"Devuelve la ruta de búsqueda del módulo por defecto; se calcula a partir del "
"nombre del programa (fijado con anterioridad por :c:func:"
"`Py_SetProgramName` ) y algunas variables de entorno. La cadena devuelta "
"consiste en una serie de nombres de directorio separados por un carácter "
"delimitador dependiente de la plataforma.  El carácter delimitador es "
"``':'`` en Unix y macOS, ``';'`` en Windows.  La cadena devuelta apunta a un "
"almacenamiento estático; caller no debe modificar su valor.  La lista :data:"
"`sys.path` se inicializa con este valor al arrancar el intérprete; se puede "
"(y se suele) modificar posteriormente para cambiar la ruta de búsqueda para "
"cargar módulos."

#: ../../c-api/init.rst:627
msgid ""
"This API is kept for backward compatibility: setting :c:member:`PyConfig."
"module_search_paths` and :c:member:`PyConfig.module_search_paths_set` should "
"be used instead, see :ref:`Python Initialization Configuration <init-"
"config>`."
msgstr ""
"Esta API se mantiene por compatibilidad con versiones anteriores: en su "
"lugar debe utilizarse la configuración de :c:member:`PyConfig."
"module_search_paths` y :c:member:`PyConfig.module_search_paths_set`, ver :"
"ref:`Python Initialization Configuration <init-config>`."

#: ../../c-api/init.rst:632
msgid ""
"Set the default module search path.  If this function is called before :c:"
"func:`Py_Initialize`, then :c:func:`Py_GetPath` won't attempt to compute a "
"default search path but uses the one provided instead.  This is useful if "
"Python is embedded by an application that has full knowledge of the location "
"of all modules.  The path components should be separated by the platform "
"dependent delimiter character, which is ``':'`` on Unix and macOS, ``';'`` "
"on Windows."
msgstr ""
"Fija la ruta de búsqueda del módulo por defecto.  Si se llama a esta función "
"antes que a :c:func:`Py_Initialize`, entonces :c:func:`Py_GetPath` no "
"intentará calcular una ruta de búsqueda por defecto, sino que utilizará la "
"proporcionada en su lugar.  Esto es útil si Python está incrustado por una "
"aplicación que tiene pleno conocimiento de la ubicación de todos los "
"módulos.  Los componentes de la ruta deben estar separados por el carácter "
"delimitador dependiente de la plataforma, que es ``':'`` en Unix y macOS, "
"``';'`` en Windows."

#: ../../c-api/init.rst:640
msgid ""
"This also causes :data:`sys.executable` to be set to the program full path "
"(see :c:func:`Py_GetProgramFullPath`) and for :data:`sys.prefix` and :data:"
"`sys.exec_prefix` to be empty.  It is up to the caller to modify these if "
"required after calling :c:func:`Py_Initialize`."
msgstr ""
"Esto también hace que :data:`sys.executable` se establezca en la ruta "
"completa del programa (ver :c:func:`Py_GetProgramFullPath`) y que :data:`sys."
"prefix` y :data:`sys.exec_prefix` estén vacíos.  Corresponde a caller "
"modificar estos si es necesario después de llamar a :c:func:`Py_Initialize`."

#: ../../c-api/init.rst:645
msgid ""
"Use :c:func:`Py_DecodeLocale` to decode a bytes string to get a :c:expr:"
"`wchar_*` string."
msgstr ""
"Utilice :c:func:`Py_DecodeLocale` para descodificar una cadena de bytes y "
"obtener una cadena :c:expr:`wchar_*`."

#: ../../c-api/init.rst:648
msgid ""
"The path argument is copied internally, so the caller may free it after the "
"call completes."
msgstr ""
"El argumento de la ruta se copia internamente, por lo que el invocador puede "
"liberarlo una vez finalizada la llamada."

#: ../../c-api/init.rst:651
msgid ""
"The program full path is now used for :data:`sys.executable`, instead of the "
"program name."
msgstr ""
"Ahora se utiliza la ruta completa del programa para :data:`sys.executable`, "
"en lugar del nombre del programa."

#: ../../c-api/init.rst:660
msgid ""
"Return the version of this Python interpreter.  This is a string that looks "
"something like ::"
msgstr ""
"Devuelve la versión de este intérprete de Python.  Se trata de una cadena "
"con un aspecto similar a ::"

#: ../../c-api/init.rst:663
msgid "\"3.0a5+ (py3k:63103M, May 12 2008, 00:53:55) \\n[GCC 4.2.3]\""
msgstr "\"3.0a5+ (py3k:63103M, May 12 2008, 00:53:55) \\n[GCC 4.2.3]\""

#: ../../c-api/init.rst:667
msgid ""
"The first word (up to the first space character) is the current Python "
"version; the first characters are the major and minor version separated by a "
"period.  The returned string points into static storage; the caller should "
"not modify its value.  The value is available to Python code as :data:`sys."
"version`."
msgstr ""
"La primera palabra (hasta el primer carácter de espacio) es la versión "
"actual de Python; los primeros caracteres son la versión mayor y menor "
"separadas por un punto.  La cadena devuelta apunta a un almacenamiento "
"estático; el invocador no debe modificar su valor.  El valor está disponible "
"para el código Python como :data:`sys.version`."

#: ../../c-api/init.rst:672
msgid "See also the :c:var:`Py_Version` constant."
msgstr "Ver también la constante :c:var:`Py_Version`."

#: ../../c-api/init.rst:679
msgid ""
"Return the platform identifier for the current platform.  On Unix, this is "
"formed from the \"official\" name of the operating system, converted to "
"lower case, followed by the major revision number; e.g., for Solaris 2.x, "
"which is also known as SunOS 5.x, the value is ``'sunos5'``.  On macOS, it "
"is ``'darwin'``.  On Windows, it is ``'win'``.  The returned string points "
"into static storage; the caller should not modify its value.  The value is "
"available to Python code as ``sys.platform``."
msgstr ""
"Devuelve el identificador de la plataforma actual.  En Unix, se forma a "
"partir del nombre \"oficial\" del sistema operativo, convertido a "
"minúsculas, seguido del número de revisión principal; por ejemplo, para "
"Solaris 2.x, que también se conoce como SunOS 5.x, el valor es "
"``'sunos5'``.  En macOS, es ``'darwin'``.  En Windows, es ``'win'``.  La "
"cadena devuelta apunta a un almacenamiento estático; el invocador no debe "
"modificar su valor.  El valor está disponible para el código Python como "
"``sys.platform``."

#: ../../c-api/init.rst:690
msgid ""
"Return the official copyright string for the current Python version, for "
"example"
msgstr ""
"Devuelve la cadena de copyright oficial de la versión actual de Python, por "
"ejemplo"

#: ../../c-api/init.rst:692
msgid "``'Copyright 1991-1995 Stichting Mathematisch Centrum, Amsterdam'``"
msgstr "``'Copyright 1991-1995 Stichting Mathematisch Centrum, Amsterdam'``"

#: ../../c-api/init.rst:696
msgid ""
"The returned string points into static storage; the caller should not modify "
"its value.  The value is available to Python code as ``sys.copyright``."
msgstr ""
"La cadena devuelta apunta a un almacenamiento estático; el invocador no debe "
"modificar su valor.  El valor está disponible para el código Python como "
"``sys.copyright``."

#: ../../c-api/init.rst:702
msgid ""
"Return an indication of the compiler used to build the current Python "
"version, in square brackets, for example::"
msgstr ""
"Devuelve una indicación del compilador utilizado para compilar la versión "
"actual de Python, entre corchetes, por ejemplo::"

#: ../../c-api/init.rst:705
msgid "\"[GCC 2.7.2.2]\""
msgstr "\"[GCC 2.7.2.2]\""

#: ../../c-api/init.rst:709 ../../c-api/init.rst:723
msgid ""
"The returned string points into static storage; the caller should not modify "
"its value.  The value is available to Python code as part of the variable "
"``sys.version``."
msgstr ""
"La cadena devuelta apunta a un almacenamiento estático; el invocador no debe "
"modificar su valor.  El valor está disponible para el código Python como "
"parte de la variable ``sys.version``."

#: ../../c-api/init.rst:716
msgid ""
"Return information about the sequence number and build date and time  of the "
"current Python interpreter instance, for example ::"
msgstr ""
"Devuelve información sobre el número de secuencia y la fecha y hora de "
"compilación de la instancia actual del intérprete de Python, por ejemplo ::"

#: ../../c-api/init.rst:719
msgid "\"#67, Aug  1 1997, 22:34:28\""
msgstr "\"#67, Agosto  1 1997, 22:34:28\""

#: ../../c-api/init.rst:735
msgid ""
"This API is kept for backward compatibility: setting :c:member:`PyConfig."
"argv`, :c:member:`PyConfig.parse_argv` and :c:member:`PyConfig.safe_path` "
"should be used instead, see :ref:`Python Initialization Configuration <init-"
"config>`."
msgstr ""
"Esta API se mantiene por compatibilidad con versiones anteriores: en su "
"lugar debe utilizarse la configuración :c:member:`PyConfig.argv`, :c:member:"
"`PyConfig.parse_argv` y :c:member:`PyConfig.safe_path`, ver :ref:`Python "
"Initialization Configuration <init-config>`."

#: ../../c-api/init.rst:740
msgid ""
"Set :data:`sys.argv` based on *argc* and *argv*.  These parameters are "
"similar to those passed to the program's :c:func:`main` function with the "
"difference that the first entry should refer to the script file to be "
"executed rather than the executable hosting the Python interpreter.  If "
"there isn't a script that will be run, the first entry in *argv* can be an "
"empty string.  If this function fails to initialize :data:`sys.argv`, a "
"fatal condition is signalled using :c:func:`Py_FatalError`."
msgstr ""
"Establece :data:`sys.argv` basándose en *argc* y *argv*.  Estos parámetros "
"son similares a los que se pasan a la función :c:func:`main` del programa, "
"con la diferencia de que la primera entrada debe hacer referencia al archivo "
"de script que se va a ejecutar en lugar del ejecutable que aloja el "
"intérprete de Python.  Si no hay un script que se ejecute, la primera "
"entrada en *argv* puede ser una cadena vacía.  Si esta función falla al "
"inicializar :data:`sys.argv`, se señala una condición fatal usando :c:func:"
"`Py_FatalError`."

#: ../../c-api/init.rst:748
msgid ""
"If *updatepath* is zero, this is all the function does.  If *updatepath* is "
"non-zero, the function also modifies :data:`sys.path` according to the "
"following algorithm:"
msgstr ""
"Si *updatepath* es cero, esto es todo lo que hace la función.  Si "
"*updatepath* es distinto de cero, la función también modifica :data:`sys."
"path` según el siguiente algoritmo:"

#: ../../c-api/init.rst:752
msgid ""
"If the name of an existing script is passed in ``argv[0]``, the absolute "
"path of the directory where the script is located is prepended to :data:`sys."
"path`."
msgstr ""
"Si se pasa el nombre de un script existente en ``argv[0]``, la ruta absoluta "
"del directorio donde se encuentra el script se añade a :data:`sys.path`."

#: ../../c-api/init.rst:755
msgid ""
"Otherwise (that is, if *argc* is ``0`` or ``argv[0]`` doesn't point to an "
"existing file name), an empty string is prepended to :data:`sys.path`, which "
"is the same as prepending the current working directory (``\".\"``)."
msgstr ""
"En caso contrario (es decir, si *argc* es ``0`` o ``argv[0]`` no apunta a un "
"nombre de archivo existente), se antepone una cadena vacía a :data:`sys."
"path`, que es lo mismo que anteponer el directorio de trabajo actual (``\"."
"\"``)."

#: ../../c-api/init.rst:763 ../../c-api/init.rst:799
msgid ""
"See also :c:member:`PyConfig.orig_argv` and :c:member:`PyConfig.argv` "
"members of the :ref:`Python Initialization Configuration <init-config>`."
msgstr ""
"Ver también :c:member:`PyConfig.orig_argv` y :c:member:`PyConfig.argv` "
"miembros de la :ref:`Python Initialization Configuration <init-config>`."

#: ../../c-api/init.rst:767
msgid ""
"It is recommended that applications embedding the Python interpreter for "
"purposes other than executing a single script pass ``0`` as *updatepath*, "
"and update :data:`sys.path` themselves if desired. See :cve:`2008-5983`."
msgstr ""
"Se recomienda que las aplicaciones que incrusten el intérprete de Python con "
"fines distintos a la ejecución de un único script pasen ``0`` como "
"*updatepath*, y actualicen :data:`sys.path` ellas mismas si lo desean. Ver :"
"cve:`2008-5983`."

#: ../../c-api/init.rst:772
msgid ""
"On versions before 3.1.3, you can achieve the same effect by manually "
"popping the first :data:`sys.path` element after having called :c:func:"
"`PySys_SetArgv`, for example using::"
msgstr ""
"En versiones anteriores a la 3.1.3, puede conseguir el mismo efecto haciendo "
"saltar manualmente el primer elemento :data:`sys.path` después de haber "
"llamado a :c:func:`PySys_SetArgv`, por ejemplo utilizando"

#: ../../c-api/init.rst:776
msgid "PyRun_SimpleString(\"import sys; sys.path.pop(0)\\n\");"
msgstr "PyRun_SimpleString(\"import sys; sys.path.pop(0)\\n\");"

#: ../../c-api/init.rst:788
msgid ""
"This API is kept for backward compatibility: setting :c:member:`PyConfig."
"argv` and :c:member:`PyConfig.parse_argv` should be used instead, see :ref:"
"`Python Initialization Configuration <init-config>`."
msgstr ""
"Esta API se mantiene por compatibilidad con versiones anteriores: en su "
"lugar debe utilizarse la configuración de :c:member:`PyConfig.argv` y :c:"
"member:`PyConfig.parse_argv`, ver :ref:`Python Initialization Configuration "
"<init-config>`."

#: ../../c-api/init.rst:792
msgid ""
"This function works like :c:func:`PySys_SetArgvEx` with *updatepath* set to "
"``1`` unless the :program:`python` interpreter was started with the :option:"
"`-I`."
msgstr ""
"Esta función funciona como :c:func:`PySys_SetArgvEx` con *updatepath* "
"establecido en ``1`` a menos que el intérprete :program:`python` se haya "
"iniciado con la opción :option:`-I`."

#: ../../c-api/init.rst:802
msgid "The *updatepath* value depends on :option:`-I`."
msgstr "El valor de *updatepath* depende de :option:`-I`."

#: ../../c-api/init.rst:809
msgid ""
"This API is kept for backward compatibility: setting :c:member:`PyConfig."
"home` should be used instead, see :ref:`Python Initialization Configuration "
"<init-config>`."
msgstr ""
"Esta API se mantiene por compatibilidad con versiones anteriores: en su "
"lugar debe utilizarse la configuración :c:member:`PyConfig.home`, ver :ref:"
"`Python Initialization Configuration <init-config>`."

#: ../../c-api/init.rst:813
msgid ""
"Set the default \"home\" directory, that is, the location of the standard "
"Python libraries.  See :envvar:`PYTHONHOME` for the meaning of the argument "
"string."
msgstr ""
"Establece el directorio \"home\" por defecto, es decir, la ubicación de las "
"bibliotecas estándar de Python.  Ver  :envvar:`PYTHONHOME` para conocer el "
"significado de la cadena de argumentos."

#: ../../c-api/init.rst:817
msgid ""
"The argument should point to a zero-terminated character string in static "
"storage whose contents will not change for the duration of the program's "
"execution.  No code in the Python interpreter will change the contents of "
"this storage."
msgstr ""
"El argumento debe apuntar a una cadena de caracteres terminada en cero en un "
"almacenamiento estático cuyo contenido no cambiará mientras dure la "
"ejecución del programa.  Ningún código del intérprete de Python cambiará el "
"contenido de este almacenamiento."

#: ../../c-api/init.rst:830
msgid ""
"Return the default \"home\", that is, the value set by a previous call to :c:"
"func:`Py_SetPythonHome`, or the value of the :envvar:`PYTHONHOME` "
"environment variable if it is set."
msgstr ""
"Devuelve \"home\" por defecto, es decir, el valor establecido por una "
"llamada anterior a :c:func:`Py_SetPythonHome`, o el valor de la variable de "
"entorno :envvar:`PYTHONHOME` si está establecida."

#: ../../c-api/init.rst:844
msgid "Thread State and the Global Interpreter Lock"
msgstr "Estado del hilo y bloqueo global del intérprete"

#: ../../c-api/init.rst:851
msgid ""
"The Python interpreter is not fully thread-safe.  In order to support multi-"
"threaded Python programs, there's a global lock, called the :term:`global "
"interpreter lock` or :term:`GIL`, that must be held by the current thread "
"before it can safely access Python objects. Without the lock, even the "
"simplest operations could cause problems in a multi-threaded program: for "
"example, when two threads simultaneously increment the reference count of "
"the same object, the reference count could end up being incremented only "
"once instead of twice."
msgstr ""
"El intérprete de Python no es completamente seguro para hilos.  Para "
"soportar programas Python multihilo, existe un bloqueo global, llamado :term:"
"`bloqueo global del intérprete` o :term:`GIL`, que debe mantenerse por el "
"hilo actual antes de que pueda acceder con seguridad a los objetos Python. "
"Sin el bloqueo, incluso las operaciones más simples podrían causar problemas "
"en un programa multihilo: por ejemplo, cuando dos hilos incrementan "
"simultáneamente la cuenta de referencias del mismo objeto, la cuenta de "
"referencias podría incrementarse sólo una vez en lugar de dos."

#: ../../c-api/init.rst:861
msgid ""
"Therefore, the rule exists that only the thread that has acquired the :term:"
"`GIL` may operate on Python objects or call Python/C API functions. In order "
"to emulate concurrency of execution, the interpreter regularly tries to "
"switch threads (see :func:`sys.setswitchinterval`).  The lock is also "
"released around potentially blocking I/O operations like reading or writing "
"a file, so that other Python threads can run in the meantime."
msgstr ""
"Por lo tanto, existe la regla de que sólo el hilo que ha adquirido el :term:"
"`GIL` puede operar sobre objetos Python o llamar a funciones de Python/C "
"API. Para emular la concurrencia de la ejecución, el intérprete intenta "
"regularmente cambiar de hilo (ver :func:`sys.setswitchinterval`).  El "
"bloqueo también se libera alrededor de operaciones de E/S potencialmente "
"bloqueantes, como la lectura o escritura de un archivo, para que otros hilos "
"de Python puedan ejecutarse mientras tanto."

#: ../../c-api/init.rst:871
msgid ""
"The Python interpreter keeps some thread-specific bookkeeping information "
"inside a data structure called :c:type:`PyThreadState`.  There's also one "
"global variable pointing to the current :c:type:`PyThreadState`: it can be "
"retrieved using :c:func:`PyThreadState_Get`."
msgstr ""
"El intérprete de Python guarda información específica de cada hilo en una "
"estructura de datos llamada :c:type:`PyThreadState`.  También hay una "
"variable global que apunta a la actual :c:type:`PyThreadState`: se puede "
"recuperar usando :c:func:`PyThreadState_Get`."

#: ../../c-api/init.rst:877
msgid "Releasing the GIL from extension code"
msgstr "Liberación del GIL del código de extensión"

#: ../../c-api/init.rst:879
msgid ""
"Most extension code manipulating the :term:`GIL` has the following simple "
"structure::"
msgstr ""
"La mayor parte del código de extensión que manipula el :term:`GIL` tiene la "
"siguiente estructura simple::"

#: ../../c-api/init.rst:882
msgid ""
"Save the thread state in a local variable.\n"
"Release the global interpreter lock.\n"
"... Do some blocking I/O operation ...\n"
"Reacquire the global interpreter lock.\n"
"Restore the thread state from the local variable."
msgstr ""
"Guarde el estado del subproceso en una variable local.\n"
"Libere el bloqueo global del intérprete.\n"
"... Realice alguna operación de bloqueo de E / S...\n"
"Efectúe de nuevo el bloqueo global del intérprete\n"
"Restaure el estado del subproceso desde la variable local."

#: ../../c-api/init.rst:888
msgid "This is so common that a pair of macros exists to simplify it::"
msgstr "Esto es tan común que existe un par de macros para simplificarlo::"

#: ../../c-api/init.rst:890
msgid ""
"Py_BEGIN_ALLOW_THREADS\n"
"... Do some blocking I/O operation ...\n"
"Py_END_ALLOW_THREADS"
msgstr ""
"Py_BEGIN_ALLOW_THREADS\n"
"... Realice alguna operación de E/S de bloqueo...\n"
"Py_END_ALLOW_THREADS"

#: ../../c-api/init.rst:898
msgid ""
"The :c:macro:`Py_BEGIN_ALLOW_THREADS` macro opens a new block and declares a "
"hidden local variable; the :c:macro:`Py_END_ALLOW_THREADS` macro closes the "
"block."
msgstr ""
"La macro :c:macro:`Py_BEGIN_ALLOW_THREADS` abre un nuevo bloque y declara "
"una variable local oculta; la macro :c:macro:`Py_END_ALLOW_THREADS` cierra "
"el bloque."

#: ../../c-api/init.rst:902
msgid "The block above expands to the following code::"
msgstr "El bloque anterior se expande al siguiente código::"

#: ../../c-api/init.rst:904
msgid ""
"PyThreadState *_save;\n"
"\n"
"_save = PyEval_SaveThread();\n"
"... Do some blocking I/O operation ...\n"
"PyEval_RestoreThread(_save);"
msgstr ""
"PyThreadState *_save;\n"
"\n"
"_save = PyEval_SaveThread();\n"
"... Realice alguna operación de E/S de bloqueo ...\n"
"PyEval_RestoreThread(_save);"

#: ../../c-api/init.rst:914
msgid ""
"Here is how these functions work: the global interpreter lock is used to "
"protect the pointer to the current thread state.  When releasing the lock "
"and saving the thread state, the current thread state pointer must be "
"retrieved before the lock is released (since another thread could "
"immediately acquire the lock and store its own thread state in the global "
"variable). Conversely, when acquiring the lock and restoring the thread "
"state, the lock must be acquired before storing the thread state pointer."
msgstr ""
"Estas funciones funcionan de la siguiente manera: el bloqueo global del "
"intérprete se utiliza para proteger el puntero al estado actual del hilo.  "
"Cuando se libera el bloqueo y se guarda el estado del hilo, el puntero al "
"estado actual del hilo debe recuperarse antes de liberar el bloqueo (ya que "
"otro hilo podría adquirir inmediatamente el bloqueo y almacenar su propio "
"estado del hilo en la variable global). Por el contrario, al adquirir el "
"bloqueo y restaurar el estado del hilo, el bloqueo debe adquirirse antes de "
"almacenar el puntero del estado del hilo."

#: ../../c-api/init.rst:923
msgid ""
"Calling system I/O functions is the most common use case for releasing the "
"GIL, but it can also be useful before calling long-running computations "
"which don't need access to Python objects, such as compression or "
"cryptographic functions operating over memory buffers.  For example, the "
"standard :mod:`zlib` and :mod:`hashlib` modules release the GIL when "
"compressing or hashing data."
msgstr ""
"Llamar a funciones de E/S del sistema es el caso de uso más común para "
"liberar el GIL, pero también puede ser útil antes de llamar a cálculos de "
"larga duración que no necesitan acceso a objetos Python, como funciones de "
"compresión o criptográficas que operan sobre buffers de memoria.  Por "
"ejemplo, los módulos estándar :mod:`zlib` y :mod:`hashlib` liberan el GIL al "
"comprimir o aplicar hash a los datos."

#: ../../c-api/init.rst:934
msgid "Non-Python created threads"
msgstr "Hilos creados sin Python"

#: ../../c-api/init.rst:936
msgid ""
"When threads are created using the dedicated Python APIs (such as the :mod:"
"`threading` module), a thread state is automatically associated to them and "
"the code showed above is therefore correct.  However, when threads are "
"created from C (for example by a third-party library with its own thread "
"management), they don't hold the GIL, nor is there a thread state structure "
"for them."
msgstr ""
"Cuando los hilos se crean usando las APIs dedicadas de Python (como el "
"módulo :mod:`threading` ), se les asocia automáticamente un estado de hilo "
"y, por tanto, el código mostrado arriba es correcto.  Sin embargo, cuando "
"los hilos se crean desde C (por ejemplo, por una biblioteca de terceros con "
"su propia gestión de hilos), no mantienen el GIL, ni hay una estructura de "
"estado de hilo para ellos."

#: ../../c-api/init.rst:943
msgid ""
"If you need to call Python code from these threads (often this will be part "
"of a callback API provided by the aforementioned third-party library), you "
"must first register these threads with the interpreter by creating a thread "
"state data structure, then acquiring the GIL, and finally storing their "
"thread state pointer, before you can start using the Python/C API.  When you "
"are done, you should reset the thread state pointer, release the GIL, and "
"finally free the thread state data structure."
msgstr ""
"Si necesitas llamar código Python desde estos hilos (a menudo esto será "
"parte de una API de callback proporcionada por la biblioteca de terceros "
"mencionada anteriormente), primero debes registrar estos hilos con el "
"intérprete creando una estructura de datos de estado de hilo, luego "
"adquiriendo el GIL, y finalmente almacenando su puntero de estado de hilo, "
"antes de que puedas empezar a usar la API Python/C.  Cuando hayas terminado, "
"debes restablecer el puntero de estado del hilo, liberar el GIL, y "
"finalmente liberar la estructura de datos de estado del hilo."

#: ../../c-api/init.rst:951
msgid ""
"The :c:func:`PyGILState_Ensure` and :c:func:`PyGILState_Release` functions "
"do all of the above automatically.  The typical idiom for calling into "
"Python from a C thread is::"
msgstr ""
"Las funciones :c:func:`PyGILState_Ensure` y :c:func:`PyGILState_Release` "
"hacen todo lo anterior automáticamente.  El lenguaje típico para llamar a "
"Python desde un hilo C es::"

#: ../../c-api/init.rst:955
msgid ""
"PyGILState_STATE gstate;\n"
"gstate = PyGILState_Ensure();\n"
"\n"
"/* Perform Python actions here. */\n"
"result = CallSomeFunction();\n"
"/* evaluate result or handle exception */\n"
"\n"
"/* Release the thread. No Python API allowed beyond this point. */\n"
"PyGILState_Release(gstate);"
msgstr ""
"PyGILState_STATE gstate;\n"
"gstate = PyGILState_Ensure();\n"
"\n"
"/* Realice acciones de Python aquí. */\n"
"result = CallSomeFunction();\n"
"/* evaluar resultado o manejar excepción */\n"
"\n"
"/* Suelta el hilo. No se permite API de Python más allá de este punto. */\n"
"PyGILState_Release(gstate);"

#: ../../c-api/init.rst:965
msgid ""
"Note that the ``PyGILState_*`` functions assume there is only one global "
"interpreter (created automatically by :c:func:`Py_Initialize`).  Python "
"supports the creation of additional interpreters (using :c:func:"
"`Py_NewInterpreter`), but mixing multiple interpreters and the "
"``PyGILState_*`` API is unsupported."
msgstr ""
"Tenga en cuenta que las funciones ``PyGILState_*`` asumen que sólo hay un "
"intérprete global (creado automáticamente por :c:func:`Py_Initialize`).  "
"Python soporta la creación de intérpretes adicionales (usando :c:func:"
"`Py_NewInterpreter`), pero mezclar múltiples intérpretes y la API "
"``PyGILState_*`` no está soportado."

#: ../../c-api/init.rst:975
msgid "Cautions about fork()"
msgstr "Precauciones sobre fork()"

#: ../../c-api/init.rst:977
msgid ""
"Another important thing to note about threads is their behaviour in the face "
"of the C :c:func:`fork` call. On most systems with :c:func:`fork`, after a "
"process forks only the thread that issued the fork will exist.  This has a "
"concrete impact both on how locks must be handled and on all stored state in "
"CPython's runtime."
msgstr ""
"Otra cosa importante a tener en cuenta sobre los hilos es su comportamiento "
"frente a la llamada C :c:func:`fork`. En la mayoría de los sistemas con :c:"
"func:`fork`, después de que un proceso se bifurque sólo existirá el hilo que "
"emitió la bifurcación.  Esto tiene un impacto concreto tanto en cómo deben "
"manejarse los bloqueos como en todo el estado almacenado en el tiempo de "
"ejecución de CPython."

#: ../../c-api/init.rst:983
msgid ""
"The fact that only the \"current\" thread remains means any locks held by "
"other threads will never be released. Python solves this for :func:`os.fork` "
"by acquiring the locks it uses internally before the fork, and releasing "
"them afterwards. In addition, it resets any :ref:`lock-objects` in the "
"child. When extending or embedding Python, there is no way to inform Python "
"of additional (non-Python) locks that need to be acquired before or reset "
"after a fork. OS facilities such as :c:func:`!pthread_atfork` would need to "
"be used to accomplish the same thing. Additionally, when extending or "
"embedding Python, calling :c:func:`fork` directly rather than through :func:"
"`os.fork` (and returning to or calling into Python) may result in a deadlock "
"by one of Python's internal locks being held by a thread that is defunct "
"after the fork. :c:func:`PyOS_AfterFork_Child` tries to reset the necessary "
"locks, but is not always able to."
msgstr ""
"El hecho de que sólo permanezca el hilo \"actual\" significa que los "
"bloqueos mantenidos por otros hilos nunca serán liberados. Python resuelve "
"esto en :func:`os.fork` adquiriendo los bloqueos que utiliza internamente "
"antes de la bifurcación y liberándolos después. Además, restablece "
"cualquier :ref:`lock-objects` en el hijo. Cuando se extiende o incrusta "
"Python, no hay forma de informar a Python de bloqueos adicionales (no "
"Python) que necesitan ser adquiridos antes o reiniciados después de una "
"bifurcación. Sería necesario utilizar facilidades del sistema operativo "
"como :c:func:`!pthread_atfork` para conseguir lo mismo. Además, al extender "
"o incrustar Python, llamar a :c:func:`fork` directamente en lugar de a "
"través de :func:`os.fork` (y volver o llamar a Python) puede resultar en un "
"bloqueo debido a que uno de los bloqueos internos de Python está en manos de "
"un hilo que ha desaparecido después de la bifurcación. :c:func:"
"`PyOS_AfterFork_Child` intenta restablecer los bloqueos necesarios, pero no "
"siempre puede."

#: ../../c-api/init.rst:998
msgid ""
"The fact that all other threads go away also means that CPython's runtime "
"state there must be cleaned up properly, which :func:`os.fork` does.  This "
"means finalizing all other :c:type:`PyThreadState` objects belonging to the "
"current interpreter and all other :c:type:`PyInterpreterState` objects.  Due "
"to this and the special nature of the :ref:`\"main\" interpreter <sub-"
"interpreter-support>`, :c:func:`fork` should only be called in that "
"interpreter's \"main\" thread, where the CPython global runtime was "
"originally initialized. The only exception is if :c:func:`exec` will be "
"called immediately after."
msgstr ""
"El hecho de que todos los otros hilos desaparezcan también significa que el "
"estado de ejecución de CPython se debe limpiar de forma adecuada, lo que "
"hace :func:`os.fork`.  Esto significa finalizar todos los demás objetos :c:"
"type:`PyThreadState` pertenecientes al intérprete actual y todos los demás "
"objetos :c:type:`PyInterpreterState`.  Debido a esto y a la naturaleza "
"especial del intérprete :ref:`\"main\" <sub-interpreter-support>`, :c:func:"
"`fork` sólo se debería llamar en el hilo \"main\" de ese intérprete, donde "
"el tiempo de ejecución global de CPython se inicializó originalmente. La "
"única excepción es si se llamará :c:func:`exec` inmediatamente después."

#: ../../c-api/init.rst:1011
msgid "High-level API"
msgstr "API de alto nivel"

#: ../../c-api/init.rst:1013
msgid ""
"These are the most commonly used types and functions when writing C "
"extension code, or when embedding the Python interpreter:"
msgstr ""
"Estos son los tipos y funciones más utilizados cuando se escribe código de "
"extensión C, o cuando se incrusta el intérprete Python:"

#: ../../c-api/init.rst:1018
msgid ""
"This data structure represents the state shared by a number of cooperating "
"threads.  Threads belonging to the same interpreter share their module "
"administration and a few other internal items. There are no public members "
"in this structure."
msgstr ""
"Esta estructura de datos representa el estado compartido por un número de "
"hilos cooperantes.  Los hilos que pertenecen al mismo intérprete comparten "
"la administración de sus módulos y algunos otros elementos internos. No hay "
"miembros públicos en esta estructura."

#: ../../c-api/init.rst:1023
msgid ""
"Threads belonging to different interpreters initially share nothing, except "
"process state like available memory, open file descriptors and such.  The "
"global interpreter lock is also shared by all threads, regardless of to "
"which interpreter they belong."
msgstr ""
"Los hilos que pertenecen a diferentes intérpretes inicialmente no comparten "
"nada, excepto el estado del proceso como la memoria disponible, los "
"descriptores de archivo abiertos y similares.  También se comparte el "
"bloqueo global del intérprete entre todos los hilos, independientemente del "
"intérprete al que pertenezcan."

#: ../../c-api/init.rst:1031
msgid ""
"This data structure represents the state of a single thread.  The only "
"public data member is:"
msgstr ""
"Esta estructura de datos representa el estado de un único hilo.  El único "
"miembro de datos públicos es:"

#: ../../c-api/init.rst:1036
msgid "This thread's interpreter state."
msgstr "Estado del intérprete de este hilo."

#: ../../c-api/init.rst:1047
msgid "Deprecated function which does nothing."
msgstr "Función obsoleta que no hace nada."

#: ../../c-api/init.rst:1049
msgid ""
"In Python 3.6 and older, this function created the GIL if it didn't exist."
msgstr "En Python 3.6 y anteriores, esta función creaba el GIL si no existía."

#: ../../c-api/init.rst:1051
msgid "The function now does nothing."
msgstr "La función ahora no hace nada."

#: ../../c-api/init.rst:1054
msgid ""
"This function is now called by :c:func:`Py_Initialize()`, so you don't have "
"to call it yourself anymore."
msgstr ""
"Esta función ahora es llamada por :c:func:`Py_Initialize()`, así que ya no "
"tienes que llamarla tú mismo."

#: ../../c-api/init.rst:1058
msgid ""
"This function cannot be called before :c:func:`Py_Initialize()` anymore."
msgstr "Esta función ya no se puede llamar antes de :c:func:`Py_Initialize()`."

#: ../../c-api/init.rst:1068
msgid ""
"Returns a non-zero value if :c:func:`PyEval_InitThreads` has been called.  "
"This function can be called without holding the GIL, and therefore can be "
"used to avoid calls to the locking API when running single-threaded."
msgstr ""
"Devuelve un valor distinto de cero si se llama a :c:func:"
"`PyEval_InitThreads`.  Se puede llamar esta función sin mantener el GIL, y "
"por lo tanto se puede utilizar para evitar llamadas a la API de bloqueo "
"cuando se ejecuta un solo hilo."

#: ../../c-api/init.rst:1072
msgid "The :term:`GIL` is now initialized by :c:func:`Py_Initialize()`."
msgstr "El :term:`GIL` se inicializa ahora mediante :c:func:`Py_Initialize()`."

#: ../../c-api/init.rst:1080
msgid ""
"Release the global interpreter lock (if it has been created) and reset the "
"thread state to ``NULL``, returning the previous thread state (which is not "
"``NULL``).  If the lock has been created, the current thread must have "
"acquired it."
msgstr ""
"Libera el bloqueo global del intérprete (si se ha creado) y restablece el "
"estado del subproceso a ``NULL``, devolviendo el estado anterior del "
"subproceso (que no es ``NULL``).  Si el bloqueo ha sido creado, el hilo "
"actual debe haberlo adquirido."

#: ../../c-api/init.rst:1088
msgid ""
"Acquire the global interpreter lock (if it has been created) and set the "
"thread state to *tstate*, which must not be ``NULL``.  If the lock has been "
"created, the current thread must not have acquired it, otherwise deadlock "
"ensues."
msgstr ""
"Adquiere el bloqueo global del intérprete (si se ha creado) y establece el "
"estado del hilo a *tstate*, que no debe ser ``NULL``.  Si el bloqueo ha sido "
"creado, el hilo actual no debe haberlo adquirido, de lo contrario se produce "
"un bloqueo."

#: ../../c-api/init.rst:1094 ../../c-api/init.rst:1140
#: ../../c-api/init.rst:1422
msgid ""
"Calling this function from a thread when the runtime is finalizing will "
"terminate the thread, even if the thread was not created by Python. You can "
"use :c:func:`!_Py_IsFinalizing` or :func:`sys.is_finalizing` to check if the "
"interpreter is in process of being finalized before calling this function to "
"avoid unwanted termination."
msgstr ""
"Llamar a esta función desde un hilo cuando el intérprete está finalizando "
"terminará el hilo, incluso si el hilo no fue creado por Python. Puede "
"utilizar :c:func:`!_Py_IsFinalizing` o :func:`sys.is_finalizing` para "
"comprobar si el intérprete está en proceso de finalización antes de llamar a "
"esta función para evitar una terminación no deseada."

#: ../../c-api/init.rst:1102
msgid ""
"Return the current thread state.  The global interpreter lock must be held. "
"When the current thread state is ``NULL``, this issues a fatal error (so "
"that the caller needn't check for ``NULL``)."
msgstr ""
"Devuelve el estado actual del hilo.  El bloqueo global del intérprete debe "
"mantenerse. Cuando el estado actual del hilo es ``NULL``, esto emite un "
"error fatal (para que el llamador no necesite comprobar ``NULL``)."

#: ../../c-api/init.rst:1109
msgid ""
"Swap the current thread state with the thread state given by the argument "
"*tstate*, which may be ``NULL``.  The global interpreter lock must be held "
"and is not released."
msgstr ""
"Intercambia el estado del hilo actual con el estado del hilo dado por el "
"argumento *tstate*, que puede ser ``NULL``.  El bloqueo global del "
"intérprete debe mantenerse y no se libera."

#: ../../c-api/init.rst:1114
msgid ""
"The following functions use thread-local storage, and are not compatible "
"with sub-interpreters:"
msgstr ""
"Las siguientes funciones utilizan almacenamiento local de subprocesos y no "
"son compatibles con subintérpretes:"

#: ../../c-api/init.rst:1119
msgid ""
"Ensure that the current thread is ready to call the Python C API regardless "
"of the current state of Python, or of the global interpreter lock. This may "
"be called as many times as desired by a thread as long as each call is "
"matched with a call to :c:func:`PyGILState_Release`. In general, other "
"thread-related APIs may be used between :c:func:`PyGILState_Ensure` and :c:"
"func:`PyGILState_Release` calls as long as the thread state is restored to "
"its previous state before the Release().  For example, normal usage of the :"
"c:macro:`Py_BEGIN_ALLOW_THREADS` and :c:macro:`Py_END_ALLOW_THREADS` macros "
"is acceptable."
msgstr ""
"Asegura que el hilo actual está preparado para llamar a la API de Python C "
"independientemente del estado actual de Python, o del bloqueo global del "
"intérprete. Se puede llamar esto tantas veces como se desee por un hilo "
"siempre que cada llamada coincida con una llamada a :c:func:"
"`PyGILState_Release`. En general, se pueden usar otras APIs relacionadas con "
"hilos entre las llamadas a :c:func:`PyGILState_Ensure` y :c:func:"
"`PyGILState_Release` siempre que el estado del hilo se restaure a su estado "
"previo antes de Release().  Por ejemplo, es aceptable el uso normal de las "
"macros :c:macro:`Py_BEGIN_ALLOW_THREADS` y :c:macro:`Py_END_ALLOW_THREADS`."

#: ../../c-api/init.rst:1129
msgid ""
"The return value is an opaque \"handle\" to the thread state when :c:func:"
"`PyGILState_Ensure` was called, and must be passed to :c:func:"
"`PyGILState_Release` to ensure Python is left in the same state. Even though "
"recursive calls are allowed, these handles *cannot* be shared - each unique "
"call to :c:func:`PyGILState_Ensure` must save the handle for its call to :c:"
"func:`PyGILState_Release`."
msgstr ""
"El valor de retorno es un \"handle\" opaco del estado del hilo cuando se "
"llamó a :c:func:`PyGILState_Ensure`, y debe pasarse a :c:func:"
"`PyGILState_Release` para asegurar que Python se queda en el mismo estado. "
"Aunque las llamadas recursivas están permitidas, estos handles *no* se "
"pueden compartir - cada llamada única a :c:func:`PyGILState_Ensure` debe "
"guardar el handle para su llamada a :c:func:`PyGILState_Release`."

#: ../../c-api/init.rst:1136
msgid ""
"When the function returns, the current thread will hold the GIL and be able "
"to call arbitrary Python code.  Failure is a fatal error."
msgstr ""
"Cuando la función retorna, el hilo actual mantendrá el GIL y podrá llamar a "
"código Python arbitrario.  El fallo es un error fatal."

#: ../../c-api/init.rst:1148
msgid ""
"Release any resources previously acquired.  After this call, Python's state "
"will be the same as it was prior to the corresponding :c:func:"
"`PyGILState_Ensure` call (but generally this state will be unknown to the "
"caller, hence the use of the GILState API)."
msgstr ""
"Liberar cualquier recurso adquirido previamente.  Después de esta llamada, "
"el estado de Python será el mismo que antes de la correspondiente llamada a :"
"c:func:`PyGILState_Ensure` (pero generalmente este estado será desconocido "
"para el llamante, de ahí el uso de la API GILState)."

#: ../../c-api/init.rst:1153
msgid ""
"Every call to :c:func:`PyGILState_Ensure` must be matched by a call to :c:"
"func:`PyGILState_Release` on the same thread."
msgstr ""
"Cada llamada a :c:func:`PyGILState_Ensure` debe coincidir con una llamada a :"
"c:func:`PyGILState_Release` en el mismo hilo."

#: ../../c-api/init.rst:1159
msgid ""
"Get the current thread state for this thread.  May return ``NULL`` if no "
"GILState API has been used on the current thread.  Note that the main thread "
"always has such a thread-state, even if no auto-thread-state call has been "
"made on the main thread.  This is mainly a helper/diagnostic function."
msgstr ""
"Obtiene el estado actual del subproceso.  Puede devolver ``NULL`` si no se "
"ha utilizado la API GILState en el subproceso actual.  Tener en cuenta que "
"el hilo principal siempre tiene este estado, incluso si no se ha realizado "
"ninguna llamada al estado automático del hilo en el hilo principal.  Esta es "
"principalmente una función de ayuda/diagnóstico."

#: ../../c-api/init.rst:1167
msgid ""
"Return ``1`` if the current thread is holding the GIL and ``0`` otherwise. "
"This function can be called from any thread at any time. Only if it has had "
"its Python thread state initialized and currently is holding the GIL will it "
"return ``1``. This is mainly a helper/diagnostic function.  It can be useful "
"for example in callback contexts or memory allocation functions when knowing "
"that the GIL is locked can allow the caller to perform sensitive actions or "
"otherwise behave differently."
msgstr ""
"Devuelve ``1`` si el subproceso actual mantiene el GIL y ``0`` en caso "
"contrario. Se puede llamar esta función desde cualquier hilo en cualquier "
"momento. Sólo devolverá ``1`` si se ha inicializado el estado de la hebra de "
"Python y está manteniendo el GIL. Esta es principalmente una función de "
"ayuda/diagnóstico.  Puede ser útil, por ejemplo, en contextos de devolución "
"de llamada o funciones de asignación de memoria, cuando saber que el GIL "
"está bloqueado puede permitir a quien llama realizar acciones sensibles o "
"comportarse de otra manera."

#: ../../c-api/init.rst:1179
msgid ""
"The following macros are normally used without a trailing semicolon; look "
"for example usage in the Python source distribution."
msgstr ""
"Las siguientes macros se utilizan normalmente sin punto y coma al final; "
"busque ejemplos de uso en la distribución del código fuente de Python."

#: ../../c-api/init.rst:1185
msgid ""
"This macro expands to ``{ PyThreadState *_save; _save = PyEval_SaveThread();"
"``. Note that it contains an opening brace; it must be matched with a "
"following :c:macro:`Py_END_ALLOW_THREADS` macro.  See above for further "
"discussion of this macro."
msgstr ""
"Esta macro se expande a ``{ PyThreadState *_save; _save = "
"PyEval_SaveThread();``. Tener en cuenta que contiene una llave de apertura; "
"debe coincidir con una macro :c:macro:`Py_END_ALLOW_THREADS` siguiente.  "
"Para más información sobre esta macro, ver más arriba."

#: ../../c-api/init.rst:1193
msgid ""
"This macro expands to ``PyEval_RestoreThread(_save); }``. Note that it "
"contains a closing brace; it must be matched with an earlier :c:macro:"
"`Py_BEGIN_ALLOW_THREADS` macro.  See above for further discussion of this "
"macro."
msgstr ""
"Esta macro se expande a ``PyEval_RestoreThread(_save); }``. Tener en cuenta "
"que contiene una llave de cierre; debe coincidir con una macro :c:macro:"
"`Py_BEGIN_ALLOW_THREADS` anterior.  Para más información sobre esta macro, "
"ver más arriba."

#: ../../c-api/init.rst:1201
msgid ""
"This macro expands to ``PyEval_RestoreThread(_save);``: it is equivalent to :"
"c:macro:`Py_END_ALLOW_THREADS` without the closing brace."
msgstr ""
"Esta macro se expande a ``PyEval_RestoreThread(_save);``: equivale a :c:"
"macro:`Py_END_ALLOW_THREADS` sin el corchete de cierre."

#: ../../c-api/init.rst:1207
msgid ""
"This macro expands to ``_save = PyEval_SaveThread();``: it is equivalent to :"
"c:macro:`Py_BEGIN_ALLOW_THREADS` without the opening brace and variable "
"declaration."
msgstr ""
"Esta macro se expande a ``_save = PyEval_SaveThread();``: es equivalente a :"
"c:macro:`Py_BEGIN_ALLOW_THREADS` sin la llave de apertura y la declaración "
"de variables."

#: ../../c-api/init.rst:1213
msgid "Low-level API"
msgstr "API de bajo nivel"

#: ../../c-api/init.rst:1215
msgid ""
"All of the following functions must be called after :c:func:`Py_Initialize`."
msgstr ""
"Todas las funciones siguientes deben llamarse después de :c:func:"
"`Py_Initialize`."

#: ../../c-api/init.rst:1217
msgid ":c:func:`Py_Initialize()` now initializes the :term:`GIL`."
msgstr ":c:func:`Py_Initialize()` inicializa ahora el :término:`GIL`."

#: ../../c-api/init.rst:1223
msgid ""
"Create a new interpreter state object.  The global interpreter lock need not "
"be held, but may be held if it is necessary to serialize calls to this "
"function."
msgstr ""
"Crea un nuevo objeto de estado de intérprete.  No es necesario mantener el "
"bloqueo global del intérprete, pero puede mantenerse si es necesario "
"serializar las llamadas a esta función."

#: ../../c-api/init.rst:1227
msgid ""
"Raises an :ref:`auditing event <auditing>` ``cpython."
"PyInterpreterState_New`` with no arguments."
msgstr ""
"Lanza un :ref:`auditing event <auditing>` ``cpython.PyInterpreterState_New`` "
"sin argumentos."

#: ../../c-api/init.rst:1232
msgid ""
"Reset all information in an interpreter state object.  The global "
"interpreter lock must be held."
msgstr ""
"Restablece toda la información de un objeto de estado de intérprete.  Se "
"debe mantener el bloqueo global del intérprete."

#: ../../c-api/init.rst:1235
msgid ""
"Raises an :ref:`auditing event <auditing>` ``cpython."
"PyInterpreterState_Clear`` with no arguments."
msgstr ""
"Lanza un :ref:`auditing event <auditing>` ``cpython."
"PyInterpreterState_Clear`` sin argumentos."

#: ../../c-api/init.rst:1240
msgid ""
"Destroy an interpreter state object.  The global interpreter lock need not "
"be held.  The interpreter state must have been reset with a previous call "
"to :c:func:`PyInterpreterState_Clear`."
msgstr ""
"Destruye un objeto de estado de intérprete.  No es necesario mantener el "
"bloqueo global del intérprete.  Se debe de haber reiniciado el estado del "
"intérprete con una llamada previa a :c:func:`PyInterpreterState_Clear`."

#: ../../c-api/init.rst:1247
msgid ""
"Create a new thread state object belonging to the given interpreter object. "
"The global interpreter lock need not be held, but may be held if it is "
"necessary to serialize calls to this function."
msgstr ""
"Crea un nuevo objeto de estado de hilo perteneciente al objeto intérprete "
"dado. No es necesario mantener el bloqueo global del intérprete, pero puede "
"mantenerse si es necesario serializar las llamadas a esta función."

#: ../../c-api/init.rst:1254
msgid ""
"Reset all information in a thread state object.  The global interpreter lock "
"must be held."
msgstr ""
"Restablece toda la información de un objeto de estado de hilo.  Se debe "
"mantener el bloqueo global del intérprete."

#: ../../c-api/init.rst:1257
msgid ""
"This function now calls the :c:member:`PyThreadState.on_delete` callback. "
"Previously, that happened in :c:func:`PyThreadState_Delete`."
msgstr ""
"Esta función llama ahora a la llamada de retorno :c:member:`PyThreadState."
"on_delete`. Anteriormente, esto ocurría en :c:func:`PyThreadState_Delete`."

#: ../../c-api/init.rst:1264
msgid ""
"Destroy a thread state object.  The global interpreter lock need not be "
"held. The thread state must have been reset with a previous call to :c:func:"
"`PyThreadState_Clear`."
msgstr ""
"Destruye un objeto de estado de hilo.  No es necesario mantener el bloqueo "
"global del intérprete. El estado del hilo se debe haber reiniciado con una "
"llamada previa a :c:func:`PyThreadState_Clear`."

#: ../../c-api/init.rst:1271
msgid ""
"Destroy the current thread state and release the global interpreter lock. "
"Like :c:func:`PyThreadState_Delete`, the global interpreter lock must be "
"held. The thread state must have been reset with a previous call to :c:func:"
"`PyThreadState_Clear`."
msgstr ""
"Destruye el estado actual del hilo y libera el bloqueo global del "
"intérprete. Al igual que :c:func:`PyThreadState_Delete`, el bloqueo global "
"del intérprete debe mantenerse. El estado del hilo debe haber sido "
"reiniciado con una llamada previa a :c:func:`PyThreadState_Clear`."

#: ../../c-api/init.rst:1279
msgid "Get the current frame of the Python thread state *tstate*."
msgstr "Obtiene la trama actual del estado del hilo de Python *tstate*."

#: ../../c-api/init.rst:1281
msgid ""
"Return a :term:`strong reference`. Return ``NULL`` if no frame is currently "
"executing."
msgstr ""
"Devuelve :term:`strong reference`. Devuelve ``NULL`` si no se está "
"ejecutando ninguna trama."

#: ../../c-api/init.rst:1284
msgid "See also :c:func:`PyEval_GetFrame`."
msgstr "Ver también :c:func:`PyEval_GetFrame`."

#: ../../c-api/init.rst:1286 ../../c-api/init.rst:1295
#: ../../c-api/init.rst:1304
msgid "*tstate* must not be ``NULL``."
msgstr "*tstate* no debe ser ``NULL``."

#: ../../c-api/init.rst:1293
msgid ""
"Get the unique thread state identifier of the Python thread state *tstate*."
msgstr "Obtener el identificador único del estado del hilo de Python *tstate*."

#: ../../c-api/init.rst:1302
msgid "Get the interpreter of the Python thread state *tstate*."
msgstr "Obtiene el intérprete del estado del hilo de Python *tstate*."

#: ../../c-api/init.rst:1311
msgid "Suspend tracing and profiling in the Python thread state *tstate*."
msgstr ""
"Suspende el rastreo y el perfilado en el estado *tstate* de los hilos de "
"Python."

#: ../../c-api/init.rst:1313
msgid "Resume them using the :c:func:`PyThreadState_LeaveTracing` function."
msgstr "Reanúdelos utilizando la función :c:func:`PyThreadState_LeaveTracing`."

#: ../../c-api/init.rst:1320
msgid ""
"Resume tracing and profiling in the Python thread state *tstate* suspended "
"by the :c:func:`PyThreadState_EnterTracing` function."
msgstr ""
"Reanudar el trazado y perfilado en el estado *tstate* del hilo de Python "
"suspendido por la función :c:func:`PyThreadState_EnterTracing`."

#: ../../c-api/init.rst:1323
msgid ""
"See also :c:func:`PyEval_SetTrace` and :c:func:`PyEval_SetProfile` functions."
msgstr ""
"Ver también las funciones :c:func:`PyEval_SetTrace` y :c:func:"
"`PyEval_SetProfile`."

#: ../../c-api/init.rst:1331
msgid "Get the current interpreter."
msgstr "Obtener el intérprete actual."

#: ../../c-api/init.rst:1333
msgid ""
"Issue a fatal error if there no current Python thread state or no current "
"interpreter. It cannot return NULL."
msgstr ""
"Emite un error fatal si no hay un estado de hilo Python actual o no hay un "
"intérprete actual. No puede devolver NULL."

#: ../../c-api/init.rst:1336 ../../c-api/init.rst:1346
msgid "The caller must hold the GIL."
msgstr "Caller debe mantener el GIL."

#: ../../c-api/init.rst:1343
msgid ""
"Return the interpreter's unique ID.  If there was any error in doing so then "
"``-1`` is returned and an error is set."
msgstr ""
"Devuelve el ID único del intérprete.  Si hubo algún error al hacerlo "
"entonces se devuelve ``-1`` y se establece un error."

#: ../../c-api/init.rst:1353
msgid ""
"Return a dictionary in which interpreter-specific data may be stored. If "
"this function returns ``NULL`` then no exception has been raised and the "
"caller should assume no interpreter-specific dict is available."
msgstr ""
"Devuelve un diccionario en el que se pueden almacenar datos específicos del "
"intérprete. Si esta función devuelve ``NULL`` entonces no se ha lanzado "
"ninguna excepción y caller debería asumir que no hay disponible ningún dict "
"específico del intérprete."

#: ../../c-api/init.rst:1357
msgid ""
"This is not a replacement for :c:func:`PyModule_GetState()`, which "
"extensions should use to store interpreter-specific state information."
msgstr ""
"No sustituye a :c:func:`PyModule_GetState()`, que las extensiones deberían "
"utilizar para almacenar información de estado específica del intérprete."

#: ../../c-api/init.rst:1364
msgid "Type of a frame evaluation function."
msgstr "Tipo de función de evaluación de un marco."

#: ../../c-api/init.rst:1366
msgid ""
"The *throwflag* parameter is used by the ``throw()`` method of generators: "
"if non-zero, handle the current exception."
msgstr ""
"El parámetro *throwflag* se usa por el método ``throw()`` de los "
"generadores: si es distinto de cero, maneja la excepción actual."

#: ../../c-api/init.rst:1369
msgid "The function now takes a *tstate* parameter."
msgstr "La función toma ahora un parámetro *tstate*."

#: ../../c-api/init.rst:1372
msgid ""
"The *frame* parameter changed from ``PyFrameObject*`` to "
"``_PyInterpreterFrame*``."
msgstr ""
"El parámetro *frame* ha cambiado de ``PyFrameObject*`` a "
"``_PyInterpreterFrame*``."

#: ../../c-api/init.rst:1377
msgid "Get the frame evaluation function."
msgstr "Obtener la función de evaluación del marco."

#: ../../c-api/init.rst:1379 ../../c-api/init.rst:1387
msgid "See the :pep:`523` \"Adding a frame evaluation API to CPython\"."
msgstr "Ver :pep:`523` \"Agregar una API de evaluación de marcos a CPython\"."

#: ../../c-api/init.rst:1385
msgid "Set the frame evaluation function."
msgstr "Configura la función de evaluación de estructuras."

#: ../../c-api/init.rst:1394
msgid ""
"Return a dictionary in which extensions can store thread-specific state "
"information.  Each extension should use a unique key to use to store state "
"in the dictionary.  It is okay to call this function when no current thread "
"state is available. If this function returns ``NULL``, no exception has been "
"raised and the caller should assume no current thread state is available."
msgstr ""
"Devuelve un diccionario en el que las extensiones pueden almacenar "
"información de estado específica del hilo.  Cada extensión debe usar una "
"clave única para almacenar el estado en el diccionario.  Está bien llamar a "
"esta función cuando no se dispone del estado actual del subproceso. Si esta "
"función devuelve ``NULL``, no se ha lanzado ninguna excepción y caller debe "
"asumir que no hay disponible ningún estado de subproceso."

#: ../../c-api/init.rst:1403
msgid ""
"Asynchronously raise an exception in a thread. The *id* argument is the "
"thread id of the target thread; *exc* is the exception object to be raised. "
"This function does not steal any references to *exc*. To prevent naive "
"misuse, you must write your own C extension to call this.  Must be called "
"with the GIL held. Returns the number of thread states modified; this is "
"normally one, but will be zero if the thread id isn't found.  If *exc* is "
"``NULL``, the pending exception (if any) for the thread is cleared. This "
"raises no exceptions."
msgstr ""
"Lanza asíncronamente una excepción en un subproceso. El argumento *id* es el "
"identificador del subproceso de destino; *exc* es el objeto de excepción a "
"lanzar. Esta función no roba ninguna referencia a *exc*. Para evitar un mal "
"uso ingenuo, debe escribir su propia extensión de C para llamar a esto.  "
"Debe ser llamada con el GIL retenido. Devuelve el número de estados de hilo "
"modificados; normalmente es uno, pero será cero si no se encuentra el id del "
"hilo.  Si *exc* es ``NULL``, la excepción pendiente (si existe) para el hilo "
"se borra. Esto no genera excepciones."

#: ../../c-api/init.rst:1411
msgid ""
"The type of the *id* parameter changed from :c:expr:`long` to :c:expr:"
"`unsigned long`."
msgstr ""
"El tipo del parámetro *id* ha cambiado de :c:expr:`long` a :c:expr:`unsigned "
"long`."

#: ../../c-api/init.rst:1417
msgid ""
"Acquire the global interpreter lock and set the current thread state to "
"*tstate*, which must not be ``NULL``.  The lock must have been created "
"earlier. If this thread already has the lock, deadlock ensues."
msgstr ""
"Adquiere el bloqueo global del intérprete y establece el estado actual del "
"hilo en *tstate*, que no debe ser ``NULL``.  El bloqueo debe haber sido "
"creado anteriormente. Si este hilo ya tiene el bloqueo, se produce un punto "
"muerto."

#: ../../c-api/init.rst:1428 ../../c-api/init.rst:1466
msgid ""
"Updated to be consistent with :c:func:`PyEval_RestoreThread`, :c:func:"
"`Py_END_ALLOW_THREADS`, and :c:func:`PyGILState_Ensure`, and terminate the "
"current thread if called while the interpreter is finalizing."
msgstr ""
"Actualizado para ser consistente con :c:func:`PyEval_RestoreThread`, :c:func:"
"`Py_END_ALLOW_THREADS`, y :c:func:`PyGILState_Ensure`, y terminar el hilo "
"actual si se llama mientras el intérprete está finalizando."

#: ../../c-api/init.rst:1433
msgid ""
":c:func:`PyEval_RestoreThread` is a higher-level function which is always "
"available (even when threads have not been initialized)."
msgstr ""
":c:func:`PyEval_RestoreThread` es una función de nivel superior que siempre "
"está disponible (incluso cuando los hilos no se han inicializado)."

#: ../../c-api/init.rst:1439
msgid ""
"Reset the current thread state to ``NULL`` and release the global "
"interpreter lock.  The lock must have been created earlier and must be held "
"by the current thread.  The *tstate* argument, which must not be ``NULL``, "
"is only used to check that it represents the current thread state --- if it "
"isn't, a fatal error is reported."
msgstr ""
"Restablece el estado del subproceso actual a ``NULL`` y libera el bloqueo "
"global del intérprete.  El bloqueo se debe haber creado con anterioridad y "
"se debe mantener por el hilo actual.  El argumento *tstate*, que no debe ser "
"``NULL``, sólo se usa para comprobar que representa el estado actual del "
"hilo --- si no lo es, se informa de un error fatal."

#: ../../c-api/init.rst:1445
msgid ""
":c:func:`PyEval_SaveThread` is a higher-level function which is always "
"available (even when threads have not been initialized)."
msgstr ""
":c:func:`PyEval_SaveThread` es una función de nivel superior que siempre "
"está disponible (incluso cuando los hilos no se han inicializado)."

#: ../../c-api/init.rst:1451
msgid ""
"Acquire the global interpreter lock.  The lock must have been created "
"earlier. If this thread already has the lock, a deadlock ensues."
msgstr ""
"Adquiere el bloqueo global del intérprete.  El bloqueo se debe haber creado "
"con anterioridad. Si este hilo ya tiene el bloqueo, se produce un punto "
"muerto."

#: ../../c-api/init.rst:1454
msgid ""
"This function does not update the current thread state.  Please use :c:func:"
"`PyEval_RestoreThread` or :c:func:`PyEval_AcquireThread` instead."
msgstr ""
"Esta función no actualiza el estado actual del hilo.  Usar en su lugar :c:"
"func:`PyEval_RestoreThread` o :c:func:`PyEval_AcquireThread`."

#: ../../c-api/init.rst:1460
msgid ""
"Calling this function from a thread when the runtime is finalizing will "
"terminate the thread, even if the thread was not created by Python. You can "
"use :c:func:`_Py_IsFinalizing` or :func:`sys.is_finalizing` to check if the "
"interpreter is in process of being finalized before calling this function to "
"avoid unwanted termination."
msgstr ""
"Llamar a esta función desde un hilo cuando el intérprete está finalizando "
"terminará el hilo, incluso si el hilo no fue creado por Python. Puede "
"utilizar :c:func:`_Py_IsFinalizing` o :func:`sys.is_finalizing` para "
"comprobar si el intérprete está en proceso de finalización antes de llamar a "
"esta función para evitar una terminación no deseada."

#: ../../c-api/init.rst:1474
msgid ""
"Release the global interpreter lock.  The lock must have been created "
"earlier."
msgstr ""
"Libera el bloqueo global del intérprete.  El bloqueo debe haberse creado "
"anteriormente."

#: ../../c-api/init.rst:1476
msgid ""
"This function does not update the current thread state.  Please use :c:func:"
"`PyEval_SaveThread` or :c:func:`PyEval_ReleaseThread` instead."
msgstr ""
"Esta función no actualiza el estado actual del hilo.  Usar :c:func:"
"`PyEval_SaveThread` o :c:func:`PyEval_ReleaseThread` en su lugar."

#: ../../c-api/init.rst:1485
msgid "Sub-interpreter support"
msgstr "Soporte para subintérpretes"

#: ../../c-api/init.rst:1487
msgid ""
"While in most uses, you will only embed a single Python interpreter, there "
"are cases where you need to create several independent interpreters in the "
"same process and perhaps even in the same thread. Sub-interpreters allow you "
"to do that."
msgstr ""
"Mientras que en la mayoría de los usos, sólo incrustarás un único intérprete "
"de Python, hay casos en los que se necesita crear varios intérpretes "
"independientes en el mismo proceso y quizás incluso en el mismo hilo. Los "
"subintérpretes te permiten hacerlo."

#: ../../c-api/init.rst:1492
msgid ""
"The \"main\" interpreter is the first one created when the runtime "
"initializes. It is usually the only Python interpreter in a process.  Unlike "
"sub-interpreters, the main interpreter has unique process-global "
"responsibilities like signal handling.  It is also responsible for execution "
"during runtime initialization and is usually the active interpreter during "
"runtime finalization.  The :c:func:`PyInterpreterState_Main` function "
"returns a pointer to its state."
msgstr ""
"El intérprete \"main\" es el primero que se crea cuando se inicializa el "
"tiempo de ejecución. Normalmente es el único intérprete de Python en un "
"proceso.  A diferencia de los sub-intérpretes, el intérprete principal tiene "
"responsabilidades únicas a nivel de proceso, como el manejo de señales.  "
"También es responsable de la ejecución durante la inicialización del tiempo "
"de ejecución y es normalmente el intérprete activo durante la finalización "
"del tiempo de ejecución.  La función :c:func:`PyInterpreterState_Main` "
"devuelve un puntero a su estado."

#: ../../c-api/init.rst:1499
msgid ""
"You can switch between sub-interpreters using the :c:func:"
"`PyThreadState_Swap` function. You can create and destroy them using the "
"following functions:"
msgstr ""
"Puede cambiar entre subinterpretadores utilizando la función :c:func:"
"`PyThreadState_Swap`. Puede crearlos y destruirlos utilizando las siguientes "
"funciones:"

#: ../../c-api/init.rst:1505
msgid ""
"Structure containing most parameters to configure a sub-interpreter. Its "
"values are used only in :c:func:`Py_NewInterpreterFromConfig` and never "
"modified by the runtime."
msgstr ""
"Estructura que contiene la mayoría de los parámetros para configurar un "
"subintérprete. Sus valores sólo se utilizan en :c:func:"
"`Py_NewInterpreterFromConfig` y nunca se modifican por el tiempo de "
"ejecución."

#: ../../c-api/init.rst:1511
msgid "Structure fields:"
msgstr "Campos de estructura:"

#: ../../c-api/init.rst:1515
msgid ""
"If this is ``0`` then the sub-interpreter will use its own \"object\" "
"allocator state. Otherwise it will use (share) the main interpreter's."
msgstr ""
"Si es ``0``, el subintérprete utilizará su propio estado asignador de "
"\"objetos\". En caso contrario, utilizará (compartirá) el del intérprete "
"principal."

#: ../../c-api/init.rst:1519
msgid ""
"If this is ``0`` then :c:member:`~PyInterpreterConfig."
"check_multi_interp_extensions` must be ``1`` (non-zero). If this is ``1`` "
"then :c:member:`~PyInterpreterConfig.gil` must not be :c:macro:"
"`PyInterpreterConfig_OWN_GIL`."
msgstr ""
"Si es ``0`` entonces :c:member:`~PyInterpreterConfig."
"check_multi_interp_extensions` debe ser ``1`` (distinto de cero). Si es "
"``1`` entonces :c:member:`~PyInterpreterConfig.gil` no debe ser :c:macro:"
"`PyInterpreterConfig_OWN_GIL`."

#: ../../c-api/init.rst:1527
msgid ""
"If this is ``0`` then the runtime will not support forking the process in "
"any thread where the sub-interpreter is currently active. Otherwise fork is "
"unrestricted."
msgstr ""
"Si esto es ``0`` entonces el tiempo de ejecución no soportará la bifurcación "
"del proceso en cualquier hilo donde el subinterpretador esté actualmente "
"activo. De lo contrario, la bifurcación no tiene restricciones."

#: ../../c-api/init.rst:1531
msgid ""
"Note that the :mod:`subprocess` module still works when fork is disallowed."
msgstr ""
"Tener en cuenta que el módulo :mod:`subprocess` sigue funcionando cuando no "
"se permite la bifurcación."

#: ../../c-api/init.rst:1536
msgid ""
"If this is ``0`` then the runtime will not support replacing the current "
"process via exec (e.g. :func:`os.execv`) in any thread where the sub-"
"interpreter is currently active. Otherwise exec is unrestricted."
msgstr ""
"Si esto es ``0`` entonces el tiempo de ejecución no soportará reemplazar el "
"proceso actual a través de exec (por ejemplo :func:`os.execv`) en cualquier "
"hilo donde el subinterpretador esté actualmente activo. De lo contrario exec "
"no tiene restricciones."

#: ../../c-api/init.rst:1541
msgid ""
"Note that the :mod:`subprocess` module still works when exec is disallowed."
msgstr ""
"Tener en cuenta que el módulo :mod:`subprocess` sigue funcionando cuando no "
"se permite exec."

#: ../../c-api/init.rst:1546
msgid ""
"If this is ``0`` then the sub-interpreter's :mod:`threading` module won't "
"create threads. Otherwise threads are allowed."
msgstr ""
"Si es ``0``, el módulo de subinterpretación :mod:`threading` no creará "
"hilos. De lo contrario, se permiten los hilos."

#: ../../c-api/init.rst:1552
msgid ""
"If this is ``0`` then the sub-interpreter's :mod:`threading` module won't "
"create daemon threads. Otherwise daemon threads are allowed (as long as :c:"
"member:`~PyInterpreterConfig.allow_threads` is non-zero)."
msgstr ""
"Si es ``0``, el módulo :mod:`threading` del subinterpretador no creará "
"subprocesos demonio. De lo contrario, los subprocesos demonio están "
"permitidos (siempre que :c:member:`~PyInterpreterConfig.allow_threads` sea "
"distinto de cero)."

#: ../../c-api/init.rst:1559
msgid ""
"If this is ``0`` then all extension modules may be imported, including "
"legacy (single-phase init) modules, in any thread where the sub-interpreter "
"is currently active. Otherwise only multi-phase init extension modules (see :"
"pep:`489`) may be imported. (Also see :c:macro:"
"`Py_mod_multiple_interpreters`.)"
msgstr ""
"Si esto es ``0`` entonces todos los módulos de extensión pueden ser "
"importados, incluyendo los módulos de legado (init monofásico), en cualquier "
"hilo donde el subinterpretador esté actualmente activo. En caso contrario, "
"sólo podrán importarse los módulos de extensión init multifase (ver :pep:"
"`489`). (También :c:macro:`Py_mod_multiple_interpreters`.)"

#: ../../c-api/init.rst:1566
msgid ""
"This must be ``1`` (non-zero) if :c:member:`~PyInterpreterConfig."
"use_main_obmalloc` is ``0``."
msgstr ""
"Debe ser ``1`` (distinto de cero) si :c:member:`~PyInterpreterConfig."
"use_main_obmalloc` es ``0``."

#: ../../c-api/init.rst:1571
msgid ""
"This determines the operation of the GIL for the sub-interpreter. It may be "
"one of the following:"
msgstr ""
"Determina el funcionamiento del GIL para el subintérprete. Puede ser uno de "
"los siguientes:"

#: ../../c-api/init.rst:1578
msgid "Use the default selection (:c:macro:`PyInterpreterConfig_SHARED_GIL`)."
msgstr ""
"Utilice la selección por defecto (:c:macro:`PyInterpreterConfig_SHARED_GIL`)."

#: ../../c-api/init.rst:1582
msgid "Use (share) the main interpreter's GIL."
msgstr "Utilizar (compartir) el GIL del intérprete principal."

#: ../../c-api/init.rst:1586
msgid "Use the sub-interpreter's own GIL."
msgstr "Utilizar el GIL propio del subintérprete."

#: ../../c-api/init.rst:1588
msgid ""
"If this is :c:macro:`PyInterpreterConfig_OWN_GIL` then :c:member:"
"`PyInterpreterConfig.use_main_obmalloc` must be ``0``."
msgstr ""
"Si esto es :c:macro:`PyInterpreterConfig_OWN_GIL` entonces :c:member:"
"`PyInterpreterConfig.use_main_obmalloc` debe ser ``0``."

#: ../../c-api/init.rst:1602
msgid ""
"Create a new sub-interpreter.  This is an (almost) totally separate "
"environment for the execution of Python code.  In particular, the new "
"interpreter has separate, independent versions of all imported modules, "
"including the fundamental modules :mod:`builtins`, :mod:`__main__` and :mod:"
"`sys`.  The table of loaded modules (``sys.modules``) and the module search "
"path (``sys.path``) are also separate.  The new environment has no ``sys."
"argv`` variable.  It has new standard I/O stream file objects ``sys.stdin``, "
"``sys.stdout`` and ``sys.stderr`` (however these refer to the same "
"underlying file descriptors)."
msgstr ""
"Crear un nuevo sub-intérprete.  Se trata de un entorno (casi) totalmente "
"independiente para la ejecución de código Python.  En particular, el nuevo "
"intérprete tiene versiones separadas e independientes de todos los módulos "
"importados, incluyendo los módulos fundamentales :mod:`builtins`, :mod:"
"`__main__` y :mod:`sys`.  La tabla de módulos cargados (``sys.modules``) y "
"la ruta de búsqueda de módulos (``sys.path``) también están separadas.  El "
"nuevo entorno no tiene la variable ``sys.argv``.  Tiene nuevos objetos de "
"archivo de flujo de E/S estándar ``sys.stdin``, ``sys.stdout`` y ``sys."
"stderr`` (sin embargo, éstos se refieren a los mismos descriptores de "
"archivo subyacentes)."

#: ../../c-api/init.rst:1612
msgid ""
"The given *config* controls the options with which the interpreter is "
"initialized."
msgstr ""
"La *config* dada controla las opciones con las que se inicializa el "
"intérprete."

#: ../../c-api/init.rst:1615
msgid ""
"Upon success, *tstate_p* will be set to the first thread state created in "
"the new sub-interpreter.  This thread state is made in the current thread "
"state. Note that no actual thread is created; see the discussion of thread "
"states below.  If creation of the new interpreter is unsuccessful, "
"*tstate_p* is set to ``NULL``; no exception is set since the exception state "
"is stored in the current thread state and there may not be a current thread "
"state."
msgstr ""
"Si tiene éxito, *tstate_p* se establecerá en el primer estado de subproceso "
"creado en el nuevo subintérprete.  Este estado de hebra se crea en el estado "
"de hebra actual. Tenga en cuenta que no se crea ningún hilo real; véase la "
"discusión de los estados de hilo más adelante.  Si la creación del nuevo "
"intérprete no tiene éxito, *tstate_p* se establece en ``NULL``; no se "
"establece ninguna excepción ya que el estado de excepción se almacena en el "
"estado de hilo actual y puede que no haya un estado de hilo actual."

#: ../../c-api/init.rst:1624
msgid ""
"Like all other Python/C API functions, the global interpreter lock must be "
"held before calling this function and is still held when it returns.  "
"Likewise a current thread state must be set on entry.  On success, the "
"returned thread state will be set as current.  If the sub-interpreter is "
"created with its own GIL then the GIL of the calling interpreter will be "
"released.  When the function returns, the new interpreter's GIL will be held "
"by the current thread and the previously interpreter's GIL will remain "
"released here."
msgstr ""
"Como todas las demás funciones de la API de Python/C, el bloqueo global del "
"intérprete debe mantenerse antes de llamar a esta función y se mantiene "
"cuando ésta retorna.  Del mismo modo, debe establecerse un estado de hilo "
"actual al entrar.  En caso de éxito, el estado del hilo devuelto se "
"establecerá como actual.  Si el subintérprete se crea con su propio GIL, se "
"liberará el GIL del intérprete llamante.  Cuando la función retorna, el GIL "
"del nuevo intérprete será retenido por el thread actual y el GIL del "
"intérprete anterior permanecerá liberado aquí."

#: ../../c-api/init.rst:1635
msgid ""
"Sub-interpreters are most effective when isolated from each other, with "
"certain functionality restricted::"
msgstr ""
"Los subinterpretadores son más eficaces cuando están aislados unos de otros, "
"con ciertas funciones restringidas::"

#: ../../c-api/init.rst:1638
msgid ""
"PyInterpreterConfig config = {\n"
"    .use_main_obmalloc = 0,\n"
"    .allow_fork = 0,\n"
"    .allow_exec = 0,\n"
"    .allow_threads = 1,\n"
"    .allow_daemon_threads = 0,\n"
"    .check_multi_interp_extensions = 1,\n"
"    .gil = PyInterpreterConfig_OWN_GIL,\n"
"};\n"
"PyThreadState *tstate = NULL;\n"
"PyStatus status = Py_NewInterpreterFromConfig(&tstate, &config);\n"
"if (PyStatus_Exception(status)) {\n"
"    Py_ExitStatusException(status);\n"
"}"
msgstr ""
"PyInterpreterConfig config = {\n"
"    .use_main_obmalloc = 0,\n"
"    .allow_fork = 0,\n"
"    .allow_exec = 0,\n"
"    .allow_threads = 1,\n"
"    .allow_daemon_threads = 0,\n"
"    .check_multi_interp_extensions = 1,\n"
"    .gil = PyInterpreterConfig_OWN_GIL,\n"
"};\n"
"PyThreadState *tstate = NULL;\n"
"PyStatus status = Py_NewInterpreterFromConfig(&tstate, &config);\n"
"if (PyStatus_Exception(status)) {\n"
"    Py_ExitStatusException(status);\n"
"}"

#: ../../c-api/init.rst:1653
msgid ""
"Note that the config is used only briefly and does not get modified. During "
"initialization the config's values are converted into various :c:type:"
"`PyInterpreterState` values.  A read-only copy of the config may be stored "
"internally on the :c:type:`PyInterpreterState`."
msgstr ""
"Tenga en cuenta que la configuración sólo se utiliza brevemente y no se "
"modifica. Durante la inicialización, los valores de config se convierten en "
"varios valores de :c:type:`PyInterpreterState`.  Una copia de sólo lectura "
"de la configuración puede ser almacenada internamente en el :c:type:"
"`PyInterpreterState`."

#: ../../c-api/init.rst:1662
msgid "Extension modules are shared between (sub-)interpreters as follows:"
msgstr ""
"Los módulos de ampliación se comparten entre (sub)intérpretes del siguiente "
"modo:"

#: ../../c-api/init.rst:1664
msgid ""
"For modules using multi-phase initialization, e.g. :c:func:"
"`PyModule_FromDefAndSpec`, a separate module object is created and "
"initialized for each interpreter. Only C-level static and global variables "
"are shared between these module objects."
msgstr ""
"Para los módulos que utilizan la inicialización multifase, por ejemplo :c:"
"func:`PyModule_FromDefAndSpec`, se crea e inicializa un objeto de módulo "
"independiente para cada intérprete. Sólo las variables estáticas y globales "
"de nivel C se comparten entre estos objetos de módulo."

#: ../../c-api/init.rst:1670
msgid ""
"For modules using single-phase initialization, e.g. :c:func:"
"`PyModule_Create`, the first time a particular extension is imported, it is "
"initialized normally, and a (shallow) copy of its module's dictionary is "
"squirreled away. When the same extension is imported by another "
"(sub-)interpreter, a new module is initialized and filled with the contents "
"of this copy; the extension's ``init`` function is not called. Objects in "
"the module's dictionary thus end up shared across (sub-)interpreters, which "
"might cause unwanted behavior (see `Bugs and caveats`_ below)."
msgstr ""
"Para los módulos que utilizan la inicialización en una sola fase, por "
"ejemplo :c:func:`PyModule_Create`, la primera vez que se importa una "
"extensión concreta, se inicializa normalmente y se guarda una copia "
"(superficial) del diccionario de su módulo. Cuando otro (sub)intérprete "
"importa la misma extensión, se inicializa un nuevo módulo y se llena con el "
"contenido de esta copia; no se llama a la función ``init`` de la extensión. "
"Los objetos en el diccionario del módulo terminan compartidos entre "
"(sub)intérpretes, lo que puede causar comportamientos no deseados (ver `Bugs "
"y advertencias`_ más abajo)."

#: ../../c-api/init.rst:1681
msgid ""
"Note that this is different from what happens when an extension is imported "
"after the interpreter has been completely re-initialized by calling :c:func:"
"`Py_FinalizeEx` and :c:func:`Py_Initialize`; in that case, the extension's "
"``initmodule`` function *is* called again. As with multi-phase "
"initialization, this means that only C-level static and global variables are "
"shared between these modules."
msgstr ""
"Nótese que esto es distinto de lo que ocurre cuando se importa una extensión "
"después de que el intérprete haya sido completamente reinicializado llamando "
"a :c:func:`Py_FinalizeEx` y :c:func:`Py_Initialize`; en ese caso, la función "
"``initmodule`` de la extensión *se* llama de nuevo. Al igual que con la "
"inicialización multifase, esto significa que sólo las variables estáticas y "
"globales de nivel C se comparten entre estos módulos."

#: ../../c-api/init.rst:1701
msgid ""
"Create a new sub-interpreter.  This is essentially just a wrapper around :c:"
"func:`Py_NewInterpreterFromConfig` with a config that preserves the existing "
"behavior.  The result is an unisolated sub-interpreter that shares the main "
"interpreter's GIL, allows fork/exec, allows daemon threads, and allows "
"single-phase init modules."
msgstr ""
"Crear un nuevo subinterprete.  Esto es esencialmente una envoltura alrededor "
"de :c:func:`Py_NewInterpreterFromConfig` con una configuración que preserva "
"el comportamiento existente.  El resultado es un subintérprete no aislado "
"que comparte el GIL del intérprete principal, permite fork/exec, permite "
"hilos demonio y permite módulos init monofásicos."

#: ../../c-api/init.rst:1713
msgid ""
"Destroy the (sub-)interpreter represented by the given thread state. The "
"given thread state must be the current thread state.  See the discussion of "
"thread states below.  When the call returns, the current thread state is "
"``NULL``.  All thread states associated with this interpreter are "
"destroyed.  The global interpreter lock used by the target interpreter must "
"be held before calling this function.  No GIL is held when it returns."
msgstr ""
"Destruye el (sub)intérprete representado por el estado del hilo dado. El "
"estado de subproceso dado debe ser el estado de subproceso actual.  Véase la "
"discusión de los estados de los hilos más adelante.  Cuando la llamada "
"regresa, el estado actual del hilo es ``NULL``.  Todos los estados asociados "
"a este intérprete son destruidos.  El bloqueo global del intérprete "
"utilizado por el intérprete destino debe mantenerse antes de llamar a esta "
"función.  No se mantiene ningún GIL cuando devuelve."

#: ../../c-api/init.rst:1721
msgid ""
":c:func:`Py_FinalizeEx` will destroy all sub-interpreters that haven't been "
"explicitly destroyed at that point."
msgstr ""
":c:func:`Py_FinalizeEx` destruirá todos los subinterpretadores que no se "
"hayan destruidos explicítamente en ese momento."

#: ../../c-api/init.rst:1726
msgid "A Per-Interpreter GIL"
msgstr "Un GIL por intérprete"

#: ../../c-api/init.rst:1728
msgid ""
"Using :c:func:`Py_NewInterpreterFromConfig` you can create a sub-interpreter "
"that is completely isolated from other interpreters, including having its "
"own GIL.  The most important benefit of this isolation is that such an "
"interpreter can execute Python code without being blocked by other "
"interpreters or blocking any others.  Thus a single Python process can truly "
"take advantage of multiple CPU cores when running Python code.  The "
"isolation also encourages a different approach to concurrency than that of "
"just using threads. (See :pep:`554`.)"
msgstr ""
"Usando :c:func:`Py_NewInterpreterFromConfig` puedes crear un sub-intérprete "
"que esté completamente aislado de otros intérpretes, incluso teniendo su "
"propio GIL.  El beneficio más importante de este aislamiento es que dicho "
"intérprete puede ejecutar código Python sin ser bloqueado por otros "
"intérpretes ni bloquear a ningún otro.  De este modo, un único proceso "
"Python puede aprovechar realmente múltiples núcleos de CPU al ejecutar "
"código Python.  El aislamiento también fomenta una aproximación diferente a "
"la concurrencia que la de usar sólo hilos. (Ver :pep:`554`.)"

#: ../../c-api/init.rst:1738
msgid ""
"Using an isolated interpreter requires vigilance in preserving that "
"isolation.  That especially means not sharing any objects or mutable state "
"without guarantees about thread-safety.  Even objects that are otherwise "
"immutable (e.g. ``None``, ``(1, 5)``) can't normally be shared because of "
"the refcount.  One simple but less-efficient approach around this is to use "
"a global lock around all use of some state (or object). Alternately, "
"effectively immutable objects (like integers or strings) can be made safe in "
"spite of their refcounts by making them \"immortal\". In fact, this has been "
"done for the builtin singletons, small integers, and a number of other "
"builtin objects."
msgstr ""
"El uso de un intérprete aislado requiere vigilancia para preservar ese "
"aislamiento.  Esto significa especialmente no compartir ningún objeto o "
"estado mutable sin garantías sobre la seguridad de los hilos.  Incluso los "
"objetos que son inmutables (por ejemplo, ``None``, ``(1, 5)``) normalmente "
"no pueden ser compartidos debido al refcount.  Un enfoque simple pero menos "
"eficiente es usar un bloqueo global para todo uso de algún estado (u "
"objeto). Alternativamente, objetos efectivamente inmutables (como enteros o "
"cadenas) pueden hacerse seguros a pesar de sus refcounts haciéndolos "
"\"inmortales\". De hecho, esto se ha hecho para los singletons incorporados, "
"pequeños enteros, y un número de otros objetos incorporados."

#: ../../c-api/init.rst:1749
msgid ""
"If you preserve isolation then you will have access to proper multi-core "
"computing without the complications that come with free-threading. Failure "
"to preserve isolation will expose you to the full consequences of free-"
"threading, including races and hard-to-debug crashes."
msgstr ""
"Si preserva el aislamiento, tendrá acceso a una computación multinúcleo "
"adecuada sin las complicaciones que conlleva el free-threading. No preservar "
"el aislamiento le expondrá a todas las consecuencias del free-threading, "
"incluyendo carreras y cuelgues difíciles de depurar."

#: ../../c-api/init.rst:1754
msgid ""
"Aside from that, one of the main challenges of using multiple isolated "
"interpreters is how to communicate between them safely (not break isolation) "
"and efficiently.  The runtime and stdlib do not provide any standard "
"approach to this yet.  A future stdlib module would help mitigate the effort "
"of preserving isolation and expose effective tools for communicating (and "
"sharing) data between interpreters."
msgstr ""
"Aparte de eso, uno de los principales retos de usar múltiples intérpretes "
"aislados es cómo comunicarse entre ellos de forma segura (sin romper el "
"aislamiento) y eficiente.  El tiempo de ejecución y stdlib no proporcionan "
"ningún enfoque estándar para esto todavía.  Un futuro módulo stdlib ayudaría "
"a mitigar el esfuerzo de preservar el aislamiento y exponer herramientas "
"efectivas para comunicar (y compartir) datos entre intérpretes."

#: ../../c-api/init.rst:1765
msgid "Bugs and caveats"
msgstr "Errores y advertencias"

#: ../../c-api/init.rst:1767
msgid ""
"Because sub-interpreters (and the main interpreter) are part of the same "
"process, the insulation between them isn't perfect --- for example, using "
"low-level file operations like  :func:`os.close` they can (accidentally or "
"maliciously) affect each other's open files.  Because of the way extensions "
"are shared between (sub-)interpreters, some extensions may not work "
"properly; this is especially likely when using single-phase initialization "
"or (static) global variables. It is possible to insert objects created in "
"one sub-interpreter into a namespace of another (sub-)interpreter; this "
"should be avoided if possible."
msgstr ""
"Debido a que los sub-intérpretes (y el intérprete principal) son parte del "
"mismo proceso, el aislamiento entre ellos no es perfecto --- por ejemplo, "
"usando operaciones de archivo de bajo nivel como :func:`os.close` pueden "
"(accidental o maliciosamente) afectar a los archivos abiertos del otro.  "
"Debido a la forma en que se comparten las extensiones entre "
"(sub)intérpretes, algunas extensiones pueden no funcionar correctamente; "
"esto es especialmente probable cuando se utiliza inicialización monofásica o "
"variables globales (estáticas). Es posible insertar objetos creados en un "
"subintérprete en un espacio de nombres de otro (sub)intérprete; esto debe "
"evitarse si es posible."

#: ../../c-api/init.rst:1777
msgid ""
"Special care should be taken to avoid sharing user-defined functions, "
"methods, instances or classes between sub-interpreters, since import "
"operations executed by such objects may affect the wrong (sub-)interpreter's "
"dictionary of loaded modules. It is equally important to avoid sharing "
"objects from which the above are reachable."
msgstr ""
"Debe tenerse especial cuidado en evitar compartir funciones, métodos, "
"instancias o clases definidas por el usuario entre subinterpretadores, ya "
"que las operaciones de importación ejecutadas por dichos objetos pueden "
"afectar al diccionario de módulos cargados del (sub)intérprete equivocado. "
"Es igualmente importante evitar compartir objetos desde los que se pueda "
"acceder a los anteriores."

#: ../../c-api/init.rst:1783
msgid ""
"Also note that combining this functionality with ``PyGILState_*`` APIs is "
"delicate, because these APIs assume a bijection between Python thread states "
"and OS-level threads, an assumption broken by the presence of sub-"
"interpreters. It is highly recommended that you don't switch sub-"
"interpreters between a pair of matching :c:func:`PyGILState_Ensure` and :c:"
"func:`PyGILState_Release` calls. Furthermore, extensions (such as :mod:"
"`ctypes`) using these APIs to allow calling of Python code from non-Python "
"created threads will probably be broken when using sub-interpreters."
msgstr ""
"También ten en cuenta que combinar esta funcionalidad con las APIs "
"``PyGILState_*`` es delicado, porque estas APIs asumen una biyección entre "
"los estados de los hilos de Python y los hilos a nivel de SO, una asunción "
"rota por la presencia de subinterpretadores. Se recomienda encarecidamente "
"no cambiar de subinterpretador entre un par de llamadas coincidentes a :c:"
"func:`PyGILState_Ensure` y :c:func:`PyGILState_Release`. Además, las "
"extensiones (como :mod:`ctypes`) que utilizan estas APIs para permitir la "
"llamada de código Python desde hilos no creados en Python probablemente se "
"romperán al utilizar subinterpretadores."

#: ../../c-api/init.rst:1794
msgid "Asynchronous Notifications"
msgstr "Notificaciones asíncronas"

#: ../../c-api/init.rst:1796
msgid ""
"A mechanism is provided to make asynchronous notifications to the main "
"interpreter thread.  These notifications take the form of a function pointer "
"and a void pointer argument."
msgstr ""
"Se proporciona un mecanismo para realizar notificaciones asíncronas al hilo "
"principal del intérprete.  Estas notificaciones toman la forma de un puntero "
"de función y un argumento de puntero void."

#: ../../c-api/init.rst:1803
msgid ""
"Schedule a function to be called from the main interpreter thread.  On "
"success, ``0`` is returned and *func* is queued for being called in the main "
"thread.  On failure, ``-1`` is returned without setting any exception."
msgstr ""
"Programa una función para llamarla desde el hilo principal del intérprete.  "
"En caso de éxito, se devuelve ``0`` y *func* se pone en cola para que la "
"llamen en el hilo principal.  En caso de fallo, se devuelve ``-1`` sin "
"establecer ninguna excepción."

#: ../../c-api/init.rst:1807
msgid ""
"When successfully queued, *func* will be *eventually* called from the main "
"interpreter thread with the argument *arg*.  It will be called "
"asynchronously with respect to normally running Python code, but with both "
"these conditions met:"
msgstr ""
"Cuando se pone en cola con éxito, *func* será *eventualmente* llamada desde "
"el hilo principal del intérprete con el argumento *arg*.  Será llamada "
"asíncronamente con respecto al código Python que se ejecuta normalmente, "
"pero con ambas condiciones cumplidas:"

#: ../../c-api/init.rst:1812
msgid "on a :term:`bytecode` boundary;"
msgstr "en un límite :term:`bytecode`;"

#: ../../c-api/init.rst:1813
msgid ""
"with the main thread holding the :term:`global interpreter lock` (*func* can "
"therefore use the full C API)."
msgstr ""
"con el hilo principal manteniendo el :term:`global interpreter lock` (*func* "
"puede por tanto usar la API C completa)."

#: ../../c-api/init.rst:1816
msgid ""
"*func* must return ``0`` on success, or ``-1`` on failure with an exception "
"set.  *func* won't be interrupted to perform another asynchronous "
"notification recursively, but it can still be interrupted to switch threads "
"if the global interpreter lock is released."
msgstr ""
"*func* debe devolver ``0`` en caso de éxito, o ``-1`` en caso de fallo con "
"una excepción establecida.  *func* no se interrumpirá para realizar otra "
"notificación asíncrona de forma recursiva, pero aún se puede interrumpir "
"para cambiar de hilo si se libera el bloqueo global del intérprete."

#: ../../c-api/init.rst:1821
msgid ""
"This function doesn't need a current thread state to run, and it doesn't "
"need the global interpreter lock."
msgstr ""
"Esta función no necesita un estado de hilo actual para ejecutarse, y no "
"necesita el bloqueo global del intérprete."

#: ../../c-api/init.rst:1824
msgid ""
"To call this function in a subinterpreter, the caller must hold the GIL. "
"Otherwise, the function *func* can be scheduled to be called from the wrong "
"interpreter."
msgstr ""
"Para llamar a esta función en un subinterpretador, caller debe poseer el "
"GIL. De lo contrario, la función *func* se puede programar para llamarla "
"desde el intérprete equivocado."

#: ../../c-api/init.rst:1829
msgid ""
"This is a low-level function, only useful for very special cases. There is "
"no guarantee that *func* will be called as quick as possible.  If the main "
"thread is busy executing a system call, *func* won't be called before the "
"system call returns.  This function is generally **not** suitable for "
"calling Python code from arbitrary C threads.  Instead, use the :ref:"
"`PyGILState API<gilstate>`."
msgstr ""
"Esta es una función de bajo nivel, sólo útil para casos muy especiales. No "
"hay garantía de que *func* se llame tan rápido como sea posible. Si el hilo "
"principal está ocupado ejecutando una llamada al sistema, *func* no se "
"llamará antes de que la llamada al sistema retorne. Esta función "
"generalmente **no** es adecuada para llamar código Python desde hilos C "
"arbitrarios. En su lugar, usa :ref:`PyGILState API<gilstate>`."

#: ../../c-api/init.rst:1838
msgid ""
"If this function is called in a subinterpreter, the function *func* is now "
"scheduled to be called from the subinterpreter, rather than being called "
"from the main interpreter. Each subinterpreter now has its own list of "
"scheduled calls."
msgstr ""
"Si se llama a esta función en un subinterpretador, la función *func* está "
"ahora programada para llamarse desde el subinterpretador, en lugar de "
"llamarse desde el intérprete principal. Cada subintérprete tiene ahora su "
"propia lista de llamadas programadas."

#: ../../c-api/init.rst:1847
msgid "Profiling and Tracing"
msgstr "Perfiles y seguimiento"

#: ../../c-api/init.rst:1852
msgid ""
"The Python interpreter provides some low-level support for attaching "
"profiling and execution tracing facilities.  These are used for profiling, "
"debugging, and coverage analysis tools."
msgstr ""
"El intérprete de Python proporciona soporte de bajo nivel para adjuntar "
"facilidades de perfilado y rastreo de ejecución.  Se utilizan para "
"herramientas de perfilado, depuración y análisis de cobertura."

#: ../../c-api/init.rst:1856
msgid ""
"This C interface allows the profiling or tracing code to avoid the overhead "
"of calling through Python-level callable objects, making a direct C function "
"call instead.  The essential attributes of the facility have not changed; "
"the interface allows trace functions to be installed per-thread, and the "
"basic events reported to the trace function are the same as had been "
"reported to the Python-level trace functions in previous versions."
msgstr ""
"Esta interfaz C permite que el código de perfilado o rastreo evite la "
"sobrecarga de llamar a través de objetos invocables a nivel de Python, "
"realizando en su lugar una llamada directa a una función C.  Los atributos "
"esenciales de la instalación no han cambiado; la interfaz permite que las "
"funciones de rastreo se instalen por hilo, y los eventos básicos reportados "
"a la función de rastreo son los mismos que se habían informado a las "
"funciones de rastreo a nivel de Python en versiones anteriores."

#: ../../c-api/init.rst:1866
msgid ""
"The type of the trace function registered using :c:func:`PyEval_SetProfile` "
"and :c:func:`PyEval_SetTrace`. The first parameter is the object passed to "
"the registration function as *obj*, *frame* is the frame object to which the "
"event pertains, *what* is one of the constants :c:data:`PyTrace_CALL`, :c:"
"data:`PyTrace_EXCEPTION`, :c:data:`PyTrace_LINE`, :c:data:`PyTrace_RETURN`, :"
"c:data:`PyTrace_C_CALL`, :c:data:`PyTrace_C_EXCEPTION`, :c:data:"
"`PyTrace_C_RETURN`, or :c:data:`PyTrace_OPCODE`, and *arg* depends on the "
"value of *what*:"
msgstr ""
"El tipo de la función de seguimiento registrada mediante :c:func:"
"`PyEval_SetProfile` y :c:func:`PyEval_SetTrace`. El primer parámetro es el "
"objeto pasado a la función de registro como *obj*, *frame* es el objeto "
"frame al que pertenece el evento, *what* es una de las constantes :c:data:"
"`PyTrace_CALL`, :c:data:`PyTrace_EXCEPTION`, :c:data:`PyTrace_LINE`, :c:data:"
"`PyTrace_RETURN`, :c:data:`PyTrace_C_CALL`, :c:data:`PyTrace_C_EXCEPTION`, :"
"c:data:`PyTrace_C_RETURN`, o :c:data:`PyTrace_OPCODE`, y *arg* depende del "
"valor de *what*:"

#: ../../c-api/init.rst:1875
msgid "Value of *what*"
msgstr "Valor de *what*"

#: ../../c-api/init.rst:1875
msgid "Meaning of *arg*"
msgstr "Significado de *arg*"

#: ../../c-api/init.rst:1877
msgid ":c:data:`PyTrace_CALL`"
msgstr ":c:data:`PyTrace_CALL`"

#: ../../c-api/init.rst:1877 ../../c-api/init.rst:1882
#: ../../c-api/init.rst:1893
msgid "Always :c:data:`Py_None`."
msgstr "Siempre :c:data:`Py_None`."

#: ../../c-api/init.rst:1879
msgid ":c:data:`PyTrace_EXCEPTION`"
msgstr ":c:data:`PyTrace_EXCEPTION`"

#: ../../c-api/init.rst:1879
msgid "Exception information as returned by :func:`sys.exc_info`."
msgstr "Información de excepción devuelta por :func:`sys.exc_info`."

#: ../../c-api/init.rst:1882
msgid ":c:data:`PyTrace_LINE`"
msgstr ":c:data:`PyTrace_LINE`"

#: ../../c-api/init.rst:1884
msgid ":c:data:`PyTrace_RETURN`"
msgstr ":c:data:`PyTrace_RETURN`"

#: ../../c-api/init.rst:1884
msgid ""
"Value being returned to the caller, or ``NULL`` if caused by an exception."
msgstr "Valor que se devuelve al caller, o ``NULL`` si lo causa una excepción."

#: ../../c-api/init.rst:1887
msgid ":c:data:`PyTrace_C_CALL`"
msgstr ":c:data:`PyTrace_C_CALL`"

#: ../../c-api/init.rst:1887 ../../c-api/init.rst:1889
#: ../../c-api/init.rst:1891
msgid "Function object being called."
msgstr "Objeto de función al que se llama."

#: ../../c-api/init.rst:1889
msgid ":c:data:`PyTrace_C_EXCEPTION`"
msgstr ":c:data:`PyTrace_C_EXCEPTION`"

#: ../../c-api/init.rst:1891
msgid ":c:data:`PyTrace_C_RETURN`"
msgstr ":c:data:`PyTrace_C_RETURN`"

#: ../../c-api/init.rst:1893
msgid ":c:data:`PyTrace_OPCODE`"
msgstr ":c:data:`PyTrace_OPCODE`"

#: ../../c-api/init.rst:1898
msgid ""
"The value of the *what* parameter to a :c:type:`Py_tracefunc` function when "
"a new call to a function or method is being reported, or a new entry into a "
"generator. Note that the creation of the iterator for a generator function "
"is not reported as there is no control transfer to the Python bytecode in "
"the corresponding frame."
msgstr ""
"El valor del parámetro *what* a una función :c:type:`Py_tracefunc` cuando se "
"informa de una nueva llamada a una función o método, o de una nueva entrada "
"en un generador. Tener en cuenta que la creación del iterador para una "
"función generadora no se notifica, ya que no hay transferencia de control al "
"código de bytes de Python en el marco correspondiente."

#: ../../c-api/init.rst:1907
msgid ""
"The value of the *what* parameter to a :c:type:`Py_tracefunc` function when "
"an exception has been raised.  The callback function is called with this "
"value for *what* when after any bytecode is processed after which the "
"exception becomes set within the frame being executed.  The effect of this "
"is that as exception propagation causes the Python stack to unwind, the "
"callback is called upon return to each frame as the exception propagates.  "
"Only trace functions receives these events; they are not needed by the "
"profiler."
msgstr ""
"El valor del parámetro *what* a una función :c:type:`Py_tracefunc` cuando se "
"ha lanzado una excepción.  Se llama la función callback con este valor para "
"*what* cuando después de que cualquier bytecode se procese después de lo "
"cual la excepción se establece dentro del frame que está siendo ejecutado.  "
"El efecto de esto es que como la propagación de la excepción causa que la "
"pila de Python se desenrolle, la llamada de retorno es llamada al volver a "
"cada frame mientras la excepción se propaga.  Sólo las funciones de rastreo "
"reciben estos sucesos; no son necesarios para el perfilador."

#: ../../c-api/init.rst:1918
msgid ""
"The value passed as the *what* parameter to a :c:type:`Py_tracefunc` "
"function (but not a profiling function) when a line-number event is being "
"reported. It may be disabled for a frame by setting :attr:`~frame."
"f_trace_lines` to *0* on that frame."
msgstr ""
"El valor que se pasa como parámetro *what* a una función :c:type:"
"`Py_tracefunc` (pero no a una función de perfilado) cuando se notifica un "
"evento de número de línea. Se puede desactivar para una trama estableciendo :"
"attr:`~frame.f_trace_lines` a *0* en esa trama."

#: ../../c-api/init.rst:1926
msgid ""
"The value for the *what* parameter to :c:type:`Py_tracefunc` functions when "
"a call is about to return."
msgstr ""
"El valor del parámetro *what* para las funciones :c:type:`Py_tracefunc` "
"cuando una llamada está a punto de regresar."

#: ../../c-api/init.rst:1932
msgid ""
"The value for the *what* parameter to :c:type:`Py_tracefunc` functions when "
"a C function is about to be called."
msgstr ""
"El valor para el parámetro *what* a las funciones :c:type:`Py_tracefunc` "
"cuando una función C está a punto de ser llamada."

#: ../../c-api/init.rst:1938
msgid ""
"The value for the *what* parameter to :c:type:`Py_tracefunc` functions when "
"a C function has raised an exception."
msgstr ""
"El valor del parámetro *what* para las funciones :c:type:`Py_tracefunc` "
"cuando una función C ha lanzado una excepción."

#: ../../c-api/init.rst:1944
msgid ""
"The value for the *what* parameter to :c:type:`Py_tracefunc` functions when "
"a C function has returned."
msgstr ""
"El valor del parámetro *what* para las funciones :c:type:`Py_tracefunc` "
"cuando una función C ha devuelto."

#: ../../c-api/init.rst:1950
msgid ""
"The value for the *what* parameter to :c:type:`Py_tracefunc` functions (but "
"not profiling functions) when a new opcode is about to be executed.  This "
"event is not emitted by default: it must be explicitly requested by setting :"
"attr:`~frame.f_trace_opcodes` to *1* on the frame."
msgstr ""
"El valor para el parámetro *what* a las funciones :c:type:`Py_tracefunc` "
"(pero no a las funciones de perfil) cuando un nuevo opcode está a punto de "
"ser ejecutado.  Este evento no se emite por defecto: debe solicitarse "
"explícitamente estableciendo :attr:`~frame.f_trace_opcodes` a *1* en el "
"marco."

#: ../../c-api/init.rst:1958
msgid ""
"Set the profiler function to *func*.  The *obj* parameter is passed to the "
"function as its first parameter, and may be any Python object, or ``NULL``.  "
"If the profile function needs to maintain state, using a different value for "
"*obj* for each thread provides a convenient and thread-safe place to store "
"it.  The profile function is called for all monitored events except :c:data:"
"`PyTrace_LINE` :c:data:`PyTrace_OPCODE` and :c:data:`PyTrace_EXCEPTION`."
msgstr ""
"Establece la función del perfilador como *func*.  El parámetro *obj* se pasa "
"a la función como su primer parámetro, y puede ser cualquier objeto Python, "
"o ``NULL``. Si la función de perfil necesita mantener el estado, el uso de "
"un valor diferente para *obj* para cada hilo proporciona un lugar "
"conveniente y seguro para almacenarlo.  La función de perfil es llamada para "
"todos los eventos monitorizados excepto :c:data:`PyTrace_LINE` :c:data:"
"`PyTrace_OPCODE` y :c:data:`PyTrace_EXCEPTION`."

#: ../../c-api/init.rst:1965
msgid "See also the :func:`sys.setprofile` function."
msgstr "Ver también la función :func:`sys.setprofile`."

#: ../../c-api/init.rst:1967 ../../c-api/init.rst:1974
#: ../../c-api/init.rst:1993 ../../c-api/init.rst:2000
msgid "The caller must hold the :term:`GIL`."
msgstr "Caller debe poseer el :término:`GIL`."

#: ../../c-api/init.rst:1971
msgid ""
"Like :c:func:`PyEval_SetProfile` but sets the profile function in all "
"running threads belonging to the current interpreter instead of the setting "
"it only on the current thread."
msgstr ""
"Como :c:func:`PyEval_SetProfile` pero establece la función de perfil en "
"todos los hilos en ejecución pertenecientes al intérprete actual en lugar de "
"establecerla sólo en el hilo actual."

#: ../../c-api/init.rst:1976
msgid ""
"As :c:func:`PyEval_SetProfile`, this function ignores any exceptions raised "
"while setting the profile functions in all threads."
msgstr ""
"Como :c:func:`PyEval_SetProfile`, esta función ignora cualquier excepción "
"que se produzca al establecer las funciones de perfil en todos los hilos."

#: ../../c-api/init.rst:1984
msgid ""
"Set the tracing function to *func*.  This is similar to :c:func:"
"`PyEval_SetProfile`, except the tracing function does receive line-number "
"events and per-opcode events, but does not receive any event related to C "
"function objects being called.  Any trace function registered using :c:func:"
"`PyEval_SetTrace` will not receive :c:data:`PyTrace_C_CALL`, :c:data:"
"`PyTrace_C_EXCEPTION` or :c:data:`PyTrace_C_RETURN` as a value for the "
"*what* parameter."
msgstr ""
"Establece la función de seguimiento como *func*.  Esto es similar a :c:func:"
"`PyEval_SetProfile`, excepto que la función de rastreo recibe eventos de "
"número de línea y eventos por código de operación, pero no recibe ningún "
"evento relacionado con objetos de función C llamados.  Cualquier función de "
"rastreo registrada usando :c:func:`PyEval_SetTrace` no recibirá :c:data:"
"`PyTrace_C_CALL`, :c:data:`PyTrace_C_EXCEPTION` o :c:data:`PyTrace_C_RETURN` "
"como valor para el parámetro *what*."

#: ../../c-api/init.rst:1991
msgid "See also the :func:`sys.settrace` function."
msgstr "Ver también la función :func:`sys.settrace`."

#: ../../c-api/init.rst:1997
msgid ""
"Like :c:func:`PyEval_SetTrace` but sets the tracing function in all running "
"threads belonging to the current interpreter instead of the setting it only "
"on the current thread."
msgstr ""
"Como :c:func:`PyEval_SetTrace` pero establece la función de rastreo en todos "
"los hilos en ejecución pertenecientes al intérprete actual en lugar de "
"establecerla sólo en el hilo actual."

#: ../../c-api/init.rst:2002
msgid ""
"As :c:func:`PyEval_SetTrace`, this function ignores any exceptions raised "
"while setting the trace functions in all threads."
msgstr ""
"Como :c:func:`PyEval_SetTrace`, esta función ignora cualquier excepción que "
"se produzca al establecer las funciones de rastreo en todos los hilos."

#: ../../c-api/init.rst:2011
msgid "Advanced Debugger Support"
msgstr "Depurador avanzado"

#: ../../c-api/init.rst:2016
msgid ""
"These functions are only intended to be used by advanced debugging tools."
msgstr ""
"Estas funciones sólo están pensadas para ser utilizadas por herramientas de "
"depuración avanzadas."

#: ../../c-api/init.rst:2021
msgid ""
"Return the interpreter state object at the head of the list of all such "
"objects."
msgstr ""
"Devuelve el objeto de estado del intérprete que encabeza la lista de todos "
"los objetos de este tipo."

#: ../../c-api/init.rst:2026
msgid "Return the main interpreter state object."
msgstr "Devuelve el objeto de estado del intérprete principal."

#: ../../c-api/init.rst:2031
msgid ""
"Return the next interpreter state object after *interp* from the list of all "
"such objects."
msgstr ""
"Devuelve el siguiente objeto de estado del intérprete después de *interp* de "
"la lista de todos esos objetos."

#: ../../c-api/init.rst:2037
msgid ""
"Return the pointer to the first :c:type:`PyThreadState` object in the list "
"of threads associated with the interpreter *interp*."
msgstr ""
"Devuelve el puntero al primer objeto :c:type:`PyThreadState` de la lista de "
"hilos asociados al intérprete *interp*."

#: ../../c-api/init.rst:2043
msgid ""
"Return the next thread state object after *tstate* from the list of all such "
"objects belonging to the same :c:type:`PyInterpreterState` object."
msgstr ""
"Devuelve el siguiente objeto de estado del hilo después de *tstate* de la "
"lista de todos los objetos pertenecientes al mismo objeto :c:type:"
"`PyInterpreterState`."

#: ../../c-api/init.rst:2050
msgid "Thread Local Storage Support"
msgstr "Soporte de almacenamiento local de hilos"

#: ../../c-api/init.rst:2054
msgid ""
"The Python interpreter provides low-level support for thread-local storage "
"(TLS) which wraps the underlying native TLS implementation to support the "
"Python-level thread local storage API (:class:`threading.local`).  The "
"CPython C level APIs are similar to those offered by pthreads and Windows: "
"use a thread key and functions to associate a :c:expr:`void*` value per "
"thread."
msgstr ""
"El intérprete de Python proporciona soporte de bajo nivel para el "
"almacenamiento local de hilos (TLS) que envuelve la implementación TLS "
"nativa subyacente para soportar la API de almacenamiento local de hilos a "
"nivel de Python (:class:`threading.local`).  Las API de nivel C de CPython "
"son similares a las ofrecidas por pthreads y Windows: utilizan una clave de "
"hilo y funciones para asociar un valor :c:expr:`void*` por hilo."

#: ../../c-api/init.rst:2061
msgid ""
"The GIL does *not* need to be held when calling these functions; they supply "
"their own locking."
msgstr ""
"El GIL *no* necesita mantenerse cuando se llama a estas funciones; ellas "
"proveen su propio bloqueo."

#: ../../c-api/init.rst:2064
msgid ""
"Note that :file:`Python.h` does not include the declaration of the TLS APIs, "
"you need to include :file:`pythread.h` to use thread-local storage."
msgstr ""
"Tener en cuenta que :file:`Python.h` no incluye la declaración de las APIs "
"TLS, se necesita incluir :file:`pythread.h` para usar el almacenamiento "
"thread-local."

#: ../../c-api/init.rst:2068
msgid ""
"None of these API functions handle memory management on behalf of the :c:"
"expr:`void*` values.  You need to allocate and deallocate them yourself. If "
"the :c:expr:`void*` values happen to be :c:expr:`PyObject*`, these functions "
"don't do refcount operations on them either."
msgstr ""
"Ninguna de estas funciones de la API gestiona la memoria en nombre de los "
"valores de :c:expr:`void*`.  Debe asignarlos y desasignarlos usted mismo. Si "
"los valores :c:expr:`void*` resultan ser :c:expr:`PyObject*`, estas "
"funciones tampoco realizan operaciones de recuento sobre ellos."

#: ../../c-api/init.rst:2076
msgid "Thread Specific Storage (TSS) API"
msgstr "API de almacenamiento específico de subprocesos (TSS)"

#: ../../c-api/init.rst:2078
msgid ""
"TSS API is introduced to supersede the use of the existing TLS API within "
"the CPython interpreter.  This API uses a new type :c:type:`Py_tss_t` "
"instead of :c:expr:`int` to represent thread keys."
msgstr ""
"La API TSS se introduce para reemplazar el uso de la API TLS existente "
"dentro del intérprete CPython.  Esta API utiliza un nuevo tipo :c:type:"
"`Py_tss_t` en lugar de :c:expr:`int` para representar claves de hilo."

#: ../../c-api/init.rst:2084
msgid "\"A New C-API for Thread-Local Storage in CPython\" (:pep:`539`)"
msgstr "\"A New C-API for Thread-Local Storage in CPython\" (:pep:`539`)"

#: ../../c-api/init.rst:2089
msgid ""
"This data structure represents the state of a thread key, the definition of "
"which may depend on the underlying TLS implementation, and it has an "
"internal field representing the key's initialization state.  There are no "
"public members in this structure."
msgstr ""
"Esta estructura de datos representa el estado de una clave de hilo, cuya "
"definición puede depender de la implementación TLS subyacente, y tiene un "
"campo interno que representa el estado de inicialización de la clave.  No "
"hay miembros públicos en esta estructura."

#: ../../c-api/init.rst:2094
msgid ""
"When :ref:`Py_LIMITED_API <stable>` is not defined, static allocation of "
"this type by :c:macro:`Py_tss_NEEDS_INIT` is allowed."
msgstr ""
"Cuando :ref:`Py_LIMITED_API <stable>` no está definido, se permite la "
"asignación estática de este tipo por :c:macro:`Py_tss_NEEDS_INIT`."

#: ../../c-api/init.rst:2100
msgid ""
"This macro expands to the initializer for :c:type:`Py_tss_t` variables. Note "
"that this macro won't be defined with :ref:`Py_LIMITED_API <stable>`."
msgstr ""
"Esta macro se expande al inicializador para variables :c:type:`Py_tss_t`. "
"Tener en cuenta que esta macro no se definirá con :ref:`Py_LIMITED_API "
"<stable>`."

#: ../../c-api/init.rst:2105
msgid "Dynamic Allocation"
msgstr "Asignación dinámica"

#: ../../c-api/init.rst:2107
msgid ""
"Dynamic allocation of the :c:type:`Py_tss_t`, required in extension modules "
"built with :ref:`Py_LIMITED_API <stable>`, where static allocation of this "
"type is not possible due to its implementation being opaque at build time."
msgstr ""
"Asignación dinámica de :c:type:`Py_tss_t`, necesaria en módulos de extensión "
"construidos con :ref:`Py_LIMITED_API <stable>`, donde la asignación estática "
"de este tipo no es posible debido a que su implementación es opaca en tiempo "
"de construcción."

#: ../../c-api/init.rst:2114
msgid ""
"Return a value which is the same state as a value initialized with :c:macro:"
"`Py_tss_NEEDS_INIT`, or ``NULL`` in the case of dynamic allocation failure."
msgstr ""
"Devuelve un valor que es el mismo estado que un valor inicializado con :c:"
"macro:`Py_tss_NEEDS_INIT`, o ``NULL`` en caso de fallo de asignación "
"dinámica."

#: ../../c-api/init.rst:2121
msgid ""
"Free the given *key* allocated by :c:func:`PyThread_tss_alloc`, after first "
"calling :c:func:`PyThread_tss_delete` to ensure any associated thread locals "
"have been unassigned. This is a no-op if the *key* argument is ``NULL``."
msgstr ""
"Libera la *clave* asignada por :c:func:`PyThread_tss_alloc`, después de "
"llamar primero a :c:func:`PyThread_tss_delete` para asegurarse de que "
"cualquier hilo local asociado ha sido desasignado. Esto es un no-op si el "
"argumento *key* es ``NULL``."

#: ../../c-api/init.rst:2127
msgid ""
"A freed key becomes a dangling pointer. You should reset the key to ``NULL``."
msgstr ""
"Una clave liberada se convierte en un puntero colgante. Debe restablecer la "
"clave a ``NULL``."

#: ../../c-api/init.rst:2132
msgid "Methods"
msgstr "Métodos"

#: ../../c-api/init.rst:2134
msgid ""
"The parameter *key* of these functions must not be ``NULL``.  Moreover, the "
"behaviors of :c:func:`PyThread_tss_set` and :c:func:`PyThread_tss_get` are "
"undefined if the given :c:type:`Py_tss_t` has not been initialized by :c:"
"func:`PyThread_tss_create`."
msgstr ""
"El parámetro *key* de estas funciones no debe ser ``NULL``.  Además, los "
"comportamientos de :c:func:`PyThread_tss_set` y :c:func:`PyThread_tss_get` "
"son indefinidos si el :c:type:`Py_tss_t` dado no se ha inicializado por :c:"
"func:`PyThread_tss_create`."

#: ../../c-api/init.rst:2142
msgid ""
"Return a non-zero value if the given :c:type:`Py_tss_t` has been initialized "
"by :c:func:`PyThread_tss_create`."
msgstr ""
"Devuelve un valor distinto de cero si el :c:type:`Py_tss_t` dado se ha "
"inicializado por :c:func:`PyThread_tss_create`."

#: ../../c-api/init.rst:2148
msgid ""
"Return a zero value on successful initialization of a TSS key.  The behavior "
"is undefined if the value pointed to by the *key* argument is not "
"initialized by :c:macro:`Py_tss_NEEDS_INIT`.  This function can be called "
"repeatedly on the same key -- calling it on an already initialized key is a "
"no-op and immediately returns success."
msgstr ""
"Devuelve un valor cero en la inicialización correcta de una clave TSS.  El "
"comportamiento es indefinido si el valor apuntado por el argumento *key* no "
"se inicializa por :c:macro:`Py_tss_NEEDS_INIT`.  Se puede llamar esta "
"función de forma repetida sobre la misma clave -- llamarla sobre una clave "
"ya inicializada es un no-op e inmediatamente devuelve éxito."

#: ../../c-api/init.rst:2157
msgid ""
"Destroy a TSS key to forget the values associated with the key across all "
"threads, and change the key's initialization state to uninitialized.  A "
"destroyed key is able to be initialized again by :c:func:"
"`PyThread_tss_create`. This function can be called repeatedly on the same "
"key -- calling it on an already destroyed key is a no-op."
msgstr ""
"Destruir una clave TSS para olvidar los valores asociados a la clave en "
"todos los subprocesos y cambiar el estado de inicialización de la clave a no "
"inicializado.  Se puede reinicializar una clave destruida por :c:func:"
"`PyThread_tss_create`. Esta función se puede llamar repetidamente sobre la "
"misma clave -- llamarla sobre una clave ya destruida es un no-op."

#: ../../c-api/init.rst:2166
msgid ""
"Return a zero value to indicate successfully associating a :c:expr:`void*` "
"value with a TSS key in the current thread.  Each thread has a distinct "
"mapping of the key to a :c:expr:`void*` value."
msgstr ""
"Devuelve un valor cero para indicar que se ha asociado correctamente un "
"valor :c:expr:`void*` con una clave TSS en el subproceso actual.  Cada "
"subproceso tiene una asignación distinta de la clave a un valor :c:expr:"
"`void*`."

#: ../../c-api/init.rst:2173
msgid ""
"Return the :c:expr:`void*` value associated with a TSS key in the current "
"thread.  This returns ``NULL`` if no value is associated with the key in the "
"current thread."
msgstr ""
"Devuelve el valor :c:expr:`void*` asociado a una clave TSS en el subproceso "
"actual.  Devuelve ``NULL`` si no hay ningún valor asociado a la clave en el "
"subproceso actual."

#: ../../c-api/init.rst:2181
msgid "Thread Local Storage (TLS) API"
msgstr "API de almacenamiento local de hilos (TLS)"

#: ../../c-api/init.rst:2183
msgid ""
"This API is superseded by :ref:`Thread Specific Storage (TSS) API <thread-"
"specific-storage-api>`."
msgstr ""
"Esta API ha sido sustituida por :ref:`Thread Specific Storage (TSS) API "
"<thread-specific-storage-api>`."

#: ../../c-api/init.rst:2188
msgid ""
"This version of the API does not support platforms where the native TLS key "
"is defined in a way that cannot be safely cast to ``int``.  On such "
"platforms, :c:func:`PyThread_create_key` will return immediately with a "
"failure status, and the other TLS functions will all be no-ops on such "
"platforms."
msgstr ""
"Esta versión de la API no es compatible con plataformas en las que la clave "
"TLS nativa está definida de tal forma que no se puede convertir de forma "
"segura a ``int``.  En dichas plataformas, :c:func:`PyThread_create_key` "
"devolverá inmediatamente un estado de fallo, y las demás funciones TLS serán "
"todas no-ops en dichas plataformas."

#: ../../c-api/init.rst:2193
msgid ""
"Due to the compatibility problem noted above, this version of the API should "
"not be used in new code."
msgstr ""
"Debido al problema de compatibilidad señalado anteriormente, esta versión de "
"la API no debe utilizarse en un código nuevo."

#: ../../c-api/init.rst:334 ../../c-api/init.rst:502 ../../c-api/init.rst:577
msgid "Py_SetProgramName()"
msgstr "Py_SetProgramName()"

#: ../../c-api/init.rst:334
msgid "PyEval_InitThreads()"
msgstr "PyEval_InitThreads()"

#: ../../c-api/init.rst:334
msgid "modules (in module sys)"
msgstr "módulos (en módulo sys)"

#: ../../c-api/init.rst:334 ../../c-api/init.rst:596 ../../c-api/init.rst:622
msgid "path (in module sys)"
msgstr "ruta (en módulo sys)"

#: ../../c-api/init.rst:334 ../../c-api/init.rst:596 ../../c-api/init.rst:622
#: ../../c-api/init.rst:1063 ../../c-api/init.rst:1594
#: ../../c-api/init.rst:1693
msgid "module"
msgstr "módulo"

#: ../../c-api/init.rst:334 ../../c-api/init.rst:1594 ../../c-api/init.rst:1693
msgid "builtins"
msgstr "builtins"

#: ../../c-api/init.rst:334 ../../c-api/init.rst:1594 ../../c-api/init.rst:1693
msgid "__main__"
msgstr "__main__"

#: ../../c-api/init.rst:334 ../../c-api/init.rst:1594 ../../c-api/init.rst:1693
msgid "sys"
msgstr "sys"

#: ../../c-api/init.rst:334 ../../c-api/init.rst:596 ../../c-api/init.rst:622
msgid "search"
msgstr "buscar"

#: ../../c-api/init.rst:334 ../../c-api/init.rst:596 ../../c-api/init.rst:622
msgid "path"
msgstr "ruta"

#: ../../c-api/init.rst:334
msgid "PySys_SetArgv (C function)"
msgstr "PySys_SetArgv (función C)"

#: ../../c-api/init.rst:334
msgid "PySys_SetArgvEx (C function)"
msgstr "PySys_SetArgvEx (función C)"

#: ../../c-api/init.rst:334 ../../c-api/init.rst:1658 ../../c-api/init.rst:1711
msgid "Py_FinalizeEx (C function)"
msgstr "Py_FinalizeEx (función C)"

#: ../../c-api/init.rst:437 ../../c-api/init.rst:474
msgid "Py_Initialize()"
msgstr "Py_Initialize()"

#: ../../c-api/init.rst:437 ../../c-api/init.rst:474 ../../c-api/init.rst:730
msgid "main()"
msgstr "main()"

#: ../../c-api/init.rst:437
msgid "stdin"
msgstr "stdin"

#: ../../c-api/init.rst:437
msgid "stdout"
msgstr "stdout"

#: ../../c-api/init.rst:437
msgid "sdterr"
msgstr "sdterr"

#: ../../c-api/init.rst:474 ../../c-api/init.rst:622
msgid "Py_GetPath()"
msgstr "Py_GetPath()"

#: ../../c-api/init.rst:577
msgid "executable (in module sys)"
msgstr "ejecutable (en módulo sys)"

#: ../../c-api/init.rst:596
msgid "Py_SetPath()"
msgstr "Py_SetPath()"

#: ../../c-api/init.rst:665 ../../c-api/init.rst:707 ../../c-api/init.rst:721
msgid "version (in module sys)"
msgstr "versión (en módulo sys)"

#: ../../c-api/init.rst:677
msgid "platform (in module sys)"
msgstr "plataforma (en módulo sys)"

#: ../../c-api/init.rst:694
msgid "copyright (in module sys)"
msgstr "copyright (en módulo sys)"

#: ../../c-api/init.rst:730
msgid "Py_FatalError()"
msgstr "Py_FatalError()"

#: ../../c-api/init.rst:730
msgid "argv (in module sys)"
msgstr "argv (en módulo sys)"

#: ../../c-api/init.rst:846
msgid "global interpreter lock"
msgstr "bloqueo global del intérprete"

#: ../../c-api/init.rst:846
msgid "interpreter lock"
msgstr "bloqueo del intérprete"

#: ../../c-api/init.rst:846
msgid "lock, interpreter"
msgstr "bloqueo, intérprete"

#: ../../c-api/init.rst:859
msgid "setswitchinterval (in module sys)"
msgstr "setswitchinterval (en módulo sys)"

#: ../../c-api/init.rst:868
msgid "PyThreadState (C type)"
msgstr "PyThreadState (tipo C)"

#: ../../c-api/init.rst:894
msgid "Py_BEGIN_ALLOW_THREADS (C macro)"
msgstr "Py_BEGIN_ALLOW_THREADS (macro C)"

#: ../../c-api/init.rst:894
msgid "Py_END_ALLOW_THREADS (C macro)"
msgstr "Py_END_ALLOW_THREADS (macro C)"

#: ../../c-api/init.rst:910
msgid "PyEval_RestoreThread (C function)"
msgstr "PyEval_RestoreThread (función C)"

#: ../../c-api/init.rst:910
msgid "PyEval_SaveThread (C function)"
msgstr "PyEval_SaveThread (función C)"

#: ../../c-api/init.rst:1041
msgid "PyEval_AcquireThread()"
msgstr "PyEval_AcquireThread()"

#: ../../c-api/init.rst:1041
msgid "PyEval_ReleaseThread()"
msgstr "PyEval_ReleaseThread()"

#: ../../c-api/init.rst:1041
msgid "PyEval_SaveThread()"
msgstr "PyEval_SaveThread()"

#: ../../c-api/init.rst:1041
msgid "PyEval_RestoreThread()"
msgstr "PyEval_RestoreThread()"

#: ../../c-api/init.rst:1063
msgid "_thread"
msgstr "_thread"

#: ../../c-api/init.rst:1594 ../../c-api/init.rst:1693
msgid "stdout (in module sys)"
msgstr "stdout (en módulo sys)"

#: ../../c-api/init.rst:1594 ../../c-api/init.rst:1693
msgid "stderr (in module sys)"
msgstr "stderr (en módulo sys)"

#: ../../c-api/init.rst:1594 ../../c-api/init.rst:1693
msgid "stdin (in module sys)"
msgstr "stdin (en módulo sys)"

#: ../../c-api/init.rst:1658
msgid "Py_Initialize (C function)"
msgstr "Py_Initialize (función C)"

#: ../../c-api/init.rst:1688
msgid "close (in module os)"
msgstr "close (en módulo os)"
