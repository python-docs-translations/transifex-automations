# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# eulalio barbero espinosa <eulalio@disroot.org>, 2023
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.10\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-01-10 16:06+0000\n"
"PO-Revision-Date: 2022-11-05 17:21+0000\n"
"Last-Translator: eulalio barbero espinosa <eulalio@disroot.org>, 2023\n"
"Language-Team: Spanish (Spain) (https://app.transifex.com/python-doc/"
"teams/5390/es_ES/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: es_ES\n"
"Plural-Forms: nplurals=3; plural=n == 1 ? 0 : n != 0 && n % 1000000 == 0 ? "
"1 : 2;\n"

#: ../../c-api/memoryview.rst:9
msgid "MemoryView objects"
msgstr "Objetos MemoryView"

#: ../../c-api/memoryview.rst:11
msgid ""
"A :class:`memoryview` object exposes the C level :ref:`buffer interface "
"<bufferobjects>` as a Python object which can then be passed around like any "
"other object."
msgstr ""
"Un objeto :class:`memoryview` expone la interfaz de nivel C :ref:`buffer "
"<bufferobjects>` como un objeto Python que puede pasarse como cualquier otro "
"objeto."

#: ../../c-api/memoryview.rst:18
msgid ""
"Create a memoryview object from an object that provides the buffer "
"interface. If *obj* supports writable buffer exports, the memoryview object "
"will be read/write, otherwise it may be either read-only or read/write at "
"the discretion of the exporter."
msgstr ""
"Crea un objeto memoryview a partir de un objeto que proporciona la interfaz "
"buffer. Si *obj* admite exportaciones de búferes de escritura, el objeto "
"memoryview será de lectura/escritura, de lo contrario puede ser de sólo "
"lectura o de lectura/escritura a discreción del exportador."

#: ../../c-api/memoryview.rst:25
msgid ""
"Create a memoryview object using *mem* as the underlying buffer. *flags* can "
"be one of :c:macro:`PyBUF_READ` or :c:macro:`PyBUF_WRITE`."
msgstr ""
"Crea un objeto memoryview usando *mem* como buffer subyacente. *flags* puede "
"ser uno de :c:macro:`PyBUF_READ` o :c:macro:`PyBUF_WRITE`."

#: ../../c-api/memoryview.rst:32
msgid ""
"Create a memoryview object wrapping the given buffer structure *view*. For "
"simple byte buffers, :c:func:`PyMemoryView_FromMemory` is the preferred "
"function."
msgstr ""
"Crea un objeto memoryview que envuelve la estructura de búfer *view* dada. "
"Para buffers de bytes simples, :c:func:`PyMemoryView_FromMemory` es la "
"función preferida."

#: ../../c-api/memoryview.rst:38
msgid ""
"Create a memoryview object to a :term:`contiguous` chunk of memory (in "
"either 'C' or 'F'ortran *order*) from an object that defines the buffer "
"interface. If memory is contiguous, the memoryview object points to the "
"original memory. Otherwise, a copy is made and the memoryview points to a "
"new bytes object."
msgstr ""
"Crea un objeto memoryview a un trozo :term:`contiguo` de memoria (tanto en "
"'C' como 'F'ortran *order*) a partir de un objeto que define la interfaz del "
"buffer. Si la memoria es contigua, el objeto memoryview apunta a la memoria "
"original. En caso contrario, se realiza una copia y el objeto memoryview "
"apunta a un nuevo objeto bytes."

#: ../../c-api/memoryview.rst:47
msgid ""
"Return true if the object *obj* is a memoryview object.  It is not currently "
"allowed to create subclasses of :class:`memoryview`.  This function always "
"succeeds."
msgstr ""
"Devuelve true si el objeto *obj* es un objeto memoryview.  Actualmente no "
"está permitido crear subclases de :class:`memoryview`. Esta función siempre "
"tiene éxito."

#: ../../c-api/memoryview.rst:54
msgid ""
"Return a pointer to the memoryview's private copy of the exporter's buffer. "
"*mview* **must** be a memoryview instance; this macro doesn't check its "
"type, you must do it yourself or you will risk crashes."
msgstr ""
"Devuelve un puntero a la copia privada de memoryview del buffer del "
"exportador. *mview* **debe** ser una instancia de memoryview; esta macro no "
"comprueba su tipo, lo debe hacer uno mismo o hay riesgo de fallos."

#: ../../c-api/memoryview.rst:60
msgid ""
"Return either a pointer to the exporting object that the memoryview is based "
"on or ``NULL`` if the memoryview has been created by one of the functions :c:"
"func:`PyMemoryView_FromMemory` or :c:func:`PyMemoryView_FromBuffer`. *mview* "
"**must** be a memoryview instance."
msgstr ""
"Devuelve un puntero al objeto exportador en el que se basa la memoryview o "
"``NULL`` si la memoryview ha sido creada por una de las funciones :c:func:"
"`PyMemoryView_FromMemory` o :c:func:`PyMemoryView_FromBuffer`. *mview* "
"**debe** ser una instancia de memoryview."
