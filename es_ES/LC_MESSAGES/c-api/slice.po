# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# eulalio barbero espinosa <eulalio@disroot.org>, 2023
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.10\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-01-10 16:06+0000\n"
"PO-Revision-Date: 2022-11-05 17:21+0000\n"
"Last-Translator: eulalio barbero espinosa <eulalio@disroot.org>, 2023\n"
"Language-Team: Spanish (Spain) (https://app.transifex.com/python-doc/"
"teams/5390/es_ES/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: es_ES\n"
"Plural-Forms: nplurals=3; plural=n == 1 ? 0 : n != 0 && n % 1000000 == 0 ? "
"1 : 2;\n"

#: ../../c-api/slice.rst:6
msgid "Slice Objects"
msgstr "Rebanar objetos"

#: ../../c-api/slice.rst:11
msgid ""
"The type object for slice objects.  This is the same as :class:`slice` in "
"the Python layer."
msgstr ""
"El objeto de tipo para los objetos de rebanada.  Es el mismo que :class:"
"`slice` en la capa de Python."

#: ../../c-api/slice.rst:17
msgid ""
"Return true if *ob* is a slice object; *ob* must not be ``NULL``.  This "
"function always succeeds."
msgstr ""
"Devuelve true si *ob* es un objeto de rebanada; *ob* no debe ser ``NULL``.  "
"Esta función siempre tiene éxito."

#: ../../c-api/slice.rst:23
msgid ""
"Return a new slice object with the given values.  The *start*, *stop*, and "
"*step* parameters are used as the values of the slice object attributes of "
"the same names.  Any of the values may be ``NULL``, in which case the "
"``None`` will be used for the corresponding attribute.  Return ``NULL`` if "
"the new object could not be allocated."
msgstr ""
"Devuelve un nuevo objeto de rebanada con los valores dados.  Los parámetros "
"*start*, *stop* y *step* se utilizan como valores de los atributos del "
"objeto de rebanada de los mismos nombres.  Cualquiera de los valores puede "
"ser ``NULL``, en cuyo caso se utilizará ``None`` para el atributo "
"correspondiente.  Devuelve ``NULL`` si no se ha podido asignar el nuevo "
"objeto."

#: ../../c-api/slice.rst:32
msgid ""
"Retrieve the start, stop and step indices from the slice object *slice*, "
"assuming a sequence of length *length*. Treats indices greater than *length* "
"as errors."
msgstr ""
"Recupera los índices de inicio, fin y paso del objeto *slice*, suponiendo "
"una secuencia de longitud *length*. Trata los índices mayores que *length* "
"como errores."

#: ../../c-api/slice.rst:36
msgid ""
"Returns ``0`` on success and ``-1`` on error with no exception set (unless "
"one of the indices was not :const:`None` and failed to be converted to an "
"integer, in which case ``-1`` is returned with an exception set)."
msgstr ""
"Devuelve ``0`` en caso de éxito y ``-1`` en caso de error sin ninguna "
"excepción establecida (a menos que uno de los índices no fuera :const:`None` "
"y no se pudiera convertir a un entero, en cuyo caso se devuelve ``-1`` con "
"una excepción establecida)."

#: ../../c-api/slice.rst:40
msgid "You probably do not want to use this function."
msgstr "Probablemente no quieras usar esta función."

#: ../../c-api/slice.rst:42 ../../c-api/slice.rst:73
msgid ""
"The parameter type for the *slice* parameter was ``PySliceObject*`` before."
msgstr ""
"El tipo de parámetro para el parámetro *slice* antes era ``PySliceObject*``."

#: ../../c-api/slice.rst:49
msgid ""
"Usable replacement for :c:func:`PySlice_GetIndices`.  Retrieve the start, "
"stop, and step indices from the slice object *slice* assuming a sequence of "
"length *length*, and store the length of the slice in *slicelength*.  Out of "
"bounds indices are clipped in a manner consistent with the handling of "
"normal slices."
msgstr ""
"Sustituto útil de :c:func:`PySlice_GetIndices`.  Recupera los índices de "
"inicio, parada y paso del objeto de rebanada *slice* asumiendo una secuencia "
"de longitud *length*, y almacena la longitud del slice en *slicelength*.  "
"Los índices fuera de los límites se recortan de forma consistente con el "
"manejo de las rebanadas normales."

#: ../../c-api/slice.rst:55
msgid "Returns ``0`` on success and ``-1`` on error with exception set."
msgstr ""
"Devuelve ``0`` en caso de éxito y ``-1`` en caso de error con la excepción "
"establecida."

#: ../../c-api/slice.rst:58
msgid ""
"This function is considered not safe for resizable sequences. Its invocation "
"should be replaced by a combination of :c:func:`PySlice_Unpack` and :c:func:"
"`PySlice_AdjustIndices` where ::"
msgstr ""
"Esta función se considera no segura para secuencias redimensionables. Su "
"invocación debe ser reemplazada por una combinación de :c:func:"
"`PySlice_Unpack` y :c:func:`PySlice_AdjustIndices` donde ::"

#: ../../c-api/slice.rst:66
msgid "is replaced by ::"
msgstr "se sustituye por ::"

#: ../../c-api/slice.rst:77
msgid ""
"If ``Py_LIMITED_API`` is not set or set to the value between ``0x03050400`` "
"and ``0x03060000`` (not including) or ``0x03060100`` or higher :c:func:`!"
"PySlice_GetIndicesEx` is implemented as a macro using :c:func:`!"
"PySlice_Unpack` and :c:func:`!PySlice_AdjustIndices`. Arguments *start*, "
"*stop* and *step* are evaluated more than once."
msgstr ""
"Si ``Py_LIMITED_API`` no se establece o se establece en el valor entre "
"``0x03050400`` y ``0x03060000`` (sin incluir) o ``0x03060100`` o superior :c:"
"func:`!PySlice_GetIndicesEx` se implementa como una macro utilizando :c:func:"
"`!PySlice_Unpack` y :c:func:`!PySlice_AdjustIndices`. Los argumentos "
"*start*, *stop* y *step* se evalúan más de una vez."

#: ../../c-api/slice.rst:84
msgid ""
"If ``Py_LIMITED_API`` is set to the value less than ``0x03050400`` or "
"between ``0x03060000`` and ``0x03060100`` (not including) :c:func:`!"
"PySlice_GetIndicesEx` is a deprecated function."
msgstr ""
"Si ``Py_LIMITED_API`` se establece en el valor inferior a ``0x03050400`` o "
"entre ``0x03060000`` y ``0x03060100`` (sin incluir) :c:func:`!"
"PySlice_GetIndicesEx` es una función obsoleta."

#: ../../c-api/slice.rst:92
msgid ""
"Extract the start, stop and step data members from a slice object as C "
"integers.  Silently reduce values larger than ``PY_SSIZE_T_MAX`` to "
"``PY_SSIZE_T_MAX``, silently boost the start and stop values less than "
"``PY_SSIZE_T_MIN`` to ``PY_SSIZE_T_MIN``, and silently boost the step values "
"less than ``-PY_SSIZE_T_MAX`` to ``-PY_SSIZE_T_MAX``."
msgstr ""
"Extraer los datos de inicio, parada y paso de un objeto de rebanada como "
"enteros C.  Reduzca silenciosamente los valores mayores que "
"``PY_SSIZE_T_MAX`` a ``PY_SSIZE_T_MAX``, aumente silenciosamente los valores "
"de inicio y parada menores que ``PY_SSIZE_T_MIN`` a ``PY_SSIZE_T_MIN``, y "
"aumente silenciosamente los valores de paso menores que ``-PY_SSIZE_T_MAX`` "
"a ``-PY_SSIZE_T_MAX``."

#: ../../c-api/slice.rst:98
msgid "Return ``-1`` on error, ``0`` on success."
msgstr "Devuelve ``-1`` en caso de error, ``0`` en caso de éxito."

#: ../../c-api/slice.rst:105
msgid ""
"Adjust start/end slice indices assuming a sequence of the specified length. "
"Out of bounds indices are clipped in a manner consistent with the handling "
"of normal slices."
msgstr ""
"Ajustar los índices de inicio/fin de la rebanada asumiendo una secuencia de "
"la longitud especificada. Los índices fuera de rango se recortan de manera "
"consistente con el manejo de las rebanadas normales."

#: ../../c-api/slice.rst:109
msgid ""
"Return the length of the slice.  Always successful.  Doesn't call Python "
"code."
msgstr ""
"Devuelve la longitud del corte.  Siempre con éxito.  No llama a código "
"Python."

#: ../../c-api/slice.rst:116
msgid "Ellipsis Object"
msgstr "Objeto elipsis"

#: ../../c-api/slice.rst:121
msgid ""
"The Python ``Ellipsis`` object.  This object has no methods.  It needs to be "
"treated just like any other object with respect to reference counts.  Like :"
"c:data:`Py_None` it is a singleton object."
msgstr ""
"El objeto Python ``Ellipsis``.  Este objeto no tiene métodos.  Debe tratarse "
"como cualquier otro objeto con respecto a los recuentos de referencia.  Al "
"igual que :c:data:`Py_None` es un objeto singleton."
