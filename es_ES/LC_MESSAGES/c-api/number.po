# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# Rafael Fontenelle <rffontenelle@gmail.com>, 2024
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.11\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-01-21 22:20+0000\n"
"PO-Revision-Date: 2023-05-24 02:09+0000\n"
"Last-Translator: Rafael Fontenelle <rffontenelle@gmail.com>, 2024\n"
"Language-Team: Spanish (Spain) (https://app.transifex.com/python-doc/"
"teams/5390/es_ES/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: es_ES\n"
"Plural-Forms: nplurals=3; plural=n == 1 ? 0 : n != 0 && n % 1000000 == 0 ? "
"1 : 2;\n"

#: ../../c-api/number.rst:6
msgid "Number Protocol"
msgstr "Número Protocolo"

#: ../../c-api/number.rst:11
msgid ""
"Returns ``1`` if the object *o* provides numeric protocols, and false "
"otherwise. This function always succeeds."
msgstr ""
"Devuelve ``1`` si el objeto *o* proporciona protocolos numéricos, y falso en "
"caso contrario. Esta función siempre tiene éxito."

#: ../../c-api/number.rst:14
msgid "Returns ``1`` if *o* is an index integer."
msgstr "Devuelve ``1`` si *o* es un entero índice."

#: ../../c-api/number.rst:20
msgid ""
"Returns the result of adding *o1* and *o2*, or ``NULL`` on failure.  This is "
"the equivalent of the Python expression ``o1 + o2``."
msgstr ""
"Devuelve el resultado de sumar *o1* y *o2*, o ``NULL`` en caso de fallo.  "
"Equivale a la expresión de Python ``o1 + o2``."

#: ../../c-api/number.rst:26
msgid ""
"Returns the result of subtracting *o2* from *o1*, or ``NULL`` on failure.  "
"This is the equivalent of the Python expression ``o1 - o2``."
msgstr ""
"Devuelve el resultado de restar *o2* de *o1*, o ``NULL`` en caso de fallo.  "
"Equivale a la expresión de Python ``o1 - o2``."

#: ../../c-api/number.rst:32
msgid ""
"Returns the result of multiplying *o1* and *o2*, or ``NULL`` on failure.  "
"This is the equivalent of the Python expression ``o1 * o2``."
msgstr ""
"Devuelve el resultado de multiplicar *o1* y *o2*, o ``NULL`` en caso de "
"fallo.  Equivale a la expresión de Python ``o1 * o2``."

#: ../../c-api/number.rst:38
msgid ""
"Returns the result of matrix multiplication on *o1* and *o2*, or ``NULL`` on "
"failure.  This is the equivalent of the Python expression ``o1 @ o2``."
msgstr ""
"Devuelve el resultado de la multiplicación de matrices en *o1* y *o2*, o "
"``NULL`` en caso de fallo.  Equivale a la expresión de Python ``o1 @ o2``."

#: ../../c-api/number.rst:46
msgid ""
"Return the floor of *o1* divided by *o2*, or ``NULL`` on failure.  This is "
"the equivalent of the Python expression ``o1 // o2``."
msgstr ""
"Devuelve el valor mínimo de *o1* dividido por *o2*, o ``NULL`` en caso de "
"error.  Equivale a la expresión de Python ``o1 // o2``."

#: ../../c-api/number.rst:52
msgid ""
"Return a reasonable approximation for the mathematical value of *o1* divided "
"by *o2*, or ``NULL`` on failure.  The return value is \"approximate\" "
"because binary floating point numbers are approximate; it is not possible to "
"represent all real numbers in base two.  This function can return a floating "
"point value when passed two integers.  This is the equivalent of the Python "
"expression ``o1 / o2``."
msgstr ""
"Devuelve una aproximación razonable del valor matemático de *o1* dividido "
"por *o2*, o ``NULL`` en caso de fallo.  El valor devuelto es \"aproximado\" "
"porque los números binarios de coma flotante son aproximados; no es posible "
"representar todos los números reales en base dos.  Esta función puede "
"devolver un valor en coma flotante cuando se le pasan dos números enteros.  "
"Es el equivalente de la expresión de Python ``o1 / o2``."

#: ../../c-api/number.rst:61
msgid ""
"Returns the remainder of dividing *o1* by *o2*, or ``NULL`` on failure.  "
"This is the equivalent of the Python expression ``o1 % o2``."
msgstr ""
"Devuelve el resto de dividir *o1* entre *o2*, o ``NULL`` en caso de fallo.  "
"Equivale a la expresión de Python ``o1 % o2``."

#: ../../c-api/number.rst:69
msgid ""
"See the built-in function :func:`divmod`. Returns ``NULL`` on failure.  This "
"is the equivalent of the Python expression ``divmod(o1, o2)``."
msgstr ""
"Ver la función incorporada :func:`divmod`. Devuelve ``NULL`` en caso de "
"fallo.  Equivale a la expresión de Python ``divmod(o1, o2)``."

#: ../../c-api/number.rst:77
msgid ""
"See the built-in function :func:`pow`. Returns ``NULL`` on failure.  This is "
"the equivalent of the Python expression ``pow(o1, o2, o3)``, where *o3* is "
"optional. If *o3* is to be ignored, pass :c:data:`Py_None` in its place "
"(passing ``NULL`` for *o3* would cause an illegal memory access)."
msgstr ""
"Ver la función incorporada :func:`pow`. Devuelve ``NULL`` en caso de fallo.  "
"Equivale a la expresión de Python ``pow(o1, o2, o3)``, donde *o3* es "
"opcional. Si *o3* se debe ignorar, pasar :c:data:`Py_None` en su lugar "
"(pasar ``NULL`` por *o3* causaría un acceso ilegal a memoria)."

#: ../../c-api/number.rst:85
msgid ""
"Returns the negation of *o* on success, or ``NULL`` on failure. This is the "
"equivalent of the Python expression ``-o``."
msgstr ""
"Devuelve la negación de *o* en caso de éxito, o ``NULL`` en caso de fallo. "
"Equivale a la expresión de Python ``-o``."

#: ../../c-api/number.rst:91
msgid ""
"Returns *o* on success, or ``NULL`` on failure.  This is the equivalent of "
"the Python expression ``+o``."
msgstr ""
"Devuelve *o* en caso de éxito, o ``NULL`` en caso de fallo.  Equivale a la "
"expresión de Python ``+o``."

#: ../../c-api/number.rst:99
msgid ""
"Returns the absolute value of *o*, or ``NULL`` on failure.  This is the "
"equivalent of the Python expression ``abs(o)``."
msgstr ""
"Devuelve el valor absoluto de *o*, o ``NULL`` en caso de fallo.  Equivale a "
"la expresión de Python ``abs(o)``."

#: ../../c-api/number.rst:105
msgid ""
"Returns the bitwise negation of *o* on success, or ``NULL`` on failure.  "
"This is the equivalent of the Python expression ``~o``."
msgstr ""
"Devuelve la negación bitwise de *o* en caso de éxito, o ``NULL`` en caso de "
"fallo.  Equivale a la expresión de Python ``~o``."

#: ../../c-api/number.rst:111
msgid ""
"Returns the result of left shifting *o1* by *o2* on success, or ``NULL`` on "
"failure.  This is the equivalent of the Python expression ``o1 << o2``."
msgstr ""
"Devuelve el resultado de desplazar a la izquierda *o1* por *o2* en caso de "
"éxito, o ``NULL`` en caso de fallo.  Equivale a la expresión de Python ``o1 "
"<< o2``."

#: ../../c-api/number.rst:117
msgid ""
"Returns the result of right shifting *o1* by *o2* on success, or ``NULL`` on "
"failure.  This is the equivalent of the Python expression ``o1 >> o2``."
msgstr ""
"Devuelve el resultado de desplazar a la derecha *o1* por *o2* en caso de "
"éxito, o ``NULL`` en caso de fallo.  Equivale a la expresión de Python ``o1 "
">> o2``."

#: ../../c-api/number.rst:123
msgid ""
"Returns the \"bitwise and\" of *o1* and *o2* on success and ``NULL`` on "
"failure. This is the equivalent of the Python expression ``o1 & o2``."
msgstr ""
"Devuelve el \"bitwise and\" de *o1* y *o2* en caso de éxito y ``NULL`` en "
"caso de fallo. Equivale a la expresión de Python ``o1 & o2``."

#: ../../c-api/number.rst:129
msgid ""
"Returns the \"bitwise exclusive or\" of *o1* by *o2* on success, or ``NULL`` "
"on failure.  This is the equivalent of the Python expression ``o1 ^ o2``."
msgstr ""
"Devuelve el \"bitwise exclusive or\" de *o1* por *o2* en caso de éxito, o "
"``NULL`` en caso de fallo.  Equivale a la expresión de Python ``o1 ^ o2``."

#: ../../c-api/number.rst:135
msgid ""
"Returns the \"bitwise or\" of *o1* and *o2* on success, or ``NULL`` on "
"failure. This is the equivalent of the Python expression ``o1 | o2``."
msgstr ""
"Devuelve el \"bitwise or\" de *o1* y *o2* en caso de éxito, o ``NULL`` en "
"caso de fallo. Equivale a la expresión de Python ``o1 | o2``."

#: ../../c-api/number.rst:141
msgid ""
"Returns the result of adding *o1* and *o2*, or ``NULL`` on failure.  The "
"operation is done *in-place* when *o1* supports it.  This is the equivalent "
"of the Python statement ``o1 += o2``."
msgstr ""
"Devuelve el resultado de sumar *o1* y *o2*, o ``NULL`` en caso de fallo.  La "
"operación se realiza *in-place* cuando *o1* lo admite.  Equivale a la "
"sentencia de Python ``o1 += o2``."

#: ../../c-api/number.rst:148
msgid ""
"Returns the result of subtracting *o2* from *o1*, or ``NULL`` on failure.  "
"The operation is done *in-place* when *o1* supports it.  This is the "
"equivalent of the Python statement ``o1 -= o2``."
msgstr ""
"Devuelve el resultado de restar *o2* de *o1*, o ``NULL`` en caso de fallo.  "
"La operación se realiza *in-place* cuando *o1* lo admite.  Equivale a la "
"sentencia de Python ``o1 -= o2``."

#: ../../c-api/number.rst:155
msgid ""
"Returns the result of multiplying *o1* and *o2*, or ``NULL`` on failure.  "
"The operation is done *in-place* when *o1* supports it.  This is the "
"equivalent of the Python statement ``o1 *= o2``."
msgstr ""
"Devuelve el resultado de multiplicar *o1* y *o2*, o ``NULL`` en caso de "
"fallo.  La operación se realiza *in-place* cuando *o1* lo admite.  Equivale "
"a la sentencia de Python ``o1 *= o2``."

#: ../../c-api/number.rst:162
msgid ""
"Returns the result of matrix multiplication on *o1* and *o2*, or ``NULL`` on "
"failure.  The operation is done *in-place* when *o1* supports it.  This is "
"the equivalent of the Python statement ``o1 @= o2``."
msgstr ""
"Devuelve el resultado de la multiplicación de matrices en *o1* y *o2*, o "
"``NULL`` en caso de fallo.  La operación se realiza *in-place* cuando *o1* "
"lo admite.  Es el equivalente de la sentencia de Python ``o1 @= o2``."

#: ../../c-api/number.rst:171
msgid ""
"Returns the mathematical floor of dividing *o1* by *o2*, or ``NULL`` on "
"failure. The operation is done *in-place* when *o1* supports it.  This is "
"the equivalent of the Python statement ``o1 //= o2``."
msgstr ""
"Devuelve el suelo matemático de dividir *o1* entre *o2*, o ``NULL`` en caso "
"de fallo. La operación se realiza *in-place* cuando *o1* lo admite.  Esto es "
"equivalente a la sentencia de Python ``o1 //= o2``."

#: ../../c-api/number.rst:178
msgid ""
"Return a reasonable approximation for the mathematical value of *o1* divided "
"by *o2*, or ``NULL`` on failure.  The return value is \"approximate\" "
"because binary floating point numbers are approximate; it is not possible to "
"represent all real numbers in base two.  This function can return a floating "
"point value when passed two integers.  The operation is done *in-place* when "
"*o1* supports it. This is the equivalent of the Python statement ``o1 /= "
"o2``."
msgstr ""
"Devuelve una aproximación razonable del valor matemático de *o1* dividido "
"por *o2*, o ``NULL`` en caso de fallo.  El valor devuelto es \"aproximado\" "
"porque los números binarios de coma flotante son aproximados; no es posible "
"representar todos los números reales en base dos.  Esta función puede "
"devolver un valor de coma flotante cuando se le pasan dos enteros.  La "
"operación se realiza *in-place* cuando *o1* lo admite. Esto es equivalente a "
"la sentencia de Python ``o1 /= o2``."

#: ../../c-api/number.rst:188
msgid ""
"Returns the remainder of dividing *o1* by *o2*, or ``NULL`` on failure.  The "
"operation is done *in-place* when *o1* supports it.  This is the equivalent "
"of the Python statement ``o1 %= o2``."
msgstr ""
"Devuelve el resto de dividir *o1* entre *o2*, o ``NULL`` en caso de fallo.  "
"La operación se realiza *in-place* cuando *o1* lo admite.  Equivale a la "
"sentencia de Python ``o1 %= o2``."

#: ../../c-api/number.rst:197
msgid ""
"See the built-in function :func:`pow`. Returns ``NULL`` on failure.  The "
"operation is done *in-place* when *o1* supports it.  This is the equivalent "
"of the Python statement ``o1 **= o2`` when o3 is :c:data:`Py_None`, or an in-"
"place variant of ``pow(o1, o2, o3)`` otherwise. If *o3* is to be ignored, "
"pass :c:data:`Py_None` in its place (passing ``NULL`` for *o3* would cause "
"an illegal memory access)."
msgstr ""
"Ver la función incorporada :func:`pow`. Devuelve ``NULL`` en caso de fallo.  "
"La operación se realiza *in-place* cuando *o1* lo soporta.  Esto es "
"equivalente a la sentencia Python ``o1 **= o2`` cuando o3 es :c:data:"
"`Py_None`, o una variante in-place de ``pow(o1, o2, o3)`` en caso contrario. "
"Si *o3* debe ser ignorado, pase :c:data:`Py_None` en su lugar (pasar "
"``NULL`` por *o3* causaría un acceso ilegal a memoria)."

#: ../../c-api/number.rst:206
msgid ""
"Returns the result of left shifting *o1* by *o2* on success, or ``NULL`` on "
"failure.  The operation is done *in-place* when *o1* supports it.  This is "
"the equivalent of the Python statement ``o1 <<= o2``."
msgstr ""
"Devuelve el resultado de desplazar a la izquierda *o1* por *o2* en caso de "
"éxito, o ``NULL`` en caso de fallo.  La operación se realiza *in-place* "
"cuando *o1* lo admite.  Esto es equivalente a la sentencia de Python ``o1 "
"<<= o2``."

#: ../../c-api/number.rst:213
msgid ""
"Returns the result of right shifting *o1* by *o2* on success, or ``NULL`` on "
"failure.  The operation is done *in-place* when *o1* supports it.  This is "
"the equivalent of the Python statement ``o1 >>= o2``."
msgstr ""
"Devuelve el resultado de desplazar a la derecha *o1* por *o2* en caso de "
"éxito, o ``NULL`` en caso de fallo.  La operación se realiza *in-place* "
"cuando *o1* lo admite.  Esto es equivalente a la sentencia de Python ``o1 "
">>= o2``."

#: ../../c-api/number.rst:220
msgid ""
"Returns the \"bitwise and\" of *o1* and *o2* on success and ``NULL`` on "
"failure. The operation is done *in-place* when *o1* supports it.  This is "
"the equivalent of the Python statement ``o1 &= o2``."
msgstr ""
"Devuelve el \"bitwise and\" de *o1* y *o2* en caso de éxito y ``NULL`` en "
"caso de fallo. La operación se realiza *in-place* cuando *o1* lo admite.  Es "
"el equivalente de la sentencia de Python ``o1 &= o2``."

#: ../../c-api/number.rst:227
msgid ""
"Returns the \"bitwise exclusive or\" of *o1* by *o2* on success, or ``NULL`` "
"on failure.  The operation is done *in-place* when *o1* supports it.  This "
"is the equivalent of the Python statement ``o1 ^= o2``."
msgstr ""
"Devuelve el \"bitwise exclusive or\" de *o1* por *o2* en caso de éxito, o "
"``NULL`` en caso de fallo.  La operación se realiza *in-place* cuando *o1* "
"lo admite.  Equivale a la sentencia de Python ``o1 ^= o2``."

#: ../../c-api/number.rst:234
msgid ""
"Returns the \"bitwise or\" of *o1* and *o2* on success, or ``NULL`` on "
"failure.  The operation is done *in-place* when *o1* supports it.  This is "
"the equivalent of the Python statement ``o1 |= o2``."
msgstr ""
"Devuelve el \"bitwise or\" de *o1* y *o2* en caso de éxito, o ``NULL`` en "
"caso de fallo.  La operación se realiza *in-place* cuando *o1* lo admite.  "
"Equivale a la sentencia de Python ``o1 |= o2``."

#: ../../c-api/number.rst:243
msgid ""
"Returns the *o* converted to an integer object on success, or ``NULL`` on "
"failure.  This is the equivalent of the Python expression ``int(o)``."
msgstr ""
"Devuelve el *o* convertido a un objeto entero en caso de éxito, o ``NULL`` "
"en caso de fallo.  Equivale a la expresión de Python ``int(o)``."

#: ../../c-api/number.rst:251
msgid ""
"Returns the *o* converted to a float object on success, or ``NULL`` on "
"failure. This is the equivalent of the Python expression ``float(o)``."
msgstr ""
"Devuelve el *o* convertido a un objeto flotante en caso de éxito, o ``NULL`` "
"en caso de fallo. Equivale a la expresión de Python ``float(o)``."

#: ../../c-api/number.rst:257
msgid ""
"Returns the *o* converted to a Python int on success or ``NULL`` with a :exc:"
"`TypeError` exception raised on failure."
msgstr ""
"Devuelve el *o* convertido a un int de Python en caso de éxito o ``NULL`` "
"con una excepción :exc:`TypeError` en caso de fallo."

#: ../../c-api/number.rst:260
msgid ""
"The result always has exact type :class:`int`.  Previously, the result could "
"have been an instance of a subclass of ``int``."
msgstr ""
"El resultado siempre tiene el tipo exacto :class:`int`.  Antes, el resultado "
"podía ser una instancia de una subclase de ``int``."

#: ../../c-api/number.rst:267
msgid ""
"Returns the integer *n* converted to base *base* as a string.  The *base* "
"argument must be one of 2, 8, 10, or 16.  For base 2, 8, or 16, the returned "
"string is prefixed with a base marker of ``'0b'``, ``'0o'``, or ``'0x'``, "
"respectively.  If *n* is not a Python int, it is converted with :c:func:"
"`PyNumber_Index` first."
msgstr ""
"Devuelve el número entero *n* convertido a base *base* como cadena.  El "
"argumento *base* debe ser uno de 2, 8, 10 ó 16.  Para base 2, 8 o 16, la "
"cadena devuelta lleva como prefijo un marcador de base ``'0b'``, ``'0o'`` o "
"``'0x'``, respectivamente.  Si *n* no es un int de Python, se convierte "
"primero con :c:func:`PyNumber_Index`."

#: ../../c-api/number.rst:276
msgid ""
"Returns *o* converted to a :c:type:`Py_ssize_t` value if *o* can be "
"interpreted as an integer.  If the call fails, an exception is raised and "
"``-1`` is returned."
msgstr ""
"Devuelve *o* convertido a un valor :c:type:`Py_ssize_t` si *o* puede "
"interpretarse como un entero.  Si la llamada falla, se lanza una excepción y "
"se devuelve ``-1``."

#: ../../c-api/number.rst:279
msgid ""
"If *o* can be converted to a Python int but the attempt to convert to a :c:"
"type:`Py_ssize_t` value would raise an :exc:`OverflowError`, then the *exc* "
"argument is the type of exception that will be raised (usually :exc:"
"`IndexError` or :exc:`OverflowError`).  If *exc* is ``NULL``, then the "
"exception is cleared and the value is clipped to ``PY_SSIZE_T_MIN`` for a "
"negative integer or ``PY_SSIZE_T_MAX`` for a positive integer."
msgstr ""
"Si *o* puede convertirse a un int de Python pero el intento de conversión a "
"un valor de :c:type:`Py_ssize_t` lanzaría una excepción :exc:"
"`OverflowError`, entonces el argumento *exc* es el tipo de excepción que se "
"lanzará (normalmente :exc:`IndexError` o :exc:`OverflowError`).  Si *exc* es "
"``NULL``, entonces la excepción se borra y el valor se recorta a "
"``PY_SSIZE_T_MIN`` para un entero negativo o ``PY_SSIZE_T_MAX`` para un "
"entero positivo."

#: ../../c-api/number.rst:289
msgid ""
"Returns ``1`` if *o* is an index integer (has the ``nb_index`` slot of the "
"``tp_as_number`` structure filled in), and ``0`` otherwise. This function "
"always succeeds."
msgstr ""
"Devuelve ``1`` si *o* es un entero de índice (tiene rellenada la ranura "
"``nb_index`` de la estructura ``tp_as_number`` ), y ``0`` en caso contrario. "
"Esta función siempre tiene éxito."

#: ../../c-api/number.rst:67 ../../c-api/number.rst:75
#: ../../c-api/number.rst:97 ../../c-api/number.rst:195
#: ../../c-api/number.rst:241 ../../c-api/number.rst:249
msgid "built-in function"
msgstr "función incorporada"

#: ../../c-api/number.rst:67
msgid "divmod"
msgstr "divmod"

#: ../../c-api/number.rst:75 ../../c-api/number.rst:195
msgid "pow"
msgstr "pow"

#: ../../c-api/number.rst:97
msgid "abs"
msgstr "abs"

#: ../../c-api/number.rst:241
msgid "int"
msgstr "int"

#: ../../c-api/number.rst:249
msgid "float"
msgstr "flotante"
