# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# eulalio barbero espinosa <eulalio@disroot.org>, 2025
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.13\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-25 15:05+0000\n"
"PO-Revision-Date: 2025-09-15 01:03+0000\n"
"Last-Translator: eulalio barbero espinosa <eulalio@disroot.org>, 2025\n"
"Language-Team: Spanish (Spain) (https://app.transifex.com/python-doc/teams/5390/es_ES/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: es_ES\n"
"Plural-Forms: nplurals=3; plural=n == 1 ? 0 : n != 0 && n % 1000000 == 0 ? 1 : 2;\n"

#: ../../deprecations/index.rst:2
msgid "Deprecations"
msgstr "Depreciaciones"

#: ../../deprecations/c-api-pending-removal-in-3.14.rst:2
#: ../../deprecations/pending-removal-in-3.14.rst:2
msgid "Pending Removal in Python 3.14"
msgstr "Eliminación de pendientes en Python 3.14"

#: ../../deprecations/pending-removal-in-3.14.rst:4
msgid ""
":mod:`argparse`: The *type*, *choices*, and *metavar* parameters of "
":class:`!argparse.BooleanOptionalAction` are deprecated and will be removed "
"in 3.14. (Contributed by Nikita Sobolev in :gh:`92248`.)"
msgstr ""
":mod:`argparse`: Los parámetros *type*, *choices* y *metavar* de "
":class:`!argparse.BooleanOptionalAction` están obsoletos y se eliminarán en "
"3.14. (Contribución de Nikita Sobolev en :gh:`92248`.)"

#: ../../deprecations/pending-removal-in-3.14.rst:9
msgid ""
":mod:`ast`: The following features have been deprecated in documentation "
"since Python 3.8, now cause a :exc:`DeprecationWarning` to be emitted at "
"runtime when they are accessed or used, and will be removed in Python 3.14:"
msgstr ""
":mod:`ast`: Las siguientes características están obsoletas en la "
"documentación desde Python 3.8, ahora causan que se emita un "
":exc:`DeprecationWarning` en tiempo de ejecución cuando se accede a ellas o "
"se utilizan, y serán eliminadas en Python 3.14:"

#: ../../deprecations/pending-removal-in-3.14.rst:13
msgid ":class:`!ast.Num`"
msgstr ":class:`!ast.Num`"

#: ../../deprecations/pending-removal-in-3.14.rst:14
msgid ":class:`!ast.Str`"
msgstr ":class:`!ast.Str`"

#: ../../deprecations/pending-removal-in-3.14.rst:15
msgid ":class:`!ast.Bytes`"
msgstr ":class:`!ast.Bytes`"

#: ../../deprecations/pending-removal-in-3.14.rst:16
msgid ":class:`!ast.NameConstant`"
msgstr ":class:`!ast.NameConstant`"

#: ../../deprecations/pending-removal-in-3.14.rst:17
msgid ":class:`!ast.Ellipsis`"
msgstr ":class:`!ast.Ellipsis`"

#: ../../deprecations/pending-removal-in-3.14.rst:19
msgid ""
"Use :class:`ast.Constant` instead. (Contributed by Serhiy Storchaka in "
":gh:`90953`.)"
msgstr ""
"Utilice :class:`ast.Constant` en su lugar. (Contribución de Serhiy Storchaka"
" en :gh:`90953`.)"

#: ../../deprecations/pending-removal-in-3.14.rst:22
#: ../../deprecations/pending-removal-in-3.16.rst:19
msgid ":mod:`asyncio`:"
msgstr ":mod:`asyncio`:"

#: ../../deprecations/pending-removal-in-3.14.rst:24
msgid ""
"The child watcher classes :class:`~asyncio.MultiLoopChildWatcher`, "
":class:`~asyncio.FastChildWatcher`, :class:`~asyncio.AbstractChildWatcher` "
"and :class:`~asyncio.SafeChildWatcher` are deprecated and will be removed in"
" Python 3.14. (Contributed by Kumar Aditya in :gh:`94597`.)"
msgstr ""
"Las clases child watcher :class:`~asyncio.MultiLoopChildWatcher`, "
":class:`~asyncio.FastChildWatcher`, :class:`~asyncio.AbstractChildWatcher` y"
" :class:`~asyncio.SafeChildWatcher` están obsoletas y se eliminarán en "
"Python 3.14. (Contribución de Kumar Aditya en :gh:`94597`.)"

#: ../../deprecations/pending-removal-in-3.14.rst:30
msgid ""
":func:`asyncio.set_child_watcher`, :func:`asyncio.get_child_watcher`, "
":meth:`asyncio.AbstractEventLoopPolicy.set_child_watcher` and "
":meth:`asyncio.AbstractEventLoopPolicy.get_child_watcher` are deprecated and"
" will be removed in Python 3.14. (Contributed by Kumar Aditya in "
":gh:`94597`.)"
msgstr ""
":func:`asyncio.set_child_watcher`, :func:`asyncio.get_child_watcher`, "
":meth:`asyncio.AbstractEventLoopPolicy.set_child_watcher` y "
":meth:`asyncio.AbstractEventLoopPolicy.get_child_watcher` están obsoletos y "
"se eliminarán en Python 3.14. (Contribución de Kumar Aditya en :gh:`94597`.)"

#: ../../deprecations/pending-removal-in-3.14.rst:36
msgid ""
"The :meth:`~asyncio.get_event_loop` method of the default event loop policy "
"now emits a :exc:`DeprecationWarning` if there is no current event loop set "
"and it decides to create one. (Contributed by Serhiy Storchaka and Guido van"
" Rossum in :gh:`100160`.)"
msgstr ""
"El método :meth:`~asyncio.get_event_loop` de la política de bucle de eventos"
" por defecto ahora emite un :exc:`DeprecationWarning` si no hay un bucle de "
"eventos actual establecido y decide crear uno. (Contribución de Serhiy "
"Storchaka y Guido van Rossum en :gh:`100160`)."

#: ../../deprecations/pending-removal-in-3.14.rst:41
msgid ""
":mod:`email`: Deprecated the *isdst* parameter in "
":func:`email.utils.localtime`. (Contributed by Alan Williams in "
":gh:`72346`.)"
msgstr ""
":mod:`email`: Obsoleto el parámetro * isdst * "
"en:func:`email.utils.localtime`. (Contribución de Alan Williams en "
":gh:`72346`.)"

#: ../../deprecations/pending-removal-in-3.14.rst:44
msgid ":mod:`importlib.abc` deprecated classes:"
msgstr ":mod:`importlib.abc` clases obsoletas:"

#: ../../deprecations/pending-removal-in-3.14.rst:46
msgid ":class:`!importlib.abc.ResourceReader`"
msgstr ":class:`!importlib.abc.ResourceReader`"

#: ../../deprecations/pending-removal-in-3.14.rst:47
msgid ":class:`!importlib.abc.Traversable`"
msgstr ":class:`!importlib.abc.Traversable`"

#: ../../deprecations/pending-removal-in-3.14.rst:48
msgid ":class:`!importlib.abc.TraversableResources`"
msgstr ":class:`!importlib.abc.TraversableResources`"

#: ../../deprecations/pending-removal-in-3.14.rst:50
msgid "Use :mod:`importlib.resources.abc` classes instead:"
msgstr "En su lugar, utilice las clases de :mod:`importlib.resources.abc`:"

#: ../../deprecations/pending-removal-in-3.14.rst:52
msgid ":class:`importlib.resources.abc.Traversable`"
msgstr ":class:`importlib.resources.abc.Traversable`"

#: ../../deprecations/pending-removal-in-3.14.rst:53
msgid ":class:`importlib.resources.abc.TraversableResources`"
msgstr ":class:`importlib.resources.abc.TraversableResources`"

#: ../../deprecations/pending-removal-in-3.14.rst:55
msgid "(Contributed by Jason R. Coombs and Hugo van Kemenade in :gh:`93963`.)"
msgstr "(Contribución de Jason R. Coombs y Hugo van Kemenade en :gh:`93963`.)"

#: ../../deprecations/pending-removal-in-3.14.rst:57
msgid ""
":mod:`itertools` had undocumented, inefficient, historically buggy, and "
"inconsistent support for copy, deepcopy, and pickle operations. This will be"
" removed in 3.14 for a significant reduction in code volume and maintenance "
"burden. (Contributed by Raymond Hettinger in :gh:`101588`.)"
msgstr ""
":mod:`itertools` tenía un soporte indocumentado, ineficiente, con errores "
"históricos e inconsistente para las operaciones de copia, deepcopy y pickle."
" Esto será eliminado en 3.14 para una reducción significativa en el volumen "
"de código y la carga de mantenimiento. (Contribución de Raymond Hettinger en"
" :gh:`101588`.)"

#: ../../deprecations/pending-removal-in-3.14.rst:63
msgid ""
":mod:`multiprocessing`: The default start method will change to a safer one "
"on Linux, BSDs, and other non-macOS POSIX platforms where ``'fork'`` is "
"currently the default (:gh:`84559`). Adding a runtime warning about this was"
" deemed too disruptive as the majority of code is not expected to care. Use "
"the :func:`~multiprocessing.get_context` or "
":func:`~multiprocessing.set_start_method` APIs to explicitly specify when "
"your code *requires* ``'fork'``.  See :ref:`multiprocessing-start-methods`."
msgstr ""
":mod:`multiprocessing`: El método de inicio por defecto cambiará a uno más "
"seguro en Linux, BSDs y otras plataformas POSIX no MacOS donde ``'fork'`` es"
" actualmente el método por defecto (:gh:`84559`). Añadir una advertencia en "
"tiempo de ejecución sobre esto se consideró demasiado perjudicial ya que no "
"se espera que a la mayoría del código le importe. Use las APIs "
":func:`~multiprocessing.get_context` o "
":func:`~multiprocessing.set_start_method` para especificar explícitamente "
"cuando su código *requiere* ``'fork'``.  Véase :ref:`multiprocessing-start-"
"methods`."

#: ../../deprecations/pending-removal-in-3.14.rst:71
msgid ""
":mod:`pathlib`: :meth:`~pathlib.PurePath.is_relative_to` and "
":meth:`~pathlib.PurePath.relative_to`: passing additional arguments is "
"deprecated."
msgstr ""
":mod:`pathlib`: :meth:`~pathlib.PurePath.is_relative_to` y "
":meth:`~pathlib.PurePath.relative_to`: pasar argumentos adicionales está "
"obsoleto."

#: ../../deprecations/pending-removal-in-3.14.rst:75
msgid ""
":mod:`pkgutil`: :func:`~pkgutil.find_loader` and :func:`~pkgutil.get_loader`"
" now raise :exc:`DeprecationWarning`; use :func:`importlib.util.find_spec` "
"instead. (Contributed by Nikita Sobolev in :gh:`97850`.)"
msgstr ""
":mod:`pkgutil`: :func:`~pkgutil.find_loader` y :func:`~pkgutil.get_loader` "
"ahora levantan :exc:`DeprecationWarning`; use "
":func:`importlib.util.find_spec` en su lugar. (Contribución de Nikita "
"Sobolev en :gh:`97850`.)"

#: ../../deprecations/pending-removal-in-3.14.rst:80
msgid ":mod:`pty`:"
msgstr ":mod:`pty`:"

#: ../../deprecations/pending-removal-in-3.14.rst:82
msgid "``master_open()``: use :func:`pty.openpty`."
msgstr "``master_open()``: use :func:`pty.openpty`."

#: ../../deprecations/pending-removal-in-3.14.rst:83
msgid "``slave_open()``: use :func:`pty.openpty`."
msgstr "``slave_open()``: use :func:`pty.openpty`."

#: ../../deprecations/pending-removal-in-3.14.rst:85
msgid ":mod:`sqlite3`:"
msgstr ":mod:`sqlite3`:"

#: ../../deprecations/pending-removal-in-3.14.rst:87
msgid ":data:`~sqlite3.version` and :data:`~sqlite3.version_info`."
msgstr ":data:`~sqlite3.version` y :data:`~sqlite3.version_info`."

#: ../../deprecations/pending-removal-in-3.14.rst:89
msgid ""
":meth:`~sqlite3.Cursor.execute` and :meth:`~sqlite3.Cursor.executemany` if "
":ref:`named placeholders <sqlite3-placeholders>` are used and *parameters* "
"is a sequence instead of a :class:`dict`."
msgstr ""
":meth:`~sqlite3.Cursor.execute` y :meth:`~sqlite3.Cursor.executemany` si se "
"utilizan :ref:`named placeholders <sqlite3-placeholders>` y *parámetros* es "
"una secuencia en lugar de un :class:`dict`."

#: ../../deprecations/pending-removal-in-3.14.rst:93
msgid ""
":mod:`urllib`: :class:`!urllib.parse.Quoter` is deprecated: it was not "
"intended to be a public API. (Contributed by Gregory P. Smith in "
":gh:`88168`.)"
msgstr ""
":mod:`urllib`: :class:`!urllib.parse.Quoter` está obsoleta: no se pretendía "
"que fuera una API pública. (Contribución de Gregory P. Smith en "
":gh:`88168`.)"

#: ../../deprecations/c-api-pending-removal-in-3.15.rst:2
#: ../../deprecations/pending-removal-in-3.15.rst:2
msgid "Pending Removal in Python 3.15"
msgstr "Pendiente de eliminación en Python 3.15"

#: ../../deprecations/pending-removal-in-3.15.rst:4
#: ../../deprecations/pending-removal-in-3.16.rst:4
msgid "The import system:"
msgstr "El sistema de importación:"

#: ../../deprecations/pending-removal-in-3.15.rst:6
msgid ""
"Setting :attr:`~module.__cached__` on a module while failing to set "
":attr:`__spec__.cached <importlib.machinery.ModuleSpec.cached>` is "
"deprecated. In Python 3.15, :attr:`!__cached__` will cease to be set or take"
" into consideration by the import system or standard library. (:gh:`97879`)"
msgstr ""

#: ../../deprecations/pending-removal-in-3.15.rst:11
msgid ""
"Setting :attr:`~module.__package__` on a module while failing to set "
":attr:`__spec__.parent <importlib.machinery.ModuleSpec.parent>` is "
"deprecated. In Python 3.15, :attr:`!__package__` will cease to be set or "
"take into consideration by the import system or standard library. "
"(:gh:`97879`)"
msgstr ""

#: ../../deprecations/pending-removal-in-3.15.rst:16
msgid ":mod:`ctypes`:"
msgstr ""

#: ../../deprecations/pending-removal-in-3.15.rst:18
msgid ""
"The undocumented :func:`!ctypes.SetPointerType` function has been deprecated"
" since Python 3.13."
msgstr ""

#: ../../deprecations/pending-removal-in-3.15.rst:21
msgid ":mod:`http.server`:"
msgstr ""

#: ../../deprecations/pending-removal-in-3.15.rst:23
msgid ""
"The obsolete and rarely used :class:`~http.server.CGIHTTPRequestHandler` has"
" been deprecated since Python 3.13. No direct replacement exists. *Anything*"
" is better than CGI to interface a web server with a request handler."
msgstr ""

#: ../../deprecations/pending-removal-in-3.15.rst:29
msgid ""
"The :option:`!--cgi` flag to the :program:`python -m http.server` command-"
"line interface has been deprecated since Python 3.13."
msgstr ""

#: ../../deprecations/pending-removal-in-3.15.rst:32
#: ../../deprecations/pending-removal-in-future.rst:56
msgid ":mod:`importlib`:"
msgstr ":mod:`importlib`:"

#: ../../deprecations/pending-removal-in-3.15.rst:34
msgid "``load_module()`` method: use ``exec_module()`` instead."
msgstr "``load_module()`` utilice ``exec_module()``."

#: ../../deprecations/pending-removal-in-3.15.rst:36
msgid ":class:`locale`:"
msgstr ""

#: ../../deprecations/pending-removal-in-3.15.rst:38
msgid ""
"The :func:`~locale.getdefaultlocale` function has been deprecated since "
"Python 3.11. Its removal was originally planned for Python 3.13 "
"(:gh:`90817`), but has been postponed to Python 3.15. Use "
":func:`~locale.getlocale`, :func:`~locale.setlocale`, and "
":func:`~locale.getencoding` instead. (Contributed by Hugo van Kemenade in "
":gh:`111187`.)"
msgstr ""

#: ../../deprecations/pending-removal-in-3.15.rst:46
msgid ":mod:`pathlib`:"
msgstr ""

#: ../../deprecations/pending-removal-in-3.15.rst:48
msgid ""
":meth:`.PurePath.is_reserved` has been deprecated since Python 3.13. Use "
":func:`os.path.isreserved` to detect reserved paths on Windows."
msgstr ""

#: ../../deprecations/pending-removal-in-3.15.rst:52
msgid ":mod:`platform`:"
msgstr ""

#: ../../deprecations/pending-removal-in-3.15.rst:54
msgid ""
":func:`~platform.java_ver` has been deprecated since Python 3.13. This "
"function is only useful for Jython support, has a confusing API, and is "
"largely untested."
msgstr ""

#: ../../deprecations/pending-removal-in-3.15.rst:58
msgid ":mod:`sysconfig`:"
msgstr ":mod:`sysconfig`:"

#: ../../deprecations/pending-removal-in-3.15.rst:60
msgid ""
"The *check_home* argument of :func:`sysconfig.is_python_build` has been "
"deprecated since Python 3.12."
msgstr ""
"El argumento *check_home* de :func:`sysconfig.is_python_build` está obsoleto"
" desde Python 3.12."

#: ../../deprecations/pending-removal-in-3.15.rst:63
msgid ":mod:`threading`:"
msgstr ""

#: ../../deprecations/pending-removal-in-3.15.rst:65
msgid ""
":func:`~threading.RLock` will take no arguments in Python 3.15. Passing any "
"arguments has been deprecated since Python 3.14, as the  Python version does"
" not permit any arguments, but the C version allows any number of positional"
" or keyword arguments, ignoring every argument."
msgstr ""

#: ../../deprecations/pending-removal-in-3.15.rst:71
msgid ":mod:`types`:"
msgstr ":mod:`types`:"

#: ../../deprecations/pending-removal-in-3.15.rst:73
msgid ""
":class:`types.CodeType`: Accessing :attr:`~codeobject.co_lnotab` was "
"deprecated in :pep:`626` since 3.10 and was planned to be removed in 3.12, "
"but it only got a proper :exc:`DeprecationWarning` in 3.12. May be removed "
"in 3.15. (Contributed by Nikita Sobolev in :gh:`101866`.)"
msgstr ""
":class:`types.CodeType`: El acceso :attr:`~codeobject.co_lnotab` es obsoleto"
" en :pep:`626` desde la versión 3.10 y se pensó quitar en la 3.12, pero solo"
" tuvo un correcto :exc:`DeprecationWarning` en la 3.12. Puede eliminarse en "
"la 3.15. (Contribución de Nikita Sobolev en :gh:`101866`.)"

#: ../../deprecations/pending-removal-in-3.15.rst:80
#: ../../deprecations/pending-removal-in-3.17.rst:26
msgid ":mod:`typing`:"
msgstr ":mod:`typing`:"

#: ../../deprecations/pending-removal-in-3.15.rst:82
msgid ""
"The undocumented keyword argument syntax for creating "
":class:`~typing.NamedTuple` classes (e.g. ``Point = NamedTuple(\"Point\", "
"x=int, y=int)``) has been deprecated since Python 3.13. Use the class-based "
"syntax or the functional syntax instead."
msgstr ""

#: ../../deprecations/pending-removal-in-3.15.rst:88
msgid ""
"When using the functional syntax of :class:`~typing.TypedDict`\\s, failing "
"to pass a value to the *fields* parameter (``TD = TypedDict(\"TD\")``) or "
"passing ``None`` (``TD = TypedDict(\"TD\", None)``) has been deprecated "
"since Python 3.13. Use ``class TD(TypedDict): pass`` or ``TD = "
"TypedDict(\"TD\", {})`` to create a TypedDict with zero field."
msgstr ""

#: ../../deprecations/pending-removal-in-3.15.rst:95
msgid ""
"The :func:`typing.no_type_check_decorator` decorator function has been "
"deprecated since Python 3.13. After eight years in the :mod:`typing` module,"
" it has yet to be supported by any major type checker."
msgstr ""

#: ../../deprecations/pending-removal-in-3.15.rst:100
msgid ":mod:`wave`:"
msgstr ""

#: ../../deprecations/pending-removal-in-3.15.rst:102
msgid ""
"The :meth:`~wave.Wave_read.getmark`, :meth:`!setmark`, and "
":meth:`~wave.Wave_read.getmarkers` methods of the :class:`~wave.Wave_read` "
"and :class:`~wave.Wave_write` classes have been deprecated since Python "
"3.13."
msgstr ""

#: ../../deprecations/pending-removal-in-3.16.rst:2
msgid "Pending removal in Python 3.16"
msgstr ""

#: ../../deprecations/pending-removal-in-3.16.rst:6
msgid ""
"Setting :attr:`~module.__loader__` on a module while failing to set "
":attr:`__spec__.loader <importlib.machinery.ModuleSpec.loader>` is "
"deprecated. In Python 3.16, :attr:`!__loader__` will cease to be set or "
"taken into consideration by the import system or the standard library."
msgstr ""
"Establecer :attr:`~module.__loader__` en un módulo sin establecer "
":attr:`__spec__.loader <importlib.machinery.ModuleSpec.loader>` está "
"obsoleto. En Python 3.16, :attr:`!__loader__` se dejará de establecer o "
"tomar en consideración por el sistema de importación o la biblioteca "
"estándar."

#: ../../deprecations/pending-removal-in-3.16.rst:11
msgid ":mod:`array`:"
msgstr ""

#: ../../deprecations/pending-removal-in-3.16.rst:13
msgid ""
"The ``'u'`` format code (:c:type:`wchar_t`) has been deprecated in "
"documentation since Python 3.3 and at runtime since Python 3.13. Use the "
"``'w'`` format code (:c:type:`Py_UCS4`) for Unicode characters instead."
msgstr ""

#: ../../deprecations/pending-removal-in-3.16.rst:21
msgid ""
":func:`!asyncio.iscoroutinefunction` is deprecated and will be removed in "
"Python 3.16, use :func:`inspect.iscoroutinefunction` instead. (Contributed "
"by Jiahao Li and Kumar Aditya in :gh:`122875`.)"
msgstr ""

#: ../../deprecations/pending-removal-in-3.16.rst:26
#: ../../deprecations/pending-removal-in-future.rst:10
msgid ":mod:`builtins`:"
msgstr ":mod:`builtins`:"

#: ../../deprecations/pending-removal-in-3.16.rst:28
msgid ""
"Bitwise inversion on boolean types, ``~True`` or ``~False`` has been "
"deprecated since Python 3.12, as it produces surprising and unintuitive "
"results (``-2`` and ``-1``). Use ``not x`` instead for the logical negation "
"of a Boolean. In the rare case that you need the bitwise inversion of the "
"underlying integer, convert to ``int`` explicitly (``~int(x)``)."
msgstr ""

#: ../../deprecations/pending-removal-in-3.16.rst:35
msgid ":mod:`shutil`:"
msgstr ""

#: ../../deprecations/pending-removal-in-3.16.rst:37
msgid ""
"The :class:`!ExecError` exception has been deprecated since Python 3.14. It "
"has not been used by any function in :mod:`!shutil` since Python 3.4, and is"
" now an alias of :exc:`RuntimeError`."
msgstr ""

#: ../../deprecations/pending-removal-in-3.16.rst:42
msgid ":mod:`symtable`:"
msgstr ""

#: ../../deprecations/pending-removal-in-3.16.rst:44
msgid ""
"The :meth:`Class.get_methods <symtable.Class.get_methods>` method has been "
"deprecated since Python 3.14."
msgstr ""

#: ../../deprecations/pending-removal-in-3.16.rst:47
msgid ":mod:`sys`:"
msgstr ""

#: ../../deprecations/pending-removal-in-3.16.rst:49
msgid ""
"The :func:`~sys._enablelegacywindowsfsencoding` function has been deprecated"
" since Python 3.13. Use the :envvar:`PYTHONLEGACYWINDOWSFSENCODING` "
"environment variable instead."
msgstr ""

#: ../../deprecations/pending-removal-in-3.16.rst:53
msgid ":mod:`tarfile`:"
msgstr ""

#: ../../deprecations/pending-removal-in-3.16.rst:55
msgid ""
"The undocumented and unused :attr:`!TarFile.tarfile` attribute has been "
"deprecated since Python 3.13."
msgstr ""

#: ../../deprecations/pending-removal-in-3.17.rst:2
msgid "Pending removal in Python 3.17"
msgstr ""

#: ../../deprecations/pending-removal-in-3.17.rst:4
msgid ":mod:`collections.abc`:"
msgstr ""

#: ../../deprecations/pending-removal-in-3.17.rst:6
msgid ""
":class:`collections.abc.ByteString` is scheduled for removal in Python 3.17."
msgstr ""

#: ../../deprecations/pending-removal-in-3.17.rst:8
#: ../../deprecations/pending-removal-in-3.17.rst:36
msgid ""
"Use ``isinstance(obj, collections.abc.Buffer)`` to test if ``obj`` "
"implements the :ref:`buffer protocol <bufferobjects>` at runtime. For use in"
" type annotations, either use :class:`~collections.abc.Buffer` or a union "
"that explicitly specifies the types your code supports (e.g., ``bytes | "
"bytearray | memoryview``)."
msgstr ""

#: ../../deprecations/pending-removal-in-3.17.rst:14
#: ../../deprecations/pending-removal-in-3.17.rst:42
msgid ""
":class:`!ByteString` was originally intended to be an abstract class that "
"would serve as a supertype of both :class:`bytes` and :class:`bytearray`. "
"However, since the ABC never had any methods, knowing that an object was an "
"instance of :class:`!ByteString` never actually told you anything useful "
"about the object. Other common buffer types such as :class:`memoryview` were"
" also never understood as subtypes of :class:`!ByteString` (either at "
"runtime or by static type checkers)."
msgstr ""

#: ../../deprecations/pending-removal-in-3.17.rst:22
#: ../../deprecations/pending-removal-in-3.17.rst:50
msgid ""
"See :pep:`PEP 688 <688#current-options>` for more details. (Contributed by "
"Shantanu Jain in :gh:`91896`.)"
msgstr ""

#: ../../deprecations/pending-removal-in-3.17.rst:28
msgid ""
"Before Python 3.14, old-style unions were implemented using the private "
"class ``typing._UnionGenericAlias``. This class is no longer needed for the "
"implementation, but it has been retained for backward compatibility, with "
"removal scheduled for Python 3.17. Users should use documented introspection"
" helpers like :func:`typing.get_origin` and :func:`typing.get_args` instead "
"of relying on private implementation details."
msgstr ""

#: ../../deprecations/pending-removal-in-3.17.rst:33
msgid ""
":class:`typing.ByteString`, deprecated since Python 3.9, is scheduled for "
"removal in Python 3.17."
msgstr ""

#: ../../deprecations/c-api-pending-removal-in-future.rst:2
#: ../../deprecations/pending-removal-in-future.rst:2
msgid "Pending Removal in Future Versions"
msgstr "Pendiente de eliminación en futuras versiones"

#: ../../deprecations/pending-removal-in-future.rst:4
msgid ""
"The following APIs will be removed in the future, although there is "
"currently no date scheduled for their removal."
msgstr ""
"Las siguientes API se eliminarán en el futuro, aunque actualmente no hay "
"fecha prevista para su retirada."

#: ../../deprecations/pending-removal-in-future.rst:7
msgid ""
":mod:`argparse`: Nesting argument groups and nesting mutually exclusive "
"groups are deprecated."
msgstr ""
":mod:`argparse`: El anidamiento de grupos de argumentos y el anidamiento de "
"grupos mutuamente excluyentes están obsoletos."

#: ../../deprecations/pending-removal-in-future.rst:12
msgid "``bool(NotImplemented)``."
msgstr "``bool(NotImplemented)``."

#: ../../deprecations/pending-removal-in-future.rst:13
msgid ""
"Generators: ``throw(type, exc, tb)`` and ``athrow(type, exc, tb)`` signature"
" is deprecated: use ``throw(exc)`` and ``athrow(exc)`` instead, the single "
"argument signature."
msgstr ""
"Generadores: la firma ``throw(type, exc, tb)`` y ``athrow(type, exc, tb)`` "
"está obsoleta: utilice en su lugar ``throw(exc)`` y ``athrow(exc)``, la "
"firma de argumento único."

#: ../../deprecations/pending-removal-in-future.rst:16
msgid ""
"Currently Python accepts numeric literals immediately followed by keywords, "
"for example ``0in x``, ``1or x``, ``0if 1else 2``.  It allows confusing and "
"ambiguous expressions like ``[0x1for x in y]`` (which can be interpreted as "
"``[0x1 for x in y]`` or ``[0x1f or x in y]``).  A syntax warning is raised "
"if the numeric literal is immediately followed by one of keywords "
":keyword:`and`, :keyword:`else`, :keyword:`for`, :keyword:`if`, "
":keyword:`in`, :keyword:`is` and :keyword:`or`.  In a future release it will"
" be changed to a syntax error. (:gh:`87999`)"
msgstr ""
"Actualmente Python acepta literales numéricos seguidos inmediatamente de "
"palabras clave, por ejemplo ``0in x``, ``1or x``, ``0if 1else 2``.  Permite "
"expresiones confusas y ambiguas como ``[0x1for x in y]`` (que puede "
"interpretarse como ``[0x1 for x in y]`` o ``[0x1f or x in y]``).  Si el "
"literal numérico va seguido inmediatamente de una de las palabras clave "
":keyword:`and`, :keyword:`else`, :keyword:`for`, :keyword:`if`, "
":keyword:`in`, :keyword:`is` y :keyword:`or`, aparece una advertencia de "
"sintaxis. En una futura versión, se cambiará por un error de sintaxis. "
"(:gh:`87999`)"

#: ../../deprecations/pending-removal-in-future.rst:24
msgid ""
"Support for ``__index__()`` and ``__int__()`` method returning non-int type:"
" these methods will be required to return an instance of a strict subclass "
"of :class:`int`."
msgstr ""
"Compatibilidad con los métodos ``__index__()`` y ``__int__()`` que devuelven"
" tipos no enteros: estos métodos deberán devolver una instancia de una "
"subclase estricta de :class:`int`."

#: ../../deprecations/pending-removal-in-future.rst:27
msgid ""
"Support for ``__float__()`` method returning a strict subclass of "
":class:`float`: these methods will be required to return an instance of "
":class:`float`."
msgstr ""
"Soporte para el método ``__float__()`` que devuelve una subclase estricta de"
" :class:`float`: se requerirá que estos métodos devuelvan una instancia de "
":class:`float`."

#: ../../deprecations/pending-removal-in-future.rst:30
msgid ""
"Support for ``__complex__()`` method returning a strict subclass of "
":class:`complex`: these methods will be required to return an instance of "
":class:`complex`."
msgstr ""
"Soporte para el método ``__complex__()`` que devuelve una subclase estricta "
"de :class:`complex`: se requerirá que estos métodos devuelvan una instancia "
"de :class:`complex`."

#: ../../deprecations/pending-removal-in-future.rst:33
msgid "Delegation of ``int()`` to ``__trunc__()`` method."
msgstr "Delegación del método ``int()`` a ``__trunc__()``."

#: ../../deprecations/pending-removal-in-future.rst:34
msgid ""
"Passing a complex number as the *real* or *imag* argument in the "
":func:`complex` constructor is now deprecated; it should only be passed as a"
" single positional argument. (Contributed by Serhiy Storchaka in "
":gh:`109218`.)"
msgstr ""
"Pasar un número complejo como argumento *real* o *imag* en el constructor "
":func:`complex` está ahora obsoleto; sólo debe pasarse como argumento "
"posicional único. (Contribución de Serhiy Storchaka en :gh:`109218`.)"

#: ../../deprecations/pending-removal-in-future.rst:39
msgid ""
":mod:`calendar`: ``calendar.January`` and ``calendar.February`` constants "
"are deprecated and replaced by :data:`calendar.JANUARY` and "
":data:`calendar.FEBRUARY`. (Contributed by Prince Roshan in :gh:`103636`.)"
msgstr ""
":mod:`calendar`: Las constantes ``calendar.January`` y ``calendar.February``"
" quedan obsoletas y se sustituyen por :data:`calendar.JANUARY` y "
":data:`calendar.FEBRUARY`. (Contribución de Prince Roshan en :gh:`103636`.)"

#: ../../deprecations/pending-removal-in-future.rst:44
msgid ""
":attr:`codeobject.co_lnotab`: use the :meth:`codeobject.co_lines` method "
"instead."
msgstr ""
":attr:`codeobject.co_lnotab`: utilice en su lugar el método "
":meth:`codeobject.co_lines`."

#: ../../deprecations/pending-removal-in-future.rst:47
msgid ":mod:`datetime`:"
msgstr ":mod:`datetime`:"

#: ../../deprecations/pending-removal-in-future.rst:49
msgid ""
":meth:`~datetime.datetime.utcnow`: use "
"``datetime.datetime.now(tz=datetime.UTC)``."
msgstr ""
":meth:`~datetime.datetime.utcnow`: use "
"``datetime.datetime.now(tz=datetime.UTC)``."

#: ../../deprecations/pending-removal-in-future.rst:51
msgid ""
":meth:`~datetime.datetime.utcfromtimestamp`: use "
"``datetime.datetime.fromtimestamp(timestamp, tz=datetime.UTC)``."
msgstr ""
":meth:`~datetime.datetime.utcfromtimestamp`: use "
"``datetime.datetime.fromtimestamp(timestamp, tz=datetime.UTC)``."

#: ../../deprecations/pending-removal-in-future.rst:54
msgid ":mod:`gettext`: Plural value must be an integer."
msgstr ":mod:`gettext`: El valor plural debe ser un número entero."

#: ../../deprecations/pending-removal-in-future.rst:58
msgid ""
":func:`~importlib.util.cache_from_source` *debug_override* parameter is "
"deprecated: use the *optimization* parameter instead."
msgstr ""
":func:`~importlib.util.cache_from_source` El parámetro *debug_override* está"
" obsoleto: utilice en su lugar el parámetro *optimization*."

#: ../../deprecations/pending-removal-in-future.rst:61
msgid ":mod:`importlib.metadata`:"
msgstr ":mod:`importlib.metadata`:"

#: ../../deprecations/pending-removal-in-future.rst:63
msgid "``EntryPoints`` tuple interface."
msgstr "``EntryPoints`` interfaz de tupla."

#: ../../deprecations/pending-removal-in-future.rst:64
msgid "Implicit ``None`` on return values."
msgstr "``None`` implícita en los valores de retorno."

#: ../../deprecations/pending-removal-in-future.rst:66
msgid ""
":mod:`logging`: the ``warn()`` method has been deprecated since Python 3.3, "
"use :meth:`~logging.warning` instead."
msgstr ""

#: ../../deprecations/pending-removal-in-future.rst:69
msgid ""
":mod:`mailbox`: Use of StringIO input and text mode is deprecated, use "
"BytesIO and binary mode instead."
msgstr ""
":mod:`mailbox`: El uso de la entrada StringIO y el modo texto está obsoleto,"
" utilice BytesIO y el modo binario en su lugar."

#: ../../deprecations/pending-removal-in-future.rst:72
msgid ""
":mod:`os`: Calling :func:`os.register_at_fork` in multi-threaded process."
msgstr ""
":mod:`os`: Llamada a :func:`os.register_at_fork` en un proceso multihilo."

#: ../../deprecations/pending-removal-in-future.rst:74
msgid ""
":class:`!pydoc.ErrorDuringImport`: A tuple value for *exc_info* parameter is"
" deprecated, use an exception instance."
msgstr ""
":class:`!pydoc.ErrorDuringImport`: Un valor de tupla para el parámetro "
"*exc_info* está obsoleto, utilice una instancia de excepción."

#: ../../deprecations/pending-removal-in-future.rst:77
msgid ""
":mod:`re`: More strict rules are now applied for numerical group references "
"and group names in regular expressions.  Only sequence of ASCII digits is "
"now accepted as a numerical reference.  The group name in bytes patterns and"
" replacement strings can now only contain ASCII letters and digits and "
"underscore. (Contributed by Serhiy Storchaka in :gh:`91760`.)"
msgstr ""
":mod:`re`: Ahora se aplican reglas más estrictas para las referencias "
"numéricas de grupo y los nombres de grupo en las expresiones regulares.  "
"Ahora sólo se acepta como referencia numérica la secuencia de dígitos ASCII."
"  El nombre de grupo en patrones de bytes y cadenas de sustitución ahora "
"sólo puede contener letras y dígitos ASCII y guión bajo. (Contribución de "
"Serhiy Storchaka en :gh:`91760`.)"

#: ../../deprecations/pending-removal-in-future.rst:84
msgid ""
":mod:`!sre_compile`, :mod:`!sre_constants` and :mod:`!sre_parse` modules."
msgstr ":mod:`!sre_compile` :mod:`!sre_constants` y . :mod:`!sre_parse` "

#: ../../deprecations/pending-removal-in-future.rst:86
msgid ""
":mod:`shutil`: :func:`~shutil.rmtree`'s *onerror* parameter is deprecated in"
" Python 3.12; use the *onexc* parameter instead."
msgstr ""
":mod:`shutil`: :func:`~shutil.rmtree` El parámetro *onerror* de Python está "
"obsoleto en Python 3.12; utilice en su lugar el parámetro *onexc*."

#: ../../deprecations/pending-removal-in-future.rst:89
msgid ":mod:`ssl` options and protocols:"
msgstr ":mod:`ssl` opciones y protocolos:"

#: ../../deprecations/pending-removal-in-future.rst:91
msgid ":class:`ssl.SSLContext` without protocol argument is deprecated."
msgstr ":class:`ssl.SSLContext` sin argumento de protocolo está obsoleto."

#: ../../deprecations/pending-removal-in-future.rst:92
msgid ""
":class:`ssl.SSLContext`: :meth:`~ssl.SSLContext.set_npn_protocols` and "
":meth:`!selected_npn_protocol` are deprecated: use ALPN instead."
msgstr ""
":class:`ssl.SSLContext`: :meth:`~ssl.SSLContext.set_npn_protocols` y "
":meth:`!selected_npn_protocol` están obsoletos: utilice ALPN en su lugar."

#: ../../deprecations/pending-removal-in-future.rst:95
msgid "``ssl.OP_NO_SSL*`` options"
msgstr "``ssl.OP_NO_SSL*`` opciones"

#: ../../deprecations/pending-removal-in-future.rst:96
msgid "``ssl.OP_NO_TLS*`` options"
msgstr "``ssl.OP_NO_TLS*`` opciones"

#: ../../deprecations/pending-removal-in-future.rst:97
msgid "``ssl.PROTOCOL_SSLv3``"
msgstr "``ssl.PROTOCOL_SSLv3``"

#: ../../deprecations/pending-removal-in-future.rst:98
msgid "``ssl.PROTOCOL_TLS``"
msgstr "``ssl.PROTOCOL_TLS``"

#: ../../deprecations/pending-removal-in-future.rst:99
msgid "``ssl.PROTOCOL_TLSv1``"
msgstr "``ssl.PROTOCOL_TLSv1``"

#: ../../deprecations/pending-removal-in-future.rst:100
msgid "``ssl.PROTOCOL_TLSv1_1``"
msgstr "``ssl.PROTOCOL_TLSv1_1``"

#: ../../deprecations/pending-removal-in-future.rst:101
msgid "``ssl.PROTOCOL_TLSv1_2``"
msgstr "``ssl.PROTOCOL_TLSv1_2``"

#: ../../deprecations/pending-removal-in-future.rst:102
msgid "``ssl.TLSVersion.SSLv3``"
msgstr "``ssl.TLSVersion.SSLv3``"

#: ../../deprecations/pending-removal-in-future.rst:103
msgid "``ssl.TLSVersion.TLSv1``"
msgstr "``ssl.TLSVersion.TLSv1``"

#: ../../deprecations/pending-removal-in-future.rst:104
msgid "``ssl.TLSVersion.TLSv1_1``"
msgstr "``ssl.TLSVersion.TLSv1_1``"

#: ../../deprecations/pending-removal-in-future.rst:106
msgid ":mod:`threading` methods:"
msgstr ":mod:`threading` métodos:"

#: ../../deprecations/pending-removal-in-future.rst:108
msgid ""
":meth:`!threading.Condition.notifyAll`: use "
":meth:`~threading.Condition.notify_all`."
msgstr ""
":meth:`!threading.Condition.notifyAll`: use "
":meth:`~threading.Condition.notify_all`."

#: ../../deprecations/pending-removal-in-future.rst:109
msgid ":meth:`!threading.Event.isSet`: use :meth:`~threading.Event.is_set`."
msgstr ":meth:`!threading.Event.isSet`: use :meth:`~threading.Event.is_set`."

#: ../../deprecations/pending-removal-in-future.rst:110
msgid ""
":meth:`!threading.Thread.isDaemon`, :meth:`threading.Thread.setDaemon`: use "
":attr:`threading.Thread.daemon` attribute."
msgstr ""
":meth:`!threading.Thread.isDaemon`, :meth:`threading.Thread.setDaemon`: "
"utiliza el atributo :attr:`threading.Thread.daemon`."

#: ../../deprecations/pending-removal-in-future.rst:112
msgid ""
":meth:`!threading.Thread.getName`, :meth:`threading.Thread.setName`: use "
":attr:`threading.Thread.name` attribute."
msgstr ""
":meth:`!threading.Thread.getName`, :meth:`threading.Thread.setName`: utiliza"
" el atributo :attr:`threading.Thread.name`."

#: ../../deprecations/pending-removal-in-future.rst:114
msgid ""
":meth:`!threading.currentThread`: use :meth:`threading.current_thread`."
msgstr ""
":meth:`!threading.currentThread`: use :meth:`threading.current_thread`."

#: ../../deprecations/pending-removal-in-future.rst:115
msgid ":meth:`!threading.activeCount`: use :meth:`threading.active_count`."
msgstr ":meth:`!threading.activeCount`: use :meth:`threading.active_count`."

#: ../../deprecations/pending-removal-in-future.rst:117
msgid ":class:`typing.Text` (:gh:`92332`)."
msgstr ":class:`typing.Text` (:gh:`92332`)."

#: ../../deprecations/pending-removal-in-future.rst:119
msgid ""
":class:`unittest.IsolatedAsyncioTestCase`: it is deprecated to return a "
"value that is not ``None`` from a test case."
msgstr ""
":class:`unittest.IsolatedAsyncioTestCase`es obsoleto devolver un valor que "
"no sea ``None`` desde un caso de prueba."

#: ../../deprecations/pending-removal-in-future.rst:122
msgid ""
":mod:`urllib.parse` deprecated functions: :func:`~urllib.parse.urlparse` "
"instead"
msgstr ""
":mod:`urllib.parse` funciones obsoletas: :func:`~urllib.parse.urlparse` en "
"su lugar"

#: ../../deprecations/pending-removal-in-future.rst:124
msgid "``splitattr()``"
msgstr "``splitattr()``"

#: ../../deprecations/pending-removal-in-future.rst:125
msgid "``splithost()``"
msgstr "``splithost()``"

#: ../../deprecations/pending-removal-in-future.rst:126
msgid "``splitnport()``"
msgstr "``splitnport()``"

#: ../../deprecations/pending-removal-in-future.rst:127
msgid "``splitpasswd()``"
msgstr "``splitpasswd()``"

#: ../../deprecations/pending-removal-in-future.rst:128
msgid "``splitport()``"
msgstr "``splitport()``"

#: ../../deprecations/pending-removal-in-future.rst:129
msgid "``splitquery()``"
msgstr "``splitquery()``"

#: ../../deprecations/pending-removal-in-future.rst:130
msgid "``splittag()``"
msgstr "``splittag()``"

#: ../../deprecations/pending-removal-in-future.rst:131
msgid "``splittype()``"
msgstr "``splittype()``"

#: ../../deprecations/pending-removal-in-future.rst:132
msgid "``splituser()``"
msgstr "``splituser()``"

#: ../../deprecations/pending-removal-in-future.rst:133
msgid "``splitvalue()``"
msgstr "``splitvalue()``"

#: ../../deprecations/pending-removal-in-future.rst:134
msgid "``to_bytes()``"
msgstr "``to_bytes()``"

#: ../../deprecations/pending-removal-in-future.rst:136
msgid ""
":mod:`urllib.request`: :class:`~urllib.request.URLopener` and "
":class:`~urllib.request.FancyURLopener` style of invoking requests is "
"deprecated. Use newer :func:`~urllib.request.urlopen` functions and methods."
msgstr ""
":mod:`urllib.request`El estilo :class:`~urllib.request.URLopener` y "
":class:`~urllib.request.FancyURLopener` de invocar peticiones está obsoleto."
" Utilice funciones y métodos más recientes de "
":func:`~urllib.request.urlopen`."

#: ../../deprecations/pending-removal-in-future.rst:140
msgid ""
":mod:`wsgiref`: ``SimpleHandler.stdout.write()`` should not do partial "
"writes."
msgstr ""
":mod:`wsgiref`: ``SimpleHandler.stdout.write()`` no debe realizar escrituras"
" parciales."

#: ../../deprecations/pending-removal-in-future.rst:143
msgid ""
":mod:`xml.etree.ElementTree`: Testing the truth value of an "
":class:`~xml.etree.ElementTree.Element` is deprecated. In a future release "
"it will always return ``True``. Prefer explicit ``len(elem)`` or ``elem is "
"not None`` tests instead."
msgstr ""
":mod:`xml.etree.ElementTree`: Probar el valor verdadero de "
":class:`~xml.etree.ElementTree.Element` está obsoleto. En una futura versión"
" siempre devolverá ``True``. Prefiera pruebas explícitas de ``len(elem)`` o "
"``elem is not None`` en su lugar."

#: ../../deprecations/pending-removal-in-future.rst:148
msgid ""
":meth:`zipimport.zipimporter.load_module` is deprecated: use "
":meth:`~zipimport.zipimporter.exec_module` instead."
msgstr ""
":meth:`zipimport.zipimporter.load_module` está obsoleto: utilice "
":meth:`~zipimport.zipimporter.exec_module` en su lugar."

#: ../../deprecations/index.rst:15
msgid "C API Deprecations"
msgstr "C API Deprecations"

#: ../../deprecations/c-api-pending-removal-in-3.14.rst:4
msgid ""
"The ``ma_version_tag`` field in :c:type:`PyDictObject` for extension modules"
" (:pep:`699`; :gh:`101193`)."
msgstr ""
"El campo ``ma_version_tag`` en :c:type:`PyDictObject` para módulos de "
"ampliación (:pep:`699`; :gh:`101193`)."

#: ../../deprecations/c-api-pending-removal-in-3.14.rst:7
msgid ""
"Creating :c:data:`immutable types <Py_TPFLAGS_IMMUTABLETYPE>` with mutable "
"bases (:gh:`95388`)."
msgstr ""
"Creación de :c:data:`immutable types <Py_TPFLAGS_IMMUTABLETYPE>` con bases "
"mutables (:gh:`95388`)."

#: ../../deprecations/c-api-pending-removal-in-3.14.rst:10
msgid ""
"Functions to configure Python's initialization, deprecated in Python 3.11:"
msgstr ""
"Funciones para configurar la inicialización de Python, obsoletas en Python "
"3.11:"

#: ../../deprecations/c-api-pending-removal-in-3.14.rst:12
msgid ":c:func:`!PySys_SetArgvEx()`: Set :c:member:`PyConfig.argv` instead."
msgstr ""
":c:func:`!PySys_SetArgvEx()`: Establece :c:member:`PyConfig.argv` en su "
"lugar."

#: ../../deprecations/c-api-pending-removal-in-3.14.rst:14
msgid ":c:func:`!PySys_SetArgv()`: Set :c:member:`PyConfig.argv` instead."
msgstr ""
":c:func:`!PySys_SetArgv()`: Establece :c:member:`PyConfig.argv` en su lugar."

#: ../../deprecations/c-api-pending-removal-in-3.14.rst:16
msgid ""
":c:func:`!Py_SetProgramName()`: Set :c:member:`PyConfig.program_name` "
"instead."
msgstr ""
":c:func:`!Py_SetProgramName()`: Establece :c:member:`PyConfig.program_name` "
"en su lugar."

#: ../../deprecations/c-api-pending-removal-in-3.14.rst:18
msgid ":c:func:`!Py_SetPythonHome()`: Set :c:member:`PyConfig.home` instead."
msgstr ""
":c:func:`!Py_SetPythonHome()`: Establece :c:member:`PyConfig.home` en su "
"lugar."

#: ../../deprecations/c-api-pending-removal-in-3.14.rst:21
#: ../../deprecations/c-api-pending-removal-in-3.14.rst:71
msgid ""
"The :c:func:`Py_InitializeFromConfig` API should be used with "
":c:type:`PyConfig` instead."
msgstr ""
"La API :c:func:`Py_InitializeFromConfig` debe utilizarse en su lugar con "
":c:type:`PyConfig`."

#: ../../deprecations/c-api-pending-removal-in-3.14.rst:24
msgid "Global configuration variables:"
msgstr "Variables de configuración global:"

#: ../../deprecations/c-api-pending-removal-in-3.14.rst:26
msgid ":c:var:`Py_DebugFlag`: Use :c:member:`PyConfig.parser_debug` instead."
msgstr ""
":c:var:`Py_DebugFlag`: Utilice :c:member:`PyConfig.parser_debug` en su "
"lugar."

#: ../../deprecations/c-api-pending-removal-in-3.14.rst:28
msgid ":c:var:`Py_VerboseFlag`: Use :c:member:`PyConfig.verbose` instead."
msgstr ""
":c:var:`Py_VerboseFlag`: Utilice :c:member:`PyConfig.verbose` en su lugar."

#: ../../deprecations/c-api-pending-removal-in-3.14.rst:30
msgid ":c:var:`Py_QuietFlag`: Use :c:member:`PyConfig.quiet` instead."
msgstr ""
":c:var:`Py_QuietFlag`: Utilice :c:member:`PyConfig.quiet` en su lugar."

#: ../../deprecations/c-api-pending-removal-in-3.14.rst:32
msgid ""
":c:var:`Py_InteractiveFlag`: Use :c:member:`PyConfig.interactive` instead."
msgstr ""
":c:var:`Py_InteractiveFlag`: Utilice :c:member:`PyConfig.interactive` en su "
"lugar."

#: ../../deprecations/c-api-pending-removal-in-3.14.rst:34
msgid ":c:var:`Py_InspectFlag`: Use :c:member:`PyConfig.inspect` instead."
msgstr ""
":c:var:`Py_InspectFlag`: Utilice :c:member:`PyConfig.inspect` en su lugar."

#: ../../deprecations/c-api-pending-removal-in-3.14.rst:36
msgid ""
":c:var:`Py_OptimizeFlag`: Use :c:member:`PyConfig.optimization_level` "
"instead."
msgstr ""
":c:var:`Py_OptimizeFlag`: Utilice :c:member:`PyConfig.optimization_level` en"
" su lugar."

#: ../../deprecations/c-api-pending-removal-in-3.14.rst:38
msgid ":c:var:`Py_NoSiteFlag`: Use :c:member:`PyConfig.site_import` instead."
msgstr ""
":c:var:`Py_NoSiteFlag`: Utilice :c:member:`PyConfig.site_import` en su "
"lugar."

#: ../../deprecations/c-api-pending-removal-in-3.14.rst:40
msgid ""
":c:var:`Py_BytesWarningFlag`: Use :c:member:`PyConfig.bytes_warning` "
"instead."
msgstr ""
":c:var:`Py_BytesWarningFlag`: Utilice :c:member:`PyConfig.bytes_warning` en "
"su lugar."

#: ../../deprecations/c-api-pending-removal-in-3.14.rst:42
msgid ""
":c:var:`Py_FrozenFlag`: Use :c:member:`PyConfig.pathconfig_warnings` "
"instead."
msgstr ""
":c:var:`Py_FrozenFlag`: Utilice :c:member:`PyConfig.pathconfig_warnings` en "
"su lugar."

#: ../../deprecations/c-api-pending-removal-in-3.14.rst:44
msgid ""
":c:var:`Py_IgnoreEnvironmentFlag`: Use :c:member:`PyConfig.use_environment` "
"instead."
msgstr ""
":c:var:`Py_IgnoreEnvironmentFlag`: Utilice "
":c:member:`PyConfig.use_environment` en su lugar."

#: ../../deprecations/c-api-pending-removal-in-3.14.rst:46
msgid ""
":c:var:`Py_DontWriteBytecodeFlag`: Use :c:member:`PyConfig.write_bytecode` "
"instead."
msgstr ""
":c:var:`Py_DontWriteBytecodeFlag`: Utilice "
":c:member:`PyConfig.write_bytecode` en su lugar."

#: ../../deprecations/c-api-pending-removal-in-3.14.rst:48
msgid ""
":c:var:`Py_NoUserSiteDirectory`: Use "
":c:member:`PyConfig.user_site_directory` instead."
msgstr ""
":c:var:`Py_NoUserSiteDirectory`: Utilice "
":c:member:`PyConfig.user_site_directory` en su lugar."

#: ../../deprecations/c-api-pending-removal-in-3.14.rst:50
msgid ""
":c:var:`Py_UnbufferedStdioFlag`: Use :c:member:`PyConfig.buffered_stdio` "
"instead."
msgstr ""
":c:var:`Py_UnbufferedStdioFlag`: Utilice :c:member:`PyConfig.buffered_stdio`"
" en su lugar."

#: ../../deprecations/c-api-pending-removal-in-3.14.rst:52
msgid ""
":c:var:`Py_HashRandomizationFlag`: Use :c:member:`PyConfig.use_hash_seed` "
"and :c:member:`PyConfig.hash_seed` instead."
msgstr ""
":c:var:`Py_HashRandomizationFlag`: Utilice "
":c:member:`PyConfig.use_hash_seed` y :c:member:`PyConfig.hash_seed` en su "
"lugar."

#: ../../deprecations/c-api-pending-removal-in-3.14.rst:55
msgid ":c:var:`Py_IsolatedFlag`: Use :c:member:`PyConfig.isolated` instead."
msgstr ""
":c:var:`Py_IsolatedFlag`: Utilice :c:member:`PyConfig.isolated` en su lugar."

#: ../../deprecations/c-api-pending-removal-in-3.14.rst:57
msgid ""
":c:var:`Py_LegacyWindowsFSEncodingFlag`: Use "
":c:member:`PyPreConfig.legacy_windows_fs_encoding` instead."
msgstr ""
":c:var:`Py_LegacyWindowsFSEncodingFlag`: Utilice "
":c:member:`PyPreConfig.legacy_windows_fs_encoding` en su lugar."

#: ../../deprecations/c-api-pending-removal-in-3.14.rst:59
msgid ""
":c:var:`Py_LegacyWindowsStdioFlag`: Use "
":c:member:`PyConfig.legacy_windows_stdio` instead."
msgstr ""
":c:var:`Py_LegacyWindowsStdioFlag`: Utilice "
":c:member:`PyConfig.legacy_windows_stdio` en su lugar."

#: ../../deprecations/c-api-pending-removal-in-3.14.rst:61
msgid ""
":c:var:`!Py_FileSystemDefaultEncoding`: Use "
":c:member:`PyConfig.filesystem_encoding` instead."
msgstr ""
":c:var:`!Py_FileSystemDefaultEncoding`: Utilice "
":c:member:`PyConfig.filesystem_encoding` en su lugar."

#: ../../deprecations/c-api-pending-removal-in-3.14.rst:63
msgid ""
":c:var:`!Py_HasFileSystemDefaultEncoding`: Use "
":c:member:`PyConfig.filesystem_encoding` instead."
msgstr ""
":c:var:`!Py_HasFileSystemDefaultEncoding`: Utilice "
":c:member:`PyConfig.filesystem_encoding` en su lugar."

#: ../../deprecations/c-api-pending-removal-in-3.14.rst:65
msgid ""
":c:var:`!Py_FileSystemDefaultEncodeErrors`: Use "
":c:member:`PyConfig.filesystem_errors` instead."
msgstr ""
":c:var:`!Py_FileSystemDefaultEncodeErrors`: Utilice "
":c:member:`PyConfig.filesystem_errors` en su lugar."

#: ../../deprecations/c-api-pending-removal-in-3.14.rst:67
msgid ""
":c:var:`!Py_UTF8Mode`: Use :c:member:`PyPreConfig.utf8_mode` instead. (see "
":c:func:`Py_PreInitialize`)"
msgstr ""
":c:var:`!Py_UTF8Mode`: Utilice :c:member:`PyPreConfig.utf8_mode` en su "
"lugar. (véase :c:func:`Py_PreInitialize`)"

#: ../../deprecations/c-api-pending-removal-in-3.15.rst:4
msgid ""
"The :c:func:`PyImport_ImportModuleNoBlock`: Use "
":c:func:`PyImport_ImportModule` instead."
msgstr ""
"El :c:func:`PyImport_ImportModuleNoBlock`: Utilice "
":c:func:`PyImport_ImportModule` en su lugar."

#: ../../deprecations/c-api-pending-removal-in-3.15.rst:6
msgid ""
":c:func:`PyWeakref_GetObject` and :c:func:`PyWeakref_GET_OBJECT`: Use "
":c:func:`PyWeakref_GetRef` instead."
msgstr ""

#: ../../deprecations/c-api-pending-removal-in-3.15.rst:8
msgid ""
":c:type:`Py_UNICODE` type and the :c:macro:`!Py_UNICODE_WIDE` macro: Use "
":c:type:`wchar_t` instead."
msgstr ""
":c:type:`Py_UNICODE` y la macro :c:macro:`!Py_UNICODE_WIDE`: Utilice "
":c:type:`wchar_t` en su lugar."

#: ../../deprecations/c-api-pending-removal-in-3.15.rst:10
msgid "Python initialization functions:"
msgstr "Funciones de inicialización de Python:"

#: ../../deprecations/c-api-pending-removal-in-3.15.rst:12
msgid ""
":c:func:`PySys_ResetWarnOptions`: Clear :data:`sys.warnoptions` and "
":data:`!warnings.filters` instead."
msgstr ""
":c:func:`PySys_ResetWarnOptions`: Borrar :data:`sys.warnoptions` y "
":data:`!warnings.filters` en su lugar."

#: ../../deprecations/c-api-pending-removal-in-3.15.rst:14
msgid ""
":c:func:`Py_GetExecPrefix`: Get :data:`sys.base_exec_prefix` and "
":data:`sys.exec_prefix` instead."
msgstr ""

#: ../../deprecations/c-api-pending-removal-in-3.15.rst:16
msgid ":c:func:`Py_GetPath`: Get :data:`sys.path` instead."
msgstr ":c:func:`Py_GetPath`: Consigue :data:`sys.path` en su lugar."

#: ../../deprecations/c-api-pending-removal-in-3.15.rst:18
msgid ""
":c:func:`Py_GetPrefix`: Get :data:`sys.base_prefix` and :data:`sys.prefix` "
"instead."
msgstr ""

#: ../../deprecations/c-api-pending-removal-in-3.15.rst:20
msgid ":c:func:`Py_GetProgramFullPath`: Get :data:`sys.executable` instead."
msgstr ""
":c:func:`Py_GetProgramFullPath`: Consigue :data:`sys.executable` en su "
"lugar."

#: ../../deprecations/c-api-pending-removal-in-3.15.rst:22
msgid ":c:func:`Py_GetProgramName`: Get :data:`sys.executable` instead."
msgstr ""
":c:func:`Py_GetProgramName`: Consigue :data:`sys.executable` en su lugar."

#: ../../deprecations/c-api-pending-removal-in-3.15.rst:24
msgid ""
":c:func:`Py_GetPythonHome`: Get :c:member:`PyConfig.home` or the "
":envvar:`PYTHONHOME` environment variable instead."
msgstr ""
":c:func:`Py_GetPythonHome`: Obtenga :c:member:`PyConfig.home` o la variable "
"de entorno :envvar:`PYTHONHOME` en su lugar."

#: ../../deprecations/c-api-pending-removal-in-future.rst:4
msgid ""
"The following APIs are deprecated and will be removed, although there is "
"currently no date scheduled for their removal."
msgstr ""
"Las siguientes API están obsoletas y se eliminarán, aunque actualmente no "
"hay fecha prevista para su retirada."

#: ../../deprecations/c-api-pending-removal-in-future.rst:7
msgid ":c:macro:`Py_TPFLAGS_HAVE_FINALIZE`: Unneeded since Python 3.8."
msgstr ":c:macro:`Py_TPFLAGS_HAVE_FINALIZE`: Innecesario desde Python 3.8."

#: ../../deprecations/c-api-pending-removal-in-future.rst:9
msgid ":c:func:`PyErr_Fetch`: Use :c:func:`PyErr_GetRaisedException` instead."
msgstr ""
":c:func:`PyErr_Fetch`: Usar en su lugar :c:func:`PyErr_GetRaisedException`."

#: ../../deprecations/c-api-pending-removal-in-future.rst:11
msgid ""
":c:func:`PyErr_NormalizeException`: Use :c:func:`PyErr_GetRaisedException` "
"instead."
msgstr ""
":c:func:`PyErr_NormalizeException`: Usar en su lugar "
":c:func:`PyErr_GetRaisedException`."

#: ../../deprecations/c-api-pending-removal-in-future.rst:13
msgid ""
":c:func:`PyErr_Restore`: Use :c:func:`PyErr_SetRaisedException` instead."
msgstr ""
":c:func:`PyErr_Restore`: Usar en su lugar "
":c:func:`PyErr_SetRaisedException`."

#: ../../deprecations/c-api-pending-removal-in-future.rst:15
msgid ""
":c:func:`PyModule_GetFilename`: Use :c:func:`PyModule_GetFilenameObject` "
"instead."
msgstr ""
":c:func:`PyModule_GetFilename`: Usar en su lugar "
":c:func:`PyModule_GetFilenameObject`."

#: ../../deprecations/c-api-pending-removal-in-future.rst:17
msgid ":c:func:`PyOS_AfterFork`: Use :c:func:`PyOS_AfterFork_Child` instead."
msgstr ""
":c:func:`PyOS_AfterFork`: Usar en su lugar :c:func:`PyOS_AfterFork_Child`."

#: ../../deprecations/c-api-pending-removal-in-future.rst:19
msgid ""
":c:func:`PySlice_GetIndicesEx`: Use :c:func:`PySlice_Unpack` and "
":c:func:`PySlice_AdjustIndices` instead."
msgstr ""
":c:func:`PySlice_GetIndicesEx`: Usar en su lugar :c:func:`PySlice_Unpack` y "
":c:func:`PySlice_AdjustIndices`."

#: ../../deprecations/c-api-pending-removal-in-future.rst:21
msgid ""
":c:func:`!PyUnicode_AsDecodedObject`: Use :c:func:`PyCodec_Decode` instead."
msgstr ""
":c:func:`!PyUnicode_AsDecodedObject`: Use :c:func:`PyCodec_Decode` instead."

#: ../../deprecations/c-api-pending-removal-in-future.rst:23
msgid ""
":c:func:`!PyUnicode_AsDecodedUnicode`: Use :c:func:`PyCodec_Decode` instead."
msgstr ""
":c:func:`!PyUnicode_AsDecodedUnicode`: Use :c:func:`PyCodec_Decode` instead."

#: ../../deprecations/c-api-pending-removal-in-future.rst:25
msgid ""
":c:func:`!PyUnicode_AsEncodedObject`: Use :c:func:`PyCodec_Encode` instead."
msgstr ""
":c:func:`!PyUnicode_AsEncodedObject`: Utilice :c:func:`PyCodec_Encode` en su"
" lugar."

#: ../../deprecations/c-api-pending-removal-in-future.rst:27
msgid ""
":c:func:`!PyUnicode_AsEncodedUnicode`: Use :c:func:`PyCodec_Encode` instead."
msgstr ""
":c:func:`!PyUnicode_AsEncodedUnicode`: Utilice :c:func:`PyCodec_Encode` en "
"su lugar."

#: ../../deprecations/c-api-pending-removal-in-future.rst:29
msgid ":c:func:`PyUnicode_READY`: Unneeded since Python 3.12"
msgstr ":c:func:`PyUnicode_READY`: Innecesario desde Python 3.12"

#: ../../deprecations/c-api-pending-removal-in-future.rst:31
msgid ""
":c:func:`!PyErr_Display`: Use :c:func:`PyErr_DisplayException` instead."
msgstr ""
":c:func:`!PyErr_Display`: Utilice :c:func:`PyErr_DisplayException` en su "
"lugar."

#: ../../deprecations/c-api-pending-removal-in-future.rst:33
msgid ""
":c:func:`!_PyErr_ChainExceptions`: Use :c:func:`!_PyErr_ChainExceptions1` "
"instead."
msgstr ""
":c:func:`!_PyErr_ChainExceptions`: Utilice "
":c:func:`!_PyErr_ChainExceptions1` en su lugar."

#: ../../deprecations/c-api-pending-removal-in-future.rst:35
msgid ""
":c:member:`!PyBytesObject.ob_shash` member: call :c:func:`PyObject_Hash` "
"instead."
msgstr ""
"miembro :c:member:`!PyBytesObject.ob_shash`: llame a :c:func:`PyObject_Hash`"
" en su lugar."

#: ../../deprecations/c-api-pending-removal-in-future.rst:37
msgid ":c:member:`!PyDictObject.ma_version_tag` member."
msgstr "miembro :c:member:`!PyDictObject.ma_version_tag`."

#: ../../deprecations/c-api-pending-removal-in-future.rst:38
msgid "Thread Local Storage (TLS) API:"
msgstr "Thread Local Storage (TLS) API:"

#: ../../deprecations/c-api-pending-removal-in-future.rst:40
msgid ""
":c:func:`PyThread_create_key`: Use :c:func:`PyThread_tss_alloc` instead."
msgstr ""
":c:func:`PyThread_create_key`: Utilice :c:func:`PyThread_tss_alloc` en su "
"lugar."

#: ../../deprecations/c-api-pending-removal-in-future.rst:42
msgid ""
":c:func:`PyThread_delete_key`: Use :c:func:`PyThread_tss_free` instead."
msgstr ""
":c:func:`PyThread_delete_key`: Utilice :c:func:`PyThread_tss_free` en su "
"lugar."

#: ../../deprecations/c-api-pending-removal-in-future.rst:44
msgid ""
":c:func:`PyThread_set_key_value`: Use :c:func:`PyThread_tss_set` instead."
msgstr ""
":c:func:`PyThread_set_key_value`: Utilice :c:func:`PyThread_tss_set` en su "
"lugar."

#: ../../deprecations/c-api-pending-removal-in-future.rst:46
msgid ""
":c:func:`PyThread_get_key_value`: Use :c:func:`PyThread_tss_get` instead."
msgstr ""
":c:func:`PyThread_get_key_value`: Utilice :c:func:`PyThread_tss_get` en su "
"lugar."

#: ../../deprecations/c-api-pending-removal-in-future.rst:48
msgid ""
":c:func:`PyThread_delete_key_value`: Use :c:func:`PyThread_tss_delete` "
"instead."
msgstr ""
":c:func:`PyThread_delete_key_value`: Utilice :c:func:`PyThread_tss_delete` "
"en su lugar."

#: ../../deprecations/c-api-pending-removal-in-future.rst:50
msgid ":c:func:`PyThread_ReInitTLS`: Unneeded since Python 3.7."
msgstr ":c:func:`PyThread_ReInitTLS`: Innecesario desde Python 3.7."
