# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# python-doc bot, 2025
# Rafael Fontenelle <rffontenelle@gmail.com>, 2025
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.13\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-23 14:56+0000\n"
"PO-Revision-Date: 2025-09-15 01:03+0000\n"
"Last-Translator: Rafael Fontenelle <rffontenelle@gmail.com>, 2025\n"
"Language-Team: Spanish (Spain) (https://app.transifex.com/python-doc/teams/"
"5390/es_ES/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: es_ES\n"
"Plural-Forms: nplurals=3; plural=n == 1 ? 0 : n != 0 && n % 1000000 == 0 ? "
"1 : 2;\n"

#: ../../library/binascii.rst:2
msgid ":mod:`!binascii` --- Convert between binary and ASCII"
msgstr ""

#: ../../library/binascii.rst:13
msgid ""
"The :mod:`binascii` module contains a number of methods to convert between "
"binary and various ASCII-encoded binary representations. Normally, you will "
"not use these functions directly but use wrapper modules like :mod:`base64` "
"instead. The :mod:`binascii` module contains low-level functions written in "
"C for greater speed that are used by the higher-level modules."
msgstr ""

#: ../../library/binascii.rst:22
msgid ""
"``a2b_*`` functions accept Unicode strings containing only ASCII characters. "
"Other functions only accept :term:`bytes-like objects <bytes-like object>` "
"(such as :class:`bytes`, :class:`bytearray` and other objects that support "
"the buffer protocol)."
msgstr ""
"``a2b_*`` aceptan cadenas Unicode que sólo contengan caracteres ASCII. Otras "
"funciones sólo aceptan objetos tipo :term:`bytes <bytes-like object>` "
"(como :class:`bytes`, :class:`bytearray` y otros objetos que admiten el "
"protocolo de búfer)."

#: ../../library/binascii.rst:27
msgid "ASCII-only unicode strings are now accepted by the ``a2b_*`` functions."
msgstr ""
"Las cadenas unicode sólo ASCII son ahora aceptadas por las funciones "
"``a2b_*``."

#: ../../library/binascii.rst:31
msgid "The :mod:`binascii` module defines the following functions:"
msgstr "El módulo :mod:`binascii` define las siguientes funciones:"

#: ../../library/binascii.rst:36
msgid ""
"Convert a single line of uuencoded data back to binary and return the binary "
"data. Lines normally contain 45 (binary) bytes, except for the last line. "
"Line data may be followed by whitespace."
msgstr ""
"Convierte una sola línea de datos uuencodificados a binarios y devuelve los "
"datos binarios. Las líneas contienen normalmente 45 bytes (binarios), "
"excepto la última línea. Los datos de línea pueden ir seguidos de espacios "
"en blanco."

#: ../../library/binascii.rst:43
msgid ""
"Convert binary data to a line of ASCII characters, the return value is the "
"converted line, including a newline char. The length of *data* should be at "
"most 45. If *backtick* is true, zeros are represented by ``'`'`` instead of "
"spaces."
msgstr ""
"Convierte datos binarios a una línea de caracteres ASCII, el valor de "
"retorno es la línea convertida, incluyendo un carácter de nueva línea. La "
"longitud de *data* debe ser como máximo 45. Si *backtick* es verdadero, los "
"ceros se representan mediante ``'`'`` en lugar de espacios."

#: ../../library/binascii.rst:47
msgid "Added the *backtick* parameter."
msgstr "Añadido el parámetro *backtick*."

#: ../../library/binascii.rst:53
msgid ""
"Convert a block of base64 data back to binary and return the binary data. "
"More than one line may be passed at a time."
msgstr ""
"Convierte un bloque de datos base64 a binario y devuelve los datos binarios. "
"Se puede pasar más de una línea a la vez."

#: ../../library/binascii.rst:56
msgid ""
"If *strict_mode* is true, only valid base64 data will be converted. Invalid "
"base64 data will raise :exc:`binascii.Error`."
msgstr ""

#: ../../library/binascii.rst:59
msgid "Valid base64:"
msgstr ""

#: ../../library/binascii.rst:61
msgid "Conforms to :rfc:`3548`."
msgstr ""

#: ../../library/binascii.rst:62
msgid "Contains only characters from the base64 alphabet."
msgstr ""

#: ../../library/binascii.rst:63
msgid ""
"Contains no excess data after padding (including excess padding, newlines, "
"etc.)."
msgstr ""

#: ../../library/binascii.rst:64
msgid "Does not start with a padding."
msgstr ""

#: ../../library/binascii.rst:66
msgid "Added the *strict_mode* parameter."
msgstr ""

#: ../../library/binascii.rst:72
msgid ""
"Convert binary data to a line of ASCII characters in base64 coding. The "
"return value is the converted line, including a newline char if *newline* is "
"true.  The output of this function conforms to :rfc:`3548`."
msgstr ""
"Convierte datos binarios a una línea de caracteres ASCII en codificación "
"base64. El valor devuelto es la línea convertida, incluyendo un carácter de "
"nueva línea si *newline* es verdadero.  La salida de esta función se ajusta "
"a :rfc:`3548`."

#: ../../library/binascii.rst:76
msgid "Added the *newline* parameter."
msgstr "Añadido el parámetro *newline*."

#: ../../library/binascii.rst:82
msgid ""
"Convert a block of quoted-printable data back to binary and return the "
"binary data. More than one line may be passed at a time. If the optional "
"argument *header* is present and true, underscores will be decoded as spaces."
msgstr ""
"Convierte un bloque de datos imprimibles entre comillas a binarios y "
"devuelve los datos binarios. Se puede pasar más de una línea a la vez. Si el "
"argumento opcional *header* está presente y es verdadero, los guiones bajos "
"se decodificarán como espacios."

#: ../../library/binascii.rst:89
msgid ""
"Convert binary data to a line(s) of ASCII characters in quoted-printable "
"encoding.  The return value is the converted line(s). If the optional "
"argument *quotetabs* is present and true, all tabs and spaces will be "
"encoded.   If the optional argument *istext* is present and true, newlines "
"are not encoded but trailing whitespace will be encoded. If the optional "
"argument *header* is present and true, spaces will be encoded as underscores "
"per :rfc:`1522`. If the optional argument *header* is present and false, "
"newline characters will be encoded as well; otherwise linefeed conversion "
"might corrupt the binary data stream."
msgstr ""
"Convierte datos binarios en línea(s) de caracteres ASCII en codificación "
"imprimible entre comillas.  El valor devuelto es la-s línea(s) convertida-s. "
"Si el argumento opcional *quotetabs* está presente y es verdadero, se "
"codificarán todos los tabuladores y espacios.   Si el argumento opcional "
"*istext* está presente y es verdadero, las nuevas líneas no se codifican, "
"pero sí los espacios en blanco finales. Si el argumento opcional *header* "
"está presente y es verdadero, los espacios se codificarán como guiones bajos "
"según :rfc:`1522`. Si el argumento opcional *header* está presente y es "
"falso, los caracteres de nueva línea también se codificarán; de lo "
"contrario, la conversión del salto de línea podría corromper el flujo de "
"datos binarios."

#: ../../library/binascii.rst:102
msgid ""
"Compute a 16-bit CRC value of *data*, starting with *value* as the initial "
"CRC, and return the result.  This uses the CRC-CCITT polynomial *x*:sup:`16` "
"+ *x*:sup:`12` + *x*:sup:`5` + 1, often represented as 0x1021.  This CRC is "
"used in the binhex4 format."
msgstr ""
"Calcula un valor CRC de 16 bits de *datos*, comenzando con *valor* como CRC "
"inicial, y devuelve el resultado.  Esto utiliza el polinomio CRC-CCITT "
"*x*:sup:`16` + *x*:sup:`12` + *x*:sup:`5` + 1, a menudo representado como "
"0x1021.  Este CRC se utiliza en el formato binhex4."

#: ../../library/binascii.rst:110
msgid ""
"Compute CRC-32, the unsigned 32-bit checksum of *data*, starting with an "
"initial CRC of *value*.  The default initial CRC is zero.  The algorithm is "
"consistent with the ZIP file checksum.  Since the algorithm is designed for "
"use as a checksum algorithm, it is not suitable for use as a general hash "
"algorithm.  Use as follows::"
msgstr ""
"Calcula CRC-32, la suma de comprobación de 32 bits sin signo de *datos*, "
"comenzando con un CRC inicial de *valor*.  El CRC inicial por defecto es "
"cero.  El algoritmo es consistente con la suma de comprobación de archivos "
"ZIP.  Dado que el algoritmo está diseñado para su uso como algoritmo de suma "
"de comprobación, no es adecuado para su uso como algoritmo hash general.  "
"Utilícelo de la siguiente manera::"

#: ../../library/binascii.rst:116
msgid ""
"print(binascii.crc32(b\"hello world\"))\n"
"# Or, in two pieces:\n"
"crc = binascii.crc32(b\"hello\")\n"
"crc = binascii.crc32(b\" world\", crc)\n"
"print('crc32 = {:#010x}'.format(crc))"
msgstr ""

#: ../../library/binascii.rst:122
msgid "The result is always unsigned."
msgstr ""

#: ../../library/binascii.rst:128
msgid ""
"Return the hexadecimal representation of the binary *data*.  Every byte of "
"*data* is converted into the corresponding 2-digit hex representation.  The "
"returned bytes object is therefore twice as long as the length of *data*."
msgstr ""
"Devuelve la representación hexadecimal de los *data* binarios.  Cada byte de "
"*data* se convierte en su correspondiente representación hexadecimal de 2 "
"dígitos.  El objeto bytes devuelto es, por tanto, el doble de largo que la "
"longitud de *data*."

#: ../../library/binascii.rst:132
msgid ""
"Similar functionality (but returning a text string) is also conveniently "
"accessible using the :meth:`bytes.hex` method."
msgstr ""
"También se puede acceder cómodamente a una funcionalidad similar (pero "
"devolviendo una cadena de texto) mediante el método :meth:`bytes.hex`."

#: ../../library/binascii.rst:135
msgid ""
"If *sep* is specified, it must be a single character str or bytes object. It "
"will be inserted in the output after every *bytes_per_sep* input bytes. "
"Separator placement is counted from the right end of the output by default, "
"if you wish to count from the left, supply a negative *bytes_per_sep* value."
msgstr ""
"Si se especifica *sep*, debe ser un objeto str o bytes de un solo carácter. "
"Se insertará en la salida después de cada *bytes_per_sep* bytes de entrada. "
"La colocación del separador se cuenta desde el extremo derecho de la salida "
"por defecto, si desea contar desde la izquierda, suministre un valor "
"*bytes_per_sep* negativo."

#: ../../library/binascii.rst:150
msgid "The *sep* and *bytes_per_sep* parameters were added."
msgstr "Se han añadido los parámetros *sep* y *bytes_per_sep*."

#: ../../library/binascii.rst:156
msgid ""
"Return the binary data represented by the hexadecimal string *hexstr*.  This "
"function is the inverse of :func:`b2a_hex`. *hexstr* must contain an even "
"number of hexadecimal digits (which can be upper or lower case), otherwise "
"an :exc:`Error` exception is raised."
msgstr ""
"Devuelve los datos binarios representados por la cadena hexadecimal "
"*hexstr*.  Esta función es la inversa de :func:`b2a_hex`. *hexstr* debe "
"contener un número par de dígitos hexadecimales (que pueden ser mayúsculas o "
"minúsculas), de lo contrario se lanza una excepción :exc:`Error`."

#: ../../library/binascii.rst:161
msgid ""
"Similar functionality (accepting only text string arguments, but more "
"liberal towards whitespace) is also accessible using "
"the :meth:`bytes.fromhex` class method."
msgstr ""
"También se puede acceder a una funcionalidad similar (aceptando sólo "
"argumentos de cadena de texto, pero más liberal con los espacios en blanco) "
"utilizando el método de la clase :meth:`bytes.fromhex`."

#: ../../library/binascii.rst:167
msgid "Exception raised on errors. These are usually programming errors."
msgstr ""
"Excepción planteada en caso de error. Suelen ser errores de programación."

#: ../../library/binascii.rst:172
msgid ""
"Exception raised on incomplete data. These are usually not programming "
"errors, but may be handled by reading a little more data and trying again."
msgstr ""
"Excepción planteada por datos incompletos. Normalmente no son errores de "
"programación, pero pueden solucionarse leyendo un poco más de datos e "
"intentándolo de nuevo."

#: ../../library/binascii.rst:178
msgid "Module :mod:`base64`"
msgstr "Módulo :mod:`base64`"

#: ../../library/binascii.rst:179
msgid ""
"Support for RFC compliant base64-style encoding in base 16, 32, 64, and 85."
msgstr ""
"Compatibilidad con la codificación de estilo base64 compatible con RFC en "
"base 16, 32, 64 y 85."

#: ../../library/binascii.rst:182
msgid "Module :mod:`quopri`"
msgstr "Módulo :mod:`quopri`"

#: ../../library/binascii.rst:183
msgid "Support for quoted-printable encoding used in MIME email messages."
msgstr ""
"Compatibilidad con la codificación quoted-printable utilizada en los "
"mensajes de correo electrónico MIME."

#: ../../library/binascii.rst:8
msgid "module"
msgstr "módulo"

#: ../../library/binascii.rst:8
msgid "base64"
msgstr "base64"
