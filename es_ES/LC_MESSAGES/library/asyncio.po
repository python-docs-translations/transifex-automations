# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001 Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# python-doc bot, 2025
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.14\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-09 14:15+0000\n"
"PO-Revision-Date: 2025-08-15 19:00+0000\n"
"Last-Translator: python-doc bot, 2025\n"
"Language-Team: Spanish (Spain) (https://app.transifex.com/python-doc/"
"teams/5390/es_ES/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: es_ES\n"
"Plural-Forms: nplurals=3; plural=n == 1 ? 0 : n != 0 && n % 1000000 == 0 ? "
"1 : 2;\n"

#: ../../library/asyncio.rst:96
msgid "High-level APIs"
msgstr "API de alto nivel"

#: ../../library/asyncio.rst:109
msgid "Low-level APIs"
msgstr "API de bajo nivel"

#: ../../library/asyncio.rst:120
msgid "Guides and Tutorials"
msgstr "Guías y tutoriales"

#: ../../library/asyncio.rst:2
msgid ":mod:`!asyncio` --- Asynchronous I/O"
msgstr ""

#: ../../library/asyncio.rst-1
msgid "Hello World!"
msgstr "!Hola Mundo¡."

#: ../../library/asyncio.rst:13
msgid ""
"import asyncio\n"
"\n"
"async def main():\n"
"    print('Hello ...')\n"
"    await asyncio.sleep(1)\n"
"    print('... World!')\n"
"\n"
"asyncio.run(main())"
msgstr ""

#: ../../library/asyncio.rst:22
msgid ""
"asyncio is a library to write **concurrent** code using the **async/await** "
"syntax."
msgstr ""
"asyncio es una librería para escribir código **concurrente** utilizando la "
"sintaxis **async/await**."

#: ../../library/asyncio.rst:25
msgid ""
"asyncio is used as a foundation for multiple Python asynchronous frameworks "
"that provide high-performance network and web-servers, database connection "
"libraries, distributed task queues, etc."
msgstr ""
"asyncio se utiliza como base para múltiples marcos asíncronos de Python que "
"proporcionan servidores web y de red de alto rendimiento, bibliotecas de "
"conexión a bases de datos, colas de tareas distribuidas, etc."

#: ../../library/asyncio.rst:29
msgid ""
"asyncio is often a perfect fit for IO-bound and high-level **structured** "
"network code."
msgstr ""
"asyncio es a menudo un ajuste perfecto para IO-bound y de alto nivel ** "
"estructurado ** código de red."

#: ../../library/asyncio.rst:34
msgid ":ref:`a-conceptual-overview-of-asyncio`"
msgstr ""

#: ../../library/asyncio.rst:35
msgid "Explanation of the fundamentals of asyncio."
msgstr ""

#: ../../library/asyncio.rst:37
msgid "asyncio provides a set of **high-level** APIs to:"
msgstr "asyncio proporciona un conjunto de API **de alto nivel** para:"

#: ../../library/asyncio.rst:39
msgid ""
":ref:`run Python coroutines <coroutine>` concurrently and have full control "
"over their execution;"
msgstr ""
":ref:`run Python coroutines <coroutine>` simultáneamente y tener control "
"total sobre su ejecución;"

#: ../../library/asyncio.rst:42
msgid "perform :ref:`network IO and IPC <asyncio-streams>`;"
msgstr "realizar :ref:`network IO and IPC <asyncio-streams>`;"

#: ../../library/asyncio.rst:44
msgid "control :ref:`subprocesses <asyncio-subprocess>`;"
msgstr "controlar :ref:`subprocesses <asyncio-subprocess>`;"

#: ../../library/asyncio.rst:46
msgid "distribute tasks via :ref:`queues <asyncio-queues>`;"
msgstr "distribuir tareas a través de :ref:`queues <asyncio-queues>`;"

#: ../../library/asyncio.rst:48
msgid ":ref:`synchronize <asyncio-sync>` concurrent code;"
msgstr ":ref:`synchronize <asyncio-sync>` código concurrente;"

#: ../../library/asyncio.rst:50
msgid ""
"Additionally, there are **low-level** APIs for *library and framework "
"developers* to:"
msgstr ""
"Además, hay API **de bajo nivel** para *desarrolladores de biblioteca y "
"framework* para:"

#: ../../library/asyncio.rst:53
msgid ""
"create and manage :ref:`event loops <asyncio-event-loop>`, which provide "
"asynchronous APIs for :ref:`networking <loop_create_server>`, running :ref:"
"`subprocesses <loop_subprocess_exec>`, handling :ref:`OS signals "
"<loop_add_signal_handler>`, etc;"
msgstr ""

#: ../../library/asyncio.rst:58
msgid ""
"implement efficient protocols using :ref:`transports <asyncio-transports-"
"protocols>`;"
msgstr ""
"implementar protocolos eficaces mediante :ref:`transports <asyncio-"
"transports-protocols>`;"

#: ../../library/asyncio.rst:61
msgid ""
":ref:`bridge <asyncio-futures>` callback-based libraries and code with async/"
"await syntax."
msgstr ""
":ref:`bridge <asyncio-futures>` bibliotecas basadas en callback y código con "
"sintaxis async/await."

#: ../../includes/wasm-notavail.rst:3
msgid "Availability"
msgstr ""

#: ../../includes/wasm-notavail.rst:5
msgid ""
"This module does not work or is not available on WebAssembly. See :ref:`wasm-"
"availability` for more information."
msgstr ""

#: ../../library/asyncio.rst:69
msgid "asyncio REPL"
msgstr "asyncio REPL"

#: ../../library/asyncio.rst:70
msgid ""
"You can experiment with an ``asyncio`` concurrent context in the :term:"
"`REPL`:"
msgstr ""

#: ../../library/asyncio.rst:72
msgid ""
"$ python -m asyncio\n"
"asyncio REPL ...\n"
"Use \"await\" directly instead of \"asyncio.run()\".\n"
"Type \"help\", \"copyright\", \"credits\" or \"license\" for more "
"information.\n"
">>> import asyncio\n"
">>> await asyncio.sleep(10, result='hello')\n"
"'hello'"
msgstr ""

#: ../../library/asyncio.rst:82
msgid ""
"Raises an :ref:`auditing event <auditing>` ``cpython.run_stdin`` with no "
"arguments."
msgstr ""
"Lanza un evento :ref:`auditing <auditing>` ``cpython.run_stdin`` sin "
"argumentos."

#: ../../library/asyncio.rst:84
msgid "(also 3.11.10, 3.10.15, 3.9.20, and 3.8.20) Emits audit events."
msgstr ""

#: ../../library/asyncio.rst:87
msgid ""
"Uses PyREPL if possible, in which case :envvar:`PYTHONSTARTUP` is also "
"executed. Emits audit events."
msgstr ""

#: ../../library/asyncio.rst:95
msgid "Reference"
msgstr "Referencia"

#: ../../library/asyncio.rst:129
msgid "The source code for asyncio can be found in :source:`Lib/asyncio/`."
msgstr "El código fuente de asyncio se encuentra en :source:`Lib/asyncio/`."
