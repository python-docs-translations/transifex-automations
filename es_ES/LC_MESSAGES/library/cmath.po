# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# python-doc bot, 2025
# Rafael Fontenelle <rffontenelle@gmail.com>, 2025
# eulalio barbero espinosa <eulalio@disroot.org>, 2025
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.11\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-23 16:19+0000\n"
"PO-Revision-Date: 2025-09-22 16:49+0000\n"
"Last-Translator: eulalio barbero espinosa <eulalio@disroot.org>, 2025\n"
"Language-Team: Spanish (Spain) (https://app.transifex.com/python-doc/"
"teams/5390/es_ES/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: es_ES\n"
"Plural-Forms: nplurals=3; plural=n == 1 ? 0 : n != 0 && n % 1000000 == 0 ? "
"1 : 2;\n"

#: ../../library/cmath.rst:2
msgid ":mod:`cmath` --- Mathematical functions for complex numbers"
msgstr ""

#: ../../library/cmath.rst:9
msgid ""
"This module provides access to mathematical functions for complex numbers.  "
"The functions in this module accept integers, floating-point numbers or "
"complex numbers as arguments. They will also accept any Python object that "
"has either a :meth:`~object.__complex__` or a :meth:`~object.__float__` "
"method: these methods are used to convert the object to a complex or "
"floating-point number, respectively, and the function is then applied to the "
"result of the conversion."
msgstr ""
"Este módulo proporciona acceso a funciones matemáticas para números "
"complejos.  Las funciones de este módulo aceptan enteros, números en coma "
"flotante o números complejos como argumentos. También aceptarán cualquier "
"objeto Python que tenga un método :meth:`~object.__complex__` o :meth:"
"`~object.__float__`: estos métodos se utilizan para convertir el objeto en "
"un número complejo o de coma flotante, respectivamente, y la función se "
"aplica entonces al resultado de la conversión."

#: ../../library/cmath.rst:18
msgid ""
"For functions involving branch cuts, we have the problem of deciding how to "
"define those functions on the cut itself. Following Kahan's \"Branch cuts "
"for complex elementary functions\" paper, as well as Annex G of C99 and "
"later C standards, we use the sign of zero to distinguish one side of the "
"branch cut from the other: for a branch cut along (a portion of) the real "
"axis we look at the sign of the imaginary part, while for a branch cut along "
"the imaginary axis we look at the sign of the real part."
msgstr ""
"Para las funciones que implican cortes de rama, tenemos el problema de "
"decidir cómo definir esas funciones en el propio corte. Siguiendo el "
"artículo de Kahan \"Branch cuts for complex elementary functions\", así como "
"el Anexo G de C99 y normas C posteriores, utilizamos el signo de cero para "
"distinguir un lado del corte de rama del otro: para un corte de rama a lo "
"largo de (una parte de) el eje real nos fijamos en el signo de la parte "
"imaginaria, mientras que para un corte de rama a lo largo del eje imaginario "
"nos fijamos en el signo de la parte real."

#: ../../library/cmath.rst:26
msgid ""
"For example, the :func:`cmath.sqrt` function has a branch cut along the "
"negative real axis. An argument of ``complex(-2.0, -0.0)`` is treated as "
"though it lies *below* the branch cut, and so gives a result on the negative "
"imaginary axis::"
msgstr ""
"Por ejemplo, la función :func:`cmath.sqrt` tiene un corte de rama a lo largo "
"del eje real negativo. Un argumento de ``complex(-2.0, -0.0)`` se trata como "
"si se encontrara *por debajo* del corte de rama, por lo que da un resultado "
"en el eje imaginario negativo::"

#: ../../library/cmath.rst:34
msgid ""
"But an argument of ``complex(-2.0, 0.0)`` is treated as though it lies above "
"the branch cut::"
msgstr ""
"Pero un argumento de ``complex(-2.0, 0.0)`` se trata como si estuviera por "
"encima de la rama cortada::"

#: ../../library/cmath.rst:42
msgid "Conversions to and from polar coordinates"
msgstr "Conversiones a y desde coordenadas polares"

#: ../../library/cmath.rst:44
msgid ""
"A Python complex number ``z`` is stored internally using *rectangular* or "
"*Cartesian* coordinates.  It is completely determined by its *real part* ``z."
"real`` and its *imaginary part* ``z.imag``.  In other words::"
msgstr ""

#: ../../library/cmath.rst:51
msgid ""
"*Polar coordinates* give an alternative way to represent a complex number.  "
"In polar coordinates, a complex number *z* is defined by the modulus *r* and "
"the phase angle *phi*. The modulus *r* is the distance from *z* to the "
"origin, while the phase *phi* is the counterclockwise angle, measured in "
"radians, from the positive x-axis to the line segment that joins the origin "
"to *z*."
msgstr ""
"*Las coordenadas polares ofrecen una forma alternativa de representar un "
"número complejo.  En coordenadas polares, un número complejo *z* se define "
"por el módulo *r* y el ángulo de fase *phi*. El módulo *r* es la distancia "
"de *z* al origen, mientras que la fase *phi* es el ángulo antihorario, "
"medido en radianes, desde el eje x positivo al segmento de línea que une el "
"origen con *z*."

#: ../../library/cmath.rst:58
msgid ""
"The following functions can be used to convert from the native rectangular "
"coordinates to polar coordinates and back."
msgstr ""
"Las siguientes funciones pueden utilizarse para convertir de coordenadas "
"rectangulares nativas a coordenadas polares y viceversa."

#: ../../library/cmath.rst:63
msgid ""
"Return the phase of *x* (also known as the *argument* of *x*), as a float. "
"``phase(x)`` is equivalent to ``math.atan2(x.imag, x.real)``.  The result "
"lies in the range [-\\ *π*, *π*], and the branch cut for this operation lies "
"along the negative real axis.  The sign of the result is the same as the "
"sign of ``x.imag``, even when ``x.imag`` is zero::"
msgstr ""

#: ../../library/cmath.rst:77
msgid ""
"The modulus (absolute value) of a complex number *x* can be computed using "
"the built-in :func:`abs` function.  There is no separate :mod:`cmath` module "
"function for this operation."
msgstr ""

#: ../../library/cmath.rst:84
msgid ""
"Return the representation of *x* in polar coordinates.  Returns a pair ``(r, "
"phi)`` where *r* is the modulus of *x* and phi is the phase of *x*.  "
"``polar(x)`` is equivalent to ``(abs(x), phase(x))``."
msgstr ""

#: ../../library/cmath.rst:92
msgid ""
"Return the complex number *x* with polar coordinates *r* and *phi*. "
"Equivalent to ``r * (math.cos(phi) + math.sin(phi)*1j)``."
msgstr ""

#: ../../library/cmath.rst:97
msgid "Power and logarithmic functions"
msgstr "Funciones de potencia y logarítmicas"

#: ../../library/cmath.rst:101
msgid ""
"Return *e* raised to the power *x*, where *e* is the base of natural "
"logarithms."
msgstr ""

#: ../../library/cmath.rst:107
msgid ""
"Returns the logarithm of *x* to the given *base*. If the *base* is not "
"specified, returns the natural logarithm of *x*. There is one branch cut, "
"from 0 along the negative real axis to -∞."
msgstr ""

#: ../../library/cmath.rst:114
msgid ""
"Return the base-10 logarithm of *x*. This has the same branch cut as :func:"
"`log`."
msgstr ""

#: ../../library/cmath.rst:120
msgid ""
"Return the square root of *x*. This has the same branch cut as :func:`log`."
msgstr ""

#: ../../library/cmath.rst:124
msgid "Trigonometric functions"
msgstr "Funciones trigonométricas"

#: ../../library/cmath.rst:128
msgid ""
"Return the arc cosine of *x*. There are two branch cuts: One extends right "
"from 1 along the real axis to ∞. The other extends left from -1 along the "
"real axis to -∞."
msgstr ""

#: ../../library/cmath.rst:135
msgid ""
"Return the arc sine of *x*. This has the same branch cuts as :func:`acos`."
msgstr ""

#: ../../library/cmath.rst:140
msgid ""
"Return the arc tangent of *x*. There are two branch cuts: One extends from "
"``1j`` along the imaginary axis to ``∞j``. The other extends from ``-1j`` "
"along the imaginary axis to ``-∞j``."
msgstr ""

#: ../../library/cmath.rst:147
msgid "Return the cosine of *x*."
msgstr ""

#: ../../library/cmath.rst:152
msgid "Return the sine of *x*."
msgstr ""

#: ../../library/cmath.rst:157
msgid "Return the tangent of *x*."
msgstr ""

#: ../../library/cmath.rst:161
msgid "Hyperbolic functions"
msgstr "Funciones hiperbólicas"

#: ../../library/cmath.rst:165
msgid ""
"Return the inverse hyperbolic cosine of *x*. There is one branch cut, "
"extending left from 1 along the real axis to -∞."
msgstr ""

#: ../../library/cmath.rst:171
msgid ""
"Return the inverse hyperbolic sine of *x*. There are two branch cuts: One "
"extends from ``1j`` along the imaginary axis to ``∞j``.  The other extends "
"from ``-1j`` along the imaginary axis to ``-∞j``."
msgstr ""

#: ../../library/cmath.rst:178
msgid ""
"Return the inverse hyperbolic tangent of *x*. There are two branch cuts: One "
"extends from ``1`` along the real axis to ``∞``. The other extends from "
"``-1`` along the real axis to ``-∞``."
msgstr ""

#: ../../library/cmath.rst:185
msgid "Return the hyperbolic cosine of *x*."
msgstr ""

#: ../../library/cmath.rst:190
msgid "Return the hyperbolic sine of *x*."
msgstr ""

#: ../../library/cmath.rst:195
msgid "Return the hyperbolic tangent of *x*."
msgstr ""

#: ../../library/cmath.rst:199
msgid "Classification functions"
msgstr "Funciones de clasificación"

#: ../../library/cmath.rst:203
msgid ""
"Return ``True`` if both the real and imaginary parts of *x* are finite, and "
"``False`` otherwise."
msgstr ""

#: ../../library/cmath.rst:211
msgid ""
"Return ``True`` if either the real or the imaginary part of *x* is an "
"infinity, and ``False`` otherwise."
msgstr ""

#: ../../library/cmath.rst:217
msgid ""
"Return ``True`` if either the real or the imaginary part of *x* is a NaN, "
"and ``False`` otherwise."
msgstr ""

#: ../../library/cmath.rst:223
msgid ""
"Return ``True`` if the values *a* and *b* are close to each other and "
"``False`` otherwise."
msgstr ""
"Devuelve ``True`` si los valores *a* y *b* están próximos entre sí y "
"``False`` en caso contrario."

#: ../../library/cmath.rst:226
msgid ""
"Whether or not two values are considered close is determined according to "
"given absolute and relative tolerances."
msgstr ""

#: ../../library/cmath.rst:229
msgid ""
"*rel_tol* is the relative tolerance -- it is the maximum allowed difference "
"between *a* and *b*, relative to the larger absolute value of *a* or *b*. "
"For example, to set a tolerance of 5%, pass ``rel_tol=0.05``.  The default "
"tolerance is ``1e-09``, which assures that the two values are the same "
"within about 9 decimal digits.  *rel_tol* must be greater than zero."
msgstr ""

#: ../../library/cmath.rst:235
msgid ""
"*abs_tol* is the minimum absolute tolerance -- useful for comparisons near "
"zero. *abs_tol* must be at least zero."
msgstr ""

#: ../../library/cmath.rst:238
msgid ""
"If no errors occur, the result will be: ``abs(a-b) <= max(rel_tol * "
"max(abs(a), abs(b)), abs_tol)``."
msgstr ""

#: ../../library/cmath.rst:241
msgid ""
"The IEEE 754 special values of ``NaN``, ``inf``, and ``-inf`` will be "
"handled according to IEEE rules.  Specifically, ``NaN`` is not considered "
"close to any other value, including ``NaN``.  ``inf`` and ``-inf`` are only "
"considered close to themselves."
msgstr ""
"Los valores especiales IEEE 754 de ``NaN``, ``inf``, y ``-inf`` se tratarán "
"según las reglas IEEE.  En concreto, ``NaN`` no se considera próximo a "
"ningún otro valor, incluido ``NaN``. ``inf`` y ``-inf`` sólo se consideran "
"próximos a sí mismos."

#: ../../library/cmath.rst:250
msgid ":pep:`485` -- A function for testing approximate equality"
msgstr ":pep:`485` -- Una función para comprobar la igualdad aproximada"

#: ../../library/cmath.rst:254
msgid "Constants"
msgstr "Constantes"

#: ../../library/cmath.rst:258
msgid "The mathematical constant *π*, as a float."
msgstr "La constante matemática *π*, como float."

#: ../../library/cmath.rst:263
msgid "The mathematical constant *e*, as a float."
msgstr "La constante matemática *e*, como float."

#: ../../library/cmath.rst:268
msgid "The mathematical constant *τ*, as a float."
msgstr "La constante matemática *τ*, como float."

#: ../../library/cmath.rst:275
msgid "Floating-point positive infinity. Equivalent to ``float('inf')``."
msgstr "Infinito positivo en coma flotante. Equivalente a ``float('inf')``."

#: ../../library/cmath.rst:282
msgid ""
"Complex number with zero real part and positive infinity imaginary part. "
"Equivalent to ``complex(0.0, float('inf'))``."
msgstr ""
"Número complejo con parte real nula y parte imaginaria infinita positiva. "
"Equivalente a ``complex(0.0, float('inf'))``."

#: ../../library/cmath.rst:290
msgid ""
"A floating-point \"not a number\" (NaN) value.  Equivalent to "
"``float('nan')``."
msgstr ""
"Valor \"no numérico\" (NaN) en coma flotante.  Equivale a ``float('nan')``."

#: ../../library/cmath.rst:298
msgid ""
"Complex number with zero real part and NaN imaginary part. Equivalent to "
"``complex(0.0, float('nan'))``."
msgstr ""
"Número complejo con parte real cero y parte imaginaria NaN. Equivalente a "
"``complex(0.0, float('nan'))``."

#: ../../library/cmath.rst:306
msgid ""
"Note that the selection of functions is similar, but not identical, to that "
"in module :mod:`math`.  The reason for having two modules is that some users "
"aren't interested in complex numbers, and perhaps don't even know what they "
"are.  They would rather have ``math.sqrt(-1)`` raise an exception than "
"return a complex number. Also note that the functions defined in :mod:"
"`cmath` always return a complex number, even if the answer can be expressed "
"as a real number (in which case the complex number has an imaginary part of "
"zero)."
msgstr ""
"Observe que la selección de funciones es similar, pero no idéntica, a la del "
"módulo :mod:`math`.  La razón de tener dos módulos es que algunos usuarios "
"no están interesados en los números complejos, y quizás ni siquiera saben lo "
"que son.  Preferirían que ``math.sqrt(-1)`` lanzara una excepción en lugar "
"de devolver un número complejo. Observe también que las funciones definidas "
"en :mod:`cmath` siempre devuelven un número complejo, incluso si la "
"respuesta puede expresarse como un número real (en cuyo caso el número "
"complejo tiene una parte imaginaria de cero)."

#: ../../library/cmath.rst:314
msgid ""
"A note on branch cuts: They are curves along which the given function fails "
"to be continuous.  They are a necessary feature of many complex functions.  "
"It is assumed that if you need to compute with complex functions, you will "
"understand about branch cuts.  Consult almost any (not too elementary) book "
"on complex variables for enlightenment.  For information of the proper "
"choice of branch cuts for numerical purposes, a good reference should be the "
"following:"
msgstr ""
"Nota sobre los cortes de rama: Son curvas a lo largo de las cuales la "
"función dada deja de ser continua.  Son una característica necesaria de "
"muchas funciones complejas.  Se supone que si necesita calcular con "
"funciones complejas, entenderá lo que son los cortes de rama.  Consulte casi "
"cualquier libro (no demasiado elemental) sobre variables complejas para "
"ilustrarse.  Para obtener información sobre la elección adecuada de cortes "
"de rama con fines numéricos, una buena referencia debería ser la siguiente:"

#: ../../library/cmath.rst:324
msgid ""
"Kahan, W:  Branch cuts for complex elementary functions; or, Much ado about "
"nothing's sign bit.  In Iserles, A., and Powell, M. (eds.), The state of the "
"art in numerical analysis. Clarendon Press (1987) pp165--211."
msgstr ""
"Kahan, W: Cortes de rama para funciones elementales complejas; o, Mucho "
"ruido y pocas nueces. En Iserles, A., y Powell, M. (eds.), El estado del "
"arte en análisis numérico. Clarendon Press (1987) págs. 165-211."

#: ../../library/cmath.rst:304
msgid "module"
msgstr "módulo"

#: ../../library/cmath.rst:304
msgid "math"
msgstr "matemáticas"
