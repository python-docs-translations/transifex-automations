# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001 Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# python-doc bot, 2025
# Rafael Fontenelle <rffontenelle@gmail.com>, 2025
# eulalio barbero espinosa <eulalio@disroot.org>, 2025
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.14\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-25 14:15+0000\n"
"PO-Revision-Date: 2025-09-16 00:00+0000\n"
"Last-Translator: eulalio barbero espinosa <eulalio@disroot.org>, 2025\n"
"Language-Team: Spanish (Spain) (https://app.transifex.com/python-doc/"
"teams/5390/es_ES/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: es_ES\n"
"Plural-Forms: nplurals=3; plural=n == 1 ? 0 : n != 0 && n % 1000000 == 0 ? "
"1 : 2;\n"

#: ../../library/cmath.rst:2
msgid ":mod:`!cmath` --- Mathematical functions for complex numbers"
msgstr ":mod:`!cmath` --- Funciones matemáticas para números complejos"

#: ../../library/cmath.rst:9
msgid ""
"This module provides access to mathematical functions for complex numbers.  "
"The functions in this module accept integers, floating-point numbers or "
"complex numbers as arguments. They will also accept any Python object that "
"has either a :meth:`~object.__complex__` or a :meth:`~object.__float__` "
"method: these methods are used to convert the object to a complex or "
"floating-point number, respectively, and the function is then applied to the "
"result of the conversion."
msgstr ""
"Este módulo proporciona acceso a funciones matemáticas para números "
"complejos.  Las funciones de este módulo aceptan enteros, números en coma "
"flotante o números complejos como argumentos. También aceptarán cualquier "
"objeto Python que tenga un método :meth:`~object.__complex__` o :meth:"
"`~object.__float__`: estos métodos se utilizan para convertir el objeto en "
"un número complejo o de coma flotante, respectivamente, y la función se "
"aplica entonces al resultado de la conversión."

#: ../../library/cmath.rst:18
msgid ""
"For functions involving branch cuts, we have the problem of deciding how to "
"define those functions on the cut itself. Following Kahan's \"Branch cuts "
"for complex elementary functions\" paper, as well as Annex G of C99 and "
"later C standards, we use the sign of zero to distinguish one side of the "
"branch cut from the other: for a branch cut along (a portion of) the real "
"axis we look at the sign of the imaginary part, while for a branch cut along "
"the imaginary axis we look at the sign of the real part."
msgstr ""
"Para las funciones que implican cortes de rama, tenemos el problema de "
"decidir cómo definir esas funciones en el propio corte. Siguiendo el "
"artículo de Kahan \"Branch cuts for complex elementary functions\", así como "
"el Anexo G de C99 y normas C posteriores, utilizamos el signo de cero para "
"distinguir un lado del corte de rama del otro: para un corte de rama a lo "
"largo de (una parte de) el eje real nos fijamos en el signo de la parte "
"imaginaria, mientras que para un corte de rama a lo largo del eje imaginario "
"nos fijamos en el signo de la parte real."

#: ../../library/cmath.rst:26
msgid ""
"For example, the :func:`cmath.sqrt` function has a branch cut along the "
"negative real axis. An argument of ``-2-0j`` is treated as though it lies "
"*below* the branch cut, and so gives a result on the negative imaginary "
"axis::"
msgstr ""

#: ../../library/cmath.rst:31
msgid ""
">>> cmath.sqrt(-2-0j)\n"
"-1.4142135623730951j"
msgstr ""

#: ../../library/cmath.rst:34
msgid ""
"But an argument of ``-2+0j`` is treated as though it lies above the branch "
"cut::"
msgstr ""

#: ../../library/cmath.rst:37
msgid ""
">>> cmath.sqrt(-2+0j)\n"
"1.4142135623730951j"
msgstr ""

#: ../../library/cmath.rst:42
msgid "**Conversions to and from polar coordinates**"
msgstr "**Conversiones a y desde coordenadas polares**"

#: ../../library/cmath.rst:44
msgid ":func:`phase(z) <phase>`"
msgstr ":func:`phase(z) <phase>`"

#: ../../library/cmath.rst:44
msgid "Return the phase of *z*"
msgstr "Devuelve la fase de *z*"

#: ../../library/cmath.rst:45
msgid ":func:`polar(z) <polar>`"
msgstr ":func:`polar(z) <polar>`"

#: ../../library/cmath.rst:45
msgid "Return the representation of *z* in polar coordinates"
msgstr "Devuelve la representación de *z* en coordenadas polares"

#: ../../library/cmath.rst:46
msgid ":func:`rect(r, phi) <rect>`"
msgstr ":func:`rect(r, phi) <rect>`"

#: ../../library/cmath.rst:46
msgid "Return the complex number *z* with polar coordinates *r* and *phi*"
msgstr "Devuelve el número complejo *z* con coordenadas polares *r* y *phi*."

#: ../../library/cmath.rst:48
msgid "**Power and logarithmic functions**"
msgstr "**Funciones de potencia y logarítmicas**"

#: ../../library/cmath.rst:50
msgid ":func:`exp(z) <exp>`"
msgstr ":func:`exp(z) <exp>`"

#: ../../library/cmath.rst:50
msgid "Return *e* raised to the power *z*"
msgstr "Devuelve *e* elevado a la potencia *z*"

#: ../../library/cmath.rst:51
msgid ":func:`log(z[, base]) <log>`"
msgstr ":func:`log(z[, base]) <log>`"

#: ../../library/cmath.rst:51
msgid "Return the logarithm of *z* to the given *base* (*e* by default)"
msgstr "Devuelve el logaritmo de *z* a la *base* dada (*e* por defecto)"

#: ../../library/cmath.rst:52
msgid ":func:`log10(z) <log10>`"
msgstr ":func:`log10(z) <log10>`"

#: ../../library/cmath.rst:52
msgid "Return the base-10 logarithm of *z*"
msgstr "Devuelve el logaritmo en base-10 de *z*."

#: ../../library/cmath.rst:53
msgid ":func:`sqrt(z) <sqrt>`"
msgstr ":func:`sqrt(z) <sqrt>`"

#: ../../library/cmath.rst:53
msgid "Return the square root of *z*"
msgstr "Devuelve la raíz cuadrada de *z*"

#: ../../library/cmath.rst:55
msgid "**Trigonometric functions**"
msgstr "**Funciones trigonométricas"

#: ../../library/cmath.rst:57
msgid ":func:`acos(z) <acos>`"
msgstr ":func:`acos(z) <acos>`"

#: ../../library/cmath.rst:57
msgid "Return the arc cosine of *z*"
msgstr "Devuelve el arco coseno de *z*"

#: ../../library/cmath.rst:58
msgid ":func:`asin(z) <asin>`"
msgstr ":func:`asin(z) <asin>`"

#: ../../library/cmath.rst:58
msgid "Return the arc sine of *z*"
msgstr "Devuelve el arco seno de *z*"

#: ../../library/cmath.rst:59
msgid ":func:`atan(z) <atan>`"
msgstr ":func:`atan(z) <atan>`"

#: ../../library/cmath.rst:59
msgid "Return the arc tangent of *z*"
msgstr "Devuelve el arco tangente de *z*"

#: ../../library/cmath.rst:60
msgid ":func:`cos(z) <cos>`"
msgstr ":func:`cos(z) <cos>`"

#: ../../library/cmath.rst:60
msgid "Return the cosine of *z*"
msgstr "Devuelve el coseno de *z*"

#: ../../library/cmath.rst:61
msgid ":func:`sin(z) <sin>`"
msgstr ":func:`sin(z) <sin>`"

#: ../../library/cmath.rst:61
msgid "Return the sine of *z*"
msgstr "Devuelve el seno de *z*"

#: ../../library/cmath.rst:62
msgid ":func:`tan(z) <tan>`"
msgstr ":func:`tan(z) <tan>`"

#: ../../library/cmath.rst:62
msgid "Return the tangent of *z*"
msgstr "Devuelve la tangente de *z*"

#: ../../library/cmath.rst:64
msgid "**Hyperbolic functions**"
msgstr "**Funciones hiperbólicas"

#: ../../library/cmath.rst:66
msgid ":func:`acosh(z) <acosh>`"
msgstr ":func:`acosh(z) <acosh>`"

#: ../../library/cmath.rst:66
msgid "Return the inverse hyperbolic cosine of *z*"
msgstr "Devuelve el coseno hiperbólico inverso de *z*"

#: ../../library/cmath.rst:67
msgid ":func:`asinh(z) <asinh>`"
msgstr ":func:`asinh(z) <asinh>`"

#: ../../library/cmath.rst:67
msgid "Return the inverse hyperbolic sine of *z*"
msgstr "Devuelve el seno hiperbólico inverso de *z*."

#: ../../library/cmath.rst:68
msgid ":func:`atanh(z) <atanh>`"
msgstr ":func:`atanh(z) <atanh>`"

#: ../../library/cmath.rst:68
msgid "Return the inverse hyperbolic tangent of *z*"
msgstr "Devuelve la tangente hiperbólica inversa de *z*"

#: ../../library/cmath.rst:69
msgid ":func:`cosh(z) <cosh>`"
msgstr ":func:`cosh(z) <cosh>`"

#: ../../library/cmath.rst:69
msgid "Return the hyperbolic cosine of *z*"
msgstr "Devuelve el coseno hiperbólico de *z*"

#: ../../library/cmath.rst:70
msgid ":func:`sinh(z) <sinh>`"
msgstr ":func:`sinh(z) <sinh>`"

#: ../../library/cmath.rst:70
msgid "Return the hyperbolic sine of *z*"
msgstr "Devuelve el seno hiperbólico de *z*"

#: ../../library/cmath.rst:71
msgid ":func:`tanh(z) <tanh>`"
msgstr ":func:`tanh(z) <tanh>`"

#: ../../library/cmath.rst:71
msgid "Return the hyperbolic tangent of *z*"
msgstr "Devuelve la tangente hiperbólica de *z*"

#: ../../library/cmath.rst:73
msgid "**Classification functions**"
msgstr "**Funciones de clasificación**"

#: ../../library/cmath.rst:75
msgid ":func:`isfinite(z) <isfinite>`"
msgstr ":func:`isfinite(z) <isfinite>`"

#: ../../library/cmath.rst:75
msgid "Check if all components of *z* are finite"
msgstr "Comprueba si todos los componentes de *z* son finitos"

#: ../../library/cmath.rst:76
msgid ":func:`isinf(z) <isinf>`"
msgstr ":func:`isinf(z) <isinf>`"

#: ../../library/cmath.rst:76
msgid "Check if any component of *z* is infinite"
msgstr "Comprueba si algún componente de *z* es infinito"

#: ../../library/cmath.rst:77
msgid ":func:`isnan(z) <isnan>`"
msgstr ":func:`isnan(z) <isnan>`"

#: ../../library/cmath.rst:77
msgid "Check if any component of *z* is a NaN"
msgstr "Comprueba si algún componente de *z* es un NaN"

#: ../../library/cmath.rst:78
msgid ":func:`isclose(a, b, *, rel_tol, abs_tol) <isclose>`"
msgstr ":func:`isclose(a, b, *, rel_tol, abs_tol) <isclose>`"

#: ../../library/cmath.rst:78
msgid "Check if the values *a* and *b* are close to each other"
msgstr "Comprueba si los valores *a* y *b* están próximos entre sí"

#: ../../library/cmath.rst:80
msgid "**Constants**"
msgstr "**Constantes**"

#: ../../library/cmath.rst:82
msgid ":data:`pi`"
msgstr ":data:`pi`"

#: ../../library/cmath.rst:82
msgid "*π* = 3.141592..."
msgstr "*π* = 3.141592..."

#: ../../library/cmath.rst:83
msgid ":data:`e`"
msgstr ":data:`e`"

#: ../../library/cmath.rst:83
msgid "*e* = 2.718281..."
msgstr "*e* = 2.718281..."

#: ../../library/cmath.rst:84
msgid ":data:`tau`"
msgstr ":data:`tau`"

#: ../../library/cmath.rst:84
msgid "*τ* = 2\\ *π* = 6.283185..."
msgstr "*τ* = 2\\ *π* = 6.283185..."

#: ../../library/cmath.rst:85
msgid ":data:`inf`"
msgstr ":data:`inf`"

#: ../../library/cmath.rst:85
msgid "Positive infinity"
msgstr "Infinito positivo"

#: ../../library/cmath.rst:86
msgid ":data:`infj`"
msgstr ":data:`infj`"

#: ../../library/cmath.rst:86
msgid "Pure imaginary infinity"
msgstr "Puro infinito imaginario"

#: ../../library/cmath.rst:87
msgid ":data:`nan`"
msgstr ":data:`nan`"

#: ../../library/cmath.rst:87
msgid "\"Not a number\" (NaN)"
msgstr "\"No es un número\" (NaN)"

#: ../../library/cmath.rst:88
msgid ":data:`nanj`"
msgstr ":data:`nanj`"

#: ../../library/cmath.rst:88
msgid "Pure imaginary NaN"
msgstr "NaN imaginario puro"

#: ../../library/cmath.rst:93
msgid "Conversions to and from polar coordinates"
msgstr "Conversiones a y desde coordenadas polares"

#: ../../library/cmath.rst:95
msgid ""
"A Python complex number ``z`` is stored internally using *rectangular* or "
"*Cartesian* coordinates.  It is completely determined by its *real part* ``z."
"real`` and its *imaginary part* ``z.imag``."
msgstr ""
"Un número complejo de Python ``z`` se almacena internamente usando "
"coordenadas *rectangulares* o *cartesianas*.  Está completamente determinado "
"por su *parte real* ``z.real`` y su *parte imaginaria* ``z.imag``."

#: ../../library/cmath.rst:99
msgid ""
"*Polar coordinates* give an alternative way to represent a complex number.  "
"In polar coordinates, a complex number *z* is defined by the modulus *r* and "
"the phase angle *phi*. The modulus *r* is the distance from *z* to the "
"origin, while the phase *phi* is the counterclockwise angle, measured in "
"radians, from the positive x-axis to the line segment that joins the origin "
"to *z*."
msgstr ""
"*Las coordenadas polares ofrecen una forma alternativa de representar un "
"número complejo.  En coordenadas polares, un número complejo *z* se define "
"por el módulo *r* y el ángulo de fase *phi*. El módulo *r* es la distancia "
"de *z* al origen, mientras que la fase *phi* es el ángulo antihorario, "
"medido en radianes, desde el eje x positivo al segmento de línea que une el "
"origen con *z*."

#: ../../library/cmath.rst:106
msgid ""
"The following functions can be used to convert from the native rectangular "
"coordinates to polar coordinates and back."
msgstr ""
"Las siguientes funciones pueden utilizarse para convertir de coordenadas "
"rectangulares nativas a coordenadas polares y viceversa."

#: ../../library/cmath.rst:111
msgid ""
"Return the phase of *z* (also known as the *argument* of *z*), as a float. "
"``phase(z)`` is equivalent to ``math.atan2(z.imag, z.real)``.  The result "
"lies in the range [-\\ *π*, *π*], and the branch cut for this operation lies "
"along the negative real axis.  The sign of the result is the same as the "
"sign of ``z.imag``, even when ``z.imag`` is zero::"
msgstr ""
"Devuelve la fase de *z* (también conocida como el *argumento* de *z*), como "
"flotante. ``phase(z)`` es equivalente a ``math.atan2(z.imag, z.real)``. El "
"resultado se encuentra en el rango [-\\ *π*, *π*], y el corte de rama para "
"esta operación se encuentra a lo largo del eje real negativo.  El signo del "
"resultado es el mismo que el signo de ``z.imag``, incluso cuando ``z.imag`` "
"es cero::"

#: ../../library/cmath.rst:117
msgid ""
">>> phase(-1+0j)\n"
"3.141592653589793\n"
">>> phase(-1-0j)\n"
"-3.141592653589793"
msgstr ""

#: ../../library/cmath.rst:125
msgid ""
"The modulus (absolute value) of a complex number *z* can be computed using "
"the built-in :func:`abs` function.  There is no separate :mod:`cmath` module "
"function for this operation."
msgstr ""
"El módulo (valor absoluto) de un número complejo *z* puede calcularse "
"utilizando la función incorporada :func:`abs`.  No existe una función "
"separada del módulo :mod:`cmath` para esta operación."

#: ../../library/cmath.rst:132
msgid ""
"Return the representation of *z* in polar coordinates.  Returns a pair ``(r, "
"phi)`` where *r* is the modulus of *z* and *phi* is the phase of *z*.  "
"``polar(z)`` is equivalent to ``(abs(z), phase(z))``."
msgstr ""
"Devuelve la representación de *z* en coordenadas polares.  Devuelve un par "
"``(r, phi)`` donde *r* es el módulo de *z* y *phi* es la fase de *z*. "
"``polar(z)`` es equivalente a ``(abs(z), phase(z))``."

#: ../../library/cmath.rst:140
msgid ""
"Return the complex number *z* with polar coordinates *r* and *phi*. "
"Equivalent to ``complex(r * math.cos(phi), r * math.sin(phi))``."
msgstr ""
"Devuelve el número complejo *z* con coordenadas polares *r* y *phi*. "
"Equivalente a ``complex(r * math.cos(phi), r * math.sin(phi))``."

#: ../../library/cmath.rst:145
msgid "Power and logarithmic functions"
msgstr "Funciones de potencia y logarítmicas"

#: ../../library/cmath.rst:149
msgid ""
"Return *e* raised to the power *z*, where *e* is the base of natural "
"logarithms."
msgstr ""
"Devuelve *e* elevado a la potencia *z*, donde *e* es la base de los "
"logaritmos naturales."

#: ../../library/cmath.rst:155
msgid ""
"Return the logarithm of *z* to the given *base*. If the *base* is not "
"specified, returns the natural logarithm of *z*. There is one branch cut, "
"from 0 along the negative real axis to -∞."
msgstr ""
"Devuelve el logaritmo de *z* a la *base* dada. Si no se especifica la "
"*base*, devuelve el logaritmo natural de *z*. Hay una rama cortada, desde 0 "
"a lo largo del eje real negativo hasta -∞."

#: ../../library/cmath.rst:162
msgid ""
"Return the base-10 logarithm of *z*. This has the same branch cut as :func:"
"`log`."
msgstr ""
"Devuelve el logaritmo en base-10 de *z*. Tiene el mismo corte de rama que :"
"func:`log`."

#: ../../library/cmath.rst:168
msgid ""
"Return the square root of *z*. This has the same branch cut as :func:`log`."
msgstr ""
"Devuelve la raíz cuadrada de *z*. Tiene el mismo corte de rama que :func:"
"`log`."

#: ../../library/cmath.rst:172
msgid "Trigonometric functions"
msgstr "Funciones trigonométricas"

#: ../../library/cmath.rst:176
msgid ""
"Return the arc cosine of *z*. There are two branch cuts: One extends right "
"from 1 along the real axis to ∞. The other extends left from -1 along the "
"real axis to -∞."
msgstr ""
"Devuelve el arco coseno de *z*. Hay dos cortes de rama: Una se extiende a la "
"derecha desde 1 a lo largo del eje real hasta ∞. La otra se extiende a la "
"izquierda desde -1 a lo largo del eje real hasta -∞."

#: ../../library/cmath.rst:183
msgid ""
"Return the arc sine of *z*. This has the same branch cuts as :func:`acos`."
msgstr ""
"Devuelve el arco seno de *z*. Tiene los mismos cortes de rama que :func:"
"`acos`."

#: ../../library/cmath.rst:188
msgid ""
"Return the arc tangent of *z*. There are two branch cuts: One extends from "
"``1j`` along the imaginary axis to ``∞j``. The other extends from ``-1j`` "
"along the imaginary axis to ``-∞j``."
msgstr ""
"Devuelve el arco tangente de *z*. Hay dos cortes de rama: Una se extiende "
"desde ``1j`` a lo largo del eje imaginario hasta ``∞j``. La otra se extiende "
"desde ``-1j`` a lo largo del eje imaginario hasta ``-∞j``."

#: ../../library/cmath.rst:195
msgid "Return the cosine of *z*."
msgstr "Devuelve el coseno de *z*."

#: ../../library/cmath.rst:200
msgid "Return the sine of *z*."
msgstr "Devuelve el seno de *z*."

#: ../../library/cmath.rst:205
msgid "Return the tangent of *z*."
msgstr "Devuelve la tangente de *z*."

#: ../../library/cmath.rst:209
msgid "Hyperbolic functions"
msgstr "Funciones hiperbólicas"

#: ../../library/cmath.rst:213
msgid ""
"Return the inverse hyperbolic cosine of *z*. There is one branch cut, "
"extending left from 1 along the real axis to -∞."
msgstr ""
"Devuelve el coseno hiperbólico inverso de *z*. Hay una rama cortada, que se "
"extiende a la izquierda desde 1 a lo largo del eje real hasta -∞."

#: ../../library/cmath.rst:219
msgid ""
"Return the inverse hyperbolic sine of *z*. There are two branch cuts: One "
"extends from ``1j`` along the imaginary axis to ``∞j``.  The other extends "
"from ``-1j`` along the imaginary axis to ``-∞j``."
msgstr ""
"Devuelve el seno hiperbólico inverso de *z*. Hay dos cortes de rama: Una se "
"extiende desde ``1j`` a lo largo del eje imaginario hasta ``∞j``. La otra se "
"extiende desde ``-1j`` a lo largo del eje imaginario hasta ``-∞j``."

#: ../../library/cmath.rst:226
msgid ""
"Return the inverse hyperbolic tangent of *z*. There are two branch cuts: One "
"extends from ``1`` along the real axis to ``∞``. The other extends from "
"``-1`` along the real axis to ``-∞``."
msgstr ""
"Devuelve la tangente hiperbólica inversa de *z*. Hay dos cortes de rama: Una "
"se extiende desde ``1`` a lo largo del eje real hasta ``∞``. La otra se "
"extiende desde ``-1`` a lo largo del eje real hasta ``-∞``."

#: ../../library/cmath.rst:233
msgid "Return the hyperbolic cosine of *z*."
msgstr "Devuelve el coseno hiperbólico de *z*."

#: ../../library/cmath.rst:238
msgid "Return the hyperbolic sine of *z*."
msgstr "Devuelve el seno hiperbólico de *z*."

#: ../../library/cmath.rst:243
msgid "Return the hyperbolic tangent of *z*."
msgstr "Devuelve la tangente hiperbólica de *z*."

#: ../../library/cmath.rst:247
msgid "Classification functions"
msgstr "Funciones de clasificación"

#: ../../library/cmath.rst:251
msgid ""
"Return ``True`` if both the real and imaginary parts of *z* are finite, and "
"``False`` otherwise."
msgstr ""
"Devuelve ``True`` si tanto la parte real como la imaginaria de *z* son "
"finitas, y ``False`` en caso contrario."

#: ../../library/cmath.rst:259
msgid ""
"Return ``True`` if either the real or the imaginary part of *z* is an "
"infinity, and ``False`` otherwise."
msgstr ""
"Devuelve ``True`` si la parte real o imaginaria de *z* es un infinito, y "
"``False`` en caso contrario."

#: ../../library/cmath.rst:265
msgid ""
"Return ``True`` if either the real or the imaginary part of *z* is a NaN, "
"and ``False`` otherwise."
msgstr ""
"Devuelve ``True`` si la parte real o imaginaria de *z* es un NaN, y "
"``False`` en caso contrario."

#: ../../library/cmath.rst:271
msgid ""
"Return ``True`` if the values *a* and *b* are close to each other and "
"``False`` otherwise."
msgstr ""
"Devuelve ``True`` si los valores *a* y *b* están próximos entre sí y "
"``False`` en caso contrario."

#: ../../library/cmath.rst:274
msgid ""
"Whether or not two values are considered close is determined according to "
"given absolute and relative tolerances.  If no errors occur, the result will "
"be: ``abs(a-b) <= max(rel_tol * max(abs(a), abs(b)), abs_tol)``."
msgstr ""
"Si dos valores se consideran próximos o no, se determina en función de las "
"tolerancias absolutas y relativas dadas.  Si no se producen errores, el "
"resultado será: ``abs(a-b) <= max(rel_tol * max(abs(a), abs(b)), abs_tol)``."

#: ../../library/cmath.rst:278
msgid ""
"*rel_tol* is the relative tolerance -- it is the maximum allowed difference "
"between *a* and *b*, relative to the larger absolute value of *a* or *b*. "
"For example, to set a tolerance of 5%, pass ``rel_tol=0.05``.  The default "
"tolerance is ``1e-09``, which assures that the two values are the same "
"within about 9 decimal digits.  *rel_tol* must be nonnegative and less than "
"``1.0``."
msgstr ""
"*rel_tol* es la tolerancia relativa -- es la diferencia máxima permitida "
"entre *a* y *b*, relativa al valor absoluto mayor de *a* o *b*. Por ejemplo, "
"para establecer una tolerancia del 5%, pase ``rel_tol=0.05``.  La tolerancia "
"por defecto es ``1e-09``, que asegura que los dos valores son iguales dentro "
"de unos 9 dígitos decimales.  *rel_tol* debe ser no negativo y menor que "
"``1.0``."

#: ../../library/cmath.rst:285
msgid ""
"*abs_tol* is the absolute tolerance; it defaults to ``0.0`` and it must be "
"nonnegative.  When comparing ``x`` to ``0.0``, ``isclose(x, 0)`` is computed "
"as ``abs(x) <= rel_tol  * abs(x)``, which is ``False`` for any ``x`` and "
"rel_tol less than ``1.0``.  So add an appropriate positive abs_tol argument "
"to the call."
msgstr ""
"*abs_tol* es la tolerancia absoluta; por defecto es ``0.0`` y debe ser no "
"negativo.  Al comparar ``x`` con ``0.0``, ``isclose(x, 0)`` se calcula como "
"``abs(x) <= rel_tol  * abs(x)``, que es ``False`` para cualquier ``x`` y "
"rel_tol menor que ``1.0``. Por lo tanto, añada un argumento abs_tol positivo "
"apropiado a la llamada."

#: ../../library/cmath.rst:291
msgid ""
"The IEEE 754 special values of ``NaN``, ``inf``, and ``-inf`` will be "
"handled according to IEEE rules.  Specifically, ``NaN`` is not considered "
"close to any other value, including ``NaN``.  ``inf`` and ``-inf`` are only "
"considered close to themselves."
msgstr ""
"Los valores especiales IEEE 754 de ``NaN``, ``inf``, y ``-inf`` se tratarán "
"según las reglas IEEE.  En concreto, ``NaN`` no se considera próximo a "
"ningún otro valor, incluido ``NaN``. ``inf`` y ``-inf`` sólo se consideran "
"próximos a sí mismos."

#: ../../library/cmath.rst:300
msgid ":pep:`485` -- A function for testing approximate equality"
msgstr ":pep:`485` -- Una función para comprobar la igualdad aproximada"

#: ../../library/cmath.rst:304
msgid "Constants"
msgstr "Constantes"

#: ../../library/cmath.rst:308
msgid "The mathematical constant *π*, as a float."
msgstr "La constante matemática *π*, como float."

#: ../../library/cmath.rst:313
msgid "The mathematical constant *e*, as a float."
msgstr "La constante matemática *e*, como float."

#: ../../library/cmath.rst:318
msgid "The mathematical constant *τ*, as a float."
msgstr "La constante matemática *τ*, como float."

#: ../../library/cmath.rst:325
msgid "Floating-point positive infinity. Equivalent to ``float('inf')``."
msgstr "Infinito positivo en coma flotante. Equivalente a ``float('inf')``."

#: ../../library/cmath.rst:332
msgid ""
"Complex number with zero real part and positive infinity imaginary part. "
"Equivalent to ``complex(0.0, float('inf'))``."
msgstr ""
"Número complejo con parte real nula y parte imaginaria infinita positiva. "
"Equivalente a ``complex(0.0, float('inf'))``."

#: ../../library/cmath.rst:340
msgid ""
"A floating-point \"not a number\" (NaN) value.  Equivalent to "
"``float('nan')``."
msgstr ""
"Valor \"no numérico\" (NaN) en coma flotante.  Equivale a ``float('nan')``."

#: ../../library/cmath.rst:348
msgid ""
"Complex number with zero real part and NaN imaginary part. Equivalent to "
"``complex(0.0, float('nan'))``."
msgstr ""
"Número complejo con parte real cero y parte imaginaria NaN. Equivalente a "
"``complex(0.0, float('nan'))``."

#: ../../library/cmath.rst:356
msgid ""
"Note that the selection of functions is similar, but not identical, to that "
"in module :mod:`math`.  The reason for having two modules is that some users "
"aren't interested in complex numbers, and perhaps don't even know what they "
"are.  They would rather have ``math.sqrt(-1)`` raise an exception than "
"return a complex number. Also note that the functions defined in :mod:"
"`cmath` always return a complex number, even if the answer can be expressed "
"as a real number (in which case the complex number has an imaginary part of "
"zero)."
msgstr ""
"Observe que la selección de funciones es similar, pero no idéntica, a la del "
"módulo :mod:`math`.  La razón de tener dos módulos es que algunos usuarios "
"no están interesados en los números complejos, y quizás ni siquiera saben lo "
"que son.  Preferirían que ``math.sqrt(-1)`` lanzara una excepción en lugar "
"de devolver un número complejo. Observe también que las funciones definidas "
"en :mod:`cmath` siempre devuelven un número complejo, incluso si la "
"respuesta puede expresarse como un número real (en cuyo caso el número "
"complejo tiene una parte imaginaria de cero)."

#: ../../library/cmath.rst:364
msgid ""
"A note on branch cuts: They are curves along which the given function fails "
"to be continuous.  They are a necessary feature of many complex functions.  "
"It is assumed that if you need to compute with complex functions, you will "
"understand about branch cuts.  Consult almost any (not too elementary) book "
"on complex variables for enlightenment.  For information of the proper "
"choice of branch cuts for numerical purposes, a good reference should be the "
"following:"
msgstr ""
"Nota sobre los cortes de rama: Son curvas a lo largo de las cuales la "
"función dada deja de ser continua.  Son una característica necesaria de "
"muchas funciones complejas.  Se supone que si necesita calcular con "
"funciones complejas, entenderá lo que son los cortes de rama.  Consulte casi "
"cualquier libro (no demasiado elemental) sobre variables complejas para "
"ilustrarse.  Para obtener información sobre la elección adecuada de cortes "
"de rama con fines numéricos, una buena referencia debería ser la siguiente:"

#: ../../library/cmath.rst:374
msgid ""
"Kahan, W:  Branch cuts for complex elementary functions; or, Much ado about "
"nothing's sign bit.  In Iserles, A., and Powell, M. (eds.), The state of the "
"art in numerical analysis. Clarendon Press (1987) pp165--211."
msgstr ""
"Kahan, W: Cortes de rama para funciones elementales complejas; o, Mucho "
"ruido y pocas nueces. En Iserles, A., y Powell, M. (eds.), El estado del "
"arte en análisis numérico. Clarendon Press (1987) págs. 165-211."

#: ../../library/cmath.rst:354
msgid "module"
msgstr "módulo"

#: ../../library/cmath.rst:354
msgid "math"
msgstr "matemáticas"
