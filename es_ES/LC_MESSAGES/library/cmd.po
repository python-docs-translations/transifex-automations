# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# eulalio barbero espinosa <eulalio@disroot.org>, 2025
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.9\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-23 17:40+0000\n"
"PO-Revision-Date: 2025-09-22 17:54+0000\n"
"Last-Translator: eulalio barbero espinosa <eulalio@disroot.org>, 2025\n"
"Language-Team: Spanish (Spain) (https://app.transifex.com/python-doc/"
"teams/5390/es_ES/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: es_ES\n"
"Plural-Forms: nplurals=3; plural=n == 1 ? 0 : n != 0 && n % 1000000 == 0 ? "
"1 : 2;\n"

#: ../../library/cmd.rst:2
msgid ":mod:`cmd` --- Support for line-oriented command interpreters"
msgstr ""

#: ../../library/cmd.rst:9
msgid "**Source code:** :source:`Lib/cmd.py`"
msgstr "**Código fuente:** :source:`Lib/cmd.py`"

#: ../../library/cmd.rst:13
msgid ""
"The :class:`Cmd` class provides a simple framework for writing line-oriented "
"command interpreters.  These are often useful for test harnesses, "
"administrative tools, and prototypes that will later be wrapped in a more "
"sophisticated interface."
msgstr ""
"La clase :class:`Cmd` proporciona un marco simple para escribir intérpretes "
"de comandos orientados a la línea.  Suelen ser útiles para arneses de "
"prueba, herramientas administrativas y prototipos que más tarde se "
"envolverán en una interfaz más sofisticada."

#: ../../library/cmd.rst:20
msgid ""
"A :class:`Cmd` instance or subclass instance is a line-oriented interpreter "
"framework.  There is no good reason to instantiate :class:`Cmd` itself; "
"rather, it's useful as a superclass of an interpreter class you define "
"yourself in order to inherit :class:`Cmd`'s methods and encapsulate action "
"methods."
msgstr ""
"Una instancia o subclase de :class:`Cmd` es un marco de intérprete orientado "
"a la línea.  No hay ninguna buena razón para instanciar :class:`Cmd` en sí; "
"más bien, es útil como superclase de una clase de intérprete que defina "
"usted mismo para heredar los métodos de :class:`Cmd` y encapsular los "
"métodos de acción."

#: ../../library/cmd.rst:25
msgid ""
"The optional argument *completekey* is the :mod:`readline` name of a "
"completion key; it defaults to :kbd:`Tab`. If *completekey* is not :const:"
"`None` and :mod:`readline` is available, command completion is done "
"automatically."
msgstr ""
"El argumento opcional *completekey* es el nombre :mod:`readline` de una "
"clave de finalización; por defecto es :kbd:`Tab`. Si *completekey* no es :"
"const:`None` y :mod:`readline` está disponible, la finalización del comando "
"se realiza automáticamente."

#: ../../library/cmd.rst:29
msgid ""
"The optional arguments *stdin* and *stdout* specify the  input and output "
"file objects that the Cmd instance or subclass  instance will use for input "
"and output. If not specified, they will default to :data:`sys.stdin` and :"
"data:`sys.stdout`."
msgstr ""
"Los argumentos opcionales *stdin* y *stdout* especifican los objetos de "
"archivo de entrada y salida que la instancia o subclase de Cmd utilizará "
"para la entrada y la salida. Si no se especifican, se utilizarán por "
"defecto :data:`sys.stdin` y :data:`sys.stdout`."

#: ../../library/cmd.rst:34
msgid ""
"If you want a given *stdin* to be used, make sure to set the instance's :"
"attr:`use_rawinput` attribute to ``False``, otherwise *stdin* will be "
"ignored."
msgstr ""
"Si desea que se utilice un *stdin* determinado, asegúrese de establecer el "
"atributo :attr:`use_rawinput` de la instancia en ``False``, de lo contrario "
"se ignorará *stdin*."

#: ../../library/cmd.rst:42
msgid "Cmd Objects"
msgstr "Objetos Cmd"

#: ../../library/cmd.rst:44
msgid "A :class:`Cmd` instance has the following methods:"
msgstr "Una instancia de :class:`Cmd` tiene los siguientes métodos:"

#: ../../library/cmd.rst:49
msgid ""
"Repeatedly issue a prompt, accept input, parse an initial prefix off the "
"received input, and dispatch to action methods, passing them the remainder "
"of the line as argument."
msgstr ""
"Emitir repetidamente un prompt, aceptar la entrada, analizar un prefijo "
"inicial de la entrada recibida, y enviar a los métodos de acción, pasándoles "
"el resto de la línea como argumento."

#: ../../library/cmd.rst:53
msgid ""
"The optional argument is a banner or intro string to be issued before the "
"first prompt (this overrides the :attr:`intro` class attribute)."
msgstr ""
"El argumento opcional es un banner o cadena de introducción que se emitirá "
"antes del primer aviso (esto anula el atributo de clase :attr:`intro` )."

#: ../../library/cmd.rst:56
msgid ""
"If the :mod:`readline` module is loaded, input will automatically inherit :"
"program:`bash`\\ -like history-list editing (e.g. :kbd:`Control-P` scrolls "
"back to the last command, :kbd:`Control-N` forward to the next one, :kbd:"
"`Control-F` moves the cursor to the right non-destructively, :kbd:`Control-"
"B` moves the cursor to the left non-destructively, etc.)."
msgstr ""
"Si se carga el módulo :mod:`readline`, la entrada heredará automáticamente "
"la edición de listas históricas similar a :program:`bash`(por ejemplo, :kbd:"
"`Control-P` retrocede hasta el último comando, :kbd:`Control-N` avanza hasta "
"el siguiente, :kbd:`Control-F` mueve el cursor a la derecha de forma no "
"destructiva, :kbd:`Control-B` mueve el cursor a la izquierda de forma no "
"destructiva, etc.)."

#: ../../library/cmd.rst:62
msgid "An end-of-file on input is passed back as the string ``'EOF'``."
msgstr ""
"Un final de archivo en la entrada se devuelve como la cadena ``'EOF'``."

#: ../../library/cmd.rst:68
msgid ""
"An interpreter instance will recognize a command name ``foo`` if and only if "
"it has a method :meth:`do_foo`.  As a special case, a line beginning with "
"the character ``'?'`` is dispatched to the method :meth:`do_help`.  As "
"another special case, a line beginning with the character ``'!'`` is "
"dispatched to the method :meth:`do_shell` (if such a method is defined)."
msgstr ""

#: ../../library/cmd.rst:74
msgid ""
"This method will return when the :meth:`postcmd` method returns a true "
"value. The *stop* argument to :meth:`postcmd` is the return value from the "
"command's corresponding :meth:`do_\\*` method."
msgstr ""

#: ../../library/cmd.rst:78
msgid ""
"If completion is enabled, completing commands will be done automatically, "
"and completing of commands args is done by calling :meth:`complete_foo` with "
"arguments *text*, *line*, *begidx*, and *endidx*.  *text* is the string "
"prefix we are attempting to match: all returned matches must begin with it. "
"*line* is the current input line with leading whitespace removed, *begidx* "
"and *endidx* are the beginning and ending indexes of the prefix text, which "
"could be used to provide different completion depending upon which position "
"the argument is in."
msgstr ""

#: ../../library/cmd.rst:86
msgid ""
"All subclasses of :class:`Cmd` inherit a predefined :meth:`do_help`.  This "
"method, called with an argument ``'bar'``, invokes the corresponding method :"
"meth:`help_bar`, and if that is not present, prints the docstring of :meth:"
"`do_bar`, if available.  With no argument, :meth:`do_help` lists all "
"available help topics (that is, all commands with corresponding :meth:"
"`help_\\*` methods or commands that have docstrings), and also lists any "
"undocumented commands."
msgstr ""

#: ../../library/cmd.rst:97
msgid ""
"Interpret the argument as though it had been typed in response to the "
"prompt. This may be overridden, but should not normally need to be; see the :"
"meth:`precmd` and :meth:`postcmd` methods for useful execution hooks.  The "
"return value is a flag indicating whether interpretation of commands by the "
"interpreter should stop.  If there is a :meth:`do_\\*` method for the "
"command *str*, the return value of that method is returned, otherwise the "
"return value from the :meth:`default` method is returned."
msgstr ""

#: ../../library/cmd.rst:108
msgid ""
"Method called when an empty line is entered in response to the prompt. If "
"this method is not overridden, it repeats the last nonempty command entered."
msgstr ""
"Método llamado cuando se introduce una línea vacía en respuesta al prompt. "
"Si no se anula este método, se repite el último comando no vacío introducido."

#: ../../library/cmd.rst:114
msgid ""
"Method called on an input line when the command prefix is not recognized. If "
"this method is not overridden, it prints an error message and returns."
msgstr ""
"Método llamado en una línea de entrada cuando no se reconoce el prefijo del "
"comando. Si este método no se sobrescribe, imprime un mensaje de error y "
"devuelve."

#: ../../library/cmd.rst:120
msgid ""
"Method called to complete an input line when no command-specific :meth:"
"`complete_\\*` method is available.  By default, it returns an empty list."
msgstr ""

#: ../../library/cmd.rst:126
msgid ""
"Hook method executed just before the command line *line* is interpreted, but "
"after the input prompt is generated and issued.  This method is a stub in :"
"class:`Cmd`; it exists to be overridden by subclasses.  The return value is "
"used as the command which will be executed by the :meth:`onecmd` method; "
"the :meth:`precmd` implementation may re-write the command or simply return "
"*line* unchanged."
msgstr ""
"Método gancho ejecutado justo antes de que se interprete la línea *line* de "
"comandos, pero después de que se genere y emita el prompt de entrada.  Este "
"método es un stub en :class:`Cmd`; existe para sobreescribirse por "
"subclases.  El valor devuelto se utiliza como la orden que se ejecutará por "
"el método :meth:`onecmd`; la implementación de :meth:`precmd` puede "
"reescribir la orden o simplemente devolver *línea* sin cambios."

#: ../../library/cmd.rst:136
msgid ""
"Hook method executed just after a command dispatch is finished.  This method "
"is a stub in :class:`Cmd`; it exists to be overridden by subclasses.  *line* "
"is the command line which was executed, and *stop* is a flag which indicates "
"whether execution will be terminated after the call to :meth:`postcmd`; this "
"will be the return value of the :meth:`onecmd` method.  The return value of "
"this method will be used as the new value for the internal flag which "
"corresponds to *stop*; returning false will cause interpretation to continue."
msgstr ""
"Método gancho que se ejecuta justo después de finalizar el envío de un "
"comando.  Este método es un stub en :class:`Cmd`; existe para ser "
"sobreescrito por subclases.  *line* es la línea de comando que fue "
"ejecutada, y *stop* es una bandera que indica si la ejecución será terminada "
"después de la llamada a :meth:`postcmd`; este será el valor de retorno del "
"método :meth:`onecmd`.  El valor de retorno de este método se utilizará como "
"el nuevo valor para la bandera interna que corresponde a *stop*; devolver "
"false hará que la interpretación continúe."

#: ../../library/cmd.rst:147
msgid ""
"Hook method executed once when :meth:`cmdloop` is called.  This method is a "
"stub in :class:`Cmd`; it exists to be overridden by subclasses."
msgstr ""
"Método gancho que se ejecuta una vez cuando se llama a :meth:`cmdloop`.  "
"Este método es un stub en :class:`Cmd`; existe para ser sobrescrito por "
"subclases."

#: ../../library/cmd.rst:153
msgid ""
"Hook method executed once when :meth:`cmdloop` is about to return. This "
"method is a stub in :class:`Cmd`; it exists to be overridden by subclasses."
msgstr ""
"Método gancho que se ejecuta una vez cuando :meth:`cmdloop` está a punto de "
"regresar. Este método es un stub en :class:`Cmd`; existe para ser "
"sobrescrito por subclases."

#: ../../library/cmd.rst:157
msgid ""
"Instances of :class:`Cmd` subclasses have some public instance variables:"
msgstr ""
"Las instancias de las subclases de :class:`Cmd` tienen algunas variables de "
"instancia públicas:"

#: ../../library/cmd.rst:161
msgid "The prompt issued to solicit input."
msgstr "El mensaje emitido para solicitar entradas."

#: ../../library/cmd.rst:166
msgid "The string of characters accepted for the command prefix."
msgstr "La cadena de caracteres aceptada para el prefijo del comando."

#: ../../library/cmd.rst:171
msgid "The last nonempty command prefix seen."
msgstr "El último prefijo de comando no vacío visto."

#: ../../library/cmd.rst:176
msgid ""
"A list of queued input lines.  The cmdqueue list is checked in :meth:"
"`cmdloop` when new input is needed; if it is nonempty, its elements will be "
"processed in order, as if entered at the prompt."
msgstr ""
"Una lista de líneas de entrada en cola.  La lista cmdqueue se comprueba en :"
"meth:`cmdloop` cuando se necesita una nueva entrada; si no está vacía, sus "
"elementos se procesarán en orden, como si se hubieran introducido en el "
"prompt."

#: ../../library/cmd.rst:183
msgid ""
"A string to issue as an intro or banner.  May be overridden by giving the :"
"meth:`cmdloop` method an argument."
msgstr ""
"Una cadena para usar como intro o banner.  Puede anularse dando un argumento "
"al método :meth:`cmdloop`."

#: ../../library/cmd.rst:189
msgid ""
"The header to issue if the help output has a section for documented commands."
msgstr ""
"La cabecera a emitir si la salida de ayuda tiene una sección para comandos "
"documentados."

#: ../../library/cmd.rst:194
msgid ""
"The header to issue if the help output has a section for miscellaneous  help "
"topics (that is, there are :meth:`help_\\*` methods without corresponding :"
"meth:`do_\\*` methods)."
msgstr ""

#: ../../library/cmd.rst:201
msgid ""
"The header to issue if the help output has a section for undocumented  "
"commands (that is, there are :meth:`do_\\*` methods without corresponding :"
"meth:`help_\\*` methods)."
msgstr ""

#: ../../library/cmd.rst:208
msgid ""
"The character used to draw separator lines under the help-message headers.  "
"If empty, no ruler line is drawn.  It defaults to ``'='``."
msgstr ""
"Carácter utilizado para dibujar líneas de separación bajo las cabeceras de "
"los mensajes de ayuda.  Si está vacío, no se dibuja ninguna línea de "
"separación.  Por defecto es ``'='``."

#: ../../library/cmd.rst:214
msgid ""
"A flag, defaulting to true.  If true, :meth:`cmdloop` uses :func:`input` to "
"display a prompt and read the next command; if false, :meth:`sys.stdout."
"write` and :meth:`sys.stdin.readline` are used. (This means that by "
"importing :mod:`readline`, on systems that support it, the interpreter will "
"automatically support :program:`Emacs`\\ -like line editing  and command-"
"history keystrokes.)"
msgstr ""

#: ../../library/cmd.rst:224
msgid "Cmd Example"
msgstr "Cmd Ejemplo"

#: ../../library/cmd.rst:228
msgid ""
"The :mod:`cmd` module is mainly useful for building custom shells that let a "
"user work with a program interactively."
msgstr ""
"El módulo :mod:`cmd` es útil principalmente para construir shells "
"personalizados que permitan al usuario trabajar con un programa de forma "
"interactiva."

#: ../../library/cmd.rst:231
msgid ""
"This section presents a simple example of how to build a shell around a few "
"of the commands in the :mod:`turtle` module."
msgstr ""
"Esta sección presenta un ejemplo sencillo de cómo construir un intérprete de "
"comandos en torno a algunos de los comandos del módulo :mod:`turtle`."

#: ../../library/cmd.rst:234
msgid ""
"Basic turtle commands such as :meth:`~turtle.forward` are added to a :class:"
"`Cmd` subclass with method named :meth:`do_forward`.  The argument is "
"converted to a number and dispatched to the turtle module.  The docstring is "
"used in the help utility provided by the shell."
msgstr ""

#: ../../library/cmd.rst:239
msgid ""
"The example also includes a basic record and playback facility implemented "
"with the :meth:`~Cmd.precmd` method which is responsible for converting the "
"input to lowercase and writing the commands to a file.  The :meth:"
"`do_playback` method reads the file and adds the recorded commands to the :"
"attr:`cmdqueue` for immediate playback::"
msgstr ""

#: ../../library/cmd.rst:320
msgid ""
"Here is a sample session with the turtle shell showing the help functions, "
"using blank lines to repeat commands, and the simple record and playback "
"facility:"
msgstr ""
"Aquí tienes un ejemplo de sesión con el caparazón de tortuga que muestra las "
"funciones de ayuda, el uso de líneas en blanco para repetir comandos y la "
"sencilla función de grabación y reproducción:"
