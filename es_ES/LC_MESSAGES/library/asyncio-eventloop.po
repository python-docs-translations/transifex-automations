# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# Rafael Fontenelle <rffontenelle@gmail.com>, 2024
# eulalio barbero espinosa <eulalio@disroot.org>, 2025
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.12\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-04-18 14:52+0000\n"
"PO-Revision-Date: 2024-05-11 00:33+0000\n"
"Last-Translator: eulalio barbero espinosa <eulalio@disroot.org>, 2025\n"
"Language-Team: Spanish (Spain) (https://app.transifex.com/python-doc/"
"teams/5390/es_ES/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: es_ES\n"
"Plural-Forms: nplurals=3; plural=n == 1 ? 0 : n != 0 && n % 1000000 == 0 ? "
"1 : 2;\n"

#: ../../library/asyncio-eventloop.rst:8
msgid "Event Loop"
msgstr "Bucle de eventos"

#: ../../library/asyncio-eventloop.rst:10
msgid ""
"**Source code:** :source:`Lib/asyncio/events.py`, :source:`Lib/asyncio/"
"base_events.py`"
msgstr ""
"**Código fuente:** :source:`Lib/asyncio/events.py`, :source:`Lib/asyncio/"
"base_events.py`"

#: ../../library/asyncio-eventloop.rst:16
msgid "Preface"
msgstr "Prefacio"

#: ../../library/asyncio-eventloop.rst:17
msgid ""
"The event loop is the core of every asyncio application. Event loops run "
"asynchronous tasks and callbacks, perform network IO operations, and run "
"subprocesses."
msgstr ""
"El bucle de hechos es el núcleo de toda aplicación asyncio. Los bucles de "
"eventos ejecutan tareas asíncronas y callbacks, realizan operaciones de IO "
"de red y ejecutan subprocesos."

#: ../../library/asyncio-eventloop.rst:21
msgid ""
"Application developers should typically use the high-level asyncio "
"functions, such as :func:`asyncio.run`, and should rarely need to reference "
"the loop object or call its methods.  This section is intended mostly for "
"authors of lower-level code, libraries, and frameworks, who need finer "
"control over the event loop behavior."
msgstr ""
"Los desarrolladores de aplicaciones deberían utilizar normalmente las "
"funciones de alto nivel de asyncio, como :func:`asyncio.run`, y rara vez "
"deberían necesitar hacer referencia al objeto de bucle o llamar a sus "
"métodos.  Esta sección está destinada principalmente a los autores de código "
"de bajo nivel, bibliotecas y frameworks, que necesitan un control más fino "
"sobre el comportamiento del bucle de eventos."

#: ../../library/asyncio-eventloop.rst:28
msgid "Obtaining the Event Loop"
msgstr "Obtención del bucle de eventos"

#: ../../library/asyncio-eventloop.rst:29
msgid ""
"The following low-level functions can be used to get, set, or create an "
"event loop:"
msgstr ""
"Las siguientes funciones de bajo nivel se pueden utilizar para obtener, "
"establecer o crear un bucle de eventos:"

#: ../../library/asyncio-eventloop.rst:34
msgid "Return the running event loop in the current OS thread."
msgstr "Devuelve el bucle de eventos en ejecución en el hilo OS actual."

#: ../../library/asyncio-eventloop.rst:36
msgid "Raise a :exc:`RuntimeError` if there is no running event loop."
msgstr ""
"Lanza un :exc:`RuntimeError` si no hay ningún bucle de eventos en ejecución."

#: ../../library/asyncio-eventloop.rst:38
msgid "This function can only be called from a coroutine or a callback."
msgstr "Esta función sólo puede invocarse desde una co rutina o una callback."

#: ../../library/asyncio-eventloop.rst:44
msgid "Get the current event loop."
msgstr "Obtener el bucle actual de eventos."

#: ../../library/asyncio-eventloop.rst:46
msgid ""
"When called from a coroutine or a callback (e.g. scheduled with call_soon or "
"similar API), this function will always return the running event loop."
msgstr ""
"Cuando se llama desde una co rutina o un callback (por ejemplo, programado "
"con call_soon o API similar), esta función siempre devolverá el bucle de "
"eventos en ejecución."

#: ../../library/asyncio-eventloop.rst:50
msgid ""
"If there is no running event loop set, the function will return the result "
"of the ``get_event_loop_policy().get_event_loop()`` call."
msgstr ""
"Si no hay ningún bucle de eventos en ejecución establecido, la función "
"devolverá el resultado de la llamada a ``get_event_loop_policy()."
"get_event_loop()``."

#: ../../library/asyncio-eventloop.rst:53
msgid ""
"Because this function has rather complex behavior (especially when custom "
"event loop policies are in use), using the :func:`get_running_loop` function "
"is preferred to :func:`get_event_loop` in coroutines and callbacks."
msgstr ""
"Debido a que esta función tiene un comportamiento bastante complejo "
"(especialmente cuando se utilizan políticas de bucle de eventos "
"personalizadas), es preferible utilizar la función :func:`get_running_loop` "
"en lugar de :func:`get_event_loop` en corrutinas y callbacks."

#: ../../library/asyncio-eventloop.rst:58
msgid ""
"As noted above, consider using the higher-level :func:`asyncio.run` "
"function, instead of using these lower level functions to manually create "
"and close an event loop."
msgstr ""
"Como se señaló anteriormente, considerar el uso de la función de nivel "
"superior :func:`asyncio.run`, en lugar de utilizar estas funciones de nivel "
"inferior para crear y cerrar manualmente un bucle de eventos."

#: ../../library/asyncio-eventloop.rst:62
msgid ""
"Deprecation warning is emitted if there is no current event loop. In some "
"future Python release this will become an error."
msgstr ""
"Se emite una advertencia de desaprobación si no hay un bucle de eventos "
"actual. En alguna versión futura de Python esto se convertirá en un error."

#: ../../library/asyncio-eventloop.rst:68
msgid "Set *loop* as the current event loop for the current OS thread."
msgstr ""
"Establece *loop* como el bucle de eventos actual para el hilo OS actual."

#: ../../library/asyncio-eventloop.rst:72
msgid "Create and return a new event loop object."
msgstr "Crea y devuelve un nuevo objeto de bucle de eventos."

#: ../../library/asyncio-eventloop.rst:74
msgid ""
"Note that the behaviour of :func:`get_event_loop`, :func:`set_event_loop`, "
"and :func:`new_event_loop` functions can be altered by :ref:`setting a "
"custom event loop policy <asyncio-policies>`."
msgstr ""
"Tener en cuenta que el comportamiento de las funciones :func:"
"`get_event_loop`, :func:`set_event_loop`, y :func:`new_event_loop` puede "
"alterarse mediante :ref:`setting a custom event loop policy <asyncio-"
"policies>`."

#: ../../library/asyncio-eventloop.rst:80
msgid "Contents"
msgstr "Contenido"

#: ../../library/asyncio-eventloop.rst:81
msgid "This documentation page contains the following sections:"
msgstr "Esta página de documentación contiene las siguientes secciones:"

#: ../../library/asyncio-eventloop.rst:83
msgid ""
"The `Event Loop Methods`_ section is the reference documentation of the "
"event loop APIs;"
msgstr ""
"La sección `Event Loop Methods`_ es la documentación de referencia de las "
"APIs del bucle de eventos;"

#: ../../library/asyncio-eventloop.rst:86
msgid ""
"The `Callback Handles`_ section documents the :class:`Handle` and :class:"
"`TimerHandle` instances which are returned from scheduling methods such as :"
"meth:`loop.call_soon` and :meth:`loop.call_later`;"
msgstr ""
"La sección `Callback Handles`_ documenta las instancias :class:`Handle` y :"
"class:`TimerHandle` que se devuelven de métodos de programación como :meth:"
"`loop.call_soon` y :meth:`loop.call_later`;"

#: ../../library/asyncio-eventloop.rst:90
msgid ""
"The `Server Objects`_ section documents types returned from event loop "
"methods like :meth:`loop.create_server`;"
msgstr ""
"La sección `Server Objects`_ documenta los tipos devueltos por métodos de "
"bucle de eventos como :meth:`loop.create_server`;"

#: ../../library/asyncio-eventloop.rst:93
msgid ""
"The `Event Loop Implementations`_ section documents the :class:"
"`SelectorEventLoop` and :class:`ProactorEventLoop` classes;"
msgstr ""
"La sección `Event Loop Implementations`_ documenta las clases :class:"
"`SelectorEventLoop` y :class:`ProactorEventLoop`;"

#: ../../library/asyncio-eventloop.rst:96
msgid ""
"The `Examples`_ section showcases how to work with some event loop APIs."
msgstr ""
"La sección `Examples`_ muestra cómo trabajar con algunas API de bucle de "
"eventos."

#: ../../library/asyncio-eventloop.rst:103
msgid "Event Loop Methods"
msgstr "Métodos de bucle de eventos"

#: ../../library/asyncio-eventloop.rst:105
msgid "Event loops have **low-level** APIs for the following:"
msgstr "Los bucles de eventos tienen API de **nivel bajo** para lo siguiente:"

#: ../../library/asyncio-eventloop.rst:113
msgid "Running and stopping the loop"
msgstr "Ejecutar y detener el bucle"

#: ../../library/asyncio-eventloop.rst:117
msgid "Run until the *future* (an instance of :class:`Future`) has completed."
msgstr ""
"Ejecutar hasta que el *future* (una instancia de :class:`Future`) se haya "
"completado."

#: ../../library/asyncio-eventloop.rst:120
msgid ""
"If the argument is a :ref:`coroutine object <coroutine>` it is implicitly "
"scheduled to run as a :class:`asyncio.Task`."
msgstr ""
"Si el argumento es un objeto :ref:`coroutine <coroutine>` se programa "
"implícitamente para que se ejecute como :class:`asyncio.Task`."

#: ../../library/asyncio-eventloop.rst:123
msgid "Return the Future's result or raise its exception."
msgstr "Devuelve el resultado de Future o lanza su excepción."

#: ../../library/asyncio-eventloop.rst:127
msgid "Run the event loop until :meth:`stop` is called."
msgstr "Ejecuta el bucle de eventos hasta que se llame a :meth:`stop`."

#: ../../library/asyncio-eventloop.rst:129
msgid ""
"If :meth:`stop` is called before :meth:`run_forever` is called, the loop "
"will poll the I/O selector once with a timeout of zero, run all callbacks "
"scheduled in response to I/O events (and those that were already scheduled), "
"and then exit."
msgstr ""
"Si se llama a :meth:`stop` antes de llamar a :meth:`run_forever`, el bucle "
"sondeará el selector de E/S una vez con un tiempo de espera de cero, "
"ejecutará todas las retrollamadas programadas en respuesta a eventos de E/S "
"(y aquellas que ya estaban programadas), y luego saldrá."

#: ../../library/asyncio-eventloop.rst:134
msgid ""
"If :meth:`stop` is called while :meth:`run_forever` is running, the loop "
"will run the current batch of callbacks and then exit. Note that new "
"callbacks scheduled by callbacks will not run in this case; instead, they "
"will run the next time :meth:`run_forever` or :meth:`run_until_complete` is "
"called."
msgstr ""
"Si se llama a :meth:`stop` mientras se está ejecutando :meth:`run_forever`, "
"el bucle ejecutará el lote actual de retrollamadas y luego saldrá. Tener en "
"cuenta que las nuevas retrollamadas programadas por retrollamadas no se "
"ejecutarán en este caso; en su lugar, se ejecutarán la próxima vez que se "
"llame a :meth:`run_forever` o :meth:`run_until_complete`."

#: ../../library/asyncio-eventloop.rst:142
msgid "Stop the event loop."
msgstr "Detener el bucle de eventos."

#: ../../library/asyncio-eventloop.rst:146
msgid "Return ``True`` if the event loop is currently running."
msgstr ""
"Devuelve ``True`` si el bucle de eventos se está ejecutando actualmente."

#: ../../library/asyncio-eventloop.rst:150
msgid "Return ``True`` if the event loop was closed."
msgstr "Devuelve ``True`` si se ha cerrado el bucle de eventos."

#: ../../library/asyncio-eventloop.rst:154
msgid "Close the event loop."
msgstr "Cierra el bucle de eventos."

#: ../../library/asyncio-eventloop.rst:156
msgid ""
"The loop must not be running when this function is called. Any pending "
"callbacks will be discarded."
msgstr ""
"El bucle no debe estar en ejecución cuando se llame a esta función. Se "
"descartará cualquier devolución de llamada pendiente."

#: ../../library/asyncio-eventloop.rst:159
msgid ""
"This method clears all queues and shuts down the executor, but does not wait "
"for the executor to finish."
msgstr ""
"Este método borra todas las colas y apaga el ejecutor, pero no espera a que "
"el ejecutor termine."

#: ../../library/asyncio-eventloop.rst:162
msgid ""
"This method is idempotent and irreversible.  No other methods should be "
"called after the event loop is closed."
msgstr ""
"Este método es idempotente e irreversible.  No se debe llamar a ningún otro "
"método una vez cerrado el bucle de eventos."

#: ../../library/asyncio-eventloop.rst:168
msgid ""
"Schedule all currently open :term:`asynchronous generator` objects to close "
"with an :meth:`~agen.aclose` call.  After calling this method, the event "
"loop will issue a warning if a new asynchronous generator is iterated. This "
"should be used to reliably finalize all scheduled asynchronous generators."
msgstr ""
"Programa todos los objetos  :term:`asynchronous generator` actualmente "
"abiertos para que se cierren con una llamada a :meth:`~agen.aclose`.  "
"Después de llamar a este método, el bucle de eventos emitirá un aviso si se "
"itera un nuevo generador asíncrono. Esto debería usarse para finalizar de "
"forma fiable todos los generadores asíncronos programados."

#: ../../library/asyncio-eventloop.rst:174
msgid ""
"Note that there is no need to call this function when :func:`asyncio.run` is "
"used."
msgstr ""
"Tener en cuenta que no es necesario llamar a esta función cuando se utiliza :"
"func:`asyncio.run`."

#: ../../library/asyncio-eventloop.rst:177
#: ../../library/asyncio-eventloop.rst:1285
#: ../../library/asyncio-eventloop.rst:1707
msgid "Example::"
msgstr "Ejemplo::"

#: ../../library/asyncio-eventloop.rst:179
msgid ""
"try:\n"
"    loop.run_forever()\n"
"finally:\n"
"    loop.run_until_complete(loop.shutdown_asyncgens())\n"
"    loop.close()"
msgstr ""
"try:\n"
"    loop.run_forever()\n"
"finally:\n"
"    loop.run_until_complete(loop.shutdown_asyncgens())\n"
"    loop.close()"

#: ../../library/asyncio-eventloop.rst:190
msgid ""
"Schedule the closure of the default executor and wait for it to join all of "
"the threads in the :class:`~concurrent.futures.ThreadPoolExecutor`. Once "
"this method has been called, using the default executor with :meth:`loop."
"run_in_executor` will raise a :exc:`RuntimeError`."
msgstr ""
"Programar el cierre del ejecutor predeterminado y esperar a que se una a "
"todos los hilos en :class:`~concurrent.futures.ThreadPoolExecutor`. Una vez "
"llamado este método, el uso del ejecutor predeterminado con :meth:`loop."
"run_in_executor` generará un :exc:`RuntimeError`."

#: ../../library/asyncio-eventloop.rst:196
msgid ""
"The *timeout* parameter specifies the amount of time (in :class:`float` "
"seconds) the executor will be given to finish joining. With the default, "
"``None``, the executor is allowed an unlimited amount of time."
msgstr ""
"El parámetro *timeout* especifica la cantidad de tiempo (en :class:`float` "
"segundos) que se le dará al ejecutor para terminar de unirse. Con el valor "
"por defecto, ``None``, el ejecutor dispone de un tiempo ilimitado."

#: ../../library/asyncio-eventloop.rst:201
msgid ""
"If the *timeout* is reached, a :exc:`RuntimeWarning` is emitted and the "
"default executor is terminated without waiting for its threads to finish "
"joining."
msgstr ""
"Si se alcanza el *timeout*, se emite un :exc:`RuntimeWarning` y se termina "
"el ejecutor por defecto sin esperar a que sus hilos terminen de unirse."

#: ../../library/asyncio-eventloop.rst:207
msgid ""
"Do not call this method when using :func:`asyncio.run`, as the latter "
"handles default executor shutdown automatically."
msgstr ""
"No llamar a este método cuando se use :func:`asyncio.run`, ya que este "
"último maneja automáticamente el apagado del ejecutor por defecto."

#: ../../library/asyncio-eventloop.rst:212
msgid "Added the *timeout* parameter."
msgstr "Añadido el parámetro *timeout*."

#: ../../library/asyncio-eventloop.rst:216
msgid "Scheduling callbacks"
msgstr "Programación de retrollamadas"

#: ../../library/asyncio-eventloop.rst:220
msgid ""
"Schedule the *callback* :term:`callback` to be called with *args* arguments "
"at the next iteration of the event loop."
msgstr ""
"Programa el *callback* :term:`callback` para ser llamado con argumentos "
"*args* en la siguiente iteración del bucle de eventos."

#: ../../library/asyncio-eventloop.rst:223
msgid ""
"Return an instance of :class:`asyncio.Handle`, which can be used later to "
"cancel the callback."
msgstr ""
"Devuelve una instancia de :class:`asyncio.Handle`, que puede utilizarse "
"posteriormente para cancelar la llamada de retorno."

#: ../../library/asyncio-eventloop.rst:226
msgid ""
"Callbacks are called in the order in which they are registered. Each "
"callback will be called exactly once."
msgstr ""
"Las retrollamadas se ejecutan en el orden en que se registran. Cada "
"devolución de llamada se llamará exactamente una vez."

#: ../../library/asyncio-eventloop.rst:229
msgid ""
"The optional keyword-only *context* argument specifies a custom :class:"
"`contextvars.Context` for the *callback* to run in. Callbacks use the "
"current context when no *context* is provided."
msgstr ""
"El argumento opcional *context* especifica un :class:`contextvars.Context` "
"personalizado para que se ejecute la *callback*. Las llamadas de retorno "
"utilizan el contexto actual cuando no se proporciona *context*."

#: ../../library/asyncio-eventloop.rst:233
msgid "Unlike :meth:`call_soon_threadsafe`, this method is not thread-safe."
msgstr ""
"A diferencia de :meth:`call_soon_threadsafe`, este método no es seguro para "
"los hilos."

#: ../../library/asyncio-eventloop.rst:237
msgid ""
"A thread-safe variant of :meth:`call_soon`. When scheduling callbacks from "
"another thread, this function *must* be used, since :meth:`call_soon` is not "
"thread-safe."
msgstr ""
"Una variante segura para hilos de :meth:`call_soon`. Cuando se programan "
"llamadas de retorno desde otro hilo, se *debe* utilizar esta función, ya "
"que :meth:`call_soon` no es segura para hilos."

#: ../../library/asyncio-eventloop.rst:241
msgid ""
"This function is safe to be called from a reentrant context or signal "
"handler, however, it is not safe or fruitful to use the returned handle in "
"such contexts."
msgstr ""
"Esta función es segura para llamarla desde un contexto reentrante o "
"manejador de señales, sin embargo, no es seguro o fructífero usar el "
"manejador devuelto en tales contextos."

#: ../../library/asyncio-eventloop.rst:244
msgid ""
"Raises :exc:`RuntimeError` if called on a loop that's been closed. This can "
"happen on a secondary thread when the main application is shutting down."
msgstr ""
"Lanza :exc:`RuntimeError` si se llama a un bucle que se ha cerrado. Esto "
"puede ocurrir en un hilo secundario cuando la aplicación principal se está "
"cerrando."

#: ../../library/asyncio-eventloop.rst:248
msgid ""
"See the :ref:`concurrency and multithreading <asyncio-multithreading>` "
"section of the documentation."
msgstr ""
"Ver la sección :ref:`concurrency and multithreading <asyncio-"
"multithreading>` de la documentación."

#: ../../library/asyncio-eventloop.rst:251
#: ../../library/asyncio-eventloop.rst:301
#: ../../library/asyncio-eventloop.rst:321
msgid ""
"The *context* keyword-only parameter was added. See :pep:`567` for more "
"details."
msgstr ""
"Se ha añadido el parámetro *context* de sólo palabra clave. Consultar :pep:"
"`567` para obtener más detalles."

#: ../../library/asyncio-eventloop.rst:259
msgid ""
"Most :mod:`asyncio` scheduling functions don't allow passing keyword "
"arguments.  To do that, use :func:`functools.partial`::"
msgstr ""
"La mayoría de las funciones de programación de :mod:`asyncio` no permiten "
"pasar argumentos de palabra clave.  Para ello, usar :func:`functools."
"partial`::"

#: ../../library/asyncio-eventloop.rst:262
msgid ""
"# will schedule \"print(\"Hello\", flush=True)\"\n"
"loop.call_soon(\n"
"    functools.partial(print, \"Hello\", flush=True))"
msgstr ""
"# programará \"print(\"Hola\", flush=True)\"\n"
"loop.call_soon(\n"
"    functools.partial(print, \"Hola\", flush=True))"

#: ../../library/asyncio-eventloop.rst:266
msgid ""
"Using partial objects is usually more convenient than using lambdas, as "
"asyncio can render partial objects better in debug and error messages."
msgstr ""
"Usar objetos parciales suele ser más conveniente que usar lambdas, ya que "
"asyncio puede renderizar mejor los objetos parciales en los mensajes de "
"depuración y error."

#: ../../library/asyncio-eventloop.rst:274
msgid "Scheduling delayed callbacks"
msgstr "Programación de retrollamadas"

#: ../../library/asyncio-eventloop.rst:276
msgid ""
"Event loop provides mechanisms to schedule callback functions to be called "
"at some point in the future.  Event loop uses monotonic clocks to track time."
msgstr ""
"El bucle de eventos proporciona mecanismos para programar funciones callback "
"que serán llamadas en algún momento en el futuro.  El bucle de eventos "
"utiliza relojes monotónicos para controlar el tiempo."

#: ../../library/asyncio-eventloop.rst:283
msgid ""
"Schedule *callback* to be called after the given *delay* number of seconds "
"(can be either an int or a float)."
msgstr ""
"Programar *callback* para ser llamado después del *delay* número de segundos "
"dado (puede ser un int o un float)."

#: ../../library/asyncio-eventloop.rst:286
#: ../../library/asyncio-eventloop.rst:318
msgid ""
"An instance of :class:`asyncio.TimerHandle` is returned which can be used to "
"cancel the callback."
msgstr ""
"Se devuelve una instancia de :class:`asyncio.TimerHandle` que puede "
"utilizarse para cancelar la llamada de retorno."

#: ../../library/asyncio-eventloop.rst:289
msgid ""
"*callback* will be called exactly once.  If two callbacks are scheduled for "
"exactly the same time, the order in which they are called is undefined."
msgstr ""
"Se llamará *callback* exactamente una vez.  Si dos llamadas de retorno están "
"programadas exactamente para la misma hora, el orden en el que se llaman es "
"indefinido."

#: ../../library/asyncio-eventloop.rst:293
msgid ""
"The optional positional *args* will be passed to the callback when it is "
"called. If you want the callback to be called with keyword arguments use :"
"func:`functools.partial`."
msgstr ""
"Los *args* posicionales opcionales se pasarán a la llamada de retorno cuando "
"sea invocada. Si desea que la llamada de retorno se ejecute con argumentos "
"de palabra clave, utilice :func:`functools.partial`."

#: ../../library/asyncio-eventloop.rst:297
msgid ""
"An optional keyword-only *context* argument allows specifying a custom :"
"class:`contextvars.Context` for the *callback* to run in. The current "
"context is used when no *context* is provided."
msgstr ""
"Un argumento opcional *context* permite especificar un :class:`contextvars."
"Context` personalizado para que se ejecute la *callback*. El contexto actual "
"se utiliza cuando no se proporciona *context*."

#: ../../library/asyncio-eventloop.rst:305
msgid ""
"In Python 3.7 and earlier with the default event loop implementation, the "
"*delay* could not exceed one day. This has been fixed in Python 3.8."
msgstr ""
"En Python 3.7 y anteriores con la implementación de bucle de eventos por "
"defecto, el *retraso* no podía exceder de un día. Esto se ha corregido en "
"Python 3.8."

#: ../../library/asyncio-eventloop.rst:312
msgid ""
"Schedule *callback* to be called at the given absolute timestamp *when* (an "
"int or a float), using the same time reference as :meth:`loop.time`."
msgstr ""
"Programar *callback* para ser llamado en la fecha y hora absolutas dadas "
"*when* (un int o un float), utilizando la misma referencia de tiempo que :"
"meth:`loop.time`."

#: ../../library/asyncio-eventloop.rst:316
msgid "This method's behavior is the same as :meth:`call_later`."
msgstr "El comportamiento de este método es el mismo que :meth:`call_later`."

#: ../../library/asyncio-eventloop.rst:325
msgid ""
"In Python 3.7 and earlier with the default event loop implementation, the "
"difference between *when* and the current time could not exceed one day.  "
"This has been fixed in Python 3.8."
msgstr ""
"En Python 3.7 y anteriores con la implementación por defecto del bucle de "
"eventos, la diferencia entre *cuando* y la hora actual no podía exceder de "
"un día.  Esto se ha corregido en Python 3.8."

#: ../../library/asyncio-eventloop.rst:332
msgid ""
"Return the current time, as a :class:`float` value, according to the event "
"loop's internal monotonic clock."
msgstr ""
"Devuelve la hora actual, como valor de :class:`float`, según el reloj "
"monotónico interno del bucle de eventos."

#: ../../library/asyncio-eventloop.rst:336
msgid ""
"In Python 3.7 and earlier timeouts (relative *delay* or absolute *when*) "
"should not exceed one day.  This has been fixed in Python 3.8."
msgstr ""
"En Python 3.7 y anteriores los tiempos de espera (relativos *delay* o "
"absolutos *when*) no deberían exceder un día.  Esto se ha corregido en "
"Python 3.8."

#: ../../library/asyncio-eventloop.rst:342
msgid "The :func:`asyncio.sleep` function."
msgstr "La función :func:`asyncio.sleep`."

#: ../../library/asyncio-eventloop.rst:346
msgid "Creating Futures and Tasks"
msgstr "Creación de futuros y tareas"

#: ../../library/asyncio-eventloop.rst:350
msgid "Create an :class:`asyncio.Future` object attached to the event loop."
msgstr "Crear un objeto :class:`asyncio.Future` adjunto al bucle de eventos."

#: ../../library/asyncio-eventloop.rst:352
msgid ""
"This is the preferred way to create Futures in asyncio. This lets third-"
"party event loops provide alternative implementations of the Future object "
"(with better performance or instrumentation)."
msgstr ""
"Esta es la forma preferida de crear Futuros en asyncio. Esto permite que los "
"bucles de eventos de terceros proporcionen implementaciones alternativas del "
"objeto Futuro (con mejor rendimiento o instrumentación)."

#: ../../library/asyncio-eventloop.rst:360
msgid ""
"Schedule the execution of :ref:`coroutine <coroutine>` *coro*. Return a :"
"class:`Task` object."
msgstr ""
"Programar la ejecución de :ref:`coroutine <coroutine>` *coro*. Devuelve un "
"objeto :class:`Task`."

#: ../../library/asyncio-eventloop.rst:363
msgid ""
"Third-party event loops can use their own subclass of :class:`Task` for "
"interoperability. In this case, the result type is a subclass of :class:"
"`Task`."
msgstr ""
"Los bucles de eventos de terceros pueden utilizar su propia subclase de :"
"class:`Task` para la interoperabilidad. En este caso, el tipo de resultado "
"es una subclase de :class:`Task`."

#: ../../library/asyncio-eventloop.rst:367
msgid ""
"If the *name* argument is provided and not ``None``, it is set as the name "
"of the task using :meth:`Task.set_name`."
msgstr ""
"Si se proporciona el argumento *nombre* y no ``None``, se establece como el "
"nombre de la tarea utilizando :meth:`Task.set_name`."

#: ../../library/asyncio-eventloop.rst:370
msgid ""
"An optional keyword-only *context* argument allows specifying a custom :"
"class:`contextvars.Context` for the *coro* to run in. The current context "
"copy is created when no *context* is provided."
msgstr ""
"Un argumento opcional *context* de sólo palabra clave permite especificar "
"un :class:`contextvars.Context` personalizado para que se ejecute el *coro*. "
"La copia del contexto actual se crea cuando no se proporciona *context*."

#: ../../library/asyncio-eventloop.rst:374
msgid "Added the *name* parameter."
msgstr "Añadido el parámetro *name*."

#: ../../library/asyncio-eventloop.rst:377
msgid "Added the *context* parameter."
msgstr "Añadido el parámetro *context*."

#: ../../library/asyncio-eventloop.rst:382
msgid "Set a task factory that will be used by :meth:`loop.create_task`."
msgstr ""
"Establecer una task factory que será utilizada por :meth:`loop.create_task`."

#: ../../library/asyncio-eventloop.rst:385
msgid ""
"If *factory* is ``None`` the default task factory will be set. Otherwise, "
"*factory* must be a *callable* with the signature matching ``(loop, coro, "
"context=None)``, where *loop* is a reference to the active event loop, and "
"*coro* is a coroutine object.  The callable must return a :class:`asyncio."
"Future`-compatible object."
msgstr ""
"Si *factory* es ``None`` se establecerá la task factory por defecto. De lo "
"contrario, *factory* debe ser un *callable* con la firma que coincida con "
"``(loop, coro, context=None)``, donde *loop* es una referencia al bucle de "
"eventos activo, y *coro* es un objeto corrutina.  La llamada debe devolver "
"un objeto compatible con :class:`asyncio.Future`."

#: ../../library/asyncio-eventloop.rst:393
msgid "Return a task factory or ``None`` if the default one is in use."
msgstr "Devuelve una task factory o ``None`` si está en uso la predeterminada."

#: ../../library/asyncio-eventloop.rst:397
msgid "Opening network connections"
msgstr "Abrir conexiones de red"

#: ../../library/asyncio-eventloop.rst:409
msgid ""
"Open a streaming transport connection to a given address specified by *host* "
"and *port*."
msgstr ""
"Abre una conexión de transporte de flujo a una dirección dada especificada "
"por *host* y *port*."

#: ../../library/asyncio-eventloop.rst:412
msgid ""
"The socket family can be either :py:const:`~socket.AF_INET` or :py:const:"
"`~socket.AF_INET6` depending on *host* (or the *family* argument, if "
"provided)."
msgstr ""
"La familia de sockets puede ser :py:const:`~socket.AF_INET` o :py:const:"
"`~socket.AF_INET6` dependiendo del *host* (o del argumento *family*, si se "
"proporciona)."

#: ../../library/asyncio-eventloop.rst:416
msgid "The socket type will be :py:const:`~socket.SOCK_STREAM`."
msgstr "El tipo de socket será :py:const:`~socket.SOCK_STREAM`."

#: ../../library/asyncio-eventloop.rst:418
#: ../../library/asyncio-eventloop.rst:1195
#: ../../library/asyncio-eventloop.rst:1212
msgid ""
"*protocol_factory* must be a callable returning an :ref:`asyncio protocol "
"<asyncio-protocol>` implementation."
msgstr ""
"*protocol_factory* debe ser un callable que devuelva una implementación de :"
"ref:`protocolo asyncio <asyncio-protocol>`."

#: ../../library/asyncio-eventloop.rst:421
msgid ""
"This method will try to establish the connection in the background. When "
"successful, it returns a ``(transport, protocol)`` pair."
msgstr ""
"Este método intentará establecer la conexión en segundo plano. Si tiene "
"éxito, devuelve un par ``(transport, protocol)``."

#: ../../library/asyncio-eventloop.rst:424
msgid "The chronological synopsis of the underlying operation is as follows:"
msgstr "La sinopsis cronológica de la operación subyacente es la siguiente:"

#: ../../library/asyncio-eventloop.rst:426
msgid ""
"The connection is established and a :ref:`transport <asyncio-transport>` is "
"created for it."
msgstr ""
"Se establece la conexión y se crea un :ref:`transport <asyncio-transport>` "
"para ella."

#: ../../library/asyncio-eventloop.rst:429
msgid ""
"*protocol_factory* is called without arguments and is expected to return a :"
"ref:`protocol <asyncio-protocol>` instance."
msgstr ""
"*protocol_factory* se llama sin argumentos y se espera que devuelva una "
"instancia :ref:`protocol <asyncio-protocol>`."

#: ../../library/asyncio-eventloop.rst:432
msgid ""
"The protocol instance is coupled with the transport by calling its :meth:"
"`~BaseProtocol.connection_made` method."
msgstr ""
"La instancia del protocolo se acopla al transporte llamando a su método :"
"meth:`~BaseProtocol.connection_made`."

#: ../../library/asyncio-eventloop.rst:435
msgid "A ``(transport, protocol)`` tuple is returned on success."
msgstr "En caso de éxito, se devuelve una tupla ``(transport, protocol)``."

#: ../../library/asyncio-eventloop.rst:437
msgid ""
"The created transport is an implementation-dependent bidirectional stream."
msgstr ""
"El transporte creado es un flujo bidireccional que depende de la "
"implementación."

#: ../../library/asyncio-eventloop.rst:440
#: ../../library/asyncio-eventloop.rst:573
msgid "Other arguments:"
msgstr "Otros argumentos:"

#: ../../library/asyncio-eventloop.rst:442
msgid ""
"*ssl*: if given and not false, a SSL/TLS transport is created (by default a "
"plain TCP transport is created).  If *ssl* is a :class:`ssl.SSLContext` "
"object, this context is used to create the transport; if *ssl* is :const:"
"`True`, a default context returned from :func:`ssl.create_default_context` "
"is used."
msgstr ""
"*ssl*: si se da y no es false, se crea un transporte SSL/TLS (por defecto se "
"crea un transporte TCP plano).  Si *ssl* es un objeto :class:`ssl."
"SSLContext`, se utiliza este contexto para crear el transporte; si *ssl* es :"
"const:`True`, se utiliza un contexto por defecto devuelto por :func:`ssl."
"create_default_context`."

#: ../../library/asyncio-eventloop.rst:448
msgid ":ref:`SSL/TLS security considerations <ssl-security>`"
msgstr ":ref:`SSL/TLS security considerations <ssl-security>`"

#: ../../library/asyncio-eventloop.rst:450
msgid ""
"*server_hostname* sets or overrides the hostname that the target server's "
"certificate will be matched against.  Should only be passed if *ssl* is not "
"``None``.  By default the value of the *host* argument is used.  If *host* "
"is empty, there is no default and you must pass a value for "
"*server_hostname*.  If *server_hostname* is an empty string, hostname "
"matching is disabled (which is a serious security risk, allowing for "
"potential man-in-the-middle attacks)."
msgstr ""
"*server_hostname* establece o anula el nombre de host con el que se "
"comparará el certificado del servidor de destino.  Sólo debe pasarse si "
"*ssl* no es ``None``.  Por defecto se utiliza el valor del argumento "
"*host*.  Si *host* está vacío, no hay valor por defecto y debe pasar un "
"valor para *server_hostname*.  Si *nombre_de_servidor* es una cadena vacía, "
"la coincidencia de nombres de host está deshabilitada (lo que es un serio "
"riesgo de seguridad, permitiendo potenciales ataques man-in-the-middle)."

#: ../../library/asyncio-eventloop.rst:458
msgid ""
"*family*, *proto*, *flags* are the optional address family, protocol and "
"flags to be passed through to getaddrinfo() for *host* resolution. If given, "
"these should all be integers from the corresponding :mod:`socket` module "
"constants."
msgstr ""
"*family*, *proto*, *flags* son la familia de direcciones opcional, el "
"protocolo y las banderas que se pasarán a getaddrinfo() para la resolución "
"*host*. Si se dan, deben ser enteros de las constantes correspondientes del "
"módulo :mod:`socket`."

#: ../../library/asyncio-eventloop.rst:463
msgid ""
"*happy_eyeballs_delay*, if given, enables Happy Eyeballs for this "
"connection. It should be a floating-point number representing the amount of "
"time in seconds to wait for a connection attempt to complete, before "
"starting the next attempt in parallel. This is the \"Connection Attempt "
"Delay\" as defined in :rfc:`8305`. A sensible default value recommended by "
"the RFC is ``0.25`` (250 milliseconds)."
msgstr ""
"*happy_eyeballs_delay*, si se indica, habilita Happy Eyeballs para esta "
"conexión. Debe ser un número en coma flotante que represente la cantidad de "
"tiempo en segundos que hay que esperar a que se complete un intento de "
"conexión, antes de iniciar el siguiente intento en paralelo. Se trata del "
"\"Retraso en el intento de conexión\" definido en :rfc:`8305`. Un valor por "
"defecto razonable recomendado por la RFC es ``0.25`` (250 milisegundos)."

#: ../../library/asyncio-eventloop.rst:471
msgid ""
"*interleave* controls address reordering when a host name resolves to "
"multiple IP addresses. If ``0`` or unspecified, no reordering is done, and "
"addresses are tried in the order returned by :meth:`getaddrinfo`. If a "
"positive integer is specified, the addresses are interleaved by address "
"family, and the given integer is interpreted as \"First Address Family "
"Count\" as defined in :rfc:`8305`. The default is ``0`` if "
"*happy_eyeballs_delay* is not specified, and ``1`` if it is."
msgstr ""
"*interleave* controla la reordenación de direcciones cuando un nombre de "
"host resuelve múltiples direcciones IP. Si ``0`` o no se especifica, no se "
"realiza ninguna reordenación, y las direcciones se intentan en el orden "
"devuelto por :meth:`getaddrinfo`. Si se especifica un entero positivo, las "
"direcciones se intercalan por familia de direcciones, y el entero dado se "
"interpreta como \"First Address Family Count\" tal y como se define en :rfc:"
"`8305`. El valor por defecto es ``0`` si *happy_eyeballs_delay* no está "
"especificado, y ``1`` si lo está."

#: ../../library/asyncio-eventloop.rst:480
msgid ""
"*sock*, if given, should be an existing, already connected :class:`socket."
"socket` object to be used by the transport. If *sock* is given, none of "
"*host*, *port*, *family*, *proto*, *flags*, *happy_eyeballs_delay*, "
"*interleave* and *local_addr* should be specified."
msgstr ""
"*sock*, si se da, debe ser un objeto :class:`socket.socket` existente y ya "
"conectado para ser usado por el transporte. Si se da *sock*, no debe "
"especificarse *host*, *port*, *family*, *proto*, *flags*, "
"*happy_eyeballs_delay*, *interleave* y *local_addr*."

#: ../../library/asyncio-eventloop.rst:488
#: ../../library/asyncio-eventloop.rst:604
#: ../../library/asyncio-eventloop.rst:836
msgid ""
"The *sock* argument transfers ownership of the socket to the transport "
"created. To close the socket, call the transport's :meth:`~asyncio."
"BaseTransport.close` method."
msgstr ""
"El argumento *sock* transfiere la propiedad del socket al transporte creado. "
"Para cerrar el socket, llame al método :meth:`~asyncio.BaseTransport.close` "
"del transporte."

#: ../../library/asyncio-eventloop.rst:492
msgid ""
"*local_addr*, if given, is a ``(local_host, local_port)`` tuple used to bind "
"the socket locally.  The *local_host* and *local_port* are looked up using "
"``getaddrinfo()``, similarly to *host* and *port*."
msgstr ""
"*local_addr*, si se da, es una tupla ``(local_host, local_port)`` utilizada "
"para enlazar el socket localmente.  El *local_host* y *local_port* se buscan "
"usando ``getaddrinfo()``, de forma similar a *host* y *port*."

#: ../../library/asyncio-eventloop.rst:496
#: ../../library/asyncio-eventloop.rst:932
msgid ""
"*ssl_handshake_timeout* is (for a TLS connection) the time in seconds to "
"wait for the TLS handshake to complete before aborting the connection. "
"``60.0`` seconds if ``None`` (default)."
msgstr ""
"*ssl_handshake_timeout* es (para una conexión TLS) el tiempo en segundos que "
"se debe esperar a que se complete el handshake TLS antes de abortar la "
"conexión. ``60.0`` segundos si ``None`` (por defecto)."

#: ../../library/asyncio-eventloop.rst:500
#: ../../library/asyncio-eventloop.rst:751
#: ../../library/asyncio-eventloop.rst:847
#: ../../library/asyncio-eventloop.rst:936
msgid ""
"*ssl_shutdown_timeout* is the time in seconds to wait for the SSL shutdown "
"to complete before aborting the connection. ``30.0`` seconds if ``None`` "
"(default)."
msgstr ""
"*ssl_shutdown_timeout* es el tiempo en segundos que se debe esperar a que se "
"complete el apagado SSL antes de abortar la conexión. ``30.0`` segundos si "
"``None`` (por defecto)."

#: ../../library/asyncio-eventloop.rst:504
msgid ""
"*all_errors* determines what exceptions are raised when a connection cannot "
"be created. By default, only a single ``Exception`` is raised: the first "
"exception if there is only one or all errors have same message, or a single "
"``OSError`` with the error messages combined. When ``all_errors`` is "
"``True``, an ``ExceptionGroup`` will be raised containing all exceptions "
"(even if there is only one)."
msgstr ""
"*all_errors* determina qué excepciones se lanzan cuando no se puede crear "
"una conexión. Por defecto, sólo se lanza un único ``Exception``: la primera "
"excepción si sólo hay una o todos los errores tienen el mismo mensaje, o un "
"único ``OSError`` con los mensajes de error combinados. Cuando "
"``all_errors`` es ``True``, se lanzará un ``ExceptionGroup`` que contendrá "
"todas las excepciones (incluso si sólo hay una)."

#: ../../library/asyncio-eventloop.rst:514
#: ../../library/asyncio-eventloop.rst:763
msgid "Added support for SSL/TLS in :class:`ProactorEventLoop`."
msgstr ""
"Se ha añadido compatibilidad con SSL/TLS en :class:`ProactorEventLoop`."

#: ../../library/asyncio-eventloop.rst:518
msgid ""
"The socket option :ref:`socket.TCP_NODELAY <socket-unix-constants>` is set "
"by default for all TCP connections."
msgstr ""
"La opción de socket :ref:`socket.TCP_NODELAY <socket-unix-constants>` se "
"establece por defecto para todas las conexiones TCP."

#: ../../library/asyncio-eventloop.rst:523
#: ../../library/asyncio-eventloop.rst:857
msgid "Added the *ssl_handshake_timeout* parameter."
msgstr "Añadido el parámetro *ssl_handshake_timeout*."

#: ../../library/asyncio-eventloop.rst:527
msgid "Added the *happy_eyeballs_delay* and *interleave* parameters."
msgstr "Añadidos los parámetros *happy_eyeballs_delay* e *interleave*."

#: ../../library/asyncio-eventloop.rst:529
msgid ""
"Happy Eyeballs Algorithm: Success with Dual-Stack Hosts. When a server's "
"IPv4 path and protocol are working, but the server's IPv6 path and protocol "
"are not working, a dual-stack client application experiences significant "
"connection delay compared to an IPv4-only client.  This is undesirable "
"because it causes the dual-stack client to have a worse user experience.  "
"This document specifies requirements for algorithms that reduce this user-"
"visible delay and provides an algorithm."
msgstr ""
"Algoritmo de los globos oculares felices: Éxito con Hosts Dual-Stack. Cuando "
"la ruta y el protocolo IPv4 de un servidor funcionan, pero la ruta y el "
"protocolo IPv6 del servidor no funcionan, una aplicación cliente dual-stack "
"experimenta un retraso significativo en la conexión en comparación con un "
"cliente sólo IPv4.  Esto no es deseable porque hace que el cliente dual-"
"stack tenga una peor experiencia de usuario.  Este documento especifica los "
"requisitos para los algoritmos que reducen este retraso visible para el "
"usuario y proporciona un algoritmo."

#: ../../library/asyncio-eventloop.rst:538
msgid "For more information: https://datatracker.ietf.org/doc/html/rfc6555"
msgstr "Para más información: https://datatracker.ietf.org/doc/html/rfc6555"

#: ../../library/asyncio-eventloop.rst:542
#: ../../library/asyncio-eventloop.rst:668
#: ../../library/asyncio-eventloop.rst:777
#: ../../library/asyncio-eventloop.rst:813
#: ../../library/asyncio-eventloop.rst:861
#: ../../library/asyncio-eventloop.rst:944
msgid "Added the *ssl_shutdown_timeout* parameter."
msgstr "Añadido el parámetro *ssl_shutdown_timeout*."

#: ../../library/asyncio-eventloop.rst:544
msgid "*all_errors* was added."
msgstr "Se ha añadido *all_errors*."

#: ../../library/asyncio-eventloop.rst:549
msgid ""
"The :func:`open_connection` function is a high-level alternative API.  It "
"returns a pair of (:class:`StreamReader`, :class:`StreamWriter`) that can be "
"used directly in async/await code."
msgstr ""
"La función :func:`open_connection` es una API alternativa de alto nivel.  "
"Devuelve un par de (:class:`StreamReader`, :class:`StreamWriter`) que puede "
"utilizarse directamente en código async/await."

#: ../../library/asyncio-eventloop.rst:560
msgid "Create a datagram connection."
msgstr "Crear una conexión de datagramas."

#: ../../library/asyncio-eventloop.rst:562
msgid ""
"The socket family can be either :py:const:`~socket.AF_INET`, :py:const:"
"`~socket.AF_INET6`, or :py:const:`~socket.AF_UNIX`, depending on *host* (or "
"the *family* argument, if provided)."
msgstr ""
"La familia de sockets puede ser :py:const:`~socket.AF_INET`, :py:const:"
"`~socket.AF_INET6`, o :py:const:`~socket.AF_UNIX`, dependiendo del *host* (o "
"del argumento *family*, si se proporciona)."

#: ../../library/asyncio-eventloop.rst:566
msgid "The socket type will be :py:const:`~socket.SOCK_DGRAM`."
msgstr "El tipo de socket será :py:const:`~socket.SOCK_DGRAM`."

#: ../../library/asyncio-eventloop.rst:568
#: ../../library/asyncio-eventloop.rst:694
#: ../../library/asyncio-eventloop.rst:828
msgid ""
"*protocol_factory* must be a callable returning a :ref:`protocol <asyncio-"
"protocol>` implementation."
msgstr ""
"*protocol_factory* debe ser un callable que devuelva una implementación :ref:"
"`protocol <asyncio-protocol>`."

#: ../../library/asyncio-eventloop.rst:571
#: ../../library/asyncio-eventloop.rst:650
msgid "A tuple of ``(transport, protocol)`` is returned on success."
msgstr "En caso de éxito, se devuelve una tupla de ``(transport, protocol)``."

#: ../../library/asyncio-eventloop.rst:575
msgid ""
"*local_addr*, if given, is a ``(local_host, local_port)`` tuple used to bind "
"the socket locally.  The *local_host* and *local_port* are looked up using :"
"meth:`getaddrinfo`."
msgstr ""
"*local_addr*, si se da, es una tupla ``(local_host, local_port)`` utilizada "
"para enlazar el socket localmente.  El *local_host* y *local_port* se buscan "
"usando :meth:`getaddrinfo`."

#: ../../library/asyncio-eventloop.rst:579
msgid ""
"*remote_addr*, if given, is a ``(remote_host, remote_port)`` tuple used to "
"connect the socket to a remote address.  The *remote_host* and *remote_port* "
"are looked up using :meth:`getaddrinfo`."
msgstr ""
"*remote_addr*, si se da, es una tupla ``(remote_host, remote_port)`` "
"utilizada para conectar el socket a una dirección remota.  El *remote_host* "
"y *remote_port* se buscan usando :meth:`getaddrinfo`."

#: ../../library/asyncio-eventloop.rst:583
msgid ""
"*family*, *proto*, *flags* are the optional address family, protocol and "
"flags to be passed through to :meth:`getaddrinfo` for *host* resolution. If "
"given, these should all be integers from the corresponding :mod:`socket` "
"module constants."
msgstr ""
"*family*, *proto*, *flags* son la familia de direcciones opcional, el "
"protocolo y las banderas que se pasarán a :meth:`getaddrinfo` para la "
"resolución *host*. Si se dan, deben ser enteros de las constantes "
"correspondientes del módulo :mod:`socket`."

#: ../../library/asyncio-eventloop.rst:588
msgid ""
"*reuse_port* tells the kernel to allow this endpoint to be bound to the same "
"port as other existing endpoints are bound to, so long as they all set this "
"flag when being created. This option is not supported on Windows and some "
"Unixes. If the :ref:`socket.SO_REUSEPORT <socket-unix-constants>` constant "
"is not defined then this capability is unsupported."
msgstr ""
"*reuse_port* le dice al kernel que permita que este endpoint sea enlazado al "
"mismo puerto al que otros endpoints existentes están enlazados, siempre y "
"cuando todos ellos establezcan esta bandera cuando son creados. Esta opción "
"no está soportada en Windows y algunos Unixes. Si la constante :ref:`socket."
"SO_REUSEPORT <socket-unix-constants>` no está definida, esta capacidad no "
"está soportada."

#: ../../library/asyncio-eventloop.rst:594
msgid ""
"*allow_broadcast* tells the kernel to allow this endpoint to send messages "
"to the broadcast address."
msgstr ""
"*allow_broadcast* indica al núcleo que permita a este punto final enviar "
"mensajes a la dirección de difusión."

#: ../../library/asyncio-eventloop.rst:597
msgid ""
"*sock* can optionally be specified in order to use a preexisting, already "
"connected, :class:`socket.socket` object to be used by the transport. If "
"specified, *local_addr* and *remote_addr* should be omitted (must be :const:"
"`None`)."
msgstr ""
"*sock* puede especificarse opcionalmente para utilizar un objeto :class:"
"`socket.socket` preexistente, ya conectado, que será utilizado por el "
"transporte. Si se especifica, *local_addr* y *remote_addr* deben omitirse "
"(deben ser :const:`None`)."

#: ../../library/asyncio-eventloop.rst:608
msgid ""
"See :ref:`UDP echo client protocol <asyncio-udp-echo-client-protocol>` and :"
"ref:`UDP echo server protocol <asyncio-udp-echo-server-protocol>` examples."
msgstr ""
"Consulte los ejemplos :ref:`UDP echo client protocol <asyncio-udp-echo-"
"client-protocol>` y :ref:`UDP echo server protocol <asyncio-udp-echo-server-"
"protocol>`."

#: ../../library/asyncio-eventloop.rst:611
msgid ""
"The *family*, *proto*, *flags*, *reuse_address*, *reuse_port*, "
"*allow_broadcast*, and *sock* parameters were added."
msgstr ""
"Se han añadido los parámetros *family*, *proto*, *flags*, *reuse_address*, "
"*reuse_port*, *allow_broadcast* y *sock*."

#: ../../library/asyncio-eventloop.rst:615
msgid "Added support for Windows."
msgstr "Se ha añadido compatibilidad con Windows."

#: ../../library/asyncio-eventloop.rst:618
msgid ""
"The *reuse_address* parameter is no longer supported, as using :ref:`socket."
"SO_REUSEADDR <socket-unix-constants>` poses a significant security concern "
"for UDP. Explicitly passing ``reuse_address=True`` will raise an exception."
msgstr ""
"El parámetro *reuse_address* ya no está soportado, ya que el uso de :ref:"
"`socket.SO_REUSEADDR <socket-unix-constants>` plantea un problema de "
"seguridad importante para UDP. Si se pasa explícitamente "
"``reuse_address=True`` se producirá una excepción."

#: ../../library/asyncio-eventloop.rst:624
msgid ""
"When multiple processes with differing UIDs assign sockets to an identical "
"UDP socket address with ``SO_REUSEADDR``, incoming packets can become "
"randomly distributed among the sockets."
msgstr ""
"Cuando varios procesos con UID diferentes asignan sockets a una dirección de "
"socket UDP idéntica con ``SO_REUSEADDR``, los paquetes entrantes pueden "
"distribuirse aleatoriamente entre los sockets."

#: ../../library/asyncio-eventloop.rst:628
msgid ""
"For supported platforms, *reuse_port* can be used as a replacement for "
"similar functionality. With *reuse_port*, :ref:`socket.SO_REUSEPORT <socket-"
"unix-constants>` is used instead, which specifically prevents processes with "
"differing UIDs from assigning sockets to the same socket address."
msgstr ""
"Para las plataformas soportadas, *reuse_port* puede utilizarse como "
"sustituto de una funcionalidad similar. Con *reuse_port*, en su lugar se "
"utiliza :ref:`socket.SO_REUSEPORT <socket-unix-constants>`, que impide "
"específicamente que procesos con UIDs diferentes asignen sockets a la misma "
"dirección de socket."

#: ../../library/asyncio-eventloop.rst:635
msgid ""
"The *reuse_address* parameter, disabled since Python 3.8.1, 3.7.6 and "
"3.6.10, has been entirely removed."
msgstr ""
"El parámetro *reuse_address*, desactivado desde Python 3.8.1, 3.7.6 y "
"3.6.10, se ha eliminado por completo."

#: ../../library/asyncio-eventloop.rst:645
msgid "Create a Unix connection."
msgstr "Crear una conexión Unix."

#: ../../library/asyncio-eventloop.rst:647
msgid ""
"The socket family will be :py:const:`~socket.AF_UNIX`; socket type will be :"
"py:const:`~socket.SOCK_STREAM`."
msgstr ""
"La familia de sockets será :py:const:`~socket.AF_UNIX`; el tipo de socket "
"será :py:const:`~socket.SOCK_STREAM`."

#: ../../library/asyncio-eventloop.rst:652
msgid ""
"*path* is the name of a Unix domain socket and is required, unless a *sock* "
"parameter is specified.  Abstract Unix sockets, :class:`str`, :class:"
"`bytes`, and :class:`~pathlib.Path` paths are supported."
msgstr ""
"*ruta* es el nombre de un socket de dominio Unix y es obligatorio, a menos "
"que se especifique un parámetro *sock*.  Se admiten los sockets Unix "
"abstractos, las rutas :class:`str`, :class:`bytes` y :class:`~pathlib.Path`."

#: ../../library/asyncio-eventloop.rst:657
msgid ""
"See the documentation of the :meth:`loop.create_connection` method for "
"information about arguments to this method."
msgstr ""
"Consulte la documentación del método :meth:`loop.create_connection` para "
"obtener información sobre los argumentos de este método."

#: ../../library/asyncio-eventloop.rst:660
#: ../../library/asyncio-eventloop.rst:804
#: ../../library/asyncio-eventloop.rst:1265
#: ../../library/asyncio-eventloop.rst:1778
#: ../../library/asyncio-eventloop.rst:1785
msgid "Availability"
msgstr "Disponibilidad"

#: ../../library/asyncio-eventloop.rst:662
msgid ""
"Added the *ssl_handshake_timeout* parameter. The *path* parameter can now be "
"a :term:`path-like object`."
msgstr ""
"Añadido el parámetro *ssl_handshake_timeout*. El parámetro *path* ahora "
"puede ser un objeto :term:`path-like object`."

#: ../../library/asyncio-eventloop.rst:672
msgid "Creating network servers"
msgstr "Creación de servidores de red"

#: ../../library/asyncio-eventloop.rst:687
msgid ""
"Create a TCP server (socket type :const:`~socket.SOCK_STREAM`) listening on "
"*port* of the *host* address."
msgstr ""
"Crear un servidor TCP (tipo de socket :const:`~socket.SOCK_STREAM`) "
"escuchando en el *puerto* de la dirección *host*."

#: ../../library/asyncio-eventloop.rst:690
msgid "Returns a :class:`Server` object."
msgstr "Devuelve un objeto :class:`Server`."

#: ../../library/asyncio-eventloop.rst:692
msgid "Arguments:"
msgstr "Argumentos:"

#: ../../library/asyncio-eventloop.rst:697
msgid ""
"The *host* parameter can be set to several types which determine where the "
"server would be listening:"
msgstr ""
"El parámetro *host* puede establecerse en varios tipos que determinan dónde "
"escuchará el servidor:"

#: ../../library/asyncio-eventloop.rst:700
msgid ""
"If *host* is a string, the TCP server is bound to a single network interface "
"specified by *host*."
msgstr ""
"Si *host* es una cadena, el servidor TCP está vinculado a una única interfaz "
"de red especificada por *host*."

#: ../../library/asyncio-eventloop.rst:703
msgid ""
"If *host* is a sequence of strings, the TCP server is bound to all network "
"interfaces specified by the sequence."
msgstr ""
"Si *host* es una secuencia de cadenas, el servidor TCP está vinculado a "
"todas las interfaces de red especificadas por la secuencia."

#: ../../library/asyncio-eventloop.rst:706
msgid ""
"If *host* is an empty string or ``None``, all interfaces are assumed and a "
"list of multiple sockets will be returned (most likely one for IPv4 and "
"another one for IPv6)."
msgstr ""
"Si *host* es una cadena vacía o ``None``, se asumen todas las interfaces y "
"se devolverá una lista de múltiples sockets (probablemente uno para IPv4 y "
"otro para IPv6)."

#: ../../library/asyncio-eventloop.rst:710
msgid ""
"The *port* parameter can be set to specify which port the server should "
"listen on. If ``0`` or ``None`` (the default), a random unused port will be "
"selected (note that if *host* resolves to multiple network interfaces, a "
"different random port will be selected for each interface)."
msgstr ""
"El parámetro *port* puede establecerse para especificar en qué puerto debe "
"escuchar el servidor. Si ``0`` o ``None`` (por defecto), se seleccionará un "
"puerto aleatorio no utilizado (tenga en cuenta que si *host* resuelve a "
"múltiples interfaces de red, se seleccionará un puerto aleatorio diferente "
"para cada interfaz)."

#: ../../library/asyncio-eventloop.rst:715
msgid ""
"*family* can be set to either :const:`socket.AF_INET` or :const:`~socket."
"AF_INET6` to force the socket to use IPv4 or IPv6. If not set, the *family* "
"will be determined from host name (defaults to :const:`~socket.AF_UNSPEC`)."
msgstr ""
"*family* puede definirse como :const:`socket.AF_INET` o :const:`~socket."
"AF_INET6` para forzar al socket a usar IPv4 o IPv6. Si no se establece, "
"*family* se determinará a partir del nombre de host (por defecto :const:"
"`~socket.AF_UNSPEC`)."

#: ../../library/asyncio-eventloop.rst:720
msgid "*flags* is a bitmask for :meth:`getaddrinfo`."
msgstr "*flags* es una máscara de bits para :meth:`getaddrinfo`."

#: ../../library/asyncio-eventloop.rst:722
msgid ""
"*sock* can optionally be specified in order to use a preexisting socket "
"object. If specified, *host* and *port* must not be specified."
msgstr ""
"*sock* puede especificarse opcionalmente para utilizar un objeto socket "
"preexistente. Si se especifica, *host* y *port* no deben especificarse."

#: ../../library/asyncio-eventloop.rst:727
msgid ""
"The *sock* argument transfers ownership of the socket to the server created. "
"To close the socket, call the server's :meth:`~asyncio.Server.close` method."
msgstr ""
"El argumento *sock* transfiere la propiedad del socket al servidor creado. "
"Para cerrar el socket, llame al método :meth:`~asyncio.Server.close` del "
"servidor."

#: ../../library/asyncio-eventloop.rst:731
msgid ""
"*backlog* is the maximum number of queued connections passed to :meth:"
"`~socket.socket.listen` (defaults to 100)."
msgstr ""
"*backlog* es el número máximo de conexiones en cola pasadas a :meth:`~socket."
"socket.listen` (por defecto 100)."

#: ../../library/asyncio-eventloop.rst:734
msgid ""
"*ssl* can be set to an :class:`~ssl.SSLContext` instance to enable TLS over "
"the accepted connections."
msgstr ""
"*ssl* puede establecerse en una instancia de :class:`~ssl.SSLContext` para "
"habilitar TLS en las conexiones aceptadas."

#: ../../library/asyncio-eventloop.rst:737
msgid ""
"*reuse_address* tells the kernel to reuse a local socket in ``TIME_WAIT`` "
"state, without waiting for its natural timeout to expire. If not specified "
"will automatically be set to ``True`` on Unix."
msgstr ""
"*reuse_address* indica al núcleo que reutilice un socket local en estado "
"``TIME_WAIT``, sin esperar a que expire su tiempo de espera natural. Si no "
"se especifica se establecerá automáticamente a ``True`` en Unix."

#: ../../library/asyncio-eventloop.rst:742
msgid ""
"*reuse_port* tells the kernel to allow this endpoint to be bound to the same "
"port as other existing endpoints are bound to, so long as they all set this "
"flag when being created. This option is not supported on Windows."
msgstr ""
"*reuse_port* le dice al kernel que permita que este endpoint sea enlazado al "
"mismo puerto al que otros endpoints existentes están enlazados, siempre y "
"cuando todos ellos establezcan esta bandera cuando son creados. Esta opción "
"no es compatible con Windows."

#: ../../library/asyncio-eventloop.rst:747
msgid ""
"*ssl_handshake_timeout* is (for a TLS server) the time in seconds to wait "
"for the TLS handshake to complete before aborting the connection. ``60.0`` "
"seconds if ``None`` (default)."
msgstr ""
"*ssl_handshake_timeout* es (para un servidor TLS) el tiempo en segundos que "
"se debe esperar a que se complete el handshake TLS antes de abortar la "
"conexión. ``60.0`` segundos si ``None`` (por defecto)."

#: ../../library/asyncio-eventloop.rst:755
msgid ""
"*start_serving* set to ``True`` (the default) causes the created server to "
"start accepting connections immediately.  When set to ``False``, the user "
"should await on :meth:`Server.start_serving` or :meth:`Server.serve_forever` "
"to make the server to start accepting connections."
msgstr ""
"*start_serving* establecido en ``True`` (por defecto) hace que el servidor "
"creado empiece a aceptar conexiones inmediatamente.  Cuando se establece en "
"``False``, el usuario debe esperar en :meth:`Server.start_serving` o :meth:"
"`Server.serve_forever` para que el servidor comience a aceptar conexiones."

#: ../../library/asyncio-eventloop.rst:767
msgid "The *host* parameter can be a sequence of strings."
msgstr "El parámetro *host* puede ser una secuencia de cadenas."

#: ../../library/asyncio-eventloop.rst:771
msgid ""
"Added *ssl_handshake_timeout* and *start_serving* parameters. The socket "
"option :ref:`socket.TCP_NODELAY <socket-unix-constants>` is set by default "
"for all TCP connections."
msgstr ""
"Añadidos los parámetros *ssl_handshake_timeout* y *start_serving*. La opción "
"de socket :ref:`socket.TCP_NODELAY <socket-unix-constants>` se establece por "
"defecto para todas las conexiones TCP."

#: ../../library/asyncio-eventloop.rst:781
msgid ""
"The :func:`start_server` function is a higher-level alternative API that "
"returns a pair of :class:`StreamReader` and :class:`StreamWriter` that can "
"be used in an async/await code."
msgstr ""
"La función :func:`start_server` es una API alternativa de nivel superior que "
"devuelve un par de :class:`StreamReader` y :class:`StreamWriter` que pueden "
"utilizarse en un código async/await."

#: ../../library/asyncio-eventloop.rst:793
msgid ""
"Similar to :meth:`loop.create_server` but works with the :py:const:`~socket."
"AF_UNIX` socket family."
msgstr ""
"Similar a :meth:`loop.create_server` pero funciona con la familia de "
"sockets :py:const:`~socket.AF_UNIX`."

#: ../../library/asyncio-eventloop.rst:796
msgid ""
"*path* is the name of a Unix domain socket, and is required, unless a *sock* "
"argument is provided.  Abstract Unix sockets, :class:`str`, :class:`bytes`, "
"and :class:`~pathlib.Path` paths are supported."
msgstr ""
"*path* es el nombre de un socket de dominio Unix, y es obligatorio, a menos "
"que se proporcione un argumento *sock*.  Se admiten los sockets Unix "
"abstractos, las rutas :class:`str`, :class:`bytes` y :class:`~pathlib.Path`."

#: ../../library/asyncio-eventloop.rst:801
msgid ""
"See the documentation of the :meth:`loop.create_server` method for "
"information about arguments to this method."
msgstr ""
"Consulte la documentación del método :meth:`loop.create_server` para obtener "
"información sobre los argumentos de este método."

#: ../../library/asyncio-eventloop.rst:808
msgid ""
"Added the *ssl_handshake_timeout* and *start_serving* parameters. The *path* "
"parameter can now be a :class:`~pathlib.Path` object."
msgstr ""
"Añadidos los parámetros *ssl_handshake_timeout* y *start_serving*. El "
"parámetro *path* ahora puede ser un objeto :class:`~pathlib.Path`."

#: ../../library/asyncio-eventloop.rst:821
msgid "Wrap an already accepted connection into a transport/protocol pair."
msgstr "Envuelve una conexión ya aceptada en un par transporte/protocolo."

#: ../../library/asyncio-eventloop.rst:823
msgid ""
"This method can be used by servers that accept connections outside of "
"asyncio but that use asyncio to handle them."
msgstr ""
"Este método puede ser utilizado por servidores que aceptan conexiones fuera "
"de asyncio pero que utilizan asyncio para gestionarlas."

#: ../../library/asyncio-eventloop.rst:826
#: ../../library/asyncio-eventloop.rst:918
msgid "Parameters:"
msgstr "Parámetros:"

#: ../../library/asyncio-eventloop.rst:831
msgid ""
"*sock* is a preexisting socket object returned from :meth:`socket.accept "
"<socket.socket.accept>`."
msgstr ""
"*sock* es un objeto socket preexistente devuelto por :meth:`socket.accept "
"<socket.socket.accept>`."

#: ../../library/asyncio-eventloop.rst:840
msgid ""
"*ssl* can be set to an :class:`~ssl.SSLContext` to enable SSL over the "
"accepted connections."
msgstr ""
"*ssl* puede establecerse en :class:`~ssl.SSLContext` para habilitar SSL en "
"las conexiones aceptadas."

#: ../../library/asyncio-eventloop.rst:843
msgid ""
"*ssl_handshake_timeout* is (for an SSL connection) the time in seconds to "
"wait for the SSL handshake to complete before aborting the connection. "
"``60.0`` seconds if ``None`` (default)."
msgstr ""
"*ssl_handshake_timeout* es (para una conexión SSL) el tiempo en segundos que "
"se debe esperar a que se complete el handshake SSL antes de abortar la "
"conexión. ``60.0`` segundos si ``None`` (por defecto)."

#: ../../library/asyncio-eventloop.rst:851
msgid "Returns a ``(transport, protocol)`` pair."
msgstr "Devuelve un par ``(transport, protocol)``."

#: ../../library/asyncio-eventloop.rst:865
msgid "Transferring files"
msgstr "Transferencia de archivos"

#: ../../library/asyncio-eventloop.rst:871
msgid ""
"Send a *file* over a *transport*.  Return the total number of bytes sent."
msgstr ""
"Envía un *fichero* a través de un *transporte*.  Devuelve el número total de "
"bytes enviados."

#: ../../library/asyncio-eventloop.rst:874
msgid "The method uses high-performance :meth:`os.sendfile` if available."
msgstr ""
"El método utiliza :meth:`os.sendfile` de alto rendimiento si está disponible."

#: ../../library/asyncio-eventloop.rst:876
msgid "*file* must be a regular file object opened in binary mode."
msgstr "*fichero* debe ser un objeto fichero normal abierto en modo binario."

#: ../../library/asyncio-eventloop.rst:878
#: ../../library/asyncio-eventloop.rst:1139
msgid ""
"*offset* tells from where to start reading the file. If specified, *count* "
"is the total number of bytes to transmit as opposed to sending the file "
"until EOF is reached. File position is always updated, even when this method "
"raises an error, and :meth:`file.tell() <io.IOBase.tell>` can be used to "
"obtain the actual number of bytes sent."
msgstr ""
"*offset* indica desde dónde empezar a leer el fichero. Si se especifica, "
"*count* es el número total de bytes a transmitir en lugar de enviar el "
"fichero hasta alcanzar EOF. La posición del fichero siempre se actualiza, "
"incluso cuando este método produce un error, y :meth:`file.tell() <io.IOBase."
"tell>` puede utilizarse para obtener el número real de bytes enviados."

#: ../../library/asyncio-eventloop.rst:885
msgid ""
"*fallback* set to ``True`` makes asyncio to manually read and send the file "
"when the platform does not support the sendfile system call (e.g. Windows or "
"SSL socket on Unix)."
msgstr ""
"*fallback* establecido en ``True`` hace que asyncio lea y envíe manualmente "
"el archivo cuando la plataforma no soporta la llamada al sistema sendfile "
"(por ejemplo, Windows o socket SSL en Unix)."

#: ../../library/asyncio-eventloop.rst:889
msgid ""
"Raise :exc:`SendfileNotAvailableError` if the system does not support the "
"*sendfile* syscall and *fallback* is ``False``."
msgstr ""
"Lanza :exc:`SendfileNotAvailableError` si el sistema no soporta la llamada "
"syscall *sendfile* y *fallback* es ``False``."

#: ../../library/asyncio-eventloop.rst:896
msgid "TLS Upgrade"
msgstr "Actualización de TLS"

#: ../../library/asyncio-eventloop.rst:904
msgid "Upgrade an existing transport-based connection to TLS."
msgstr "Actualizar una conexión basada en transporte existente a TLS."

#: ../../library/asyncio-eventloop.rst:906
msgid ""
"Create a TLS coder/decoder instance and insert it between the *transport* "
"and the *protocol*. The coder/decoder implements both *transport*-facing "
"protocol and *protocol*-facing transport."
msgstr ""
"Crear una instancia de codificador/decodificador TLS e insertarla entre el "
"*transporte* y el *protocolo*. El codificador/decodificador implementa tanto "
"el protocolo orientado al *transporte* como el transporte orientado al "
"*protocolo*."

#: ../../library/asyncio-eventloop.rst:910
msgid ""
"Return the created two-interface instance. After *await*, the *protocol* "
"must stop using the original *transport* and communicate with the returned "
"object only because the coder caches *protocol*-side data and sporadically "
"exchanges extra TLS session packets with *transport*."
msgstr ""
"Devuelve la instancia de dos interfaces creada. Después de *await*, el "
"*protocolo* debe dejar de usar el *transport* original y comunicarse con el "
"objeto devuelto sólo porque el codificador almacena en caché datos del lado "
"del *protocolo* e intercambia esporádicamente paquetes de sesión TLS extra "
"con el *transport*."

#: ../../library/asyncio-eventloop.rst:915
msgid ""
"In some situations (e.g. when the passed transport is already closing) this "
"may return ``None``."
msgstr ""
"En algunas situaciones (por ejemplo, cuando el transporte pasado ya se está "
"cerrando) puede devolver ``None``."

#: ../../library/asyncio-eventloop.rst:920
msgid ""
"*transport* and *protocol* instances that methods like :meth:`~loop."
"create_server` and :meth:`~loop.create_connection` return."
msgstr ""
"instancias *transport* y *protocol* que devuelven métodos como :meth:`~loop."
"create_server` y :meth:`~loop.create_connection`."

#: ../../library/asyncio-eventloop.rst:924
msgid "*sslcontext*: a configured instance of :class:`~ssl.SSLContext`."
msgstr "*sslcontext*: una instancia configurada de :class:`~ssl.SSLContext`."

#: ../../library/asyncio-eventloop.rst:926
msgid ""
"*server_side* pass ``True`` when a server-side connection is being upgraded "
"(like the one created by :meth:`~loop.create_server`)."
msgstr ""
"*server_side* pasa ``True`` cuando se está actualizando una conexión del "
"lado del servidor (como la creada por :meth:`~loop.create_server`)."

#: ../../library/asyncio-eventloop.rst:929
msgid ""
"*server_hostname*: sets or overrides the host name that the target server's "
"certificate will be matched against."
msgstr ""
"*server_hostname*: establece o anula el nombre de host con el que se "
"comparará el certificado del servidor de destino."

#: ../../library/asyncio-eventloop.rst:949
msgid "Watching file descriptors"
msgstr "Vigilancia de descriptores de archivos"

#: ../../library/asyncio-eventloop.rst:953
msgid ""
"Start monitoring the *fd* file descriptor for read availability and invoke "
"*callback* with the specified arguments once *fd* is available for reading."
msgstr ""
"Comienza a monitorizar el descriptor de fichero *fd* para disponibilidad de "
"lectura e invoca *callback* con los argumentos especificados una vez que "
"*fd* está disponible para lectura."

#: ../../library/asyncio-eventloop.rst:957
#: ../../library/asyncio-eventloop.rst:971
msgid ""
"Any preexisting callback registered for *fd* is cancelled and replaced by "
"*callback*."
msgstr ""
"Cualquier llamada de retorno preexistente registrada para *fd* es cancelada "
"y reemplazada por *callback*."

#: ../../library/asyncio-eventloop.rst:962
msgid ""
"Stop monitoring the *fd* file descriptor for read availability. Returns "
"``True`` if *fd* was previously being monitored for reads."
msgstr ""
"Deja de monitorizar el descriptor de fichero *fd* para disponibilidad de "
"lectura. Devuelve ``True`` si *fd* estaba siendo monitorizado previamente "
"para lecturas."

#: ../../library/asyncio-eventloop.rst:967
msgid ""
"Start monitoring the *fd* file descriptor for write availability and invoke "
"*callback* with the specified arguments once *fd* is available for writing."
msgstr ""
"Comienza a monitorizar el descriptor de fichero *fd* para disponibilidad de "
"escritura e invoca *callback* con los argumentos especificados una vez que "
"*fd* está disponible para escribir."

#: ../../library/asyncio-eventloop.rst:974
#: ../../library/asyncio-eventloop.rst:1252
msgid ""
"Use :func:`functools.partial` :ref:`to pass keyword arguments <asyncio-pass-"
"keywords>` to *callback*."
msgstr ""
"Utilice :func:`functools.partial`:ref:` para pasar argumentos de palabra "
"clave <asyncio-pass-keywords>` a *callback*."

#: ../../library/asyncio-eventloop.rst:979
msgid ""
"Stop monitoring the *fd* file descriptor for write availability. Returns "
"``True`` if *fd* was previously being monitored for writes."
msgstr ""
"Deja de monitorizar el descriptor de fichero *fd* para disponibilidad de "
"escritura. Devuelve ``True`` si *fd* estaba siendo monitorizado previamente "
"para escrituras."

#: ../../library/asyncio-eventloop.rst:982
msgid ""
"See also :ref:`Platform Support <asyncio-platform-support>` section for some "
"limitations of these methods."
msgstr ""
"Consulte también la sección :ref:`Platform Support  <asyncio-platform-"
"support>` para conocer algunas limitaciones de estos métodos."

#: ../../library/asyncio-eventloop.rst:987
msgid "Working with socket objects directly"
msgstr "Trabajar directamente con objetos socket"

#: ../../library/asyncio-eventloop.rst:989
msgid ""
"In general, protocol implementations that use transport-based APIs such as :"
"meth:`loop.create_connection` and :meth:`loop.create_server` are faster than "
"implementations that work with sockets directly. However, there are some use "
"cases when performance is not critical, and working with :class:`~socket."
"socket` objects directly is more convenient."
msgstr ""
"En general, las implementaciones de protocolos que utilizan APIs basadas en "
"transporte como :meth:`loop.create_connection` y :meth:`loop.create_server` "
"son más rápidas que las implementaciones que trabajan con sockets "
"directamente. Sin embargo, hay algunos casos de uso en los que el "
"rendimiento no es crítico, y trabajar con objetos :class:`~socket.socket` "
"directamente es más conveniente."

#: ../../library/asyncio-eventloop.rst:999
msgid ""
"Receive up to *nbytes* from *sock*.  Asynchronous version of :meth:`socket."
"recv() <socket.socket.recv>`."
msgstr ""
"Recibe hasta *nbytes* de *sock*.  Versión asíncrona de :meth:`socket.recv() "
"<socket.socket.recv>`."

#: ../../library/asyncio-eventloop.rst:1002
msgid "Return the received data as a bytes object."
msgstr "Devuelve los datos recibidos como un objeto bytes."

#: ../../library/asyncio-eventloop.rst:1004
#: ../../library/asyncio-eventloop.rst:1019
#: ../../library/asyncio-eventloop.rst:1031
#: ../../library/asyncio-eventloop.rst:1044
#: ../../library/asyncio-eventloop.rst:1060
#: ../../library/asyncio-eventloop.rst:1076
#: ../../library/asyncio-eventloop.rst:1087
#: ../../library/asyncio-eventloop.rst:1114
#: ../../library/asyncio-eventloop.rst:1153
msgid "*sock* must be a non-blocking socket."
msgstr "*sock* debe ser un socket no bloqueante."

#: ../../library/asyncio-eventloop.rst:1006
msgid ""
"Even though this method was always documented as a coroutine method, "
"releases before Python 3.7 returned a :class:`Future`. Since Python 3.7 this "
"is an ``async def`` method."
msgstr ""
"Aunque este método siempre estuvo documentado como un método corrutina, las "
"versiones anteriores a Python 3.7 devolvían un :class:`Future`. Desde Python "
"3.7 este es un método ``async def``."

#: ../../library/asyncio-eventloop.rst:1014
msgid ""
"Receive data from *sock* into the *buf* buffer.  Modeled after the blocking :"
"meth:`socket.recv_into() <socket.socket.recv_into>` method."
msgstr ""
"Recibe datos de *sock* en el buffer *buf*.  Modelado según el método "
"bloqueante :meth:`socket.recv_into() <socket.socket.recv_into>`."

#: ../../library/asyncio-eventloop.rst:1017
msgid "Return the number of bytes written to the buffer."
msgstr "Devuelve el número de bytes escritos en el buffer."

#: ../../library/asyncio-eventloop.rst:1026
msgid ""
"Receive a datagram of up to *bufsize* from *sock*.  Asynchronous version of :"
"meth:`socket.recvfrom() <socket.socket.recvfrom>`."
msgstr ""
"Recibe un datagrama de hasta *bufsize* de *sock*.  Versión asíncrona de :"
"meth:`socket.recvfrom() <socket.socket.recvfrom>`."

#: ../../library/asyncio-eventloop.rst:1029
msgid "Return a tuple of (received data, remote address)."
msgstr "Devuelve una tupla de (datos recibidos, dirección remota)."

#: ../../library/asyncio-eventloop.rst:1038
msgid ""
"Receive a datagram of up to *nbytes* from *sock* into *buf*. Asynchronous "
"version of :meth:`socket.recvfrom_into() <socket.socket.recvfrom_into>`."
msgstr ""
"Recibe un datagrama de hasta *nbytes* de *sock* en *buf*. Versión asíncrona "
"de :meth:`socket.recvfrom_into() <socket.socket.recvfrom_into>`."

#: ../../library/asyncio-eventloop.rst:1042
msgid "Return a tuple of (number of bytes received, remote address)."
msgstr "Devuelve una tupla de (número de bytes recibidos, dirección remota)."

#: ../../library/asyncio-eventloop.rst:1051
msgid ""
"Send *data* to the *sock* socket. Asynchronous version of :meth:`socket."
"sendall() <socket.socket.sendall>`."
msgstr ""
"Envía *data* al socket *sock*. Versión asíncrona de :meth:`socket.sendall() "
"<socket.socket.sendall>`."

#: ../../library/asyncio-eventloop.rst:1054
msgid ""
"This method continues to send to the socket until either all data in *data* "
"has been sent or an error occurs.  ``None`` is returned on success.  On "
"error, an exception is raised. Additionally, there is no way to determine "
"how much data, if any, was successfully processed by the receiving end of "
"the connection."
msgstr ""
"Este método continúa enviando al socket hasta que se han enviado todos los "
"datos de *data* o se produce un error. ``None`` se devuelve en caso de "
"éxito.  En caso de error, se lanza una excepción. Además, no hay forma de "
"determinar cuántos datos, si los hay, fueron procesados con éxito por el "
"extremo receptor de la conexión."

#: ../../library/asyncio-eventloop.rst:1062
#: ../../library/asyncio-eventloop.rst:1116
msgid ""
"Even though the method was always documented as a coroutine method, before "
"Python 3.7 it returned a :class:`Future`. Since Python 3.7, this is an "
"``async def`` method."
msgstr ""
"Aunque el método siempre estuvo documentado como un método corrutina, antes "
"de Python 3.7 devolviera un :class:`Future`. Desde Python 3.7, este es un "
"método ``async def``."

#: ../../library/asyncio-eventloop.rst:1070
msgid ""
"Send a datagram from *sock* to *address*. Asynchronous version of :meth:"
"`socket.sendto() <socket.socket.sendto>`."
msgstr ""
"Envía un datagrama desde *sock* a *dirección*. Versión asíncrona de :meth:"
"`socket.sendto() <socket.socket.sendto>`."

#: ../../library/asyncio-eventloop.rst:1074
msgid "Return the number of bytes sent."
msgstr "Devuelve el número de bytes enviados."

#: ../../library/asyncio-eventloop.rst:1083
msgid "Connect *sock* to a remote socket at *address*."
msgstr "Conectar *sock* a un socket remoto en *address*."

#: ../../library/asyncio-eventloop.rst:1085
msgid ""
"Asynchronous version of :meth:`socket.connect() <socket.socket.connect>`."
msgstr "Versión asíncrona de :meth:`socket.connect() <socket.socket.connect>`."

#: ../../library/asyncio-eventloop.rst:1089
msgid ""
"``address`` no longer needs to be resolved.  ``sock_connect`` will try to "
"check if the *address* is already resolved by calling :func:`socket."
"inet_pton`.  If not, :meth:`loop.getaddrinfo` will be used to resolve the "
"*address*."
msgstr ""
"``address`` ``sock_connect`` intentará comprobar si la *dirección* ya está "
"resuelta llamando a :func:`socket.inet_pton`.  Si no es así, se utilizará :"
"meth:`loop.getaddrinfo` para resolver la *dirección*."

#: ../../library/asyncio-eventloop.rst:1098
msgid ""
":meth:`loop.create_connection` and  :func:`asyncio.open_connection() "
"<open_connection>`."
msgstr ""
":meth:`loop.create_connection` y :func:`asyncio.open_connection() "
"<open_connection>`."

#: ../../library/asyncio-eventloop.rst:1105
msgid ""
"Accept a connection.  Modeled after the blocking :meth:`socket.accept() "
"<socket.socket.accept>` method."
msgstr ""
"Acepta una conexión.  Modelado a partir del método bloqueante :meth:`socket."
"accept() <socket.socket.accept>`."

#: ../../library/asyncio-eventloop.rst:1108
msgid ""
"The socket must be bound to an address and listening for connections. The "
"return value is a pair ``(conn, address)`` where *conn* is a *new* socket "
"object usable to send and receive data on the connection, and *address* is "
"the address bound to the socket on the other end of the connection."
msgstr ""
"El socket debe estar vinculado a una dirección y a la escucha de conexiones. "
"El valor devuelto es un par ``(conn, address)`` donde *conn* es un *nuevo* "
"objeto socket utilizable para enviar y recibir datos en la conexión, y "
"*address* es la dirección vinculada al socket en el otro extremo de la "
"conexión."

#: ../../library/asyncio-eventloop.rst:1123
msgid ":meth:`loop.create_server` and :func:`start_server`."
msgstr ":meth:`loop.create_server` y :func:`start_server`."

#: ../../library/asyncio-eventloop.rst:1129
msgid ""
"Send a file using high-performance :mod:`os.sendfile` if possible. Return "
"the total number of bytes sent."
msgstr ""
"Enviar un archivo utilizando :mod:`os.sendfile` de alto rendimiento si es "
"posible. Devuelve el número total de bytes enviados."

#: ../../library/asyncio-eventloop.rst:1132
msgid ""
"Asynchronous version of :meth:`socket.sendfile() <socket.socket.sendfile>`."
msgstr ""
"Versión asíncrona de :meth:`socket.sendfile() <socket.socket.sendfile>`."

#: ../../library/asyncio-eventloop.rst:1134
msgid ""
"*sock* must be a non-blocking :const:`socket.SOCK_STREAM` :class:`~socket."
"socket`."
msgstr ""
"*sock* debe ser un :const:`socket.SOCK_STREAM` no bloqueante :class:`~socket."
"socket`."

#: ../../library/asyncio-eventloop.rst:1137
msgid "*file* must be a regular file object open in binary mode."
msgstr "*file* debe ser un objeto fichero normal abierto en modo binario."

#: ../../library/asyncio-eventloop.rst:1146
msgid ""
"*fallback*, when set to ``True``, makes asyncio manually read and send the "
"file when the platform does not support the sendfile syscall (e.g. Windows "
"or SSL socket on Unix)."
msgstr ""
"*fallback*, cuando se establece en ``True``, hace que asyncio lea y envíe "
"manualmente el archivo cuando la plataforma no soporta la llamada syscall "
"sendfile (por ejemplo, Windows o socket SSL en Unix)."

#: ../../library/asyncio-eventloop.rst:1150
msgid ""
"Raise :exc:`SendfileNotAvailableError` if the system does not support "
"*sendfile* syscall and *fallback* is ``False``."
msgstr ""
"Lanza :exc:`SendfileNotAvailableError` si el sistema no soporta *sendfile* "
"syscall y *fallback* es ``False``."

#: ../../library/asyncio-eventloop.rst:1159
msgid "DNS"
msgstr "DNS"

#: ../../library/asyncio-eventloop.rst:1165
msgid "Asynchronous version of :meth:`socket.getaddrinfo`."
msgstr "Versión asíncrona de :meth:`socket.getaddrinfo`."

#: ../../library/asyncio-eventloop.rst:1170
msgid "Asynchronous version of :meth:`socket.getnameinfo`."
msgstr "Versión asíncrona de :meth:`socket.getnameinfo`."

#: ../../library/asyncio-eventloop.rst:1173
msgid ""
"Both *getaddrinfo* and *getnameinfo* internally utilize their synchronous "
"versions through the loop's default thread pool executor. When this executor "
"is saturated, these methods may experience delays, which higher-level "
"networking libraries may report as increased timeouts. To mitigate this, "
"consider using a custom executor for other user tasks, or setting a default "
"executor with a larger number of workers."
msgstr ""
"Tanto *getaddrinfo* como *getnameinfo* utilizan internamente sus versiones "
"síncronas a través del thread pool ejecutor por defecto del bucle. Cuando "
"este ejecutor está saturado, estos métodos pueden experimentar retrasos, que "
"las bibliotecas de red de alto nivel pueden reportar como un aumento de los "
"tiempos de espera. Para mitigar esto, considere el uso de un ejecutor "
"personalizado para otras tareas de usuario, o establezca un ejecutor por "
"defecto con un mayor número de trabajadores."

#: ../../library/asyncio-eventloop.rst:1180
msgid ""
"Both *getaddrinfo* and *getnameinfo* methods were always documented to "
"return a coroutine, but prior to Python 3.7 they were, in fact, returning :"
"class:`asyncio.Future` objects.  Starting with Python 3.7 both methods are "
"coroutines."
msgstr ""
"Ambos métodos *getaddrinfo* y *getnameinfo* siempre estuvieron documentados "
"para devolver una corrutina, pero antes de Python 3.7 devolvían, de hecho, "
"objetos :class:`asyncio.Future`.  A partir de Python 3.7 ambos métodos son "
"corrutinas."

#: ../../library/asyncio-eventloop.rst:1188
msgid "Working with pipes"
msgstr "Trabajar con tuberías"

#: ../../library/asyncio-eventloop.rst:1193
msgid "Register the read end of *pipe* in the event loop."
msgstr "Registra el extremo de lectura de *pipe* en el bucle de eventos."

#: ../../library/asyncio-eventloop.rst:1198
msgid "*pipe* is a :term:`file-like object <file object>`."
msgstr "*pipe* es un :term:`file-like object <file object>`."

#: ../../library/asyncio-eventloop.rst:1200
msgid ""
"Return pair ``(transport, protocol)``, where *transport* supports the :class:"
"`ReadTransport` interface and *protocol* is an object instantiated by the "
"*protocol_factory*."
msgstr ""
"Devuelve el par ``(transport, protocol)``, donde *transport* soporta la "
"interfaz :class:`ReadTransport` y *protocol* es un objeto instanciado por "
"*protocol_factory*."

#: ../../library/asyncio-eventloop.rst:1204
#: ../../library/asyncio-eventloop.rst:1221
msgid ""
"With :class:`SelectorEventLoop` event loop, the *pipe* is set to non-"
"blocking mode."
msgstr ""
"Con :class:`SelectorEventLoop` event loop, el *pipe* se pone en modo no-"
"bloqueo."

#: ../../library/asyncio-eventloop.rst:1210
msgid "Register the write end of *pipe* in the event loop."
msgstr "Registra el final de escritura de *pipe* en el bucle de eventos."

#: ../../library/asyncio-eventloop.rst:1215
msgid "*pipe* is :term:`file-like object <file object>`."
msgstr "*pipe* es :term:`file-like object <file object>`."

#: ../../library/asyncio-eventloop.rst:1217
msgid ""
"Return pair ``(transport, protocol)``, where *transport* supports :class:"
"`WriteTransport` interface and *protocol* is an object instantiated by the "
"*protocol_factory*."
msgstr ""
"Devuelve el par ``(transport, protocol)``, donde *transport* soporta la "
"interfaz :class:`WriteTransport` y *protocol* es un objeto instanciado por "
"la *protocol_factory*."

#: ../../library/asyncio-eventloop.rst:1226
msgid ""
":class:`SelectorEventLoop` does not support the above methods on Windows.  "
"Use :class:`ProactorEventLoop` instead for Windows."
msgstr ""
":class:`SelectorEventLoop` no admite los métodos anteriores en Windows.  "
"Utilice :class:`ProactorEventLoop` en su lugar para Windows."

#: ../../library/asyncio-eventloop.rst:1231
msgid ""
"The :meth:`loop.subprocess_exec` and :meth:`loop.subprocess_shell` methods."
msgstr ""
"Los métodos :meth:`loop.subprocess_exec` y :meth:`loop.subprocess_shell`."

#: ../../library/asyncio-eventloop.rst:1236
msgid "Unix signals"
msgstr "Señales Unix"

#: ../../library/asyncio-eventloop.rst:1242
msgid "Set *callback* as the handler for the *signum* signal."
msgstr "Establece *callback* como manejador de la señal *signum*."

#: ../../library/asyncio-eventloop.rst:1244
msgid ""
"The callback will be invoked by *loop*, along with other queued callbacks "
"and runnable coroutines of that event loop. Unlike signal handlers "
"registered using :func:`signal.signal`, a callback registered with this "
"function is allowed to interact with the event loop."
msgstr ""
"La llamada de retorno será invocada por *loop*, junto con otras llamadas de "
"retorno en cola y corrutinas ejecutables de ese bucle de eventos. A "
"diferencia de los controladores de señales registrados con :func:`signal."
"signal`, una llamada de retorno registrada con esta función puede "
"interactuar con el bucle de eventos."

#: ../../library/asyncio-eventloop.rst:1249
msgid ""
"Raise :exc:`ValueError` if the signal number is invalid or uncatchable. "
"Raise :exc:`RuntimeError` if there is a problem setting up the handler."
msgstr ""
"Lanza :exc:`ValueError` si el número de señal no es válido o no se puede "
"capturar. Lanza :exc:`RuntimeError` si hay un problema al configurar el "
"gestor."

#: ../../library/asyncio-eventloop.rst:1255
msgid ""
"Like :func:`signal.signal`, this function must be invoked in the main thread."
msgstr ""
"Al igual que :func:`signal.signal`, esta función debe invocarse en el hilo "
"principal."

#: ../../library/asyncio-eventloop.rst:1260
msgid "Remove the handler for the *sig* signal."
msgstr "Elimina el manejador de la señal *sig*."

#: ../../library/asyncio-eventloop.rst:1262
msgid ""
"Return ``True`` if the signal handler was removed, or ``False`` if no "
"handler was set for the given signal."
msgstr ""
"Devuelve ``True`` si se ha eliminado el manejador de señales, o ``False`` si "
"no se ha establecido ningún manejador para la señal dada."

#: ../../library/asyncio-eventloop.rst:1269
msgid "The :mod:`signal` module."
msgstr "El módulo :mod:`signal`."

#: ../../library/asyncio-eventloop.rst:1273
msgid "Executing code in thread or process pools"
msgstr "Ejecución de código en pools de hilos o procesos"

#: ../../library/asyncio-eventloop.rst:1277
msgid "Arrange for *func* to be called in the specified executor."
msgstr "Dispone que *func* sea llamado en el ejecutor especificado."

#: ../../library/asyncio-eventloop.rst:1279
msgid ""
"The *executor* argument should be an :class:`concurrent.futures.Executor` "
"instance. The default executor is used if *executor* is ``None``. The "
"default executor can be set by :meth:`loop.set_default_executor`, otherwise, "
"a :class:`concurrent.futures.ThreadPoolExecutor` will be lazy-initialized "
"and used by :func:`run_in_executor` if needed."
msgstr ""
"El argumento *executor* debe ser una instancia de :class:`concurrent.futures."
"Executor`. El ejecutor por defecto se utiliza si *executor* es ``None``. El "
"ejecutor por defecto se puede establecer por :meth:`loop."
"set_default_executor`, de lo contrario, si es necesario se lanzará un "
"iniciador perezoso  :class:`concurrent.futures.ThreadPoolExecutor` y "
"utilizado por :func:`run_in_executor` ."

#: ../../library/asyncio-eventloop.rst:1287
msgid ""
"import asyncio\n"
"import concurrent.futures\n"
"\n"
"def blocking_io():\n"
"    # File operations (such as logging) can block the\n"
"    # event loop: run them in a thread pool.\n"
"    with open('/dev/urandom', 'rb') as f:\n"
"        return f.read(100)\n"
"\n"
"def cpu_bound():\n"
"    # CPU-bound operations will block the event loop:\n"
"    # in general it is preferable to run them in a\n"
"    # process pool.\n"
"    return sum(i * i for i in range(10 ** 7))\n"
"\n"
"async def main():\n"
"    loop = asyncio.get_running_loop()\n"
"\n"
"    ## Options:\n"
"\n"
"    # 1. Run in the default loop's executor:\n"
"    result = await loop.run_in_executor(\n"
"        None, blocking_io)\n"
"    print('default thread pool', result)\n"
"\n"
"    # 2. Run in a custom thread pool:\n"
"    with concurrent.futures.ThreadPoolExecutor() as pool:\n"
"        result = await loop.run_in_executor(\n"
"            pool, blocking_io)\n"
"        print('custom thread pool', result)\n"
"\n"
"    # 3. Run in a custom process pool:\n"
"    with concurrent.futures.ProcessPoolExecutor() as pool:\n"
"        result = await loop.run_in_executor(\n"
"            pool, cpu_bound)\n"
"        print('custom process pool', result)\n"
"\n"
"if __name__ == '__main__':\n"
"    asyncio.run(main())"
msgstr ""
"import asyncio\n"
"import concurrent.futures\n"
"\n"
"def blocking_io():\n"
"    # Las operaciones de archivo (como el registro) pueden bloquear el\n"
"    # bucle de eventos: ejecútalas en un grupo de hilos.\n"
"    with open('/dev/urandom', 'rb') as f:\n"
"        return f.read(100)\n"
"\n"
"def cpu_bound():\n"
"    # Las operaciones limitadas por la CPU bloquearán el bucle de eventos:\n"
"    # en general es preferible ejecutarlas en un\n"
"    # pool de procesos.\n"
"    return sum(i * i for i in range(10 ** 7))\n"
"\n"
"async def main():\n"
"    loop = asyncio.get_running_loop()\n"
"\n"
"    ## Opciones:\n"
"\n"
"    # 1. Ejecutar en el ejecutor del bucle por defecto:\n"
"    result = await loop.run_in_executor(\n"
"           None, blocking_io)\n"
"     print('default thread, result)\n"
"\n"
"    # 2. Ejecutar en un thread pool personalizado:\n"
"    with concurrent.futures.ThreadPoolExecutor() as pool:\n"
"        result = await loop.run_in_executor(\n"
"            pool, blocking_io)\n"
"        print('custom thread pool', result)\n"
"\n"
"    # 3. Ejecutar en un pool de procesos personalizado:\n"
"    with concurrent.futures.ProcessPoolExecutor() as pool:\n"
"           result = await loop.run_in_executor(\n"
"                  pool, cpu_bound)\n"
"         print('custom process pool', result)\n"
"\n"
"if __name__ == '__main__':\n"
"    asyncio.run(main())"

#: ../../library/asyncio-eventloop.rst:1327
msgid ""
"Note that the entry point guard (``if __name__ == '__main__'``) is required "
"for option 3 due to the peculiarities of :mod:`multiprocessing`, which is "
"used by :class:`~concurrent.futures.ProcessPoolExecutor`. See :ref:`Safe "
"importing of main module <multiprocessing-safe-main-import>`."
msgstr ""
"Tenga en cuenta que la protección del punto de entrada (``if __name__ == "
"'__main__'``) es necesaria para la opción 3 debido a las peculiaridades de :"
"mod:`multiprocessing`, que es utilizado por :class:`~concurrent.futures."
"ProcessPoolExecutor`. Ver :ref:`Safe importing of main module "
"<multiprocessing-safe-main-import>`."

#: ../../library/asyncio-eventloop.rst:1332
msgid "This method returns a :class:`asyncio.Future` object."
msgstr "Este método devuelve un objeto :class:`asyncio.Future`."

#: ../../library/asyncio-eventloop.rst:1334
msgid ""
"Use :func:`functools.partial` :ref:`to pass keyword arguments <asyncio-pass-"
"keywords>` to *func*."
msgstr ""
"Utilice :func:`functools.partial`:ref:`to pass keyword arguments <asyncio-"
"pass-keywords>` a *func*."

#: ../../library/asyncio-eventloop.rst:1337
msgid ""
":meth:`loop.run_in_executor` no longer configures the ``max_workers`` of the "
"thread pool executor it creates, instead leaving it up to the thread pool "
"executor (:class:`~concurrent.futures.ThreadPoolExecutor`) to set the "
"default."
msgstr ""
":meth:`loop.run_in_executor` ya no configura el ``max_workers`` del ejecutor "
"del grupo de hilos que crea, sino que deja que sea el ejecutor del grupo de "
"hilos (:class:`~concurrent.futures.ThreadPoolExecutor`) el que establezca el "
"valor predeterminado."

#: ../../library/asyncio-eventloop.rst:1346
msgid ""
"Set *executor* as the default executor used by :meth:`run_in_executor`. "
"*executor* must be an instance of :class:`~concurrent.futures."
"ThreadPoolExecutor`."
msgstr ""
"Establece *executor* como el ejecutor por defecto utilizado por :meth:"
"`run_in_executor`. *executor* debe ser una instancia de :class:`~concurrent."
"futures.ThreadPoolExecutor`."

#: ../../library/asyncio-eventloop.rst:1350
msgid ""
"*executor* must be an instance of :class:`~concurrent.futures."
"ThreadPoolExecutor`."
msgstr ""
"El *executor* debe ser una instancia de :class:`~concurrent.futures."
"ThreadPoolExecutor`."

#: ../../library/asyncio-eventloop.rst:1356
msgid "Error Handling API"
msgstr "API de gestión de errores"

#: ../../library/asyncio-eventloop.rst:1358
msgid "Allows customizing how exceptions are handled in the event loop."
msgstr ""
"Permite personalizar cómo se gestionan las excepciones en el bucle de "
"eventos."

#: ../../library/asyncio-eventloop.rst:1362
msgid "Set *handler* as the new event loop exception handler."
msgstr ""
"Establece *handler* como el nuevo manejador de excepciones del bucle de "
"eventos."

#: ../../library/asyncio-eventloop.rst:1364
msgid ""
"If *handler* is ``None``, the default exception handler will be set.  "
"Otherwise, *handler* must be a callable with the signature matching ``(loop, "
"context)``, where ``loop`` is a reference to the active event loop, and "
"``context`` is a ``dict`` object containing the details of the exception "
"(see :meth:`call_exception_handler` documentation for details about context)."
msgstr ""
"Si *handler* es ``None``, se establecerá el manejador de excepciones por "
"defecto.  En caso contrario, *handler* debe ser un callable con la firma que "
"coincida con ``(loop, context)``, donde ``loop`` es una referencia al bucle "
"de eventos activo, y ``context`` es un objeto ``dict`` que contiene los "
"detalles de la excepción (véase la documentación de :meth:"
"`call_exception_handler` para más detalles sobre el contexto)."

#: ../../library/asyncio-eventloop.rst:1372
msgid ""
"If the handler is called on behalf of a :class:`~asyncio.Task` or :class:"
"`~asyncio.Handle`, it is run in the :class:`contextvars.Context` of that "
"task or callback handle."
msgstr ""
"Si el manejador se llama en nombre de un :class:`~asyncio.Task` o :class:"
"`~asyncio.Handle`, se ejecuta en el :class:`contextvars.Context` de esa "
"tarea o manejador de devolución de llamada."

#: ../../library/asyncio-eventloop.rst:1378
msgid ""
"The handler may be called in the :class:`~contextvars.Context` of the task "
"or handle where the exception originated."
msgstr ""
"El manejador puede ser llamado en :class:`~contextvars.Context` de la tarea "
"o handle donde se originó la excepción."

#: ../../library/asyncio-eventloop.rst:1383
msgid ""
"Return the current exception handler, or ``None`` if no custom exception "
"handler was set."
msgstr ""
"Devuelve el manejador de excepciones actual, o ``None`` si no se ha "
"establecido un manejador de excepciones personalizado."

#: ../../library/asyncio-eventloop.rst:1390
msgid "Default exception handler."
msgstr "Gestor de excepciones por defecto."

#: ../../library/asyncio-eventloop.rst:1392
msgid ""
"This is called when an exception occurs and no exception handler is set. "
"This can be called by a custom exception handler that wants to defer to the "
"default handler behavior."
msgstr ""
"Se ejecuta cuando se produce una excepción y no se ha establecido ningún "
"manejador de excepciones. Esto puede ser llamado por un manejador de "
"excepciones personalizado que quiere diferir al comportamiento del manejador "
"por defecto."

#: ../../library/asyncio-eventloop.rst:1396
msgid ""
"*context* parameter has the same meaning as in :meth:"
"`call_exception_handler`."
msgstr ""
"El parámetro *context* tiene el mismo significado que en :meth:"
"`call_exception_handler`."

#: ../../library/asyncio-eventloop.rst:1401
msgid "Call the current event loop exception handler."
msgstr "Llama al manejador de excepciones del bucle de eventos actual."

#: ../../library/asyncio-eventloop.rst:1403
msgid ""
"*context* is a ``dict`` object containing the following keys (new keys may "
"be introduced in future Python versions):"
msgstr ""
"*context* es un objeto ``dict`` que contiene las siguientes claves (es "
"posible que se introduzcan nuevas claves en futuras versiones de Python):"

#: ../../library/asyncio-eventloop.rst:1406
msgid "'message': Error message;"
msgstr "'message': Mensaje de error;"

#: ../../library/asyncio-eventloop.rst:1407
msgid "'exception' (optional): Exception object;"
msgstr "'exception' (opcional): Objeto de excepción;"

#: ../../library/asyncio-eventloop.rst:1408
msgid "'future' (optional): :class:`asyncio.Future` instance;"
msgstr "'future' (opcional): :class:`asyncio.Future` instance;"

#: ../../library/asyncio-eventloop.rst:1409
msgid "'task' (optional): :class:`asyncio.Task` instance;"
msgstr "'task' (opcional): :class:`asyncio.Task` instance;"

#: ../../library/asyncio-eventloop.rst:1410
msgid "'handle' (optional): :class:`asyncio.Handle` instance;"
msgstr "'handle' (opcional): :class:`asyncio.Handle` instance;"

#: ../../library/asyncio-eventloop.rst:1411
msgid "'protocol' (optional): :ref:`Protocol <asyncio-protocol>` instance;"
msgstr "'protocol' (opcional): :ref:`Protocol <asyncio-protocol>` instance;"

#: ../../library/asyncio-eventloop.rst:1412
msgid "'transport' (optional): :ref:`Transport <asyncio-transport>` instance;"
msgstr "'transport' (opcional): :ref:`Transport <asyncio-transport>` instance;"

#: ../../library/asyncio-eventloop.rst:1413
msgid "'socket' (optional): :class:`socket.socket` instance;"
msgstr "'socket' (opcional): :class:`socket.socket` instance;"

#: ../../library/asyncio-eventloop.rst:1414
msgid "'asyncgen' (optional): Asynchronous generator that caused"
msgstr "'asyncgen' (opcional): Generador asíncrono que provocó"

#: ../../library/asyncio-eventloop.rst:1415
msgid "the exception."
msgstr "la excepción."

#: ../../library/asyncio-eventloop.rst:1419
msgid ""
"This method should not be overloaded in subclassed event loops.  For custom "
"exception handling, use the :meth:`set_exception_handler` method."
msgstr ""
"Este método no debe sobrecargarse en bucles de eventos subclase.  Para un "
"manejo de excepciones personalizado, utilice el método :meth:"
"`set_exception_handler`."

#: ../../library/asyncio-eventloop.rst:1424
msgid "Enabling debug mode"
msgstr "Activación del modo de depuración"

#: ../../library/asyncio-eventloop.rst:1428
msgid "Get the debug mode (:class:`bool`) of the event loop."
msgstr "Obtiene el modo de depuración (:class:`bool`) del bucle de eventos."

#: ../../library/asyncio-eventloop.rst:1430
msgid ""
"The default value is ``True`` if the environment variable :envvar:"
"`PYTHONASYNCIODEBUG` is set to a non-empty string, ``False`` otherwise."
msgstr ""
"El valor por defecto es ``True`` si la variable de entorno :envvar:"
"`PYTHONASYNCIODEBUG` está definida como una cadena no vacía, ``False`` en "
"caso contrario."

#: ../../library/asyncio-eventloop.rst:1436
msgid "Set the debug mode of the event loop."
msgstr "Establece el modo de depuración del bucle de eventos."

#: ../../library/asyncio-eventloop.rst:1440
msgid ""
"The new :ref:`Python Development Mode <devmode>` can now also be used to "
"enable the debug mode."
msgstr ""
"El nuevo :ref:`Python Development Mode <devmode>` ahora también se puede "
"utilizar para activar el modo de depuración."

#: ../../library/asyncio-eventloop.rst:1445
msgid ""
"This attribute can be used to set the minimum execution duration in seconds "
"that is considered \"slow\". When debug mode is enabled, \"slow\" callbacks "
"are logged."
msgstr ""
"Este atributo se puede utilizar para establecer la duración mínima de "
"ejecución en segundos que se considera \"slow\". Cuando el modo de "
"depuración está activado, se registran las devoluciones de llamada \"slow\"."

#: ../../library/asyncio-eventloop.rst:1449
msgid "Default value is 100 milliseconds."
msgstr "El valor por defecto es 100 milisegundos."

#: ../../library/asyncio-eventloop.rst:1453
msgid "The :ref:`debug mode of asyncio <asyncio-debug-mode>`."
msgstr "El :ref:`debug mode of asyncio <asyncio-debug-mode>`."

#: ../../library/asyncio-eventloop.rst:1457
msgid "Running Subprocesses"
msgstr "Ejecutando subprocesos"

#: ../../library/asyncio-eventloop.rst:1459
msgid ""
"Methods described in this subsections are low-level.  In regular async/await "
"code consider using the high-level :func:`asyncio.create_subprocess_shell` "
"and :func:`asyncio.create_subprocess_exec` convenience functions instead."
msgstr ""
"Los métodos descritos en esta subsección son de bajo nivel.  En el código "
"async/await normal, considere usar las funciones de alto nivel :func:"
"`asyncio.create_subprocess_shell` y :func:`asyncio.create_subprocess_exec` "
"en su lugar."

#: ../../library/asyncio-eventloop.rst:1466
msgid ""
"On Windows, the default event loop :class:`ProactorEventLoop` supports "
"subprocesses, whereas :class:`SelectorEventLoop` does not. See :ref:"
"`Subprocess Support on Windows <asyncio-windows-subprocess>` for details."
msgstr ""
"En Windows, el bucle de eventos por defecto :class:`ProactorEventLoop` "
"soporta subprocesos, mientras que :class:`SelectorEventLoop` no. Ver para "
"más detalles :ref:`Subprocess Support on Windows <asyncio-windows-"
"subprocess>`."

#: ../../library/asyncio-eventloop.rst:1478
msgid ""
"Create a subprocess from one or more string arguments specified by *args*."
msgstr ""
"Crea un subproceso a partir de uno o más argumentos de cadena especificados "
"por *args*."

#: ../../library/asyncio-eventloop.rst:1481
msgid "*args* must be a list of strings represented by:"
msgstr "*args* debe ser una lista de cadenas representadas por:"

#: ../../library/asyncio-eventloop.rst:1483
msgid ":class:`str`;"
msgstr ":class:`str`;"

#: ../../library/asyncio-eventloop.rst:1484
msgid ""
"or :class:`bytes`, encoded to the :ref:`filesystem encoding <filesystem-"
"encoding>`."
msgstr ""
"o :class:`bytes`, codificado según la codificación :ref:`filesystem "
"<filesystem-encoding>`."

#: ../../library/asyncio-eventloop.rst:1487
msgid ""
"The first string specifies the program executable, and the remaining strings "
"specify the arguments.  Together, string arguments form the ``argv`` of the "
"program."
msgstr ""
"La primera cadena especifica el ejecutable del programa, y las cadenas "
"restantes especifican los argumentos.  Juntas, las cadenas de argumentos "
"forman el ``argv`` del programa."

#: ../../library/asyncio-eventloop.rst:1491
msgid ""
"This is similar to the standard library :class:`subprocess.Popen` class "
"called with ``shell=False`` and the list of strings passed as the first "
"argument; however, where :class:`~subprocess.Popen` takes a single argument "
"which is list of strings, *subprocess_exec* takes multiple string arguments."
msgstr ""
"Esto es similar a la clase :class:`subprocess.Popen` de la biblioteca "
"estándar llamada con ``shell=False`` y la lista de cadenas pasada como "
"primer argumento; sin embargo, donde :class:`~subprocess.Popen` toma un "
"único argumento que es una lista de cadenas, *subprocess_exec* toma "
"múltiples argumentos de cadena."

#: ../../library/asyncio-eventloop.rst:1497
msgid ""
"The *protocol_factory* must be a callable returning a subclass of the :class:"
"`asyncio.SubprocessProtocol` class."
msgstr ""
"El *protocol_factory* debe ser un callable que devuelva una subclase de la "
"clase :class:`asyncio.SubprocessProtocol`."

#: ../../library/asyncio-eventloop.rst:1500
msgid "Other parameters:"
msgstr "Otros parámetros:"

#: ../../library/asyncio-eventloop.rst:1502
msgid "*stdin* can be any of these:"
msgstr "*stdin* puede ser cualquiera de estos:"

#: ../../library/asyncio-eventloop.rst:1504
#: ../../library/asyncio-eventloop.rst:1515
#: ../../library/asyncio-eventloop.rst:1525
msgid "a file-like object"
msgstr "un objeto similar a un archivo"

#: ../../library/asyncio-eventloop.rst:1505
msgid ""
"an existing file descriptor (a positive integer), for example those created "
"with :meth:`os.pipe`"
msgstr ""
"un descriptor de archivo existente (un número entero positivo), por ejemplo "
"los creados con :meth:`os.pipe`"

#: ../../library/asyncio-eventloop.rst:1506
#: ../../library/asyncio-eventloop.rst:1516
#: ../../library/asyncio-eventloop.rst:1526
msgid ""
"the :const:`subprocess.PIPE` constant (default) which will create a new pipe "
"and connect it,"
msgstr ""
"la constante :const:`subprocess.PIPE` (por defecto) que creará una nueva "
"tubería y la conectará,"

#: ../../library/asyncio-eventloop.rst:1508
#: ../../library/asyncio-eventloop.rst:1518
#: ../../library/asyncio-eventloop.rst:1528
msgid ""
"the value ``None`` which will make the subprocess inherit the file "
"descriptor from this process"
msgstr ""
"el valor ``None`` que hará que el subproceso herede el descriptor de fichero "
"de este proceso"

#: ../../library/asyncio-eventloop.rst:1510
#: ../../library/asyncio-eventloop.rst:1520
#: ../../library/asyncio-eventloop.rst:1530
msgid ""
"the :const:`subprocess.DEVNULL` constant which indicates that the special :"
"data:`os.devnull` file will be used"
msgstr ""
"la constante :const:`subprocess.DEVNULL` que indica que se utilizará el "
"archivo especial :data:`os.devnull` "

#: ../../library/asyncio-eventloop.rst:1513
msgid "*stdout* can be any of these:"
msgstr "*stdout* puede ser cualquiera de estos:"

#: ../../library/asyncio-eventloop.rst:1523
msgid "*stderr* can be any of these:"
msgstr "*stderr* puede ser cualquiera de estos:"

#: ../../library/asyncio-eventloop.rst:1532
msgid ""
"the :const:`subprocess.STDOUT` constant which will connect the standard "
"error stream to the process' standard output stream"
msgstr ""
"la constante :const:`subprocess.STDOUT` que conectará el flujo de error "
"estándar con el flujo de salida estándar del proceso"

#: ../../library/asyncio-eventloop.rst:1535
msgid ""
"All other keyword arguments are passed to :class:`subprocess.Popen` without "
"interpretation, except for *bufsize*, *universal_newlines*, *shell*, *text*, "
"*encoding* and *errors*, which should not be specified at all."
msgstr ""
"Todos los demás argumentos de palabra clave se pasan a :class:`subprocess."
"Popen` sin interpretación, excepto *bufsize*, *universal_newlines*, *shell*, "
"*text*, *encoding* y *errors*, que no deben especificarse en absoluto."

#: ../../library/asyncio-eventloop.rst:1540
msgid ""
"The ``asyncio`` subprocess API does not support decoding the streams as "
"text. :func:`bytes.decode` can be used to convert the bytes returned from "
"the stream to text."
msgstr ""
"La API del subproceso ``asyncio`` no permite descodificar los flujos como "
"texto. :func:`bytes.decode` puede utilizarse para convertir los bytes "
"devueltos por el flujo en texto."

#: ../../library/asyncio-eventloop.rst:1544
msgid ""
"If a file-like object passed as *stdin*, *stdout* or *stderr* represents a "
"pipe, then the other side of this pipe should be registered with :meth:"
"`~loop.connect_write_pipe` or :meth:`~loop.connect_read_pipe` for use with "
"the event loop."
msgstr ""
"Si un objeto tipo archivo pasado como *stdin*, *stdout* o *stderr* "
"representa una tubería, entonces el otro lado de esta tubería debe ser "
"registrado con :meth:`~loop.connect_write_pipe` o :meth:`~loop."
"connect_read_pipe` para su uso con el bucle de eventos."

#: ../../library/asyncio-eventloop.rst:1549
msgid ""
"See the constructor of the :class:`subprocess.Popen` class for documentation "
"on other arguments."
msgstr ""
"Consulte el constructor de la clase :class:`subprocess.Popen` para obtener "
"documentación sobre otros argumentos."

#: ../../library/asyncio-eventloop.rst:1552
msgid ""
"Returns a pair of ``(transport, protocol)``, where *transport* conforms to "
"the :class:`asyncio.SubprocessTransport` base class and *protocol* is an "
"object instantiated by the *protocol_factory*."
msgstr ""
"Devuelve un par de ``(transport, protocol)``, donde *transport* se ajusta a "
"la clase base :class:`asyncio.SubprocessTransport` y *protocol* es un objeto "
"instanciado por *protocol_factory*."

#: ../../library/asyncio-eventloop.rst:1561
msgid ""
"Create a subprocess from *cmd*, which can be a :class:`str` or a :class:"
"`bytes` string encoded to the :ref:`filesystem encoding <filesystem-"
"encoding>`, using the platform's \"shell\" syntax."
msgstr ""
"Crea un subproceso a partir de *cmd*, que puede ser un :class:`str` o una "
"cadena :class:`bytes` codificada según la codificación :ref:`filesystem "
"<filesystem-encoding>`, utilizando la sintaxis \"shell\" de la plataforma."

#: ../../library/asyncio-eventloop.rst:1566
msgid ""
"This is similar to the standard library :class:`subprocess.Popen` class "
"called with ``shell=True``."
msgstr ""
"Esto es similar a la clase de la biblioteca estándar :class:`subprocess."
"Popen` llamada con ``shell=True``."

#: ../../library/asyncio-eventloop.rst:1569
msgid ""
"The *protocol_factory* must be a callable returning a subclass of the :class:"
"`SubprocessProtocol` class."
msgstr ""
"El *protocol_factory* debe ser un callable que devuelva una subclase de la "
"clase :class:`SubprocessProtocol`."

#: ../../library/asyncio-eventloop.rst:1572
msgid ""
"See :meth:`~loop.subprocess_exec` for more details about the remaining "
"arguments."
msgstr ""
"Consulte :meth:`~loop.subprocess_exec` para obtener más información sobre el "
"resto de argumentos."

#: ../../library/asyncio-eventloop.rst:1575
msgid ""
"Returns a pair of ``(transport, protocol)``, where *transport* conforms to "
"the :class:`SubprocessTransport` base class and *protocol* is an object "
"instantiated by the *protocol_factory*."
msgstr ""
"Devuelve un par de ``(transport, protocol)``, donde *transport* se ajusta a "
"la clase base :class:`SubprocessTransport` y *protocol* es un objeto "
"instanciado por *protocol_factory*."

#: ../../library/asyncio-eventloop.rst:1580
msgid ""
"It is the application's responsibility to ensure that all whitespace and "
"special characters are quoted appropriately to avoid `shell injection "
"<https://en.wikipedia.org/wiki/Shell_injection#Shell_injection>`_ "
"vulnerabilities. The :func:`shlex.quote` function can be used to properly "
"escape whitespace and special characters in strings that are going to be "
"used to construct shell commands."
msgstr ""
"Es responsabilidad de la aplicación asegurarse de que todos los espacios en "
"blanco y caracteres especiales se entrecomillan adecuadamente para evitar "
"vulnerabilidades de `shell injection <https://en.wikipedia.org/wiki/"
"Shell_injection#Shell_injection>`_. La función :func:`shlex.quote` se puede "
"utilizar para escapar correctamente los espacios en blanco y caracteres "
"especiales en las cadenas que se van a utilizar para construir comandos de "
"shell."

#: ../../library/asyncio-eventloop.rst:1589
msgid "Callback Handles"
msgstr "Identificadores de Devolución de Llamada"

#: ../../library/asyncio-eventloop.rst:1593
msgid ""
"A callback wrapper object returned by :meth:`loop.call_soon`, :meth:`loop."
"call_soon_threadsafe`."
msgstr ""
"Un objeto de devolución de llamada devuelto por :meth:`loop.call_soon`, :"
"meth:`loop.call_soon_threadsafe`."

#: ../../library/asyncio-eventloop.rst:1598
msgid ""
"Return the :class:`contextvars.Context` object associated with the handle."
msgstr "Devuelve el objeto :class:`contextvars.Context` asociado al manejador."

#: ../../library/asyncio-eventloop.rst:1605
msgid ""
"Cancel the callback.  If the callback has already been canceled or executed, "
"this method has no effect."
msgstr ""
"Cancela la llamada de retorno.  Si la llamada de retorno ya se ha cancelado "
"o ejecutado, este método no tiene ningún efecto."

#: ../../library/asyncio-eventloop.rst:1610
msgid "Return ``True`` if the callback was cancelled."
msgstr "Devuelve ``True`` si se canceló la llamada de retorno."

#: ../../library/asyncio-eventloop.rst:1616
msgid ""
"A callback wrapper object returned by :meth:`loop.call_later`, and :meth:"
"`loop.call_at`."
msgstr ""
"Un objeto de devolución de llamada devuelto por :meth:`loop.call_later`, y :"
"meth:`loop.call_at`."

#: ../../library/asyncio-eventloop.rst:1619
msgid "This class is a subclass of :class:`Handle`."
msgstr "Esta clase es una subclase de :class:`Handle`."

#: ../../library/asyncio-eventloop.rst:1623
msgid "Return a scheduled callback time as :class:`float` seconds."
msgstr ""
"Devuelve una hora de devolución de llamada programada como :class:`float` "
"segundos."

#: ../../library/asyncio-eventloop.rst:1625
msgid ""
"The time is an absolute timestamp, using the same time reference as :meth:"
"`loop.time`."
msgstr ""
"La hora es una marca de tiempo absoluta, que utiliza la misma referencia de "
"tiempo que :meth:`loop.time`."

#: ../../library/asyncio-eventloop.rst:1632
msgid "Server Objects"
msgstr "Objetos del servidor"

#: ../../library/asyncio-eventloop.rst:1634
msgid ""
"Server objects are created by :meth:`loop.create_server`, :meth:`loop."
"create_unix_server`, :func:`start_server`, and :func:`start_unix_server` "
"functions."
msgstr ""
"Los objetos servidor se crean mediante las funciones :meth:`loop."
"create_server`, :meth:`loop.create_unix_server`, :func:`start_server`, y :"
"func:`start_unix_server`."

#: ../../library/asyncio-eventloop.rst:1638
msgid "Do not instantiate the :class:`Server` class directly."
msgstr "No instancie directamente la clase :class:`Server`."

#: ../../library/asyncio-eventloop.rst:1642
msgid ""
"*Server* objects are asynchronous context managers.  When used in an ``async "
"with`` statement, it's guaranteed that the Server object is closed and not "
"accepting new connections when the ``async with`` statement is completed::"
msgstr ""
"Los objetos *Server* son gestores de contexto asíncronos.  Cuando se "
"utilizan en una sentencia ``async with``, se garantiza que el objeto "
"Servidor está cerrado y no acepta nuevas conexiones cuando finaliza la "
"sentencia ``async with``::"

#: ../../library/asyncio-eventloop.rst:1647
msgid ""
"srv = await loop.create_server(...)\n"
"\n"
"async with srv:\n"
"    # some code\n"
"\n"
"# At this point, srv is closed and no longer accepts new connections."
msgstr ""
"srv = await loop.create_server(...)\n"
"\n"
"async with srv:\n"
"    # algo de código\n"
"\n"
"# En este punto, srv está cerrado y ya no acepta nuevas conexiones."

#: ../../library/asyncio-eventloop.rst:1655
msgid "Server object is an asynchronous context manager since Python 3.7."
msgstr ""
"El objeto servidor es un gestor de contexto asíncrono desde Python 3.7."

#: ../../library/asyncio-eventloop.rst:1658
msgid ""
"This class was exposed publicly as ``asyncio.Server`` in Python 3.9.11, "
"3.10.3 and 3.11."
msgstr ""
"Esta clase fue expuesta públicamente como ``asyncio.Server`` en Python "
"3.9.11, 3.10.3 y 3.11."

#: ../../library/asyncio-eventloop.rst:1663
msgid ""
"Stop serving: close listening sockets and set the :attr:`sockets` attribute "
"to ``None``."
msgstr ""
"Dejar de servir: cerrar los sockets de escucha y establecer el atributo :"
"attr:`sockets` en ``None``."

#: ../../library/asyncio-eventloop.rst:1666
msgid ""
"The sockets that represent existing incoming client connections are left "
"open."
msgstr ""
"Los sockets que representan conexiones entrantes de clientes existentes se "
"dejan abiertos."

#: ../../library/asyncio-eventloop.rst:1669
msgid ""
"The server is closed asynchronously; use the :meth:`wait_closed` coroutine "
"to wait until the server is closed (and no more connections are active)."
msgstr ""
"El servidor se cierra de forma asíncrona; utilice la corrutina :meth:"
"`wait_closed` para esperar hasta que el servidor se cierre (y no haya más "
"conexiones activas)."

#: ../../library/asyncio-eventloop.rst:1675
msgid "Return the event loop associated with the server object."
msgstr "Devuelve el bucle de eventos asociado al objeto servidor."

#: ../../library/asyncio-eventloop.rst:1682
msgid "Start accepting connections."
msgstr "Empieza a aceptar conexiones."

#: ../../library/asyncio-eventloop.rst:1684
msgid ""
"This method is idempotent, so it can be called when the server is already "
"serving."
msgstr ""
"Este método es idempotente, por lo que puede ser llamado cuando el servidor "
"ya está sirviendo."

#: ../../library/asyncio-eventloop.rst:1687
msgid ""
"The *start_serving* keyword-only parameter to :meth:`loop.create_server` "
"and :meth:`asyncio.start_server` allows creating a Server object that is not "
"accepting connections initially.  In this case ``Server.start_serving()``, "
"or :meth:`Server.serve_forever` can be used to make the Server start "
"accepting connections."
msgstr ""
"El parámetro *start_serving* de :meth:`loop.create_server` y :meth:`asyncio."
"start_server` permite crear un objeto Servidor que no acepte conexiones "
"inicialmente.  En este caso ``Server.start_serving()``, o :meth:`Server."
"serve_forever` pueden ser usados para hacer que el Servidor comience a "
"aceptar conexiones."

#: ../../library/asyncio-eventloop.rst:1699
msgid ""
"Start accepting connections until the coroutine is cancelled. Cancellation "
"of ``serve_forever`` task causes the server to be closed."
msgstr ""
"Comienza a aceptar conexiones hasta que se cancela la corrutina. La "
"cancelación de la tarea ``serve_forever`` provoca el cierre del servidor."

#: ../../library/asyncio-eventloop.rst:1703
msgid ""
"This method can be called if the server is already accepting connections.  "
"Only one ``serve_forever`` task can exist per one *Server* object."
msgstr ""
"Se puede llamar este método si el servidor ya está aceptando conexiones.  "
"Sólo puede existir una tarea ``serve_forever`` por cada objeto *Server*."

#: ../../library/asyncio-eventloop.rst:1709
msgid ""
"async def client_connected(reader, writer):\n"
"    # Communicate with the client with\n"
"    # reader/writer streams.  For example:\n"
"    await reader.readline()\n"
"\n"
"async def main(host, port):\n"
"    srv = await asyncio.start_server(\n"
"        client_connected, host, port)\n"
"    await srv.serve_forever()\n"
"\n"
"asyncio.run(main('127.0.0.1', 0))"
msgstr ""
"async def client_connected(reader, writer):\n"
"    # Comunicarse con el cliente con\n"
"    # flujos lector/escritor.  Por ejemplo\n"
"    await reader.readline()\n"
"\n"
"async def main(host, port):\n"
"    srv = await asyncio.start_server(\n"
"        client_connected, host, port)\n"
"    await srv.serve_forever()\n"
"\n"
"asyncio.run(main('127.0.0.1', 0))"

#: ../../library/asyncio-eventloop.rst:1725
msgid "Return ``True`` if the server is accepting new connections."
msgstr "Devuelve ``True`` si el servidor está aceptando nuevas conexiones."

#: ../../library/asyncio-eventloop.rst:1732
msgid ""
"Wait until the :meth:`close` method completes and all active connections "
"have finished."
msgstr ""
"Espere hasta que el método :meth:`close` finalice y todas las conexiones "
"activas hayan terminado."

#: ../../library/asyncio-eventloop.rst:1737
msgid ""
"List of socket-like objects, ``asyncio.trsock.TransportSocket``, which the "
"server is listening on."
msgstr ""
"Lista de objetos tipo socket, ``asyncio.trsock.TransportSocket``, que el "
"servidor está escuchando."

#: ../../library/asyncio-eventloop.rst:1740
msgid ""
"Prior to Python 3.7 ``Server.sockets`` used to return an internal list of "
"server sockets directly.  In 3.7 a copy of that list is returned."
msgstr ""
"Antes de Python 3.7 ``Server.sockets`` devolvía directamente una lista "
"interna de sockets del servidor.  En 3.7 se devuelve una copia de esa lista."

#: ../../library/asyncio-eventloop.rst:1750
msgid "Event Loop Implementations"
msgstr "Implementación de bucles de eventos"

#: ../../library/asyncio-eventloop.rst:1752
msgid ""
"asyncio ships with two different event loop implementations: :class:"
"`SelectorEventLoop` and :class:`ProactorEventLoop`."
msgstr ""
"asyncio incluye dos implementaciones diferentes de bucles de eventos: :class:"
"`SelectorEventLoop` y :class:`ProactorEventLoop`."

#: ../../library/asyncio-eventloop.rst:1755
msgid ""
"By default asyncio is configured to use :class:`SelectorEventLoop` on Unix "
"and :class:`ProactorEventLoop` on Windows."
msgstr ""
"Por defecto, asyncio está configurado para utilizar :class:"
"`SelectorEventLoop` en Unix y :class:`ProactorEventLoop` en Windows."

#: ../../library/asyncio-eventloop.rst:1761
msgid "An event loop based on the :mod:`selectors` module."
msgstr "Un bucle de eventos basado en el módulo :mod:`selectors`."

#: ../../library/asyncio-eventloop.rst:1763
msgid ""
"Uses the most efficient *selector* available for the given platform.  It is "
"also possible to manually configure the exact selector implementation to be "
"used::"
msgstr ""
"Utiliza el *selector* más eficiente disponible para la plataforma dada.  "
"También es posible configurar manualmente la implementación exacta del "
"selector que se va a utilizar::"

#: ../../library/asyncio-eventloop.rst:1767
msgid ""
"import asyncio\n"
"import selectors\n"
"\n"
"class MyPolicy(asyncio.DefaultEventLoopPolicy):\n"
"   def new_event_loop(self):\n"
"      selector = selectors.SelectSelector()\n"
"      return asyncio.SelectorEventLoop(selector)\n"
"\n"
"asyncio.set_event_loop_policy(MyPolicy())"
msgstr ""
"import asyncio\n"
"import selectors\n"
"\n"
"class MyPolicy(asyncio.DefaultEventLoopPolicy):\n"
"   def new_event_loop(self):\n"
"      selector = selectors.SelectSelector()\n"
"      return asyncio.SelectorEventLoop(selector)\n"
"\n"
"asyncio.set_event_loop_policy(MyPolicy())"

#: ../../library/asyncio-eventloop.rst:1783
msgid "An event loop for Windows that uses \"I/O Completion Ports\" (IOCP)."
msgstr ""
"Un bucle de eventos para Windows que utiliza \"I/O Completion Ports\" (IOCP)."

#: ../../library/asyncio-eventloop.rst:1789
msgid ""
"`MSDN documentation on I/O Completion Ports <https://learn.microsoft.com/"
"windows/win32/fileio/i-o-completion-ports>`_."
msgstr ""
"`MSDN documentation on I/O Completion Ports <https://learn.microsoft.com/"
"windows/win32/fileio/i-o-completion-ports>`_."

#: ../../library/asyncio-eventloop.rst:1795
msgid "Abstract base class for asyncio-compliant event loops."
msgstr "Clase base abstracta para bucles de eventos compatibles con asyncio."

#: ../../library/asyncio-eventloop.rst:1797
msgid ""
"The :ref:`asyncio-event-loop-methods` section lists all methods that an "
"alternative implementation of ``AbstractEventLoop`` should have defined."
msgstr ""
"La sección :ref:`asyncio-event-loop-methods` enumera todos los métodos que "
"una implementación alternativa de ``AbstractEventLoop`` debería haber "
"definido."

#: ../../library/asyncio-eventloop.rst:1803
msgid "Examples"
msgstr "Ejemplos"

#: ../../library/asyncio-eventloop.rst:1805
msgid ""
"Note that all examples in this section **purposefully** show how to use the "
"low-level event loop APIs, such as :meth:`loop.run_forever` and :meth:`loop."
"call_soon`.  Modern asyncio applications rarely need to be written this way; "
"consider using the high-level functions like :func:`asyncio.run`."
msgstr ""
"Ten en cuenta que todos los ejemplos de esta sección muestran **a "
"propósito** cómo utilizar las APIs de bucle de eventos de bajo nivel, como :"
"meth:`loop.run_forever` y :meth:`loop.call_soon`.  Las aplicaciones asyncio "
"modernas raramente necesitan ser escritas de esta manera; considera usar las "
"funciones de alto nivel como :func:`asyncio.run`."

#: ../../library/asyncio-eventloop.rst:1815
msgid "Hello World with call_soon()"
msgstr "Hola Mundo con call_soon()"

#: ../../library/asyncio-eventloop.rst:1817
msgid ""
"An example using the :meth:`loop.call_soon` method to schedule a callback. "
"The callback displays ``\"Hello World\"`` and then stops the event loop::"
msgstr ""
"Un ejemplo usando el método :meth:`loop.call_soon` para programar un "
"callback. La devolución de llamada muestra ``\"Hello World\"`` y luego "
"detiene el bucle de eventos::"

#: ../../library/asyncio-eventloop.rst:1821
msgid ""
"import asyncio\n"
"\n"
"def hello_world(loop):\n"
"    \"\"\"A callback to print 'Hello World' and stop the event loop\"\"\"\n"
"    print('Hello World')\n"
"    loop.stop()\n"
"\n"
"loop = asyncio.new_event_loop()\n"
"\n"
"# Schedule a call to hello_world()\n"
"loop.call_soon(hello_world, loop)\n"
"\n"
"# Blocking call interrupted by loop.stop()\n"
"try:\n"
"    loop.run_forever()\n"
"finally:\n"
"    loop.close()"
msgstr ""
"import asyncio\n"
"\n"
"def hello_world(loop):\n"
"    \"\"\"Una llamada de retorno para imprimir 'Hola Mundo' y detener el "
"bucle de eventos\"\"\"\n"
"    print('Hola Mundo')\n"
"    loop.stop()\n"
"\n"
"loop = asyncio.new_event_loop()\n"
"\n"
"# Schedule a call to hello_world()\n"
"loop.call_soon(hello_world, loop)\n"
"\n"
"# Blocking call interrupted by loop.stop()\n"
"try:\n"
"      loop.run_forever()\n"
"finally:\n"
"        loop.close()"

#: ../../library/asyncio-eventloop.rst:1841
msgid ""
"A similar :ref:`Hello World <coroutine>` example created with a coroutine "
"and the :func:`run` function."
msgstr ""
"Un ejemplo similar :ref:`Hello World <coroutine>` creado con una corrutina y "
"la función :func:`run`."

#: ../../library/asyncio-eventloop.rst:1848
msgid "Display the current date with call_later()"
msgstr "Mostrar la fecha actual con call_later()"

#: ../../library/asyncio-eventloop.rst:1850
msgid ""
"An example of a callback displaying the current date every second. The "
"callback uses the :meth:`loop.call_later` method to reschedule itself after "
"5 seconds, and then stops the event loop::"
msgstr ""
"Un ejemplo de un callback que muestra la fecha actual cada segundo. La "
"llamada de retorno utiliza el método :meth:`loop.call_later` para "
"reprogramarse después de 5 segundos, y luego detiene el bucle de eventos::"

#: ../../library/asyncio-eventloop.rst:1854
msgid ""
"import asyncio\n"
"import datetime\n"
"\n"
"def display_date(end_time, loop):\n"
"    print(datetime.datetime.now())\n"
"    if (loop.time() + 1.0) < end_time:\n"
"        loop.call_later(1, display_date, end_time, loop)\n"
"    else:\n"
"        loop.stop()\n"
"\n"
"loop = asyncio.new_event_loop()\n"
"\n"
"# Schedule the first call to display_date()\n"
"end_time = loop.time() + 5.0\n"
"loop.call_soon(display_date, end_time, loop)\n"
"\n"
"# Blocking call interrupted by loop.stop()\n"
"try:\n"
"    loop.run_forever()\n"
"finally:\n"
"    loop.close()"
msgstr ""
"import asyncio\n"
"import datetime\n"
"\n"
"def display_date(end_time, loop):\n"
"    print(datetime.datetime.now())\n"
"    if (loop.time() + 1.0) < end_time:\n"
"        loop.call_later(1, display_date, end_time, loop)\n"
"    else:\n"
"        loop.stop()\n"
"\n"
"loop = asyncio.new_event_loop()\n"
"\n"
"# Schedule the first call to display_date()\n"
"end_time = loop.time() + 5.0\n"
"loop.call_soon(display_date, end_time, loop)\n"
"\n"
"# Blocking call interrupted by loop.stop()\n"
"try:\n"
"    loop.run_forever()\n"
"finally:\n"
"    loop.close()"

#: ../../library/asyncio-eventloop.rst:1878
msgid ""
"A similar :ref:`current date <asyncio_example_sleep>` example created with a "
"coroutine and the :func:`run` function."
msgstr ""
"Un ejemplo similar :ref:`current date <asyncio_example_sleep>` creado con "
"una corrutina y la función :func:`run`."

#: ../../library/asyncio-eventloop.rst:1885
msgid "Watch a file descriptor for read events"
msgstr "Observar un descriptor de archivo para eventos de lectura"

#: ../../library/asyncio-eventloop.rst:1887
msgid ""
"Wait until a file descriptor received some data using the :meth:`loop."
"add_reader` method and then close the event loop::"
msgstr ""
"Espera hasta que un descriptor de archivo reciba algún dato usando el "
"método :meth:`loop.add_reader` y luego cierra el bucle de eventos::"

#: ../../library/asyncio-eventloop.rst:1890
msgid ""
"import asyncio\n"
"from socket import socketpair\n"
"\n"
"# Create a pair of connected file descriptors\n"
"rsock, wsock = socketpair()\n"
"\n"
"loop = asyncio.new_event_loop()\n"
"\n"
"def reader():\n"
"    data = rsock.recv(100)\n"
"    print(\"Received:\", data.decode())\n"
"\n"
"    # We are done: unregister the file descriptor\n"
"    loop.remove_reader(rsock)\n"
"\n"
"    # Stop the event loop\n"
"    loop.stop()\n"
"\n"
"# Register the file descriptor for read event\n"
"loop.add_reader(rsock, reader)\n"
"\n"
"# Simulate the reception of data from the network\n"
"loop.call_soon(wsock.send, 'abc'.encode())\n"
"\n"
"try:\n"
"    # Run the event loop\n"
"    loop.run_forever()\n"
"finally:\n"
"    # We are done. Close sockets and the event loop.\n"
"    rsock.close()\n"
"    wsock.close()\n"
"    loop.close()"
msgstr ""
"import asyncio\n"
"from socket import socketpair\n"
"\n"
"# Crear un par de descriptores de fichero conectados\n"
"rsock, wsock = socketpair()\n"
"\n"
"loop = asyncio.new_event_loop()\n"
"\n"
"def reader():\n"
"    data = rsock.recv(100)\n"
"    print(\"Recibido:\", data.decode())\n"
"\n"
"    # Hemos terminado: anula el registro del descriptor de fichero\n"
"    loop.remove_reader(rsock)\n"
"\n"
"    # Detener el bucle de eventos\n"
"    loop.stop()\n"
"\n"
"# Registrar el descriptor de fichero para el evento de lectura\n"
"loop.add_reader(rsock, reader)\n"
"\n"
"# Simular la recepción de datos de la red\n"
"loop.call_soon(wsock.send, 'abc'.encode())\n"
"\n"
"try:\n"
"    # Ejecuta el bucle de eventos\n"
"    loop.run_forever()\n"
"finally:\n"
"    # Hemos terminado. Cierra los sockets y el bucle de eventos.\n"
"    rsock.close()\n"
"    wsock.close()\n"
"    loop.close()"

#: ../../library/asyncio-eventloop.rst:1925
msgid ""
"A similar :ref:`example <asyncio_example_create_connection>` using "
"transports, protocols, and the :meth:`loop.create_connection` method."
msgstr ""
"Un ejemplo similar :ref:` <asyncio_example_create_connection>` utilizando "
"transportes, protocolos y el método :meth:`loop.create_connection`."

#: ../../library/asyncio-eventloop.rst:1929
msgid ""
"Another similar :ref:`example <asyncio_example_create_connection-streams>` "
"using the high-level :func:`asyncio.open_connection` function and streams."
msgstr ""
"Otro ejemplo similar :ref:` <asyncio_example_create_connection-streams>` "
"utilizando la función de alto nivel :func:`asyncio.open_connection` y flujos."

#: ../../library/asyncio-eventloop.rst:1937
msgid "Set signal handlers for SIGINT and SIGTERM"
msgstr "Establecer manejadores de señales para SIGINT y SIGTERM"

#: ../../library/asyncio-eventloop.rst:1939
msgid "(This ``signals`` example only works on Unix.)"
msgstr "(Este ejemplo de ``signals`` sólo funciona en Unix)."

#: ../../library/asyncio-eventloop.rst:1941
msgid ""
"Register handlers for signals :const:`~signal.SIGINT` and :const:`~signal."
"SIGTERM` using the :meth:`loop.add_signal_handler` method::"
msgstr ""
"Registra manejadores para las señales :const:`~signal.SIGINT` y :const:"
"`~signal.SIGTERM` usando el método :meth:`loop.add_signal_handler`::"

#: ../../library/asyncio-eventloop.rst:1944
msgid ""
"import asyncio\n"
"import functools\n"
"import os\n"
"import signal\n"
"\n"
"def ask_exit(signame, loop):\n"
"    print(\"got signal %s: exit\" % signame)\n"
"    loop.stop()\n"
"\n"
"async def main():\n"
"    loop = asyncio.get_running_loop()\n"
"\n"
"    for signame in {'SIGINT', 'SIGTERM'}:\n"
"        loop.add_signal_handler(\n"
"            getattr(signal, signame),\n"
"            functools.partial(ask_exit, signame, loop))\n"
"\n"
"    await asyncio.sleep(3600)\n"
"\n"
"print(\"Event loop running for 1 hour, press Ctrl+C to interrupt.\")\n"
"print(f\"pid {os.getpid()}: send SIGINT or SIGTERM to exit.\")\n"
"\n"
"asyncio.run(main())"
msgstr ""
"import asyncio\n"
"import functools\n"
"import os\n"
"import signal\n"
"\n"
"def ask_exit(signame, loop):\n"
"    print(\"got signal %s: exit\" % signame)\n"
"    loop.stop()\n"
"\n"
"async def main():\n"
"    loop = asyncio.get_running_loop()\n"
"\n"
"    for signame in {'SIGINT', 'SIGTERM'}:\n"
"        loop.add_signal_handler(\n"
"            getattr(signal, signame),\n"
"            functools.partial(ask_exit, signame, loop))\n"
"\n"
"    await asyncio.sleep(3600)\n"
"\n"
"print(\"Bucle de eventos ejecutándose durante 1 hora, pulsar Ctrl + C para "
"interrumpir.\")\n"
"print(f\"pid {os.getpid()}: send SIGINT or SIGTERM to exit.\")\n"
"\n"
"asyncio.run(main())"
