# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001 Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# python-doc bot, 2025
# Rafael Fontenelle <rffontenelle@gmail.com>, 2025
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.14\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-25 14:15+0000\n"
"PO-Revision-Date: 2025-09-16 00:00+0000\n"
"Last-Translator: Rafael Fontenelle <rffontenelle@gmail.com>, 2025\n"
"Language-Team: Spanish (Spain) (https://app.transifex.com/python-doc/"
"teams/5390/es_ES/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: es_ES\n"
"Plural-Forms: nplurals=3; plural=n == 1 ? 0 : n != 0 && n % 1000000 == 0 ? "
"1 : 2;\n"

#: ../../library/asyncio-subprocess.rst:7
msgid "Subprocesses"
msgstr "Subprocesos"

#: ../../library/asyncio-subprocess.rst:9
msgid ""
"**Source code:** :source:`Lib/asyncio/subprocess.py`, :source:`Lib/asyncio/"
"base_subprocess.py`"
msgstr ""
"**Código fuente:** :source:`Lib/asyncio/subprocess.py`, :source:`Lib/asyncio/"
"base_subprocess.py`"

#: ../../library/asyncio-subprocess.rst:14
msgid ""
"This section describes high-level async/await asyncio APIs to create and "
"manage subprocesses."
msgstr ""
"Esta sección describe las APIs async/await asyncio de alto nivel para crear "
"y gestionar subprocesos."

#: ../../library/asyncio-subprocess.rst:19
msgid ""
"Here's an example of how asyncio can run a shell command and obtain its "
"result::"
msgstr ""
"He aquí un ejemplo de cómo asyncio puede ejecutar un comando shell y obtener "
"su resultado::"

#: ../../library/asyncio-subprocess.rst:22
msgid ""
"import asyncio\n"
"\n"
"async def run(cmd):\n"
"    proc = await asyncio.create_subprocess_shell(\n"
"        cmd,\n"
"        stdout=asyncio.subprocess.PIPE,\n"
"        stderr=asyncio.subprocess.PIPE)\n"
"\n"
"    stdout, stderr = await proc.communicate()\n"
"\n"
"    print(f'[{cmd!r} exited with {proc.returncode}]')\n"
"    if stdout:\n"
"        print(f'[stdout]\\n{stdout.decode()}')\n"
"    if stderr:\n"
"        print(f'[stderr]\\n{stderr.decode()}')\n"
"\n"
"asyncio.run(run('ls /zzz'))"
msgstr ""
"import asyncio\n"
"\n"
"async def run(cmd):\n"
"    proc = await asyncio.create_subprocess_shell(\n"
"        cmd,\n"
"        stdout=asyncio.subprocess.PIPE,\n"
"        stderr=asyncio.subprocess.PIPE)\n"
"\n"
"    stdout, stderr = await proc.communicate()\n"
"\n"
"    print(f'[{cmd!r} exited with {proc.returncode}]')\n"
"    if stdout:\n"
"        print(f'[stdout]\\n{stdout.decode()}')\n"
"    if stderr:\n"
"        print(f'[stderr]\\n{stderr.decode()}')\n"
"\n"
"asyncio.run(run('ls /zzz'))"

#: ../../library/asyncio-subprocess.rst:40
msgid "will print::"
msgstr "imprimirá::"

#: ../../library/asyncio-subprocess.rst:42
msgid ""
"['ls /zzz' exited with 1]\n"
"[stderr]\n"
"ls: /zzz: No such file or directory"
msgstr ""
"['ls /zzz' exited with 1]\n"
"[stderr]\n"
"ls: /zzz: No such file or directory"

#: ../../library/asyncio-subprocess.rst:46
msgid ""
"Because all asyncio subprocess functions are asynchronous and asyncio "
"provides many tools to work with such functions, it is easy to execute and "
"monitor multiple subprocesses in parallel.  It is indeed trivial to modify "
"the above example to run several commands simultaneously::"
msgstr ""
"Como todas las funciones de subproceso de asyncio son asíncronas y asyncio "
"proporciona muchas herramientas para trabajar con dichas funciones, es fácil "
"ejecutar y monitorizar múltiples subprocesos en paralelo.  De hecho, es "
"trivial modificar el ejemplo anterior para ejecutar varios comandos "
"simultáneamente::"

#: ../../library/asyncio-subprocess.rst:51
msgid ""
"async def main():\n"
"    await asyncio.gather(\n"
"        run('ls /zzz'),\n"
"        run('sleep 1; echo \"hello\"'))\n"
"\n"
"asyncio.run(main())"
msgstr ""
"async def main():\n"
"    await asyncio.gather(\n"
"        run('ls /zzz'),\n"
"        run('sleep 1; echo \"hola\"'))\n"
"\n"
"asyncio.run(main())"

#: ../../library/asyncio-subprocess.rst:58
msgid "See also the `Examples`_ subsection."
msgstr "Ver también la subsección `Examples`_."

#: ../../library/asyncio-subprocess.rst:62
msgid "Creating Subprocesses"
msgstr "Creación de subprocesos"

#: ../../library/asyncio-subprocess.rst:68
msgid "Create a subprocess."
msgstr "Crear un subproceso."

#: ../../library/asyncio-subprocess.rst:70
#: ../../library/asyncio-subprocess.rst:89
msgid ""
"The *limit* argument sets the buffer limit for :class:`StreamReader` "
"wrappers for :attr:`~asyncio.subprocess.Process.stdout` and :attr:`~asyncio."
"subprocess.Process.stderr` (if :const:`subprocess.PIPE` is passed to "
"*stdout* and *stderr* arguments)."
msgstr ""
"El argumento *limit* establece el límite del búfer de las envolturas :class:"
"`StreamReader` para :attr:`~asyncio.subprocess.Process.stdout` y :attr:"
"`~asyncio.subprocess.Process.stderr` (si se pasa :const:`subprocess.PIPE` a "
"los argumentos *stdout* y *stderr*)."

#: ../../library/asyncio-subprocess.rst:74
#: ../../library/asyncio-subprocess.rst:93
msgid "Return a :class:`~asyncio.subprocess.Process` instance."
msgstr "Devuelve una instancia de :class:`~asyncio.subprocess.Process`."

#: ../../library/asyncio-subprocess.rst:76
msgid ""
"See the documentation of :meth:`loop.subprocess_exec` for other parameters."
msgstr ""
"Ver la documentación de :meth:`loop.subprocess_exec` para conocer otros "
"parámetros."

#: ../../library/asyncio-subprocess.rst:79
#: ../../library/asyncio-subprocess.rst:107
msgid "Removed the *loop* parameter."
msgstr "Eliminado el parámetro *loop*."

#: ../../library/asyncio-subprocess.rst:87
msgid "Run the *cmd* shell command."
msgstr "Ejecutar el comando de shell *cmd*."

#: ../../library/asyncio-subprocess.rst:95
msgid ""
"See the documentation of :meth:`loop.subprocess_shell` for other parameters."
msgstr ""
"Consulte la documentación de :meth:`loop.subprocess_shell` para conocer "
"otros parámetros."

#: ../../library/asyncio-subprocess.rst:100
msgid ""
"It is the application's responsibility to ensure that all whitespace and "
"special characters are quoted appropriately to avoid `shell injection "
"<https://en.wikipedia.org/wiki/Shell_injection#Shell_injection>`_ "
"vulnerabilities. The :func:`shlex.quote` function can be used to properly "
"escape whitespace and special shell characters in strings that are going to "
"be used to construct shell commands."
msgstr ""
"Es responsabilidad de la aplicación asegurarse de que todos los espacios en "
"blanco y caracteres especiales se entrecomillan adecuadamente para evitar "
"vulnerabilidades de `shell injection <https://en.wikipedia.org/wiki/"
"Shell_injection#Shell_injection>`_. La función :func:`shlex.quote` se puede "
"utilizar para escapar correctamente los espacios en blanco y los caracteres "
"especiales de shell en las cadenas que se van a utilizar para construir "
"comandos de shell."

#: ../../library/asyncio-subprocess.rst:112
msgid ""
"Subprocesses are available for Windows if a :class:`ProactorEventLoop` is "
"used. See :ref:`Subprocess Support on Windows <asyncio-windows-subprocess>` "
"for details."
msgstr ""
"Los subprocesos están disponibles para Windows si se utiliza :class:"
"`ProactorEventLoop`. Para más detalles :ref:`Subprocess Support on Windows "
"<asyncio-windows-subprocess>`."

#: ../../library/asyncio-subprocess.rst:118
msgid ""
"asyncio also has the following *low-level* APIs to work with subprocesses: :"
"meth:`loop.subprocess_exec`, :meth:`loop.subprocess_shell`, :meth:`loop."
"connect_read_pipe`, :meth:`loop.connect_write_pipe`, as well as the :ref:"
"`Subprocess Transports <asyncio-subprocess-transports>` and :ref:`Subprocess "
"Protocols <asyncio-subprocess-protocols>`."
msgstr ""
"asyncio también tiene las siguientes APIs de *bajo nivel* para trabajar con "
"subprocesos: :meth:`loop.subprocess_exec`, :meth:`loop.subprocess_shell`, :"
"meth:`loop.connect_read_pipe`, :meth:`loop.connect_write_pipe`, así como "
"los :ref:`Subprocess Transports <asyncio-subprocess-transports>` y :ref:"
"`Subprocess Protocols <asyncio-subprocess-protocols>`."

#: ../../library/asyncio-subprocess.rst:126
msgid "Constants"
msgstr "Constantes"

#: ../../library/asyncio-subprocess.rst:131
msgid "Can be passed to the *stdin*, *stdout* or *stderr* parameters."
msgstr "Puede pasarse a los parámetros *stdin*, *stdout* o *stderr*."

#: ../../library/asyncio-subprocess.rst:133
msgid ""
"If *PIPE* is passed to *stdin* argument, the :attr:`Process.stdin <asyncio."
"subprocess.Process.stdin>` attribute will point to a :class:`~asyncio."
"StreamWriter` instance."
msgstr ""
"Si se pasa *PIPE* al argumento *stdin*, el atributo :attr:`Process.stdin "
"<asyncio.subprocess.Process.stdin>` apuntará a una instancia de :class:"
"`~asyncio.StreamWriter`."

#: ../../library/asyncio-subprocess.rst:137
msgid ""
"If *PIPE* is passed to *stdout* or *stderr* arguments, the :attr:`Process."
"stdout <asyncio.subprocess.Process.stdout>` and :attr:`Process.stderr "
"<asyncio.subprocess.Process.stderr>` attributes will point to :class:"
"`~asyncio.StreamReader` instances."
msgstr ""
"Si se pasa *PIPE* a los argumentos *stdout* o *stderr*, los atributos :attr:"
"`Process.stdout <asyncio.subprocess.Process.stdout>` y :attr:`Process.stderr "
"<asyncio.subprocess.Process.stderr>` apuntarán a las instancias :class:"
"`~asyncio.StreamReader`."

#: ../../library/asyncio-subprocess.rst:145
msgid ""
"Special value that can be used as the *stderr* argument and indicates that "
"standard error should be redirected into standard output."
msgstr ""
"Valor especial que puede utilizarse como argumento *stderr* e indica que el "
"error estándar debe redirigirse a la salida estándar."

#: ../../library/asyncio-subprocess.rst:151
msgid ""
"Special value that can be used as the *stdin*, *stdout* or *stderr* argument "
"to process creation functions.  It indicates that the special file :data:`os."
"devnull` will be used for the corresponding subprocess stream."
msgstr ""
"Valor especial que puede utilizarse como argumento *stdin*, *stdout* o "
"*stderr* en las funciones de creación de procesos.  Indica que se utilizará "
"el archivo especial :data:`os.devnull` para el flujo del subproceso "
"correspondiente."

#: ../../library/asyncio-subprocess.rst:157
msgid "Interacting with Subprocesses"
msgstr "Interacción con subprocesos"

#: ../../library/asyncio-subprocess.rst:159
msgid ""
"Both :func:`create_subprocess_exec` and :func:`create_subprocess_shell` "
"functions return instances of the *Process* class.  *Process* is a high-"
"level wrapper that allows communicating with subprocesses and watching for "
"their completion."
msgstr ""
"Ambas funciones :func:`create_subprocess_exec` y :func:"
"`create_subprocess_shell` devuelven instancias de la clase *Process*.  "
"*Process* es una envoltura de alto nivel que permite comunicarse con "
"subprocesos y vigilar su finalización."

#: ../../library/asyncio-subprocess.rst:167
msgid ""
"An object that wraps OS processes created by the :func:`~asyncio."
"create_subprocess_exec` and :func:`~asyncio.create_subprocess_shell` "
"functions."
msgstr ""
"Un objeto que envuelve los procesos del SO creados por las funciones :func:"
"`~asyncio.create_subprocess_exec` y :func:`~asyncio.create_subprocess_shell`."

#: ../../library/asyncio-subprocess.rst:171
msgid ""
"This class is designed to have a similar API to the :class:`subprocess."
"Popen` class, but there are some notable differences:"
msgstr ""
"Esta clase está diseñada para tener una API similar a la clase :class:"
"`subprocess.Popen`, pero hay algunas diferencias notables:"

#: ../../library/asyncio-subprocess.rst:175
msgid ""
"unlike Popen, Process instances do not have an equivalent to the :meth:"
"`~subprocess.Popen.poll` method;"
msgstr ""
"A diferencia de Popen, las instancias de Proceso no tienen un equivalente al "
"método :meth:`~subprocess.Popen.poll`;"

#: ../../library/asyncio-subprocess.rst:178
msgid ""
"the :meth:`~asyncio.subprocess.Process.communicate` and :meth:`~asyncio."
"subprocess.Process.wait` methods don't have a *timeout* parameter: use the :"
"func:`~asyncio.wait_for` function;"
msgstr ""
"los métodos :meth:`~asyncio.subprocess.Process.communicate` y :meth:"
"`~asyncio.subprocess.Process.wait` no tienen un parámetro *timeout*: "
"utilizar la función :func:`~asyncio.wait_for`;"

#: ../../library/asyncio-subprocess.rst:182
msgid ""
"the :meth:`Process.wait() <asyncio.subprocess.Process.wait>` method is "
"asynchronous, whereas :meth:`subprocess.Popen.wait` method is implemented as "
"a blocking busy loop;"
msgstr ""
"el método :meth:`Process.wait() <asyncio.subprocess.Process.wait>` es "
"asíncrono, mientras que el método :meth:`subprocess.Popen.wait` se "
"implementa como un bucle ocupado de bloqueo;"

#: ../../library/asyncio-subprocess.rst:186
msgid "the *universal_newlines* parameter is not supported."
msgstr "el parámetro *universal_newlines* no está soportado."

#: ../../library/asyncio-subprocess.rst:188
msgid "This class is :ref:`not thread safe <asyncio-multithreading>`."
msgstr "Esta clase es :ref:`no thread safe <asyncio-multithreading>`."

#: ../../library/asyncio-subprocess.rst:190
msgid ""
"See also the :ref:`Subprocess and Threads <asyncio-subprocess-threads>` "
"section."
msgstr ""
"Ver también la sección :ref:`Subprocess and Threads  <asyncio-subprocess-"
"threads>`."

#: ../../library/asyncio-subprocess.rst:196
msgid "Wait for the child process to terminate."
msgstr "Esperar a que el proceso hijo termine."

#: ../../library/asyncio-subprocess.rst:198
msgid "Set and return the :attr:`returncode` attribute."
msgstr "Establece y devuelve el atributo :attr:`returncode`."

#: ../../library/asyncio-subprocess.rst:202
msgid ""
"This method can deadlock when using ``stdout=PIPE`` or ``stderr=PIPE`` and "
"the child process generates so much output that it blocks waiting for the OS "
"pipe buffer to accept more data. Use the :meth:`communicate` method when "
"using pipes to avoid this condition."
msgstr ""
"Este método puede bloquearse cuando se utiliza ``stdout=PIPE`` o "
"``stderr=PIPE`` y el proceso hijo genera tanta salida que se bloquea "
"esperando a que el buffer de la tubería del sistema operativo acepte más "
"datos. Utilice el método :meth:`communicate` cuando use tuberías para evitar "
"esta situación."

#: ../../library/asyncio-subprocess.rst:211
msgid "Interact with process:"
msgstr "Interactúa con el proceso:"

#: ../../library/asyncio-subprocess.rst:213
msgid "send data to *stdin* (if *input* is not ``None``);"
msgstr "enviar datos a *stdin* (si *input* no es ``None``);"

#: ../../library/asyncio-subprocess.rst:214
msgid "closes *stdin*;"
msgstr "cierra *stdin*;"

#: ../../library/asyncio-subprocess.rst:215
msgid "read data from *stdout* and *stderr*, until EOF is reached;"
msgstr "leer datos de *stdout* y *stderr*, hasta alcanzar EOF;"

#: ../../library/asyncio-subprocess.rst:216
msgid "wait for process to terminate."
msgstr "esperar a que termine el proceso."

#: ../../library/asyncio-subprocess.rst:218
msgid ""
"The optional *input* argument is the data (:class:`bytes` object) that will "
"be sent to the child process."
msgstr ""
"El argumento opcional *input* son los datos ( objeto:class:`bytes` ) que se "
"enviarán al proceso hijo."

#: ../../library/asyncio-subprocess.rst:221
msgid "Return a tuple ``(stdout_data, stderr_data)``."
msgstr "Devuelve una tupla ``(stdout_data, stderr_data)``."

#: ../../library/asyncio-subprocess.rst:223
msgid ""
"If either :exc:`BrokenPipeError` or :exc:`ConnectionResetError` exception is "
"raised when writing *input* into *stdin*, the exception is ignored.  This "
"condition occurs when the process exits before all data are written into "
"*stdin*."
msgstr ""
"Si se produce una excepción en :exc:`BrokenPipeError` o :exc:"
"`ConnectionResetError` al escribir *input* en *stdin*, la excepción se "
"ignora.  Esta condición ocurre cuando el proceso sale antes de que todos los "
"datos sean escritos en *stdin*."

#: ../../library/asyncio-subprocess.rst:228
msgid ""
"If it is desired to send data to the process' *stdin*, the process needs to "
"be created with ``stdin=PIPE``.  Similarly, to get anything other than "
"``None`` in the result tuple, the process has to be created with "
"``stdout=PIPE`` and/or ``stderr=PIPE`` arguments."
msgstr ""
"Si se desea enviar datos al *stdin* del proceso, éste debe crearse con "
"``stdin=PIPE``.  Del mismo modo, para obtener cualquier cosa que no sea "
"``None`` en la tupla de resultados, el proceso tiene que ser creado con "
"``stdout=PIPE`` y/o ``stderr=PIPE`` argumentos."

#: ../../library/asyncio-subprocess.rst:234
msgid ""
"Note, that the data read is buffered in memory, so do not use this method if "
"the data size is large or unlimited."
msgstr ""
"Tenga en cuenta que los datos leídos se almacenan en memoria, por lo que no "
"debe utilizar este método si el tamaño de los datos es grande o ilimitado."

#: ../../library/asyncio-subprocess.rst:239
msgid "*stdin* gets closed when ``input=None`` too."
msgstr "*stdin* también se cierra cuando ``input=None``."

#: ../../library/asyncio-subprocess.rst:243
msgid "Sends the signal *signal* to the child process."
msgstr "Envía la señal *signal* al proceso hijo."

#: ../../library/asyncio-subprocess.rst:247
msgid ""
"On Windows, :py:const:`~signal.SIGTERM` is an alias for :meth:`terminate`. "
"``CTRL_C_EVENT`` and ``CTRL_BREAK_EVENT`` can be sent to processes started "
"with a *creationflags* parameter which includes ``CREATE_NEW_PROCESS_GROUP``."
msgstr ""
"En Windows, :py:const:`~signal.SIGTERM` es un alias de :meth:`terminate`. "
"``CTRL_C_EVENT`` y ``CTRL_BREAK_EVENT`` pueden enviarse a procesos iniciados "
"con un parámetro *creationflags* que incluya ``CREATE_NEW_PROCESS_GROUP``."

#: ../../library/asyncio-subprocess.rst:254
msgid "Stop the child process."
msgstr "Detener el proceso hijo."

#: ../../library/asyncio-subprocess.rst:256
msgid ""
"On POSIX systems this method sends :py:const:`~signal.SIGTERM` to the child "
"process."
msgstr ""
"En sistemas POSIX este método envía :py:const:`~signal.SIGTERM` al proceso "
"hijo."

#: ../../library/asyncio-subprocess.rst:259
msgid ""
"On Windows the Win32 API function :c:func:`!TerminateProcess` is called to "
"stop the child process."
msgstr ""
"En Windows se llama a la función Win32 API :c:func:`!TerminateProcess` para "
"detener el proceso hijo."

#: ../../library/asyncio-subprocess.rst:264
msgid "Kill the child process."
msgstr "Mata el proceso hijo."

#: ../../library/asyncio-subprocess.rst:266
msgid ""
"On POSIX systems this method sends :py:data:`~signal.SIGKILL` to the child "
"process."
msgstr ""
"En sistemas POSIX este método envía :py:data:`~signal.SIGKILL` al proceso "
"hijo."

#: ../../library/asyncio-subprocess.rst:269
msgid "On Windows this method is an alias for :meth:`terminate`."
msgstr "En Windows, este método es un alias de :meth:`terminate`."

#: ../../library/asyncio-subprocess.rst:273
msgid ""
"Standard input stream (:class:`~asyncio.StreamWriter`) or ``None`` if the "
"process was created with ``stdin=None``."
msgstr ""
"Flujo de entrada estándar (:class:`~asyncio.StreamWriter`) o ``None`` si el "
"proceso se creó con ``stdin=None``."

#: ../../library/asyncio-subprocess.rst:278
msgid ""
"Standard output stream (:class:`~asyncio.StreamReader`) or ``None`` if the "
"process was created with ``stdout=None``."
msgstr ""
"Flujo de salida estándar (:class:`~asyncio.StreamReader`) o ``None`` si el "
"proceso se creó con ``stdout=None``."

#: ../../library/asyncio-subprocess.rst:283
msgid ""
"Standard error stream (:class:`~asyncio.StreamReader`) or ``None`` if the "
"process was created with ``stderr=None``."
msgstr ""
"Flujo de error estándar (:class:`~asyncio.StreamReader`) o ``None`` si el "
"proceso se creó con ``stderr=None``."

#: ../../library/asyncio-subprocess.rst:288
msgid ""
"Use the :meth:`communicate` method rather than :attr:`process.stdin.write() "
"<stdin>`, :attr:`await process.stdout.read() <stdout>` or :attr:`await "
"process.stderr.read() <stderr>`. This avoids deadlocks due to streams "
"pausing reading or writing and blocking the child process."
msgstr ""
"Utilice el método :meth:`communicate` en lugar de :attr:`process.stdin."
"write() <stdin>`, :attr:`await process.stdout.read() <stdout>` o :attr:"
"`await process.stderr.read() <stderr>`. Esto evita bloqueos debidos a flujos "
"que detienen la lectura o escritura y bloquean el proceso hijo."

#: ../../library/asyncio-subprocess.rst:297
msgid "Process identification number (PID)."
msgstr "Número de identificación del proceso (PID)."

#: ../../library/asyncio-subprocess.rst:299
msgid ""
"Note that for processes created by the :func:`~asyncio."
"create_subprocess_shell` function, this attribute is the PID of the spawned "
"shell."
msgstr ""
"Tenga en cuenta que para los procesos creados por la función :func:`~asyncio."
"create_subprocess_shell`, este atributo es el PID del shell generado."

#: ../../library/asyncio-subprocess.rst:304
msgid "Return code of the process when it exits."
msgstr "Código de retorno del proceso cuando sale."

#: ../../library/asyncio-subprocess.rst:306
msgid "A ``None`` value indicates that the process has not terminated yet."
msgstr "Un valor ``None`` indica que el proceso aún no ha terminado."

#: ../../library/asyncio-subprocess.rst:308
msgid ""
"A negative value ``-N`` indicates that the child was terminated by signal "
"``N`` (POSIX only)."
msgstr ""
"Un valor negativo ``-N`` indica que el hijo fue terminado por la señal ``N`` "
"(sólo POSIX)."

#: ../../library/asyncio-subprocess.rst:315
msgid "Subprocess and Threads"
msgstr "Subprocesos e hilos"

#: ../../library/asyncio-subprocess.rst:317
msgid ""
"Standard asyncio event loop supports running subprocesses from different "
"threads by default."
msgstr ""
"El bucle de eventos estándar de asyncio admite la ejecución de subprocesos "
"desde diferentes hilos de forma predeterminada."

#: ../../library/asyncio-subprocess.rst:320
msgid ""
"On Windows subprocesses are provided by :class:`ProactorEventLoop` only "
"(default), :class:`SelectorEventLoop` has no subprocess support."
msgstr ""
"En Windows los subprocesos son proporcionados únicamente por :class:"
"`ProactorEventLoop` (por defecto), :class:`SelectorEventLoop` no tiene "
"soporte para subprocesos."

#: ../../library/asyncio-subprocess.rst:323
msgid ""
"Note that alternative event loop implementations might have own limitations; "
"please refer to their documentation."
msgstr ""
"Tenga en cuenta que las implementaciones alternativas del bucle de eventos "
"pueden tener sus propias limitaciones; consulte su documentación."

#: ../../library/asyncio-subprocess.rst:328
msgid ""
"The :ref:`Concurrency and multithreading in asyncio <asyncio-"
"multithreading>` section."
msgstr ""
"La sección :ref:`Concurrency and multithreading in asyncio <asyncio-"
"multithreading>`."

#: ../../library/asyncio-subprocess.rst:333
msgid "Examples"
msgstr "Ejemplos"

#: ../../library/asyncio-subprocess.rst:335
msgid ""
"An example using the :class:`~asyncio.subprocess.Process` class to control a "
"subprocess and the :class:`StreamReader` class to read from its standard "
"output."
msgstr ""
"Un ejemplo utilizando la clase :class:`~asyncio.subprocess.Process` para "
"controlar un subproceso y la clase :class:`StreamReader` para leer de su "
"salida estándar."

#: ../../library/asyncio-subprocess.rst:341
msgid ""
"The subprocess is created by the :func:`create_subprocess_exec` function::"
msgstr ""
"El subproceso se crea mediante la función :func:`create_subprocess_exec`::"

#: ../../library/asyncio-subprocess.rst:344
msgid ""
"import asyncio\n"
"import sys\n"
"\n"
"async def get_date():\n"
"    code = 'import datetime; print(datetime.datetime.now())'\n"
"\n"
"    # Create the subprocess; redirect the standard output\n"
"    # into a pipe.\n"
"    proc = await asyncio.create_subprocess_exec(\n"
"        sys.executable, '-c', code,\n"
"        stdout=asyncio.subprocess.PIPE)\n"
"\n"
"    # Read one line of output.\n"
"    data = await proc.stdout.readline()\n"
"    line = data.decode('ascii').rstrip()\n"
"\n"
"    # Wait for the subprocess exit.\n"
"    await proc.wait()\n"
"    return line\n"
"\n"
"date = asyncio.run(get_date())\n"
"print(f\"Current date: {date}\")"
msgstr ""
"import asyncio\n"
"import sys\n"
"\n"
"async def get_date():\n"
"    code = 'import datetime; print(datetime.datetime.now())'\n"
"\n"
"    # Crea el subproceso; redirige la salida estándar\n"
"    # a una tubería.\n"
"    proc = await asyncio.create_subprocess_exec(\n"
"sys.executable, '-c', code,\n"
"        stdout=asyncio.subprocess.PIPE)\n"
"\n"
"    # Leer una línea de salida.\n"
"    data = await proc.stdout.readline()\n"
"    line = data.decode('ascii').rstrip()\n"
"\n"
"    # Espera la salida del subproceso.\n"
"    await proc.wait()\n"
"    devolver linea\n"
"\n"
"date = asyncio.run(get_date())\n"
"print(f\"Current date: {date}\")"

#: ../../library/asyncio-subprocess.rst:368
msgid ""
"See also the :ref:`same example <asyncio_example_subprocess_proto>` written "
"using low-level APIs."
msgstr ""
"Ver también el :ref:`same example <asyncio_example_subprocess_proto>` "
"escrito utilizando APIs de bajo nivel."
