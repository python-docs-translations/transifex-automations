# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# python-doc bot, 2025
# Rafael Fontenelle <rffontenelle@gmail.com>, 2025
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.10\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-23 17:01+0000\n"
"PO-Revision-Date: 2025-09-22 15:57+0000\n"
"Last-Translator: Rafael Fontenelle <rffontenelle@gmail.com>, 2025\n"
"Language-Team: Spanish (Spain) (https://app.transifex.com/python-doc/"
"teams/5390/es_ES/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: es_ES\n"
"Plural-Forms: nplurals=3; plural=n == 1 ? 0 : n != 0 && n % 1000000 == 0 ? "
"1 : 2;\n"

#: ../../library/asyncio-queue.rst:7
msgid "Queues"
msgstr "Colas"

#: ../../library/asyncio-queue.rst:9
msgid "**Source code:** :source:`Lib/asyncio/queues.py`"
msgstr "**Código fuente:** :source:`Lib/asyncio/queues.py`"

#: ../../library/asyncio-queue.rst:13
msgid ""
"asyncio queues are designed to be similar to classes of the :mod:`queue` "
"module.  Although asyncio queues are not thread-safe, they are designed to "
"be used specifically in async/await code."
msgstr ""
"Las colas asyncio están diseñadas para ser similares a las clases del "
"módulo :mod:`queue`.  Aunque las colas asyncio no son thread-safe, están "
"diseñadas para ser utilizadas específicamente en código async/await."

#: ../../library/asyncio-queue.rst:17
msgid ""
"Note that methods of asyncio queues don't have a *timeout* parameter; use :"
"func:`asyncio.wait_for` function to do queue operations with a timeout."
msgstr ""
"Tener en cuenta que los métodos de las colas asyncio no tienen un parámetro "
"*timeout*; usar la función :func:`asyncio.wait_for` para realizar "
"operaciones de cola con un tiempo de espera."

#: ../../library/asyncio-queue.rst:21
msgid "See also the `Examples`_ section below."
msgstr "Ver también, más abajo, la sección `Examples`_."

#: ../../library/asyncio-queue.rst:24
msgid "Queue"
msgstr "Cola"

#: ../../library/asyncio-queue.rst:28
msgid "A first in, first out (FIFO) queue."
msgstr "Una cola FIFO (primero en entrar, primero en salir)."

#: ../../library/asyncio-queue.rst:30
msgid ""
"If *maxsize* is less than or equal to zero, the queue size is infinite.  If "
"it is an integer greater than ``0``, then ``await put()`` blocks when the "
"queue reaches *maxsize* until an item is removed by :meth:`get`."
msgstr ""
"Si *maxsize* es menor o igual que cero, el tamaño de la cola es infinito.  "
"Si es un número entero mayor que ``0``, entonces ``await put()`` se bloquea "
"cuando la cola alcanza *maxsize* hasta que un elemento es eliminado por :"
"meth:`get`."

#: ../../library/asyncio-queue.rst:35
msgid ""
"Unlike the standard library threading :mod:`queue`, the size of the queue is "
"always known and can be returned by calling the :meth:`qsize` method."
msgstr ""
"A diferencia de la biblioteca estándar de hilos :mod:`queue`, el tamaño de "
"la cola es siempre conocido y se puede devolver llamando al método :meth:"
"`qsize`."

#: ../../library/asyncio-queue.rst:39
msgid "Removed the *loop* parameter."
msgstr "Eliminado el parámetro *loop*."

#: ../../library/asyncio-queue.rst:43
msgid "This class is :ref:`not thread safe <asyncio-multithreading>`."
msgstr "Esta clase es :ref:`no thread safe <asyncio-multithreading>`."

#: ../../library/asyncio-queue.rst:47
msgid "Number of items allowed in the queue."
msgstr "Número de elementos permitidos en la cola."

#: ../../library/asyncio-queue.rst:51
msgid "Return ``True`` if the queue is empty, ``False`` otherwise."
msgstr "Devuelve ``True`` si la cola está vacía, ``False`` en caso contrario."

#: ../../library/asyncio-queue.rst:55
msgid "Return ``True`` if there are :attr:`maxsize` items in the queue."
msgstr "Devuelve ``True`` si hay :attr:`maxsize` elementos en la cola."

#: ../../library/asyncio-queue.rst:57
msgid ""
"If the queue was initialized with ``maxsize=0`` (the default), then :meth:"
"`full()` never returns ``True``."
msgstr ""

#: ../../library/asyncio-queue.rst:62
msgid ""
"Remove and return an item from the queue. If queue is empty, wait until an "
"item is available."
msgstr ""
"Elimina y devuelve un elemento de la cola. Si la cola está vacía, espera "
"hasta que haya un elemento disponible."

#: ../../library/asyncio-queue.rst:67
msgid ""
"Return an item if one is immediately available, else raise :exc:`QueueEmpty`."
msgstr ""
"Devuelve un elemento si hay uno disponible inmediatamente, de lo contrario "
"eleva :exc:`QueueEmpty`."

#: ../../library/asyncio-queue.rst:72
msgid "Block until all items in the queue have been received and processed."
msgstr ""
"Bloquear hasta que se hayan recibido y procesado todos los elementos de la "
"cola."

#: ../../library/asyncio-queue.rst:74
msgid ""
"The count of unfinished tasks goes up whenever an item is added to the "
"queue. The count goes down whenever a consumer coroutine calls :meth:"
"`task_done` to indicate that the item was retrieved and all work on it is "
"complete.  When the count of unfinished tasks drops to zero, :meth:`join` "
"unblocks."
msgstr ""
"El recuento de tareas inacabadas aumenta cada vez que se añade un elemento a "
"la cola. El recuento disminuye cada vez que una corrutina consumidora llama "
"a :meth:`task_done` para indicar que el elemento se ha recuperado y que todo "
"el trabajo en él se ha completado.  Cuando el recuento de tareas inacabadas "
"desciende a cero, :meth:`join` se desbloquea."

#: ../../library/asyncio-queue.rst:82
msgid ""
"Put an item into the queue. If the queue is full, wait until a free slot is "
"available before adding the item."
msgstr ""
"Coloca un elemento en la cola. Si la cola está llena, espera a que haya un "
"espacio libre antes de añadir el elemento."

#: ../../library/asyncio-queue.rst:87
msgid "Put an item into the queue without blocking."
msgstr "Coloca un elemento en la cola sin bloquearlo."

#: ../../library/asyncio-queue.rst:89
msgid "If no free slot is immediately available, raise :exc:`QueueFull`."
msgstr ""
"Si no hay ninguna ranura libre disponible inmediatamente, sube :exc:"
"`QueueFull`."

#: ../../library/asyncio-queue.rst:93
msgid "Return the number of items in the queue."
msgstr "Devuelve el número de elementos de la cola."

#: ../../library/asyncio-queue.rst:97
msgid "Indicate that a formerly enqueued task is complete."
msgstr ""

#: ../../library/asyncio-queue.rst:99
msgid ""
"Used by queue consumers. For each :meth:`~Queue.get` used to fetch a task, a "
"subsequent call to :meth:`task_done` tells the queue that the processing on "
"the task is complete."
msgstr ""

#: ../../library/asyncio-queue.rst:103
msgid ""
"If a :meth:`join` is currently blocking, it will resume when all items have "
"been processed (meaning that a :meth:`task_done` call was received for every "
"item that had been :meth:`~Queue.put` into the queue)."
msgstr ""
"Si un :meth:`join` se está bloqueando, se reanudará cuando se hayan "
"procesado todos los elementos (lo que significa que se ha recibido una "
"llamada a :meth:`task_done` por cada elemento que se había :meth:`~Queue."
"put` en la cola)."

#: ../../library/asyncio-queue.rst:108
msgid ""
"Raises :exc:`ValueError` if called more times than there were items placed "
"in the queue."
msgstr ""
"Si se llama más veces de las que hay en la cola, aparece :exc:`ValueError`."

#: ../../library/asyncio-queue.rst:113
msgid "Priority Queue"
msgstr "Cola prioritaria"

#: ../../library/asyncio-queue.rst:117
msgid ""
"A variant of :class:`Queue`; retrieves entries in priority order (lowest "
"first)."
msgstr ""
"Una variante de :class:`Queue`; recupera las entradas por orden de prioridad "
"(primero las más bajas)."

#: ../../library/asyncio-queue.rst:120
msgid "Entries are typically tuples of the form ``(priority_number, data)``."
msgstr ""
"Las entradas suelen ser tuplas de la forma ``(priority_number, data)``."

#: ../../library/asyncio-queue.rst:125
msgid "LIFO Queue"
msgstr "Cola LIFO"

#: ../../library/asyncio-queue.rst:129
msgid ""
"A variant of :class:`Queue` that retrieves most recently added entries first "
"(last in, first out)."
msgstr ""
"Una variante de :class:`Queue` que recupera primero las entradas añadidas "
"más recientemente (último en entrar, primero en salir)."

#: ../../library/asyncio-queue.rst:134
msgid "Exceptions"
msgstr "Excepciones"

#: ../../library/asyncio-queue.rst:138
msgid ""
"This exception is raised when the :meth:`~Queue.get_nowait` method is called "
"on an empty queue."
msgstr ""
"Esta excepción se produce cuando se llama al método :meth:`~Queue."
"get_nowait` en una cola vacía."

#: ../../library/asyncio-queue.rst:144
msgid ""
"Exception raised when the :meth:`~Queue.put_nowait` method is called on a "
"queue that has reached its *maxsize*."
msgstr ""
"Excepción que se produce cuando se llama al método :meth:`~Queue.put_nowait` "
"en una cola que ha alcanzado su *maxsize*."

#: ../../library/asyncio-queue.rst:149
msgid "Examples"
msgstr "Ejemplos"

#: ../../library/asyncio-queue.rst:153
msgid ""
"Queues can be used to distribute workload between several concurrent tasks::"
msgstr ""
"Las colas pueden utilizarse para distribuir la carga de trabajo entre varias "
"tareas concurrentes::"
