# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# Rafael Fontenelle <rffontenelle@gmail.com>, 2025
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.10\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-04-11 16:03+0000\n"
"PO-Revision-Date: 2022-11-05 17:21+0000\n"
"Last-Translator: Rafael Fontenelle <rffontenelle@gmail.com>, 2025\n"
"Language-Team: Spanish (Spain) (https://app.transifex.com/python-doc/"
"teams/5390/es_ES/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: es_ES\n"
"Plural-Forms: nplurals=3; plural=n == 1 ? 0 : n != 0 && n % 1000000 == 0 ? "
"1 : 2;\n"

#: ../../library/ast.rst:2
msgid ":mod:`ast` --- Abstract Syntax Trees"
msgstr ""

#: ../../library/ast.rst:14
msgid "**Source code:** :source:`Lib/ast.py`"
msgstr "**Código fuente:** :source:`Lib/ast.py`"

#: ../../library/ast.rst:18
msgid ""
"The :mod:`ast` module helps Python applications to process trees of the "
"Python abstract syntax grammar.  The abstract syntax itself might change "
"with each Python release; this module helps to find out programmatically "
"what the current grammar looks like."
msgstr ""
"El módulo :mod:`ast` ayuda a las aplicaciones Python a procesar árboles de "
"la gramática de la sintaxis abstracta de Python.  La propia sintaxis "
"abstracta puede cambiar con cada versión de Python; este módulo ayuda a "
"averiguar mediante programación cómo es la gramática actual."

#: ../../library/ast.rst:23
msgid ""
"An abstract syntax tree can be generated by passing :data:`ast."
"PyCF_ONLY_AST` as a flag to the :func:`compile` built-in function, or using "
"the :func:`parse` helper provided in this module.  The result will be a tree "
"of objects whose classes all inherit from :class:`ast.AST`.  An abstract "
"syntax tree can be compiled into a Python code object using the built-in :"
"func:`compile` function."
msgstr ""
"Se puede generar un árbol sintáctico abstracto pasando :data:`ast."
"PyCF_ONLY_AST` como bandera a la función incorporada :func:`compile`, o "
"utilizando el ayudante :func:`parse` proporcionado en este módulo.  El "
"resultado será un árbol de objetos cuyas clases heredan todas de :class:`ast."
"AST`.  Un árbol de sintaxis abstracta puede compilarse en un objeto de "
"código Python utilizando la función incorporada :func:`compile`."

#: ../../library/ast.rst:33
msgid "Abstract Grammar"
msgstr "Gramática abstracta"

#: ../../library/ast.rst:35
msgid "The abstract grammar is currently defined as follows:"
msgstr "La gramática abstracta se define actualmente del siguiente modo:"

#: ../../library/ast.rst:42
msgid "Node classes"
msgstr "Clases de nodos"

#: ../../library/ast.rst:46
msgid ""
"This is the base of all AST node classes.  The actual node classes are "
"derived from the :file:`Parser/Python.asdl` file, which is reproduced :ref:"
"`above <abstract-grammar>`.  They are defined in the :mod:`_ast` C module "
"and re-exported in :mod:`ast`."
msgstr ""

#: ../../library/ast.rst:51
msgid ""
"There is one class defined for each left-hand side symbol in the abstract "
"grammar (for example, :class:`ast.stmt` or :class:`ast.expr`).  In addition, "
"there is one class defined for each constructor on the right-hand side; "
"these classes inherit from the classes for the left-hand side trees.  For "
"example, :class:`ast.BinOp` inherits from :class:`ast.expr`.  For production "
"rules with alternatives (aka \"sums\"), the left-hand side class is "
"abstract: only instances of specific constructor nodes are ever created."
msgstr ""
"Hay una clase definida para cada símbolo del lado izquierdo de la gramática "
"abstracta (por ejemplo, :class:`ast.stmt` o :class:`ast.expr`).  Además, hay "
"una clase definida para cada constructor del lado derecho; estas clases "
"heredan de las clases de los árboles del lado izquierdo.  Por ejemplo, :"
"class:`ast.BinOp` hereda de :class:`ast.expr`.  Para las reglas de "
"producción con alternativas (también conocidas como \"sumas\"), la clase del "
"lado izquierdo es abstracta: sólo se crean instancias de nodos constructores "
"específicos."

#: ../../library/ast.rst:64
msgid ""
"Each concrete class has an attribute :attr:`_fields` which gives the names "
"of all child nodes."
msgstr ""
"Cada clase concreta tiene un atributo :attr:`_fields` que proporciona los "
"nombres de todos los nodos hijos."

#: ../../library/ast.rst:67
msgid ""
"Each instance of a concrete class has one attribute for each child node, of "
"the type as defined in the grammar.  For example, :class:`ast.BinOp` "
"instances have an attribute :attr:`left` of type :class:`ast.expr`."
msgstr ""
"Cada instancia de una clase concreta tiene un atributo por cada nodo hijo, "
"del tipo definido en la gramática.  Por ejemplo, las instancias de :class:"
"`ast.BinOp` tienen un atributo :attr:`left` del tipo :class:`ast.expr`."

#: ../../library/ast.rst:71
msgid ""
"If these attributes are marked as optional in the grammar (using a question "
"mark), the value might be ``None``.  If the attributes can have zero-or-more "
"values (marked with an asterisk), the values are represented as Python "
"lists.  All possible attributes must be present and have valid values when "
"compiling an AST with :func:`compile`."
msgstr ""
"Si estos atributos están marcados como opcionales en la gramática (mediante "
"un signo de interrogación), el valor puede ser ``None``.  Si los atributos "
"pueden tener cero o más valores (marcados con un asterisco), los valores se "
"representan como listas Python.  Todos los atributos posibles deben estar "
"presentes y tener valores válidos al compilar un AST con :func:`compile`."

#: ../../library/ast.rst:82
msgid ""
"Instances of :class:`ast.expr` and :class:`ast.stmt` subclasses have :attr:"
"`lineno`, :attr:`col_offset`, :attr:`end_lineno`, and :attr:`end_col_offset` "
"attributes.  The :attr:`lineno` and :attr:`end_lineno` are the first and "
"last line numbers of source text span (1-indexed so the first line is line "
"1) and the :attr:`col_offset` and :attr:`end_col_offset` are the "
"corresponding UTF-8 byte offsets of the first and last tokens that generated "
"the node. The UTF-8 offset is recorded because the parser uses UTF-8 "
"internally."
msgstr ""
"Las instancias de las subclases :class:`ast.expr` y :class:`ast.stmt` tienen "
"atributos :attr:`lineno`, :attr:`col_offset`, :attr:`end_lineno` y :attr:"
"`end_col_offset`.  Los atributos :attr:`lineno` y :attr:`end_lineno` son los "
"números de la primera y la última línea del tramo de texto fuente (indexados "
"en 1, de modo que la primera línea es la línea 1) y los atributos :attr:"
"`col_offset` y :attr:`end_col_offset` son los desplazamientos UTF-8 "
"correspondientes del primer y el último token que generó el nodo. El "
"desplazamiento UTF-8 se registra porque el analizador utiliza UTF-8 "
"internamente."

#: ../../library/ast.rst:91
msgid ""
"Note that the end positions are not required by the compiler and are "
"therefore optional. The end offset is *after* the last symbol, for example "
"one can get the source segment of a one-line expression node using "
"``source_line[node.col_offset : node.end_col_offset]``."
msgstr ""
"Tenga en cuenta que las posiciones finales no son requeridas por el "
"compilador y por lo tanto son opcionales. El desplazamiento final es "
"*después* del último símbolo, por ejemplo se puede obtener el segmento "
"fuente de un nodo de expresión de una línea utilizando ``source_line[node."
"col_offset : node.end_col_offset]``."

#: ../../library/ast.rst:96
msgid ""
"The constructor of a class :class:`ast.T` parses its arguments as follows:"
msgstr ""
"El constructor de una clase :class:`ast.T` analiza sus argumentos de la "
"siguiente manera:"

#: ../../library/ast.rst:98
msgid ""
"If there are positional arguments, there must be as many as there are items "
"in :attr:`T._fields`; they will be assigned as attributes of these names."
msgstr ""
"Si hay argumentos posicionales, debe haber tantos como elementos en :attr:`T."
"_fields`; se asignarán como atributos de estos nombres."

#: ../../library/ast.rst:100
msgid ""
"If there are keyword arguments, they will set the attributes of the same "
"names to the given values."
msgstr ""
"Si hay argumentos de palabra clave, establecerán los atributos de los mismos "
"nombres a los valores dados."

#: ../../library/ast.rst:103
msgid ""
"For example, to create and populate an :class:`ast.UnaryOp` node, you could "
"use ::"
msgstr ""
"Por ejemplo, para crear y rellenar un nodo :class:`ast.UnaryOp`, puede "
"utilizar ::"

#: ../../library/ast.rst:115
msgid "or the more compact ::"
msgstr "o el más compacto ::"

#: ../../library/ast.rst:122
msgid "Class :class:`ast.Constant` is now used for all constants."
msgstr ""
"La clase :class:`ast.Constant` se utiliza ahora para todas las constantes."

#: ../../library/ast.rst:126
msgid ""
"Simple indices are represented by their value, extended slices are "
"represented as tuples."
msgstr ""
"Los índices simples se representan por su valor, los cortes extendidos se "
"representan como tuplas."

#: ../../library/ast.rst:131
msgid ""
"Old classes :class:`ast.Num`, :class:`ast.Str`, :class:`ast.Bytes`, :class:"
"`ast.NameConstant` and :class:`ast.Ellipsis` are still available, but they "
"will be removed in future Python releases.  In the meantime, instantiating "
"them will return an instance of a different class."
msgstr ""

#: ../../library/ast.rst:138
msgid ""
"Old classes :class:`ast.Index` and :class:`ast.ExtSlice` are still "
"available, but they will be removed in future Python releases. In the "
"meantime, instantiating them will return an instance of a different class."
msgstr ""

#: ../../library/ast.rst:144
msgid ""
"The descriptions of the specific node classes displayed here were initially "
"adapted from the fantastic `Green Tree Snakes <https://greentreesnakes."
"readthedocs.io/en/latest/>`__ project and all its contributors."
msgstr ""
"Las descripciones de las clases específicas de nodos que se muestran aquí se "
"adaptaron inicialmente del fantástico proyecto `Green Tree Snakes <https://"
"greentreesnakes.readthedocs.io/en/latest/>`__ y de todos sus colaboradores."

#: ../../library/ast.rst:150
msgid "Literals"
msgstr "Literales"

#: ../../library/ast.rst:154
msgid ""
"A constant value. The ``value`` attribute of the ``Constant`` literal "
"contains the Python object it represents. The values represented can be "
"simple types such as a number, string or ``None``, but also immutable "
"container types (tuples and frozensets) if all of their elements are "
"constant."
msgstr ""
"Un valor constante. El atributo ``value`` del literal ``Constant`` contiene "
"el objeto Python que representa. Los valores representados pueden ser tipos "
"simples como un número, una cadena o ``None``, pero también tipos "
"contenedores inmutables (tuplas y frozensets) si todos sus elementos son "
"constantes."

#: ../../library/ast.rst:168
msgid ""
"Node representing a single formatting field in an f-string. If the string "
"contains a single formatting field and nothing else the node can be isolated "
"otherwise it appears in :class:`JoinedStr`."
msgstr ""
"Nodo que representa un único campo de formato en una cadena f. Si la cadena "
"contiene un único campo de formato y nada más, el nodo puede aislarse; de lo "
"contrario, aparece en :class:`JoinedStr`."

#: ../../library/ast.rst:172
msgid ""
"``value`` is any expression node (such as a literal, a variable, or a "
"function call)."
msgstr ""
"``value`` es cualquier nodo de expresión (como un literal, una variable o "
"una llamada a una función)."

#: ../../library/ast.rst:174
msgid "``conversion`` is an integer:"
msgstr "``conversion`` es un número entero:"

#: ../../library/ast.rst:176
msgid "-1: no formatting"
msgstr "-1: sin formato"

#: ../../library/ast.rst:177
msgid "115: ``!s`` string formatting"
msgstr "115: ``!s`` formato de cadena"

#: ../../library/ast.rst:178
msgid "114: ``!r`` repr formatting"
msgstr "114: ``!r`` repr formatting"

#: ../../library/ast.rst:179
msgid "97: ``!a`` ascii formatting"
msgstr "97: ``!a`` formato ascii"

#: ../../library/ast.rst:181
msgid ""
"``format_spec`` is a :class:`JoinedStr` node representing the formatting of "
"the value, or ``None`` if no format was specified. Both ``conversion`` and "
"``format_spec`` can be set at the same time."
msgstr ""
"``format_spec`` es un nodo :class:`JoinedStr` que representa el formato del "
"valor, o ``None`` si no se ha especificado ningún formato. Tanto "
"``conversion`` como ``format_spec`` pueden establecerse al mismo tiempo."

#: ../../library/ast.rst:188
msgid ""
"An f-string, comprising a series of :class:`FormattedValue` and :class:"
"`Constant` nodes."
msgstr ""
"Una cadena f, compuesta por una serie de nodos :class:`FormattedValue` y :"
"class:`Constant`."

#: ../../library/ast.rst:217
msgid ""
"A list or tuple. ``elts`` holds a list of nodes representing the elements. "
"``ctx`` is :class:`Store` if the container is an assignment target (i.e. "
"``(x,y)=something``), and :class:`Load` otherwise."
msgstr ""
"Una lista o tupla. ``elts`` contiene una lista de nodos que representan los "
"elementos. ``ctx`` es :class:`Store` si el contenedor es un objetivo de "
"asignación (es decir, ``(x,y)=something``), y :class:`Load` en caso "
"contrario."

#: ../../library/ast.rst:243
msgid "A set. ``elts`` holds a list of nodes representing the set's elements."
msgstr ""
"Un conjunto. ``elts`` contiene una lista de nodos que representan los "
"elementos del conjunto."

#: ../../library/ast.rst:258
msgid ""
"A dictionary. ``keys`` and ``values`` hold lists of nodes representing the "
"keys and the values respectively, in matching order (what would be returned "
"when calling :code:`dictionary.keys()` and :code:`dictionary.values()`)."
msgstr ""
"Un diccionario. ``keys`` y ``values`` contienen listas de nodos que "
"representan las claves y los valores respectivamente, en orden coincidente "
"(lo que se devolvería al llamar a :code:`dictionary.keys()` y :code:"
"`dictionary.values()`)."

#: ../../library/ast.rst:262
msgid ""
"When doing dictionary unpacking using dictionary literals the expression to "
"be expanded goes in the ``values`` list, with a ``None`` at the "
"corresponding position in ``keys``."
msgstr ""
"Al desempaquetar diccionarios utilizando literales de diccionario, la "
"expresión a expandir va en la lista ``values``, con un ``None`` en la "
"posición correspondiente en ``keys``."

#: ../../library/ast.rst:280
msgid "Variables"
msgstr "Variables"

#: ../../library/ast.rst:284
msgid ""
"A variable name. ``id`` holds the name as a string, and ``ctx`` is one of "
"the following types."
msgstr ""
"Un nombre de variable. ``id`` contiene el nombre como cadena, y ``ctx`` es "
"uno de los siguientes tipos."

#: ../../library/ast.rst:292
msgid ""
"Variable references can be used to load the value of a variable, to assign a "
"new value to it, or to delete it. Variable references are given a context to "
"distinguish these cases."
msgstr ""
"Las referencias a variables pueden utilizarse para cargar el valor de una "
"variable, asignarle un nuevo valor o borrarla. Las referencias a variables "
"reciben un contexto para distinguir estos casos."

#: ../../library/ast.rst:325
msgid ""
"A ``*var`` variable reference. ``value`` holds the variable, typically a :"
"class:`Name` node. This type must be used when building a :class:`Call` node "
"with ``*args``."
msgstr ""
"Una referencia de variable ``*var``. ``value`` contiene la variable, "
"normalmente un nodo :class:`Name`. Este tipo debe utilizarse cuando se "
"construye un nodo :class:`Call` con ``*args``."

#: ../../library/ast.rst:348
msgid "Expressions"
msgstr "Expresiones"

#: ../../library/ast.rst:352
msgid ""
"When an expression, such as a function call, appears as a statement by "
"itself with its return value not used or stored, it is wrapped in this "
"container. ``value`` holds one of the other nodes in this section, a :class:"
"`Constant`, a :class:`Name`, a :class:`Lambda`, a :class:`Yield` or :class:"
"`YieldFrom` node."
msgstr ""
"Cuando una expresión, como una llamada a una función, aparece como una "
"sentencia por sí misma sin que su valor de retorno se utilice o almacene, se "
"envuelve en este contenedor. ``value`` contiene uno de los otros nodos de "
"esta sección, un nodo :class:`Constant`, un nodo :class:`Name`, un nodo :"
"class:`Lambda`, un nodo :class:`Yield` o :class:`YieldFrom`."

#: ../../library/ast.rst:371
msgid ""
"A unary operation. ``op`` is the operator, and ``operand`` any expression "
"node."
msgstr ""
"Una operación unaria. ``op`` es el operador, y ``operand`` cualquier nodo de "
"expresión."

#: ../../library/ast.rst:380
msgid ""
"Unary operator tokens. :class:`Not` is the ``not`` keyword, :class:`Invert` "
"is the ``~`` operator."
msgstr ""
"Tokens de operador unario. :class:`Not` es la palabra clave ``not``, :class:"
"`Invert` es el operador ``~``."

#: ../../library/ast.rst:394
msgid ""
"A binary operation (like addition or division). ``op`` is the operator, and "
"``left`` and ``right`` are any expression nodes."
msgstr ""
"Una operación binaria (como la suma o la división). ``op`` es el operador, y "
"``left`` y ``right`` son nodos de expresión cualesquiera."

#: ../../library/ast.rst:421
msgid "Binary operator tokens."
msgstr "Fichas de operadores binarios."

#: ../../library/ast.rst:426
msgid ""
"A boolean operation, 'or' or 'and'. ``op`` is :class:`Or` or :class:`And`. "
"``values`` are the values involved. Consecutive operations with the same "
"operator, such as ``a or b or c``, are collapsed into one node with several "
"values."
msgstr ""
"Una operación booleana, 'or' o 'and'. ``op`` es :class:`Or` o :class:`And`. "
"``values`` son los valores implicados. Las operaciones consecutivas con el "
"mismo operador, como ``a or b or c``, se contraen en un nodo con varios "
"valores."

#: ../../library/ast.rst:431
msgid "This doesn't include ``not``, which is a :class:`UnaryOp`."
msgstr "Esto no incluye ``not``, que es un :class:`UnaryOp`."

#: ../../library/ast.rst:447
msgid "Boolean operator tokens."
msgstr "Fichas de operadores booleanos."

#: ../../library/ast.rst:452
msgid ""
"A comparison of two or more values. ``left`` is the first value in the "
"comparison, ``ops`` the list of operators, and ``comparators`` the list of "
"values after the first element in the comparison."
msgstr ""
"Una comparación de dos o más valores. ``left`` es el primer valor de la "
"comparación, ``ops`` la lista de operadores y ``comparators`` la lista de "
"valores después del primer elemento de la comparación."

#: ../../library/ast.rst:481
msgid "Comparison operator tokens."
msgstr "Fichas de operadores de comparación."

#: ../../library/ast.rst:486
msgid ""
"A function call. ``func`` is the function, which will often be a :class:"
"`Name` or :class:`Attribute` object. Of the arguments:"
msgstr ""
"Una llamada a una función. ``func`` es la función, que a menudo será un "
"objeto :class:`Name` o :class:`Attribute`. De los argumentos:"

#: ../../library/ast.rst:489
msgid "``args`` holds a list of the arguments passed by position."
msgstr "``args`` contiene una lista de los argumentos pasados por posición."

#: ../../library/ast.rst:490
msgid ""
"``keywords`` holds a list of :class:`keyword` objects representing arguments "
"passed by keyword."
msgstr ""

#: ../../library/ast.rst:493
msgid ""
"When creating a ``Call`` node, ``args`` and ``keywords`` are required, but "
"they can be empty lists. ``starargs`` and ``kwargs`` are optional."
msgstr ""

#: ../../library/ast.rst:517
msgid ""
"A keyword argument to a function call or class definition. ``arg`` is a raw "
"string of the parameter name, ``value`` is a node to pass in."
msgstr ""
"Un argumento de palabra clave a una llamada de función o definición de "
"clase. ``arg`` es una cadena sin procesar del nombre del parámetro, "
"``value`` es un nodo para pasar."

#: ../../library/ast.rst:523
msgid ""
"An expression such as ``a if b else c``. Each field holds a single node, so "
"in the following example, all three are :class:`Name` nodes."
msgstr ""
"Una expresión como ``a if b else c``. Cada campo contiene un único nodo, por "
"lo que en el siguiente ejemplo, los tres son nodos de :class:`Name`."

#: ../../library/ast.rst:538
msgid ""
"Attribute access, e.g. ``d.keys``. ``value`` is a node, typically a :class:"
"`Name`. ``attr`` is a bare string giving the name of the attribute, and "
"``ctx`` is :class:`Load`, :class:`Store` or :class:`Del` according to how "
"the attribute is acted on."
msgstr ""
"Acceso a atributos, por ejemplo: ``d.keys``. ``value`` es un nodo, "
"normalmente un :class:`Name`. ``attr`` es una cadena vacía que da el nombre "
"del atributo, y ``ctx`` es :class:`Load`, :class:`Store` o :class:`Del` "
"según cómo se actúe sobre el atributo."

#: ../../library/ast.rst:555
msgid ""
"A named expression. This AST node is produced by the assignment expressions "
"operator (also known as the walrus operator). As opposed to the :class:"
"`Assign` node in which the first argument can be multiple nodes, in this "
"case both ``target`` and ``value`` must be single nodes."
msgstr ""
"Una expresión con nombre. Este nodo AST lo produce el operador de "
"expresiones de asignación (también conocido como operador morsa). A "
"diferencia del nodo :class:`Assign` en el que el primer argumento puede ser "
"múltiples nodos, en este caso tanto ``target`` como ``value`` deben ser "
"nodos únicos."

#: ../../library/ast.rst:570
msgid "Subscripting"
msgstr "Suscripción"

#: ../../library/ast.rst:574
msgid ""
"A subscript, such as ``l[1]``. ``value`` is the subscripted object (usually "
"sequence or mapping). ``slice`` is an index, slice or key. It can be a :"
"class:`Tuple` and contain a :class:`Slice`. ``ctx`` is :class:`Load`, :class:"
"`Store` or :class:`Del` according to the action performed with the subscript."
msgstr ""
"Un subíndice, como ``l[1]``. ``value`` es el objeto con subíndice "
"(normalmente secuencia o asignación). ``slice`` es un índice, trozo o clave. "
"Puede ser un :class:`Tuple` y contener un :class:`Slice`. ``ctx`` es :class:"
"`Load`, :class:`Store` o :class:`Del` según la acción realizada con el "
"subíndice."

#: ../../library/ast.rst:598
msgid ""
"Regular slicing (on the form ``lower:upper`` or ``lower:upper:step``). Can "
"occur only inside the *slice* field of :class:`Subscript`, either directly "
"or as an element of :class:`Tuple`."
msgstr ""
"Corte regular (de la forma ``lower:upper`` o ``lower:upper:step``). Sólo "
"puede ocurrir dentro del campo *slice* de :class:`Subscript`, ya sea "
"directamente o como elemento de :class:`Tuple`."

#: ../../library/ast.rst:615
msgid "Comprehensions"
msgstr "Comprensiones"

#: ../../library/ast.rst:622
msgid ""
"List and set comprehensions, generator expressions, and dictionary "
"comprehensions. ``elt`` (or ``key`` and ``value``) is a single node "
"representing the part that will be evaluated for each item."
msgstr ""
"Comprensiones de listas y conjuntos, expresiones generadoras y comprensiones "
"de diccionario. ``elt`` (o ``key`` y ``value``) es un único nodo que "
"representa la parte que se evaluará para cada elemento."

#: ../../library/ast.rst:626
msgid "``generators`` is a list of :class:`comprehension` nodes."
msgstr "``generators`` es una lista de nodos :class:`comprehension`."

#: ../../library/ast.rst:668
msgid ""
"One ``for`` clause in a comprehension. ``target`` is the reference to use "
"for each element - typically a :class:`Name` or :class:`Tuple` node. "
"``iter`` is the object to iterate over. ``ifs`` is a list of test "
"expressions: each ``for`` clause can have multiple ``ifs``."
msgstr ""
"Una cláusula ``for`` en una comprensión. ``target`` es la referencia a "
"utilizar para cada elemento - normalmente un nodo :class:`Name` o :class:"
"`Tuple`. ``iter`` es el objeto sobre el que iterar. ``ifs`` es una lista de "
"expresiones de prueba: cada cláusula ``for`` puede tener múltiples ``ifs``."

#: ../../library/ast.rst:673
msgid ""
"``is_async`` indicates a comprehension is asynchronous (using an ``async "
"for`` instead of ``for``). The value is an integer (0 or 1)."
msgstr ""
"``is_async`` indica que una comprensión es asíncrona (utilizando ``async "
"for`` en lugar de ``for``). El valor es un número entero (0 o 1)."

#: ../../library/ast.rst:739
msgid "Statements"
msgstr "Declaraciones"

#: ../../library/ast.rst:743
msgid ""
"An assignment. ``targets`` is a list of nodes, and ``value`` is a single "
"node."
msgstr ""
"Una asignación. ``targets`` es una lista de nodos, y ``value`` es un único "
"nodo."

#: ../../library/ast.rst:745
msgid ""
"Multiple nodes in ``targets`` represents assigning the same value to each. "
"Unpacking is represented by putting a :class:`Tuple` or :class:`List` within "
"``targets``."
msgstr ""
"Múltiples nodos en ``targets`` representa asignar el mismo valor a cada uno. "
"El desempaquetado se representa poniendo un :class:`Tuple` o :class:`List` "
"dentro de ``targets``."

#: ../../library/ast.rst:751 ../../library/ast.rst:1038
#: ../../library/ast.rst:1211 ../../library/ast.rst:1632
msgid ""
"``type_comment`` is an optional string with the type annotation as a comment."
msgstr ""
"``type_comment`` es una cadena opcional con la anotación de tipo como "
"comentario."

#: ../../library/ast.rst:781
msgid ""
"An assignment with a type annotation. ``target`` is a single node and can be "
"a :class:`Name`, a :class:`Attribute` or a :class:`Subscript`. "
"``annotation`` is the annotation, such as a :class:`Constant` or :class:"
"`Name` node. ``value`` is a single optional node. ``simple`` is a boolean "
"integer set to True for a :class:`Name` node in ``target`` that do not "
"appear in between parenthesis and are hence pure names and not expressions."
msgstr ""

#: ../../library/ast.rst:836
msgid ""
"Augmented assignment, such as ``a += 1``. In the following example, "
"``target`` is a :class:`Name` node for ``x`` (with the :class:`Store` "
"context), ``op`` is :class:`Add`, and ``value`` is a :class:`Constant` with "
"value for 1."
msgstr ""
"Asignación aumentada, como ``a += 1``. En el siguiente ejemplo, ``target`` "
"es un nodo :class:`Name` para ``x`` (con el contexto :class:`Store` ), "
"``op`` es :class:`Add`, y ``value`` es un :class:`Constant` con valor para 1."

#: ../../library/ast.rst:841
msgid ""
"The ``target`` attribute cannot be of class :class:`Tuple` or :class:`List`, "
"unlike the targets of :class:`Assign`."
msgstr ""
"El atributo ``target`` no puede ser de la clase :class:`Tuple` o :class:"
"`List`, a diferencia de los objetivos de :class:`Assign`."

#: ../../library/ast.rst:858
msgid ""
"A ``raise`` statement. ``exc`` is the exception object to be raised, "
"normally a :class:`Call` or :class:`Name`, or ``None`` for a standalone "
"``raise``. ``cause`` is the optional part for ``y`` in ``raise x from y``."
msgstr ""
"Una sentencia ``raise``. ``exc`` es el objeto de excepción que se va a "
"lanzar, normalmente un :class:`Call` o :class:`Name`, o ``None`` para una "
"``raise`` independiente. ``cause`` es la parte opcional para ``y`` en "
"``raise x from y``."

#: ../../library/ast.rst:875
msgid ""
"An assertion. ``test`` holds the condition, such as a :class:`Compare` node. "
"``msg`` holds the failure message."
msgstr ""
"Una aserción. ``test`` contiene la condición, como un nodo :class:`Compare`. "
"``msg`` contiene el mensaje de fallo."

#: ../../library/ast.rst:891
msgid ""
"Represents a ``del`` statement. ``targets`` is a list of nodes, such as :"
"class:`Name`, :class:`Attribute` or :class:`Subscript` nodes."
msgstr ""
"Representa una sentencia ``del``. ``targets`` es una lista de nodos, como :"
"class:`Name`, :class:`Attribute` o :class:`Subscript` nodos."

#: ../../library/ast.rst:909
msgid "A ``pass`` statement."
msgstr "Una declaración en ``pass``."

#: ../../library/ast.rst:920
msgid ""
"Other statements which are only applicable inside functions or loops are "
"described in other sections."
msgstr ""
"Otras sentencias que sólo son aplicables dentro de funciones o bucles se "
"describen en otras secciones."

#: ../../library/ast.rst:924
msgid "Imports"
msgstr "Importaciones"

#: ../../library/ast.rst:928
msgid "An import statement. ``names`` is a list of :class:`alias` nodes."
msgstr ""
"Una declaración de importación. ``names`` es una lista de nodos :class:"
"`alias`."

#: ../../library/ast.rst:945
msgid ""
"Represents ``from x import y``. ``module`` is a raw string of the 'from' "
"name, without any leading dots, or ``None`` for statements such as ``from . "
"import foo``. ``level`` is an integer holding the level of the relative "
"import (0 means absolute import)."
msgstr ""
"Representa ``from x import y``. ``module`` es una cadena sin procesar del "
"nombre 'from', sin puntos iniciales, o ``None`` para sentencias como "
"``from . import foo``. ``level`` es un entero que contiene el nivel de la "
"importación relativa (0 significa importación absoluta)."

#: ../../library/ast.rst:967
msgid ""
"Both parameters are raw strings of the names. ``asname`` can be ``None`` if "
"the regular name is to be used."
msgstr ""
"Ambos parámetros son cadenas sin procesar de los nombres. ``asname`` puede "
"ser ``None`` si se va a utilizar el nombre normal."

#: ../../library/ast.rst:984
msgid "Control flow"
msgstr "Flujo de control"

#: ../../library/ast.rst:987
msgid ""
"Optional clauses such as ``else`` are stored as an empty list if they're not "
"present."
msgstr ""
"Las cláusulas opcionales como ``else`` se almacenan como una lista vacía si "
"no están presentes."

#: ../../library/ast.rst:992
msgid ""
"An ``if`` statement. ``test`` holds a single node, such as a :class:"
"`Compare` node. ``body`` and ``orelse`` each hold a list of nodes."
msgstr ""
"Una sentencia ``if``. ``test`` contiene un único nodo, como :class:"
"`Compare`. ``body`` y ``orelse`` contienen una lista de nodos."

#: ../../library/ast.rst:995
msgid ""
"``elif`` clauses don't have a special representation in the AST, but rather "
"appear as extra :class:`If` nodes within the ``orelse`` section of the "
"previous one."
msgstr ""
"``elif`` no tienen una representación especial en el AST, sino que aparecen "
"como nodos :class:`If` adicionales dentro de la sección ``orelse`` de la "
"anterior."

#: ../../library/ast.rst:1030
msgid ""
"A ``for`` loop. ``target`` holds the variable(s) the loop assigns to, as a "
"single :class:`Name`, :class:`Tuple` or :class:`List` node. ``iter`` holds "
"the item to be looped over, again as a single node. ``body`` and ``orelse`` "
"contain lists of nodes to execute. Those in ``orelse`` are executed if the "
"loop finishes normally, rather than via a ``break`` statement."
msgstr ""

#: ../../library/ast.rst:1064
msgid ""
"A ``while`` loop. ``test`` holds the condition, such as a :class:`Compare` "
"node."
msgstr ""
"Un bucle ``while``. ``test`` mantiene la condición, como un nodo :class:"
"`Compare`."

#: ../../library/ast.rst:1091
msgid "The ``break`` and ``continue`` statements."
msgstr "Las declaraciones ``break`` y ``continue``."

#: ../../library/ast.rst:1126
msgid ""
"``try`` blocks. All attributes are list of nodes to execute, except for "
"``handlers``, which is a list of :class:`ExceptHandler` nodes."
msgstr ""
"``try`` bloques. Todos los atributos son listas de nodos a ejecutar, excepto "
"``handlers``, que es una lista de nodos :class:`ExceptHandler`."

#: ../../library/ast.rst:1172
msgid ""
"A single ``except`` clause. ``type`` is the exception type it will match, "
"typically a :class:`Name` node (or ``None`` for a catch-all ``except:`` "
"clause). ``name`` is a raw string for the name to hold the exception, or "
"``None`` if the clause doesn't have ``as foo``. ``body`` is a list of nodes."
msgstr ""
"Una única cláusula ``except``. ``type`` es el tipo de excepción con el que "
"coincidirá, normalmente un nodo :class:`Name` (o ``None`` para una cláusula "
"catch-all ``except:`` ). ``name`` es una cadena sin formato para el nombre "
"que contendrá la excepción, o ``None`` si la cláusula no tiene ``as foo``. "
"``body`` es una lista de nodos."

#: ../../library/ast.rst:1206
msgid ""
"A ``with`` block. ``items`` is a list of :class:`withitem` nodes "
"representing the context managers, and ``body`` is the indented block inside "
"the context."
msgstr ""
"Un bloque ``with``. ``items`` es una lista de nodos :class:`withitem` que "
"representan a los gestores de contexto, y ``body`` es el bloque indentado "
"dentro del contexto."

#: ../../library/ast.rst:1216
msgid ""
"A single context manager in a ``with`` block. ``context_expr`` is the "
"context manager, often a :class:`Call` node. ``optional_vars`` is a :class:"
"`Name`, :class:`Tuple` or :class:`List` for the ``as foo`` part, or ``None`` "
"if that isn't used."
msgstr ""
"Un único gestor de contexto en un bloque ``with``. ``context_expr`` es el "
"gestor de contexto, a menudo un nodo :class:`Call`. ``optional_vars`` es un :"
"class:`Name`, :class:`Tuple` o :class:`List` para la parte ``as foo``, o "
"``None`` si no se utiliza."

#: ../../library/ast.rst:1249
msgid "Pattern matching"
msgstr "Concordancia de patrones"

#: ../../library/ast.rst:1254
msgid ""
"A ``match`` statement. ``subject`` holds the subject of the match (the "
"object that is being matched against the cases) and ``cases`` contains an "
"iterable of :class:`match_case` nodes with the different cases."
msgstr ""
"Una sentencia ``match``. ``subject`` contiene el sujeto de la coincidencia "
"(el objeto que se está comparando con los casos) y ``cases`` contiene una "
"iterable de nodos :class:`match_case` con los diferentes casos."

#: ../../library/ast.rst:1260
msgid ""
"A single case pattern in a ``match`` statement. ``pattern`` contains the "
"match pattern that the subject will be matched against. Note that the :class:"
"`AST` nodes produced for patterns differ from those produced for "
"expressions, even when they share the same syntax."
msgstr ""
"Un único patrón de caso en una sentencia ``match``. ``pattern`` contiene el "
"patrón de coincidencia con el que se comparará el asunto. Tenga en cuenta "
"que los nodos :class:`AST` producidos para los patrones difieren de los "
"producidos para las expresiones, incluso cuando comparten la misma sintaxis."

#: ../../library/ast.rst:1265
msgid ""
"The ``guard`` attribute contains an expression that will be evaluated if the "
"pattern matches the subject."
msgstr ""
"El atributo ``guard`` contiene una expresión que se evaluará si el patrón "
"coincide con el asunto."

#: ../../library/ast.rst:1268
msgid ""
"``body`` contains a list of nodes to execute if the pattern matches and the "
"result of evaluating the guard expression is true."
msgstr ""
"``body`` contiene una lista de nodos a ejecutar si el patrón coincide y el "
"resultado de evaluar la expresión de guarda es verdadero."

#: ../../library/ast.rst:1311
msgid ""
"A match literal or value pattern that compares by equality. ``value`` is an "
"expression node. Permitted value nodes are restricted as described in the "
"match statement documentation. This pattern succeeds if the match subject is "
"equal to the evaluated value."
msgstr ""
"Un literal de coincidencia o patrón de valores que se compara por igualdad. "
"``value`` es un nodo de expresión. Los nodos de valor permitidos están "
"restringidos como se describe en la documentación de la sentencia match. "
"Este patrón tiene éxito si el asunto de la coincidencia es igual al valor "
"evaluado."

#: ../../library/ast.rst:1338
msgid ""
"A match literal pattern that compares by identity. ``value`` is the "
"singleton to be compared against: ``None``, ``True``, or ``False``. This "
"pattern succeeds if the match subject is the given constant."
msgstr ""
"Un patrón de coincidencia literal que compara por identidad. ``value`` es el "
"singleton con el que se compara: ``None``, ``True``, o ``False``. Este "
"patrón tiene éxito si el sujeto de la coincidencia es la constante dada."

#: ../../library/ast.rst:1363
msgid ""
"A match sequence pattern. ``patterns`` contains the patterns to be matched "
"against the subject elements if the subject is a sequence. Matches a "
"variable length sequence if one of the subpatterns is a ``MatchStar`` node, "
"otherwise matches a fixed length sequence."
msgstr ""
"Un patrón de secuencia coincidente. ``patterns`` contiene los patrones que "
"se compararán con los elementos del asunto si éste es una secuencia. "
"Coincide con una secuencia de longitud variable si uno de los subpatrones es "
"un nodo ``MatchStar``; en caso contrario, coincide con una secuencia de "
"longitud fija."

#: ../../library/ast.rst:1394
msgid ""
"Matches the rest of the sequence in a variable length match sequence "
"pattern. If ``name`` is not ``None``, a list containing the remaining "
"sequence elements is bound to that name if the overall sequence pattern is "
"successful."
msgstr ""
"Coincide con el resto de la secuencia en un patrón de secuencia de "
"coincidencia de longitud variable. Si ``name`` no es ``None``, se vincula a "
"ese nombre una lista que contiene los elementos de secuencia restantes si el "
"patrón de secuencia global tiene éxito."

#: ../../library/ast.rst:1434
msgid ""
"A match mapping pattern. ``keys`` is a sequence of expression nodes. "
"``patterns`` is a corresponding sequence of pattern nodes. ``rest`` is an "
"optional name that can be specified to capture the remaining mapping "
"elements. Permitted key expressions are restricted as described in the match "
"statement documentation."
msgstr ""
"Un patrón de mapeo coincidente. ``keys`` es una secuencia de nodos de "
"expresión. ``patterns`` es una secuencia correspondiente de nodos de patrón. "
"``rest`` es un nombre opcional que puede especificarse para capturar los "
"elementos de mapeo restantes. Las expresiones clave permitidas están "
"restringidas tal y como se describe en la documentación de la sentencia "
"match."

#: ../../library/ast.rst:1440
msgid ""
"This pattern succeeds if the subject is a mapping, all evaluated key "
"expressions are present in the mapping, and the value corresponding to each "
"key matches the corresponding subpattern. If ``rest`` is not ``None``, a "
"dict containing the remaining mapping elements is bound to that name if the "
"overall mapping pattern is successful."
msgstr ""
"Este patrón tiene éxito si el asunto es un mapeo, todas las expresiones "
"clave evaluadas están presentes en el mapeo y el valor correspondiente a "
"cada clave coincide con el sub-patrón correspondiente. Si ``rest`` no es "
"``None``, se vincula a ese nombre un dict que contiene el resto de elementos "
"de la asignación si el patrón de asignación global tiene éxito."

#: ../../library/ast.rst:1480
msgid ""
"A match class pattern. ``cls`` is an expression giving the nominal class to "
"be matched. ``patterns`` is a sequence of pattern nodes to be matched "
"against the class defined sequence of pattern matching attributes. "
"``kwd_attrs`` is a sequence of additional attributes to be matched "
"(specified as keyword arguments in the class pattern), ``kwd_patterns`` are "
"the corresponding patterns (specified as keyword values in the class "
"pattern)."
msgstr ""
"Un patrón de clase coincidente. ``cls`` es una expresión que indica la clase "
"nominal que debe coincidir. ``patterns`` es una secuencia de nodos de "
"patrones que deben coincidir con la secuencia de atributos de coincidencia "
"de patrones definida por la clase. ``kwd_attrs`` es una secuencia de "
"atributos adicionales que deben coincidir (especificados como argumentos de "
"palabra clave en el patrón de clase), ``kwd_patterns`` son los patrones "
"correspondientes (especificados como valores de palabra clave en el patrón "
"de clase)."

#: ../../library/ast.rst:1487
msgid ""
"This pattern succeeds if the subject is an instance of the nominated class, "
"all positional patterns match the corresponding class-defined attributes, "
"and any specified keyword attributes match their corresponding pattern."
msgstr ""
"Este patrón tiene éxito si el sujeto es una instancia de la clase nominada, "
"todos los patrones posicionales coinciden con los atributos definidos por la "
"clase correspondiente y cualquier atributo de palabra clave especificado "
"coincide con su patrón correspondiente."

#: ../../library/ast.rst:1491
msgid ""
"Note: classes may define a property that returns self in order to match a "
"pattern node against the instance being matched. Several builtin types are "
"also matched that way, as described in the match statement documentation."
msgstr ""
"Nota: las clases pueden definir una propiedad que devuelva self para "
"comparar un nodo patrón con la instancia que se está comparando. Varios "
"tipos incorporados también se comparan de esta forma, como se describe en la "
"documentación de la sentencia match."

#: ../../library/ast.rst:1544
msgid ""
"A match \"as-pattern\", capture pattern or wildcard pattern. ``pattern`` "
"contains the match pattern that the subject will be matched against. If the "
"pattern is ``None``, the node represents a capture pattern (i.e a bare name) "
"and will always succeed."
msgstr ""
"Una coincidencia \"como patrón\", patrón de captura o patrón comodín. "
"``pattern`` contiene el patrón de coincidencia con el que se comparará el "
"asunto. Si el patrón es ``None``, el nodo representa un patrón de captura "
"(es decir, un nombre vacío) y siempre tendrá éxito."

#: ../../library/ast.rst:1549
msgid ""
"The ``name`` attribute contains the name that will be bound if the pattern "
"is successful. If ``name`` is ``None``, ``pattern`` must also be ``None`` "
"and the node represents the wildcard pattern."
msgstr ""
"El atributo ``name`` contiene el nombre que se vinculará si el patrón tiene "
"éxito. Si ``name`` es ``None``, ``pattern`` también debe ser ``None`` y el "
"nodo representa el patrón comodín."

#: ../../library/ast.rst:1585
msgid ""
"A match \"or-pattern\". An or-pattern matches each of its subpatterns in "
"turn to the subject, until one succeeds. The or-pattern is then deemed to "
"succeed. If none of the subpatterns succeed the or-pattern fails. The "
"``patterns`` attribute contains a list of match pattern nodes that will be "
"matched against the subject."
msgstr ""
"Una coincidencia \"or-pattern\". Un patrón or hace coincidir sucesivamente "
"cada uno de sus subpatrones con el asunto, hasta que uno de ellos tiene "
"éxito. En ese caso, se considera que el patrón or tiene éxito. Si ninguno de "
"los subpatrones tiene éxito, el patrón or falla. El atributo ``patterns`` "
"contiene una lista de nodos de patrones de coincidencia que se compararán "
"con el asunto."

#: ../../library/ast.rst:1617
msgid "Function and class definitions"
msgstr "Definiciones de funciones y clases"

#: ../../library/ast.rst:1621
msgid "A function definition."
msgstr "Definición de una función."

#: ../../library/ast.rst:1623
msgid "``name`` is a raw string of the function name."
msgstr "``name`` es una cadena sin procesar con el nombre de la función."

#: ../../library/ast.rst:1624
msgid "``args`` is an :class:`arguments` node."
msgstr "``args`` es un nodo :class:`arguments`."

#: ../../library/ast.rst:1625
msgid "``body`` is the list of nodes inside the function."
msgstr "``body`` es la lista de nodos dentro de la función."

#: ../../library/ast.rst:1626
msgid ""
"``decorator_list`` is the list of decorators to be applied, stored outermost "
"first (i.e. the first in the list will be applied last)."
msgstr ""
"``decorator_list`` es la lista de decoradores que se van a aplicar, "
"almacenados primero los más externos (es decir, el primero de la lista se "
"aplicará el último)."

#: ../../library/ast.rst:1628
msgid "``returns`` is the return annotation."
msgstr "``returns`` es la anotación de retorno."

#: ../../library/ast.rst:1637
msgid ""
"``lambda`` is a minimal function definition that can be used inside an "
"expression. Unlike :class:`FunctionDef`, ``body`` holds a single node."
msgstr ""
"``lambda`` es una definición de función mínima que puede utilizarse dentro "
"de una expresión. A diferencia de :class:`FunctionDef`, ``body`` contiene un "
"único nodo."

#: ../../library/ast.rst:1661
msgid "The arguments for a function."
msgstr "Los argumentos de una función."

#: ../../library/ast.rst:1663
msgid ""
"``posonlyargs``, ``args`` and ``kwonlyargs`` are lists of :class:`arg` nodes."
msgstr ""
"``posonlyargs`` ``args`` y son listas de nodos de . ``kwonlyargs`` :class:"
"`arg` "

#: ../../library/ast.rst:1664
msgid ""
"``vararg`` and ``kwarg`` are single :class:`arg` nodes, referring to the "
"``*args, **kwargs`` parameters."
msgstr ""
"``vararg`` y ``kwarg`` son nodos individuales de :class:`arg`, que hacen "
"referencia a los parámetros de ``*args, **kwargs``."

#: ../../library/ast.rst:1666
msgid ""
"``kw_defaults`` is a list of default values for keyword-only arguments. If "
"one is ``None``, the corresponding argument is required."
msgstr ""
"``kw_defaults`` es una lista de valores por defecto para los argumentos de "
"sólo palabra clave. Si uno es ``None``, se requiere el argumento "
"correspondiente."

#: ../../library/ast.rst:1668
msgid ""
"``defaults`` is a list of default values for arguments that can be passed "
"positionally. If there are fewer defaults, they correspond to the last n "
"arguments."
msgstr ""
"``defaults`` es una lista de valores por defecto para los argumentos que se "
"pueden pasar posicionalmente. Si hay menos valores por defecto, corresponden "
"a los últimos n argumentos."

#: ../../library/ast.rst:1675
msgid ""
"A single argument in a list. ``arg`` is a raw string of the argument name, "
"``annotation`` is its annotation, such as a :class:`Str` or :class:`Name` "
"node."
msgstr ""

#: ../../library/ast.rst:1681
msgid ""
"``type_comment`` is an optional string with the type annotation as a comment"
msgstr ""
"``type_comment`` es una cadena opcional con la anotación de tipo como "
"comentario"

#: ../../library/ast.rst:1725
msgid "A ``return`` statement."
msgstr "Una declaración en ``return``."

#: ../../library/ast.rst:1740
msgid ""
"A ``yield`` or ``yield from`` expression. Because these are expressions, "
"they must be wrapped in a :class:`Expr` node if the value sent back is not "
"used."
msgstr ""

#: ../../library/ast.rst:1765
msgid ""
"``global`` and ``nonlocal`` statements. ``names`` is a list of raw strings."
msgstr ""
"``global`` y ``nonlocal``. ``names`` es una lista de cadenas sin procesar."

#: ../../library/ast.rst:1792
msgid "A class definition."
msgstr "Una definición de clase."

#: ../../library/ast.rst:1794
msgid "``name`` is a raw string for the class name"
msgstr "``name`` es una cadena sin formato para el nombre de la clase"

#: ../../library/ast.rst:1795
msgid "``bases`` is a list of nodes for explicitly specified base classes."
msgstr ""
"``bases`` es una lista de nodos para clases base especificadas "
"explícitamente."

#: ../../library/ast.rst:1796
msgid ""
"``keywords`` is a list of :class:`keyword` nodes, principally for "
"'metaclass'. Other keywords will be passed to the metaclass, as per "
"`PEP-3115 <https://www.python.org/dev/peps/pep-3115/>`_."
msgstr ""

#: ../../library/ast.rst:1799
msgid ""
"``starargs`` and ``kwargs`` are each a single node, as in a function call. "
"starargs will be expanded to join the list of base classes, and kwargs will "
"be passed to the metaclass."
msgstr ""

#: ../../library/ast.rst:1802
msgid ""
"``body`` is a list of nodes representing the code within the class "
"definition."
msgstr ""
"``body`` es una lista de nodos que representan el código dentro de la "
"definición de la clase."

#: ../../library/ast.rst:1804
msgid "``decorator_list`` is a list of nodes, as in :class:`FunctionDef`."
msgstr ""
"``decorator_list`` es una lista de nodos, como en :class:`FunctionDef`."

#: ../../library/ast.rst:1833
msgid "Async and await"
msgstr "Async y await"

#: ../../library/ast.rst:1837
msgid ""
"An ``async def`` function definition. Has the same fields as :class:"
"`FunctionDef`."
msgstr ""
"Una definición de la función ``async def``. Tiene los mismos campos que :"
"class:`FunctionDef`."

#: ../../library/ast.rst:1843
msgid ""
"An ``await`` expression. ``value`` is what it waits for. Only valid in the "
"body of an :class:`AsyncFunctionDef`."
msgstr ""
"Una expresión ``await``. ``value`` es lo que espera. Sólo válido en el "
"cuerpo de un :class:`AsyncFunctionDef`."

#: ../../library/ast.rst:1876
msgid ""
"``async for`` loops and ``async with`` context managers. They have the same "
"fields as :class:`For` and :class:`With`, respectively. Only valid in the "
"body of an :class:`AsyncFunctionDef`."
msgstr ""
"``async for`` y ``async with`` gestores de contexto. Tienen los mismos "
"campos que :class:`For` y :class:`With`, respectivamente. Sólo son válidos "
"en el cuerpo de un :class:`AsyncFunctionDef`."

#: ../../library/ast.rst:1881
msgid ""
"When a string is parsed by :func:`ast.parse`, operator nodes (subclasses of :"
"class:`ast.operator`, :class:`ast.unaryop`, :class:`ast.cmpop`, :class:`ast."
"boolop` and :class:`ast.expr_context`) on the returned tree will be "
"singletons. Changes to one will be reflected in all other occurrences of the "
"same value (e.g. :class:`ast.Add`)."
msgstr ""
"Cuando una cadena es analizada por :func:`ast.parse`, los nodos operadores "
"(subclases de :class:`ast.operator`, :class:`ast.unaryop`, :class:`ast."
"cmpop`, :class:`ast.boolop` y :class:`ast.expr_context`) en el árbol "
"devuelto serán singletons. Los cambios en uno de ellos se reflejarán en "
"todas las demás apariciones del mismo valor (por ejemplo, :class:`ast.Add`)."

#: ../../library/ast.rst:1889
msgid ":mod:`ast` Helpers"
msgstr ":mod:`ast` Ayudantes"

#: ../../library/ast.rst:1891
msgid ""
"Apart from the node classes, the :mod:`ast` module defines these utility "
"functions and classes for traversing abstract syntax trees:"
msgstr ""
"Además de las clases de nodos, el módulo :mod:`ast` define estas funciones y "
"clases de utilidad para recorrer árboles sintácticos abstractos:"

#: ../../library/ast.rst:1896
msgid ""
"Parse the source into an AST node.  Equivalent to ``compile(source, "
"filename, mode, ast.PyCF_ONLY_AST)``."
msgstr ""
"Convierte la fuente en un nodo AST.  Equivalente a ``compile(source, "
"filename, mode, ast.PyCF_ONLY_AST)``."

#: ../../library/ast.rst:1899
msgid ""
"If ``type_comments=True`` is given, the parser is modified to check and "
"return type comments as specified by :pep:`484` and :pep:`526`. This is "
"equivalent to adding :data:`ast.PyCF_TYPE_COMMENTS` to the flags passed to :"
"func:`compile()`.  This will report syntax errors for misplaced type "
"comments.  Without this flag, type comments will be ignored, and the "
"``type_comment`` field on selected AST nodes will always be ``None``.  In "
"addition, the locations of ``# type: ignore`` comments will be returned as "
"the ``type_ignores`` attribute of :class:`Module` (otherwise it is always an "
"empty list)."
msgstr ""

#: ../../library/ast.rst:1909
msgid ""
"In addition, if ``mode`` is ``'func_type'``, the input syntax is modified to "
"correspond to :pep:`484` \"signature type comments\", e.g. ``(str, int) -> "
"List[str]``."
msgstr ""
"Además, si ``mode`` es ``'func_type'``, la sintaxis de entrada se modifica "
"para que corresponda a :pep:`484` \"comentarios de tipo de firma\", por "
"ejemplo ``(str, int) -> List[str]``."

#: ../../library/ast.rst:1913
msgid ""
"Also, setting ``feature_version`` to a tuple ``(major, minor)`` will attempt "
"to parse using that Python version's grammar. Currently ``major`` must equal "
"to ``3``.  For example, setting ``feature_version=(3, 4)`` will allow the "
"use of ``async`` and ``await`` as variable names.  The lowest supported "
"version is ``(3, 4)``; the highest is ``sys.version_info[0:2]``."
msgstr ""

#: ../../library/ast.rst:1920
msgid ""
"If source contains a null character ('\\0'), :exc:`ValueError` is raised."
msgstr ""

#: ../../library/ast.rst:1923
msgid ""
"Note that successfully parsing source code into an AST object doesn't "
"guarantee that the source code provided is valid Python code that can be "
"executed as the compilation step can raise further :exc:`SyntaxError` "
"exceptions. For instance, the source ``return 42`` generates a valid AST "
"node for a return statement, but it cannot be compiled alone (it needs to be "
"inside a function node)."
msgstr ""
"Tenga en cuenta que analizar con éxito el código fuente en un objeto AST no "
"garantiza que el código fuente proporcionado sea código Python válido que "
"pueda ejecutarse, ya que el paso de compilación puede generar más "
"excepciones :exc:`SyntaxError`. Por ejemplo, el código fuente ``return 42`` "
"genera un nodo AST válido para una sentencia return, pero no puede ser "
"compilado solo (necesita estar dentro de un nodo de función)."

#: ../../library/ast.rst:1930
msgid ""
"In particular, :func:`ast.parse` won't do any scoping checks, which the "
"compilation step does."
msgstr ""
"En particular, :func:`ast.parse` no realizará ninguna comprobación de "
"alcance, cosa que sí hace el paso de compilación."

#: ../../library/ast.rst:1934
msgid ""
"It is possible to crash the Python interpreter with a sufficiently large/"
"complex string due to stack depth limitations in Python's AST compiler."
msgstr ""
"Es posible bloquear el intérprete de Python con una cadena suficientemente "
"grande/compleja debido a las limitaciones de profundidad de pila del "
"compilador AST de Python."

#: ../../library/ast.rst:1938
msgid "Added ``type_comments``, ``mode='func_type'`` and ``feature_version``."
msgstr ""
"Añadidos ``type_comments``, ``mode='func_type'`` y ``feature_version``."

#: ../../library/ast.rst:1944
msgid ""
"Unparse an :class:`ast.AST` object and generate a string with code that "
"would produce an equivalent :class:`ast.AST` object if parsed back with :"
"func:`ast.parse`."
msgstr ""
"Descomprime un objeto :class:`ast.AST` y genera una cadena con el código que "
"produciría un objeto :class:`ast.AST` equivalente si se descomprime con :"
"func:`ast.parse`."

#: ../../library/ast.rst:1949
msgid ""
"The produced code string will not necessarily be equal to the original code "
"that generated the :class:`ast.AST` object (without any compiler "
"optimizations, such as constant tuples/frozensets)."
msgstr ""
"La cadena de código producida no será necesariamente igual al código "
"original que generó el objeto :class:`ast.AST` (sin ninguna optimización del "
"compilador, como tuplas/frozensets constantes)."

#: ../../library/ast.rst:1954
msgid ""
"Trying to unparse a highly complex expression would result with :exc:"
"`RecursionError`."
msgstr ""
"Si se intentara descifrar una expresión muy compleja, el resultado sería :"
"exc:`RecursionError`."

#: ../../library/ast.rst:1962
msgid ""
"Evaluate an expression node or a string containing only a Python literal or "
"container display.  The string or node provided may only consist of the "
"following Python literal structures: strings, bytes, numbers, tuples, lists, "
"dicts, sets, booleans, ``None`` and ``Ellipsis``."
msgstr ""
"Evalúa un nodo de expresión o una cadena que contenga sólo un literal de "
"Python o una pantalla contenedora.  La cadena o nodo proporcionado solo "
"puede constar de las siguientes estructuras literales de Python: cadenas, "
"bytes, números, tuplas, listas, dicts, conjuntos, booleanos, ``None`` y "
"``Ellipsis``."

#: ../../library/ast.rst:1967
msgid ""
"This can be used for evaluating strings containing Python values without the "
"need to parse the values oneself.  It is not capable of evaluating "
"arbitrarily complex expressions, for example involving operators or indexing."
msgstr ""
"Puede utilizarse para evaluar cadenas que contengan valores de Python sin "
"necesidad de analizar los valores uno mismo.  No es capaz de evaluar "
"expresiones arbitrariamente complejas, por ejemplo que impliquen operadores "
"o indexación."

#: ../../library/ast.rst:1972
msgid ""
"This function had been documented as \"safe\" in the past without defining "
"what that meant. That was misleading. This is specifically designed not to "
"execute Python code, unlike the more general :func:`eval`. There is no "
"namespace, no name lookups, or ability to call out. But it is not free from "
"attack: A relatively small input can lead to memory exhaustion or to C stack "
"exhaustion, crashing the process. There is also the possibility for "
"excessive CPU consumption denial of service on some inputs. Calling it on "
"untrusted data is thus not recommended."
msgstr ""
"Esta función se había documentado como \"segura\" en el pasado sin definir "
"lo que significaba. Esto era engañoso. Está específicamente diseñada para no "
"ejecutar código Python, a diferencia de la más general :func:`eval`. No hay "
"espacio de nombres, no hay búsquedas de nombres, o la capacidad de llamar. "
"Pero no está libre de ataques: Una entrada relativamente pequeña puede "
"llevar al agotamiento de la memoria o de la pila C, colapsando el proceso. "
"También existe la posibilidad de denegación de servicio por consumo excesivo "
"de CPU en algunas entradas. Por lo tanto, no se recomienda utilizarlo con "
"datos que no sean de confianza."

#: ../../library/ast.rst:1982
msgid ""
"It is possible to crash the Python interpreter due to stack depth "
"limitations in Python's AST compiler."
msgstr ""
"Es posible bloquear el intérprete de Python debido a las limitaciones de "
"profundidad de pila del compilador AST de Python."

#: ../../library/ast.rst:1985
msgid ""
"It can raise :exc:`ValueError`, :exc:`TypeError`, :exc:`SyntaxError`, :exc:"
"`MemoryError` and :exc:`RecursionError` depending on the malformed input."
msgstr ""
"Puede activar :exc:`ValueError`, :exc:`TypeError`, :exc:`SyntaxError`, :exc:"
"`MemoryError` y :exc:`RecursionError` dependiendo de la entrada malformada."

#: ../../library/ast.rst:1989
msgid "Now allows bytes and set literals."
msgstr "Ahora permite bytes y literales de conjunto."

#: ../../library/ast.rst:1992
msgid "Now supports creating empty sets with ``'set()'``."
msgstr "Ahora admite la creación de conjuntos vacíos con ``'set()'``."

#: ../../library/ast.rst:1995
msgid "For string inputs, leading spaces and tabs are now stripped."
msgstr ""
"En las entradas de cadena, se eliminan los espacios y tabuladores iniciales."

#: ../../library/ast.rst:2001
msgid ""
"Return the docstring of the given *node* (which must be a :class:"
"`FunctionDef`, :class:`AsyncFunctionDef`, :class:`ClassDef`, or :class:"
"`Module` node), or ``None`` if it has no docstring. If *clean* is true, "
"clean up the docstring's indentation with :func:`inspect.cleandoc`."
msgstr ""
"Devuelve el docstring del *nodo* dado (que debe ser un nodo :class:"
"`FunctionDef`, :class:`AsyncFunctionDef`, :class:`ClassDef`, o :class:"
"`Module` ), o ``None`` si no tiene docstring. Si *clean* es verdad, limpia "
"la sangría del docstring con :func:`inspect.cleandoc`."

#: ../../library/ast.rst:2007
msgid ":class:`AsyncFunctionDef` is now supported."
msgstr ":class:`AsyncFunctionDef` es ahora compatible."

#: ../../library/ast.rst:2013
msgid ""
"Get source code segment of the *source* that generated *node*. If some "
"location information (:attr:`lineno`, :attr:`end_lineno`, :attr:"
"`col_offset`, or :attr:`end_col_offset`) is missing, return ``None``."
msgstr ""

#: ../../library/ast.rst:2017
msgid ""
"If *padded* is ``True``, the first line of a multi-line statement will be "
"padded with spaces to match its original position."
msgstr ""
"Si *padded* es ``True``, la primera línea de una sentencia multilínea se "
"rellenará con espacios para que coincida con su posición original."

#: ../../library/ast.rst:2025
msgid ""
"When you compile a node tree with :func:`compile`, the compiler expects :"
"attr:`lineno` and :attr:`col_offset` attributes for every node that supports "
"them.  This is rather tedious to fill in for generated nodes, so this helper "
"adds these attributes recursively where not already set, by setting them to "
"the values of the parent node.  It works recursively starting at *node*."
msgstr ""

#: ../../library/ast.rst:2034
msgid ""
"Increment the line number and end line number of each node in the tree "
"starting at *node* by *n*. This is useful to \"move code\" to a different "
"location in a file."
msgstr ""
"Incrementa en *n* el número de línea y el número de línea final de cada nodo "
"del árbol que comienza en *nodo*. Esto es útil para \"mover código\" a una "
"ubicación diferente en un archivo."

#: ../../library/ast.rst:2041
msgid ""
"Copy source location (:attr:`lineno`, :attr:`col_offset`, :attr:"
"`end_lineno`, and :attr:`end_col_offset`) from *old_node* to *new_node* if "
"possible, and return *new_node*."
msgstr ""

#: ../../library/ast.rst:2048
msgid ""
"Yield a tuple of ``(fieldname, value)`` for each field in ``node._fields`` "
"that is present on *node*."
msgstr ""
"Proporciona una tupla de ``(fieldname, value)`` para cada campo de ``node."
"_fields`` presente en *node*."

#: ../../library/ast.rst:2054
msgid ""
"Yield all direct child nodes of *node*, that is, all fields that are nodes "
"and all items of fields that are lists of nodes."
msgstr ""
"Devuelve todos los nodos hijos directos de *node*, es decir, todos los "
"campos que son nodos y todos los elementos de campos que son listas de nodos."

#: ../../library/ast.rst:2060
msgid ""
"Recursively yield all descendant nodes in the tree starting at *node* "
"(including *node* itself), in no specified order.  This is useful if you "
"only want to modify nodes in place and don't care about the context."
msgstr ""
"Obtiene de forma recursiva todos los nodos descendientes del árbol a partir "
"de *node* (incluido el propio *node*), sin especificar el orden.  Esto es "
"útil si sólo desea modificar los nodos en su lugar y no se preocupan por el "
"contexto."

#: ../../library/ast.rst:2067
msgid ""
"A node visitor base class that walks the abstract syntax tree and calls a "
"visitor function for every node found.  This function may return a value "
"which is forwarded by the :meth:`visit` method."
msgstr ""
"Una clase base visitante de nodos que recorre el árbol de sintaxis abstracta "
"y llama a una función visitante por cada nodo encontrado.  Esta función "
"puede devolver un valor que es reenviado por el método :meth:`visit`."

#: ../../library/ast.rst:2071
msgid ""
"This class is meant to be subclassed, with the subclass adding visitor "
"methods."
msgstr ""
"Esta clase está pensada para ser subclasificada, con la subclase añadiendo "
"métodos de visitante."

#: ../../library/ast.rst:2076
msgid ""
"Visit a node.  The default implementation calls the method called :samp:"
"`self.visit_{classname}` where *classname* is the name of the node class, "
"or :meth:`generic_visit` if that method doesn't exist."
msgstr ""
"Visita un nodo.  La implementación por defecto llama al método llamado :samp:"
"`self.visit_{classname}` donde *classname* es el nombre de la clase del "
"nodo, o :meth:`generic_visit` si ese método no existe."

#: ../../library/ast.rst:2082
msgid "This visitor calls :meth:`visit` on all children of the node."
msgstr "Este visitante llama a :meth:`visit` en todos los hijos del nodo."

#: ../../library/ast.rst:2084
msgid ""
"Note that child nodes of nodes that have a custom visitor method won't be "
"visited unless the visitor calls :meth:`generic_visit` or visits them itself."
msgstr ""
"Tenga en cuenta que los nodos hijos de nodos que tienen un método de "
"visitante personalizado no serán visitados a menos que el visitante llame a :"
"meth:`generic_visit` o los visite él mismo."

#: ../../library/ast.rst:2088
msgid ""
"Don't use the :class:`NodeVisitor` if you want to apply changes to nodes "
"during traversal.  For this a special visitor exists (:class:"
"`NodeTransformer`) that allows modifications."
msgstr ""
"No utilice :class:`NodeVisitor` si desea aplicar cambios a los nodos durante "
"el recorrido.  Para ello existe un visitante especial (:class:"
"`NodeTransformer`) que permite realizar modificaciones."

#: ../../library/ast.rst:2094
msgid ""
"Methods :meth:`visit_Num`, :meth:`visit_Str`, :meth:`visit_Bytes`, :meth:"
"`visit_NameConstant` and :meth:`visit_Ellipsis` are deprecated now and will "
"not be called in future Python versions.  Add the :meth:`visit_Constant` "
"method to handle all constant nodes."
msgstr ""

#: ../../library/ast.rst:2102
msgid ""
"A :class:`NodeVisitor` subclass that walks the abstract syntax tree and "
"allows modification of nodes."
msgstr ""
"Una subclase de :class:`NodeVisitor` que recorre el árbol sintáctico "
"abstracto y permite modificar los nodos."

#: ../../library/ast.rst:2105
msgid ""
"The :class:`NodeTransformer` will walk the AST and use the return value of "
"the visitor methods to replace or remove the old node.  If the return value "
"of the visitor method is ``None``, the node will be removed from its "
"location, otherwise it is replaced with the return value.  The return value "
"may be the original node in which case no replacement takes place."
msgstr ""
"La :class:`NodeTransformer` recorrerá la AST y utilizará el valor de retorno "
"de los métodos visitantes para reemplazar o eliminar el nodo antiguo.  Si el "
"valor de retorno del método visitante es ``None``, el nodo será eliminado de "
"su ubicación, en caso contrario será reemplazado por el valor de retorno.  "
"El valor de retorno puede ser el nodo original, en cuyo caso no se produce "
"ninguna sustitución."

#: ../../library/ast.rst:2111
msgid ""
"Here is an example transformer that rewrites all occurrences of name lookups "
"(``foo``) to ``data['foo']``::"
msgstr ""
"He aquí un ejemplo de transformador que reescribe todas las apariciones de "
"búsquedas de nombres (``foo``) en ``data['foo']``::"

#: ../../library/ast.rst:2123
msgid ""
"Keep in mind that if the node you're operating on has child nodes you must "
"either transform the child nodes yourself or call the :meth:`generic_visit` "
"method for the node first."
msgstr ""

#: ../../library/ast.rst:2127
msgid ""
"For nodes that were part of a collection of statements (that applies to all "
"statement nodes), the visitor may also return a list of nodes rather than "
"just a single node."
msgstr ""
"Para los nodos que formaban parte de una colección de sentencias (que se "
"aplica a todos los nodos de sentencia), el visitante también puede devolver "
"una lista de nodos en lugar de un único nodo."

#: ../../library/ast.rst:2131
msgid ""
"If :class:`NodeTransformer` introduces new nodes (that weren't part of "
"original tree) without giving them location information (such as :attr:"
"`lineno`), :func:`fix_missing_locations` should be called with the new sub-"
"tree to recalculate the location information::"
msgstr ""

#: ../../library/ast.rst:2139
msgid "Usually you use the transformer like this::"
msgstr "Normalmente se utiliza el transformador así::"

#: ../../library/ast.rst:2146
msgid ""
"Return a formatted dump of the tree in *node*.  This is mainly useful for "
"debugging purposes.  If *annotate_fields* is true (by default), the returned "
"string will show the names and the values for fields. If *annotate_fields* "
"is false, the result string will be more compact by omitting unambiguous "
"field names.  Attributes such as line numbers and column offsets are not "
"dumped by default.  If this is wanted, *include_attributes* can be set to "
"true."
msgstr ""
"Devuelve un volcado formateado del árbol en *nodo*.  Esto es útil "
"principalmente para propósitos de depuración.  Si *annotate_fields* es true "
"(por defecto), la cadena devuelta mostrará los nombres y los valores de los "
"campos. Si *annotate_fields* es false, la cadena resultante será más "
"compacta al omitir nombres de campos no ambiguos.  Los atributos como "
"números de línea y desplazamientos de columna no se vuelcan por defecto.  Si "
"se desea, *include_attributes* puede establecerse en true."

#: ../../library/ast.rst:2154
msgid ""
"If *indent* is a non-negative integer or string, then the tree will be "
"pretty-printed with that indent level.  An indent level of 0, negative, or "
"``\"\"`` will only insert newlines.  ``None`` (the default) selects the "
"single line representation. Using a positive integer indent indents that "
"many spaces per level.  If *indent* is a string (such as ``\"\\t\"``), that "
"string is used to indent each level."
msgstr ""
"Si *indent* es un número entero no negativo o una cadena, el árbol se "
"imprimirá con ese nivel de sangrado.  Un nivel de sangría de 0, negativo, o "
"``\"\"`` sólo insertará nuevas líneas.  ``None`` (por defecto) selecciona la "
"representación de una sola línea. El uso de una sangría entera positiva "
"inserta tantos espacios por nivel.  Si *indent* es una cadena (como "
"``\"\\t\"``), esa cadena se utiliza para sangrar cada nivel."

#: ../../library/ast.rst:2161
msgid "Added the *indent* option."
msgstr "Añadida la opción *indent*."

#: ../../library/ast.rst:2168
msgid "Compiler Flags"
msgstr "Banderas del compilador"

#: ../../library/ast.rst:2170
msgid ""
"The following flags may be passed to :func:`compile` in order to change "
"effects on the compilation of a program:"
msgstr ""
"Las siguientes banderas se pueden pasar a :func:`compile` con el fin de "
"cambiar los efectos sobre la compilación de un programa:"

#: ../../library/ast.rst:2175
msgid ""
"Enables support for top-level ``await``, ``async for``, ``async with`` and "
"async comprehensions."
msgstr ""
"Habilita la compatibilidad con las comprensiones de nivel superior "
"``await``, ``async for``, ``async with`` y async."

#: ../../library/ast.rst:2182
msgid ""
"Generates and returns an abstract syntax tree instead of returning a "
"compiled code object."
msgstr ""
"Genera y devuelve un árbol de sintaxis abstracto en lugar de devolver un "
"objeto de código compilado."

#: ../../library/ast.rst:2187
msgid ""
"Enables support for :pep:`484` and :pep:`526` style type comments (``# type: "
"<type>``, ``# type: ignore <stuff>``)."
msgstr ""
"Habilita la compatibilidad con comentarios de tipo :pep:`484` y :pep:`526` "
"(``# type: <type>``, ``# type: ignore <stuff>``)."

#: ../../library/ast.rst:2196
msgid "Command-Line Usage"
msgstr "Uso de la línea de comandos"

#: ../../library/ast.rst:2200
msgid ""
"The :mod:`ast` module can be executed as a script from the command line. It "
"is as simple as:"
msgstr ""
"El módulo :mod:`ast` puede ejecutarse como un script desde la línea de "
"comandos. Es tan sencillo como"

#: ../../library/ast.rst:2207
msgid "The following options are accepted:"
msgstr "Se aceptan las siguientes opciones:"

#: ../../library/ast.rst:2213
msgid "Show the help message and exit."
msgstr "Mostrar el mensaje de ayuda y salir."

#: ../../library/ast.rst:2218
msgid ""
"Specify what kind of code must be compiled, like the *mode* argument in :"
"func:`parse`."
msgstr ""
"Especifica qué tipo de código debe compilarse, como el argumento *mode* de :"
"func:`parse`."

#: ../../library/ast.rst:2223
msgid "Don't parse type comments."
msgstr "No analice los comentarios de tipo"

#: ../../library/ast.rst:2227
msgid "Include attributes such as line numbers and column offsets."
msgstr "Incluya atributos como números de línea y desplazamientos de columna."

#: ../../library/ast.rst:2232
msgid "Indentation of nodes in AST (number of spaces)."
msgstr "Sangría de los nodos en AST (número de espacios).                "

#: ../../library/ast.rst:2234
msgid ""
"If :file:`infile` is specified its contents are parsed to AST and dumped to "
"stdout.  Otherwise, the content is read from stdin."
msgstr ""
"Si se especifica :file:`infile`, su contenido se convierte a AST y se vuelca "
"en stdout.  En caso contrario, el contenido se lee de stdin."

#: ../../library/ast.rst:2240
msgid ""
"`Green Tree Snakes <https://greentreesnakes.readthedocs.io/>`_, an external "
"documentation resource, has good details on working with Python ASTs."
msgstr ""
"`Green Tree Snakes <https://greentreesnakes.readthedocs.io/>`_, un recurso "
"de documentación externo, tiene buenos detalles sobre cómo trabajar con ASTs "
"de Python."

#: ../../library/ast.rst:2243
msgid ""
"`ASTTokens <https://asttokens.readthedocs.io/en/latest/user-guide.html>`_ "
"annotates Python ASTs with the positions of tokens and text in the source "
"code that generated them. This is helpful for tools that make source code "
"transformations."
msgstr ""
"`ASTTokens <https://asttokens.readthedocs.io/en/latest/user-guide.html>`_ "
"anota ASTs de Python con las posiciones de tokens y texto en el código "
"fuente que los generó. Esto es útil para herramientas que realizan "
"transformaciones del código fuente."

#: ../../library/ast.rst:2248
msgid ""
"`leoAst.py <https://leoeditor.com/appendices.html#leoast-py>`_ unifies the "
"token-based and parse-tree-based views of python programs by inserting two-"
"way links between tokens and ast nodes."
msgstr ""

#: ../../library/ast.rst:2252
msgid ""
"`LibCST <https://libcst.readthedocs.io/>`_ parses code as a Concrete Syntax "
"Tree that looks like an ast tree and keeps all formatting details. It's "
"useful for building automated refactoring (codemod) applications and linters."
msgstr ""
"`LibCST <https://libcst.readthedocs.io/>`_ analiza el código como un Árbol "
"de Sintaxis Concreto que se parece a un árbol ast y mantiene todos los "
"detalles de formato. Es útil para crear aplicaciones de refactorización "
"automatizada (codemod) y linters."

#: ../../library/ast.rst:2257
msgid ""
"`Parso <https://parso.readthedocs.io>`_ is a Python parser that supports "
"error recovery and round-trip parsing for different Python versions (in "
"multiple Python versions). Parso is also able to list multiple syntax errors "
"in your python file."
msgstr ""
