# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# Rafael Fontenelle <rffontenelle@gmail.com>, 2025
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.10\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-02-14 16:07+0000\n"
"PO-Revision-Date: 2022-11-05 17:21+0000\n"
"Last-Translator: Rafael Fontenelle <rffontenelle@gmail.com>, 2025\n"
"Language-Team: Spanish (Spain) (https://app.transifex.com/python-doc/"
"teams/5390/es_ES/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: es_ES\n"
"Plural-Forms: nplurals=3; plural=n == 1 ? 0 : n != 0 && n % 1000000 == 0 ? "
"1 : 2;\n"

#: ../../library/2to3.rst:4
msgid "2to3 --- Automated Python 2 to 3 code translation"
msgstr "2to3 --- Traducción automática de código Python 2 a 3"

#: ../../library/2to3.rst:8
msgid ""
"2to3 is a Python program that reads Python 2.x source code and applies a "
"series of *fixers* to transform it into valid Python 3.x code.  The standard "
"library contains a rich set of fixers that will handle almost all code.  "
"2to3 supporting library :mod:`lib2to3` is, however, a flexible and generic "
"library, so it is possible to write your own fixers for 2to3."
msgstr ""
"2to3 es un programa de Python que lee código fuente Python 2.x y aplica una "
"serie de *correctores* para transformarlo en código Python 3.x válido.  La "
"biblioteca estándar contiene un rico conjunto de fijadores que manejarán "
"casi todo el código.  La biblioteca de soporte de 2to3 :mod:`lib2to3` es, "
"sin embargo, una biblioteca flexible y genérica, por lo que es posible "
"escribir sus propios fijadores para 2to3."

#: ../../library/2to3.rst:18
msgid "Using 2to3"
msgstr "Utilizar 2to3"

#: ../../library/2to3.rst:20
msgid ""
"2to3 will usually be installed with the Python interpreter as a script.  It "
"is also located in the :file:`Tools/scripts` directory of the Python root."
msgstr ""
"2to3 suele instalarse con el intérprete de Python como un script.  También "
"se encuentra en el directorio :file:`Tools/scripts` de la raíz de Python."

#: ../../library/2to3.rst:23
msgid ""
"2to3's basic arguments are a list of files or directories to transform.  The "
"directories are recursively traversed for Python sources."
msgstr ""
"Los argumentos básicos de 2to3 son una lista de archivos o directorios a "
"transformar.  Los directorios se recorren recursivamente en busca de fuentes "
"Python."

#: ../../library/2to3.rst:26
msgid "Here is a sample Python 2.x source file, :file:`example.py`::"
msgstr "He aquí un ejemplo de fichero fuente Python 2.x, :file:`example.py`::"

#: ../../library/2to3.rst:34
msgid "It can be converted to Python 3.x code via 2to3 on the command line:"
msgstr ""
"Puede convertirse a código Python 3.x mediante 2to3 en la línea de comandos:"

#: ../../library/2to3.rst:40
msgid ""
"A diff against the original source file is printed.  2to3 can also write the "
"needed modifications right back to the source file.  (A backup of the "
"original file is made unless :option:`!-n` is also given.)  Writing the "
"changes back is enabled with the :option:`!-w` flag:"
msgstr ""
"Se imprime una diferencia con el fichero fuente original.  2to3 también "
"puede volver a escribir las modificaciones necesarias en el fichero fuente.  "
"(Se realiza una copia de seguridad del archivo original a menos que también "
"se indique :option:`!-n`.) La opción :option:`!-w` permite volver a escribir "
"los cambios:"

#: ../../library/2to3.rst:49
msgid "After transformation, :file:`example.py` looks like this::"
msgstr "Después de la transformación, :file:`example.py` tiene este aspecto::"

#: ../../library/2to3.rst:57
msgid ""
"Comments and exact indentation are preserved throughout the translation "
"process."
msgstr ""
"Los comentarios y la sangría exacta se conservan durante todo el proceso de "
"traducción."

#: ../../library/2to3.rst:59
msgid ""
"By default, 2to3 runs a set of :ref:`predefined fixers <2to3-fixers>`.  The :"
"option:`!-l` flag lists all available fixers.  An explicit set of fixers to "
"run can be given with :option:`!-f`.  Likewise the :option:`!-x` explicitly "
"disables a fixer.  The following example runs only the ``imports`` and "
"``has_key`` fixers:"
msgstr ""
"Por defecto, 2to3 ejecuta un conjunto de fijadores :ref:`predefined fixers "
"<2to3-fixers>`.  La bandera :option:`!-l` lista todos los fijadores "
"disponibles.  Se puede indicar un conjunto explícito de fijadores con :"
"option:`!-f`.  Del mismo modo, :option:`!-x` desactiva explícitamente un "
"fijador.  El siguiente ejemplo sólo ejecuta los fijadores ``imports`` y "
"``has_key``:"

#: ../../library/2to3.rst:68
msgid "This command runs every fixer except the ``apply`` fixer:"
msgstr "Este comando ejecuta todos los fijadores excepto el fijador ``apply``:"

#: ../../library/2to3.rst:74
msgid ""
"Some fixers are *explicit*, meaning they aren't run by default and must be "
"listed on the command line to be run.  Here, in addition to the default "
"fixers, the ``idioms`` fixer is run:"
msgstr ""
"Algunos fijadores son *explícitos*, lo que significa que no se ejecutan por "
"defecto y deben aparecer en la línea de comandos para ser ejecutados.  Aquí, "
"además de los fijadores por defecto, se ejecuta el fijador ``idioms``:"

#: ../../library/2to3.rst:82
msgid "Notice how passing ``all`` enables all default fixers."
msgstr ""
"Observe cómo al pasar ``all`` se activan todos los fijadores por defecto."

#: ../../library/2to3.rst:84
msgid ""
"Sometimes 2to3 will find a place in your source code that needs to be "
"changed, but 2to3 cannot fix automatically.  In this case, 2to3 will print a "
"warning beneath the diff for a file.  You should address the warning in "
"order to have compliant 3.x code."
msgstr ""
"A veces, 2to3 encontrará un lugar en su código fuente que necesita ser "
"cambiado, pero que 2to3 no puede arreglar automáticamente.  En este caso, "
"2to3 imprimirá una advertencia debajo del diff de un fichero.  Deberá "
"corregir la advertencia para que el código 3.x sea compatible."

#: ../../library/2to3.rst:89
msgid ""
"2to3 can also refactor doctests.  To enable this mode, use the :option:`!-d` "
"flag.  Note that *only* doctests will be refactored.  This also doesn't "
"require the module to be valid Python.  For example, doctest like examples "
"in a reST document could also be refactored with this option."
msgstr ""
"2to3 también puede refactorizar doctests.  Para activar este modo, utilizar "
"la opción :option:`!-d`.  Tener en cuenta que *sólo* los doctests se "
"refactorizarán.  Esto tampoco requiere que el módulo Python sea válido.  Por "
"ejemplo, doctest como ejemplos en un documento reST también se podría "
"refactorizar con esta opción."

#: ../../library/2to3.rst:94
msgid ""
"The :option:`!-v` option enables output of more information on the "
"translation process."
msgstr ""
"La opción :option:`!-v` permite obtener más información sobre el proceso de "
"traducción."

#: ../../library/2to3.rst:97
msgid ""
"Since some print statements can be parsed as function calls or statements, "
"2to3 cannot always read files containing the print function.  When 2to3 "
"detects the presence of the ``from __future__ import print_function`` "
"compiler directive, it modifies its internal grammar to interpret :func:"
"`print` as a function.  This change can also be enabled manually with the :"
"option:`!-p` flag.  Use :option:`!-p` to run fixers on code that already has "
"had its print statements converted. Also :option:`!-e` can be used to make :"
"func:`exec` a function."
msgstr ""
"Dado que algunas sentencias print pueden interpretarse como llamadas a "
"funciones o sentencias, 2to3 no siempre puede leer ficheros que contengan la "
"función print.  Cuando 2to3 detecta la presencia de la directiva del "
"compilador ``from __future__ import print_function``, modifica su gramática "
"interna para interpretar :func:`print` como una función.  Este cambio "
"también puede activarse manualmente con la bandera :option:`!-p`.  Utilice :"
"option:`!-p` para ejecutar correctores en código al que ya se le han "
"convertido sus sentencias print. También se puede utilizar :option:`!-e` "
"para convertir :func:`exec` en una función."

#: ../../library/2to3.rst:105
msgid ""
"The :option:`!-o` or :option:`!--output-dir` option allows specification of "
"an alternate directory for processed output files to be written to.  The :"
"option:`!-n` flag is required when using this as backup files do not make "
"sense when not overwriting the input files."
msgstr ""
"Las opciones :option:`!-o` o :option:`!--output-dir` permiten especificar un "
"directorio alternativo en el que se escribirán los archivos de salida "
"procesados.  El indicador :option:`!-n` es necesario cuando se utiliza esta "
"opción, ya que los archivos de copia de seguridad no tienen sentido cuando "
"no se sobrescriben los archivos de entrada."

#: ../../library/2to3.rst:110
msgid "The :option:`!-o` option was added."
msgstr "Se ha añadido la opción :option:`!-o`."

#: ../../library/2to3.rst:113
msgid ""
"The :option:`!-W` or :option:`!--write-unchanged-files` flag tells 2to3 to "
"always write output files even if no changes were required to the file.  "
"This is most useful with :option:`!-o` so that an entire Python source tree "
"is copied with translation from one directory to another. This option "
"implies the :option:`!-w` flag as it would not make sense otherwise."
msgstr ""
"La bandera :option:`!-W` o :option:`!--write-unchanged-files` indica a 2to3 "
"que escriba siempre los ficheros de salida aunque no se hayan realizado "
"cambios en el fichero.  Esto es muy útil con :option:`!-o` para que todo un "
"árbol de fuentes Python se copie con traducción de un directorio a otro. "
"Esta opción implica la bandera :option:`!-w` ya que no tendría sentido de "
"otro modo."

#: ../../library/2to3.rst:119
msgid "The :option:`!-W` flag was added."
msgstr "Se ha añadido la bandera :option:`!-W`."

#: ../../library/2to3.rst:122
msgid ""
"The :option:`!--add-suffix` option specifies a string to append to all "
"output filenames.  The :option:`!-n` flag is required when specifying this "
"as backups are not necessary when writing to different filenames.  Example:"
msgstr ""
"La opción :option:`!--add-suffix` especifica una cadena que se añade a todos "
"los nombres de archivo de salida.  La opción :option:`!-n` es necesaria "
"cuando se especifica esta opción, ya que las copias de seguridad no son "
"necesarias cuando se escribe en diferentes nombres de archivo.  Ejemplo:"

#: ../../library/2to3.rst:130
msgid "Will cause a converted file named ``example.py3`` to be written."
msgstr "Hará que se escriba un archivo convertido llamado ``example.py3``."

#: ../../library/2to3.rst:132
msgid "The :option:`!--add-suffix` option was added."
msgstr "Se ha añadido la opción :option:`!--add-suffix`."

#: ../../library/2to3.rst:135
msgid "To translate an entire project from one directory tree to another use:"
msgstr ""
"Para trasladar un proyecto completo de un árbol de directorios a otro usar:"

#: ../../library/2to3.rst:145
msgid "Fixers"
msgstr "Arregladores"

#: ../../library/2to3.rst:147
msgid ""
"Each step of transforming code is encapsulated in a fixer.  The command "
"``2to3 -l`` lists them.  As :ref:`documented above <2to3-using>`, each can "
"be turned on and off individually.  They are described here in more detail."
msgstr ""
"Cada paso de la transformación del código se encapsula en un fijador.  El "
"comando ``2to3 -l`` los enumera.  Como :ref:`documented above <2to3-using>`, "
"cada uno puede activarse y desactivarse individualmente.  Aquí se describen "
"con más detalle."

#: ../../library/2to3.rst:154
msgid ""
"Removes usage of :func:`apply`.  For example ``apply(function, *args, "
"**kwargs)`` is converted to ``function(*args, **kwargs)``."
msgstr ""
"Elimina el uso de :func:`apply`. Por ejemplo ``apply(function, *args, "
"**kwargs)`` se convierte en ``function(*args, **kwargs)``."

#: ../../library/2to3.rst:159
msgid "Replaces deprecated :mod:`unittest` method names with the correct ones."
msgstr ""
"Sustituye los nombres de métodos obsoletos de :mod:`unittest` por los "
"correctos."

#: ../../library/2to3.rst:162 ../../library/2to3.rst:351
msgid "From"
msgstr "En"

#: ../../library/2to3.rst:162 ../../library/2to3.rst:351
msgid "To"
msgstr "A"

#: ../../library/2to3.rst:164
msgid "``failUnlessEqual(a, b)``"
msgstr "``failUnlessEqual(a, b)``"

#: ../../library/2to3.rst:164 ../../library/2to3.rst:166
msgid ":meth:`assertEqual(a, b) <unittest.TestCase.assertEqual>`"
msgstr ":meth:`assertEqual(a, b) <unittest.TestCase.assertEqual>`"

#: ../../library/2to3.rst:166
msgid "``assertEquals(a, b)``"
msgstr "``assertEquals(a, b)``"

#: ../../library/2to3.rst:168
msgid "``failIfEqual(a, b)``"
msgstr "``failIfEqual(a, b)``"

#: ../../library/2to3.rst:168 ../../library/2to3.rst:170
msgid ":meth:`assertNotEqual(a, b) <unittest.TestCase.assertNotEqual>`"
msgstr ":meth:`assertNotEqual(a, b) <unittest.TestCase.assertNotEqual>`"

#: ../../library/2to3.rst:170
msgid "``assertNotEquals(a, b)``"
msgstr "``assertNotEquals(a, b)``"

#: ../../library/2to3.rst:172
msgid "``failUnless(a)``"
msgstr "``failUnless(a)``"

#: ../../library/2to3.rst:172 ../../library/2to3.rst:174
msgid ":meth:`assertTrue(a) <unittest.TestCase.assertTrue>`"
msgstr ":meth:`assertTrue(a) <unittest.TestCase.assertTrue>`"

#: ../../library/2to3.rst:174
msgid "``assert_(a)``"
msgstr "``assert_(a)``"

#: ../../library/2to3.rst:176
msgid "``failIf(a)``"
msgstr "``failIf(a)``"

#: ../../library/2to3.rst:176
msgid ":meth:`assertFalse(a) <unittest.TestCase.assertFalse>`"
msgstr ":meth:`assertFalse(a) <unittest.TestCase.assertFalse>`"

#: ../../library/2to3.rst:178
msgid "``failUnlessRaises(exc, cal)``"
msgstr "``failUnlessRaises(exc, cal)``"

#: ../../library/2to3.rst:178
msgid ":meth:`assertRaises(exc, cal) <unittest.TestCase.assertRaises>`"
msgstr ":meth:`assertRaises(exc, cal) <unittest.TestCase.assertRaises>`"

#: ../../library/2to3.rst:180
msgid "``failUnlessAlmostEqual(a, b)``"
msgstr "``failUnlessAlmostEqual(a, b)``"

#: ../../library/2to3.rst:180 ../../library/2to3.rst:182
msgid ":meth:`assertAlmostEqual(a, b) <unittest.TestCase.assertAlmostEqual>`"
msgstr ":meth:`assertAlmostEqual(a, b) <unittest.TestCase.assertAlmostEqual>`"

#: ../../library/2to3.rst:182
msgid "``assertAlmostEquals(a, b)``"
msgstr "``assertAlmostEquals(a, b)``"

#: ../../library/2to3.rst:184
msgid "``failIfAlmostEqual(a, b)``"
msgstr "``failIfAlmostEqual(a, b)``"

#: ../../library/2to3.rst:184 ../../library/2to3.rst:186
msgid ""
":meth:`assertNotAlmostEqual(a, b) <unittest.TestCase.assertNotAlmostEqual>`"
msgstr ""
":meth:`assertNotAlmostEqual(a, b) <unittest.TestCase.assertNotAlmostEqual>`"

#: ../../library/2to3.rst:186
msgid "``assertNotAlmostEquals(a, b)``"
msgstr "``assertNotAlmostEquals(a, b)``"

#: ../../library/2to3.rst:192
msgid "Converts :class:`basestring` to :class:`str`."
msgstr "Convierte :class:`basestring` en :class:`str`."

#: ../../library/2to3.rst:196
msgid ""
"Converts :class:`buffer` to :class:`memoryview`.  This fixer is optional "
"because the :class:`memoryview` API is similar but not exactly the same as "
"that of :class:`buffer`."
msgstr ""
"Convierte :class:`buffer` en :class:`memoryview`. Este fijador es opcional "
"porque la API de :class:`memoryview` es similar pero no exactamente igual a "
"la de :class:`buffer`."

#: ../../library/2to3.rst:202
msgid ""
"Fixes dictionary iteration methods.  :meth:`dict.iteritems` is converted to :"
"meth:`dict.items`, :meth:`dict.iterkeys` to :meth:`dict.keys`, and :meth:"
"`dict.itervalues` to :meth:`dict.values`.  Similarly, :meth:`dict."
"viewitems`, :meth:`dict.viewkeys` and :meth:`dict.viewvalues` are converted "
"respectively to :meth:`dict.items`, :meth:`dict.keys` and :meth:`dict."
"values`.  It also wraps existing usages of :meth:`dict.items`, :meth:`dict."
"keys`, and :meth:`dict.values` in a call to :class:`list`."
msgstr ""
"Corrige los métodos de iteración del diccionario. :meth:`dict.iteritems` se "
"convierte en :meth:`dict.items`, :meth:`dict.iterkeys` en :meth:`dict.keys`, "
"y :meth:`dict.itervalues` en :meth:`dict.values`. Del mismo modo, :meth:"
"`dict.viewitems`, :meth:`dict.viewkeys` y :meth:`dict.viewvalues` se "
"convierten respectivamente en :meth:`dict.items`, :meth:`dict.keys` y :meth:"
"`dict.values`. También envuelve los usos existentes de :meth:`dict.items`, :"
"meth:`dict.keys`, y :meth:`dict.values` en una llamada a :class:`list`."

#: ../../library/2to3.rst:212
msgid "Converts ``except X, T`` to ``except X as T``."
msgstr "Convierte ``except X, T`` en ``except X as T``."

#: ../../library/2to3.rst:216
msgid "Converts the ``exec`` statement to the :func:`exec` function."
msgstr "Convierte la sentencia ``exec`` en la función :func:`exec`."

#: ../../library/2to3.rst:220
msgid ""
"Removes usage of :func:`execfile`.  The argument to :func:`execfile` is "
"wrapped in calls to :func:`open`, :func:`compile`, and :func:`exec`."
msgstr ""
"Elimina el uso de :func:`execfile`. El argumento de :func:`execfile` se "
"envuelve en llamadas a :func:`open`, :func:`compile` y :func:`exec`."

#: ../../library/2to3.rst:225
msgid ""
"Changes assignment of :attr:`sys.exitfunc` to use of the :mod:`atexit` "
"module."
msgstr ""
"Cambia la asignación de :attr:`sys.exitfunc` por el uso del módulo :mod:"
"`atexit`."

#: ../../library/2to3.rst:230
msgid "Wraps :func:`filter` usage in a :class:`list` call."
msgstr "Envuelve el uso de :func:`filter` en una llamada a :class:`list`."

#: ../../library/2to3.rst:234
msgid ""
"Fixes function attributes that have been renamed.  For example, "
"``my_function.func_closure`` is converted to ``my_function.__closure__``."
msgstr ""
"Corrige los atributos de función que han cambiado de nombre.  Por ejemplo, "
"``my_function.func_closure`` se convierte en ``my_function.__closure__``."

#: ../../library/2to3.rst:239
msgid "Removes ``from __future__ import new_feature`` statements."
msgstr "Elimina las declaraciones ``from __future__ import new_feature``."

#: ../../library/2to3.rst:243
msgid "Renames :func:`os.getcwdu` to :func:`os.getcwd`."
msgstr "Cambia el nombre de :func:`os.getcwdu` a :func:`os.getcwd`."

#: ../../library/2to3.rst:247
msgid "Changes ``dict.has_key(key)`` to ``key in dict``."
msgstr "Cambia ``dict.has_key(key)`` por ``key in dict``."

#: ../../library/2to3.rst:251
msgid ""
"This optional fixer performs several transformations that make Python code "
"more idiomatic.  Type comparisons like ``type(x) is SomeClass`` and "
"``type(x) == SomeClass`` are converted to ``isinstance(x, SomeClass)``. "
"``while 1`` becomes ``while True``.  This fixer also tries to make use of :"
"func:`sorted` in appropriate places.  For example, this block ::"
msgstr ""
"Este corrector opcional realiza varias transformaciones que hacen que el "
"código Python sea más idiomático.  Las comparaciones de tipos como ``type(x) "
"is SomeClass`` y ``type(x) == SomeClass`` se convierten en ``isinstance(x, "
"SomeClass)``. ``while 1`` se convierte en ``while True``.  Este fijador "
"también intenta hacer uso de :func:`sorted` en los lugares apropiados.  Por "
"ejemplo, este bloque ::"

#: ../../library/2to3.rst:260
msgid "is changed to ::"
msgstr "se cambia por ::"

#: ../../library/2to3.rst:266
msgid "Detects sibling imports and converts them to relative imports."
msgstr ""
"Detecta importaciones hermanas y las convierte en importaciones relativas."

#: ../../library/2to3.rst:270
msgid "Handles module renames in the standard library."
msgstr "Gestiona el cambio de nombre de módulos en la biblioteca estándar."

#: ../../library/2to3.rst:274
msgid ""
"Handles other modules renames in the standard library.  It is separate from "
"the :2to3fixer:`imports` fixer only because of technical limitations."
msgstr ""
"Maneja el cambio de nombre de otros módulos en la biblioteca estándar.  Está "
"separado del fijador :2to3fixer:`imports` sólo por limitaciones técnicas."

#: ../../library/2to3.rst:279
msgid "Converts ``input(prompt)`` to ``eval(input(prompt))``."
msgstr "Convierte ``input(prompt)`` en ``eval(input(prompt))``."

#: ../../library/2to3.rst:283
msgid "Converts :func:`intern` to :func:`sys.intern`."
msgstr "Convierte :func:`intern` en :func:`sys.intern`."

#: ../../library/2to3.rst:287
msgid ""
"Fixes duplicate types in the second argument of :func:`isinstance`.  For "
"example, ``isinstance(x, (int, int))`` is converted to ``isinstance(x, "
"int)`` and ``isinstance(x, (int, float, int))`` is converted to "
"``isinstance(x, (int, float))``."
msgstr ""
"Corrige los tipos duplicados en el segundo argumento de :func:`isinstance`. "
"Por ejemplo, ``isinstance(x, (int, int))`` se convierte en ``isinstance(x, "
"int)`` y ``isinstance(x, (int, float, int))`` se convierte en "
"``isinstance(x, (int, float))``."

#: ../../library/2to3.rst:294
msgid ""
"Removes imports of :func:`itertools.ifilter`, :func:`itertools.izip`, and :"
"func:`itertools.imap`.  Imports of :func:`itertools.ifilterfalse` are also "
"changed to :func:`itertools.filterfalse`."
msgstr ""
"Elimina las importaciones de :func:`itertools.ifilter`, :func:`itertools."
"izip`, y :func:`itertools.imap`. Las importaciones de :func:`itertools."
"ifilterfalse` también se cambian a :func:`itertools.filterfalse`."

#: ../../library/2to3.rst:300
msgid ""
"Changes usage of :func:`itertools.ifilter`, :func:`itertools.izip`, and :"
"func:`itertools.imap` to their built-in equivalents. :func:`itertools."
"ifilterfalse` is changed to :func:`itertools.filterfalse`."
msgstr ""
"Cambia el uso de :func:`itertools.ifilter`, :func:`itertools.izip`, y :func:"
"`itertools.imap` por sus equivalentes incorporados. :func:`itertools."
"ifilterfalse` se cambia por :func:`itertools.filterfalse`."

#: ../../library/2to3.rst:306
msgid "Renames :class:`long` to :class:`int`."
msgstr "Cambia el nombre de :class:`long` a :class:`int`."

#: ../../library/2to3.rst:310
msgid ""
"Wraps :func:`map` in a :class:`list` call.  It also changes ``map(None, x)`` "
"to ``list(x)``.  Using ``from future_builtins import map`` disables this "
"fixer."
msgstr ""
"Envuelve :func:`map` en una llamada a :class:`list`.  También cambia "
"``map(None, x)`` a ``list(x)``. El uso de ``from future_builtins import "
"map`` desactiva este fijador."

#: ../../library/2to3.rst:316
msgid ""
"Converts the old metaclass syntax (``__metaclass__ = Meta`` in the class "
"body) to the new (``class X(metaclass=Meta)``)."
msgstr ""
"Convierte la antigua sintaxis de metaclase (``__metaclass__ = Meta`` en el "
"cuerpo de la clase) a la nueva (``class X(metaclass=Meta)``)."

#: ../../library/2to3.rst:321
msgid ""
"Fixes old method attribute names.  For example, ``meth.im_func`` is "
"converted to ``meth.__func__``."
msgstr ""
"Corrige los nombres antiguos de los atributos de los métodos.  Por ejemplo, "
"``meth.im_func`` se convierte en ``meth.__func__``."

#: ../../library/2to3.rst:326
msgid "Converts the old not-equal syntax, ``<>``, to ``!=``."
msgstr "Convierte la antigua sintaxis no igual, ``<>``, en ``!=``."

#: ../../library/2to3.rst:330
msgid ""
"Converts the use of iterator's :meth:`~iterator.next` methods to the :func:"
"`next` function.  It also renames :meth:`next` methods to :meth:`~iterator."
"__next__`."
msgstr ""
"Convierte el uso de los métodos :meth:`~iterator.next` del iterador a la "
"función :func:`next`.  También cambia el nombre de los métodos :meth:`next` "
"a :meth:`~iterator.__next__`."

#: ../../library/2to3.rst:336
msgid ""
"Renames definitions of methods called :meth:`__nonzero__` to :meth:`~object."
"__bool__`."
msgstr ""
"Cambia el nombre de las definiciones de los métodos llamados :meth:"
"`__nonzero__` a :meth:`~object.__bool__`."

#: ../../library/2to3.rst:341
msgid "Converts octal literals into the new syntax."
msgstr "Convierte los literales octales a la nueva sintaxis."

#: ../../library/2to3.rst:345
msgid ""
"Converts calls to various functions in the :mod:`operator` module to other, "
"but equivalent, function calls.  When needed, the appropriate ``import`` "
"statements are added, e.g. ``import collections.abc``.  The following "
"mapping are made:"
msgstr ""
"Convierte las llamadas a diversas funciones del módulo :mod:`operator` en "
"otras llamadas a funciones equivalentes.  Cuando es necesario, se añaden las "
"sentencias ``import`` apropiadas, por ejemplo ``import collections.abc``.  "
"Se realizan las siguientes correspondencias:"

#: ../../library/2to3.rst:353
msgid "``operator.isCallable(obj)``"
msgstr "``operator.isCallable(obj)``"

#: ../../library/2to3.rst:353
msgid "``callable(obj)``"
msgstr "``callable(obj)``"

#: ../../library/2to3.rst:354
msgid "``operator.sequenceIncludes(obj)``"
msgstr "``operator.sequenceIncludes(obj)``"

#: ../../library/2to3.rst:354
msgid "``operator.contains(obj)``"
msgstr "``operator.contains(obj)``"

#: ../../library/2to3.rst:355
msgid "``operator.isSequenceType(obj)``"
msgstr "``operator.isSequenceType(obj)``"

#: ../../library/2to3.rst:355
msgid "``isinstance(obj, collections.abc.Sequence)``"
msgstr "``isinstance(obj, collections.abc.Sequence)``"

#: ../../library/2to3.rst:356
msgid "``operator.isMappingType(obj)``"
msgstr "``operator.isMappingType(obj)``"

#: ../../library/2to3.rst:356
msgid "``isinstance(obj, collections.abc.Mapping)``"
msgstr "``isinstance(obj, collections.abc.Mapping)``"

#: ../../library/2to3.rst:357
msgid "``operator.isNumberType(obj)``"
msgstr "``operator.isNumberType(obj)``"

#: ../../library/2to3.rst:357
msgid "``isinstance(obj, numbers.Number)``"
msgstr "``isinstance(obj, numbers.Number)``"

#: ../../library/2to3.rst:358
msgid "``operator.repeat(obj, n)``"
msgstr "``operator.repeat(obj, n)``"

#: ../../library/2to3.rst:358
msgid "``operator.mul(obj, n)``"
msgstr "``operator.mul(obj, n)``"

#: ../../library/2to3.rst:359
msgid "``operator.irepeat(obj, n)``"
msgstr "``operator.irepeat(obj, n)``"

#: ../../library/2to3.rst:359
msgid "``operator.imul(obj, n)``"
msgstr "``operator.imul(obj, n)``"

#: ../../library/2to3.rst:364
msgid ""
"Add extra parenthesis where they are required in list comprehensions.  For "
"example, ``[x for x in 1, 2]`` becomes ``[x for x in (1, 2)]``."
msgstr ""
"Añadir paréntesis adicionales donde sean necesarios en las comprensiones de "
"listas.  Por ejemplo, ``[x for x in 1, 2]`` se convierte en ``[x for x in "
"(1, 2)]``."

#: ../../library/2to3.rst:369
msgid "Converts the ``print`` statement to the :func:`print` function."
msgstr "Convierte la sentencia ``print`` en la función :func:`print`."

#: ../../library/2to3.rst:373
msgid ""
"Converts ``raise E, V`` to ``raise E(V)``, and ``raise E, V, T`` to ``raise "
"E(V).with_traceback(T)``.  If ``E`` is a tuple, the translation will be "
"incorrect because substituting tuples for exceptions has been removed in 3.0."
msgstr ""
"Convierte ``raise E, V`` en ``raise E(V)``, y ``raise E, V, T`` en ``raise "
"E(V).with_traceback(T)``. Si ``E`` es una tupla, la traducción será "
"incorrecta porque la sustitución de tuplas por excepciones se ha eliminado "
"en 3.0."

#: ../../library/2to3.rst:379
msgid "Converts :func:`raw_input` to :func:`input`."
msgstr "Convierte :func:`raw_input` en :func:`input`."

#: ../../library/2to3.rst:383
msgid "Handles the move of :func:`reduce` to :func:`functools.reduce`."
msgstr "Maneja el movimiento de :func:`reduce` a :func:`functools.reduce`."

#: ../../library/2to3.rst:387
msgid "Converts :func:`reload` to :func:`importlib.reload`."
msgstr "Convierte :func:`reload` en :func:`importlib.reload`."

#: ../../library/2to3.rst:391
msgid "Changes :data:`sys.maxint` to :data:`sys.maxsize`."
msgstr "Cambia :data:`sys.maxint` por :data:`sys.maxsize`."

#: ../../library/2to3.rst:395
msgid "Replaces backtick repr with the :func:`repr` function."
msgstr "Sustituye a backtick repr por la función :func:`repr`."

#: ../../library/2to3.rst:399
msgid ""
"Replaces use of the :class:`set` constructor with set literals.  This fixer "
"is optional."
msgstr ""
"Sustituye el uso del constructor :class:`set` por literales de conjunto.  "
"Este fijador es opcional."

#: ../../library/2to3.rst:404
msgid "Renames :exc:`StandardError` to :exc:`Exception`."
msgstr "Cambia el nombre de :exc:`StandardError` a :exc:`Exception`."

#: ../../library/2to3.rst:408
msgid ""
"Changes the deprecated :data:`sys.exc_value`, :data:`sys.exc_type`, :data:"
"`sys.exc_traceback` to use :func:`sys.exc_info`."
msgstr ""
"Cambia los obsoletos :data:`sys.exc_value`, :data:`sys.exc_type`, :data:`sys."
"exc_traceback` para utilizar :func:`sys.exc_info`."

#: ../../library/2to3.rst:413
msgid "Fixes the API change in generator's :meth:`throw` method."
msgstr "Corrige el cambio de API en el método :meth:`throw` del generador."

#: ../../library/2to3.rst:417
msgid ""
"Removes implicit tuple parameter unpacking.  This fixer inserts temporary "
"variables."
msgstr ""
"Elimina el desempaquetado implícito de parámetros de tupla.  Este fijador "
"inserta variables temporales."

#: ../../library/2to3.rst:422
msgid ""
"Fixes code broken from the removal of some members in the :mod:`types` "
"module."
msgstr ""
"Corrige el código roto por la eliminación de algunos miembros en el módulo :"
"mod:`types`."

#: ../../library/2to3.rst:427
msgid "Renames :class:`unicode` to :class:`str`."
msgstr "Cambia el nombre de :class:`unicode` a :class:`str`."

#: ../../library/2to3.rst:431
msgid ""
"Handles the rename of :mod:`urllib` and :mod:`urllib2` to the :mod:`urllib` "
"package."
msgstr ""
"Gestiona el cambio de nombre de :mod:`urllib` y :mod:`urllib2` al paquete :"
"mod:`urllib`."

#: ../../library/2to3.rst:436
msgid ""
"Removes excess whitespace from comma separated items.  This fixer is "
"optional."
msgstr ""
"Elimina el exceso de espacios en blanco de los elementos separados por "
"comas.  Este corrector es opcional."

#: ../../library/2to3.rst:441
msgid ""
"Renames :func:`xrange` to :func:`range` and wraps existing :func:`range` "
"calls with :class:`list`."
msgstr ""
"Cambia el nombre de :func:`xrange` a :func:`range` y envuelve las llamadas "
"existentes a :func:`range` con :class:`list`."

#: ../../library/2to3.rst:446
msgid "Changes ``for x in file.xreadlines()`` to ``for x in file``."
msgstr "Cambia ``for x in file.xreadlines()`` por ``for x in file``."

#: ../../library/2to3.rst:450
msgid ""
"Wraps :func:`zip` usage in a :class:`list` call.  This is disabled when "
"``from future_builtins import zip`` appears."
msgstr ""
"Envuelve el uso de :func:`zip` en una llamada a :class:`list`.  Se desactiva "
"cuando aparece ``from future_builtins import zip``."

#: ../../library/2to3.rst:455
msgid ":mod:`lib2to3` --- 2to3's library"
msgstr ":mod:`lib2to3` --- 2to3's library"

#: ../../library/2to3.rst:464
msgid "**Source code:** :source:`Lib/lib2to3/`"
msgstr "**Código fuente:** :source:`Lib/lib2to3/`"

#: ../../library/2to3.rst:477
msgid ""
"Python 3.9 switched to a PEG parser (see :pep:`617`) while lib2to3 is using "
"a less flexible LL(1) parser.  Python 3.10 includes new language syntax that "
"is not parsable by lib2to3's LL(1) parser (see :pep:`634`). The ``lib2to3`` "
"module was marked pending for deprecation in Python 3.9 (raising :exc:"
"`PendingDeprecationWarning` on import) and fully deprecated in Python 3.11 "
"(raising :exc:`DeprecationWarning`). It will be removed from the standard "
"library in Python 3.13. Consider third-party alternatives such as `LibCST`_ "
"or `parso`_."
msgstr ""
"Python 3.9 cambió a un analizador PEG (véase :pep:`617`) mientras que "
"lib2to3 utiliza un analizador LL(1) menos flexible.  Python 3.10 incluye una "
"nueva sintaxis de lenguaje que no es analizable por el analizador LL(1) de "
"lib2to3 (véase :pep:`634`). El módulo ``lib2to3`` fue marcado como pendiente "
"de desaprobación en Python 3.9 (aparición de :exc:"
"`PendingDeprecationWarning` en la importación) y totalmente desaprobado en "
"Python 3.11 (aparición de :exc:`DeprecationWarning`). Será eliminado de la "
"biblioteca estándar en Python 3.13. Considere alternativas de terceros como "
"`LibCST`_ o `parso`_."

#: ../../library/2to3.rst:480
msgid ""
"The :mod:`lib2to3` API should be considered unstable and may change "
"drastically in the future."
msgstr ""
"La API :mod:`lib2to3` debe considerarse inestable y puede cambiar "
"drásticamente en el futuro."
