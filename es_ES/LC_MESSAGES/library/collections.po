# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# python-doc bot, 2025
# Rafael Fontenelle <rffontenelle@gmail.com>, 2025
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.9\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-23 17:40+0000\n"
"PO-Revision-Date: 2025-09-22 17:54+0000\n"
"Last-Translator: Rafael Fontenelle <rffontenelle@gmail.com>, 2025\n"
"Language-Team: Spanish (Spain) (https://app.transifex.com/python-doc/"
"teams/5390/es_ES/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: es_ES\n"
"Plural-Forms: nplurals=3; plural=n == 1 ? 0 : n != 0 && n % 1000000 == 0 ? "
"1 : 2;\n"

#: ../../library/collections.rst:2
msgid ":mod:`collections` --- Container datatypes"
msgstr ""

#: ../../library/collections.rst:10
msgid "**Source code:** :source:`Lib/collections/__init__.py`"
msgstr "**Código fuente:** :source:`Lib/collections/__init__.py`"

#: ../../library/collections.rst:20
msgid ""
"This module implements specialized container datatypes providing "
"alternatives to Python's general purpose built-in containers, :class:"
"`dict`, :class:`list`, :class:`set`, and :class:`tuple`."
msgstr ""
"Este módulo implementa tipos de datos contenedores especializados que "
"proporcionan alternativas a los contenedores incorporados de propósito "
"general de Python, :class:`dict`, :class:`list`, :class:`set`, y :class:"
"`tuple`."

#: ../../library/collections.rst:25
msgid ":func:`namedtuple`"
msgstr ""

#: ../../library/collections.rst:25
msgid "factory function for creating tuple subclasses with named fields"
msgstr ""
"función de fábrica para crear subclases de tuplas con campos con nombre"

#: ../../library/collections.rst:26
msgid ":class:`deque`"
msgstr ":class:`deque`"

#: ../../library/collections.rst:26
msgid "list-like container with fast appends and pops on either end"
msgstr "contenedor tipo lista con anexos y saltos rápidos en ambos extremos"

#: ../../library/collections.rst:27
msgid ":class:`ChainMap`"
msgstr ":class:`ChainMap`"

#: ../../library/collections.rst:27
msgid "dict-like class for creating a single view of multiple mappings"
msgstr "clase tipo dict para crear una vista única de múltiples asignaciones"

#: ../../library/collections.rst:28
msgid ":class:`Counter`"
msgstr ":class:`Counter`"

#: ../../library/collections.rst:28
msgid "dict subclass for counting hashable objects"
msgstr ""

#: ../../library/collections.rst:29
msgid ":class:`OrderedDict`"
msgstr ":class:`OrderedDict`"

#: ../../library/collections.rst:29
msgid "dict subclass that remembers the order entries were added"
msgstr "subclase dict que recuerda el orden en que se añadieron las entradas"

#: ../../library/collections.rst:30
msgid ":class:`defaultdict`"
msgstr ":class:`defaultdict`"

#: ../../library/collections.rst:30
msgid "dict subclass that calls a factory function to supply missing values"
msgstr ""
"subclase de dictado que llama a una función de fábrica para suministrar los "
"valores que faltan"

#: ../../library/collections.rst:31
msgid ":class:`UserDict`"
msgstr ":class:`UserDict`"

#: ../../library/collections.rst:31
msgid "wrapper around dictionary objects for easier dict subclassing"
msgstr "envoltura de objetos de diccionario para facilitar la subclase dict"

#: ../../library/collections.rst:32
msgid ":class:`UserList`"
msgstr ":class:`UserList`"

#: ../../library/collections.rst:32
msgid "wrapper around list objects for easier list subclassing"
msgstr ""
"envoltura de objetos de lista para facilitar la subclasificación de listas"

#: ../../library/collections.rst:33
msgid ":class:`UserString`"
msgstr ":class:`UserString`"

#: ../../library/collections.rst:33
msgid "wrapper around string objects for easier string subclassing"
msgstr ""
"envoltura de objetos de cadena para facilitar la subclasificación de cadenas"

#: ../../library/collections.rst:41
msgid ""
"Moved :ref:`collections-abstract-base-classes` to the :mod:`collections.abc` "
"module. For backwards compatibility, they continue to be visible in this "
"module through Python 3.9."
msgstr ""

#: ../../library/collections.rst:43
msgid ":class:`ChainMap` objects"
msgstr ":class:`ChainMap` objetos"

#: ../../library/collections.rst:47
msgid ""
"A :class:`ChainMap` class is provided for quickly linking a number of "
"mappings so they can be treated as a single unit.  It is often much faster "
"than creating a new dictionary and running multiple :meth:`~dict.update` "
"calls."
msgstr ""
"Se proporciona una clase :class:`ChainMap` para vincular rápidamente una "
"serie de asignaciones de modo que puedan tratarse como una sola unidad.  "
"Suele ser mucho más rápido que crear un nuevo diccionario y ejecutar varias "
"llamadas a :meth:`~dict.update`."

#: ../../library/collections.rst:51
msgid ""
"The class can be used to simulate nested scopes and is useful in templating."
msgstr ""
"La clase se puede utilizar para simular ámbitos anidados y es útil en la "
"creación de plantillas."

#: ../../library/collections.rst:55
msgid ""
"A :class:`ChainMap` groups multiple dicts or other mappings together to "
"create a single, updateable view.  If no *maps* are specified, a single "
"empty dictionary is provided so that a new chain always has at least one "
"mapping."
msgstr ""
":class:`ChainMap` agrupa varios diccionarios u otras correspondencias para "
"crear una única vista actualizable.  Si no se especifican *maps*, se "
"proporciona un único diccionario vacío para que una nueva cadena siempre "
"tenga al menos un mapeo."

#: ../../library/collections.rst:59
msgid ""
"The underlying mappings are stored in a list.  That list is public and can "
"be accessed or updated using the *maps* attribute.  There is no other state."
msgstr ""
"Las asignaciones subyacentes se almacenan en una lista.  Esa lista es "
"pública y se puede acceder a ella o actualizarla utilizando el atributo "
"*maps*.  No hay ningún otro estado."

#: ../../library/collections.rst:62
msgid ""
"Lookups search the underlying mappings successively until a key is found.  "
"In contrast, writes, updates, and deletions only operate on the first "
"mapping."
msgstr ""
"Las búsquedas buscan sucesivamente en las correspondencias subyacentes hasta "
"encontrar una clave.  En cambio, las escrituras, actualizaciones y "
"eliminaciones sólo operan en la primera asignación."

#: ../../library/collections.rst:65
msgid ""
"A :class:`ChainMap` incorporates the underlying mappings by reference.  So, "
"if one of the underlying mappings gets updated, those changes will be "
"reflected in :class:`ChainMap`."
msgstr ""
":class:`ChainMap` incorpora las correspondencias subyacentes por "
"referencia.  Así, si una de las correspondencias subyacentes se actualiza, "
"esos cambios se reflejarán en :class:`ChainMap`."

#: ../../library/collections.rst:69
msgid ""
"All of the usual dictionary methods are supported.  In addition, there is a "
"*maps* attribute, a method for creating new subcontexts, and a property for "
"accessing all but the first mapping:"
msgstr ""
"Se admiten todos los métodos habituales de diccionario.  Además, hay un "
"atributo *maps*, un método para crear nuevos subcontextos y una propiedad "
"para acceder a todos los mapas menos al primero:"

#: ../../library/collections.rst:75
msgid ""
"A user updateable list of mappings.  The list is ordered from first-searched "
"to last-searched.  It is the only stored state and can be modified to change "
"which mappings are searched.  The list should always contain at least one "
"mapping."
msgstr ""
"Lista de correspondencias actualizable por el usuario.  La lista se ordena "
"de la primera a la última búsqueda.  Es el único estado almacenado y puede "
"modificarse para cambiar las correspondencias que se buscan.  La lista debe "
"contener siempre al menos una correspondencia."

#: ../../library/collections.rst:82
msgid ""
"Returns a new :class:`ChainMap` containing a new map followed by all of the "
"maps in the current instance.  If ``m`` is specified, it becomes the new map "
"at the front of the list of mappings; if not specified, an empty dict is "
"used, so that a call to ``d.new_child()`` is equivalent to: ``ChainMap({}, "
"*d.maps)``.  This method is used for creating subcontexts that can be "
"updated without altering values in any of the parent mappings."
msgstr ""

#: ../../library/collections.rst:90
msgid "The optional ``m`` parameter was added."
msgstr "Se ha añadido el parámetro opcional ``m``."

#: ../../library/collections.rst:95
msgid ""
"Property returning a new :class:`ChainMap` containing all of the maps in the "
"current instance except the first one.  This is useful for skipping the "
"first map in the search.  Use cases are similar to those for the :keyword:"
"`nonlocal` keyword used in :term:`nested scopes <nested scope>`.  The use "
"cases also parallel those for the built-in :func:`super` function.  A "
"reference to ``d.parents`` is equivalent to: ``ChainMap(*d.maps[1:])``."
msgstr ""
"Propiedad que devuelve un nuevo :class:`ChainMap` que contiene todos los "
"mapas de la instancia actual excepto el primero.  Esto es útil para saltarse "
"el primer mapa de la búsqueda.  Los casos de uso son similares a los de la "
"palabra clave :keyword:`nonlocal` utilizada en :term:`nested scopes <nested "
"scope>`.  Los casos de uso también son paralelos a los de la función "
"incorporada :func:`super`.  Una referencia a ``d.parents`` equivale a: "
"``ChainMap(*d.maps[1:])``."

#: ../../library/collections.rst:103
msgid ""
"Note, the iteration order of a :class:`ChainMap()` is determined by scanning "
"the mappings last to first::"
msgstr ""

#: ../../library/collections.rst:111
msgid ""
"This gives the same ordering as a series of :meth:`dict.update` calls "
"starting with the last mapping::"
msgstr ""
"Esto da el mismo orden que una serie de llamadas a :meth:`dict.update` "
"empezando por la última asignación::"

#: ../../library/collections.rst:119
msgid "Added support for ``|`` and ``|=`` operators, specified in :pep:`584`."
msgstr ""
"Se ha añadido compatibilidad con los operadores ``|`` y ``|=``, "
"especificados en :pep:`584`."

#: ../../library/collections.rst:124
msgid ""
"The `MultiContext class <https://github.com/enthought/codetools/blob/4.0.0/"
"codetools/contexts/multi_context.py>`_ in the Enthought `CodeTools package "
"<https://github.com/enthought/codetools>`_ has options to support writing to "
"any mapping in the chain."
msgstr ""
"La clase `MultiContext <https://github.com/enthought/codetools/blob/4.0.0/"
"codetools/contexts/multi_context.py>`_ en el paquete Enthought `CodeTools "
"<https://github.com/enthought/codetools>`_ tiene opciones para soportar la "
"escritura en cualquier mapeo de la cadena."

#: ../../library/collections.rst:130
msgid ""
"Django's `Context class <https://github.com/django/django/blob/main/django/"
"template/context.py>`_ for templating is a read-only chain of mappings.  It "
"also features pushing and popping of contexts similar to the :meth:"
"`~collections.ChainMap.new_child` method and the :attr:`~collections."
"ChainMap.parents` property."
msgstr ""
"La clase `Context class <https://github.com/django/django/blob/main/django/"
"template/context.py>`_ de Django para plantillas es una cadena de mapeos de "
"sólo lectura.  También cuenta con push y popping de contextos similares al "
"método :meth:`~collections.ChainMap.new_child` y la propiedad :attr:"
"`~collections.ChainMap.parents`."

#: ../../library/collections.rst:137
msgid ""
"The `Nested Contexts recipe <https://code.activestate.com/recipes/577434/>`_ "
"has options to control whether writes and other mutations apply only to the "
"first mapping or to any mapping in the chain."
msgstr ""

#: ../../library/collections.rst:142
msgid ""
"A `greatly simplified read-only version of Chainmap <https://code."
"activestate.com/recipes/305268/>`_."
msgstr ""
"Una `versión de sólo lectura muy simplificada de Chainmap <https://code."
"activestate.com/recipes/305268/>`_."

#: ../../library/collections.rst:147
msgid ":class:`ChainMap` Examples and Recipes"
msgstr ":class:`ChainMap` Ejemplos y recetas"

#: ../../library/collections.rst:149
msgid "This section shows various approaches to working with chained maps."
msgstr ""
"Esta sección muestra varios enfoques para trabajar con mapas encadenados."

#: ../../library/collections.rst:152
msgid "Example of simulating Python's internal lookup chain::"
msgstr ""

#: ../../library/collections.rst:157
msgid ""
"Example of letting user specified command-line arguments take precedence "
"over environment variables which in turn take precedence over default "
"values::"
msgstr ""
"Ejemplo de cómo dejar que los argumentos de línea de comandos especificados "
"por el usuario tengan prioridad sobre las variables de entorno que, a su "
"vez, tienen prioridad sobre los valores por defecto::"

#: ../../library/collections.rst:174
msgid ""
"Example patterns for using the :class:`ChainMap` class to simulate nested "
"contexts::"
msgstr ""
"Patrones de ejemplo para utilizar la clase :class:`ChainMap` para simular "
"contextos anidados::"

#: ../../library/collections.rst:193
msgid ""
"The :class:`ChainMap` class only makes updates (writes and deletions) to the "
"first mapping in the chain while lookups will search the full chain.  "
"However, if deep writes and deletions are desired, it is easy to make a "
"subclass that updates keys found deeper in the chain::"
msgstr ""
"La clase :class:`ChainMap` sólo realiza actualizaciones (escrituras y "
"borrados) en el primer mapeo de la cadena, mientras que las búsquedas se "
"realizan en toda la cadena.  Sin embargo, si se desea realizar escrituras y "
"borrados profundos, es fácil crear una subclase que actualice las claves que "
"se encuentran a mayor profundidad en la cadena::"

#: ../../library/collections.rst:224
msgid ":class:`Counter` objects"
msgstr ":class:`Counter` objetos"

#: ../../library/collections.rst:226
msgid ""
"A counter tool is provided to support convenient and rapid tallies. For "
"example::"
msgstr ""
"Se proporciona una herramienta de recuento que permite realizar recuentos "
"cómodos y rápidos. Por ejemplo::"

#: ../../library/collections.rst:245
msgid ""
"A :class:`Counter` is a :class:`dict` subclass for counting hashable "
"objects. It is a collection where elements are stored as dictionary keys and "
"their counts are stored as dictionary values.  Counts are allowed to be any "
"integer value including zero or negative counts.  The :class:`Counter` class "
"is similar to bags or multisets in other languages."
msgstr ""

#: ../../library/collections.rst:251
msgid ""
"Elements are counted from an *iterable* or initialized from another "
"*mapping* (or counter):"
msgstr ""
"Los elementos se cuentan a partir de un *iterable* o se inicializan a partir "
"de otro *mapping* (o contador):"

#: ../../library/collections.rst:259
msgid ""
"Counter objects have a dictionary interface except that they return a zero "
"count for missing items instead of raising a :exc:`KeyError`:"
msgstr ""
"Los objetos contadores tienen una interfaz de diccionario, salvo que "
"devuelven un recuento cero para los elementos que faltan en lugar de lanzar "
"un mensaje :exc:`KeyError`:"

#: ../../library/collections.rst:266
msgid ""
"Setting a count to zero does not remove an element from a counter. Use "
"``del`` to remove it entirely:"
msgstr ""
"Poner un contador a cero no elimina un elemento de un contador. Utilizar "
"``del`` para eliminarlo por completo:"

#: ../../library/collections.rst:274
msgid ""
"As a :class:`dict` subclass, :class:`Counter` Inherited the capability to "
"remember insertion order.  Math operations on *Counter* objects also "
"preserve order.  Results are ordered according to when an element is first "
"encountered in the left operand and then by the order encountered in the "
"right operand."
msgstr ""

#: ../../library/collections.rst:280
msgid ""
"Counter objects support additional methods beyond those available for all "
"dictionaries:"
msgstr ""
"Los objetos contadores admiten métodos adicionales a los disponibles para "
"todos los diccionarios:"

#: ../../library/collections.rst:285
msgid ""
"Return an iterator over elements repeating each as many times as its count.  "
"Elements are returned in the order first encountered. If an element's count "
"is less than one, :meth:`elements` will ignore it."
msgstr ""
"Devuelve un iterador sobre elementos repitiendo cada uno tantas veces como "
"su cuenta.  Los elementos se devuelven en el orden en que se encuentran por "
"primera vez. Si la cuenta de un elemento es menor que uno, :meth:`elements` "
"lo ignorará."

#: ../../library/collections.rst:295
msgid ""
"Return a list of the *n* most common elements and their counts from the most "
"common to the least.  If *n* is omitted or ``None``, :meth:`most_common` "
"returns *all* elements in the counter. Elements with equal counts are "
"ordered in the order first encountered:"
msgstr ""
"Devuelve una lista de los *n* elementos más comunes y su recuento del más "
"común al menos común.  Si *n* se omite o ``None``, :meth:`most_common` "
"devuelve *todos* los elementos del contador. Los elementos con recuentos "
"iguales se ordenan en el orden en que se encuentran primero:"

#: ../../library/collections.rst:305
msgid ""
"Elements are subtracted from an *iterable* or from another *mapping* (or "
"counter).  Like :meth:`dict.update` but subtracts counts instead of "
"replacing them.  Both inputs and outputs may be zero or negative."
msgstr ""
"Los elementos se restan de un *iterable* o de otro *mapping* (o contador).  "
"Como :meth:`dict.update` pero resta conteos en lugar de reemplazarlos.  "
"Tanto las entradas como las salidas pueden ser cero o negativas."

#: ../../library/collections.rst:317
msgid ""
"The usual dictionary methods are available for :class:`Counter` objects "
"except for two which work differently for counters."
msgstr ""
"Los métodos de diccionario habituales están disponibles para los objetos :"
"class:`Counter` excepto dos que funcionan de forma diferente para los "
"contadores."

#: ../../library/collections.rst:322
msgid "This class method is not implemented for :class:`Counter` objects."
msgstr ""
"Este método de clase no está implementado para los objetos :class:`Counter`."

#: ../../library/collections.rst:326
msgid ""
"Elements are counted from an *iterable* or added-in from another *mapping* "
"(or counter).  Like :meth:`dict.update` but adds counts instead of replacing "
"them.  Also, the *iterable* is expected to be a sequence of elements, not a "
"sequence of ``(key, value)`` pairs."
msgstr ""
"Los elementos se cuentan a partir de un *iterable* o se añaden a partir de "
"otro *mapping* (o contador).  Como :meth:`dict.update` pero añade recuentos "
"en lugar de reemplazarlos.  Además, se espera que el *iterable* sea una "
"secuencia de elementos, no una secuencia de pares ``(key, value)``."

#: ../../library/collections.rst:331
msgid "Common patterns for working with :class:`Counter` objects::"
msgstr "Patrones comunes para trabajar con objetos :class:`Counter`::"

#: ../../library/collections.rst:343
msgid ""
"Several mathematical operations are provided for combining :class:`Counter` "
"objects to produce multisets (counters that have counts greater than zero). "
"Addition and subtraction combine counters by adding or subtracting the "
"counts of corresponding elements.  Intersection and union return the minimum "
"and maximum of corresponding counts.  Each operation can accept inputs with "
"signed counts, but the output will exclude results with counts of zero or "
"less."
msgstr ""

#: ../../library/collections.rst:361
msgid ""
"Unary addition and subtraction are shortcuts for adding an empty counter or "
"subtracting from an empty counter."
msgstr ""
"La suma y la resta unarias son atajos para sumar un contador vacío o restar "
"de un contador vacío."

#: ../../library/collections.rst:370
msgid ""
"Added support for unary plus, unary minus, and in-place multiset operations."
msgstr ""
"Se ha añadido soporte para operaciones unarias de más, menos y conjuntos "
"múltiples."

#: ../../library/collections.rst:375
msgid ""
"Counters were primarily designed to work with positive integers to represent "
"running counts; however, care was taken to not unnecessarily preclude use "
"cases needing other types or negative values.  To help with those use cases, "
"this section documents the minimum range and type restrictions."
msgstr ""
"Los contadores se diseñaron principalmente para trabajar con números enteros "
"positivos para representar recuentos continuos; sin embargo, se tuvo cuidado "
"de no excluir innecesariamente casos de uso que necesitaran otros tipos o "
"valores negativos.  Para ayudar con esos casos de uso, esta sección "
"documenta el rango mínimo y las restricciones de tipo."

#: ../../library/collections.rst:380
msgid ""
"The :class:`Counter` class itself is a dictionary subclass with no "
"restrictions on its keys and values.  The values are intended to be numbers "
"representing counts, but you *could* store anything in the value field."
msgstr ""
"La propia clase :class:`Counter` es una subclase de diccionario sin "
"restricciones en sus claves y valores.  Los valores están pensados para ser "
"números que representen recuentos, pero *podría* almacenar cualquier cosa en "
"el campo de valor."

#: ../../library/collections.rst:384
msgid ""
"The :meth:`~Counter.most_common` method requires only that the values be "
"orderable."
msgstr ""
"El método :meth:`~Counter.most_common` sólo requiere que los valores sean "
"ordenables."

#: ../../library/collections.rst:386
msgid ""
"For in-place operations such as ``c[key] += 1``, the value type need only "
"support addition and subtraction.  So fractions, floats, and decimals would "
"work and negative values are supported.  The same is also true for :meth:"
"`~Counter.update` and :meth:`~Counter.subtract` which allow negative and "
"zero values for both inputs and outputs."
msgstr ""
"Para las operaciones in situ, como ``c[key] += 1``, el tipo de valor sólo "
"debe admitir sumas y restas.  Así que fracciones, flotantes y decimales "
"funcionarían y se admiten valores negativos.  Lo mismo ocurre con :meth:"
"`~Counter.update` y :meth:`~Counter.subtract` que permiten valores negativos "
"y cero tanto para las entradas como para las salidas."

#: ../../library/collections.rst:392
msgid ""
"The multiset methods are designed only for use cases with positive values. "
"The inputs may be negative or zero, but only outputs with positive values "
"are created.  There are no type restrictions, but the value type needs to "
"support addition, subtraction, and comparison."
msgstr ""
"Los métodos multiset están diseñados sólo para casos de uso con valores "
"positivos. Las entradas pueden ser negativas o cero, pero sólo se crean "
"salidas con valores positivos.  No hay restricciones de tipo, pero el tipo "
"de valor debe admitir sumas, restas y comparaciones."

#: ../../library/collections.rst:397
msgid ""
"The :meth:`~Counter.elements` method requires integer counts.  It ignores "
"zero and negative counts."
msgstr ""
"El método :meth:`~Counter.elements` requiere recuentos enteros.  Ignora los "
"recuentos cero y negativos."

#: ../../library/collections.rst:402
msgid ""
"`Bag class <https://www.gnu.org/software/smalltalk/manual-base/html_node/Bag."
"html>`_ in Smalltalk."
msgstr ""
"Clase `Bag <https://www.gnu.org/software/smalltalk/manual-base/html_node/Bag."
"html>`_ en Smalltalk."

#: ../../library/collections.rst:405
msgid ""
"Wikipedia entry for `Multisets <https://en.wikipedia.org/wiki/Multiset>`_."
msgstr ""
"Entrada de Wikipedia para `Multisets <https://en.wikipedia.org/wiki/"
"Multiset>`_."

#: ../../library/collections.rst:407
msgid ""
"`C++ multisets <http://www.java2s.com/Tutorial/Cpp/0380__set-multiset/"
"Catalog0380__set-multiset.htm>`_ tutorial with examples."
msgstr ""
"`C++ multisets <http://www.java2s.com/Tutorial/Cpp/0380__set-multiset/"
"Catalog0380__set-multiset.htm>`_ tutorial con ejemplos."

#: ../../library/collections.rst:410
msgid ""
"For mathematical operations on multisets and their use cases, see *Knuth, "
"Donald. The Art of Computer Programming Volume II, Section 4.6.3, Exercise "
"19*."
msgstr ""
"Para operaciones matemáticas sobre conjuntos múltiples y sus casos de uso, "
"véase *Knuth, Donald. The Art of Computer Programming Volume II, Section "
"4.6.3, Exercise 19*."

#: ../../library/collections.rst:414
msgid ""
"To enumerate all distinct multisets of a given size over a given set of "
"elements, see :func:`itertools.combinations_with_replacement`::"
msgstr ""
"Para enumerar todos los multiconjuntos distintos de un tamaño dado sobre un "
"conjunto dado de elementos, ver :func:`itertools."
"combinations_with_replacement`::"

#: ../../library/collections.rst:421
msgid ":class:`deque` objects"
msgstr ":class:`deque` objetos"

#: ../../library/collections.rst:425
msgid ""
"Returns a new deque object initialized left-to-right (using :meth:`append`) "
"with data from *iterable*.  If *iterable* is not specified, the new deque is "
"empty."
msgstr ""
"Devuelve un nuevo objeto deque inicializado de izquierda a derecha (usando :"
"meth:`append`) con datos de *iterable*.  Si no se especifica *iterable*, el "
"nuevo deque está vacío."

#: ../../library/collections.rst:428
msgid ""
"Deques are a generalization of stacks and queues (the name is pronounced "
"\"deck\" and is short for \"double-ended queue\").  Deques support thread-"
"safe, memory efficient appends and pops from either side of the deque with "
"approximately the same O(1) performance in either direction."
msgstr ""

#: ../../library/collections.rst:433
msgid ""
"Though :class:`list` objects support similar operations, they are optimized "
"for fast fixed-length operations and incur O(n) memory movement costs for "
"``pop(0)`` and ``insert(0, v)`` operations which change both the size and "
"position of the underlying data representation."
msgstr ""

#: ../../library/collections.rst:439
msgid ""
"If *maxlen* is not specified or is ``None``, deques may grow to an arbitrary "
"length.  Otherwise, the deque is bounded to the specified maximum length.  "
"Once a bounded length deque is full, when new items are added, a "
"corresponding number of items are discarded from the opposite end.  Bounded "
"length deques provide functionality similar to the ``tail`` filter in Unix. "
"They are also useful for tracking transactions and other pools of data where "
"only the most recent activity is of interest."
msgstr ""
"Si *maxlen* no se especifica o es ``None``, los deques pueden crecer hasta "
"una longitud arbitraria.  En caso contrario, el deque se limita a la "
"longitud máxima especificada.  Una vez que un deque de longitud limitada "
"está lleno, cuando se añaden nuevos elementos, se descarta un número "
"correspondiente de elementos del extremo opuesto.  Los deques de longitud "
"limitada ofrecen una funcionalidad similar al filtro ``tail`` de Unix. "
"También son útiles para rastrear transacciones y otros conjuntos de datos en "
"los que sólo interesa la actividad más reciente."

#: ../../library/collections.rst:448
msgid "Deque objects support the following methods:"
msgstr "Los objetos Deque admiten los siguientes métodos:"

#: ../../library/collections.rst:452
msgid "Add *x* to the right side of the deque."
msgstr "Añade *x* a la parte derecha del deque."

#: ../../library/collections.rst:457
msgid "Add *x* to the left side of the deque."
msgstr "Añade *x* al lado izquierdo del deque."

#: ../../library/collections.rst:462
msgid "Remove all elements from the deque leaving it with length 0."
msgstr "Elimina todos los elementos del deque dejándolo con longitud 0."

#: ../../library/collections.rst:467
msgid "Create a shallow copy of the deque."
msgstr "Crea una copia superficial del deque."

#: ../../library/collections.rst:474
msgid "Count the number of deque elements equal to *x*."
msgstr "Cuenta el número de elementos de deque iguales a *x*."

#: ../../library/collections.rst:481
msgid ""
"Extend the right side of the deque by appending elements from the iterable "
"argument."
msgstr ""
"Extiende el lado derecho del deque añadiendo elementos del argumento "
"iterable."

#: ../../library/collections.rst:487
msgid ""
"Extend the left side of the deque by appending elements from *iterable*. "
"Note, the series of left appends results in reversing the order of elements "
"in the iterable argument."
msgstr ""
"Extiende el lado izquierdo del deque añadiendo elementos de *iterable*. "
"Tenga en cuenta que la serie de anexos a la izquierda invierte el orden de "
"los elementos en el argumento iterable."

#: ../../library/collections.rst:494
msgid ""
"Return the position of *x* in the deque (at or after index *start* and "
"before index *stop*).  Returns the first match or raises :exc:`ValueError` "
"if not found."
msgstr ""
"Devuelve la posición de *x* en el deque (en o después del índice *start* y "
"antes del índice *stop*).  Devuelve la primera coincidencia o muestra :exc:"
"`ValueError` si no se encuentra."

#: ../../library/collections.rst:503
msgid "Insert *x* into the deque at position *i*."
msgstr "Inserta *x* en el deque en la posición *i*."

#: ../../library/collections.rst:505
msgid ""
"If the insertion would cause a bounded deque to grow beyond *maxlen*, an :"
"exc:`IndexError` is raised."
msgstr ""
"Si la inserción hace que un deque acotado crezca más allá de *maxlen*, se "
"genera un mensaje :exc:`IndexError`."

#: ../../library/collections.rst:513
msgid ""
"Remove and return an element from the right side of the deque. If no "
"elements are present, raises an :exc:`IndexError`."
msgstr ""
"Elimina y devuelve un elemento del lado derecho del deque. Si no hay ningún "
"elemento, se genera un mensaje :exc:`IndexError`."

#: ../../library/collections.rst:519
msgid ""
"Remove and return an element from the left side of the deque. If no elements "
"are present, raises an :exc:`IndexError`."
msgstr ""
"Elimina y devuelve un elemento del lado izquierdo del deque. Si no hay "
"ningún elemento, se genera un mensaje :exc:`IndexError`."

#: ../../library/collections.rst:525
msgid ""
"Remove the first occurrence of *value*.  If not found, raises a :exc:"
"`ValueError`."
msgstr ""
"Elimina la primera aparición de *valor*.  Si no se encuentra, emite un "
"mensaje :exc:`ValueError`."

#: ../../library/collections.rst:531
msgid "Reverse the elements of the deque in-place and then return ``None``."
msgstr ""
"Invierte los elementos del deque en su lugar y luego devuelve ``None``."

#: ../../library/collections.rst:538
msgid ""
"Rotate the deque *n* steps to the right.  If *n* is negative, rotate to the "
"left."
msgstr ""
"Gira el deque *n* pasos a la derecha.  Si *n* es negativo, gira a la "
"izquierda."

#: ../../library/collections.rst:541
msgid ""
"When the deque is not empty, rotating one step to the right is equivalent to "
"``d.appendleft(d.pop())``, and rotating one step to the left is equivalent "
"to ``d.append(d.popleft())``."
msgstr ""
"Cuando el deque no está vacío, girar un paso a la derecha equivale a ``d."
"appendleft(d.pop())``, y girar un paso a la izquierda equivale a ``d."
"append(d.popleft())``."

#: ../../library/collections.rst:546
msgid "Deque objects also provide one read-only attribute:"
msgstr "Los objetos Deque también proporcionan un atributo de sólo lectura:"

#: ../../library/collections.rst:550
msgid "Maximum size of a deque or ``None`` if unbounded."
msgstr "Tamaño máximo de un deque o ``None`` si no tiene límite."

#: ../../library/collections.rst:555
msgid ""
"In addition to the above, deques support iteration, pickling, ``len(d)``, "
"``reversed(d)``, ``copy.copy(d)``, ``copy.deepcopy(d)``, membership testing "
"with the :keyword:`in` operator, and subscript references such as ``d[0]`` "
"to access the first element.  Indexed access is O(1) at both ends but slows "
"to O(n) in the middle.  For fast random access, use lists instead."
msgstr ""

#: ../../library/collections.rst:561
msgid ""
"Starting in version 3.5, deques support ``__add__()``, ``__mul__()``, and "
"``__imul__()``."
msgstr ""
"A partir de la versión 3.5, las deques admiten ``__add__()``, ``__mul__()``, "
"y ``__imul__()``."

#: ../../library/collections.rst:564
msgid "Example:"
msgstr "Ejemplo:"

#: ../../library/collections.rst:621
msgid ":class:`deque` Recipes"
msgstr ":class:`deque` Recetas"

#: ../../library/collections.rst:623
msgid "This section shows various approaches to working with deques."
msgstr "Esta sección muestra varios enfoques para trabajar con deques."

#: ../../library/collections.rst:625
msgid ""
"Bounded length deques provide functionality similar to the ``tail`` filter "
"in Unix::"
msgstr ""
"Los deques de longitud limitada proporcionan una funcionalidad similar al "
"filtro ``tail`` de Unix::"

#: ../../library/collections.rst:633
msgid ""
"Another approach to using deques is to maintain a sequence of recently added "
"elements by appending to the right and popping to the left::"
msgstr ""
"Otra forma de utilizar deques es mantener una secuencia de elementos "
"añadidos recientemente añadiendo a la derecha y saltando a la izquierda::"

#: ../../library/collections.rst:648
msgid ""
"A `round-robin scheduler <https://en.wikipedia.org/wiki/Round-"
"robin_scheduling>`_ can be implemented with input iterators stored in a :"
"class:`deque`.  Values are yielded from the active iterator in position "
"zero.  If that iterator is exhausted, it can be removed with :meth:`~deque."
"popleft`; otherwise, it can be cycled back to the end with the :meth:`~deque."
"rotate` method::"
msgstr ""
"Se puede implementar un programador `round-robin <https://en.wikipedia.org/"
"wiki/Round-robin_scheduling>`_ con iteradores de entrada almacenados en un :"
"class:`deque`. Los valores se obtienen del iterador activo en la posición "
"cero.  Si ese iterador se agota, se puede eliminar con :meth:`~deque."
"popleft`; de lo contrario, se puede volver al final con el método :meth:"
"`~deque.rotate`::"

#: ../../library/collections.rst:667
msgid ""
"The :meth:`~deque.rotate` method provides a way to implement :class:`deque` "
"slicing and deletion.  For example, a pure Python implementation of ``del "
"d[n]`` relies on the ``rotate()`` method to position elements to be popped::"
msgstr ""
"El método :meth:`~deque.rotate` proporciona una forma de implementar el "
"troceado y borrado de :class:`deque`.  Por ejemplo, una implementación pura "
"en Python de ``del d[n]`` se basa en el método ``rotate()`` para posicionar "
"los elementos que se van a rebanar::"

#: ../../library/collections.rst:676
msgid ""
"To implement :class:`deque` slicing, use a similar approach applying :meth:"
"`~deque.rotate` to bring a target element to the left side of the deque. "
"Remove old entries with :meth:`~deque.popleft`, add new entries with :meth:"
"`~deque.extend`, and then reverse the rotation. With minor variations on "
"that approach, it is easy to implement Forth style stack manipulations such "
"as ``dup``, ``drop``, ``swap``, ``over``, ``pick``, ``rot``, and ``roll``."
msgstr ""
"Para implementar :class:`deque` slicing, utilice un enfoque similar "
"aplicando :meth:`~deque.rotate` para llevar un elemento de destino al lado "
"izquierdo del deque. Elimine las entradas antiguas con :meth:`~deque."
"popleft`, añada entradas nuevas con :meth:`~deque.extend`, y luego invierta "
"la rotación. Con pequeñas variaciones de este enfoque, es fácil implementar "
"manipulaciones de pila al estilo Forth como ``dup``, ``drop``, ``swap``, "
"``over``, ``pick``, ``rot``, y ``roll``."

#: ../../library/collections.rst:686
msgid ":class:`defaultdict` objects"
msgstr ":class:`defaultdict` objetos"

#: ../../library/collections.rst:690
msgid ""
"Return a new dictionary-like object.  :class:`defaultdict` is a subclass of "
"the built-in :class:`dict` class.  It overrides one method and adds one "
"writable instance variable.  The remaining functionality is the same as for "
"the :class:`dict` class and is not documented here."
msgstr ""
"Devuelve un nuevo objeto tipo diccionario. :class:`defaultdict` es una "
"subclase de la clase incorporada :class:`dict`.  Sobrescribe un método y "
"añade una variable de instancia escribible.  El resto de la funcionalidad es "
"la misma que para la clase :class:`dict` y no se documenta aquí."

#: ../../library/collections.rst:695
msgid ""
"The first argument provides the initial value for the :attr:"
"`default_factory` attribute; it defaults to ``None``. All remaining "
"arguments are treated the same as if they were passed to the :class:`dict` "
"constructor, including keyword arguments."
msgstr ""
"El primer argumento proporciona el valor inicial del atributo :attr:"
"`default_factory`; por defecto es ``None``. Todos los argumentos restantes "
"se tratan igual que si se pasaran al constructor :class:`dict`, incluidos "
"los argumentos de palabra clave."

#: ../../library/collections.rst:701
msgid ""
":class:`defaultdict` objects support the following method in addition to the "
"standard :class:`dict` operations:"
msgstr ""
":class:`defaultdict` admiten el siguiente método además de las operaciones "
"estándar de :class:`dict`:"

#: ../../library/collections.rst:706
msgid ""
"If the :attr:`default_factory` attribute is ``None``, this raises a :exc:"
"`KeyError` exception with the *key* as argument."
msgstr ""
"Si el atributo :attr:`default_factory` es ``None``, esto lanza una "
"excepción :exc:`KeyError` con la *clave* como argumento."

#: ../../library/collections.rst:709
msgid ""
"If :attr:`default_factory` is not ``None``, it is called without arguments "
"to provide a default value for the given *key*, this value is inserted in "
"the dictionary for the *key*, and returned."
msgstr ""
"Si :attr:`default_factory` no es ``None``, se llama sin argumentos para "
"proporcionar un valor por defecto para la *clave* dada, este valor se "
"inserta en el diccionario para la *clave*, y se devuelve."

#: ../../library/collections.rst:713
msgid ""
"If calling :attr:`default_factory` raises an exception this exception is "
"propagated unchanged."
msgstr ""
"Si al llamar a :attr:`default_factory` se produce una excepción, ésta se "
"propaga sin cambios."

#: ../../library/collections.rst:716
msgid ""
"This method is called by the :meth:`__getitem__` method of the :class:`dict` "
"class when the requested key is not found; whatever it returns or raises is "
"then returned or raised by :meth:`__getitem__`."
msgstr ""

#: ../../library/collections.rst:720
msgid ""
"Note that :meth:`__missing__` is *not* called for any operations besides :"
"meth:`__getitem__`. This means that :meth:`get` will, like normal "
"dictionaries, return ``None`` as a default rather than using :attr:"
"`default_factory`."
msgstr ""

#: ../../library/collections.rst:726
msgid ":class:`defaultdict` objects support the following instance variable:"
msgstr ":class:`defaultdict` admiten la siguiente variable de instancia:"

#: ../../library/collections.rst:731
msgid ""
"This attribute is used by the :meth:`__missing__` method; it is initialized "
"from the first argument to the constructor, if present, or to ``None``, if "
"absent."
msgstr ""
"Este atributo es utilizado por el método :meth:`__missing__`; se inicializa "
"a partir del primer argumento del constructor, si está presente, o a "
"``None``, si está ausente."

#: ../../library/collections.rst:735 ../../library/collections.rst:1132
msgid ""
"Added merge (``|``) and update (``|=``) operators, specified in :pep:`584`."
msgstr ""
"Se han añadido los operadores merge (``|``) y update (``|=``), especificados "
"en :pep:`584`."

#: ../../library/collections.rst:741
msgid ":class:`defaultdict` Examples"
msgstr ":class:`defaultdict` Ejemplos"

#: ../../library/collections.rst:743
msgid ""
"Using :class:`list` as the :attr:`~defaultdict.default_factory`, it is easy "
"to group a sequence of key-value pairs into a dictionary of lists:"
msgstr ""
"Utilizando :class:`list` como :attr:`~defaultdict.default_factory`, es fácil "
"agrupar una secuencia de pares clave-valor en un diccionario de listas:"

#: ../../library/collections.rst:754
msgid ""
"When each key is encountered for the first time, it is not already in the "
"mapping; so an entry is automatically created using the :attr:`~defaultdict."
"default_factory` function which returns an empty :class:`list`.  The :meth:"
"`list.append` operation then attaches the value to the new list.  When keys "
"are encountered again, the look-up proceeds normally (returning the list for "
"that key) and the :meth:`list.append` operation adds another value to the "
"list. This technique is simpler and faster than an equivalent technique "
"using :meth:`dict.setdefault`:"
msgstr ""

#: ../../library/collections.rst:769
msgid ""
"Setting the :attr:`~defaultdict.default_factory` to :class:`int` makes the :"
"class:`defaultdict` useful for counting (like a bag or multiset in other "
"languages):"
msgstr ""
"Configurar :attr:`~defaultdict.default_factory` como :class:`int` hace que :"
"class:`defaultdict` sea útil para contar (como una bolsa o un multiconjunto "
"en otros idiomas):"

#: ../../library/collections.rst:781
msgid ""
"When a letter is first encountered, it is missing from the mapping, so the :"
"attr:`~defaultdict.default_factory` function calls :func:`int` to supply a "
"default count of zero.  The increment operation then builds up the count for "
"each letter."
msgstr ""
"Cuando se encuentra una letra por primera vez, falta en la asignación, por "
"lo que la función :attr:`~defaultdict.default_factory` llama a :func:`int` "
"para proporcionar un recuento por defecto de cero.  A continuación, la "
"operación de incremento incrementa el recuento de cada letra."

#: ../../library/collections.rst:785
msgid ""
"The function :func:`int` which always returns zero is just a special case of "
"constant functions.  A faster and more flexible way to create constant "
"functions is to use a lambda function which can supply any constant value "
"(not just zero):"
msgstr ""
"La función :func:`int`, que siempre devuelve cero, es sólo un caso especial "
"de las funciones constantes.  Una forma más rápida y flexible de crear "
"funciones constantes es utilizar una función lambda que pueda suministrar "
"cualquier valor constante (no sólo cero):"

#: ../../library/collections.rst:797
msgid ""
"Setting the :attr:`~defaultdict.default_factory` to :class:`set` makes the :"
"class:`defaultdict` useful for building a dictionary of sets:"
msgstr ""
"Si se establece :attr:`~defaultdict.default_factory` en :class:`set`, :class:"
"`defaultdict` resulta útil para construir un diccionario de conjuntos:"

#: ../../library/collections.rst:810
msgid ":func:`namedtuple` Factory Function for Tuples with Named Fields"
msgstr ""
":func:`namedtuple` Función de fábrica para tuplas con campos con nombre"

#: ../../library/collections.rst:812
msgid ""
"Named tuples assign meaning to each position in a tuple and allow for more "
"readable, self-documenting code.  They can be used wherever regular tuples "
"are used, and they add the ability to access fields by name instead of "
"position index."
msgstr ""
"Las tuplas con nombre asignan un significado a cada posición de una tupla y "
"permiten un código más legible y autodocumentado.  Pueden utilizarse siempre "
"que se empleen tuplas normales, y añaden la posibilidad de acceder a los "
"campos por su nombre en lugar de por el índice de posición."

#: ../../library/collections.rst:818
msgid ""
"Returns a new tuple subclass named *typename*.  The new subclass is used to "
"create tuple-like objects that have fields accessible by attribute lookup as "
"well as being indexable and iterable.  Instances of the subclass also have a "
"helpful docstring (with typename and field_names) and a helpful :meth:"
"`__repr__` method which lists the tuple contents in a ``name=value`` format."
msgstr ""

#: ../../library/collections.rst:824
msgid ""
"The *field_names* are a sequence of strings such as ``['x', 'y']``. "
"Alternatively, *field_names* can be a single string with each fieldname "
"separated by whitespace and/or commas, for example ``'x y'`` or ``'x, y'``."
msgstr ""
"Los *nombres_de_campo* son una secuencia de cadenas como ``['x', 'y']``. "
"Alternativamente, *field_names* puede ser una sola cadena con cada nombre de "
"campo separado por espacios en blanco y/o comas, por ejemplo ``'x y'`` o "
"``'x, y'``."

#: ../../library/collections.rst:828
msgid ""
"Any valid Python identifier may be used for a fieldname except for names "
"starting with an underscore.  Valid identifiers consist of letters, digits, "
"and underscores but do not start with a digit or underscore and cannot be a :"
"mod:`keyword` such as *class*, *for*, *return*, *global*, *pass*, or *raise*."
msgstr ""
"Cualquier identificador válido de Python puede usarse como nombre de campo, "
"excepto los nombres que empiecen por guión bajo.  Los identificadores "
"válidos constan de letras, dígitos y guiones bajos, pero no comienzan con un "
"dígito o guión bajo y no pueden ser :mod:`keyword` como *class*, *for*, "
"*return*, *global*, *pass* o *raise*."

#: ../../library/collections.rst:834
msgid ""
"If *rename* is true, invalid fieldnames are automatically replaced with "
"positional names.  For example, ``['abc', 'def', 'ghi', 'abc']`` is "
"converted to ``['abc', '_1', 'ghi', '_3']``, eliminating the keyword ``def`` "
"and the duplicate fieldname ``abc``."
msgstr ""
"Si *rename* es verdadero, los nombres de campo no válidos se sustituyen "
"automáticamente por nombres posicionales.  Por ejemplo, ``['abc', 'def', "
"'ghi', 'abc']`` se convierte en ``['abc', '_1', 'ghi', '_3']``, eliminando "
"la palabra clave ``def`` y el nombre de campo duplicado ``abc``."

#: ../../library/collections.rst:839
msgid ""
"*defaults* can be ``None`` or an :term:`iterable` of default values. Since "
"fields with a default value must come after any fields without a default, "
"the *defaults* are applied to the rightmost parameters.  For example, if the "
"fieldnames are ``['x', 'y', 'z']`` and the defaults are ``(1, 2)``, then "
"``x`` will be a required argument, ``y`` will default to ``1``, and ``z`` "
"will default to ``2``."
msgstr ""
"*defaults* puede ser ``None`` o un :term:`iterable` de valores por defecto. "
"Dado que los campos con un valor predeterminado deben ir después de los "
"campos sin valor predeterminado, los *valores predeterminados* se aplican a "
"los parámetros situados más a la derecha.  Por ejemplo, si los nombres de "
"campo son ``['x', 'y', 'z']`` y los valores por defecto son ``(1, 2)``, "
"entonces ``x`` será un argumento obligatorio, ``y`` será por defecto ``1``, "
"y ``z`` será por defecto ``2``."

#: ../../library/collections.rst:846
msgid ""
"If *module* is defined, the ``__module__`` attribute of the named tuple is "
"set to that value."
msgstr ""

#: ../../library/collections.rst:849
msgid ""
"Named tuple instances do not have per-instance dictionaries, so they are "
"lightweight and require no more memory than regular tuples."
msgstr ""
"Las instancias de tuplas con nombre no tienen diccionarios por instancia, "
"por lo que son ligeras y no requieren más memoria que las tuplas normales."

#: ../../library/collections.rst:852
msgid ""
"To support pickling, the named tuple class should be assigned to a variable "
"that matches *typename*."
msgstr ""
"Para soportar el pickling, la clase de tupla nombrada debe ser asignada a "
"una variable que coincida con *typename*."

#: ../../library/collections.rst:855
msgid "Added support for *rename*."
msgstr "Añadido soporte para *renombrar*."

#: ../../library/collections.rst:858
msgid ""
"The *verbose* and *rename* parameters became :ref:`keyword-only arguments "
"<keyword-only_parameter>`."
msgstr ""
"Los parámetros *verbose* y *rename* pasan a ser :ref:`keyword-only <keyword-"
"only_parameter>`."

#: ../../library/collections.rst:862
msgid "Added the *module* parameter."
msgstr "Se ha añadido el parámetro *module*."

#: ../../library/collections.rst:865
msgid "Removed the *verbose* parameter and the :attr:`_source` attribute."
msgstr ""

#: ../../library/collections.rst:868
msgid ""
"Added the *defaults* parameter and the :attr:`_field_defaults` attribute."
msgstr ""

#: ../../library/collections.rst:888
msgid ""
"Named tuples are especially useful for assigning field names to result "
"tuples returned by the :mod:`csv` or :mod:`sqlite3` modules::"
msgstr ""
"Las tuplas con nombre son especialmente útiles para asignar nombres de campo "
"a las tuplas de resultados devueltas por los módulos :mod:`csv` o :mod:"
"`sqlite3`::"

#: ../../library/collections.rst:904
msgid ""
"In addition to the methods inherited from tuples, named tuples support three "
"additional methods and two attributes.  To prevent conflicts with field "
"names, the method and attribute names start with an underscore."
msgstr ""
"Además de los métodos heredados de las tuplas, las tuplas con nombre admiten "
"tres métodos y dos atributos adicionales.  Para evitar conflictos con los "
"nombres de campo, los nombres de métodos y atributos empiezan por guión bajo."

#: ../../library/collections.rst:910
msgid ""
"Class method that makes a new instance from an existing sequence or iterable."
msgstr ""
"Método de clase que crea una nueva instancia a partir de una secuencia o "
"iterable existente."

#: ../../library/collections.rst:920
msgid ""
"Return a new :class:`dict` which maps field names to their corresponding "
"values:"
msgstr ""
"Devuelve un nuevo :class:`dict` que asigna los nombres de campo a sus "
"valores correspondientes:"

#: ../../library/collections.rst:929
msgid "Returns an :class:`OrderedDict` instead of a regular :class:`dict`."
msgstr "Devuelve un :class:`OrderedDict` en lugar de un :class:`dict` normal."

#: ../../library/collections.rst:932
msgid ""
"Returns a regular :class:`dict` instead of an :class:`OrderedDict`. As of "
"Python 3.7, regular dicts are guaranteed to be ordered.  If the extra "
"features of :class:`OrderedDict` are required, the suggested remediation is "
"to cast the result to the desired type: ``OrderedDict(nt._asdict())``."
msgstr ""
"Devuelve un :class:`dict` regular en lugar de un :class:`OrderedDict`. A "
"partir de Python 3.7, se garantiza que los dicts regulares están ordenados.  "
"Si se necesitan las características adicionales de :class:`OrderedDict`, la "
"solución sugerida es convertir el resultado al tipo deseado: "
"``OrderedDict(nt._asdict())``."

#: ../../library/collections.rst:941
msgid ""
"Return a new instance of the named tuple replacing specified fields with new "
"values::"
msgstr ""
"Devuelve una nueva instancia de la tupla nombrada sustituyendo los campos "
"especificados por nuevos valores::"

#: ../../library/collections.rst:953
msgid ""
"Tuple of strings listing the field names.  Useful for introspection and for "
"creating new named tuple types from existing named tuples."
msgstr ""
"Tupla de cadenas que enumera los nombres de los campos.  Útil para la "
"introspección y para crear nuevos tipos de tuplas con nombre a partir de "
"tuplas con nombre existentes."

#: ../../library/collections.rst:968
msgid "Dictionary mapping field names to default values."
msgstr "Diccionario que asigna nombres de campo a valores por defecto."

#: ../../library/collections.rst:978
msgid ""
"To retrieve a field whose name is stored in a string, use the :func:"
"`getattr` function:"
msgstr ""
"Para recuperar un campo cuyo nombre está almacenado en una cadena, utilice "
"la función :func:`getattr`:"

#: ../../library/collections.rst:984
msgid ""
"To convert a dictionary to a named tuple, use the double-star-operator (as "
"described in :ref:`tut-unpacking-arguments`):"
msgstr ""
"Para convertir un diccionario en una tupla con nombre, utilice el operador "
"de doble estrella (como se describe en :ref:`tut-unpacking-arguments`):"

#: ../../library/collections.rst:991
msgid ""
"Since a named tuple is a regular Python class, it is easy to add or change "
"functionality with a subclass.  Here is how to add a calculated field and a "
"fixed-width print format:"
msgstr ""
"Dado que una tupla con nombre es una clase normal de Python, es fácil añadir "
"o cambiar funcionalidades con una subclase.  A continuación se muestra cómo "
"añadir un campo calculado y un formato de impresión de ancho fijo:"

#: ../../library/collections.rst:1010
msgid ""
"The subclass shown above sets ``__slots__`` to an empty tuple.  This helps "
"keep memory requirements low by preventing the creation of instance "
"dictionaries."
msgstr ""
"La subclase mostrada arriba establece ``__slots__`` en una tupla vacía.  "
"Esto ayuda a mantener bajos los requisitos de memoria al evitar la creación "
"de diccionarios de instancias."

#: ../../library/collections.rst:1013
msgid ""
"Subclassing is not useful for adding new, stored fields.  Instead, simply "
"create a new named tuple type from the :attr:`~somenamedtuple._fields` "
"attribute:"
msgstr ""
"La subclase no es útil para añadir nuevos campos almacenados.  En su lugar, "
"basta con crear un nuevo tipo de tupla con nombre a partir del atributo :"
"attr:`~somenamedtuple._fields`:"

#: ../../library/collections.rst:1018
msgid ""
"Docstrings can be customized by making direct assignments to the ``__doc__`` "
"fields:"
msgstr ""
"Las docstrings pueden personalizarse realizando asignaciones directas a los "
"campos de ``__doc__``:"

#: ../../library/collections.rst:1027
msgid "Property docstrings became writeable."
msgstr "Los docstrings de propiedades son ahora escribibles."

#: ../../library/collections.rst:1032
msgid ""
"See :class:`typing.NamedTuple` for a way to add type hints for named "
"tuples.  It also provides an elegant notation using the :keyword:`class` "
"keyword::"
msgstr ""
"Véase :class:`typing.NamedTuple` para una forma de añadir sugerencias de "
"tipo para tuplas con nombre.  También proporciona una notación elegante "
"utilizando la palabra clave :keyword:`class`::"

#: ../../library/collections.rst:1041
msgid ""
"See :meth:`types.SimpleNamespace` for a mutable namespace based on an "
"underlying dictionary instead of a tuple."
msgstr ""
"Véase :meth:`types.SimpleNamespace` para un espacio de nombres mutable "
"basado en un diccionario subyacente en lugar de una tupla."

#: ../../library/collections.rst:1044
msgid ""
"The :mod:`dataclasses` module provides a decorator and functions for "
"automatically adding generated special methods to user-defined classes."
msgstr ""
"El módulo :mod:`dataclasses` proporciona un decorador y funciones para "
"añadir automáticamente métodos especiales generados a clases definidas por "
"el usuario."

#: ../../library/collections.rst:1049
msgid ":class:`OrderedDict` objects"
msgstr ":class:`OrderedDict` objetos"

#: ../../library/collections.rst:1051
msgid ""
"Ordered dictionaries are just like regular dictionaries but have some extra "
"capabilities relating to ordering operations.  They have become less "
"important now that the built-in :class:`dict` class gained the ability to "
"remember insertion order (this new behavior became guaranteed in Python 3.7)."
msgstr ""
"Los diccionarios ordenados son como los diccionarios normales, pero tienen "
"algunas capacidades adicionales relacionadas con las operaciones de "
"ordenación.  Se han vuelto menos importantes ahora que la clase incorporada :"
"class:`dict` adquirió la capacidad de recordar el orden de inserción (este "
"nuevo comportamiento se garantizó en Python 3.7)."

#: ../../library/collections.rst:1057
msgid "Some differences from :class:`dict` still remain:"
msgstr "Aún persisten algunas diferencias con respecto a :class:`dict`:"

#: ../../library/collections.rst:1059
msgid ""
"The regular :class:`dict` was designed to be very good at mapping "
"operations.  Tracking insertion order was secondary."
msgstr ""
"El :class:`dict` regular fue diseñado para ser muy bueno en operaciones de "
"mapeo.  El seguimiento del orden de inserción era secundario."

#: ../../library/collections.rst:1062
msgid ""
"The :class:`OrderedDict` was designed to be good at reordering operations. "
"Space efficiency, iteration speed, and the performance of update operations "
"were secondary."
msgstr ""
"El sitio :class:`OrderedDict` se diseñó para que fuera bueno en las "
"operaciones de reordenación. La eficiencia espacial, la velocidad de "
"iteración y el rendimiento de las operaciones de actualización eran "
"secundarios."

#: ../../library/collections.rst:1066
msgid ""
"Algorithmically, :class:`OrderedDict` can handle frequent reordering "
"operations better than :class:`dict`.  This makes it suitable for tracking "
"recent accesses (for example in an `LRU cache <https://medium.com/"
"@krishankantsinghal/my-first-blog-on-medium-583159139237>`_)."
msgstr ""

#: ../../library/collections.rst:1071
msgid ""
"The equality operation for :class:`OrderedDict` checks for matching order."
msgstr ""
"La operación de igualdad para :class:`OrderedDict` comprueba el orden de "
"coincidencia."

#: ../../library/collections.rst:1073
msgid ""
"The :meth:`popitem` method of :class:`OrderedDict` has a different "
"signature.  It accepts an optional argument to specify which item is popped."
msgstr ""

#: ../../library/collections.rst:1076
msgid ""
":class:`OrderedDict` has a :meth:`move_to_end` method to efficiently "
"reposition an element to an endpoint."
msgstr ""

#: ../../library/collections.rst:1079
msgid "Until Python 3.8, :class:`dict` lacked a :meth:`__reversed__` method."
msgstr ""

#: ../../library/collections.rst:1084
msgid ""
"Return an instance of a :class:`dict` subclass that has methods specialized "
"for rearranging dictionary order."
msgstr ""
"Devuelve una instancia de una subclase de :class:`dict` que tiene métodos "
"especializados para reordenar el orden del diccionario."

#: ../../library/collections.rst:1091
msgid ""
"The :meth:`popitem` method for ordered dictionaries returns and removes a "
"(key, value) pair.  The pairs are returned in :abbr:`LIFO (last-in, first-"
"out)` order if *last* is true or :abbr:`FIFO (first-in, first-out)` order if "
"false."
msgstr ""
"El método :meth:`popitem` para diccionarios ordenados devuelve y elimina un "
"par (clave, valor).  Los pares se devuelven en orden :abbr:`LIFO (last-in, "
"first-out)` si *last* es verdadero o en orden :abbr:`FIFO (first-in, first-"
"out)` si es falso."

#: ../../library/collections.rst:1098
msgid ""
"Move an existing *key* to either end of an ordered dictionary.  The item is "
"moved to the right end if *last* is true (the default) or to the beginning "
"if *last* is false.  Raises :exc:`KeyError` if the *key* does not exist::"
msgstr ""

#: ../../library/collections.rst:1113
msgid ""
"In addition to the usual mapping methods, ordered dictionaries also support "
"reverse iteration using :func:`reversed`."
msgstr ""
"Además de los métodos de asignación habituales, los diccionarios ordenados "
"también admiten la iteración inversa mediante :func:`reversed`."

#: ../../library/collections.rst:1116
msgid ""
"Equality tests between :class:`OrderedDict` objects are order-sensitive and "
"are implemented as ``list(od1.items())==list(od2.items())``. Equality tests "
"between :class:`OrderedDict` objects and other :class:`~collections.abc."
"Mapping` objects are order-insensitive like regular dictionaries.  This "
"allows :class:`OrderedDict` objects to be substituted anywhere a regular "
"dictionary is used."
msgstr ""

#: ../../library/collections.rst:1123
msgid ""
"The items, keys, and values :term:`views <dictionary view>` of :class:"
"`OrderedDict` now support reverse iteration using :func:`reversed`."
msgstr ""
"Los elementos, claves y valores :term:`views <dictionary view>` de :class:"
"`OrderedDict` soportan ahora la iteración inversa utilizando :func:"
"`reversed`."

#: ../../library/collections.rst:1127
msgid ""
"With the acceptance of :pep:`468`, order is retained for keyword arguments "
"passed to the :class:`OrderedDict` constructor and its :meth:`update` method."
msgstr ""

#: ../../library/collections.rst:1137
msgid ":class:`OrderedDict` Examples and Recipes"
msgstr ":class:`OrderedDict` Ejemplos y recetas"

#: ../../library/collections.rst:1139
msgid ""
"It is straightforward to create an ordered dictionary variant that remembers "
"the order the keys were *last* inserted. If a new entry overwrites an "
"existing entry, the original insertion position is changed and moved to the "
"end::"
msgstr ""
"Es sencillo crear una variante ordenada del diccionario que recuerde el "
"orden en que se insertaron *últimamente* las claves. Si una nueva entrada "
"sobrescribe una entrada existente, la posición de inserción original se "
"cambia y se mueve al final::"

#: ../../library/collections.rst:1151
msgid ""
"An :class:`OrderedDict` would also be useful for implementing variants of :"
"func:`functools.lru_cache`:"
msgstr ""
"Un :class:`OrderedDict` también sería útil para aplicar variantes de :func:"
"`functools.lru_cache`:"

#: ../../library/collections.rst:1192
msgid ":class:`UserDict` objects"
msgstr ":class:`UserDict` objetos"

#: ../../library/collections.rst:1194
msgid ""
"The class, :class:`UserDict` acts as a wrapper around dictionary objects. "
"The need for this class has been partially supplanted by the ability to "
"subclass directly from :class:`dict`; however, this class can be easier to "
"work with because the underlying dictionary is accessible as an attribute."
msgstr ""
"La clase :class:`UserDict` actúa como envoltorio de los objetos diccionario. "
"La necesidad de esta clase ha sido parcialmente suplantada por la capacidad "
"de subclasificar directamente desde :class:`dict`; sin embargo, esta clase "
"puede ser más fácil de trabajar porque el diccionario subyacente es "
"accesible como un atributo."

#: ../../library/collections.rst:1202
msgid ""
"Class that simulates a dictionary.  The instance's contents are kept in a "
"regular dictionary, which is accessible via the :attr:`data` attribute of :"
"class:`UserDict` instances.  If *initialdata* is provided, :attr:`data` is "
"initialized with its contents; note that a reference to *initialdata* will "
"not be kept, allowing it to be used for other purposes."
msgstr ""
"Clase que simula un diccionario.  El contenido de la instancia se guarda en "
"un diccionario normal, accesible a través del atributo :attr:`data` de las "
"instancias :class:`UserDict`.  Si se proporciona *initialdata*, :attr:`data` "
"se inicializa con su contenido; tenga en cuenta que no se guardará una "
"referencia a *initialdata*, lo que permite utilizarla para otros fines."

#: ../../library/collections.rst:1208
msgid ""
"In addition to supporting the methods and operations of mappings, :class:"
"`UserDict` instances provide the following attribute:"
msgstr ""
"Además de soportar los métodos y operaciones de las asignaciones, las "
"instancias de :class:`UserDict` proporcionan el siguiente atributo:"

#: ../../library/collections.rst:1213
msgid ""
"A real dictionary used to store the contents of the :class:`UserDict` class."
msgstr ""
"Un diccionario real utilizado para almacenar el contenido de la clase :class:"
"`UserDict`."

#: ../../library/collections.rst:1219
msgid ":class:`UserList` objects"
msgstr ":class:`UserList` objetos"

#: ../../library/collections.rst:1221
msgid ""
"This class acts as a wrapper around list objects.  It is a useful base class "
"for your own list-like classes which can inherit from them and override "
"existing methods or add new ones.  In this way, one can add new behaviors to "
"lists."
msgstr ""
"Esta clase actúa como una envoltura alrededor de los objetos de lista.  Es "
"una clase base útil para sus propias clases tipo lista, que pueden heredar "
"de ella y anular los métodos existentes o añadir otros nuevos.  De esta "
"forma, se pueden añadir nuevos comportamientos a las listas."

#: ../../library/collections.rst:1226
msgid ""
"The need for this class has been partially supplanted by the ability to "
"subclass directly from :class:`list`; however, this class can be easier to "
"work with because the underlying list is accessible as an attribute."
msgstr ""
"La necesidad de esta clase ha sido parcialmente suplantada por la capacidad "
"de subclasificar directamente desde :class:`list`; sin embargo, esta clase "
"puede ser más fácil de trabajar porque la lista subyacente es accesible como "
"un atributo."

#: ../../library/collections.rst:1232
msgid ""
"Class that simulates a list.  The instance's contents are kept in a regular "
"list, which is accessible via the :attr:`data` attribute of :class:"
"`UserList` instances.  The instance's contents are initially set to a copy "
"of *list*, defaulting to the empty list ``[]``.  *list* can be any iterable, "
"for example a real Python list or a :class:`UserList` object."
msgstr ""
"Clase que simula una lista.  El contenido de la instancia se guarda en una "
"lista normal, accesible a través del atributo :attr:`data` de las "
"instancias :class:`UserList`.  El contenido de la instancia se establece "
"inicialmente como una copia de *list*, por defecto la lista vacía ``[]``.  "
"*list* puede ser cualquier iterable, por ejemplo una lista real de Python o "
"un objeto :class:`UserList`."

#: ../../library/collections.rst:1238
msgid ""
"In addition to supporting the methods and operations of mutable sequences, :"
"class:`UserList` instances provide the following attribute:"
msgstr ""
"Además de soportar los métodos y operaciones de las secuencias mutables, las "
"instancias de :class:`UserList` proporcionan el siguiente atributo:"

#: ../../library/collections.rst:1243
msgid ""
"A real :class:`list` object used to store the contents of the :class:"
"`UserList` class."
msgstr ""
"Un objeto real :class:`list` utilizado para almacenar el contenido de la "
"clase :class:`UserList`."

#: ../../library/collections.rst:1246
msgid ""
"**Subclassing requirements:** Subclasses of :class:`UserList` are expected "
"to offer a constructor which can be called with either no arguments or one "
"argument.  List operations which return a new sequence attempt to create an "
"instance of the actual implementation class.  To do so, it assumes that the "
"constructor can be called with a single parameter, which is a sequence "
"object used as a data source."
msgstr ""
"**Requisitos de las subclases:** Se espera que las subclases de :class:"
"`UserList` ofrezcan un constructor al que se pueda llamar sin argumentos o "
"con un argumento.  Las operaciones de lista que devuelven una nueva "
"secuencia intentan crear una instancia de la clase de implementación real.  "
"Para ello, asume que el constructor puede ser llamado con un único "
"parámetro, que es un objeto secuencia utilizado como fuente de datos."

#: ../../library/collections.rst:1253
msgid ""
"If a derived class does not wish to comply with this requirement, all of the "
"special methods supported by this class will need to be overridden; please "
"consult the sources for information about the methods which need to be "
"provided in that case."
msgstr ""
"Si una clase derivada no desea cumplir con este requisito, todos los métodos "
"especiales soportados por esta clase tendrán que ser sobrescritos; por "
"favor, consulte las fuentes para obtener información sobre los métodos que "
"deben ser proporcionados en ese caso."

#: ../../library/collections.rst:1259
msgid ":class:`UserString` objects"
msgstr ":class:`UserString` objetos"

#: ../../library/collections.rst:1261
msgid ""
"The class, :class:`UserString` acts as a wrapper around string objects. The "
"need for this class has been partially supplanted by the ability to subclass "
"directly from :class:`str`; however, this class can be easier to work with "
"because the underlying string is accessible as an attribute."
msgstr ""
"La clase :class:`UserString` actúa como una envoltura alrededor de los "
"objetos de cadena. La necesidad de esta clase ha sido parcialmente "
"suplantada por la capacidad de subclasificar directamente desde :class:"
"`str`; sin embargo, esta clase puede ser más fácil de trabajar porque la "
"cadena subyacente es accesible como un atributo."

#: ../../library/collections.rst:1269
msgid ""
"Class that simulates a string object.  The instance's content is kept in a "
"regular string object, which is accessible via the :attr:`data` attribute "
"of :class:`UserString` instances.  The instance's contents are initially set "
"to a copy of *seq*.  The *seq* argument can be any object which can be "
"converted into a string using the built-in :func:`str` function."
msgstr ""
"Clase que simula un objeto string.  El contenido de la instancia se guarda "
"en un objeto de cadena normal, accesible a través del atributo :attr:`data` "
"de las instancias de :class:`UserString`.  El contenido de la instancia se "
"establece inicialmente como una copia de *seq*.  El argumento *seq* puede "
"ser cualquier objeto que pueda convertirse en cadena mediante la función "
"integrada :func:`str`."

#: ../../library/collections.rst:1276
msgid ""
"In addition to supporting the methods and operations of strings, :class:"
"`UserString` instances provide the following attribute:"
msgstr ""
"Además de soportar los métodos y operaciones de las cadenas, las instancias "
"de :class:`UserString` proporcionan el siguiente atributo:"

#: ../../library/collections.rst:1281
msgid ""
"A real :class:`str` object used to store the contents of the :class:"
"`UserString` class."
msgstr ""
"Un objeto real :class:`str` utilizado para almacenar el contenido de la "
"clase :class:`UserString`."

#: ../../library/collections.rst:1284
msgid ""
"New methods ``__getnewargs__``, ``__rmod__``, ``casefold``, ``format_map``, "
"``isprintable``, and ``maketrans``."
msgstr ""
"Nuevos métodos ``__getnewargs__``, ``__rmod__``, ``casefold``, "
"``format_map``, ``isprintable``, y ``maketrans``."
