# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# eulalio barbero espinosa <eulalio@disroot.org>, 2024
# Rafael Fontenelle <rffontenelle@gmail.com>, 2024
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.10\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-01-03 16:02+0000\n"
"PO-Revision-Date: 2022-11-05 17:21+0000\n"
"Last-Translator: Rafael Fontenelle <rffontenelle@gmail.com>, 2024\n"
"Language-Team: Spanish (Spain) (https://app.transifex.com/python-doc/"
"teams/5390/es_ES/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: es_ES\n"
"Plural-Forms: nplurals=3; plural=n == 1 ? 0 : n != 0 && n % 1000000 == 0 ? "
"1 : 2;\n"

#: ../../howto/instrumentation.rst:7
msgid "Instrumenting CPython with DTrace and SystemTap"
msgstr "Instrumentación de CPython con DTrace y SystemTap"

#: ../../howto/instrumentation.rst:0
msgid "author"
msgstr "autor"

#: ../../howto/instrumentation.rst:9
msgid "David Malcolm"
msgstr "David Malcolm"

#: ../../howto/instrumentation.rst:10
msgid "Łukasz Langa"
msgstr "Łukasz Langa"

#: ../../howto/instrumentation.rst:12
msgid ""
"DTrace and SystemTap are monitoring tools, each providing a way to inspect "
"what the processes on a computer system are doing.  They both use domain-"
"specific languages allowing a user to write scripts which:"
msgstr ""
"DTrace y SystemTap son herramientas de monitorización que permiten "
"inspeccionar lo que hacen los procesos de un sistema informático.  Ambas "
"utilizan lenguajes específicos de dominio que permiten al usuario escribir "
"scripts que:"

#: ../../howto/instrumentation.rst:16
msgid "filter which processes are to be observed"
msgstr "filtrar los procesos que deben observarse"

#: ../../howto/instrumentation.rst:17
msgid "gather data from the processes of interest"
msgstr "recopilar datos de los procesos de interés"

#: ../../howto/instrumentation.rst:18
msgid "generate reports on the data"
msgstr "generar informes sobre los datos"

#: ../../howto/instrumentation.rst:20
msgid ""
"As of Python 3.6, CPython can be built with embedded \"markers\", also known "
"as \"probes\", that can be observed by a DTrace or SystemTap script, making "
"it easier to monitor what the CPython processes on a system are doing."
msgstr ""
"A partir de Python 3.6, CPython puede construirse con \"marcadores\" "
"incrustados, también conocidos como \"sondas\", que pueden ser observados "
"por un script DTrace o SystemTap, haciendo más fácil monitorizar lo que "
"están haciendo los procesos CPython en un sistema."

#: ../../howto/instrumentation.rst:27
msgid ""
"DTrace markers are implementation details of the CPython interpreter. No "
"guarantees are made about probe compatibility between versions of CPython. "
"DTrace scripts can stop working or work incorrectly without warning when "
"changing CPython versions."
msgstr ""
"Los marcadores DTrace son detalles de implementación del intérprete CPython. "
"No se garantiza la compatibilidad de sondas entre versiones de CPython. Los "
"scripts DTrace pueden dejar de funcionar o funcionar incorrectamente sin "
"previo aviso al cambiar de versión de CPython."

#: ../../howto/instrumentation.rst:34
msgid "Enabling the static markers"
msgstr "Activar los marcadores estáticos"

#: ../../howto/instrumentation.rst:36
msgid ""
"macOS comes with built-in support for DTrace.  On Linux, in order to build "
"CPython with the embedded markers for SystemTap, the SystemTap development "
"tools must be installed."
msgstr ""
"macOS viene con soporte integrado para DTrace.  En Linux, para construir "
"CPython con los marcadores integrados para SystemTap, se deben instalar las "
"herramientas de desarrollo de SystemTap."

#: ../../howto/instrumentation.rst:40
msgid "On a Linux machine, this can be done via::"
msgstr "En una máquina Linux, esto se puede hacer a través de::"

#: ../../howto/instrumentation.rst:44
msgid "or::"
msgstr "o::"

#: ../../howto/instrumentation.rst:49
msgid ""
"CPython must then be :option:`configured with the --with-dtrace option <--"
"with-dtrace>`:"
msgstr ""
"CPython debe entonces ser :option:`configured with the --with-dtrace option "
"<--with-dtrace>`:"

#: ../../howto/instrumentation.rst:56
msgid ""
"On macOS, you can list available DTrace probes by running a Python process "
"in the background and listing all probes made available by the Python "
"provider::"
msgstr ""
"En macOS, puedes listar las sondas DTrace disponibles ejecutando un proceso "
"Python en segundo plano y listando todas las sondas puestas a disposición "
"por el proveedor Python::"

#: ../../howto/instrumentation.rst:73
msgid ""
"On Linux, you can verify if the SystemTap static markers are present in the "
"built binary by seeing if it contains a \".note.stapsdt\" section."
msgstr ""
"En Linux, puedes verificar si los marcadores estáticos SystemTap están "
"presentes en el binario construido viendo si contiene una sección \".note."
"stapsdt\"."

#: ../../howto/instrumentation.rst:81
msgid ""
"If you've built Python as a shared library (with the :option:`--enable-"
"shared` configure option), you need to look instead within the shared "
"library.  For example::"
msgstr ""
"Si has compilado Python como biblioteca compartida (con la opción de "
"configuración :option:`--enable-shared`), tendrás que buscar en la "
"biblioteca compartida.  Por ejemplo::"

#: ../../howto/instrumentation.rst:88
msgid "Sufficiently modern readelf can print the metadata::"
msgstr "Un readelf suficientemente moderno puede imprimir los metadatos::"

#: ../../howto/instrumentation.rst:125
msgid ""
"The above metadata contains information for SystemTap describing how it can "
"patch strategically placed machine code instructions to enable the tracing "
"hooks used by a SystemTap script."
msgstr ""
"Los metadatos anteriores contienen información para SystemTap que describe "
"cómo puede parchear instrucciones de código máquina colocadas "
"estratégicamente para habilitar los ganchos de rastreo utilizados por un "
"script SystemTap."

#: ../../howto/instrumentation.rst:131
msgid "Static DTrace probes"
msgstr "Sondas estáticas DTrace"

#: ../../howto/instrumentation.rst:133
msgid ""
"The following example DTrace script can be used to show the call/return "
"hierarchy of a Python script, only tracing within the invocation of a "
"function called \"start\". In other words, import-time function invocations "
"are not going to be listed:"
msgstr ""
"El siguiente ejemplo de script DTrace se puede usar para mostrar la "
"jerarquía llamada/retorno de un script Python, sólo rastreando dentro de la "
"invocación de una función llamada \"start\". En otras palabras, las "
"invocaciones a funciones en tiempo de importación no se listarán:"

#: ../../howto/instrumentation.rst:172 ../../howto/instrumentation.rst:230
msgid "It can be invoked like this::"
msgstr "Se puede llamar así::"

#: ../../howto/instrumentation.rst:176 ../../howto/instrumentation.rst:236
msgid "The output looks like this:"
msgstr "El resultado es el siguiente:"

#: ../../howto/instrumentation.rst:201
msgid "Static SystemTap markers"
msgstr "Marcadores estáticos SystemTap"

#: ../../howto/instrumentation.rst:203
msgid ""
"The low-level way to use the SystemTap integration is to use the static "
"markers directly.  This requires you to explicitly state the binary file "
"containing them."
msgstr ""
"La forma más sencilla de utilizar la integración de SystemTap es utilizar "
"directamente los marcadores estáticos.  Para ello es necesario indicar "
"explícitamente el archivo binario que los contiene."

#: ../../howto/instrumentation.rst:207
msgid ""
"For example, this SystemTap script can be used to show the call/return "
"hierarchy of a Python script:"
msgstr ""
"Por ejemplo, este script de SystemTap se puede usar para mostrar la "
"jerarquía  call/return de un script Python:"

#: ../../howto/instrumentation.rst:247
msgid "where the columns are:"
msgstr "donde están las columnas:"

#: ../../howto/instrumentation.rst:249
msgid "time in microseconds since start of script"
msgstr "tiempo en microsegundos desde el inicio del script"

#: ../../howto/instrumentation.rst:251
msgid "name of executable"
msgstr "nombre del ejecutable"

#: ../../howto/instrumentation.rst:253
msgid "PID of process"
msgstr "PID del proceso"

#: ../../howto/instrumentation.rst:255
msgid ""
"and the remainder indicates the call/return hierarchy as the script executes."
msgstr ""
"y el resto indica la jerarquía call/return a medida que se ejecuta el script."

#: ../../howto/instrumentation.rst:257
msgid ""
"For a :option:`--enable-shared` build of CPython, the markers are contained "
"within the libpython shared library, and the probe's dotted path needs to "
"reflect this. For example, this line from the above example:"
msgstr ""
"Para una compilación :option:`--enable-shared` de CPython, los marcadores "
"están contenidos dentro de la biblioteca compartida libpython, y la ruta "
"punteada de la sonda necesita reflejar esto. Por ejemplo, esta línea del "
"ejemplo anterior:"

#: ../../howto/instrumentation.rst:265
msgid "should instead read:"
msgstr "debería decir:"

#: ../../howto/instrumentation.rst:271
msgid "(assuming a :ref:`debug build <debug-build>` of CPython 3.6)"
msgstr "(suponiendo una :ref:`debug build <debug-build>` de CPython 3.6)"

#: ../../howto/instrumentation.rst:275
msgid "Available static markers"
msgstr "Marcadores estáticos disponibles"

#: ../../howto/instrumentation.rst:279
msgid ""
"This marker indicates that execution of a Python function has begun. It is "
"only triggered for pure-Python (bytecode) functions."
msgstr ""
"Este marcador indica que ha comenzado la ejecución de una función Python. "
"Sólo se activa para funciones puramente Python (bytecode)."

#: ../../howto/instrumentation.rst:282
msgid ""
"The filename, function name, and line number are provided back to the "
"tracing script as positional arguments, which must be accessed using "
"``$arg1``, ``$arg2``, ``$arg3``:"
msgstr ""
"El nombre del archivo, el nombre de la función y el número de línea se "
"devuelven al script de rastreo como argumentos posicionales, a los que se "
"debe acceder mediante ``$arg1``, ``$arg2``, ``$arg3``:"

#: ../../howto/instrumentation.rst:286
msgid ""
"``$arg1`` : ``(const char *)`` filename, accessible using "
"``user_string($arg1)``"
msgstr ""
"``$arg1``: ``(const char *)`` nombre de archivo, accesible mediante "
"``user_string($arg1)``"

#: ../../howto/instrumentation.rst:288
msgid ""
"``$arg2`` : ``(const char *)`` function name, accessible using "
"``user_string($arg2)``"
msgstr ""
"``$arg2``: ``(const char *)`` nombre de la función, accesible mediante "
"``user_string($arg2)``"

#: ../../howto/instrumentation.rst:291
msgid "``$arg3`` : ``int`` line number"
msgstr "``$arg3``: ``int`` número de línea"

#: ../../howto/instrumentation.rst:295
msgid ""
"This marker is the converse of :c:func:`function__entry`, and indicates that "
"execution of a Python function has ended (either via ``return``, or via an "
"exception).  It is only triggered for pure-Python (bytecode) functions."
msgstr ""

#: ../../howto/instrumentation.rst:299
msgid "The arguments are the same as for :c:func:`function__entry`"
msgstr ""

#: ../../howto/instrumentation.rst:303
msgid ""
"This marker indicates a Python line is about to be executed.  It is the "
"equivalent of line-by-line tracing with a Python profiler.  It is not "
"triggered within C functions."
msgstr ""
"Este marcador indica que una línea de Python está a punto de ejecutarse.  Es "
"el equivalente al rastreo línea a línea con un perfilador de Python.  No se "
"activa dentro de funciones C."

#: ../../howto/instrumentation.rst:307
msgid "The arguments are the same as for :c:func:`function__entry`."
msgstr ""

#: ../../howto/instrumentation.rst:311
msgid ""
"Fires when the Python interpreter starts a garbage collection cycle. "
"``arg0`` is the generation to scan, like :func:`gc.collect()`."
msgstr ""

#: ../../howto/instrumentation.rst:316
msgid ""
"Fires when the Python interpreter finishes a garbage collection cycle. "
"``arg0`` is the number of collected objects."
msgstr ""
"Se dispara cuando el intérprete de Python termina un ciclo de recolección de "
"basura. ``arg0`` es el número de objetos recolectados."

#: ../../howto/instrumentation.rst:321
msgid ""
"Fires before :mod:`importlib` attempts to find and load the module. ``arg0`` "
"is the module name."
msgstr ""
"Se activa antes de que :mod:`importlib` intente encontrar y cargar el "
"módulo. ``arg0`` es el nombre del módulo."

#: ../../howto/instrumentation.rst:328
msgid ""
"Fires after :mod:`importlib`'s find_and_load function is called. ``arg0`` is "
"the module name, ``arg1`` indicates if module was successfully loaded."
msgstr ""
"Se activa después de llamar a la función find_and_load de :mod:`importlib`. "
"``arg0`` es el nombre del módulo, ``arg1`` indica si el módulo se ha cargado "
"correctamente."

#: ../../howto/instrumentation.rst:337
msgid ""
"Fires when :func:`sys.audit` or :c:func:`PySys_Audit` is called. ``arg0`` is "
"the event name as C string, ``arg1`` is a :c:type:`PyObject` pointer to a "
"tuple object."
msgstr ""
"Se dispara cuando se llama a :func:`sys.audit` o :c:func:`PySys_Audit`. "
"``arg0`` es el nombre del evento como cadena C, ``arg1`` es un :c:type:"
"`PyObject` puntero a un objeto tupla."

#: ../../howto/instrumentation.rst:345
msgid "SystemTap Tapsets"
msgstr "SystemTap Tapsets"

#: ../../howto/instrumentation.rst:347
msgid ""
"The higher-level way to use the SystemTap integration is to use a "
"\"tapset\": SystemTap's equivalent of a library, which hides some of the "
"lower-level details of the static markers."
msgstr ""
"La forma de nivel superior de utilizar la integración de SystemTap es "
"utilizar un \"tapset\": el equivalente de SystemTap a una biblioteca, que "
"oculta algunos de los detalles de bajo nivel de los marcadores estáticos."

#: ../../howto/instrumentation.rst:351
msgid "Here is a tapset file, based on a non-shared build of CPython:"
msgstr ""
"Aquí hay un archivo tapset, basado en una compilación no compartida de "
"CPython:"

#: ../../howto/instrumentation.rst:374
msgid ""
"If this file is installed in SystemTap's tapset directory (e.g. ``/usr/share/"
"systemtap/tapset``), then these additional probepoints become available:"
msgstr ""
"Si este archivo está instalado en el directorio tapset de SystemTap (por "
"ejemplo, ``/usr/share/systemtap/tapset``), estarán disponibles estos puntos "
"de sonda adicionales:"

#: ../../howto/instrumentation.rst:380
msgid ""
"This probe point indicates that execution of a Python function has begun. It "
"is only triggered for pure-Python (bytecode) functions."
msgstr ""
"Este punto de sondeo indica que ha comenzado la ejecución de una función "
"Python. Sólo se activa para funciones puramente Python (bytecode)."

#: ../../howto/instrumentation.rst:385
msgid ""
"This probe point is the converse of ``python.function.return``, and "
"indicates that execution of a Python function has ended (either via "
"``return``, or via an exception).  It is only triggered for pure-Python "
"(bytecode) functions."
msgstr ""
"Este punto de sondeo es el inverso de ``python.function.return``, e indica "
"que la ejecución de una función Python ha finalizado (ya sea a través de "
"``return``, o a través de una excepción).  Sólo se activa para funciones "
"puramente Python (bytecode)."

#: ../../howto/instrumentation.rst:392
msgid "Examples"
msgstr "Ejemplos"

#: ../../howto/instrumentation.rst:393
msgid ""
"This SystemTap script uses the tapset above to more cleanly implement the "
"example given above of tracing the Python function-call hierarchy, without "
"needing to directly name the static markers:"
msgstr ""
"Este script SystemTap utiliza el tapset anterior para implementar de forma "
"más limpia el ejemplo anterior de rastreo de la jerarquía de llamadas a "
"funciones de Python, sin necesidad de nombrar directamente los marcadores "
"estáticos:"

#: ../../howto/instrumentation.rst:412
msgid ""
"The following script uses the tapset above to provide a top-like view of all "
"running CPython code, showing the top 20 most frequently entered bytecode "
"frames, each second, across the whole system:"
msgstr ""
"El siguiente script utiliza el tapset anterior para proporcionar una vista "
"superior de todo el código CPython en ejecución, mostrando las 20 tramas de "
"bytecode introducidas con más frecuencia, cada segundo, en todo el sistema:"
