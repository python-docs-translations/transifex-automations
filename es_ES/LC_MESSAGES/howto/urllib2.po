# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# Rafael Fontenelle <rffontenelle@gmail.com>, 2025
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.11\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-02-03 18:48+0000\n"
"PO-Revision-Date: 2023-05-24 02:11+0000\n"
"Last-Translator: Rafael Fontenelle <rffontenelle@gmail.com>, 2025\n"
"Language-Team: Spanish (Spain) (https://app.transifex.com/python-doc/"
"teams/5390/es_ES/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: es_ES\n"
"Plural-Forms: nplurals=3; plural=n == 1 ? 0 : n != 0 && n % 1000000 == 0 ? "
"1 : 2;\n"

#: ../../howto/urllib2.rst:5
msgid "HOWTO Fetch Internet Resources Using The urllib Package"
msgstr "CÓMO Obtener recursos de Internet con el paquete urllib"

#: ../../howto/urllib2.rst:0
msgid "Author"
msgstr "Autor"

#: ../../howto/urllib2.rst:7
msgid "`Michael Foord <https://agileabstractions.com/>`_"
msgstr "Michael Foord <https://agileabstractions.com/>`_"

#: ../../howto/urllib2.rst:11
msgid "Introduction"
msgstr "Introducción"

#: ../../howto/urllib2.rst:15
msgid ""
"You may also find useful the following article on fetching web resources "
"with Python:"
msgstr ""
"También puede resultarle útil el siguiente artículo sobre la obtención de "
"recursos web con Python:"

#: ../../howto/urllib2.rst:18
msgid ""
"`Basic Authentication <https://web.archive.org/web/20201215133350/http://www."
"voidspace.org.uk/python/articles/authentication.shtml>`_"
msgstr ""
"Autenticación básica <https://web.archive.org/web/20201215133350/http://www."
"voidspace.org.uk/python/articles/authentication.shtml>`_"

#: ../../howto/urllib2.rst:20
msgid "A tutorial on *Basic Authentication*, with examples in Python."
msgstr "Un tutorial sobre *Autenticación Básica*, con ejemplos en Python."

#: ../../howto/urllib2.rst:22
msgid ""
"**urllib.request** is a Python module for fetching URLs (Uniform Resource "
"Locators). It offers a very simple interface, in the form of the *urlopen* "
"function. This is capable of fetching URLs using a variety of different "
"protocols. It also offers a slightly more complex interface for handling "
"common situations - like basic authentication, cookies, proxies and so on. "
"These are provided by objects called handlers and openers."
msgstr ""
"**urllib.request** es un módulo de Python para obtener URLs (Localizadores "
"Uniformes de Recursos). Ofrece una interfaz muy sencilla, en forma de la "
"función *urlopen*. Esto es capaz de obtener URLs usando una variedad de "
"protocolos diferentes. También ofrece una interfaz un poco más compleja para "
"manejar situaciones comunes, como autenticación básica, cookies, proxies, "
"etcétera. Estos son proporcionados por objetos llamados handlers y openers."

#: ../../howto/urllib2.rst:29
msgid ""
"urllib.request supports fetching URLs for many \"URL schemes\" (identified "
"by the string before the ``\":\"`` in URL - for example ``\"ftp\"`` is the "
"URL scheme of ``\"ftp://python.org/\"``) using their associated network "
"protocols (e.g. FTP, HTTP). This tutorial focuses on the most common case, "
"HTTP."
msgstr ""
"urllib.request soporta la obtención de URLs para muchos \"esquemas "
"URL\" (identificados por la cadena antes de ``\":\"`` en URL - por ejemplo "
"``\"ftp\"`` es el esquema URL de ``\"ftp://python.org/\"``) usando sus "
"protocolos de red asociados (por ejemplo FTP, HTTP). Este tutorial se centra "
"en el caso más común, HTTP."

#: ../../howto/urllib2.rst:34
msgid ""
"For straightforward situations *urlopen* is very easy to use. But as soon as "
"you encounter errors or non-trivial cases when opening HTTP URLs, you will "
"need some understanding of the HyperText Transfer Protocol. The most "
"comprehensive and authoritative reference to HTTP is :rfc:`2616`. This is a "
"technical document and not intended to be easy to read. This HOWTO aims to "
"illustrate using *urllib*, with enough detail about HTTP to help you "
"through. It is not intended to replace the :mod:`urllib.request` docs, but "
"is supplementary to them."
msgstr ""
"Para situaciones sencillas *urlopen* es muy fácil de usar. Pero en cuanto "
"encuentre errores o casos no triviales al abrir URLs HTTP, necesitará algún "
"conocimiento del Protocolo de Transferencia de Hipertexto. La referencia más "
"completa y autorizada sobre HTTP es :rfc:`2616`. Se trata de un documento "
"técnico y no pretende ser fácil de leer. Este COMO pretende ilustrar el uso "
"de *urllib*, con suficiente detalle sobre HTTP para ayudarle. No pretende "
"reemplazar los documentos de :mod:`urllib.request`, sino complementarlos."

#: ../../howto/urllib2.rst:44
msgid "Fetching URLs"
msgstr "Fetching URLs"

#: ../../howto/urllib2.rst:46
msgid "The simplest way to use urllib.request is as follows::"
msgstr "La forma más sencilla de utilizar urllib.request es la siguiente::"

#: ../../howto/urllib2.rst:52
msgid ""
"If you wish to retrieve a resource via URL and store it in a temporary "
"location, you can do so via the :func:`shutil.copyfileobj` and :func:"
"`tempfile.NamedTemporaryFile` functions::"
msgstr ""
"Si desea recuperar un recurso a través de una URL y almacenarlo en una "
"ubicación temporal, puede hacerlo mediante las funciones :func:`shutil."
"copyfileobj` y :func:`tempfile.NamedTemporaryFile`::"

#: ../../howto/urllib2.rst:67
msgid ""
"Many uses of urllib will be that simple (note that instead of an 'http:' URL "
"we could have used a URL starting with 'ftp:', 'file:', etc.).  However, "
"it's the purpose of this tutorial to explain the more complicated cases, "
"concentrating on HTTP."
msgstr ""
"Muchos usos de urllib serán así de sencillos (nótese que en lugar de una URL "
"'http:' podríamos haber usado una URL que empezara por 'ftp:', 'file:', "
"etc.).  Sin embargo, el propósito de este tutorial es explicar los casos más "
"complicados, concentrándonos en HTTP."

#: ../../howto/urllib2.rst:72
msgid ""
"HTTP is based on requests and responses - the client makes requests and "
"servers send responses. urllib.request mirrors this with a ``Request`` "
"object which represents the HTTP request you are making. In its simplest "
"form you create a Request object that specifies the URL you want to fetch. "
"Calling ``urlopen`` with this Request object returns a response object for "
"the URL requested. This response is a file-like object, which means you can "
"for example call ``.read()`` on the response::"
msgstr ""
"HTTP se basa en peticiones y respuestas - el cliente hace peticiones y los "
"servidores envían respuestas. urllib.request refleja esto con un objeto "
"``Request`` que representa la petición HTTP que estás haciendo. En su forma "
"más simple, se crea un objeto Request que especifica la URL que se desea "
"obtener. Al llamar a ``urlopen`` con este objeto Request, se obtiene un "
"objeto de respuesta para la URL solicitada. Esta respuesta es un objeto "
"similar a un archivo, lo que significa que puede, por ejemplo, llamar a ``."
"read()`` con la respuesta::"

#: ../../howto/urllib2.rst:86
msgid ""
"Note that urllib.request makes use of the same Request interface to handle "
"all URL schemes.  For example, you can make an FTP request like so::"
msgstr ""
"Tenga en cuenta que urllib.request hace uso de la misma interfaz Request "
"para manejar todos los esquemas de URL.  Por ejemplo, puedes hacer una "
"petición FTP como::"

#: ../../howto/urllib2.rst:91
msgid ""
"In the case of HTTP, there are two extra things that Request objects allow "
"you to do: First, you can pass data to be sent to the server.  Second, you "
"can pass extra information (\"metadata\") *about* the data or about the "
"request itself, to the server - this information is sent as HTTP "
"\"headers\".  Let's look at each of these in turn."
msgstr ""
"En el caso de HTTP, hay dos cosas adicionales que los objetos Request "
"permiten hacer: Primero, puedes pasar datos para que sean enviados al "
"servidor.  En segundo lugar, puedes pasar información extra (\"metadatos\") "
"*sobre* los datos o sobre la propia petición, al servidor - esta información "
"se envía como \"cabeceras\" HTTP.  Veamos cada una de ellas por separado."

#: ../../howto/urllib2.rst:98
msgid "Data"
msgstr "Datos"

#: ../../howto/urllib2.rst:100
msgid ""
"Sometimes you want to send data to a URL (often the URL will refer to a CGI "
"(Common Gateway Interface) script or other web application). With HTTP, this "
"is often done using what's known as a **POST** request. This is often what "
"your browser does when you submit a HTML form that you filled in on the web. "
"Not all POSTs have to come from forms: you can use a POST to transmit "
"arbitrary data to your own application. In the common case of HTML forms, "
"the data needs to be encoded in a standard way, and then passed to the "
"Request object as the ``data`` argument. The encoding is done using a "
"function from the :mod:`urllib.parse` library. ::"
msgstr ""
"A veces quieres enviar datos a una URL (a menudo la URL se referirá a un "
"script CGI (Common Gateway Interface) u otra aplicación web). Con HTTP, esto "
"se hace a menudo usando lo que se conoce como una petición **POST**. Esto es "
"lo que suele hacer tu navegador cuando envías un formulario HTML que has "
"rellenado en la web. No todos los POSTs tienen que venir de formularios: "
"puedes usar un POST para transmitir datos arbitrarios a tu propia "
"aplicación. En el caso común de los formularios HTML, los datos necesitan "
"ser codificados de una manera estándar, y luego pasados al objeto Request "
"como el argumento ``data``. La codificación se realiza utilizando una "
"función de la biblioteca :mod:`urllib.parse`. ::"

#: ../../howto/urllib2.rst:124
msgid ""
"Note that other encodings are sometimes required (e.g. for file upload from "
"HTML forms - see `HTML Specification, Form Submission <https://www.w3.org/TR/"
"REC-html40/interact/forms.html#h-17.13>`_ for more details)."
msgstr ""
"Tener en cuenta que a veces se requieren otras codificaciones (por ejemplo, "
"para la carga de archivos desde formularios HTML; ver `HTML Specification, "
"Form Submission <https://www.w3.org/TR/REC-html40/interact/forms."
"html#h-17.13>`_ para obtener más detalles)."

#: ../../howto/urllib2.rst:129
msgid ""
"If you do not pass the ``data`` argument, urllib uses a **GET** request. One "
"way in which GET and POST requests differ is that POST requests often have "
"\"side-effects\": they change the state of the system in some way (for "
"example by placing an order with the website for a hundredweight of tinned "
"spam to be delivered to your door).  Though the HTTP standard makes it clear "
"that POSTs are intended to *always* cause side-effects, and GET requests "
"*never* to cause side-effects, nothing prevents a GET request from having "
"side-effects, nor a POST requests from having no side-effects. Data can also "
"be passed in an HTTP GET request by encoding it in the URL itself."
msgstr ""
"Si no se pasa el argumento ``data``, urllib utiliza una petición **GET**. "
"Una forma en la que las peticiones GET y POST difieren es que las peticiones "
"POST a menudo tienen \"efectos secundarios\": cambian el estado del sistema "
"de alguna manera (por ejemplo, haciendo un pedido al sitio web para que le "
"entreguen a su puerta un quintal de spam en lata).  Aunque el estándar HTTP "
"deja claro que las peticiones POST deben causar *siempre* efectos "
"secundarios, y las peticiones GET *nunca* efectos secundarios, nada impide "
"que una petición GET tenga efectos secundarios, ni que una petición POST no "
"los tenga. También se pueden pasar datos en una petición HTTP GET "
"codificándolos en la propia URL."

#: ../../howto/urllib2.rst:139
msgid "This is done as follows::"
msgstr "Esto se hace de la siguiente manera::"

#: ../../howto/urllib2.rst:154
msgid ""
"Notice that the full URL is created by adding a ``?`` to the URL, followed "
"by the encoded values."
msgstr ""
"Observe que la URL completa se crea añadiendo un ``?`` a la URL, seguido de "
"los valores codificados."

#: ../../howto/urllib2.rst:158
msgid "Headers"
msgstr "Cabeceras"

#: ../../howto/urllib2.rst:160
msgid ""
"We'll discuss here one particular HTTP header, to illustrate how to add "
"headers to your HTTP request."
msgstr ""
"Vamos a discutir aquí una cabecera HTTP en particular, para ilustrar cómo "
"añadir cabeceras a su petición HTTP."

#: ../../howto/urllib2.rst:163
msgid ""
"Some websites [#]_ dislike being browsed by programs, or send different "
"versions to different browsers [#]_. By default urllib identifies itself as "
"``Python-urllib/x.y`` (where ``x`` and ``y`` are the major and minor version "
"numbers of the Python release, e.g. ``Python-urllib/2.5``), which may "
"confuse the site, or just plain not work. The way a browser identifies "
"itself is through the ``User-Agent`` header [#]_. When you create a Request "
"object you can pass a dictionary of headers in. The following example makes "
"the same request as above, but identifies itself as a version of Internet "
"Explorer [#]_. ::"
msgstr ""
"A algunos sitios web [#]_ no les gusta ser navegados por programas, o envían "
"diferentes versiones a diferentes navegadores [#]_. Por defecto urllib se "
"identifica como ``Python-urllib/x.y`` (donde ``x`` y ``y`` son los números "
"de versión mayor y menor de la versión de Python, por ejemplo ``Python-"
"urllib/2.5``), lo que puede confundir al sitio, o simplemente no funcionar. "
"La forma en que un navegador se identifica es a través de la cabecera ``User-"
"Agent`` [#]_ . Cuando creas un objeto Request puedes pasarle un diccionario "
"de cabeceras. El siguiente ejemplo hace la misma petición que el anterior, "
"pero se identifica como una versión de Internet Explorer [#]_. ::"

#: ../../howto/urllib2.rst:190
msgid ""
"The response also has two useful methods. See the section on `info and "
"geturl`_ which comes after we have a look at what happens when things go "
"wrong."
msgstr ""
"La respuesta también tiene dos métodos útiles. Ver la sección sobre `info y "
"geturl`_ que viene después de que echemos un vistazo a lo que ocurre cuando "
"las cosas van mal."

#: ../../howto/urllib2.rst:195
msgid "Handling Exceptions"
msgstr "Gestión de excepciones"

#: ../../howto/urllib2.rst:197
msgid ""
"*urlopen* raises :exc:`~urllib.error.URLError` when it cannot handle a "
"response (though as usual with Python APIs, built-in exceptions such as :exc:"
"`ValueError`, :exc:`TypeError` etc. may also be raised)."
msgstr ""
"*urlopen* lanza :exc:`~urllib.error.URLError` cuando no puede manejar una "
"respuesta (aunque como es habitual con las APIs de Python, también se pueden "
"lanzar excepciones incorporadas como :exc:`ValueError`, :exc:`TypeError` "
"etc.)."

#: ../../howto/urllib2.rst:201
msgid ""
":exc:`~urllib.error.HTTPError` is the subclass of :exc:`~urllib.error."
"URLError` raised in the specific case of HTTP URLs."
msgstr ""
":exc:`~urllib.error.HTTPError` es la subclase de :exc:`~urllib.error."
"URLError` planteada en el caso específico de las URL HTTP."

#: ../../howto/urllib2.rst:204
msgid "The exception classes are exported from the :mod:`urllib.error` module."
msgstr ""
"Las clases de excepción se exportan desde el módulo :mod:`urllib.error`."

#: ../../howto/urllib2.rst:207
msgid "URLError"
msgstr "URLError"

#: ../../howto/urllib2.rst:209
msgid ""
"Often, URLError is raised because there is no network connection (no route "
"to the specified server), or the specified server doesn't exist.  In this "
"case, the exception raised will have a 'reason' attribute, which is a tuple "
"containing an error code and a text error message."
msgstr ""
"A menudo, URLError se lanza porque no hay conexión de red (no hay ruta al "
"servidor especificado), o el servidor especificado no existe.  En este caso, "
"la excepción lanzada tendrá un atributo 'reason', que es una tupla que "
"contiene un código de error y un mensaje de error de texto."

#: ../../howto/urllib2.rst:214
msgid "e.g. ::"
msgstr "e.g. ::"

#: ../../howto/urllib2.rst:225
msgid "HTTPError"
msgstr "HTTPError"

#: ../../howto/urllib2.rst:227
msgid ""
"Every HTTP response from the server contains a numeric \"status code\". "
"Sometimes the status code indicates that the server is unable to fulfil the "
"request. The default handlers will handle some of these responses for you "
"(for example, if the response is a \"redirection\" that requests the client "
"fetch the document from a different URL, urllib will handle that for you). "
"For those it can't handle, urlopen will raise an :exc:`~urllib.error."
"HTTPError`. Typical errors include '404' (page not found), '403' (request "
"forbidden), and '401' (authentication required)."
msgstr ""
"Cada respuesta HTTP del servidor contiene un \"código de estado\" numérico. "
"A veces, el código de estado indica que el servidor no puede satisfacer la "
"petición. Los gestores predeterminados gestionarán algunas de estas "
"respuestas por ti (por ejemplo, si la respuesta es una \"redirección\" que "
"solicita al cliente que obtenga el documento de una URL diferente, urllib lo "
"hará por ti). Para aquellas que no pueda manejar, urlopen lanzará un "
"mensaje :exc:`~urllib.error.HTTPError`. Los errores típicos incluyen "
"'404' (página no encontrada), '403' (petición prohibida) y "
"'401' (autenticación requerida)."

#: ../../howto/urllib2.rst:235
msgid ""
"See section 10 of :rfc:`2616` for a reference on all the HTTP error codes."
msgstr ""
"Consultar la sección 10 de :rfc:`2616` para obtener una referencia sobre "
"todos los códigos de error HTTP."

#: ../../howto/urllib2.rst:237
msgid ""
"The :exc:`~urllib.error.HTTPError` instance raised will have an integer "
"'code' attribute, which corresponds to the error sent by the server."
msgstr ""
"La instancia :exc:`~urllib.error.HTTPError` levantada tendrá un atributo "
"entero 'code', que corresponde al error enviado por el servidor."

#: ../../howto/urllib2.rst:241
msgid "Error Codes"
msgstr "Códigos de error"

#: ../../howto/urllib2.rst:243
msgid ""
"Because the default handlers handle redirects (codes in the 300 range), and "
"codes in the 100--299 range indicate success, you will usually only see "
"error codes in the 400--599 range."
msgstr ""
"Dado que los gestores por defecto gestionan las redirecciones (códigos en el "
"rango 300), y los códigos en el rango 100--299 indican éxito, normalmente "
"sólo verá códigos de error en el rango 400--599."

#: ../../howto/urllib2.rst:247
msgid ""
":attr:`http.server.BaseHTTPRequestHandler.responses` is a useful dictionary "
"of response codes in that shows all the response codes used by :rfc:`2616`. "
"The dictionary is reproduced here for convenience ::"
msgstr ""
":attr:`http.server.BaseHTTPRequestHandler.responses` es un útil diccionario "
"de códigos de respuesta que muestra todos los códigos de respuesta "
"utilizados por :rfc:`2616`. El diccionario se reproduce aquí por "
"conveniencia ::"

#: ../../howto/urllib2.rst:319
msgid ""
"When an error is raised the server responds by returning an HTTP error code "
"*and* an error page. You can use the :exc:`~urllib.error.HTTPError` instance "
"as a response on the page returned. This means that as well as the code "
"attribute, it also has read, geturl, and info, methods as returned by the "
"``urllib.response`` module::"
msgstr ""
"Cuando se produce un error, el servidor responde devolviendo un código de "
"error HTTP *and* una página de error. Puede utilizar la instancia :exc:"
"`~urllib.error.HTTPError` como respuesta en la página devuelta. Esto "
"significa que además del atributo code, también tiene los métodos read, "
"geturl, e info, tal y como devuelve el módulo ``urllib.response``::"

#: ../../howto/urllib2.rst:339
msgid "Wrapping it Up"
msgstr "Para terminar"

#: ../../howto/urllib2.rst:341
msgid ""
"So if you want to be prepared for :exc:`~urllib.error.HTTPError` *or* :exc:"
"`~urllib.error.URLError` there are two basic approaches. I prefer the second "
"approach."
msgstr ""
"Así que si quieres estar preparado para :exc:`~urllib.error.HTTPError` *o* :"
"exc:`~urllib.error.URLError` hay dos enfoques básicos. Yo prefiero el "
"segundo."

#: ../../howto/urllib2.rst:345
msgid "Number 1"
msgstr "Número 1"

#: ../../howto/urllib2.rst:367
msgid ""
"The ``except HTTPError`` *must* come first, otherwise ``except URLError`` "
"will *also* catch an :exc:`~urllib.error.HTTPError`."
msgstr ""
"El ``except HTTPError`` *debe* ir primero, de lo contrario ``except "
"URLError`` *también* cogerá un :exc:`~urllib.error.HTTPError`."

#: ../../howto/urllib2.rst:371
msgid "Number 2"
msgstr "Número 2"

#: ../../howto/urllib2.rst:392
msgid "info and geturl"
msgstr "info y geturl"

#: ../../howto/urllib2.rst:394
msgid ""
"The response returned by urlopen (or the :exc:`~urllib.error.HTTPError` "
"instance) has two useful methods :meth:`!info` and :meth:`!geturl` and is "
"defined in the module :mod:`urllib.response`."
msgstr ""
"La respuesta devuelta por urlopen (o la instancia :exc:`~urllib.error."
"HTTPError` ) tiene dos métodos útiles :meth:`!info` y :meth:`!geturl` y está "
"definida en el módulo :mod:`urllib.response`."

#: ../../howto/urllib2.rst:398
msgid ""
"**geturl** - this returns the real URL of the page fetched. This is useful "
"because ``urlopen`` (or the opener object used) may have followed a "
"redirect. The URL of the page fetched may not be the same as the URL "
"requested."
msgstr ""
"**geturl** - devuelve la URL real de la página obtenida. Esto es útil porque "
"``urlopen`` (o el objeto abridor utilizado) puede haber seguido una "
"redirección. La URL de la página obtenida puede no ser la misma que la URL "
"solicitada."

#: ../../howto/urllib2.rst:402
msgid ""
"**info** - this returns a dictionary-like object that describes the page "
"fetched, particularly the headers sent by the server. It is currently an :"
"class:`http.client.HTTPMessage` instance."
msgstr ""
"**info** - devuelve un objeto de tipo diccionario que describe la página "
"obtenida, en particular las cabeceras enviadas por el servidor. Actualmente "
"es una instancia de :class:`http.client.HTTPMessage`."

#: ../../howto/urllib2.rst:406
msgid ""
"Typical headers include 'Content-length', 'Content-type', and so on. See the "
"`Quick Reference to HTTP Headers <https://jkorpela.fi/http.html>`_ for a "
"useful listing of HTTP headers with brief explanations of their meaning and "
"use."
msgstr ""
"Las cabeceras típicas incluyen 'Content-length', 'Content-type', etc. "
"Consultar la `Quick Reference to HTTP Headers <https://jkorpela.fi/http."
"html>`_ para obtener una lista útil de las cabeceras HTTP con breves "
"explicaciones sobre su significado y uso."

#: ../../howto/urllib2.rst:413
msgid "Openers and Handlers"
msgstr "Abridores y manipuladores"

#: ../../howto/urllib2.rst:415
msgid ""
"When you fetch a URL you use an opener (an instance of the perhaps "
"confusingly named :class:`urllib.request.OpenerDirector`). Normally we have "
"been using the default opener - via ``urlopen`` - but you can create custom "
"openers. Openers use handlers. All the \"heavy lifting\" is done by the "
"handlers. Each handler knows how to open URLs for a particular URL scheme "
"(http, ftp, etc.), or how to handle an aspect of URL opening, for example "
"HTTP redirections or HTTP cookies."
msgstr ""
"Cuando obtienes una URL utilizas un abridor (una instancia del quizás "
"confusamente llamado :class:`urllib.request.OpenerDirector`). Normalmente "
"usamos el abridor por defecto - vía ``urlopen`` - pero se pueden crear "
"abridores personalizados. Los abridores utilizan manejadores. Todo el "
"\"trabajo pesado\" lo hacen los manejadores. Cada manejador sabe cómo abrir "
"URLs para un esquema de URL particular (http, ftp, etc.), o cómo manejar un "
"aspecto de la apertura de URLs, por ejemplo redirecciones HTTP o cookies "
"HTTP."

#: ../../howto/urllib2.rst:423
msgid ""
"You will want to create openers if you want to fetch URLs with specific "
"handlers installed, for example to get an opener that handles cookies, or to "
"get an opener that does not handle redirections."
msgstr ""
"Usted querrá crear abridores si quiere obtener URLs con manejadores "
"específicos instalados, por ejemplo para obtener un abridor que maneje "
"cookies, o para obtener un abridor que no maneje redirecciones."

#: ../../howto/urllib2.rst:427
msgid ""
"To create an opener, instantiate an ``OpenerDirector``, and then call ``."
"add_handler(some_handler_instance)`` repeatedly."
msgstr ""
"Para crear un abridor, instancie un ``OpenerDirector``, y luego llame a ``."
"add_handler(some_handler_instance)`` repetidamente."

#: ../../howto/urllib2.rst:430
msgid ""
"Alternatively, you can use ``build_opener``, which is a convenience function "
"for creating opener objects with a single function call.  ``build_opener`` "
"adds several handlers by default, but provides a quick way to add more and/"
"or override the default handlers."
msgstr ""
"Alternativamente, puede utilizar ``build_opener``, que es una función de "
"conveniencia para crear objetos abridores con una sola llamada a la función. "
"``build_opener`` añade varios manejadores por defecto, pero proporciona una "
"forma rápida de añadir más y/o anular los manejadores por defecto."

#: ../../howto/urllib2.rst:435
msgid ""
"Other sorts of handlers you might want to can handle proxies, "
"authentication, and other common but slightly specialised situations."
msgstr ""
"Otros tipos de manejadores que se podrían querer pueden manejar proxies, "
"autenticación y otras situaciones comunes pero ligeramente especializadas."

#: ../../howto/urllib2.rst:438
msgid ""
"``install_opener`` can be used to make an ``opener`` object the (global) "
"default opener. This means that calls to ``urlopen`` will use the opener you "
"have installed."
msgstr ""
"``install_opener`` se puede utilizar para hacer que un objeto ``opener`` sea "
"el abridor (global) por defecto. Esto significa que las llamadas a "
"``urlopen`` utilizarán el abridor que se tenga instalado."

#: ../../howto/urllib2.rst:442
msgid ""
"Opener objects have an ``open`` method, which can be called directly to "
"fetch urls in the same way as the ``urlopen`` function: there's no need to "
"call ``install_opener``, except as a convenience."
msgstr ""
"Los objetos abridores tienen un método ``open``, al que se puede llamar "
"directamente para obtener urls del mismo modo que a la función ``urlopen``: "
"no es necesario llamar a ``install_opener``, salvo por comodidad."

#: ../../howto/urllib2.rst:448
msgid "Basic Authentication"
msgstr "Autenticación básica"

#: ../../howto/urllib2.rst:450
msgid ""
"To illustrate creating and installing a handler we will use the "
"``HTTPBasicAuthHandler``. For a more detailed discussion of this subject -- "
"including an explanation of how Basic Authentication works - see the `Basic "
"Authentication Tutorial <https://web.archive.org/web/20201215133350/http://"
"www.voidspace.org.uk/python/articles/authentication.shtml>`__."
msgstr ""
"Para ilustrar la creación e instalación de un manejador utilizaremos la "
"página ``HTTPBasicAuthHandler``. Para una discusión más detallada de este "
"tema - incluyendo una explicación de cómo funciona la Autenticación Básica - "
"ver el `Tutorial de Autenticación Básica <https://web.archive.org/"
"web/20201215133350/http://www.voidspace.org.uk/python/articles/"
"authentication.shtml>`__."

#: ../../howto/urllib2.rst:456
msgid ""
"When authentication is required, the server sends a header (as well as the "
"401 error code) requesting authentication.  This specifies the "
"authentication scheme and a 'realm'. The header looks like: ``WWW-"
"Authenticate: SCHEME realm=\"REALM\"``."
msgstr ""
"Cuando se requiere autenticación, el servidor envía una cabecera (además del "
"código de error 401) solicitando autenticación.  En ella se especifica el "
"esquema de autenticación y un \"dominio\". La cabecera tiene el siguiente "
"aspecto: ``WWW-Authenticate: SCHEME realm=\"REALM\"``."

#: ../../howto/urllib2.rst:461
msgid "e.g."
msgstr "Por ejemplo"

#: ../../howto/urllib2.rst:468
msgid ""
"The client should then retry the request with the appropriate name and "
"password for the realm included as a header in the request. This is 'basic "
"authentication'. In order to simplify this process we can create an instance "
"of ``HTTPBasicAuthHandler`` and an opener to use this handler."
msgstr ""
"A continuación, el cliente debe reintentar la solicitud con el nombre y la "
"contraseña adecuados para el dominio incluidos como encabezado en la "
"solicitud. Esto es \"autenticación básica\". Para simplificar este proceso "
"podemos crear una instancia de ``HTTPBasicAuthHandler`` y un abridor para "
"utilizar este manejador."

#: ../../howto/urllib2.rst:473
msgid ""
"The ``HTTPBasicAuthHandler`` uses an object called a password manager to "
"handle the mapping of URLs and realms to passwords and usernames. If you "
"know what the realm is (from the authentication header sent by the server), "
"then you can use a ``HTTPPasswordMgr``. Frequently one doesn't care what the "
"realm is. In that case, it is convenient to use "
"``HTTPPasswordMgrWithDefaultRealm``. This allows you to specify a default "
"username and password for a URL. This will be supplied in the absence of you "
"providing an alternative combination for a specific realm. We indicate this "
"by providing ``None`` as the realm argument to the ``add_password`` method."
msgstr ""
"``HTTPBasicAuthHandler`` utiliza un objeto llamado gestor de contraseñas "
"para gestionar la asignación de URLs y dominios a contraseñas y nombres de "
"usuario. Si se sabe cuál es el dominio (a partir de la cabecera de "
"autenticación enviada por el servidor), entonces se puede utilizar un "
"``HTTPPasswordMgr``. Frecuentemente a uno no le importa cuál es el dominio. "
"En ese caso, es conveniente utilizar ``HTTPPasswordMgrWithDefaultRealm``. "
"Esto permite especificar un nombre de usuario y una contraseña por defecto "
"para una URL. Se le proporcionará en caso de que no proporcione una "
"combinación alternativa para un dominio específico. Esto se indica "
"proporcionando ``None`` como argumento de dominio para el método "
"``add_password``."

#: ../../howto/urllib2.rst:483
msgid ""
"The top-level URL is the first URL that requires authentication. URLs "
"\"deeper\" than the URL you pass to .add_password() will also match. ::"
msgstr ""
"La URL de nivel superior es la primera URL que requiere autenticación. Las "
"URL \"más profundas\" que la URL que pases a .add_password() también "
"coincidirán. ::"

#: ../../howto/urllib2.rst:508
msgid ""
"In the above example we only supplied our ``HTTPBasicAuthHandler`` to "
"``build_opener``. By default openers have the handlers for normal situations "
"-- ``ProxyHandler`` (if a proxy setting such as an :envvar:`!http_proxy` "
"environment variable is set), ``UnknownHandler``, ``HTTPHandler``, "
"``HTTPDefaultErrorHandler``, ``HTTPRedirectHandler``, ``FTPHandler``, "
"``FileHandler``, ``DataHandler``, ``HTTPErrorProcessor``."
msgstr ""
"En el ejemplo anterior sólo suministramos nuestro ``HTTPBasicAuthHandler`` a "
"``build_opener``. Por defecto, los abridores tienen los manejadores para "
"situaciones normales -- ``ProxyHandler`` (si se establece una configuración "
"de proxy como una variable de entorno :envvar:`!http_proxy` ), "
"``UnknownHandler``, ``HTTPHandler``, ``HTTPDefaultErrorHandler``, "
"``HTTPRedirectHandler``, ``FTPHandler``, ``FileHandler``, ``DataHandler``, "
"``HTTPErrorProcessor``."

#: ../../howto/urllib2.rst:515
msgid ""
"``top_level_url`` is in fact *either* a full URL (including the 'http:' "
"scheme component and the hostname and optionally the port number) e.g. "
"``\"http://example.com/\"`` *or* an \"authority\" (i.e. the hostname, "
"optionally including the port number) e.g. ``\"example.com\"`` or "
"``\"example.com:8080\"`` (the latter example includes a port number).  The "
"authority, if present, must NOT contain the \"userinfo\" component - for "
"example ``\"joe:password@example.com\"`` is not correct."
msgstr ""
"``top_level_url`` es de hecho *o* una URL completa (incluyendo el componente "
"de esquema 'http:' y el nombre de host y opcionalmente el número de puerto) "
"por ejemplo ``\"http://example.com/\"`` *o* una \"autoridad\" (es decir, el "
"nombre de host, incluyendo opcionalmente el número de puerto) por ejemplo "
"``\"example.com\"`` o ``\"example.com:8080\"`` (el último ejemplo incluye un "
"número de puerto).  La autoridad, si está presente, NO debe contener el "
"componente \"userinfo\" - por ejemplo ``\"joe:password@example.com\"`` no es "
"correcto."

#: ../../howto/urllib2.rst:525
msgid "Proxies"
msgstr "Apoderados"

#: ../../howto/urllib2.rst:527
msgid ""
"**urllib** will auto-detect your proxy settings and use those. This is "
"through the ``ProxyHandler``, which is part of the normal handler chain when "
"a proxy setting is detected.  Normally that's a good thing, but there are "
"occasions when it may not be helpful [#]_. One way to do this is to setup "
"our own ``ProxyHandler``, with no proxies defined. This is done using "
"similar steps to setting up a `Basic Authentication`_ handler: ::"
msgstr ""
"**urllib** detectará automáticamente tu configuración de proxy y la "
"utilizará. Esto se hace a través de ``ProxyHandler``, que forma parte de la "
"cadena normal de controladores cuando se detecta una configuración de "
"proxy.  Normalmente esto es bueno, pero hay ocasiones en las que puede no "
"ser útil [#]_. Una forma de hacerlo es configurar nuestro propio "
"``ProxyHandler``, sin proxies definidos. Esto se hace siguiendo pasos "
"similares a la configuración de un manejador `Basic Authentication`_: ::"

#: ../../howto/urllib2.rst:540
msgid ""
"Currently ``urllib.request`` *does not* support fetching of ``https`` "
"locations through a proxy.  However, this can be enabled by extending urllib."
"request as shown in the recipe [#]_."
msgstr ""
"Actualmente ``urllib.request`` *no* soporta la obtención de ubicaciones "
"``https`` a través de un proxy.  Sin embargo, esto puede habilitarse "
"ampliando urllib.request como se muestra en la receta [#]_."

#: ../../howto/urllib2.rst:546
msgid ""
"``HTTP_PROXY`` will be ignored if a variable ``REQUEST_METHOD`` is set; see "
"the documentation on :func:`~urllib.request.getproxies`."
msgstr ""
"``HTTP_PROXY`` se ignorará si se establece una variable ``REQUEST_METHOD``; "
"consultar la documentación sobre :func:`~urllib.request.getproxies`."

#: ../../howto/urllib2.rst:551
msgid "Sockets and Layers"
msgstr "Sockets y capas"

#: ../../howto/urllib2.rst:553
msgid ""
"The Python support for fetching resources from the web is layered.  urllib "
"uses the :mod:`http.client` library, which in turn uses the socket library."
msgstr ""
"El soporte de Python para la obtención de recursos de la web está "
"estratificado. urllib utiliza la biblioteca :mod:`http.client`, que a su vez "
"utiliza la biblioteca socket."

#: ../../howto/urllib2.rst:556
msgid ""
"As of Python 2.3 you can specify how long a socket should wait for a "
"response before timing out. This can be useful in applications which have to "
"fetch web pages. By default the socket module has *no timeout* and can hang. "
"Currently, the socket timeout is not exposed at the http.client or urllib."
"request levels. However, you can set the default timeout globally for all "
"sockets using ::"
msgstr ""
"A partir de Python 2.3 se puede especificar cuánto tiempo debe esperar un "
"socket una respuesta antes de que se agote el tiempo de espera. Esto puede "
"ser útil en aplicaciones que tienen que obtener páginas web. Por defecto, el "
"módulo socket no tiene *tiempo de espera* y puede colgarse. Actualmente, el "
"tiempo de espera del socket no está expuesto en los niveles http.client o "
"urllib.request. Sin embargo, puede establecer el tiempo de espera por "
"defecto globalmente para todos los sockets usando ::"

#: ../../howto/urllib2.rst:579
msgid "Footnotes"
msgstr "Notas a pie de página"

#: ../../howto/urllib2.rst:581
msgid "This document was reviewed and revised by John Lee."
msgstr "Este documento ha sido revisado y corregido por John Lee."

#: ../../howto/urllib2.rst:583
msgid "Google for example."
msgstr "Google, por ejemplo."

#: ../../howto/urllib2.rst:584
msgid ""
"Browser sniffing is a very bad practice for website design - building sites "
"using web standards is much more sensible. Unfortunately a lot of sites "
"still send different versions to different browsers."
msgstr ""
"El rastreo de navegadores es una práctica muy poco recomendable en el diseño "
"de sitios web; es mucho más sensato crear sitios que utilicen estándares "
"web. Por desgracia, muchos sitios siguen enviando versiones distintas a "
"navegadores diferentes."

#: ../../howto/urllib2.rst:587
msgid ""
"The user agent for MSIE 6 is *'Mozilla/4.0 (compatible; MSIE 6.0; Windows NT "
"5.1; SV1; .NET CLR 1.1.4322)'*"
msgstr ""
"El agente de usuario para MSIE 6 es *'Mozilla/4.0 (compatible; MSIE 6.0; "
"Windows NT 5.1; SV1; .NET CLR 1.1.4322)'*."

#: ../../howto/urllib2.rst:589
msgid ""
"For details of more HTTP request headers, see `Quick Reference to HTTP "
"Headers`_."
msgstr ""
"Para más detalles sobre las cabeceras HTTP, ver `Quick Reference to HTTP "
"Headers`_."

#: ../../howto/urllib2.rst:591
msgid ""
"In my case I have to use a proxy to access the internet at work. If you "
"attempt to fetch *localhost* URLs through this proxy it blocks them. IE is "
"set to use the proxy, which urllib picks up on. In order to test scripts "
"with a localhost server, I have to prevent urllib from using the proxy."
msgstr ""
"En mi caso tengo que usar un proxy para acceder a Internet en el trabajo. Si "
"intenta obtener URL *localhost* a través de este proxy, las bloquea. IE está "
"configurado para usar el proxy, que urllib capta. Para probar scripts con un "
"servidor localhost, tengo que evitar que urllib use el proxy."

#: ../../howto/urllib2.rst:596
msgid ""
"urllib opener for SSL proxy (CONNECT method): `ASPN Cookbook Recipe <https://"
"code.activestate.com/recipes/456195/>`_."
msgstr ""
