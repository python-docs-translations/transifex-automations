# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# Rafael Fontenelle <rffontenelle@gmail.com>, 2024
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.11\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-01-03 15:28+0000\n"
"PO-Revision-Date: 2023-05-24 02:11+0000\n"
"Last-Translator: Rafael Fontenelle <rffontenelle@gmail.com>, 2024\n"
"Language-Team: Spanish (Spain) (https://app.transifex.com/python-doc/"
"teams/5390/es_ES/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: es_ES\n"
"Plural-Forms: nplurals=3; plural=n == 1 ? 0 : n != 0 && n % 1000000 == 0 ? "
"1 : 2;\n"

#: ../../howto/logging-cookbook.rst:5
msgid "Logging Cookbook"
msgstr "Libro de recetas de registro"

#: ../../howto/logging-cookbook.rst:0
msgid "Author"
msgstr "Autor"

#: ../../howto/logging-cookbook.rst:7
msgid "Vinay Sajip <vinay_sajip at red-dove dot com>"
msgstr "Vinay Sajip <vinay_sajip at red-dove dot com>"

#: ../../howto/logging-cookbook.rst:9
msgid ""
"This page contains a number of recipes related to logging, which have been "
"found useful in the past. For links to tutorial and reference information, "
"please see :ref:`cookbook-ref-links`."
msgstr ""
"Esta página contiene una serie de recetas relacionadas con el registro, que "
"han resultado útiles en el pasado. Para obtener enlaces a tutoriales e "
"información de referencia, consulte :ref:`cookbook-ref-links`."

#: ../../howto/logging-cookbook.rst:16
msgid "Using logging in multiple modules"
msgstr "Uso del registro en varios módulos"

#: ../../howto/logging-cookbook.rst:18
msgid ""
"Multiple calls to ``logging.getLogger('someLogger')`` return a reference to "
"the same logger object.  This is true not only within the same module, but "
"also across modules as long as it is in the same Python interpreter "
"process.  It is true for references to the same object; additionally, "
"application code can define and configure a parent logger in one module and "
"create (but not configure) a child logger in a separate module, and all "
"logger calls to the child will pass up to the parent.  Here is a main "
"module::"
msgstr ""
"Múltiples llamadas a ``logging.getLogger('someLogger')`` devuelven una "
"referencia al mismo objeto logger.  Esto es cierto no sólo dentro del mismo "
"módulo, sino también a través de los módulos, siempre y cuando esté en el "
"mismo proceso de intérprete de Python.  Es cierto para referencias al mismo "
"objeto; además, el código de la aplicación puede definir y configurar un "
"logger padre en un módulo y crear (pero no configurar) un logger hijo en un "
"módulo separado, y todas las llamadas al logger hijo pasarán al padre.  He "
"aquí un módulo principal::"

#: ../../howto/logging-cookbook.rst:56
msgid "Here is the auxiliary module::"
msgstr "Aquí está el módulo auxiliar::"

#: ../../howto/logging-cookbook.rst:76
msgid "The output looks like this:"
msgstr "El resultado es el siguiente:"

#: ../../howto/logging-cookbook.rst:102
msgid "Logging from multiple threads"
msgstr "Registro desde varios hilos"

#: ../../howto/logging-cookbook.rst:104
msgid ""
"Logging from multiple threads requires no special effort. The following "
"example shows logging from the main (initial) thread and another thread::"
msgstr ""
"El registro desde varios subprocesos no requiere ningún esfuerzo especial. "
"El siguiente ejemplo muestra el registro desde el hilo principal (inicial) y "
"otro hilo::"

#: ../../howto/logging-cookbook.rst:133
msgid "When run, the script should print something like the following:"
msgstr "Cuando se ejecuta, el script debe imprimir algo como lo siguiente:"

#: ../../howto/logging-cookbook.rst:155
msgid ""
"This shows the logging output interspersed as one might expect. This "
"approach works for more threads than shown here, of course."
msgstr ""
"Esto muestra la salida de registro intercalada como cabría esperar. Este "
"enfoque funciona para más hilos que los mostrados aquí, por supuesto."

#: ../../howto/logging-cookbook.rst:159
msgid "Multiple handlers and formatters"
msgstr "Múltiples manipuladores y formateadores"

#: ../../howto/logging-cookbook.rst:161
msgid ""
"Loggers are plain Python objects.  The :meth:`~Logger.addHandler` method has "
"no minimum or maximum quota for the number of handlers you may add.  "
"Sometimes it will be beneficial for an application to log all messages of "
"all severities to a text file while simultaneously logging errors or above "
"to the console.  To set this up, simply configure the appropriate handlers.  "
"The logging calls in the application code will remain unchanged.  Here is a "
"slight modification to the previous simple module-based configuration "
"example::"
msgstr ""
"Los registradores son objetos Python planos.  El método :meth:`~Logger."
"addHandler` no tiene una cuota mínima o máxima para el número de manejadores "
"que puede añadir.  A veces será beneficioso para una aplicación registrar "
"todos los mensajes de todas las severidades en un archivo de texto mientras "
"que simultáneamente se registran los errores o lo anterior en la consola.  "
"Para configurar esto, simplemente configure los manejadores apropiados.  Las "
"llamadas de registro en el código de la aplicación permanecerán sin "
"cambios.  He aquí una ligera modificación del ejemplo anterior de "
"configuración simple basada en módulos::"

#: ../../howto/logging-cookbook.rst:194
msgid ""
"Notice that the 'application' code does not care about multiple handlers.  "
"All that changed was the addition and configuration of a new handler named "
"*fh*."
msgstr ""
"Observe que el código de la 'aplicación' no se preocupa por los múltiples "
"manejadores.  Todo lo que cambió fue la adición y configuración de un nuevo "
"manejador llamado *fh*."

#: ../../howto/logging-cookbook.rst:197
msgid ""
"The ability to create new handlers with higher- or lower-severity filters "
"can be very helpful when writing and testing an application.  Instead of "
"using many ``print`` statements for debugging, use ``logger.debug``: Unlike "
"the print statements, which you will have to delete or comment out later, "
"the logger.debug statements can remain intact in the source code and remain "
"dormant until you need them again.  At that time, the only change that needs "
"to happen is to modify the severity level of the logger and/or handler to "
"debug."
msgstr ""
"La posibilidad de crear nuevos manejadores con filtros de mayor o menor "
"gravedad puede ser muy útil a la hora de escribir y probar una aplicación.  "
"En lugar de utilizar muchas sentencias ``print`` para depurar, utilice "
"``logger.debug``: A diferencia de las sentencias print, que tendrá que "
"borrar o comentar más tarde, las sentencias logger.debug pueden permanecer "
"intactas en el código fuente y permanecer inactivas hasta que vuelva a "
"necesitarlas.  En ese momento, el único cambio que hay que hacer es "
"modificar el nivel de gravedad del logger y/o handler a debug."

#: ../../howto/logging-cookbook.rst:208
msgid "Logging to multiple destinations"
msgstr "Registro en varios destinos"

#: ../../howto/logging-cookbook.rst:210
msgid ""
"Let's say you want to log to console and file with different message formats "
"and in differing circumstances. Say you want to log messages with levels of "
"DEBUG and higher to file, and those messages at level INFO and higher to the "
"console. Let's also assume that the file should contain timestamps, but the "
"console messages should not. Here's how you can achieve this::"
msgstr ""
"Digamos que se quiere registrar en consola y fichero con diferentes formatos "
"de mensaje y en diferentes circunstancias. Digamos que se quiere registrar "
"los mensajes con niveles de DEBUG y superiores en el fichero, y los mensajes "
"con nivel INFO y superiores en la consola. Supongamos también que el fichero "
"debe contener marcas de tiempo, pero los mensajes de la consola no. He aquí "
"cómo se puede lograr esto::"

#: ../../howto/logging-cookbook.rst:248
msgid "When you run this, on the console you will see"
msgstr "Cuando ejecutes esto, en la consola verás"

#: ../../howto/logging-cookbook.rst:257
msgid "and in the file you will see something like"
msgstr "y en el archivo se verá algo como"

#: ../../howto/logging-cookbook.rst:267
msgid ""
"As you can see, the DEBUG message only shows up in the file. The other "
"messages are sent to both destinations."
msgstr ""
"Como se puede ver, el mensaje DEBUG sólo aparece en el archivo. Los demás "
"mensajes se envían a ambos destinos."

#: ../../howto/logging-cookbook.rst:270
msgid ""
"This example uses console and file handlers, but you can use any number and "
"combination of handlers you choose."
msgstr ""
"Este ejemplo utiliza manejadores de consola y archivo, pero puede utilizar "
"cualquier número y combinación de manejadores que se elija."

#: ../../howto/logging-cookbook.rst:273
msgid ""
"Note that the above choice of log filename ``/tmp/myapp.log`` implies use of "
"a standard location for temporary files on POSIX systems. On Windows, you "
"may need to choose a different directory name for the log - just ensure that "
"the directory exists and that you have the permissions to create and update "
"files in it."
msgstr ""
"Tener en cuenta que la elección anterior del nombre del archivo de registro "
"``/tmp/myapp.log`` implica el uso de una ubicación estándar para archivos "
"temporales en sistemas POSIX. En Windows, es posible que se  tenga que "
"elegir un nombre de directorio diferente para el registro - asegurarse sólo "
"de que el directorio exista y que se tienen los permisos para crear y "
"actualizar archivos en él."

#: ../../howto/logging-cookbook.rst:282
msgid "Custom handling of levels"
msgstr "Gestión personalizada de niveles"

#: ../../howto/logging-cookbook.rst:284
msgid ""
"Sometimes, you might want to do something slightly different from the "
"standard handling of levels in handlers, where all levels above a threshold "
"get processed by a handler. To do this, you need to use filters. Let's look "
"at a scenario where you want to arrange things as follows:"
msgstr ""
"A veces, es posible que se desee hacer algo distinto del manejo estándar de "
"los niveles en los manejadores, donde todos los niveles por encima de un "
"umbral son procesados por un manejador. Para ello, es necesario utilizar "
"filtros. Veamos un escenario en el que se desea organizar las cosas de la "
"siguiente manera:"

#: ../../howto/logging-cookbook.rst:289
msgid "Send messages of severity ``INFO`` and ``WARNING`` to ``sys.stdout``"
msgstr "Enviar mensajes de gravedad ``INFO`` y ``WARNING`` a ``sys.stdout``"

#: ../../howto/logging-cookbook.rst:290
msgid "Send messages of severity ``ERROR`` and above to ``sys.stderr``"
msgstr "Enviar mensajes de gravedad ``ERROR`` y superiores a ``sys.stderr``"

#: ../../howto/logging-cookbook.rst:291
msgid "Send messages of severity ``DEBUG`` and above to file ``app.log``"
msgstr ""
"Enviar mensajes de gravedad ``DEBUG`` y superiores al archivo ``app.log``"

#: ../../howto/logging-cookbook.rst:293
msgid "Suppose you configure logging with the following JSON:"
msgstr "Suponga que se configura el registro con el siguiente JSON:"

#: ../../howto/logging-cookbook.rst:335
msgid ""
"This configuration does *almost* what we want, except that ``sys.stdout`` "
"would show messages of severity ``ERROR`` and above as well as ``INFO`` and "
"``WARNING`` messages. To prevent this, we can set up a filter which excludes "
"those messages and add it to the relevant handler. This can be configured by "
"adding a ``filters`` section parallel to ``formatters`` and ``handlers``:"
msgstr ""
"Esta configuración hace *casi* lo que queremos, excepto que ``sys.stdout`` "
"mostraría los mensajes de gravedad ``ERROR`` y superior, así como los "
"mensajes ``INFO`` y ``WARNING``. Para evitarlo, podemos configurar un filtro "
"que excluya esos mensajes y añadirlo al manejador correspondiente. Esto "
"puede configurarse añadiendo una sección ``filters`` paralela a "
"``formatters`` y ``handlers``:"

#: ../../howto/logging-cookbook.rst:352
msgid "and changing the section on the ``stdout`` handler to add it:"
msgstr "y cambiando la sección del manejador ``stdout`` para añadirlo:"

#: ../../howto/logging-cookbook.rst:366
msgid ""
"A filter is just a function, so we can define the ``filter_maker`` (a "
"factory function) as follows:"
msgstr ""
"Un filtro no es más que una función, por lo que podemos definir el "
"``filter_maker`` (una función de fábrica) de la siguiente manera:"

#: ../../howto/logging-cookbook.rst:379
msgid ""
"This converts the string argument passed in to a numeric level, and returns "
"a function which only returns ``True`` if the level of the passed in record "
"is at or below the specified level. Note that in this example I have defined "
"the ``filter_maker`` in a test script ``main.py`` that I run from the "
"command line, so its module will be ``__main__`` - hence the ``__main__."
"filter_maker`` in the filter configuration. You will need to change that if "
"you define it in a different module."
msgstr ""
"Convierte el argumento de cadena introducido en un nivel numérico y devuelve "
"una función que sólo devuelve ``True`` si el nivel del registro introducido "
"es igual o inferior al nivel especificado. Tenga en cuenta que en este "
"ejemplo he definido ``filter_maker`` en un script de prueba ``main.py`` que "
"ejecuto desde la línea de comandos, por lo que su módulo será ``__main__`` - "
"de ahí ``__main__.filter_maker`` en la configuración del filtro. Habrá que "
"cambiar esto si se define en un módulo diferente."

#: ../../howto/logging-cookbook.rst:387
msgid "With the filter added, we can run ``main.py``, which in full is:"
msgstr ""
"Con el filtro añadido, podemos ejecutar ``main.py``, que en su totalidad es:"

#: ../../howto/logging-cookbook.rst:457
msgid "And after running it like this:"
msgstr "Y después de ejecutarlo así:"

#: ../../howto/logging-cookbook.rst:463
msgid "We can see the results are as expected:"
msgstr "Podemos ver que los resultados son los esperados:"

#: ../../howto/logging-cookbook.rst:489
msgid "Configuration server example"
msgstr "Ejemplo de servidor de configuración"

#: ../../howto/logging-cookbook.rst:491
msgid "Here is an example of a module using the logging configuration server::"
msgstr ""
"He aquí un ejemplo de un módulo que utiliza el servidor de configuración de "
"registro::"

#: ../../howto/logging-cookbook.rst:522
msgid ""
"And here is a script that takes a filename and sends that file to the "
"server, properly preceded with the binary-encoded length, as the new logging "
"configuration::"
msgstr ""
"Y aquí hay un script que toma un nombre de archivo y envía ese archivo al "
"servidor, debidamente precedido con la longitud de codificación binaria, "
"como la nueva configuración de registro::"

#: ../../howto/logging-cookbook.rst:547
msgid "Dealing with handlers that block"
msgstr "Manipuladores que se bloquean"

#: ../../howto/logging-cookbook.rst:551
msgid ""
"Sometimes you have to get your logging handlers to do their work without "
"blocking the thread you're logging from. This is common in web applications, "
"though of course it also occurs in other scenarios."
msgstr ""
"A veces se tiene que conseguir que los manejadores de registro hagan su "
"trabajo sin bloquear el hilo desde el que se está registrando. Esto es común "
"en aplicaciones web, aunque por supuesto también ocurre en otros escenarios."

#: ../../howto/logging-cookbook.rst:555
msgid ""
"A common culprit which demonstrates sluggish behaviour is the :class:"
"`SMTPHandler`: sending emails can take a long time, for a number of reasons "
"outside the developer's control (for example, a poorly performing mail or "
"network infrastructure). But almost any network-based handler can block: "
"Even a :class:`SocketHandler` operation may do a DNS query under the hood "
"which is too slow (and this query can be deep in the socket library code, "
"below the Python layer, and outside your control)."
msgstr ""
"Un culpable común que demuestra un comportamiento lento es :class:"
"`SMTPHandler`: el envío de correos electrónicos puede tardar mucho tiempo, "
"por una serie de razones que escapan al control del desarrollador (por "
"ejemplo, un mal funcionamiento de la infraestructura de correo o de red). "
"Pero casi cualquier manejador basado en la red puede bloquearse: Incluso una "
"operación de :class:`SocketHandler` puede hacer una consulta DNS bajo el "
"capó que sea demasiado lenta (y esta consulta puede estar en lo más profundo "
"del código de la biblioteca de sockets, por debajo de la capa de Python, y "
"fuera de tu control)."

#: ../../howto/logging-cookbook.rst:563
msgid ""
"One solution is to use a two-part approach. For the first part, attach only "
"a :class:`QueueHandler` to those loggers which are accessed from performance-"
"critical threads. They simply write to their queue, which can be sized to a "
"large enough capacity or initialized with no upper bound to their size. The "
"write to the queue will typically be accepted quickly, though you will "
"probably need to catch the :exc:`queue.Full` exception as a precaution in "
"your code. If you are a library developer who has performance-critical "
"threads in their code, be sure to document this (together with a suggestion "
"to attach only ``QueueHandlers`` to your loggers) for the benefit of other "
"developers who will use your code."
msgstr ""
"Una solución es utilizar un enfoque en dos partes. Para la primera parte, "
"adjunte sólo un :class:`QueueHandler` a aquellos registradores a los que se "
"accede desde subprocesos críticos para el rendimiento. Simplemente escriben "
"en su cola, que puede ser de un tamaño suficientemente grande o inicializada "
"sin límite superior a su tamaño. La escritura en la cola suele ser aceptada "
"rápidamente, aunque es probable que tenga que capturar la excepción :exc:"
"`queue.Full` como precaución en su código. Si eres un desarrollador de "
"bibliotecas que tiene hilos críticos para el rendimiento en su código, "
"asegúrate de documentar esto (junto con una sugerencia de adjuntar sólo "
"``QueueHandlers`` a tus registradores) en beneficio de otros desarrolladores "
"que vayan a utilizar tu código."

#: ../../howto/logging-cookbook.rst:574
msgid ""
"The second part of the solution is :class:`QueueListener`, which has been "
"designed as the counterpart to :class:`QueueHandler`.  A :class:"
"`QueueListener` is very simple: it's passed a queue and some handlers, and "
"it fires up an internal thread which listens to its queue for LogRecords "
"sent from ``QueueHandlers`` (or any other source of ``LogRecords``, for that "
"matter). The ``LogRecords`` are removed from the queue and passed to the "
"handlers for processing."
msgstr ""
"La segunda parte de la solución es :class:`QueueListener`, que se ha "
"diseñado como contrapartida de :class:`QueueHandler`.  Un :class:"
"`QueueListener` es muy simple: se le pasa una cola y algunos manejadores, y "
"se inicia un hilo interno que escucha en su cola los LogRecords enviados "
"desde ``QueueHandlers`` (o cualquier otra fuente de ``LogRecords``, para el "
"caso). Los ``LogRecords`` se retiran de la cola y se pasan a los manejadores "
"para su procesamiento."

#: ../../howto/logging-cookbook.rst:582
msgid ""
"The advantage of having a separate :class:`QueueListener` class is that you "
"can use the same instance to service multiple ``QueueHandlers``. This is "
"more resource-friendly than, say, having threaded versions of the existing "
"handler classes, which would eat up one thread per handler for no particular "
"benefit."
msgstr ""
"La ventaja de tener una clase :class:`QueueListener` separada es que puedes "
"usar la misma instancia para dar servicio a múltiples ``QueueHandlers``. "
"Esto es más respetuoso con los recursos que, por ejemplo, tener versiones "
"con subprocesos de las clases manejadoras existentes, que consumirían un "
"subproceso por manejador sin ningún beneficio particular."

#: ../../howto/logging-cookbook.rst:587
msgid "An example of using these two classes follows (imports omitted)::"
msgstr ""
"A continuación se muestra un ejemplo de uso de estas dos clases (se omiten "
"las importaciones)::"

#: ../../howto/logging-cookbook.rst:605
msgid "which, when run, will produce:"
msgstr "que, cuando se ejecute, producirá:"

#: ../../howto/logging-cookbook.rst:611
msgid ""
"Although the earlier discussion wasn't specifically talking about async "
"code, but rather about slow logging handlers, it should be noted that when "
"logging from async code, network and even file handlers could lead to "
"problems (blocking the event loop) because some logging is done from :mod:"
"`asyncio` internals. It might be best, if any async code is used in an "
"application, to use the above approach for logging, so that any blocking "
"code runs only in the ``QueueListener`` thread."
msgstr ""
"Aunque la discusión anterior no se refería específicamente al código "
"asíncrono, sino más bien a los lentos manejadores de registro, debe tenerse "
"en cuenta que cuando se realiza el registro desde código asíncrono, los "
"manejadores de red e incluso de archivos podrían dar problemas (bloqueando "
"el bucle de eventos) porque parte del registro se realiza desde los internos "
"de :mod:`asyncio`. Sería mejor, si se utiliza código asíncrono en una "
"aplicación, utilizar el enfoque anterior para el registro, de modo que "
"cualquier código de bloqueo se ejecute sólo en el hilo ``QueueListener``."

#: ../../howto/logging-cookbook.rst:619
msgid ""
"Prior to Python 3.5, the :class:`QueueListener` always passed every message "
"received from the queue to every handler it was initialized with. (This was "
"because it was assumed that level filtering was all done on the other side, "
"where the queue is filled.) From 3.5 onwards, this behaviour can be changed "
"by passing a keyword argument ``respect_handler_level=True`` to the "
"listener's constructor. When this is done, the listener compares the level "
"of each message with the handler's level, and only passes a message to a "
"handler if it's appropriate to do so."
msgstr ""
"Antes de Python 3.5, :class:`QueueListener` siempre pasaba cada mensaje "
"recibido de la cola a cada manejador con el que se inicializaba. (Esto se "
"debía a que se asumía que el filtrado de nivel se hacía todo en el otro "
"lado, donde se llena la cola). A partir de la versión 3.5, este "
"comportamiento puede cambiarse pasando un argumento de palabra clave "
"``respect_handler_level=True`` al constructor del receptor. Cuando se hace "
"esto, el receptor compara el nivel de cada mensaje con el nivel del "
"manejador, y sólo pasa un mensaje a un manejador si es apropiado hacerlo."

#: ../../howto/logging-cookbook.rst:632
msgid "Sending and receiving logging events across a network"
msgstr "Envío y recepción de eventos de registro a través de una red"

#: ../../howto/logging-cookbook.rst:634
msgid ""
"Let's say you want to send logging events across a network, and handle them "
"at the receiving end. A simple way of doing this is attaching a :class:"
"`SocketHandler` instance to the root logger at the sending end::"
msgstr ""
"Digamos que quieres enviar eventos de registro a través de una red, y "
"manejarlos en el extremo receptor. Una forma sencilla de hacerlo es adjuntar "
"una instancia de :class:`SocketHandler` al registrador raíz en el extremo "
"emisor::"

#: ../../howto/logging-cookbook.rst:662
msgid ""
"At the receiving end, you can set up a receiver using the :mod:"
"`socketserver` module. Here is a basic working example::"
msgstr ""
"En el extremo receptor, puede configurar un receptor utilizando el módulo :"
"mod:`socketserver`. He aquí un ejemplo de funcionamiento básico::"

#: ../../howto/logging-cookbook.rst:750
msgid ""
"First run the server, and then the client. On the client side, nothing is "
"printed on the console; on the server side, you should see something like:"
msgstr ""
"Primero se ejecuta el servidor y luego el cliente. En el lado del cliente, "
"nada se imprime en la consola; en el lado del servidor, se debería ver algo "
"como:"

#: ../../howto/logging-cookbook.rst:762
msgid ""
"Note that there are some security issues with pickle in some scenarios. If "
"these affect you, you can use an alternative serialization scheme by "
"overriding the :meth:`~SocketHandler.makePickle` method and implementing "
"your alternative there, as well as adapting the above script to use your "
"alternative serialization."
msgstr ""
"Ten en cuenta que hay algunos problemas de seguridad con pickle en algunos "
"escenarios. Si esto afecta, se puede usar un esquema de serialización "
"alternativo anulando el método :meth:`~SocketHandler.makePickle` e "
"implementando tu alternativa allí, así como adaptando el script anterior "
"para usar tu serialización alternativa."

#: ../../howto/logging-cookbook.rst:770
msgid "Running a logging socket listener in production"
msgstr "Ejecutar un receptor de socket de registro en producción"

#: ../../howto/logging-cookbook.rst:774
msgid ""
"To run a logging listener in production, you may need to use a process-"
"management tool such as `Supervisor <http://supervisord.org/>`_. `Here is a "
"Gist <socket-listener-gist_>`__ which provides the bare-bones files to run "
"the above functionality using Supervisor. It consists of the following files:"
msgstr ""
"Para ejecutar un logging listener en producción, puede que necesite utilizar "
"una herramienta de gestión de procesos como `Supervisor <http://supervisord."
"org/>`_. Aquí hay un Gist <socket-listener-gist_>`__ que proporciona los "
"archivos básicos para ejecutar la funcionalidad anterior utilizando "
"Supervisor. Consiste en los siguientes archivos:"

#: ../../howto/logging-cookbook.rst:781
msgid "File"
msgstr "Archivo"

#: ../../howto/logging-cookbook.rst:781
msgid "Purpose"
msgstr "Propósito"

#: ../../howto/logging-cookbook.rst:783
msgid ":file:`prepare.sh`"
msgstr ":file:`prepare.sh`"

#: ../../howto/logging-cookbook.rst:783
msgid "A Bash script to prepare the environment for testing"
msgstr "Un script Bash para preparar el entorno de pruebas"

#: ../../howto/logging-cookbook.rst:786
msgid ":file:`supervisor.conf`"
msgstr ":file:`supervisor.conf`"

#: ../../howto/logging-cookbook.rst:786
msgid ""
"The Supervisor configuration file, which has entries for the listener and a "
"multi-process web application"
msgstr ""
"El archivo de configuración del Supervisor, que contiene entradas para el "
"listener y una aplicación web multiproceso"

#: ../../howto/logging-cookbook.rst:790
msgid ":file:`ensure_app.sh`"
msgstr ":file:`ensure_app.sh`"

#: ../../howto/logging-cookbook.rst:790
msgid ""
"A Bash script to ensure that Supervisor is running with the above "
"configuration"
msgstr ""
"Un script Bash para asegurar que Supervisor se ejecuta con la configuración "
"anterior"

#: ../../howto/logging-cookbook.rst:793
msgid ":file:`log_listener.py`"
msgstr ":file:`log_listener.py`"

#: ../../howto/logging-cookbook.rst:793
msgid ""
"The socket listener program which receives log events and records them to a "
"file"
msgstr ""
"El programa de escucha de sockets que recibe los eventos de registro y los "
"graba en un archivo"

#: ../../howto/logging-cookbook.rst:796
msgid ":file:`main.py`"
msgstr ":file:`main.py`"

#: ../../howto/logging-cookbook.rst:796
msgid ""
"A simple web application which performs logging via a socket connected to "
"the listener"
msgstr ""
"Una aplicación web sencilla que realiza el registro a través de un socket "
"conectado al listener"

#: ../../howto/logging-cookbook.rst:799
msgid ":file:`webapp.json`"
msgstr ":file:`webapp.json`"

#: ../../howto/logging-cookbook.rst:799
msgid "A JSON configuration file for the web application"
msgstr "Un archivo de configuración JSON para la aplicación web"

#: ../../howto/logging-cookbook.rst:801
msgid ":file:`client.py`"
msgstr ":file:`client.py`"

#: ../../howto/logging-cookbook.rst:801
msgid "A Python script to exercise the web application"
msgstr "Un script en Python para ejercitar la aplicación web"

#: ../../howto/logging-cookbook.rst:804
msgid ""
"The web application uses `Gunicorn <https://gunicorn.org/>`_, which is a "
"popular web application server that starts multiple worker processes to "
"handle requests. This example setup shows how the workers can write to the "
"same log file without conflicting with one another --- they all go through "
"the socket listener."
msgstr ""
"La aplicación web utiliza `Gunicorn <https://gunicorn.org/>`_, que es un "
"popular servidor de aplicaciones web que inicia múltiples procesos worker "
"para manejar las peticiones. Este ejemplo de configuración muestra cómo los "
"trabajadores pueden escribir en el mismo archivo de registro sin entrar en "
"conflicto unos con otros --- todos van a través del socket listener."

#: ../../howto/logging-cookbook.rst:809
msgid "To test these files, do the following in a POSIX environment:"
msgstr "Para probar estos archivos, haga lo siguiente en un entorno POSIX:"

#: ../../howto/logging-cookbook.rst:811
msgid ""
"Download `the Gist <socket-listener-gist_>`__ as a ZIP archive using the :"
"guilabel:`Download ZIP` button."
msgstr ""
"Descargue `the Gist <socket-listener-gist_>`__ como archivo ZIP utilizando "
"el botón :guilabel:`Download ZIP`."

#: ../../howto/logging-cookbook.rst:814
msgid "Unzip the above files from the archive into a scratch directory."
msgstr ""
"Descomprima los archivos anteriores del archivo en un directorio de inicio."

#: ../../howto/logging-cookbook.rst:816
msgid ""
"In the scratch directory, run ``bash prepare.sh`` to get things ready. This "
"creates a :file:`run` subdirectory to contain Supervisor-related and log "
"files, and a :file:`venv` subdirectory to contain a virtual environment into "
"which ``bottle``, ``gunicorn`` and ``supervisor`` are installed."
msgstr ""
"En el directorio scratch, ejecute ``bash prepare.sh`` para preparar las "
"cosas. Esto crea un subdirectorio :file:`run` para contener los archivos "
"relacionados con el Supervisor y los archivos de registro, y un "
"subdirectorio :file:`venv` para contener un entorno virtual en el que se "
"instalan ``bottle``, ``gunicorn`` y ``supervisor``."

#: ../../howto/logging-cookbook.rst:821
msgid ""
"Run ``bash ensure_app.sh`` to ensure that Supervisor is running with the "
"above configuration."
msgstr ""
"Ejecute ``bash ensure_app.sh`` para asegurarse de que el Supervisor funciona "
"con la configuración anterior."

#: ../../howto/logging-cookbook.rst:824
msgid ""
"Run ``venv/bin/python client.py`` to exercise the web application, which "
"will lead to records being written to the log."
msgstr ""
"Ejecute ``venv/bin/python client.py`` para ejercitar la aplicación web, lo "
"que hará que se escriban registros en el log."

#: ../../howto/logging-cookbook.rst:827
msgid ""
"Inspect the log files in the :file:`run` subdirectory. You should see the "
"most recent log lines in files matching the pattern :file:`app.log*`. They "
"won't be in any particular order, since they have been handled concurrently "
"by different worker processes in a non-deterministic way."
msgstr ""
"Inspeccione los archivos de registro en el subdirectorio :file:`run`. "
"Debería ver las líneas de registro más recientes en archivos que coincidan "
"con el patrón :file:`app.log*`. No estarán en ningún orden en particular, ya "
"que han sido manejados concurrentemente por diferentes procesos de trabajo "
"de una manera no determinista."

#: ../../howto/logging-cookbook.rst:832
msgid ""
"You can shut down the listener and the web application by running ``venv/bin/"
"supervisorctl -c supervisor.conf shutdown``."
msgstr ""
"Puede cerrar el listener y la aplicación web ejecutando ``venv/bin/"
"supervisorctl -c supervisor.conf shutdown``."

#: ../../howto/logging-cookbook.rst:835
msgid ""
"You may need to tweak the configuration files in the unlikely event that the "
"configured ports clash with something else in your test environment."
msgstr ""
"Es posible que tenga que modificar los archivos de configuración en el "
"improbable caso de que los puertos configurados choquen con alguna otra cosa "
"en su entorno de pruebas."

#: ../../howto/logging-cookbook.rst:843
msgid "Adding contextual information to your logging output"
msgstr "Añadir información contextual a la salida de registro"

#: ../../howto/logging-cookbook.rst:845
msgid ""
"Sometimes you want logging output to contain contextual information in "
"addition to the parameters passed to the logging call. For example, in a "
"networked application, it may be desirable to log client-specific "
"information in the log (e.g. remote client's username, or IP address). "
"Although you could use the *extra* parameter to achieve this, it's not "
"always convenient to pass the information in this way. While it might be "
"tempting to create :class:`Logger` instances on a per-connection basis, this "
"is not a good idea because these instances are not garbage collected. While "
"this is not a problem in practice, when the number of :class:`Logger` "
"instances is dependent on the level of granularity you want to use in "
"logging an application, it could be hard to manage if the number of :class:"
"`Logger` instances becomes effectively unbounded."
msgstr ""
"A veces se desea que la salida de registro contenga información contextual "
"además de los parámetros pasados a la llamada de registro. Por ejemplo, en "
"una aplicación en red, puede ser deseable registrar información específica "
"del cliente en el registro (por ejemplo, el nombre de usuario del cliente "
"remoto, o la dirección IP). Aunque podría utilizar el parámetro *extra* para "
"conseguirlo, no siempre es conveniente pasar la información de esta forma. "
"Aunque puede ser tentador crear instancias de :class:`Logger` por conexión, "
"no es una buena idea porque estas instancias no se recogen de la basura. Si "
"bien esto no es un problema en la práctica, cuando el número de instancias :"
"class:`Logger` depende del nivel de granularidad que se desea utilizar en el "
"registro de una aplicación, podría ser difícil de gestionar si el número de "
"instancias :class:`Logger` se vuelve efectivamente ilimitado."

#: ../../howto/logging-cookbook.rst:860
msgid "Using LoggerAdapters to impart contextual information"
msgstr "Uso de LoggerAdapters para transmitir información contextual"

#: ../../howto/logging-cookbook.rst:862
msgid ""
"An easy way in which you can pass contextual information to be output along "
"with logging event information is to use the :class:`LoggerAdapter` class. "
"This class is designed to look like a :class:`Logger`, so that you can call :"
"meth:`debug`, :meth:`info`, :meth:`warning`, :meth:`error`, :meth:"
"`exception`, :meth:`critical` and :meth:`log`. These methods have the same "
"signatures as their counterparts in :class:`Logger`, so you can use the two "
"types of instances interchangeably."
msgstr ""
"Una forma sencilla de pasar información contextual a la salida junto con la "
"información de eventos de registro es utilizar la clase :class:"
"`LoggerAdapter`. Esta clase está diseñada para parecerse a :class:`Logger`, "
"de modo que puede llamar a :meth:`debug`, :meth:`info`, :meth:`warning`, :"
"meth:`error`, :meth:`exception`, :meth:`critical` y :meth:`log`. Estos "
"métodos tienen las mismas firmas que sus homólogos en :class:`Logger`, por "
"lo que puede utilizar los dos tipos de instancias indistintamente."

#: ../../howto/logging-cookbook.rst:870
msgid ""
"When you create an instance of :class:`LoggerAdapter`, you pass it a :class:"
"`Logger` instance and a dict-like object which contains your contextual "
"information. When you call one of the logging methods on an instance of :"
"class:`LoggerAdapter`, it delegates the call to the underlying instance of :"
"class:`Logger` passed to its constructor, and arranges to pass the "
"contextual information in the delegated call. Here's a snippet from the code "
"of :class:`LoggerAdapter`::"
msgstr ""
"Cuando creas una instancia de :class:`LoggerAdapter`, le pasas una instancia "
"de :class:`Logger` y un objeto tipo dict que contiene tu información "
"contextual. Cuando se llama a uno de los métodos de registro en una "
"instancia de :class:`LoggerAdapter`, se delega la llamada a la instancia "
"subyacente de :class:`Logger` pasada a su constructor, y se arregla para "
"pasar la información contextual en la llamada delegada. He aquí un fragmento "
"del código de :class:`LoggerAdapter`::"

#: ../../howto/logging-cookbook.rst:886
msgid ""
"The :meth:`~LoggerAdapter.process` method of :class:`LoggerAdapter` is where "
"the contextual information is added to the logging output. It's passed the "
"message and keyword arguments of the logging call, and it passes back "
"(potentially) modified versions of these to use in the call to the "
"underlying logger. The default implementation of this method leaves the "
"message alone, but inserts an 'extra' key in the keyword argument whose "
"value is the dict-like object passed to the constructor. Of course, if you "
"had passed an 'extra' keyword argument in the call to the adapter, it will "
"be silently overwritten."
msgstr ""
"El método :meth:`~LoggerAdapter.process` de :class:`LoggerAdapter` es donde "
"se añade la información contextual a la salida de registro. Se le pasan los "
"argumentos de mensaje y palabra clave de la llamada de registro, y devuelve "
"versiones (potencialmente) modificadas de éstos para usarlas en la llamada "
"al registrador subyacente. La implementación por defecto de este método deja "
"el mensaje como está, pero inserta una clave 'extra' en el argumento de la "
"palabra clave cuyo valor es el objeto tipo dict pasado al constructor. Por "
"supuesto, si has pasado un argumento de palabra clave 'extra' en la llamada "
"al adaptador, se sobrescribirá silenciosamente."

#: ../../howto/logging-cookbook.rst:895
msgid ""
"The advantage of using 'extra' is that the values in the dict-like object "
"are merged into the :class:`LogRecord` instance's __dict__, allowing you to "
"use customized strings with your :class:`Formatter` instances which know "
"about the keys of the dict-like object. If you need a different method, e.g. "
"if you want to prepend or append the contextual information to the message "
"string, you just need to subclass :class:`LoggerAdapter` and override :meth:"
"`~LoggerAdapter.process` to do what you need. Here is a simple example::"
msgstr ""
"La ventaja de usar 'extra' es que los valores del objeto dict-like se "
"fusionan en el __dict__ de la instancia :class:`LogRecord`, permitiendo usar "
"cadenas personalizadas con tus instancias :class:`Formatter` que conocen las "
"claves del objeto dict-like. Si necesita un método diferente, por ejemplo, "
"si se desea añadir :class:`LoggerAdapter`la información contextual a la "
"cadena de mensaje, sólo tiene que subdividir  y anular :meth:`~LoggerAdapter."
"process` para hacer lo que necesita. He aquí un ejemplo sencillo::"

#: ../../howto/logging-cookbook.rst:911
msgid "which you can use like this::"
msgstr "que puedes usar así::"

#: ../../howto/logging-cookbook.rst:916
msgid ""
"Then any events that you log to the adapter will have the value of "
"``some_conn_id`` prepended to the log messages."
msgstr ""
"Entonces, cualquier hecho que registre en el adaptador tendrá el valor de "
"``some_conn_id`` añadido a los mensajes de registro."

#: ../../howto/logging-cookbook.rst:920
msgid "Using objects other than dicts to pass contextual information"
msgstr ""
"Utilización de objetos distintos de los dicts para transmitir información "
"contextual"

#: ../../howto/logging-cookbook.rst:922
msgid ""
"You don't need to pass an actual dict to a :class:`LoggerAdapter` - you "
"could pass an instance of a class which implements ``__getitem__`` and "
"``__iter__`` so that it looks like a dict to logging. This would be useful "
"if you want to generate values dynamically (whereas the values in a dict "
"would be constant)."
msgstr ""
"No se necesita pasar un dict real a :class:`LoggerAdapter` - se puede pasar "
"una instancia de una clase que implemente ``__getitem__`` y ``__iter__`` "
"para que parezca un dict en el registro. Esto sería útil si se quiere "
"generar valores dinámicamente (mientras que los valores en un dict serían "
"constantes)."

#: ../../howto/logging-cookbook.rst:931
msgid "Using Filters to impart contextual information"
msgstr "Filtros para dar información contextual"

#: ../../howto/logging-cookbook.rst:933
msgid ""
"You can also add contextual information to log output using a user-defined :"
"class:`Filter`. ``Filter`` instances are allowed to modify the "
"``LogRecords`` passed to them, including adding additional attributes which "
"can then be output using a suitable format string, or if needed a custom :"
"class:`Formatter`."
msgstr ""
"También se puede añadir información contextual a la salida del registro "
"utilizando un :class:`Filter` definido por el usuario. Las instancias de "
"``Filter`` pueden modificar el ``LogRecords`` que se les pasa, incluyendo la "
"adición de atributos adicionales que luego pueden ser emitidos utilizando "
"una cadena de formato adecuada o, si es necesario, un :class:`Formatter` "
"personalizado."

#: ../../howto/logging-cookbook.rst:938
msgid ""
"For example in a web application, the request being processed (or at least, "
"the interesting parts of it) can be stored in a threadlocal (:class:"
"`threading.local`) variable, and then accessed from a ``Filter`` to add, "
"say, information from the request - say, the remote IP address and remote "
"user's username - to the ``LogRecord``, using the attribute names 'ip' and "
"'user' as in the ``LoggerAdapter`` example above. In that case, the same "
"format string can be used to get similar output to that shown above. Here's "
"an example script::"
msgstr ""
"Por ejemplo, en una aplicación web, la petición que está siendo procesada (o "
"al menos, las partes interesantes de la misma) se pueden almacenar en una "
"variable threadlocal (:class:`threading.local`), y luego accedida desde "
"``Filter`` para añadir, digamos, información de la petición - digamos, la "
"dirección IP remota y el nombre de usuario del usuario remoto - a "
"``LogRecord``, usando los nombres de atributo 'ip' y 'user' como en el "
"ejemplo ``LoggerAdapter`` anterior. En ese caso, se puede utilizar la misma "
"cadena de formato para obtener una salida similar a la mostrada "
"anteriormente. He aquí un script de ejemplo::"

#: ../../howto/logging-cookbook.rst:984
msgid "which, when run, produces something like:"
msgstr "que, cuando se ejecuta, produce algo como:"

#: ../../howto/logging-cookbook.rst:1002
msgid "Use of ``contextvars``"
msgstr "Uso de ``contextvars``"

#: ../../howto/logging-cookbook.rst:1004
msgid ""
"Since Python 3.7, the :mod:`contextvars` module has provided context-local "
"storage which works for both :mod:`threading` and :mod:`asyncio` processing "
"needs. This type of storage may thus be generally preferable to thread-"
"locals. The following example shows how, in a multi-threaded environment, "
"logs can populated with contextual information such as, for example, request "
"attributes handled by web applications."
msgstr ""
"Desde Python 3.7, el módulo :mod:`contextvars` ha proporcionado "
"almacenamiento local de contexto que funciona tanto para las necesidades de "
"procesamiento de :mod:`threading` como de :mod:`asyncio`. Por lo tanto, este "
"tipo de almacenamiento puede ser generalmente preferible a los thread-"
"locals. El siguiente ejemplo muestra cómo, en un entorno multihilo, los "
"registros pueden rellenarse con información contextual como, por ejemplo, "
"atributos de petición manejados por aplicaciones web."

#: ../../howto/logging-cookbook.rst:1010
msgid ""
"For the purposes of illustration, say that you have different web "
"applications, each independent of the other but running in the same Python "
"process and using a library common to them. How can each of these "
"applications have their own log, where all logging messages from the library "
"(and other request processing code) are directed to the appropriate "
"application's log file, while including in the log additional contextual "
"information such as client IP, HTTP request method and client username?"
msgstr ""
"A efectos ilustrativos, supongamos que tenemos diferentes aplicaciones web, "
"cada una independiente de la otra pero ejecutándose en el mismo proceso "
"Python y utilizando una librería común a todas ellas. ¿Cómo puede cada una "
"de estas aplicaciones tener su propio registro, donde todos los mensajes de "
"registro de la biblioteca (y otro código de procesamiento de peticiones) se "
"dirijan al archivo de registro de la aplicación apropiada, incluyendo al "
"mismo tiempo en el registro información contextual adicional como la IP del "
"cliente, el método de petición HTTP y el nombre de usuario del cliente?"

#: ../../howto/logging-cookbook.rst:1017
msgid "Let's assume that the library can be simulated by the following code:"
msgstr ""
"Supongamos que la biblioteca puede simularse mediante el siguiente código:"

#: ../../howto/logging-cookbook.rst:1033
msgid ""
"We can simulate the multiple web applications by means of two simple "
"classes, ``Request`` and ``WebApp``. These simulate how real threaded web "
"applications work - each request is handled by a thread:"
msgstr ""
"Podemos simular las aplicaciones web múltiples mediante dos clases "
"sencillas, ``Request`` y ``WebApp``. Éstas simulan cómo funcionan las "
"aplicaciones web con hilos reales: cada petición es gestionada por un hilo:"

#: ../../howto/logging-cookbook.rst:1177
msgid ""
"If you run the above, you should find that roughly half the requests go "
"into :file:`app1.log` and the rest into :file:`app2.log`, and the all the "
"requests are logged to :file:`app.log`. Each webapp-specific log will "
"contain only log entries for only that webapp, and the request information "
"will be displayed consistently in the log (i.e. the information in each "
"dummy request will always appear together in a log line). This is "
"illustrated by the following shell output:"
msgstr ""
"Si ejecuta lo anterior, debería encontrar que aproximadamente la mitad de "
"las peticiones van a :file:`app1.log` y el resto a :file:`app2.log`, y que "
"todas las peticiones se registran en :file:`app.log`. Cada registro "
"específico de la aplicación web contendrá sólo entradas de registro para esa "
"aplicación web, y la información de la petición se mostrará de forma "
"consistente en el registro (es decir, la información de cada petición "
"ficticia aparecerá siempre junta en una línea de registro). Esto se ilustra "
"con la siguiente salida del shell:"

#: ../../howto/logging-cookbook.rst:1224
msgid "Imparting contextual information in handlers"
msgstr "Información contextual en los manipuladores"

#: ../../howto/logging-cookbook.rst:1226
msgid ""
"Each :class:`~Handler` has its own chain of filters. If you want to add "
"contextual information to a :class:`LogRecord` without leaking it to other "
"handlers, you can use a filter that returns a new :class:`~LogRecord` "
"instead of modifying it in-place, as shown in the following script::"
msgstr ""
"Cada :class:`~Handler` tiene su propia cadena de filtros. Si desea añadir "
"información contextual a un :class:`LogRecord` sin filtrarla a otros "
"manejadores, puede utilizar un filtro que devuelva un nuevo :class:"
"`~LogRecord` en lugar de modificarlo in situ, como se muestra en el "
"siguiente script::"

#: ../../howto/logging-cookbook.rst:1253
msgid "Logging to a single file from multiple processes"
msgstr "Registro en un único archivo desde varios procesos"

#: ../../howto/logging-cookbook.rst:1255
msgid ""
"Although logging is thread-safe, and logging to a single file from multiple "
"threads in a single process *is* supported, logging to a single file from "
"*multiple processes* is *not* supported, because there is no standard way to "
"serialize access to a single file across multiple processes in Python. If "
"you need to log to a single file from multiple processes, one way of doing "
"this is to have all the processes log to a :class:`~handlers.SocketHandler`, "
"and have a separate process which implements a socket server which reads "
"from the socket and logs to file. (If you prefer, you can dedicate one "
"thread in one of the existing processes to perform this function.) :ref:"
"`This section <network-logging>` documents this approach in more detail and "
"includes a working socket receiver which can be used as a starting point for "
"you to adapt in your own applications."
msgstr ""
"Aunque el registro es seguro para hilos, y el registro en un único fichero "
"desde múltiples hilos en un único proceso *está* soportado, el registro en "
"un único fichero desde *múltiples procesos* *no está* soportado, porque no "
"hay una forma estándar de serializar el acceso a un único fichero a través "
"de múltiples procesos en Python. Si necesitas registrar en un único fichero "
"desde múltiples procesos, una forma de hacerlo es hacer que todos los "
"procesos registren en :class:`~handlers.SocketHandler`, y tener un proceso "
"separado que implemente un servidor de socket que lea desde el socket y "
"registre en el fichero. (Si lo prefiere, puede dedicar un hilo en uno de los "
"procesos existentes para realizar esta función). :ref:`Esta sección <network-"
"logging>` documenta este enfoque con más detalle e incluye un receptor de "
"sockets que puede ser utilizado como punto de partida para que lo adaptes a "
"tus propias aplicaciones."

#: ../../howto/logging-cookbook.rst:1268
msgid ""
"You could also write your own handler which uses the :class:"
"`~multiprocessing.Lock` class from the :mod:`multiprocessing` module to "
"serialize access to the file from your processes. The existing :class:"
"`FileHandler` and subclasses do not make use of :mod:`multiprocessing` at "
"present, though they may do so in the future. Note that at present, the :mod:"
"`multiprocessing` module does not provide working lock functionality on all "
"platforms (see https://bugs.python.org/issue3770)."
msgstr ""
"También puedes escribir tu propio manejador que utilice la clase :class:"
"`~multiprocessing.Lock` del módulo :mod:`multiprocessing` para serializar el "
"acceso al fichero desde tus procesos. Las clases :class:`FileHandler` y "
"subclases existentes no hacen uso de :mod:`multiprocessing` en la "
"actualidad, aunque podrían hacerlo en el futuro. Tenga en cuenta que en la "
"actualidad, el módulo :mod:`multiprocessing` no proporciona funcionalidad de "
"bloqueo de trabajo en todas las plataformas (ver https://bugs.python.org/"
"issue3770)."

#: ../../howto/logging-cookbook.rst:1278
msgid ""
"Alternatively, you can use a ``Queue`` and a :class:`QueueHandler` to send "
"all logging events to one of the processes in your multi-process "
"application. The following example script demonstrates how you can do this; "
"in the example a separate listener process listens for events sent by other "
"processes and logs them according to its own logging configuration. Although "
"the example only demonstrates one way of doing it (for example, you may want "
"to use a listener thread rather than a separate listener process -- the "
"implementation would be analogous) it does allow for completely different "
"logging configurations for the listener and the other processes in your "
"application, and can be used as the basis for code meeting your own specific "
"requirements::"
msgstr ""
"Alternativamente, se puede utilizar ``Queue`` y :class:`QueueHandler` para "
"enviar todos los sucesos de registro a uno de los procesos de su aplicación "
"multiproceso. El siguiente script de ejemplo demuestra cómo se puede hacer "
"esto; en el ejemplo un proceso oyente separado escucha los eventos enviados "
"por otros procesos y los registra de acuerdo a su propia configuración de "
"registro. Aunque el ejemplo sólo muestra una forma de hacerlo (por ejemplo, "
"se puede querer usar un hilo de escucha en lugar de un proceso de escucha "
"separado -- la implementación sería análoga) permite configuraciones de "
"registro completamente diferentes para el proceso de escucha y los otros "
"procesos de la aplicación, y puede usarse como base para código que cumpla "
"los propios requisitos específicos::"

#: ../../howto/logging-cookbook.rst:1394
msgid ""
"A variant of the above script keeps the logging in the main process, in a "
"separate thread::"
msgstr ""
"Una variante del anterior script mantiene el registro en el proceso "
"principal, en un hilo separado::"

#: ../../howto/logging-cookbook.rst:1489
msgid ""
"This variant shows how you can e.g. apply configuration for particular "
"loggers - e.g. the ``foo`` logger has a special handler which stores all "
"events in the ``foo`` subsystem in a file ``mplog-foo.log``. This will be "
"used by the logging machinery in the main process (even though the logging "
"events are generated in the worker processes) to direct the messages to the "
"appropriate destinations."
msgstr ""
"Esta variante muestra cómo se puede, por ejemplo, aplicar la configuración "
"para determinados registradores - por ejemplo, el registrador ``foo`` tiene "
"un manejador especial que almacena todos los eventos en el subsistema "
"``foo`` en un archivo ``mplog-foo.log``. Esto será utilizado por la "
"maquinaria de registro en el proceso principal (aunque los eventos de "
"registro se generen en los procesos de los trabajadores) para dirigir los "
"mensajes a los destinos apropiados."

#: ../../howto/logging-cookbook.rst:1496
msgid "Using concurrent.futures.ProcessPoolExecutor"
msgstr "Using concurrent.futures.ProcessPoolExecutor"

#: ../../howto/logging-cookbook.rst:1498
msgid ""
"If you want to use :class:`concurrent.futures.ProcessPoolExecutor` to start "
"your worker processes, you need to create the queue slightly differently. "
"Instead of"
msgstr ""
"Si desea utilizar :class:`concurrent.futures.ProcessPoolExecutor` para "
"iniciar sus procesos de trabajo, deberá crear la cola de forma ligeramente "
"diferente. En lugar de"

#: ../../howto/logging-cookbook.rst:1506
msgid "you should use"
msgstr "debe utilizar"

#: ../../howto/logging-cookbook.rst:1512
msgid "and you can then replace the worker creation from this::"
msgstr "y luego puede reemplazar la creación elaborada de este::"

#: ../../howto/logging-cookbook.rst:1523
msgid "to this (remembering to first import :mod:`concurrent.futures`)::"
msgstr "a esto (recordar importar primero :mod:`concurrent.futures`)::"

#: ../../howto/logging-cookbook.rst:1530
msgid "Deploying Web applications using Gunicorn and uWSGI"
msgstr "Despliegue de aplicaciones web con Gunicorn y uWSGI"

#: ../../howto/logging-cookbook.rst:1532
msgid ""
"When deploying Web applications using `Gunicorn <https://gunicorn.org/>`_ or "
"`uWSGI <https://uwsgi-docs.readthedocs.io/en/latest/>`_ (or similar), "
"multiple worker processes are created to handle client requests. In such "
"environments, avoid creating file-based handlers directly in your web "
"application. Instead, use a :class:`SocketHandler` to log from the web "
"application to a listener in a separate process. This can be set up using a "
"process management tool such as Supervisor - see `Running a logging socket "
"listener in production`_ for more details."
msgstr ""
"Cuando se despliegan aplicaciones web utilizando `Gunicorn <https://gunicorn."
"org/>`_ o `uWSGI <https://uwsgi-docs.readthedocs.io/en/latest/>`_ (o "
"similares), se crean múltiples procesos de trabajo para gestionar las "
"peticiones de los clientes. En tales entornos, eviar crear manejadores "
"basados en archivos directamente en la aplicación web. En su lugar, utilizar "
"un :class:`SocketHandler` para registrar desde la aplicación web a un "
"listener en un proceso separado. Esto se puede configurar utilizando una "
"herramienta de gestión de procesos como Supervisor - ver `Running a logging "
"socket listener in production`_ para más detalles."

#: ../../howto/logging-cookbook.rst:1542
msgid "Using file rotation"
msgstr "Rotación de archivos"

#: ../../howto/logging-cookbook.rst:1547
msgid ""
"Sometimes you want to let a log file grow to a certain size, then open a new "
"file and log to that. You may want to keep a certain number of these files, "
"and when that many files have been created, rotate the files so that the "
"number of files and the size of the files both remain bounded. For this "
"usage pattern, the logging package provides a :class:`RotatingFileHandler`::"
msgstr ""
"A veces se quiere dejar que un archivo de registro crezca hasta un cierto "
"tamaño, y luego abrir un nuevo archivo y registrar en él. Es posible que se "
"desee mantener un cierto número de estos archivos, y cuando ese número de "
"archivos se han creado, rotar los archivos para que el número de archivos y "
"el tamaño de los archivos estén limitados. Para este patrón de uso, el "
"paquete de registro proporciona un :class:`RotatingFileHandler`::"

#: ../../howto/logging-cookbook.rst:1579
msgid ""
"The result should be 6 separate files, each with part of the log history for "
"the application:"
msgstr ""
"El resultado deberían ser 6 archivos separados, cada uno con parte del "
"historial de registro de la aplicación:"

#: ../../howto/logging-cookbook.rst:1591
msgid ""
"The most current file is always :file:`logging_rotatingfile_example.out`, "
"and each time it reaches the size limit it is renamed with the suffix "
"``.1``. Each of the existing backup files is renamed to increment the suffix "
"(``.1`` becomes ``.2``, etc.)  and the ``.6`` file is erased."
msgstr ""
"El archivo más actual es siempre :file:`logging_rotatingfile_example.out`, y "
"cada vez que alcanza el límite de tamaño se renombra con el sufijo ``.1``. "
"Cada uno de los archivos de copia de seguridad existentes se renombra para "
"incrementar el sufijo (``.1`` se convierte en ``.2``, etc.) y el archivo "
"``.6`` se borra."

#: ../../howto/logging-cookbook.rst:1596
msgid ""
"Obviously this example sets the log length much too small as an extreme "
"example.  You would want to set *maxBytes* to an appropriate value."
msgstr ""
"Obviamente, este ejemplo establece la longitud del registro demasiado "
"pequeño como un ejemplo extremo.  Usted querría fijar *maxBytes* a un valor "
"apropiado."

#: ../../howto/logging-cookbook.rst:1604
msgid "Use of alternative formatting styles"
msgstr "Uso de estilos de formato alternativos"

#: ../../howto/logging-cookbook.rst:1606
msgid ""
"When logging was added to the Python standard library, the only way of "
"formatting messages with variable content was to use the %-formatting "
"method. Since then, Python has gained two new formatting approaches: :class:"
"`string.Template` (added in Python 2.4) and :meth:`str.format` (added in "
"Python 2.6)."
msgstr ""
"Cuando se añadió el registro a la biblioteca estándar de Python, la única "
"forma de formatear mensajes con contenido variable era utilizar el método %-"
"formatting. Desde entonces, Python ha adquirido dos nuevos métodos de "
"formateo: :class:`string.Template` (añadido en Python 2.4) y :meth:`str."
"format` (añadido en Python 2.6)."

#: ../../howto/logging-cookbook.rst:1612
msgid ""
"Logging (as of 3.2) provides improved support for these two additional "
"formatting styles. The :class:`Formatter` class been enhanced to take an "
"additional, optional keyword parameter named ``style``. This defaults to "
"``'%'``, but other possible values are ``'{'`` and ``'$'``, which correspond "
"to the other two formatting styles. Backwards compatibility is maintained by "
"default (as you would expect), but by explicitly specifying a style "
"parameter, you get the ability to specify format strings which work with :"
"meth:`str.format` or :class:`string.Template`. Here's an example console "
"session to show the possibilities:"
msgstr ""
"El registro (a partir de 3.2) proporciona soporte mejorado para estos dos "
"estilos de formato adicionales. La clase :class:`Formatter` se ha mejorado "
"para tomar un parámetro de palabra clave adicional y opcional denominado "
"``style``. Por defecto es ``'%'``, pero otros valores posibles son ``'{'`` y "
"``'$'``, que corresponden a los otros dos estilos de formato. La "
"compatibilidad hacia atrás se mantiene por defecto (como era de esperar), "
"pero especificando explícitamente un parámetro de estilo, se obtiene la "
"capacidad de especificar cadenas de formato que funcionan con :meth:`str."
"format` o :class:`string.Template`. He aquí un ejemplo de sesión de consola "
"para mostrar las posibilidades:"

#: ../../howto/logging-cookbook.rst:1646
msgid ""
"Note that the formatting of logging messages for final output to logs is "
"completely independent of how an individual logging message is constructed. "
"That can still use %-formatting, as shown here::"
msgstr ""
"Tenga en cuenta que el formato de los mensajes de registro para la salida "
"final a los registros es completamente independiente de cómo se construye un "
"mensaje de registro individual. Que todavía puede utilizar %-formatting, "
"como se muestra aquí::"

#: ../../howto/logging-cookbook.rst:1654
msgid ""
"Logging calls (``logger.debug()``, ``logger.info()`` etc.) only take "
"positional parameters for the actual logging message itself, with keyword "
"parameters used only for determining options for how to handle the actual "
"logging call (e.g. the ``exc_info`` keyword parameter to indicate that "
"traceback information should be logged, or the ``extra`` keyword parameter "
"to indicate additional contextual information to be added to the log). So "
"you cannot directly make logging calls using :meth:`str.format` or :class:"
"`string.Template` syntax, because internally the logging package uses %-"
"formatting to merge the format string and the variable arguments. There "
"would be no changing this while preserving backward compatibility, since all "
"logging calls which are out there in existing code will be using %-format "
"strings."
msgstr ""
"Las llamadas de registro (``logger.debug()``, ``logger.info()`` etc.) sólo "
"toman parámetros posicionales para el mensaje de registro en sí, con "
"parámetros de palabra clave utilizados sólo para determinar las opciones de "
"cómo manejar la llamada de registro real (por ejemplo, el parámetro de "
"palabra clave ``exc_info`` para indicar que la información de rastreo debe "
"ser registrada, o el parámetro de palabra clave ``extra`` para indicar "
"información contextual adicional que se añadirá al registro). Por lo tanto, "
"no se pueden realizar directamente llamadas de registro utilizando la "
"sintaxis :meth:`str.format` o :class:`string.Template`, porque internamente "
"el paquete de registro utiliza %-fomatting para fusionar la cadena de "
"formato y los argumentos variables. No habría forma de cambiar esto "
"preservando la compatibilidad con versiones anteriores, ya que todas las "
"llamadas de registro que existen en el código actual utilizarán cadenas %-"
"format."

#: ../../howto/logging-cookbook.rst:1667
msgid ""
"There is, however, a way that you can use {}- and $- formatting to construct "
"your individual log messages. Recall that for a message you can use an "
"arbitrary object as a message format string, and that the logging package "
"will call ``str()`` on that object to get the actual format string. Consider "
"the following two classes::"
msgstr ""
"Existe, sin embargo, una forma de utilizar los formatos {}- y $- para "
"construir mensajes de registro individuales. Recuerde que para un mensaje "
"puede utilizar un objeto arbitrario como cadena de formato de mensaje, y que "
"el paquete de registro llamará a ``str()`` sobre ese objeto para obtener la "
"cadena de formato real. Considere las dos clases siguientes::"

#: ../../howto/logging-cookbook.rst:1691
msgid ""
"Either of these can be used in place of a format string, to allow {}- or $-"
"formatting to be used to build the actual \"message\" part which appears in "
"the formatted log output in place of \"%(message)s\" or \"{message}\" or "
"\"$message\". It's a little unwieldy to use the class names whenever you "
"want to log something, but it's quite palatable if you use an alias such as "
"__ (double underscore --- not to be confused with _, the single underscore "
"used as a synonym/alias for :func:`gettext.gettext` or its brethren)."
msgstr ""
"Cualquiera de estos se puede utilizar en lugar de una cadena de formato, "
"para permitir {}- o $-formato que se utilizará para construir la parte real "
"\"mensaje\" que aparece en la salida de registro con formato en lugar de "
"\"%(message)s\" o \"{message}\" o \"$message\". Es un poco engorroso "
"utilizar los nombres de clase cada vez que se quiere registrar algo, pero es "
"bastante agradable si se utiliza un alias como __ (guión bajo doble --- no "
"confundir con _, el guión bajo simple utilizado como sinónimo/alias para :"
"func:`gettext.gettext` o sus hermanos)."

#: ../../howto/logging-cookbook.rst:1699
msgid ""
"The above classes are not included in Python, though they're easy enough to "
"copy and paste into your own code. They can be used as follows (assuming "
"that they're declared in a module called ``wherever``):"
msgstr ""
"Las clases anteriores no están incluidas en Python, aunque son bastante "
"fáciles de copiar y pegar en tu propio código. Se pueden utilizar de la "
"siguiente manera (suponiendo que se declaran en un módulo llamado "
"``wherever``):"

#: ../../howto/logging-cookbook.rst:1721
msgid ""
"While the above examples use ``print()`` to show how the formatting works, "
"you would of course use ``logger.debug()`` or similar to actually log using "
"this approach."
msgstr ""
"Aunque los ejemplos anteriores utilizan ``print()`` para mostrar cómo "
"funciona el formateo, por supuesto utilizarías ``logger.debug()`` o similar "
"para registrar realmente utilizando este enfoque."

#: ../../howto/logging-cookbook.rst:1725
msgid ""
"One thing to note is that you pay no significant performance penalty with "
"this approach: the actual formatting happens not when you make the logging "
"call, but when (and if) the logged message is actually about to be output to "
"a log by a handler. So the only slightly unusual thing which might trip you "
"up is that the parentheses go around the format string and the arguments, "
"not just the format string. That's because the __ notation is just syntax "
"sugar for a constructor call to one of the :samp:`{XXX}Message` classes."
msgstr ""
"Una cosa a tener en cuenta es que no se paga ninguna penalización de "
"rendimiento significativa con este enfoque: el formateo real no ocurre "
"cuando se hace la llamada de registro, sino cuando (y si) el mensaje "
"registrado está a punto de ser enviado a un registro por un manejador. La "
"única cosa un poco inusual que podría confundirte es que los paréntesis "
"rodean la cadena de formato y los argumentos, no sólo la cadena de formato. "
"Esto se debe a que la notación __ no es más que azúcar sintáctico para una "
"llamada al constructor de una de las clases de :samp:`{XXX}Message`."

#: ../../howto/logging-cookbook.rst:1733
msgid ""
"If you prefer, you can use a :class:`LoggerAdapter` to achieve a similar "
"effect to the above, as in the following example::"
msgstr ""
"Si lo prefiere, puede utilizar :class:`LoggerAdapter` para conseguir un "
"efecto similar al anterior, como en el siguiente ejemplo::"

#: ../../howto/logging-cookbook.rst:1762
msgid ""
"The above script should log the message ``Hello, world!`` when run with "
"Python 3.8 or later."
msgstr ""
"El script anterior debería registrar el mensaje ``Hello, world!`` cuando se "
"ejecuta con Python 3.8 o posterior."

#: ../../howto/logging-cookbook.rst:1771
msgid "Customizing ``LogRecord``"
msgstr "Personalización ``LogRecord``"

#: ../../howto/logging-cookbook.rst:1773
msgid ""
"Every logging event is represented by a :class:`LogRecord` instance. When an "
"event is logged and not filtered out by a logger's level, a :class:"
"`LogRecord` is created, populated with information about the event and then "
"passed to the handlers for that logger (and its ancestors, up to and "
"including the logger where further propagation up the hierarchy is "
"disabled). Before Python 3.2, there were only two places where this creation "
"was done:"
msgstr ""
"Cada acto de registro está representado por una instancia de :class:"
"`LogRecord`. Cuando se registra un hecho y no se filtra por el nivel de un "
"registrador, se crea un :class:`LogRecord`, se rellena con información sobre "
"el mismo y se pasa a los manejadores para ese registrador (y sus ancestros, "
"hasta e incluyendo el registrador donde la propagación hacia arriba en la "
"jerarquía está deshabilitada). Antes de Python 3.2, sólo había dos lugares "
"donde se realizaba esta creación:"

#: ../../howto/logging-cookbook.rst:1780
msgid ""
":meth:`Logger.makeRecord`, which is called in the normal process of logging "
"an event. This invoked :class:`LogRecord` directly to create an instance."
msgstr ""
":meth:`Logger.makeRecord`que se llama en el proceso normal de registro de un "
"evento. Esto invoca :class:`LogRecord` directamente para crear una instancia."

#: ../../howto/logging-cookbook.rst:1783
msgid ""
":func:`makeLogRecord`, which is called with a dictionary containing "
"attributes to be added to the LogRecord. This is typically invoked when a "
"suitable dictionary has been received over the network (e.g. in pickle form "
"via a :class:`~handlers.SocketHandler`, or in JSON form via an :class:"
"`~handlers.HTTPHandler`)."
msgstr ""
":func:`makeLogRecord`que se invoca con un diccionario que contiene atributos "
"que deben añadirse al LogRecord. Normalmente se invoca cuando se ha recibido "
"un diccionario adecuado a través de la red (por ejemplo, en forma de pickle "
"a través de :class:`~handlers.SocketHandler`, o en forma de JSON a través "
"de :class:`~handlers.HTTPHandler`)."

#: ../../howto/logging-cookbook.rst:1789
msgid ""
"This has usually meant that if you need to do anything special with a :class:"
"`LogRecord`, you've had to do one of the following."
msgstr ""
"Por lo general, esto ha significado que, si se necesita hacer algo especial "
"con un :class:`LogRecord`, se ha tenido que hacer una de las siguientes "
"cosas."

#: ../../howto/logging-cookbook.rst:1792
msgid ""
"Create your own :class:`Logger` subclass, which overrides :meth:`Logger."
"makeRecord`, and set it using :func:`~logging.setLoggerClass` before any "
"loggers that you care about are instantiated."
msgstr ""
"Cree su propia subclase :class:`Logger`, que sobrescribe :meth:`Logger."
"makeRecord`, y configúrela utilizando :func:`~logging.setLoggerClass` antes "
"de instanciar cualquier registrador que le interese."

#: ../../howto/logging-cookbook.rst:1795
msgid ""
"Add a :class:`Filter` to a logger or handler, which does the necessary "
"special manipulation you need when its :meth:`~Filter.filter` method is "
"called."
msgstr ""
"Añade un :class:`Filter` a un registrador o manejador, que realiza la "
"manipulación especial necesaria cuando se llama a su método :meth:`~Filter."
"filter`."

#: ../../howto/logging-cookbook.rst:1799
msgid ""
"The first approach would be a little unwieldy in the scenario where (say) "
"several different libraries wanted to do different things. Each would "
"attempt to set its own :class:`Logger` subclass, and the one which did this "
"last would win."
msgstr ""
"El primer enfoque sería un poco difícil de manejar en el caso de que "
"(digamos) varias bibliotecas diferentes quisieran hacer cosas distintas. "
"Cada una intentaría establecer su propia subclase :class:`Logger`, y ganaría "
"la que lo hiciera en último lugar."

#: ../../howto/logging-cookbook.rst:1804
msgid ""
"The second approach works reasonably well for many cases, but does not allow "
"you to e.g. use a specialized subclass of :class:`LogRecord`. Library "
"developers can set a suitable filter on their loggers, but they would have "
"to remember to do this every time they introduced a new logger (which they "
"would do simply by adding new packages or modules and doing ::"
msgstr ""
"El segundo enfoque funciona razonablemente bien para muchos casos, pero no "
"permite, por ejemplo, utilizar una subclase especializada de :class:"
"`LogRecord`. Los desarrolladores de bibliotecas pueden establecer un filtro "
"adecuado en sus registradores, pero tendrían que acordarse de hacerlo cada "
"vez que introdujeran un nuevo registrador (lo que harían simplemente "
"añadiendo nuevos paquetes o módulos y haciendo ::"

#: ../../howto/logging-cookbook.rst:1812
msgid ""
"at module level). It's probably one too many things to think about. "
"Developers could also add the filter to a :class:`~logging.NullHandler` "
"attached to their top-level logger, but this would not be invoked if an "
"application developer attached a handler to a lower-level library logger --- "
"so output from that handler would not reflect the intentions of the library "
"developer."
msgstr ""
"a nivel de módulo). Es probablemente una de las demasiadas cosas en las que "
"pensar. Los desarrolladores también podrían añadir el filtro a un :class:"
"`~logging.NullHandler` adjunto a su registrador de nivel superior, pero esto "
"no se invocaría si un desarrollador de aplicaciones adjuntara un manejador a "
"un registrador de biblioteca de nivel inferior --- por lo que la salida de "
"ese manejador no reflejaría las intenciones del desarrollador de la "
"biblioteca."

#: ../../howto/logging-cookbook.rst:1818
msgid ""
"In Python 3.2 and later, :class:`~logging.LogRecord` creation is done "
"through a factory, which you can specify. The factory is just a callable you "
"can set with :func:`~logging.setLogRecordFactory`, and interrogate with :"
"func:`~logging.getLogRecordFactory`. The factory is invoked with the same "
"signature as the :class:`~logging.LogRecord` constructor, as :class:"
"`LogRecord` is the default setting for the factory."
msgstr ""
"En Python 3.2 y posteriores, la creación de :class:`~logging.LogRecord` se "
"realiza a través de una fábrica, que puedes especificar. La fábrica es sólo "
"una llamada que puedes establecer con :func:`~logging.setLogRecordFactory`, "
"e interrogar con :func:`~logging.getLogRecordFactory`. La fábrica se invoca "
"con la misma firma que el constructor :class:`~logging.LogRecord`, ya que :"
"class:`LogRecord` es la configuración por defecto de la fábrica."

#: ../../howto/logging-cookbook.rst:1825
msgid ""
"This approach allows a custom factory to control all aspects of LogRecord "
"creation. For example, you could return a subclass, or just add some "
"additional attributes to the record once created, using a pattern similar to "
"this::"
msgstr ""
"Este enfoque permite que una fábrica personalizada controle todos los "
"aspectos de la creación de LogRecord. Por ejemplo, podría devolver una "
"subclase, o simplemente añadir algunos atributos adicionales al registro una "
"vez creado, utilizando un patrón similar a este::"

#: ../../howto/logging-cookbook.rst:1838
msgid ""
"This pattern allows different libraries to chain factories together, and as "
"long as they don't overwrite each other's attributes or unintentionally "
"overwrite the attributes provided as standard, there should be no surprises. "
"However, it should be borne in mind that each link in the chain adds run-"
"time overhead to all logging operations, and the technique should only be "
"used when the use of a :class:`Filter` does not provide the desired result."
msgstr ""
"Este patrón permite a diferentes bibliotecas encadenar fábricas, y mientras "
"no sobrescriban los atributos de las demás o sobrescriban involuntariamente "
"los atributos proporcionados como estándar, no debería haber sorpresas. Sin "
"embargo, debe tenerse en cuenta que cada eslabón de la cadena añade "
"sobrecarga en tiempo de ejecución a todas las operaciones de registro, y la "
"técnica sólo debe utilizarse cuando el uso de :class:`Filter` no proporcione "
"el resultado deseado."

#: ../../howto/logging-cookbook.rst:1850
msgid "Subclassing QueueHandler and QueueListener- a ZeroMQ example"
msgstr ""
"Subclasificación de QueueHandler y QueueListener - un ejemplo de ZeroMQ"

#: ../../howto/logging-cookbook.rst:1853 ../../howto/logging-cookbook.rst:1985
msgid "Subclass ``QueueHandler``"
msgstr "Subclase ``QueueHandler``"

#: ../../howto/logging-cookbook.rst:1855
msgid ""
"You can use a :class:`QueueHandler` subclass to send messages to other kinds "
"of queues, for example a ZeroMQ 'publish' socket. In the example below,the "
"socket is created separately and passed to the handler (as its 'queue')::"
msgstr ""
"Puede utilizar una subclase de :class:`QueueHandler` para enviar mensajes a "
"otros tipos de colas, por ejemplo un socket 'publish' de ZeroMQ. En el "
"siguiente ejemplo,el socket se crea por separado y se pasa al manejador "
"(como su 'cola')::"

#: ../../howto/logging-cookbook.rst:1874
msgid ""
"Of course there are other ways of organizing this, for example passing in "
"the data needed by the handler to create the socket::"
msgstr ""
"Por supuesto hay otras formas de organizar esto, por ejemplo pasando los "
"datos que necesita el handler para crear el socket::"

#: ../../howto/logging-cookbook.rst:1892 ../../howto/logging-cookbook.rst:1922
msgid "Subclass ``QueueListener``"
msgstr "Subclase ``QueueListener``"

#: ../../howto/logging-cookbook.rst:1894
msgid ""
"You can also subclass :class:`QueueListener` to get messages from other "
"kinds of queues, for example a ZeroMQ 'subscribe' socket. Here's an example::"
msgstr ""
"También puedes subclasificar :class:`QueueListener` para obtener mensajes de "
"otros tipos de colas, por ejemplo un socket 'subscribe' de ZeroMQ. He aquí "
"un ejemplo::"

#: ../../howto/logging-cookbook.rst:1912
msgid "Subclassing QueueHandler and QueueListener- a ``pynng`` example"
msgstr "Subclassing QueueHandler and QueueListener- un ejemplo ``pynng`` "

#: ../../howto/logging-cookbook.rst:1914
msgid ""
"In a similar way to the above section, we can implement a listener and "
"handler using `pynng <https://pypi.org/project/pynng/>`_, which is a Python "
"binding to `NNG <https://nng.nanomsg.org/>`_, billed as a spiritual "
"successor to ZeroMQ. The following snippets illustrate -- you can test them "
"in an environment which has ``pynng`` installed. Juat for variety, we "
"present the listener first."
msgstr ""

#: ../../howto/logging-cookbook.rst:2034
msgid "You can run the above two snippets in separate command shells."
msgstr ""

#: ../../howto/logging-cookbook.rst:2038
msgid "An example dictionary-based configuration"
msgstr "Ejemplo de configuración basada en diccionarios"

#: ../../howto/logging-cookbook.rst:2040
msgid ""
"Below is an example of a logging configuration dictionary - it's taken from "
"the `documentation on the Django project <https://docs.djangoproject.com/en/"
"stable/topics/logging/#configuring-logging>`_. This dictionary is passed to :"
"func:`~config.dictConfig` to put the configuration into effect::"
msgstr ""
"A continuación se muestra un ejemplo de un diccionario de configuración de "
"registro - está tomado de la `documentación sobre el proyecto Django "
"<https://docs.djangoproject.com/en/stable/topics/logging/#configuring-"
"logging>`_. Este diccionario se pasa a :func:`~config.dictConfig` para poner "
"la configuración en efecto::"

#: ../../howto/logging-cookbook.rst:2093
msgid ""
"For more information about this configuration, you can see the `relevant "
"section <https://docs.djangoproject.com/en/stable/topics/logging/"
"#configuring-logging>`_ of the Django documentation."
msgstr ""
"Para más información sobre esta configuración, puedes consultar la `sección "
"relevante <https://docs.djangoproject.com/en/stable/topics/logging/"
"#configuring-logging>`_ de la documentación de Django."

#: ../../howto/logging-cookbook.rst:2100
msgid "Using a rotator and namer to customize log rotation processing"
msgstr ""
"Uso de un rotador y un namer para personalizar el procesamiento de la "
"rotación de registros"

#: ../../howto/logging-cookbook.rst:2102
msgid ""
"An example of how you can define a namer and rotator is given in the "
"following runnable script, which shows gzip compression of the log file::"
msgstr ""
"Un ejemplo de cómo puede definir un namer y un rotator se da en el siguiente "
"script ejecutable, que muestra la compresión gzip del archivo de registro::"

#: ../../howto/logging-cookbook.rst:2133
msgid ""
"After running this, you will see six new files, five of which are compressed:"
msgstr ""
"Después de ejecutar esto, verá seis nuevos archivos, cinco de los cuales "
"están comprimidos:"

#: ../../howto/logging-cookbook.rst:2146
msgid "A more elaborate multiprocessing example"
msgstr "Un ejemplo más elaborado de multiproceso"

#: ../../howto/logging-cookbook.rst:2148
msgid ""
"The following working example shows how logging can be used with "
"multiprocessing using configuration files. The configurations are fairly "
"simple, but serve to illustrate how more complex ones could be implemented "
"in a real multiprocessing scenario."
msgstr ""
"El siguiente ejemplo de trabajo muestra cómo se puede utilizar el registro "
"con multiproceso utilizando archivos de configuración. Las configuraciones "
"son bastante sencillas, pero sirven para ilustrar cómo podrían implementarse "
"otras más complejas en un escenario real de multiproco."

#: ../../howto/logging-cookbook.rst:2153
msgid ""
"In the example, the main process spawns a listener process and some worker "
"processes. Each of the main process, the listener and the workers have three "
"separate configurations (the workers all share the same configuration). We "
"can see logging in the main process, how the workers log to a QueueHandler "
"and how the listener implements a QueueListener and a more complex logging "
"configuration, and arranges to dispatch events received via the queue to the "
"handlers specified in the configuration. Note that these configurations are "
"purely illustrative, but you should be able to adapt this example to your "
"own scenario."
msgstr ""
"En el ejemplo, el proceso principal genera un proceso de escucha y algunos "
"procesos de trabajo. Cada proceso principal, el listener y los workers "
"tienen tres configuraciones separadas (los workers comparten la misma "
"configuración). Podemos ver el registro en el proceso principal, cómo los "
"trabajadores se registran en un QueueHandler y cómo el listener implementa "
"un QueueListener y una configuración de registro más compleja, y se encarga "
"de enviar los eventos recibidos a través de la cola a los handlers "
"especificados en la configuración. Ten en cuenta que estas configuraciones "
"son puramente ilustrativas, pero deberías ser capaz de adaptar este ejemplo "
"a tu propio escenario."

#: ../../howto/logging-cookbook.rst:2163
msgid ""
"Here's the script - the docstrings and the comments hopefully explain how it "
"works::"
msgstr ""
"Aquí está el script - los docstrings y los comentarios esperan explicar cómo "
"funciona::"

#: ../../howto/logging-cookbook.rst:2375
msgid "Inserting a BOM into messages sent to a SysLogHandler"
msgstr ""
"Inserción de una lista de materiales en los mensajes enviados a un "
"SysLogHandler"

#: ../../howto/logging-cookbook.rst:2377
msgid ""
":rfc:`5424` requires that a Unicode message be sent to a syslog daemon as a "
"set of bytes which have the following structure: an optional pure-ASCII "
"component, followed by a UTF-8 Byte Order Mark (BOM), followed by Unicode "
"encoded using UTF-8. (See the :rfc:`relevant section of the specification "
"<5424#section-6>`.)"
msgstr ""
":rfc:`5424` requiere que se envíe un mensaje Unicode a un demonio syslog "
"como un conjunto de bytes que tengan la siguiente estructura: un componente "
"opcional ASCII puro, seguido de una marca de orden de bytes (BOM) UTF-8, "
"seguido de Unicode codificado utilizando UTF-8. (Ver la sección :rfc:"
"`relevant de la especificación <5424#section-6>`.)"

#: ../../howto/logging-cookbook.rst:2383
msgid ""
"In Python 3.1, code was added to :class:`~logging.handlers.SysLogHandler` to "
"insert a BOM into the message, but unfortunately, it was implemented "
"incorrectly, with the BOM appearing at the beginning of the message and "
"hence not allowing any pure-ASCII component to appear before it."
msgstr ""
"En Python 3.1, se añadió código a :class:`~logging.handlers.SysLogHandler` "
"para insertar una lista de materiales en el mensaje, pero lamentablemente se "
"implementó de forma incorrecta, ya que la lista de materiales aparecía al "
"principio del mensaje y, por tanto, no permitía que ningún componente ASCII "
"puro apareciera antes de ella."

#: ../../howto/logging-cookbook.rst:2389
msgid ""
"As this behaviour is broken, the incorrect BOM insertion code is being "
"removed from Python 3.2.4 and later. However, it is not being replaced, and "
"if you want to produce :rfc:`5424`-compliant messages which include a BOM, "
"an optional pure-ASCII sequence before it and arbitrary Unicode after it, "
"encoded using UTF-8, then you need to do the following:"
msgstr ""
"Como este comportamiento está roto, el código de inserción incorrecta de la "
"lista de materiales se está eliminando de Python 3.2.4 y posteriores. Sin "
"embargo, no se está sustituyendo, y si quieres producir mensajes compatibles "
"con :rfc:`5424` que incluyan una lista de materiales, una secuencia opcional "
"ASCII pura antes de ella y Unicode arbitrario después de ella, codificados "
"utilizando UTF-8, entonces tienes que hacer lo siguiente:"

#: ../../howto/logging-cookbook.rst:2395
msgid ""
"Attach a :class:`~logging.Formatter` instance to your :class:`~logging."
"handlers.SysLogHandler` instance, with a format string such as::"
msgstr ""
"Adjunte una instancia :class:`~logging.Formatter` a su instancia :class:"
"`~logging.handlers.SysLogHandler`, con una cadena de formato como::"

#: ../../howto/logging-cookbook.rst:2401
msgid ""
"The Unicode code point U+FEFF, when encoded using UTF-8, will be encoded as "
"a UTF-8 BOM -- the byte-string ``b'\\xef\\xbb\\xbf'``."
msgstr ""
"El punto de código Unicode U+FEFF, cuando se codifica utilizando UTF-8, se "
"codificará como UTF-8 BOM -- la cadena de bytes ``b'\\xef\\xbb\\xbf'``."

#: ../../howto/logging-cookbook.rst:2404
msgid ""
"Replace the ASCII section with whatever placeholders you like, but make sure "
"that the data that appears in there after substitution is always ASCII (that "
"way, it will remain unchanged after UTF-8 encoding)."
msgstr ""
"Sustituir la sección ASCII por los marcadores de posición que se desee, pero "
"asegurarse de que los datos que aparezcan ahí después de la sustitución sean "
"siempre ASCII (de ese modo, permanecerán inalterados después de la "
"codificación UTF-8)."

#: ../../howto/logging-cookbook.rst:2408
msgid ""
"Replace the Unicode section with whatever placeholders you like; if the data "
"which appears there after substitution contains characters outside the ASCII "
"range, that's fine -- it will be encoded using UTF-8."
msgstr ""
"Sustituir la sección Unicode por los marcadores de posición que se desee; si "
"los datos que aparecen allí después de la sustitución contienen caracteres "
"fuera del rango ASCII, no hay problema: se codificarán utilizando UTF-8."

#: ../../howto/logging-cookbook.rst:2412
msgid ""
"The formatted message *will* be encoded using UTF-8 encoding by "
"``SysLogHandler``. If you follow the above rules, you should be able to "
"produce :rfc:`5424`-compliant messages. If you don't, logging may not "
"complain, but your messages will not be RFC 5424-compliant, and your syslog "
"daemon may complain."
msgstr ""
"El mensaje formateado *será* codificado utilizando la codificación UTF-8 por "
"``SysLogHandler``. Si sigue las reglas anteriores, debería ser capaz de "
"producir mensajes compatibles con :rfc:`5424`. Si no lo hace, puede que el "
"registro no se queje, pero sus mensajes no serán compatibles con RFC 5424, y "
"su demonio syslog puede quejarse."

#: ../../howto/logging-cookbook.rst:2419
msgid "Implementing structured logging"
msgstr "Implantación de un registro estructurado"

#: ../../howto/logging-cookbook.rst:2421
msgid ""
"Although most logging messages are intended for reading by humans, and thus "
"not readily machine-parseable, there might be circumstances where you want "
"to output messages in a structured format which *is* capable of being parsed "
"by a program (without needing complex regular expressions to parse the log "
"message). This is straightforward to achieve using the logging package. "
"There are a number of ways in which this could be achieved, but the "
"following is a simple approach which uses JSON to serialise the event in a "
"machine-parseable manner::"
msgstr ""
"Aunque la mayoría de los mensajes de registro están pensados para ser leídos "
"por humanos y, por tanto, no son fácilmente analizables por máquinas, puede "
"haber circunstancias en las que se desee dar salida a mensajes en un formato "
"estructurado que *sea* capaz de ser analizado por un programa (sin necesidad "
"de complejas expresiones regulares para analizar el mensaje de registro). "
"Esto es fácil de conseguir utilizando el paquete logging. Hay varias formas "
"de conseguirlo, pero la siguiente es un enfoque sencillo que utiliza JSON "
"para serializar el evento de forma que pueda ser analizado por una máquina::"

#: ../../howto/logging-cookbook.rst:2445
msgid "If the above script is run, it prints:"
msgstr "Si se ejecuta el script anterior, se imprime:"

#: ../../howto/logging-cookbook.rst:2451 ../../howto/logging-cookbook.rst:2493
msgid ""
"Note that the order of items might be different according to the version of "
"Python used."
msgstr ""
"Tener en cuenta que el orden de los elementos puede ser diferente según la "
"versión de Python utilizada."

#: ../../howto/logging-cookbook.rst:2454
msgid ""
"If you need more specialised processing, you can use a custom JSON encoder, "
"as in the following complete example::"
msgstr ""
"Si se necesita un procesamiento más especializado, se puede utilizar un "
"codificador JSON personalizado, como en el siguiente ejemplo completo::"

#: ../../howto/logging-cookbook.rst:2487
msgid "When the above script is run, it prints:"
msgstr "Cuando se ejecuta el script anterior, se imprime:"

#: ../../howto/logging-cookbook.rst:2502
msgid "Customizing handlers with :func:`dictConfig`"
msgstr "Personalización de gestores con :func:`dictConfig`"

#: ../../howto/logging-cookbook.rst:2504
msgid ""
"There are times when you want to customize logging handlers in particular "
"ways, and if you use :func:`dictConfig` you may be able to do this without "
"subclassing. As an example, consider that you may want to set the ownership "
"of a log file. On POSIX, this is easily done using :func:`shutil.chown`, but "
"the file handlers in the stdlib don't offer built-in support. You can "
"customize handler creation using a plain function such as::"
msgstr ""
"Hay ocasiones en las que quieres personalizar los manejadores de registro de "
"formas particulares, y si usas :func:`dictConfig` puedes hacerlo sin "
"subclases. Como ejemplo, considere que puede querer establecer la propiedad "
"de un fichero de registro. En POSIX, esto se hace fácilmente usando :func:"
"`shutil.chown`, pero los manejadores de archivos en la stdlib no ofrecen "
"soporte incorporado. Puede personalizar la creación de manejadores usando "
"una función simple como::"

#: ../../howto/logging-cookbook.rst:2518
msgid ""
"You can then specify, in a logging configuration passed to :func:"
"`dictConfig`, that a logging handler be created by calling this function::"
msgstr ""
"A continuación, puede especificar, en una configuración de registro pasada "
"a :func:`dictConfig`, que se cree un gestor de registro llamando a esta "
"función::"

#: ../../howto/logging-cookbook.rst:2551
msgid ""
"In this example I am setting the ownership using the ``pulse`` user and "
"group, just for the purposes of illustration. Putting it together into a "
"working script, ``chowntest.py``::"
msgstr ""
"En este ejemplo estoy estableciendo la propiedad utilizando el usuario y "
"grupo ``pulse``, sólo con fines ilustrativos. Poniéndolo junto en un script "
"de trabajo, ``chowntest.py``::"

#: ../../howto/logging-cookbook.rst:2598
msgid "To run this, you will probably need to run as ``root``:"
msgstr "Para ejecutarlo, probablemente tendrás que hacerlo como ``root``:"

#: ../../howto/logging-cookbook.rst:2608
msgid ""
"Note that this example uses Python 3.3 because that's where :func:`shutil."
"chown` makes an appearance. This approach should work with any Python "
"version that supports :func:`dictConfig` - namely, Python 2.7, 3.2 or later. "
"With pre-3.3 versions, you would need to implement the actual ownership "
"change using e.g. :func:`os.chown`."
msgstr ""
"Tener en cuenta que este ejemplo utiliza Python 3.3 porque es donde :func:"
"`shutil.chown` hace su aparición. Este enfoque debería funcionar con "
"cualquier versión de Python que soporte :func:`dictConfig` - es decir, "
"Python 2.7, 3.2 o posterior. Con versiones anteriores a la -3.3, se "
"necesitaría implementar el cambio de propiedad usando, por ejemplo, :func:"
"`os.chown`."

#: ../../howto/logging-cookbook.rst:2614
msgid ""
"In practice, the handler-creating function may be in a utility module "
"somewhere in your project. Instead of the line in the configuration::"
msgstr ""
"En la práctica, la función de creación del manejador puede estar en un "
"módulo de utilidad en algún lugar de su proyecto. En lugar de la línea en la "
"configuración::"

#: ../../howto/logging-cookbook.rst:2619
msgid "you could use e.g.::"
msgstr "se puede utilizar, por ejemplo::"

#: ../../howto/logging-cookbook.rst:2623
msgid ""
"where ``project.util`` can be replaced with the actual name of the package "
"where the function resides. In the above working script, using ``'ext://"
"__main__.owned_file_handler'`` should work. Here, the actual callable is "
"resolved by :func:`dictConfig` from the ``ext://`` specification."
msgstr ""
"donde ``project.util`` puede sustituirse por el nombre real del paquete "
"donde reside la función. En el script de trabajo anterior, el uso de "
"``'ext://__main__.owned_file_handler'`` debería funcionar. Aquí, la llamada "
"real es resuelta por :func:`dictConfig` desde la especificación ``ext://``."

#: ../../howto/logging-cookbook.rst:2628
msgid ""
"This example hopefully also points the way to how you could implement other "
"types of file change - e.g. setting specific POSIX permission bits - in the "
"same way, using :func:`os.chmod`."
msgstr ""
"Es de esperar que este ejemplo también señale cómo se podrían implementar "
"otros tipos de cambios en los archivos -por ejemplo, establecer bits de "
"permiso POSIX específicos- de la misma manera, utilizando :func:`os.chmod`."

#: ../../howto/logging-cookbook.rst:2632
msgid ""
"Of course, the approach could also be extended to types of handler other "
"than a :class:`~logging.FileHandler` - for example, one of the rotating file "
"handlers, or a different type of handler altogether."
msgstr ""
"Por supuesto, el enfoque también podría ampliarse a otros tipos de gestores "
"distintos de :class:`~logging.FileHandler`, por ejemplo, uno de los gestores "
"de archivos giratorios o un tipo de gestor totalmente distinto."

#: ../../howto/logging-cookbook.rst:2642
msgid "Using particular formatting styles throughout your application"
msgstr "Utilización de determinados estilos de formato en toda la aplicación"

#: ../../howto/logging-cookbook.rst:2644
msgid ""
"In Python 3.2, the :class:`~logging.Formatter` gained a ``style`` keyword "
"parameter which, while defaulting to ``%`` for backward compatibility, "
"allowed the specification of ``{`` or ``$`` to support the formatting "
"approaches supported by :meth:`str.format` and :class:`string.Template`. "
"Note that this governs the formatting of logging messages for final output "
"to logs, and is completely orthogonal to how an individual logging message "
"is constructed."
msgstr ""
"En Python 3.2, :class:`~logging.Formatter` obtuvo un parámetro de palabra "
"clave ``style`` que, aunque por defecto era ``%`` por compatibilidad con "
"versiones anteriores, permitía la especificación de ``{`` o ``$`` para "
"soportar los enfoques de formato soportados por :meth:`str.format` y :class:"
"`string.Template`. Tenga en cuenta que esto rige el formato de los mensajes "
"de registro para la salida final a los registros, y es completamente "
"ortogonal a cómo se construye un mensaje de registro individual."

#: ../../howto/logging-cookbook.rst:2651
msgid ""
"Logging calls (:meth:`~Logger.debug`, :meth:`~Logger.info` etc.) only take "
"positional parameters for the actual logging message itself, with keyword "
"parameters used only for determining options for how to handle the logging "
"call (e.g. the ``exc_info`` keyword parameter to indicate that traceback "
"information should be logged, or the ``extra`` keyword parameter to indicate "
"additional contextual information to be added to the log). So you cannot "
"directly make logging calls using :meth:`str.format` or :class:`string."
"Template` syntax, because internally the logging package uses %-formatting "
"to merge the format string and the variable arguments. There would be no "
"changing this while preserving backward compatibility, since all logging "
"calls which are out there in existing code will be using %-format strings."
msgstr ""
"Las llamadas de registro (:meth:`~Logger.debug`, :meth:`~Logger.info` etc.) "
"sólo toman parámetros posicionales para el propio mensaje de registro, con "
"parámetros de palabra clave utilizados sólo para determinar las opciones de "
"cómo manejar la llamada de registro (por ejemplo, el parámetro de palabra "
"clave ``exc_info`` para indicar que la información de rastreo debe ser "
"registrada, o el parámetro de palabra clave ``extra`` para indicar "
"información contextual adicional que se añadirá al registro). Por lo tanto, "
"no se pueden realizar directamente llamadas de registro utilizando la "
"sintaxis :meth:`str.format` o :class:`string.Template`, porque internamente "
"el paquete de registro utiliza %-fomatting para fusionar la cadena de "
"formato y los argumentos variables. No habría forma de cambiar esto "
"preservando la compatibilidad con versiones anteriores, ya que todas las "
"llamadas de registro que existen en el código actual utilizarán cadenas %-"
"format."

#: ../../howto/logging-cookbook.rst:2663
msgid ""
"There have been suggestions to associate format styles with specific "
"loggers, but that approach also runs into backward compatibility problems "
"because any existing code could be using a given logger name and using %-"
"formatting."
msgstr ""
"Se ha sugerido asociar estilos de formato con registradores específicos, "
"pero ese enfoque también se enfrenta a problemas de compatibilidad con "
"versiones anteriores, ya que cualquier código existente podría estar "
"utilizando un nombre de registrador determinado y utilizar %-formatting."

#: ../../howto/logging-cookbook.rst:2667
msgid ""
"For logging to work interoperably between any third-party libraries and your "
"code, decisions about formatting need to be made at the level of the "
"individual logging call. This opens up a couple of ways in which alternative "
"formatting styles can be accommodated."
msgstr ""
"Para que el registro funcione de forma interoperable entre bibliotecas de "
"terceros y tu código, las decisiones sobre el formato deben tomarse a nivel "
"de cada llamada de registro. Esto abre un par de vías para acomodar estilos "
"de formato alternativos."

#: ../../howto/logging-cookbook.rst:2674
msgid "Using LogRecord factories"
msgstr "Uso de las fábricas LogRecord"

#: ../../howto/logging-cookbook.rst:2676
msgid ""
"In Python 3.2, along with the :class:`~logging.Formatter` changes mentioned "
"above, the logging package gained the ability to allow users to set their "
"own :class:`LogRecord` subclasses, using the :func:`setLogRecordFactory` "
"function. You can use this to set your own subclass of :class:`LogRecord`, "
"which does the Right Thing by overriding the :meth:`~LogRecord.getMessage` "
"method. The base class implementation of this method is where the ``msg % "
"args`` formatting happens, and where you can substitute your alternate "
"formatting; however, you should be careful to support all formatting styles "
"and allow %-formatting as the default, to ensure interoperability with other "
"code. Care should also be taken to call ``str(self.msg)``, just as the base "
"implementation does."
msgstr ""
"En Python 3.2, junto con los cambios en :class:`~logging.Formatter` "
"mencionados anteriormente, el paquete logging adquirió la capacidad de "
"permitir a los usuarios establecer sus propias subclases :class:`LogRecord`, "
"usando la función :func:`setLogRecordFactory`. Puedes usar esto para "
"establecer tu propia subclase de :class:`LogRecord`, que hace lo correcto "
"sobrescribiendo el método :meth:`~LogRecord.getMessage`. La implementación "
"de la clase base de este método es donde ocurre el formateo ``msg % args``, "
"y donde usted puede sustituir su formateo alternativo; sin embargo, debe "
"tener cuidado de soportar todos los estilos de formateo y permitir %-"
"formatting como el predeterminado, para asegurar la interoperabilidad con "
"otro código. También se debe tener cuidado de llamar a ``str(self.msg)``, "
"tal y como hace la implementación base."

#: ../../howto/logging-cookbook.rst:2687
msgid ""
"Refer to the reference documentation on :func:`setLogRecordFactory` and :"
"class:`LogRecord` for more information."
msgstr ""
"Para más información, consulte la documentación de referencia en :func:"
"`setLogRecordFactory` y :class:`LogRecord`."

#: ../../howto/logging-cookbook.rst:2692
msgid "Using custom message objects"
msgstr "Utilización de objetos de mensaje personalizados"

#: ../../howto/logging-cookbook.rst:2694
msgid ""
"There is another, perhaps simpler way that you can use {}- and $- formatting "
"to construct your individual log messages. You may recall (from :ref:"
"`arbitrary-object-messages`) that when logging you can use an arbitrary "
"object as a message format string, and that the logging package will call :"
"func:`str` on that object to get the actual format string. Consider the "
"following two classes::"
msgstr ""
"Hay otra forma, quizás más simple, de utilizar los formatos {}- y $- para "
"construir mensajes de registro individuales. Puede que recuerde (de :ref:"
"`arbitrary-object-messages`) que al registrar puede utilizar un objeto "
"arbitrario como cadena de formato de mensaje, y que el paquete de registro "
"llamará a :func:`str` en ese objeto para obtener la cadena de formato real. "
"Considere las siguientes dos clases::"

#: ../../howto/logging-cookbook.rst:2719
msgid ""
"Either of these can be used in place of a format string, to allow {}- or $-"
"formatting to be used to build the actual \"message\" part which appears in "
"the formatted log output in place of “%(message)s” or “{message}” or "
"“$message”. If you find it a little unwieldy to use the class names whenever "
"you want to log something, you can make it more palatable if you use an "
"alias such as ``M`` or ``_`` for the message (or perhaps ``__``, if you are "
"using ``_`` for localization)."
msgstr ""
"Cualquiera de estos se puede utilizar en lugar de una cadena de formato, "
"para permitir {}- o $-formato que se utilizará para construir la parte real "
"\"mensaje\" que aparece en la salida de registro formateado en lugar de "
"\"%(message)s\" o \"{message}\" o \"$message\". Si le resulta un poco "
"engorroso utilizar los nombres de clase cada vez que quiera registrar algo, "
"puede hacerlo más agradable si utiliza un alias como ``M`` o ``_`` para el "
"mensaje (o quizás ``__``, si utiliza ``_`` para la localización)."

#: ../../howto/logging-cookbook.rst:2727
msgid ""
"Examples of this approach are given below. Firstly, formatting with :meth:"
"`str.format`::"
msgstr ""
"A continuación se ofrecen ejemplos de este enfoque. En primer lugar, el "
"formateo con :meth:`str.format`::"

#: ../../howto/logging-cookbook.rst:2741
msgid "Secondly, formatting with :class:`string.Template`::"
msgstr "En segundo lugar, el formato con :class:`string.Template`::"

#: ../../howto/logging-cookbook.rst:2748
msgid ""
"One thing to note is that you pay no significant performance penalty with "
"this approach: the actual formatting happens not when you make the logging "
"call, but when (and if) the logged message is actually about to be output to "
"a log by a handler. So the only slightly unusual thing which might trip you "
"up is that the parentheses go around the format string and the arguments, "
"not just the format string. That’s because the __ notation is just syntax "
"sugar for a constructor call to one of the :samp:`{XXX}Message` classes "
"shown above."
msgstr ""
"Una cosa a tener en cuenta es que no se paga ninguna penalización de "
"rendimiento significativa con este enfoque: el formateo real no ocurre "
"cuando se hace la llamada de registro, sino cuando (y si) el mensaje "
"registrado está a punto de ser enviado a un registro por un manejador. La "
"única cosa un poco inusual que podría confundir es que los paréntesis rodean "
"la cadena de formato y los argumentos, no sólo la cadena de formato. Esto se "
"debe a que la notación __ es sólo un dulce sintáctico para una llamada al "
"constructor de una de las clases :samp:`{XXX}Message` mostradas "
"anteriormente."

#: ../../howto/logging-cookbook.rst:2762
msgid "Configuring filters with :func:`dictConfig`"
msgstr "Configuración de filtros con :func:`dictConfig`"

#: ../../howto/logging-cookbook.rst:2764
msgid ""
"You *can* configure filters using :func:`~logging.config.dictConfig`, though "
"it might not be obvious at first glance how to do it (hence this recipe). "
"Since :class:`~logging.Filter` is the only filter class included in the "
"standard library, and it is unlikely to cater to many requirements (it's "
"only there as a base class), you will typically need to define your own :"
"class:`~logging.Filter` subclass with an overridden :meth:`~logging.Filter."
"filter` method. To do this, specify the ``()`` key in the configuration "
"dictionary for the filter, specifying a callable which will be used to "
"create the filter (a class is the most obvious, but you can provide any "
"callable which returns a :class:`~logging.Filter` instance). Here is a "
"complete example::"
msgstr ""
"Se *pueden* configurar filtros usando :func:`~logging.config.dictConfig`, "
"aunque no resulte evidente a primera vista cómo hacerlo (de ahí esta "
"receta). Dado que :class:`~logging.Filter` es la única clase de filtro "
"incluida en la biblioteca estándar, y es poco probable que satisfaga muchas "
"necesidades (sólo está ahí como clase base), normalmente se necesitará "
"definir su propia subclase :class:`~logging.Filter` con un método :meth:"
"`~logging.Filter.filter` sobrescrito. Para ello, especifique la clave ``()`` "
"en el diccionario de configuración para el filtro, especificando una llamada "
"que se utilizará para crear el filtro (una clase es la más obvia, pero puede "
"proporcionar cualquier llamada que devuelva una instancia de :class:"
"`~logging.Filter` ). He aquí un ejemplo completo::"

#: ../../howto/logging-cookbook.rst:2817
msgid ""
"This example shows how you can pass configuration data to the callable which "
"constructs the instance, in the form of keyword parameters. When run, the "
"above script will print:"
msgstr ""
"Este ejemplo muestra cómo puede pasar datos de configuración a la llamada "
"que construye la instancia, en forma de parámetros de palabra clave. Cuando "
"se ejecute, el script anterior imprimirá:"

#: ../../howto/logging-cookbook.rst:2825
msgid "which shows that the filter is working as configured."
msgstr "que muestra que el filtro funciona según lo configurado."

#: ../../howto/logging-cookbook.rst:2827
msgid "A couple of extra points to note:"
msgstr "Un par de puntos adicionales a tener en cuenta:"

#: ../../howto/logging-cookbook.rst:2829
msgid ""
"If you can't refer to the callable directly in the configuration (e.g. if it "
"lives in a different module, and you can't import it directly where the "
"configuration dictionary is), you can use the form ``ext://...`` as "
"described in :ref:`logging-config-dict-externalobj`. For example, you could "
"have used the text ``'ext://__main__.MyFilter'`` instead of ``MyFilter`` in "
"the above example."
msgstr ""
"Si no puede hacer referencia a la llamada directamente en la configuración "
"(por ejemplo, si vive en un módulo diferente y no puede importarla "
"directamente donde está el diccionario de configuración), puede utilizar la "
"forma ``ext://...`` como se describe en :ref:`logging-config-dict-"
"externalobj`. Por ejemplo, podrías haber utilizado el texto ``'ext://"
"__main__.MyFilter'`` en lugar de ``MyFilter`` en el ejemplo anterior."

#: ../../howto/logging-cookbook.rst:2836
msgid ""
"As well as for filters, this technique can also be used to configure custom "
"handlers and formatters. See :ref:`logging-config-dict-userdef` for more "
"information on how logging supports using user-defined objects in its "
"configuration, and see the other cookbook recipe :ref:`custom-handlers` "
"above."
msgstr ""
"Además de para filtros, esta técnica también se puede utilizar para "
"configurar manejadores y formateadores personalizados. Ver :ref:`logging-"
"config-dict-userdef` para obtener más información sobre cómo el registro "
"admite el uso de objetos definidos por el usuario en su configuración, y "
"consulte la otra receta del libro de cocina :ref:`custom-handlers` anterior."

#: ../../howto/logging-cookbook.rst:2845
msgid "Customized exception formatting"
msgstr "Formato personalizado de las excepciones"

#: ../../howto/logging-cookbook.rst:2847
msgid ""
"There might be times when you want to do customized exception formatting - "
"for argument's sake, let's say you want exactly one line per logged event, "
"even when exception information is present. You can do this with a custom "
"formatter class, as shown in the following example::"
msgstr ""
"Puede haber ocasiones en las que quieras hacer un formateo de excepciones "
"personalizado - por ejemplo, digamos que quieres exactamente una línea por "
"evento registrado, incluso cuando la información de excepción está presente. "
"Usted puede hacer esto con una clase de formateador personalizado, como se "
"muestra en el siguiente ejemplo::"

#: ../../howto/logging-cookbook.rst:2888
msgid "When run, this produces a file with exactly two lines:"
msgstr "Cuando se ejecuta, produce un archivo con exactamente dos líneas:"

#: ../../howto/logging-cookbook.rst:2895
msgid ""
"While the above treatment is simplistic, it points the way to how exception "
"information can be formatted to your liking. The :mod:`traceback` module may "
"be helpful for more specialized needs."
msgstr ""
"Aunque el tratamiento anterior es simplista, indica cómo puede formatearse a "
"su gusto la información sobre excepciones. El módulo :mod:`traceback` puede "
"ser útil para necesidades más especializadas."

#: ../../howto/logging-cookbook.rst:2902
msgid "Speaking logging messages"
msgstr "Mensajes de registro de voz"

#: ../../howto/logging-cookbook.rst:2904
msgid ""
"There might be situations when it is desirable to have logging messages "
"rendered in an audible rather than a visible format. This is easy to do if "
"you have text-to-speech (TTS) functionality available in your system, even "
"if it doesn't have a Python binding. Most TTS systems have a command line "
"program you can run, and this can be invoked from a handler using :mod:"
"`subprocess`. It's assumed here that TTS command line programs won't expect "
"to interact with users or take a long time to complete, and that the "
"frequency of logged messages will be not so high as to swamp the user with "
"messages, and that it's acceptable to have the messages spoken one at a time "
"rather than concurrently, The example implementation below waits for one "
"message to be spoken before the next is processed, and this might cause "
"other handlers to be kept waiting. Here is a short example showing the "
"approach, which assumes that the ``espeak`` TTS package is available::"
msgstr ""
"Puede haber situaciones en las que sea deseable que los mensajes de registro "
"se muestren en un formato audible en lugar de visible. Esto es fácil de "
"hacer si tienes funcionalidad de texto a voz (TTS) disponible en tu sistema, "
"incluso si no tiene un enlace a Python. La mayoría de los sistemas TTS "
"tienen un programa de línea de comandos que puedes ejecutar, y éste puede "
"ser invocado desde un manejador usando :mod:`subprocess`. Aquí se asume que "
"los programas de línea de comandos TTS no esperan interactuar con los "
"usuarios o tardar mucho tiempo en completarse, y que la frecuencia de los "
"mensajes registrados no será tan alta como para inundar al usuario con "
"mensajes, y que es aceptable que los mensajes se hablen de uno en uno en "
"lugar de concurrentemente, La implementación de ejemplo a continuación "
"espera a que un mensaje sea hablado antes de que el siguiente sea procesado, "
"y esto podría causar que otros manejadores se mantengan a la espera. He aquí "
"un breve ejemplo que muestra el enfoque, que asume que el paquete ``espeak`` "
"TTS está disponible::"

#: ../../howto/logging-cookbook.rst:2946
msgid ""
"When run, this script should say \"Hello\" and then \"Goodbye\" in a female "
"voice."
msgstr ""
"Cuando se ejecuta, este script debe decir \"Hello\" y luego \"Goodbye\" con "
"voz femenina."

#: ../../howto/logging-cookbook.rst:2948
msgid ""
"The above approach can, of course, be adapted to other TTS systems and even "
"other systems altogether which can process messages via external programs "
"run from a command line."
msgstr ""
"El enfoque anterior puede, por supuesto, adaptarse a otros sistemas TTS e "
"incluso a otros sistemas en conjunto que pueden procesar mensajes a través "
"de programas externos que se ejecutan desde una línea de comandos."

#: ../../howto/logging-cookbook.rst:2956
msgid "Buffering logging messages and outputting them conditionally"
msgstr ""
"Almacenar en búfer los mensajes de registro y enviarlos condicionalmente"

#: ../../howto/logging-cookbook.rst:2958
msgid ""
"There might be situations where you want to log messages in a temporary area "
"and only output them if a certain condition occurs. For example, you may "
"want to start logging debug events in a function, and if the function "
"completes without errors, you don't want to clutter the log with the "
"collected debug information, but if there is an error, you want all the "
"debug information to be output as well as the error."
msgstr ""
"Puede haber situaciones en las que desee registrar mensajes en un área "
"temporal y enviarlos solo si se produce una determinada condición. Por "
"ejemplo, es posible que desee comenzar a registrar depuraciones en una "
"función y, si la función se completa sin errores, no desea saturar el "
"registro con la información de depuración recopilada, pero si hay un error, "
"desea que se genere toda la información de depuración.así como el error."

#: ../../howto/logging-cookbook.rst:2965
msgid ""
"Here is an example which shows how you could do this using a decorator for "
"your functions where you want logging to behave this way. It makes use of "
"the :class:`logging.handlers.MemoryHandler`, which allows buffering of "
"logged events until some condition occurs, at which point the buffered "
"events are ``flushed`` - passed to another handler (the ``target`` handler) "
"for processing. By default, the ``MemoryHandler`` flushed when its buffer "
"gets filled up or an event whose level is greater than or equal to a "
"specified threshold is seen. You can use this recipe with a more specialised "
"subclass of ``MemoryHandler`` if you want custom flushing behavior."
msgstr ""
"Aquí tienes un ejemplo que muestra cómo se puede hacer esto usando un "
"decorador para las funciones donde se quiera que el registro se comporte de "
"esta manera. Hacer uso de :class:`logging.handlers.MemoryHandler`, que "
"permite el almacenamiento en búfer de los eventos registrados hasta que se "
"produce alguna condición, momento en el que los eventos almacenados en búfer "
"son ``flushed`` - pasados a otro manejador (el manejador ``target`` ) para "
"su procesamiento. Por defecto, el ``MemoryHandler`` se vacía cuando su "
"buffer se llena o se ve un evento cuyo nivel es mayor o igual a un umbral "
"especificado. Se puede utilizar esta receta con una subclase más "
"especializada de ``MemoryHandler`` si se desea un comportamiento de descarga "
"personalizado."

#: ../../howto/logging-cookbook.rst:2975
msgid ""
"The example script has a simple function, ``foo``, which just cycles through "
"all the logging levels, writing to ``sys.stderr`` to say what level it's "
"about to log at, and then actually logging a message at that level. You can "
"pass a parameter to ``foo`` which, if true, will log at ERROR and CRITICAL "
"levels - otherwise, it only logs at DEBUG, INFO and WARNING levels."
msgstr ""
"El script de ejemplo tiene una función simple, ``foo``, que simplemente hace "
"un ciclo a través de todos los niveles de registro, escribiendo a ``sys."
"stderr`` para decir en qué nivel está a punto de registrar, y luego "
"realmente registra un mensaje en ese nivel. Puede pasar un parámetro a "
"``foo`` que, si es verdadero, registrará en los niveles ERROR y CRÍTICO - de "
"lo contrario, sólo registrará en los niveles DEBUG, INFO y WARNING."

#: ../../howto/logging-cookbook.rst:2981
msgid ""
"The script just arranges to decorate ``foo`` with a decorator which will do "
"the conditional logging that's required. The decorator takes a logger as a "
"parameter and attaches a memory handler for the duration of the call to the "
"decorated function. The decorator can be additionally parameterised using a "
"target handler, a level at which flushing should occur, and a capacity for "
"the buffer (number of records buffered). These default to a :class:`~logging."
"StreamHandler` which writes to ``sys.stderr``, ``logging.ERROR`` and ``100`` "
"respectively."
msgstr ""
"El script simplemente se encarga de decorar ``foo`` con un decorador que "
"hará el registro condicional necesario. El decorador toma un registrador "
"como parámetro y adjunta un manejador de memoria para la duración de la "
"llamada a la función decorada. El decorador puede parametrizarse "
"adicionalmente utilizando un controlador de destino, un nivel en el que debe "
"producirse el vaciado y una capacidad para el búfer (número de registros "
"almacenados en el búfer). Por defecto, :class:`~logging.StreamHandler` "
"escribe en ``sys.stderr``, ``logging.ERROR`` y ``100`` respectivamente."

#: ../../howto/logging-cookbook.rst:2989
msgid "Here's the script::"
msgstr "Aquí está el guión::"

#: ../../howto/logging-cookbook.rst:3052
msgid "When this script is run, the following output should be observed:"
msgstr "Cuando se ejecuta este script, debe observarse la siguiente salida:"

#: ../../howto/logging-cookbook.rst:3082
msgid ""
"As you can see, actual logging output only occurs when an event is logged "
"whose severity is ERROR or greater, but in that case, any previous events at "
"lower severities are also logged."
msgstr ""
"Como puede ver, la salida de registro real sólo se produce cuando se "
"registra un evento cuya gravedad es ERROR o superior, pero en ese caso, "
"también se registra cualquier evento anterior de gravedad inferior."

#: ../../howto/logging-cookbook.rst:3086
msgid "You can of course use the conventional means of decoration::"
msgstr ""
"Por supuesto, puedes utilizar los medios convencionales de decoración::"

#: ../../howto/logging-cookbook.rst:3096
msgid "Sending logging messages to email, with buffering"
msgstr ""
"Envío de mensajes de registro al correo electrónico, con almacenamiento en "
"búfer"

#: ../../howto/logging-cookbook.rst:3098
msgid ""
"To illustrate how you can send log messages via email, so that a set number "
"of messages are sent per email, you can subclass :class:`~logging.handlers."
"BufferingHandler`. In the following  example, which you can adapt to suit "
"your specific needs, a simple test harness is provided which allows you to "
"run the script with command line arguments specifying what you typically "
"need to send things via SMTP. (Run the downloaded script with the ``-h`` "
"argument to see the required and optional arguments.)"
msgstr ""
"Para ilustrar cómo puede enviar mensajes de registro por correo electrónico, "
"de forma que se envíe un número determinado de mensajes por correo "
"electrónico, puede subclasificar :class:`~logging.handlers."
"BufferingHandler`. En el siguiente ejemplo, que puedes adaptar a tus "
"necesidades específicas, se proporciona un sencillo arnés de pruebas que te "
"permite ejecutar el script con argumentos de línea de comandos que "
"especifican lo que normalmente necesitas para enviar cosas a través de SMTP. "
"(Ejecute el script descargado con el argumento ``-h`` para ver los "
"argumentos obligatorios y opcionales)."

#: ../../howto/logging-cookbook.rst:3170
msgid ""
"If you run this script and your SMTP server is correctly set up, you should "
"find that it sends eleven emails to the addressee you specify. The first ten "
"emails will each have ten log messages, and the eleventh will have two "
"messages. That makes up 102 messages as specified in the script."
msgstr ""
"Si ejecuta este script y su servidor SMTP está correctamente configurado, "
"debería ver que envía once correos electrónicos al destinatario que "
"especifique. Cada uno de los diez primeros correos tendrá diez mensajes de "
"registro, y el undécimo tendrá dos mensajes. Eso hace 102 mensajes como se "
"especifica en el script."

#: ../../howto/logging-cookbook.rst:3178
msgid "Formatting times using UTC (GMT) via configuration"
msgstr "Formatear las horas utilizando UTC (GMT) en la configuración"

#: ../../howto/logging-cookbook.rst:3180
msgid ""
"Sometimes you want to format times using UTC, which can be done using a "
"class such as ``UTCFormatter``, shown below::"
msgstr ""
"A veces se desea dar formato a las horas utilizando UTC, lo que puede "
"hacerse utilizando una clase como ``UTCFormatter``, que se muestra a "
"continuación::"

#: ../../howto/logging-cookbook.rst:3189
msgid ""
"and you can then use the ``UTCFormatter`` in your code instead of :class:"
"`~logging.Formatter`. If you want to do that via configuration, you can use "
"the :func:`~logging.config.dictConfig` API with an approach illustrated by "
"the following complete example::"
msgstr ""
"y entonces podrá utilizar ``UTCFormatter`` en su código en lugar de :class:"
"`~logging.Formatter`. Si desea hacerlo mediante configuración, puede "
"utilizar la API :func:`~logging.config.dictConfig` con un enfoque que se "
"ilustra en el siguiente ejemplo completo::"

#: ../../howto/logging-cookbook.rst:3232
msgid "When this script is run, it should print something like:"
msgstr "Cuando se ejecuta este script, debería imprimir algo como:"

#: ../../howto/logging-cookbook.rst:3239
msgid ""
"showing how the time is formatted both as local time and UTC, one for each "
"handler."
msgstr ""
"mostrando cómo se formatea la hora tanto en hora local como en UTC, uno para "
"cada manejador."

#: ../../howto/logging-cookbook.rst:3246
msgid "Using a context manager for selective logging"
msgstr "Uso de un gestor de contexto para el registro selectivo"

#: ../../howto/logging-cookbook.rst:3248
msgid ""
"There are times when it would be useful to temporarily change the logging "
"configuration and revert it back after doing something. For this, a context "
"manager is the most obvious way of saving and restoring the logging context. "
"Here is a simple example of such a context manager, which allows you to "
"optionally change the logging level and add a logging handler purely in the "
"scope of the context manager::"
msgstr ""
"Hay ocasiones en las que sería útil cambiar temporalmente la configuración "
"de registro y revertirla después de hacer algo. Para ello, un gestor de "
"contexto es la forma más obvia de guardar y restaurar el contexto de "
"registro. He aquí un ejemplo sencillo de tal gestor de contexto, que le "
"permite cambiar opcionalmente el nivel de registro y añadir un gestor de "
"registro puramente en el ámbito del gestor de contexto::"

#: ../../howto/logging-cookbook.rst:3281
msgid ""
"If you specify a level value, the logger's level is set to that value in the "
"scope of the with block covered by the context manager. If you specify a "
"handler, it is added to the logger on entry to the block and removed on exit "
"from the block. You can also ask the manager to close the handler for you on "
"block exit - you could do this if you don't need the handler any more."
msgstr ""
"Si especifica un valor de nivel, el nivel del registrador se establece en "
"ese valor en el ámbito del bloque with cubierto por el gestor de contexto. "
"Si especifica un manejador, se añade al registrador al entrar en el bloque y "
"se elimina al salir del bloque. También puedes pedir al gestor que cierre el "
"manejador por ti al salir del bloque - podrías hacer esto si ya no necesitas "
"el manejador."

#: ../../howto/logging-cookbook.rst:3287
msgid ""
"To illustrate how it works, we can add the following block of code to the "
"above::"
msgstr ""
"Para ilustrar cómo funciona, podemos añadir el siguiente bloque de código al "
"anterior::"

#: ../../howto/logging-cookbook.rst:3305
msgid ""
"We initially set the logger's level to ``INFO``, so message #1 appears and "
"message #2 doesn't. We then change the level to ``DEBUG`` temporarily in the "
"following ``with`` block, and so message #3 appears. After the block exits, "
"the logger's level is restored to ``INFO`` and so message #4 doesn't appear. "
"In the next ``with`` block, we set the level to ``DEBUG`` again but also add "
"a handler writing to ``sys.stdout``. Thus, message #5 appears twice on the "
"console (once via ``stderr`` and once via ``stdout``). After the ``with`` "
"statement's completion, the status is as it was before so message #6 appears "
"(like message #1) whereas message #7 doesn't (just like message #2)."
msgstr ""
"Inicialmente establecemos el nivel del registrador en ``INFO``, por lo que "
"el mensaje #1 aparece y el #2 no. A continuación, cambiamos temporalmente el "
"nivel a ``DEBUG`` en el siguiente bloque ``with``, por lo que aparece el "
"mensaje nº 3. Después de salir del bloque, el nivel del registrador se "
"restablece a , por lo que no aparece el mensaje nº 4. Tras salir del bloque, "
"el nivel del registrador se restablece a ``INFO``, por lo que el mensaje nº "
"4 no aparece. En el siguiente bloque ``with``, volvemos a establecer el "
"nivel en ``DEBUG`` pero también añadimos un manejador que escribe en ``sys."
"stdout``. Así, el mensaje #5 aparece dos veces en la consola (una a través "
"de ``stderr`` y otra a través de ``stdout``). Tras la finalización de la "
"sentencia ``with``, el estado es el mismo que antes, de modo que el mensaje "
"#6 aparece (como el mensaje #1) mientras que el mensaje #7 no lo hace (igual "
"que el mensaje #2)."

#: ../../howto/logging-cookbook.rst:3315
msgid "If we run the resulting script, the result is as follows:"
msgstr "Si ejecutamos el script resultante, el resultado es el siguiente:"

#: ../../howto/logging-cookbook.rst:3326
msgid ""
"If we run it again, but pipe ``stderr`` to ``/dev/null``, we see the "
"following, which is the only message written to ``stdout``:"
msgstr ""
"Si lo ejecutamos de nuevo, pero canalizando ``stderr`` a ``/dev/null``, "
"veremos lo siguiente, que es el único mensaje escrito en ``stdout``:"

#: ../../howto/logging-cookbook.rst:3334
msgid "Once again, but piping ``stdout`` to ``/dev/null``, we get:"
msgstr "Una vez más, pero canalizando ``stdout`` a ``/dev/null``, obtenemos:"

#: ../../howto/logging-cookbook.rst:3344
msgid ""
"In this case, the message #5 printed to ``stdout`` doesn't appear, as "
"expected."
msgstr ""
"En este caso, el mensaje #5 impreso en ``stdout`` no aparece, como era de "
"esperar."

#: ../../howto/logging-cookbook.rst:3346
msgid ""
"Of course, the approach described here can be generalised, for example to "
"attach logging filters temporarily. Note that the above code works in Python "
"2 as well as Python 3."
msgstr ""
"Por supuesto, el enfoque aquí descrito puede generalizarse, por ejemplo para "
"adjuntar filtros de registro temporalmente. Tener en cuenta que el código "
"anterior funciona tanto en Python 2 como en Python 3."

#: ../../howto/logging-cookbook.rst:3354
msgid "A CLI application starter template"
msgstr "Una plantilla de inicio de aplicación CLI"

#: ../../howto/logging-cookbook.rst:3356
msgid "Here's an example which shows how you can:"
msgstr "He aquí un ejemplo que muestra cómo hacerlo:"

#: ../../howto/logging-cookbook.rst:3358
msgid "Use a logging level based on command-line arguments"
msgstr ""
"Utilizar un nivel de registro basado en los argumentos de la línea de "
"comandos"

#: ../../howto/logging-cookbook.rst:3359
msgid ""
"Dispatch to multiple subcommands in separate files, all logging at the same "
"level in a consistent way"
msgstr ""
"Envío a múltiples subcomandos en archivos separados, todos los registros en "
"el mismo nivel de una manera coherente"

#: ../../howto/logging-cookbook.rst:3361
msgid "Make use of simple, minimal configuration"
msgstr "Utilice una configuración sencilla y mínima"

#: ../../howto/logging-cookbook.rst:3363
msgid ""
"Suppose we have a command-line application whose job is to stop, start or "
"restart some services. This could be organised for the purposes of "
"illustration as a file ``app.py`` that is the main script for the "
"application, with individual commands implemented in ``start.py``, ``stop."
"py`` and ``restart.py``. Suppose further that we want to control the "
"verbosity of the application via a command-line argument, defaulting to "
"``logging.INFO``. Here's one way that ``app.py`` could be written::"
msgstr ""
"Supongamos que tenemos una aplicación de línea de comandos cuyo trabajo "
"consiste en detener, iniciar o reiniciar algunos servicios. Esto podría "
"organizarse, a efectos ilustrativos, como un archivo ``app.py`` que es el "
"script principal de la aplicación, con comandos individuales implementados "
"en ``start.py``, ``stop.py`` y ``restart.py``. Supongamos además que "
"queremos controlar la verbosidad de la aplicación a través de un argumento "
"de línea de comandos, por defecto ``logging.INFO``. He aquí una forma en que "
"se podría escribir ``app.py``::"

#: ../../howto/logging-cookbook.rst:3412
msgid ""
"And the ``start``, ``stop`` and ``restart`` commands can be implemented in "
"separate modules, like so for starting::"
msgstr ""
"Y los comandos ``start``, ``stop`` y ``restart``se  pueden implementar en "
"módulos separados, así para empezar::"

#: ../../howto/logging-cookbook.rst:3425
msgid "and thus for stopping::"
msgstr "y por lo tanto para detener::"

#: ../../howto/logging-cookbook.rst:3446
msgid "and similarly for restarting::"
msgstr "y lo mismo para reiniciar::"

#: ../../howto/logging-cookbook.rst:3467
msgid ""
"If we run this application with the default log level, we get output like "
"this:"
msgstr ""
"Si ejecutamos esta aplicación con el nivel de registro por defecto, "
"obtendremos una salida como esta:"

#: ../../howto/logging-cookbook.rst:3480
msgid ""
"The first word is the logging level, and the second word is the module or "
"package name of the place where the event was logged."
msgstr ""
"La primera palabra es el nivel de registro y la segunda es el nombre del "
"módulo o paquete donde se registró el evento."

#: ../../howto/logging-cookbook.rst:3483
msgid ""
"If we change the logging level, then we can change the information sent to "
"the log. For example, if we want more information:"
msgstr ""
"Si cambiamos el nivel de registro, podemos cambiar la información que se "
"envía al registro. Por ejemplo, si queremos más información:"

#: ../../howto/logging-cookbook.rst:3500
msgid "And if we want less:"
msgstr "Y si queremos menos:"

#: ../../howto/logging-cookbook.rst:3508
msgid ""
"In this case, the commands don't print anything to the console, since "
"nothing at ``WARNING`` level or above is logged by them."
msgstr ""
"En este caso, los comandos no imprimen nada en la consola, ya que no "
"registran nada a nivel ``WARNING`` o superior."

#: ../../howto/logging-cookbook.rst:3514
msgid "A Qt GUI for logging"
msgstr "Una interfaz gráfica Qt para el registro"

#: ../../howto/logging-cookbook.rst:3516
msgid ""
"A question that comes up from time to time is about how to log to a GUI "
"application. The `Qt <https://www.qt.io/>`_ framework is a popular cross-"
"platform UI framework with Python bindings using `PySide2 <https://pypi.org/"
"project/PySide2/>`_ or `PyQt5 <https://pypi.org/project/PyQt5/>`_ libraries."
msgstr ""

#: ../../howto/logging-cookbook.rst:3522
msgid ""
"The following example shows how to log to a Qt GUI. This introduces a simple "
"``QtHandler`` class which takes a callable, which should be a slot in the "
"main thread that does GUI updates. A worker thread is also created to show "
"how you can log to the GUI from both the UI itself (via a button for manual "
"logging) as well as a worker thread doing work in the background (here, just "
"logging messages at random levels with random short delays in between)."
msgstr ""
"El siguiente ejemplo muestra cómo registrar una GUI Qt. Esto introduce una "
"simple clase ``QtHandler`` que toma un callable, que debería ser un slot en "
"el hilo principal que hace las actualizaciones de la GUI. También se crea un "
"subproceso de trabajo para mostrar cómo se puede acceder a la interfaz "
"gráfica de usuario tanto desde la propia interfaz (a través de un botón para "
"el registro manual) como desde un subproceso de trabajo en segundo plano (en "
"este caso, sólo el registro de mensajes en niveles aleatorios con pequeños "
"retrasos aleatorios entre ellos)."

#: ../../howto/logging-cookbook.rst:3529
msgid ""
"The worker thread is implemented using Qt's ``QThread`` class rather than "
"the :mod:`threading` module, as there are circumstances where one has to use "
"``QThread``, which offers better integration with other ``Qt`` components."
msgstr ""
"El hilo trabajador se implementa utilizando la clase ``QThread`` de Qt en "
"lugar del módulo :mod:`threading`, ya que hay circunstancias en las que hay "
"que utilizar ``QThread``, que ofrece una mejor integración con otros "
"componentes de ``Qt``."

#: ../../howto/logging-cookbook.rst:3533
msgid ""
"The code should work with recent releases of any of ``PySide6``, ``PyQt6``, "
"``PySide2`` or ``PyQt5``. You should be able to adapt the approach to "
"earlier versions of Qt. Please refer to the comments in the code snippet for "
"more detailed information."
msgstr ""
"El código debería funcionar con versiones recientes de cualquiera de "
"``PySide6``, ``PyQt6``, ``PySide2`` o ``PyQt5``. Deberías poder adaptar el "
"enfoque a versiones anteriores de Qt. Consulte los comentarios del fragmento "
"de código para obtener información más detallada."

#: ../../howto/logging-cookbook.rst:3770
msgid "Logging to syslog with RFC5424 support"
msgstr "Registro en syslog compatible con RFC5424"

#: ../../howto/logging-cookbook.rst:3772
msgid ""
"Although :rfc:`5424` dates from 2009, most syslog servers are configured by "
"detault to use the older :rfc:`3164`, which hails from 2001. When "
"``logging`` was added to Python in 2003, it supported the earlier (and only "
"existing) protocol at the time. Since RFC5424 came out, as there has not "
"been widespread deployment of it in syslog servers, the :class:`~logging."
"handlers.SysLogHandler` functionality has not been updated."
msgstr ""

#: ../../howto/logging-cookbook.rst:3779
msgid ""
"RFC 5424 contains some useful features such as support for structured data, "
"and if you need to be able to log to a syslog server with support for it, "
"you can do so with a subclassed handler which looks something like this::"
msgstr ""
"RFC 5424 contiene algunas características útiles, como el soporte para datos "
"estructurados, y si usted ha de ser capaz de registrar a un servidor syslog "
"con soporte para ello, puede hacerlo con un controlador subclase que se "
"parece a esto::"

#: ../../howto/logging-cookbook.rst:3845
msgid ""
"You'll need to be familiar with RFC 5424 to fully understand the above code, "
"and it may be that you have slightly different needs (e.g. for how you pass "
"structural data to the log). Nevertheless, the above should be adaptable to "
"your speciric needs. With the above handler, you'd pass structured data "
"using something like this::"
msgstr ""
"Tendrá que estar familiarizado con RFC 5424 para entender completamente el "
"código anterior, y puede ser que tenga necesidades ligeramente diferentes "
"(por ejemplo, para cómo pasar datos estructurales al registro). No obstante, "
"lo anterior debería poder adaptarse a sus necesidades específicas. Con el "
"manejador anterior, usted pasaría datos estructurados usando algo como esto::"

#: ../../howto/logging-cookbook.rst:3859
msgid "How to treat a logger like an output stream"
msgstr "Cómo tratar un logger como un flujo de salida"

#: ../../howto/logging-cookbook.rst:3861
msgid ""
"Sometimes, you need to interface to a third-party API which expects a file-"
"like object to write to, but you want to direct the API's output to a "
"logger. You can do this using a class which wraps a logger with a file-like "
"API. Here's a short script illustrating such a class:"
msgstr ""
"A veces, es necesario interactuar con una API de terceros que espera un "
"objeto de tipo archivo para escribir, pero desea dirigir la salida de la API "
"a un registrador. Puedes hacer esto usando una clase que envuelve un logger "
"con una API tipo archivo. Aquí tienes un pequeño script que ilustra una "
"clase de este tipo:"

#: ../../howto/logging-cookbook.rst:3901
msgid "When this script is run, it prints"
msgstr "Cuando se ejecuta este script, imprime"

#: ../../howto/logging-cookbook.rst:3908
msgid ""
"You could also use ``LoggerWriter`` to redirect ``sys.stdout`` and ``sys."
"stderr`` by doing something like this:"
msgstr ""
"También podría utilizar ``LoggerWriter`` para redirigir ``sys.stdout`` y "
"``sys.stderr`` haciendo algo como esto:"

#: ../../howto/logging-cookbook.rst:3918
msgid ""
"You should do this *after* configuring logging for your needs. In the above "
"example, the :func:`~logging.basicConfig` call does this (using the ``sys."
"stderr`` value *before* it is overwritten by a ``LoggerWriter`` instance). "
"Then, you'd get this kind of result:"
msgstr ""
"Debería hacer esto *después* de configurar el registro para sus necesidades. "
"En el ejemplo anterior, la llamada a :func:`~logging.basicConfig` hace esto "
"(utilizando el valor de ``sys.stderr`` *antes* de que sea sobrescrito por "
"una instancia de ``LoggerWriter`` ). Entonces, obtendrías este tipo de "
"resultado:"

#: ../../howto/logging-cookbook.rst:3931
msgid ""
"Of course, the examples above show output according to the format used by :"
"func:`~logging.basicConfig`, but you can use a different formatter when you "
"configure logging."
msgstr ""
"Por supuesto, los ejemplos anteriores muestran la salida según el formato "
"utilizado por :func:`~logging.basicConfig`, pero puede utilizar un "
"formateador diferente cuando configure el registro."

#: ../../howto/logging-cookbook.rst:3935
msgid ""
"Note that with the above scheme, you are somewhat at the mercy of buffering "
"and the sequence of write calls which you are intercepting. For example, "
"with the definition of ``LoggerWriter`` above, if you have the snippet"
msgstr ""
"Ten en cuenta que con el esquema anterior, estás un poco a merced del "
"buffering y de la secuencia de llamadas de escritura que estás "
"interceptando. Por ejemplo, con la definición de ``LoggerWriter`` anterior, "
"si tienes el fragmento de código"

#: ../../howto/logging-cookbook.rst:3944
msgid "then running the script results in"
msgstr "la ejecución del script da como resultado"

#: ../../howto/logging-cookbook.rst:3962
msgid ""
"As you can see, this output isn't ideal. That's because the underlying code "
"which writes to ``sys.stderr`` makes mutiple writes, each of which results "
"in a separate logged line (for example, the last three lines above). To get "
"around this problem, you need to buffer things and only output log lines "
"when newlines are seen. Let's use a slghtly better implementation of "
"``LoggerWriter``:"
msgstr ""

#: ../../howto/logging-cookbook.rst:3987
msgid ""
"This just buffers up stuff until a newline is seen, and then logs complete "
"lines. With this approach, you get better output:"
msgstr ""
"Esto sólo almacena cosas hasta que se ve una nueva línea, y luego registra "
"las líneas completas. Con este enfoque, se obtiene una mejor salida:"

#: ../../howto/logging-cookbook.rst:4003
msgid "Patterns to avoid"
msgstr "Patrones a evitar"

#: ../../howto/logging-cookbook.rst:4005
msgid ""
"Although the preceding sections have described ways of doing things you "
"might need to do or deal with, it is worth mentioning some usage patterns "
"which are *unhelpful*, and which should therefore be avoided in most cases. "
"The following sections are in no particular order."
msgstr ""
"Aunque en las secciones anteriores se han descrito formas de hacer cosas que "
"puede que necesite hacer o tratar, merece la pena mencionar algunos patrones "
"de uso que son *inútiles* y que, por tanto, deberían evitarse en la mayoría "
"de los casos. Las siguientes secciones no siguen ningún orden en particular."

#: ../../howto/logging-cookbook.rst:4011
msgid "Opening the same log file multiple times"
msgstr "Abrir varias veces el mismo archivo de registro"

#: ../../howto/logging-cookbook.rst:4013
msgid ""
"On Windows, you will generally not be able to open the same file multiple "
"times as this will lead to a \"file is in use by another process\" error. "
"However, on POSIX platforms you'll not get any errors if you open the same "
"file multiple times. This could be done accidentally, for example by:"
msgstr ""
"En Windows, por lo general, no podrá abrir el mismo archivo varias veces, ya "
"que se producirá un error del tipo \"el archivo está siendo utilizado por "
"otro proceso\". Sin embargo, en plataformas POSIX no obtendrá ningún error "
"si abre el mismo fichero varias veces. Esto podría hacerse accidentalmente, "
"por ejemplo por:"

#: ../../howto/logging-cookbook.rst:4018
msgid ""
"Adding a file handler more than once which references the same file (e.g. by "
"a copy/paste/forget-to-change error)."
msgstr ""
"Añadir más de una vez un manejador de fichero que haga referencia al mismo "
"fichero (por ejemplo, por un error de copiar/pegar/olvidar-cambiar)."

#: ../../howto/logging-cookbook.rst:4021
msgid ""
"Opening two files that look different, as they have different names, but are "
"the same because one is a symbolic link to the other."
msgstr ""
"Abrir dos archivos que parecen diferentes, ya que tienen nombres distintos, "
"pero que son iguales porque uno es un enlace simbólico al otro."

#: ../../howto/logging-cookbook.rst:4024
msgid ""
"Forking a process, following which both parent and child have a reference to "
"the same file. This might be through use of the :mod:`multiprocessing` "
"module, for example."
msgstr ""
"Bifurcación de un proceso, tras lo cual tanto el padre como el hijo tienen "
"una referencia al mismo archivo. Esto puede hacerse, por ejemplo, utilizando "
"el módulo :mod:`multiprocessing`."

#: ../../howto/logging-cookbook.rst:4028
msgid ""
"Opening a file multiple times might *appear* to work most of the time, but "
"can lead to a number of problems in practice:"
msgstr ""
"Abrir un archivo varias veces puede *parecer* que funciona la mayoría de las "
"veces, pero en la práctica puede dar lugar a una serie de problemas:"

#: ../../howto/logging-cookbook.rst:4031
msgid ""
"Logging output can be garbled because multiple threads or processes try to "
"write to the same file. Although logging guards against concurrent use of "
"the same handler instance by multiple threads, there is no such protection "
"if concurrent writes are attempted by two different threads using two "
"different handler instances which happen to point to the same file."
msgstr ""
"La salida del registro puede ser confusa porque varios hilos o procesos "
"intentan escribir en el mismo archivo. Aunque el registro protege contra el "
"uso concurrente de la misma instancia del manejador por múltiples hilos, no "
"hay tal protección si las escrituras concurrentes son intentadas por dos "
"hilos diferentes usando dos instancias diferentes del manejador que apuntan "
"al mismo archivo."

#: ../../howto/logging-cookbook.rst:4037
msgid ""
"An attempt to delete a file (e.g. during file rotation) silently fails, "
"because there is another reference pointing to it. This can lead to "
"confusion and wasted debugging time - log entries end up in unexpected "
"places, or are lost altogether. Or a file that was supposed to be moved "
"remains in place, and grows in size unexpectedly despite size-based rotation "
"being supposedly in place."
msgstr ""
"Un intento de eliminar un archivo (por ejemplo, durante la rotación de "
"archivos) falla silenciosamente, porque hay otra referencia apuntando a él. "
"Esto puede llevar a confusión y a perder tiempo de depuración: las entradas "
"de registro acaban en lugares inesperados o se pierden por completo. O un "
"archivo que se suponía que debía ser movido permanece en su lugar, y crece "
"en tamaño inesperadamente a pesar de que la rotación basada en el tamaño "
"está supuestamente en su lugar."

#: ../../howto/logging-cookbook.rst:4044
msgid ""
"Use the techniques outlined in :ref:`multiple-processes` to circumvent such "
"issues."
msgstr ""
"Utilice las técnicas descritas en :ref:`multiple-processes` para evitar "
"estos problemas."

#: ../../howto/logging-cookbook.rst:4048
msgid "Using loggers as attributes in a class or passing them as parameters"
msgstr ""
"Utilizar registradores como atributos en una clase o pasarlos como parámetros"

#: ../../howto/logging-cookbook.rst:4050
msgid ""
"While there might be unusual cases where you'll need to do this, in general "
"there is no point because loggers are singletons. Code can always access a "
"given logger instance by name using ``logging.getLogger(name)``, so passing "
"instances around and holding them as instance attributes is pointless. Note "
"that in other languages such as Java and C#, loggers are often static class "
"attributes. However, this pattern doesn't make sense in Python, where the "
"module (and not the class) is the unit of software decomposition."
msgstr ""
"Aunque puede haber casos inusuales en los que necesites hacer esto, en "
"general no tiene sentido porque los loggers son singletons. El código "
"siempre puede acceder a una instancia dada del logger por su nombre usando "
"``logging.getLogger(name)``, por lo que pasar instancias y mantenerlas como "
"atributos de instancia no tiene sentido. Ten en cuenta que en otros "
"lenguajes como Java y C#, los loggers son a menudo atributos estáticos de "
"clase. Sin embargo, este patrón no tiene sentido en Python, donde el módulo "
"(y no la clase) es la unidad de descomposición del software."

#: ../../howto/logging-cookbook.rst:4059
msgid ""
"Adding handlers other than :class:`~logging.NullHandler` to a logger in a "
"library"
msgstr ""
"Adición de gestores distintos de :class:`~logging.NullHandler` a un "
"registrador en una biblioteca"

#: ../../howto/logging-cookbook.rst:4061
msgid ""
"Configuring logging by adding handlers, formatters and filters is the "
"responsibility of the application developer, not the library developer. If "
"you are maintaining a library, ensure that you don't add handlers to any of "
"your loggers other than a :class:`~logging.NullHandler` instance."
msgstr ""
"Configurar el registro añadiendo manejadores, formateadores y filtros es "
"responsabilidad del desarrollador de la aplicación, no del desarrollador de "
"la biblioteca. Si mantienes una biblioteca, asegúrate de no añadir "
"manejadores a ninguno de tus registradores que no sea una instancia de :"
"class:`~logging.NullHandler`."

#: ../../howto/logging-cookbook.rst:4067
msgid "Creating a lot of loggers"
msgstr "Crear muchos registradores"

#: ../../howto/logging-cookbook.rst:4069
msgid ""
"Loggers are singletons that are never freed during a script execution, and "
"so creating lots of loggers will use up memory which can't then be freed. "
"Rather than create a logger per e.g. file processed or network connection "
"made, use the :ref:`existing mechanisms <context-info>` for passing "
"contextual information into your logs and restrict the loggers created to "
"those describing areas within your application (generally modules, but "
"occasionally slightly more fine-grained than that)."
msgstr ""
"Los loggers son singletons que nunca se liberan durante la ejecución de un "
"script, por lo que crear muchos loggers consumirá memoria que luego no podrá "
"ser liberada. En lugar de crear un logger por cada archivo procesado o "
"conexión de red realizada, utiliza :ref:`existing mechanisms <context-info>` "
"para pasar información contextual a tus logs y restringe los loggers creados "
"a aquellos que describen áreas dentro de tu aplicación (generalmente "
"módulos, pero ocasionalmente un poco más detallados que eso)."

#: ../../howto/logging-cookbook.rst:4080
msgid "Other resources"
msgstr "Otros recursos"

#: ../../howto/logging-cookbook.rst:4085
msgid "Module :mod:`logging`"
msgstr "Módulo :mod:`logging`"

#: ../../howto/logging-cookbook.rst:4085
msgid "API reference for the logging module."
msgstr "Referencia API para el módulo de registro."

#: ../../howto/logging-cookbook.rst:4088
msgid "Module :mod:`logging.config`"
msgstr "Módulo :mod:`logging.config`"

#: ../../howto/logging-cookbook.rst:4088
msgid "Configuration API for the logging module."
msgstr "API de configuración del módulo de registro."

#: ../../howto/logging-cookbook.rst:4091
msgid "Module :mod:`logging.handlers`"
msgstr "Módulo :mod:`logging.handlers`"

#: ../../howto/logging-cookbook.rst:4091
msgid "Useful handlers included with the logging module."
msgstr "Manejadores útiles incluidos con el módulo de registro."

#: ../../howto/logging-cookbook.rst:4093
msgid ":ref:`Basic Tutorial <logging-basic-tutorial>`"
msgstr ":ref:`Basic Tutorial <logging-basic-tutorial>`"

#: ../../howto/logging-cookbook.rst:4095
msgid ":ref:`Advanced Tutorial <logging-advanced-tutorial>`"
msgstr ":ref:`Advanced Tutorial <logging-advanced-tutorial>`"
