# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# Rafael Fontenelle <rffontenelle@gmail.com>, 2024
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.11\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-01-10 15:26+0000\n"
"PO-Revision-Date: 2023-05-24 02:11+0000\n"
"Last-Translator: Rafael Fontenelle <rffontenelle@gmail.com>, 2024\n"
"Language-Team: Spanish (Spain) (https://app.transifex.com/python-doc/"
"teams/5390/es_ES/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: es_ES\n"
"Plural-Forms: nplurals=3; plural=n == 1 ? 0 : n != 0 && n % 1000000 == 0 ? "
"1 : 2;\n"

#: ../../faq/windows.rst:9
msgid "Python on Windows FAQ"
msgstr "Preguntas frecuentes sobre Python en Windows"

#: ../../faq/windows.rst:12
msgid "Contents"
msgstr "Contenido"

#: ../../faq/windows.rst:22
msgid "How do I run a Python program under Windows?"
msgstr "¿Cómo se ejecuta un programa Python en Windows?"

#: ../../faq/windows.rst:24
msgid ""
"This is not necessarily a straightforward question. If you are already "
"familiar with running programs from the Windows command line then everything "
"will seem obvious; otherwise, you might need a little more guidance."
msgstr ""
"No se trata necesariamente de una pregunta sencilla. Si ya estás "
"familiarizado con la ejecución de programas desde la línea de comandos de "
"Windows, todo te parecerá obvio; de lo contrario, puede que necesites un "
"poco más de orientación."

#: ../../faq/windows.rst:28
msgid ""
"Unless you use some sort of integrated development environment, you will end "
"up *typing* Windows commands into what is referred to as a \"Command prompt "
"window\".  Usually you can create such a window from your search bar by "
"searching for ``cmd``.  You should be able to recognize when you have "
"started such a window because you will see a Windows \"command prompt\", "
"which usually looks like this:"
msgstr ""
"A menos que utilice algún tipo de entorno de desarrollo integrado, acabará "
"*escribiendo* comandos de Windows en lo que se conoce como \"ventana de "
"símbolo del sistema\".  Normalmente puedes crear una ventana de este tipo "
"desde tu barra de búsqueda buscando ``cmd``.  Deberías ser capaz de "
"reconocer cuando has iniciado una ventana de este tipo porque verás un "
"\"símbolo del sistema\" de Windows, que normalmente tiene este aspecto:"

#: ../../faq/windows.rst:39
msgid ""
"The letter may be different, and there might be other things after it, so "
"you might just as easily see something like:"
msgstr ""
"La letra puede ser diferente, y puede haber otras cosas después de ella, por "
"lo que es igual de fácil ver algo como:"

#: ../../faq/windows.rst:46
msgid ""
"depending on how your computer has been set up and what else you have "
"recently done with it.  Once you have started such a window, you are well on "
"the way to running Python programs."
msgstr ""
"dependiendo de cómo se haya configurado tu ordenador y de lo que hayas hecho "
"recientemente con él.  Una vez que haya iniciado una ventana de este tipo, "
"estará bien encaminado para ejecutar programas Python."

#: ../../faq/windows.rst:50
msgid ""
"You need to realize that your Python scripts have to be processed by another "
"program called the Python *interpreter*.  The interpreter reads your script, "
"compiles it into bytecodes, and then executes the bytecodes to run your "
"program. So, how do you arrange for the interpreter to handle your Python?"
msgstr ""
"Tienes que darte cuenta de que tus scripts de Python tienen que ser "
"procesados por otro programa llamado *interprete* de Python.  El intérprete "
"lee tu script, lo compila en bytecodes, y luego ejecuta los bytecodes para "
"ejecutar tu programa. Entonces, ¿cómo haces para que el intérprete maneje tu "
"Python?"

#: ../../faq/windows.rst:55
msgid ""
"First, you need to make sure that your command window recognises the word "
"\"py\" as an instruction to start the interpreter.  If you have opened a "
"command window, you should try entering the command ``py`` and hitting "
"return:"
msgstr ""
"En primer lugar, debes asegurarte de que tu ventana de comandos reconoce la "
"palabra \"py\" como una instrucción para iniciar el intérprete.  Si has "
"abierto una ventana de comandos, prueba a introducir el comando ``py`` y "
"pulsa Retorno:"

#: ../../faq/windows.rst:64
msgid "You should then see something like:"
msgstr "Entonces debería ver algo como:"

#: ../../faq/windows.rst:72
msgid ""
"You have started the interpreter in \"interactive mode\". That means you can "
"enter Python statements or expressions interactively and have them executed "
"or evaluated while you wait.  This is one of Python's strongest features.  "
"Check it by entering a few expressions of your choice and seeing the results:"
msgstr ""
"Has iniciado el intérprete en \"modo interactivo\". Esto significa que "
"puedes introducir sentencias o expresiones Python interactivamente y hacer "
"que se ejecuten o evalúen mientras esperas.  Esta es una de las "
"características más fuertes de Python.  Compruébalo introduciendo algunas "
"expresiones de tu elección y viendo los resultados:"

#: ../../faq/windows.rst:84
msgid ""
"Many people use the interactive mode as a convenient yet highly programmable "
"calculator.  When you want to end your interactive Python session, call the :"
"func:`exit` function or hold the :kbd:`Ctrl` key down while you enter a :kbd:"
"`Z`, then hit the \":kbd:`Enter`\" key to get back to your Windows command "
"prompt."
msgstr ""
"Mucha gente utiliza el modo interactivo como una calculadora conveniente y "
"altamente programable.  Cuando quieras terminar tu sesión interactiva de "
"Python, llama a la función :func:`exit` o mantén pulsada la tecla :kbd:"
"`Ctrl` mientras introduces un :kbd:`Z`, luego pulsa la tecla \":kbd:"
"`Enter`\" para volver a tu símbolo del sistema de Windows."

#: ../../faq/windows.rst:90
msgid ""
"You may also find that you have a Start-menu entry such as :menuselection:"
"`Start --> Programs --> Python 3.x --> Python (command line)` that results "
"in you seeing the ``>>>`` prompt in a new window.  If so, the window will "
"disappear after you call the :func:`exit` function or enter the :kbd:`Ctrl-"
"Z` character; Windows is running a single \"python\" command in the window, "
"and closes it when you terminate the interpreter."
msgstr ""
"También puede ocurrir que tenga una entrada en el menú Inicio como :"
"menuselection:`Inicio --> Programas --> Python 3.x --> Python (línea de "
"comandos)` que le haga ver el prompt ``>>>`` en una nueva ventana.  Si es "
"así, la ventana desaparecerá después de que llame a la función :func:`exit` "
"o introduzca el carácter :kbd:`Ctrl-Z`; Windows está ejecutando un único "
"comando \"python\" en la ventana, y la cierra cuando termina el intérprete."

#: ../../faq/windows.rst:97
msgid ""
"Now that we know the ``py`` command is recognized, you can give your Python "
"script to it. You'll have to give either an absolute or a relative path to "
"the Python script. Let's say your Python script is located in your desktop "
"and is named ``hello.py``, and your command prompt is nicely opened in your "
"home directory so you're seeing something similar to::"
msgstr ""
"Ahora que sabemos que el comando ``py`` es reconocido, puedes darle tu "
"script de Python. Tendrás que dar una ruta absoluta o relativa al script de "
"Python. Digamos que tu script Python está localizado en tu escritorio y se "
"llama ``hello.py``, y tu símbolo del sistema está bien abierto en tu "
"directorio home así que estás viendo algo similar a::"

#: ../../faq/windows.rst:106
msgid ""
"So now you'll ask the ``py`` command to give your script to Python by typing "
"``py`` followed by your script path::"
msgstr ""
"Así que ahora le pedirás al comando ``py`` que entregue tu script a Python "
"escribiendo ``py`` seguido de la ruta de tu script::"

#: ../../faq/windows.rst:114
msgid "How do I make Python scripts executable?"
msgstr "¿Cómo puedo hacer que los scripts de Python sean ejecutables?"

#: ../../faq/windows.rst:116
msgid ""
"On Windows, the standard Python installer already associates the .py "
"extension with a file type (Python.File) and gives that file type an open "
"command that runs the interpreter (``D:\\Program Files\\Python\\python.exe "
"\"%1\" %*``).  This is enough to make scripts executable from the command "
"prompt as 'foo.py'.  If you'd rather be able to execute the script by simple "
"typing 'foo' with no extension you need to add .py to the PATHEXT "
"environment variable."
msgstr ""
"En Windows, el instalador estándar de Python ya asocia la extensión .py con "
"un tipo de archivo (Python.File) y da a ese tipo de archivo un comando open "
"que ejecuta el intérprete (``D:\\Program Files\\Python\\python.exe \"%1\" "
"%*``).  Esto es suficiente para hacer que los scripts sean ejecutables desde "
"el símbolo del sistema como 'foo.py'.  Si prefieres poder ejecutar el script "
"simplemente escribiendo 'foo' sin extensión necesitas añadir .py a la "
"variable de entorno PATHEXT."

#: ../../faq/windows.rst:124
msgid "Why does Python sometimes take so long to start?"
msgstr "¿Por qué a veces Python tarda tanto en arrancar?"

#: ../../faq/windows.rst:126
msgid ""
"Usually Python starts very quickly on Windows, but occasionally there are "
"bug reports that Python suddenly begins to take a long time to start up.  "
"This is made even more puzzling because Python will work fine on other "
"Windows systems which appear to be configured identically."
msgstr ""
"Normalmente Python arranca muy rápido en Windows, pero ocasionalmente hay "
"informes de errores que indican que Python de repente empieza a tardar mucho "
"en arrancar.  Esto se hace aún más desconcertante porque Python funcionará "
"bien en otros sistemas Windows que parecen estar configurados de forma "
"idéntica."

#: ../../faq/windows.rst:131
msgid ""
"The problem may be caused by a misconfiguration of virus checking software "
"on the problem machine.  Some virus scanners have been known to introduce "
"startup overhead of two orders of magnitude when the scanner is configured "
"to monitor all reads from the filesystem.  Try checking the configuration of "
"virus scanning software on your systems to ensure that they are indeed "
"configured identically. McAfee, when configured to scan all file system read "
"activity, is a particular offender."
msgstr ""
"El problema puede estar causado por una mala configuración del software de "
"comprobación de virus en la máquina problemática.  Se sabe que algunos "
"escáneres de virus introducen una sobrecarga de arranque de dos órdenes de "
"magnitud cuando el escáner está configurado para monitorizar todas las "
"lecturas del sistema de archivos.  Intente comprobar la configuración del "
"software de comprobación de virus en sus sistemas para asegurarse de que "
"efectivamente están configurados de forma idéntica. McAfee, cuando se "
"configura para analizar toda la actividad de lectura del sistema de "
"archivos, es un infractor particular."

#: ../../faq/windows.rst:141
msgid "How do I make an executable from a Python script?"
msgstr "¿Cómo hago un ejecutable a partir de un script de Python?"

#: ../../faq/windows.rst:143
msgid ""
"See :ref:`faq-create-standalone-binary` for a list of tools that can be used "
"to make executables."
msgstr ""
"En :ref:`faq-create-standalone-binary` encontrará una lista de herramientas "
"que pueden utilizarse para crear ejecutables."

#: ../../faq/windows.rst:148
msgid "Is a ``*.pyd`` file the same as a DLL?"
msgstr "¿Es lo mismo un archivo ``*.pyd`` que una DLL?"

#: ../../faq/windows.rst:150
msgid ""
"Yes, .pyd files are dll's, but there are a few differences.  If you have a "
"DLL named ``foo.pyd``, then it must have a function ``PyInit_foo()``.  You "
"can then write Python \"import foo\", and Python will search for foo.pyd (as "
"well as foo.py, foo.pyc) and if it finds it, will attempt to call "
"``PyInit_foo()`` to initialize it.  You do not link your .exe with foo.lib, "
"as that would cause Windows to require the DLL to be present."
msgstr ""
"Sí, los archivos .pyd son DLL, pero hay algunas diferencias.  Si tienes una "
"DLL llamada ``foo.pyd``, entonces debe tener una función ``PyInit_foo()``.  "
"Entonces puedes escribir en Python \"import foo\", y Python buscará foo.pyd "
"(así como foo.py, foo.pyc) y si lo encuentra, intentará llamar a "
"``PyInit_foo()`` para inicializarlo.  Usted no enlaza su .exe con foo.lib, "
"ya que eso haría que Windows requiriera que la DLL estuviera presente."

#: ../../faq/windows.rst:157
msgid ""
"Note that the search path for foo.pyd is PYTHONPATH, not the same as the "
"path that Windows uses to search for foo.dll.  Also, foo.pyd need not be "
"present to run your program, whereas if you linked your program with a dll, "
"the dll is required.  Of course, foo.pyd is required if you want to say "
"``import foo``.  In a DLL, linkage is declared in the source code with "
"``__declspec(dllexport)``. In a .pyd, linkage is defined in a list of "
"available functions."
msgstr ""
"Tenga en cuenta que la ruta de búsqueda de foo.pyd es PYTHONPATH, no la "
"misma que utiliza Windows para buscar foo.dll.  Además, foo.pyd no necesita "
"estar presente para ejecutar tu programa, mientras que si enlazaste tu "
"programa con una dll, la dll es necesaria.  Por supuesto, foo.pyd es "
"necesario si quieres decir ``import foo``.  En una DLL, la vinculación se "
"declara en el código fuente con ``__declspec(dllexport)``. En una .pyd, la "
"vinculación se define en una lista de funciones disponibles."

#: ../../faq/windows.rst:166
msgid "How can I embed Python into a Windows application?"
msgstr "¿Cómo puedo integrar Python en una aplicación Windows?"

#: ../../faq/windows.rst:168
msgid ""
"Embedding the Python interpreter in a Windows app can be summarized as "
"follows:"
msgstr ""
"La incrustación del intérprete Python en una aplicación Windows puede "
"resumirse de la siguiente manera:"

#: ../../faq/windows.rst:170
msgid ""
"Do **not** build Python into your .exe file directly.  On Windows, Python "
"must be a DLL to handle importing modules that are themselves DLL's.  (This "
"is the first key undocumented fact.)  Instead, link to :file:`python{NN}."
"dll`; it is typically installed in ``C:\\Windows\\System``.  *NN* is the "
"Python version, a number such as \"33\" for Python 3.3."
msgstr ""
"**No** compile Python en su archivo .exe directamente.  En Windows, Python "
"debe ser una DLL para poder importar módulos que son a su vez DLLs.  (Este "
"es el primer hecho clave no documentado.) En su lugar, enlace a :file:"
"`python{NN}.dll`; normalmente se instala en ``C:\\Windows\\System``.  *NN* "
"es la versión de Python, un número como \"33\" para Python 3.3."

#: ../../faq/windows.rst:176
msgid ""
"You can link to Python in two different ways.  Load-time linking means "
"linking against :file:`python{NN}.lib`, while run-time linking means linking "
"against :file:`python{NN}.dll`.  (General note: :file:`python{NN}.lib` is "
"the so-called \"import lib\" corresponding to :file:`python{NN}.dll`.  It "
"merely defines symbols for the linker.)"
msgstr ""
"Puedes enlazar con Python de dos formas diferentes.  Enlazar en tiempo de "
"carga significa enlazar contra :file:`python{NN}.lib`, mientras que enlazar "
"en tiempo de ejecución significa enlazar contra :file:`python{NN}.dll`. "
"(Nota general: :file:`python{NN}.lib` es la llamada \"import lib\" "
"correspondiente a :file:`python{NN}.dll`. Simplemente define símbolos para "
"el enlazador)."

#: ../../faq/windows.rst:182
msgid ""
"Run-time linking greatly simplifies link options; everything happens at run "
"time.  Your code must load :file:`python{NN}.dll` using the Windows "
"``LoadLibraryEx()`` routine.  The code must also use access routines and "
"data in :file:`python{NN}.dll` (that is, Python's C API's) using pointers "
"obtained by the Windows ``GetProcAddress()`` routine.  Macros can make using "
"these pointers transparent to any C code that calls routines in Python's C "
"API."
msgstr ""
"La vinculación en tiempo de ejecución simplifica enormemente las opciones de "
"vinculación; todo ocurre en tiempo de ejecución.  Tu código debe cargar :"
"file:`python{NN}.dll` usando la rutina de Windows ``LoadLibraryEx()``.  El "
"código también debe usar rutinas de acceso y datos en :file:`python{NN}.dll` "
"(es decir, las API's de Python en C) usando punteros obtenidos por la rutina "
"de Windows ``GetProcAddress()``.  Las macros pueden hacer que el uso de "
"estos punteros sea transparente para cualquier código C que llame a rutinas "
"de la API C de Python."

#: ../../faq/windows.rst:191
msgid ""
"If you use SWIG, it is easy to create a Python \"extension module\" that "
"will make the app's data and methods available to Python.  SWIG will handle "
"just about all the grungy details for you.  The result is C code that you "
"link *into* your .exe file (!)  You do **not** have to create a DLL file, "
"and this also simplifies linking."
msgstr ""
"Si utiliza SWIG, es fácil crear un \"módulo de extensión\" de Python que "
"pondrá los datos y métodos de la aplicación a disposición de Python.  SWIG "
"se encargará de casi todos los detalles sucios.  El resultado es código C "
"que puedes enlazar *dentro* de tu archivo .exe (!) **No** tienes que crear "
"un archivo DLL, y esto también simplifica el enlace."

#: ../../faq/windows.rst:197
msgid ""
"SWIG will create an init function (a C function) whose name depends on the "
"name of the extension module.  For example, if the name of the module is "
"leo, the init function will be called initleo().  If you use SWIG shadow "
"classes, as you should, the init function will be called initleoc().  This "
"initializes a mostly hidden helper class used by the shadow class."
msgstr ""
"SWIG creará una función init (una función C) cuyo nombre dependerá del "
"nombre del módulo de extensión.  Por ejemplo, si el nombre del módulo es "
"leo, la función init se llamará initleo().  Si utiliza clases sombra de "
"SWIG, como debería, la función init se llamará initleoc().  Esto inicializa "
"una clase de ayuda oculta utilizada por la clase sombra."

#: ../../faq/windows.rst:203
msgid ""
"The reason you can link the C code in step 2 into your .exe file is that "
"calling the initialization function is equivalent to importing the module "
"into Python! (This is the second key undocumented fact.)"
msgstr ""
"La razón por la que puedes enlazar el código C del paso 2 en tu archivo .exe "
"es que llamar a la función de inicialización es equivalente a importar el "
"módulo a Python. (Este es el segundo hecho clave no documentado)."

#: ../../faq/windows.rst:207
msgid ""
"In short, you can use the following code to initialize the Python "
"interpreter with your extension module."
msgstr ""
"En resumen, puede utilizar el siguiente código para inicializar el "
"intérprete de Python con su módulo de extensión."

#: ../../faq/windows.rst:218
msgid ""
"There are two problems with Python's C API which will become apparent if you "
"use a compiler other than MSVC, the compiler used to build pythonNN.dll."
msgstr ""
"Hay dos problemas con la API C de Python que se harán evidentes si utilizas "
"un compilador que no sea MSVC, el compilador utilizado para construir "
"pythonNN.dll."

#: ../../faq/windows.rst:221
msgid ""
"Problem 1: The so-called \"Very High Level\" functions that take ``FILE *`` "
"arguments will not work in a multi-compiler environment because each "
"compiler's notion of a ``struct FILE`` will be different.  From an "
"implementation standpoint these are very low level functions."
msgstr ""
"Problema 1: Las funciones denominadas de \"muy alto nivel\" que toman "
"argumentos de ``FILE *`` no funcionarán en un entorno multicompilador porque "
"la noción de ``struct FILE`` de cada compilador será diferente.  Desde el "
"punto de vista de la implementación, se trata de funciones de muy bajo nivel."

#: ../../faq/windows.rst:226
msgid ""
"Problem 2: SWIG generates the following code when generating wrappers to "
"void functions:"
msgstr ""
"Problema 2: SWIG genera el siguiente código cuando genera envoltorios para "
"funciones void:"

#: ../../faq/windows.rst:235
msgid ""
"Alas, Py_None is a macro that expands to a reference to a complex data "
"structure called _Py_NoneStruct inside pythonNN.dll.  Again, this code will "
"fail in a mult-compiler environment.  Replace such code by:"
msgstr ""
"Por desgracia, Py_None es una macro que se expande a una referencia a una "
"estructura de datos compleja llamada _Py_NoneStruct dentro de pythonNN.dll.  "
"De nuevo, este código fallará en un entorno multicompilador.  Reemplace "
"dicho código por:"

#: ../../faq/windows.rst:243
msgid ""
"It may be possible to use SWIG's ``%typemap`` command to make the change "
"automatically, though I have not been able to get this to work (I'm a "
"complete SWIG newbie)."
msgstr ""
"Puede que sea posible utilizar el comando ``%typemap`` de SWIG para realizar "
"el cambio automáticamente, aunque no he conseguido que funcione (soy un "
"completo novato en SWIG)."

#: ../../faq/windows.rst:247
msgid ""
"Using a Python shell script to put up a Python interpreter window from "
"inside your Windows app is not a good idea; the resulting window will be "
"independent of your app's windowing system.  Rather, you (or the "
"wxPythonWindow class) should create a \"native\" interpreter window.  It is "
"easy to connect that window to the Python interpreter.  You can redirect "
"Python's i/o to _any_ object that supports read and write, so all you need "
"is a Python object (defined in your extension module) that contains read() "
"and write() methods."
msgstr ""
"Usar un script shell de Python para crear una ventana de interpretación de "
"Python desde dentro de tu aplicación Windows no es una buena idea; la "
"ventana resultante será independiente del sistema de ventanas de tu "
"aplicación.  En su lugar, usted (o la clase wxPythonWindow) debe crear una "
"ventana de intérprete \"nativa\".  Es fácil conectar esa ventana al "
"intérprete de Python.  Puedes redirigir el i/o de Python a _cualquier_ "
"objeto que soporte lectura y escritura, así que todo lo que necesitas es un "
"objeto Python (definido en tu módulo de extensión) que contenga métodos "
"read() y write()."

#: ../../faq/windows.rst:256
msgid "How do I keep editors from inserting tabs into my Python source?"
msgstr ""
"¿Cómo evito que los editores inserten tabulaciones en mi fuente Python?"

#: ../../faq/windows.rst:258
msgid ""
"The FAQ does not recommend using tabs, and the Python style guide, :pep:`8`, "
"recommends 4 spaces for distributed Python code; this is also the Emacs "
"python-mode default."
msgstr ""
"Las FAQ no recomiendan el uso de tabuladores, y la guía de estilo de "
"Python, :pep:`8`, recomienda 4 espacios para el código Python distribuido; "
"éste es también el valor por defecto del modo python de Emacs."

#: ../../faq/windows.rst:262
msgid ""
"Under any editor, mixing tabs and spaces is a bad idea.  MSVC is no "
"different in this respect, and is easily configured to use spaces: Take :"
"menuselection:`Tools --> Options --> Tabs`, and for file type \"Default\" "
"set \"Tab size\" and \"Indent size\" to 4, and select the \"Insert spaces\" "
"radio button."
msgstr ""
"En cualquier editor, mezclar tabuladores y espacios es una mala idea.  MSVC "
"no es diferente en este aspecto, y es fácilmente configurable para usar "
"espacios: Tome :menuselection:`Herramientas --> Opciones --> Tabuladores`, y "
"para el tipo de archivo \"Predeterminado\" configure \"Tamaño de tabulador\" "
"y \"Tamaño de sangría\" a 4, y seleccione el botón de opción \"Insertar "
"espacios\"."

#: ../../faq/windows.rst:267
msgid ""
"Python raises :exc:`IndentationError` or :exc:`TabError` if mixed tabs and "
"spaces are causing problems in leading whitespace. You may also run the :mod:"
"`tabnanny` module to check a directory tree in batch mode."
msgstr ""
"Python lanza :exc:`IndentationError` o :exc:`TabError` si la mezcla de "
"tabuladores y espacios está causando problemas en los espacios en blanco. "
"También puede ejecutar el módulo :mod:`tabnanny` para comprobar un árbol de "
"directorios por lotes."

#: ../../faq/windows.rst:274
msgid "How do I check for a keypress without blocking?"
msgstr "¿Cómo compruebo si se ha pulsado una tecla sin bloquear?"

#: ../../faq/windows.rst:276
msgid ""
"Use the :mod:`msvcrt` module.  This is a standard Windows-specific extension "
"module. It defines a function ``kbhit()`` which checks whether a keyboard "
"hit is present, and ``getch()`` which gets one character without echoing it."
msgstr ""
"Utilice el módulo :mod:`msvcrt`.  Se trata de un módulo de extensión "
"estándar específico de Windows. Define una función ``kbhit()`` que comprueba "
"si hay una pulsación de teclado, y ``getch()`` que obtiene un carácter sin "
"hacerle eco."

#: ../../faq/windows.rst:281
msgid "How do I solve the missing api-ms-win-crt-runtime-l1-1-0.dll error?"
msgstr "¿Cómo puedo solucionar el error api-ms-win-crt-runtime-l1-1-0.dll?"

#: ../../faq/windows.rst:283
msgid ""
"This can occur on Python 3.5 and later when using Windows 8.1 or earlier "
"without all updates having been installed. First ensure your operating "
"system is supported and is up to date, and if that does not resolve the "
"issue, visit the `Microsoft support page <https://support.microsoft.com/en-"
"us/help/3118401/>`_ for guidance on manually installing the C Runtime update."
msgstr ""
"Esto puede ocurrir en Python 3.5 y posteriores cuando se utiliza Windows 8.1 "
"o anterior sin que se hayan instalado todas las actualizaciones. En primer "
"lugar, asegúrate de que tu sistema operativo es compatible y está "
"actualizado y, si esto no resuelve el problema, visita la página de soporte "
"de Microsoft <https://support.microsoft.com/en-us/help/3118401/>`_ para "
"obtener instrucciones sobre cómo instalar manualmente la actualización de C "
"Runtime."
