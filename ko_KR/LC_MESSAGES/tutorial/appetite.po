# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# Rafael Fontenelle <rffontenelle@gmail.com>, 2023
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.11\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-01-21 22:20+0000\n"
"PO-Revision-Date: 2023-05-24 02:22+0000\n"
"Last-Translator: Rafael Fontenelle <rffontenelle@gmail.com>, 2023\n"
"Language-Team: Korean (Korea) (https://app.transifex.com/python-doc/"
"teams/5390/ko_KR/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ko_KR\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../tutorial/appetite.rst:5
msgid "Whetting Your Appetite"
msgstr "홍미 돋우기"

#: ../../tutorial/appetite.rst:7
msgid ""
"If you do much work on computers, eventually you find that there's some task "
"you'd like to automate.  For example, you may wish to perform a search-and-"
"replace over a large number of text files, or rename and rearrange a bunch "
"of photo files in a complicated way. Perhaps you'd like to write a small "
"custom database, or a specialized GUI application, or a simple game."
msgstr ""
"만약에 당신이 컴퓨터로 엄청나게 많은 일을 하는 사람이라면, 결과적으로 자동화"
"시키고 싶은 어떤 일을 발견할 것입니다. 예를 들어, 당신은 다수의 텍스트 파일들"
"에 대해서 찾아서-바꾸는 작업을 반복적으로 수행해야한다거나 여러 그림파일들의 "
"이름을 바꾸고 재정렬해야하는 작업을 다소 복잡한 방식으로 해야할 수도 있습니"
"다. 혹은 소규모의 커스텀 데이터베이스를 작성해야한다거나 특수화된 GUI 어플리"
"케이션을 만든다거나 간단한 게임을 하나 만들고 싶을 수도 있습니다."

#: ../../tutorial/appetite.rst:13
msgid ""
"If you're a professional software developer, you may have to work with "
"several C/C++/Java libraries but find the usual write/compile/test/re-"
"compile cycle is too slow.  Perhaps you're writing a test suite for such a "
"library and find writing the testing code a tedious task.  Or maybe you've "
"written a program that could use an extension language, and you don't want "
"to design and implement a whole new language for your application."
msgstr ""
"당신은 전문적인 소프트웨어 개발자이고, 아마도 C/C++/Java 라이브러리를 사용해"
"본 경험이 있을 수 있습니다. 하지만 일반적인 프로그램작성/컴파일/테스트/재컴파"
"일의 사이클은 너무나도 느립니다. 아마도 당신은 그러한 라이브러리에 대해서 테"
"스트 작업에 대한 코딩을 할 수도 있고 그렇게 테스트 코드를 작성하는 것이 매우 "
"지루한 작업이라는 사실을 알게 될 것입니다. 혹은 당신은 확장언어를 사용할 수 "
"있도록 어떤 프로그램을 작성해놓은 상태일 수도 있습니다. 그리고 당신은 당신의 "
"어플리케이션을 위해 완전히 새로운 언어를 구현하거나 디자인하는 것을 원하지 않"
"을 수도 있습니다."

#: ../../tutorial/appetite.rst:20
msgid "Python is just the language for you."
msgstr "이러한 당신에게 딱 맞는 언어가 파이썬입니다."

#: ../../tutorial/appetite.rst:22
msgid ""
"You could write a Unix shell script or Windows batch files for some of these "
"tasks, but shell scripts are best at moving around files and changing text "
"data, not well-suited for GUI applications or games. You could write a C/C++/"
"Java program, but it can take a lot of development time to get even a first-"
"draft program.  Python is simpler to use, available on Windows, macOS, and "
"Unix operating systems, and will help you get the job done more quickly."
msgstr ""

#: ../../tutorial/appetite.rst:29
msgid ""
"Python is simple to use, but it is a real programming language, offering "
"much more structure and support for large programs than shell scripts or "
"batch files can offer.  On the other hand, Python also offers much more "
"error checking than C, and, being a *very-high-level language*, it has high-"
"level data types built in, such as flexible arrays and dictionaries.  "
"Because of its more general data types Python is applicable to a much larger "
"problem domain than Awk or even Perl, yet many things are at least as easy "
"in Python as in those languages."
msgstr ""
"파이썬은 매우 간편한 사용법을 지녔지만 학습용 프로그래밍 언어가 아닌 진짜 프"
"로그래밍 언어입니다. 따라서 쉘스크립트나 뱃치 파일이 제공해 줄 수 있는 것보"
"다 훨씬 많은 스트럭쳐를 제공하며 대형프로그램 서포트할 수 있는 것들을 지원해"
"줍니다. 한편 파이썬은 또한 C보다 훨씬 많은 에러를 체크할 수 있으며, very-"
"high-level language인 까닭에, 파이썬은 고수준의 내장된 데이터타입을 보유하고 "
"있습니다. 예를 들어 flexible arrays와 dictionary가 있습니다. 이렇게 제공되는 "
"제너럴 데이터타입들 때문에 파이썬은 Awk나 심지어 Perl보다도 더 많은 영역의 문"
"제들에 적용이 가능합니다. 이미 많은 것들이 최소한 앞서 말한 언어들보다 파이썬"
"으로 작성하는 것이 쉽습니다."

#: ../../tutorial/appetite.rst:37
msgid ""
"Python allows you to split your program into modules that can be reused in "
"other Python programs.  It comes with a large collection of standard modules "
"that you can use as the basis of your programs --- or as examples to start "
"learning to program in Python.  Some of these modules provide things like "
"file I/O, system calls, sockets, and even interfaces to graphical user "
"interface toolkits like Tk."
msgstr ""
"파이썬은 당신이 작성한 프로그램을 여러개의 모듈로 분할 할 수 있도록 해주며, "
"이렇게 분할된 모듈은 다른 프로그램에서 재사용될 수 있습니다. 이러한 특징은 파"
"이썬의 대형 표준 모듈 컬렉션에도 해당이 되는데 이 모듈 컬렉션을 통해 당신이 "
"작성할 프로그램의 기틀을 닦을 수 있습니다. 혹은 파이썬 프로그래밍을 배울 목적"
"으로도 이러한 예제들을 사용할 수도 있습니다. 몇 몇 모듈들은 파일 입출력, 시스"
"템호출, 소켓, 그리고 심지어는 GUI 툴 킷인 Tk와 같은 것들을 제공해줍니다."

#: ../../tutorial/appetite.rst:44
msgid ""
"Python is an interpreted language, which can save you considerable time "
"during program development because no compilation and linking is necessary.  "
"The interpreter can be used interactively, which makes it easy to experiment "
"with features of the language, to write throw-away programs, or to test "
"functions during bottom-up program development. It is also a handy desk "
"calculator."
msgstr ""
"파이썬은 인터프리트 언어입니다. 이것은 우리의 개발시간을 비약적으로 단축시킬 "
"수 있는 특징입니다. 왜냐하면 컴파일과 링킹이 필요하지 않기 때문입니다. 인터프"
"리터는 상호적으로 사용이 가능한 특징을 가지고 있기 때문에 사용하기 쉽고 이를 "
"통해서 그 언어의 특징에 대해 살펴볼 수 있 수 있으며, 대충 만들어보고 버릴 프"
"로그램을 작성할 수도 있으며 Bottom-up 방식의 개발을 위해 함수를 테스트 해볼 "
"수도 있습니다. 또한 인터프리터는 손쉽게 사용가능한 계산기가 되기도  합니다."

#: ../../tutorial/appetite.rst:50
msgid ""
"Python enables programs to be written compactly and readably.  Programs "
"written in Python are typically much shorter than equivalent C,  C++, or "
"Java programs, for several reasons:"
msgstr ""
"파이썬을 통해서 프로그램을 압축적으로 가독성있게 쓸 수 있습니다. 파이썬으로 "
"쓰여진 프로그램은 C, C++, Java로 똑같이 쓰여진 프로그램들에 비해서 대단히 짧"
"습니다. 그 이유는 다음과 같습니다:"

#: ../../tutorial/appetite.rst:54
msgid ""
"the high-level data types allow you to express complex operations in a "
"single statement;"
msgstr ""
"고수준의 데이터타입을 통해서 복잡한 연산을 하나의 명령문으로 처리가 가능하다;"

#: ../../tutorial/appetite.rst:57
msgid ""
"statement grouping is done by indentation instead of beginning and ending "
"brackets;"
msgstr ""
"명령문 그룹화(statement grouping)는 bracket을 통해서가 아니라 들여쓰기를 통"
"해 이루어진다;"

#: ../../tutorial/appetite.rst:60
msgid "no variable or argument declarations are necessary."
msgstr "변수와 전달인자(argument) 의 선언이 불필요하다."

#: ../../tutorial/appetite.rst:62
msgid ""
"Python is *extensible*: if you know how to program in C it is easy to add a "
"new built-in function or module to the interpreter, either to perform "
"critical operations at maximum speed, or to link Python programs to "
"libraries that may only be available in binary form (such as a vendor-"
"specific graphics library). Once you are really hooked, you can link the "
"Python interpreter into an application written in C and use it as an "
"extension or command language for that application."
msgstr ""
"파이썬은 \"확장가능합니다\": 만약 당신이 C로 프로그램을 작성하는 방법을 알고 "
"있다면, 인터프리터에 모듈을 추가하거나 내장 함수를 추가하는 것은 별로 어렵지 "
"않습니다. 또한 프로그램이 최대의 속도로 중요한 작업을 해야한다거나 파이썬 프"
"로그램을 이진 포멧(예를 들어 벤더사에서 특정한 그래픽 라이브러리)에서만 사용"
"이 가능한 라이브러리에 링크시킨다거나 하는 작업도 쉽습니다. 한 번 마음이 끌리"
"고 나면, 당신은 파이썬 인터프리터를 C로 쓰여진 어플리케이션에 링크시킬 수 있"
"으며 그 어플리케이션을 위한 익스텐션 혹은 커멘드 언어로 사용이 가능합니다."

#: ../../tutorial/appetite.rst:70
msgid ""
"By the way, the language is named after the BBC show \"Monty Python's Flying "
"Circus\" and has nothing to do with reptiles.  Making references to Monty "
"Python skits in documentation is not only allowed, it is encouraged!"
msgstr ""
"그나저나, 파이썬이라는 이름은 BBC의 옛 쇼프로그램인 \"Monty Python's Flying "
"Circus\"의 이름을 따서 지어졌고 파충류하고는 전혀 관계가 없습니다. Monty "
"Python 의 대사를 문서화과정에서 이용하는 것은 허용되는 것이상으로 격려하는 바"
"입니다!"

#: ../../tutorial/appetite.rst:74
msgid ""
"Now that you are all excited about Python, you'll want to examine it in some "
"more detail.  Since the best way to learn a language is to use it, the "
"tutorial invites you to play with the Python interpreter as you read."
msgstr ""
"이제 파이썬에 대해 꽤나 흥미를 느끼실 것입니다. 당신은 더 세세한 내용들을 알"
"고 싶을 것입니다. 언어를 익히는 가장 좋은 방법은 그것을 사용하는 것임을 생각"
"한다면 이 튜토리얼은 당신이 파이썬 인터프리터를 가지고 놀 수 있도록 도와줄 것"
"입니다."

#: ../../tutorial/appetite.rst:78
msgid ""
"In the next chapter, the mechanics of using the interpreter are explained.  "
"This is rather mundane information, but essential for trying out the "
"examples shown later."
msgstr ""
"다음 챕터에서는, 인터프리터의 기능적 구조가 설명이 될 것입니다. 이것은 다소 "
"교과서적일 수 있으나, 뒤에 나올 예제들을 따라해보기 위해서는 필수적입니다."

#: ../../tutorial/appetite.rst:82
msgid ""
"The rest of the tutorial introduces various features of the Python language "
"and system through examples, beginning with simple expressions, statements "
"and data types, through functions and modules, and finally touching upon "
"advanced concepts like exceptions and user-defined classes."
msgstr ""
"이후에 나올 튜토리얼에서는 파이썬 언어와 시스템이 다양한 특징들에 대해서 예제"
"를 통해서 살펴볼 것입니다. 간단한 표현, 구문, 데이터 타입에서 시작해서 함수"
"와 모듈까지, 그리고 최종적으로는 예외처리와 사용자정의 클래스와 같은 다소 난"
"이도가 있는 개념까지도 다뤄볼 것입니다."
