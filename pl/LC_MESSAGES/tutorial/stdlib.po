# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001 Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# Rafael Fontenelle <rffontenelle@gmail.com>, 2025
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.14\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-05-09 14:19+0000\n"
"PO-Revision-Date: 2025-07-18 18:50+0000\n"
"Last-Translator: Rafael Fontenelle <rffontenelle@gmail.com>, 2025\n"
"Language-Team: Polish (https://app.transifex.com/python-doc/teams/5390/pl/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: pl\n"
"Plural-Forms: nplurals=4; plural=(n==1 ? 0 : (n%10>=2 && n%10<=4) && "
"(n%100<12 || n%100>14) ? 1 : n!=1 && (n%10>=0 && n%10<=1) || (n%10>=5 && "
"n%10<=9) || (n%100>=12 && n%100<=14) ? 2 : 3);\n"

#: ../../tutorial/stdlib.rst:5
msgid "Brief Tour of the Standard Library"
msgstr "Krótka wycieczka po Bibliotece Standardowej"

#: ../../tutorial/stdlib.rst:11
msgid "Operating System Interface"
msgstr "Interfejs Systemu Operacyjnego"

#: ../../tutorial/stdlib.rst:13
msgid ""
"The :mod:`os` module provides dozens of functions for interacting with the "
"operating system::"
msgstr ""
"Moduł :mod:`os` udostępnia wiele funkcji do interakcji z systemem "
"operacyjnym::"

#: ../../tutorial/stdlib.rst:16
msgid ""
">>> import os\n"
">>> os.getcwd()      # Return the current working directory\n"
"'C:\\\\Python314'\n"
">>> os.chdir('/server/accesslogs')   # Change current working directory\n"
">>> os.system('mkdir today')   # Run the command mkdir in the system shell\n"
"0"
msgstr ""

#: ../../tutorial/stdlib.rst:23
msgid ""
"Be sure to use the ``import os`` style instead of ``from os import *``.  "
"This will keep :func:`os.open` from shadowing the built-in :func:`open` "
"function which operates much differently."
msgstr ""
"Upewnij się, że używasz stylu ``import os``, a nie ``from os import *``.  W "
"tym drugim przypadku funkcja :func:`os.open` przesłoni wbudowaną funkcję :"
"func:`open`, która działa w skrajnie inny sposób."

#: ../../tutorial/stdlib.rst:29
msgid ""
"The built-in :func:`dir` and :func:`help` functions are useful as "
"interactive aids for working with large modules like :mod:`os`::"
msgstr ""
"Wbudowane funkcje :func:`dir` i :func:`help`, są przydatne jako interaktywne "
"pomoce do pracy z dużymi modułami, takimi jak :mod:`os`::"

#: ../../tutorial/stdlib.rst:32
msgid ""
">>> import os\n"
">>> dir(os)\n"
"<returns a list of all module functions>\n"
">>> help(os)\n"
"<returns an extensive manual page created from the module's docstrings>"
msgstr ""
">>> import os\n"
">>> dir(os)\n"
"<zwraca listę wszystkich funkcji modułu>\n"
">>> help(os)\n"
"<zwraca pełną instrukcję utworzoną z dokumentacji modułu>"

#: ../../tutorial/stdlib.rst:38
msgid ""
"For daily file and directory management tasks, the :mod:`shutil` module "
"provides a higher level interface that is easier to use::"
msgstr ""
"Do codziennego zarządzania plikami i katalogami, moduł  :mod:`shutil` "
"zapewnia interfejs wyższego poziomu, który jest łatwiejszy w użyciu::"

#: ../../tutorial/stdlib.rst:41
msgid ""
">>> import shutil\n"
">>> shutil.copyfile('data.db', 'archive.db')\n"
"'archive.db'\n"
">>> shutil.move('/build/executables', 'installdir')\n"
"'installdir'"
msgstr ""
">>> import shutil\n"
">>> shutil.copyfile('data.db', 'archive.db')\n"
"'archive.db'\n"
">>> shutil.move('/build/executables', 'installdir')\n"
"'installdir'"

#: ../../tutorial/stdlib.rst:51
msgid "File Wildcards"
msgstr "Symbole wieloznaczne plików"

#: ../../tutorial/stdlib.rst:53
msgid ""
"The :mod:`glob` module provides a function for making file lists from "
"directory wildcard searches::"
msgstr ""
"Moduł :mod:`glob` udostępnia funkcję do tworzenia list plików korzystając z "
"wyszukiwania na symbolach wieloznacznych::"

#: ../../tutorial/stdlib.rst:56
msgid ""
">>> import glob\n"
">>> glob.glob('*.py')\n"
"['primes.py', 'random.py', 'quote.py']"
msgstr ""
">>> import glob\n"
">>> glob.glob('*.py')\n"
"['primes.py', 'random.py', 'quote.py']"

#: ../../tutorial/stdlib.rst:64
msgid "Command Line Arguments"
msgstr "Argumenty linii polecenia"

#: ../../tutorial/stdlib.rst:66
msgid ""
"Common utility scripts often need to process command line arguments. These "
"arguments are stored in the :mod:`sys` module's *argv* attribute as a list.  "
"For instance, let's take the following :file:`demo.py` file::"
msgstr ""
"Typowe skrypty narzędziowe często wymagają przetwarzania argumentów wiersza "
"poleceń. Te argumenty są przechowywane w atrybucie *argv* modułu :mod:`sys` "
"jako lista.  Na przykład, weźmy następujący plik :file:`demo.py`::"

#: ../../tutorial/stdlib.rst:70
msgid ""
"# File demo.py\n"
"import sys\n"
"print(sys.argv)"
msgstr ""
"# Plik demo.py\n"
"import sys\n"
"print(sys.argv)"

#: ../../tutorial/stdlib.rst:74
msgid ""
"Here is the output from running ``python demo.py one two three`` at the "
"command line::"
msgstr ""
"Oto wynik uruchomienia ``python demo.py one two three`` w wierszu poleceń::"

#: ../../tutorial/stdlib.rst:77
msgid "['demo.py', 'one', 'two', 'three']"
msgstr "['demo.py', 'one', 'two', 'three']"

#: ../../tutorial/stdlib.rst:79
msgid ""
"The :mod:`argparse` module provides a more sophisticated mechanism to "
"process command line arguments.  The following script extracts one or more "
"filenames and an optional number of lines to be displayed::"
msgstr ""
"Moduł :mod:`argparse` zapewnia bardziej wyrafinowane mechanizmy do "
"przetwarzania argumentów wiersza poleceń.  Poniższy skrypt wyodrębnia jedną "
"lub więcej nazw plików i opcjonalną liczbę linii do wyświetlenia::"

#: ../../tutorial/stdlib.rst:83
msgid ""
"import argparse\n"
"\n"
"parser = argparse.ArgumentParser(\n"
"    prog='top',\n"
"    description='Show top lines from each file')\n"
"parser.add_argument('filenames', nargs='+')\n"
"parser.add_argument('-l', '--lines', type=int, default=10)\n"
"args = parser.parse_args()\n"
"print(args)"
msgstr ""
"import argparse\n"
"\n"
"parser = argparse.ArgumentParser(\n"
"    prog='top',\n"
"    description='Wypisz początkowe linie każdego z plików')\n"
"parser.add_argument('filenames', nargs='+')\n"
"parser.add_argument('-l', '--lines', type=int, default=10)\n"
"args = parser.parse_args()\n"
"print(args)"

#: ../../tutorial/stdlib.rst:93
msgid ""
"When run at the command line with ``python top.py --lines=5 alpha.txt beta."
"txt``, the script sets ``args.lines`` to ``5`` and ``args.filenames`` to "
"``['alpha.txt', 'beta.txt']``."
msgstr ""
"Po uruchomieniu w wierszu poleceń ``python top.py --lines=5 alpha.txt beta."
"txt``, skrypt ustawia ``args.lines`` na ``5`` i ``args.filenames`` na "
"``['alpha.txt', 'beta.txt']``."

#: ../../tutorial/stdlib.rst:101
msgid "Error Output Redirection and Program Termination"
msgstr "Przekierowanie wyjścia błędu i zakończenie programu"

#: ../../tutorial/stdlib.rst:103
msgid ""
"The :mod:`sys` module also has attributes for *stdin*, *stdout*, and "
"*stderr*. The latter is useful for emitting warnings and error messages to "
"make them visible even when *stdout* has been redirected::"
msgstr ""
"Moduł :mod:`sys` ma również atrybuty dla *stdin*, *stdout* i *stderr* "
"(standardowe wejście, standardowe wyjście i standardowe wyjście błędu). To "
"ostatnie jest przydatne do emitowania ostrzeżeń i komunikatów o błędach, aby "
"były widoczne nawet wtedy, gdy *stdout* został przekierowany::"

#: ../../tutorial/stdlib.rst:107
msgid ""
">>> sys.stderr.write('Warning, log file not found starting a new one\\n')\n"
"Warning, log file not found starting a new one"
msgstr ""
">>> sys.stderr.write('Ostrzeżenie, nie odnaleziono pliku rejestru, tworzę "
"nowy plik\\n')\n"
"Ostrzeżenie, nie odnaleziono pliku rejestru, tworzę nowy plik"

#: ../../tutorial/stdlib.rst:110
msgid "The most direct way to terminate a script is to use ``sys.exit()``."
msgstr ""
"Najbardziej bezpośrednim sposobem na zakończenie skryptu jest użycie ``sys."
"exit()``."

#: ../../tutorial/stdlib.rst:116
msgid "String Pattern Matching"
msgstr "Dopasowywanie wzorców w napisach"

#: ../../tutorial/stdlib.rst:118
msgid ""
"The :mod:`re` module provides regular expression tools for advanced string "
"processing. For complex matching and manipulation, regular expressions offer "
"succinct, optimized solutions::"
msgstr ""
"Moduł :mod:`re` zapewnia narzędzia wyrażeń regularnych do zaawansowanego "
"przetwarzania napisów. W przypadku złożonych operacji dopasowywania i "
"manipulacji na ciągach znaków, wyrażenia regularne pozwalają na zwięzłe, "
"zoptymalizowane rozwiązania::"

#: ../../tutorial/stdlib.rst:122
msgid ""
">>> import re\n"
">>> re.findall(r'\\bf[a-z]*', 'which foot or hand fell fastest')\n"
"['foot', 'fell', 'fastest']\n"
">>> re.sub(r'(\\b[a-z]+) \\1', r'\\1', 'cat in the the hat')\n"
"'cat in the hat'"
msgstr ""
">>> import re\n"
">>> re.findall(r'\\bf[a-z]*', 'która stopa lub ręka upadła najszybciej')\n"
"['stopa', 'upadła', 'najszybciej']\n"
">>> re.sub(r'(\\b[a-z]+) \\1', r'\\1', 'kot w kapeluszu')\n"
"'kot w kapeluszu'"

#: ../../tutorial/stdlib.rst:128
msgid ""
"When only simple capabilities are needed, string methods are preferred "
"because they are easier to read and debug::"
msgstr ""
"Gdy potrzebne są tylko proste funkcje, preferowane są funkcje standardowe "
"napisów, ponieważ są łatwiejsze do odczytania i debugowania::"

#: ../../tutorial/stdlib.rst:131
msgid ""
">>> 'tea for too'.replace('too', 'two')\n"
"'tea for two'"
msgstr ""
">>> 'herbata dla dwa'.replace('dwa', 'dwojga')\n"
"'herbata dla dwojga'"

#: ../../tutorial/stdlib.rst:138
msgid "Mathematics"
msgstr "Funkcje matematyczne"

#: ../../tutorial/stdlib.rst:140
msgid ""
"The :mod:`math` module gives access to the underlying C library functions "
"for floating-point math::"
msgstr ""
"Moduł :mod:`math` zapewnia dostęp do funkcji bazujących na standardzie "
"języka C dla obliczeń zmiennoprzecinkowych::"

#: ../../tutorial/stdlib.rst:143
msgid ""
">>> import math\n"
">>> math.cos(math.pi / 4)\n"
"0.70710678118654757\n"
">>> math.log(1024, 2)\n"
"10.0"
msgstr ""
">>> import math\n"
">>> math.cos(math.pi / 4)\n"
"0.70710678118654757\n"
">>> math.log(1024, 2)\n"
"10.0"

#: ../../tutorial/stdlib.rst:149
msgid "The :mod:`random` module provides tools for making random selections::"
msgstr ""
"Moduł :mod:`random` dostarcza narzędzi do dokonywania wyborów losowych::"

#: ../../tutorial/stdlib.rst:151
msgid ""
">>> import random\n"
">>> random.choice(['apple', 'pear', 'banana'])\n"
"'apple'\n"
">>> random.sample(range(100), 10)   # sampling without replacement\n"
"[30, 83, 16, 4, 8, 81, 41, 50, 18, 33]\n"
">>> random.random()    # random float from the interval [0.0, 1.0)\n"
"0.17970987693706186\n"
">>> random.randrange(6)    # random integer chosen from range(6)\n"
"4"
msgstr ""
">>> import random\n"
">>> random.choice(['jabłko', 'gruszka', 'banan'])\n"
"'jabłko'\n"
">>> random.sample(range(100), 10) # próbkowanie bez zwracania\n"
"[30, 83, 16, 4, 8, 81, 41, 50, 18, 33]\n"
">>> random.random() # losowa liczba zmiennoprzecinkowa z przedziału [0.0, "
"1.0)\n"
"0.17970987693706186\n"
">>> random.randrange(6) # losowa liczba całkowita wybrana z range(6)\n"
"4"

#: ../../tutorial/stdlib.rst:161
msgid ""
"The :mod:`statistics` module calculates basic statistical properties (the "
"mean, median, variance, etc.) of numeric data::"
msgstr ""
"Moduł :mod:`statistics` oblicza podstawowe wskaźniki statystyczne (średnią, "
"medianę, wariancję itp.) z danych liczbowych::"

#: ../../tutorial/stdlib.rst:164
msgid ""
">>> import statistics\n"
">>> data = [2.75, 1.75, 1.25, 0.25, 0.5, 1.25, 3.5]\n"
">>> statistics.mean(data)\n"
"1.6071428571428572\n"
">>> statistics.median(data)\n"
"1.25\n"
">>> statistics.variance(data)\n"
"1.3720238095238095"
msgstr ""
">>> import statistics\n"
">>> dane = [2.75, 1.75, 1.25, 0.25, 0.5, 1.25, 3.5]\n"
">>> statistics.mean(dane)\n"
"1.6071428571428572\n"
">>> statistics.median(dane)\n"
"1.25\n"
">>> statistics.variance(dane)\n"
"1.3720238095238095"

#: ../../tutorial/stdlib.rst:173
msgid ""
"The SciPy project <https://scipy.org> has many other modules for numerical "
"computations."
msgstr ""
"Projekt SciPy <https://scipy.org> posiada wiele innych modułów służących do "
"obliczeń numerycznych."

#: ../../tutorial/stdlib.rst:179
msgid "Internet Access"
msgstr "Dostęp do internetu"

#: ../../tutorial/stdlib.rst:181
msgid ""
"There are a number of modules for accessing the internet and processing "
"internet protocols. Two of the simplest are :mod:`urllib.request` for "
"retrieving data from URLs and :mod:`smtplib` for sending mail::"
msgstr ""
"Istnieje wiele modułów umożliwiających dostęp do Internetu i przetwarzanie "
"protokołów internetowych. Dwa z najprostszych to :mod:`urllib.request` do "
"pobierania danych z adresów URL i :mod:`smtplib` do wysyłania poczty::"

#: ../../tutorial/stdlib.rst:185
msgid ""
">>> from urllib.request import urlopen\n"
">>> with urlopen('http://worldtimeapi.org/api/timezone/etc/UTC.txt') as "
"response:\n"
"...     for line in response:\n"
"...         line = line.decode()             # Convert bytes to a str\n"
"...         if line.startswith('datetime'):\n"
"...             print(line.rstrip())         # Remove trailing newline\n"
"...\n"
"datetime: 2022-01-01T01:36:47.689215+00:00\n"
"\n"
">>> import smtplib\n"
">>> server = smtplib.SMTP('localhost')\n"
">>> server.sendmail('soothsayer@example.org', 'jcaesar@example.org',\n"
"... \"\"\"To: jcaesar@example.org\n"
"... From: soothsayer@example.org\n"
"...\n"
"... Beware the Ides of March.\n"
"... \"\"\")\n"
">>> server.quit()"
msgstr ""
">>> from urllib.request import urlopen\n"
">>> with urlopen('http://worldtimeapi.org/api/timezone/etc/UTC.txt') as "
"response:\n"
"...     for line in response:\n"
"...         line = line.decode() # Konwersja bajtów na str\n"
"...         if line.startswith('datetime'):\n"
"...             print(line.rstrip()) # Usunięcie końcowego znaku nowej "
"linii\n"
"...\n"
"datetime: 2022-01-01T01:36:47.689215+00:00\n"
"\n"
">>> import smtplib\n"
">>> server = smtplib.SMTP('localhost')\n"
">>> server.sendmail('przepowiadacz@example.org', 'jcezar@example.org',\n"
"... \"\"\"To: jcezar@example.org\n"
"... From: przepowiadacz@example.org\n"
"...\n"
"... Strzeż się Idów Marcowych.\n"
"... \"\"\")\n"
">>> server.quit()"

#: ../../tutorial/stdlib.rst:204
msgid "(Note that the second example needs a mailserver running on localhost.)"
msgstr ""
"(Zauważ, że drugi przykład wymaga serwera pocztowego działającego lokalnie "
"pod adresem `localhost`)."

#: ../../tutorial/stdlib.rst:210
msgid "Dates and Times"
msgstr "Daty i czas"

#: ../../tutorial/stdlib.rst:212
msgid ""
"The :mod:`datetime` module supplies classes for manipulating dates and times "
"in both simple and complex ways. While date and time arithmetic is "
"supported, the focus of the implementation is on efficient member extraction "
"for output formatting and manipulation.  The module also supports objects "
"that are timezone aware. ::"
msgstr ""
"Moduł :mod:`datetime` dostarcza klasy do manipulowania datami i godzinami "
"zarówno w prosty, jak i złożony sposób. Podczas gdy obsługiwana jest "
"arytmetyka daty i czasu, implementacja koncentruje się na wydajnym "
"wyodrębnianiu danych w celu formatowania i manipulacji. Moduł obsługuje "
"również obiekty uwzględniające strefę czasową ::"

#: ../../tutorial/stdlib.rst:218
msgid ""
">>> # dates are easily constructed and formatted\n"
">>> from datetime import date\n"
">>> now = date.today()\n"
">>> now\n"
"datetime.date(2003, 12, 2)\n"
">>> now.strftime(\"%m-%d-%y. %d %b %Y is a %A on the %d day of %B.\")\n"
"'12-02-03. 02 Dec 2003 is a Tuesday on the 02 day of December.'\n"
"\n"
">>> # dates support calendar arithmetic\n"
">>> birthday = date(1964, 7, 31)\n"
">>> age = now - birthday\n"
">>> age.days\n"
"14368"
msgstr ""
">>> # daty są łatwo konstruowane i formatowane\n"
">>> from datetime import date\n"
">>> teraz = date.today()\n"
">>> teraz\n"
"datetime.date(2024, 11, 25)\n"
">>> teraz.strftime(\"%m-%d-%y. %d %b %Y jest %A w %d dniu %B.\")\n"
"'11-25-24. 25 Listopada 2024 to Poniedziałek dnia 25 Listopada .\n"
"\n"
">>> # daty obsługują arytmetykę kalendarza\n"
">>> urodziny = date(1964, 7, 31)\n"
">>> wiek = teraz - birthday\n"
">>> wiek.days\n"
"14368"

#: ../../tutorial/stdlib.rst:236
msgid "Data Compression"
msgstr "Kompresja Danych"

#: ../../tutorial/stdlib.rst:238
msgid ""
"Common data archiving and compression formats are directly supported by "
"modules including: :mod:`zlib`, :mod:`gzip`, :mod:`bz2`, :mod:`lzma`, :mod:"
"`zipfile` and :mod:`tarfile`. ::"
msgstr ""
"Popularne formaty archiwizacji i kompresji danych są bezpośrednio "
"obsługiwane przez moduły, w tym: :mod:`zlib`, :mod:`gzip`, :mod:`bz2`, :mod:"
"`lzma`, :mod:`zipfile` i :mod:`tarfile`:"

#: ../../tutorial/stdlib.rst:242
msgid ""
">>> import zlib\n"
">>> s = b'witch which has which witches wrist watch'\n"
">>> len(s)\n"
"41\n"
">>> t = zlib.compress(s)\n"
">>> len(t)\n"
"37\n"
">>> zlib.decompress(t)\n"
"b'witch which has which witches wrist watch'\n"
">>> zlib.crc32(s)\n"
"226805979"
msgstr ""
">>> import zlib\n"
">>> s = b'ktora czarownica ma zegarek na nadgarstku czarownicy'\n"
">>> len(s)\n"
"52\n"
">>> t = zlib.compress(s)\n"
">>> len(t)\n"
"49\n"
">>> zlib.decompress(t)\n"
"b'która czarownica ma zegarek na nadgarstku czarownicy'\n"
">>> zlib.crc32(s)\n"
"2301872819"

#: ../../tutorial/stdlib.rst:258
msgid "Performance Measurement"
msgstr "Mierzenie wydajności"

#: ../../tutorial/stdlib.rst:260
msgid ""
"Some Python users develop a deep interest in knowing the relative "
"performance of different approaches to the same problem. Python provides a "
"measurement tool that answers those questions immediately."
msgstr ""
"Niektórzy użytkownicy Python są głęboko zainteresowani poznaniem względnej "
"wydajności różnych podejść do tego samego problemu. Python zapewnia "
"narzędzie pomiarowe, które natychmiast odpowiada na te pytania."

#: ../../tutorial/stdlib.rst:264
msgid ""
"For example, it may be tempting to use the tuple packing and unpacking "
"feature instead of the traditional approach to swapping arguments. The :mod:"
"`timeit` module quickly demonstrates a modest performance advantage::"
msgstr ""
"Na przykład kuszące może być użycie funkcji pakowania i rozpakowywania "
"krotka zamiast tradycyjnego podejścia do zamiany argument. Moduł :mod:"
"`timeit` szybko pokazuje skromną przewagę wydajności::"

#: ../../tutorial/stdlib.rst:268
msgid ""
">>> from timeit import Timer\n"
">>> Timer('t=a; a=b; b=t', 'a=1; b=2').timeit()\n"
"0.57535828626024577\n"
">>> Timer('a,b = b,a', 'a=1; b=2').timeit()\n"
"0.54962537085770791"
msgstr ""
">>> from timeit import Timer\n"
">>> Timer('t=a; a=b; b=t', 'a=1; b=2').timeit()\n"
"0.57535828626024577\n"
">>> Timer('a,b = b,a', 'a=1; b=2').timeit()\n"
"0.54962537085770791"

#: ../../tutorial/stdlib.rst:274
msgid ""
"In contrast to :mod:`timeit`'s fine level of granularity, the :mod:`profile` "
"and :mod:`pstats` modules provide tools for identifying time critical "
"sections in larger blocks of code."
msgstr ""
"W przeciwieństwie do dokładnego poziomu szczegółowości :mod:`timeit`, "
"moduły :mod:`profile` i :mod:`pstats` zapewniają narzędzia do identyfikacji "
"sekcji krytycznych czasowo w większych blok kodu."

#: ../../tutorial/stdlib.rst:282
msgid "Quality Control"
msgstr "Kontrola jakości"

#: ../../tutorial/stdlib.rst:284
msgid ""
"One approach for developing high quality software is to write tests for each "
"function as it is developed and to run those tests frequently during the "
"development process."
msgstr ""
"Jednym z podejść do tworzenia wysokiej jakości oprogramowania jest pisanie "
"testów dla każdej funkcj w trakcie jego tworzenia i częste uruchamianie tych "
"testów podczas rozwoju."

#: ../../tutorial/stdlib.rst:288
msgid ""
"The :mod:`doctest` module provides a tool for scanning a module and "
"validating tests embedded in a program's docstrings.  Test construction is "
"as simple as cutting-and-pasting a typical call along with its results into "
"the docstring. This improves the documentation by providing the user with an "
"example and it allows the doctest module to make sure the code remains true "
"to the documentation::"
msgstr ""
"Moduł :mod:`doctest`  zapewnia narzędzie do skanowania strony moduł i "
"sprawdzania poprawności testów osadzonych w dokumentacji programu.  "
"Konstrukcja testu jest tak prosta, jak wycięcie i wklejenie typowego "
"wywołania wraz z jego wynikami do docstring. Poprawia to dokumentację "
"poprzez dostarczenie użytkownikowi przykładu i pozwala doctestowi moduł "
"upewnić się, że kod pozostaje prawda zgodny z dokumentacją::"

#: ../../tutorial/stdlib.rst:295
msgid ""
"def average(values):\n"
"    \"\"\"Computes the arithmetic mean of a list of numbers.\n"
"\n"
"    >>> print(average([20, 30, 70]))\n"
"    40.0\n"
"    \"\"\"\n"
"    return sum(values) / len(values)\n"
"\n"
"import doctest\n"
"doctest.testmod()   # automatically validate the embedded tests"
msgstr ""
"def średnia(values):\n"
"    \"\"\"Oblicza średnią arytmetyczną listy liczb.\n"
"\n"
"    >>> print(średnia([20, 30, 70]))\n"
"    40.0\n"
"    \"\"\"\n"
"    return sum(values) / len(values)\n"
"\n"
"import doctest\n"
"doctest.testmod() # automatycznie waliduje wbudowane testy"

#: ../../tutorial/stdlib.rst:306
msgid ""
"The :mod:`unittest` module is not as effortless as the :mod:`doctest` "
"module, but it allows a more comprehensive set of tests to be maintained in "
"a separate file::"
msgstr ""
"Moduł :mod:`unittest` nie jest tak łatwy w użytku jak moduł :mod:`doctest` , "
"ale pozwala na przechowywanie bardziej kompleksowego zestawu testów w "
"osobnym pliku::"

#: ../../tutorial/stdlib.rst:310
msgid ""
"import unittest\n"
"\n"
"class TestStatisticalFunctions(unittest.TestCase):\n"
"\n"
"    def test_average(self):\n"
"        self.assertEqual(average([20, 30, 70]), 40.0)\n"
"        self.assertEqual(round(average([1, 5, 7]), 1), 4.3)\n"
"        with self.assertRaises(ZeroDivisionError):\n"
"            average([])\n"
"        with self.assertRaises(TypeError):\n"
"            average(20, 30, 70)\n"
"\n"
"unittest.main()  # Calling from the command line invokes all tests"
msgstr ""
"import unittest\n"
"\n"
"class TestFunkcjiStatystycznych(unittest.TestCase):\n"
"\n"
"def test_srednia(self):\n"
"  self.assertEqual(srednia([20, 30, 70]), 40.0)\n"
"  self.assertEqual(round(srednia([1, 5, 7]), 1), 4.3)\n"
"  with self.assertRaises(ZeroDivisionError):\n"
"    srednia([])\n"
"  with self.assertRaises(TypeError):\n"
"    srednia(20, 30, 70)\n"
"\n"
"unittest.main() # Wywołanie z wiersza poleceń uruchamia wszystkie testy"

#: ../../tutorial/stdlib.rst:328
msgid "Batteries Included"
msgstr "Dostarczone z bateriami"

#: ../../tutorial/stdlib.rst:330
msgid ""
"Python has a \"batteries included\" philosophy.  This is best seen through "
"the sophisticated and robust capabilities of its larger packages. For "
"example:"
msgstr ""
"Python trzyma się filozofii \"dostarczone z bateriami\". Można to najłatwiej "
"ujrzeć w zaawansowanych możliwościach jego większych pakietów. Dla przykładu:"

#: ../../tutorial/stdlib.rst:333
msgid ""
"The :mod:`xmlrpc.client` and :mod:`xmlrpc.server` modules make implementing "
"remote procedure calls into an almost trivial task.  Despite the modules' "
"names, no direct knowledge or handling of XML is needed."
msgstr ""
"Moduły :mod:`xmlrpc.client` i :mod:`xmlrpc.server` sprawiają, że "
"implementacja zdalnych wywołań procedur staje się niemal trywialnym "
"zadaniem.  Pomimo nazw moduł', nie jest wymagana bezpośrednia znajomość lub "
"obsługa XML."

#: ../../tutorial/stdlib.rst:337
msgid ""
"The :mod:`email` package is a library for managing email messages, including "
"MIME and other :rfc:`2822`-based message documents. Unlike :mod:`smtplib` "
"and :mod:`poplib` which actually send and receive messages, the email "
"package has a complete toolset for building or decoding complex message "
"structures (including attachments) and for implementing internet encoding "
"and header protocols."
msgstr ""
"Pakiet :mod:`email` jest biblioteką do zarządzania wiadomościami e-mail, w "
"tym MIME i innymi dokumentami wiadomości opartymi na :rfc:`2822`. W "
"przeciwieństwie do :mod:`smtplib` i :mod:`poplib`, które faktycznie wysyłają "
"i odbierają wiadomości, pakiet e-mail posiada kompletny zestaw narzędzi do "
"tworzenia lub dekodowania złożonych struktur wiadomości (w tym załączników) "
"oraz do implementacji internetowych protokołów kodowania i nagłówków."

#: ../../tutorial/stdlib.rst:344
msgid ""
"The :mod:`json` package provides robust support for parsing this popular "
"data interchange format.  The :mod:`csv` module supports direct reading and "
"writing of files in Comma-Separated Value format, commonly supported by "
"databases and spreadsheets.  XML processing is supported by the :mod:`xml."
"etree.ElementTree`, :mod:`xml.dom` and :mod:`xml.sax` packages. Together, "
"these modules and packages greatly simplify data interchange between Python "
"applications and other tools."
msgstr ""
"Pakiet :mod:`json` zapewnia solidne wsparcie dla analizowania tego "
"popularnego formatu wymiany danych.  Pakiet :mod:`csv` moduł obsługuje "
"bezpośredni odczyt i zapis plików w formacie Comma-Separated Value (.csv), "
"powszechnie obsługiwanym przez bazy danych i arkusze kalkulacyjne.  "
"Przetwarzanie XML jest obsługiwane przez pakiety :mod:`xml.etree."
"ElementTree`, :mod:`xml.dom` i :mod:`xml.sax`. Razem te moduły i pakiety "
"znacznie upraszczają wymianę danych między Python aplikacja i innymi "
"narzędziami."

#: ../../tutorial/stdlib.rst:353
msgid ""
"The :mod:`sqlite3` module is a wrapper for the SQLite database library, "
"providing a persistent database that can be updated and accessed using "
"slightly nonstandard SQL syntax."
msgstr ""
"Moduł :mod:`sqlite3` jest opakowaniem dla biblioteki bazy danych SQLite, "
"zapewniając trwałą bazę danych, która może być aktualizowana i dostępna przy "
"użyciu nieco niestandardowej składni SQL."

#: ../../tutorial/stdlib.rst:357
msgid ""
"Internationalization is supported by a number of modules including :mod:"
"`gettext`, :mod:`locale`, and the :mod:`codecs` package."
msgstr ""
"Internacjonalizacja jest wspierana przez kilka moduł, w tym :mod:`gettext`, :"
"mod:`locale` i :mod:`codecs`."

#: ../../tutorial/stdlib.rst:27
msgid "built-in function"
msgstr "funkcja wbudowana"

#: ../../tutorial/stdlib.rst:27
msgid "help"
msgstr "pomoc"
