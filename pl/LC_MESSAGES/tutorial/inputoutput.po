# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# Rafael Fontenelle <rffontenelle@gmail.com>, 2024
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.10\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-01-10 16:06+0000\n"
"PO-Revision-Date: 2022-11-05 17:23+0000\n"
"Last-Translator: Rafael Fontenelle <rffontenelle@gmail.com>, 2024\n"
"Language-Team: Polish (https://app.transifex.com/python-doc/teams/5390/pl/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: pl\n"
"Plural-Forms: nplurals=4; plural=(n==1 ? 0 : (n%10>=2 && n%10<=4) && "
"(n%100<12 || n%100>14) ? 1 : n!=1 && (n%10>=0 && n%10<=1) || (n%10>=5 && "
"n%10<=9) || (n%100>=12 && n%100<=14) ? 2 : 3);\n"

#: ../../tutorial/inputoutput.rst:5
msgid "Input and Output"
msgstr "Wejście i wyjście"

#: ../../tutorial/inputoutput.rst:7
msgid ""
"There are several ways to present the output of a program; data can be "
"printed in a human-readable form, or written to a file for future use. This "
"chapter will discuss some of the possibilities."
msgstr ""
"Wyjście programu można zaprezentować na różne sposoby; można wypisać dane w "
"formie czytelnej dla człowieka lub zapisać do pliku do wykorzystania w "
"przyszłości. Ten rozdział omówi niektóre z możliwości."

#: ../../tutorial/inputoutput.rst:15
msgid "Fancier Output Formatting"
msgstr "Wymyślniejsze formatowanie wyjścia"

#: ../../tutorial/inputoutput.rst:17
msgid ""
"So far we've encountered two ways of writing values: *expression statements* "
"and the :func:`print` function.  (A third way is using the :meth:`write` "
"method of file objects; the standard output file can be referenced as ``sys."
"stdout``. See the Library Reference for more information on this.)"
msgstr ""
"Do tej pory natknęliśmy się na dwa sposoby wypisywania wartości: *wyrażenia* "
"i funkcję :func:`print`. (Trzecim sposobem jest użycie metody :meth:`write` "
"obiektu pliku; do pliku standardowego wyjścia można odwołać się używając "
"``sys.stdout``. Więcej informacji na ten temat znajdziesz w dokumentacji "
"biblioteki standardowej.)"

#: ../../tutorial/inputoutput.rst:22
msgid ""
"Often you'll want more control over the formatting of your output than "
"simply printing space-separated values. There are several ways to format "
"output."
msgstr ""
"Często będziesz chciał(a) mieć więcej kontroli nad formatowaniem swojego "
"wyjścia niż proste wypisywanie wartości rozdzielonych spacją. Jest kilka "
"sposobów na formatowanie wyjścia."

#: ../../tutorial/inputoutput.rst:25
msgid ""
"To use :ref:`formatted string literals <tut-f-strings>`, begin a string with "
"``f`` or ``F`` before the opening quotation mark or triple quotation mark. "
"Inside this string, you can write a Python expression between ``{`` and ``}"
"`` characters that can refer to variables or literal values."
msgstr ""
"Aby użyć :ref:`literału ciągu znaków <tut-f-strings>`, rozpocznij ciąg "
"znaków znakiem ``f`` lub ``F`` przed otwierającym znakiem cudzysłowu. "
"Wewnątrz ciągu znaków, możesz wpisać wyrażenia Pythona pomiędzy znakami "
"``{`` i ``}``, które mogą odnosić się do zmiennych lub wartości."

#: ../../tutorial/inputoutput.rst:37
msgid ""
"The :meth:`str.format` method of strings requires more manual effort.  "
"You'll still use ``{`` and ``}`` to mark where a variable will be "
"substituted and can provide detailed formatting directives, but you'll also "
"need to provide the information to be formatted."
msgstr ""
"Metoda :meth:`str.format` ciągów znaków wymaga większego ręcznego wysiłku. "
"Nadal będziesz używał(a) ``{`` i ``}`` do zaznaczenia gdzie zmienna zostanie "
"podstawiona i możesz podać dokładne dyrektywy formatowania, ale będziesz "
"musiał(a) podać również informacje do sformatowania."

#: ../../tutorial/inputoutput.rst:50
msgid ""
"Finally, you can do all the string handling yourself by using string slicing "
"and concatenation operations to create any layout you can imagine.  The "
"string type has some methods that perform useful operations for padding "
"strings to a given column width."
msgstr ""
"Wreszcie, możesz wykonać całą obsługę ciągów znaków samodzielnie, używając "
"operacji krojenia (slicing) i konkatenacji, aby stworzyć dowolny układ, jaki "
"możesz sobie wyobrazić. Typ ciągu znaków posiada kilka metod, które wykonują "
"przydatne operacje do wypełniania ciągów znaków do danej szerokości kolumny."

#: ../../tutorial/inputoutput.rst:55
msgid ""
"When you don't need fancy output but just want a quick display of some "
"variables for debugging purposes, you can convert any value to a string with "
"the :func:`repr` or :func:`str` functions."
msgstr ""
"Gdy nie potrzebujesz wymyślnego wyjścia, tylko chcesz szybko wyświetlić "
"zmienne do debugowania, możesz zkonwertować dowolną wartość do ciągu znaków "
"przy pomocy funkcji :func:`repr` lub :func:`str`."

#: ../../tutorial/inputoutput.rst:59
msgid ""
"The :func:`str` function is meant to return representations of values which "
"are fairly human-readable, while :func:`repr` is meant to generate "
"representations which can be read by the interpreter (or will force a :exc:"
"`SyntaxError` if there is no equivalent syntax).  For objects which don't "
"have a particular representation for human consumption, :func:`str` will "
"return the same value as :func:`repr`.  Many values, such as numbers or "
"structures like lists and dictionaries, have the same representation using "
"either function.  Strings, in particular, have two distinct representations."
msgstr ""
"Funkcja :func:`str` ma na celu zwrócenie reprezentacji wartości, które są "
"dość czytelne dla człowieka, podczas gdy :func:`repr` ma na celu "
"wygenerowanie reprezentacji, które mogą być odczytane przez interpreter (lub "
"wymuszą :exc:`SyntaxError`, jeśli nie ma równoważnej składni). Dla obiektów, "
"które nie mają określonej reprezentacji do użycia przez człowieka, :func:"
"`str` zwróci taką samą wartość jak :func:`repr`. Wiele wartości, takich jak "
"liczby lub struktury takie jak listy i słowniki, ma taką samą reprezentację "
"przy użyciu obu funkcji. Ciągi znaków, w szczególności, mają dwie odrębne "
"reprezentacje."

#: ../../tutorial/inputoutput.rst:68
msgid "Some examples::"
msgstr "Trochę przykładów::"

#: ../../tutorial/inputoutput.rst:91
msgid ""
"The :mod:`string` module contains a :class:`~string.Template` class that "
"offers yet another way to substitute values into strings, using placeholders "
"like ``$x`` and replacing them with values from a dictionary, but offers "
"much less control of the formatting."
msgstr ""
"Moduł :mod:`string` zawiera klasę :class:`~string.Template`, która oferuje "
"jeszcze jeden sposób zastępowania wartości ciągami znaków, przy użyciu "
"placeholderów takich jak ``$x`` i zastępując je wartościami ze słownika, ale "
"daje mniejszą kontrolę nad formatowaniem."

#: ../../tutorial/inputoutput.rst:100
msgid "Formatted String Literals"
msgstr "f-stringi"

#: ../../tutorial/inputoutput.rst:102
msgid ""
":ref:`Formatted string literals <f-strings>` (also called f-strings for "
"short) let you include the value of Python expressions inside a string by "
"prefixing the string with ``f`` or ``F`` and writing expressions as "
"``{expression}``."
msgstr ""
":ref:`Formatowane literały ciągów znaków <f-strings>` (nazywane też krótko f-"
"stringami) pozwalają zawrzeć wartość pythonowych wyrażeń wewnątrz ciągu "
"znaków przez dodanie prefiksu ``f`` lub ``F`` i zapisanie wyrażenia jako "
"``{expression}``."

#: ../../tutorial/inputoutput.rst:107
msgid ""
"An optional format specifier can follow the expression. This allows greater "
"control over how the value is formatted. The following example rounds pi to "
"three places after the decimal::"
msgstr ""
"Po wyrażeniu może nastąpić opcjonalny specyfikator formatu. Umożliwia on "
"większą kontrolę nad sposobem formatowania wartości. Poniższy przykład "
"zaokrągla pi do trzech miejsc po przecinku::"

#: ../../tutorial/inputoutput.rst:115
msgid ""
"Passing an integer after the ``':'`` will cause that field to be a minimum "
"number of characters wide.  This is useful for making columns line up. ::"
msgstr ""
"Przekazanie liczby całkowitej po znaku ``':'`` spowoduje, że pole będzie "
"miało minimalną liczbę znaków szerokości. Jest to przydatne przy tworzeniu "
"linii kolumn. ::"

#: ../../tutorial/inputoutput.rst:126
msgid ""
"Other modifiers can be used to convert the value before it is formatted. ``'!"
"a'`` applies :func:`ascii`, ``'!s'`` applies :func:`str`, and ``'!r'`` "
"applies :func:`repr`::"
msgstr ""
"Inne modyfikatory mogą być użyte do konwersji wartości przed jej "
"sformatowaniem. ``'!a'`` stosuje :func:`ascii`, ``'!s'`` stosuje :func:"
"`str`, a ``'!r'`` stosuje :func:`repr`::"

#: ../../tutorial/inputoutput.rst:136
msgid ""
"The ``=`` specifier can be used to expand an expression to the text of the "
"expression, an equal sign, then the representation of the evaluated "
"expression:"
msgstr ""
"Specyfikator ``=`` może być użyty do rozwinięcia wyrażenia do tekstu "
"wyrażenia, znaku równości, a następnie reprezentacji obliczonego wyrażenia:"

#: ../../tutorial/inputoutput.rst:145
msgid ""
"See :ref:`self-documenting expressions <bpo-36817-whatsnew>` for more "
"information on the ``=`` specifier. For a reference on these format "
"specifications, see the reference guide for the :ref:`formatspec`."
msgstr ""
"Zobacz :ref:`wyrażenia samodokumentujące <bpo-36817-whatsnew>` po więcej "
"informacji na temat specyfikatora ``=``. Informacje o specyfikacjach formatu "
"znajdziesz w przewodniku referencyjnym dla :ref:`mini-języka specyfikacji "
"formatu <formatspec>`."

#: ../../tutorial/inputoutput.rst:152
msgid "The String format() Method"
msgstr "Metoda format() ciągu znaków"

#: ../../tutorial/inputoutput.rst:154
msgid "Basic usage of the :meth:`str.format` method looks like this::"
msgstr "Podstawowe użycie metody :meth:`str.format` wygląda tak::"

#: ../../tutorial/inputoutput.rst:159
msgid ""
"The brackets and characters within them (called format fields) are replaced "
"with the objects passed into the :meth:`str.format` method.  A number in the "
"brackets can be used to refer to the position of the object passed into the :"
"meth:`str.format` method. ::"
msgstr ""
"Nawiasy i znaki wewnątrz nich (zwane polami formatu) są zastępowane "
"obiektami przekazywanymi do metody :meth:`str.format`. Liczba w nawiasach "
"może być użyta do odwołania się do pozycji obiektu przekazanego do metody :"
"meth:`str.format`. ::"

#: ../../tutorial/inputoutput.rst:169
msgid ""
"If keyword arguments are used in the :meth:`str.format` method, their values "
"are referred to by using the name of the argument. ::"
msgstr ""
"Jeśli argumenty nazwane są używane w metodzie :meth:`str.format`, ich "
"wartości są przywoływane przy użyciu nazwy argumentu. ::"

#: ../../tutorial/inputoutput.rst:176
msgid "Positional and keyword arguments can be arbitrarily combined::"
msgstr "Argumenty pozycyjne i nazwane mogą być dowolnie łączone::"

#: ../../tutorial/inputoutput.rst:182
msgid ""
"If you have a really long format string that you don't want to split up, it "
"would be nice if you could reference the variables to be formatted by name "
"instead of by position.  This can be done by simply passing the dict and "
"using square brackets ``'[]'`` to access the keys. ::"
msgstr ""
"Jeśli masz naprawdę długi ciąg znaków formatu, którego nie chcesz dzielić, "
"byłoby miło, gdybyś mógł odwoływać się do zmiennych, które mają być "
"sformatowane według nazwy zamiast według pozycji. Można to zrobić, po prostu "
"przekazując dict i używając nawiasów kwadratowych ``'[]'``, aby uzyskać "
"dostęp do kluczy. ::"

#: ../../tutorial/inputoutput.rst:192
msgid ""
"This could also be done by passing the ``table`` dictionary as keyword "
"arguments with the ``**`` notation. ::"
msgstr ""
"Można to również zrobić, przekazując dict ``table`` jako argumenty nazwane "
"przy użyciu notacji ``**``. ::"

#: ../../tutorial/inputoutput.rst:199
msgid ""
"This is particularly useful in combination with the built-in function :func:"
"`vars`, which returns a dictionary containing all local variables."
msgstr ""
"Jest to szczególnie przydatne w połączeniu z wbudowaną funkcją :func:`vars`, "
"która zwraca słownik zawierający wszystkie zmienne lokalne."

#: ../../tutorial/inputoutput.rst:202
msgid ""
"As an example, the following lines produce a tidily aligned set of columns "
"giving integers and their squares and cubes::"
msgstr ""
"Jako przykład, poniższe wiersze tworzą uporządkowany zestaw kolumn "
"zawierających liczby całkowite oraz ich kwadraty i sześciany::"

#: ../../tutorial/inputoutput.rst:219
msgid ""
"For a complete overview of string formatting with :meth:`str.format`, see :"
"ref:`formatstrings`."
msgstr ""
"Aby uzyskać pełny przegląd formatowania ciągów znaków za pomocą funkcji :"
"meth:`str.format`, zobacz :ref:`formatstrings`."

#: ../../tutorial/inputoutput.rst:224
msgid "Manual String Formatting"
msgstr "Ręczne formatowanie ciągów znaków"

#: ../../tutorial/inputoutput.rst:226
msgid "Here's the same table of squares and cubes, formatted manually::"
msgstr "Oto ta sama tabela kwadratów i sześcianów, sformatowana ręcznie::"

#: ../../tutorial/inputoutput.rst:244
msgid ""
"(Note that the one space between each column was added by the way :func:"
"`print` works: it always adds spaces between its arguments.)"
msgstr ""
"(Zauważ, że jedna spacja między każdą kolumną została dodana przez sposób "
"działania funkcji :func:`print`: zawsze dodaje ona spacje między swoimi "
"argumentami.)"

#: ../../tutorial/inputoutput.rst:247
msgid ""
"The :meth:`str.rjust` method of string objects right-justifies a string in a "
"field of a given width by padding it with spaces on the left. There are "
"similar methods :meth:`str.ljust` and :meth:`str.center`. These methods do "
"not write anything, they just return a new string. If the input string is "
"too long, they don't truncate it, but return it unchanged; this will mess up "
"your column lay-out but that's usually better than the alternative, which "
"would be lying about a value. (If you really want truncation you can always "
"add a slice operation, as in ``x.ljust(n)[:n]``.)"
msgstr ""
"Metoda :meth:`str.rjust` obiektów typu string wyrównuje ciąg znaków do "
"prawej strony w polu o zadanej szerokości poprzez wypełnienie go spacjami po "
"lewej stronie. Istnieją podobne metody :meth:`str.ljust` i :meth:`str."
"center`. Metody te niczego nie wypisują, a jedynie zwracają nowy ciąg "
"znaków. Jeśli wejściowy ciąg jest zbyt długi, nie obcinają go, ale zwracają "
"go bez zmian; spowoduje to bałagan w układzie kolumn, ale zwykle jest to "
"lepsze niż alternatywa, która polegałaby na kłamaniu na temat wartości. "
"(Jeśli naprawdę chcesz przycinania, zawsze możesz dodać operację wycinania, "
"jak w ``x.ljust(n)[:n]``.)"

#: ../../tutorial/inputoutput.rst:256
msgid ""
"There is another method, :meth:`str.zfill`, which pads a numeric string on "
"the left with zeros.  It understands about plus and minus signs::"
msgstr ""
"Istnieje jeszcze jedna metoda, :meth:`str.zfill`, która wypełnia ciąg "
"liczbowy po lewej stronie zerami. Rozumie ona znaki plus i minus::"

#: ../../tutorial/inputoutput.rst:268
msgid "Old string formatting"
msgstr "Stare formatowanie ciągów znaków"

#: ../../tutorial/inputoutput.rst:270
msgid ""
"The % operator (modulo) can also be used for string formatting. Given "
"``'string' % values``, instances of ``%`` in ``string`` are replaced with "
"zero or more elements of ``values``. This operation is commonly known as "
"string interpolation. For example::"
msgstr ""
"Operator % (modulo) może być również używany do formatowania ciągów znaków. "
"Dla ``'string' % values``, wystąpienia ``%`` w ciągu znaków ``string`` są "
"zastępowane przez zero lub więcej elementów ``values``. Operacja ta jest "
"powszechnie znana jako interpolacja ciągów znaków. Na przykład::"

#: ../../tutorial/inputoutput.rst:279
msgid ""
"More information can be found in the :ref:`old-string-formatting` section."
msgstr "Więcej informacji można znaleźć w sekcji :ref:`old-string-formatting`."

#: ../../tutorial/inputoutput.rst:285
msgid "Reading and Writing Files"
msgstr "Odczytywanie i zapisywanie plików"

#: ../../tutorial/inputoutput.rst:291
msgid ""
":func:`open` returns a :term:`file object`, and is most commonly used with "
"two positional arguments and one keyword argument: ``open(filename, mode, "
"encoding=None)``"
msgstr ""
":func:`open` zwraca :term:`obiekt pliku <file object>` i jest najczęściej "
"używany z dwoma argumentami pozycyjnymi i jednym argumentem nazwanym: "
"``open(filename, mode, encoding=None)``"

#: ../../tutorial/inputoutput.rst:304
msgid ""
"The first argument is a string containing the filename.  The second argument "
"is another string containing a few characters describing the way in which "
"the file will be used.  *mode* can be ``'r'`` when the file will only be "
"read, ``'w'`` for only writing (an existing file with the same name will be "
"erased), and ``'a'`` opens the file for appending; any data written to the "
"file is automatically added to the end.  ``'r+'`` opens the file for both "
"reading and writing. The *mode* argument is optional; ``'r'`` will be "
"assumed if it's omitted."
msgstr ""
"Pierwszy argument to ciąg znaków zawierający nazwę pliku. Drugi argument to "
"kolejny ciąg znaków zawierający kilka znaków opisujących sposób, w jaki plik "
"będzie używany. *Tryb* może być ``'r'`` gdy plik będzie tylko do odczytu, "
"``'w'`` tylko do zapisu (istniejący plik o tej samej nazwie zostanie "
"usunięty), a ``'a'`` otwiera plik do dołączania; wszelkie dane zapisane do "
"pliku są automatycznie dodawane na koniec.``'r+'`` otwiera plik zarówno do "
"odczytu, jak i zapisu. Argument *trybu* jest opcjonalny; jeśli zostanie "
"pominięty, zakłada się, że domyślnie został wybrany ``'r'``."

#: ../../tutorial/inputoutput.rst:313
msgid ""
"Normally, files are opened in :dfn:`text mode`, that means, you read and "
"write strings from and to the file, which are encoded in a specific "
"*encoding*. If *encoding* is not specified, the default is platform "
"dependent (see :func:`open`). Because UTF-8 is the modern de-facto standard, "
"``encoding=\"utf-8\"`` is recommended unless you know that you need to use a "
"different encoding. Appending a ``'b'`` to the mode opens the file in :dfn:"
"`binary mode`. Binary mode data is read and written as :class:`bytes` "
"objects. You can not specify *encoding* when opening file in binary mode."
msgstr ""
"Zwykle pliki są otwierane w trybie tekstowym :dfn:`text mode`, co oznacza, "
"że czytasz i zapisujesz ciągi znaków do i z pliku, które są kodowane w "
"określonym *kodowaniu*. Jeśli *kodowanie* nie jest określone, domyślne jest "
"zależne od platformy (patrz :func:`open`). Ponieważ UTF-8 jest współczesnym "
"standardem, zaleca się stosowanie ``encoding=\"utf-8\"``, chyba że wiesz, że "
"musisz użyć innego kodowania. Dodanie ``'b'`` do trybu otwiera plik w trybie "
"binarnym :dfn:`binary mode`. Dane w trybie binarnym są odczytywane i "
"zapisywane jako obiekty :class:`bytes`. Nie możesz określić kodowania "
"podczas otwierania pliku w trybie binarnym."

#: ../../tutorial/inputoutput.rst:323
msgid ""
"In text mode, the default when reading is to convert platform-specific line "
"endings (``\\n`` on Unix, ``\\r\\n`` on Windows) to just ``\\n``.  When "
"writing in text mode, the default is to convert occurrences of ``\\n`` back "
"to platform-specific line endings.  This behind-the-scenes modification to "
"file data is fine for text files, but will corrupt binary data like that in :"
"file:`JPEG` or :file:`EXE` files.  Be very careful to use binary mode when "
"reading and writing such files."
msgstr ""
"W trybie tekstowym domyślnym podczas odczytywania następuje konwersja "
"końcówek linii specyficznych dla platformy (``\\n`` na systemie Unix, "
"``\\r\\n`` na systemie Windows) na pojedynczy znak ``\\n``. Podczas zapisu w "
"trybie tekstowym domyślnym jest konwersja wystąpień ``\\n`` z powrotem na "
"końcówki linii specyficzne dla platformy. Ta niewidoczna modyfikacja danych "
"pliku jest odpowiednia dla plików tekstowych, ale uszkodzi dane binarne, "
"takie jak te w plikach :file:`JPEG` lub :file:`EXE`. Bądź bardzo ostrożny, "
"używając trybu binarnego podczas odczytywania i zapisywania takich plików."

#: ../../tutorial/inputoutput.rst:331
msgid ""
"It is good practice to use the :keyword:`with` keyword when dealing with "
"file objects.  The advantage is that the file is properly closed after its "
"suite finishes, even if an exception is raised at some point.  Using :"
"keyword:`!with` is also much shorter than writing equivalent :keyword:"
"`try`\\ -\\ :keyword:`finally` blocks::"
msgstr ""
"Używanie :keyword:`with` podczas pracy z obiektami plików należy do dobrych "
"praktyk. Zaletą tego podejścia jest to, że plik jest prawidłowo zamykany po "
"zakończeniu jego bloku, nawet jeśli w pewnym momencie zostanie zgłoszony "
"wyjątek. Użycie :keyword:`!with` jest również znacznie krótsze niż pisanie "
"równoważnych bloków :keyword:`try` - :keyword:`finally`::"

#: ../../tutorial/inputoutput.rst:344
msgid ""
"If you're not using the :keyword:`with` keyword, then you should call ``f."
"close()`` to close the file and immediately free up any system resources "
"used by it."
msgstr ""
"Jeśli nie używasz :keyword:`with` to powinieneś wywołać ``f.close()`` w celu "
"zamknięcia pliku i natychmiastowego zwolnienia wszystkich zasobów "
"systemowych wykorzystywanych przez ten plik."

#: ../../tutorial/inputoutput.rst:349
msgid ""
"Calling ``f.write()`` without using the :keyword:`!with` keyword or calling "
"``f.close()`` **might** result in the arguments of ``f.write()`` not being "
"completely written to the disk, even if the program exits successfully."
msgstr ""
"Wywołanie ``f.write()`` bez użycia :keyword:`!with` lub ``f.close()`` "
"**może** spowodować, że argumenty ``f.write()`` nie zostaną w pełni zapisane "
"na dysku, nawet jeśli program zakończy się pomyślnie."

#: ../../tutorial/inputoutput.rst:357
msgid ""
"After a file object is closed, either by a :keyword:`with` statement or by "
"calling ``f.close()``, attempts to use the file object will automatically "
"fail. ::"
msgstr ""
"Po zamknięciu obiektu pliku, zarówno przez instrukcję :keyword:`with`, jak i "
"``f.close()``, wszystkie próby użycia obiektu pliku automatycznie się nie "
"powiodą. ::"

#: ../../tutorial/inputoutput.rst:371
msgid "Methods of File Objects"
msgstr "Metody obiektów plików"

#: ../../tutorial/inputoutput.rst:373
msgid ""
"The rest of the examples in this section will assume that a file object "
"called ``f`` has already been created."
msgstr ""
"Reszta przykładów w tej sekcji zakłada, że obiekt pliku o nazwie ``f`` "
"został już utworzony."

#: ../../tutorial/inputoutput.rst:376
msgid ""
"To read a file's contents, call ``f.read(size)``, which reads some quantity "
"of data and returns it as a string (in text mode) or bytes object (in binary "
"mode). *size* is an optional numeric argument.  When *size* is omitted or "
"negative, the entire contents of the file will be read and returned; it's "
"your problem if the file is twice as large as your machine's memory. "
"Otherwise, at most *size* characters (in text mode) or *size* bytes (in "
"binary mode) are read and returned. If the end of the file has been reached, "
"``f.read()`` will return an empty string (``''``).  ::"
msgstr ""
"Aby odczytać zawartość pliku, należy wywołać polecenie ``f.read(size)``, "
"które odczytuje pewną ilość danych i zwraca je jako ciąg znaków (w trybie "
"tekstowym) lub obiekt bajtowy (w trybie binarnym). *size* jest opcjonalnym "
"argumentem numerycznym.  Gdy *size* jest pominięty lub ujemny, zostanie "
"odczytana i zwrócona cała zawartość pliku; to twój problem, jeśli plik jest "
"dwa razy większy niż pamięć twojego komputera. W przeciwnym razie odczytane "
"i zwrócone zostanie co najwyżej *size* znaków (w trybie tekstowym) lub "
"*size* bajtów (w trybie binarnym). Jeśli został osiągnięty koniec pliku, ``f."
"read()`` zwróci pusty ciąg znaków (``''``). ::"

#: ../../tutorial/inputoutput.rst:390
msgid ""
"``f.readline()`` reads a single line from the file; a newline character "
"(``\\n``) is left at the end of the string, and is only omitted on the last "
"line of the file if the file doesn't end in a newline.  This makes the "
"return value unambiguous; if ``f.readline()`` returns an empty string, the "
"end of the file has been reached, while a blank line is represented by "
"``'\\n'``, a string containing only a single newline.  ::"
msgstr ""
"``f.readline()`` odczytuje pojedynczą linię z pliku; znak nowej linii "
"(``\\n``) jest pozostawiony na końcu ciągu znaków i jest pomijany tylko w "
"ostatniej linii pliku, jeśli plik nie kończy się nową linią. To sprawia, że "
"wartość zwracana jest jednoznaczna; jeśli ``f.readline()`` zwróci pusty ciąg "
"znaków, koniec pliku został osiągnięty, podczas gdy pusta linia jest "
"reprezentowana przez ``'\\n'``, ciąg znaków zawierający tylko pojedynczą "
"nową linię. ::"

#: ../../tutorial/inputoutput.rst:404
msgid ""
"For reading lines from a file, you can loop over the file object. This is "
"memory efficient, fast, and leads to simple code::"
msgstr ""
"Aby odczytać wiersze z pliku, można wykonać pętlę na obiekcie pliku. Jest to "
"wydajne pamięciowo, szybkie i prowadzi do prostego kodu::"

#: ../../tutorial/inputoutput.rst:413
msgid ""
"If you want to read all the lines of a file in a list you can also use "
"``list(f)`` or ``f.readlines()``."
msgstr ""
"Jeśli chcesz wczytać wszystkie wiersze pliku w listę, możesz również użyć "
"``list(f)`` lub ``f.readlines()``."

#: ../../tutorial/inputoutput.rst:416
msgid ""
"``f.write(string)`` writes the contents of *string* to the file, returning "
"the number of characters written. ::"
msgstr ""
"``f.write(string)`` zapisuje zawartość *string* do pliku, zwracając liczbę "
"zapisanych znaków. ::"

#: ../../tutorial/inputoutput.rst:422
msgid ""
"Other types of objects need to be converted -- either to a string (in text "
"mode) or a bytes object (in binary mode) -- before writing them::"
msgstr ""
"Inne typy obiektów muszą zostać przekonwertowane – albo na ciąg znaków (w "
"trybie tekstowym), albo na obiekt bajtowy (w trybie binarnym) – przed ich "
"zapisaniem::"

#: ../../tutorial/inputoutput.rst:430
msgid ""
"``f.tell()`` returns an integer giving the file object's current position in "
"the file represented as number of bytes from the beginning of the file when "
"in binary mode and an opaque number when in text mode."
msgstr ""
"``f.tell()`` zwraca liczbę całkowitą podającą aktualną pozycję obiektu pliku "
"w pliku reprezentowaną jako liczba bajtów od początku pliku w trybie "
"binarnym i nieprzejrzystą liczbę w trybie tekstowym."

#: ../../tutorial/inputoutput.rst:434
msgid ""
"To change the file object's position, use ``f.seek(offset, whence)``.  The "
"position is computed from adding *offset* to a reference point; the "
"reference point is selected by the *whence* argument.  A *whence* value of 0 "
"measures from the beginning of the file, 1 uses the current file position, "
"and 2 uses the end of the file as the reference point.  *whence* can be "
"omitted and defaults to 0, using the beginning of the file as the reference "
"point. ::"
msgstr ""
"Aby zmienić pozycję obiektu pliku, należy użyć ``f.seek(offset, whence)``. "
"Pozycja jest obliczana przez dodanie *offset* do punktu odniesienia; punkt "
"odniesienia jest wybierany przez argument *whence*. Wartość *whence* równa 0 "
"mierzy od początku pliku, 1 używa bieżącej pozycji pliku, a 2 używa końca "
"pliku jako punktu odniesienia. *whence* może zostać pominięty i domyślnie "
"przyjmuje wartość 0, używając początku pliku jako punktu odniesienia. ::"

#: ../../tutorial/inputoutput.rst:453
msgid ""
"In text files (those opened without a ``b`` in the mode string), only seeks "
"relative to the beginning of the file are allowed (the exception being "
"seeking to the very file end with ``seek(0, 2)``) and the only valid "
"*offset* values are those returned from the ``f.tell()``, or zero. Any other "
"*offset* value produces undefined behaviour."
msgstr ""
"W plikach tekstowych (otwieranych bez ``b`` w ciągu znaków trybu) dozwolone "
"jest tylko wyszukiwanie względem początku pliku (wyjątkiem jest wyszukiwanie "
"do samego końca pliku z ``seek(0, 2)``), a jedynymi poprawnymi wartościami "
"*offset* są te zwrócone z ``f.tell()`` lub zero. Każda inna wartość *offset* "
"powoduje niezdefiniowane zachowanie."

#: ../../tutorial/inputoutput.rst:459
msgid ""
"File objects have some additional methods, such as :meth:`~file.isatty` and :"
"meth:`~file.truncate` which are less frequently used; consult the Library "
"Reference for a complete guide to file objects."
msgstr ""

#: ../../tutorial/inputoutput.rst:467
msgid "Saving structured data with :mod:`json`"
msgstr "Zapisywanie struktur danych przy użyciu modułu :mod:`json`"

#: ../../tutorial/inputoutput.rst:471
msgid ""
"Strings can easily be written to and read from a file.  Numbers take a bit "
"more effort, since the :meth:`read` method only returns strings, which will "
"have to be passed to a function like :func:`int`, which takes a string like "
"``'123'`` and returns its numeric value 123.  When you want to save more "
"complex data types like nested lists and dictionaries, parsing and "
"serializing by hand becomes complicated."
msgstr ""

#: ../../tutorial/inputoutput.rst:478
msgid ""
"Rather than having users constantly writing and debugging code to save "
"complicated data types to files, Python allows you to use the popular data "
"interchange format called `JSON (JavaScript Object Notation) <https://json."
"org>`_.  The standard module called :mod:`json` can take Python data "
"hierarchies, and convert them to string representations; this process is "
"called :dfn:`serializing`.  Reconstructing the data from the string "
"representation is called :dfn:`deserializing`.  Between serializing and "
"deserializing, the string representing the object may have been stored in a "
"file or data, or sent over a network connection to some distant machine."
msgstr ""
"Zamiast zmuszać użytkowników do ciągłego pisania i debugowania kodu w celu "
"zapisania skomplikowanych typów danych do plików, Python pozwala na użycie "
"popularnego formatu wymiany danych zwanego `JSON (JavaScript Object "
"Notation) <https://json.org>`_.  Standardowy moduł o nazwie :mod:`json` może "
"pobierać hierarchie danych Pythona i konwertować je na reprezentacje ciągów "
"znaków; proces ten nazywany jest :dfn:`serializacją`.  Rekonstrukcja danych "
"z reprezentacji łańcuchowej nazywana jest :dfn:`deserializacją`.  Pomiędzy "
"serializacją i deserializacją, ciąg znaków reprezentujący obiekt może być "
"przechowywany w pliku lub bazie danych, lub wysłany przez połączenie "
"sieciowe do odległej maszyny."

#: ../../tutorial/inputoutput.rst:489
msgid ""
"The JSON format is commonly used by modern applications to allow for data "
"exchange.  Many programmers are already familiar with it, which makes it a "
"good choice for interoperability."
msgstr ""
"Format JSON jest powszechnie używany przez nowoczesne aplikacje w celu "
"umożliwienia wymiany danych. Wielu programistów jest już z nim "
"zaznajomionych, co czyni go dobrym wyborem dla interoperacyjności."

#: ../../tutorial/inputoutput.rst:493
msgid ""
"If you have an object ``x``, you can view its JSON string representation "
"with a simple line of code::"
msgstr ""
"Jeśli masz obiekt ``x``, możesz wyświetlić jego reprezentację JSON za pomocą "
"prostej linii kodu::"

#: ../../tutorial/inputoutput.rst:501
msgid ""
"Another variant of the :func:`~json.dumps` function, called :func:`~json."
"dump`, simply serializes the object to a :term:`text file`.  So if ``f`` is "
"a :term:`text file` object opened for writing, we can do this::"
msgstr ""
"Inny wariant funkcji :func:`~json.dumps`, zwany :func:`~json.dump`, po "
"prostu serializuje obiekt do :term:`pliku tekstowego <text file>`.  Jeśli "
"więc ``f`` jest obiektem :term:`pliku tekstowego <text file>` otwartym do "
"zapisu, możemy zrobić tak::"

#: ../../tutorial/inputoutput.rst:507
msgid ""
"To decode the object again, if ``f`` is a :term:`binary file` or :term:`text "
"file` object which has been opened for reading::"
msgstr ""
"Aby ponownie zdekodować obiekt, jeśli ``f`` jest obiektem :term:`pliku "
"binarnego <binary file>` lub :term:`pliku tekstowego <text file>`, który "
"został otwarty do odczytu::"

#: ../../tutorial/inputoutput.rst:513
msgid ""
"JSON files must be encoded in UTF-8. Use ``encoding=\"utf-8\"`` when opening "
"JSON file as a :term:`text file` for both of reading and writing."
msgstr ""
"Pliki JSON muszą być zakodowane w UTF-8. Użyj ``encoding=\"utf-8\"`` podczas "
"otwierania pliku JSON jako :term:`pliku tekstowego <text file>` zarówno do "
"odczytu jak i zapisu."

#: ../../tutorial/inputoutput.rst:516
msgid ""
"This simple serialization technique can handle lists and dictionaries, but "
"serializing arbitrary class instances in JSON requires a bit of extra "
"effort. The reference for the :mod:`json` module contains an explanation of "
"this."
msgstr ""
"Ta prosta technika serializacji może obsługiwać listy i słowniki, ale "
"serializacja dowolnych instancji klas w JSON wymaga nieco dodatkowego "
"wysiłku. Wyjaśnienie tej kwestii znajduje się w dokumentacji modułu :mod:"
"`json`."

#: ../../tutorial/inputoutput.rst:522
msgid ":mod:`pickle` - the pickle module"
msgstr ":mod:`pickle` – moduł pickle"

#: ../../tutorial/inputoutput.rst:524
msgid ""
"Contrary to :ref:`JSON <tut-json>`, *pickle* is a protocol which allows the "
"serialization of arbitrarily complex Python objects.  As such, it is "
"specific to Python and cannot be used to communicate with applications "
"written in other languages.  It is also insecure by default: deserializing "
"pickle data coming from an untrusted source can execute arbitrary code, if "
"the data was crafted by a skilled attacker."
msgstr ""
"W przeciwieństwie do :ref:`JSON <tut-json>`, *pickle* jest protokołem, który "
"pozwala na serializację dowolnie złożonych obiektów Pythona.  Jako taki, "
"jest specyficzny dla Pythona i nie może być używany do komunikacji z "
"aplikacjami napisanymi w innych językach. Jest on również domyślnie "
"niezabezpieczony: deserializacja danych pickle pochodzących z niezaufanego "
"źródła może wykonać dowolny kod, jeśli dane zostały spreparowane przez "
"doświadczonego atakującego."
