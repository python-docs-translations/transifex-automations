# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# python-doc bot, 2025
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.10\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-10-17 17:19+0000\n"
"PO-Revision-Date: 2025-09-22 15:57+0000\n"
"Last-Translator: python-doc bot, 2025\n"
"Language-Team: Portuguese (Portugal) (https://app.transifex.com/python-doc/"
"teams/5390/pt_PT/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: pt_PT\n"
"Plural-Forms: nplurals=3; plural=(n == 0 || n == 1) ? 0 : n != 0 && n % "
"1000000 == 0 ? 1 : 2;\n"

#: ../../c-api/function.rst:6
msgid "Function Objects"
msgstr "Objetos Função"

#: ../../c-api/function.rst:10
msgid "There are a few functions specific to Python functions."
msgstr "Existem algumas funções específicas para as funções do Python."

#: ../../c-api/function.rst:15
msgid "The C structure used for functions."
msgstr "A estrutura C usada para funções."

#: ../../c-api/function.rst:22
msgid ""
"This is an instance of :c:type:`PyTypeObject` and represents the Python "
"function type.  It is exposed to Python programmers as ``types."
"FunctionType``."
msgstr ""
"Esta é uma instância de :c:type:`PyTypeObject` e representa o tipo de função "
"Python. Está exposta a programadores Python como ``types.FunctionType``."

#: ../../c-api/function.rst:28
msgid ""
"Return true if *o* is a function object (has type :c:data:"
"`PyFunction_Type`). The parameter must not be ``NULL``.  This function "
"always succeeds."
msgstr ""
"Retorna verdadeiro se *o* for um objeto de função (tem tipo :c:data:"
"`PyFunction_Type`). O parâmetro não deve ser ``NULL``. Esta função é sempre "
"bem-sucedida."

#: ../../c-api/function.rst:34
msgid ""
"Return a new function object associated with the code object *code*. "
"*globals* must be a dictionary with the global variables accessible to the "
"function."
msgstr ""
"Retorna um novo objeto função associado ao objeto código *code*. *globals* "
"deve ser um dicionário com as variáveis globais acessíveis à função."

#: ../../c-api/function.rst:37
msgid ""
"The function's docstring and name are retrieved from the code object. "
"*__module__* is retrieved from *globals*. The argument defaults, annotations "
"and closure are set to ``NULL``. *__qualname__* is set to the same value as "
"the function's name."
msgstr ""

#: ../../c-api/function.rst:44
msgid ""
"As :c:func:`PyFunction_New`, but also allows setting the function object's "
"``__qualname__`` attribute.  *qualname* should be a unicode object or "
"``NULL``; if ``NULL``, the ``__qualname__`` attribute is set to the same "
"value as its ``__name__`` attribute."
msgstr ""

#: ../../c-api/function.rst:54
msgid "Return the code object associated with the function object *op*."
msgstr "Retorne o objeto de código associado ao objeto de função *op*."

#: ../../c-api/function.rst:59
msgid "Return the globals dictionary associated with the function object *op*."
msgstr "Retorne o dicionário global associado ao objeto de função *op*."

#: ../../c-api/function.rst:64
msgid ""
"Return a :term:`borrowed reference` to the *__module__* attribute of the "
"function object *op*. It can be *NULL*."
msgstr ""

#: ../../c-api/function.rst:67
msgid ""
"This is normally a string containing the module name, but can be set to any "
"other object by Python code."
msgstr ""

#: ../../c-api/function.rst:73
msgid ""
"Return the argument default values of the function object *op*. This can be "
"a tuple of arguments or ``NULL``."
msgstr ""
"Retorna os valores padrão dos argumentos do objeto de função *op*. Pode ser "
"uma tupla de argumentos ou ``NULL``."

#: ../../c-api/function.rst:79
msgid ""
"Set the argument default values for the function object *op*. *defaults* "
"must be ``Py_None`` or a tuple."
msgstr ""
"Defina os valores padrão dos argumentos para o objeto de função *op*. "
"*defaults* deve ser ``Py_None`` ou uma tupla."

#: ../../c-api/function.rst:82 ../../c-api/function.rst:96
#: ../../c-api/function.rst:110
msgid "Raises :exc:`SystemError` and returns ``-1`` on failure."
msgstr "Levanta :exc:`SystemError` e retorna ``-1`` em caso de falha."

#: ../../c-api/function.rst:87
msgid ""
"Return the closure associated with the function object *op*. This can be "
"``NULL`` or a tuple of cell objects."
msgstr ""
"Retorna o encerramento associado ao objeto de função *op*. Pode ser ``NULL`` "
"ou uma tupla de objetos de célula."

#: ../../c-api/function.rst:93
msgid ""
"Set the closure associated with the function object *op*. *closure* must be "
"``Py_None`` or a tuple of cell objects."
msgstr ""
"Defina o encerramento associado ao objeto de função *op*. *closure* deve ser "
"``Py_None`` ou uma tupla de objetos de célula."

#: ../../c-api/function.rst:101
msgid ""
"Return the annotations of the function object *op*. This can be a mutable "
"dictionary or ``NULL``."
msgstr ""
"Retorna as anotações do objeto função *op*. Este pode ser um dicionário "
"mutável ou ``NULL``."

#: ../../c-api/function.rst:107
msgid ""
"Set the annotations for the function object *op*. *annotations* must be a "
"dictionary or ``Py_None``."
msgstr ""
"Define as anotações para o objeto função *op*. *annotations* deve ser um "
"dicionário ou ``Py_None``."
