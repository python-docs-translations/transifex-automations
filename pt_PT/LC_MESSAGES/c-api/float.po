# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# python-doc bot, 2025
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.9\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-25 18:05+0000\n"
"PO-Revision-Date: 2025-09-22 17:54+0000\n"
"Last-Translator: python-doc bot, 2025\n"
"Language-Team: Portuguese (Portugal) (https://app.transifex.com/python-doc/teams/5390/pt_PT/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: pt_PT\n"
"Plural-Forms: nplurals=3; plural=(n == 0 || n == 1) ? 0 : n != 0 && n % 1000000 == 0 ? 1 : 2;\n"

#: ../../c-api/float.rst:6
msgid "Floating Point Objects"
msgstr ""

#: ../../c-api/float.rst:13
msgid ""
"This subtype of :c:type:`PyObject` represents a Python floating point "
"object."
msgstr ""

#: ../../c-api/float.rst:18
msgid ""
"This instance of :c:type:`PyTypeObject` represents the Python floating point"
" type.  This is the same object as :class:`float` in the Python layer."
msgstr ""

#: ../../c-api/float.rst:24
msgid ""
"Return true if its argument is a :c:type:`PyFloatObject` or a subtype of "
":c:type:`PyFloatObject`.  This function always succeeds."
msgstr ""
"Retorna true se o seu argumento for um :c:type:`PyFloatObject` ou um subtipo"
" de :c:type:`PyFloatObject`. Esta função é sempre bem-sucedida."

#: ../../c-api/float.rst:30
msgid ""
"Return true if its argument is a :c:type:`PyFloatObject`, but not a subtype "
"of :c:type:`PyFloatObject`.  This function always succeeds."
msgstr ""
"Retorna verdadeiro se o seu argumento for um :c:type:`PyFloatObject`, mas "
"não um subtipo de :c:type:`PyFloatObject`. Esta função é sempre bem-"
"sucedida."

#: ../../c-api/float.rst:36
msgid ""
"Create a :c:type:`PyFloatObject` object based on the string value in *str*, "
"or ``NULL`` on failure."
msgstr ""
"Crie um objeto :c:type:`PyFloatObject` com base no valor da string em *str* "
"ou ``NULL`` em caso de falha."

#: ../../c-api/float.rst:42
msgid ""
"Create a :c:type:`PyFloatObject` object from *v*, or ``NULL`` on failure."
msgstr ""
"Crie um objeto :c:type:`PyFloatObject` a partir de *v* ou ``NULL`` em caso "
"de falha."

#: ../../c-api/float.rst:47
msgid ""
"Return a C :c:type:`double` representation of the contents of *pyfloat*.  If"
" *pyfloat* is not a Python floating point object but has a :meth:`__float__`"
" method, this method will first be called to convert *pyfloat* into a float."
" If ``__float__()`` is not defined then it falls back to :meth:`__index__`. "
"This method returns ``-1.0`` upon failure, so one should call "
":c:func:`PyErr_Occurred` to check for errors."
msgstr ""

#: ../../c-api/float.rst:54
msgid "Use :meth:`__index__` if available."
msgstr ""

#: ../../c-api/float.rst:60
msgid ""
"Return a C :c:type:`double` representation of the contents of *pyfloat*, but"
" without error checking."
msgstr ""

#: ../../c-api/float.rst:66
msgid ""
"Return a structseq instance which contains information about the precision, "
"minimum and maximum values of a float. It's a thin wrapper around the header"
" file :file:`float.h`."
msgstr ""
"Retorna uma instância structseq que contém informações sobre a precisão, "
"valores mínimos e máximos de um float. É um invólucro fino em torno do "
"ficheiro de cabeçalho :file:`float.h`."

#: ../../c-api/float.rst:73
msgid ""
"Return the maximum representable finite float *DBL_MAX* as C "
":c:type:`double`."
msgstr ""

#: ../../c-api/float.rst:78
msgid ""
"Return the minimum normalized positive float *DBL_MIN* as C "
":c:type:`double`."
msgstr ""
