# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# André Moreira <afrmscb@gmail.com>, 2025
# python-doc bot, 2025
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.11\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-10-15 16:36+0000\n"
"PO-Revision-Date: 2025-09-22 16:49+0000\n"
"Last-Translator: python-doc bot, 2025\n"
"Language-Team: Portuguese (Portugal) (https://app.transifex.com/python-doc/"
"teams/5390/pt_PT/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: pt_PT\n"
"Plural-Forms: nplurals=3; plural=(n == 0 || n == 1) ? 0 : n != 0 && n % "
"1000000 == 0 ? 1 : 2;\n"

#: ../../c-api/init_config.rst:7
msgid "Python Initialization Configuration"
msgstr "Configuração de inicialização do Python"

#: ../../c-api/init_config.rst:11
msgid ""
"Python can be initialized with :c:func:`Py_InitializeFromConfig` and the :c:"
"type:`PyConfig` structure. It can be preinitialized with :c:func:"
"`Py_PreInitialize` and the :c:type:`PyPreConfig` structure."
msgstr ""
"O Python pode ser inicializado com :c:func:`Py_InitializeFromConfig` e a "
"estrutura :c:type:`PyConfig`. Ele pode ser pré-inicializado com :c:func:"
"`Py_PreInitialize` e a estrutura :c:type:`PyPreConfig`."

#: ../../c-api/init_config.rst:15
msgid "There are two kinds of configuration:"
msgstr "Existem dois tipos de configuração:"

#: ../../c-api/init_config.rst:17
msgid ""
"The :ref:`Python Configuration <init-python-config>` can be used to build a "
"customized Python which behaves as the regular Python. For example, "
"environment variables and command line arguments are used to configure "
"Python."
msgstr ""
"A :ref:`Configuração Python <init-python-config>` pode ser usada para criar "
"um Python personalizado que se comporta como o Python normal. Por exemplo, "
"variáveis de ambiente e argumentos de linha de comando são usados para "
"configurar o Python."

#: ../../c-api/init_config.rst:22
msgid ""
"The :ref:`Isolated Configuration <init-isolated-conf>` can be used to embed "
"Python into an application. It isolates Python from the system. For example, "
"environment variables are ignored, the LC_CTYPE locale is left unchanged and "
"no signal handler is registered."
msgstr ""
"A :ref:`Configuração Isolada <init-isolated-conf>` pode ser usada para "
"incorporar Python numa aplicação. Ela isola o Python do sistema. Por "
"exemplo, as variáveis de ambiente são ignoradas, a localidade LC_CTYPE "
"permanece inalterada e nenhum manipulador de sinal é registado."

#: ../../c-api/init_config.rst:27
msgid ""
"The :c:func:`Py_RunMain` function can be used to write a customized Python "
"program."
msgstr ""
"A função :c:func:`Py_RunMain` pode ser usada para escrever um programa "
"Python personalizado."

#: ../../c-api/init_config.rst:30
msgid ""
"See also :ref:`Initialization, Finalization, and Threads <initialization>`."
msgstr ""
"Veja também: ref:`Inicialização, Finalização e Threads <initialization>`."

#: ../../c-api/init_config.rst:33
msgid ":pep:`587` \"Python Initialization Configuration\"."
msgstr ":pep:`587` \"Configuração da inicialização do Python\"."

#: ../../c-api/init_config.rst:37
msgid "Example"
msgstr "Exemplo"

#: ../../c-api/init_config.rst:39
msgid "Example of customized Python always running in isolated mode::"
msgstr "Exemplo de Python personalizado sempre a funcionar em modo isolado::"

#: ../../c-api/init_config.rst:76
msgid "PyWideStringList"
msgstr "PyWideStringList"

#: ../../c-api/init_config.rst:80
msgid "List of ``wchar_t*`` strings."
msgstr "Lista de strings ``wchar_t*``."

#: ../../c-api/init_config.rst:82
msgid ""
"If *length* is non-zero, *items* must be non-``NULL`` and all strings must "
"be non-``NULL``."
msgstr ""
"Se *length* for diferente de zero, *items* deve ser diferente de ``NULL`` e "
"todas as cadeias de caracteres devem ser diferentes de ``NULL``."

#: ../../c-api/init_config.rst:87
msgid "Methods:"
msgstr "Métodos:"

#: ../../c-api/init_config.rst:91
msgid "Append *item* to *list*."
msgstr "Anexa *item* a *list*."

#: ../../c-api/init_config.rst:93 ../../c-api/init_config.rst:104
msgid "Python must be preinitialized to call this function."
msgstr "O Python deve ser pré-inicializado para chamar esta função."

#: ../../c-api/init_config.rst:97
msgid "Insert *item* into *list* at *index*."
msgstr "Insira *item* na *lista* no *índice*."

#: ../../c-api/init_config.rst:99
msgid ""
"If *index* is greater than or equal to *list* length, append *item* to "
"*list*."
msgstr ""
"Se *índice* for maior ou igual ao comprimento da *lista*, acrescente *item* "
"à *lista*."

#: ../../c-api/init_config.rst:102
msgid "*index* must be greater than or equal to ``0``."
msgstr "*index* deve ser maior que ou igual a ``0``."

#: ../../c-api/init_config.rst:108 ../../c-api/init_config.rst:128
#: ../../c-api/init_config.rst:235 ../../c-api/init_config.rst:544
msgid "Structure fields:"
msgstr "Campos da estrutura:"

#: ../../c-api/init_config.rst:112
msgid "List length."
msgstr "Comprimento da lista."

#: ../../c-api/init_config.rst:116
msgid "List items."
msgstr "Itens da lista."

#: ../../c-api/init_config.rst:119
msgid "PyStatus"
msgstr "PyStatus"

#: ../../c-api/init_config.rst:123
msgid ""
"Structure to store an initialization function status: success, error or exit."
msgstr ""
"Estrutura para armazenar o estado de uma função de inicialização: sucesso, "
"erro ou saída."

#: ../../c-api/init_config.rst:126
msgid "For an error, it can store the C function name which created the error."
msgstr "Para um erro, pode armazenar o nome da função C que criou o erro."

#: ../../c-api/init_config.rst:132
msgid "Exit code. Argument passed to ``exit()``."
msgstr "Código de saída. Argumento passado para ``exit()``."

#: ../../c-api/init_config.rst:136
msgid "Error message."
msgstr "Mensagem de erro."

#: ../../c-api/init_config.rst:140
msgid "Name of the function which created an error, can be ``NULL``."
msgstr "O nome da função que criou um erro pode ser ``NULL``."

#: ../../c-api/init_config.rst:144
msgid "Functions to create a status:"
msgstr "Funções para criar um estado:"

#: ../../c-api/init_config.rst:148
msgid "Success."
msgstr "Sucesso."

#: ../../c-api/init_config.rst:152
msgid "Initialization error with a message."
msgstr "Erro de inicialização com uma mensagem."

#: ../../c-api/init_config.rst:154
msgid "*err_msg* must not be ``NULL``."
msgstr "*err_msg* não pode ser ``NULL``."

#: ../../c-api/init_config.rst:158
msgid "Memory allocation failure (out of memory)."
msgstr "Falha na alocação de memória (memória insuficiente)."

#: ../../c-api/init_config.rst:162
msgid "Exit Python with the specified exit code."
msgstr "Saia do Python com o código de saída especificado."

#: ../../c-api/init_config.rst:164
msgid "Functions to handle a status:"
msgstr "Funções para lidar com um estado:"

#: ../../c-api/init_config.rst:168
msgid ""
"Is the status an error or an exit? If true, the exception must be handled; "
"by calling :c:func:`Py_ExitStatusException` for example."
msgstr ""
"O estado é um erro ou uma saída? Se for verdadeiro, a exceção deve ser "
"tratada; chamando :c:func:`Py_ExitStatusException`, por exemplo."

#: ../../c-api/init_config.rst:173
msgid "Is the result an error?"
msgstr "O resultado é um erro?"

#: ../../c-api/init_config.rst:177
msgid "Is the result an exit?"
msgstr "O resultado é uma saída?"

#: ../../c-api/init_config.rst:181
msgid ""
"Call ``exit(exitcode)`` if *status* is an exit. Print the error message and "
"exit with a non-zero exit code if *status* is an error.  Must only be called "
"if ``PyStatus_Exception(status)`` is non-zero."
msgstr ""
"Chama ``exit(exitcode)`` se *status* for uma saída. Imprime a mensagem de "
"erro e sai com um código de saída diferente de zero se *status* for um erro. "
"Só deve ser chamado se ``PyStatus_Exception(status)`` for diferente de zero."

#: ../../c-api/init_config.rst:186
msgid ""
"Internally, Python uses macros which set ``PyStatus.func``, whereas "
"functions to create a status set ``func`` to ``NULL``."
msgstr ""
"Internamente, o Python usa macros que definem ``PyStatus.func``, enquanto as "
"funções para criar um status definem ``func`` como ``NULL``."

#: ../../c-api/init_config.rst:189
msgid "Example::"
msgstr "Exemplo::"

#: ../../c-api/init_config.rst:213
msgid "PyPreConfig"
msgstr "PyPreConfig"

#: ../../c-api/init_config.rst:217
msgid "Structure used to preinitialize Python."
msgstr "Estrutura utilizada para pré-inicializar o Python."

#: ../../c-api/init_config.rst:221
msgid "Function to initialize a preconfiguration:"
msgstr "Função para inicializar uma pré-configuração:"

#: ../../c-api/init_config.rst:225
msgid ""
"Initialize the preconfiguration with :ref:`Python Configuration <init-python-"
"config>`."
msgstr ""
"Inicialize a pré-configuração com :ref:`Configuração Python <init-python-"
"config>`."

#: ../../c-api/init_config.rst:230
msgid ""
"Initialize the preconfiguration with :ref:`Isolated Configuration <init-"
"isolated-conf>`."
msgstr ""
"Inicialize a pré-configuração com :ref:`Configuração Isolada <init-isolated-"
"conf>`."

#: ../../c-api/init_config.rst:239
msgid "Name of the Python memory allocators:"
msgstr "Nome dos alocadores de memória Python:"

#: ../../c-api/init_config.rst:241
msgid ""
"``PYMEM_ALLOCATOR_NOT_SET`` (``0``): don't change memory allocators (use "
"defaults)."
msgstr ""
"``PYMEM_ALLOCATOR_NOT_SET`` (``0``): não alterar os alocadores de memória "
"(usar os padrões)."

#: ../../c-api/init_config.rst:243
msgid ""
"``PYMEM_ALLOCATOR_DEFAULT`` (``1``): :ref:`default memory allocators "
"<default-memory-allocators>`."
msgstr ""
"``PYMEM_ALLOCATOR_DEFAULT`` (``1``): :ref:`alocadores de memória padrão "
"<default-memory-allocators>`."

#: ../../c-api/init_config.rst:245
msgid ""
"``PYMEM_ALLOCATOR_DEBUG`` (``2``): :ref:`default memory allocators <default-"
"memory-allocators>` with :ref:`debug hooks <pymem-debug-hooks>`."
msgstr ""
"``PYMEM_ALLOCATOR_DEBUG`` (``2``): :ref:`alocadores de memória padrão "
"<default-memory-allocators>` com :ref:`ganchos de depuração <pymem-debug-"
"hooks>`."

#: ../../c-api/init_config.rst:248
msgid "``PYMEM_ALLOCATOR_MALLOC`` (``3``): use ``malloc()`` of the C library."
msgstr "``PYMEM_ALLOCATOR_MALLOC`` (``3``): usa ``malloc()`` da biblioteca C."

#: ../../c-api/init_config.rst:249
msgid ""
"``PYMEM_ALLOCATOR_MALLOC_DEBUG`` (``4``): force usage of ``malloc()`` with :"
"ref:`debug hooks <pymem-debug-hooks>`."
msgstr ""
"``PYMEM_ALLOCATOR_MALLOC_DEBUG`` (``4``): força a utilização de ``malloc()`` "
"com :ref:`ganchos de depuração <pymem-debug-hooks>`."

#: ../../c-api/init_config.rst:251
msgid ""
"``PYMEM_ALLOCATOR_PYMALLOC`` (``5``): :ref:`Python pymalloc memory allocator "
"<pymalloc>`."
msgstr ""
"``PYMEM_ALLOCATOR_PYMALLOC`` (``5``): :ref:`Alocador de memória Python "
"pymalloc <pymalloc>`."

#: ../../c-api/init_config.rst:253
msgid ""
"``PYMEM_ALLOCATOR_PYMALLOC_DEBUG`` (``6``): :ref:`Python pymalloc memory "
"allocator <pymalloc>` with :ref:`debug hooks <pymem-debug-hooks>`."
msgstr ""
"``PYMEM_ALLOCATOR_PYMALLOC_DEBUG`` (``6``): :ref:`Alocador de memória Python "
"pymalloc <pymalloc>` com :ref:`ganchos de depuração <pymem-debug-hooks>`."

#: ../../c-api/init_config.rst:257
msgid ""
"``PYMEM_ALLOCATOR_PYMALLOC`` and ``PYMEM_ALLOCATOR_PYMALLOC_DEBUG`` are not "
"supported if Python is :option:`configured using --without-pymalloc <--"
"without-pymalloc>`."
msgstr ""
"``PYMEM_ALLOCATOR_PYMALLOC`` e ``PYMEM_ALLOCATOR_PYMALLOC_DEBUG`` não são "
"suportados se o Python for :option:`configurado usando --without-pymalloc <--"
"without-pymalloc>`."

#: ../../c-api/init_config.rst:261
msgid "See :ref:`Memory Management <memory>`."
msgstr "Ver :ref:`Gestão de Memória <memory>`."

#: ../../c-api/init_config.rst:263
msgid "Default: ``PYMEM_ALLOCATOR_NOT_SET``."
msgstr "Padrão: ``PYMEM_ALLOCATOR_NOT_SET``."

#: ../../c-api/init_config.rst:267
msgid "Set the LC_CTYPE locale to the user preferred locale."
msgstr ""
"Defina a localidade LC_CTYPE para a localidade preferida do utilizador."

#: ../../c-api/init_config.rst:269
msgid ""
"If equals to ``0``, set :c:member:`~PyPreConfig.coerce_c_locale` and :c:"
"member:`~PyPreConfig.coerce_c_locale_warn` members to ``0``."
msgstr ""
"Se for igual a ``0``, defina os membros :c:member:`~PyPreConfig."
"coerce_c_locale` e :c:member:`~PyPreConfig.coerce_c_locale_warn` como ``0``."

#: ../../c-api/init_config.rst:272 ../../c-api/init_config.rst:283
msgid "See the :term:`locale encoding`."
msgstr "Veja o :term:`codificação de localidade`."

#: ../../c-api/init_config.rst:274 ../../c-api/init_config.rst:329
#: ../../c-api/init_config.rst:684
msgid "Default: ``1`` in Python config, ``0`` in isolated config."
msgstr "Padrão: ``1`` na configuração Python, ``0`` na configuração isolada."

#: ../../c-api/init_config.rst:278
msgid "If equals to ``2``, coerce the C locale."
msgstr "Se for igual a ``2``, force a localidade C."

#: ../../c-api/init_config.rst:280
msgid ""
"If equals to ``1``, read the LC_CTYPE locale to decide if it should be "
"coerced."
msgstr ""
"Se for igual a ``1``, ler a localidade LC_CTYPE para decidir se deve ser "
"coagido."

#: ../../c-api/init_config.rst:285 ../../c-api/init_config.rst:291
msgid "Default: ``-1`` in Python config, ``0`` in isolated config."
msgstr "Padrão: ``-1`` na configuração Python, ``0`` na configuração isolada."

#: ../../c-api/init_config.rst:289
msgid "If non-zero, emit a warning if the C locale is coerced."
msgstr "Se diferente de zero, emite um aviso se a localidade C for forçada."

#: ../../c-api/init_config.rst:295
msgid ""
":ref:`Python Development Mode <devmode>`: see :c:member:`PyConfig.dev_mode`."
msgstr ""
":ref:`Modo de desenvolvimento Python <devmode>`: consulte :c:member:"
"`PyConfig.dev_mode`."

#: ../../c-api/init_config.rst:298 ../../c-api/init_config.rst:693
#: ../../c-api/init_config.rst:735 ../../c-api/init_config.rst:1164
msgid "Default: ``-1`` in Python mode, ``0`` in isolated mode."
msgstr "Padrão: ``-1`` no modo Python, ``0`` no modo isolado."

#: ../../c-api/init_config.rst:302
msgid "Isolated mode: see :c:member:`PyConfig.isolated`."
msgstr "Modo isolado: consulte :c:member:`PyConfig.isolated`."

#: ../../c-api/init_config.rst:304 ../../c-api/init_config.rst:860
msgid "Default: ``0`` in Python mode, ``1`` in isolated mode."
msgstr "Padrão: ``0`` no modo Python, ``1`` no modo isolado."

#: ../../c-api/init_config.rst:308
msgid "If non-zero:"
msgstr "Se diferente de zero:"

#: ../../c-api/init_config.rst:310
msgid "Set :c:member:`PyPreConfig.utf8_mode` to ``0``,"
msgstr "Defina :c:member:`PyPreConfig.utf8_mode` como ``0``,"

#: ../../c-api/init_config.rst:311
msgid "Set :c:member:`PyConfig.filesystem_encoding` to ``\"mbcs\"``,"
msgstr "Defina :c:member:`PyConfig.filesystem_encoding` como ``\"mbcs\"``,"

#: ../../c-api/init_config.rst:312
msgid "Set :c:member:`PyConfig.filesystem_errors` to ``\"replace\"``."
msgstr "Defina :c:member:`PyConfig.filesystem_errors` como ``\"replace\"``."

#: ../../c-api/init_config.rst:314
msgid ""
"Initialized the from :envvar:`PYTHONLEGACYWINDOWSFSENCODING` environment "
"variable value."
msgstr ""

#: ../../c-api/init_config.rst:317 ../../c-api/init_config.rst:873
msgid ""
"Only available on Windows. ``#ifdef MS_WINDOWS`` macro can be used for "
"Windows specific code."
msgstr ""
"Disponível apenas no Windows. A macro ``#ifdef MS_WINDOWS`` pode ser usada "
"para código específico do Windows."

#: ../../c-api/init_config.rst:320 ../../c-api/init_config.rst:632
#: ../../c-api/init_config.rst:639 ../../c-api/init_config.rst:706
#: ../../c-api/init_config.rst:815 ../../c-api/init_config.rst:829
#: ../../c-api/init_config.rst:843 ../../c-api/init_config.rst:876
#: ../../c-api/init_config.rst:890 ../../c-api/init_config.rst:950
#: ../../c-api/init_config.rst:999 ../../c-api/init_config.rst:1059
#: ../../c-api/init_config.rst:1099 ../../c-api/init_config.rst:1128
#: ../../c-api/init_config.rst:1201
msgid "Default: ``0``."
msgstr "Padrão: ``0``."

#: ../../c-api/init_config.rst:324
msgid ""
"If non-zero, :c:func:`Py_PreInitializeFromArgs` and :c:func:"
"`Py_PreInitializeFromBytesArgs` parse their ``argv`` argument the same way "
"the regular Python parses command line arguments: see :ref:`Command Line "
"Arguments <using-on-cmdline>`."
msgstr ""
"Se diferente de zero, :c:func:`Py_PreInitializeFromArgs` e :c:func:"
"`Py_PreInitializeFromBytesArgs` analisam o seu argumento ``argv`` da mesma "
"forma que o Python normal analisa os argumentos da linha de comando: "
"consulte :ref:`Argumentos da linha de comando <using-on-cmdline>`."

#: ../../c-api/init_config.rst:333
msgid ""
"Use :ref:`environment variables <using-on-envvars>`? See :c:member:`PyConfig."
"use_environment`."
msgstr ""
"Usar :ref:`variáveis de ambiente <using-on-envvars>`? Consulte :c:member:"
"`PyConfig.use_environment`."

#: ../../c-api/init_config.rst:336 ../../c-api/init_config.rst:1175
msgid "Default: ``1`` in Python config and ``0`` in isolated config."
msgstr "Padrão: ``1`` na configuração Python e ``0`` na configuração isolada."

#: ../../c-api/init_config.rst:340
msgid "If non-zero, enable the :ref:`Python UTF-8 Mode <utf8-mode>`."
msgstr "Se diferente de zero, ative o :ref:`Modo UTF-8 do Python <utf8-mode>`."

#: ../../c-api/init_config.rst:342
msgid ""
"Set to ``0`` or ``1`` by the :option:`-X utf8 <-X>` command line option and "
"the :envvar:`PYTHONUTF8` environment variable."
msgstr ""
"Defina como ``0`` ou ``1`` pela opção de linha de comando :option:`-X utf8 <-"
"X>` e pela variável de ambiente :envvar:`PYTHONUTF8`."

#: ../../c-api/init_config.rst:345
msgid "Also set to ``1`` if the ``LC_CTYPE`` locale is ``C`` or ``POSIX``."
msgstr ""
"Também definido como ``1`` se a localidade ``LC_CTYPE`` for ``C`` ou "
"``POSIX``."

#: ../../c-api/init_config.rst:347
msgid "Default: ``-1`` in Python config and ``0`` in isolated config."
msgstr "Padrão: ``-1`` na configuração Python e ``0`` na configuração isolada."

#: ../../c-api/init_config.rst:353
msgid "Preinitialize Python with PyPreConfig"
msgstr "Pré-inicialize o Python com PyPreConfig"

#: ../../c-api/init_config.rst:355
msgid "The preinitialization of Python:"
msgstr "A pré-inicialização do Python:"

#: ../../c-api/init_config.rst:357
msgid "Set the Python memory allocators (:c:member:`PyPreConfig.allocator`)"
msgstr ""
"Defina os alocadores de memória Python (:c:member:`PyPreConfig.allocator`)"

#: ../../c-api/init_config.rst:358
msgid "Configure the LC_CTYPE locale (:term:`locale encoding`)"
msgstr "Configure a localidade LC_CTYPE (:term:`codificação de localidade`)"

#: ../../c-api/init_config.rst:359
msgid ""
"Set the :ref:`Python UTF-8 Mode <utf8-mode>` (:c:member:`PyPreConfig."
"utf8_mode`)"
msgstr ""
"Defina o :ref:`Modo UTF-8 do Python <utf8-mode>` (:c:member:`PyPreConfig."
"utf8_mode`)"

#: ../../c-api/init_config.rst:362
msgid ""
"The current preconfiguration (``PyPreConfig`` type) is stored in "
"``_PyRuntime.preconfig``."
msgstr ""
"A pré-configuração atual (tipo ``PyPreConfig``) é armazenada em ``_PyRuntime."
"preconfig``."

#: ../../c-api/init_config.rst:365
msgid "Functions to preinitialize Python:"
msgstr "Funções para pré-inicializar Python:"

#: ../../c-api/init_config.rst:369 ../../c-api/init_config.rst:375
#: ../../c-api/init_config.rst:384
msgid "Preinitialize Python from *preconfig* preconfiguration."
msgstr "Pré-inicialize o Python a partir da pré-configuração *preconfig*."

#: ../../c-api/init_config.rst:371 ../../c-api/init_config.rst:380
#: ../../c-api/init_config.rst:389
msgid "*preconfig* must not be ``NULL``."
msgstr "*preconfig* não deve ser ``NULL``."

#: ../../c-api/init_config.rst:377
msgid ""
"Parse *argv* command line arguments (bytes strings) if :c:member:"
"`~PyPreConfig.parse_argv` of *preconfig* is non-zero."
msgstr ""
"Analisa os argumentos da linha de comando *argv* (cadeias de bytes) se :c:"
"member:`~PyPreConfig.parse_argv` de *preconfig* for diferente de zero."

#: ../../c-api/init_config.rst:386
msgid ""
"Parse *argv* command line arguments (wide strings) if :c:member:"
"`~PyPreConfig.parse_argv` of *preconfig* is non-zero."
msgstr ""
"Analisa os argumentos da linha de comando *argv* (cadeias largas) se :c:"
"member:`~PyPreConfig.parse_argv` de *preconfig* for diferente de zero."

#: ../../c-api/init_config.rst:391 ../../c-api/init_config.rst:1263
msgid ""
"The caller is responsible to handle exceptions (error or exit) using :c:func:"
"`PyStatus_Exception` and :c:func:`Py_ExitStatusException`."
msgstr ""
"O chamador é responsável por lidar com exceções (erro ou saída) usando :c:"
"func:`PyStatus_Exception` e :c:func:`Py_ExitStatusException`."

#: ../../c-api/init_config.rst:394
msgid ""
"For :ref:`Python Configuration <init-python-config>` (:c:func:"
"`PyPreConfig_InitPythonConfig`), if Python is initialized with command line "
"arguments, the command line arguments must also be passed to preinitialize "
"Python, since they have an effect on the pre-configuration like encodings. "
"For example, the :option:`-X utf8 <-X>` command line option enables the :ref:"
"`Python UTF-8 Mode <utf8-mode>`."
msgstr ""
"Para :ref:`Configuração Python <init-python-config>` (:c:func:"
"`PyPreConfig_InitPythonConfig`), se o Python for inicializado com argumentos "
"de linha de comando, os argumentos de linha de comando também devem ser "
"passados para pré-inicializar o Python, uma vez que eles têm um efeito na "
"pré-configuração, como codificações. Por exemplo, a opção de linha de "
"comando :option:`-X utf8 <-X>` ativa o :ref:`Modo UTF-8 do Python <utf8-"
"mode>`."

#: ../../c-api/init_config.rst:401
msgid ""
"``PyMem_SetAllocator()`` can be called after :c:func:`Py_PreInitialize` and "
"before :c:func:`Py_InitializeFromConfig` to install a custom memory "
"allocator. It can be called before :c:func:`Py_PreInitialize` if :c:member:"
"`PyPreConfig.allocator` is set to ``PYMEM_ALLOCATOR_NOT_SET``."
msgstr ""
"``PyMem_SetAllocator()`` pode ser chamado após :c:func:`Py_PreInitialize` e "
"antes de :c:func:`Py_InitializeFromConfig` para instalar um alocador de "
"memória personalizado. Pode ser chamado antes de :c:func:`Py_PreInitialize` "
"se :c:member:`PyPreConfig.allocator` estiver definido como "
"``PYMEM_ALLOCATOR_NOT_SET``."

#: ../../c-api/init_config.rst:406
msgid ""
"Python memory allocation functions like :c:func:`PyMem_RawMalloc` must not "
"be used before the Python preinitialization, whereas calling directly "
"``malloc()`` and ``free()`` is always safe. :c:func:`Py_DecodeLocale` must "
"not be called before the Python preinitialization."
msgstr ""
"Funções de alocação de memória Python como :c:func:`PyMem_RawMalloc` não "
"devem ser usadas antes da pré-inicialização do Python, enquanto que chamar "
"diretamente ``malloc()`` e ``free()`` é sempre seguro. :c:func:"
"`Py_DecodeLocale` não deve ser chamado antes da pré-inicialização do Python."

#: ../../c-api/init_config.rst:411
msgid ""
"Example using the preinitialization to enable the :ref:`Python UTF-8 Mode "
"<utf8-mode>`::"
msgstr ""
"Exemplo usando a pré-inicialização para ativar o :ref:`Modo UTF-8 do Python "
"<utf8-mode>`::"

#: ../../c-api/init_config.rst:433
msgid "PyConfig"
msgstr "PyConfig"

#: ../../c-api/init_config.rst:437
msgid "Structure containing most parameters to configure Python."
msgstr "Estrutura contendo a maioria dos parâmetros para configurar o Python."

#: ../../c-api/init_config.rst:439
msgid ""
"When done, the :c:func:`PyConfig_Clear` function must be used to release the "
"configuration memory."
msgstr ""
"Quando terminar, a função :c:func:`PyConfig_Clear` deve ser usada para "
"liberar a memória de configuração."

#: ../../c-api/init_config.rst:444
msgid "Structure methods:"
msgstr "Métodos de estrutura:"

#: ../../c-api/init_config.rst:448
msgid ""
"Initialize configuration with the :ref:`Python Configuration <init-python-"
"config>`."
msgstr ""
"Inicialize a configuração com a :ref:`Configuração Python <init-python-"
"config>`."

#: ../../c-api/init_config.rst:453
msgid ""
"Initialize configuration with the :ref:`Isolated Configuration <init-"
"isolated-conf>`."
msgstr ""
"Inicialize a configuração com a :ref:`Configuração Isolada <init-isolated-"
"conf>`."

#: ../../c-api/init_config.rst:458
msgid "Copy the wide character string *str* into ``*config_str``."
msgstr "Copie a cadeia de caracteres largos *str* para ``*config_str``."

#: ../../c-api/init_config.rst:460 ../../c-api/init_config.rst:467
#: ../../c-api/init_config.rst:474 ../../c-api/init_config.rst:482
#: ../../c-api/init_config.rst:488 ../../c-api/init_config.rst:505
msgid ":ref:`Preinitialize Python <c-preinit>` if needed."
msgstr ":ref:`Pré-inicialize o Python <c-preinit>`, se necessário."

#: ../../c-api/init_config.rst:464
msgid ""
"Decode *str* using :c:func:`Py_DecodeLocale` and set the result into "
"``*config_str``."
msgstr ""
"Descodifique *str* usando :c:func:`Py_DecodeLocale` e defina o resultado em "
"``*config_str``."

#: ../../c-api/init_config.rst:471
msgid ""
"Set command line arguments (:c:member:`~PyConfig.argv` member of *config*) "
"from the *argv* list of wide character strings."
msgstr ""
"Defina os argumentos da linha de comando (:c:member:`~PyConfig.argv` membro "
"de *config*) a partir da lista *argv* de cadeias de caracteres largos."

#: ../../c-api/init_config.rst:478
msgid ""
"Set command line arguments (:c:member:`~PyConfig.argv` member of *config*) "
"from the *argv* list of bytes strings. Decode bytes using :c:func:"
"`Py_DecodeLocale`."
msgstr ""
"Defina os argumentos da linha de comando (:c:member:`~PyConfig.argv` membro "
"de *config*) a partir da lista *argv* de cadeias de bytes. Descodifique os "
"bytes usando :c:func:`Py_DecodeLocale`."

#: ../../c-api/init_config.rst:486
msgid "Set the list of wide strings *list* to *length* and *items*."
msgstr "Defina a lista de cadeias largas *list* para *length* e *items*."

#: ../../c-api/init_config.rst:492
msgid "Read all Python configuration."
msgstr "Leia toda a configuração do Python."

#: ../../c-api/init_config.rst:494
msgid "Fields which are already initialized are left unchanged."
msgstr "Os campos que já estão inicializados permanecem inalterados."

#: ../../c-api/init_config.rst:496
msgid ""
"Fields for :ref:`path configuration <init-path-config>` are no longer "
"calculated or modified when calling this function, as of Python 3.11."
msgstr ""
"Os campos para :ref:`configuração do caminho <init-path-config>` não são "
"mais calculados ou modificados ao chamar esta função, a partir do Python "
"3.11."

#: ../../c-api/init_config.rst:499 ../../c-api/init_config.rst:979
msgid ""
"The :c:func:`PyConfig_Read` function only parses :c:member:`PyConfig.argv` "
"arguments once: :c:member:`PyConfig.parse_argv` is set to ``2`` after "
"arguments are parsed. Since Python arguments are strippped from :c:member:"
"`PyConfig.argv`, parsing arguments twice would parse the application options "
"as Python options."
msgstr ""

#: ../../c-api/init_config.rst:507
msgid ""
"The :c:member:`PyConfig.argv` arguments are now only parsed once, :c:member:"
"`PyConfig.parse_argv` is set to ``2`` after arguments are parsed, and "
"arguments are only parsed if :c:member:`PyConfig.parse_argv` equals ``1``."
msgstr ""
"Os argumentos :c:member:`PyConfig.argv` agora são analisados apenas uma "
"vez, :c:member:`PyConfig.parse_argv` é definido como ``2`` após a análise "
"dos argumentos, e os argumentos só são analisados se :c:member:`PyConfig."
"parse_argv` for igual a ``1``."

#: ../../c-api/init_config.rst:513
msgid ""
":c:func:`PyConfig_Read` no longer calculates all paths, and so fields listed "
"under :ref:`Python Path Configuration <init-path-config>` may no longer be "
"updated until :c:func:`Py_InitializeFromConfig` is called."
msgstr ""
":c:func:`PyConfig_Read` já não calcula todos os caminhos, pelo que os campos "
"listados em :ref:`Configuração do caminho Python <init-path-config>` podem "
"deixar de ser atualizados até que :c:func:`Py_InitializeFromConfig` seja "
"chamado."

#: ../../c-api/init_config.rst:521
msgid "Release configuration memory."
msgstr "Liberar memória de configuração."

#: ../../c-api/init_config.rst:523
msgid ""
"Most ``PyConfig`` methods :ref:`preinitialize Python <c-preinit>` if needed. "
"In that case, the Python preinitialization configuration (:c:type:"
"`PyPreConfig`) in based on the :c:type:`PyConfig`. If configuration fields "
"which are in common with :c:type:`PyPreConfig` are tuned, they must be set "
"before calling a :c:type:`PyConfig` method:"
msgstr ""
"A maioria dos métodos ``PyConfig`` :ref:`pré-inicializam o Python <c-"
"preinit>`, se necessário. Nesse caso, a configuração de pré-inicialização do "
"Python (:c:type:`PyPreConfig`) é baseada no :c:type:`PyConfig`. Se os campos "
"de configuração que são comuns ao :c:type:`PyPreConfig` forem ajustados, "
"eles devem ser definidos antes de chamar um método :c:type:`PyConfig`:"

#: ../../c-api/init_config.rst:529
msgid ":c:member:`PyConfig.dev_mode`"
msgstr ":c:member:`PyConfig.dev_mode`"

#: ../../c-api/init_config.rst:530
msgid ":c:member:`PyConfig.isolated`"
msgstr ":c:member:`PyConfig.isolated`"

#: ../../c-api/init_config.rst:531
msgid ":c:member:`PyConfig.parse_argv`"
msgstr ":c:member:`PyConfig.parse_argv`"

#: ../../c-api/init_config.rst:532
msgid ":c:member:`PyConfig.use_environment`"
msgstr ":c:member:`PyConfig.use_environment`"

#: ../../c-api/init_config.rst:534
msgid ""
"Moreover, if :c:func:`PyConfig_SetArgv` or :c:func:`PyConfig_SetBytesArgv` "
"is used, this method must be called before other methods, since the "
"preinitialization configuration depends on command line arguments (if :c:"
"member:`~PyConfig.parse_argv` is non-zero)."
msgstr ""
"Além disso, se :c:func:`PyConfig_SetArgv` ou :c:func:`PyConfig_SetBytesArgv` "
"forem usados, este método deve ser chamado antes de outros métodos, uma vez "
"que a configuração de pré-inicialização depende dos argumentos da linha de "
"comando (se :c:member:`~PyConfig.parse_argv` for diferente de zero)."

#: ../../c-api/init_config.rst:539
msgid ""
"The caller of these methods is responsible to handle exceptions (error or "
"exit) using ``PyStatus_Exception()`` and ``Py_ExitStatusException()``."
msgstr ""
"O chamador destes métodos é responsável por lidar com exceções (erro ou "
"saída) usando ``PyStatus_Exception()`` e ``Py_ExitStatusException()``."

#: ../../c-api/init_config.rst:548
msgid "Command line arguments: :data:`sys.argv`."
msgstr ""

#: ../../c-api/init_config.rst:550
msgid ""
"Set :c:member:`~PyConfig.parse_argv` to ``1`` to parse :c:member:`~PyConfig."
"argv` the same way the regular Python parses Python command line arguments "
"and then to strip Python arguments from :c:member:`~PyConfig.argv`."
msgstr ""
"Defina :c:member:`~PyConfig.parse_argv` como ``1`` para analisar :c:member:"
"`~PyConfig.argv` da mesma forma que o Python normal analisa os argumentos da "
"linha de comando do Python e, em seguida, remova os argumentos do Python de :"
"c:member:`~PyConfig.argv`."

#: ../../c-api/init_config.rst:555
msgid ""
"If :c:member:`~PyConfig.argv` is empty, an empty string is added to ensure "
"that :data:`sys.argv` always exists and is never empty."
msgstr ""
"Se :c:member:`~PyConfig.argv` estiver vazio, uma string vazia é adicionada "
"para garantir que :data:`sys.argv` sempre exista e nunca esteja vazio."

#: ../../c-api/init_config.rst:558 ../../c-api/init_config.rst:585
#: ../../c-api/init_config.rst:597 ../../c-api/init_config.rst:605
#: ../../c-api/init_config.rst:713 ../../c-api/init_config.rst:722
#: ../../c-api/init_config.rst:804 ../../c-api/init_config.rst:920
#: ../../c-api/init_config.rst:1018 ../../c-api/init_config.rst:1036
#: ../../c-api/init_config.rst:1050 ../../c-api/init_config.rst:1067
#: ../../c-api/init_config.rst:1080 ../../c-api/init_config.rst:1088
msgid "Default: ``NULL``."
msgstr "Padrão: ``NULL``."

#: ../../c-api/init_config.rst:560
msgid "See also the :c:member:`~PyConfig.orig_argv` member."
msgstr "Veja também o membro :c:member:`~PyConfig.orig_argv`."

#: ../../c-api/init_config.rst:564
msgid ""
"If equals to zero, ``Py_RunMain()`` prepends a potentially unsafe path to :"
"data:`sys.path` at startup:"
msgstr ""
"Se for igual a zero, ``Py_RunMain()`` acrescenta um caminho potencialmente "
"inseguro a :data:`sys.path` no arranque:"

#: ../../c-api/init_config.rst:567
msgid ""
"If :c:member:`argv[0] <PyConfig.argv>` is equal to ``L\"-m\"`` (``python -m "
"module``), prepend the current working directory."
msgstr ""
"Se :c:member:`argv[0] <PyConfig.argv>` for igual a ``L\"-m\"`` (``python -m "
"module``), acrescente o diretório de trabalho atual."

#: ../../c-api/init_config.rst:569
msgid ""
"If running a script (``python script.py``), prepend the script's directory.  "
"If it's a symbolic link, resolve symbolic links."
msgstr ""
"Se estiver a executar um script (``python script.py``), coloque o diretório "
"do script no início. Se for um link simbólico, resolva os links simbólicos."

#: ../../c-api/init_config.rst:571
msgid ""
"Otherwise (``python -c code`` and ``python``), prepend an empty string, "
"which means the current working directory."
msgstr ""
"Caso contrário (``python -c code`` e ``python``), acrescente uma string "
"vazia, que significa o diretório de trabalho atual."

#: ../../c-api/init_config.rst:574
msgid ""
"Set to ``1`` by the :option:`-P` command line option and the :envvar:"
"`PYTHONSAFEPATH` environment variable."
msgstr ""
"Definido como ``1`` pela opção de linha de comando :option:`-P` e pela "
"variável de ambiente :envvar:`PYTHONSAFEPATH`."

#: ../../c-api/init_config.rst:577
msgid "Default: ``0`` in Python config, ``1`` in isolated config."
msgstr "Padrão: ``0`` na configuração Python, ``1`` na configuração isolada."

#: ../../c-api/init_config.rst:583
msgid ":data:`sys.base_exec_prefix`."
msgstr ":data:`sys.base_exec_prefix`."

#: ../../c-api/init_config.rst:587 ../../c-api/init_config.rst:599
#: ../../c-api/init_config.rst:607 ../../c-api/init_config.rst:715
#: ../../c-api/init_config.rst:724 ../../c-api/init_config.rst:937
#: ../../c-api/init_config.rst:1020
msgid "Part of the :ref:`Python Path Configuration <init-path-config>` output."
msgstr ""
"Parte da saída :ref:`Configuração do caminho Python <init-path-config>`."

#: ../../c-api/init_config.rst:591
msgid "Python base executable: :data:`sys._base_executable`."
msgstr "Executável base Python: :data:`sys._base_executable`."

#: ../../c-api/init_config.rst:593
msgid "Set by the :envvar:`__PYVENV_LAUNCHER__` environment variable."
msgstr "Definido pela variável de ambiente :envvar:`__PYVENV_LAUNCHER__`."

#: ../../c-api/init_config.rst:595
msgid "Set from :c:member:`PyConfig.executable` if ``NULL``."
msgstr "Definido a partir de :c:member:`PyConfig.executable` se ``NULL``."

#: ../../c-api/init_config.rst:603
msgid ":data:`sys.base_prefix`."
msgstr ":data:`sys.base_prefix`."

#: ../../c-api/init_config.rst:611
msgid ""
"If equals to ``0`` and :c:member:`~PyConfig.configure_c_stdio` is non-zero, "
"disable buffering on the C streams stdout and stderr."
msgstr ""
"Se for igual a ``0`` e :c:member:`~PyConfig.configure_c_stdio` for diferente "
"de zero, desative o buffer nos fluxos C stdout e stderr."

#: ../../c-api/init_config.rst:614
msgid ""
"Set to ``0`` by the :option:`-u` command line option and the :envvar:"
"`PYTHONUNBUFFERED` environment variable."
msgstr ""
"Definido como ``0`` pela opção de linha de comando :option:`-u` e pela "
"variável de ambiente :envvar:`PYTHONUNBUFFERED`."

#: ../../c-api/init_config.rst:617
msgid "stdin is always opened in buffered mode."
msgstr "O stdin é sempre aberto no modo buffer."

#: ../../c-api/init_config.rst:619 ../../c-api/init_config.rst:652
#: ../../c-api/init_config.rst:1116 ../../c-api/init_config.rst:1233
msgid "Default: ``1``."
msgstr "Padrão: ``1``."

#: ../../c-api/init_config.rst:623
msgid ""
"If equals to ``1``, issue a warning when comparing :class:`bytes` or :class:"
"`bytearray` with :class:`str`, or comparing :class:`bytes` with :class:`int`."
msgstr ""
"Se for igual a ``1``, emitir um aviso ao comparar :class:`bytes` ou :class:"
"`bytearray` com :class:`str`, ou ao comparar :class:`bytes` com :class:`int`."

#: ../../c-api/init_config.rst:627
msgid ""
"If equal or greater to ``2``, raise a :exc:`BytesWarning` exception in these "
"cases."
msgstr ""
"Se for igual ou superior a ``2``, gere uma exceção :exc:`BytesWarning` "
"nestes casos."

#: ../../c-api/init_config.rst:630
msgid "Incremented by the :option:`-b` command line option."
msgstr "Aumentado pela opção de linha de comando :option:`-b`."

#: ../../c-api/init_config.rst:636
msgid ""
"If non-zero, emit a :exc:`EncodingWarning` warning when :class:`io."
"TextIOWrapper` uses its default encoding. See :ref:`io-encoding-warning` for "
"details."
msgstr ""
"Se diferente de zero, emite um aviso :exc:`EncodingWarning` quando :class:"
"`io.TextIOWrapper` usa a sua codificação padrão. Consulte :ref:`io-encoding-"
"warning` para obter detalhes."

#: ../../c-api/init_config.rst:645
msgid ""
"If equals to ``0``, disables the inclusion of the end line and column "
"mappings in code objects. Also disables traceback printing carets to "
"specific error locations."
msgstr ""
"Se for igual a ``0``, desativa a inclusão dos mapeamentos de linha e coluna "
"finais nos objetos de código. Também desativa a impressão de carets de "
"rastreamento para locais de erro específicos."

#: ../../c-api/init_config.rst:649
msgid ""
"Set to ``0`` by the :envvar:`PYTHONNODEBUGRANGES` environment variable and "
"by the :option:`-X no_debug_ranges <-X>` command line option."
msgstr ""
"Definido como ``0`` pela variável de ambiente :envvar:`PYTHONNODEBUGRANGES` "
"e pela opção de linha de comando :option:`-X no_debug_ranges <-X>`."

#: ../../c-api/init_config.rst:658
msgid ""
"Control the validation behavior of hash-based ``.pyc`` files: value of the :"
"option:`--check-hash-based-pycs` command line option."
msgstr ""
"Controla o comportamento de validação de ficheiros ``.pyc`` baseados em "
"hash: valor da opção de linha de comando :option:`--check-hash-based-pycs`."

#: ../../c-api/init_config.rst:661
msgid "Valid values:"
msgstr "Valores válidos:"

#: ../../c-api/init_config.rst:663
msgid ""
"``L\"always\"``: Hash the source file for invalidation regardless of value "
"of the 'check_source' flag."
msgstr ""
"``L\"always\"``: Hash o ficheiro de origem para invalidação, "
"independentemente do valor do sinalizador 'check_source'."

#: ../../c-api/init_config.rst:665
msgid "``L\"never\"``: Assume that hash-based pycs always are valid."
msgstr ""
"``L\"never\"``: Presuma que os pycs baseados em hash são sempre válidos."

#: ../../c-api/init_config.rst:666
msgid ""
"``L\"default\"``: The 'check_source' flag in hash-based pycs determines "
"invalidation."
msgstr ""
"``L\"default\"``: O sinalizador 'check_source' em pycs baseados em hash "
"determina a invalidação."

#: ../../c-api/init_config.rst:669
msgid "Default: ``L\"default\"``."
msgstr "Padrão: ``L\"default\"``."

#: ../../c-api/init_config.rst:671
msgid "See also :pep:`552` \"Deterministic pycs\"."
msgstr "Veja também: :pep:`552` \"Pycs determinísticos\"."

#: ../../c-api/init_config.rst:675
msgid "If non-zero, configure C standard streams:"
msgstr "Se diferente de zero, configure os fluxos padrão C:"

#: ../../c-api/init_config.rst:677
msgid ""
"On Windows, set the binary mode (``O_BINARY``) on stdin, stdout and stderr."
msgstr ""
"No Windows, defina o modo binário (``O_BINARY``) em stdin, stdout e stderr."

#: ../../c-api/init_config.rst:679
msgid ""
"If :c:member:`~PyConfig.buffered_stdio` equals zero, disable buffering of "
"stdin, stdout and stderr streams."
msgstr ""
"Se :c:member:`~PyConfig.buffered_stdio` for igual a zero, desative o buffer "
"dos fluxos stdin, stdout e stderr."

#: ../../c-api/init_config.rst:681
msgid ""
"If :c:member:`~PyConfig.interactive` is non-zero, enable stream buffering on "
"stdin and stdout (only stdout on Windows)."
msgstr ""
"Se :c:member:`~PyConfig.interactive` for diferente de zero, habilite o "
"buffer de fluxo em stdin e stdout (apenas stdout no Windows)."

#: ../../c-api/init_config.rst:688
msgid "If non-zero, enable the :ref:`Python Development Mode <devmode>`."
msgstr ""
"Se diferente de zero, ative o :ref:`Modo de Desenvolvimento Python "
"<devmode>`."

#: ../../c-api/init_config.rst:690
msgid ""
"Set to ``1`` by the :option:`-X dev <-X>` option and the :envvar:"
"`PYTHONDEVMODE` environment variable."
msgstr ""
"Defina como ``1`` pela opção :option:`-X dev <-X>` e pela variável de "
"ambiente :envvar:`PYTHONDEVMODE`."

#: ../../c-api/init_config.rst:697
msgid "Dump Python references?"
msgstr "Descartar referências Python?"

#: ../../c-api/init_config.rst:699
msgid "If non-zero, dump all objects which are still alive at exit."
msgstr ""
"Se diferente de zero, descarregue todos os objetos que ainda estiverem "
"ativos na saída."

#: ../../c-api/init_config.rst:701
msgid "Set to ``1`` by the :envvar:`PYTHONDUMPREFS` environment variable."
msgstr "Defina como ``1`` pela variável de ambiente :envvar:`PYTHONDUMPREFS`."

#: ../../c-api/init_config.rst:703
msgid ""
"Need a special build of Python with the ``Py_TRACE_REFS`` macro defined: see "
"the :option:`configure --with-trace-refs option <--with-trace-refs>`."
msgstr ""

#: ../../c-api/init_config.rst:710
msgid ""
"The site-specific directory prefix where the platform-dependent Python files "
"are installed: :data:`sys.exec_prefix`."
msgstr ""
"O prefixo do diretório específico do local onde os ficheiros Python "
"dependentes da plataforma são instalados: :data:`sys.exec_prefix`."

#: ../../c-api/init_config.rst:719
msgid ""
"The absolute path of the executable binary for the Python interpreter: :data:"
"`sys.executable`."
msgstr ""
"O caminho absoluto do binário executável para o interpretador Python: :data:"
"`sys.executable`."

#: ../../c-api/init_config.rst:728
msgid "Enable faulthandler?"
msgstr "Ativar o gestor de falhas?"

#: ../../c-api/init_config.rst:730
msgid "If non-zero, call :func:`faulthandler.enable` at startup."
msgstr ""
"Se diferente de zero, chame :func:`faulthandler.enable` na inicialização."

#: ../../c-api/init_config.rst:732
msgid ""
"Set to ``1`` by :option:`-X faulthandler <-X>` and the :envvar:"
"`PYTHONFAULTHANDLER` environment variable."
msgstr ""
"Defina como ``1`` por meio de :option:`-X faulthandler <-X>` e da variável "
"de ambiente :envvar:`PYTHONFAULTHANDLER`."

#: ../../c-api/init_config.rst:739
msgid ""
":term:`Filesystem encoding <filesystem encoding and error handler>`: :func:"
"`sys.getfilesystemencoding`."
msgstr ""
":term:`Codificação do sistema de ficheiros <filesystem encoding and error "
"handler>`: :func:`sys.getfilesystemencoding`."

#: ../../c-api/init_config.rst:742
msgid "On macOS, Android and VxWorks: use ``\"utf-8\"`` by default."
msgstr "No macOS, Android e VxWorks: use ``\"utf-8\"`` por predefinição."

#: ../../c-api/init_config.rst:744
msgid ""
"On Windows: use ``\"utf-8\"`` by default, or ``\"mbcs\"`` if :c:member:"
"`~PyPreConfig.legacy_windows_fs_encoding` of :c:type:`PyPreConfig` is non-"
"zero."
msgstr ""
"No Windows: use ``\"utf-8\"`` por predefinição, ou ``\"mbcs\"`` se :c:member:"
"`~PyPreConfig.legacy_windows_fs_encoding` de :c:type:`PyPreConfig` for "
"diferente de zero."

#: ../../c-api/init_config.rst:748
msgid "Default encoding on other platforms:"
msgstr "Codificação padrão em outras plataformas:"

#: ../../c-api/init_config.rst:750
msgid "``\"utf-8\"`` if :c:member:`PyPreConfig.utf8_mode` is non-zero."
msgstr ""
"``\"utf-8\"`` se :c:member:`PyPreConfig.utf8_mode` for diferente de zero."

#: ../../c-api/init_config.rst:751
msgid ""
"``\"ascii\"`` if Python detects that ``nl_langinfo(CODESET)`` announces the "
"ASCII encoding, whereas the ``mbstowcs()`` function decodes from a different "
"encoding (usually Latin1)."
msgstr ""
"``\"ascii\"`` se o Python detectar que ``nl_langinfo(CODESET)`` anuncia a "
"codificação ASCII, enquanto a função ``mbstowcs()`` descodifica a partir de "
"uma codificação diferente (normalmente Latin1)."

#: ../../c-api/init_config.rst:754
msgid "``\"utf-8\"`` if ``nl_langinfo(CODESET)`` returns an empty string."
msgstr "``\"utf-8\"`` se ``nl_langinfo(CODESET)`` retornar uma string vazia."

#: ../../c-api/init_config.rst:755
msgid ""
"Otherwise, use the :term:`locale encoding`: ``nl_langinfo(CODESET)`` result."
msgstr ""
"Caso contrário, utilize o resultado da codificação local: "
"``nl_langinfo(CODESET)``."

#: ../../c-api/init_config.rst:758
msgid ""
"At Python startup, the encoding name is normalized to the Python codec name. "
"For example, ``\"ANSI_X3.4-1968\"`` is replaced with ``\"ascii\"``."
msgstr ""
"Na inicialização do Python, o nome da codificação é normalizado para o nome "
"do codec Python. Por exemplo, ``\"ANSI_X3.4-1968\"`` é substituído por "
"``\"ascii\"``."

#: ../../c-api/init_config.rst:761
msgid "See also the :c:member:`~PyConfig.filesystem_errors` member."
msgstr "Veja também o membro :c:member:`~PyConfig.filesystem_errors`."

#: ../../c-api/init_config.rst:765
msgid ""
":term:`Filesystem error handler <filesystem encoding and error handler>`: :"
"func:`sys.getfilesystemencodeerrors`."
msgstr ""
":term:`Tratador de erros do sistema de ficheiros <filesystem encoding and "
"error handler>`: :func:`sys.getfilesystemencodeerrors`."

#: ../../c-api/init_config.rst:768
msgid ""
"On Windows: use ``\"surrogatepass\"`` by default, or ``\"replace\"``  if :c:"
"member:`~PyPreConfig.legacy_windows_fs_encoding` of :c:type:`PyPreConfig` is "
"non-zero."
msgstr ""
"No Windows: use ``\"surrogatepass\"`` por predefinição, ou ``\"replace\"`` "
"se :c:member:`~PyPreConfig.legacy_windows_fs_encoding` de :c:type:"
"`PyPreConfig` for diferente de zero."

#: ../../c-api/init_config.rst:772
msgid "On other platforms: use ``\"surrogateescape\"`` by default."
msgstr "Em outras plataformas: use ``\"surrogateescape\"`` por predefinição."

#: ../../c-api/init_config.rst:774
msgid "Supported error handlers:"
msgstr "Tratadores de erros suportados:"

#: ../../c-api/init_config.rst:776
msgid "``\"strict\"``"
msgstr "``\"strict\"``"

#: ../../c-api/init_config.rst:777
msgid "``\"surrogateescape\"``"
msgstr "``\"surrogateescape\"``"

#: ../../c-api/init_config.rst:778
msgid "``\"surrogatepass\"`` (only supported with the UTF-8 encoding)"
msgstr "``\"surrogatepass\"`` (apenas suportado com a codificação UTF-8)"

#: ../../c-api/init_config.rst:780
msgid "See also the :c:member:`~PyConfig.filesystem_encoding` member."
msgstr "Veja também o membro :c:member:`~PyConfig.filesystem_encoding`."

#: ../../c-api/init_config.rst:785
msgid "Randomized hash function seed."
msgstr "Semente da função hash aleatória."

#: ../../c-api/init_config.rst:787
msgid ""
"If :c:member:`~PyConfig.use_hash_seed` is zero, a seed is chosen randomly at "
"Python startup, and :c:member:`~PyConfig.hash_seed` is ignored."
msgstr ""
"Se :c:member:`~PyConfig.use_hash_seed` for zero, uma semente é escolhida "
"aleatoriamente no arranque do Python, e :c:member:`~PyConfig.hash_seed` é "
"ignorado."

#: ../../c-api/init_config.rst:790
msgid "Set by the :envvar:`PYTHONHASHSEED` environment variable."
msgstr "Definido pela variável de ambiente :envvar:`PYTHONHASHSEED`."

#: ../../c-api/init_config.rst:792
msgid ""
"Default *use_hash_seed* value: ``-1`` in Python mode, ``0`` in isolated mode."
msgstr ""
"Valor padrão *use_hash_seed*: ``-1`` no modo Python, ``0`` no modo isolado."

#: ../../c-api/init_config.rst:797
msgid "Python home directory."
msgstr ""

#: ../../c-api/init_config.rst:799
msgid ""
"If :c:func:`Py_SetPythonHome` has been called, use its argument if it is not "
"``NULL``."
msgstr ""

#: ../../c-api/init_config.rst:802
msgid "Set by the :envvar:`PYTHONHOME` environment variable."
msgstr "Definido pela variável de ambiente :envvar:`PYTHONHOME`."

#: ../../c-api/init_config.rst:806 ../../c-api/init_config.rst:902
#: ../../c-api/init_config.rst:922 ../../c-api/init_config.rst:1008
#: ../../c-api/init_config.rst:1038
msgid "Part of the :ref:`Python Path Configuration <init-path-config>` input."
msgstr ""
"Parte da entrada :ref:`Configuração do caminho Python <init-path-config>`."

#: ../../c-api/init_config.rst:810
msgid "If non-zero, profile import time."
msgstr ""

#: ../../c-api/init_config.rst:812
msgid ""
"Set the ``1`` by the :option:`-X importtime <-X>` option and the :envvar:"
"`PYTHONPROFILEIMPORTTIME` environment variable."
msgstr ""

#: ../../c-api/init_config.rst:819
msgid "Enter interactive mode after executing a script or a command."
msgstr "Entre no modo interativo após executar um script ou um comando."

#: ../../c-api/init_config.rst:821
msgid ""
"If greater than ``0``, enable inspect: when a script is passed as first "
"argument or the -c option is used, enter interactive mode after executing "
"the script or the command, even when :data:`sys.stdin` does not appear to be "
"a terminal."
msgstr ""
"Se for maior que ``0``, ative a inspeção: quando um script for passado como "
"primeiro argumento ou a opção -c for usada, entre no modo interativo após "
"executar o script ou o comando, mesmo quando :data:`sys.stdin` não parecer "
"ser um terminal."

#: ../../c-api/init_config.rst:826
msgid ""
"Incremented by the :option:`-i` command line option. Set to ``1`` if the :"
"envvar:`PYTHONINSPECT` environment variable is non-empty."
msgstr ""
"Aumentado pela opção de linha de comando :option:`-i`. Definido como ``1`` "
"se a variável de ambiente :envvar:`PYTHONINSPECT` não estiver vazia."

#: ../../c-api/init_config.rst:833
msgid "Install Python signal handlers?"
msgstr "Instalar manipuladores de sinal Python?"

#: ../../c-api/init_config.rst:835 ../../c-api/init_config.rst:985
#: ../../c-api/init_config.rst:1006 ../../c-api/init_config.rst:1185
msgid "Default: ``1`` in Python mode, ``0`` in isolated mode."
msgstr "Padrão: ``1`` no modo Python, ``0`` no modo isolado."

#: ../../c-api/init_config.rst:839
msgid "If greater than ``0``, enable the interactive mode (REPL)."
msgstr "Se for maior que ``0``, ative o modo interativo (REPL)."

#: ../../c-api/init_config.rst:841
msgid "Incremented by the :option:`-i` command line option."
msgstr "Aumentado pela opção de linha de comando :option:`-i`."

#: ../../c-api/init_config.rst:847
msgid "If greater than ``0``, enable isolated mode:"
msgstr "Se for maior que ``0``, ative o modo isolado:"

#: ../../c-api/init_config.rst:849
msgid ""
"Set :c:member:`~PyConfig.safe_path` to ``1``: don't prepend a potentially "
"unsafe path to :data:`sys.path` at Python startup."
msgstr ""

#: ../../c-api/init_config.rst:852 ../../c-api/init_config.rst:1483
msgid "Set :c:member:`~PyConfig.use_environment` to ``0``."
msgstr "Defina :c:member:`~PyConfig.use_environment` como ``0``."

#: ../../c-api/init_config.rst:853
msgid ""
"Set :c:member:`~PyConfig.user_site_directory` to ``0``: don't add the user "
"site directory to :data:`sys.path`."
msgstr ""
"Defina :c:member:`~PyConfig.user_site_directory` como ``0``: não adicione o "
"diretório do site do utilizador a :data:`sys.path`."

#: ../../c-api/init_config.rst:855
msgid ""
"Python REPL doesn't import :mod:`readline` nor enable default readline "
"configuration on interactive prompts."
msgstr ""
"O Python REPL não importa :mod:`readline` nem habilita a configuração padrão "
"do readline em prompts interativos."

#: ../../c-api/init_config.rst:858
msgid "Set to ``1`` by the :option:`-I` command line option."
msgstr "Definido como ``1`` pela opção de linha de comando :option:`-I`."

#: ../../c-api/init_config.rst:862
msgid "See also :c:member:`PyPreConfig.isolated`."
msgstr ""

#: ../../c-api/init_config.rst:866
msgid ""
"If non-zero, use :class:`io.FileIO` instead of :class:`!io."
"_WindowsConsoleIO` for :data:`sys.stdin`, :data:`sys.stdout` and :data:`sys."
"stderr`."
msgstr ""
"Se diferente de zero, use :class:`io.FileIO` em vez de :class:`!io."
"_WindowsConsoleIO` para :data:`sys.stdin`, :data:`sys.stdout` e :data:`sys."
"stderr`."

#: ../../c-api/init_config.rst:870
msgid ""
"Set to ``1`` if the :envvar:`PYTHONLEGACYWINDOWSSTDIO` environment variable "
"is set to a non-empty string."
msgstr ""
"Defina como ``1`` se a variável de ambiente :envvar:"
"`PYTHONLEGACYWINDOWSSTDIO` estiver definida como uma string não vazia."

#: ../../c-api/init_config.rst:878
msgid "See also the :pep:`528` (Change Windows console encoding to UTF-8)."
msgstr ""
"Veja também o :pep:`528` (Alterar a codificação da consola do Windows para "
"UTF-8)."

#: ../../c-api/init_config.rst:882
msgid ""
"If non-zero, dump statistics on :ref:`Python pymalloc memory allocator "
"<pymalloc>` at exit."
msgstr ""
"Se diferente de zero, descarregar estatísticas sobre :ref:`Alocador de "
"memória Python pymalloc <pymalloc>` ao sair."

#: ../../c-api/init_config.rst:885
msgid "Set to ``1`` by the :envvar:`PYTHONMALLOCSTATS` environment variable."
msgstr ""
"Defina como ``1`` pela variável de ambiente :envvar:`PYTHONMALLOCSTATS`."

#: ../../c-api/init_config.rst:887
msgid ""
"The option is ignored if Python is :option:`configured using the --without-"
"pymalloc option <--without-pymalloc>`."
msgstr ""
"A opção é ignorada se o Python for :option:`configurado usando a opção --"
"without-pymalloc <--without-pymalloc>`."

#: ../../c-api/init_config.rst:894
msgid "Platform library directory name: :data:`sys.platlibdir`."
msgstr "Nome do diretório da biblioteca da plataforma: :data:`sys.platlibdir`."

#: ../../c-api/init_config.rst:896
msgid "Set by the :envvar:`PYTHONPLATLIBDIR` environment variable."
msgstr "Definido pela variável de ambiente :envvar:`PYTHONPLATLIBDIR`."

#: ../../c-api/init_config.rst:898
msgid ""
"Default: value of the ``PLATLIBDIR`` macro which is set by the :option:"
"`configure --with-platlibdir option <--with-platlibdir>` (default: "
"``\"lib\"``, or ``\"DLLs\"`` on Windows)."
msgstr ""
"Padrão: valor da macro ``PLATLIBDIR`` definida pela opção :option:`configure "
"--with-platlibdir option <--with-platlibdir>` (padrão: ``\"lib\"`` ou "
"``\"DLLs\"`` no Windows)."

#: ../../c-api/init_config.rst:906
msgid ""
"This macro is now used on Windows to locate the standard library extension "
"modules, typically under ``DLLs``. However, for compatibility, note that "
"this value is ignored for any non-standard layouts, including in-tree builds "
"and virtual environments."
msgstr ""
"Esta macro é agora utilizada no Windows para localizar os módulos de "
"extensão da biblioteca padrão, normalmente em ``DLLs``. No entanto, por "
"motivos de compatibilidade, note que este valor é ignorado para quaisquer "
"layouts não padrão, incluindo compilações em árvore e ambientes virtuais."

#: ../../c-api/init_config.rst:915
msgid ""
"Module search paths (:data:`sys.path`) as a string separated by ``DELIM`` (:"
"data:`os.pathsep`)."
msgstr ""
"Caminhos de pesquisa do módulo (:data:`sys.path`) como uma string separada "
"por ``DELIM`` (:data:`os.pathsep`)."

#: ../../c-api/init_config.rst:918
msgid "Set by the :envvar:`PYTHONPATH` environment variable."
msgstr "Definido pela variável de ambiente :envvar:`PYTHONPATH`."

#: ../../c-api/init_config.rst:927
msgid "Module search paths: :data:`sys.path`."
msgstr "Caminhos de pesquisa do módulo: :data:`sys.path`."

#: ../../c-api/init_config.rst:929
msgid ""
"If :c:member:`~PyConfig.module_search_paths_set` is equal to ``0``, :c:func:"
"`Py_InitializeFromConfig` will replace :c:member:`~PyConfig."
"module_search_paths` and sets :c:member:`~PyConfig.module_search_paths_set` "
"to ``1``."
msgstr ""
"Se :c:member:`~PyConfig.module_search_paths_set` for igual a ``0``, :c:func:"
"`Py_InitializeFromConfig` substituirá :c:member:`~PyConfig."
"module_search_paths` e definirá :c:member:`~PyConfig."
"module_search_paths_set` como ``1``."

#: ../../c-api/init_config.rst:934
msgid ""
"Default: empty list (``module_search_paths``) and ``0`` "
"(``module_search_paths_set``)."
msgstr ""
"Padrão: lista vazia (``module_search_paths``) e ``0`` "
"(``module_search_paths_set``)."

#: ../../c-api/init_config.rst:941
msgid "Compilation optimization level:"
msgstr "Nível de otimização da compilação:"

#: ../../c-api/init_config.rst:943
msgid "``0``: Peephole optimizer, set ``__debug__`` to ``True``."
msgstr "``0``: Otimizador de olho mágico, defina ``__debug__`` como ``True``."

#: ../../c-api/init_config.rst:944
msgid "``1``: Level 0, remove assertions, set ``__debug__`` to ``False``."
msgstr ""
"``1``: Nível 0, remova as asserções, defina ``__debug__`` como ``False``."

#: ../../c-api/init_config.rst:945
msgid "``2``: Level 1, strip docstrings."
msgstr "``2``: Nível 1, remover docstrings."

#: ../../c-api/init_config.rst:947
msgid ""
"Incremented by the :option:`-O` command line option. Set to the :envvar:"
"`PYTHONOPTIMIZE` environment variable value."
msgstr ""
"Aumentado pela opção de linha de comando :option:`-O`. Definido para o valor "
"da variável de ambiente :envvar:`PYTHONOPTIMIZE`."

#: ../../c-api/init_config.rst:954
msgid ""
"The list of the original command line arguments passed to the Python "
"executable: :data:`sys.orig_argv`."
msgstr ""
"A lista dos argumentos da linha de comando originais passados para o "
"executável Python: :data:`sys.orig_argv`."

#: ../../c-api/init_config.rst:957
msgid ""
"If :c:member:`~PyConfig.orig_argv` list is empty and :c:member:`~PyConfig."
"argv` is not a list only containing an empty string, :c:func:`PyConfig_Read` "
"copies :c:member:`~PyConfig.argv` into :c:member:`~PyConfig.orig_argv` "
"before modifying :c:member:`~PyConfig.argv` (if :c:member:`~PyConfig."
"parse_argv` is non-zero)."
msgstr ""
"Se a lista :c:member:`~PyConfig.orig_argv` estiver vazia e :c:member:"
"`~PyConfig.argv` não for uma lista contendo apenas uma string vazia, :c:func:"
"`PyConfig_Read` copia :c:member:`~PyConfig.argv` para :c:member:`~PyConfig."
"orig_argv` antes de modificar :c:member:`~PyConfig.argv` (se :c:member:"
"`~PyConfig.parse_argv` for diferente de zero)."

#: ../../c-api/init_config.rst:964
msgid ""
"See also the :c:member:`~PyConfig.argv` member and the :c:func:"
"`Py_GetArgcArgv` function."
msgstr ""
"Veja também o membro :c:member:`~PyConfig.argv` e a função :c:func:"
"`Py_GetArgcArgv`."

#: ../../c-api/init_config.rst:967 ../../c-api/init_config.rst:1220
#: ../../c-api/init_config.rst:1239
msgid "Default: empty list."
msgstr "Padrão: lista vazia."

#: ../../c-api/init_config.rst:973
msgid "Parse command line arguments?"
msgstr "Analisar argumentos da linha de comando?"

#: ../../c-api/init_config.rst:975
msgid ""
"If equals to ``1``, parse :c:member:`~PyConfig.argv` the same way the "
"regular Python parses :ref:`command line arguments <using-on-cmdline>`, and "
"strip Python arguments from :c:member:`~PyConfig.argv`."
msgstr ""
"Se for igual a ``1``, analise :c:member:`~PyConfig.argv` da mesma forma que "
"o Python normal analisa :ref:`argumentos da linha de comando <using-on-"
"cmdline>` e remova os argumentos do Python de :c:member:`~PyConfig.argv`."

#: ../../c-api/init_config.rst:987
msgid ""
"The :c:member:`PyConfig.argv` arguments are now only parsed if :c:member:"
"`PyConfig.parse_argv` equals to ``1``."
msgstr ""
"Os argumentos :c:member:`PyConfig.argv` agora só são analisados se :c:member:"
"`PyConfig.parse_argv` for igual a ``1``."

#: ../../c-api/init_config.rst:993
msgid ""
"Parser debug mode. If greater than ``0``, turn on parser debugging output "
"(for expert only, depending on compilation options)."
msgstr ""
"Modo de depuração do analisador. Se for maior que ``0``, ative a saída de "
"depuração do analisador (apenas para especialistas, dependendo das opções de "
"compilação)."

#: ../../c-api/init_config.rst:996
msgid ""
"Incremented by the :option:`-d` command line option. Set to the :envvar:"
"`PYTHONDEBUG` environment variable value."
msgstr ""
"Aumentado pela opção de linha de comando :option:`-d`. Definido para o valor "
"da variável de ambiente :envvar:`PYTHONDEBUG`."

#: ../../c-api/init_config.rst:1003
msgid ""
"If non-zero, calculation of path configuration is allowed to log warnings "
"into ``stderr``. If equals to ``0``, suppress these warnings."
msgstr ""
"Se diferente de zero, o cálculo da configuração do caminho pode registar "
"avisos em ``stderr``. Se for igual a ``0``, suprime esses avisos."

#: ../../c-api/init_config.rst:1010
msgid "Now also applies on Windows."
msgstr "Agora também se aplica ao Windows."

#: ../../c-api/init_config.rst:1015
msgid ""
"The site-specific directory prefix where the platform independent Python "
"files are installed: :data:`sys.prefix`."
msgstr ""
"O prefixo do diretório específico do local onde os ficheiros Python "
"independentes da plataforma estão instalados: :data:`sys.prefix`."

#: ../../c-api/init_config.rst:1024
msgid ""
"Program name used to initialize :c:member:`~PyConfig.executable` and in "
"early error messages during Python initialization."
msgstr ""
"Nome do programa usado para inicializar :c:member:`~PyConfig.executable` e "
"nas primeiras mensagens de erro durante a inicialização do Python."

#: ../../c-api/init_config.rst:1027
msgid "If :func:`Py_SetProgramName` has been called, use its argument."
msgstr ""

#: ../../c-api/init_config.rst:1028
msgid "On macOS, use :envvar:`PYTHONEXECUTABLE` environment variable if set."
msgstr ""
"No macOS, use a variável de ambiente :envvar:`PYTHONEXECUTABLE`, se estiver "
"definida."

#: ../../c-api/init_config.rst:1029
msgid ""
"If the ``WITH_NEXT_FRAMEWORK`` macro is defined, use :envvar:"
"`__PYVENV_LAUNCHER__` environment variable if set."
msgstr ""
"Se a macro ``WITH_NEXT_FRAMEWORK`` estiver definida, use a variável de "
"ambiente :envvar:`__PYVENV_LAUNCHER__`, se estiver definida."

#: ../../c-api/init_config.rst:1031
msgid ""
"Use ``argv[0]`` of :c:member:`~PyConfig.argv` if available and non-empty."
msgstr ""
"Use ``argv[0]`` de :c:member:`~PyConfig.argv` se disponível e não estiver "
"vazio."

#: ../../c-api/init_config.rst:1033
msgid ""
"Otherwise, use ``L\"python\"`` on Windows, or ``L\"python3\"`` on other "
"platforms."
msgstr ""
"Caso contrário, utilize ``L\"python\"`` no Windows ou ``L\"python3\"`` "
"noutras plataformas."

#: ../../c-api/init_config.rst:1042
msgid ""
"Directory where cached ``.pyc`` files are written: :data:`sys."
"pycache_prefix`."
msgstr ""
"Diretório onde os ficheiros ``.pyc`` em cache são gravados: :data:`sys."
"pycache_prefix`."

#: ../../c-api/init_config.rst:1045
msgid ""
"Set by the :option:`-X pycache_prefix=PATH <-X>` command line option and "
"the :envvar:`PYTHONPYCACHEPREFIX` environment variable."
msgstr ""

#: ../../c-api/init_config.rst:1048
msgid "If ``NULL``, :data:`sys.pycache_prefix` is set to ``None``."
msgstr "Se for ``NULL``, :data:`sys.pycache_prefix` é definido como ``None``."

#: ../../c-api/init_config.rst:1054
msgid ""
"Quiet mode. If greater than ``0``, don't display the copyright and version "
"at Python startup in interactive mode."
msgstr ""
"Modo silencioso. Se for maior que ``0``, não exibe os direitos de autor e a "
"versão na inicialização do Python no modo interativo."

#: ../../c-api/init_config.rst:1057
msgid "Incremented by the :option:`-q` command line option."
msgstr "Aumentado pela opção de linha de comando :option:`-q`."

#: ../../c-api/init_config.rst:1063
msgid "Value of the :option:`-c` command line option."
msgstr "Valor da opção de linha de comando :option:`-c`."

#: ../../c-api/init_config.rst:1065 ../../c-api/init_config.rst:1086
msgid "Used by :c:func:`Py_RunMain`."
msgstr "Usado por :c:func:`Py_RunMain`."

#: ../../c-api/init_config.rst:1071
msgid ""
"Filename passed on the command line: trailing command line argument without :"
"option:`-c` or :option:`-m`. It is used by the :c:func:`Py_RunMain` function."
msgstr ""
"Nome do ficheiro passado na linha de comando: argumento final da linha de "
"comando sem :option:`-c` ou :option:`-m`. É utilizado pela função :c:func:"
"`Py_RunMain`."

#: ../../c-api/init_config.rst:1075
msgid ""
"For example, it is set to ``script.py`` by the ``python3 script.py arg`` "
"command line."
msgstr ""
"Por exemplo, é definido como ``script.py`` pela linha de comando ``python3 "
"script.py arg``."

#: ../../c-api/init_config.rst:1078
msgid "See also the :c:member:`PyConfig.skip_source_first_line` option."
msgstr "Veja também a opção :c:member:`PyConfig.skip_source_first_line`."

#: ../../c-api/init_config.rst:1084
msgid "Value of the :option:`-m` command line option."
msgstr "Valor da opção de linha de comando :option:`-m`."

#: ../../c-api/init_config.rst:1092
msgid "Show total reference count at exit?"
msgstr ""

#: ../../c-api/init_config.rst:1094
msgid "Set to ``1`` by :option:`-X showrefcount <-X>` command line option."
msgstr ""
"Definido como ``1`` pela opção de linha de comando :option:`-X showrefcount "
"<-X>`."

#: ../../c-api/init_config.rst:1096
msgid ""
"Need a :ref:`debug build of Python <debug-build>` (the ``Py_REF_DEBUG`` "
"macro must be defined)."
msgstr ""

#: ../../c-api/init_config.rst:1103
msgid "Import the :mod:`site` module at startup?"
msgstr "Importar o módulo :mod:`site` no arranque?"

#: ../../c-api/init_config.rst:1105
msgid ""
"If equal to zero, disable the import of the module site and the site-"
"dependent manipulations of :data:`sys.path` that it entails."
msgstr ""
"Se for igual a zero, desative a importação do site do módulo e as "
"manipulações dependentes do site de :data:`sys.path` que isso implica."

#: ../../c-api/init_config.rst:1108
msgid ""
"Also disable these manipulations if the :mod:`site` module is explicitly "
"imported later (call :func:`site.main` if you want them to be triggered)."
msgstr ""
"Desative também essas manipulações se o módulo :mod:`site` for importado "
"explicitamente posteriormente (chame :func:`site.main` se quiser que elas "
"sejam acionadas)."

#: ../../c-api/init_config.rst:1111
msgid "Set to ``0`` by the :option:`-S` command line option."
msgstr "Definido como ``0`` pela opção de linha de comando :option:`-S`."

#: ../../c-api/init_config.rst:1113
msgid ""
":data:`sys.flags.no_site <sys.flags>` is set to the inverted value of :c:"
"member:`~PyConfig.site_import`."
msgstr ""
":data:`sys.flags.no_site <sys.flags>` está definido para o valor invertido "
"de :c:member:`~PyConfig.site_import`."

#: ../../c-api/init_config.rst:1120
msgid ""
"If non-zero, skip the first line of the :c:member:`PyConfig.run_filename` "
"source."
msgstr ""
"Se diferente de zero, ignore a primeira linha da fonte :c:member:`PyConfig."
"run_filename`."

#: ../../c-api/init_config.rst:1123
msgid ""
"It allows the usage of non-Unix forms of ``#!cmd``. This is intended for a "
"DOS specific hack only."
msgstr ""
"Permite a utilização de formas não Unix de ``#!cmd``. Isto destina-se apenas "
"a um hack específico do DOS."

#: ../../c-api/init_config.rst:1126
msgid "Set to ``1`` by the :option:`-x` command line option."
msgstr "Definido como ``1`` pela opção de linha de comando :option:`-x`."

#: ../../c-api/init_config.rst:1133
msgid ""
"Encoding and encoding errors of :data:`sys.stdin`, :data:`sys.stdout` and :"
"data:`sys.stderr` (but :data:`sys.stderr` always uses "
"``\"backslashreplace\"`` error handler)."
msgstr ""
"Codificação e erros de codificação de :data:`sys.stdin`, :data:`sys.stdout` "
"e :data:`sys.stderr` (mas :data:`sys.stderr` utiliza sempre o gestor de "
"erros ``\"backslashreplace\"``)."

#: ../../c-api/init_config.rst:1137
msgid ""
"If :c:func:`Py_SetStandardStreamEncoding` has been called, use its *error* "
"and *errors* arguments if they are not ``NULL``."
msgstr ""

#: ../../c-api/init_config.rst:1140
msgid ""
"Use the :envvar:`PYTHONIOENCODING` environment variable if it is non-empty."
msgstr ""
"Use a variável de ambiente :envvar:`PYTHONIOENCODING` se ela não estiver "
"vazia."

#: ../../c-api/init_config.rst:1143
msgid "Default encoding:"
msgstr "Codificação padrão:"

#: ../../c-api/init_config.rst:1145
msgid "``\"UTF-8\"`` if :c:member:`PyPreConfig.utf8_mode` is non-zero."
msgstr ""
"``\"UTF-8\"`` se :c:member:`PyPreConfig.utf8_mode` for diferente de zero."

#: ../../c-api/init_config.rst:1146
msgid "Otherwise, use the :term:`locale encoding`."
msgstr "Caso contrário, utilize a :term:`codificação de localidade."

#: ../../c-api/init_config.rst:1148
msgid "Default error handler:"
msgstr "Tratamento de erros padrão:"

#: ../../c-api/init_config.rst:1150
msgid "On Windows: use ``\"surrogateescape\"``."
msgstr "No Windows: use ``\"surrogateescape\"``."

#: ../../c-api/init_config.rst:1151
msgid ""
"``\"surrogateescape\"`` if :c:member:`PyPreConfig.utf8_mode` is non-zero, or "
"if the LC_CTYPE locale is \"C\" or \"POSIX\"."
msgstr ""
"``\"surrogateescape\"`` se :c:member:`PyPreConfig.utf8_mode` for diferente "
"de zero, ou se a localidade LC_CTYPE for \"C\" ou \"POSIX\"."

#: ../../c-api/init_config.rst:1153
msgid "``\"strict\"`` otherwise."
msgstr "``\"strict\"`` caso contrário."

#: ../../c-api/init_config.rst:1157
msgid "Enable tracemalloc?"
msgstr "Ativar tracemalloc?"

#: ../../c-api/init_config.rst:1159
msgid "If non-zero, call :func:`tracemalloc.start` at startup."
msgstr ""
"Se diferente de zero, chame :func:`tracemalloc.start` na inicialização."

#: ../../c-api/init_config.rst:1161
msgid ""
"Set by :option:`-X tracemalloc=N <-X>` command line option and by the :"
"envvar:`PYTHONTRACEMALLOC` environment variable."
msgstr ""
"Definido pela opção de linha de comando :option:`-X tracemalloc=N <-X>` e "
"pela variável de ambiente :envvar:`PYTHONTRACEMALLOC`."

#: ../../c-api/init_config.rst:1168
msgid "Use :ref:`environment variables <using-on-envvars>`?"
msgstr "Utilizar :ref:`variáveis de ambiente <using-on-envvars>`?"

#: ../../c-api/init_config.rst:1170
msgid ""
"If equals to zero, ignore the :ref:`environment variables <using-on-"
"envvars>`."
msgstr ""
"Se for igual a zero, ignore as :ref:`variáveis de ambiente <using-on-"
"envvars>`."

#: ../../c-api/init_config.rst:1173
msgid "Set to ``0`` by the :option:`-E` environment variable."
msgstr "Definido como ``0`` pela variável de ambiente :option:`-E`."

#: ../../c-api/init_config.rst:1179
msgid "If non-zero, add the user site directory to :data:`sys.path`."
msgstr ""
"Se diferente de zero, adicione o diretório do site do utilizador a :data:"
"`sys.path`."

#: ../../c-api/init_config.rst:1181
msgid "Set to ``0`` by the :option:`-s` and :option:`-I` command line options."
msgstr ""
"Definido como ``0`` pelas opções de linha de comando :option:`-s` e :option:"
"`-I`."

#: ../../c-api/init_config.rst:1183
msgid "Set to ``0`` by the :envvar:`PYTHONNOUSERSITE` environment variable."
msgstr ""
"Definido como ``0`` pela variável de ambiente :envvar:`PYTHONNOUSERSITE`."

#: ../../c-api/init_config.rst:1189
msgid ""
"Verbose mode. If greater than ``0``, print a message each time a module is "
"imported, showing the place (filename or built-in module) from which it is "
"loaded."
msgstr ""
"Modo detalhado. Se for maior que ``0``, imprima uma mensagem cada vez que um "
"módulo for importado, mostrando o local (nome do ficheiro ou módulo "
"incorporado) de onde ele é carregado."

#: ../../c-api/init_config.rst:1193
msgid ""
"If greater or equal to ``2``, print a message for each file that is checked "
"for when searching for a module. Also provides information on module cleanup "
"at exit."
msgstr ""

#: ../../c-api/init_config.rst:1197
msgid "Incremented by the :option:`-v` command line option."
msgstr "Aumentado pela opção de linha de comando :option:`-v`."

#: ../../c-api/init_config.rst:1199
msgid "Set to the :envvar:`PYTHONVERBOSE` environment variable value."
msgstr ""

#: ../../c-api/init_config.rst:1205
msgid ""
"Options of the :mod:`warnings` module to build warnings filters, lowest to "
"highest priority: :data:`sys.warnoptions`."
msgstr ""
"Opções do módulo :mod:`warnings` para criar filtros de avisos, da prioridade "
"mais baixa à mais alta: :data:`sys.warnoptions`."

#: ../../c-api/init_config.rst:1208
msgid ""
"The :mod:`warnings` module adds :data:`sys.warnoptions` in the reverse "
"order: the last :c:member:`PyConfig.warnoptions` item becomes the first item "
"of :data:`warnings.filters` which is checked first (highest priority)."
msgstr ""
"O módulo :mod:`warnings` adiciona :data:`sys.warnoptions` na ordem inversa: "
"o último item :c:member:`PyConfig.warnoptions` torna-se o primeiro item de :"
"data:`warnings.filters`, que é verificado primeiro (prioridade mais alta)."

#: ../../c-api/init_config.rst:1213
msgid ""
"The :option:`-W` command line options adds its value to :c:member:`~PyConfig."
"warnoptions`, it can be used multiple times."
msgstr ""
"A opção de linha de comando :option:`-W` adiciona o seu valor a :c:member:"
"`~PyConfig.warnoptions`, podendo ser utilizada várias vezes."

#: ../../c-api/init_config.rst:1216
msgid ""
"The :envvar:`PYTHONWARNINGS` environment variable can also be used to add "
"warning options. Multiple options can be specified, separated by commas (``,"
"``)."
msgstr ""
"A variável de ambiente :envvar:`PYTHONWARNINGS` também pode ser usada para "
"adicionar opções de aviso. É possível especificar várias opções, separadas "
"por vírgulas (``,``)."

#: ../../c-api/init_config.rst:1224
msgid ""
"If equal to ``0``, Python won't try to write ``.pyc`` files on the import of "
"source modules."
msgstr ""
"Se for igual a ``0``, o Python não tentará gravar ficheiros ``.pyc`` na "
"importação de módulos de origem."

#: ../../c-api/init_config.rst:1227
msgid ""
"Set to ``0`` by the :option:`-B` command line option and the :envvar:"
"`PYTHONDONTWRITEBYTECODE` environment variable."
msgstr ""
"Definido como ``0`` pela opção de linha de comando :option:`-B` e pela "
"variável de ambiente :envvar:`PYTHONDONTWRITEBYTECODE`."

#: ../../c-api/init_config.rst:1230
msgid ""
":data:`sys.dont_write_bytecode` is initialized to the inverted value of :c:"
"member:`~PyConfig.write_bytecode`."
msgstr ""
":data:`sys.dont_write_bytecode` é inicializado com o valor invertido de :c:"
"member:`~PyConfig.write_bytecode`."

#: ../../c-api/init_config.rst:1237
msgid "Values of the :option:`-X` command line options: :data:`sys._xoptions`."
msgstr ""
"Valores das opções da linha de comando :option:`-X`: :data:`sys._xoptions`."

#: ../../c-api/init_config.rst:1241
msgid ""
"If :c:member:`~PyConfig.parse_argv` is non-zero, :c:member:`~PyConfig.argv` "
"arguments are parsed the same way the regular Python parses :ref:`command "
"line arguments <using-on-cmdline>`, and Python arguments are stripped from :"
"c:member:`~PyConfig.argv`."
msgstr ""
"Se :c:member:`~PyConfig.parse_argv` for diferente de zero, os argumentos :c:"
"member:`~PyConfig.argv` são analisados da mesma forma que o Python normal "
"analisa :ref:`argumentos da linha de comando <using-on-cmdline>`, e os "
"argumentos do Python são removidos de :c:member:`~PyConfig.argv`."

#: ../../c-api/init_config.rst:1246
msgid ""
"The :c:member:`~PyConfig.xoptions` options are parsed to set other options: "
"see the :option:`-X` command line option."
msgstr ""
"As opções :c:member:`~PyConfig.xoptions` são analisadas para definir outras "
"opções: consulte a opção de linha de comando :option:`-X`."

#: ../../c-api/init_config.rst:1251
msgid "The ``show_alloc_count`` field has been removed."
msgstr "O campo ``show_alloc_count`` foi removido."

#: ../../c-api/init_config.rst:1255
msgid "Initialization with PyConfig"
msgstr "Inicialização com PyConfig"

#: ../../c-api/init_config.rst:1257
msgid "Function to initialize Python:"
msgstr ""

#: ../../c-api/init_config.rst:1261
msgid "Initialize Python from *config* configuration."
msgstr ""

#: ../../c-api/init_config.rst:1266
msgid ""
"If :c:func:`PyImport_FrozenModules`, :c:func:`PyImport_AppendInittab` or :c:"
"func:`PyImport_ExtendInittab` are used, they must be set or called after "
"Python preinitialization and before the Python initialization. If Python is "
"initialized multiple times, :c:func:`PyImport_AppendInittab` or :c:func:"
"`PyImport_ExtendInittab` must be called before each Python initialization."
msgstr ""
"Se :c:func:`PyImport_FrozenModules`, :c:func:`PyImport_AppendInittab` ou :c:"
"func:`PyImport_ExtendInittab` forem usados, eles devem ser definidos ou "
"chamados após a pré-inicialização do Python e antes da inicialização do "
"Python. Se o Python for inicializado várias vezes, :c:func:"
"`PyImport_AppendInittab` ou :c:func:`PyImport_ExtendInittab` devem ser "
"chamados antes de cada inicialização do Python."

#: ../../c-api/init_config.rst:1273
msgid ""
"The current configuration (``PyConfig`` type) is stored in "
"``PyInterpreterState.config``."
msgstr ""
"A configuração atual (tipo ``PyConfig``) é armazenada em "
"``PyInterpreterState.config``."

#: ../../c-api/init_config.rst:1276
msgid "Example setting the program name::"
msgstr "Exemplo de definição do nome do programa::"

#: ../../c-api/init_config.rst:1304
msgid ""
"More complete example modifying the default configuration, read the "
"configuration, and then override some parameters. Note that since 3.11, many "
"parameters are not calculated until initialization, and so values cannot be "
"read from the configuration structure. Any values set before initialize is "
"called will be left unchanged by initialization::"
msgstr ""
"Exemplo mais completo modificando a configuração padrão, lendo a "
"configuração e, em seguida, substituindo alguns parâmetros. Observe que, "
"desde a versão 3.11, muitos parâmetros não são calculados até a "
"inicialização e, portanto, os valores não podem ser lidos da estrutura de "
"configuração. Quaisquer valores definidos antes da chamada da inicialização "
"permanecerão inalterados pela inicialização::"

#: ../../c-api/init_config.rst:1367
msgid "Isolated Configuration"
msgstr "Configuração isolada"

#: ../../c-api/init_config.rst:1369
msgid ""
":c:func:`PyPreConfig_InitIsolatedConfig` and :c:func:"
"`PyConfig_InitIsolatedConfig` functions create a configuration to isolate "
"Python from the system. For example, to embed Python into an application."
msgstr ""
"As funções :c:func:`PyPreConfig_InitIsolatedConfig` e :c:func:"
"`PyConfig_InitIsolatedConfig` criam uma configuração para isolar o Python do "
"sistema. Por exemplo, para incorporar o Python numa aplicação."

#: ../../c-api/init_config.rst:1374
msgid ""
"This configuration ignores global configuration variables, environment "
"variables, command line arguments (:c:member:`PyConfig.argv` is not parsed) "
"and user site directory. The C standard streams (ex: ``stdout``) and the "
"LC_CTYPE locale are left unchanged. Signal handlers are not installed."
msgstr ""
"Esta configuração ignora variáveis de configuração globais, variáveis de "
"ambiente, argumentos de linha de comando (:c:member:`PyConfig.argv` não é "
"analisado) e diretório do site do utilizador. Os fluxos padrão C (ex: "
"``stdout``) e a localidade LC_CTYPE permanecem inalterados. Os manipuladores "
"de sinal não são instalados."

#: ../../c-api/init_config.rst:1379
msgid ""
"Configuration files are still used with this configuration to determine "
"paths that are unspecified. Ensure :c:member:`PyConfig.home` is specified to "
"avoid computing the default path configuration."
msgstr ""
"Os ficheiros de configuração ainda são usados com esta configuração para "
"determinar caminhos que não estão especificados. Certifique-se de que :c:"
"member:`PyConfig.home` está especificado para evitar o cálculo da "
"configuração do caminho padrão."

#: ../../c-api/init_config.rst:1387
msgid "Python Configuration"
msgstr "Configuração Python"

#: ../../c-api/init_config.rst:1389
msgid ""
":c:func:`PyPreConfig_InitPythonConfig` and :c:func:"
"`PyConfig_InitPythonConfig` functions create a configuration to build a "
"customized Python which behaves as the regular Python."
msgstr ""
"As funções :c:func:`PyPreConfig_InitPythonConfig` e :c:func:"
"`PyConfig_InitPythonConfig` criam uma configuração para construir um Python "
"personalizado que se comporta como o Python normal."

#: ../../c-api/init_config.rst:1393
msgid ""
"Environments variables and command line arguments are used to configure "
"Python, whereas global configuration variables are ignored."
msgstr ""
"Variáveis de ambiente e argumentos de linha de comando são usados para "
"configurar o Python, enquanto variáveis de configuração globais são "
"ignoradas."

#: ../../c-api/init_config.rst:1396
msgid ""
"This function enables C locale coercion (:pep:`538`) and :ref:`Python UTF-8 "
"Mode <utf8-mode>` (:pep:`540`) depending on the LC_CTYPE locale, :envvar:"
"`PYTHONUTF8` and :envvar:`PYTHONCOERCECLOCALE` environment variables."
msgstr ""
"Esta função permite a coerção de localidade C (:pep:`538`) e :ref:`Modo "
"UTF-8 do Python <utf8-mode>` (:pep:`540`) dependendo da localidade LC_CTYPE, "
"das variáveis de ambiente :envvar:`PYTHONUTF8` e :envvar:"
"`PYTHONCOERCECLOCALE`."

#: ../../c-api/init_config.rst:1405
msgid "Python Path Configuration"
msgstr "Configuração do caminho do Python"

#: ../../c-api/init_config.rst:1407
msgid ":c:type:`PyConfig` contains multiple fields for the path configuration:"
msgstr ""
":c:type:`PyConfig` contém vários campos para a configuração do caminho:"

#: ../../c-api/init_config.rst:1409
msgid "Path configuration inputs:"
msgstr "Entradas de configuração do caminho:"

#: ../../c-api/init_config.rst:1411
msgid ":c:member:`PyConfig.home`"
msgstr ":c:member:`PyConfig.home`"

#: ../../c-api/init_config.rst:1412
msgid ":c:member:`PyConfig.platlibdir`"
msgstr ":c:member:`PyConfig.platlibdir`"

#: ../../c-api/init_config.rst:1413
msgid ":c:member:`PyConfig.pathconfig_warnings`"
msgstr ":c:member:`PyConfig.pathconfig_warnings`"

#: ../../c-api/init_config.rst:1414
msgid ":c:member:`PyConfig.program_name`"
msgstr ":c:member:`PyConfig.program_name`"

#: ../../c-api/init_config.rst:1415
msgid ":c:member:`PyConfig.pythonpath_env`"
msgstr ":c:member:`PyConfig.pythonpath_env`"

#: ../../c-api/init_config.rst:1416
msgid "current working directory: to get absolute paths"
msgstr "diretório de trabalho atual: para obter caminhos absolutos"

#: ../../c-api/init_config.rst:1417
msgid ""
"``PATH`` environment variable to get the program full path (from :c:member:"
"`PyConfig.program_name`)"
msgstr ""
"Variável de ambiente ``PATH`` para obter o caminho completo do programa (de :"
"c:member:`PyConfig.program_name`)"

#: ../../c-api/init_config.rst:1419
msgid "``__PYVENV_LAUNCHER__`` environment variable"
msgstr "Variável de ambiente ``__PYVENV_LAUNCHER__``"

#: ../../c-api/init_config.rst:1420
msgid ""
"(Windows only) Application paths in the registry under "
"\"Software\\Python\\PythonCore\\X.Y\\PythonPath\" of HKEY_CURRENT_USER and "
"HKEY_LOCAL_MACHINE (where X.Y is the Python version)."
msgstr ""
"(Apenas Windows) Caminhos de aplicação no registo em "
"«Software\\Python\\PythonCore\\X.Y\\PythonPath» de HKEY_CURRENT_USER e "
"HKEY_LOCAL_MACHINE (onde X.Y é a versão do Python)."

#: ../../c-api/init_config.rst:1424
msgid "Path configuration output fields:"
msgstr "Campos de saída da configuração do caminho:"

#: ../../c-api/init_config.rst:1426
msgid ":c:member:`PyConfig.base_exec_prefix`"
msgstr ":c:member:`PyConfig.base_exec_prefix`"

#: ../../c-api/init_config.rst:1427
msgid ":c:member:`PyConfig.base_executable`"
msgstr ":c:member:`PyConfig.base_executable`"

#: ../../c-api/init_config.rst:1428
msgid ":c:member:`PyConfig.base_prefix`"
msgstr ":c:member:`PyConfig.base_prefix`"

#: ../../c-api/init_config.rst:1429
msgid ":c:member:`PyConfig.exec_prefix`"
msgstr ":c:member:`PyConfig.exec_prefix`"

#: ../../c-api/init_config.rst:1430
msgid ":c:member:`PyConfig.executable`"
msgstr ":c:member:`PyConfig.executable`"

#: ../../c-api/init_config.rst:1431
msgid ""
":c:member:`PyConfig.module_search_paths_set`, :c:member:`PyConfig."
"module_search_paths`"
msgstr ""
":c:member:`PyConfig.module_search_paths_set`, :c:member:`PyConfig."
"module_search_paths`"

#: ../../c-api/init_config.rst:1433
msgid ":c:member:`PyConfig.prefix`"
msgstr ":c:member:`PyConfig.prefix`"

#: ../../c-api/init_config.rst:1435
msgid ""
"If at least one \"output field\" is not set, Python calculates the path "
"configuration to fill unset fields. If :c:member:`~PyConfig."
"module_search_paths_set` is equal to ``0``, :c:member:`~PyConfig."
"module_search_paths` is overridden and :c:member:`~PyConfig."
"module_search_paths_set` is set to ``1``."
msgstr ""
"Se pelo menos um «campo de saída» não estiver definido, o Python calcula a "
"configuração do caminho para preencher os campos não definidos. Se :c:member:"
"`~PyConfig.module_search_paths_set` for igual a ``0``, :c:member:`~PyConfig."
"module_search_paths` é substituído e :c:member:`~PyConfig."
"module_search_paths_set` é definido como ``1``."

#: ../../c-api/init_config.rst:1441
msgid ""
"It is possible to completely ignore the function calculating the default "
"path configuration by setting explicitly all path configuration output "
"fields listed above. A string is considered as set even if it is non-empty. "
"``module_search_paths`` is considered as set if ``module_search_paths_set`` "
"is set to ``1``. In this case, ``module_search_paths`` will be used without "
"modification."
msgstr ""
"É possível ignorar completamente a função que calcula a configuração do "
"caminho padrão, definindo explicitamente todos os campos de saída da "
"configuração do caminho listados acima. Uma string é considerada definida "
"mesmo que não esteja vazia. ``module_search_paths`` é considerado definido "
"se ``module_search_paths_set`` estiver definido como ``1``. Neste caso, "
"``module_search_paths`` será usado sem modificações."

#: ../../c-api/init_config.rst:1448
msgid ""
"Set :c:member:`~PyConfig.pathconfig_warnings` to ``0`` to suppress warnings "
"when calculating the path configuration (Unix only, Windows does not log any "
"warning)."
msgstr ""
"Defina :c:member:`~PyConfig.pathconfig_warnings` como ``0`` para suprimir "
"avisos ao calcular a configuração do caminho (apenas Unix, o Windows não "
"regista nenhum aviso)."

#: ../../c-api/init_config.rst:1451
msgid ""
"If :c:member:`~PyConfig.base_prefix` or :c:member:`~PyConfig."
"base_exec_prefix` fields are not set, they inherit their value from :c:"
"member:`~PyConfig.prefix` and :c:member:`~PyConfig.exec_prefix` respectively."
msgstr ""
"Se os campos :c:member:`~PyConfig.base_prefix` ou :c:member:`~PyConfig."
"base_exec_prefix` não estiverem definidos, eles herdam o seu valor de :c:"
"member:`~PyConfig.prefix` e :c:member:`~PyConfig.exec_prefix`, "
"respetivamente."

#: ../../c-api/init_config.rst:1455
msgid ":c:func:`Py_RunMain` and :c:func:`Py_Main` modify :data:`sys.path`:"
msgstr ":c:func:`Py_RunMain` e :c:func:`Py_Main` modificam :data:`sys.path`:"

#: ../../c-api/init_config.rst:1457
msgid ""
"If :c:member:`~PyConfig.run_filename` is set and is a directory which "
"contains a ``__main__.py`` script, prepend :c:member:`~PyConfig."
"run_filename` to :data:`sys.path`."
msgstr ""
"Se :c:member:`~PyConfig.run_filename` estiver definido e for um diretório "
"que contém um script ``__main__.py``, acrescente :c:member:`~PyConfig."
"run_filename` ao :data:`sys.path`."

#: ../../c-api/init_config.rst:1460
msgid "If :c:member:`~PyConfig.isolated` is zero:"
msgstr "Se :c:member:`~PyConfig.isolated` for zero:"

#: ../../c-api/init_config.rst:1462
msgid ""
"If :c:member:`~PyConfig.run_module` is set, prepend the current directory "
"to :data:`sys.path`. Do nothing if the current directory cannot be read."
msgstr ""
"Se :c:member:`~PyConfig.run_module` estiver definido, acrescente o diretório "
"atual ao :data:`sys.path`. Não faça nada se o diretório atual não puder ser "
"lido."

#: ../../c-api/init_config.rst:1464
msgid ""
"If :c:member:`~PyConfig.run_filename` is set, prepend the directory of the "
"filename to :data:`sys.path`."
msgstr ""
"Se :c:member:`~PyConfig.run_filename` estiver definido, acrescente o "
"diretório do nome do ficheiro a :data:`sys.path`."

#: ../../c-api/init_config.rst:1466
msgid "Otherwise, prepend an empty string to :data:`sys.path`."
msgstr "Caso contrário, acrescente uma string vazia ao :data:`sys.path`."

#: ../../c-api/init_config.rst:1468
msgid ""
"If :c:member:`~PyConfig.site_import` is non-zero, :data:`sys.path` can be "
"modified by the :mod:`site` module. If :c:member:`~PyConfig."
"user_site_directory` is non-zero and the user's site-package directory "
"exists, the :mod:`site` module appends the user's site-package directory to :"
"data:`sys.path`."
msgstr ""
"Se :c:member:`~PyConfig.site_import` for diferente de zero, :data:`sys.path` "
"pode ser modificado pelo módulo :mod:`site`. Se :c:member:`~PyConfig."
"user_site_directory` for diferente de zero e o diretório site-package do "
"utilizador existir, o módulo :mod:`site` acrescenta o diretório site-package "
"do utilizador a :data:`sys.path`."

#: ../../c-api/init_config.rst:1474
msgid "The following configuration files are used by the path configuration:"
msgstr ""
"Os seguintes ficheiros de configuração são utilizados pela configuração do "
"caminho:"

#: ../../c-api/init_config.rst:1476
msgid "``pyvenv.cfg``"
msgstr "``pyvenv.cfg``"

#: ../../c-api/init_config.rst:1477
msgid "``._pth`` file (ex: ``python._pth``)"
msgstr "ficheiro ``._pth`` (ex: ``python._pth``)"

#: ../../c-api/init_config.rst:1478
msgid "``pybuilddir.txt`` (Unix only)"
msgstr "``pybuilddir.txt`` (apenas Unix)"

#: ../../c-api/init_config.rst:1480
msgid "If a ``._pth`` file is present:"
msgstr "Se um ficheiro ``._pth`` estiver presente:"

#: ../../c-api/init_config.rst:1482
msgid "Set :c:member:`~PyConfig.isolated` to ``1``."
msgstr "Defina :c:member:`~PyConfig.isolated` como ``1``."

#: ../../c-api/init_config.rst:1484
msgid "Set :c:member:`~PyConfig.site_import` to ``0``."
msgstr "Defina :c:member:`~PyConfig.site_import` como ``0``."

#: ../../c-api/init_config.rst:1485
msgid "Set :c:member:`~PyConfig.safe_path` to ``1``."
msgstr "Defina :c:member:`~PyConfig.safe_path` como ``1``."

#: ../../c-api/init_config.rst:1487
msgid ""
"The ``__PYVENV_LAUNCHER__`` environment variable is used to set :c:member:"
"`PyConfig.base_executable`"
msgstr ""

#: ../../c-api/init_config.rst:1492
msgid "Py_RunMain()"
msgstr ""

#: ../../c-api/init_config.rst:1496
msgid ""
"Execute the command (:c:member:`PyConfig.run_command`), the script (:c:"
"member:`PyConfig.run_filename`) or the module (:c:member:`PyConfig."
"run_module`) specified on the command line or in the configuration."
msgstr ""

#: ../../c-api/init_config.rst:1501
msgid "By default and when if :option:`-i` option is used, run the REPL."
msgstr ""

#: ../../c-api/init_config.rst:1503
msgid ""
"Finally, finalizes Python and returns an exit status that can be passed to "
"the ``exit()`` function."
msgstr ""

#: ../../c-api/init_config.rst:1506
msgid ""
"See :ref:`Python Configuration <init-python-config>` for an example of "
"customized Python always running in isolated mode using :c:func:`Py_RunMain`."
msgstr ""

#: ../../c-api/init_config.rst:1512
msgid "Py_GetArgcArgv()"
msgstr "Py_GetArgcArgv()"

#: ../../c-api/init_config.rst:1516
msgid "Get the original command line arguments, before Python modified them."
msgstr ""
"Obtenha os argumentos originais da linha de comando, antes que o Python os "
"modifique."

#: ../../c-api/init_config.rst:1518
msgid "See also :c:member:`PyConfig.orig_argv` member."
msgstr "Veja também o membro :c:member:`PyConfig.orig_argv`."

#: ../../c-api/init_config.rst:1522
msgid "Multi-Phase Initialization Private Provisional API"
msgstr ""

#: ../../c-api/init_config.rst:1524
msgid ""
"This section is a private provisional API introducing multi-phase "
"initialization, the core feature of :pep:`432`:"
msgstr ""

#: ../../c-api/init_config.rst:1527
msgid "\"Core\" initialization phase, \"bare minimum Python\":"
msgstr ""

#: ../../c-api/init_config.rst:1529
msgid "Builtin types;"
msgstr ""

#: ../../c-api/init_config.rst:1530
msgid "Builtin exceptions;"
msgstr ""

#: ../../c-api/init_config.rst:1531
msgid "Builtin and frozen modules;"
msgstr ""

#: ../../c-api/init_config.rst:1532
msgid ""
"The :mod:`sys` module is only partially initialized (ex: :data:`sys.path` "
"doesn't exist yet)."
msgstr ""

#: ../../c-api/init_config.rst:1535
msgid "\"Main\" initialization phase, Python is fully initialized:"
msgstr ""

#: ../../c-api/init_config.rst:1537
msgid "Install and configure :mod:`importlib`;"
msgstr ""

#: ../../c-api/init_config.rst:1538
msgid "Apply the :ref:`Path Configuration <init-path-config>`;"
msgstr ""

#: ../../c-api/init_config.rst:1539
msgid "Install signal handlers;"
msgstr ""

#: ../../c-api/init_config.rst:1540
msgid ""
"Finish :mod:`sys` module initialization (ex: create :data:`sys.stdout` and :"
"data:`sys.path`);"
msgstr ""

#: ../../c-api/init_config.rst:1542
msgid ""
"Enable optional features like :mod:`faulthandler` and :mod:`tracemalloc`;"
msgstr ""

#: ../../c-api/init_config.rst:1543
msgid "Import the :mod:`site` module;"
msgstr ""

#: ../../c-api/init_config.rst:1544
msgid "etc."
msgstr ""

#: ../../c-api/init_config.rst:1546
msgid "Private provisional API:"
msgstr ""

#: ../../c-api/init_config.rst:1548
msgid ""
":c:member:`PyConfig._init_main`: if set to ``0``, :c:func:"
"`Py_InitializeFromConfig` stops at the \"Core\" initialization phase."
msgstr ""

#: ../../c-api/init_config.rst:1550
msgid ""
":c:member:`PyConfig._isolated_interpreter`: if non-zero, disallow threads, "
"subprocesses and fork."
msgstr ""

#: ../../c-api/init_config.rst:1555
msgid ""
"Move to the \"Main\" initialization phase, finish the Python initialization."
msgstr ""

#: ../../c-api/init_config.rst:1557
msgid ""
"No module is imported during the \"Core\" phase and the ``importlib`` module "
"is not configured: the :ref:`Path Configuration <init-path-config>` is only "
"applied during the \"Main\" phase. It may allow to customize Python in "
"Python to override or tune the :ref:`Path Configuration <init-path-config>`, "
"maybe install a custom :data:`sys.meta_path` importer or an import hook, etc."
msgstr ""

#: ../../c-api/init_config.rst:1563
msgid ""
"It may become possible to calculatin the :ref:`Path Configuration <init-path-"
"config>` in Python, after the Core phase and before the Main phase, which is "
"one of the :pep:`432` motivation."
msgstr ""

#: ../../c-api/init_config.rst:1567
msgid ""
"The \"Core\" phase is not properly defined: what should be and what should "
"not be available at this phase is not specified yet. The API is marked as "
"private and provisional: the API can be modified or even be removed anytime "
"until a proper public API is designed."
msgstr ""

#: ../../c-api/init_config.rst:1572
msgid ""
"Example running Python code between \"Core\" and \"Main\" initialization "
"phases::"
msgstr ""
