# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# André Moreira <afrmscb@gmail.com>, 2025
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.9\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-10-03 17:51+0000\n"
"PO-Revision-Date: 2025-09-22 17:56+0000\n"
"Last-Translator: André Moreira <afrmscb@gmail.com>, 2025\n"
"Language-Team: Portuguese (Portugal) (https://app.transifex.com/python-doc/"
"teams/5390/pt_PT/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: pt_PT\n"
"Plural-Forms: nplurals=3; plural=(n == 0 || n == 1) ? 0 : n != 0 && n % "
"1000000 == 0 ? 1 : 2;\n"

#: ../../whatsnew/2.0.rst:3
msgid "What's New in Python 2.0"
msgstr "Novidades no Python 2.0"

#: ../../whatsnew/2.0.rst:0
msgid "Author"
msgstr "Autor"

#: ../../whatsnew/2.0.rst:5
msgid "A.M. Kuchling and Moshe Zadka"
msgstr "A.M. Kuchling e Moshe Zadka"

#: ../../whatsnew/2.0.rst:13
msgid "Introduction"
msgstr "Introdução"

#: ../../whatsnew/2.0.rst:15
msgid ""
"A new release of Python, version 2.0, was released on October 16, 2000. This "
"article covers the exciting new features in 2.0, highlights some other "
"useful changes, and points out a few incompatible changes that may require "
"rewriting code."
msgstr ""
"Uma nova versão do Python, a versão 2.0, foi lançada a 16 de outubro de "
"2000. Este artigo aborda as novas funcionalidades emocionantes da versão "
"2.0, destaque outras alterações úteis e identifica algumas mudanças "
"incompatíveis que podem exigir a reescrita de código."

#: ../../whatsnew/2.0.rst:20
msgid ""
"Python's development never completely stops between releases, and a steady "
"flow of bug fixes and improvements are always being submitted. A host of "
"minor fixes, a few optimizations, additional docstrings, and better error "
"messages went into 2.0; to list them all would be impossible, but they're "
"certainly significant. Consult the publicly-available CVS logs if you want "
"to see the full list.  This progress is due to the five developers working "
"for  PythonLabs are now getting paid to spend their days fixing bugs, and "
"also due to the improved communication resulting  from moving to SourceForge."
msgstr ""

#: ../../whatsnew/2.0.rst:33
msgid "What About Python 1.6?"
msgstr "E o Python 1.6?"

#: ../../whatsnew/2.0.rst:35
msgid ""
"Python 1.6 can be thought of as the Contractual Obligations Python release. "
"After the core development team left CNRI in May 2000, CNRI requested that a "
"1.6 release be created, containing all the work on Python that had been "
"performed at CNRI.  Python 1.6 therefore represents the state of the CVS "
"tree as of May 2000, with the most significant new feature being Unicode "
"support.  Development continued after May, of course, so the 1.6 tree "
"received a few fixes to ensure that it's forward-compatible with Python "
"2.0.  1.6 is therefore part of Python's evolution, and not a side branch."
msgstr ""
"O Python 1.6 pode ser visto como a versão de \"Obrigações Contratuais\" do "
"Python. Depois da equipa principal de desenvolvimento ter deixado a CNRI em "
"maio de 2000, a CNRI solicitou que fosse criada uma versão 1.6, contendo "
"todo o trabalho realizado no Python na CNRI. O Python 1.6 representa, "
"portanto, o estado da árvore CVS em maio de 2000, sendo a nova "
"funcionalidade mais significativa o suporte a Unicode. O desenvolvimento "
"continuou após maio, claro, pelo que a árvore 1.6 recebeu algumas correções "
"para garantir que é compatível com o Python 2.0. O 1.6 faz, portanto, parte "
"da evolução do Python, e não é um ramo secundário."

#: ../../whatsnew/2.0.rst:44
msgid ""
"So, should you take much interest in Python 1.6?  Probably not.  The "
"1.6final and 2.0beta1 releases were made on the same day (September 5, "
"2000), the plan being to finalize Python 2.0 within a month or so.  If you "
"have applications to maintain, there seems little point in breaking things "
"by moving to 1.6, fixing them, and then having another round of breakage "
"within a month by moving to 2.0; you're better off just going straight to "
"2.0.  Most of the really interesting features described in this document are "
"only in 2.0, because a lot of work was done between May and September."
msgstr ""
"Deve então interessar-se muito pelo Python 1.6? Provavelmente não. As "
"versões 1.6final e 2.0beta1 foram lançadas no mesmo dia (5 de setembro de "
"2000), com o plano de finalizar o Python 2.0 em cerca de um mês. Se tem "
"aplicações para manter, parece não fazer muito sentido quebrar as coisas ao "
"migrar para o 1.6, corrigi-las, e depois ter outra ronda de quebras ao "
"migrar para o 2.0 em um mês; é melhor passar diretamente para o 2.0. A "
"maioria das funcionalidades realmente interessantes descritas neste "
"documento estão apenas no 2.0, porque muito trabalho foi feito entre maio e "
"setembro."

#: ../../whatsnew/2.0.rst:57
msgid "New Development Process"
msgstr "Novo Processo de Desenvolvimento"

#: ../../whatsnew/2.0.rst:59
msgid ""
"The most important change in Python 2.0 may not be to the code at all, but "
"to how Python is developed: in May 2000 the Python developers began using "
"the tools made available by SourceForge for storing  source code, tracking "
"bug reports, and managing the queue of patch submissions.  To report bugs or "
"submit patches for Python 2.0, use the bug tracking and patch manager tools "
"available from Python's project page, located at https://sourceforge.net/"
"projects/python/."
msgstr ""
"A mudança mais importante no Python 2.0 pode não estar no código em si, mas "
"sim em como o Python é desenvolvido: em maio de 2000, os programadores do "
"Python começaram a usar as ferramentas disponibilizadas pelo SourceForge "
"para armazenar código-fonte, acompanhar relatórios de problemas e gerir a "
"fila de submissões de correções. Para reportar problemas ou submeter "
"correções para o Python 2.0, utilize as ferramentas de acompanhamento de "
"problemas e de gestão de correções disponíveis na página do projeto Python, "
"em https://sourceforge.net/projects/python/."

#: ../../whatsnew/2.0.rst:66
msgid ""
"The most important of the services now hosted at SourceForge is the Python "
"CVS tree, the version-controlled repository containing the source code for "
"Python. Previously, there were roughly 7 or so people who had write access "
"to the CVS tree, and all patches had to be inspected and checked in by one "
"of the people on this short list. Obviously, this wasn't very scalable.  By "
"moving the CVS tree to SourceForge, it became possible to grant write access "
"to more people; as of September 2000 there were 27 people able to check in "
"changes, a fourfold increase.  This makes possible large-scale changes that "
"wouldn't be attempted if they'd have to be filtered through the small group "
"of core developers.  For example, one day Peter Schneider-Kamp took it into "
"his head to drop K&R C compatibility and convert the C source for Python to "
"ANSI C. After getting approval on the python-dev mailing list, he launched "
"into a flurry of checkins that lasted about a week, other developers joined "
"in to help, and the job was done.  If there were only 5 people with write "
"access, probably that task would have been viewed as \"nice, but not worth "
"the time and effort needed\" and it would never have gotten done."
msgstr ""
"O serviço mais importante agora alojado no SourceForge é a árvore CVS do "
"Python, o repositório controlado por versões que contém o código-fonte do "
"Python. Anteriormente, havia cerca de 7 pessoas com acesso de escrita à "
"árvore CVS, e todas as correções tinham de ser inspecionadas e validadas por "
"uma das pessoas nesta curta lista. Obviamente, isto não era muito escalável. "
"Ao mover a árvore CVS para o SourceForge, tornou-se possível conceder acesso "
"de escrita a mais pessoas; em setembro de 2000, havia 27 pessoas capazes de "
"validar alterações, um aumento de quatro vezes. Isto torna possíveis "
"alterações em grande escala que não seriam tentadas se tivessem de ser "
"filtradas pelo pequeno grupo de programadores principais. Por exemplo, um "
"dia, Peter Schneider-Kamp decidiu abandonar a compatibilidade com K&R C e "
"converter o código-fonte C do Python para ANSI C. Depois de obter aprovação "
"na lista de discussão python-dev, lançou-se numa série de validações que "
"durou cerca de uma semana, outros programadores juntaram-se para ajudar, e o "
"trabalho foi concluído. Se houvesse apenas 5 pessoas com acesso de escrita, "
"essa tarefa provavelmente teria sido vista como \"agradável, mas não valia o "
"tempo e esforço necessários\" e nunca teria sido feita."

#: ../../whatsnew/2.0.rst:83
msgid ""
"The shift to using SourceForge's services has resulted in a remarkable "
"increase in the speed of development.  Patches now get submitted, commented "
"on, revised by people other than the original submitter, and bounced back "
"and forth between people until the patch is deemed worth checking in.  Bugs "
"are tracked in one central location and can be assigned to a specific person "
"for fixing, and we can count the number of open bugs to measure progress.  "
"This didn't come without a cost: developers now have more e-mail to deal "
"with, more mailing lists to follow, and special tools had to be written for "
"the new environment. For example, SourceForge sends default patch and bug "
"notification e-mail messages that are completely unhelpful, so Ka-Ping Yee "
"wrote an HTML screen-scraper that sends more useful messages."
msgstr ""
"A migração para os serviços do SourceForge resultou num aumento notável na "
"velocidade de desenvolvimento. As correções são agora submetidas, "
"comentadas, revisadas por pessoas além do autor original, e trocadas entre "
"pessoas até serem consideradas dignas de validação. Os problemas são "
"acompanhados num local central e podem ser atribuídos a uma pessoa "
"específica para resolução, e podemos contar o número de problemas em aberto "
"para medir o progresso. Isto não veio sem custo: os programadores têm agora "
"mais e-mails para tratar, mais listas de discussão para seguir, e "
"ferramentas especiais tiveram de ser desenvolvidas para o novo ambiente. Por "
"exemplo, o SourceForge envia mensagens de e-mail de notificação de correções "
"e problemas por defeito que são completamente inúteis, pelo que Ka-Ping Yee "
"escreveu um *screen-scraper* HTML que envia mensagens mais úteis."

#: ../../whatsnew/2.0.rst:95
msgid ""
"The ease of adding code caused a few initial growing pains, such as code was "
"checked in before it was ready or without getting clear agreement from the "
"developer group.  The approval process that has emerged is somewhat similar "
"to that used by the Apache group. Developers can vote +1, +0, -0, or -1 on a "
"patch; +1 and -1 denote acceptance or rejection, while +0 and -0 mean the "
"developer is mostly indifferent to the change, though with a slight positive "
"or negative slant.  The most significant change from the Apache model is "
"that the voting is essentially advisory, letting Guido van Rossum, who has "
"Benevolent Dictator For Life status, know what the general opinion is. He "
"can still ignore the result of a vote, and approve or reject a change even "
"if the community disagrees with him."
msgstr ""
"A facilidade de adicionar código causou algumas dores de crescimento "
"iniciais, como código validado antes de estar pronto ou sem obter acordo "
"claro do grupo de programadores. O processo de aprovação que surgiu é, em "
"certa medida, semelhante ao utilizado pelo grupo Apache. Os programadores "
"podem votar +1, +0, -0 ou -1 numa correção; +1 e -1 denotam aceitação ou "
"rejeição, enquanto +0 e -0 significam que o programador é maioritariamente "
"indiferente à alteração, embora com uma ligeira tendência positiva ou "
"negativa. A mudança mais significativa em relação ao modelo Apache é que a "
"votação é essencialmente consultiva, permitindo que Guido van Rossum, que "
"tem o estatuto de *Benevolent Dictator For Life*, saiba qual é a opinião "
"geral. Ele ainda pode ignorar o resultado de uma votação e aprovar ou "
"rejeitar uma alteração mesmo que a comunidade discorde."

#: ../../whatsnew/2.0.rst:106
msgid ""
"Producing an actual patch is the last step in adding a new feature, and is "
"usually easy compared to the earlier task of coming up with a good design. "
"Discussions of new features can often explode into lengthy mailing list "
"threads, making the discussion hard to follow, and no one can read every "
"posting to python-dev.  Therefore, a relatively formal process has been set "
"up to write Python Enhancement Proposals (PEPs), modelled on the Internet "
"RFC process.  PEPs are draft documents that describe a proposed new feature, "
"and are continually revised until the community reaches a consensus, either "
"accepting or rejecting the proposal.  Quoting from the introduction to :pep:"
"`1`, \"PEP Purpose and Guidelines\":"
msgstr ""

#: ../../whatsnew/2.0.rst:120
msgid ""
"PEP stands for Python Enhancement Proposal.  A PEP is a design document "
"providing information to the Python community, or describing a new feature "
"for Python.  The PEP should provide a concise technical specification of the "
"feature and a rationale for the feature."
msgstr ""
"PEP significa *Python Enhancement Proposal*. Uma PEP é um documento de "
"*design* que fornece informações à comunidade Python, ou descreve uma nova "
"funcionalidade para o Python. A PEP deve fornecer uma especificação técnica "
"concisa da funcionalidade e uma justificação para a mesma."

#: ../../whatsnew/2.0.rst:125
msgid ""
"We intend PEPs to be the primary mechanisms for proposing new features, for "
"collecting community input on an issue, and for documenting the design "
"decisions that have gone into Python.  The PEP author is responsible for "
"building consensus within the community and documenting dissenting opinions."
msgstr ""
"Pretendemos que as PEPs sejam os mecanismos principais para propor novas "
"funcionalidades, para recolher contribuições da comunidade sobre um assunto, "
"e para documentar as decisões de *design* que foram incorporadas no Python. "
"O autor da PEP é responsável por construir consenso dentro da comunidade e "
"documentar opiniões discordantes."

#: ../../whatsnew/2.0.rst:130
msgid ""
"Read the rest of :pep:`1` for the details of the PEP editorial process, "
"style, and format.  PEPs are kept in the Python CVS tree on SourceForge, "
"though they're not part of the Python 2.0 distribution, and are also "
"available in HTML form from https://www.python.org/dev/peps/.  As of "
"September 2000, there are 25 PEPS, ranging from :pep:`201`, \"Lockstep "
"Iteration\", to PEP 225, \"Elementwise/Objectwise Operators\"."
msgstr ""

#: ../../whatsnew/2.0.rst:141
msgid "Unicode"
msgstr "Unicode"

#: ../../whatsnew/2.0.rst:143
msgid ""
"The largest new feature in Python 2.0 is a new fundamental data type: "
"Unicode strings.  Unicode uses 16-bit numbers to represent characters "
"instead of the 8-bit number used by ASCII, meaning that 65,536 distinct "
"characters can be supported."
msgstr ""
"A maior novidade do Python 2.0 é um novo tipo de dados fundamental: "
"*strings* Unicode. O Unicode utiliza números de 16 bits para representar "
"caracteres, em vez dos 8 bits usados pelo ASCII, o que significa que 65 536 "
"caracteres distintos podem ser suportados."

#: ../../whatsnew/2.0.rst:148
msgid ""
"The final interface for Unicode support was arrived at through countless "
"often-stormy discussions on the python-dev mailing list, and mostly "
"implemented by Marc-André Lemburg, based on a Unicode string type "
"implementation by Fredrik Lundh.  A detailed explanation of the interface "
"was written up as :pep:`100`, \"Python Unicode Integration\". This article "
"will simply cover the most significant points about the Unicode interfaces."
msgstr ""
"A interface final para o suporte a Unicode foi alcançada através de "
"incontáveis discussões, muitas vezes acaloradas, na lista de discussão "
"python-dev, e foi maioritariamente implementada por Marc-André Lemburg, com "
"base numa implementação de *strings* Unicode de Fredrik Lundh. Uma "
"explicação detalhada da interface foi redigida na :pep:`100`, \"Integração "
"de Unicode no Python\". Este artigo irá simplesmente abordar os pontos mais "
"significativos sobre as interfaces Unicode."

#: ../../whatsnew/2.0.rst:155
msgid ""
"In Python source code, Unicode strings are written as ``u\"string\"``.  "
"Arbitrary Unicode characters can be written using a new escape sequence, "
"``\\uHHHH``, where *HHHH* is a 4-digit hexadecimal number from 0000 to "
"FFFF.  The existing ``\\xHHHH`` escape sequence can also be used, and octal "
"escapes can be used for characters up to U+01FF, which is represented by "
"``\\777``."
msgstr ""

#: ../../whatsnew/2.0.rst:161
msgid ""
"Unicode strings, just like regular strings, are an immutable sequence type. "
"They can be indexed and sliced, but not modified in place. Unicode strings "
"have an ``encode( [encoding] )`` method that returns an 8-bit string in the "
"desired encoding.  Encodings are named by strings, such as ``'ascii'``, "
"``'utf-8'``, ``'iso-8859-1'``, or whatever.  A codec API is defined for "
"implementing and registering new encodings that are then available "
"throughout a Python program. If an encoding isn't specified, the default "
"encoding is usually 7-bit ASCII, though it can be changed for your Python "
"installation by calling the ``sys.setdefaultencoding(encoding)`` function in "
"a customized version of :file:`site.py`."
msgstr ""
"As *strings* Unicode, tal como as *strings* normais, são um tipo de "
"sequência imutável. Podem ser indexadas e fatiadas, mas não modificadas *in-"
"place*. As *strings* Unicode têm um método ``encode([encoding])`` que "
"devolve uma *string* de 8 bits na codificação desejada. As codificações são "
"identificadas por *strings*, como ``'ascii'``, ``'utf-8'``, "
"``'iso-8859-1'``, etc. Uma API de *codec* é definida para implementar e "
"registar novas codificações, que ficam disponíveis em todo o programa "
"Python. Se uma codificação não for especificada, a codificação predefinida é "
"normalmente ASCII de 7 bits, embora possa ser alterada para a sua instalação "
"do Python chamando a função ``sys.setdefaultencoding(encoding)`` numa versão "
"personalizada de :file:`site.py`."

#: ../../whatsnew/2.0.rst:172
msgid ""
"Combining 8-bit and Unicode strings always coerces to Unicode, using the "
"default ASCII encoding; the result of ``'a' + u'bc'`` is ``u'abc'``."
msgstr ""
"A combinação de *strings* de 8 bits e Unicode converte sempre para Unicode, "
"utilizando a codificação ASCII predefinida; o resultado de ``'a' + u'bc'`` é "
"``u'abc'``."

#: ../../whatsnew/2.0.rst:175
msgid ""
"New built-in functions have been added, and existing built-ins modified to "
"support Unicode:"
msgstr ""
"Foram adicionadas novas funções integradas, e as funções integradas "
"existentes foram modificadas para suportar Unicode:"

#: ../../whatsnew/2.0.rst:178
msgid ""
"``unichr(ch)`` returns a Unicode string 1 character long, containing the "
"character *ch*."
msgstr ""
"``unichr(ch)`` devolve uma *string* Unicode com 1 caractere, contendo o "
"caractere *ch*."

#: ../../whatsnew/2.0.rst:181
msgid ""
"``ord(u)``, where *u* is a 1-character regular or Unicode string, returns "
"the number of the character as an integer."
msgstr ""
"``ord(u)``, onde *u* é uma *string* normal ou Unicode com 1 caractere, "
"devolve o número do caractere como um inteiro."

#: ../../whatsnew/2.0.rst:184
msgid ""
"``unicode(string [, encoding]  [, errors] )`` creates a Unicode string from "
"an 8-bit string.  ``encoding`` is a string naming the encoding to use. The "
"``errors`` parameter specifies the treatment of characters that are invalid "
"for the current encoding; passing ``'strict'`` as the value causes an "
"exception to be raised on any encoding error, while ``'ignore'`` causes "
"errors to be silently ignored and ``'replace'`` uses U+FFFD, the official "
"replacement character, in case of any problems."
msgstr ""
"``unicode(string [, encoding] [, errors])`` cria uma *string* Unicode a "
"partir de uma *string* de 8 bits. ``encoding`` é uma *string* que indica a "
"codificação a utilizar. O parâmetro ``errors`` especifica o tratamento de "
"caracteres que são inválidos para a codificação atual; passar ``'strict'`` "
"como valor faz com que seja levantada uma exceção em caso de erro de "
"codificação, enquanto ``'ignore'`` faz com que os erros sejam "
"silenciosamente ignorados e ``'replace'`` utiliza U+FFFD, o caractere de "
"substituição oficial, em caso de quaisquer problemas."

#: ../../whatsnew/2.0.rst:192
msgid ""
"The ``exec`` statement, and various built-ins such as ``eval()``, "
"``getattr()``, and ``setattr()`` will also accept Unicode strings as well as "
"regular strings.  (It's possible that the process of fixing this missed some "
"built-ins; if you find a built-in function that accepts strings but doesn't "
"accept Unicode strings at all, please report it as a bug.)"
msgstr ""
"A instrução ``exec`` e várias funções integradas, como ``eval()``, "
"``getattr()`` e ``setattr()``, também aceitam *strings* Unicode, além de "
"*strings* normais. (É possível que o processo de correção tenha falhado em "
"algumas funções integradas; se encontrar uma função integrada que aceita "
"*strings* mas não aceita *strings* Unicode, por favor, reporte-a como um "
"problema.)"

#: ../../whatsnew/2.0.rst:198
msgid ""
"A new module, :mod:`unicodedata`, provides an interface to Unicode character "
"properties.  For example, ``unicodedata.category(u'A')`` returns the 2-"
"character string 'Lu', the 'L' denoting it's a letter, and 'u' meaning that "
"it's uppercase. ``unicodedata.bidirectional(u'\\u0660')`` returns 'AN', "
"meaning that U+0660 is an Arabic number."
msgstr ""
"Um novo módulo, :mod:`unicodedata`, fornece uma interface para as "
"propriedades dos caracteres Unicode. Por exemplo, ``unicodedata."
"category(u'A')`` devolve a *string* de 2 caracteres 'Lu', onde 'L' indica "
"que é uma letra e 'u' que está em maiúsculas. ``unicodedata."
"bidirectional(u'\\u0660')`` devolve 'AN', o que significa que U+0660 é um "
"número árabe."

#: ../../whatsnew/2.0.rst:204
msgid ""
"The :mod:`codecs` module contains functions to look up existing encodings "
"and register new ones.  Unless you want to implement a new encoding, you'll "
"most often use the ``codecs.lookup(encoding)`` function, which returns a 4-"
"element tuple: ``(encode_func, decode_func, stream_reader, stream_writer)``."
msgstr ""
"O módulo :mod:`codecs` contém funções para procurar codificações existentes "
"e registar novas. A menos que pretenda implementar uma nova codificação, "
"utilizará mais frequentemente a função ``codecs.lookup(encoding)``, que "
"devolve um tuplo de 4 elementos: ``(encode_func, decode_func, stream_reader, "
"stream_writer)``."

#: ../../whatsnew/2.0.rst:209
msgid ""
"*encode_func* is a function that takes a Unicode string, and returns a 2-"
"tuple ``(string, length)``.  *string* is an 8-bit string containing a "
"portion (perhaps all) of the Unicode string converted into the given "
"encoding, and *length* tells you how much of the Unicode string was "
"converted."
msgstr ""
"*encode_func* é uma função que recebe uma *string* Unicode e devolve um "
"tuplo de 2 elementos ``(string, length)``. *string* é uma *string* de 8 bits "
"que contém uma porção (possivelmente toda) da *string* Unicode convertida "
"para a codificação dada, e *length* indica quanto da *string* Unicode foi "
"convertida."

#: ../../whatsnew/2.0.rst:214
msgid ""
"*decode_func* is the opposite of *encode_func*, taking an 8-bit string and "
"returning a 2-tuple ``(ustring, length)``, consisting of the resulting "
"Unicode string *ustring* and the integer *length* telling how much of the 8-"
"bit string was consumed."
msgstr ""
"*decode_func* é o oposto de *encode_func*, recebendo uma *string* de 8 bits "
"e devolvendo um tuplo de 2 elementos ``(ustring, length)``, composto pela "
"*string* Unicode resultante *ustring* e pelo inteiro *length*, que indica "
"quanto da *string* de 8 bits foi consumida."

#: ../../whatsnew/2.0.rst:219
msgid ""
"*stream_reader* is a class that supports decoding input from a stream. "
"*stream_reader(file_obj)* returns an object that supports the :meth:`read`, :"
"meth:`readline`, and :meth:`readlines` methods.  These methods will all "
"translate from the given encoding and return Unicode strings."
msgstr ""

#: ../../whatsnew/2.0.rst:224
msgid ""
"*stream_writer*, similarly, is a class that supports encoding output to a "
"stream.  *stream_writer(file_obj)* returns an object that supports the :meth:"
"`write` and :meth:`writelines` methods.  These methods expect Unicode "
"strings, translating them to the given encoding on output."
msgstr ""

#: ../../whatsnew/2.0.rst:229
msgid ""
"For example, the following code writes a Unicode string into a file,  "
"encoding it as UTF-8::"
msgstr ""
"Por exemplo, o seguinte código escreve uma *string* Unicode num ficheiro, "
"codificando-a como UTF-8::"

#: ../../whatsnew/2.0.rst:243
msgid "The following code would then read UTF-8 input from the file::"
msgstr "O seguinte código leria então entrada UTF-8 do ficheiro::"

#: ../../whatsnew/2.0.rst:249
msgid ""
"Unicode-aware regular expressions are available through the :mod:`re` "
"module, which has a new underlying implementation called SRE written by "
"Fredrik Lundh of Secret Labs AB."
msgstr ""
"Expressões regulares com suporte a Unicode estão disponíveis através do "
"módulo :mod:`re`, que tem uma nova implementação subjacente chamada SRE, "
"escrita por Fredrik Lundh da Secret Labs AB."

#: ../../whatsnew/2.0.rst:253
msgid ""
"A ``-U`` command line option was added which causes the Python compiler to "
"interpret all string literals as Unicode string literals. This is intended "
"to be used in testing and future-proofing your Python code, since some "
"future version of Python may drop support for 8-bit strings and provide only "
"Unicode strings."
msgstr ""
"Foi adicionada uma opção de linha de comandos ``-U`` que faz com que o "
"compilador do Python interprete todos os literais de *string* como literais "
"de *string* Unicode. Isto destina-se a ser utilizado em testes e para "
"futurizar o seu código Python, uma vez que alguma versão futura do Python "
"poderá abandonar o suporte para *strings* de 8 bits e fornecer apenas "
"*strings* Unicode."

#: ../../whatsnew/2.0.rst:262
msgid "List Comprehensions"
msgstr "Compreensões de lista"

#: ../../whatsnew/2.0.rst:264
msgid ""
"Lists are a workhorse data type in Python, and many programs manipulate a "
"list at some point.  Two common operations on lists are to loop over them, "
"and either pick out the elements that meet a certain criterion, or apply "
"some function to each element.  For example, given a list of strings, you "
"might want to pull out all the strings containing a given substring, or "
"strip off trailing whitespace from each line."
msgstr ""
"As listas são um tipo de dados fundamental em Python, e muitos programas "
"manipulam uma lista em algum momento. Duas operações comuns em listas são "
"percorrê-las e, ou selecionar os elementos que cumprem um determinado "
"critério, ou aplicar alguma função a cada elemento. Por exemplo, dada uma "
"lista de *strings*, pode querer extrair todas as *strings* que contêm uma "
"determinada sub-*string*, ou remover espaços em branco no final de cada "
"linha."

#: ../../whatsnew/2.0.rst:271
msgid ""
"The existing :func:`map` and :func:`filter` functions can be used for this "
"purpose, but they require a function as one of their arguments.  This is "
"fine if there's an existing built-in function that can be passed directly, "
"but if there isn't, you have to create a little function to do the required "
"work, and Python's scoping rules make the result ugly if the little function "
"needs additional information.  Take the first example in the previous "
"paragraph, finding all the strings in the list containing a given "
"substring.  You could write the following to do it::"
msgstr ""
"As funções existentes :func:`map` e :func:`filter` podem ser usadas para "
"este propósito, mas exigem uma função como um dos seus argumentos. Isto é "
"aceitável se existir uma função integrada que possa ser passada diretamente, "
"mas se não existir, tem de criar uma pequena função para fazer o trabalho "
"necessário, e as regras de âmbito do Python tornam o resultado pouco "
"elegante se a pequena função necessitar de informação adicional. Tome o "
"primeiro exemplo do parágrafo anterior, encontrar todas as *strings* na "
"lista que contenham uma determinada sub-*string*. Poderia escrever o "
"seguinte para o fazer::"

#: ../../whatsnew/2.0.rst:286
msgid ""
"Because of Python's scoping rules, a default argument is used so that the "
"anonymous function created by the :keyword:`lambda` expression knows what "
"substring is being searched for.  List comprehensions make this cleaner::"
msgstr ""
"Devido às regras de âmbito do Python, um argumento predefinido é usado para "
"que a função anónima criada pela expressão :keyword:`lambda` saiba qual a "
"sub-*string* que está a ser procurada. As compreensões de lista tornam isto "
"mais limpo::"

#: ../../whatsnew/2.0.rst:292
msgid "List comprehensions have the form::"
msgstr "As compreensões de lista têm a seguinte forma::"

#: ../../whatsnew/2.0.rst:299
msgid ""
"The :keyword:`!for`...\\ :keyword:`!in` clauses contain the sequences to be "
"iterated over.  The sequences do not have to be the same length, because "
"they are *not* iterated over in parallel, but from left to right; this is "
"explained more clearly in the following paragraphs.  The elements of the "
"generated list will be the successive values of *expression*.  The final :"
"keyword:`!if` clause is optional; if present, *expression* is only evaluated "
"and added to the result if *condition* is true."
msgstr ""
"As cláusulas :keyword:`!for`...\\ :keyword:`!in` contêm as sequências a "
"serem percorridas. As sequências não têm de ter o mesmo comprimento, porque "
"não são percorridas em paralelo, mas da esquerda para a direita; isto é "
"explicado de forma mais clara nos parágrafos seguintes. Os elementos da "
"lista gerada serão os valores sucessivos de *expressão*. A cláusula final :"
"keyword:`!if` é opcional; se presente, *expressão* é apenas avaliada e "
"adicionada ao resultado se *condição* for verdadeira."

#: ../../whatsnew/2.0.rst:307
msgid ""
"To make the semantics very clear, a list comprehension is equivalent to the "
"following Python code::"
msgstr ""
"Para tornar a semântica muito clara, uma compreensão de lista é equivalente "
"ao seguinte código Python::"

#: ../../whatsnew/2.0.rst:319
msgid ""
"This means that when there are multiple :keyword:`!for`...\\ :keyword:`!in` "
"clauses, the resulting list will be equal to the product of the lengths of "
"all the sequences.  If you have two lists of length 3, the output list is 9 "
"elements long::"
msgstr ""
"Isto significa que quando existem múltiplas cláusulas :keyword:`!for`...\\ :"
"keyword:`!in`, a lista resultante terá um comprimento igual ao produto dos "
"comprimentos de todas as sequências. Se tiver duas listas com comprimento 3, "
"a lista de saída terá 9 elementos::"

#: ../../whatsnew/2.0.rst:330
msgid ""
"To avoid introducing an ambiguity into Python's grammar, if *expression* is "
"creating a tuple, it must be surrounded with parentheses.  The first list "
"comprehension below is a syntax error, while the second one is correct::"
msgstr ""
"Para evitar introduzir ambiguidade na gramática do Python, se *expressão* "
"estiver a criar uma tupla, ela deve ser colocada entre parênteses. A "
"primeira compreensão de lista abaixo é um erro de sintaxe, enquanto a "
"segunda está correta:"

#: ../../whatsnew/2.0.rst:339
msgid ""
"The idea of list comprehensions originally comes from the functional "
"programming language Haskell (https://www.haskell.org).  Greg Ewing argued "
"most effectively for adding them to Python and wrote the initial list "
"comprehension patch, which was then discussed for a seemingly endless time "
"on the python-dev mailing list and kept up-to-date by Skip Montanaro."
msgstr ""
"A ideia das compreensões de lista provém originalmente da linguagem de "
"programação funcional Haskell (https://www.haskell.org). Greg Ewing defendeu "
"de forma mais eficaz a sua adição ao Python e escreveu a primeira correção "
"de compreensão de lista, que foi depois discutida durante um tempo "
"aparentemente infinitivo na lista de discussão python-dev e mantida "
"atualizada por Skip Montanaro."

#: ../../whatsnew/2.0.rst:349
msgid "Augmented Assignment"
msgstr "Atribuição Aumentada"

#: ../../whatsnew/2.0.rst:351
msgid ""
"Augmented assignment operators, another long-requested feature, have been "
"added to Python 2.0.  Augmented assignment operators include ``+=``, ``-=``, "
"``*=``, and so forth.  For example, the statement ``a += 2`` increments the "
"value of the variable  ``a`` by 2, equivalent to the slightly lengthier ``a "
"= a + 2``."
msgstr ""
"Os operadores de atribuição aumentada, uma funcionalidade há muito pedida, "
"foram adicionados ao Python 2.0. Estes operadores incluem ``+=``, ``-=``, "
"``*=``, entre outros. Por exemplo, a instrução ``a += 2`` incrementa o valor "
"da variável ``a`` em 2, equivalente à forma ligeiramente mais longa ``a = a "
"+ 2``."

#: ../../whatsnew/2.0.rst:356
msgid ""
"The full list of supported assignment operators is ``+=``, ``-=``, ``*=``, "
"``/=``, ``%=``, ``**=``, ``&=``, ``|=``, ``^=``, ``>>=``, and ``<<=``.  "
"Python classes can override the augmented assignment operators by defining "
"methods named :meth:`__iadd__`, :meth:`__isub__`, etc.  For example, the "
"following :class:`Number` class stores a number and supports using += to "
"create a new instance with an incremented value."
msgstr ""

#: ../../whatsnew/2.0.rst:377
msgid ""
"The :meth:`__iadd__` special method is called with the value of the "
"increment, and should return a new instance with an appropriately modified "
"value; this return value is bound as the new value of the variable on the "
"left-hand side."
msgstr ""

#: ../../whatsnew/2.0.rst:381
msgid ""
"Augmented assignment operators were first introduced in the C programming "
"language, and most C-derived languages, such as :program:`awk`, C++, Java, "
"Perl, and PHP also support them.  The augmented assignment patch was "
"implemented by Thomas Wouters."
msgstr ""
"Os operadores de atribuição aumentada foram introduzidos pela primeira vez "
"na linguagem de programação C, e a maioria das linguagens derivadas de C, "
"como :program:`awk`, C++, Java, Perl e PHP, também os suportam. A correção "
"de atribuição aumentada foi implementada por Thomas Wouters."

#: ../../whatsnew/2.0.rst:390
msgid "String Methods"
msgstr "Métodos de *string*"

#: ../../whatsnew/2.0.rst:392
msgid ""
"Until now string-manipulation functionality was in the :mod:`string` module, "
"which was usually a front-end for the :mod:`strop` module written in C.  The "
"addition of Unicode posed a difficulty for the :mod:`strop` module, because "
"the functions would all need to be rewritten in order to accept either 8-bit "
"or Unicode strings.  For functions such as :func:`string.replace`, which "
"takes 3 string arguments, that means eight possible permutations, and "
"correspondingly complicated code."
msgstr ""

#: ../../whatsnew/2.0.rst:400
msgid ""
"Instead, Python 2.0 pushes the problem onto the string type, making string "
"manipulation functionality available through methods on both 8-bit strings "
"and Unicode strings.   ::"
msgstr ""
"Em vez disso, o Python 2.0 transfere o problema para o tipo *string*, "
"disponibilizando a funcionalidade de manipulação de *strings* através de "
"métodos, tanto para *strings* de 8 bits como para *strings* Unicode. ::"

#: ../../whatsnew/2.0.rst:411
msgid ""
"One thing that hasn't changed, a noteworthy April Fools' joke "
"notwithstanding, is that Python strings are immutable. Thus, the string "
"methods return new strings, and do not modify the string on which they "
"operate."
msgstr ""
"Uma coisa que não mudou, apesar de uma notável brincadeira do Dia da "
"Mentira, é que as *strings* do Python são imutáveis. Assim, os métodos de "
"*string* devolvem novas *strings* e não modificam a *string* sobre a qual "
"operam."

#: ../../whatsnew/2.0.rst:415
msgid ""
"The old :mod:`string` module is still around for backwards compatibility, "
"but it mostly acts as a front-end to the new string methods."
msgstr ""
"O antigo módulo :mod:`string` ainda existe para compatibilidade retroativa, "
"mas atua maioritariamente como uma interface para os novos métodos de "
"*string*."

#: ../../whatsnew/2.0.rst:418
msgid ""
"Two methods which have no parallel in pre-2.0 versions, although they did "
"exist in JPython for quite some time, are :meth:`startswith` and :meth:"
"`endswith`. ``s.startswith(t)`` is equivalent to ``s[:len(t)] == t``, while "
"``s.endswith(t)`` is equivalent to ``s[-len(t):] == t``."
msgstr ""

#: ../../whatsnew/2.0.rst:423
msgid ""
"One other method which deserves special mention is :meth:`join`.  The :meth:"
"`join` method of a string receives one parameter, a sequence of strings, and "
"is equivalent to the :func:`string.join` function from the old :mod:`string` "
"module, with the arguments reversed. In other words, ``s.join(seq)`` is "
"equivalent to the old ``string.join(seq, s)``."
msgstr ""

#: ../../whatsnew/2.0.rst:433
msgid "Garbage Collection of Cycles"
msgstr "Recolha de Lixo de Ciclos"

#: ../../whatsnew/2.0.rst:435
msgid ""
"The C implementation of Python uses reference counting to implement garbage "
"collection.  Every Python object maintains a count of the number of "
"references pointing to itself, and adjusts the count as references are "
"created or destroyed.  Once the reference count reaches zero, the object is "
"no longer accessible, since you need to have a reference to an object to "
"access it, and if the count is zero, no references exist any longer."
msgstr ""
"A implementação em C do Python utiliza contagem de referências para "
"implementar a recolha de lixo. Cada objeto Python mantém uma contagem do "
"número de referências que apontam para si, e ajusta essa contagem à medida "
"que as referências são criadas ou destruídas. Assim que a contagem de "
"referências atinge zero, o objeto deixa de ser acessível, uma vez que é "
"necessária uma referência a um objeto para o acessar, e se a contagem for "
"zero, já não existem referências."

#: ../../whatsnew/2.0.rst:442
msgid ""
"Reference counting has some pleasant properties: it's easy to understand and "
"implement, and the resulting implementation is portable, fairly fast, and "
"reacts well with other libraries that implement their own memory handling "
"schemes.  The major problem with reference counting is that it sometimes "
"doesn't realise that objects are no longer accessible, resulting in a memory "
"leak.  This happens when there are cycles of references."
msgstr ""
"A contagem de referências tem algumas propriedades agradáveis: é fácil de "
"compreender e implementar, e a implementação resultante é portátil, "
"razoavelmente rápida e funciona bem com outras bibliotecas que implementam "
"os seus próprios esquemas de gestão de memória. O principal problema com a "
"contagem de referências é que, por vezes, não deteta que os objetos já não "
"são acessíveis, resultando numa fuga de memória. Isto acontece quando "
"existem ciclos de referências."

#: ../../whatsnew/2.0.rst:449
msgid ""
"Consider the simplest possible cycle,  a class instance which has a "
"reference to itself::"
msgstr ""
"Considere o ciclo mais simples possível, uma instância de classe que tem uma "
"referência a si própria::"

#: ../../whatsnew/2.0.rst:455
msgid ""
"After the above two lines of code have been executed, the reference count of "
"``instance`` is 2; one reference is from the variable named ``'instance'``, "
"and the other is from the ``myself`` attribute of the instance."
msgstr ""
"Após a execução das duas linhas de código acima, a contagem de referências "
"de ``instance`` é 2; uma referência provém da variável chamada "
"``'instance'``, e a outra provém do atributo ``myself`` da instância."

#: ../../whatsnew/2.0.rst:459
msgid ""
"If the next line of code is ``del instance``, what happens?  The reference "
"count of ``instance`` is decreased by 1, so it has a reference count of 1; "
"the reference in the ``myself`` attribute still exists.  Yet the instance is "
"no longer accessible through Python code, and it could be deleted.  Several "
"objects can participate in a cycle if they have references to each other, "
"causing all of the objects to be leaked."
msgstr ""
"Se a próxima linha de código for ``del instance``, o que acontece? A "
"contagem de referências de ``instance`` é diminuída em 1, pelo que passa a "
"ter uma contagem de referências de 1; a referência no atributo ``myself`` "
"ainda existe. No entanto, a instância já não é acessível através de código "
"Python, e poderia ser eliminada. Vários objetos podem participar num ciclo "
"se tiverem referências uns aos outros, causando a fuga de memória de todos "
"os objetos."

#: ../../whatsnew/2.0.rst:466
msgid ""
"Python 2.0 fixes this problem by periodically executing a cycle detection "
"algorithm which looks for inaccessible cycles and deletes the objects "
"involved. A new :mod:`gc` module provides functions to perform a garbage "
"collection, obtain debugging statistics, and tuning the collector's "
"parameters."
msgstr ""
"O Python 2.0 resolve este problema executando periodicamente um algoritmo de "
"detecção de ciclos que procura ciclos inacessíveis e elimina os objetos "
"envolvidos. Um novo módulo :mod:`gc` fornece funções para realizar a recolha "
"de lixo, obter estatísticas de depuração e ajustar os parâmetros do "
"recolhedor."

#: ../../whatsnew/2.0.rst:471
msgid ""
"Running the cycle detection algorithm takes some time, and therefore will "
"result in some additional overhead.  It is hoped that after we've gotten "
"experience with the cycle collection from using 2.0, Python 2.1 will be able "
"to minimize the overhead with careful tuning.  It's not yet obvious how much "
"performance is lost, because benchmarking this is tricky and depends "
"crucially on how often the program creates and destroys objects.  The "
"detection of cycles can be disabled when Python is compiled, if you can't "
"afford even a tiny speed penalty or suspect that the cycle collection is "
"buggy, by specifying the :option:`!--without-cycle-gc` switch when running "
"the :program:`configure` script."
msgstr ""
"A execução do algoritmo de detecção de ciclos demora algum tempo, e por isso "
"resultará em algum *overhead* adicional. Espera-se que, após termos "
"adquirido experiência com a recolha de ciclos ao usar o 2.0, o Python 2.1 "
"consiga minimizar o *overhead* com um ajuste cuidadoso. Ainda não é óbvio "
"quanto desempenho é perdido, porque a medição de desempenho (*benchmarking*) "
"disto é complicada e depende crucialmente da frequência com que o programa "
"cria e destrói objetos. A detecção de ciclos pode ser desativada quando o "
"Python é compilado, se não puder suportar mesmo uma pequena penalização de "
"velocidade ou suspeitar que a recolha de ciclos tem problemas, especificando "
"a opção :option:`!--without-cycle-gc` ao executar o script :program:"
"`configure`."

#: ../../whatsnew/2.0.rst:482
msgid ""
"Several people tackled this problem and contributed to a solution.  An early "
"implementation of the cycle detection approach was written by Toby Kelsey.  "
"The current algorithm was suggested by Eric Tiedemann during a visit to "
"CNRI, and Guido van Rossum and Neil Schemenauer wrote two different "
"implementations, which were later integrated by Neil.  Lots of other people "
"offered suggestions along the way; the March 2000 archives of the python-dev "
"mailing list contain most of the relevant discussion, especially in the "
"threads titled \"Reference cycle collection for Python\" and \"Finalization "
"again\"."
msgstr ""
"Várias pessoas abordaram este problema e contribuíram para uma solução. Uma "
"implementação inicial da abordagem de detecção de ciclos foi escrita por "
"Toby Kelsey. O algoritmo atual foi sugerido por Eric Tiedemann durante uma "
"visita à CNRI, e Guido van Rossum e Neil Schemenauer escreveram duas "
"implementações diferentes, que foram posteriormente integradas por Neil. "
"Muitas outras pessoas ofereceram sugestões ao longo do caminho; os arquivos "
"de março de 2000 da lista de discussão python-dev contêm a maior parte da "
"discussão relevante, especialmente nos tópicos intitulados \"Reference cycle "
"collection for Python\" e \"Finalization again\"."

#: ../../whatsnew/2.0.rst:495
msgid "Other Core Changes"
msgstr "Outras Alterações ao Núcleo"

#: ../../whatsnew/2.0.rst:497
msgid ""
"Various minor changes have been made to Python's syntax and built-in "
"functions. None of the changes are very far-reaching, but they're handy "
"conveniences."
msgstr ""
"Foram feitas várias alterações menores à sintaxe do Python e às funções "
"integradas. Nenhuma das alterações é muito abrangente, mas são conveniências "
"úteis."

#: ../../whatsnew/2.0.rst:502
msgid "Minor Language Changes"
msgstr "Pequenas Alterações à Linguagem"

#: ../../whatsnew/2.0.rst:504
msgid ""
"A new syntax makes it more convenient to call a given function with a tuple "
"of arguments and/or a dictionary of keyword arguments. In Python 1.5 and "
"earlier, you'd use the :func:`apply` built-in function: ``apply(f, args, "
"kw)`` calls the function :func:`f` with the argument tuple *args* and the "
"keyword arguments in the dictionary *kw*.  :func:`apply`  is the same in "
"2.0, but thanks to a patch from Greg Ewing, ``f(*args, **kw)`` is a shorter "
"and clearer way to achieve the same effect.  This syntax is symmetrical with "
"the syntax for defining functions::"
msgstr ""

#: ../../whatsnew/2.0.rst:518
msgid ""
"The ``print`` statement can now have its output directed to a file-like "
"object by following the ``print`` with  ``>> file``, similar to the "
"redirection operator in Unix shells. Previously you'd either have to use "
"the :meth:`write` method of the file-like object, which lacks the "
"convenience and simplicity of ``print``, or you could assign a new value to "
"``sys.stdout`` and then restore the old value.  For sending output to "
"standard error, it's much easier to write this::"
msgstr ""

#: ../../whatsnew/2.0.rst:528
msgid ""
"Modules can now be renamed on importing them, using the syntax ``import "
"module as name`` or ``from module import name as othername``.  The patch was "
"submitted by Thomas Wouters."
msgstr ""
"Os módulos podem agora ser renomeados ao importá-los, utilizando a sintaxe "
"``import module as name`` ou ``from module import name as othername``. A "
"correção foi submetida por Thomas Wouters."

#: ../../whatsnew/2.0.rst:532
msgid ""
"A new format style is available when using the ``%`` operator; '%r' will "
"insert the :func:`repr` of its argument.  This was also added from symmetry "
"considerations, this time for symmetry with the existing '%s' format style, "
"which inserts the :func:`str` of its argument.  For example, ``'%r %s' % "
"('abc', 'abc')`` returns a string containing ``'abc' abc``."
msgstr ""
"Um novo estilo de formatação está disponível ao usar o operador ``%``; '%r' "
"inserirá o :func:`repr` do seu argumento. Isto também foi adicionado por "
"questões de simetria, desta vez para simetria com o estilo de formatação "
"'%s' existente, que insere o :func:`str` do seu argumento. Por exemplo, "
"``'%r %s' % ('abc', 'abc')`` devolve uma *string* contendo ``'abc' abc``."

#: ../../whatsnew/2.0.rst:538
msgid ""
"Previously there was no way to implement a class that overrode Python's "
"built-in :keyword:`in` operator and implemented a custom version.  ``obj in "
"seq`` returns true if *obj* is present in the sequence *seq*; Python "
"computes this by simply trying every index of the sequence until either "
"*obj* is found or an :exc:`IndexError` is encountered.  Moshe Zadka "
"contributed a patch which adds a :meth:`__contains__` magic method for "
"providing a custom implementation for :keyword:`!in`. Additionally, new "
"built-in objects written in C can define what :keyword:`!in` means for them "
"via a new slot in the sequence protocol."
msgstr ""

#: ../../whatsnew/2.0.rst:547
msgid ""
"Earlier versions of Python used a recursive algorithm for deleting objects. "
"Deeply nested data structures could cause the interpreter to fill up the C "
"stack and crash; Christian Tismer rewrote the deletion logic to fix this "
"problem.  On a related note, comparing recursive objects recursed infinitely "
"and crashed; Jeremy Hylton rewrote the code to no longer crash, producing a "
"useful result instead.  For example, after this code::"
msgstr ""
"Versões anteriores do Python utilizavam um algoritmo recursivo para eliminar "
"objetos. Estruturas de dados profundamente aninhadas podiam fazer com que o "
"interpretador enchesse a pilha C e falhasse; Christian Tismer reescreveu a "
"lógica de eliminação para resolver este problema. Numa nota relacionada, a "
"comparação de objetos recursivos entrava em recursão infinita e falhava; "
"Jeremy Hylton reescreveu o código para que já não falhasse, produzindo um "
"resultado útil em vez disso. Por exemplo, após este código::"

#: ../../whatsnew/2.0.rst:559
msgid ""
"The comparison ``a==b`` returns true, because the two recursive data "
"structures are isomorphic. See the thread \"trashcan and PR#7\" in the April "
"2000 archives of the python-dev mailing list for the discussion leading up "
"to this implementation, and some useful relevant links.    Note that "
"comparisons can now also raise exceptions. In earlier versions of Python, a "
"comparison operation such as ``cmp(a,b)`` would always produce an answer, "
"even if a user-defined :meth:`__cmp__` method encountered an error, since "
"the resulting exception would simply be silently swallowed."
msgstr ""

#: ../../whatsnew/2.0.rst:571
msgid ""
"Work has been done on porting Python to 64-bit Windows on the Itanium "
"processor, mostly by Trent Mick of ActiveState.  (Confusingly, ``sys."
"platform`` is still ``'win32'`` on Win64 because it seems that for ease of "
"porting, MS Visual C++ treats code as 32 bit on Itanium.) PythonWin also "
"supports Windows CE; see the Python CE page at http://pythonce.sourceforge."
"net/ for more information."
msgstr ""

#: ../../whatsnew/2.0.rst:577
msgid ""
"Another new platform is Darwin/MacOS X; initial support for it is in Python "
"2.0. Dynamic loading works, if you specify \"configure --with-dyld --with-"
"suffix=.x\". Consult the README in the Python source distribution for more "
"instructions."
msgstr ""
"Outra nova plataforma é o Darwin/MacOS X; o suporte inicial para esta "
"plataforma está no Python 2.0. O carregamento dinâmico funciona, se "
"especificar \"configure --with-dyld --with-suffix=.x\". Consulte o README na "
"distribuição do código-fonte do Python para obter mais instruções."

#: ../../whatsnew/2.0.rst:581
msgid ""
"An attempt has been made to alleviate one of Python's warts, the often-"
"confusing :exc:`NameError` exception when code refers to a local variable "
"before the variable has been assigned a value.  For example, the following "
"code raises an exception on the ``print`` statement in both 1.5.2 and 2.0; "
"in 1.5.2 a :exc:`NameError` exception is raised, while 2.0 raises a new :exc:"
"`UnboundLocalError` exception. :exc:`UnboundLocalError` is a subclass of :"
"exc:`NameError`, so any existing code that expects :exc:`NameError` to be "
"raised should still work. ::"
msgstr ""
"Foi feita uma tentativa para atenuar uma das imperfeições do Python, a "
"frequentemente confusa exceção :exc:`NameError` quando o código faz "
"referência a uma variável local antes de a variável ter sido atribuída com "
"um valor. Por exemplo, o seguinte código levanta uma exceção na instrução "
"``print`` tanto no 1.5.2 como no 2.0; no 1.5.2 é levantada uma exceção :exc:"
"`NameError`, enquanto que no 2.0 é levantada uma nova exceção :exc:"
"`UnboundLocalError`. :exc:`UnboundLocalError` é uma subclasse de :exc:"
"`NameError`, pelo que qualquer código existente que espere que :exc:"
"`NameError` seja levantada ainda deve funcionar. ::"

#: ../../whatsnew/2.0.rst:595
msgid ""
"Two new exceptions, :exc:`TabError` and :exc:`IndentationError`, have been "
"introduced.  They're both subclasses of :exc:`SyntaxError`, and are raised "
"when Python code is found to be improperly indented."
msgstr ""
"Duas novas exceções, :exc:`TabError` e :exc:`IndentationError`, foram "
"introduzidas. Ambas são subclasses de :exc:`SyntaxError`, e são levantadas "
"quando o código Python é encontrado com indentação incorreta."

#: ../../whatsnew/2.0.rst:601
msgid "Changes to Built-in Functions"
msgstr "Alterações às Funções Integradas"

#: ../../whatsnew/2.0.rst:603
msgid ""
"A new built-in, ``zip(seq1, seq2, ...)``, has been added.  :func:`zip` "
"returns a list of tuples where each tuple contains the i-th element from "
"each of the argument sequences.  The difference between :func:`zip` and "
"``map(None, seq1, seq2)`` is that :func:`map` pads the sequences with "
"``None`` if the sequences aren't all of the same length, while :func:`zip` "
"truncates the returned list to the length of the shortest argument sequence."
msgstr ""
"Uma nova função integrada, ``zip(seq1, seq2, ...)``, foi adicionada. :func:"
"`zip` devolve uma lista de tuplos onde cada tuplo contém o i-ésimo elemento "
"de cada uma das sequências de argumentos. A diferença entre :func:`zip` e "
"``map(None, seq1, seq2)`` é que :func:`map` preenche as sequências com "
"``None`` se as sequências não tiverem todas o mesmo comprimento, enquanto "
"que :func:`zip` trunca a lista devolvida para o comprimento da sequência de "
"argumentos mais curta."

#: ../../whatsnew/2.0.rst:610
msgid ""
"The :func:`int` and :func:`long` functions now accept an optional \"base\" "
"parameter when the first argument is a string. ``int('123', 10)`` returns "
"123, while ``int('123', 16)`` returns 291.  ``int(123, 16)`` raises a :exc:"
"`TypeError` exception with the message \"can't convert non-string with "
"explicit base\"."
msgstr ""

#: ../../whatsnew/2.0.rst:616
msgid ""
"A new variable holding more detailed version information has been added to "
"the :mod:`sys` module.  ``sys.version_info`` is a tuple ``(major, minor, "
"micro, level, serial)`` For example, in a hypothetical 2.0.1beta1, ``sys."
"version_info`` would be ``(2, 0, 1, 'beta', 1)``. *level* is a string such "
"as ``\"alpha\"``, ``\"beta\"``, or ``\"final\"`` for a final release."
msgstr ""
"Uma nova variável que contém informações mais detalhadas sobre a versão foi "
"adicionada ao módulo :mod:`sys`. ``sys.version_info`` é um tuplo ``(major, "
"minor, micro, level, serial)``. Por exemplo, numa hipotética versão "
"2.0.1beta1, ``sys.version_info`` seria ``(2, 0, 1, 'beta', 1)``. *level* é "
"uma *string* como ``\"alpha\"``, ``\"beta\"`` ou ``\"final\"`` para uma "
"versão final."

#: ../../whatsnew/2.0.rst:622
msgid ""
"Dictionaries have an odd new method, ``setdefault(key, default)``, which "
"behaves similarly to the existing :meth:`get` method.  However, if the key "
"is missing, :meth:`setdefault` both returns the value of *default* as :meth:"
"`get` would do, and also inserts it into the dictionary as the value for "
"*key*.  Thus, the following lines of code::"
msgstr ""

#: ../../whatsnew/2.0.rst:633
msgid ""
"can be reduced to a single ``return dict.setdefault(key, [])`` statement."
msgstr ""
"podem ser reduzidas a uma única instrução ``return dict.setdefault(key, "
"[])``."

#: ../../whatsnew/2.0.rst:635
msgid ""
"The interpreter sets a maximum recursion depth in order to catch runaway "
"recursion before filling the C stack and causing a core dump or GPF.. "
"Previously this limit was fixed when you compiled Python, but in 2.0 the "
"maximum recursion depth can be read and modified using :func:`sys."
"getrecursionlimit` and :func:`sys.setrecursionlimit`. The default value is "
"1000, and a rough maximum value for a given platform can be found by running "
"a new script, :file:`Misc/find_recursionlimit.py`."
msgstr ""
"O interpretador define uma profundidade máxima de recursão para interceptar "
"recursões descontroladas antes de encher a pilha C e causar um *core dump* "
"ou GPF. Anteriormente, este limite era fixo quando compilava o Python, mas "
"no 2.0 a profundidade máxima de recursão pode ser lida e modificada "
"utilizando :func:`sys.getrecursionlimit` e :func:`sys.setrecursionlimit`. O "
"valor predefinido é 1000, e um valor máximo aproximado para uma determinada "
"plataforma pode ser encontrado executando um novo script, :file:`Misc/"
"find_recursionlimit.py`."

#: ../../whatsnew/2.0.rst:647
msgid "Porting to 2.0"
msgstr "Portabilidade para 2.0"

#: ../../whatsnew/2.0.rst:649
msgid ""
"New Python releases try hard to be compatible with previous releases, and "
"the record has been pretty good.  However, some changes are considered "
"useful enough, usually because they fix initial design decisions that turned "
"out to be actively mistaken, that breaking backward compatibility can't "
"always be avoided. This section lists the changes in Python 2.0 that may "
"cause old Python code to break."
msgstr ""
"As novas versões do Python esforçam-se por ser compatíveis com versões "
"anteriores, e o histórico tem sido bastante bom.  No entanto, algumas "
"alterações são consideradas suficientemente úteis, geralmente porque "
"corrigem decisões de *design* iniciais que se revelaram ativamente erradas, "
"pelo que quebrar a compatibilidade retroativa nem sempre pode ser evitado. "
"Esta secção lista as alterações no Python 2.0 que podem fazer com que código "
"Python antigo deixe de funcionar."

#: ../../whatsnew/2.0.rst:656
msgid ""
"The change which will probably break the most code is tightening up the "
"arguments accepted by some methods.  Some methods would take multiple "
"arguments and treat them as a tuple, particularly various list methods such "
"as :meth:`append` and :meth:`insert`. In earlier versions of Python, if "
"``L`` is a list, ``L.append( 1,2 )`` appends the tuple ``(1,2)`` to the "
"list.  In Python 2.0 this causes a :exc:`TypeError` exception to be raised, "
"with the message: 'append requires exactly 1 argument; 2 given'.  The fix is "
"to simply add an extra set of parentheses to pass both values as a tuple:  "
"``L.append( (1,2) )``."
msgstr ""

#: ../../whatsnew/2.0.rst:665
msgid ""
"The earlier versions of these methods were more forgiving because they used "
"an old function in Python's C interface to parse their arguments; 2.0 "
"modernizes them to use :func:`PyArg_ParseTuple`, the current argument "
"parsing function, which provides more helpful error messages and treats "
"multi-argument calls as errors.  If you absolutely must use 2.0 but can't "
"fix your code, you can edit :file:`Objects/listobject.c` and define the "
"preprocessor symbol ``NO_STRICT_LIST_APPEND`` to preserve the old behaviour; "
"this isn't recommended."
msgstr ""

#: ../../whatsnew/2.0.rst:673
msgid ""
"Some of the functions in the :mod:`socket` module are still forgiving in "
"this way.  For example, :func:`socket.connect( ('hostname', 25) )` is the "
"correct form, passing a tuple representing an IP address, but :func:`socket."
"connect( 'hostname', 25 )` also works. :func:`socket.connect_ex` and :func:"
"`socket.bind` are similarly easy-going.  2.0alpha1 tightened these functions "
"up, but because the documentation actually used the erroneous multiple "
"argument form, many people wrote code which would break with the stricter "
"checking.  GvR backed out the changes in the face of public reaction, so for "
"the :mod:`socket` module, the documentation was fixed and the multiple "
"argument form is simply marked as deprecated; it *will* be tightened up "
"again in a future Python version."
msgstr ""

#: ../../whatsnew/2.0.rst:684
msgid ""
"The ``\\x`` escape in string literals now takes exactly 2 hex digits.  "
"Previously it would consume all the hex digits following the 'x' and take "
"the lowest 8 bits of the result, so ``\\x123456`` was equivalent to "
"``\\x56``."
msgstr ""
"A sequência de escape ``\\x`` em literais de *string* agora aceita "
"exatamente 2 dígitos hexadecimais. Anteriormente, consumia todos os dígitos "
"hexadecimais seguintes ao 'x' e tomava os 8 bits menos significativos do "
"resultado, pelo que ``\\x123456`` era equivalente a ``\\x56``."

#: ../../whatsnew/2.0.rst:688
msgid ""
"The :exc:`AttributeError` and :exc:`NameError` exceptions have a more "
"friendly error message, whose text will be something like ``'Spam' instance "
"has no attribute 'eggs'`` or ``name 'eggs' is not defined``.  Previously the "
"error message was just the missing attribute name ``eggs``, and code written "
"to take advantage of this fact will break in 2.0."
msgstr ""
"As exceções :exc:`AttributeError` e :exc:`NameError` têm agora uma mensagem "
"de erro mais amigável, cujo texto será algo como ``'Spam' instance has no "
"attribute 'eggs'`` ou ``name 'eggs' is not defined``. Anteriormente, a "
"mensagem de erro era apenas o nome do atributo em falta ``eggs``, e o código "
"escrito para tirar partido deste facto deixará de funcionar no 2.0."

#: ../../whatsnew/2.0.rst:694
msgid ""
"Some work has been done to make integers and long integers a bit more "
"interchangeable.  In 1.5.2, large-file support was added for Solaris, to "
"allow reading files larger than 2 GiB; this made the :meth:`tell` method of "
"file objects return a long integer instead of a regular integer.  Some code "
"would subtract two file offsets and attempt to use the result to multiply a "
"sequence or slice a string, but this raised a :exc:`TypeError`.  In 2.0, "
"long integers can be used to multiply or slice a sequence, and it'll behave "
"as you'd intuitively expect it to; ``3L * 'abc'`` produces 'abcabcabc', and "
"``(0,1,2,3)[2L:4L]`` produces (2,3). Long integers can also be used in "
"various contexts where previously only integers were accepted, such as in "
"the :meth:`seek` method of file objects, and in the formats supported by the "
"``%`` operator (``%d``, ``%i``, ``%x``, etc.).  For example, ``\"%d\" % "
"2L**64`` will produce the string ``18446744073709551616``."
msgstr ""

#: ../../whatsnew/2.0.rst:708
msgid ""
"The subtlest long integer change of all is that the :func:`str` of a long "
"integer no longer has a trailing 'L' character, though :func:`repr` still "
"includes it.  The 'L' annoyed many people who wanted to print long integers "
"that looked just like regular integers, since they had to go out of their "
"way to chop off the character.  This is no longer a problem in 2.0, but code "
"which does ``str(longval)[:-1]`` and assumes the 'L' is there, will now lose "
"the final digit."
msgstr ""
"A alteração mais subtil de todas aos inteiros longos é que o :func:`str` de "
"um inteiro longo já não tem um caractere 'L' final, embora o :func:`repr` "
"ainda o inclua. O 'L' incomodava muitas pessoas que queriam imprimir "
"inteiros longos que parecessem exatamente como inteiros normais, uma vez que "
"tinham de se esforçar para remover o caractere. Isto já não é um problema no "
"2.0, mas o código que faz ``str(longval)[:-1]`` e assume que o 'L' está "
"presente, perderá agora o dígito final."

#: ../../whatsnew/2.0.rst:716
msgid ""
"Taking the :func:`repr` of a float now uses a different formatting precision "
"than :func:`str`.  :func:`repr` uses ``%.17g`` format string for C's :func:"
"`sprintf`, while :func:`str` uses ``%.12g`` as before.  The effect is that :"
"func:`repr` may occasionally show more decimal places than  :func:`str`, for "
"certain numbers.  For example, the number 8.1 can't be represented exactly "
"in binary, so ``repr(8.1)`` is ``'8.0999999999999996'``, while str(8.1) is "
"``'8.1'``."
msgstr ""

#: ../../whatsnew/2.0.rst:724
msgid ""
"The ``-X`` command-line option, which turned all standard exceptions into "
"strings instead of classes, has been removed; the standard exceptions will "
"now always be classes.  The :mod:`exceptions` module containing the standard "
"exceptions was translated from Python to a built-in C module, written by "
"Barry Warsaw and Fredrik Lundh."
msgstr ""

#: ../../whatsnew/2.0.rst:740
msgid "Extending/Embedding Changes"
msgstr "Alterações à Extensão/Incorporação"

#: ../../whatsnew/2.0.rst:742
msgid ""
"Some of the changes are under the covers, and will only be apparent to "
"people writing C extension modules or embedding a Python interpreter in a "
"larger application.  If you aren't dealing with Python's C API, you can "
"safely skip this section."
msgstr ""
"Algumas das alterações são internas e só serão aparentes para pessoas que "
"escrevem módulos de extensão em C ou incorporam um interpretador Python numa "
"aplicação maior. Se não está a lidar com a API C do Python, pode ignorar "
"esta secção em segurança."

#: ../../whatsnew/2.0.rst:747
msgid ""
"The version number of the Python C API was incremented, so C extensions "
"compiled for 1.5.2 must be recompiled in order to work with 2.0.  On "
"Windows, it's not possible for Python 2.0 to import a third party extension "
"built for Python 1.5.x due to how Windows DLLs work, so Python will raise an "
"exception and the import will fail."
msgstr ""
"O número de versão da API C do Python foi incrementado, pelo que as "
"extensões em C compiladas para 1.5.2 devem ser recompiladas para funcionar "
"com o 2.0. No Windows, não é possível para o Python 2.0 importar uma "
"extensão de terceiros compilada para Python 1.5.x devido ao funcionamento "
"das DLLs do Windows, pelo que o Python levantará uma exceção e a importação "
"falhará."

#: ../../whatsnew/2.0.rst:753
msgid ""
"Users of Jim Fulton's ExtensionClass module will be pleased to find out that "
"hooks have been added so that ExtensionClasses are now supported by :func:"
"`isinstance` and :func:`issubclass`. This means you no longer have to "
"remember to write code such as ``if type(obj) == myExtensionClass``, but can "
"use the more natural ``if isinstance(obj, myExtensionClass)``."
msgstr ""
"Os utilizadores do módulo ExtensionClass de Jim Fulton ficarão satisfeitos "
"ao saber que foram adicionados *hooks* para que as ExtensionClasses sejam "
"agora suportadas por :func:`isinstance` e :func:`issubclass`. Isto significa "
"que já não precisa de se lembrar de escrever código como ``if type(obj) == "
"myExtensionClass``, podendo usar a forma mais natural ``if isinstance(obj, "
"myExtensionClass)``."

#: ../../whatsnew/2.0.rst:759
msgid ""
"The :file:`Python/importdl.c` file, which was a mass of #ifdefs to support "
"dynamic loading on many different platforms, was cleaned up and reorganised "
"by Greg Stein.  :file:`importdl.c` is now quite small, and platform-specific "
"code has been moved into a bunch of :file:`Python/dynload_\\*.c` files.  "
"Another cleanup: there were also a number of :file:`my\\*.h` files in the "
"Include/ directory that held various portability hacks; they've been merged "
"into a single file, :file:`Include/pyport.h`."
msgstr ""
"O ficheiro :file:`Python/importdl.c`, que era um emaranhado de #ifdefs para "
"suportar carregamento dinâmico em muitas plataformas diferentes, foi limpo e "
"reorganizado por Greg Stein. :file:`importdl.c` é agora bastante pequeno, e "
"o código específico da plataforma foi movido para um conjunto de ficheiros :"
"file:`Python/dynload_\\*.c`. Outra limpeza: havia também vários ficheiros :"
"file:`my\\*.h` no diretório Include/ que continham vários *hacks* de "
"portabilidade; foram fundidos num único ficheiro, :file:`Include/pyport.h`."

#: ../../whatsnew/2.0.rst:767
msgid ""
"Vladimir Marangozov's long-awaited malloc restructuring was completed, to "
"make it easy to have the Python interpreter use a custom allocator instead "
"of C's standard :func:`malloc`.  For documentation, read the comments in :"
"file:`Include/pymem.h` and :file:`Include/objimpl.h`.  For the lengthy "
"discussions during which the interface was hammered out, see the Web "
"archives of the 'patches' and 'python-dev' lists at python.org."
msgstr ""

#: ../../whatsnew/2.0.rst:774
msgid ""
"Recent versions of the GUSI development environment for MacOS support POSIX "
"threads.  Therefore, Python's POSIX threading support now works on the "
"Macintosh.  Threading support using the user-space GNU ``pth`` library was "
"also contributed."
msgstr ""
"Versões recentes do ambiente de desenvolvimento GUSI para MacOS suportam "
"*threads* POSIX. Por isso, o suporte a *threads* POSIX do Python agora "
"funciona no Macintosh. O suporte a *threads* utilizando a biblioteca GNU "
"``pth`` de espaço de utilizador também foi contribuído."

#: ../../whatsnew/2.0.rst:779
msgid ""
"Threading support on Windows was enhanced, too.  Windows supports thread "
"locks that use kernel objects only in case of contention; in the common case "
"when there's no contention, they use simpler functions which are an order of "
"magnitude faster.  A threaded version of Python 1.5.2 on NT is twice as slow "
"as an unthreaded version; with the 2.0 changes, the difference is only 10%.  "
"These improvements were contributed by Yakov Markovitch."
msgstr ""
"O suporte a *threads* no Windows também foi melhorado. O Windows suporta "
"*locks* de *threads* que utilizam objetos do *kernel* apenas em caso de "
"conflito; no caso comum em que não há conflito, utilizam funções mais "
"simples que são uma ordem de magnitude mais rápidas. Uma versão com "
"*threads* do Python 1.5.2 no NT é duas vezes mais lenta do que uma versão "
"sem *threads*; com as alterações do 2.0, a diferença é de apenas 10%. Estas "
"melhorias foram contribuídas por Yakov Markovitch."

#: ../../whatsnew/2.0.rst:786
msgid ""
"Python 2.0's source now uses only ANSI C prototypes, so compiling Python now "
"requires an ANSI C compiler, and can no longer be done using a compiler that "
"only supports K&R C."
msgstr ""
"O código-fonte do Python 2.0 agora utiliza apenas protótipos ANSI C, pelo "
"que compilar o Python agora requer um compilador ANSI C, e já não pode ser "
"feito utilizando um compilador que só suporta K&R C."

#: ../../whatsnew/2.0.rst:790
msgid ""
"Previously the Python virtual machine used 16-bit numbers in its bytecode, "
"limiting the size of source files.  In particular, this affected the maximum "
"size of literal lists and dictionaries in Python source; occasionally people "
"who are generating Python code would run into this limit.  A patch by "
"Charles G. Waldman raises the limit from ``2**16`` to ``2**32``."
msgstr ""
"Anteriormente, a máquina virtual do Python utilizava números de 16 bits no "
"seu bytecode, limitando o tamanho dos ficheiros de origem. Em particular, "
"isto afetava o tamanho máximo de listas e dicionários literais no código-"
"fonte Python; ocasionalmente, pessoas que geravam código Python deparavam-se "
"com este limite. Uma correção de Charles G. Waldman eleva o limite de "
"``2**16`` para ``2**32``."

#: ../../whatsnew/2.0.rst:796
msgid ""
"Three new convenience functions intended for adding constants to a module's "
"dictionary at module initialization time were added: :func:"
"`PyModule_AddObject`, :func:`PyModule_AddIntConstant`, and :func:"
"`PyModule_AddStringConstant`.  Each of these functions takes a module "
"object, a null-terminated C string containing the name to be added, and a "
"third argument for the value to be assigned to the name.  This third "
"argument is, respectively, a Python object, a C long, or a C string."
msgstr ""

#: ../../whatsnew/2.0.rst:804
msgid ""
"A wrapper API was added for Unix-style signal handlers. :func:`PyOS_getsig` "
"gets a signal handler and :func:`PyOS_setsig` will set a new handler."
msgstr ""

#: ../../whatsnew/2.0.rst:811
msgid "Distutils: Making Modules Easy to Install"
msgstr "Distutils: Tornar os Módulos Fáceis de Instalar"

#: ../../whatsnew/2.0.rst:813
msgid ""
"Before Python 2.0, installing modules was a tedious affair -- there was no "
"way to figure out automatically where Python is installed, or what compiler "
"options to use for extension modules.  Software authors had to go through an "
"arduous ritual of editing Makefiles and configuration files, which only "
"really work on Unix and leave Windows and MacOS unsupported.  Python users "
"faced wildly differing installation instructions which varied between "
"different extension packages, which made administering a Python installation "
"something of  a chore."
msgstr ""
"Antes do Python 2.0, instalar módulos era uma tarefa tediosa — não havia "
"forma de descobrir automaticamente onde o Python estava instalado, ou que "
"opções de compilador usar para módulos de extensão. Os autores de *software* "
"tinham de passar por um ritual árduo de edição de *Makefiles* e ficheiros de "
"configuração, que só funcionavam realmente no Unix, deixando o Windows e o "
"MacOS sem suporte. Os utilizadores do Python enfrentavam instruções de "
"instalação muito díspares, que variavam entre diferentes pacotes de "
"extensão, o que tornava a administração de uma instalação do Python algo "
"maçador."

#: ../../whatsnew/2.0.rst:821
msgid ""
"The SIG for distribution utilities, shepherded by Greg Ward, has created the "
"Distutils, a system to make package installation much easier.  They form "
"the :mod:`distutils` package, a new part of Python's standard library. In "
"the best case, installing a Python module from source will require the same "
"steps: first you simply mean unpack the tarball or zip archive, and the run "
"\"``python setup.py install``\".  The platform will be automatically "
"detected, the compiler will be recognized, C extension modules will be "
"compiled, and the distribution installed into the proper directory.  "
"Optional command-line arguments provide more control over the installation "
"process, the distutils package offers many places to override defaults -- "
"separating the build from the install, building or installing in non-default "
"directories, and more."
msgstr ""

#: ../../whatsnew/2.0.rst:833
msgid ""
"In order to use the Distutils, you need to write a :file:`setup.py` script.  "
"For the simple case, when the software contains only .py files, a minimal :"
"file:`setup.py` can be just a few lines long::"
msgstr ""
"Para usar os Distutils, precisa de escrever um script :file:`setup.py`. Para "
"o caso simples, quando o *software* contém apenas ficheiros .py, um :file:"
"`setup.py` mínimo pode ter apenas algumas linhas::"

#: ../../whatsnew/2.0.rst:841
msgid ""
"The :file:`setup.py` file isn't much more complicated if the software "
"consists of a few packages::"
msgstr ""
"O ficheiro :file:`setup.py` não é muito mais complicado se o *software* "
"consistir em alguns pacotes::"

#: ../../whatsnew/2.0.rst:848
msgid ""
"A C extension can be the most complicated case; here's an example taken from "
"the PyXML package::"
msgstr ""
"Uma extensão em C pode ser o caso mais complicado; aqui está um exemplo "
"retirado do pacote PyXML::"

#: ../../whatsnew/2.0.rst:864
msgid ""
"The Distutils can also take care of creating source and binary "
"distributions. The \"sdist\" command, run by \"``python setup.py sdist``', "
"builds a source distribution such as :file:`foo-1.0.tar.gz`. Adding new "
"commands isn't difficult, \"bdist_rpm\" and \"bdist_wininst\" commands have "
"already been contributed to create an RPM distribution and a Windows "
"installer for the software, respectively.  Commands to create other "
"distribution formats such as Debian packages and Solaris :file:`.pkg` files "
"are in various stages of development."
msgstr ""
"Os Distutils também podem tratar da criação de distribuições de código-fonte "
"e binárias. O comando \"sdist\", executado por \"``python setup.py "
"sdist``\", constrói uma distribuição de código-fonte como :file:`foo-1.0.tar."
"gz`. Adicionar novos comandos não é difícil; os comandos \"bdist_rpm\" e "
"\"bdist_wininst\" já foram contribuídos para criar uma distribuição RPM e um "
"instalador Windows para o *software*, respetivamente. Comandos para criar "
"outros formatos de distribuição, como pacotes Debian e ficheiros :file:`."
"pkg` do Solaris, estão em vários estágios de desenvolvimento."

#: ../../whatsnew/2.0.rst:873
msgid ""
"All this is documented in a new manual, *Distributing Python Modules*, that "
"joins the basic set of Python documentation."
msgstr ""
"Tudo isto está documentado num novo manual, *Distribuir Módulos Python*, que "
"se junta ao conjunto básico de documentação do Python."

#: ../../whatsnew/2.0.rst:880
msgid "XML Modules"
msgstr "Módulos XML"

#: ../../whatsnew/2.0.rst:882
msgid ""
"Python 1.5.2 included a simple XML parser in the form of the :mod:`xmllib` "
"module, contributed by Sjoerd Mullender.  Since 1.5.2's release, two "
"different interfaces for processing XML have become common: SAX2 (version 2 "
"of the Simple API for XML) provides an event-driven interface with some "
"similarities to :mod:`xmllib`, and the DOM (Document Object Model) provides "
"a tree-based interface, transforming an XML document into a tree of nodes "
"that can be traversed and modified.  Python 2.0 includes a SAX2 interface "
"and a stripped-down DOM interface as part of the :mod:`xml` package. Here we "
"will give a brief overview of these new interfaces; consult the Python "
"documentation or the source code for complete details. The Python XML SIG is "
"also working on improved documentation."
msgstr ""

#: ../../whatsnew/2.0.rst:896
msgid "SAX2 Support"
msgstr "Suporte a SAX2"

#: ../../whatsnew/2.0.rst:898
msgid ""
"SAX defines an event-driven interface for parsing XML.  To use SAX, you must "
"write a SAX handler class.  Handler classes inherit from various classes "
"provided by SAX, and override various methods that will then be called by "
"the XML parser.  For example, the :meth:`startElement` and :meth:"
"`endElement` methods are called for every starting and end tag encountered "
"by the parser, the :meth:`characters` method is called for every chunk of "
"character data, and so forth."
msgstr ""

#: ../../whatsnew/2.0.rst:906
msgid ""
"The advantage of the event-driven approach is that the whole document "
"doesn't have to be resident in memory at any one time, which matters if you "
"are processing really huge documents.  However, writing the SAX handler "
"class can get very complicated if you're trying to modify the document "
"structure in some elaborate way."
msgstr ""
"A vantagem da abordagem orientada a eventos é que o documento inteiro não "
"precisa de estar residente na memória em nenhum momento, o que é relevante "
"se estiver a processar documentos muito grandes. No entanto, escrever a "
"classe manipuladora SAX pode tornar-se muito complicado se estiver a tentar "
"modificar a estrutura do documento de alguma forma elaborada."

#: ../../whatsnew/2.0.rst:912
msgid ""
"For example, this little example program defines a handler that prints a "
"message for every starting and ending tag, and then parses the file :file:"
"`hamlet.xml` using it::"
msgstr ""
"Por exemplo, este pequeno programa de exemplo define um manipulador que "
"imprime uma mensagem para cada etiqueta de início e fim, e depois analisa o "
"ficheiro :file:`hamlet.xml` utilizando-o::"

#: ../../whatsnew/2.0.rst:935
msgid ""
"For more information, consult the Python documentation, or the XML HOWTO at "
"http://pyxml.sourceforge.net/topics/howto/xml-howto.html."
msgstr ""

#: ../../whatsnew/2.0.rst:940
msgid "DOM Support"
msgstr "Suporte a DOM"

#: ../../whatsnew/2.0.rst:942
msgid ""
"The Document Object Model is a tree-based representation for an XML "
"document.  A top-level :class:`Document` instance is the root of the tree, "
"and has a single child which is the top-level :class:`Element` instance. "
"This :class:`Element` has children nodes representing character data and any "
"sub-elements, which may have further children of their own, and so forth.  "
"Using the DOM you can traverse the resulting tree any way you like, access "
"element and attribute values, insert and delete nodes, and convert the tree "
"back into XML."
msgstr ""

#: ../../whatsnew/2.0.rst:950
msgid ""
"The DOM is useful for modifying XML documents, because you can create a DOM "
"tree, modify it by adding new nodes or rearranging subtrees, and then "
"produce a new XML document as output.  You can also construct a DOM tree "
"manually and convert it to XML, which can be a more flexible way of "
"producing XML output than simply writing ``<tag1>``...\\ ``</tag1>`` to a "
"file."
msgstr ""
"O DOM é útil para modificar documentos XML, porque pode criar uma árvore "
"DOM, modificá-la adicionando novos nós ou reorganizando subárvores, e depois "
"produzir um novo documento XML como saída. Também pode construir uma árvore "
"DOM manualmente e convertê-la para XML, o que pode ser uma forma mais "
"flexível de produzir saída XML do que simplesmente escrever ``<tag1>``...\\ "
"``</tag1>`` para um ficheiro."

#: ../../whatsnew/2.0.rst:956
msgid ""
"The DOM implementation included with Python lives in the :mod:`xml.dom."
"minidom` module.  It's a lightweight implementation of the Level 1 DOM with "
"support for XML namespaces.  The  :func:`parse` and :func:`parseString` "
"convenience functions are provided for generating a DOM tree::"
msgstr ""

#: ../../whatsnew/2.0.rst:964
msgid ""
"``doc`` is a :class:`Document` instance.  :class:`Document`, like all the "
"other DOM classes such as :class:`Element` and :class:`Text`, is a subclass "
"of the :class:`Node` base class.  All the nodes in a DOM tree therefore "
"support certain common methods, such as :meth:`toxml` which returns a string "
"containing the XML representation of the node and its children.  Each class "
"also has special methods of its own; for example, :class:`Element` and :"
"class:`Document` instances have a method to find all child elements with a "
"given tag name. Continuing from the previous 2-line example::"
msgstr ""

#: ../../whatsnew/2.0.rst:977
msgid "For the *Hamlet* XML file, the above few lines output::"
msgstr "Para o ficheiro XML *Hamlet*, as linhas acima produzem::"

#: ../../whatsnew/2.0.rst:982
msgid ""
"The root element of the document is available as ``doc.documentElement``, "
"and its children can be easily modified by deleting, adding, or removing "
"nodes::"
msgstr ""
"O elemento raiz do documento está disponível como ``doc.documentElement``, e "
"os seus filhos podem ser facilmente modificados eliminando, adicionando ou "
"removendo nós::"

#: ../../whatsnew/2.0.rst:997
msgid ""
"Again, I will refer you to the Python documentation for a complete listing "
"of the different :class:`Node` classes and their various methods."
msgstr ""

#: ../../whatsnew/2.0.rst:1002
msgid "Relationship to PyXML"
msgstr "Relação com o PyXML"

#: ../../whatsnew/2.0.rst:1004
msgid ""
"The XML Special Interest Group has been working on XML-related Python code "
"for a while.  Its code distribution, called PyXML, is available from the "
"SIG's Web pages at https://www.python.org/community/sigs/current/xml-sig. "
"The PyXML distribution also used the package name ``xml``.  If you've "
"written programs that used PyXML, you're probably wondering about its "
"compatibility with the 2.0 :mod:`xml` package."
msgstr ""

#: ../../whatsnew/2.0.rst:1010
msgid ""
"The answer is that Python 2.0's :mod:`xml` package isn't compatible with "
"PyXML, but can be made compatible by installing a recent version PyXML.  "
"Many applications can get by with the XML support that is included with "
"Python 2.0, but more complicated applications will require that the full "
"PyXML package will be installed.  When installed, PyXML versions 0.6.0 or "
"greater will replace the :mod:`xml` package shipped with Python, and will be "
"a strict superset of the standard package, adding a bunch of additional "
"features.  Some of the additional features in PyXML include:"
msgstr ""
"A resposta é que o pacote :mod:`xml` do Python 2.0 não é compatível com o "
"PyXML, mas pode ser tornado compatível instalando uma versão recente do "
"PyXML. Muitas aplicações podem funcionar com o suporte XML incluído no "
"Python 2.0, mas aplicações mais complexas exigirão que o pacote completo "
"PyXML seja instalado. Quando instalado, as versões 0.6.0 ou superiores do "
"PyXML substituirão o pacote :mod:`xml` distribuído com o Python, e serão um "
"superconjunto estrito do pacote padrão, adicionando um conjunto de "
"funcionalidades extra. Algumas das funcionalidades adicionais do PyXML "
"incluem:"

#: ../../whatsnew/2.0.rst:1019
msgid "4DOM, a full DOM implementation from FourThought, Inc."
msgstr "4DOM, uma implementação completa do DOM da FourThought, Inc."

#: ../../whatsnew/2.0.rst:1021
msgid "The xmlproc validating parser, written by Lars Marius Garshol."
msgstr "O analisador de validação xmlproc, escrito por Lars Marius Garshol."

#: ../../whatsnew/2.0.rst:1023
msgid "The :mod:`sgmlop` parser accelerator module, written by Fredrik Lundh."
msgstr ""

#: ../../whatsnew/2.0.rst:1029
msgid "Module changes"
msgstr "Alterações aos Módulos"

#: ../../whatsnew/2.0.rst:1031
msgid ""
"Lots of improvements and bugfixes were made to Python's extensive standard "
"library; some of the affected modules include :mod:`readline`, :mod:"
"`ConfigParser`, :mod:`cgi`, :mod:`calendar`, :mod:`posix`, :mod:`readline`, :"
"mod:`xmllib`, :mod:`aifc`, :mod:`chunk, wave`, :mod:`random`, :mod:`shelve`, "
"and :mod:`nntplib`.  Consult the CVS logs for the exact patch-by-patch "
"details."
msgstr ""

#: ../../whatsnew/2.0.rst:1037
msgid ""
"Brian Gallew contributed OpenSSL support for the :mod:`socket` module.  "
"OpenSSL is an implementation of the Secure Socket Layer, which encrypts the "
"data being sent over a socket.  When compiling Python, you can edit :file:"
"`Modules/Setup` to include SSL support, which adds an additional function to "
"the :mod:`socket` module: ``socket.ssl(socket, keyfile, certfile)``, which "
"takes a socket object and returns an SSL socket.  The :mod:`httplib` and :"
"mod:`urllib` modules were also changed to support ``https://`` URLs, though "
"no one has implemented FTP or SMTP over SSL."
msgstr ""

#: ../../whatsnew/2.0.rst:1046
msgid ""
"The :mod:`httplib` module has been rewritten by Greg Stein to support "
"HTTP/1.1. Backward compatibility with the 1.5 version of :mod:`httplib` is "
"provided, though using HTTP/1.1 features such as pipelining will require "
"rewriting code to use a different set of interfaces."
msgstr ""

#: ../../whatsnew/2.0.rst:1051
msgid ""
"The :mod:`Tkinter` module now supports Tcl/Tk version 8.1, 8.2, or 8.3, and "
"support for the older 7.x versions has been dropped.  The Tkinter module now "
"supports displaying Unicode strings in Tk widgets. Also, Fredrik Lundh "
"contributed an optimization which makes operations like ``create_line`` and "
"``create_polygon`` much faster, especially when using lots of coordinates."
msgstr ""

#: ../../whatsnew/2.0.rst:1057
msgid ""
"The :mod:`curses` module has been greatly extended, starting from Oliver "
"Andrich's enhanced version, to provide many additional functions from "
"ncurses and SYSV curses, such as colour, alternative character set support, "
"pads, and mouse support.  This means the module is no longer compatible with "
"operating systems that only have BSD curses, but there don't seem to be any "
"currently maintained OSes that fall into this category."
msgstr ""
"O módulo :mod:`curses` foi grandemente expandido, a partir da versão "
"melhorada de Oliver Andrich, para fornecer muitas funções adicionais do "
"ncurses e do SYSV curses, como suporte a cores, conjuntos de caracteres "
"alternativos, *pads* e suporte a rato. Isto significa que o módulo já não é "
"compatível com sistemas operativos que só têm BSD curses, mas não parece "
"haver atualmente qualquer sistema operativo mantido que se enquadre nesta "
"categoria."

#: ../../whatsnew/2.0.rst:1064
msgid ""
"As mentioned in the earlier discussion of 2.0's Unicode support, the "
"underlying implementation of the regular expressions provided by the :mod:"
"`re` module has been changed.  SRE, a new regular expression engine written "
"by Fredrik Lundh and partially funded by Hewlett Packard, supports matching "
"against both 8-bit strings and Unicode strings."
msgstr ""
"Como mencionado na discussão anterior sobre o suporte a Unicode do 2.0, a "
"implementação subjacente das expressões regulares fornecidas pelo módulo :"
"mod:`re` foi alterada. O SRE, um novo motor de expressões regulares escrito "
"por Fredrik Lundh e parcialmente financiado pela Hewlett Packard, suporta a "
"correspondência tanto de *strings* de 8 bits como de *strings* Unicode."

#: ../../whatsnew/2.0.rst:1074
msgid "New modules"
msgstr "Novos Módulos"

#: ../../whatsnew/2.0.rst:1076
msgid ""
"A number of new modules were added.  We'll simply list them with brief "
"descriptions; consult the 2.0 documentation for the details of a particular "
"module."
msgstr ""
"Vários novos módulos foram adicionados. Vamos simplesmente listá-los com "
"breves descrições; consulte a documentação 2.0 para obter detalhes sobre um "
"módulo específico."

#: ../../whatsnew/2.0.rst:1080
msgid ""
":mod:`atexit`:  For registering functions to be called before the Python "
"interpreter exits. Code that currently sets ``sys.exitfunc`` directly should "
"be changed to  use the :mod:`atexit` module instead, importing :mod:`atexit` "
"and calling :func:`atexit.register` with  the function to be called on exit. "
"(Contributed by Skip Montanaro.)"
msgstr ""
":mod:`atexit`: Para registar funções a serem chamadas antes do interpretador "
"Python sair. O código que atualmente define ``sys.exitfunc`` diretamente "
"deve ser alterado para usar o módulo :mod:`atexit`, importando :mod:`atexit` "
"e chamando :func:`atexit.register` com a função a ser chamada na saída. "
"(Contribuição de Skip Montanaro.)"

#: ../../whatsnew/2.0.rst:1086
msgid ""
":mod:`codecs`, :mod:`encodings`, :mod:`unicodedata`:  Added as part of the "
"new Unicode support."
msgstr ""

#: ../../whatsnew/2.0.rst:1089
msgid ""
":mod:`filecmp`: Supersedes the old :mod:`cmp`, :mod:`cmpcache` and :mod:"
"`dircmp` modules, which have now become deprecated. (Contributed by Gordon "
"MacMillan and Moshe Zadka.)"
msgstr ""

#: ../../whatsnew/2.0.rst:1093
msgid ""
":mod:`gettext`: This module provides internationalization (I18N) and "
"localization (L10N) support for Python programs by providing an interface to "
"the GNU gettext message catalog library. (Integrated by Barry Warsaw, from "
"separate contributions by Martin  von Löwis, Peter Funk, and James "
"Henstridge.)"
msgstr ""
":mod:`gettext`: Este módulo fornece suporte para internacionalização (I18N) "
"e localização (L10N) para programas Python, fornecendo uma interface para a "
"biblioteca de catálogos de mensagens GNU gettext. (Integrado por Barry "
"Warsaw, a partir de contribuições separadas de Martin von Löwis, Peter Funk "
"e James Henstridge.)"

#: ../../whatsnew/2.0.rst:1098
msgid ""
":mod:`linuxaudiodev`: Support for the :file:`/dev/audio` device on Linux, a "
"twin to the existing :mod:`sunaudiodev` module. (Contributed by Peter Bosch, "
"with fixes by Jeremy Hylton.)"
msgstr ""

#: ../../whatsnew/2.0.rst:1102
msgid ""
":mod:`mmap`: An interface to memory-mapped files on both Windows and Unix.  "
"A file's contents can be mapped directly into memory, at which point it "
"behaves like a mutable string, so its contents can be read and modified.  "
"They can even be passed to functions that expect ordinary strings, such as "
"the :mod:`re` module. (Contributed by Sam Rushing, with some extensions by A."
"M. Kuchling.)"
msgstr ""
":mod:`mmap`: Uma interface para ficheiros mapeados em memória, tanto em "
"Windows como em Unix. O conteúdo de um ficheiro pode ser mapeado diretamente "
"para a memória, ponto em que se comporta como uma *string* mutável, pelo que "
"o seu conteúdo pode ser lido e modificado. Podem até ser passados a funções "
"que esperam *strings* normais, como o módulo :mod:`re`. (Contribuído por Sam "
"Rushing, com algumas extensões de A.M. Kuchling.)"

#: ../../whatsnew/2.0.rst:1108
msgid ""
":mod:`pyexpat`: An interface to the Expat XML parser. (Contributed by Paul "
"Prescod.)"
msgstr ""

#: ../../whatsnew/2.0.rst:1111
msgid ""
":mod:`robotparser`: Parse a :file:`robots.txt` file, which is used for "
"writing Web spiders that politely avoid certain areas of a Web site.  The "
"parser accepts the contents of a :file:`robots.txt` file, builds a set of "
"rules from it, and can then answer questions about the fetchability of a "
"given URL.  (Contributed by Skip Montanaro.)"
msgstr ""

#: ../../whatsnew/2.0.rst:1117
msgid ""
":mod:`tabnanny`: A module/script to  check Python source code for ambiguous "
"indentation. (Contributed by Tim Peters.)"
msgstr ""
":mod:`tabnanny`: Um módulo/script para verificar código-fonte Python em "
"busca de indentação ambígua. (Contribuído por Tim Peters.)"

#: ../../whatsnew/2.0.rst:1120
msgid ""
":mod:`UserString`: A base class useful for deriving objects that behave like "
"strings."
msgstr ""

#: ../../whatsnew/2.0.rst:1123
msgid ""
":mod:`webbrowser`: A module that provides a platform independent way to "
"launch a web browser on a specific URL. For each platform, various browsers "
"are tried in a specific order. The user can alter which browser is launched "
"by setting the *BROWSER* environment variable.  (Originally inspired by Eric "
"S. Raymond's patch to :mod:`urllib` which added similar functionality, but "
"the final module comes from code originally  implemented by Fred Drake as :"
"file:`Tools/idle/BrowserControl.py`, and adapted for the standard library by "
"Fred.)"
msgstr ""
":mod:`webbrowser`: Um módulo que fornece uma forma independente da "
"plataforma para lançar um navegador web numa URL específica. Para cada "
"plataforma, vários navegadores são tentados por uma ordem específica. O "
"utilizador pode alterar qual o navegador lançado definindo a variável de "
"ambiente *BROWSER*. (Originalmente inspirado pela correção de Eric S. "
"Raymond ao :mod:`urllib`, que adicionou funcionalidade semelhante, mas o "
"módulo final provém de código originalmente implementado por Fred Drake "
"como :file:`Tools/idle/BrowserControl.py`, e adaptado para a biblioteca "
"padrão por Fred.)"

#: ../../whatsnew/2.0.rst:1132
msgid ""
":mod:`_winreg`: An interface to the Windows registry.  :mod:`_winreg` is an "
"adaptation of functions that have been part of PythonWin since 1995, but has "
"now been added to the core  distribution, and enhanced to support Unicode. :"
"mod:`_winreg` was written by Bill Tutt and Mark Hammond."
msgstr ""

#: ../../whatsnew/2.0.rst:1137
msgid ""
":mod:`zipfile`: A module for reading and writing ZIP-format archives.  These "
"are archives produced by :program:`PKZIP` on DOS/Windows or :program:`zip` "
"on Unix, not to be confused with :program:`gzip`\\ -format files (which are "
"supported by the :mod:`gzip` module) (Contributed by James C. Ahlstrom.)"
msgstr ""
":mod:`zipfile`: Um módulo para ler e escrever arquivos no formato ZIP. Estes "
"são arquivos produzidos pelo :program:`PKZIP` em DOS/Windows ou pelo :"
"program:`zip` em Unix, não confundir com ficheiros no formato :program:"
"`gzip` (que são suportados pelo módulo :mod:`gzip`). (Contribuído por James "
"C. Ahlstrom.)"

#: ../../whatsnew/2.0.rst:1142
msgid ""
":mod:`imputil`: A module that provides a simpler way for writing customized "
"import hooks, in comparison to the existing :mod:`ihooks` module.  "
"(Implemented by Greg Stein, with much discussion on python-dev along the "
"way.)"
msgstr ""

#: ../../whatsnew/2.0.rst:1150
msgid "IDLE Improvements"
msgstr "Melhorias no IDLE"

#: ../../whatsnew/2.0.rst:1152
msgid ""
"IDLE is the official Python cross-platform IDE, written using Tkinter. "
"Python 2.0 includes IDLE 0.6, which adds a number of new features and "
"improvements.  A partial list:"
msgstr ""
"O IDLE é o Ambiente de Desenvolvimento Integrado (IDE) oficial do Python "
"para várias plataformas, escrito usando Tkinter. O Python 2.0 inclui o IDLE "
"0.6, que adiciona várias novas funcionalidades e melhorias. Uma lista "
"parcial:"

#: ../../whatsnew/2.0.rst:1156
msgid ""
"UI improvements and optimizations, especially in the area of syntax "
"highlighting and auto-indentation."
msgstr ""
"Melhorias e otimizações na interface de utilizador, especialmente na área de "
"realce de sintaxe e indentação automática."

#: ../../whatsnew/2.0.rst:1159
msgid ""
"The class browser now shows more information, such as the top level "
"functions in a module."
msgstr ""
"O navegador de classes mostra agora mais informações, como as funções de "
"nível superior num módulo."

#: ../../whatsnew/2.0.rst:1162
msgid ""
"Tab width is now a user settable option. When opening an existing Python "
"file, IDLE automatically detects the indentation conventions, and adapts."
msgstr ""
"A largura do tabulador é agora uma opção configurável pelo utilizador. Ao "
"abrir um ficheiro Python existente, o IDLE deteta automaticamente as "
"convenções de indentação e adapta-se."

#: ../../whatsnew/2.0.rst:1165
msgid ""
"There is now support for calling browsers on various platforms, used to open "
"the Python documentation in a browser."
msgstr ""
"Existe agora suporte para chamar navegadores em várias plataformas, "
"utilizado para abrir a documentação do Python num navegador."

#: ../../whatsnew/2.0.rst:1168
msgid ""
"IDLE now has a command line, which is largely similar to  the vanilla Python "
"interpreter."
msgstr ""
"O IDLE tem agora uma linha de comandos, que é em grande parte semelhante ao "
"interpretador Python padrão."

#: ../../whatsnew/2.0.rst:1171
msgid "Call tips were added in many places."
msgstr "Dicas de chamada foram adicionadas em muitos locais."

#: ../../whatsnew/2.0.rst:1173
msgid "IDLE can now be installed as a package."
msgstr "O IDLE pode agora ser instalado como um pacote."

#: ../../whatsnew/2.0.rst:1175
msgid "In the editor window, there is now a line/column bar at the bottom."
msgstr ""
"Na janela do editor, existe agora uma barra de linha/coluna na parte "
"inferior."

#: ../../whatsnew/2.0.rst:1177
msgid ""
"Three new keystroke commands: Check module (:kbd:`Alt-F5`), Import module (:"
"kbd:`F5`) and Run script (:kbd:`Ctrl-F5`)."
msgstr ""
"Três novos comandos de teclado: Verificar módulo (:kbd:`Alt-F5`), Importar "
"módulo (:kbd:`F5`) e Executar script (:kbd:`Ctrl-F5`)."

#: ../../whatsnew/2.0.rst:1184
msgid "Deleted and Deprecated Modules"
msgstr "Módulos Eliminados e Obsoletos"

#: ../../whatsnew/2.0.rst:1186
msgid ""
"A few modules have been dropped because they're obsolete, or because there "
"are now better ways to do the same thing.  The :mod:`stdwin` module is gone; "
"it was for a platform-independent windowing toolkit that's no longer "
"developed."
msgstr ""

#: ../../whatsnew/2.0.rst:1190
msgid ""
"A number of modules have been moved to the :file:`lib-old` subdirectory: :"
"mod:`cmp`, :mod:`cmpcache`, :mod:`dircmp`, :mod:`dump`,  :mod:`find`, :mod:"
"`grep`, :mod:`packmail`,  :mod:`poly`, :mod:`util`, :mod:`whatsound`, :mod:"
"`zmod`.  If you have code which relies on a module  that's been moved to :"
"file:`lib-old`, you can simply add that directory to ``sys.path``   to get "
"them back, but you're encouraged to update any code that uses these modules."
msgstr ""

#: ../../whatsnew/2.0.rst:1199
msgid "Acknowledgements"
msgstr "Agradecimentos"

#: ../../whatsnew/2.0.rst:1201
msgid ""
"The authors would like to thank the following people for offering "
"suggestions on various drafts of this article: David Bolen, Mark Hammond, "
"Gregg Hauser, Jeremy Hylton, Fredrik Lundh, Detlef Lannert, Aahz Maruch, "
"Skip Montanaro, Vladimir Marangozov, Tobias Polzin, Guido van Rossum, Neil "
"Schemenauer, and Russ Schmidt."
msgstr ""
"Os autores gostariam de agradecer às seguintes pessoas por oferecerem "
"sugestões sobre vários rascunhos deste artigo: David Bolen, Mark Hammond, "
"Gregg Hauser, Jeremy Hylton, Fredrik Lundh, Detlef Lannert, Aahz Maruch, "
"Skip Montanaro, Vladimir Marangozov, Tobias Polzin, Guido van Rossum, Neil "
"Schemenauer e Russ Schmidt."
