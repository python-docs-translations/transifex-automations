# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# python-doc bot, 2025
# André Moreira <afrmscb@gmail.com>, 2025
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.12\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-10-31 15:47+0000\n"
"PO-Revision-Date: 2025-07-18 19:59+0000\n"
"Last-Translator: André Moreira <afrmscb@gmail.com>, 2025\n"
"Language-Team: Portuguese (Portugal) (https://app.transifex.com/python-doc/"
"teams/5390/pt_PT/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: pt_PT\n"
"Plural-Forms: nplurals=3; plural=(n == 0 || n == 1) ? 0 : n != 0 && n % "
"1000000 == 0 ? 1 : 2;\n"

#: ../../whatsnew/3.6.rst:3
msgid "What's New In Python 3.6"
msgstr "Novidades no Python 3.6"

#: ../../whatsnew/3.6.rst:0
msgid "Editors"
msgstr "Editores"

#: ../../whatsnew/3.6.rst:5
msgid "Elvis Pranskevichus <elvis@magic.io>, Yury Selivanov <yury@magic.io>"
msgstr "Elvis Pranskevichus <elvis@magic.io>, Yury Selivanov <yury@magic.io>"

#: ../../whatsnew/3.6.rst:47
msgid ""
"This article explains the new features in Python 3.6, compared to 3.5. "
"Python 3.6 was released on December 23, 2016.  See the `changelog <https://"
"docs.python.org/3.6/whatsnew/changelog.html>`_ for a full list of changes."
msgstr ""

#: ../../whatsnew/3.6.rst:54
msgid ":pep:`494` - Python 3.6 Release Schedule"
msgstr ":pep:`494` — Cronograma de lançamento do Python 3.6"

#: ../../whatsnew/3.6.rst:58
msgid "Summary -- Release highlights"
msgstr "Resumo — Destaques da versão"

#: ../../whatsnew/3.6.rst:60
msgid "New syntax features:"
msgstr "Novas funcionalidades de sintaxe:"

#: ../../whatsnew/3.6.rst:62
msgid ":ref:`PEP 498 <whatsnew36-pep498>`, formatted string literals."
msgstr ""
":ref:`PEP 498 <whatsnew36-pep498>`, literais de cadeias de caracteres "
"formatadas."

#: ../../whatsnew/3.6.rst:64
msgid ":ref:`PEP 515 <whatsnew36-pep515>`, underscores in numeric literals."
msgstr ":ref:`PEP 515 <whatsnew36-pep515>`, sublinhados em literais numéricos."

#: ../../whatsnew/3.6.rst:66
msgid ":ref:`PEP 526 <whatsnew36-pep526>`, syntax for variable annotations."
msgstr ""
":ref:`PEP 526 <whatsnew36-pep526>`, sintaxe para anotações de variáveis."

#: ../../whatsnew/3.6.rst:68
msgid ":ref:`PEP 525 <whatsnew36-pep525>`, asynchronous generators."
msgstr ":ref:`PEP 525 <whatsnew36-pep525>`, geradores assíncronos."

#: ../../whatsnew/3.6.rst:70
msgid ":ref:`PEP 530 <whatsnew36-pep530>`: asynchronous comprehensions."
msgstr ":ref:`PEP 530 <whatsnew36-pep530>`: compreensões assíncronas."

#: ../../whatsnew/3.6.rst:73
msgid "New library modules:"
msgstr "Novos módulos de biblioteca:"

#: ../../whatsnew/3.6.rst:75
msgid ""
":mod:`secrets`: :ref:`PEP 506 -- Adding A Secrets Module To The Standard "
"Library <whatsnew36-pep506>`."
msgstr ""
":mod:`secrets`: :ref:`PEP 506 — Adição de um módulo de segredos à biblioteca "
"padrão <whatsnew36-pep506>`"

#: ../../whatsnew/3.6.rst:78
msgid "CPython implementation improvements:"
msgstr "Melhorias na implementação do CPython:"

#: ../../whatsnew/3.6.rst:80
msgid ""
"The :ref:`dict <typesmapping>` type has been reimplemented to use a :ref:"
"`more compact representation <whatsnew36-compactdict>` based on `a proposal "
"by Raymond Hettinger <https://mail.python.org/pipermail/python-dev/2012-"
"December/123028.html>`_ and similar to the `PyPy dict implementation`_.  "
"This resulted in dictionaries using 20% to 25% less memory when compared to "
"Python 3.5."
msgstr ""
"O tipo :ref:`dict <typesmapping>` foi reimplementado para usar uma :ref:"
"`representação mais compacta <whatsnew36-compactdict>`, baseada numa "
"`proposta de Raymond Hettinger <https://mail.python.org/pipermail/python-"
"dev/2012-December/123028.html>`_ e semelhante à `implementação de "
"dicionários do PyPy`_. Isto resultou em dicionários que usam 20% a 25% menos "
"memória em comparação com o Python 3.5."

#: ../../whatsnew/3.6.rst:87
msgid ""
"Customization of class creation has been simplified with the :ref:`new "
"protocol <whatsnew36-pep487>`."
msgstr ""
"A personalização da criação de classes foi simplificada com o :ref:`novo "
"protocolo <whatsnew36-pep487>`"

#: ../../whatsnew/3.6.rst:90
msgid ""
"The class attribute definition order is :ref:`now preserved  <whatsnew36-"
"pep520>`."
msgstr ""
"A ordem de definição dos atributos de classe é :ref:`agora preservada "
"<whatsnew36-pep520>`"

#: ../../whatsnew/3.6.rst:93
msgid ""
"The order of elements in ``**kwargs`` now :ref:`corresponds to the order "
"<whatsnew36-pep468>` in which keyword arguments were passed to the function."
msgstr ""
"A ordem dos elementos em ``**kwargs`` corresponde agora :ref:`à ordem "
"<whatsnew36-pep468>` pela qual os argumentos nomeados foram passados para a "
"função."

#: ../../whatsnew/3.6.rst:97
msgid ""
"DTrace and SystemTap :ref:`probing support <whatsnew36-tracing>` has been "
"added."
msgstr ""
"Foi adicionado suporte para :ref:`sondagem com DTrace e SystemTap "
"<whatsnew36-tracing>`"

#: ../../whatsnew/3.6.rst:100
msgid ""
"The new :ref:`PYTHONMALLOC <whatsnew36-pythonmalloc>` environment variable "
"can now be used to debug the interpreter memory allocation and access errors."
msgstr ""
"A nova variável de ambiente :ref:`PYTHONMALLOC <whatsnew36-pythonmalloc>` "
"pode agora ser usada para depurar erros de alocação e acesso à memória do "
"interpretador."

#: ../../whatsnew/3.6.rst:105
msgid "Significant improvements in the standard library:"
msgstr "Melhorias significativas na biblioteca padrão:"

#: ../../whatsnew/3.6.rst:107
msgid ""
"The :mod:`asyncio` module has received new features, significant usability "
"and performance improvements, and a fair amount of bug fixes. Starting with "
"Python 3.6 the ``asyncio`` module is no longer provisional and its API is "
"considered stable."
msgstr ""
"O módulo :mod:`asyncio` recebeu novas funcionalidades, melhorias "
"significativas de usabilidade e desempenho, e várias correções de erros. A "
"partir do Python 3.6, o módulo ``asyncio`` já não é provisório e a sua API é "
"considerada estável."

#: ../../whatsnew/3.6.rst:112
msgid ""
"A new :ref:`file system path protocol <whatsnew36-pep519>` has been "
"implemented to support :term:`path-like objects <path-like object>`. All "
"standard library functions operating on paths have been updated to work with "
"the new protocol."
msgstr ""
"Foi implementado um novo :ref:`protocolo de caminho do sistema de ficheiros "
"<whatsnew36-pep519>` para suportar :term:`objetos semelhantes a caminhos "
"<path-like object>`. Todas as funções da biblioteca padrão que operam em "
"caminhos foram atualizadas para funcionar com o novo protocolo."

#: ../../whatsnew/3.6.rst:117
msgid ""
"The :mod:`datetime` module has gained support for :ref:`Local Time "
"Disambiguation <whatsnew36-pep495>`."
msgstr ""
"O módulo :mod:`datetime` passou a suportar :ref:`Desambiguação de Hora Local "
"<whatsnew36-pep495>`"

#: ../../whatsnew/3.6.rst:120
msgid ""
"The :mod:`typing` module received a number of :ref:`improvements <whatsnew36-"
"typing>`."
msgstr ""
"O módulo :mod:`typing` recebeu várias :ref:`melhorias <whatsnew36-typing>`"

#: ../../whatsnew/3.6.rst:123
msgid ""
"The :mod:`tracemalloc` module has been significantly reworked and is now "
"used to provide better output for :exc:`ResourceWarning` as well as provide "
"better diagnostics for memory allocation errors. See the :ref:`PYTHONMALLOC "
"section <whatsnew36-pythonmalloc>` for more information."
msgstr ""
"O módulo :mod:`tracemalloc` foi significativamente refeito e é agora usado "
"para fornecer uma saída melhor para :exc:`ResourceWarning`, bem como "
"fornecer diagnósticos melhores para erros de alocação de memória. Consulte a "
"secção :ref:`PYTHONMALLOC <whatsnew36-pythonmalloc>` para mais informações."

#: ../../whatsnew/3.6.rst:130
msgid "Security improvements:"
msgstr "Melhorias de segurança:"

#: ../../whatsnew/3.6.rst:132
msgid ""
"The new :mod:`secrets` module has been added to simplify the generation of "
"cryptographically strong pseudo-random numbers suitable for managing secrets "
"such as account authentication, tokens, and similar."
msgstr ""
"Foi adicionado o novo módulo :mod:`secrets` para simplificar a geração de "
"números pseudoaleatórios criptograficamente fortes, adequados para gerir "
"segredos como autenticação de contas, tokens e similares."

#: ../../whatsnew/3.6.rst:136 ../../whatsnew/3.6.rst:1283
msgid ""
"On Linux, :func:`os.urandom` now blocks until the system urandom entropy "
"pool is initialized to increase the security. See the :pep:`524` for the "
"rationale."
msgstr ""
"No Linux, a função :func:`os.urandom` agora bloqueia até que o *pool* de "
"entropia do sistema urandom esteja inicializado, para aumentar a segurança. "
"Consulte a :pep:`524` para obter a justificação."

#: ../../whatsnew/3.6.rst:140
msgid "The :mod:`hashlib` and :mod:`ssl` modules now support OpenSSL 1.1.0."
msgstr "Os módulos :mod:`hashlib` e :mod:`ssl` agora suportam o OpenSSL 1.1.0."

#: ../../whatsnew/3.6.rst:142
msgid ""
"The default settings and feature set of the :mod:`ssl` module have been "
"improved."
msgstr ""
"As definições e conjunto de funcionalidades predefinidas do módulo :mod:"
"`ssl` foram melhoradas."

#: ../../whatsnew/3.6.rst:145
msgid ""
"The :mod:`hashlib` module received support for the BLAKE2, SHA-3 and SHAKE "
"hash algorithms and the :func:`~hashlib.scrypt` key derivation function."
msgstr ""
"O módulo :mod:`hashlib` passou a suportar os algoritmos de *hash* BLAKE2, "
"SHA-3 e SHAKE, bem como a função de derivação de chaves :func:`~hashlib."
"scrypt`."

#: ../../whatsnew/3.6.rst:149
msgid "Windows improvements:"
msgstr "Melhorias no Windows:"

#: ../../whatsnew/3.6.rst:151
msgid ""
":ref:`PEP 528 <whatsnew36-pep528>` and :ref:`PEP 529 <whatsnew36-pep529>`, "
"Windows filesystem and console encoding changed to UTF-8."
msgstr ""
":ref:`PEP 528 <whatsnew36-pep528>` e :ref:`PEP 529 <whatsnew36-pep529>`, "
"codificação do sistema de ficheiros e consola do Windows alterada para UTF-8."

#: ../../whatsnew/3.6.rst:154
msgid ""
"The ``py.exe`` launcher, when used interactively, no longer prefers Python 2 "
"over Python 3 when the user doesn't specify a version (via command line "
"arguments or a config file).  Handling of shebang lines remains unchanged - "
"\"python\" refers to Python 2 in that case."
msgstr ""
"O lançador ``py.exe``, quando usado interativamente, já não prefere o Python "
"2 em relação ao Python 3 quando o utilizador não especifica uma versão "
"(através de argumentos da linha de comandos ou de um ficheiro de "
"configuração). O tratamento de linhas *shebang* mantém-se inalterado — "
"\"python\" refere-se ao Python 2 nesse caso."

#: ../../whatsnew/3.6.rst:159
msgid ""
"``python.exe`` and ``pythonw.exe`` have been marked as long-path aware, "
"which means that the 260 character path limit may no longer apply. See :ref:"
"`removing the MAX_PATH limitation <max-path>` for details."
msgstr ""
"Os executáveis ``python.exe`` e ``pythonw.exe`` foram marcados como *long-"
"path aware*, o que significa que o limite de 260 caracteres para caminhos "
"pode já não se aplicar. Consulte :ref:`a remoção da limitação MAX_PATH <max-"
"path>` para mais detalhes."

#: ../../whatsnew/3.6.rst:163
msgid ""
"A ``._pth`` file can be added to force isolated mode and fully specify all "
"search paths to avoid registry and environment lookup. See :ref:`the "
"documentation <windows_finding_modules>` for more information."
msgstr ""
"Pode ser adicionado um ficheiro ``._pth`` para forçar o modo isolado e "
"especificar totalmente todos os caminhos de pesquisa, evitando a consulta ao "
"registo e ao ambiente. Consulte :ref:`a documentação "
"<windows_finding_modules>` para mais informações."

#: ../../whatsnew/3.6.rst:167
msgid ""
"A ``python36.zip`` file now works as a landmark to infer :envvar:"
"`PYTHONHOME`. See :ref:`the documentation <windows_finding_modules>` for "
"more information."
msgstr ""
"Um ficheiro ``python36.zip`` funciona agora como um marco para inferir :"
"envvar:`PYTHONHOME`. Consulte :ref:`a documentação "
"<windows_finding_modules>` para mais informações."

#: ../../whatsnew/3.6.rst:176
msgid "New Features"
msgstr "Novas Funcionalidades"

#: ../../whatsnew/3.6.rst:181
msgid "PEP 498: Formatted string literals"
msgstr "PEP 498: Literais de cadeias de caracteres formatadas"

#: ../../whatsnew/3.6.rst:183
msgid ""
":pep:`498` introduces a new kind of string literals: *f-strings*, or :ref:"
"`formatted string literals <f-strings>`."
msgstr ""
"A :pep:`498` introduz um novo tipo de literais de cadeias de caracteres: *f-"
"strings*, ou :ref:`literais de cadeias de caracteres formatadas <f-strings>`."

#: ../../whatsnew/3.6.rst:186
msgid ""
"Formatted string literals are prefixed with ``'f'`` and are similar to the "
"format strings accepted by :meth:`str.format`.  They contain replacement "
"fields surrounded by curly braces.  The replacement fields are expressions, "
"which are evaluated at run time, and then formatted using the :func:`format` "
"protocol::"
msgstr ""
"Os literais de cadeias de caracteres formatadas são prefixados com ``'f'`` e "
"são semelhantes às cadeias de formatação aceites por :meth:`str.format`. "
"Contêm campos de substituição delimitados por chavetas. Os campos de "
"substituição são expressões, que são avaliadas em tempo de execução e depois "
"formatadas usando o protocolo :func:`format`:"

#: ../../whatsnew/3.6.rst:192
msgid ""
">>> name = \"Fred\"\n"
">>> f\"He said his name is {name}.\"\n"
"'He said his name is Fred.'\n"
">>> width = 10\n"
">>> precision = 4\n"
">>> value = decimal.Decimal(\"12.34567\")\n"
">>> f\"result: {value:{width}.{precision}}\"  # nested fields\n"
"'result:      12.35'"
msgstr ""
">>> nome = \"Fred\"\n"
">>> f\"Ele disse que o seu nome é {nome}.\"\n"
"'Ele disse que o seu nome é Fred.'\n"
">>> largura = 10\n"
">>> precisao = 4\n"
">>> valor = decimal.Decimal(\"12.34567\")\n"
">>> f\"resultado: {valor:{largura}.{precisao}}\"  # campos aninhados\n"
"'resultado:      12.35'"

#: ../../whatsnew/3.6.rst:203
msgid ":pep:`498` -- Literal String Interpolation."
msgstr ":pep:`498` — Interpolação literal de cadeias de caracteres."

#: ../../whatsnew/3.6.rst:204
msgid "PEP written and implemented by Eric V. Smith."
msgstr "PEP escrita e implementada por Eric V. Smith."

#: ../../whatsnew/3.6.rst:206
msgid ":ref:`Feature documentation <f-strings>`."
msgstr ":ref:`Documentação da funcionalidade <f-strings>`."

#: ../../whatsnew/3.6.rst:212
msgid "PEP 526: Syntax for variable annotations"
msgstr "PEP 526: Sintaxe para anotações de variáveis"

#: ../../whatsnew/3.6.rst:214
msgid ""
":pep:`484` introduced the standard for type annotations of function "
"parameters, a.k.a. type hints. This PEP adds syntax to Python for annotating "
"the types of variables including class variables and instance variables::"
msgstr ""
"A :pep:`484` introduziu o padrão para anotações de tipo de parâmetros de "
"função, também conhecidas como *type hints*. Esta PEP adiciona sintaxe ao "
"Python para anotar os tipos de variáveis, incluindo variáveis de classe e de "
"instância::"

#: ../../whatsnew/3.6.rst:218
msgid ""
"primes: List[int] = []\n"
"\n"
"captain: str  # Note: no initial value!\n"
"\n"
"class Starship:\n"
"    stats: Dict[str, int] = {}"
msgstr ""
"primos: List[int] = []\n"
"\n"
"capitao: str  # Nota: sem valor inicial!\n"
"\n"
"class NaveEstelar:\n"
"    estatisticas: Dict[str, int] = {}"

#: ../../whatsnew/3.6.rst:225
msgid ""
"Just as for function annotations, the Python interpreter does not attach any "
"particular meaning to variable annotations and only stores them in the "
"``__annotations__`` attribute of a class or module."
msgstr ""
"Tal como nas anotações de funções, o interpretador Python não atribui "
"qualquer significado especial às anotações de variáveis e apenas as armazena "
"no atributo ``__annotations__`` de uma classe ou módulo."

#: ../../whatsnew/3.6.rst:229
msgid ""
"In contrast to variable declarations in statically typed languages, the goal "
"of annotation syntax is to provide an easy way to specify structured type "
"metadata for third party tools and libraries via the abstract syntax tree "
"and the ``__annotations__`` attribute."
msgstr ""
"Em contraste com as declarações de variáveis em linguagens estaticamente "
"tipadas, o objetivo da sintaxe de anotação é fornecer uma forma fácil de "
"especificar metadados de tipo estruturados para ferramentas e bibliotecas de "
"terceiros através da árvore de sintaxe abstrata e do atributo "
"``__annotations__``."

#: ../../whatsnew/3.6.rst:236
msgid ":pep:`526` -- Syntax for variable annotations."
msgstr ":pep:`526` — Sintaxe para anotações de variáveis."

#: ../../whatsnew/3.6.rst:237
msgid ""
"PEP written by Ryan Gonzalez, Philip House, Ivan Levkivskyi, Lisa Roach, and "
"Guido van Rossum. Implemented by Ivan Levkivskyi."
msgstr ""
"PEP escrita por Ryan Gonzalez, Philip House, Ivan Levkivskyi, Lisa Roach e "
"Guido van Rossum. Implementada por Ivan Levkivskyi."

#: ../../whatsnew/3.6.rst:240
msgid ""
"Tools that use or will use the new syntax: `mypy <https://www.mypy-lang.org/"
">`_, `pytype <https://github.com/google/pytype>`_, PyCharm, etc."
msgstr ""
"Ferramentas que usam ou irão usar a nova sintaxe: `mypy <https://www.mypy-"
"lang.org/>`_, `pytype <https://github.com/google/pytype>`_, PyCharm, etc."

#: ../../whatsnew/3.6.rst:248
msgid "PEP 515: Underscores in Numeric Literals"
msgstr "PEP 515: Sublinhados em literais numéricos"

#: ../../whatsnew/3.6.rst:250
msgid ""
":pep:`515` adds the ability to use underscores in numeric literals for "
"improved readability.  For example::"
msgstr ""
"A :pep:`515` adiciona a capacidade de usar sublinhados em literais numéricos "
"para melhorar a legibilidade. Por exemplo::"

#: ../../whatsnew/3.6.rst:253
msgid ""
">>> 1_000_000_000_000_000\n"
"1000000000000000\n"
">>> 0x_FF_FF_FF_FF\n"
"4294967295"
msgstr ""
">>> 1_000_000_000_000_000\n"
"1000000000000000\n"
">>> 0x_FF_FF_FF_FF\n"
"4294967295"

#: ../../whatsnew/3.6.rst:258
msgid ""
"Single underscores are allowed between digits and after any base specifier.  "
"Leading, trailing, or multiple underscores in a row are not allowed."
msgstr ""
"Sublinhados únicos são permitidos entre dígitos e após qualquer "
"especificador de base. Sublinhados iniciais, finais ou múltiplos em "
"sequência não são permitidos."

#: ../../whatsnew/3.6.rst:262
msgid ""
"The :ref:`string formatting <formatspec>` language also now has support for "
"the ``'_'`` option to signal the use of an underscore for a thousands "
"separator for floating-point presentation types and for integer presentation "
"type ``'d'``.  For integer presentation types ``'b'``, ``'o'``, ``'x'``, and "
"``'X'``, underscores will be inserted every 4 digits::"
msgstr ""
"A linguagem de :ref:`formatação de cadeias de caracteres <formatspec>` agora "
"também suporta a opção ``'_'`` para sinalizar o uso de um sublinhado como "
"separador de milhares para tipos de apresentação de ponto flutuante e para o "
"tipo de apresentação de inteiros ``'d'``. Para os tipos de apresentação de "
"inteiros ``'b'``, ``'o'``, ``'x'`` e ``'X'``, os sublinhados serão inseridos "
"a cada 4 dígitos::"

#: ../../whatsnew/3.6.rst:269
msgid ""
">>> '{:_}'.format(1000000)\n"
"'1_000_000'\n"
">>> '{:_x}'.format(0xFFFFFFFF)\n"
"'ffff_ffff'"
msgstr ""
">>> '{:_}'.format(1000000)\n"
"'1_000_000'\n"
">>> '{:_x}'.format(0xFFFFFFFF)\n"
"'ffff_ffff'"

#: ../../whatsnew/3.6.rst:276
msgid ":pep:`515` -- Underscores in Numeric Literals"
msgstr ":pep:`515` — Sublinhados em literais numéricos"

#: ../../whatsnew/3.6.rst:277
msgid "PEP written by Georg Brandl and Serhiy Storchaka."
msgstr "PEP escrita por Georg Brandl e Serhiy Storchaka."

#: ../../whatsnew/3.6.rst:283
msgid "PEP 525: Asynchronous Generators"
msgstr "PEP 525: Geradores assíncronos"

#: ../../whatsnew/3.6.rst:285
msgid ""
":pep:`492` introduced support for native coroutines and ``async`` / "
"``await`` syntax to Python 3.5.  A notable limitation of the Python 3.5 "
"implementation is that it was not possible to use ``await`` and ``yield`` in "
"the same function body.  In Python 3.6 this restriction has been lifted, "
"making it possible to define *asynchronous generators*::"
msgstr ""
"A :pep:`492` introduziu suporte para corrotinas nativas e a sintaxe "
"``async`` / ``await`` no Python 3.5. Uma limitação notável da implementação "
"do Python 3.5 era a impossibilidade de usar ``await`` e ``yield`` no mesmo "
"corpo de função. No Python 3.6, esta restrição foi removida, tornando "
"possível definir *geradores assíncronos*::"

#: ../../whatsnew/3.6.rst:291
msgid ""
"async def ticker(delay, to):\n"
"    \"\"\"Yield numbers from 0 to *to* every *delay* seconds.\"\"\"\n"
"    for i in range(to):\n"
"        yield i\n"
"        await asyncio.sleep(delay)"
msgstr ""
"async def ticker(atraso, ate):\n"
"    \"\"\"Produz números de 0 a *ate* a cada *atraso* segundos.\"\"\"\n"
"    for i in range(ate):\n"
"        yield i\n"
"        await asyncio.sleep(atraso)"

#: ../../whatsnew/3.6.rst:297
msgid "The new syntax allows for faster and more concise code."
msgstr "A nova sintaxe permite código mais rápido e conciso."

#: ../../whatsnew/3.6.rst:301
msgid ":pep:`525` -- Asynchronous Generators"
msgstr ":pep:`525` — Geradores assíncronos"

#: ../../whatsnew/3.6.rst:302 ../../whatsnew/3.6.rst:323
msgid "PEP written and implemented by Yury Selivanov."
msgstr "PEP escrita e implementada por Yury Selivanov."

#: ../../whatsnew/3.6.rst:308
msgid "PEP 530: Asynchronous Comprehensions"
msgstr "PEP 530: Compreensões assíncronas"

#: ../../whatsnew/3.6.rst:310
msgid ""
":pep:`530` adds support for using ``async for`` in list, set, dict "
"comprehensions and generator expressions::"
msgstr ""
"A :pep:`530` adiciona suporte para o uso de ``async for`` em compreensões de "
"listas, conjuntos, dicionários e expressões geradoras::"

#: ../../whatsnew/3.6.rst:313
msgid "result = [i async for i in aiter() if i % 2]"
msgstr "resultado = [i async for i in aiter() if i % 2]"

#: ../../whatsnew/3.6.rst:315
msgid ""
"Additionally, ``await`` expressions are supported in all kinds of "
"comprehensions::"
msgstr ""
"Além disso, expressões ``await`` são suportadas em todos os tipos de "
"compreensões::"

#: ../../whatsnew/3.6.rst:318
msgid "result = [await fun() for fun in funcs if await condition()]"
msgstr "resultado = [await fun() for fun in funcs if await condicao()]"

#: ../../whatsnew/3.6.rst:322
msgid ":pep:`530` -- Asynchronous Comprehensions"
msgstr ":pep:`530` — Compreensões assíncronas"

#: ../../whatsnew/3.6.rst:329
msgid "PEP 487: Simpler customization of class creation"
msgstr "PEP 487: Personalização simplificada da criação de classes"

#: ../../whatsnew/3.6.rst:331
msgid ""
"It is now possible to customize subclass creation without using a metaclass. "
"The new ``__init_subclass__`` classmethod will be called on the base class "
"whenever a new subclass is created::"
msgstr ""
"Agora é possível personalizar a criação de subclasses sem usar uma "
"metaclasse. O novo método de classe ``__init_subclass__`` será chamado na "
"classe base sempre que uma nova subclass for criada::"

#: ../../whatsnew/3.6.rst:335
msgid ""
"class PluginBase:\n"
"    subclasses = []\n"
"\n"
"    def __init_subclass__(cls, **kwargs):\n"
"        super().__init_subclass__(**kwargs)\n"
"        cls.subclasses.append(cls)\n"
"\n"
"class Plugin1(PluginBase):\n"
"    pass\n"
"\n"
"class Plugin2(PluginBase):\n"
"    pass"
msgstr ""
"class PluginBase:\n"
"    subclasses = []\n"
"\n"
"    def __init_subclass__(cls, **kwargs):\n"
"        super().__init_subclass__(**kwargs)\n"
"        cls.subclasses.append(cls)\n"
"\n"
"class Plugin1(PluginBase):\n"
"    pass\n"
"\n"
"class Plugin2(PluginBase):\n"
"    pass"

#: ../../whatsnew/3.6.rst:348
msgid ""
"In order to allow zero-argument :func:`super` calls to work correctly from :"
"meth:`~object.__init_subclass__` implementations, custom metaclasses must "
"ensure that the new ``__classcell__`` namespace entry is propagated to "
"``type.__new__`` (as described in :ref:`class-object-creation`)."
msgstr ""
"Para permitir que chamadas :func:`super` sem argumentos funcionem "
"corretamente a partir de implementações de :meth:`~object."
"__init_subclass__`, as metaclasses personalizadas devem garantir que a nova "
"entrada de namespace ``__classcell__`` seja propagada para ``type.__new__`` "
"(como descrito em :ref:`class-object-creation`)."

#: ../../whatsnew/3.6.rst:355 ../../whatsnew/3.6.rst:393
msgid ":pep:`487` -- Simpler customization of class creation"
msgstr ":pep:`487` — Personalização simplificada da criação de classes"

#: ../../whatsnew/3.6.rst:356 ../../whatsnew/3.6.rst:394
msgid "PEP written and implemented by Martin Teichmann."
msgstr "PEP escrita e implementada por Martin Teichmann."

#: ../../whatsnew/3.6.rst:358
msgid ":ref:`Feature documentation <class-customization>`"
msgstr ":ref:`Documentação da funcionalidade <class-customization>`"

#: ../../whatsnew/3.6.rst:364
msgid "PEP 487: Descriptor Protocol Enhancements"
msgstr "PEP 487: Melhorias no protocolo de descritores"

#: ../../whatsnew/3.6.rst:366
msgid ""
":pep:`487` extends the descriptor protocol to include the new optional :meth:"
"`~object.__set_name__` method.  Whenever a new class is defined, the new "
"method will be called on all descriptors included in the definition, "
"providing them with a reference to the class being defined and the name "
"given to the descriptor within the class namespace.  In other words, "
"instances of descriptors can now know the attribute name of the descriptor "
"in the owner class::"
msgstr ""
"A :pep:`487` estende o protocolo de descritores para incluir o novo método "
"opcional :meth:`~object.__set_name__`. Sempre que uma nova classe é "
"definida, o novo método será chamado em todos os descritores incluídos na "
"definição, fornecendo-lhes uma referência à classe que está a ser definida e "
"ao nome dado ao descritor dentro do namespace da classe. Em outras palavras, "
"instâncias de descritores podem agora conhecer o nome do atributo do "
"descritor na classe proprietária::"

#: ../../whatsnew/3.6.rst:374
msgid ""
"class IntField:\n"
"    def __get__(self, instance, owner):\n"
"        return instance.__dict__[self.name]\n"
"\n"
"    def __set__(self, instance, value):\n"
"        if not isinstance(value, int):\n"
"            raise ValueError(f'expecting integer in {self.name}')\n"
"        instance.__dict__[self.name] = value\n"
"\n"
"    # this is the new initializer:\n"
"    def __set_name__(self, owner, name):\n"
"        self.name = name\n"
"\n"
"class Model:\n"
"    int_field = IntField()"
msgstr ""
"class CampoInt:\n"
"    def __get__(self, instancia, proprietario):\n"
"        return instancia.__dict__[self.nome]\n"
"\n"
"    def __set__(self, instancia, valor):\n"
"        if not isinstance(valor, int):\n"
"            raise ValueError(f'esperado um inteiro em {self.nome}')\n"
"        instancia.__dict__[self.nome] = valor\n"
"\n"
"    # este é o novo inicializador:\n"
"    def __set_name__(self, proprietario, nome):\n"
"        self.nome = nome\n"
"\n"
"class Modelo:\n"
"    campo_int = CampoInt()"

#: ../../whatsnew/3.6.rst:396
msgid ":ref:`Feature documentation <descriptors>`"
msgstr ":ref:`Documentação da funcionalidade <descriptors>`"

#: ../../whatsnew/3.6.rst:402
msgid "PEP 519: Adding a file system path protocol"
msgstr "PEP 519: Adição de um protocolo de caminho do sistema de ficheiros"

#: ../../whatsnew/3.6.rst:404
msgid ""
"File system paths have historically been represented as :class:`str` or :"
"class:`bytes` objects. This has led to people who write code which operate "
"on file system paths to assume that such objects are only one of those two "
"types (an :class:`int` representing a file descriptor does not count as that "
"is not a file path). Unfortunately that assumption prevents alternative "
"object representations of file system paths like :mod:`pathlib` from working "
"with pre-existing code, including Python's standard library."
msgstr ""
"Os caminhos do sistema de ficheiros têm sido historicamente representados "
"como objetos :class:`str` ou :class:`bytes`. Isto levou a que os "
"programadores assumissem que tais objetos são apenas um desses dois tipos "
"(um :class:`int` que representa um descritor de ficheiro não conta, pois não "
"é um caminho de ficheiro). Infelizmente, essa suposição impede que "
"representações alternativas de objetos de caminhos do sistema de ficheiros, "
"como :mod:`pathlib`, funcionem com código pré-existente, incluindo a "
"biblioteca padrão do Python."

#: ../../whatsnew/3.6.rst:413
msgid ""
"To fix this situation, a new interface represented by :class:`os.PathLike` "
"has been defined. By implementing the :meth:`~os.PathLike.__fspath__` "
"method, an object signals that it represents a path. An object can then "
"provide a low-level representation of a file system path as a :class:`str` "
"or :class:`bytes` object. This means an object is considered :term:`path-"
"like <path-like object>` if it implements :class:`os.PathLike` or is a :"
"class:`str` or :class:`bytes` object which represents a file system path. "
"Code can use :func:`os.fspath`, :func:`os.fsdecode`, or :func:`os.fsencode` "
"to explicitly get a :class:`str` and/or :class:`bytes` representation of a "
"path-like object."
msgstr ""
"Para resolver esta situação, foi definida uma nova interface representada "
"por :class:`os.PathLike`. Ao implementar o método :meth:`~os.PathLike."
"__fspath__`, um objeto sinaliza que representa um caminho. Um objeto pode "
"então fornecer uma representação de baixo nível de um caminho do sistema de "
"ficheiros como um objeto :class:`str` ou :class:`bytes`. Isto significa que "
"um objeto é considerado :term:`semelhante a um caminho <path-like object>` "
"se implementar :class:`os.PathLike` ou for um objeto :class:`str` ou :class:"
"`bytes` que representa um caminho do sistema de ficheiros. O código pode "
"usar :func:`os.fspath`, :func:`os.fsdecode` ou :func:`os.fsencode` para "
"obter explicitamente uma representação :class:`str` e/ou :class:`bytes` de "
"um objeto semelhante a um caminho."

#: ../../whatsnew/3.6.rst:426
msgid ""
"The built-in :func:`open` function has been updated to accept :class:`os."
"PathLike` objects, as have all relevant functions in the :mod:`os` and :mod:"
"`os.path` modules, and most other functions and classes in the standard "
"library.  The :class:`os.DirEntry` class and relevant classes in :mod:"
"`pathlib` have also been updated to implement :class:`os.PathLike`."
msgstr ""
"A função integrada :func:`open` foi atualizada para aceitar objetos :class:"
"`os.PathLike`, assim como todas as funções relevantes nos módulos :mod:`os` "
"e :mod:`os.path`, e a maioria das outras funções e classes na biblioteca "
"padrão. A classe :class:`os.DirEntry` e as classes relevantes em :mod:"
"`pathlib` também foram atualizadas para implementar :class:`os.PathLike`."

#: ../../whatsnew/3.6.rst:433
msgid ""
"The hope is that updating the fundamental functions for operating on file "
"system paths will lead to third-party code to implicitly support all :term:"
"`path-like objects <path-like object>` without any code changes, or at least "
"very minimal ones (e.g. calling :func:`os.fspath` at the beginning of code "
"before operating on a path-like object)."
msgstr ""
"A expectativa é que a atualização das funções fundamentais para operar em "
"caminhos do sistema de ficheiros leve a que o código de terceiros suporte "
"implicitamente todos os :term:`objetos semelhantes a caminhos <path-like "
"object>` sem quaisquer alterações de código, ou pelo menos com alterações "
"mínimas (por exemplo, chamando :func:`os.fspath` no início do código antes "
"de operar num objeto semelhante a um caminho)."

#: ../../whatsnew/3.6.rst:440
msgid ""
"Here are some examples of how the new interface allows for :class:`pathlib."
"Path` to be used more easily and transparently with pre-existing code::"
msgstr ""
"Aqui estão alguns exemplos de como a nova interface permite que :class:"
"`pathlib.Path` seja usado de forma mais fácil e transparente com código pré-"
"existente::"

#: ../../whatsnew/3.6.rst:444
msgid ""
">>> import pathlib\n"
">>> with open(pathlib.Path(\"README\")) as f:\n"
"...     contents = f.read()\n"
"...\n"
">>> import os.path\n"
">>> os.path.splitext(pathlib.Path(\"some_file.txt\"))\n"
"('some_file', '.txt')\n"
">>> os.path.join(\"/a/b\", pathlib.Path(\"c\"))\n"
"'/a/b/c'\n"
">>> import os\n"
">>> os.fspath(pathlib.Path(\"some_file.txt\"))\n"
"'some_file.txt'"
msgstr ""
">>> import pathlib\n"
">>> with open(pathlib.Path(\"README\")) as f:\n"
"...     conteudo = f.read()\n"
"...\n"
">>> import os.path\n"
">>> os.path.splitext(pathlib.Path(\"algum_ficheiro.txt\"))\n"
"('algum_ficheiro', '.txt')\n"
">>> os.path.join(\"/a/b\", pathlib.Path(\"c\"))\n"
"'/a/b/c'\n"
">>> import os\n"
">>> os.fspath(pathlib.Path(\"algum_ficheiro.txt\"))\n"
"'algum_ficheiro.txt'"

#: ../../whatsnew/3.6.rst:457
msgid ""
"(Implemented by Brett Cannon, Ethan Furman, Dusty Phillips, and Jelle "
"Zijlstra.)"
msgstr ""
"(Implementado por Brett Cannon, Ethan Furman, Dusty Phillips e Jelle "
"Zijlstra.)"

#: ../../whatsnew/3.6.rst:461
msgid ":pep:`519` -- Adding a file system path protocol"
msgstr ":pep:`519` — Adição de um protocolo de caminho do sistema de ficheiros"

#: ../../whatsnew/3.6.rst:462
msgid "PEP written by Brett Cannon and Koos Zevenhoven."
msgstr "PEP escrita por Brett Cannon e Koos Zevenhoven."

#: ../../whatsnew/3.6.rst:468
msgid "PEP 495: Local Time Disambiguation"
msgstr "PEP 495: Desambiguação de hora local"

#: ../../whatsnew/3.6.rst:470
msgid ""
"In most world locations, there have been and will be times when local clocks "
"are moved back.  In those times, intervals are introduced in which local "
"clocks show the same time twice in the same day. In these situations, the "
"information displayed on a local clock (or stored in a Python datetime "
"instance) is insufficient to identify a particular moment in time."
msgstr ""
"Na maioria das localizações do mundo, houve e haverá momentos em que os "
"relógios locais são atrasados. Nessas alturas, são introduzidos intervalos "
"em que os relógios locais mostram a mesma hora duas vezes no mesmo dia. "
"Nessas situações, a informação exibida num relógio local (ou armazenada numa "
"instância de datetime do Python) é insuficiente para identificar um momento "
"específico no tempo."

#: ../../whatsnew/3.6.rst:476
msgid ""
":pep:`495` adds the new *fold* attribute to instances of :class:`datetime."
"datetime` and :class:`datetime.time` classes to differentiate between two "
"moments in time for which local times are the same::"
msgstr ""
"A :pep:`495` adiciona o novo atributo *fold* a instâncias das classes :class:"
"`datetime.datetime` e :class:`datetime.time` para diferenciar entre dois "
"momentos no tempo para os quais as horas locais são as mesmas::"

#: ../../whatsnew/3.6.rst:480
msgid ""
">>> u0 = datetime(2016, 11, 6, 4, tzinfo=timezone.utc)\n"
">>> for i in range(4):\n"
"...     u = u0 + i*HOUR\n"
"...     t = u.astimezone(Eastern)\n"
"...     print(u.time(), 'UTC =', t.time(), t.tzname(), t.fold)\n"
"...\n"
"04:00:00 UTC = 00:00:00 EDT 0\n"
"05:00:00 UTC = 01:00:00 EDT 0\n"
"06:00:00 UTC = 01:00:00 EST 1\n"
"07:00:00 UTC = 02:00:00 EST 0"
msgstr ""
">>> u0 = datetime(2016, 11, 6, 4, tzinfo=timezone.utc)\n"
">>> for i in range(4):\n"
"...     u = u0 + i*HOUR\n"
"...     t = u.astimezone(Eastern)\n"
"...     print(u.time(), 'UTC =', t.time(), t.tzname(), t.fold)\n"
"...\n"
"04:00:00 UTC = 00:00:00 EDT 0\n"
"05:00:00 UTC = 01:00:00 EDT 0\n"
"06:00:00 UTC = 01:00:00 EST 1\n"
"07:00:00 UTC = 02:00:00 EST 0"

#: ../../whatsnew/3.6.rst:491
msgid ""
"The values of the :attr:`fold <datetime.datetime.fold>` attribute have the "
"value ``0`` for all instances except those that represent the second "
"(chronologically) moment in time in an ambiguous case."
msgstr ""
"Os valores do atributo :attr:`fold <datetime.datetime.fold>` têm o valor "
"``0`` para todas as instâncias, exceto aquelas que representam o segundo "
"momento (cronologicamente) no tempo num caso ambíguo."

#: ../../whatsnew/3.6.rst:497
msgid ":pep:`495` -- Local Time Disambiguation"
msgstr ":pep:`495` — Desambiguação de hora local"

#: ../../whatsnew/3.6.rst:498
msgid ""
"PEP written by Alexander Belopolsky and Tim Peters, implementation by "
"Alexander Belopolsky."
msgstr ""
"PEP escrita por Alexander Belopolsky e Tim Peters, implementação de "
"Alexander Belopolsky."

#: ../../whatsnew/3.6.rst:505
msgid "PEP 529: Change Windows filesystem encoding to UTF-8"
msgstr ""
"PEP 529: Alterar a codificação do sistema de ficheiros do Windows para UTF-8"

#: ../../whatsnew/3.6.rst:507
msgid ""
"Representing filesystem paths is best performed with str (Unicode) rather "
"than bytes. However, there are some situations where using bytes is "
"sufficient and correct."
msgstr ""
"A representação de caminhos do sistema de ficheiros é melhor realizada com "
"str (Unicode) do que com bytes. No entanto, há situações em que o uso de "
"bytes é suficiente e correto."

#: ../../whatsnew/3.6.rst:511
msgid ""
"Prior to Python 3.6, data loss could result when using bytes paths on "
"Windows. With this change, using bytes to represent paths is now supported "
"on Windows, provided those bytes are encoded with the encoding returned by :"
"func:`sys.getfilesystemencoding`, which now defaults to ``'utf-8'``."
msgstr ""
"Antes do Python 3.6, poderia ocorrer perda de dados ao usar caminhos em "
"bytes no Windows. Com esta alteração, o uso de bytes para representar "
"caminhos é agora suportado no Windows, desde que esses bytes estejam "
"codificados com a codificação retornada por :func:`sys."
"getfilesystemencoding`, que agora é ``'utf-8'`` por defeito."

#: ../../whatsnew/3.6.rst:516
msgid ""
"Applications that do not use str to represent paths should use :func:`os."
"fsencode` and :func:`os.fsdecode` to ensure their bytes are correctly "
"encoded. To revert to the previous behaviour, set :envvar:"
"`PYTHONLEGACYWINDOWSFSENCODING` or call :func:`sys."
"_enablelegacywindowsfsencoding`."
msgstr ""
"Aplicações que não usam str para representar caminhos devem usar :func:`os."
"fsencode` e :func:`os.fsdecode` para garantir que os seus bytes estão "
"corretamente codificados. Para reverter para o comportamento anterior, "
"defina :envvar:`PYTHONLEGACYWINDOWSFSENCODING` ou chame :func:`sys."
"_enablelegacywindowsfsencoding`."

#: ../../whatsnew/3.6.rst:522
msgid ""
"See :pep:`529` for more information and discussion of code modifications "
"that may be required."
msgstr ""
"Consulte a :pep:`529` para obter mais informações e discussão sobre "
"modificações de código que podem ser necessárias."

#: ../../whatsnew/3.6.rst:529
msgid "PEP 528: Change Windows console encoding to UTF-8"
msgstr "PEP 528: Alterar a codificação da consola do Windows para UTF-8"

#: ../../whatsnew/3.6.rst:531
msgid ""
"The default console on Windows will now accept all Unicode characters and "
"provide correctly read str objects to Python code. ``sys.stdin``, ``sys."
"stdout`` and ``sys.stderr`` now default to utf-8 encoding."
msgstr ""
"A consola predefinida no Windows agora aceita todos os caracteres Unicode e "
"fornece objetos str lidos corretamente ao código Python. ``sys.stdin``, "
"``sys.stdout`` e ``sys.stderr`` agora usam a codificação utf-8 por defeito."

#: ../../whatsnew/3.6.rst:535
msgid ""
"This change only applies when using an interactive console, and not when "
"redirecting files or pipes. To revert to the previous behaviour for "
"interactive console use, set :envvar:`PYTHONLEGACYWINDOWSSTDIO`."
msgstr ""
"Esta alteração aplica-se apenas ao usar uma consola interativa, e não ao "
"redirecionar ficheiros ou pipes. Para reverter para o comportamento anterior "
"em consolas interativas, defina :envvar:`PYTHONLEGACYWINDOWSSTDIO`."

#: ../../whatsnew/3.6.rst:541
msgid ":pep:`528` -- Change Windows console encoding to UTF-8"
msgstr ":pep:`528` — Alterar a codificação da consola do Windows para UTF-8"

#: ../../whatsnew/3.6.rst:542
msgid "PEP written and implemented by Steve Dower."
msgstr "PEP escrita e implementada por Steve Dower."

#: ../../whatsnew/3.6.rst:548
msgid "PEP 520: Preserving Class Attribute Definition Order"
msgstr "PEP 520: Preservar a ordem de definição de atributos de classe"

#: ../../whatsnew/3.6.rst:550
msgid ""
"Attributes in a class definition body have a natural ordering: the same "
"order in which the names appear in the source.  This order is now preserved "
"in the new class's :attr:`~type.__dict__` attribute."
msgstr ""
"Os atributos no corpo de uma definição de classe têm uma ordem natural: a "
"mesma ordem em que os nomes aparecem no código-fonte. Esta ordem é agora "
"preservada no atributo :attr:`~type.__dict__` da nova classe."

#: ../../whatsnew/3.6.rst:554
msgid ""
"Also, the effective default class *execution* namespace (returned from :ref:"
"`type.__prepare__() <prepare>`) is now an insertion-order-preserving mapping."
msgstr ""
"Além disso, o *namespace* de execução predefinido da classe (retornado de :"
"ref:`type.__prepare__() <prepare>`) é agora um mapeamento que preserva a "
"ordem de inserção."

#: ../../whatsnew/3.6.rst:560
msgid ":pep:`520` -- Preserving Class Attribute Definition Order"
msgstr ":pep:`520` — Preservar a ordem de definição de atributos de classe"

#: ../../whatsnew/3.6.rst:561 ../../whatsnew/3.6.rst:575
msgid "PEP written and implemented by Eric Snow."
msgstr "PEP escrita e implementada por Eric Snow."

#: ../../whatsnew/3.6.rst:567
msgid "PEP 468: Preserving Keyword Argument Order"
msgstr "PEP 468: Preservar a ordem de argumentos nomeados"

#: ../../whatsnew/3.6.rst:569
msgid ""
"``**kwargs`` in a function signature is now guaranteed to be an insertion-"
"order-preserving mapping."
msgstr ""
"``**kwargs`` numa assinatura de função é agora garantidamente um mapeamento "
"que preserva a ordem de inserção."

#: ../../whatsnew/3.6.rst:574
msgid ":pep:`468` -- Preserving Keyword Argument Order"
msgstr ":pep:`468` — Preservar a ordem de argumentos nomeados"

#: ../../whatsnew/3.6.rst:581
msgid "New :ref:`dict <typesmapping>` implementation"
msgstr "Nova implementação de :ref:`dict <typesmapping>`"

#: ../../whatsnew/3.6.rst:583
msgid ""
"The :ref:`dict <typesmapping>` type now uses a \"compact\" representation "
"based on `a proposal by Raymond Hettinger <https://mail.python.org/pipermail/"
"python-dev/2012-December/123028.html>`_ which was `first implemented by PyPy "
"<https://morepypy.blogspot.com/2015/01/faster-more-memory-efficient-and-more."
"html>`_. The memory usage of the new :func:`dict` is between 20% and 25% "
"smaller compared to Python 3.5."
msgstr ""
"O tipo :ref:`dict <typesmapping>` agora usa uma representação \"compacta\" "
"baseada em `uma proposta de Raymond Hettinger <https://mail.python.org/"
"pipermail/python-dev/2012-December/123028.html>`_, que foi `implementada "
"pela primeira vez pelo PyPy <https://morepypy.blogspot.com/2015/01/faster-"
"more-memory-efficient-and-more.html>`_. O uso de memória do novo :func:"
"`dict` é entre 20% e 25% menor em comparação com o Python 3.5."

#: ../../whatsnew/3.6.rst:591
msgid ""
"The order-preserving aspect of this new implementation is considered an "
"implementation detail and should not be relied upon (this may change in the "
"future, but it is desired to have this new dict implementation in the "
"language for a few releases before changing the language spec to mandate "
"order-preserving semantics for all current and future Python "
"implementations; this also helps preserve backwards-compatibility with older "
"versions of the language where random iteration order is still in effect, e."
"g. Python 3.5)."
msgstr ""
"O aspeto de preservação da ordem desta nova implementação é considerado um "
"detalhe de implementação e não deve ser dependido (isto pode mudar no "
"futuro, mas é desejável ter esta nova implementação de dicionário na "
"linguagem por algumas versões antes de alterar a especificação da linguagem "
"para exigir semânticas de preservação de ordem para todas as implementações "
"atuais e futuras do Python; isto também ajuda a preservar a compatibilidade "
"retroativa com versões mais antigas da linguagem onde a ordem de iteração "
"aleatória ainda está em vigor, por exemplo, Python 3.5)."

#: ../../whatsnew/3.6.rst:600
msgid ""
"(Contributed by INADA Naoki in :issue:`27350`. Idea `originally suggested by "
"Raymond Hettinger <https://mail.python.org/pipermail/python-dev/2012-"
"December/123028.html>`_.)"
msgstr ""
"(Contribuído por INADA Naoki em :issue:`27350`. Ideia `originalmente "
"sugerida por Raymond Hettinger <https://mail.python.org/pipermail/python-"
"dev/2012-December/123028.html>`_.)"

#: ../../whatsnew/3.6.rst:608
msgid "PEP 523: Adding a frame evaluation API to CPython"
msgstr "PEP 523: Adicionar uma API de avaliação de *frames* ao CPython"

#: ../../whatsnew/3.6.rst:610
msgid ""
"While Python provides extensive support to customize how code executes, one "
"place it has not done so is in the evaluation of frame objects.  If you "
"wanted some way to intercept frame evaluation in Python there really wasn't "
"any way without directly manipulating function pointers for defined "
"functions."
msgstr ""
"Embora o Python forneça suporte extenso para personalizar a execução de "
"código, uma área em que não o fez é na avaliação de objetos *frame*. Se "
"quisesse interceptar a avaliação de *frames* no Python, não havia realmente "
"nenhuma forma sem manipular diretamente ponteiros de função para funções "
"definidas."

#: ../../whatsnew/3.6.rst:616
msgid ""
":pep:`523` changes this by providing an API to make frame evaluation "
"pluggable at the C level. This will allow for tools such as debuggers and "
"JITs to intercept frame evaluation before the execution of Python code "
"begins. This enables the use of alternative evaluation implementations for "
"Python code, tracking frame evaluation, etc."
msgstr ""
"A :pep:`523` altera isto ao fornecer uma API para tornar a avaliação de "
"*frames* plugável ao nível de C. Isto permitirá que ferramentas como "
"*debuggers* e JITs interceptem a avaliação de *frames* antes do início da "
"execução do código Python. Isto permite o uso de implementações alternativas "
"de avaliação para código Python, rastreamento de avaliação de *frames*, etc."

#: ../../whatsnew/3.6.rst:623
msgid ""
"This API is not part of the limited C API and is marked as private to signal "
"that usage of this API is expected to be limited and only applicable to very "
"select, low-level use-cases. Semantics of the API will change with Python as "
"necessary."
msgstr ""
"Esta API não faz parte da API C limitada e está marcada como privada para "
"sinalizar que o uso desta API é esperado ser limitado e aplicável apenas a "
"casos de uso muito específicos e de baixo nível. A semântica da API mudará "
"com o Python conforme necessário."

#: ../../whatsnew/3.6.rst:630
msgid ":pep:`523` -- Adding a frame evaluation API to CPython"
msgstr ":pep:`523` — Adicionar uma API de avaliação de *frames* ao CPython"

#: ../../whatsnew/3.6.rst:631
msgid "PEP written by Brett Cannon and Dino Viehland."
msgstr "PEP escrita por Brett Cannon e Dino Viehland."

#: ../../whatsnew/3.6.rst:637
msgid "PYTHONMALLOC environment variable"
msgstr "Variável de ambiente PYTHONMALLOC"

#: ../../whatsnew/3.6.rst:639
msgid ""
"The new :envvar:`PYTHONMALLOC` environment variable allows setting the "
"Python memory allocators and installing debug hooks."
msgstr ""
"A nova variável de ambiente :envvar:`PYTHONMALLOC` permite definir os "
"alocadores de memória do Python e instalar *hooks* de depuração."

#: ../../whatsnew/3.6.rst:642
msgid ""
"It is now possible to install debug hooks on Python memory allocators on "
"Python compiled in release mode using ``PYTHONMALLOC=debug``. Effects of "
"debug hooks:"
msgstr ""
"Agora é possível instalar *hooks* de depuração nos alocadores de memória do "
"Python em Python compilado em modo de lançamento usando "
"``PYTHONMALLOC=debug``. Efeitos dos *hooks* de depuração:"

#: ../../whatsnew/3.6.rst:645
msgid "Newly allocated memory is filled with the byte ``0xCB``"
msgstr "A memória recém-alocada é preenchida com o byte ``0xCB``"

#: ../../whatsnew/3.6.rst:646
msgid "Freed memory is filled with the byte ``0xDB``"
msgstr "A memória libertada é preenchida com o byte ``0xDB``"

#: ../../whatsnew/3.6.rst:647
msgid ""
"Detect violations of the Python memory allocator API. For example, :c:func:"
"`PyObject_Free` called on a memory block allocated by :c:func:`PyMem_Malloc`."
msgstr ""
"Detetar violações da API do alocador de memória do Python. Por exemplo, :c:"
"func:`PyObject_Free` chamado num bloco de memória alocado por :c:func:"
"`PyMem_Malloc`."

#: ../../whatsnew/3.6.rst:650
msgid "Detect writes before the start of a buffer (buffer underflows)"
msgstr "Detetar escritas antes do início de um *buffer* (*buffer underflows*)"

#: ../../whatsnew/3.6.rst:651
msgid "Detect writes after the end of a buffer (buffer overflows)"
msgstr "Detetar escritas após o fim de um *buffer* (*buffer overflows*)"

#: ../../whatsnew/3.6.rst:652
msgid ""
"Check that the :term:`GIL <global interpreter lock>` is held when allocator "
"functions of :c:macro:`PYMEM_DOMAIN_OBJ` (ex: :c:func:`PyObject_Malloc`) "
"and :c:macro:`PYMEM_DOMAIN_MEM` (ex: :c:func:`PyMem_Malloc`) domains are "
"called."
msgstr ""
"Verificar se o :term:`GIL <global interpreter lock>` está retido quando as "
"funções de alocação dos domínios :c:macro:`PYMEM_DOMAIN_OBJ` (ex: :c:func:"
"`PyObject_Malloc`) e :c:macro:`PYMEM_DOMAIN_MEM` (ex: :c:func:"
"`PyMem_Malloc`) são chamadas."

#: ../../whatsnew/3.6.rst:656
msgid "Checking if the GIL is held is also a new feature of Python 3.6."
msgstr ""
"Verificar se o GIL está retido é também uma nova funcionalidade do Python "
"3.6."

#: ../../whatsnew/3.6.rst:658
msgid ""
"See the :c:func:`PyMem_SetupDebugHooks` function for debug hooks on Python "
"memory allocators."
msgstr ""
"Consulte a função :c:func:`PyMem_SetupDebugHooks` para *hooks* de depuração "
"nos alocadores de memória do Python."

#: ../../whatsnew/3.6.rst:661
msgid ""
"It is now also possible to force the usage of the :c:func:`malloc` allocator "
"of the C library for all Python memory allocations using "
"``PYTHONMALLOC=malloc``. This is helpful when using external memory "
"debuggers like Valgrind on a Python compiled in release mode."
msgstr ""
"Agora também é possível forçar o uso do alocador :c:func:`malloc` da "
"biblioteca C para todas as alocações de memória do Python usando "
"``PYTHONMALLOC=malloc``. Isto é útil ao usar *debuggers* de memória externos "
"como o Valgrind em Python compilado em modo de lançamento."

#: ../../whatsnew/3.6.rst:666
msgid ""
"On error, the debug hooks on Python memory allocators now use the :mod:"
"`tracemalloc` module to get the traceback where a memory block was allocated."
msgstr ""
"Em caso de erro, os *hooks* de depuração nos alocadores de memória do Python "
"agora usam o módulo :mod:`tracemalloc` para obter o *traceback* de onde um "
"bloco de memória foi alocado."

#: ../../whatsnew/3.6.rst:670
msgid ""
"Example of fatal error on buffer overflow using ``python3.6 -X "
"tracemalloc=5`` (store 5 frames in traces)::"
msgstr ""
"Exemplo de erro fatal em *buffer overflow* usando ``python3.6 -X "
"tracemalloc=5`` (armazenar 5 *frames* nos *traces*):"

#: ../../whatsnew/3.6.rst:673
msgid ""
"Debug memory block at address p=0x7fbcd41666f8: API 'o'\n"
"    4 bytes originally requested\n"
"    The 7 pad bytes at p-7 are FORBIDDENBYTE, as expected.\n"
"    The 8 pad bytes at tail=0x7fbcd41666fc are not all FORBIDDENBYTE "
"(0xfb):\n"
"        at tail+0: 0x02 *** OUCH\n"
"        at tail+1: 0xfb\n"
"        at tail+2: 0xfb\n"
"        at tail+3: 0xfb\n"
"        at tail+4: 0xfb\n"
"        at tail+5: 0xfb\n"
"        at tail+6: 0xfb\n"
"        at tail+7: 0xfb\n"
"    The block was made by call #1233329 to debug malloc/realloc.\n"
"    Data at p: 1a 2b 30 00\n"
"\n"
"Memory block allocated at (most recent call first):\n"
"  File \"test/test_bytes.py\", line 323\n"
"  File \"unittest/case.py\", line 600\n"
"  File \"unittest/case.py\", line 648\n"
"  File \"unittest/suite.py\", line 122\n"
"  File \"unittest/suite.py\", line 84\n"
"\n"
"Fatal Python error: bad trailing pad byte\n"
"\n"
"Current thread 0x00007fbcdbd32700 (most recent call first):\n"
"  File \"test/test_bytes.py\", line 323 in test_hex\n"
"  File \"unittest/case.py\", line 600 in run\n"
"  File \"unittest/case.py\", line 648 in __call__\n"
"  File \"unittest/suite.py\", line 122 in run\n"
"  File \"unittest/suite.py\", line 84 in __call__\n"
"  File \"unittest/suite.py\", line 122 in run\n"
"  File \"unittest/suite.py\", line 84 in __call__\n"
"  ..."
msgstr ""
"Bloco de memória de depuração no endereço p=0x7fbcd41666f8: API 'o'\n"
"    4 bytes solicitados originalmente\n"
"    Os 7 bytes de preenchimento em p-7 são FORBIDDENBYTE, como esperado.\n"
"    Os 8 bytes de preenchimento em tail=0x7fbcd41666fc não são todos "
"FORBIDDENBYTE (0xfb):\n"
"        em tail+0: 0x02 *** OUCH\n"
"        em tail+1: 0xfb\n"
"        em tail+2: 0xfb\n"
"        em tail+3: 0xfb\n"
"        em tail+4: 0xfb\n"
"        em tail+5: 0xfb\n"
"        em tail+6: 0xfb\n"
"        em tail+7: 0xfb\n"
"    O bloco foi criado pela chamada #1233329 para debug malloc/realloc.\n"
"    Dados em p: 1a 2b 30 00\n"
"\n"
"Bloco de memória alocado em (chamada mais recente primeiro):\n"
"  Ficheiro \"test/test_bytes.py\", linha 323\n"
"  Ficheiro \"unittest/case.py\", linha 600\n"
"  Ficheiro \"unittest/case.py\", linha 648\n"
"  Ficheiro \"unittest/suite.py\", linha 122\n"
"  Ficheiro \"unittest/suite.py\", linha 84\n"
"\n"
"Erro fatal do Python: byte de preenchimento final inválido\n"
"\n"
"Thread atual 0x00007fbcdbd32700 (chamada mais recente primeiro):\n"
"  Ficheiro \"test/test_bytes.py\", linha 323 em test_hex\n"
"  Ficheiro \"unittest/case.py\", linha 600 em run\n"
"  Ficheiro \"unittest/case.py\", linha 648 em __call__\n"
"  Ficheiro \"unittest/suite.py\", linha 122 em run\n"
"  Ficheiro \"unittest/suite.py\", linha 84 em __call__\n"
"  Ficheiro \"unittest/suite.py\", linha 122 em run\n"
"  Ficheiro \"unittest/suite.py\", linha 84 em __call__\n"
"  ..."

#: ../../whatsnew/3.6.rst:707
msgid "(Contributed by Victor Stinner in :issue:`26516` and :issue:`26564`.)"
msgstr "(Contribuído por Victor Stinner em :issue:`26516` e :issue:`26564`.)"

#: ../../whatsnew/3.6.rst:713
msgid "DTrace and SystemTap probing support"
msgstr "Suporte de sondagem com DTrace e SystemTap"

#: ../../whatsnew/3.6.rst:715
msgid ""
"Python can now be built ``--with-dtrace`` which enables static markers for "
"the following events in the interpreter:"
msgstr ""
"O Python pode agora ser compilado com ``--with-dtrace``, o que ativa "
"marcadores estáticos para os seguintes eventos no interpretador:"

#: ../../whatsnew/3.6.rst:718
msgid "function call/return"
msgstr "chamada/retorno de função"

#: ../../whatsnew/3.6.rst:720
msgid "garbage collection started/finished"
msgstr "recolha de lixo iniciada/terminada"

#: ../../whatsnew/3.6.rst:722
msgid "line of code executed."
msgstr "linha de código executada."

#: ../../whatsnew/3.6.rst:724
msgid ""
"This can be used to instrument running interpreters in production, without "
"the need to recompile specific :ref:`debug builds <debug-build>` or "
"providing application-specific profiling/debugging code."
msgstr ""
"Isto pode ser usado para instrumentar interpretadores em execução em "
"produção, sem necessidade de recompilar :ref:`compilações de depuração "
"<debug-build>` específicas ou fornecer código de perfilagem/depuração "
"específico da aplicação."

#: ../../whatsnew/3.6.rst:728
msgid "More details in :ref:`instrumentation`."
msgstr "Mais detalhes em :ref:`instrumentation`."

#: ../../whatsnew/3.6.rst:730
msgid ""
"The current implementation is tested on Linux and macOS.  Additional markers "
"may be added in the future."
msgstr ""
"A implementação atual foi testada no Linux e no macOS. Marcadores adicionais "
"podem ser adicionados no futuro."

#: ../../whatsnew/3.6.rst:733
msgid ""
"(Contributed by Łukasz Langa in :issue:`21590`, based on patches by Jesús "
"Cea Avión, David Malcolm, and Nikhil Benesch.)"
msgstr ""
"(Contribuído por Łukasz Langa em :issue:`21590`, baseado em *patches* de "
"Jesús Cea Avión, David Malcolm e Nikhil Benesch.)"

#: ../../whatsnew/3.6.rst:738
msgid "Other Language Changes"
msgstr "Outras Alterações à Linguagem"

#: ../../whatsnew/3.6.rst:740
msgid "Some smaller changes made to the core Python language are:"
msgstr "Algumas alterações menores feitas à linguagem principal do Python são:"

#: ../../whatsnew/3.6.rst:742
msgid ""
"A ``global`` or ``nonlocal`` statement must now textually appear before the "
"first use of the affected name in the same scope. Previously this was a :exc:"
"`SyntaxWarning`."
msgstr ""
"Uma instrução ``global`` ou ``nonlocal`` deve agora aparecer textualmente "
"antes da primeira utilização do nome afetado no mesmo âmbito. Anteriormente, "
"isto gerava um :exc:`SyntaxWarning`."

#: ../../whatsnew/3.6.rst:746
msgid ""
"It is now possible to set a :ref:`special method <specialnames>` to ``None`` "
"to indicate that the corresponding operation is not available. For example, "
"if a class sets :meth:`__iter__` to ``None``, the class is not iterable. "
"(Contributed by Andrew Barnert and Ivan Levkivskyi in :issue:`25958`.)"
msgstr ""

#: ../../whatsnew/3.6.rst:752
msgid ""
"Long sequences of repeated traceback lines are now abbreviated as "
"``\"[Previous line repeated {count} more times]\"`` (see :ref:`whatsnew36-"
"traceback` for an example). (Contributed by Emanuel Barry in :issue:`26823`.)"
msgstr ""
"Sequências longas de linhas repetidas de *traceback* são agora abreviadas "
"como ``\"[Linha anterior repetida {count} vezes]\"`` (veja :ref:`whatsnew36-"
"traceback` para um exemplo). (Contribuído por Emanuel Barry em :issue:"
"`26823`.)"

#: ../../whatsnew/3.6.rst:757
msgid ""
"Import now raises the new exception :exc:`ModuleNotFoundError` (subclass of :"
"exc:`ImportError`) when it cannot find a module.  Code that currently checks "
"for ImportError (in try-except) will still work. (Contributed by Eric Snow "
"in :issue:`15767`.)"
msgstr ""
"A importação agora lança a nova exceção :exc:`ModuleNotFoundError` "
"(subclasse de :exc:`ImportError`) quando não consegue encontrar um módulo. "
"Código que atualmente verifica :exc:`ImportError` (em try-except) continuará "
"a funcionar. (Contribuído por Eric Snow em :issue:`15767`.)"

#: ../../whatsnew/3.6.rst:762
msgid ""
"Class methods relying on zero-argument ``super()`` will now work correctly "
"when called from metaclass methods during class creation. (Contributed by "
"Martin Teichmann in :issue:`23722`.)"
msgstr ""
"Métodos de classe que dependem de ``super()`` sem argumentos agora funcionam "
"corretamente quando chamados a partir de métodos de metaclasse durante a "
"criação de classe. (Contribuído por Martin Teichmann em :issue:`23722`.)"

#: ../../whatsnew/3.6.rst:768
msgid "New Modules"
msgstr "Novos Módulos"

#: ../../whatsnew/3.6.rst:773
msgid "secrets"
msgstr "secrets"

#: ../../whatsnew/3.6.rst:775
msgid ""
"The main purpose of the new :mod:`secrets` module is to provide an obvious "
"way to reliably generate cryptographically strong pseudo-random values "
"suitable for managing secrets, such as account authentication, tokens, and "
"similar."
msgstr ""
"O principal objetivo do novo módulo :mod:`secrets` é fornecer uma forma "
"clara de gerar valores pseudoaleatórios criptograficamente fortes, adequados "
"para gerir segredos, como autenticação de contas, *tokens* e similares."

#: ../../whatsnew/3.6.rst:781
msgid ""
"Note that the pseudo-random generators in the :mod:`random` module should "
"*NOT* be used for security purposes.  Use :mod:`secrets` on Python 3.6+ and :"
"func:`os.urandom` on Python 3.5 and earlier."
msgstr ""
"Note que os geradores pseudoaleatórios no módulo :mod:`random` *NÃO* devem "
"ser usados para fins de segurança. Use :mod:`secrets` no Python 3.6+ e :func:"
"`os.urandom` no Python 3.5 e anteriores."

#: ../../whatsnew/3.6.rst:787
msgid ":pep:`506` -- Adding A Secrets Module To The Standard Library"
msgstr ":pep:`506` — Adição de um módulo de segredos à biblioteca padrão"

#: ../../whatsnew/3.6.rst:788
msgid "PEP written and implemented by Steven D'Aprano."
msgstr "PEP escrita e implementada por Steven D'Aprano."

#: ../../whatsnew/3.6.rst:792
msgid "Improved Modules"
msgstr "Módulos Melhorados"

#: ../../whatsnew/3.6.rst:795
msgid "array"
msgstr "array"

#: ../../whatsnew/3.6.rst:797
msgid ""
"Exhausted iterators of :class:`array.array` will now stay exhausted even if "
"the iterated array is extended.  This is consistent with the behavior of "
"other mutable sequences."
msgstr ""
"Iteradores esgotados de :class:`array.array` agora permanecem esgotados "
"mesmo que o *array* iterado seja estendido. Isto é consistente com o "
"comportamento de outras sequências mutáveis."

#: ../../whatsnew/3.6.rst:801
msgid "Contributed by Serhiy Storchaka in :issue:`26492`."
msgstr "Contribuído por Serhiy Storchaka em :issue:`26492`."

#: ../../whatsnew/3.6.rst:804
msgid "ast"
msgstr "ast"

#: ../../whatsnew/3.6.rst:806
msgid ""
"The new :class:`ast.Constant` AST node has been added.  It can be used by "
"external AST optimizers for the purposes of constant folding."
msgstr ""
"Foi adicionado o novo nó AST :class:`ast.Constant`. Pode ser usado por "
"otimizadores AST externos para fins de *constant folding*."

#: ../../whatsnew/3.6.rst:809
msgid "Contributed by Victor Stinner in :issue:`26146`."
msgstr "Contribuído por Victor Stinner em :issue:`26146`."

#: ../../whatsnew/3.6.rst:813
msgid "asyncio"
msgstr "asyncio"

#: ../../whatsnew/3.6.rst:815
msgid ""
"Starting with Python 3.6 the ``asyncio`` module is no longer provisional and "
"its API is considered stable."
msgstr ""
"A partir do Python 3.6, o módulo ``asyncio`` já não é provisório e a sua API "
"é considerada estável."

#: ../../whatsnew/3.6.rst:818
msgid ""
"Notable changes in the :mod:`asyncio` module since Python 3.5.0 (all "
"backported to 3.5.x due to the provisional status):"
msgstr ""
"Alterações notáveis no módulo :mod:`asyncio` desde o Python 3.5.0 (todas "
"retroportadas para 3.5.x devido ao estado provisório):"

#: ../../whatsnew/3.6.rst:821
msgid ""
"The :func:`~asyncio.get_event_loop` function has been changed to always "
"return the currently running loop when called from coroutines and callbacks. "
"(Contributed by Yury Selivanov in :issue:`28613`.)"
msgstr ""
"A função :func:`~asyncio.get_event_loop` foi alterada para sempre retornar o "
"ciclo de eventos atualmente em execução quando chamada a partir de "
"*coroutines* e *callbacks*. (Contribuído por Yury Selivanov em :issue:"
"`28613`.)"

#: ../../whatsnew/3.6.rst:826
msgid ""
"The :func:`~asyncio.ensure_future` function and all functions that use it, "
"such as :meth:`loop.run_until_complete() <asyncio.loop.run_until_complete>`, "
"now accept all kinds of :term:`awaitable objects <awaitable>`. (Contributed "
"by Yury Selivanov.)"
msgstr ""
"A função :func:`~asyncio.ensure_future` e todas as funções que a usam, como :"
"meth:`loop.run_until_complete() <asyncio.loop.run_until_complete>`, agora "
"aceitam todos os tipos de :term:`objetos aguardáveis <awaitable>`. "
"(Contribuído por Yury Selivanov.)"

#: ../../whatsnew/3.6.rst:831
msgid ""
"New :func:`~asyncio.run_coroutine_threadsafe` function to submit coroutines "
"to event loops from other threads. (Contributed by Vincent Michel.)"
msgstr ""
"Nova função :func:`~asyncio.run_coroutine_threadsafe` para submeter "
"*coroutines* a ciclos de eventos a partir de outras *threads*. (Contribuído "
"por Vincent Michel.)"

#: ../../whatsnew/3.6.rst:835
msgid ""
"New :meth:`Transport.is_closing() <asyncio.BaseTransport.is_closing>` method "
"to check if the transport is closing or closed. (Contributed by Yury "
"Selivanov.)"
msgstr ""
"Novo método :meth:`Transport.is_closing() <asyncio.BaseTransport."
"is_closing>` para verificar se o transporte está a fechar ou fechado. "
"(Contribuído por Yury Selivanov.)"

#: ../../whatsnew/3.6.rst:839
msgid ""
"The :meth:`loop.create_server() <asyncio.loop.create_server>` method can now "
"accept a list of hosts. (Contributed by Yann Sionneau.)"
msgstr ""
"O método :meth:`loop.create_server() <asyncio.loop.create_server>` agora "
"pode aceitar uma lista de *hosts*. (Contribuído por Yann Sionneau.)"

#: ../../whatsnew/3.6.rst:843
msgid ""
"New :meth:`loop.create_future() <asyncio.loop.create_future>` method to "
"create Future objects.  This allows alternative event loop implementations, "
"such as `uvloop <https://github.com/MagicStack/uvloop>`_, to provide a "
"faster :class:`asyncio.Future` implementation. (Contributed by Yury "
"Selivanov in :issue:`27041`.)"
msgstr ""
"Novo método :meth:`loop.create_future() <asyncio.loop.create_future>` para "
"criar objetos Future. Isto permite que implementações alternativas de ciclos "
"de eventos, como `uvloop <https://github.com/MagicStack/uvloop>`_, forneçam "
"uma implementação mais rápida de :class:`asyncio.Future`. (Contribuído por "
"Yury Selivanov em :issue:`27041`.)"

#: ../../whatsnew/3.6.rst:850
msgid ""
"New :meth:`loop.get_exception_handler() <asyncio.loop."
"get_exception_handler>` method to get the current exception handler. "
"(Contributed by Yury Selivanov in :issue:`27040`.)"
msgstr ""
"Novo método :meth:`loop.get_exception_handler() <asyncio.loop."
"get_exception_handler>` para obter o *handler* de exceção atual. "
"(Contribuído por Yury Selivanov em :issue:`27040`.)"

#: ../../whatsnew/3.6.rst:854
msgid ""
"New :meth:`StreamReader.readuntil() <asyncio.StreamReader.readuntil>` method "
"to read data from the stream until a separator bytes sequence appears. "
"(Contributed by Mark Korenberg.)"
msgstr ""
"Novo método :meth:`StreamReader.readuntil() <asyncio.StreamReader."
"readuntil>` para ler dados do fluxo até que uma sequência de bytes "
"separadora apareça. (Contribuído por Mark Korenberg.)"

#: ../../whatsnew/3.6.rst:859
msgid ""
"The performance of :meth:`StreamReader.readexactly() <asyncio.StreamReader."
"readexactly>` has been improved. (Contributed by Mark Korenberg in :issue:"
"`28370`.)"
msgstr ""
"O desempenho de :meth:`StreamReader.readexactly() <asyncio.StreamReader."
"readexactly>` foi melhorado. (Contribuído por Mark Korenberg em :issue:"
"`28370`.)"

#: ../../whatsnew/3.6.rst:863
msgid ""
"The :meth:`loop.getaddrinfo() <asyncio.loop.getaddrinfo>` method is "
"optimized to avoid calling the system ``getaddrinfo`` function if the "
"address is already resolved. (Contributed by A. Jesse Jiryu Davis.)"
msgstr ""
"O método :meth:`loop.getaddrinfo() <asyncio.loop.getaddrinfo>` foi otimizado "
"para evitar chamar a função ``getaddrinfo`` do sistema se o endereço já "
"estiver resolvido. (Contribuído por A. Jesse Jiryu Davis.)"

#: ../../whatsnew/3.6.rst:868
msgid ""
"The :meth:`loop.stop() <asyncio.loop.stop>` method has been changed to stop "
"the loop immediately after the current iteration.  Any new callbacks "
"scheduled as a result of the last iteration will be discarded. (Contributed "
"by Guido van Rossum in :issue:`25593`.)"
msgstr ""
"O método :meth:`loop.stop() <asyncio.loop.stop>` foi alterado para parar o "
"ciclo imediatamente após a iteração atual. Quaisquer novos *callbacks* "
"agendados como resultado da última iteração serão descartados. (Contribuído "
"por Guido van Rossum em :issue:`25593`.)"

#: ../../whatsnew/3.6.rst:874
msgid ""
":meth:`Future.set_exception <asyncio.futures.Future.set_exception>` will now "
"raise :exc:`TypeError` when passed an instance of the :exc:`StopIteration` "
"exception. (Contributed by Chris Angelico in :issue:`26221`.)"
msgstr ""

#: ../../whatsnew/3.6.rst:879
msgid ""
"New :meth:`loop.connect_accepted_socket() <asyncio.loop."
"connect_accepted_socket>` method to be used by servers that accept "
"connections outside of asyncio, but that use asyncio to handle them. "
"(Contributed by Jim Fulton in :issue:`27392`.)"
msgstr ""
"Novo método :meth:`loop.connect_accepted_socket() <asyncio.loop."
"connect_accepted_socket>` para ser usado por servidores que aceitam ligações "
"fora do asyncio, mas que usam asyncio para as tratar. (Contribuído por Jim "
"Fulton em :issue:`27392`.)"

#: ../../whatsnew/3.6.rst:884
msgid ""
"``TCP_NODELAY`` flag is now set for all TCP transports by default. "
"(Contributed by Yury Selivanov in :issue:`27456`.)"
msgstr ""
"A *flag* ``TCP_NODELAY`` agora é definida por defeito para todos os "
"transportes TCP. (Contribuído por Yury Selivanov em :issue:`27456`.)"

#: ../../whatsnew/3.6.rst:887
msgid ""
"New :meth:`loop.shutdown_asyncgens() <asyncio.loop.shutdown_asyncgens>` to "
"properly close pending asynchronous generators before closing the loop. "
"(Contributed by Yury Selivanov in :issue:`28003`.)"
msgstr ""
"Novo método :meth:`loop.shutdown_asyncgens() <asyncio.loop."
"shutdown_asyncgens>` para fechar corretamente geradores assíncronos "
"pendentes antes de fechar o ciclo. (Contribuído por Yury Selivanov em :issue:"
"`28003`.)"

#: ../../whatsnew/3.6.rst:892
msgid ""
":class:`Future <asyncio.Future>` and :class:`Task <asyncio.Task>` classes "
"now have an optimized C implementation which makes asyncio code up to 30% "
"faster. (Contributed by Yury Selivanov and INADA Naoki in :issue:`26081` "
"and :issue:`28544`.)"
msgstr ""
"As classes :class:`Future <asyncio.Future>` e :class:`Task <asyncio.Task>` "
"agora têm uma implementação otimizada em C, que torna o código asyncio até "
"30% mais rápido. (Contribuído por Yury Selivanov e INADA Naoki em :issue:"
"`26081` e :issue:`28544`.)"

#: ../../whatsnew/3.6.rst:900
msgid "binascii"
msgstr "binascii"

#: ../../whatsnew/3.6.rst:902
msgid ""
"The :func:`~binascii.b2a_base64` function now accepts an optional *newline* "
"keyword argument to control whether the newline character is appended to the "
"return value. (Contributed by Victor Stinner in :issue:`25357`.)"
msgstr ""
"A função :func:`~binascii.b2a_base64` agora aceita um argumento opcional "
"*newline* para controlar se o carácter de nova linha é anexado ao valor de "
"retorno. (Contribuído por Victor Stinner em :issue:`25357`.)"

#: ../../whatsnew/3.6.rst:909
msgid "cmath"
msgstr "cmath"

#: ../../whatsnew/3.6.rst:911
msgid ""
"The new :const:`cmath.tau` (*τ*) constant has been added. (Contributed by "
"Lisa Roach in :issue:`12345`, see :pep:`628` for details.)"
msgstr ""
"Foi adicionada a nova constante :const:`cmath.tau` (*τ*). (Contribuído por "
"Lisa Roach em :issue:`12345`, veja :pep:`628` para detalhes.)"

#: ../../whatsnew/3.6.rst:914
msgid ""
"New constants: :const:`cmath.inf` and :const:`cmath.nan` to match :const:"
"`math.inf` and :const:`math.nan`, and also :const:`cmath.infj` and :const:"
"`cmath.nanj` to match the format used by complex repr. (Contributed by Mark "
"Dickinson in :issue:`23229`.)"
msgstr ""
"Novas constantes: :const:`cmath.inf` e :const:`cmath.nan` para corresponder "
"a :const:`math.inf` e :const:`math.nan`, e também :const:`cmath.infj` e :"
"const:`cmath.nanj` para corresponder ao formato usado pela representação "
"complexa. (Contribuído por Mark Dickinson em :issue:`23229`.)"

#: ../../whatsnew/3.6.rst:921
msgid "collections"
msgstr "collections"

#: ../../whatsnew/3.6.rst:923
msgid ""
"The new :class:`~collections.abc.Collection` abstract base class has been "
"added to represent sized iterable container classes. (Contributed by Ivan "
"Levkivskyi, docs by Neil Girdhar in :issue:`27598`.)"
msgstr ""
"Foi adicionada a nova classe base abstrata :class:`~collections.abc."
"Collection` para representar classes de contentores iteráveis com tamanho. "
"(Contribuído por Ivan Levkivskyi, documentação por Neil Girdhar em :issue:"
"`27598`.)"

#: ../../whatsnew/3.6.rst:927
msgid ""
"The new :class:`~collections.abc.Reversible` abstract base class represents "
"iterable classes that also provide the :meth:`__reversed__` method. "
"(Contributed by Ivan Levkivskyi in :issue:`25987`.)"
msgstr ""

#: ../../whatsnew/3.6.rst:931
msgid ""
"The new :class:`~collections.abc.AsyncGenerator` abstract base class "
"represents asynchronous generators. (Contributed by Yury Selivanov in :issue:"
"`28720`.)"
msgstr ""
"A nova classe base abstrata :class:`~collections.abc.AsyncGenerator` "
"representa geradores assíncronos. (Contribuído por Yury Selivanov em :issue:"
"`28720`.)"

#: ../../whatsnew/3.6.rst:935
msgid ""
"The :func:`~collections.namedtuple` function now accepts an optional keyword "
"argument *module*, which, when specified, is used for the :attr:`~type."
"__module__` attribute of the returned named tuple class. (Contributed by "
"Raymond Hettinger in :issue:`17941`.)"
msgstr ""
"A função :func:`~collections.namedtuple` agora aceita um argumento opcional "
"*module*, que, quando especificado, é usado para o atributo :attr:`~type."
"__module__` da classe de *named tuple* retornada. (Contribuído por Raymond "
"Hettinger em :issue:`17941`.)"

#: ../../whatsnew/3.6.rst:940 ../../whatsnew/3.6.rst:2295
msgid ""
"The *verbose* and *rename* arguments for :func:`~collections.namedtuple` are "
"now keyword-only. (Contributed by Raymond Hettinger in :issue:`25628`.)"
msgstr ""
"Os argumentos *verbose* e *rename* para :func:`~collections.namedtuple` "
"agora são apenas por palavra-chave. (Contribuído por Raymond Hettinger em :"
"issue:`25628`.)"

#: ../../whatsnew/3.6.rst:944
msgid ""
"Recursive :class:`collections.deque` instances can now be pickled. "
"(Contributed by Serhiy Storchaka in :issue:`26482`.)"
msgstr ""
"Instâncias recursivas de :class:`collections.deque` agora podem ser "
"serializadas. (Contribuído por Serhiy Storchaka em :issue:`26482`.)"

#: ../../whatsnew/3.6.rst:949
msgid "concurrent.futures"
msgstr "concurrent.futures"

#: ../../whatsnew/3.6.rst:951
msgid ""
"The :class:`ThreadPoolExecutor <concurrent.futures.ThreadPoolExecutor>` "
"class constructor now accepts an optional *thread_name_prefix* argument to "
"make it possible to customize the names of the threads created by the pool. "
"(Contributed by Gregory P. Smith in :issue:`27664`.)"
msgstr ""
"O construtor da classe :class:`ThreadPoolExecutor <concurrent.futures."
"ThreadPoolExecutor>` agora aceita um argumento opcional *thread_name_prefix* "
"para permitir personalizar os nomes das *threads* criadas pelo *pool*. "
"(Contribuído por Gregory P. Smith em :issue:`27664`.)"

#: ../../whatsnew/3.6.rst:959
msgid "contextlib"
msgstr "contextlib"

#: ../../whatsnew/3.6.rst:961
msgid ""
"The :class:`contextlib.AbstractContextManager` class has been added to "
"provide an abstract base class for context managers.  It provides a sensible "
"default implementation for ``__enter__()`` which returns ``self`` and leaves "
"``__exit__()`` an abstract method.  A matching class has been added to the :"
"mod:`typing` module as :class:`typing.ContextManager`. (Contributed by Brett "
"Cannon in :issue:`25609`.)"
msgstr ""
"A classe :class:`contextlib.AbstractContextManager` foi adicionada para "
"fornecer uma classe base abstrata para gestores de contexto. Fornece uma "
"implementação predefinida sensata para ``__enter__()`` que retorna ``self`` "
"e deixa ``__exit__()`` como um método abstrato. Uma classe correspondente "
"foi adicionada ao módulo :mod:`typing` como :class:`typing.ContextManager`. "
"(Contribuído por Brett Cannon em :issue:`25609`.)"

#: ../../whatsnew/3.6.rst:971
msgid "datetime"
msgstr "datetime"

#: ../../whatsnew/3.6.rst:973
msgid ""
"The :class:`~datetime.datetime` and :class:`~datetime.time` classes have the "
"new :attr:`~time.fold` attribute used to disambiguate local time when "
"necessary.  Many functions in the :mod:`datetime` have been updated to "
"support local time disambiguation. See :ref:`Local Time Disambiguation "
"<whatsnew36-pep495>` section for more information. (Contributed by Alexander "
"Belopolsky in :issue:`24773`.)"
msgstr ""

#: ../../whatsnew/3.6.rst:981
msgid ""
"The :meth:`datetime.strftime() <datetime.datetime.strftime>` and :meth:`date."
"strftime() <datetime.date.strftime>` methods now support ISO 8601 date "
"directives ``%G``, ``%u`` and ``%V``. (Contributed by Ashley Anderson in :"
"issue:`12006`.)"
msgstr ""
"Os métodos :meth:`datetime.strftime() <datetime.datetime.strftime>` e :meth:"
"`date.strftime() <datetime.date.strftime>` agora suportam diretivas de data "
"ISO 8601 ``%G``, ``%u`` e ``%V``. (Contribuído por Ashley Anderson em :issue:"
"`12006`.)"

#: ../../whatsnew/3.6.rst:986
msgid ""
"The :func:`datetime.isoformat() <datetime.datetime.isoformat>` function now "
"accepts an optional *timespec* argument that specifies the number of "
"additional components of the time value to include. (Contributed by "
"Alessandro Cucci and Alexander Belopolsky in :issue:`19475`.)"
msgstr ""
"A função :func:`datetime.isoformat() <datetime.datetime.isoformat>` agora "
"aceita um argumento opcional *timespec* que especifica o número de "
"componentes adicionais do valor de tempo a incluir. (Contribuído por "
"Alessandro Cucci e Alexander Belopolsky em :issue:`19475`.)"

#: ../../whatsnew/3.6.rst:991
msgid ""
"The :meth:`datetime.combine() <datetime.datetime.combine>` now accepts an "
"optional *tzinfo* argument. (Contributed by Alexander Belopolsky in :issue:"
"`27661`.)"
msgstr ""
"O método :meth:`datetime.combine() <datetime.datetime.combine>` agora aceita "
"um argumento opcional *tzinfo*. (Contribuído por Alexander Belopolsky em :"
"issue:`27661`.)"

#: ../../whatsnew/3.6.rst:997
msgid "decimal"
msgstr "decimal"

#: ../../whatsnew/3.6.rst:999
msgid ""
"New :meth:`Decimal.as_integer_ratio() <decimal.Decimal.as_integer_ratio>` "
"method that returns a pair ``(n, d)`` of integers that represent the given :"
"class:`~decimal.Decimal` instance as a fraction, in lowest terms and with a "
"positive denominator::"
msgstr ""
"Novo método :meth:`Decimal.as_integer_ratio() <decimal.Decimal."
"as_integer_ratio>` que retorna um par ``(n, d)`` de inteiros que representam "
"a instância :class:`~decimal.Decimal` dada como uma fração, nos termos mais "
"baixos e com um denominador positivo::"

#: ../../whatsnew/3.6.rst:1004
msgid ""
">>> Decimal('-3.14').as_integer_ratio()\n"
"(-157, 50)"
msgstr ""
">>> Decimal('-3.14').as_integer_ratio()\n"
"(-157, 50)"

#: ../../whatsnew/3.6.rst:1007
msgid "(Contributed by Stefan Krah amd Mark Dickinson in :issue:`25928`.)"
msgstr ""

#: ../../whatsnew/3.6.rst:1012 ../../whatsnew/3.6.rst:1990
msgid "distutils"
msgstr "distutils"

#: ../../whatsnew/3.6.rst:1014
msgid ""
"The ``default_format`` attribute has been removed from ``distutils.command."
"sdist.sdist`` and the ``formats`` attribute defaults to ``['gztar']``. "
"Although not anticipated, any code relying on the presence of "
"``default_format`` may need to be adapted. See :issue:`27819` for more "
"details."
msgstr ""
"O atributo ``default_format`` foi removido de ``distutils.command.sdist."
"sdist`` e o atributo ``formats`` agora tem como predefinição ``['gztar']``. "
"Embora não seja esperado, qualquer código que dependa da presença de "
"``default_format`` pode precisar de ser adaptado. Veja :issue:`27819` para "
"mais detalhes."

#: ../../whatsnew/3.6.rst:1022
msgid "email"
msgstr "email"

#: ../../whatsnew/3.6.rst:1024
msgid ""
"The new email API, enabled via the *policy* keyword to various constructors, "
"is no longer provisional.  The :mod:`email` documentation has been "
"reorganized and rewritten to focus on the new API, while retaining the old "
"documentation for the legacy API.  (Contributed by R. David Murray in :issue:"
"`24277`.)"
msgstr ""
"A nova API de *email*, ativada através da palavra-chave *policy* em vários "
"construtores, já não é provisória. A documentação do módulo :mod:`email` foi "
"reorganizada e reescrita para se focar na nova API, mantendo a documentação "
"antiga para a API legada. (Contribuído por R. David Murray em :issue:"
"`24277`.)"

#: ../../whatsnew/3.6.rst:1029
msgid ""
"The :mod:`email.mime` classes now all accept an optional *policy* keyword. "
"(Contributed by Berker Peksag in :issue:`27331`.)"
msgstr ""
"As classes :mod:`email.mime` agora aceitam todas uma palavra-chave opcional "
"*policy*. (Contribuído por Berker Peksag em :issue:`27331`.)"

#: ../../whatsnew/3.6.rst:1032
msgid ""
"The :class:`~email.generator.DecodedGenerator` now supports the *policy* "
"keyword."
msgstr ""
"O :class:`~email.generator.DecodedGenerator` agora suporta a palavra-chave "
"*policy*."

#: ../../whatsnew/3.6.rst:1035
msgid ""
"There is a new :mod:`~email.policy` attribute, :attr:`~email.policy.Policy."
"message_factory`, that controls what class is used by default when the "
"parser creates new message objects.  For the :attr:`email.policy.compat32` "
"policy this is :class:`~email.message.Message`, for the new policies it is :"
"class:`~email.message.EmailMessage`. (Contributed by R. David Murray in :"
"issue:`20476`.)"
msgstr ""
"Existe um novo atributo :mod:`~email.policy`, :attr:`~email.policy.Policy."
"message_factory`, que controla qual a classe usada por defeito quando o "
"*parser* cria novos objetos de mensagem. Para a política :attr:`email.policy."
"compat32`, esta é :class:`~email.message.Message`; para as novas políticas, "
"é :class:`~email.message.EmailMessage`. (Contribuído por R. David Murray em :"
"issue:`20476`.)"

#: ../../whatsnew/3.6.rst:1044
msgid "encodings"
msgstr "codificações"

#: ../../whatsnew/3.6.rst:1046
msgid ""
"On Windows, added the ``'oem'`` encoding to use ``CP_OEMCP``, and the "
"``'ansi'`` alias for the existing ``'mbcs'`` encoding, which uses the "
"``CP_ACP`` code page. (Contributed by Steve Dower in :issue:`27959`.)"
msgstr ""
"No Windows, foi adicionada a codificação ``'oem'`` para usar ``CP_OEMCP``, e "
"o alias ``'ansi'`` para a codificação existente ``'mbcs'``, que usa a página "
"de código ``CP_ACP``. (Contribuído por Steve Dower em :issue:`27959`.)"

#: ../../whatsnew/3.6.rst:1052
msgid "enum"
msgstr "enum"

#: ../../whatsnew/3.6.rst:1054
msgid ""
"Two new enumeration base classes have been added to the :mod:`enum` module: :"
"class:`~enum.Flag` and :class:`~enum.IntFlags`.  Both are used to define "
"constants that can be combined using the bitwise operators. (Contributed by "
"Ethan Furman in :issue:`23591`.)"
msgstr ""

#: ../../whatsnew/3.6.rst:1059
msgid ""
"Many standard library modules have been updated to use the :class:`~enum."
"IntFlags` class for their constants."
msgstr ""

#: ../../whatsnew/3.6.rst:1062
msgid ""
"The new :class:`enum.auto` value can be used to assign values to enum "
"members automatically::"
msgstr ""
"O novo valor :class:`enum.auto` pode ser usado para atribuir valores "
"automaticamente aos membros de enumeração::"

#: ../../whatsnew/3.6.rst:1065
msgid ""
">>> from enum import Enum, auto\n"
">>> class Color(Enum):\n"
"...     red = auto()\n"
"...     blue = auto()\n"
"...     green = auto()\n"
"...\n"
">>> list(Color)\n"
"[<Color.red: 1>, <Color.blue: 2>, <Color.green: 3>]"
msgstr ""
">>> from enum import Enum, auto\n"
">>> class Cor(Enum):\n"
"...     vermelho = auto()\n"
"...     azul = auto()\n"
"...     verde = auto()\n"
"...\n"
">>> list(Cor)\n"
"[<Cor.vermelho: 1>, <Cor.azul: 2>, <Cor.verde: 3>]"

#: ../../whatsnew/3.6.rst:1076
msgid "faulthandler"
msgstr "faulthandler"

#: ../../whatsnew/3.6.rst:1078
msgid ""
"On Windows, the :mod:`faulthandler` module now installs a handler for "
"Windows exceptions: see :func:`faulthandler.enable`. (Contributed by Victor "
"Stinner in :issue:`23848`.)"
msgstr ""
"No Windows, o módulo :mod:`faulthandler` agora instala um *handler* para "
"exceções do Windows: veja :func:`faulthandler.enable`. (Contribuído por "
"Victor Stinner em :issue:`23848`.)"

#: ../../whatsnew/3.6.rst:1084
msgid "fileinput"
msgstr "fileinput"

#: ../../whatsnew/3.6.rst:1086
msgid ""
":func:`~fileinput.hook_encoded` now supports the *errors* argument. "
"(Contributed by Joseph Hackman in :issue:`25788`.)"
msgstr ""
":func:`~fileinput.hook_encoded` agora suporta o argumento *errors*. "
"(Contribuído por Joseph Hackman em :issue:`25788`.)"

#: ../../whatsnew/3.6.rst:1091
msgid "hashlib"
msgstr "hashlib"

#: ../../whatsnew/3.6.rst:1093
msgid ""
":mod:`hashlib` supports OpenSSL 1.1.0.  The minimum recommend version is "
"1.0.2. (Contributed by Christian Heimes in :issue:`26470`.)"
msgstr ""
"O módulo :mod:`hashlib` suporta OpenSSL 1.1.0. A versão mínima recomendada é "
"1.0.2. (Contribuído por Christian Heimes em :issue:`26470`.)"

#: ../../whatsnew/3.6.rst:1096
msgid ""
"BLAKE2 hash functions were added to the module. :func:`~hashlib.blake2b` "
"and :func:`~hashlib.blake2s` are always available and support the full "
"feature set of BLAKE2. (Contributed by Christian Heimes in :issue:`26798` "
"based on code by Dmitry Chestnykh and Samuel Neves. Documentation written by "
"Dmitry Chestnykh.)"
msgstr ""
"As funções de *hash* BLAKE2 foram adicionadas ao módulo. :func:`~hashlib."
"blake2b` e :func:`~hashlib.blake2s` estão sempre disponíveis e suportam todo "
"o conjunto de funcionalidades do BLAKE2. (Contribuído por Christian Heimes "
"em :issue:`26798`, baseado em código de Dmitry Chestnykh e Samuel Neves. "
"Documentação escrita por Dmitry Chestnykh.)"

#: ../../whatsnew/3.6.rst:1102
msgid ""
"The SHA-3 hash functions :func:`~hashlib.sha3_224`, :func:`~hashlib."
"sha3_256`, :func:`~hashlib.sha3_384`, :func:`~hashlib.sha3_512`, and SHAKE "
"hash functions :func:`~hashlib.shake_128` and :func:`~hashlib.shake_256` "
"were added. (Contributed by Christian Heimes in :issue:`16113`. Keccak Code "
"Package by Guido Bertoni, Joan Daemen, Michaël Peeters, Gilles Van Assche, "
"and Ronny Van Keer.)"
msgstr ""
"As funções de *hash* SHA-3 :func:`~hashlib.sha3_224`, :func:`~hashlib."
"sha3_256`, :func:`~hashlib.sha3_384`, :func:`~hashlib.sha3_512`, e as "
"funções de *hash* SHAKE :func:`~hashlib.shake_128` e :func:`~hashlib."
"shake_256` foram adicionadas. (Contribuído por Christian Heimes em :issue:"
"`16113`. Pacote de Código Keccak por Guido Bertoni, Joan Daemen, Michaël "
"Peeters, Gilles Van Assche e Ronny Van Keer.)"

#: ../../whatsnew/3.6.rst:1109
msgid ""
"The password-based key derivation function :func:`~hashlib.scrypt` is now "
"available with OpenSSL 1.1.0 and newer. (Contributed by Christian Heimes in :"
"issue:`27928`.)"
msgstr ""
"A função de derivação de chaves baseada em *password* :func:`~hashlib."
"scrypt` agora está disponível com OpenSSL 1.1.0 e versões mais recentes. "
"(Contribuído por Christian Heimes em :issue:`27928`.)"

#: ../../whatsnew/3.6.rst:1114
msgid "http.client"
msgstr "http.client"

#: ../../whatsnew/3.6.rst:1116
msgid ""
":meth:`HTTPConnection.request() <http.client.HTTPConnection.request>` and :"
"meth:`~http.client.HTTPConnection.endheaders` both now support chunked "
"encoding request bodies. (Contributed by Demian Brecht and Rolf Krahl in :"
"issue:`12319`.)"
msgstr ""
":meth:`HTTPConnection.request() <http.client.HTTPConnection.request>` e :"
"meth:`~http.client.HTTPConnection.endheaders` agora suportam corpos de "
"pedido com codificação *chunked*. (Contribuído por Demian Brecht e Rolf "
"Krahl em :issue:`12319`.)"

#: ../../whatsnew/3.6.rst:1123
msgid "idlelib and IDLE"
msgstr "idlelib e IDLE"

#: ../../whatsnew/3.6.rst:1125
msgid ""
"The idlelib package is being modernized and refactored to make IDLE look and "
"work better and to make the code easier to understand, test, and improve. "
"Part of making IDLE look better, especially on Linux and Mac, is using ttk "
"widgets, mostly in the dialogs.  As a result, IDLE no longer runs with tcl/"
"tk 8.4.  It now requires tcl/tk 8.5 or 8.6.  We recommend running the latest "
"release of either."
msgstr ""
"O pacote idlelib está a ser modernizado e refatorado para tornar o IDLE mais "
"atraente e funcional, e para tornar o código mais fácil de entender, testar "
"e melhorar. Parte da modernização do aspeto do IDLE, especialmente no Linux "
"e Mac, é o uso de *widgets* ttk, principalmente nos diálogos. Como "
"resultado, o IDLE já não funciona com tcl/tk 8.4. Agora requer tcl/tk 8.5 ou "
"8.6. Recomendamos executar a versão mais recente de qualquer uma delas."

#: ../../whatsnew/3.6.rst:1132
msgid ""
"'Modernizing' includes renaming and consolidation of idlelib modules. The "
"renaming of files with partial uppercase names is similar to the renaming "
"of, for instance, Tkinter and TkFont to tkinter and tkinter.font in 3.0.  As "
"a result, imports of idlelib files that worked in 3.5 will usually not work "
"in 3.6.  At least a module name change will be needed (see idlelib/README."
"txt), sometimes more.  (Name changes contributed by Al Swiegart and Terry "
"Reedy in :issue:`24225`.  Most idlelib patches since have been and will be "
"part of the process.)"
msgstr ""
"A 'modernização' inclui a renomeação e consolidação de módulos idlelib. A "
"renomeação de ficheiros com nomes parcialmente em maiúsculas é semelhante à "
"renomeação, por exemplo, de Tkinter e TkFont para tkinter e tkinter.font no "
"Python 3.0. Como resultado, as importações de ficheiros idlelib que "
"funcionavam no 3.5 geralmente não funcionarão no 3.6. Pelo menos será "
"necessária uma alteração no nome do módulo (veja idlelib/README.txt), às "
"vezes mais. (Alterações de nome contribuídas por Al Swiegart e Terry Reedy "
"em :issue:`24225`. A maioria das *patches* do idlelib desde então têm sido e "
"serão parte do processo.)"

#: ../../whatsnew/3.6.rst:1141
msgid ""
"In compensation, the eventual result with be that some idlelib classes will "
"be easier to use, with better APIs and docstrings explaining them.  "
"Additional useful information will be added to idlelib when available."
msgstr ""
"Como compensação, o resultado final será que algumas classes do idlelib "
"serão mais fáceis de usar, com APIs melhores e *docstrings* que as explicam. "
"Informações úteis adicionais serão adicionadas ao idlelib quando disponíveis."

#: ../../whatsnew/3.6.rst:1145
msgid "New in 3.6.2:"
msgstr "Novo no 3.6.2:"

#: ../../whatsnew/3.6.rst:1147
msgid ""
"Multiple fixes for autocompletion. (Contributed by Louie Lu in :issue:"
"`15786`.)"
msgstr ""
"Várias correções para autocompletar. (Contribuído por Louie Lu em :issue:"
"`15786`.)"

#: ../../whatsnew/3.6.rst:1149
msgid "New in 3.6.3:"
msgstr "Novo no 3.6.3:"

#: ../../whatsnew/3.6.rst:1151
msgid ""
"Module Browser (on the File menu, formerly called Class Browser), now "
"displays nested functions and classes in addition to top-level functions and "
"classes. (Contributed by Guilherme Polo, Cheryl Sabella, and Terry Jan Reedy "
"in :issue:`1612262`.)"
msgstr ""
"O Navegador de Módulos (no menu Ficheiro, anteriormente chamado Navegador de "
"Classes) agora mostra funções e classes aninhadas, além de funções e classes "
"de nível superior. (Contribuído por Guilherme Polo, Cheryl Sabella e Terry "
"Jan Reedy em :issue:`1612262`.)"

#: ../../whatsnew/3.6.rst:1157
msgid ""
"The IDLE features formerly implemented as extensions have been reimplemented "
"as normal features.  Their settings have been moved from the Extensions tab "
"to other dialog tabs. (Contributed by Charles Wohlganger and Terry Jan Reedy "
"in :issue:`27099`.)"
msgstr ""
"As funcionalidades do IDLE anteriormente implementadas como extensões foram "
"reimplementadas como funcionalidades normais. As suas definições foram "
"movidas do separador Extensões para outros separadores de diálogo. "
"(Contribuído por Charles Wohlganger e Terry Jan Reedy em :issue:`27099`.)"

#: ../../whatsnew/3.6.rst:1162
msgid ""
"The Settings dialog (Options, Configure IDLE) has been partly rewritten to "
"improve both appearance and function. (Contributed by Cheryl Sabella and "
"Terry Jan Reedy in multiple issues.)"
msgstr ""
"O diálogo de Definições (Opções, Configurar IDLE) foi parcialmente reescrito "
"para melhorar tanto o aspeto como a funcionalidade. (Contribuído por Cheryl "
"Sabella e Terry Jan Reedy em vários *issues*.)"

#: ../../whatsnew/3.6.rst:1166
msgid "New in 3.6.4:"
msgstr "Novo no 3.6.4:"

#: ../../whatsnew/3.6.rst:1168
msgid ""
"The font sample now includes a selection of non-Latin characters so that "
"users can better see the effect of selecting a particular font. (Contributed "
"by Terry Jan Reedy in :issue:`13802`.) The sample can be edited to include "
"other characters. (Contributed by Serhiy Storchaka in :issue:`31860`.)"
msgstr ""
"A amostra de tipo de letra agora inclui uma seleção de caracteres não-"
"latinos, para que os utilizadores possam ver melhor o efeito de selecionar "
"um tipo de letra específico. (Contribuído por Terry Jan Reedy em :issue:"
"`13802`.) A amostra pode ser editada para incluir outros caracteres. "
"(Contribuído por Serhiy Storchaka em :issue:`31860`.)"

#: ../../whatsnew/3.6.rst:1174
msgid "New in 3.6.6:"
msgstr "Novo no 3.6.6:"

#: ../../whatsnew/3.6.rst:1176
msgid ""
"Editor code context option revised.  Box displays all context lines up to "
"maxlines.  Clicking on a context line jumps the editor to that line.  "
"Context colors for custom themes is added to Highlights tab of Settings "
"dialog. (Contributed by Cheryl Sabella and Terry Jan Reedy in :issue:"
"`33642`, :issue:`33768`, and :issue:`33679`.)"
msgstr ""
"Opção de contexto de código do editor revista. A caixa mostra todas as "
"linhas de contexto até maxlines. Clicar numa linha de contexto faz com que o "
"editor salte para essa linha. Cores de contexto para temas personalizados "
"foram adicionadas ao separador Destaques do diálogo de Definições. "
"(Contribuído por Cheryl Sabella e Terry Jan Reedy em :issue:`33642`, :issue:"
"`33768` e :issue:`33679`.)"

#: ../../whatsnew/3.6.rst:1182
msgid ""
"On Windows, a new API call tells Windows that tk scales for DPI. On Windows "
"8.1+ or 10, with DPI compatibility properties of the Python binary "
"unchanged, and a monitor resolution greater than 96 DPI, this should make "
"text and lines sharper.  It should otherwise have no effect. (Contributed by "
"Terry Jan Reedy in :issue:`33656`.)"
msgstr ""
"No Windows, uma nova chamada de API informa o Windows que o tk escala para "
"DPI. No Windows 8.1+ ou 10, com as propriedades de compatibilidade de DPI do "
"binário do Python inalteradas e uma resolução de monitor superior a 96 DPI, "
"isto deve tornar o texto e as linhas mais nítidos. Não deve ter outro "
"efeito. (Contribuído por Terry Jan Reedy em :issue:`33656`.)"

#: ../../whatsnew/3.6.rst:1188
msgid "New in 3.6.7:"
msgstr "Novo no 3.6.7:"

#: ../../whatsnew/3.6.rst:1190
msgid ""
"Output over N lines (50 by default) is squeezed down to a button. N can be "
"changed in the PyShell section of the General page of the Settings dialog.  "
"Fewer, but possibly extra long, lines can be squeezed by right clicking on "
"the output.  Squeezed output can be expanded in place by double-clicking the "
"button or into the clipboard or a separate window by right-clicking the "
"button.  (Contributed by Tal Einat in :issue:`1529353`.)"
msgstr ""
"A saída com mais de N linhas (50 por defeito) é comprimida num botão. N pode "
"ser alterado na secção PyShell da página Geral do diálogo de Definições. "
"Menos linhas, mas possivelmente muito longas, podem ser comprimidas clicando "
"com o botão direito na saída. A saída comprimida pode ser expandida no local "
"clicando duas vezes no botão ou para a área de transferência ou uma janela "
"separada clicando com o botão direito no botão. (Contribuído por Tal Einat "
"em :issue:`1529353`.)"

#: ../../whatsnew/3.6.rst:1199 ../../whatsnew/3.6.rst:2007
msgid "importlib"
msgstr "importlib"

#: ../../whatsnew/3.6.rst:1201
msgid ""
"Import now raises the new exception :exc:`ModuleNotFoundError` (subclass of :"
"exc:`ImportError`) when it cannot find a module.  Code that current checks "
"for ``ImportError`` (in try-except) will still work. (Contributed by Eric "
"Snow in :issue:`15767`.)"
msgstr ""
"A importação agora lança a nova exceção :exc:`ModuleNotFoundError` "
"(subclasse de :exc:`ImportError`) quando não consegue encontrar um módulo. "
"Código que atualmente verifica ``ImportError`` (em try-except) continuará a "
"funcionar. (Contribuído por Eric Snow em :issue:`15767`.)"

#: ../../whatsnew/3.6.rst:1206
msgid ""
":class:`importlib.util.LazyLoader` now calls :meth:`~importlib.abc.Loader."
"create_module` on the wrapped loader, removing the restriction that :class:"
"`importlib.machinery.BuiltinImporter` and :class:`importlib.machinery."
"ExtensionFileLoader` couldn't be used with :class:`importlib.util."
"LazyLoader`."
msgstr ""
":class:`importlib.util.LazyLoader` agora chama :meth:`~importlib.abc.Loader."
"create_module` no *loader* encapsulado, removendo a restrição de que :class:"
"`importlib.machinery.BuiltinImporter` e :class:`importlib.machinery."
"ExtensionFileLoader` não podiam ser usados com :class:`importlib.util."
"LazyLoader`."

#: ../../whatsnew/3.6.rst:1212
msgid ""
":func:`importlib.util.cache_from_source`, :func:`importlib.util."
"source_from_cache`, and :func:`importlib.util.spec_from_file_location` now "
"accept a :term:`path-like object`."
msgstr ""
":func:`importlib.util.cache_from_source`, :func:`importlib.util."
"source_from_cache` e :func:`importlib.util.spec_from_file_location` agora "
"aceitam um :term:`objeto semelhante a caminho`."

#: ../../whatsnew/3.6.rst:1219
msgid "inspect"
msgstr "inspect"

#: ../../whatsnew/3.6.rst:1221
msgid ""
"The :func:`inspect.signature() <inspect.signature>` function now reports the "
"implicit ``.0`` parameters generated by the compiler for comprehension and "
"generator expression scopes as if they were positional-only parameters "
"called ``implicit0``. (Contributed by Jelle Zijlstra in :issue:`19611`.)"
msgstr ""
"A função :func:`inspect.signature() <inspect.signature>` agora reporta os "
"parâmetros implícitos ``.0`` gerados pelo compilador para âmbitos de "
"compreensão e expressões geradoras como se fossem parâmetros apenas "
"posicionais chamados ``implicit0``. (Contribuído por Jelle Zijlstra em :"
"issue:`19611`.)"

#: ../../whatsnew/3.6.rst:1226
msgid ""
"To reduce code churn when upgrading from Python 2.7 and the legacy :func:"
"`inspect.getargspec` API, the previously documented deprecation of :func:"
"`inspect.getfullargspec` has been reversed. While this function is "
"convenient for single/source Python 2/3 code bases, the richer :func:"
"`inspect.signature` interface remains the recommended approach for new code. "
"(Contributed by Nick Coghlan in :issue:`27172`)"
msgstr ""

#: ../../whatsnew/3.6.rst:1235
msgid "json"
msgstr "json"

#: ../../whatsnew/3.6.rst:1237
msgid ""
":func:`json.load` and :func:`json.loads` now support binary input.  Encoded "
"JSON should be represented using either UTF-8, UTF-16, or UTF-32. "
"(Contributed by Serhiy Storchaka in :issue:`17909`.)"
msgstr ""
":func:`json.load` e :func:`json.loads` agora suportam entrada binária. JSON "
"codificado deve ser representado usando UTF-8, UTF-16 ou UTF-32. "
"(Contribuído por Serhiy Storchaka em :issue:`17909`.)"

#: ../../whatsnew/3.6.rst:1243
msgid "logging"
msgstr "logging"

#: ../../whatsnew/3.6.rst:1245
msgid ""
"The new :meth:`WatchedFileHandler.reopenIfNeeded() <logging.handlers."
"WatchedFileHandler.reopenIfNeeded>` method has been added to add the ability "
"to check if the log file needs to be reopened. (Contributed by Marian Horban "
"in :issue:`24884`.)"
msgstr ""
"O novo método :meth:`WatchedFileHandler.reopenIfNeeded() <logging.handlers."
"WatchedFileHandler.reopenIfNeeded>` foi adicionado para permitir verificar "
"se o ficheiro de registo precisa de ser reaberto. (Contribuído por Marian "
"Horban em :issue:`24884`.)"

#: ../../whatsnew/3.6.rst:1252
msgid "math"
msgstr "math"

#: ../../whatsnew/3.6.rst:1254
msgid ""
"The tau (*τ*) constant has been added to the :mod:`math` and :mod:`cmath` "
"modules. (Contributed by Lisa Roach in :issue:`12345`, see :pep:`628` for "
"details.)"
msgstr ""
"A constante tau (*τ*) foi adicionada aos módulos :mod:`math` e :mod:`cmath`. "
"(Contribuído por Lisa Roach em :issue:`12345`, veja :pep:`628` para "
"detalhes.)"

#: ../../whatsnew/3.6.rst:1260
msgid "multiprocessing"
msgstr "multiprocessamento"

#: ../../whatsnew/3.6.rst:1262
msgid ""
":ref:`Proxy Objects <multiprocessing-proxy_objects>` returned by :func:"
"`multiprocessing.Manager` can now be nested. (Contributed by Davin Potts in :"
"issue:`6766`.)"
msgstr ""
":ref:`Objetos Proxy <multiprocessing-proxy_objects>` retornados por :func:"
"`multiprocessing.Manager` agora podem ser aninhados. (Contribuído por Davin "
"Potts em :issue:`6766`.)"

#: ../../whatsnew/3.6.rst:1268 ../../whatsnew/3.6.rst:2021
msgid "os"
msgstr "os"

#: ../../whatsnew/3.6.rst:1270
msgid ""
"See the summary of :ref:`PEP 519 <whatsnew36-pep519>` for details on how "
"the :mod:`os` and :mod:`os.path` modules now support :term:`path-like "
"objects <path-like object>`."
msgstr ""
"Veja o resumo da :ref:`PEP 519 <whatsnew36-pep519>` para detalhes sobre como "
"os módulos :mod:`os` e :mod:`os.path` agora suportam :term:`objetos "
"semelhantes a caminhos <path-like object>`"

#: ../../whatsnew/3.6.rst:1274
msgid ":func:`~os.scandir` now supports :class:`bytes` paths on Windows."
msgstr ":func:`~os.scandir` agora suporta caminhos :class:`bytes` no Windows."

#: ../../whatsnew/3.6.rst:1276
msgid ""
"A new :meth:`~os.scandir.close` method allows explicitly closing a :func:"
"`~os.scandir` iterator.  The :func:`~os.scandir` iterator now supports the :"
"term:`context manager` protocol.  If a :func:`scandir` iterator is neither "
"exhausted nor explicitly closed a :exc:`ResourceWarning` will be emitted in "
"its destructor. (Contributed by Serhiy Storchaka in :issue:`25994`.)"
msgstr ""

#: ../../whatsnew/3.6.rst:1286
msgid ""
"The Linux ``getrandom()`` syscall (get random bytes) is now exposed as the "
"new :func:`os.getrandom` function. (Contributed by Victor Stinner, part of "
"the :pep:`524`)"
msgstr ""
"A chamada de sistema Linux ``getrandom()`` (obter bytes aleatórios) agora "
"está exposta como a nova função :func:`os.getrandom`. (Contribuído por "
"Victor Stinner, como parte da :pep:`524`)"

#: ../../whatsnew/3.6.rst:1292
msgid "pathlib"
msgstr "pathlib"

#: ../../whatsnew/3.6.rst:1294
msgid ""
":mod:`pathlib` now supports :term:`path-like objects <path-like object>`. "
"(Contributed by Brett Cannon in :issue:`27186`.)"
msgstr ""
":mod:`pathlib` agora suporta :term:`objetos semelhantes a caminhos <path-"
"like object>`. (Contribuído por Brett Cannon em :issue:`27186`.)"

#: ../../whatsnew/3.6.rst:1297
msgid "See the summary of :ref:`PEP 519 <whatsnew36-pep519>` for details."
msgstr "Veja o resumo da :ref:`PEP 519 <whatsnew36-pep519>` para detalhes."

#: ../../whatsnew/3.6.rst:1301
msgid "pdb"
msgstr "pdb"

#: ../../whatsnew/3.6.rst:1303
msgid ""
"The :class:`~pdb.Pdb` class constructor has a new optional *readrc* argument "
"to control whether ``.pdbrc`` files should be read."
msgstr ""
"O construtor da classe :class:`~pdb.Pdb` tem um novo argumento opcional "
"*readrc* para controlar se os ficheiros ``.pdbrc`` devem ser lidos."

#: ../../whatsnew/3.6.rst:1308
msgid "pickle"
msgstr "pickle"

#: ../../whatsnew/3.6.rst:1310
msgid ""
"Objects that need ``__new__`` called with keyword arguments can now be "
"pickled using :ref:`pickle protocols <pickle-protocols>` older than protocol "
"version 4. Protocol version 4 already supports this case.  (Contributed by "
"Serhiy Storchaka in :issue:`24164`.)"
msgstr ""
"Objetos que necessitam que ``__new__`` seja chamado com argumentos nomeados "
"agora podem ser serializados usando :ref:`protocolos pickle <pickle-"
"protocols>` mais antigos que a versão 4 do protocolo. A versão 4 do "
"protocolo já suporta este caso. (Contribuído por Serhiy Storchaka em :issue:"
"`24164`.)"

#: ../../whatsnew/3.6.rst:1317
msgid "pickletools"
msgstr "pickletools"

#: ../../whatsnew/3.6.rst:1319
msgid ""
":func:`pickletools.dis` now outputs the implicit memo index for the "
"``MEMOIZE`` opcode. (Contributed by Serhiy Storchaka in :issue:`25382`.)"
msgstr ""
":func:`pickletools.dis` agora mostra o índice de memo implícito para a "
"instrução ``MEMOIZE``. (Contribuído por Serhiy Storchaka em :issue:`25382`.)"

#: ../../whatsnew/3.6.rst:1325
msgid "pydoc"
msgstr "pydoc"

#: ../../whatsnew/3.6.rst:1327
msgid ""
"The :mod:`pydoc` module has learned to respect the ``MANPAGER`` environment "
"variable. (Contributed by Matthias Klose in :issue:`8637`.)"
msgstr ""
"O módulo :mod:`pydoc` agora respeita a variável de ambiente ``MANPAGER``. "
"(Contribuído por Matthias Klose em :issue:`8637`.)"

#: ../../whatsnew/3.6.rst:1331
msgid ""
":func:`help` and :mod:`pydoc` can now list named tuple fields in the order "
"they were defined rather than alphabetically. (Contributed by Raymond "
"Hettinger in :issue:`24879`.)"
msgstr ""
":func:`help` e :mod:`pydoc` agora podem listar os campos de *named tuples* "
"pela ordem em que foram definidos, em vez de alfabéticamente. (Contribuído "
"por Raymond Hettinger em :issue:`24879`.)"

#: ../../whatsnew/3.6.rst:1337
msgid "random"
msgstr "random"

#: ../../whatsnew/3.6.rst:1339
msgid ""
"The new :func:`~random.choices` function returns a list of elements of "
"specified size from the given population with optional weights. (Contributed "
"by Raymond Hettinger in :issue:`18844`.)"
msgstr ""
"A nova função :func:`~random.choices` retorna uma lista de elementos de "
"tamanho especificado a partir de uma população dada, com pesos opcionais. "
"(Contribuído por Raymond Hettinger em :issue:`18844`.)"

#: ../../whatsnew/3.6.rst:1345 ../../whatsnew/3.6.rst:2029
msgid "re"
msgstr "re"

#: ../../whatsnew/3.6.rst:1347
msgid ""
"Added support of modifier spans in regular expressions.  Examples: ``'(?i:"
"p)ython'`` matches ``'python'`` and ``'Python'``, but not ``'PYTHON'``; ``'(?"
"i)g(?-i:v)r'`` matches ``'GvR'`` and ``'gvr'``, but not ``'GVR'``. "
"(Contributed by Serhiy Storchaka in :issue:`433028`.)"
msgstr ""
"Adicionado suporte para *spans* de modificadores em expressões regulares. "
"Exemplos: ``'(?i:p)ython'`` corresponde a ``'python'`` e ``'Python'``, mas "
"não a ``'PYTHON'``; ``'(?i)g(?-i:v)r'`` corresponde a ``'GvR'`` e ``'gvr'``, "
"mas não a ``'GVR'``. (Contribuído por Serhiy Storchaka em :issue:`433028`.)"

#: ../../whatsnew/3.6.rst:1352
msgid ""
"Match object groups can be accessed by ``__getitem__``, which is equivalent "
"to ``group()``.  So ``mo['name']`` is now equivalent to ``mo."
"group('name')``.  (Contributed by Eric Smith in :issue:`24454`.)"
msgstr ""
"Os grupos de objetos de correspondência podem ser acedidos por "
"``__getitem__``, o que é equivalente a ``group()``. Assim, ``mo['nome']`` é "
"agora equivalente a ``mo.group('nome')``. (Contribuído por Eric Smith em :"
"issue:`24454`.)"

#: ../../whatsnew/3.6.rst:1356
msgid ""
":class:`~re.Match` objects now support :meth:`index-like objects <object."
"__index__>` as group indices. (Contributed by Jeroen Demeyer and Xiang Zhang "
"in :issue:`27177`.)"
msgstr ""
"Os objetos :class:`~re.Match` agora suportam :meth:`objetos semelhantes a "
"índices <object.__index__>` como índices de grupo. (Contribuído por Jeroen "
"Demeyer e Xiang Zhang em :issue:`27177`.)"

#: ../../whatsnew/3.6.rst:1363
msgid "readline"
msgstr "readline"

#: ../../whatsnew/3.6.rst:1365
msgid ""
"Added :func:`~readline.set_auto_history` to enable or disable automatic "
"addition of input to the history list.  (Contributed by Tyler Crompton in :"
"issue:`26870`.)"
msgstr ""
"Adicionado :func:`~readline.set_auto_history` para ativar ou desativar a "
"adição automática de entrada à lista de histórico. (Contribuído por Tyler "
"Crompton em :issue:`26870`.)"

#: ../../whatsnew/3.6.rst:1371
msgid "rlcompleter"
msgstr "rlcompleter"

#: ../../whatsnew/3.6.rst:1373
msgid ""
"Private and special attribute names now are omitted unless the prefix starts "
"with underscores.  A space or a colon is added after some completed "
"keywords. (Contributed by Serhiy Storchaka in :issue:`25011` and :issue:"
"`25209`.)"
msgstr ""
"Nomes de atributos privados e especiais agora são omitidos, a menos que o "
"prefixo comece com sublinhados. Um espaço ou dois pontos é adicionado após "
"algumas palavras-chave completadas. (Contribuído por Serhiy Storchaka em :"
"issue:`25011` e :issue:`25209`.)"

#: ../../whatsnew/3.6.rst:1379
msgid "shlex"
msgstr "shlex"

#: ../../whatsnew/3.6.rst:1381
msgid ""
"The :class:`~shlex.shlex` has much :ref:`improved shell compatibility "
"<improved-shell-compatibility>` through the new *punctuation_chars* argument "
"to control which characters are treated as punctuation. (Contributed by "
"Vinay Sajip in :issue:`1521950`.)"
msgstr ""
":class:`~shlex.shlex` tem uma :ref:`compatibilidade melhorada com a shell "
"<improved-shell-compatibility>` através do novo argumento "
"*punctuation_chars* para controlar quais caracteres são tratados como "
"pontuação. (Contribuído por Vinay Sajip em :issue:`1521950`.)"

#: ../../whatsnew/3.6.rst:1389
msgid "site"
msgstr "site"

#: ../../whatsnew/3.6.rst:1391
msgid ""
"When specifying paths to add to :data:`sys.path` in a ``.pth`` file, you may "
"now specify file paths on top of directories (e.g. zip files). (Contributed "
"by Wolfgang Langner in :issue:`26587`)."
msgstr ""
"Ao especificar caminhos para adicionar a :data:`sys.path` num ficheiro ``."
"pth``, agora pode especificar caminhos de ficheiros além de diretórios (por "
"exemplo, ficheiros zip). (Contribuído por Wolfgang Langner em :issue:"
"`26587`.)"

#: ../../whatsnew/3.6.rst:1397
msgid "sqlite3"
msgstr "sqlite3"

#: ../../whatsnew/3.6.rst:1399
msgid ""
":attr:`sqlite3.Cursor.lastrowid` now supports the ``REPLACE`` statement. "
"(Contributed by Alex LordThorsen in :issue:`16864`.)"
msgstr ""
":attr:`sqlite3.Cursor.lastrowid` agora suporta a instrução ``REPLACE``. "
"(Contribuído por Alex LordThorsen em :issue:`16864`.)"

#: ../../whatsnew/3.6.rst:1404
msgid "socket"
msgstr "socket"

#: ../../whatsnew/3.6.rst:1406
msgid ""
"The :func:`~socket.socket.ioctl` function now supports the :const:`~socket."
"SIO_LOOPBACK_FAST_PATH` control code. (Contributed by Daniel Stokes in :"
"issue:`26536`.)"
msgstr ""
"A função :func:`~socket.socket.ioctl` agora suporta o código de controlo :"
"const:`~socket.SIO_LOOPBACK_FAST_PATH`. (Contribuído por Daniel Stokes em :"
"issue:`26536`.)"

#: ../../whatsnew/3.6.rst:1410
msgid ""
"The :meth:`~socket.socket.getsockopt` constants ``SO_DOMAIN``, "
"``SO_PROTOCOL``, ``SO_PEERSEC``, and ``SO_PASSSEC`` are now supported. "
"(Contributed by Christian Heimes in :issue:`26907`.)"
msgstr ""
"As constantes :meth:`~socket.socket.getsockopt` ``SO_DOMAIN``, "
"``SO_PROTOCOL``, ``SO_PEERSEC`` e ``SO_PASSSEC`` agora são suportadas. "
"(Contribuído por Christian Heimes em :issue:`26907`.)"

#: ../../whatsnew/3.6.rst:1414
msgid ""
"The :meth:`~socket.socket.setsockopt` now supports the ``setsockopt(level, "
"optname, None, optlen: int)`` form. (Contributed by Christian Heimes in :"
"issue:`27744`.)"
msgstr ""
"O método :meth:`~socket.socket.setsockopt` agora suporta a forma "
"``setsockopt(level, optname, None, optlen: int)``. (Contribuído por "
"Christian Heimes em :issue:`27744`.)"

#: ../../whatsnew/3.6.rst:1418
msgid ""
"The socket module now supports the address family :const:`~socket.AF_ALG` to "
"interface with Linux Kernel crypto API. ``ALG_*``, ``SOL_ALG`` and :meth:"
"`~socket.socket.sendmsg_afalg` were added. (Contributed by Christian Heimes "
"in :issue:`27744` with support from Victor Stinner.)"
msgstr ""
"O módulo socket agora suporta a família de endereços :const:`~socket.AF_ALG` "
"para interface com a API de criptografia do núcleo Linux. ``ALG_*``, "
"``SOL_ALG`` e :meth:`~socket.socket.sendmsg_afalg` foram adicionados. "
"(Contribuído por Christian Heimes em :issue:`27744` com suporte de Victor "
"Stinner.)"

#: ../../whatsnew/3.6.rst:1424
msgid ""
"New Linux constants ``TCP_USER_TIMEOUT`` and ``TCP_CONGESTION`` were added. "
"(Contributed by Omar Sandoval, :issue:`26273`)."
msgstr ""
"Novas constantes Linux ``TCP_USER_TIMEOUT`` e ``TCP_CONGESTION`` foram "
"adicionadas. (Contribuído por Omar Sandoval, :issue:`26273`.)"

#: ../../whatsnew/3.6.rst:1429
msgid "socketserver"
msgstr "socketserver"

#: ../../whatsnew/3.6.rst:1431
msgid ""
"Servers based on the :mod:`socketserver` module, including those defined in :"
"mod:`http.server`, :mod:`xmlrpc.server` and :mod:`wsgiref.simple_server`, "
"now support the :term:`context manager` protocol. (Contributed by Aviv "
"Palivoda in :issue:`26404`.)"
msgstr ""
"Servidores baseados no módulo :mod:`socketserver`, incluindo aqueles "
"definidos em :mod:`http.server`, :mod:`xmlrpc.server` e :mod:`wsgiref."
"simple_server`, agora suportam o protocolo :term:`gestor de contexto`. "
"(Contribuído por Aviv Palivoda em :issue:`26404`.)"

#: ../../whatsnew/3.6.rst:1437
msgid ""
"The :attr:`~socketserver.StreamRequestHandler.wfile` attribute of :class:"
"`~socketserver.StreamRequestHandler` classes now implements the :class:`io."
"BufferedIOBase` writable interface.  In particular, calling :meth:`~io."
"BufferedIOBase.write` is now guaranteed to send the data in full.  "
"(Contributed by Martin Panter in :issue:`26721`.)"
msgstr ""

#: ../../whatsnew/3.6.rst:1445 ../../whatsnew/3.6.rst:2037
msgid "ssl"
msgstr "ssl"

#: ../../whatsnew/3.6.rst:1447
msgid ""
":mod:`ssl` supports OpenSSL 1.1.0.  The minimum recommend version is 1.0.2. "
"(Contributed by Christian Heimes in :issue:`26470`.)"
msgstr ""
"O módulo :mod:`ssl` suporta OpenSSL 1.1.0. A versão mínima recomendada é "
"1.0.2. (Contribuído por Christian Heimes em :issue:`26470`.)"

#: ../../whatsnew/3.6.rst:1450
msgid ""
"3DES has been removed from the default cipher suites and ChaCha20 Poly1305 "
"cipher suites have been added. (Contributed by Christian Heimes in :issue:"
"`27850` and :issue:`27766`.)"
msgstr ""
"3DES foi removido dos conjuntos de cifras predefinidos e os conjuntos de "
"cifras ChaCha20 Poly1305 foram adicionados. (Contribuído por Christian "
"Heimes em :issue:`27850` e :issue:`27766`.)"

#: ../../whatsnew/3.6.rst:1454
msgid ""
":class:`~ssl.SSLContext` has better default configuration for options and "
"ciphers. (Contributed by Christian Heimes in :issue:`28043`.)"
msgstr ""
":class:`~ssl.SSLContext` tem uma configuração predefinida melhor para opções "
"e cifras. (Contribuído por Christian Heimes em :issue:`28043`.)"

#: ../../whatsnew/3.6.rst:1458
msgid ""
"SSL session can be copied from one client-side connection to another with "
"the new :class:`~ssl.SSLSession` class.  TLS session resumption can speed up "
"the initial handshake, reduce latency and improve performance (Contributed "
"by Christian Heimes in :issue:`19500` based on a draft by Alex Warhawk.)"
msgstr ""
"A sessão SSL pode ser copiada de uma ligação do lado do cliente para outra "
"com a nova classe :class:`~ssl.SSLSession`. A retomada da sessão TLS pode "
"acelerar o *handshake* inicial, reduzir a latência e melhorar o desempenho. "
"(Contribuído por Christian Heimes em :issue:`19500`, baseado num rascunho de "
"Alex Warhawk.)"

#: ../../whatsnew/3.6.rst:1464
msgid ""
"The new :meth:`~ssl.SSLContext.get_ciphers` method can be used to get a list "
"of enabled ciphers in order of cipher priority."
msgstr ""
"O novo método :meth:`~ssl.SSLContext.get_ciphers` pode ser usado para obter "
"uma lista de cifras ativadas por ordem de prioridade."

#: ../../whatsnew/3.6.rst:1467
msgid ""
"All constants and flags have been converted to :class:`~enum.IntEnum` and :"
"class:`~enum.IntFlags`. (Contributed by Christian Heimes in :issue:`28025`.)"
msgstr ""

#: ../../whatsnew/3.6.rst:1471
msgid ""
"Server and client-side specific TLS protocols for :class:`~ssl.SSLContext` "
"were added. (Contributed by Christian Heimes in :issue:`28085`.)"
msgstr ""
"Protocolos TLS específicos para servidor e cliente para :class:`~ssl."
"SSLContext` foram adicionados. (Contribuído por Christian Heimes em :issue:"
"`28085`.)"

#: ../../whatsnew/3.6.rst:1475
msgid ""
"Added :attr:`ssl.SSLContext.post_handshake_auth` to enable and :meth:`ssl."
"SSLSocket.verify_client_post_handshake` to initiate TLS 1.3 post-handshake "
"authentication. (Contributed by Christian Heimes in :gh:`78851`.)"
msgstr ""
"Adicionado :attr:`ssl.SSLContext.post_handshake_auth` para ativar e :meth:"
"`ssl.SSLSocket.verify_client_post_handshake` para iniciar a autenticação TLS "
"1.3 pós-*handshake*. (Contribuído por Christian Heimes em :gh:`78851`.)"

#: ../../whatsnew/3.6.rst:1481
msgid "statistics"
msgstr "statistics"

#: ../../whatsnew/3.6.rst:1483
msgid ""
"A new :func:`~statistics.harmonic_mean` function has been added. "
"(Contributed by Steven D'Aprano in :issue:`27181`.)"
msgstr ""
"Foi adicionada uma nova função :func:`~statistics.harmonic_mean`. "
"(Contribuído por Steven D'Aprano em :issue:`27181`.)"

#: ../../whatsnew/3.6.rst:1488
msgid "struct"
msgstr "struct"

#: ../../whatsnew/3.6.rst:1490
msgid ""
":mod:`struct` now supports IEEE 754 half-precision floats via the ``'e'`` "
"format specifier. (Contributed by Eli Stevens, Mark Dickinson in :issue:"
"`11734`.)"
msgstr ""
"O módulo :mod:`struct` agora suporta floats de meia-precisão IEEE 754 "
"através do especificador de formato ``'e'``. (Contribuído por Eli Stevens, "
"Mark Dickinson em :issue:`11734`.)"

#: ../../whatsnew/3.6.rst:1496
msgid "subprocess"
msgstr "subprocesso"

#: ../../whatsnew/3.6.rst:1498
msgid ""
":class:`subprocess.Popen` destructor now emits a :exc:`ResourceWarning` "
"warning if the child process is still running. Use the context manager "
"protocol (``with proc: ...``) or explicitly call the :meth:`~subprocess."
"Popen.wait` method to read the exit status of the child process. "
"(Contributed by Victor Stinner in :issue:`26741`.)"
msgstr ""
"O destrutor de :class:`subprocess.Popen` agora emite um aviso :exc:"
"`ResourceWarning` se o processo filho ainda estiver em execução. Use o "
"protocolo de gestor de contexto (``with proc: ...``) ou chame explicitamente "
"o método :meth:`~subprocess.Popen.wait` para ler o estado de saída do "
"processo filho. (Contribuído por Victor Stinner em :issue:`26741`.)"

#: ../../whatsnew/3.6.rst:1504
msgid ""
"The :class:`subprocess.Popen` constructor and all functions that pass "
"arguments through to it now accept *encoding* and *errors* arguments. "
"Specifying either of these will enable text mode for the *stdin*, *stdout* "
"and *stderr* streams. (Contributed by Steve Dower in :issue:`6135`.)"
msgstr ""
"O construtor de :class:`subprocess.Popen` e todas as funções que passam "
"argumentos para ele agora aceitam argumentos *encoding* e *errors*. "
"Especificar qualquer um destes ativará o modo de texto para os fluxos "
"*stdin*, *stdout* e *stderr*. (Contribuído por Steve Dower em :issue:`6135`.)"

#: ../../whatsnew/3.6.rst:1511
msgid "sys"
msgstr "sys"

#: ../../whatsnew/3.6.rst:1513
msgid ""
"The new :func:`~sys.getfilesystemencodeerrors` function returns the name of "
"the error mode used to convert between Unicode filenames and bytes "
"filenames. (Contributed by Steve Dower in :issue:`27781`.)"
msgstr ""
"A nova função :func:`~sys.getfilesystemencodeerrors` retorna o nome do modo "
"de erro usado para converter entre nomes de ficheiros Unicode e nomes de "
"ficheiros em bytes. (Contribuído por Steve Dower em :issue:`27781`.)"

#: ../../whatsnew/3.6.rst:1517
msgid ""
"On Windows the return value of the :func:`~sys.getwindowsversion` function "
"now includes the *platform_version* field which contains the accurate major "
"version, minor version and build number of the current operating system, "
"rather than the version that is being emulated for the process (Contributed "
"by Steve Dower in :issue:`27932`.)"
msgstr ""
"No Windows, o valor de retorno da função :func:`~sys.getwindowsversion` "
"agora inclui o campo *platform_version*, que contém a versão principal, "
"versão secundária e número de compilação precisos do sistema operativo "
"atual, em vez da versão que está a ser emulada para o processo. (Contribuído "
"por Steve Dower em :issue:`27932`.)"

#: ../../whatsnew/3.6.rst:1525
msgid "telnetlib"
msgstr "telnetlib"

#: ../../whatsnew/3.6.rst:1527
msgid ""
":class:`~telnetlib.Telnet` is now a context manager (contributed by Stéphane "
"Wirtel in :issue:`25485`)."
msgstr ""

#: ../../whatsnew/3.6.rst:1532
msgid "time"
msgstr "time"

#: ../../whatsnew/3.6.rst:1534
msgid ""
"The :class:`~time.struct_time` attributes :attr:`tm_gmtoff` and :attr:"
"`tm_zone` are now available on all platforms."
msgstr ""

#: ../../whatsnew/3.6.rst:1539
msgid "timeit"
msgstr "timeit"

#: ../../whatsnew/3.6.rst:1541
msgid ""
"The new :meth:`Timer.autorange() <timeit.Timer.autorange>` convenience "
"method has been added to call :meth:`Timer.timeit() <timeit.Timer.timeit>` "
"repeatedly so that the total run time is greater or equal to 200 "
"milliseconds. (Contributed by Steven D'Aprano in :issue:`6422`.)"
msgstr ""
"Foi adicionado o novo método de conveniência :meth:`Timer.autorange() "
"<timeit.Timer.autorange>` para chamar :meth:`Timer.timeit() <timeit.Timer."
"timeit>` repetidamente, de modo que o tempo total de execução seja maior ou "
"igual a 200 milissegundos. (Contribuído por Steven D'Aprano em :issue:"
"`6422`.)"

#: ../../whatsnew/3.6.rst:1546
msgid ""
":mod:`timeit` now warns when there is substantial (4x) variance between best "
"and worst times. (Contributed by Serhiy Storchaka in :issue:`23552`.)"
msgstr ""
"O módulo :mod:`timeit` agora avisa quando há uma variação substancial (4x) "
"entre os melhores e piores tempos. (Contribuído por Serhiy Storchaka em :"
"issue:`23552`.)"

#: ../../whatsnew/3.6.rst:1552 ../../whatsnew/3.6.rst:2054
msgid "tkinter"
msgstr "tkinter"

#: ../../whatsnew/3.6.rst:1554
msgid ""
"Added methods :meth:`~tkinter.Variable.trace_add`, :meth:`~tkinter.Variable."
"trace_remove` and :meth:`~tkinter.Variable.trace_info` in the :class:"
"`tkinter.Variable` class.  They replace old methods :meth:`~tkinter.Variable."
"trace_variable`, :meth:`~tkinter.Variable.trace`, :meth:`~tkinter.Variable."
"trace_vdelete` and :meth:`~tkinter.Variable.trace_vinfo` that use obsolete "
"Tcl commands and might not work in future versions of Tcl. (Contributed by "
"Serhiy Storchaka in :issue:`22115`)."
msgstr ""

#: ../../whatsnew/3.6.rst:1567
msgid "traceback"
msgstr "traceback"

#: ../../whatsnew/3.6.rst:1569
msgid ""
"Both the traceback module and the interpreter's builtin exception display "
"now abbreviate long sequences of repeated lines in tracebacks as shown in "
"the following example::"
msgstr ""
"Tanto o módulo traceback como a exibição de exceções integrada do "
"interpretador agora abreviam sequências longas de linhas repetidas em "
"*tracebacks*, como mostrado no seguinte exemplo::"

#: ../../whatsnew/3.6.rst:1573
msgid ""
">>> def f(): f()\n"
"...\n"
">>> f()\n"
"Traceback (most recent call last):\n"
"  File \"<stdin>\", line 1, in <module>\n"
"  File \"<stdin>\", line 1, in f\n"
"  File \"<stdin>\", line 1, in f\n"
"  File \"<stdin>\", line 1, in f\n"
"  [Previous line repeated 995 more times]\n"
"RecursionError: maximum recursion depth exceeded"
msgstr ""
">>> def f(): f()\n"
"...\n"
">>> f()\n"
"Traceback (chamada mais recente em último lugar):\n"
"  File \"<stdin>\", line 1, in <module>\n"
"  File \"<stdin>\", line 1, in f\n"
"  File \"<stdin>\", line 1, in f\n"
"  File \"<stdin>\", line 1, in f\n"
"  [Linha anterior repetida 995 vezes]\n"
"RecursionError: profundidade máxima de recursão excedida"

#: ../../whatsnew/3.6.rst:1584
msgid "(Contributed by Emanuel Barry in :issue:`26823`.)"
msgstr "(Contribuído por Emanuel Barry em :issue:`26823`.)"

#: ../../whatsnew/3.6.rst:1588
msgid "tracemalloc"
msgstr "tracemalloc"

#: ../../whatsnew/3.6.rst:1590
msgid ""
"The :mod:`tracemalloc` module now supports tracing memory allocations in "
"multiple different address spaces."
msgstr ""
"O módulo :mod:`tracemalloc` agora suporta o rastreamento de alocações de "
"memória em vários espaços de endereçamento diferentes."

#: ../../whatsnew/3.6.rst:1593
msgid ""
"The new :class:`~tracemalloc.DomainFilter` filter class has been added to "
"filter block traces by their address space (domain)."
msgstr ""
"Foi adicionada a nova classe de filtro :class:`~tracemalloc.DomainFilter` "
"para filtrar rastreios de blocos pelo seu espaço de endereçamento (domínio)."

#: ../../whatsnew/3.6.rst:1596
msgid "(Contributed by Victor Stinner in :issue:`26588`.)"
msgstr "(Contribuído por Victor Stinner em :issue:`26588`.)"

#: ../../whatsnew/3.6.rst:1602
msgid "typing"
msgstr "typing"

#: ../../whatsnew/3.6.rst:1604
msgid ""
"Since the :mod:`typing` module is :term:`provisional <provisional API>`, all "
"changes introduced in Python 3.6 have also been backported to Python 3.5.x."
msgstr ""
"Como o módulo :mod:`typing` é :term:`provisório <provisional API>`, todas as "
"alterações introduzidas no Python 3.6 também foram retroportadas para o "
"Python 3.5.x."

#: ../../whatsnew/3.6.rst:1608
msgid ""
"The :mod:`typing` module has a much improved support for generic type "
"aliases.  For example ``Dict[str, Tuple[S, T]]`` is now a valid type "
"annotation. (Contributed by Guido van Rossum in `Github #195 <https://github."
"com/python/typing/pull/195>`_.)"
msgstr ""
"O módulo :mod:`typing` tem um suporte muito melhorado para *aliases* de "
"tipos genéricos. Por exemplo, ``Dict[str, Tuple[S, T]]`` é agora uma "
"anotação de tipo válida. (Contribuído por Guido van Rossum em `Github #195 "
"<https://github.com/python/typing/pull/195>`_.)"

#: ../../whatsnew/3.6.rst:1614
msgid ""
"The :class:`typing.ContextManager` class has been added for representing :"
"class:`contextlib.AbstractContextManager`. (Contributed by Brett Cannon in :"
"issue:`25609`.)"
msgstr ""
"Foi adicionada a classe :class:`typing.ContextManager` para representar :"
"class:`contextlib.AbstractContextManager`. (Contribuído por Brett Cannon em :"
"issue:`25609`.)"

#: ../../whatsnew/3.6.rst:1618
msgid ""
"The :class:`typing.Collection` class has been added for representing :class:"
"`collections.abc.Collection`. (Contributed by Ivan Levkivskyi in :issue:"
"`27598`.)"
msgstr ""
"Foi adicionada a classe :class:`typing.Collection` para representar :class:"
"`collections.abc.Collection`. (Contribuído por Ivan Levkivskyi em :issue:"
"`27598`.)"

#: ../../whatsnew/3.6.rst:1622
msgid ""
"The :const:`typing.ClassVar` type construct has been added to mark class "
"variables.  As introduced in :pep:`526`, a variable annotation wrapped in "
"ClassVar indicates that a given attribute is intended to be used as a class "
"variable and should not be set on instances of that class. (Contributed by "
"Ivan Levkivskyi in `Github #280 <https://github.com/python/typing/"
"pull/280>`_.)"
msgstr ""
"Foi adicionado o construtor de tipo :const:`typing.ClassVar` para marcar "
"variáveis de classe. Como introduzido na :pep:`526`, uma anotação de "
"variável envolvida em ClassVar indica que um determinado atributo é "
"destinado a ser usado como uma variável de classe e não deve ser definido em "
"instâncias dessa classe. (Contribuído por Ivan Levkivskyi em `Github #280 "
"<https://github.com/python/typing/pull/280>`_.)"

#: ../../whatsnew/3.6.rst:1629
msgid ""
"A new :const:`~typing.TYPE_CHECKING` constant that is assumed to be ``True`` "
"by the static type checkers, but is ``False`` at runtime. (Contributed by "
"Guido van Rossum in `Github #230 <https://github.com/python/typing/"
"issues/230>`_.)"
msgstr ""
"Uma nova constante :const:`~typing.TYPE_CHECKING` que é assumida como "
"``True`` pelos verificadores de tipo estático, mas é ``False`` em tempo de "
"execução. (Contribuído por Guido van Rossum em `Github #230 <https://github."
"com/python/typing/issues/230>`_.)"

#: ../../whatsnew/3.6.rst:1634
msgid ""
"A new :func:`~typing.NewType` helper function has been added to create "
"lightweight distinct types for annotations::"
msgstr ""
"Foi adicionada uma nova função auxiliar :func:`~typing.NewType` para criar "
"tipos distintos leves para anotações::"

#: ../../whatsnew/3.6.rst:1637
msgid ""
"from typing import NewType\n"
"\n"
"UserId = NewType('UserId', int)\n"
"some_id = UserId(524313)"
msgstr ""
"from typing import NewType\n"
"\n"
"UserId = NewType('UserId', int)\n"
"some_id = UserId(524313)"

#: ../../whatsnew/3.6.rst:1642
msgid ""
"The static type checker will treat the new type as if it were a subclass of "
"the original type.  (Contributed by Ivan Levkivskyi in `Github #189 <https://"
"github.com/python/typing/issues/189>`_.)"
msgstr ""
"O verificador de tipo estático tratará o novo tipo como se fosse uma "
"subclasse do tipo original. (Contribuído por Ivan Levkivskyi em `Github #189 "
"<https://github.com/python/typing/issues/189>`_.)"

#: ../../whatsnew/3.6.rst:1648
msgid "unicodedata"
msgstr "unicodedata"

#: ../../whatsnew/3.6.rst:1650
msgid ""
"The :mod:`unicodedata` module now uses data from `Unicode 9.0.0 <https://"
"unicode.org/versions/Unicode9.0.0/>`_. (Contributed by Benjamin Peterson.)"
msgstr ""
"O módulo :mod:`unicodedata` agora usa dados de `Unicode 9.0.0 <https://"
"unicode.org/versions/Unicode9.0.0/>`_. (Contribuído por Benjamin Peterson.)"

#: ../../whatsnew/3.6.rst:1656
msgid "unittest.mock"
msgstr "unittest.mock"

#: ../../whatsnew/3.6.rst:1658
msgid "The :class:`~unittest.mock.Mock` class has the following improvements:"
msgstr "A classe :class:`~unittest.mock.Mock` tem as seguintes melhorias:"

#: ../../whatsnew/3.6.rst:1660
msgid ""
"Two new methods, :meth:`Mock.assert_called() <unittest.mock.Mock."
"assert_called>` and :meth:`Mock.assert_called_once() <unittest.mock.Mock."
"assert_called_once>` to check if the mock object was called. (Contributed by "
"Amit Saha in :issue:`26323`.)"
msgstr ""
"Dois novos métodos, :meth:`Mock.assert_called() <unittest.mock.Mock."
"assert_called>` e :meth:`Mock.assert_called_once() <unittest.mock.Mock."
"assert_called_once>`, para verificar se o objeto mock foi chamado. "
"(Contribuído por Amit Saha em :issue:`26323`.)"

#: ../../whatsnew/3.6.rst:1666
msgid ""
"The :meth:`Mock.reset_mock() <unittest.mock.Mock.reset_mock>` method now has "
"two optional keyword only arguments: *return_value* and *side_effect*. "
"(Contributed by Kushal Das in :issue:`21271`.)"
msgstr ""
"O método :meth:`Mock.reset_mock() <unittest.mock.Mock.reset_mock>` agora tem "
"dois argumentos opcionais apenas por palavra-chave: *return_value* e "
"*side_effect*. (Contribuído por Kushal Das em :issue:`21271`.)"

#: ../../whatsnew/3.6.rst:1673
msgid "urllib.request"
msgstr "urllib.request"

#: ../../whatsnew/3.6.rst:1675
msgid ""
"If a HTTP request has a file or iterable body (other than a bytes object) "
"but no ``Content-Length`` header, rather than throwing an error, :class:"
"`~urllib.request.AbstractHTTPHandler` now falls back to use chunked transfer "
"encoding. (Contributed by Demian Brecht and Rolf Krahl in :issue:`12319`.)"
msgstr ""

#: ../../whatsnew/3.6.rst:1683
msgid "urllib.robotparser"
msgstr "urllib.robotparser"

#: ../../whatsnew/3.6.rst:1685
msgid ""
":class:`~urllib.robotparser.RobotFileParser` now supports the ``Crawl-"
"delay`` and ``Request-rate`` extensions. (Contributed by Nikolay Bogoychev "
"in :issue:`16099`.)"
msgstr ""
":class:`~urllib.robotparser.RobotFileParser` agora suporta as extensões "
"``Crawl-delay`` e ``Request-rate``. (Contribuído por Nikolay Bogoychev em :"
"issue:`16099`.)"

#: ../../whatsnew/3.6.rst:1691 ../../whatsnew/3.6.rst:2062
msgid "venv"
msgstr "venv"

#: ../../whatsnew/3.6.rst:1693
msgid ""
":mod:`venv` accepts a new parameter ``--prompt``. This parameter provides an "
"alternative prefix for the virtual environment. (Proposed by Łukasz "
"Balcerzak and ported to 3.6 by Stéphane Wirtel in :issue:`22829`.)"
msgstr ""
"O módulo :mod:`venv` agora aceita um novo parâmetro ``--prompt``. Este "
"parâmetro fornece um prefixo alternativo para o ambiente virtual. (Proposto "
"por Łukasz Balcerzak e portado para 3.6 por Stéphane Wirtel em :issue:"
"`22829`.)"

#: ../../whatsnew/3.6.rst:1699
msgid "warnings"
msgstr "warnings"

#: ../../whatsnew/3.6.rst:1701
msgid ""
"A new optional *source* parameter has been added to the :func:`warnings."
"warn_explicit` function: the destroyed object which emitted a :exc:"
"`ResourceWarning`. A *source* attribute has also been added to :class:"
"`warnings.WarningMessage` (contributed by Victor Stinner in :issue:`26568` "
"and :issue:`26567`)."
msgstr ""

#: ../../whatsnew/3.6.rst:1707
msgid ""
"When a :exc:`ResourceWarning` warning is logged, the :mod:`tracemalloc` "
"module is now used to try to retrieve the traceback where the destroyed "
"object was allocated."
msgstr ""
"Quando um aviso :exc:`ResourceWarning` é registado, o módulo :mod:"
"`tracemalloc` agora é usado para tentar recuperar o *traceback* de onde o "
"objeto destruído foi alocado."

#: ../../whatsnew/3.6.rst:1710
msgid "Example with the script ``example.py``::"
msgstr "Exemplo com o script ``example.py``::"

#: ../../whatsnew/3.6.rst:1712
msgid ""
"import warnings\n"
"\n"
"def func():\n"
"    return open(__file__)\n"
"\n"
"f = func()\n"
"f = None"
msgstr ""
"import warnings\n"
"\n"
"def func():\n"
"    return open(__file__)\n"
"\n"
"f = func()\n"
"f = None"

#: ../../whatsnew/3.6.rst:1720
msgid "Output of the command ``python3.6 -Wd -X tracemalloc=5 example.py``::"
msgstr "Saída do comando ``python3.6 -Wd -X tracemalloc=5 example.py``::"

#: ../../whatsnew/3.6.rst:1722
msgid ""
"example.py:7: ResourceWarning: unclosed file <_io.TextIOWrapper "
"name='example.py' mode='r' encoding='UTF-8'>\n"
"  f = None\n"
"Object allocated at (most recent call first):\n"
"  File \"example.py\", lineno 4\n"
"    return open(__file__)\n"
"  File \"example.py\", lineno 6\n"
"    f = func()"
msgstr ""
"example.py:7: ResourceWarning: ficheiro não fechado <_io.TextIOWrapper "
"name='example.py' mode='r' encoding='UTF-8'>\n"
"  f = None\n"
"Objeto alocado em (chamada mais recente primeiro):\n"
"  Ficheiro \"example.py\", linha 4\n"
"    return open(__file__)\n"
"  Ficheiro \"example.py\", linha 6\n"
"    f = func()"

#: ../../whatsnew/3.6.rst:1730
msgid ""
"The \"Object allocated at\" traceback is new and is only displayed if :mod:"
"`tracemalloc` is tracing Python memory allocations and if the :mod:"
"`warnings` module was already imported."
msgstr ""
"O *traceback* \"Objeto alocado em\" é novo e só é exibido se :mod:"
"`tracemalloc` estiver a rastrear alocações de memória Python e se o módulo :"
"mod:`warnings` já tiver sido importado."

#: ../../whatsnew/3.6.rst:1736
msgid "winreg"
msgstr "winreg"

#: ../../whatsnew/3.6.rst:1738
msgid ""
"Added the 64-bit integer type :data:`REG_QWORD <winreg.REG_QWORD>`. "
"(Contributed by Clement Rouault in :issue:`23026`.)"
msgstr ""
"Foi adicionado o tipo de inteiro de 64 bits :data:`REG_QWORD <winreg."
"REG_QWORD>`. (Contribuído por Clement Rouault em :issue:`23026`.)"

#: ../../whatsnew/3.6.rst:1743
msgid "winsound"
msgstr "winsound"

#: ../../whatsnew/3.6.rst:1745
msgid ""
"Allowed keyword arguments to be passed to :func:`Beep <winsound.Beep>`, :"
"func:`MessageBeep <winsound.MessageBeep>`, and :func:`PlaySound <winsound."
"PlaySound>` (:issue:`27982`)."
msgstr ""
"Agora é permitido passar argumentos nomeados para :func:`Beep <winsound."
"Beep>`, :func:`MessageBeep <winsound.MessageBeep>` e :func:`PlaySound "
"<winsound.PlaySound>`. (:issue:`27982`.)"

#: ../../whatsnew/3.6.rst:1751
msgid "xmlrpc.client"
msgstr "xmlrpc.client"

#: ../../whatsnew/3.6.rst:1753
msgid ""
"The :mod:`xmlrpc.client` module now supports unmarshalling additional data "
"types used by the Apache XML-RPC implementation for numerics and ``None``. "
"(Contributed by Serhiy Storchaka in :issue:`26885`.)"
msgstr ""
"O módulo :mod:`xmlrpc.client` agora suporta a desserialização de tipos de "
"dados adicionais usados pela implementação Apache XML-RPC para numéricos e "
"``None``. (Contribuído por Serhiy Storchaka em :issue:`26885`.)"

#: ../../whatsnew/3.6.rst:1760
msgid "zipfile"
msgstr "zipfile"

#: ../../whatsnew/3.6.rst:1762
msgid ""
"A new :meth:`ZipInfo.from_file() <zipfile.ZipInfo.from_file>` class method "
"allows making a :class:`~zipfile.ZipInfo` instance from a filesystem file. A "
"new :meth:`ZipInfo.is_dir() <zipfile.ZipInfo.is_dir>` method can be used to "
"check if the :class:`~zipfile.ZipInfo` instance represents a directory. "
"(Contributed by Thomas Kluyver in :issue:`26039`.)"
msgstr ""
"Um novo método de classe :meth:`ZipInfo.from_file() <zipfile.ZipInfo."
"from_file>` permite criar uma instância de :class:`~zipfile.ZipInfo` a "
"partir de um ficheiro do sistema de ficheiros. Um novo método :meth:`ZipInfo."
"is_dir() <zipfile.ZipInfo.is_dir>` pode ser usado para verificar se a "
"instância de :class:`~zipfile.ZipInfo` representa um diretório. (Contribuído "
"por Thomas Kluyver em :issue:`26039`.)"

#: ../../whatsnew/3.6.rst:1768
msgid ""
"The :meth:`ZipFile.open() <zipfile.ZipFile.open>` method can now be used to "
"write data into a ZIP file, as well as for extracting data. (Contributed by "
"Thomas Kluyver in :issue:`26039`.)"
msgstr ""
"O método :meth:`ZipFile.open() <zipfile.ZipFile.open>` agora pode ser usado "
"para escrever dados num ficheiro ZIP, bem como para extrair dados. "
"(Contribuído por Thomas Kluyver em :issue:`26039`.)"

#: ../../whatsnew/3.6.rst:1774
msgid "zlib"
msgstr "zlib"

#: ../../whatsnew/3.6.rst:1776
msgid ""
"The :func:`~zlib.compress` and :func:`~zlib.decompress` functions now accept "
"keyword arguments. (Contributed by Aviv Palivoda in :issue:`26243` and Xiang "
"Zhang in :issue:`16764` respectively.)"
msgstr ""
"As funções :func:`~zlib.compress` e :func:`~zlib.decompress` agora aceitam "
"argumentos nomeados. (Contribuído por Aviv Palivoda em :issue:`26243` e "
"Xiang Zhang em :issue:`16764`, respetivamente.)"

#: ../../whatsnew/3.6.rst:1783
msgid "Optimizations"
msgstr "Otimizações"

#: ../../whatsnew/3.6.rst:1785
msgid ""
"The Python interpreter now uses a 16-bit wordcode instead of bytecode which "
"made a number of opcode optimizations possible. (Contributed by Demur Rumed "
"with input and reviews from Serhiy Storchaka and Victor Stinner in :issue:"
"`26647` and :issue:`28050`.)"
msgstr ""
"O interpretador Python agora usa um *wordcode* de 16 bits em vez de "
"*bytecode*, o que tornou possível várias otimizações de *opcode*. "
"(Contribuído por Demur Rumed com contribuições e revisões de Serhiy "
"Storchaka e Victor Stinner em :issue:`26647` e :issue:`28050`.)"

#: ../../whatsnew/3.6.rst:1790
msgid ""
"The :class:`asyncio.Future` class now has an optimized C implementation. "
"(Contributed by Yury Selivanov and INADA Naoki in :issue:`26081`.)"
msgstr ""
"A classe :class:`asyncio.Future` agora tem uma implementação otimizada em C. "
"(Contribuído por Yury Selivanov e INADA Naoki em :issue:`26081`.)"

#: ../../whatsnew/3.6.rst:1793
msgid ""
"The :class:`asyncio.Task` class now has an optimized C implementation. "
"(Contributed by Yury Selivanov in :issue:`28544`.)"
msgstr ""
"A classe :class:`asyncio.Task` agora tem uma implementação otimizada em C. "
"(Contribuído por Yury Selivanov em :issue:`28544`.)"

#: ../../whatsnew/3.6.rst:1796
msgid ""
"Various implementation improvements in the :mod:`typing` module (such as "
"caching of generic types) allow up to 30 times performance improvements and "
"reduced memory footprint."
msgstr ""
"Várias melhorias de implementação no módulo :mod:`typing` (como o *caching* "
"de tipos genéricos) permitem melhorias de desempenho até 30 vezes e redução "
"da pegada de memória."

#: ../../whatsnew/3.6.rst:1800
msgid ""
"The ASCII decoder is now up to 60 times as fast for error handlers "
"``surrogateescape``, ``ignore`` and ``replace`` (Contributed by Victor "
"Stinner in :issue:`24870`)."
msgstr ""
"O descodificador ASCII agora é até 60 vezes mais rápido para os *handlers* "
"de erro ``surrogateescape``, ``ignore`` e ``replace``. (Contribuído por "
"Victor Stinner em :issue:`24870`.)"

#: ../../whatsnew/3.6.rst:1804
msgid ""
"The ASCII and the Latin1 encoders are now up to 3 times as fast for the "
"error handler ``surrogateescape`` (Contributed by Victor Stinner in :issue:"
"`25227`)."
msgstr ""
"Os codificadores ASCII e Latin1 agora são até 3 vezes mais rápidos para o "
"*handler* de erro ``surrogateescape``. (Contribuído por Victor Stinner em :"
"issue:`25227`.)"

#: ../../whatsnew/3.6.rst:1808
msgid ""
"The UTF-8 encoder is now up to 75 times as fast for error handlers "
"``ignore``, ``replace``, ``surrogateescape``, ``surrogatepass`` (Contributed "
"by Victor Stinner in :issue:`25267`)."
msgstr ""
"O codificador UTF-8 agora é até 75 vezes mais rápido para os *handlers* de "
"erro ``ignore``, ``replace``, ``surrogateescape`` e ``surrogatepass``. "
"(Contribuído por Victor Stinner em :issue:`25267`.)"

#: ../../whatsnew/3.6.rst:1812
msgid ""
"The UTF-8 decoder is now up to 15 times as fast for error handlers "
"``ignore``, ``replace`` and ``surrogateescape`` (Contributed by Victor "
"Stinner in :issue:`25301`)."
msgstr ""
"O descodificador UTF-8 agora é até 15 vezes mais rápido para os *handlers* "
"de erro ``ignore``, ``replace`` e ``surrogateescape``. (Contribuído por "
"Victor Stinner em :issue:`25301`.)"

#: ../../whatsnew/3.6.rst:1816
msgid ""
"``bytes % args`` is now up to 2 times faster. (Contributed by Victor Stinner "
"in :issue:`25349`)."
msgstr ""
"``bytes % args`` agora é até 2 vezes mais rápido. (Contribuído por Victor "
"Stinner em :issue:`25349`.)"

#: ../../whatsnew/3.6.rst:1819
msgid ""
"``bytearray % args`` is now between 2.5 and 5 times faster. (Contributed by "
"Victor Stinner in :issue:`25399`)."
msgstr ""
"``bytearray % args`` agora é entre 2,5 e 5 vezes mais rápido. (Contribuído "
"por Victor Stinner em :issue:`25399`.)"

#: ../../whatsnew/3.6.rst:1822
msgid ""
"Optimize :meth:`bytes.fromhex` and :meth:`bytearray.fromhex`: they are now "
"between 2x and 3.5x faster. (Contributed by Victor Stinner in :issue:"
"`25401`)."
msgstr ""
"Otimização de :meth:`bytes.fromhex` e :meth:`bytearray.fromhex`: agora são "
"entre 2x e 3,5x mais rápidos. (Contribuído por Victor Stinner em :issue:"
"`25401`.)"

#: ../../whatsnew/3.6.rst:1825
msgid ""
"Optimize ``bytes.replace(b'', b'.')`` and ``bytearray.replace(b'', b'.')``: "
"up to 80% faster. (Contributed by Josh Snider in :issue:`26574`)."
msgstr ""
"Otimização de ``bytes.replace(b'', b'.')`` e ``bytearray.replace(b'', "
"b'.')``: até 80% mais rápido. (Contribuído por Josh Snider em :issue:"
"`26574`.)"

#: ../../whatsnew/3.6.rst:1828
msgid ""
"Allocator functions of the :c:func:`PyMem_Malloc` domain (:c:macro:"
"`PYMEM_DOMAIN_MEM`) now use the :ref:`pymalloc memory allocator <pymalloc>` "
"instead of :c:func:`malloc` function of the C library. The pymalloc "
"allocator is optimized for objects smaller or equal to 512 bytes with a "
"short lifetime, and use :c:func:`malloc` for larger memory blocks. "
"(Contributed by Victor Stinner in :issue:`26249`)."
msgstr ""
"As funções de alocação do domínio :c:func:`PyMem_Malloc` (:c:macro:"
"`PYMEM_DOMAIN_MEM`) agora usam o :ref:`alocador de memória pymalloc "
"<pymalloc>` em vez da função :c:func:`malloc` da biblioteca C. O alocador "
"pymalloc é otimizado para objetos menores ou iguais a 512 bytes com um tempo "
"de vida curto, e usa :c:func:`malloc` para blocos de memória maiores. "
"(Contribuído por Victor Stinner em :issue:`26249`.)"

#: ../../whatsnew/3.6.rst:1835
msgid ""
":func:`pickle.load` and :func:`pickle.loads` are now up to 10% faster when "
"deserializing many small objects (Contributed by Victor Stinner in :issue:"
"`27056`)."
msgstr ""
":func:`pickle.load` e :func:`pickle.loads` agora são até 10% mais rápidos ao "
"desserializar muitos objetos pequenos. (Contribuído por Victor Stinner em :"
"issue:`27056`.)"

#: ../../whatsnew/3.6.rst:1839
msgid ""
"Passing :term:`keyword arguments <keyword argument>` to a function has an "
"overhead in comparison with passing :term:`positional arguments <positional "
"argument>`.  Now in extension functions implemented with using Argument "
"Clinic this overhead is significantly decreased. (Contributed by Serhiy "
"Storchaka in :issue:`27574`)."
msgstr ""
"Passar :term:`argumentos nomeados <keyword argument>` para uma função tem "
"uma sobrecarga em comparação com passar :term:`argumentos posicionais "
"<positional argument>`. Agora, em funções de extensão implementadas usando "
"Argument Clinic, esta sobrecarga é significativamente reduzida. (Contribuído "
"por Serhiy Storchaka em :issue:`27574`.)"

#: ../../whatsnew/3.6.rst:1845
msgid ""
"Optimized :func:`~glob.glob` and :func:`~glob.iglob` functions in the :mod:"
"`glob` module; they are now about 3--6 times faster. (Contributed by Serhiy "
"Storchaka in :issue:`25596`)."
msgstr ""
"Otimização das funções :func:`~glob.glob` e :func:`~glob.iglob` no módulo :"
"mod:`glob`; agora são cerca de 3 a 6 vezes mais rápidas. (Contribuído por "
"Serhiy Storchaka em :issue:`25596`.)"

#: ../../whatsnew/3.6.rst:1849
msgid ""
"Optimized globbing in :mod:`pathlib` by using :func:`os.scandir`; it is now "
"about 1.5--4 times faster. (Contributed by Serhiy Storchaka in :issue:"
"`26032`)."
msgstr ""
"Otimização de *globbing* em :mod:`pathlib` usando :func:`os.scandir`; agora "
"é cerca de 1,5 a 4 vezes mais rápido. (Contribuído por Serhiy Storchaka em :"
"issue:`26032`.)"

#: ../../whatsnew/3.6.rst:1853
msgid ""
":class:`xml.etree.ElementTree` parsing, iteration and deepcopy performance "
"has been significantly improved. (Contributed by Serhiy Storchaka in :issue:"
"`25638`, :issue:`25873`, and :issue:`25869`.)"
msgstr ""
"O desempenho de análise, iteração e *deepcopy* de :class:`xml.etree."
"ElementTree` foi significativamente melhorado. (Contribuído por Serhiy "
"Storchaka em :issue:`25638`, :issue:`25873` e :issue:`25869`.)"

#: ../../whatsnew/3.6.rst:1858
msgid ""
"Creation of :class:`fractions.Fraction` instances from floats and decimals "
"is now 2 to 3 times faster. (Contributed by Serhiy Storchaka in :issue:"
"`25971`.)"
msgstr ""
"A criação de instâncias de :class:`fractions.Fraction` a partir de floats e "
"decimais agora é 2 a 3 vezes mais rápida. (Contribuído por Serhiy Storchaka "
"em :issue:`25971`.)"

#: ../../whatsnew/3.6.rst:1864
msgid "Build and C API Changes"
msgstr "Alterações na Compilação e na API C"

#: ../../whatsnew/3.6.rst:1866
msgid ""
"Python now requires some C99 support in the toolchain to build. Most "
"notably, Python now uses standard integer types and macros in place of "
"custom macros like ``PY_LONG_LONG``. For more information, see :pep:`7` and :"
"issue:`17884`."
msgstr ""
"O Python agora requer algum suporte C99 na cadeia de ferramentas para "
"compilar. Notavelmente, o Python agora usa tipos de inteiros e macros padrão "
"em vez de macros personalizadas como ``PY_LONG_LONG``. Para mais "
"informações, veja :pep:`7` e :issue:`17884`."

#: ../../whatsnew/3.6.rst:1871
msgid ""
"Cross-compiling CPython with the Android NDK and the Android API level set "
"to 21 (Android 5.0 Lollipop) or greater runs successfully. While Android is "
"not yet a supported platform, the Python test suite runs on the Android "
"emulator with only about 16 tests failures. See the Android meta-issue :"
"issue:`26865`."
msgstr ""
"A compilação cruzada do CPython com o Android NDK e o nível de API do "
"Android definido para 21 (Android 5.0 Lollipop) ou superior funciona com "
"sucesso. Embora o Android ainda não seja uma plataforma suportada, a suíte "
"de testes do Python é executada no emulador Android com apenas cerca de 16 "
"falhas de teste. Veja o meta-*issue* do Android :issue:`26865`."

#: ../../whatsnew/3.6.rst:1876
msgid ""
"The ``--enable-optimizations`` configure flag has been added. Turning it on "
"will activate expensive optimizations like PGO. (Original patch by "
"Alecsandru Patrascu of Intel in :issue:`26359`.)"
msgstr ""
"Foi adicionada a *flag* de configuração ``--enable-optimizations``. Ativá-la "
"ativará otimizações dispendiosas como PGO. (*Patch* original de Alecsandru "
"Patrascu da Intel em :issue:`26359`.)"

#: ../../whatsnew/3.6.rst:1880
msgid ""
"The :term:`GIL <global interpreter lock>` must now be held when allocator "
"functions of :c:macro:`PYMEM_DOMAIN_OBJ` (ex: :c:func:`PyObject_Malloc`) "
"and :c:macro:`PYMEM_DOMAIN_MEM` (ex: :c:func:`PyMem_Malloc`) domains are "
"called."
msgstr ""
"O :term:`GIL <global interpreter lock>` deve agora ser mantido quando as "
"funções de alocação dos domínios :c:macro:`PYMEM_DOMAIN_OBJ` (ex: :c:func:"
"`PyObject_Malloc`) e :c:macro:`PYMEM_DOMAIN_MEM` (ex: :c:func:"
"`PyMem_Malloc`) são chamadas."

#: ../../whatsnew/3.6.rst:1884
msgid ""
"New :c:func:`Py_FinalizeEx` API which indicates if flushing buffered data "
"failed. (Contributed by Martin Panter in :issue:`5319`.)"
msgstr ""
"Nova API :c:func:`Py_FinalizeEx`, que indica se a descarga de dados em "
"*buffer* falhou. (Contribuído por Martin Panter em :issue:`5319`.)"

#: ../../whatsnew/3.6.rst:1888
msgid ""
":c:func:`PyArg_ParseTupleAndKeywords` now supports :ref:`positional-only "
"parameters <positional-only_parameter>`.  Positional-only parameters are "
"defined by empty names. (Contributed by Serhiy Storchaka in :issue:`26282`)."
msgstr ""
":c:func:`PyArg_ParseTupleAndKeywords` agora suporta :ref:`parâmetros apenas "
"posicionais <positional-only_parameter>`. Parâmetros apenas posicionais são "
"definidos por nomes vazios. (Contribuído por Serhiy Storchaka em :issue:"
"`26282`.)"

#: ../../whatsnew/3.6.rst:1893
msgid ""
"``PyTraceback_Print`` method now abbreviates long sequences of repeated "
"lines as ``\"[Previous line repeated {count} more times]\"``. (Contributed "
"by Emanuel Barry in :issue:`26823`.)"
msgstr ""
"O método ``PyTraceback_Print`` agora abrevia sequências longas de linhas "
"repetidas como ``\"[Linha anterior repetida {count} vezes]\"``. (Contribuído "
"por Emanuel Barry em :issue:`26823`.)"

#: ../../whatsnew/3.6.rst:1897
msgid ""
"The new :c:func:`PyErr_SetImportErrorSubclass` function allows for "
"specifying a subclass of :exc:`ImportError` to raise. (Contributed by Eric "
"Snow in :issue:`15767`.)"
msgstr ""
"A nova função :c:func:`PyErr_SetImportErrorSubclass` permite especificar uma "
"subclasse de :exc:`ImportError` para lançar. (Contribuído por Eric Snow em :"
"issue:`15767`.)"

#: ../../whatsnew/3.6.rst:1901
msgid ""
"The new :c:func:`PyErr_ResourceWarning` function can be used to generate a :"
"exc:`ResourceWarning` providing the source of the resource allocation. "
"(Contributed by Victor Stinner in :issue:`26567`.)"
msgstr ""
"A nova função :c:func:`PyErr_ResourceWarning` pode ser usada para gerar um :"
"exc:`ResourceWarning`, fornecendo a fonte da alocação do recurso. "
"(Contribuído por Victor Stinner em :issue:`26567`.)"

#: ../../whatsnew/3.6.rst:1905
msgid ""
"The new :c:func:`PyOS_FSPath` function returns the file system "
"representation of a :term:`path-like object`. (Contributed by Brett Cannon "
"in :issue:`27186`.)"
msgstr ""
"A nova função :c:func:`PyOS_FSPath` retorna a representação do sistema de "
"ficheiros de um :term:`objeto semelhante a caminho`. (Contribuído por Brett "
"Cannon em :issue:`27186`.)"

#: ../../whatsnew/3.6.rst:1909
msgid ""
"The :c:func:`PyUnicode_FSConverter` and :c:func:`PyUnicode_FSDecoder` "
"functions will now accept :term:`path-like objects <path-like object>`."
msgstr ""
"As funções :c:func:`PyUnicode_FSConverter` e :c:func:`PyUnicode_FSDecoder` "
"agora aceitam :term:`objetos semelhantes a caminhos <path-like object>`."

#: ../../whatsnew/3.6.rst:1914
msgid "Other Improvements"
msgstr "Outras Melhorias"

#: ../../whatsnew/3.6.rst:1916
msgid ""
"When :option:`--version` (short form: :option:`-V`) is supplied twice, "
"Python prints :data:`sys.version` for detailed information."
msgstr ""
"Quando :option:`--version` (forma curta: :option:`-V`) é fornecido duas "
"vezes, o Python imprime :data:`sys.version` para informações detalhadas."

#: ../../whatsnew/3.6.rst:1919
msgid ""
"$ ./python -VV\n"
"Python 3.6.0b4+ (3.6:223967b49e49+, Nov 21 2016, 20:55:04)\n"
"[GCC 4.2.1 Compatible Apple LLVM 8.0.0 (clang-800.0.42.1)]"
msgstr ""
"$ ./python -VV\n"
"Python 3.6.0b4+ (3.6:223967b49e49+, 21 Nov 2016, 20:55:04)\n"
"[GCC 4.2.1 Compatível com Apple LLVM 8.0.0 (clang-800.0.42.1)]"

#: ../../whatsnew/3.6.rst:1927
msgid "Deprecated"
msgstr "Obsoleto"

#: ../../whatsnew/3.6.rst:1930
msgid "New Keywords"
msgstr "Novas Palavras-Chave"

#: ../../whatsnew/3.6.rst:1932
msgid ""
"``async`` and ``await`` are not recommended to be used as variable, class, "
"function or module names.  Introduced by :pep:`492` in Python 3.5, they will "
"become proper keywords in Python 3.7.  Starting in Python 3.6, the use of "
"``async`` or ``await`` as names will generate a :exc:`DeprecationWarning`."
msgstr ""
"Não é recomendado usar ``async`` e ``await`` como nomes de variáveis, "
"classes, funções ou módulos. Introduzidas pela :pep:`492` no Python 3.5, "
"tornar-se-ão palavras-chave próprias no Python 3.7. A partir do Python 3.6, "
"o uso de ``async`` ou ``await`` como nomes gerará um :exc:"
"`DeprecationWarning`."

#: ../../whatsnew/3.6.rst:1939
msgid "Deprecated Python behavior"
msgstr "Comportamento Python Obsoleto"

#: ../../whatsnew/3.6.rst:1941
msgid ""
"Raising the :exc:`StopIteration` exception inside a generator will now "
"generate a :exc:`DeprecationWarning`, and will trigger a :exc:`RuntimeError` "
"in Python 3.7.  See :ref:`whatsnew-pep-479` for details."
msgstr ""
"Lançar a exceção :exc:`StopIteration` dentro de um gerador agora gerará um :"
"exc:`DeprecationWarning` e desencadeará um :exc:`RuntimeError` no Python "
"3.7. Veja :ref:`whatsnew-pep-479` para mais detalhes."

#: ../../whatsnew/3.6.rst:1945
msgid ""
"The :meth:`__aiter__` method is now expected to return an asynchronous "
"iterator directly instead of returning an awaitable as previously. Doing the "
"former will trigger a :exc:`DeprecationWarning`.  Backward compatibility "
"will be removed in Python 3.7. (Contributed by Yury Selivanov in :issue:"
"`27243`.)"
msgstr ""

#: ../../whatsnew/3.6.rst:1951
msgid ""
"A backslash-character pair that is not a valid escape sequence now generates "
"a :exc:`DeprecationWarning`.  Although this will eventually become a :exc:"
"`SyntaxError`, that will not be for several Python releases. (Contributed by "
"Emanuel Barry in :issue:`27364`.)"
msgstr ""
"Um par de caracteres de barra invertida que não é uma sequência de escape "
"válida agora gera um :exc:`DeprecationWarning`. Embora isto eventualmente se "
"torne um :exc:`SyntaxError`, isso não acontecerá em várias versões do "
"Python. (Contribuído por Emanuel Barry em :issue:`27364`.)"

#: ../../whatsnew/3.6.rst:1956
msgid ""
"When performing a relative import, falling back on ``__name__`` and "
"``__path__`` from the calling module when ``__spec__`` or ``__package__`` "
"are not defined now raises an :exc:`ImportWarning`. (Contributed by Rose "
"Ames in :issue:`25791`.)"
msgstr ""
"Ao realizar uma importação relativa, recorrer a ``__name__`` e ``__path__`` "
"do módulo chamador quando ``__spec__`` ou ``__package__`` não estão "
"definidos agora gera um :exc:`ImportWarning`. (Contribuído por Rose Ames em :"
"issue:`25791`.)"

#: ../../whatsnew/3.6.rst:1963
msgid "Deprecated Python modules, functions and methods"
msgstr "Módulos, funções e métodos Python obsoleto"

#: ../../whatsnew/3.6.rst:1966
msgid "asynchat"
msgstr "asynchat"

#: ../../whatsnew/3.6.rst:1968
msgid ""
"The :mod:`!asynchat` has been deprecated in favor of :mod:`asyncio`. "
"(Contributed by Mariatta in :issue:`25002`.)"
msgstr ""
"O módulo :mod:`!asynchat` foi obsoleto em favor de :mod:`asyncio`. "
"(Contribuído por Mariatta em :issue:`25002`.)"

#: ../../whatsnew/3.6.rst:1973
msgid "asyncore"
msgstr "asyncore"

#: ../../whatsnew/3.6.rst:1975
msgid ""
"The :mod:`!asyncore` has been deprecated in favor of :mod:`asyncio`. "
"(Contributed by Mariatta in :issue:`25002`.)"
msgstr ""
"O módulo :mod:`!asyncore` foi obsoleto em favor de :mod:`asyncio`. "
"(Contribuído por Mariatta em :issue:`25002`.)"

#: ../../whatsnew/3.6.rst:1980
msgid "dbm"
msgstr "dbm"

#: ../../whatsnew/3.6.rst:1982
msgid ""
"Unlike other :mod:`dbm` implementations, the :mod:`dbm.dumb` module creates "
"databases with the ``'rw'`` mode and allows modifying the database opened "
"with the ``'r'`` mode.  This behavior is now deprecated and will be removed "
"in 3.8. (Contributed by Serhiy Storchaka in :issue:`21708`.)"
msgstr ""
"Ao contrário de outras implementações de :mod:`dbm`, o módulo :mod:`dbm."
"dumb` cria bases de dados no modo ``'rw'`` e permite modificar a base de "
"dados aberta no modo ``'r'``. Este comportamento agora está obsoleto e será "
"removido na versão 3.8. (Contribuído por Serhiy Storchaka em :issue:`21708`.)"

#: ../../whatsnew/3.6.rst:1992
msgid ""
"The undocumented ``extra_path`` argument to the ``distutils.Distribution`` "
"constructor is now considered deprecated and will raise a warning if set.   "
"Support for this parameter will be removed in a future Python release.  See :"
"issue:`27919` for details."
msgstr ""
"O argumento não documentado ``extra_path`` para o construtor ``distutils."
"Distribution`` agora é considerado obsoleto e gerará um aviso se definido. O "
"suporte para este parâmetro será removido numa futura versão do Python. "
"Veja :issue:`27919` para mais detalhes."

#: ../../whatsnew/3.6.rst:1999
msgid "grp"
msgstr "grp"

#: ../../whatsnew/3.6.rst:2001
msgid ""
"The support of non-integer arguments in :func:`~grp.getgrgid` has been "
"deprecated. (Contributed by Serhiy Storchaka in :issue:`26129`.)"
msgstr ""
"O suporte para argumentos não inteiros em :func:`~grp.getgrgid` foi "
"obsoleto. (Contribuído por Serhiy Storchaka em :issue:`26129`.)"

#: ../../whatsnew/3.6.rst:2009
msgid ""
"The :meth:`importlib.machinery.SourceFileLoader.load_module` and :meth:"
"`importlib.machinery.SourcelessFileLoader.load_module` methods are now "
"deprecated. They were the only remaining implementations of :meth:`importlib."
"abc.Loader.load_module` in :mod:`importlib` that had not been deprecated in "
"previous versions of Python in favour of :meth:`importlib.abc.Loader."
"exec_module`."
msgstr ""
"Os métodos :meth:`importlib.machinery.SourceFileLoader.load_module` e :meth:"
"`importlib.machinery.SourcelessFileLoader.load_module` agora estão "
"obsoletos. Eles eram as únicas implementações restantes de :meth:`importlib."
"abc.Loader.load_module` em :mod:`importlib` que não tinham sido obsoletas em "
"versões anteriores do Python em favor de :meth:`importlib.abc.Loader."
"exec_module`."

#: ../../whatsnew/3.6.rst:2016
msgid ""
"The :class:`importlib.machinery.WindowsRegistryFinder` class is now "
"deprecated. As of 3.6.0, it is still added to :data:`sys.meta_path` by "
"default (on Windows), but this may change in future releases."
msgstr ""
"A classe :class:`importlib.machinery.WindowsRegistryFinder` agora está "
"obsoleta. A partir da versão 3.6.0, ainda é adicionada a :data:`sys."
"meta_path` por defeito (no Windows), mas isto pode mudar em versões futuras."

#: ../../whatsnew/3.6.rst:2023
msgid ""
"Undocumented support of general :term:`bytes-like objects <bytes-like "
"object>` as paths in :mod:`os` functions, :func:`compile` and similar "
"functions is now deprecated. (Contributed by Serhiy Storchaka in :issue:"
"`25791` and :issue:`26754`.)"
msgstr ""
"O suporte não documentado para :term:`objetos semelhantes a bytes <bytes-"
"like object>` como caminhos em funções :mod:`os`, :func:`compile` e funções "
"similares agora está obsoleto. (Contribuído por Serhiy Storchaka em :issue:"
"`25791` e :issue:`26754`.)"

#: ../../whatsnew/3.6.rst:2031
msgid ""
"Support for inline flags ``(?letters)`` in the middle of the regular "
"expression has been deprecated and will be removed in a future Python "
"version.  Flags at the start of a regular expression are still allowed. "
"(Contributed by Serhiy Storchaka in :issue:`22493`.)"
msgstr ""
"O suporte para *flags* inline ``(?letters)`` no meio da expressão regular "
"foi obsoleto e será removido numa futura versão do Python. *Flags* no início "
"de uma expressão regular ainda são permitidos. (Contribuído por Serhiy "
"Storchaka em :issue:`22493`.)"

#: ../../whatsnew/3.6.rst:2039
msgid ""
"OpenSSL 0.9.8, 1.0.0 and 1.0.1 are deprecated and no longer supported. In "
"the future the :mod:`ssl` module will require at least OpenSSL 1.0.2 or "
"1.1.0."
msgstr ""
"OpenSSL 0.9.8, 1.0.0 e 1.0.1 estão obsoletos e já não são suportados. No "
"futuro, o módulo :mod:`ssl` exigirá pelo menos OpenSSL 1.0.2 ou 1.1.0."

#: ../../whatsnew/3.6.rst:2043
msgid ""
"SSL-related arguments like ``certfile``, ``keyfile`` and ``check_hostname`` "
"in :mod:`ftplib`, :mod:`http.client`, :mod:`imaplib`, :mod:`poplib`, and :"
"mod:`smtplib` have been deprecated in favor of ``context``. (Contributed by "
"Christian Heimes in :issue:`28022`.)"
msgstr ""
"Argumentos relacionados com SSL, como ``certfile``, ``keyfile`` e "
"``check_hostname`` em :mod:`ftplib`, :mod:`http.client`, :mod:`imaplib`, :"
"mod:`poplib` e :mod:`smtplib` foram obsoletos em favor de ``context``. "
"(Contribuído por Christian Heimes em :issue:`28022`.)"

#: ../../whatsnew/3.6.rst:2048
msgid ""
"A couple of protocols and functions of the :mod:`ssl` module are now "
"deprecated. Some features will no longer be available in future versions of "
"OpenSSL. Other features are deprecated in favor of a different API. "
"(Contributed by Christian Heimes in :issue:`28022` and :issue:`26470`.)"
msgstr ""
"Vários protocolos e funções do módulo :mod:`ssl` agora estão obsoletos. "
"Algumas funcionalidades não estarão mais disponíveis em versões futuras do "
"OpenSSL. Outras funcionalidades estão obsoletas em favor de uma API "
"diferente. (Contribuído por Christian Heimes em :issue:`28022` e :issue:"
"`26470`.)"

#: ../../whatsnew/3.6.rst:2056
msgid ""
"The :mod:`tkinter.tix` module is now deprecated.  :mod:`tkinter` users "
"should use :mod:`tkinter.ttk` instead."
msgstr ""

#: ../../whatsnew/3.6.rst:2064
msgid ""
"The ``pyvenv`` script has been deprecated in favour of ``python3 -m venv``. "
"This prevents confusion as to what Python interpreter ``pyvenv`` is "
"connected to and thus what Python interpreter will be used by the virtual "
"environment.  (Contributed by Brett Cannon in :issue:`25154`.)"
msgstr ""
"O script ``pyvenv`` foi obsoleto em favor de ``python3 -m venv``. Isto evita "
"confusão sobre qual interpretador Python o ``pyvenv`` está conectado e, "
"portanto, qual interpretador Python será usado pelo ambiente virtual. "
"(Contribuído por Brett Cannon em :issue:`25154`.)"

#: ../../whatsnew/3.6.rst:2071
msgid "xml"
msgstr "xml"

#: ../../whatsnew/3.6.rst:2073
msgid ""
"As mitigation against DTD and external entity retrieval, the :mod:`xml.dom."
"minidom` and :mod:`xml.sax` modules no longer process external entities by "
"default. (Contributed by Christian Heimes in :gh:`61441`.)"
msgstr ""
"Como mitigação contra a recuperação de DTD e entidades externas, os módulos :"
"mod:`xml.dom.minidom` e :mod:`xml.sax` já não processam entidades externas "
"por defeito. (Contribuído por Christian Heimes em :gh:`61441`.)"

#: ../../whatsnew/3.6.rst:2080
msgid "Deprecated functions and types of the C API"
msgstr "Funções e tipos obsoletos da API C"

#: ../../whatsnew/3.6.rst:2082
msgid ""
"Undocumented functions :c:func:`!PyUnicode_AsEncodedObject`, :c:func:`!"
"PyUnicode_AsDecodedObject`, :c:func:`!PyUnicode_AsEncodedUnicode` and :c:"
"func:`!PyUnicode_AsDecodedUnicode` are deprecated now. Use the :ref:`generic "
"codec based API <codec-registry>` instead."
msgstr ""
"As funções não documentadas :c:func:`!PyUnicode_AsEncodedObject`, :c:func:`!"
"PyUnicode_AsDecodedObject`, :c:func:`!PyUnicode_AsEncodedUnicode` e :c:func:"
"`!PyUnicode_AsDecodedUnicode` agora estão obsoletas. Use a :ref:`API baseada "
"em codec genérico <codec-registry>` em vez disso."

#: ../../whatsnew/3.6.rst:2089
msgid "Deprecated Build Options"
msgstr "Opções de Compilação Obsoletas"

#: ../../whatsnew/3.6.rst:2091
msgid ""
"The ``--with-system-ffi`` configure flag is now on by default on non-macOS "
"UNIX platforms.  It may be disabled by using ``--without-system-ffi``, but "
"using the flag is deprecated and will not be accepted in Python 3.7. macOS "
"is unaffected by this change.  Note that many OS distributors already use "
"the ``--with-system-ffi`` flag when building their system Python."
msgstr ""
"A *flag* de configuração ``--with-system-ffi`` agora está ativada por "
"defeito em plataformas UNIX não-macOS. Pode ser desativada usando ``--"
"without-system-ffi``, mas o uso da *flag* está obsoleto e não será aceite no "
"Python 3.7. O macOS não é afetado por esta alteração. Note que muitos "
"distribuidores de sistemas operativos já usam a *flag* ``--with-system-ffi`` "
"ao compilar o seu Python do sistema."

#: ../../whatsnew/3.6.rst:2099
msgid "Removed"
msgstr "Removido"

#: ../../whatsnew/3.6.rst:2102
msgid "API and Feature Removals"
msgstr "Remoções de API e Funcionalidades"

#: ../../whatsnew/3.6.rst:2104
msgid ""
"Unknown escapes consisting of ``'\\'`` and an ASCII letter in regular "
"expressions will now cause an error.  In replacement templates for :func:`re."
"sub` they are still allowed, but deprecated. The :const:`re.LOCALE` flag can "
"now only be used with binary patterns."
msgstr ""
"Sequências de escape desconhecidas consistindo de ``'\\'`` e uma letra ASCII "
"em expressões regulares agora causarão um erro. Em modelos de substituição "
"para :func:`re.sub`, ainda são permitidas, mas obsoletas. A *flag* :const:"
"`re.LOCALE` agora só pode ser usada com padrões binários."

#: ../../whatsnew/3.6.rst:2109
msgid ""
"``inspect.getmoduleinfo()`` was removed (was deprecated since CPython 3.3). :"
"func:`inspect.getmodulename` should be used for obtaining the module name "
"for a given path. (Contributed by Yury Selivanov in :issue:`13248`.)"
msgstr ""
"``inspect.getmoduleinfo()`` foi removido (estava obsoleto desde o CPython "
"3.3). :func:`inspect.getmodulename` deve ser usado para obter o nome do "
"módulo para um caminho dado. (Contribuído por Yury Selivanov em :issue:"
"`13248`.)"

#: ../../whatsnew/3.6.rst:2114
msgid ""
"``traceback.Ignore`` class and ``traceback.usage``, ``traceback.modname``, "
"``traceback.fullmodname``, ``traceback.find_lines_from_code``, ``traceback."
"find_lines``, ``traceback.find_strings``, ``traceback."
"find_executable_lines`` methods were removed from the :mod:`traceback` "
"module. They were undocumented methods deprecated since Python 3.2 and "
"equivalent functionality is available from private methods."
msgstr ""
"A classe ``traceback.Ignore`` e os métodos ``traceback.usage``, ``traceback."
"modname``, ``traceback.fullmodname``, ``traceback.find_lines_from_code``, "
"``traceback.find_lines``, ``traceback.find_strings``, ``traceback."
"find_executable_lines`` foram removidos do módulo :mod:`traceback`. Eram "
"métodos não documentados obsoletos desde o Python 3.2 e funcionalidade "
"equivalente está disponível a partir de métodos privados."

#: ../../whatsnew/3.6.rst:2121
msgid ""
"The ``tk_menuBar()`` and ``tk_bindForTraversal()`` dummy methods in :mod:"
"`tkinter` widget classes were removed (corresponding Tk commands were "
"obsolete since Tk 4.0)."
msgstr ""
"Os métodos fictícios ``tk_menuBar()`` e ``tk_bindForTraversal()`` nas "
"classes de *widgets* :mod:`tkinter` foram removidos (os comandos Tk "
"correspondentes estavam obsoletos desde o Tk 4.0)."

#: ../../whatsnew/3.6.rst:2125
msgid ""
"The :meth:`~zipfile.ZipFile.open` method of the :class:`zipfile.ZipFile` "
"class no longer supports the ``'U'`` mode (was deprecated since Python 3.4). "
"Use :class:`io.TextIOWrapper` for reading compressed text files in :term:"
"`universal newlines` mode."
msgstr ""
"O método :meth:`~zipfile.ZipFile.open` da classe :class:`zipfile.ZipFile` já "
"não suporta o modo ``'U'`` (obsoleto desde o Python 3.4). Use :class:`io."
"TextIOWrapper` para ler ficheiros de texto comprimidos no modo :term:"
"`universal newlines`."

#: ../../whatsnew/3.6.rst:2130
msgid ""
"The undocumented ``IN``, ``CDROM``, ``DLFCN``, ``TYPES``, ``CDIO``, and "
"``STROPTS`` modules have been removed.  They had been available in the "
"platform specific ``Lib/plat-*/`` directories, but were chronically out of "
"date, inconsistently available across platforms, and unmaintained.  The "
"script that created these modules is still available in the source "
"distribution at `Tools/scripts/h2py.py <https://github.com/python/cpython/"
"blob/v3.6.15/Tools/scripts/h2py.py>`_."
msgstr ""
"Os módulos não documentados ``IN``, ``CDROM``, ``DLFCN``, ``TYPES``, "
"``CDIO`` e ``STROPTS`` foram removidos. Estavam disponíveis nos diretórios "
"específicos da plataforma ``Lib/plat-*/``, mas estavam cronicamente "
"desatualizados, disponíveis de forma inconsistente entre plataformas e não "
"eram mantidos. O script que criava estes módulos ainda está disponível na "
"distribuição de origem em `Tools/scripts/h2py.py <https://github.com/python/"
"cpython/blob/v3.6.15/Tools/scripts/h2py.py>`_."

#: ../../whatsnew/3.6.rst:2138
msgid "The deprecated ``asynchat.fifo`` class has been removed."
msgstr "A classe obsoleta ``asynchat.fifo`` foi removida."

#: ../../whatsnew/3.6.rst:2142
msgid "Porting to Python 3.6"
msgstr "Portar para Python 3.6"

#: ../../whatsnew/3.6.rst:2144
msgid ""
"This section lists previously described changes and other bugfixes that may "
"require changes to your code."
msgstr ""
"Esta secção lista alterações previamente descritas e outras correções de "
"erros que podem exigir alterações no seu código."

#: ../../whatsnew/3.6.rst:2148
msgid "Changes in 'python' Command Behavior"
msgstr "Alterações no Comportamento do Comando 'python'"

#: ../../whatsnew/3.6.rst:2150
msgid ""
"The output of a special Python build with defined ``COUNT_ALLOCS``, "
"``SHOW_ALLOC_COUNT`` or ``SHOW_TRACK_COUNT`` macros is now off by default.  "
"It can be re-enabled using the ``-X showalloccount`` option. It now outputs "
"to ``stderr`` instead of ``stdout``. (Contributed by Serhiy Storchaka in :"
"issue:`23034`.)"
msgstr ""
"A saída de uma compilação especial do Python com as macros ``COUNT_ALLOCS``, "
"``SHOW_ALLOC_COUNT`` ou ``SHOW_TRACK_COUNT`` definidas agora está desativada "
"por defeito. Pode ser reativada usando a opção ``-X showalloccount``. Agora "
"envia a saída para ``stderr`` em vez de ``stdout``. (Contribuído por Serhiy "
"Storchaka em :issue:`23034`.)"

#: ../../whatsnew/3.6.rst:2158
msgid "Changes in the Python API"
msgstr "Alterações na API do Python"

#: ../../whatsnew/3.6.rst:2160
msgid ""
":func:`open() <open>` will no longer allow combining the ``'U'`` mode flag "
"with ``'+'``. (Contributed by Jeff Balogh and John O'Connor in :issue:"
"`2091`.)"
msgstr ""
":func:`open() <open>` já não permitirá combinar a *flag* de modo ``'U'`` com "
"``'+'``. (Contribuído por Jeff Balogh e John O'Connor em :issue:`2091`.)"

#: ../../whatsnew/3.6.rst:2164
msgid ""
":mod:`sqlite3` no longer implicitly commits an open transaction before DDL "
"statements."
msgstr ""
":mod:`sqlite3` já não faz *commit* implicitamente de uma transação aberta "
"antes de instruções DDL."

#: ../../whatsnew/3.6.rst:2167
msgid ""
"On Linux, :func:`os.urandom` now blocks until the system urandom entropy "
"pool is initialized to increase the security."
msgstr ""
"No Linux, :func:`os.urandom` agora bloqueia até que o *pool* de entropia do "
"sistema urandom esteja inicializado para aumentar a segurança."

#: ../../whatsnew/3.6.rst:2170
msgid ""
"When :meth:`importlib.abc.Loader.exec_module` is defined, :meth:`importlib."
"abc.Loader.create_module` must also be defined."
msgstr ""
"Quando :meth:`importlib.abc.Loader.exec_module` está definido, :meth:"
"`importlib.abc.Loader.create_module` também deve estar definido."

#: ../../whatsnew/3.6.rst:2173
msgid ""
":c:func:`PyErr_SetImportError` now sets :exc:`TypeError` when its **msg** "
"argument is not set. Previously only ``NULL`` was returned."
msgstr ""
":c:func:`PyErr_SetImportError` agora define :exc:`TypeError` quando o seu "
"argumento **msg** não está definido. Anteriormente, apenas ``NULL`` era "
"retornado."

#: ../../whatsnew/3.6.rst:2176
msgid ""
"The format of the :attr:`~codeobject.co_lnotab` attribute of code objects "
"changed to support a negative line number delta. By default, Python does not "
"emit bytecode with a negative line number delta. Functions using :attr:"
"`frame.f_lineno`, ``PyFrame_GetLineNumber()`` or ``PyCode_Addr2Line()`` are "
"not affected. Functions directly decoding :attr:`!co_lnotab` should be "
"updated to use a signed 8-bit integer type for the line number delta, but "
"this is only required to support applications using a negative line number "
"delta. See ``Objects/lnotab_notes.txt`` for the :attr:`!co_lnotab` format "
"and how to decode it, and see the :pep:`511` for the rationale."
msgstr ""
"O formato do atributo :attr:`~codeobject.co_lnotab` dos objetos de código "
"foi alterado para suportar um delta de número de linha negativo. Por "
"defeito, o Python não emite *bytecode* com um delta de número de linha "
"negativo. Funções que usam :attr:`frame.f_lineno`, "
"``PyFrame_GetLineNumber()`` ou ``PyCode_Addr2Line()`` não são afetadas. "
"Funções que descodificam diretamente :attr:`!co_lnotab` devem ser "
"atualizadas para usar um tipo de inteiro de 8 bits com sinal para o delta do "
"número de linha, mas isto só é necessário para suportar aplicações que usam "
"um delta de número de linha negativo. Veja ``Objects/lnotab_notes.txt`` para "
"o formato :attr:`!co_lnotab` e como o descodificar, e veja a :pep:`511` para "
"a justificação."

#: ../../whatsnew/3.6.rst:2187
msgid ""
"The functions in the :mod:`compileall` module now return booleans instead of "
"``1`` or ``0`` to represent success or failure, respectively. Thanks to "
"booleans being a subclass of integers, this should only be an issue if you "
"were doing identity checks for ``1`` or ``0``. See :issue:`25768`."
msgstr ""
"As funções no módulo :mod:`compileall` agora retornam valores booleanos em "
"vez de ``1`` ou ``0`` para representar sucesso ou falha, respetivamente. "
"Graças aos booleanos serem uma subclasse de inteiros, isto só deve ser um "
"problema se estava a fazer verificações de identidade para ``1`` ou ``0``. "
"Veja :issue:`25768`."

#: ../../whatsnew/3.6.rst:2192
msgid ""
"Reading the :attr:`~urllib.parse.SplitResult.port` attribute of :func:"
"`urllib.parse.urlsplit` and :func:`~urllib.parse.urlparse` results now "
"raises :exc:`ValueError` for out-of-range values, rather than returning :"
"const:`None`.  See :issue:`20059`."
msgstr ""

#: ../../whatsnew/3.6.rst:2197
msgid ""
"The :mod:`!imp` module now raises a :exc:`DeprecationWarning` instead of :"
"exc:`PendingDeprecationWarning`."
msgstr ""
"O módulo :mod:`!imp` agora lança um :exc:`DeprecationWarning` em vez de :exc:"
"`PendingDeprecationWarning`."

#: ../../whatsnew/3.6.rst:2200
msgid ""
"The following modules have had missing APIs added to their :attr:`__all__` "
"attributes to match the documented APIs: :mod:`calendar`, :mod:`cgi`, :mod:"
"`csv`, :mod:`~xml.etree.ElementTree`, :mod:`enum`, :mod:`fileinput`, :mod:"
"`ftplib`, :mod:`logging`, :mod:`mailbox`, :mod:`mimetypes`, :mod:"
"`optparse`, :mod:`plistlib`, :mod:`!smtpd`, :mod:`subprocess`, :mod:"
"`tarfile`, :mod:`threading` and :mod:`wave`.  This means they will export "
"new symbols when ``import *`` is used. (Contributed by Joel Taddei and Jacek "
"Kołodziej in :issue:`23883`.)"
msgstr ""

#: ../../whatsnew/3.6.rst:2211
msgid ""
"When performing a relative import, if ``__package__`` does not compare equal "
"to ``__spec__.parent`` then :exc:`ImportWarning` is raised. (Contributed by "
"Brett Cannon in :issue:`25791`.)"
msgstr ""
"Ao realizar uma importação relativa, se ``__package__`` não for igual a "
"``__spec__.parent`` então :exc:`ImportWarning` é lançado. (Contribuído por "
"Brett Cannon em :issue:`25791`.)"

#: ../../whatsnew/3.6.rst:2215
msgid ""
"When a relative import is performed and no parent package is known, then :"
"exc:`ImportError` will be raised. Previously, :exc:`SystemError` could be "
"raised. (Contributed by Brett Cannon in :issue:`18018`.)"
msgstr ""
"Quando uma importação relativa é realizada e nenhum pacote pai é conhecido, "
"então :exc:`ImportError` será lançado. Anteriormente, :exc:`SystemError` "
"poderia ser lançado. (Contribuído por Brett Cannon em :issue:`18018`.)"

#: ../../whatsnew/3.6.rst:2219
msgid ""
"Servers based on the :mod:`socketserver` module, including those defined in :"
"mod:`http.server`, :mod:`xmlrpc.server` and :mod:`wsgiref.simple_server`, "
"now only catch exceptions derived from :exc:`Exception`. Therefore if a "
"request handler raises an exception like :exc:`SystemExit` or :exc:"
"`KeyboardInterrupt`, :meth:`~socketserver.BaseServer.handle_error` is no "
"longer called, and the exception will stop a single-threaded server. "
"(Contributed by Martin Panter in :issue:`23430`.)"
msgstr ""
"Servidores baseados no módulo :mod:`socketserver`, incluindo aqueles "
"definidos em :mod:`http.server`, :mod:`xmlrpc.server` e :mod:`wsgiref."
"simple_server`, agora só capturam exceções derivadas de :exc:`Exception`. "
"Portanto, se um *handler* de pedido lançar uma exceção como :exc:"
"`SystemExit` ou :exc:`KeyboardInterrupt`, :meth:`~socketserver.BaseServer."
"handle_error` já não é chamado, e a exceção irá parar um servidor de "
"*thread* única. (Contribuído por Martin Panter em :issue:`23430`.)"

#: ../../whatsnew/3.6.rst:2228
msgid ""
":func:`spwd.getspnam` now raises a :exc:`PermissionError` instead of :exc:"
"`KeyError` if the user doesn't have privileges."
msgstr ""

#: ../../whatsnew/3.6.rst:2231
msgid ""
"The :meth:`socket.socket.close` method now raises an exception if an error "
"(e.g. ``EBADF``) was reported by the underlying system call. (Contributed by "
"Martin Panter in :issue:`26685`.)"
msgstr ""
"O método :meth:`socket.socket.close` agora lança uma exceção se um erro (por "
"exemplo, ``EBADF``) for reportado pela chamada de sistema subjacente. "
"(Contribuído por Martin Panter em :issue:`26685`.)"

#: ../../whatsnew/3.6.rst:2235
msgid ""
"The *decode_data* argument for the :class:`!smtpd.SMTPChannel` and :class:`!"
"smtpd.SMTPServer` constructors is now ``False`` by default. This means that "
"the argument passed to :meth:`!process_message` is now a bytes object by "
"default, and :meth:`!process_message` will be passed keyword arguments. Code "
"that has already been updated in accordance with the deprecation warning "
"generated by 3.5 will not be affected."
msgstr ""
"O argumento *decode_data* para os construtores :class:`!smtpd.SMTPChannel` "
"e :class:`!smtpd.SMTPServer` agora é ``False`` por defeito. Isto significa "
"que o argumento passado para :meth:`!process_message` é agora um objeto "
"bytes por defeito, e :meth:`!process_message` receberá argumentos nomeados. "
"Código que já foi atualizado de acordo com o aviso de obsolescência gerado "
"pela versão 3.5 não será afetado."

#: ../../whatsnew/3.6.rst:2243
msgid ""
"All optional arguments of the :func:`~json.dump`, :func:`~json.dumps`, :func:"
"`~json.load` and :func:`~json.loads` functions and :class:`~json."
"JSONEncoder` and :class:`~json.JSONDecoder` class constructors in the :mod:"
"`json` module are now :ref:`keyword-only <keyword-only_parameter>`. "
"(Contributed by Serhiy Storchaka in :issue:`18726`.)"
msgstr ""
"Todos os argumentos opcionais das funções :func:`~json.dump`, :func:`~json."
"dumps`, :func:`~json.load` e :func:`~json.loads` e dos construtores das "
"classes :class:`~json.JSONEncoder` e :class:`~json.JSONDecoder` no módulo :"
"mod:`json` agora são :ref:`apenas por palavra-chave <keyword-"
"only_parameter>`. (Contribuído por Serhiy Storchaka em :issue:`18726`.)"

#: ../../whatsnew/3.6.rst:2250
msgid ""
"Subclasses of :class:`type` which don't override ``type.__new__`` may no "
"longer use the one-argument form to get the type of an object."
msgstr ""
"Subclasses de :class:`type` que não substituem ``type.__new__`` já não podem "
"usar a forma de um argumento para obter o tipo de um objeto."

#: ../../whatsnew/3.6.rst:2253
msgid ""
"As part of :pep:`487`, the handling of keyword arguments passed to :class:"
"`type` (other than the metaclass hint, ``metaclass``) is now consistently "
"delegated to :meth:`object.__init_subclass__`. This means that :meth:`type."
"__new__` and :meth:`type.__init__` both now accept arbitrary keyword "
"arguments, but :meth:`object.__init_subclass__` (which is called from :meth:"
"`type.__new__`) will reject them by default. Custom metaclasses accepting "
"additional keyword arguments will need to adjust their calls to :meth:`type."
"__new__` (whether direct or via :class:`super`) accordingly."
msgstr ""

#: ../../whatsnew/3.6.rst:2262
msgid ""
"In ``distutils.command.sdist.sdist``, the ``default_format`` attribute has "
"been removed and is no longer honored. Instead, the gzipped tarfile format "
"is the default on all platforms and no platform-specific selection is made. "
"In environments where distributions are built on Windows and zip "
"distributions are required, configure the project with a ``setup.cfg`` file "
"containing the following:"
msgstr ""
"Em ``distutils.command.sdist.sdist``, o atributo ``default_format`` foi "
"removido e já não é respeitado. Em vez disso, o formato de ficheiro tar "
"comprimido com gzip é o predefinido em todas as plataformas e nenhuma "
"seleção específica da plataforma é feita. Em ambientes onde as distribuições "
"são construídas no Windows e são necessárias distribuições zip, configure o "
"projeto com um ficheiro ``setup.cfg`` contendo o seguinte:"

#: ../../whatsnew/3.6.rst:2270
msgid ""
"[sdist]\n"
"formats=zip"
msgstr ""
"[sdist]\n"
"formats=zip"

#: ../../whatsnew/3.6.rst:2275
msgid ""
"This behavior has also been backported to earlier Python versions by "
"Setuptools 26.0.0."
msgstr ""
"Este comportamento também foi retroportado para versões anteriores do Python "
"pelo Setuptools 26.0.0."

#: ../../whatsnew/3.6.rst:2278
msgid ""
"In the :mod:`urllib.request` module and the :meth:`http.client."
"HTTPConnection.request` method, if no Content-Length header field has been "
"specified and the request body is a file object, it is now sent with HTTP "
"1.1 chunked encoding. If a file object has to be sent to a HTTP 1.0 server, "
"the Content-Length value now has to be specified by the caller. (Contributed "
"by Demian Brecht and Rolf Krahl with tweaks from Martin Panter in :issue:"
"`12319`.)"
msgstr ""
"No módulo :mod:`urllib.request` e no método :meth:`http.client."
"HTTPConnection.request`, se nenhum campo de cabeçalho Content-Length tiver "
"sido especificado e o corpo do pedido for um objeto de ficheiro, agora é "
"enviado com codificação HTTP 1.1 *chunked*. Se um objeto de ficheiro tiver "
"de ser enviado para um servidor HTTP 1.0, o valor Content-Length agora tem "
"de ser especificado pelo chamador. (Contribuído por Demian Brecht e Rolf "
"Krahl com ajustes de Martin Panter em :issue:`12319`.)"

#: ../../whatsnew/3.6.rst:2287
msgid ""
"The :class:`~csv.DictReader` now returns rows of type :class:`~collections."
"OrderedDict`. (Contributed by Steve Holden in :issue:`27842`.)"
msgstr ""
":class:`~csv.DictReader` agora retorna linhas do tipo :class:`~collections."
"OrderedDict`. (Contribuído por Steve Holden em :issue:`27842`.)"

#: ../../whatsnew/3.6.rst:2291
msgid ""
"The :const:`crypt.METHOD_CRYPT` will no longer be added to ``crypt.methods`` "
"if unsupported by the platform. (Contributed by Victor Stinner in :issue:"
"`25287`.)"
msgstr ""

#: ../../whatsnew/3.6.rst:2299
msgid ""
"On Linux, :func:`ctypes.util.find_library` now looks in ``LD_LIBRARY_PATH`` "
"for shared libraries. (Contributed by Vinay Sajip in :issue:`9998`.)"
msgstr ""
"No Linux, :func:`ctypes.util.find_library` agora procura em "
"``LD_LIBRARY_PATH`` por bibliotecas partilhadas. (Contribuído por Vinay "
"Sajip em :issue:`9998`.)"

#: ../../whatsnew/3.6.rst:2303
msgid ""
"The :class:`imaplib.IMAP4` class now handles flags containing the ``']'`` "
"character in messages sent from the server to improve real-world "
"compatibility. (Contributed by Lita Cho in :issue:`21815`.)"
msgstr ""
"A classe :class:`imaplib.IMAP4` agora trata *flags* contendo o carácter "
"``']'`` em mensagens enviadas pelo servidor para melhorar a compatibilidade "
"com o mundo real. (Contribuído por Lita Cho em :issue:`21815`.)"

#: ../../whatsnew/3.6.rst:2308
msgid ""
"The :func:`mmap.write() <mmap.write>` function now returns the number of "
"bytes written like other write methods. (Contributed by Jakub Stasiak in :"
"issue:`26335`.)"
msgstr ""

#: ../../whatsnew/3.6.rst:2312
msgid ""
"The :func:`pkgutil.iter_modules` and :func:`pkgutil.walk_packages` functions "
"now return :class:`~pkgutil.ModuleInfo` named tuples. (Contributed by "
"Ramchandra Apte in :issue:`17211`.)"
msgstr ""
"As funções :func:`pkgutil.iter_modules` e :func:`pkgutil.walk_packages` "
"agora retornam *named tuples* :class:`~pkgutil.ModuleInfo`. (Contribuído por "
"Ramchandra Apte em :issue:`17211`.)"

#: ../../whatsnew/3.6.rst:2316
msgid ""
":func:`re.sub` now raises an error for invalid numerical group references in "
"replacement templates even if the pattern is not found in the string.  The "
"error message for invalid group references now includes the group index and "
"the position of the reference. (Contributed by SilentGhost, Serhiy Storchaka "
"in :issue:`25953`.)"
msgstr ""
":func:`re.sub` agora lança um erro para referências de grupo numérico "
"inválidas em modelos de substituição, mesmo que o padrão não seja encontrado "
"na cadeia de caracteres. A mensagem de erro para referências de grupo "
"inválidas agora inclui o índice do grupo e a posição da referência. "
"(Contribuído por SilentGhost, Serhiy Storchaka em :issue:`25953`.)"

#: ../../whatsnew/3.6.rst:2322
msgid ""
":class:`zipfile.ZipFile` will now raise :exc:`NotImplementedError` for "
"unrecognized compression values.  Previously a plain :exc:`RuntimeError` was "
"raised.  Additionally, calling :class:`~zipfile.ZipFile` methods on a closed "
"ZipFile or calling the :meth:`~zipfile.ZipFile.write` method on a ZipFile "
"created with mode ``'r'`` will raise a :exc:`ValueError`. Previously, a :exc:"
"`RuntimeError` was raised in those scenarios."
msgstr ""
":class:`zipfile.ZipFile` agora lançará :exc:`NotImplementedError` para "
"valores de compressão não reconhecidos. Anteriormente, era lançado um :exc:"
"`RuntimeError`. Além disso, chamar métodos de :class:`~zipfile.ZipFile` num "
"ZipFile fechado ou chamar o método :meth:`~zipfile.ZipFile.write` num "
"ZipFile criado com o modo ``'r'`` lançará um :exc:`ValueError`. "
"Anteriormente, era lançado um :exc:`RuntimeError` nesses cenários."

#: ../../whatsnew/3.6.rst:2329
msgid ""
"when custom metaclasses are combined with zero-argument :func:`super` or "
"direct references from methods to the implicit ``__class__`` closure "
"variable, the implicit ``__classcell__`` namespace entry must now be passed "
"up to ``type.__new__`` for initialisation. Failing to do so will result in "
"a :exc:`DeprecationWarning` in Python 3.6 and a :exc:`RuntimeError` in "
"Python 3.8."
msgstr ""
"quando metaclasses personalizadas são combinadas com :func:`super` sem "
"argumentos ou referências diretas de métodos para a variável de fecho "
"implícita ``__class__``, a entrada de *namespace* implícita "
"``__classcell__`` deve agora ser passada para ``type.__new__`` para "
"inicialização. A falha em fazê-lo resultará num :exc:`DeprecationWarning` no "
"Python 3.6 e num :exc:`RuntimeError` no Python 3.8."

#: ../../whatsnew/3.6.rst:2336
msgid ""
"With the introduction of :exc:`ModuleNotFoundError`, import system consumers "
"may start expecting import system replacements to raise that more specific "
"exception when appropriate, rather than the less-specific :exc:"
"`ImportError`. To provide future compatibility with such consumers, "
"implementers of alternative import systems that completely replace :func:"
"`__import__` will need to update their implementations to raise the new "
"subclass when a module can't be found at all. Implementers of compliant "
"plugins to the default import system shouldn't need to make any changes, as "
"the default import system will raise the new subclass when appropriate."
msgstr ""
"Com a introdução de :exc:`ModuleNotFoundError`, os consumidores do sistema "
"de importação podem começar a esperar que substituições do sistema de "
"importação lancem essa exceção mais específica quando apropriado, em vez da "
"menos específica :exc:`ImportError`. Para fornecer compatibilidade futura "
"com tais consumidores, os implementadores de sistemas de importação "
"alternativos que substituem completamente :func:`__import__` precisarão "
"atualizar as suas implementações para lançar a nova subclasse quando um "
"módulo não puder ser encontrado. Os implementadores de *plugins* compatíveis "
"com o sistema de importação predefinido não devem precisar de fazer "
"quaisquer alterações, uma vez que o sistema de importação predefinido "
"lançará a nova subclasse quando apropriado."

#: ../../whatsnew/3.6.rst:2348
msgid "Changes in the C API"
msgstr "Alterações na API C"

#: ../../whatsnew/3.6.rst:2350
msgid ""
"The :c:func:`PyMem_Malloc` allocator family now uses the :ref:`pymalloc "
"allocator <pymalloc>` rather than the system :c:func:`malloc`. Applications "
"calling :c:func:`PyMem_Malloc` without holding the GIL can now crash. Set "
"the :envvar:`PYTHONMALLOC` environment variable to ``debug`` to validate the "
"usage of memory allocators in your application. See :issue:`26249`."
msgstr ""
"A família de alocadores :c:func:`PyMem_Malloc` agora usa o :ref:`alocador "
"pymalloc <pymalloc>` em vez do :c:func:`malloc` do sistema. Aplicações que "
"chamam :c:func:`PyMem_Malloc` sem manter o GIL agora podem falhar. Defina a "
"variável de ambiente :envvar:`PYTHONMALLOC` para ``debug`` para validar o "
"uso de alocadores de memória na sua aplicação. Veja :issue:`26249`."

#: ../../whatsnew/3.6.rst:2356
msgid ""
":c:func:`Py_Exit` (and the main interpreter) now override the exit status "
"with 120 if flushing buffered data failed.  See :issue:`5319`."
msgstr ""
":c:func:`Py_Exit` (e o interpretador principal) agora substitui o estado de "
"saída por 120 se a descarga de dados em *buffer* falhar. Veja :issue:`5319`."

#: ../../whatsnew/3.6.rst:2361
msgid "CPython bytecode changes"
msgstr "Alterações no bytecode do CPython"

#: ../../whatsnew/3.6.rst:2363
msgid ""
"There have been several major changes to the :term:`bytecode` in Python 3.6."
msgstr "Houve várias alterações importantes no :term:`bytecode` no Python 3.6."

#: ../../whatsnew/3.6.rst:2365
msgid ""
"The Python interpreter now uses a 16-bit wordcode instead of bytecode. "
"(Contributed by Demur Rumed with input and reviews from Serhiy Storchaka and "
"Victor Stinner in :issue:`26647` and :issue:`28050`.)"
msgstr ""
"O interpretador Python agora usa um *wordcode* de 16 bits em vez de "
"*bytecode*. (Contribuído por Demur Rumed com contribuições e revisões de "
"Serhiy Storchaka e Victor Stinner em :issue:`26647` e :issue:`28050`.)"

#: ../../whatsnew/3.6.rst:2369
msgid ""
"The new :opcode:`FORMAT_VALUE` and :opcode:`BUILD_STRING` opcodes as part of "
"the  :ref:`formatted string literal <whatsnew36-pep498>` implementation. "
"(Contributed by Eric Smith in :issue:`25483` and Serhiy Storchaka in :issue:"
"`27078`.)"
msgstr ""

#: ../../whatsnew/3.6.rst:2374
msgid ""
"The new :opcode:`BUILD_CONST_KEY_MAP` opcode to optimize the creation of "
"dictionaries with constant keys. (Contributed by Serhiy Storchaka in :issue:"
"`27140`.)"
msgstr ""

#: ../../whatsnew/3.6.rst:2378
msgid ""
"The function call opcodes have been heavily reworked for better performance "
"and simpler implementation. The :opcode:`MAKE_FUNCTION`, :opcode:`!"
"CALL_FUNCTION`, :opcode:`!CALL_FUNCTION_KW` and :opcode:`!"
"BUILD_MAP_UNPACK_WITH_CALL` opcodes have been modified, the new :opcode:"
"`CALL_FUNCTION_EX` and :opcode:`!BUILD_TUPLE_UNPACK_WITH_CALL` have been "
"added, and ``CALL_FUNCTION_VAR``, ``CALL_FUNCTION_VAR_KW`` and "
"``MAKE_CLOSURE`` opcodes have been removed. (Contributed by Demur Rumed in :"
"issue:`27095`, and Serhiy Storchaka in :issue:`27213`, :issue:`28257`.)"
msgstr ""
"Os *opcodes* de chamada de função foram fortemente refeitos para melhor "
"desempenho e implementação mais simples. Os *opcodes* :opcode:"
"`MAKE_FUNCTION`, :opcode:`!CALL_FUNCTION`, :opcode:`!CALL_FUNCTION_KW` e :"
"opcode:`!BUILD_MAP_UNPACK_WITH_CALL` foram modificados, os novos :opcode:"
"`CALL_FUNCTION_EX` e :opcode:`!BUILD_TUPLE_UNPACK_WITH_CALL` foram "
"adicionados, e os *opcodes* ``CALL_FUNCTION_VAR``, ``CALL_FUNCTION_VAR_KW`` "
"e ``MAKE_CLOSURE`` foram removidos. (Contribuído por Demur Rumed em :issue:"
"`27095`, e Serhiy Storchaka em :issue:`27213`, :issue:`28257`.)"

#: ../../whatsnew/3.6.rst:2389
msgid ""
"The new :opcode:`SETUP_ANNOTATIONS` and :opcode:`!STORE_ANNOTATION` opcodes "
"have been added to support the new :term:`variable annotation` syntax. "
"(Contributed by Ivan Levkivskyi in :issue:`27985`.)"
msgstr ""
"Os novos *opcodes* :opcode:`SETUP_ANNOTATIONS` e :opcode:`!STORE_ANNOTATION` "
"foram adicionados para suportar a nova sintaxe de :term:`anotação de "
"variáveis`. (Contribuído por Ivan Levkivskyi em :issue:`27985`.)"

#: ../../whatsnew/3.6.rst:2395
msgid "Notable changes in Python 3.6.2"
msgstr "Alterações Notáveis no Python 3.6.2"

#: ../../whatsnew/3.6.rst:2398
msgid "New ``make regen-all`` build target"
msgstr "Novo alvo de compilação ``make regen-all``"

#: ../../whatsnew/3.6.rst:2400
msgid ""
"To simplify cross-compilation, and to ensure that CPython can reliably be "
"compiled without requiring an existing version of Python to already be "
"available, the autotools-based build system no longer attempts to implicitly "
"recompile generated files based on file modification times."
msgstr ""
"Para simplificar a compilação cruzada e garantir que o CPython possa ser "
"compilado de forma confiável sem a necessidade de uma versão existente do "
"Python já disponível, o sistema de compilação baseado em autotools não tenta "
"mais recompilar implicitamente os ficheiros gerados com base nas datas de "
"modificação dos ficheiros."

#: ../../whatsnew/3.6.rst:2405
msgid ""
"Instead, a new ``make regen-all`` command has been added to force "
"regeneration of these files when desired (e.g. after an initial version of "
"Python has already been built based on the pregenerated versions)."
msgstr ""
"Em vez disso, foi adicionado um novo comando ``make regen-all`` para forçar "
"a regeneração desses ficheiros quando desejado (por exemplo, após uma versão "
"inicial do Python já ter sido compilada com base nas versões pré-geradas)."

#: ../../whatsnew/3.6.rst:2409
msgid ""
"More selective regeneration targets are also defined - see :source:`Makefile."
"pre.in` for details."
msgstr ""
"Também são definidos alvos de regeneração mais seletivos - consulte :source:"
"`Makefile.pre.in` para obter detalhes."

#: ../../whatsnew/3.6.rst:2412 ../../whatsnew/3.6.rst:2425
msgid "(Contributed by Victor Stinner in :issue:`23404`.)"
msgstr "(Contribuição de Victor Stinner na :issue:`23404`.)"

#: ../../whatsnew/3.6.rst:2418
msgid "Removal of ``make touch`` build target"
msgstr "Remoção do alvo de compilação ``make touch``"

#: ../../whatsnew/3.6.rst:2420
msgid ""
"The ``make touch`` build target previously used to request implicit "
"regeneration of generated files by updating their modification times has "
"been removed."
msgstr ""
"O alvo de compilação ``make touch``, anteriormente utilizado para solicitar "
"a regeneração implícita de ficheiros gerados através da atualização das suas "
"datas de modificação, foi removido."

#: ../../whatsnew/3.6.rst:2423
msgid "It has been replaced by the new ``make regen-all`` target."
msgstr "Foi substituído pelo novo alvo ``make regen-all``."

#: ../../whatsnew/3.6.rst:2431
msgid "Notable changes in Python 3.6.4"
msgstr "Alterações Notáveis no Python 3.6.4"

#: ../../whatsnew/3.6.rst:2433
msgid ""
"The ``PyExc_RecursionErrorInst`` singleton that was part of the public API "
"has been removed as its members being never cleared may cause a segfault "
"during finalization of the interpreter. (Contributed by Xavier de Gaye in :"
"issue:`22898` and :issue:`30697`.)"
msgstr ""
"O *singleton* ``PyExc_RecursionErrorInst`` que fazia parte da API pública "
"foi removido, uma vez que os seus membros nunca eram limpos e podiam causar "
"uma falha de segmentação durante a finalização do interpretador. "
"(Contribuído por Xavier de Gaye em :issue:`22898` e :issue:`30697`.)"

#: ../../whatsnew/3.6.rst:2440
msgid "Notable changes in Python 3.6.5"
msgstr "Alterações Notáveis no Python 3.6.5"

#: ../../whatsnew/3.6.rst:2442
msgid ""
"The :func:`locale.localeconv` function now sets temporarily the ``LC_CTYPE`` "
"locale to the ``LC_NUMERIC`` locale in some cases. (Contributed by Victor "
"Stinner in :issue:`31900`.)"
msgstr ""
"A função :func:`locale.localeconv` agora define temporariamente a localidade "
"``LC_CTYPE`` para a localidade ``LC_NUMERIC`` em alguns casos. (Contribuído "
"por Victor Stinner em :issue:`31900`.)"

#: ../../whatsnew/3.6.rst:2448
msgid "Notable changes in Python 3.6.7"
msgstr "Alterações Notáveis no Python 3.6.7"

#: ../../whatsnew/3.6.rst:2450
msgid ""
":mod:`xml.dom.minidom` and :mod:`xml.sax` modules no longer process external "
"entities by default. See also :gh:`61441`."
msgstr ""
"Os módulos :mod:`xml.dom.minidom` e :mod:`xml.sax` já não processam "
"entidades externas por defeito. Veja também :gh:`61441`."

#: ../../whatsnew/3.6.rst:2453
msgid ""
"In 3.6.7 the :mod:`tokenize` module now implicitly emits a ``NEWLINE`` token "
"when provided with input that does not have a trailing new line.  This "
"behavior now matches what the C tokenizer does internally. (Contributed by "
"Ammar Askar in :issue:`33899`.)"
msgstr ""
"Na versão 3.6.7, o módulo :mod:`tokenize` agora emite implicitamente um "
"token ``NEWLINE`` quando fornecido com entrada que não tem uma nova linha "
"final. Este comportamento agora corresponde ao que o *tokenizer* C faz "
"internamente. (Contribuído por Ammar Askar em :issue:`33899`.)"

#: ../../whatsnew/3.6.rst:2459
msgid "Notable changes in Python 3.6.10"
msgstr "Alterações Notáveis no Python 3.6.10"

#: ../../whatsnew/3.6.rst:2461
msgid ""
"Due to significant security concerns, the *reuse_address* parameter of :meth:"
"`asyncio.loop.create_datagram_endpoint` is no longer supported. This is "
"because of the behavior of the socket option ``SO_REUSEADDR`` in UDP. For "
"more details, see the documentation for ``loop.create_datagram_endpoint()``. "
"(Contributed by Kyle Stanley, Antoine Pitrou, and Yury Selivanov in :issue:"
"`37228`.)"
msgstr ""
"Devido a preocupações significativas de segurança, o parâmetro "
"*reuse_address* de :meth:`asyncio.loop.create_datagram_endpoint` já não é "
"suportado. Isto deve-se ao comportamento da opção de *socket* "
"``SO_REUSEADDR`` em UDP. Para mais detalhes, veja a documentação de ``loop."
"create_datagram_endpoint()``. (Contribuído por Kyle Stanley, Antoine Pitrou "
"e Yury Selivanov em :issue:`37228`.)"

#: ../../whatsnew/3.6.rst:2469
msgid "Notable changes in Python 3.6.13"
msgstr "Alterações Notáveis no Python 3.6.13"

#: ../../whatsnew/3.6.rst:2471
msgid ""
"Earlier Python versions allowed using both ``;`` and ``&`` as query "
"parameter separators in :func:`urllib.parse.parse_qs` and :func:`urllib."
"parse.parse_qsl`.  Due to security concerns, and to conform with newer W3C "
"recommendations, this has been changed to allow only a single separator key, "
"with ``&`` as the default.  This change also affects :func:`cgi.parse` and :"
"func:`cgi.parse_multipart` as they use the affected functions internally. "
"For more details, please see their respective documentation. (Contributed by "
"Adam Goldschmidt, Senthil Kumaran and Ken Jin in :issue:`42967`.)"
msgstr ""

#: ../../whatsnew/3.6.rst:2482
msgid "Notable changes in Python 3.6.14"
msgstr "Alterações Notáveis no Python 3.6.14"

#: ../../whatsnew/3.6.rst:2484
msgid ""
"A security fix alters the :class:`ftplib.FTP` behavior to not trust the IPv4 "
"address sent from the remote server when setting up a passive data channel.  "
"We reuse the ftp server IP address instead.  For unusual code requiring the "
"old behavior, set a ``trust_server_pasv_ipv4_address`` attribute on your FTP "
"instance to ``True``.  (See :gh:`87451`)"
msgstr ""
"Uma correção de segurança altera o comportamento de :class:`ftplib.FTP` para "
"não confiar no endereço IPv4 enviado pelo servidor remoto ao configurar um "
"canal de dados passivo. Em vez disso, reutilizamos o endereço IP do servidor "
"FTP. Para código incomum que exija o comportamento antigo, defina um "
"atributo ``trust_server_pasv_ipv4_address`` na sua instância FTP para "
"``True``. (Veja :gh:`87451`)"

#: ../../whatsnew/3.6.rst:2490
msgid ""
"The presence of newline or tab characters in parts of a URL allows for some "
"forms of attacks. Following the WHATWG specification that updates RFC 3986, "
"ASCII newline ``\\n``, ``\\r`` and tab ``\\t`` characters are stripped from "
"the URL by the parser :func:`urllib.parse` preventing such attacks. The "
"removal characters are controlled by a new module level variable ``urllib."
"parse._UNSAFE_URL_BYTES_TO_REMOVE``. (See :gh:`88048`)"
msgstr ""
"A presença de caracteres de nova linha ou tabulação em partes de um URL "
"permite algumas formas de ataques. Seguindo a especificação WHATWG que "
"atualiza o RFC 3986, os caracteres ASCII de nova linha ``\\n``, ``\\r`` e "
"tabulação ``\\t`` são removidos do URL pelo *parser* :func:`urllib.parse`, "
"prevenindo tais ataques. Os caracteres a remover são controlados por uma "
"nova variável a nível de módulo ``urllib.parse."
"_UNSAFE_URL_BYTES_TO_REMOVE``. (Veja :gh:`88048`)"
