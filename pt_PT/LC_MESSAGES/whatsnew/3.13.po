# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# python-doc bot, 2025
# André Moreira <afrmscb@gmail.com>, 2025
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.13\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-10-31 15:04+0000\n"
"PO-Revision-Date: 2025-09-15 01:05+0000\n"
"Last-Translator: André Moreira <afrmscb@gmail.com>, 2025\n"
"Language-Team: Portuguese (Portugal) (https://app.transifex.com/python-doc/"
"teams/5390/pt_PT/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: pt_PT\n"
"Plural-Forms: nplurals=3; plural=(n == 0 || n == 1) ? 0 : n != 0 && n % "
"1000000 == 0 ? 1 : 2;\n"

#: ../../whatsnew/3.13.rst:4
msgid "What's New In Python 3.13"
msgstr "Novidades no Python 3.13"

#: ../../whatsnew/3.13.rst:0
msgid "Editors"
msgstr "Editores"

#: ../../whatsnew/3.13.rst:6
msgid "Adam Turner and Thomas Wouters"
msgstr "Adam Turner e Thomas Wouters"

#: ../../whatsnew/3.13.rst:48
msgid ""
"This article explains the new features in Python 3.13, compared to 3.12. "
"Python 3.13 was released on October 7, 2024. For full details, see the :ref:"
"`changelog <changelog>`."
msgstr ""
"Este artigo explica as novas funcionalidades do Python 3.13, em comparação "
"com o 3.12. O Python 3.13 foi lançado a 7 de outubro de 2024. Para detalhes "
"completos, consulte o :ref:`registo de alterações <changelog>`."

#: ../../whatsnew/3.13.rst:54
msgid ":pep:`719` -- Python 3.13 Release Schedule"
msgstr ":pep:`719` -- Cronograma de Lançamento do Python 3.13"

#: ../../whatsnew/3.13.rst:58
msgid "Summary -- Release Highlights"
msgstr "Resumo -- Destaques da Versão"

#: ../../whatsnew/3.13.rst:63
msgid ""
"Python 3.13 is the latest stable release of the Python programming language, "
"with a mix of changes to the language, the implementation and the standard "
"library. The biggest changes include a new `interactive interpreter "
"<whatsnew313-better-interactive-interpreter_>`_, experimental support for "
"running in a `free-threaded mode <whatsnew313-free-threaded-cpython_>`_ (:"
"pep:`703`), and a `Just-In-Time compiler <whatsnew313-jit-compiler_>`_ (:pep:"
"`744`)."
msgstr ""

#: ../../whatsnew/3.13.rst:72
msgid ""
"Error messages continue to improve, with tracebacks now highlighted in color "
"by default. The :func:`locals` builtin now has :ref:`defined semantics "
"<whatsnew313-locals-semantics>` for changing the returned mapping, and type "
"parameters now support default values."
msgstr ""
"As mensagens de erro continuam a melhorar, com os *tracebacks* agora "
"realçados a cores por predefinição. A função integrada :func:`locals` tem "
"agora :ref:`semântica definida <whatsnew313-locals-semantics>` para alterar "
"o mapeamento devolvido, e os parâmetros de tipo suportam agora valores "
"predefinidos."

#: ../../whatsnew/3.13.rst:77
msgid ""
"The library changes contain removal of deprecated APIs and modules, as well "
"as the usual improvements in user-friendliness and correctness. Several "
"legacy standard library modules have now `been removed <whatsnew313-"
"pep594_>`_ following their deprecation in Python 3.11 (:pep:`594`)."
msgstr ""
"As alterações na biblioteca incluem a remoção de APIs e módulos obsoletos, "
"bem como as melhorias habituais em termos de facilidade de uso e correção. "
"Vários módulos legados da biblioteca padrão foram agora `removidos "
"<whatsnew313-pep594_>`_ após a sua obsolescência no Python 3.11 (:pep:`594`)."

#: ../../whatsnew/3.13.rst:82
msgid ""
"This article doesn't attempt to provide a complete specification of all new "
"features, but instead gives a convenient overview. For full details refer to "
"the documentation, such as the :ref:`Library Reference <library-index>` and :"
"ref:`Language Reference <reference-index>`. To understand the complete "
"implementation and design rationale for a change, refer to the PEP for a "
"particular new feature; but note that PEPs usually are not kept up-to-date "
"once a feature has been fully implemented. See `Porting to Python 3.13`_ for "
"guidance on upgrading from earlier versions of Python."
msgstr ""
"Este artigo não tenta fornecer uma especificação completa de todas as novas "
"funcionalidades, mas sim uma visão geral conveniente. Para detalhes "
"completos, consulte a documentação, como a :ref:`Referência da Biblioteca "
"<library-index>` e a :ref:`Referência da Linguagem <reference-index>`. Para "
"compreender a implementação e a justificação de projeto completas de uma "
"alteração, consulte a PEP de uma nova funcionalidade específica; no entanto, "
"note que as PEPs geralmente não são atualizadas depois de uma funcionalidade "
"estar totalmente implementada. Consulte `Portar para o Python 3.13`_ para "
"obter orientações sobre a atualização a partir de versões anteriores do "
"Python."

#: ../../whatsnew/3.13.rst:98
msgid "Interpreter improvements:"
msgstr "Melhorias no interpretador:"

#: ../../whatsnew/3.13.rst:100
msgid ""
"A greatly improved :ref:`interactive interpreter <whatsnew313-better-"
"interactive-interpreter>` and :ref:`improved error messages <whatsnew313-"
"improved-error-messages>`."
msgstr ""
"Um :ref:`interpretador interativo <whatsnew313-better-interactive-"
"interpreter>` muito melhorado e :ref:`mensagens de erro melhoradas "
"<whatsnew313-improved-error-messages>`."

#: ../../whatsnew/3.13.rst:103
msgid ""
":pep:`667`: The :func:`locals` builtin now has :ref:`defined semantics "
"<whatsnew313-locals-semantics>` when mutating the returned mapping. Python "
"debuggers and similar tools may now more reliably update local variables in "
"optimized scopes even during concurrent code execution."
msgstr ""
":pep:`667`: A função integrada :func:`locals` tem agora :ref:`semântica "
"definida <whatsnew313-locals-semantics>` ao mutar o mapeamento devolvido. Os "
"*debuggers* do Python e ferramentas semelhantes podem agora atualizar "
"variáveis locais em âmbitos otimizados de forma mais fiável, mesmo durante a "
"execução concorrente de código."

#: ../../whatsnew/3.13.rst:108
msgid ""
":pep:`703`: CPython 3.13 has experimental support for running with the :term:"
"`global interpreter lock` disabled. See :ref:`Free-threaded CPython "
"<whatsnew313-free-threaded-cpython>` for more details."
msgstr ""
":pep:`703`: O CPython 3.13 tem suporte experimental para execução com o :"
"term:`bloqueio global do interpretador` desativado. Consulte :ref:`CPython "
"Multithread Livre <whatsnew313-free-threaded-cpython>` para mais detalhes."

#: ../../whatsnew/3.13.rst:111
msgid ""
":pep:`744`: A basic :ref:`JIT compiler <whatsnew313-jit-compiler>` was "
"added. It is currently disabled by default (though we may turn it on later). "
"Performance improvements are modest -- we expect to improve this over the "
"next few releases."
msgstr ""
":pep:`744`: Foi adicionado um :ref:`compilador JIT <whatsnew313-jit-"
"compiler>` básico. Está atualmente desativado por predefinição (embora "
"possamos ativá-lo mais tarde). As melhorias de desempenho são modestas — "
"esperamos melhorar isto nas próximas versões."

#: ../../whatsnew/3.13.rst:115
msgid ""
"Color support in the new :ref:`interactive interpreter <whatsnew313-better-"
"interactive-interpreter>`, as well as in :ref:`tracebacks <whatsnew313-"
"improved-error-messages>` and :ref:`doctest <whatsnew313-doctest>` output. "
"This can be disabled through the :envvar:`PYTHON_COLORS` and |NO_COLOR|_ "
"environment variables."
msgstr ""
"Suporte a cores no novo :ref:`interpretador interativo <whatsnew313-better-"
"interactive-interpreter>`, bem como nos :ref:`tracebacks <whatsnew313-"
"improved-error-messages>` e na saída do :ref:`doctest <whatsnew313-"
"doctest>`. Isto pode ser desativado através das variáveis de ambiente :"
"envvar:`PYTHON_COLORS` e |NO_COLOR|_."

#: ../../whatsnew/3.13.rst:122
msgid "Python data model improvements:"
msgstr "Melhorias no modelo de dados do Python:"

#: ../../whatsnew/3.13.rst:124
msgid ""
":attr:`~type.__static_attributes__` stores the names of attributes accessed "
"through ``self.X`` in any function in a class body."
msgstr ""
":attr:`~type.__static_attributes__` armazena os nomes dos atributos acedidos "
"através de ``self.X`` em qualquer função no corpo de uma classe."

#: ../../whatsnew/3.13.rst:126
msgid ""
":attr:`~type.__firstlineno__` records the first line number of a class "
"definition."
msgstr ""
":attr:`~type.__firstlineno__` regista o número da primeira linha de uma "
"definição de classe."

#: ../../whatsnew/3.13.rst:129
msgid "Significant improvements in the standard library:"
msgstr "Melhorias significativas na biblioteca padrão:"

#: ../../whatsnew/3.13.rst:131
msgid ""
"Add a new :exc:`PythonFinalizationError` exception, raised when an operation "
"is blocked during :term:`finalization <interpreter shutdown>`."
msgstr ""
"Foi adicionada uma nova exceção :exc:`PythonFinalizationError`, lançada "
"quando uma operação é bloqueada durante a :term:`finalização <interpreter "
"shutdown>`."

#: ../../whatsnew/3.13.rst:133
msgid ""
"The :mod:`argparse` module now supports deprecating command-line options, "
"positional arguments, and subcommands."
msgstr ""
"O módulo :mod:`argparse` suporta agora a obsolescência de opções de linha de "
"comandos, argumentos posicionais e subcomandos."

#: ../../whatsnew/3.13.rst:135
msgid ""
"The new functions :func:`base64.z85encode` and :func:`base64.z85decode` "
"support encoding and decoding `Z85 data`_."
msgstr ""
"As novas funções :func:`base64.z85encode` e :func:`base64.z85decode` "
"suportam a codificação e descodificação de `dados Z85`_."

#: ../../whatsnew/3.13.rst:137
msgid ""
"The :mod:`copy` module now has a :func:`copy.replace` function, with support "
"for many builtin types and any class defining the :func:`~object."
"__replace__` method."
msgstr ""
"O módulo :mod:`copy` tem agora uma função :func:`copy.replace`, com suporte "
"para muitos tipos integrados e qualquer classe que defina o método :func:"
"`~object.__replace__`."

#: ../../whatsnew/3.13.rst:140
msgid ""
"The new :mod:`dbm.sqlite3` module is now the default :mod:`dbm` backend."
msgstr ""
"O novo módulo :mod:`dbm.sqlite3` é agora o *backend* predefinido do :mod:"
"`dbm`."

#: ../../whatsnew/3.13.rst:141
msgid ""
"The :mod:`os` module has a :ref:`suite of new functions <os-timerfd>` for "
"working with Linux's timer notification file descriptors."
msgstr ""
"O módulo :mod:`os` tem um :ref:`conjunto de novas funções <os-timerfd>` para "
"trabalhar com os descritores de ficheiros de notificação de temporizador do "
"Linux."

#: ../../whatsnew/3.13.rst:143
msgid ""
"The :mod:`random` module now has a :ref:`command-line interface <random-"
"cli>`."
msgstr ""
"O módulo :mod:`random` tem agora uma :ref:`interface de linha de comandos "
"<random-cli>`."

#: ../../whatsnew/3.13.rst:145
msgid "Security improvements:"
msgstr "Melhorias de segurança:"

#: ../../whatsnew/3.13.rst:147
msgid ""
":func:`ssl.create_default_context` sets :data:`ssl."
"VERIFY_X509_PARTIAL_CHAIN` and :data:`ssl.VERIFY_X509_STRICT` as default "
"flags."
msgstr ""
":func:`ssl.create_default_context` define :data:`ssl."
"VERIFY_X509_PARTIAL_CHAIN` e :data:`ssl.VERIFY_X509_STRICT` como *flags* "
"predefinidas."

#: ../../whatsnew/3.13.rst:150
msgid "C API improvements:"
msgstr "Melhorias na API C:"

#: ../../whatsnew/3.13.rst:152
msgid ""
"The :c:data:`Py_mod_gil` slot is now used to indicate that an extension "
"module supports running with the :term:`GIL` disabled."
msgstr ""
"O *slot* :c:data:`Py_mod_gil` é agora usado para indicar que um módulo de "
"extensão suporta a execução com o :term:`GIL` desativado."

#: ../../whatsnew/3.13.rst:154
msgid ""
"The :doc:`PyTime C API </c-api/time>` has been added, providing access to "
"system clocks."
msgstr ""
"Foi adicionada a :doc:`API C PyTime </c-api/time>`, que fornece acesso a "
"relógios do sistema."

#: ../../whatsnew/3.13.rst:156
msgid ""
":c:type:`PyMutex` is a new lightweight mutex that occupies a single byte."
msgstr ":c:type:`PyMutex` é um novo *mutex* leve que ocupa um único byte."

#: ../../whatsnew/3.13.rst:157
msgid ""
"There is a new :ref:`suite of functions <c-api-monitoring>` for generating :"
"pep:`669` monitoring events in the C API."
msgstr ""
"Existe um novo :ref:`conjunto de funções <c-api-monitoring>` para gerar "
"eventos de monitorização :pep:`669` na API C."

#: ../../whatsnew/3.13.rst:160
msgid "New typing features:"
msgstr "Novas funcionalidades de tipagem:"

#: ../../whatsnew/3.13.rst:162
msgid ""
":pep:`696`: Type parameters (:data:`typing.TypeVar`, :data:`typing."
"ParamSpec`, and :data:`typing.TypeVarTuple`) now support defaults."
msgstr ""
":pep:`696`: Os parâmetros de tipo (:data:`typing.TypeVar`, :data:`typing."
"ParamSpec` e :data:`typing.TypeVarTuple`) suportam agora valores "
"predefinidos."

#: ../../whatsnew/3.13.rst:164
msgid ""
":pep:`702`: The new :func:`warnings.deprecated` decorator adds support for "
"marking deprecations in the type system and at runtime."
msgstr ""
":pep:`702`: O novo decorador :func:`warnings.deprecated` adiciona suporte "
"para marcar obsolescências no sistema de tipos e em tempo de execução."

#: ../../whatsnew/3.13.rst:166
msgid ""
":pep:`705`: :data:`typing.ReadOnly` can be used to mark an item of a :class:"
"`typing.TypedDict` as read-only for type checkers."
msgstr ""
":pep:`705`: :data:`typing.ReadOnly` pode ser usado para marcar um item de "
"um :class:`typing.TypedDict` como apenas de leitura para os verificadores de "
"tipo."

#: ../../whatsnew/3.13.rst:168
msgid ""
":pep:`742`: :data:`typing.TypeIs` provides more intuitive type narrowing "
"behavior, as an alternative to :data:`typing.TypeGuard`."
msgstr ""
":pep:`742`: :data:`typing.TypeIs` fornece um comportamento de redução de "
"tipo mais intuitivo, como alternativa a :data:`typing.TypeGuard`."

#: ../../whatsnew/3.13.rst:171
msgid "Platform support:"
msgstr "Suporte de plataformas:"

#: ../../whatsnew/3.13.rst:173
msgid ""
":pep:`730`: Apple's iOS is now an :ref:`officially supported platform "
"<whatsnew313-platform-support>`, at :pep:`tier 3 <11#tier-3>`."
msgstr ""
":pep:`730`: O iOS da Apple é agora uma :ref:`plataforma oficialmente "
"suportada <whatsnew313-platform-support>`, no :pep:`nível 3 <11#tier-3>`."

#: ../../whatsnew/3.13.rst:175
msgid ""
":pep:`738`: Android is now an :ref:`officially supported platform "
"<whatsnew313-platform-support>`, at :pep:`tier 3 <11#tier-3>`."
msgstr ""
":pep:`738`: O Android é agora uma :ref:`plataforma oficialmente suportada "
"<whatsnew313-platform-support>`, no :pep:`nível 3 <11#tier-3>`."

#: ../../whatsnew/3.13.rst:177
msgid ""
"``wasm32-wasi`` is now supported as a :pep:`tier 2 <11#tier-2>` platform."
msgstr ""
"``wasm32-wasi`` é agora suportado como uma plataforma :pep:`nível 2 "
"<11#tier-2>`."

#: ../../whatsnew/3.13.rst:178
msgid "``wasm32-emscripten`` is no longer an officially supported platform."
msgstr "``wasm32-emscripten`` já não é uma plataforma oficialmente suportada."

#: ../../whatsnew/3.13.rst:180
msgid "Important removals:"
msgstr "Remoções importantes:"

#: ../../whatsnew/3.13.rst:182
msgid ""
":ref:`PEP 594 <whatsnew313-pep594>`: The remaining 19 \"dead "
"batteries\" (legacy stdlib modules) have been removed from the standard "
"library: :mod:`!aifc`, :mod:`!audioop`, :mod:`!cgi`, :mod:`!cgitb`, :mod:`!"
"chunk`, :mod:`!crypt`, :mod:`!imghdr`, :mod:`!mailcap`, :mod:`!msilib`, :mod:"
"`!nis`, :mod:`!nntplib`, :mod:`!ossaudiodev`, :mod:`!pipes`, :mod:`!"
"sndhdr`, :mod:`!spwd`, :mod:`!sunau`, :mod:`!telnetlib`, :mod:`!uu` and :mod:"
"`!xdrlib`."
msgstr ""
":ref:`PEP 594 <whatsnew313-pep594>`: Os restantes 19 módulos \"baterias "
"mortas\" (módulos legados da biblioteca padrão) foram removidos da "
"biblioteca padrão: :mod:`!aifc`, :mod:`!audioop`, :mod:`!cgi`, :mod:`!"
"cgitb`, :mod:`!chunk`, :mod:`!crypt`, :mod:`!imghdr`, :mod:`!mailcap`, :mod:"
"`!msilib`, :mod:`!nis`, :mod:`!nntplib`, :mod:`!ossaudiodev`, :mod:`!"
"pipes`, :mod:`!sndhdr`, :mod:`!spwd`, :mod:`!sunau`, :mod:`!telnetlib`, :mod:"
"`!uu` e :mod:`!xdrlib`."

#: ../../whatsnew/3.13.rst:188
msgid ""
"Remove the :program:`2to3` tool and :mod:`!lib2to3` module (deprecated in "
"Python 3.11)."
msgstr ""
"Foi removida a ferramenta :program:`2to3` e o módulo :mod:`!lib2to3` "
"(obsoletos no Python 3.11)."

#: ../../whatsnew/3.13.rst:190
msgid "Remove the :mod:`!tkinter.tix` module (deprecated in Python 3.6)."
msgstr "Foi removido o módulo :mod:`!tkinter.tix` (obsoleto no Python 3.6)."

#: ../../whatsnew/3.13.rst:191
msgid "Remove the :func:`!locale.resetlocale` function."
msgstr "Foi removida a função :func:`!locale.resetlocale`."

#: ../../whatsnew/3.13.rst:192
msgid "Remove the :mod:`!typing.io` and :mod:`!typing.re` namespaces."
msgstr "Foram removidos os *namespaces* :mod:`!typing.io` e :mod:`!typing.re`."

#: ../../whatsnew/3.13.rst:193
msgid "Remove chained :class:`classmethod` descriptors."
msgstr "Foram removidos os descritores :class:`classmethod` encadeados."

#: ../../whatsnew/3.13.rst:195
msgid "Release schedule changes:"
msgstr "Alterações no cronograma de lançamento:"

#: ../../whatsnew/3.13.rst:197
msgid ""
":pep:`602` (\"Annual Release Cycle for Python\") has been updated to extend "
"the full support ('bugfix') period for new releases to two years. This "
"updated policy means that:"
msgstr ""
":pep:`602` (\"Ciclo Anual de Lançamento para o Python\") foi atualizada para "
"estender o período de suporte total (\"correção de erros\") para novas "
"versões para dois anos. Esta política atualizada significa que:"

#: ../../whatsnew/3.13.rst:201
msgid ""
"Python 3.9--3.12 have one and a half years of full support, followed by "
"three and a half years of security fixes."
msgstr ""
"O Python 3.9--3.12 tem um ano e meio de suporte total, seguido de três anos "
"e meio de correções de segurança."

#: ../../whatsnew/3.13.rst:203
msgid ""
"Python 3.13 and later have two years of full support, followed by three "
"years of security fixes."
msgstr ""
"O Python 3.13 e posteriores têm dois anos de suporte total, seguido de três "
"anos de correções de segurança."

#: ../../whatsnew/3.13.rst:208 ../../whatsnew/3.13.rst:2053
msgid "New Features"
msgstr "Novas Funcionalidades"

#: ../../whatsnew/3.13.rst:214
msgid "A better interactive interpreter"
msgstr "Um interpretador interativo melhorado"

#: ../../whatsnew/3.13.rst:216
msgid ""
"Python now uses a new :term:`interactive` shell by default, based on code "
"from the `PyPy project`_. When the user starts the :term:`REPL` from an "
"interactive terminal, the following new features are now supported:"
msgstr ""
"O Python usa agora uma nova *shell* :term:`interativa` por predefinição, "
"baseada em código do `projeto PyPy`_. Quando o utilizador inicia o :term:"
"`REPL` a partir de um terminal interativo, as seguintes novas "
"funcionalidades são agora suportadas:"

#: ../../whatsnew/3.13.rst:221
msgid "Multiline editing with history preservation."
msgstr "Edição multilinhas com preservação do histórico."

#: ../../whatsnew/3.13.rst:222
msgid ""
"Direct support for REPL-specific commands like :kbd:`help`, :kbd:`exit`, "
"and :kbd:`quit`, without the need to call them as functions."
msgstr ""
"Suporte direto para comandos específicos do REPL como :kbd:`help`, :kbd:"
"`exit` e :kbd:`quit`, sem necessidade de os chamar como funções."

#: ../../whatsnew/3.13.rst:224
msgid ""
"Prompts and tracebacks with :ref:`color enabled by default <using-on-"
"controlling-color>`."
msgstr ""
"*Prompts* e *tracebacks* com :ref:`cores ativadas por predefinição <using-on-"
"controlling-color>`."

#: ../../whatsnew/3.13.rst:226
msgid ""
"Interactive help browsing using :kbd:`F1` with a separate command history."
msgstr ""
"Navegação interativa de ajuda usando :kbd:`F1` com um histórico de comandos "
"separado."

#: ../../whatsnew/3.13.rst:228
msgid ""
"History browsing using :kbd:`F2` that skips output as well as the :term:"
"`>>>` and :term:`...` prompts."
msgstr ""
"Navegação no histórico usando :kbd:`F2` que ignora a saída, bem como os "
"*prompts* :term:`>>>` e :term:`...`."

#: ../../whatsnew/3.13.rst:230
msgid ""
"\"Paste mode\" with :kbd:`F3` that makes pasting larger blocks of code "
"easier (press :kbd:`F3` again to return to the regular prompt)."
msgstr ""
"\"Modo de colagem\" com :kbd:`F3` que facilita a colagem de blocos maiores "
"de código (prima :kbd:`F3` novamente para voltar ao *prompt* normal)."

#: ../../whatsnew/3.13.rst:233
msgid ""
"To disable the new interactive shell, set the :envvar:`PYTHON_BASIC_REPL` "
"environment variable. For more on interactive mode, see :ref:`tut-interac`."
msgstr ""
"Para desativar a nova *shell* interativa, defina a variável de ambiente :"
"envvar:`PYTHON_BASIC_REPL`. Para mais informações sobre o modo interativo, "
"consulte :ref:`tut-interac`."

#: ../../whatsnew/3.13.rst:237
msgid ""
"(Contributed by Pablo Galindo Salgado, Łukasz Langa, and Lysandros Nikolaou "
"in :gh:`111201` based on code from the PyPy project. Windows support "
"contributed by Dino Viehland and Anthony Shaw.)"
msgstr ""
"(Contribuição de Pablo Galindo Salgado, Łukasz Langa e Lysandros Nikolaou "
"em :gh:`111201`, com base em código do projeto PyPy. Suporte para Windows "
"contribuído por Dino Viehland e Anthony Shaw.)"

#: ../../whatsnew/3.13.rst:247
msgid "Improved error messages"
msgstr "Mensagens de erro melhoradas"

#: ../../whatsnew/3.13.rst:249
msgid ""
"The interpreter now uses color by default when displaying tracebacks in the "
"terminal. This feature :ref:`can be controlled <using-on-controlling-color>` "
"via the new :envvar:`PYTHON_COLORS` environment variable as well as the "
"canonical |NO_COLOR|_ and |FORCE_COLOR|_ environment variables. (Contributed "
"by Pablo Galindo Salgado in :gh:`112730`.)"
msgstr ""
"O interpretador usa agora cores por predefinição ao mostrar *tracebacks* no "
"terminal. Esta funcionalidade :ref:`pode ser controlada <using-on-"
"controlling-color>` através da nova variável de ambiente :envvar:"
"`PYTHON_COLORS`, bem como das variáveis de ambiente canónicas |NO_COLOR|_ e |"
"FORCE_COLOR|_. (Contribuição de Pablo Galindo Salgado em :gh:`112730`.)"

#: ../../whatsnew/3.13.rst:264
msgid ""
"A common mistake is to write a script with the same name as a standard "
"library module. When this results in errors, we now display a more helpful "
"error message:"
msgstr ""
"Um erro comum é escrever um *script* com o mesmo nome que um módulo da "
"biblioteca padrão. Quando isto resulta em erros, é agora apresentada uma "
"mensagem de erro mais útil:"

#: ../../whatsnew/3.13.rst:268
msgid ""
"$ python random.py\n"
"Traceback (most recent call last):\n"
"  File \"/home/me/random.py\", line 1, in <module>\n"
"    import random\n"
"  File \"/home/me/random.py\", line 3, in <module>\n"
"    print(random.randint(5))\n"
"          ^^^^^^^^^^^^^^\n"
"AttributeError: module 'random' has no attribute 'randint' (consider "
"renaming '/home/me/random.py' since it has the same name as the standard "
"library module named 'random' and prevents importing that standard library "
"module)"
msgstr ""
"$ python random.py\n"
"Traceback (most recent call last):\n"
"  File \"/home/me/random.py\", line 1, in <module>\n"
"    import random\n"
"  File \"/home/me/random.py\", line 3, in <module>\n"
"    print(random.randint(5))\n"
"          ^^^^^^^^^^^^^^\n"
"AttributeError: o módulo 'random' não tem o atributo 'randint' (considere "
"renomear '/home/me/random.py' uma vez que tem o mesmo nome que o módulo da "
"biblioteca padrão chamado 'random' e impede a importação desse módulo da "
"biblioteca padrão)"

#: ../../whatsnew/3.13.rst:279
msgid ""
"Similarly, if a script has the same name as a third-party module that it "
"attempts to import and this results in errors, we also display a more "
"helpful error message:"
msgstr ""
"Da mesma forma, se um *script* tiver o mesmo nome que um módulo de terceiros "
"que tenta importar e isto resultar em erros, também é apresentada uma "
"mensagem de erro mais útil:"

#: ../../whatsnew/3.13.rst:283
msgid ""
"$ python numpy.py\n"
"Traceback (most recent call last):\n"
"  File \"/home/me/numpy.py\", line 1, in <module>\n"
"    import numpy as np\n"
"  File \"/home/me/numpy.py\", line 3, in <module>\n"
"    np.array([1, 2, 3])\n"
"    ^^^^^^^^\n"
"AttributeError: module 'numpy' has no attribute 'array' (consider renaming '/"
"home/me/numpy.py' if it has the same name as a library you intended to "
"import)"
msgstr ""
"$ python numpy.py\n"
"Traceback (most recent call last):\n"
"  File \"/home/me/numpy.py\", line 1, in <module>\n"
"    import numpy as np\n"
"  File \"/home/me/numpy.py\", line 3, in <module>\n"
"    np.array([1, 2, 3])\n"
"    ^^^^^^^^\n"
"AttributeError: o módulo 'numpy' não tem o atributo 'array' (considere "
"renomear '/home/me/numpy.py' se tiver o mesmo nome que uma biblioteca que "
"pretendia importar)"

#: ../../whatsnew/3.13.rst:294
msgid "(Contributed by Shantanu Jain in :gh:`95754`.)"
msgstr "(Contribuição de Shantanu Jain em :gh:`95754`.)"

#: ../../whatsnew/3.13.rst:296
msgid ""
"The error message now tries to suggest the correct keyword argument when an "
"incorrect keyword argument is passed to a function."
msgstr ""
"A mensagem de erro tenta agora sugerir o argumento de palavra-chave correto "
"quando um argumento de palavra-chave incorreto é passado a uma função."

#: ../../whatsnew/3.13.rst:299
msgid ""
">>> \"Better error messages!\".split(max_split=1)\n"
"Traceback (most recent call last):\n"
"  File \"<python-input-0>\", line 1, in <module>\n"
"    \"Better error messages!\".split(max_split=1)\n"
"    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^\n"
"TypeError: split() got an unexpected keyword argument 'max_split'. Did you "
"mean 'maxsplit'?"
msgstr ""
">>> \"Melhores mensagens de erro!\".split(max_split=1)\n"
"Traceback (most recent call last):\n"
"  File \"<python-input-0>\", line 1, in <module>\n"
"    \"Melhores mensagens de erro!\".split(max_split=1)\n"
"    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^\n"
"TypeError: split() recebeu um argumento de palavra-chave inesperado "
"'max_split'. Pretendeu dizer 'maxsplit'?"

#: ../../whatsnew/3.13.rst:308
msgid ""
"(Contributed by Pablo Galindo Salgado and Shantanu Jain in :gh:`107944`.)"
msgstr ""
"(Contribuição de Pablo Galindo Salgado e Shantanu Jain em :gh:`107944`.)"

#: ../../whatsnew/3.13.rst:314
msgid "Free-threaded CPython"
msgstr "CPython Multithread Livre"

#: ../../whatsnew/3.13.rst:316
msgid ""
"CPython now has experimental support for running in a free-threaded mode, "
"with the :term:`global interpreter lock` (GIL) disabled. This is an "
"experimental feature and therefore is not enabled by default. The free-"
"threaded mode requires a different executable, usually called "
"``python3.13t`` or ``python3.13t.exe``. Pre-built binaries marked as *free-"
"threaded* can be installed as part of the official :ref:`Windows <install-"
"freethreaded-windows>` and :ref:`macOS <install-freethreaded-macos>` "
"installers, or CPython can be built from source with the :option:`--disable-"
"gil` option."
msgstr ""
"O CPython tem agora suporte experimental para execução em modo multithread "
"livre, com o :term:`bloqueio global do interpretador` (GIL) desativado. Esta "
"é uma funcionalidade experimental e, portanto, não está ativada por "
"predefinição. O modo multithread livre requer um executável diferente, "
"normalmente chamado ``python3.13t`` ou ``python3.13t.exe``. Binários pré-"
"compilados marcados como *multithread livre* podem ser instalados como parte "
"dos instaladores oficiais para :ref:`Windows <install-freethreaded-windows>` "
"e :ref:`macOS <install-freethreaded-macos>`, ou o CPython pode ser compilado "
"a partir do código-fonte com a opção :option:`--disable-gil`."

#: ../../whatsnew/3.13.rst:326
msgid ""
"Free-threaded execution allows for full utilization of the available "
"processing power by running threads in parallel on available CPU cores. "
"While not all software will benefit from this automatically, programs "
"designed with threading in mind will run faster on multi-core hardware. "
"**The free-threaded mode is experimental** and work is ongoing to improve "
"it: expect some bugs and a substantial single-threaded performance hit. Free-"
"threaded builds of CPython support optionally running with the GIL enabled "
"at runtime using the environment variable :envvar:`PYTHON_GIL` or the "
"command-line option :option:`-X gil=1`."
msgstr ""
"A execução multithread livre permite a utilização total da potência de "
"processamento disponível, executando *threads* em paralelo nos núcleos de "
"CPU disponíveis. Embora nem todo o software beneficie automaticamente disto, "
"os programas concebidos com *threading* em mente executarão mais rapidamente "
"em hardware multicore. **O modo multithread livre é experimental** e o "
"trabalho para o melhorar está em curso: espere alguns erros e uma "
"penalização substancial de desempenho em *thread* única. As compilações "
"multithread livre do CPython suportam opcionalmente a execução com o GIL "
"ativado em tempo de execução, usando a variável de ambiente :envvar:"
"`PYTHON_GIL` ou a opção de linha de comandos :option:`-X gil=1`."

#: ../../whatsnew/3.13.rst:336
msgid ""
"To check if the current interpreter supports free-threading, :option:`python "
"-VV <-V>` and :data:`sys.version` contain \"experimental free-threading "
"build\". The new :func:`!sys._is_gil_enabled` function can be used to check "
"whether the GIL is actually disabled in the running process."
msgstr ""
"Para verificar se o interpretador atual suporta multithreading livre, :"
"option:`python -VV <-V>` e :data:`sys.version` contêm \"compilação "
"experimental multithread livre\". A nova função :func:`!sys._is_gil_enabled` "
"pode ser usada para verificar se o GIL está realmente desativado no processo "
"em execução."

#: ../../whatsnew/3.13.rst:341
msgid ""
"C-API extension modules need to be built specifically for the free-threaded "
"build. Extensions that support running with the :term:`GIL` disabled should "
"use the :c:data:`Py_mod_gil` slot. Extensions using single-phase init should "
"use :c:func:`PyUnstable_Module_SetGIL` to indicate whether they support "
"running with the GIL disabled. Importing C extensions that don't use these "
"mechanisms will cause the GIL to be enabled, unless the GIL was explicitly "
"disabled with the :envvar:`PYTHON_GIL` environment variable or the :option:`-"
"X gil=0` option. pip 24.1 or newer is required to install packages with C "
"extensions in the free-threaded build."
msgstr ""
"Os módulos de extensão da API C precisam de ser compilados especificamente "
"para a compilação multithread livre. As extensões que suportam execução com "
"o :term:`GIL` desativado devem usar o *slot* :c:data:`Py_mod_gil`. As "
"extensões que usam inicialização de fase única devem usar :c:func:"
"`PyUnstable_Module_SetGIL` para indicar se suportam execução com o GIL "
"desativado. A importação de extensões C que não usam estes mecanismos fará "
"com que o GIL seja ativado, a menos que o GIL tenha sido explicitamente "
"desativado com a variável de ambiente :envvar:`PYTHON_GIL` ou a opção :"
"option:`-X gil=0`. É necessário o pip 24.1 ou superior para instalar pacotes "
"com extensões C na compilação multithread livre."

#: ../../whatsnew/3.13.rst:352
msgid ""
"This work was made possible thanks to many individuals and organizations, "
"including the large community of contributors to Python and third-party "
"projects to test and enable free-threading support. Notable contributors "
"include: Sam Gross, Ken Jin, Donghee Na, Itamar Oren, Matt Page, Brett "
"Simmers, Dino Viehland, Carl Meyer, Nathan Goldbaum, Ralf Gommers, Lysandros "
"Nikolaou, and many others. Many of these contributors are employed by Meta, "
"which has provided significant engineering resources to support this project."
msgstr ""
"Este trabalho foi possível graças a muitos indivíduos e organizações, "
"incluindo a grande comunidade de contribuidores para o Python e projetos de "
"terceiros para testar e habilitar o suporte a multithreading livre. "
"Contribuidores notáveis incluem: Sam Gross, Ken Jin, Donghee Na, Itamar "
"Oren, Matt Page, Brett Simmers, Dino Viehland, Carl Meyer, Nathan Goldbaum, "
"Ralf Gommers, Lysandros Nikolaou, e muitos outros. Muitos destes "
"contribuidores são empregados pela Meta, que forneceu recursos "
"significativos de engenharia para apoiar este projeto."

#: ../../whatsnew/3.13.rst:364
msgid ""
":pep:`703` \"Making the Global Interpreter Lock Optional in CPython\" "
"contains rationale and information surrounding this work."
msgstr ""
":pep:`703` \"Tornar o Bloqueio Global do Interpretador Opcional no CPython\" "
"contém a justificação e informações sobre este trabalho."

#: ../../whatsnew/3.13.rst:367
msgid ""
"`Porting Extension Modules to Support Free-Threading <https://py-free-"
"threading.github.io/porting/>`_: A community-maintained porting guide for "
"extension authors."
msgstr ""
"`Portar Módulos de Extensão para Suportar Multithreading Livre <https://py-"
"free-threading.github.io/porting/>`_: Um guia de portabilidade mantido pela "
"comunidade para autores de extensões."

#: ../../whatsnew/3.13.rst:375
msgid "An experimental just-in-time (JIT) compiler"
msgstr "Um compilador *just-in-time* (JIT) experimental"

#: ../../whatsnew/3.13.rst:377
msgid ""
"When CPython is configured and built using the :option:`!--enable-"
"experimental-jit` option, a just-in-time (JIT) compiler is added which may "
"speed up some Python programs. On Windows, use ``PCbuild/build.bat --"
"experimental-jit`` to enable the JIT or ``--experimental-jit-interpreter`` "
"to enable the Tier 2 interpreter. Build requirements and further supporting "
"information `are contained at`__ :file:`Tools/jit/README.md`."
msgstr ""
"Quando o CPython é configurado e compilado usando a opção :option:`!--enable-"
"experimental-jit`, é adicionado um compilador *just-in-time* (JIT) que pode "
"acelerar alguns programas Python. No Windows, use ``PCbuild/build.bat --"
"experimental-jit`` para ativar o JIT ou ``--experimental-jit-interpreter`` "
"para ativar o interpretador de Nível 2. Os requisitos de compilação e "
"informações adicionais de suporte `estão contidos em`__ :file:`Tools/jit/"
"README.md`."

#: ../../whatsnew/3.13.rst:387
msgid ""
"The :option:`!--enable-experimental-jit` option takes these (optional) "
"values, defaulting to ``yes`` if :option:`!--enable-experimental-jit` is "
"present without the optional value."
msgstr ""
"A opção :option:`!--enable-experimental-jit` aceita estes valores "
"(opcionais), predefinindo para ``yes`` se :option:`!--enable-experimental-"
"jit` estiver presente sem o valor opcional."

#: ../../whatsnew/3.13.rst:391
msgid "``no``: Disable the entire Tier 2 and JIT pipeline."
msgstr "``no``: Desativar todo o pipeline de Nível 2 e JIT."

#: ../../whatsnew/3.13.rst:392
msgid ""
"``yes``: Enable the JIT. To disable the JIT at runtime, pass the environment "
"variable :envvar:`PYTHON_JIT=0 <PYTHON_JIT>`."
msgstr ""

#: ../../whatsnew/3.13.rst:394
msgid ""
"``yes-off``: Build the JIT but disable it by default. To enable the JIT at "
"runtime, pass the environment variable :envvar:`PYTHON_JIT=1 <PYTHON_JIT>`."
msgstr ""

#: ../../whatsnew/3.13.rst:396
msgid ""
"``interpreter``: Enable the Tier 2 interpreter but disable the JIT. The "
"interpreter can be disabled by running with :envvar:`PYTHON_JIT=0 "
"<PYTHON_JIT>`."
msgstr ""

#: ../../whatsnew/3.13.rst:399
msgid "The internal architecture is roughly as follows:"
msgstr "A arquitetura interna é aproximadamente a seguinte:"

#: ../../whatsnew/3.13.rst:401
msgid ""
"We start with specialized *Tier 1 bytecode*. See :ref:`What's new in 3.11 "
"<whatsnew311-pep659>` for details."
msgstr ""
"Começamos com *bytecode* especializado de *Nível 1*. Consulte :ref:"
"`Novidades no 3.11 <whatsnew311-pep659>` para mais detalhes."

#: ../../whatsnew/3.13.rst:403
msgid ""
"When the Tier 1 bytecode gets hot enough, it gets translated to a new purely "
"internal intermediate representation (IR), called the *Tier 2 IR*, and "
"sometimes referred to as micro-ops (\"uops\")."
msgstr ""
"Quando o *bytecode* de Nível 1 atinge um nível de utilização suficiente, é "
"traduzido para uma nova representação intermédia (IR) interna, chamada *IR "
"de Nível 2*, e por vezes referida como micro-operações (\"uops\")."

#: ../../whatsnew/3.13.rst:406
msgid ""
"The Tier 2 IR uses the same stack-based virtual machine as Tier 1, but the "
"instruction format is better suited to translation to machine code."
msgstr ""
"O IR de Nível 2 usa a mesma máquina virtual baseada em pilha que o Nível 1, "
"mas o formato de instrução é mais adequado para tradução para código de "
"máquina."

#: ../../whatsnew/3.13.rst:408
msgid ""
"We have several optimization passes for Tier 2 IR, which are applied before "
"it is interpreted or translated to machine code."
msgstr ""
"Temos várias passes de otimização para o IR de Nível 2, que são aplicadas "
"antes de ser interpretado ou traduzido para código de máquina."

#: ../../whatsnew/3.13.rst:410
msgid ""
"There is a Tier 2 interpreter, but it is mostly intended for debugging the "
"earlier stages of the optimization pipeline. The Tier 2 interpreter can be "
"enabled by configuring Python with ``--enable-experimental-jit=interpreter``."
msgstr ""
"Existe um interpretador de Nível 2, mas é principalmente destinado à "
"depuração das fases iniciais do pipeline de otimização. O interpretador de "
"Nível 2 pode ser ativado configurando o Python com ``--enable-experimental-"
"jit=interpreter``."

#: ../../whatsnew/3.13.rst:414
msgid ""
"When the JIT is enabled, the optimized Tier 2 IR is translated to machine "
"code, which is then executed."
msgstr ""
"Quando o JIT está ativado, o IR de Nível 2 otimizado é traduzido para código "
"de máquina, que é então executado."

#: ../../whatsnew/3.13.rst:416
msgid ""
"The machine code translation process uses a technique called *copy-and-"
"patch*. It has no runtime dependencies, but there is a new build-time "
"dependency on LLVM."
msgstr ""
"O processo de tradução de código de máquina usa uma técnica chamada *copy-"
"and-patch*. Não tem dependências em tempo de execução, mas há uma nova "
"dependência em tempo de compilação no LLVM."

#: ../../whatsnew/3.13.rst:420
msgid ":pep:`744`"
msgstr ":pep:`744`"

#: ../../whatsnew/3.13.rst:422
msgid ""
"(JIT by Brandt Bucher, inspired by a paper by Haoran Xu and Fredrik "
"Kjolstad. Tier 2 IR by Mark Shannon and Guido van Rossum. Tier 2 optimizer "
"by Ken Jin.)"
msgstr ""
"(JIT por Brandt Bucher, inspirado num artigo de Haoran Xu e Fredrik "
"Kjolstad. IR de Nível 2 por Mark Shannon e Guido van Rossum. Otimizador de "
"Nível 2 por Ken Jin.)"

#: ../../whatsnew/3.13.rst:430
msgid "Defined mutation semantics for :py:func:`locals`"
msgstr "Semântica de mutação definida para :py:func:`locals`"

#: ../../whatsnew/3.13.rst:432
msgid ""
"Historically, the expected result of mutating the return value of :func:"
"`locals` has been left to individual Python implementations to define. "
"Starting from Python 3.13, :pep:`667` standardises the historical behavior "
"of CPython for most code execution scopes, but changes :term:`optimized "
"scopes <optimized scope>` (functions, generators, coroutines, "
"comprehensions, and generator expressions) to explicitly return independent "
"snapshots of the currently assigned local variables, including locally "
"referenced nonlocal variables captured in closures."
msgstr ""
"Historicamente, o resultado esperado da mutação do valor de retorno de :func:"
"`locals` foi deixado para as implementações individuais do Python definirem. "
"A partir do Python 3.13, a :pep:`667` padroniza o comportamento histórico do "
"CPython para a maioria dos âmbitos de execução de código, mas altera os :"
"term:`âmbitos otimizados <optimized scope>` (funções, geradores, corrotinas, "
"*comprehensions* e expressões geradoras) para devolver explicitamente "
"*snapshots* independentes das variáveis locais atualmente atribuídas, "
"incluindo variáveis não-locais referenciadas localmente capturadas em "
"*closures*."

#: ../../whatsnew/3.13.rst:441
msgid ""
"This change to the semantics of :func:`locals` in optimized scopes also "
"affects the default behavior of code execution functions that implicitly "
"target :func:`!locals` if no explicit namespace is provided (such as :func:"
"`exec` and :func:`eval`). In previous versions, whether or not changes could "
"be accessed by calling :func:`!locals` after calling the code execution "
"function was implementation-dependent. In CPython specifically, such code "
"would typically appear to work as desired, but could sometimes fail in "
"optimized scopes based on other code (including debuggers and code execution "
"tracing tools) potentially resetting the shared snapshot in that scope. Now, "
"the code will always run against an independent snapshot of the local "
"variables in optimized scopes, and hence the changes will never be visible "
"in subsequent calls to :func:`!locals`. To access the changes made in these "
"cases, an explicit namespace reference must now be passed to the relevant "
"function. Alternatively, it may make sense to update affected code to use a "
"higher level code execution API that returns the resulting code execution "
"namespace (e.g. :func:`runpy.run_path` when executing Python files from "
"disk)."
msgstr ""
"Esta alteração na semântica de :func:`locals` em âmbitos otimizados também "
"afeta o comportamento predefinido das funções de execução de código que "
"visam implicitamente :func:`!locals` se nenhum *namespace* explícito for "
"fornecido (como :func:`exec` e :func:`eval`). Em versões anteriores, se as "
"alterações podiam ser acedidas chamando :func:`!locals` após chamar a função "
"de execução de código dependia da implementação. No CPython, "
"especificamente, esse código geralmente parecia funcionar como desejado, mas "
"às vezes podia falhar em âmbitos otimizados com base em outro código "
"(incluindo *debuggers* e ferramentas de rastreio de execução de código) que "
"potencialmente redefiniam o *snapshot* partilhado nesse âmbito. Agora, o "
"código será sempre executado contra um *snapshot* independente das variáveis "
"locais em âmbitos otimizados, e, portanto, as alterações nunca serão "
"visíveis em chamadas subsequentes a :func:`!locals`. Para aceder às "
"alterações feitas nestes casos, uma referência de *namespace* explícita deve "
"agora ser passada para a função relevante. Alternativamente, pode fazer "
"sentido atualizar o código afetado para usar uma API de execução de código "
"de nível superior que retorne o *namespace* resultante da execução de código "
"(por exemplo, :func:`runpy.run_path` ao executar ficheiros Python a partir "
"do disco)."

#: ../../whatsnew/3.13.rst:460
msgid ""
"To ensure debuggers and similar tools can reliably update local variables in "
"scopes affected by this change, :attr:`FrameType.f_locals <frame.f_locals>` "
"now returns a write-through proxy to the frame's local and locally "
"referenced nonlocal variables in these scopes, rather than returning an "
"inconsistently updated shared ``dict`` instance with undefined runtime "
"semantics."
msgstr ""
"Para garantir que *debuggers* e ferramentas semelhantes possam atualizar "
"variáveis locais de forma fiável em âmbitos afetados por esta alteração, :"
"attr:`FrameType.f_locals <frame.f_locals>` devolve agora um *proxy* de "
"escrita para as variáveis locais e não-locais referenciadas localmente do "
"*frame* nestes âmbitos, em vez de devolver uma instância ``dict`` partilhada "
"atualizada de forma inconsistente com semântica de tempo de execução "
"indefinida."

#: ../../whatsnew/3.13.rst:466
msgid ""
"See :pep:`667` for more details, including related C API changes and "
"deprecations. Porting notes are also provided below for the affected :ref:"
"`Python APIs <pep667-porting-notes-py>` and :ref:`C APIs <pep667-porting-"
"notes-c>`."
msgstr ""
"Consulte :pep:`667` para mais detalhes, incluindo alterações relacionadas na "
"API C e obsolescências. Notas de portabilidade são também fornecidas abaixo "
"para as APIs do :ref:`Python afetadas <pep667-porting-notes-py>` e :ref:"
"`APIs C <pep667-porting-notes-c>`."

#: ../../whatsnew/3.13.rst:471
msgid ""
"(PEP and implementation contributed by Mark Shannon and Tian Gao in :gh:"
"`74929`. Documentation updates provided by Guido van Rossum and Alyssa "
"Coghlan.)"
msgstr ""
"(PEP e implementação contribuídas por Mark Shannon e Tian Gao em :gh:"
"`74929`. Atualizações de documentação fornecidas por Guido van Rossum e "
"Alyssa Coghlan.)"

#: ../../whatsnew/3.13.rst:479
msgid "Support for mobile platforms"
msgstr "Suporte para plataformas móveis"

#: ../../whatsnew/3.13.rst:481
msgid ""
":pep:`730`: iOS is now a :pep:`11` supported platform, with the ``arm64-"
"apple-ios`` and ``arm64-apple-ios-simulator`` targets at tier 3 (iPhone and "
"iPad devices released after 2013 and the Xcode iOS simulator running on "
"Apple silicon hardware, respectively). ``x86_64-apple-ios-simulator`` (the "
"Xcode iOS simulator running on older ``x86_64`` hardware) is not a tier 3 "
"supported platform, but will have best-effort support. (PEP written and "
"implementation contributed by Russell Keith-Magee in :gh:`114099`.)"
msgstr ""
":pep:`730`: iOS é agora uma plataforma suportada :pep:`11`, com os alvos "
"``arm64-apple-ios`` e ``arm64-apple-ios-simulator`` em nível 3 (dispositivos "
"iPhone e iPad lançados após 2013 e o simulador iOS do Xcode a executar em "
"hardware Apple silicon, respetivamente). ``x86_64-apple-ios-simulator`` (o "
"simulador iOS do Xcode a executar em hardware ``x86_64`` mais antigo) não é "
"uma plataforma suportada de nível 3, mas terá suporte de melhor esforço. "
"(PEP escrito e implementação contribuída por Russell Keith-Magee em :gh:"
"`114099`."

#: ../../whatsnew/3.13.rst:491
msgid ""
":pep:`738`: Android is now a :pep:`11` supported platform, with the "
"``aarch64-linux-android`` and ``x86_64-linux-android`` targets at tier 3. "
"The 32-bit targets ``arm-linux-androideabi`` and ``i686-linux-android`` are "
"not tier 3 supported platforms, but will have best-effort support. (PEP "
"written and implementation contributed by Malcolm Smith in :gh:`116622`.)"
msgstr ""
":pep:`738`: Android é agora uma plataforma suportada :pep:`11`, com os alvos "
"``aarch64-linux-android`` e ``x86_64-linux-android`` em nível 3. Os alvos de "
"32 bits ``arm-linux-androideabi`` e ``i686-linux-android`` não são "
"plataformas suportadas de nível 3, mas terão suporte de melhor esforço. (PEP "
"escrito e implementação contribuída por Malcolm Smith em :gh:`116622`."

#: ../../whatsnew/3.13.rst:498
msgid ":pep:`730`, :pep:`738`"
msgstr ":pep:`730`, :pep:`738`"

#: ../../whatsnew/3.13.rst:502
msgid "Other Language Changes"
msgstr "Outras Alterações à Linguagem"

#: ../../whatsnew/3.13.rst:504
msgid ""
"The compiler now strips common leading whitespace from every line in a "
"docstring. This reduces the size of the :term:`bytecode cache <bytecode>` "
"(such as ``.pyc`` files), with reductions in file size of around 5%, for "
"example in :mod:`!sqlalchemy.orm.session` from SQLAlchemy 2.0. This change "
"affects tools that use docstrings, such as :mod:`doctest`."
msgstr ""
"O compilador agora remove espaços em branco iniciais comuns de cada linha "
"numa *docstring*. Isto reduz o tamanho da :term:`cache de bytecode "
"<bytecode>` (como ficheiros ``.pyc``), com reduções no tamanho do ficheiro "
"de cerca de 5%, por exemplo em :mod:`!sqlalchemy.orm.session` do SQLAlchemy "
"2.0. Esta alteração afeta ferramentas que usam *docstrings*, como :mod:"
"`doctest`."

#: ../../whatsnew/3.13.rst:511
msgid ""
">>> def spam():\n"
"...     \"\"\"\n"
"...         This is a docstring with\n"
"...           leading whitespace.\n"
"...\n"
"...         It even has multiple paragraphs!\n"
"...     \"\"\"\n"
"...\n"
">>> spam.__doc__\n"
"'\\nThis is a docstring with\\n  leading whitespace.\\n\\nIt even has "
"multiple paragraphs!\\n'"
msgstr ""

#: ../../whatsnew/3.13.rst:524
msgid "(Contributed by Inada Naoki in :gh:`81283`.)"
msgstr ""

#: ../../whatsnew/3.13.rst:526
msgid ""
":ref:`Annotation scopes <annotation-scopes>` within class scopes can now "
"contain lambdas and comprehensions. Comprehensions that are located within "
"class scopes are not inlined into their parent scope."
msgstr ""
"Os :ref:`âmbitos de anotação <annotation-scopes>` dentro de âmbitos de "
"classe podem agora conter *lambdas* e *comprehensions*. As *comprehensions* "
"que estão localizadas dentro de âmbitos de classe não são inseridas no seu "
"âmbito pai."

#: ../../whatsnew/3.13.rst:531
msgid ""
"class C[T]:\n"
"    type Alias = lambda: T"
msgstr ""

#: ../../whatsnew/3.13.rst:536
msgid "(Contributed by Jelle Zijlstra in :gh:`109118` and :gh:`118160`.)"
msgstr ""

#: ../../whatsnew/3.13.rst:538
msgid ""
":ref:`Future statements <future>` are no longer triggered by relative "
"imports of the :mod:`__future__` module, meaning that statements of the form "
"``from .__future__ import ...`` are now simply standard relative imports, "
"with no special features activated. (Contributed by Jeremiah Gabriel Pascual "
"in :gh:`118216`.)"
msgstr ""
"As :ref:`declarações *future* <future>` já não são ativadas por importações "
"relativas do módulo :mod:`__future__`, o que significa que declarações da "
"forma ``from .__future__ import ...`` são agora simplesmente importações "
"relativas padrão, sem funcionalidades especiais ativadas. (Contribuído por "
"Jeremiah Gabriel Pascual em :gh:`118216`.)"

#: ../../whatsnew/3.13.rst:544
msgid ""
":keyword:`global` declarations are now permitted in :keyword:`except` blocks "
"when that global is used in the :keyword:`else` block. Previously this "
"raised an erroneous :exc:`SyntaxError`. (Contributed by Irit Katriel in :gh:"
"`111123`.)"
msgstr ""
"As declarações :keyword:`global` são agora permitidas em blocos :keyword:"
"`except` quando essa variável global é usada no bloco :keyword:`else`. "
"Anteriormente, isto levantava um :exc:`SyntaxError` erróneo. (Contribuído "
"por Irit Katriel em :gh:`111123`.)"

#: ../../whatsnew/3.13.rst:549
msgid ""
"Add :envvar:`PYTHON_FROZEN_MODULES`, a new environment variable that "
"determines whether frozen modules are ignored by the import machinery, "
"equivalent to the :option:`-X frozen_modules <-X>` command-line option. "
"(Contributed by Yilei Yang in :gh:`111374`.)"
msgstr ""
"Adicionada a variável de ambiente :envvar:`PYTHON_FROZEN_MODULES`, que "
"determina se os módulos congelados são ignorados pela maquinaria de "
"importação, equivalente à opção de linha de comandos :option:`-X "
"frozen_modules <-X>`. (Contribuído por Yilei Yang em :gh:`111374`.)"

#: ../../whatsnew/3.13.rst:554
msgid ""
"Add :ref:`support for the perf profiler <perf_profiling>` working without "
"`frame pointers <https://en.wikipedia.org/wiki/Call_stack>`_ through the new "
"environment variable :envvar:`PYTHON_PERF_JIT_SUPPORT` and command-line "
"option :option:`-X perf_jit <-X>`. (Contributed by Pablo Galindo in :gh:"
"`118518`.)"
msgstr ""
"Adicionado :ref:`suporte para o perfilador *perf* <perf_profiling>` a "
"funcionar sem `ponteiros de quadro <https://en.wikipedia.org/wiki/"
"Call_stack>`_ através da nova variável de ambiente :envvar:"
"`PYTHON_PERF_JIT_SUPPORT` e da opção de linha de comandos :option:`-X "
"perf_jit <-X>`. (Contribuído por Pablo Galindo em :gh:`118518`.)"

#: ../../whatsnew/3.13.rst:560
msgid ""
"The location of a :file:`.python_history` file can be changed via the new :"
"envvar:`PYTHON_HISTORY` environment variable. (Contributed by Levi Sabah, "
"Zackery Spytz and Hugo van Kemenade in :gh:`73965`.)"
msgstr ""
"A localização de um ficheiro :file:`.python_history` pode ser alterada "
"através da nova variável de ambiente :envvar:`PYTHON_HISTORY`. (Contribuído "
"por Levi Sabah, Zackery Spytz e Hugo van Kemenade em :gh:`73965`.)"

#: ../../whatsnew/3.13.rst:565
msgid ""
"Classes have a new :attr:`~type.__static_attributes__` attribute. This is "
"populated by the compiler with a tuple of the class's attribute names which "
"are assigned through ``self.<name>`` from any function in its body. "
"(Contributed by Irit Katriel in :gh:`115775`.)"
msgstr ""
"As classes têm um novo atributo :attr:`~type.__static_attributes__`. Este é "
"preenchido pelo compilador com um tuplo dos nomes dos atributos da classe "
"que são atribuídos através de ``self.<name>`` a partir de qualquer função no "
"seu corpo. (Contribuído por Irit Katriel em :gh:`115775`.)"

#: ../../whatsnew/3.13.rst:570
msgid ""
"The compiler now creates a :attr:`!__firstlineno__` attribute on classes "
"with the line number of the first line of the class definition. (Contributed "
"by Serhiy Storchaka in :gh:`118465`.)"
msgstr ""
"O compilador agora cria um atributo :attr:`!__firstlineno__` nas classes com "
"o número da linha da primeira linha da definição da classe. (Contribuído por "
"Serhiy Storchaka em :gh:`118465`.)"

#: ../../whatsnew/3.13.rst:574
msgid ""
"The :func:`exec` and :func:`eval` builtins now accept the *globals* and "
"*locals* arguments as keywords. (Contributed by Raphael Gaschignard in :gh:"
"`105879`)"
msgstr ""
"As funções integradas :func:`exec` e :func:`eval` aceitam agora os "
"argumentos *globals* e *locals* como palavras-chave. (Contribuído por "
"Raphael Gaschignard em :gh:`105879`.)"

#: ../../whatsnew/3.13.rst:578
msgid ""
"The :func:`compile` builtin now accepts a new flag, ``ast."
"PyCF_OPTIMIZED_AST``, which is similar to ``ast.PyCF_ONLY_AST`` except that "
"the returned AST is optimized according to the value of the *optimize* "
"argument. (Contributed by Irit Katriel in :gh:`108113`)."
msgstr ""
"A função integrada :func:`compile` aceita agora uma nova *flag*, ``ast."
"PyCF_OPTIMIZED_AST``, que é semelhante a ``ast.PyCF_ONLY_AST`` exceto que a "
"AST retornada é otimizada de acordo com o valor do argumento *optimize*. "
"(Contribuído por Irit Katriel em :gh:`108113`.)"

#: ../../whatsnew/3.13.rst:584
msgid ""
"Add a :attr:`~property.__name__` attribute on :class:`property` objects. "
"(Contributed by Eugene Toder in :gh:`101860`.)"
msgstr ""
"Adicionado um atributo :attr:`~property.__name__` aos objetos :class:"
"`property`. (Contribuído por Eugene Toder em :gh:`101860`.)"

#: ../../whatsnew/3.13.rst:587
msgid ""
"Add :exc:`PythonFinalizationError`, a new exception derived from :exc:"
"`RuntimeError` and used to signal when operations are blocked during :term:"
"`finalization <interpreter shutdown>`. The following callables now raise :"
"exc:`!PythonFinalizationError`, instead of :exc:`RuntimeError`:"
msgstr ""
"Adicionado :exc:`PythonFinalizationError`, uma nova exceção derivada de :exc:"
"`RuntimeError` e usada para sinalizar quando operações são bloqueadas "
"durante a :term:`finalização <interpreter shutdown>`. As seguintes funções "
"agora levantam :exc:`!PythonFinalizationError`, em vez de :exc:"
"`RuntimeError`:"

#: ../../whatsnew/3.13.rst:593
msgid ":func:`_thread.start_new_thread`"
msgstr ""

#: ../../whatsnew/3.13.rst:594
msgid ":func:`os.fork`"
msgstr ""

#: ../../whatsnew/3.13.rst:595
msgid ":func:`os.forkpty`"
msgstr ""

#: ../../whatsnew/3.13.rst:596
msgid ":class:`subprocess.Popen`"
msgstr ""

#: ../../whatsnew/3.13.rst:598
msgid "(Contributed by Victor Stinner in :gh:`114570`.)"
msgstr ""

#: ../../whatsnew/3.13.rst:600
msgid ""
"Allow the *count* argument of :meth:`str.replace` to be a keyword. "
"(Contributed by Hugo van Kemenade in :gh:`106487`.)"
msgstr ""

#: ../../whatsnew/3.13.rst:603
msgid ""
"Many functions now emit a warning if a boolean value is passed as a file "
"descriptor argument. This can help catch some errors earlier. (Contributed "
"by Serhiy Storchaka in :gh:`82626`.)"
msgstr ""

#: ../../whatsnew/3.13.rst:608
msgid ""
"Added :attr:`!name` and :attr:`!mode` attributes for compressed and archived "
"file-like objects in the :mod:`bz2`, :mod:`lzma`, :mod:`tarfile`, and :mod:"
"`zipfile` modules. (Contributed by Serhiy Storchaka in :gh:`115961`.)"
msgstr ""

#: ../../whatsnew/3.13.rst:615
msgid "New Modules"
msgstr "Novos Módulos"

#: ../../whatsnew/3.13.rst:617
msgid ""
":mod:`dbm.sqlite3`: An SQLite backend for :mod:`dbm`. (Contributed by "
"Raymond Hettinger and Erlend E. Aasland in :gh:`100414`.)"
msgstr ""

#: ../../whatsnew/3.13.rst:622
msgid "Improved Modules"
msgstr "Módulos Melhorados"

#: ../../whatsnew/3.13.rst:626
msgid "argparse"
msgstr "argparse"

#: ../../whatsnew/3.13.rst:628
msgid ""
"Add the *deprecated* parameter to the :meth:`~argparse.ArgumentParser."
"add_argument` and :meth:`!add_parser` methods, to enable deprecating command-"
"line options, positional arguments, and subcommands. (Contributed by Serhiy "
"Storchaka in :gh:`83648`.)"
msgstr ""

#: ../../whatsnew/3.13.rst:636
msgid "array"
msgstr "array"

#: ../../whatsnew/3.13.rst:638
msgid ""
"Add the ``'w'`` type code (``Py_UCS4``) for Unicode characters. It should be "
"used instead of the deprecated ``'u'`` type code. (Contributed by Inada "
"Naoki in :gh:`80480`.)"
msgstr ""

#: ../../whatsnew/3.13.rst:642
msgid ""
"Register :class:`array.array` as a :class:`~collections.abc.MutableSequence` "
"by implementing the :meth:`~array.array.clear` method. (Contributed by Mike "
"Zimin in :gh:`114894`.)"
msgstr ""

#: ../../whatsnew/3.13.rst:648
msgid "ast"
msgstr "ast"

#: ../../whatsnew/3.13.rst:650
msgid ""
"The constructors of node types in the :mod:`ast` module are now stricter in "
"the arguments they accept, with more intuitive behavior when arguments are "
"omitted."
msgstr ""

#: ../../whatsnew/3.13.rst:654
msgid ""
"If an optional field on an AST node is not included as an argument when "
"constructing an instance, the field will now be set to ``None``. Similarly, "
"if a list field is omitted, that field will now be set to an empty list, and "
"if an :class:`!expr_context` field is omitted, it defaults to :class:`Load() "
"<ast.Load>`. (Previously, in all cases, the attribute would be missing on "
"the newly constructed AST node instance.)"
msgstr ""

#: ../../whatsnew/3.13.rst:662
msgid ""
"In all other cases, where a required argument is omitted, the node "
"constructor will emit a :exc:`DeprecationWarning`. This will raise an "
"exception in Python 3.15. Similarly, passing a keyword argument to the "
"constructor that does not map to a field on the AST node is now deprecated, "
"and will raise an exception in Python 3.15."
msgstr ""

#: ../../whatsnew/3.13.rst:669
msgid ""
"These changes do not apply to user-defined subclasses of :class:`ast.AST` "
"unless the class opts in to the new behavior by defining the :attr:`.AST."
"_field_types` mapping."
msgstr ""

#: ../../whatsnew/3.13.rst:673
msgid ""
"(Contributed by Jelle Zijlstra in :gh:`105858`, :gh:`117486`, and :gh:"
"`118851`.)"
msgstr ""

#: ../../whatsnew/3.13.rst:675
msgid ""
":func:`ast.parse` now accepts an optional argument *optimize* which is "
"passed on to :func:`compile`. This makes it possible to obtain an optimized "
"AST. (Contributed by Irit Katriel in :gh:`108113`.)"
msgstr ""

#: ../../whatsnew/3.13.rst:682
msgid "asyncio"
msgstr "asyncio"

#: ../../whatsnew/3.13.rst:684
msgid ""
":func:`asyncio.as_completed` now returns an object that is both an :term:"
"`asynchronous iterator` and a plain :term:`iterator` of :term:`awaitables "
"<awaitable>`. The awaitables yielded by asynchronous iteration include "
"original task or future objects that were passed in, making it easier to "
"associate results with the tasks being completed. (Contributed by Justin "
"Arthur in :gh:`77714`.)"
msgstr ""

#: ../../whatsnew/3.13.rst:692
msgid ""
":meth:`asyncio.loop.create_unix_server` will now automatically remove the "
"Unix socket when the server is closed. (Contributed by Pierre Ossman in :gh:"
"`111246`.)"
msgstr ""

#: ../../whatsnew/3.13.rst:696
msgid ""
":meth:`.DatagramTransport.sendto` will now send zero-length datagrams if "
"called with an empty bytes object. The transport flow control also now "
"accounts for the datagram header when calculating the buffer size. "
"(Contributed by Jamie Phan in :gh:`115199`.)"
msgstr ""

#: ../../whatsnew/3.13.rst:702
msgid ""
"Add :meth:`Queue.shutdown <asyncio.Queue.shutdown>` and :exc:`~asyncio."
"QueueShutDown` to manage queue termination. (Contributed by Laurie Opperman "
"and Yves Duprat in :gh:`104228`.)"
msgstr ""

#: ../../whatsnew/3.13.rst:706
msgid ""
"Add the :meth:`.Server.close_clients` and :meth:`.Server.abort_clients` "
"methods, which more forcefully close an asyncio server. (Contributed by "
"Pierre Ossman in :gh:`113538`.)"
msgstr ""

#: ../../whatsnew/3.13.rst:710
msgid ""
"Accept a tuple of separators in :meth:`.StreamReader.readuntil`, stopping "
"when any one of them is encountered. (Contributed by Bruce Merry in :gh:"
"`81322`.)"
msgstr ""

#: ../../whatsnew/3.13.rst:714
msgid ""
"Improve the behavior of :class:`~asyncio.TaskGroup` when an external "
"cancellation collides with an internal cancellation. For example, when two "
"task groups are nested and both experience an exception in a child task "
"simultaneously, it was possible that the outer task group would hang, "
"because its internal cancellation was swallowed by the inner task group."
msgstr ""

#: ../../whatsnew/3.13.rst:721
msgid ""
"In the case where a task group is cancelled externally and also must raise "
"an :exc:`ExceptionGroup`, it will now call the parent task's :meth:`~asyncio."
"Task.cancel` method. This ensures that a :exc:`~asyncio.CancelledError` will "
"be raised at the next :keyword:`await`, so the cancellation is not lost."
msgstr ""

#: ../../whatsnew/3.13.rst:727
msgid ""
"An added benefit of these changes is that task groups now preserve the "
"cancellation count (:meth:`~asyncio.Task.cancelling`)."
msgstr ""

#: ../../whatsnew/3.13.rst:730
msgid ""
"In order to handle some corner cases, :meth:`~asyncio.Task.uncancel` may now "
"reset the undocumented ``_must_cancel`` flag when the cancellation count "
"reaches zero."
msgstr ""

#: ../../whatsnew/3.13.rst:734
msgid "(Inspired by an issue reported by Arthur Tacca in :gh:`116720`.)"
msgstr ""

#: ../../whatsnew/3.13.rst:736
msgid ""
"When :meth:`.TaskGroup.create_task` is called on an inactive :class:"
"`~asyncio.TaskGroup`, the given coroutine will be closed (which prevents a :"
"exc:`RuntimeWarning` about the given coroutine being never awaited). "
"(Contributed by Arthur Tacca and Jason Zhang in :gh:`115957`.)"
msgstr ""

#: ../../whatsnew/3.13.rst:742
msgid ""
"The function and methods named ``create_task`` have received a new "
"``**kwargs`` argument that is passed through to the task constructor. This "
"change was accidentally added in 3.13.3, and broke the API contract for "
"custom task factories. Several third-party task factories implemented "
"workarounds for this. In 3.13.4 and later releases the old factory contract "
"is honored once again (until 3.14). To keep the workarounds working, the "
"extra ``**kwargs`` argument still allows passing additional keyword "
"arguments to :class:`~asyncio.Task` and to custom task factories."
msgstr ""

#: ../../whatsnew/3.13.rst:753
msgid ""
"This affects the following function and methods: :meth:`asyncio."
"create_task`, :meth:`asyncio.loop.create_task`, :meth:`asyncio.TaskGroup."
"create_task`. (Contributed by Thomas Grainger in :gh:`128307`.)"
msgstr ""

#: ../../whatsnew/3.13.rst:760
msgid "base64"
msgstr "base64"

#: ../../whatsnew/3.13.rst:762
msgid ""
"Add :func:`~base64.z85encode` and :func:`~base64.z85decode` functions for "
"encoding :class:`bytes` as `Z85 data`_ and decoding Z85-encoded data to :"
"class:`!bytes`. (Contributed by Matan Perelman in :gh:`75299`.)"
msgstr ""

#: ../../whatsnew/3.13.rst:771
msgid "compileall"
msgstr "compileall"

#: ../../whatsnew/3.13.rst:773 ../../whatsnew/3.13.rst:781
#: ../../whatsnew/3.13.rst:1040
msgid ""
"The default number of worker threads and processes is now selected using :"
"func:`os.process_cpu_count` instead of :func:`os.cpu_count`. (Contributed by "
"Victor Stinner in :gh:`109649`.)"
msgstr ""

#: ../../whatsnew/3.13.rst:779
msgid "concurrent.futures"
msgstr "concurrent.futures"

#: ../../whatsnew/3.13.rst:787 ../../whatsnew/3.13.rst:1687
msgid "configparser"
msgstr "configparser"

#: ../../whatsnew/3.13.rst:789
msgid ""
":class:`~configparser.ConfigParser` now has support for unnamed sections, "
"which allows for top-level key-value pairs. This can be enabled with the new "
"*allow_unnamed_section* parameter. (Contributed by Pedro Sousa Lacerda in :"
"gh:`66449`.)"
msgstr ""

#: ../../whatsnew/3.13.rst:796
msgid "copy"
msgstr ""

#: ../../whatsnew/3.13.rst:798
msgid ""
"The new :func:`~copy.replace` function and the :meth:`replace protocol "
"<object.__replace__>` make creating modified copies of objects much simpler. "
"This is especially useful when working with immutable objects. The following "
"types support the :func:`~copy.replace` function and implement the replace "
"protocol:"
msgstr ""

#: ../../whatsnew/3.13.rst:804
msgid ":func:`collections.namedtuple`"
msgstr ""

#: ../../whatsnew/3.13.rst:805
msgid ":class:`dataclasses.dataclass`"
msgstr ""

#: ../../whatsnew/3.13.rst:806
msgid ""
":class:`datetime.datetime`, :class:`datetime.date`, :class:`datetime.time`"
msgstr ""

#: ../../whatsnew/3.13.rst:807
msgid ":class:`inspect.Signature`, :class:`inspect.Parameter`"
msgstr ""

#: ../../whatsnew/3.13.rst:808
msgid ":class:`types.SimpleNamespace`"
msgstr ""

#: ../../whatsnew/3.13.rst:809
msgid ":ref:`code objects <code-objects>`"
msgstr ""

#: ../../whatsnew/3.13.rst:811
msgid ""
"Any user-defined class can also support :func:`copy.replace` by defining "
"the :meth:`~object.__replace__` method. (Contributed by Serhiy Storchaka in :"
"gh:`108751`.)"
msgstr ""

#: ../../whatsnew/3.13.rst:817
msgid "ctypes"
msgstr "ctypes"

#: ../../whatsnew/3.13.rst:819
msgid ""
"As a consequence of necessary internal refactoring, initialization of "
"internal metaclasses now happens in ``__init__`` rather than in ``__new__``. "
"This affects projects that subclass these internal metaclasses to provide "
"custom initialization. Generally:"
msgstr ""

#: ../../whatsnew/3.13.rst:825
msgid ""
"Custom logic that was done in ``__new__`` after calling ``super().__new__`` "
"should be moved to ``__init__``."
msgstr ""

#: ../../whatsnew/3.13.rst:827
msgid ""
"To create a class, call the metaclass, not only the metaclass's ``__new__`` "
"method."
msgstr ""

#: ../../whatsnew/3.13.rst:830
msgid ""
"See :gh:`124520` for discussion and links to changes in some affected "
"projects."
msgstr ""

#: ../../whatsnew/3.13.rst:833
msgid ""
":class:`ctypes.Structure` objects have a new :attr:`~ctypes.Structure."
"_align_` attribute which allows the alignment of the structure being packed "
"to/from memory to be specified explicitly. (Contributed by Matt Sanderson "
"in :gh:`112433`)"
msgstr ""

#: ../../whatsnew/3.13.rst:839
msgid "dbm"
msgstr "dbm"

#: ../../whatsnew/3.13.rst:841
msgid ""
"Add :mod:`dbm.sqlite3`, a new module which implements an SQLite backend, and "
"make it the default :mod:`!dbm` backend. (Contributed by Raymond Hettinger "
"and Erlend E. Aasland in :gh:`100414`.)"
msgstr ""

#: ../../whatsnew/3.13.rst:845
msgid ""
"Allow removing all items from the database through the new :meth:`!clear` "
"methods of the GDBM and NDBM database objects. (Contributed by Donghee Na "
"in :gh:`107122`.)"
msgstr ""

#: ../../whatsnew/3.13.rst:851
msgid "dis"
msgstr "dis"

#: ../../whatsnew/3.13.rst:853
msgid ""
"Change the output of :mod:`dis` module functions to show logical labels for "
"jump targets and exception handlers, rather than offsets. The offsets can be "
"added with the new :option:`-O <dis --show-offsets>` command-line option or "
"the *show_offsets* argument. (Contributed by Irit Katriel in :gh:`112137`.)"
msgstr ""

#: ../../whatsnew/3.13.rst:860
msgid ""
":meth:`~dis.get_instructions` no longer represents cache entries as separate "
"instructions. Instead, it returns them as part of the :class:`~dis."
"Instruction`, in the new *cache_info* field. The *show_caches* argument to :"
"meth:`~dis.get_instructions` is deprecated and no longer has any effect. "
"(Contributed by Irit Katriel in :gh:`112962`.)"
msgstr ""

#: ../../whatsnew/3.13.rst:872
msgid "doctest"
msgstr "doctest"

#: ../../whatsnew/3.13.rst:874
msgid ""
":mod:`doctest` output is now colored by default. This can be controlled via "
"the new :envvar:`PYTHON_COLORS` environment variable as well as the "
"canonical |NO_COLOR|_ and |FORCE_COLOR|_ environment variables. See also :"
"ref:`using-on-controlling-color`. (Contributed by Hugo van Kemenade in :gh:"
"`117225`.)"
msgstr ""

#: ../../whatsnew/3.13.rst:881
msgid ""
"The :meth:`.DocTestRunner.run` method now counts the number of skipped "
"tests. Add the :attr:`.DocTestRunner.skips` and :attr:`.TestResults.skipped` "
"attributes. (Contributed by Victor Stinner in :gh:`108794`.)"
msgstr ""

#: ../../whatsnew/3.13.rst:887
msgid "email"
msgstr "email"

#: ../../whatsnew/3.13.rst:889
msgid ""
"Headers with embedded newlines are now quoted on output. The :mod:`~email."
"generator` will now refuse to serialize (write) headers that are improperly "
"folded or delimited, such that they would be parsed as multiple headers or "
"joined with adjacent data. If you need to turn this safety feature off, set :"
"attr:`~email.policy.Policy.verify_generated_headers`. (Contributed by Bas "
"Bloemsaat and Petr Viktorin in :gh:`121650`.)"
msgstr ""

#: ../../whatsnew/3.13.rst:897
msgid ""
":func:`~email.utils.getaddresses` and :func:`~email.utils.parseaddr` now "
"return ``('', '')`` pairs in more situations where invalid email addresses "
"are encountered instead of potentially inaccurate values. The two functions "
"have a new optional *strict* parameter (default ``True``). To get the old "
"behavior (accepting malformed input), use ``strict=False``. ``getattr(email."
"utils, 'supports_strict_parsing', False)`` can be used to check if the "
"*strict* parameter is available. (Contributed by Thomas Dwyer and Victor "
"Stinner for :gh:`102988` to improve the :cve:`2023-27043` fix.)"
msgstr ""

#: ../../whatsnew/3.13.rst:909
msgid "enum"
msgstr "enum"

#: ../../whatsnew/3.13.rst:911
msgid ""
":class:`~enum.EnumDict` has been made public to better support subclassing :"
"class:`~enum.EnumType`."
msgstr ""

#: ../../whatsnew/3.13.rst:916
msgid "fractions"
msgstr "fractions"

#: ../../whatsnew/3.13.rst:918
msgid ""
":class:`~fractions.Fraction` objects now support the standard :ref:`format "
"specification mini-language <formatspec>` rules for fill, alignment, sign "
"handling, minimum width, and grouping. (Contributed by Mark Dickinson in :gh:"
"`111320`.)"
msgstr ""

#: ../../whatsnew/3.13.rst:925
msgid "glob"
msgstr "glob"

#: ../../whatsnew/3.13.rst:927
msgid ""
"Add :func:`~glob.translate`, a function to convert a path specification with "
"shell-style wildcards to a regular expression. (Contributed by Barney Gale "
"in :gh:`72904`.)"
msgstr ""

#: ../../whatsnew/3.13.rst:933
msgid "importlib"
msgstr "importlib"

#: ../../whatsnew/3.13.rst:935
msgid ""
"The following functions in :mod:`importlib.resources` now allow accessing a "
"directory (or tree) of resources, using multiple positional arguments (the "
"*encoding* and *errors* arguments in the text-reading functions are now "
"keyword-only):"
msgstr ""

#: ../../whatsnew/3.13.rst:940
msgid ":func:`~importlib.resources.is_resource`"
msgstr ""

#: ../../whatsnew/3.13.rst:941
msgid ":func:`~importlib.resources.open_binary`"
msgstr ""

#: ../../whatsnew/3.13.rst:942
msgid ":func:`~importlib.resources.open_text`"
msgstr ""

#: ../../whatsnew/3.13.rst:943
msgid ":func:`~importlib.resources.path`"
msgstr ""

#: ../../whatsnew/3.13.rst:944
msgid ":func:`~importlib.resources.read_binary`"
msgstr ""

#: ../../whatsnew/3.13.rst:945
msgid ":func:`~importlib.resources.read_text`"
msgstr ""

#: ../../whatsnew/3.13.rst:947
msgid ""
"These functions are no longer deprecated and are not scheduled for removal. "
"(Contributed by Petr Viktorin in :gh:`116608`.)"
msgstr ""

#: ../../whatsnew/3.13.rst:950
msgid ""
":func:`~importlib.resources.contents` remains deprecated in favor of the "
"fully-featured :class:`~importlib.resources.abc.Traversable` API. However, "
"there is now no plan to remove it. (Contributed by Petr Viktorin in :gh:"
"`116608`.)"
msgstr ""

#: ../../whatsnew/3.13.rst:957
msgid "io"
msgstr "io"

#: ../../whatsnew/3.13.rst:959
msgid ""
"The :class:`~io.IOBase` finalizer now logs any errors raised by the :meth:"
"`~io.IOBase.close` method with :data:`sys.unraisablehook`. Previously, "
"errors were ignored silently by default, and only logged in :ref:`Python "
"Development Mode <devmode>` or when using a :ref:`Python debug build <debug-"
"build>`. (Contributed by Victor Stinner in :gh:`62948`.)"
msgstr ""

#: ../../whatsnew/3.13.rst:968
msgid "ipaddress"
msgstr "ipaddress"

#: ../../whatsnew/3.13.rst:970
msgid ""
"Add the :attr:`.IPv4Address.ipv6_mapped` property, which returns the IPv4-"
"mapped IPv6 address. (Contributed by Charles Machalow in :gh:`109466`.)"
msgstr ""

#: ../../whatsnew/3.13.rst:974
msgid ""
"Fix ``is_global`` and ``is_private`` behavior in :class:`~ipaddress."
"IPv4Address`, :class:`~ipaddress.IPv6Address`, :class:`~ipaddress."
"IPv4Network`, and :class:`~ipaddress.IPv6Network`. (Contributed by Jakub "
"Stasiak in :gh:`113171`.)"
msgstr ""

#: ../../whatsnew/3.13.rst:981
msgid "itertools"
msgstr "itertools"

#: ../../whatsnew/3.13.rst:983
msgid ""
":func:`~itertools.batched` has a new *strict* parameter, which raises a :exc:"
"`ValueError` if the final batch is shorter than the specified batch size. "
"(Contributed by Raymond Hettinger in :gh:`113202`.)"
msgstr ""

#: ../../whatsnew/3.13.rst:990
msgid "marshal"
msgstr "marshal"

#: ../../whatsnew/3.13.rst:992
msgid ""
"Add the *allow_code* parameter in module functions. Passing "
"``allow_code=False`` prevents serialization and de-serialization of code "
"objects which are incompatible between Python versions. (Contributed by "
"Serhiy Storchaka in :gh:`113626`.)"
msgstr ""

#: ../../whatsnew/3.13.rst:999
msgid "math"
msgstr "math"

#: ../../whatsnew/3.13.rst:1001
msgid ""
"The new function :func:`~math.fma` performs fused multiply-add operations. "
"This computes ``x * y + z`` with only a single round, and so avoids any "
"intermediate loss of precision. It wraps the ``fma()`` function provided by "
"C99, and follows the specification of the IEEE 754 \"fusedMultiplyAdd\" "
"operation for special cases. (Contributed by Mark Dickinson and Victor "
"Stinner in :gh:`73468`.)"
msgstr ""

#: ../../whatsnew/3.13.rst:1011
msgid "mimetypes"
msgstr "mimetypes"

#: ../../whatsnew/3.13.rst:1013
msgid ""
"Add the :func:`~mimetypes.guess_file_type` function to guess a MIME type "
"from a filesystem path. Using paths with :func:`~mimetypes.guess_type` is "
"now :term:`soft deprecated`. (Contributed by Serhiy Storchaka in :gh:"
"`66543`.)"
msgstr ""

#: ../../whatsnew/3.13.rst:1020
msgid "mmap"
msgstr "mmap"

#: ../../whatsnew/3.13.rst:1022
msgid ""
":class:`~mmap.mmap` is now protected from crashing on Windows when the "
"mapped memory is inaccessible due to file system errors or access "
"violations. (Contributed by Jannis Weigend in :gh:`118209`.)"
msgstr ""

#: ../../whatsnew/3.13.rst:1026
msgid ""
":class:`~mmap.mmap` has a new :meth:`~mmap.mmap.seekable` method that can be "
"used when a seekable file-like object is required. The :meth:`~mmap.mmap."
"seek` method now returns the new absolute position. (Contributed by Donghee "
"Na and Sylvie Liberman in :gh:`111835`.)"
msgstr ""

#: ../../whatsnew/3.13.rst:1031
msgid ""
"The new UNIX-only *trackfd* parameter for :class:`~mmap.mmap` controls file "
"descriptor duplication; if false, the file descriptor specified by *fileno* "
"will not be duplicated. (Contributed by Zackery Spytz and Petr Viktorin in :"
"gh:`78502`.)"
msgstr ""

#: ../../whatsnew/3.13.rst:1038
msgid "multiprocessing"
msgstr "multiprocessamento"

#: ../../whatsnew/3.13.rst:1046
msgid "os"
msgstr "os"

#: ../../whatsnew/3.13.rst:1048
msgid ""
"Add :func:`~os.process_cpu_count` function to get the number of logical CPU "
"cores usable by the calling thread of the current process. (Contributed by "
"Victor Stinner in :gh:`109649`.)"
msgstr ""

#: ../../whatsnew/3.13.rst:1052
msgid ""
":func:`~os.cpu_count` and :func:`~os.process_cpu_count` can be overridden "
"through the new environment variable :envvar:`PYTHON_CPU_COUNT` or the new "
"command-line option :option:`-X cpu_count <-X>`. This option is useful for "
"users who need to limit CPU resources of a container system without having "
"to modify application code or the container itself. (Contributed by Donghee "
"Na in :gh:`109595`.)"
msgstr ""

#: ../../whatsnew/3.13.rst:1060
msgid ""
"Add a :ref:`low level interface <os-timerfd>` to Linux's :manpage:`timer "
"file descriptors <timerfd_create(2)>` via :func:`~os.timerfd_create`, :func:"
"`~os.timerfd_settime`, :func:`~os.timerfd_settime_ns`, :func:`~os."
"timerfd_gettime`, :func:`~os.timerfd_gettime_ns`, :const:`~os."
"TFD_NONBLOCK`, :const:`~os.TFD_CLOEXEC`, :const:`~os.TFD_TIMER_ABSTIME`, "
"and :const:`~os.TFD_TIMER_CANCEL_ON_SET` (Contributed by Masaru Tsuchiyama "
"in :gh:`108277`.)"
msgstr ""

#: ../../whatsnew/3.13.rst:1069
msgid ""
":func:`~os.lchmod` and the *follow_symlinks* argument of :func:`~os.chmod` "
"are both now available on Windows. Note that the default value of "
"*follow_symlinks* in :func:`!lchmod` is ``False`` on Windows. (Contributed "
"by Serhiy Storchaka in :gh:`59616`.)"
msgstr ""

#: ../../whatsnew/3.13.rst:1075
msgid ""
":func:`~os.fchmod` and support for file descriptors in :func:`~os.chmod` are "
"both now available on Windows. (Contributed by Serhiy Storchaka in :gh:"
"`113191`.)"
msgstr ""

#: ../../whatsnew/3.13.rst:1079
msgid ""
"On Windows, :func:`~os.mkdir` and :func:`~os.makedirs` now support passing a "
"*mode* value of ``0o700`` to apply access control to the new directory. This "
"implicitly affects :func:`tempfile.mkdtemp` and is a mitigation for :cve:"
"`2024-4030`. Other values for *mode* continue to be ignored. (Contributed by "
"Steve Dower in :gh:`118486`.)"
msgstr ""

#: ../../whatsnew/3.13.rst:1086
msgid ""
":func:`~os.posix_spawn` now accepts ``None`` for the *env* argument, which "
"makes the newly spawned process use the current process environment. "
"(Contributed by Jakub Kulik in :gh:`113119`.)"
msgstr ""

#: ../../whatsnew/3.13.rst:1090
msgid ""
":func:`~os.posix_spawn` can now use the :const:`~os.POSIX_SPAWN_CLOSEFROM` "
"attribute in the *file_actions* parameter on platforms that support :c:func:"
"`!posix_spawn_file_actions_addclosefrom_np`. (Contributed by Jakub Kulik in :"
"gh:`113117`.)"
msgstr ""

#: ../../whatsnew/3.13.rst:1097 ../../whatsnew/3.13.rst:2839
msgid "os.path"
msgstr "os.path"

#: ../../whatsnew/3.13.rst:1099
msgid ""
"Add :func:`~os.path.isreserved` to check if a path is reserved on the "
"current system. This function is only available on Windows. (Contributed by "
"Barney Gale in :gh:`88569`.)"
msgstr ""

#: ../../whatsnew/3.13.rst:1104
msgid ""
"On Windows, :func:`~os.path.isabs` no longer considers paths starting with "
"exactly one slash (``\\`` or ``/``) to be absolute. (Contributed by Barney "
"Gale and Jon Foster in :gh:`44626`.)"
msgstr ""

#: ../../whatsnew/3.13.rst:1108
msgid ""
":func:`~os.path.realpath` now resolves MS-DOS style file names even if the "
"file is not accessible. (Contributed by Moonsik Park in :gh:`82367`.)"
msgstr ""

#: ../../whatsnew/3.13.rst:1114 ../../whatsnew/3.13.rst:1743
msgid "pathlib"
msgstr "pathlib"

#: ../../whatsnew/3.13.rst:1116
msgid ""
"Add :exc:`~pathlib.UnsupportedOperation`, which is raised instead of :exc:"
"`NotImplementedError` when a path operation isn't supported. (Contributed by "
"Barney Gale in :gh:`89812`.)"
msgstr ""

#: ../../whatsnew/3.13.rst:1120
msgid ""
"Add a new constructor for creating :class:`~pathlib.Path` objects from "
"'file' URIs (``file:///``), :meth:`.Path.from_uri`. (Contributed by Barney "
"Gale in :gh:`107465`.)"
msgstr ""

#: ../../whatsnew/3.13.rst:1124
msgid ""
"Add :meth:`.PurePath.full_match` for matching paths with shell-style "
"wildcards, including the recursive wildcard \"``**``\". (Contributed by "
"Barney Gale in :gh:`73435`.)"
msgstr ""

#: ../../whatsnew/3.13.rst:1128
msgid ""
"Add the :attr:`.PurePath.parser` class attribute to store the implementation "
"of :mod:`os.path` used for low-level path parsing and joining. This will be "
"either :mod:`!posixpath` or :mod:`!ntpath`."
msgstr ""

#: ../../whatsnew/3.13.rst:1133
msgid ""
"Add *recurse_symlinks* keyword-only argument to :meth:`.Path.glob` and :meth:"
"`~pathlib.Path.rglob`. (Contributed by Barney Gale in :gh:`77609`.)"
msgstr ""

#: ../../whatsnew/3.13.rst:1137
msgid ""
":meth:`.Path.glob` and :meth:`~pathlib.Path.rglob` now return files and "
"directories when given a pattern that ends with \"``**``\". Previously, only "
"directories were returned. (Contributed by Barney Gale in :gh:`70303`.)"
msgstr ""

#: ../../whatsnew/3.13.rst:1142
msgid ""
"Add the *follow_symlinks* keyword-only argument to :meth:`Path.is_file "
"<pathlib.Path.is_file>`, :meth:`Path.is_dir <pathlib.Path.is_dir>`, :meth:`."
"Path.owner`, and :meth:`.Path.group`. (Contributed by Barney Gale in :gh:"
"`105793` and Kamil Turek in :gh:`107962`.)"
msgstr ""

#: ../../whatsnew/3.13.rst:1150
msgid "pdb"
msgstr "pdb"

#: ../../whatsnew/3.13.rst:1152
msgid ""
":func:`breakpoint` and :func:`~pdb.set_trace` now enter the debugger "
"immediately rather than on the next line of code to be executed. This change "
"prevents the debugger from breaking outside of the context when :func:`!"
"breakpoint` is positioned at the end of the context. (Contributed by Tian "
"Gao in :gh:`118579`.)"
msgstr ""

#: ../../whatsnew/3.13.rst:1158
msgid ""
"``sys.path[0]`` is no longer replaced by the directory of the script being "
"debugged when :attr:`sys.flags.safe_path` is set. (Contributed by Tian Gao "
"and Christian Walther in :gh:`111762`.)"
msgstr ""

#: ../../whatsnew/3.13.rst:1162
msgid ""
":mod:`zipapp` is now supported as a debugging target. (Contributed by Tian "
"Gao in :gh:`118501`.)"
msgstr ""
"O módulo :mod:`zipapp` é agora suportado como alvo de depuração. "
"(Contribuído por Tian Gao em :gh:`118501`.)"

#: ../../whatsnew/3.13.rst:1165
msgid ""
"Add ability to move between chained exceptions during post-mortem debugging "
"in :func:`~pdb.pm` using the new :pdbcmd:`exceptions [exc_number] "
"<exceptions>` command for Pdb. (Contributed by Matthias Bussonnier in :gh:"
"`106676`.)"
msgstr ""

#: ../../whatsnew/3.13.rst:1170
msgid ""
"Expressions and statements whose prefix is a pdb command are now correctly "
"identified and executed. (Contributed by Tian Gao in :gh:`108464`.)"
msgstr ""
"Expressões e instruções cujo prefixo é um comando do pdb são agora "
"corretamente identificadas e executadas. (Contribuído por Tian Gao em :gh:"
"`108464`.)"

#: ../../whatsnew/3.13.rst:1176
msgid "queue"
msgstr "queue"

#: ../../whatsnew/3.13.rst:1178
msgid ""
"Add :meth:`Queue.shutdown <queue.Queue.shutdown>` and :exc:`~queue.ShutDown` "
"to manage queue termination. (Contributed by Laurie Opperman and Yves Duprat "
"in :gh:`104750`.)"
msgstr ""
"Adicionados :meth:`Queue.shutdown <queue.Queue.shutdown>` e :exc:`~queue."
"ShutDown` para gerir o término de filas. (Contribuído por Laurie Opperman e "
"Yves Duprat em :gh:`104750`.)"

#: ../../whatsnew/3.13.rst:1184
msgid "random"
msgstr "random"

#: ../../whatsnew/3.13.rst:1186
msgid ""
"Add a :ref:`command-line interface <random-cli>`. (Contributed by Hugo van "
"Kemenade in :gh:`118131`.)"
msgstr ""
"Adicionada uma :ref:`interface de linha de comandos <random-cli>`. "
"(Contribuído por Hugo van Kemenade em :gh:`118131`.)"

#: ../../whatsnew/3.13.rst:1191 ../../whatsnew/3.13.rst:1751
msgid "re"
msgstr "re"

#: ../../whatsnew/3.13.rst:1193
msgid ""
"Rename :exc:`!re.error` to :exc:`~re.PatternError` for improved clarity. :"
"exc:`!re.error` is kept for backward compatibility."
msgstr ""
"Renomeado :exc:`!re.error` para :exc:`~re.PatternError` para maior clareza. :"
"exc:`!re.error` é mantido por retrocompatibilidade."

#: ../../whatsnew/3.13.rst:1198
msgid "shutil"
msgstr "shutil"

#: ../../whatsnew/3.13.rst:1200
msgid ""
"Support the *dir_fd* and *follow_symlinks* keyword arguments in :func:"
"`~shutil.chown`. (Contributed by Berker Peksag and Tahia K in :gh:`62308`)"
msgstr ""
"Suportados os argumentos nomeados *dir_fd* e *follow_symlinks* em :func:"
"`~shutil.chown`. (Contribuído por Berker Peksag e Tahia K em :gh:`62308`.)"

#: ../../whatsnew/3.13.rst:1206
msgid "site"
msgstr "site"

#: ../../whatsnew/3.13.rst:1208
msgid ""
":file:`.pth` files are now decoded using UTF-8 first, and then with the :"
"term:`locale encoding` if UTF-8 decoding fails. (Contributed by Inada Naoki "
"in :gh:`117802`.)"
msgstr ""
"Os ficheiros :file:`.pth` são agora descodificados usando UTF-8 em primeiro "
"lugar, e depois com a :term:`codificação local` se a descodificação UTF-8 "
"falhar. (Contribuído por Inada Naoki em :gh:`117802`.)"

#: ../../whatsnew/3.13.rst:1214
msgid "sqlite3"
msgstr "sqlite3"

#: ../../whatsnew/3.13.rst:1216
msgid ""
"A :exc:`ResourceWarning` is now emitted if a :class:`~sqlite3.Connection` "
"object is not :meth:`closed <sqlite3.Connection.close>` explicitly. "
"(Contributed by Erlend E. Aasland in :gh:`105539`.)"
msgstr ""
"É agora emitido um :exc:`ResourceWarning` se um objeto :class:`~sqlite3."
"Connection` não for explicitamente :meth:`fechado <sqlite3.Connection."
"close>`. (Contribuído por Erlend E. Aasland em :gh:`105539`.)"

#: ../../whatsnew/3.13.rst:1220
msgid ""
"Add the *filter* keyword-only parameter to :meth:`.Connection.iterdump` for "
"filtering database objects to dump. (Contributed by Mariusz Felisiak in :gh:"
"`91602`.)"
msgstr ""
"Adicionado o parâmetro nomeado *filter* a :meth:`.Connection.iterdump` para "
"filtrar objetos da base de dados a exportar. (Contribuído por Mariusz "
"Felisiak em :gh:`91602`.)"

#: ../../whatsnew/3.13.rst:1226
msgid "ssl"
msgstr "ssl"

#: ../../whatsnew/3.13.rst:1228
msgid ""
"The :func:`~ssl.create_default_context` API now includes :data:`~ssl."
"VERIFY_X509_PARTIAL_CHAIN` and :data:`~ssl.VERIFY_X509_STRICT` in its "
"default flags."
msgstr ""
"A API :func:`~ssl.create_default_context` inclui agora :data:`~ssl."
"VERIFY_X509_PARTIAL_CHAIN` e :data:`~ssl.VERIFY_X509_STRICT` nas suas "
"*flags* predefinidas."

#: ../../whatsnew/3.13.rst:1234
msgid ""
":data:`~ssl.VERIFY_X509_STRICT` may reject pre-:rfc:`5280` or malformed "
"certificates that the underlying OpenSSL implementation might otherwise "
"accept. Whilst disabling this is not recommended, you can do so using:"
msgstr ""
":data:`~ssl.VERIFY_X509_STRICT` pode rejeitar certificados pré-:rfc:`5280` "
"ou malformados que a implementação subjacente do OpenSSL poderia aceitar. "
"Embora não seja recomendado desativar esta opção, pode fazê-lo usando:"

#: ../../whatsnew/3.13.rst:1239
msgid ""
"import ssl\n"
"\n"
"ctx = ssl.create_default_context()\n"
"ctx.verify_flags &= ~ssl.VERIFY_X509_STRICT"
msgstr ""
"import ssl\n"
"\n"
"ctx = ssl.create_default_context()\n"
"ctx.verify_flags &= ~ssl.VERIFY_X509_STRICT"

#: ../../whatsnew/3.13.rst:1246
msgid "(Contributed by William Woodruff in :gh:`112389`.)"
msgstr "(Contribuído por William Woodruff em :gh:`112389`.)"

#: ../../whatsnew/3.13.rst:1250
msgid "statistics"
msgstr "statistics"

#: ../../whatsnew/3.13.rst:1252
msgid ""
"Add :func:`~statistics.kde` for kernel density estimation. This makes it "
"possible to estimate a continuous probability density function from a fixed "
"number of discrete samples. (Contributed by Raymond Hettinger in :gh:"
"`115863`.)"
msgstr ""
"Adicionada :func:`~statistics.kde` para estimativa de densidade de *kernel*. "
"Isto permite estimar uma função de densidade de probabilidade contínua a "
"partir de um número fixo de amostras discretas. (Contribuído por Raymond "
"Hettinger em :gh:`115863`.)"

#: ../../whatsnew/3.13.rst:1257
msgid ""
"Add :func:`~statistics.kde_random` for sampling from an estimated "
"probability density function created by :func:`~statistics.kde`. "
"(Contributed by Raymond Hettinger in :gh:`115863`.)"
msgstr ""
"Adicionada :func:`~statistics.kde_random` para amostragem a partir de uma "
"função de densidade de probabilidade estimada criada por :func:`~statistics."
"kde`. (Contribuído por Raymond Hettinger em :gh:`115863`.)"

#: ../../whatsnew/3.13.rst:1265
msgid "subprocess"
msgstr "subprocesso"

#: ../../whatsnew/3.13.rst:1267
msgid ""
"The :mod:`subprocess` module now uses the :func:`~os.posix_spawn` function "
"in more situations."
msgstr ""
"O módulo :mod:`subprocess` usa agora a função :func:`~os.posix_spawn` em "
"mais situações."

#: ../../whatsnew/3.13.rst:1270
msgid ""
"Notably, when *close_fds* is ``True`` (the default), :func:`~os.posix_spawn` "
"will be used when the C library provides :c:func:`!"
"posix_spawn_file_actions_addclosefrom_np`, which includes recent versions of "
"Linux, FreeBSD, and Solaris. On Linux, this should perform similarly to the "
"existing Linux :c:func:`!vfork` based code."
msgstr ""
"Em particular, quando *close_fds* é ``True`` (predefinido), :func:`~os."
"posix_spawn` será usado quando a biblioteca C fornece :c:func:`!"
"posix_spawn_file_actions_addclosefrom_np`, o que inclui versões recentes do "
"Linux, FreeBSD e Solaris. No Linux, isto deve ter um desempenho semelhante "
"ao código existente baseado em :c:func:`!vfork`."

#: ../../whatsnew/3.13.rst:1277
msgid ""
"A private control knob :attr:`!subprocess._USE_POSIX_SPAWN` can be set to "
"``False`` if you need to force :mod:`subprocess` to never use :func:`~os."
"posix_spawn`. Please report your reason and platform details in the :ref:"
"`issue tracker <using-the-tracker>` if you set this so that we can improve "
"our API selection logic for everyone. (Contributed by Jakub Kulik in :gh:"
"`113117`.)"
msgstr ""
"O controlo privado :attr:`!subprocess._USE_POSIX_SPAWN` pode ser definido "
"como ``False`` se precisar de forçar o módulo :mod:`subprocess` a nunca "
"usar :func:`~os.posix_spawn`. Por favor, reporte a sua razão e detalhes da "
"plataforma no :ref:`rastreador de problemas <using-the-tracker>` se definir "
"isto, para que possamos melhorar a lógica de seleção da API para todos. "
"(Contribuído por Jakub Kulik em :gh:`113117`.)"

#: ../../whatsnew/3.13.rst:1287 ../../whatsnew/3.13.rst:2829
msgid "sys"
msgstr "sys"

#: ../../whatsnew/3.13.rst:1289
msgid ""
"Add the :func:`~sys._is_interned` function to test if a string was interned. "
"This function is not guaranteed to exist in all implementations of Python. "
"(Contributed by Serhiy Storchaka in :gh:`78573`.)"
msgstr ""
"Adicionada a função :func:`~sys._is_interned` para testar se uma *string* "
"foi internada. Esta função não está garantidamente disponível em todas as "
"implementações do Python. (Contribuído por Serhiy Storchaka em :gh:`78573`.)"

#: ../../whatsnew/3.13.rst:1295
msgid "tempfile"
msgstr "tempfile"

#: ../../whatsnew/3.13.rst:1297
msgid ""
"On Windows, the default mode ``0o700`` used by :func:`tempfile.mkdtemp` now "
"limits access to the new directory due to changes to :func:`os.mkdir`. This "
"is a mitigation for :cve:`2024-4030`. (Contributed by Steve Dower in :gh:"
"`118486`.)"
msgstr ""
"No Windows, o modo predefinido ``0o700`` usado por :func:`tempfile.mkdtemp` "
"limita agora o acesso ao novo diretório devido a alterações em :func:`os."
"mkdir`. Isto é uma mitigação para :cve:`2024-4030`. (Contribuído por Steve "
"Dower em :gh:`118486`.)"

#: ../../whatsnew/3.13.rst:1304
msgid "time"
msgstr "time"

#: ../../whatsnew/3.13.rst:1306
msgid ""
"On Windows, :func:`~time.monotonic` now uses the "
"``QueryPerformanceCounter()`` clock for a resolution of 1 microsecond, "
"instead of the ``GetTickCount64()`` clock which has a resolution of 15.6 "
"milliseconds. (Contributed by Victor Stinner in :gh:`88494`.)"
msgstr ""
"No Windows, :func:`~time.monotonic` usa agora o relógio "
"``QueryPerformanceCounter()`` para uma resolução de 1 microsegundo, em vez "
"do relógio ``GetTickCount64()``, que tem uma resolução de 15,6 "
"milissegundos. (Contribuído por Victor Stinner em :gh:`88494`.)"

#: ../../whatsnew/3.13.rst:1312
msgid ""
"On Windows, :func:`~time.time` now uses the "
"``GetSystemTimePreciseAsFileTime()`` clock for a resolution of 1 "
"microsecond, instead of the ``GetSystemTimeAsFileTime()`` clock which has a "
"resolution of 15.6 milliseconds. (Contributed by Victor Stinner in :gh:"
"`63207`.)"
msgstr ""
"No Windows, :func:`~time.time` usa agora o relógio "
"``GetSystemTimePreciseAsFileTime()`` para uma resolução de 1 microsegundo, "
"em vez do relógio ``GetSystemTimeAsFileTime()``, que tem uma resolução de "
"15,6 milissegundos. (Contribuído por Victor Stinner em :gh:`63207`.)"

#: ../../whatsnew/3.13.rst:1320
msgid "tkinter"
msgstr "tkinter"

#: ../../whatsnew/3.13.rst:1322
msgid ""
"Add :mod:`tkinter` widget methods: :meth:`!tk_busy_hold`, :meth:`!"
"tk_busy_configure`, :meth:`!tk_busy_cget`, :meth:`!tk_busy_forget`, :meth:`!"
"tk_busy_current`, and :meth:`!tk_busy_status`. (Contributed by Miguel, "
"klappnase and Serhiy Storchaka in :gh:`72684`.)"
msgstr ""
"Adicionados métodos de *widget* :mod:`tkinter`: :meth:`!tk_busy_hold`, :meth:"
"`!tk_busy_configure`, :meth:`!tk_busy_cget`, :meth:`!tk_busy_forget`, :meth:"
"`!tk_busy_current` e :meth:`!tk_busy_status`. (Contribuído por Miguel, "
"klappnase e Serhiy Storchaka em :gh:`72684`.)"

#: ../../whatsnew/3.13.rst:1328
msgid ""
"The :mod:`tkinter` widget method :meth:`!wm_attributes` now accepts the "
"attribute name without the minus prefix to get window attributes, for "
"example ``w.wm_attributes('alpha')`` and allows specifying attributes and "
"values to set as keyword arguments, for example ``w."
"wm_attributes(alpha=0.5)``. (Contributed by Serhiy Storchaka in :gh:`43457`.)"
msgstr ""
"O método de *widget* :mod:`tkinter` :meth:`!wm_attributes` aceita agora o "
"nome do atributo sem o prefixo de hífen para obter atributos da janela, por "
"exemplo ``w.wm_attributes('alpha')``, e permite especificar atributos e "
"valores como argumentos nomeados, por exemplo ``w."
"wm_attributes(alpha=0.5)``. (Contribuído por Serhiy Storchaka em :gh:"
"`43457`.)"

#: ../../whatsnew/3.13.rst:1335
msgid ""
":meth:`!wm_attributes` can now return attributes as a :class:`dict`, by "
"using the new optional keyword-only parameter *return_python_dict*. "
"(Contributed by Serhiy Storchaka in :gh:`43457`.)"
msgstr ""
":meth:`!wm_attributes` pode agora devolver atributos como um :class:`dict`, "
"usando o novo parâmetro opcional *return_python_dict*. (Contribuído por "
"Serhiy Storchaka em :gh:`43457`.)"

#: ../../whatsnew/3.13.rst:1339
msgid ""
":meth:`!Text.count` can now return a simple :class:`int` when the new "
"optional keyword-only parameter *return_ints* is used. Otherwise, the single "
"count is returned as a 1-tuple or ``None``. (Contributed by Serhiy Storchaka "
"in :gh:`97928`.)"
msgstr ""
":meth:`!Text.count` pode agora devolver um simples :class:`int` quando o "
"novo parâmetro opcional *return_ints* é usado. Caso contrário, a contagem "
"única é devolvida como um *tuple* de 1 elemento ou ``None``. (Contribuído "
"por Serhiy Storchaka em :gh:`97928`.)"

#: ../../whatsnew/3.13.rst:1344
msgid ""
"Support the \"vsapi\" element type in the :meth:`~tkinter.ttk.Style."
"element_create` method of :class:`tkinter.ttk.Style`. (Contributed by Serhiy "
"Storchaka in :gh:`68166`.)"
msgstr ""
"Suportado o tipo de elemento \"vsapi\" no método :meth:`~tkinter.ttk.Style."
"element_create` de :class:`tkinter.ttk.Style`. (Contribuído por Serhiy "
"Storchaka em :gh:`68166`.)"

#: ../../whatsnew/3.13.rst:1349
msgid ""
"Add the :meth:`!after_info` method for Tkinter widgets. (Contributed by "
"Cheryl Sabella in :gh:`77020`.)"
msgstr ""
"Adicionado o método :meth:`!after_info` para *widgets* Tkinter. (Contribuído "
"por Cheryl Sabella em :gh:`77020`.)"

#: ../../whatsnew/3.13.rst:1352
msgid ""
"Add a new :meth:`!copy_replace` method to :class:`!PhotoImage` to copy a "
"region from one image to another, possibly with pixel zooming, subsampling, "
"or both. (Contributed by Serhiy Storchaka in :gh:`118225`.)"
msgstr ""
"Adicionado um novo método :meth:`!copy_replace` a :class:`!PhotoImage` para "
"copiar uma região de uma imagem para outra, eventualmente com *zoom* de "
"píxeis, subamostragem, ou ambos. (Contribuído por Serhiy Storchaka em :gh:"
"`118225`.)"

#: ../../whatsnew/3.13.rst:1357
msgid ""
"Add *from_coords* parameter to the :class:`!PhotoImage` methods :meth:`!"
"copy`, :meth:`!zoom` and :meth:`!subsample`. Add *zoom* and *subsample* "
"parameters to the :class:`!PhotoImage` method :meth:`!copy`. (Contributed by "
"Serhiy Storchaka in :gh:`118225`.)"
msgstr ""
"Adicionado o parâmetro *from_coords* aos métodos :class:`!PhotoImage` :meth:"
"`!copy`, :meth:`!zoom` e :meth:`!subsample`. Adicionados os parâmetros "
"*zoom* e *subsample* ao método :class:`!PhotoImage` :meth:`!copy`. "
"(Contribuído por Serhiy Storchaka em :gh:`118225`.)"

#: ../../whatsnew/3.13.rst:1363
msgid ""
"Add the :class:`!PhotoImage` methods :meth:`!read` to read an image from a "
"file and :meth:`!data` to get the image data. Add *background* and "
"*grayscale* parameters to the :meth:`!write` method. (Contributed by Serhiy "
"Storchaka in :gh:`118271`.)"
msgstr ""
"Adicionados os métodos :class:`!PhotoImage` :meth:`!read` para ler uma "
"imagem de um ficheiro e :meth:`!data` para obter os dados da imagem. "
"Adicionados os parâmetros *background* e *grayscale* ao método :meth:`!"
"write`. (Contribuído por Serhiy Storchaka em :gh:`118271`.)"

#: ../../whatsnew/3.13.rst:1371
msgid "traceback"
msgstr "traceback"

#: ../../whatsnew/3.13.rst:1373
msgid ""
"Add the :attr:`~traceback.TracebackException.exc_type_str` attribute to :"
"class:`~traceback.TracebackException`, which holds a string display of the "
"*exc_type*. Deprecate the :attr:`~traceback.TracebackException.exc_type` "
"attribute, which holds the type object itself. Add parameter *save_exc_type* "
"(default ``True``) to indicate whether ``exc_type`` should be saved. "
"(Contributed by Irit Katriel in :gh:`112332`.)"
msgstr ""
"Adicionado o atributo :attr:`~traceback.TracebackException.exc_type_str` a :"
"class:`~traceback.TracebackException`, que contém uma representação em "
"*string* do *exc_type*. O atributo :attr:`~traceback.TracebackException."
"exc_type`, que contém o objeto de tipo em si, foi marcado como obsoleto. "
"Adicionado o parâmetro *save_exc_type* (predefinido como ``True``) para "
"indicar se ``exc_type`` deve ser guardado. (Contribuído por Irit Katriel em :"
"gh:`112332`.)"

#: ../../whatsnew/3.13.rst:1382
msgid ""
"Add a new *show_group* keyword-only parameter to :meth:`.TracebackException."
"format_exception_only` to (recursively) format the nested exceptions of a :"
"exc:`BaseExceptionGroup` instance. (Contributed by Irit Katriel in :gh:"
"`105292`.)"
msgstr ""
"Adicionado um novo parâmetro *show_group* a :meth:`.TracebackException."
"format_exception_only` para formatar (recursivamente) as exceções aninhadas "
"de uma instância :exc:`BaseExceptionGroup`. (Contribuído por Irit Katriel "
"em :gh:`105292`.)"

#: ../../whatsnew/3.13.rst:1389
msgid "types"
msgstr "types"

#: ../../whatsnew/3.13.rst:1391
msgid ""
":class:`~types.SimpleNamespace` can now take a single positional argument to "
"initialise the namespace's arguments. This argument must either be a mapping "
"or an iterable of key-value pairs. (Contributed by Serhiy Storchaka in :gh:"
"`108191`.)"
msgstr ""
":class:`~types.SimpleNamespace` pode agora receber um único argumento "
"posicional para inicializar os argumentos do *namespace*. Este argumento "
"deve ser um mapeamento ou um iterável de pares chave-valor. (Contribuído por "
"Serhiy Storchaka em :gh:`108191`.)"

#: ../../whatsnew/3.13.rst:1398 ../../whatsnew/3.13.rst:1776
msgid "typing"
msgstr "typing"

#: ../../whatsnew/3.13.rst:1400
msgid ""
":pep:`705`: Add :data:`~typing.ReadOnly`, a special typing construct to mark "
"a :class:`~typing.TypedDict` item as read-only for type checkers."
msgstr ""
":pep:`705`: Adicionado :data:`~typing.ReadOnly`, uma construção especial de "
"tipagem para marcar um item :class:`~typing.TypedDict` como apenas de "
"leitura para verificadores de tipo."

#: ../../whatsnew/3.13.rst:1403
msgid ""
":pep:`742`: Add :data:`~typing.TypeIs`, a typing construct that can be used "
"to instruct a type checker how to narrow a type."
msgstr ""
":pep:`742`: Adicionado :data:`~typing.TypeIs`, uma construção de tipagem que "
"pode ser usada para instruir um verificador de tipo sobre como restringir um "
"tipo."

#: ../../whatsnew/3.13.rst:1406
msgid ""
"Add :data:`~typing.NoDefault`, a sentinel object used to represent the "
"defaults of some parameters in the :mod:`typing` module. (Contributed by "
"Jelle Zijlstra in :gh:`116126`.)"
msgstr ""
"Adicionado :data:`~typing.NoDefault`, um objeto sentinela usado para "
"representar os valores predefinidos de alguns parâmetros no módulo :mod:"
"`typing`. (Contribuído por Jelle Zijlstra em :gh:`116126`.)"

#: ../../whatsnew/3.13.rst:1410
msgid ""
"Add :func:`~typing.get_protocol_members` to return the set of members "
"defining a :class:`typing.Protocol`. (Contributed by Jelle Zijlstra in :gh:"
"`104873`.)"
msgstr ""
"Adicionada :func:`~typing.get_protocol_members` para devolver o conjunto de "
"membros que definem um :class:`typing.Protocol`. (Contribuído por Jelle "
"Zijlstra em :gh:`104873`.)"

#: ../../whatsnew/3.13.rst:1414
msgid ""
"Add :func:`~typing.is_protocol` to check whether a class is a :class:"
"`~typing.Protocol`. (Contributed by Jelle Zijlstra in :gh:`104873`.)"
msgstr ""
"Adicionada :func:`~typing.is_protocol` para verificar se uma classe é um :"
"class:`~typing.Protocol`. (Contribuído por Jelle Zijlstra em :gh:`104873`.)"

#: ../../whatsnew/3.13.rst:1418
msgid ""
":data:`~typing.ClassVar` can now be nested in :data:`~typing.Final`, and "
"vice versa. (Contributed by Mehdi Drissi in :gh:`89547`.)"
msgstr ""
":data:`~typing.ClassVar` pode agora ser aninhado em :data:`~typing.Final`, e "
"vice-versa. (Contribuído por Mehdi Drissi em :gh:`89547`.)"

#: ../../whatsnew/3.13.rst:1424
msgid "unicodedata"
msgstr "unicodedata"

#: ../../whatsnew/3.13.rst:1426
msgid ""
"Update the Unicode database to `version 15.1.0`__. (Contributed by James "
"Gerity in :gh:`109559`.)"
msgstr ""
"Atualizada a base de dados Unicode para a `versão 15.1.0`__. (Contribuído "
"por James Gerity em :gh:`109559`.)"

#: ../../whatsnew/3.13.rst:1433
msgid "venv"
msgstr "venv"

#: ../../whatsnew/3.13.rst:1435
msgid ""
"Add support for creating source control management (SCM) ignore files in a "
"virtual environment's directory. By default, Git is supported. This is "
"implemented as opt-in via the API, which can be extended to support other "
"SCMs (:class:`~venv.EnvBuilder` and :func:`~venv.create`), and opt-out via "
"the CLI, using :option:`!--without-scm-ignore-files`. (Contributed by Brett "
"Cannon in :gh:`108125`.)"
msgstr ""
"Adicionado suporte para criar ficheiros de ignorar de controlo de versão "
"(SCM) no diretório de um ambiente virtual. Por predefinição, o Git é "
"suportado. Isto é implementado como opcional via API, que pode ser estendida "
"para suportar outros SCMs (:class:`~venv.EnvBuilder` e :func:`~venv."
"create`), e como opção de exclusão via CLI, usando :option:`!--without-scm-"
"ignore-files`. (Contribuído por Brett Cannon em :gh:`108125`.)"

#: ../../whatsnew/3.13.rst:1446
msgid "warnings"
msgstr "warnings"

#: ../../whatsnew/3.13.rst:1448
msgid ""
":pep:`702`: The new :func:`warnings.deprecated` decorator provides a way to "
"communicate deprecations to a :term:`static type checker` and to warn on "
"usage of deprecated classes and functions. A :exc:`DeprecationWarning` may "
"also be emitted when a decorated function or class is used at runtime. "
"(Contributed by Jelle Zijlstra in :gh:`104003`.)"
msgstr ""
":pep:`702`: O novo decorador :func:`warnings.deprecated` fornece uma forma "
"de comunicar obsolescências a um :term:`verificador de tipo estático` e de "
"avisar sobre o uso de classes e funções obsoletas. Um :exc:"
"`DeprecationWarning` pode também ser emitido quando uma função ou classe "
"decorada é usada em tempo de execução. (Contribuído por Jelle Zijlstra em :"
"gh:`104003`.)"

#: ../../whatsnew/3.13.rst:1457
msgid "xml"
msgstr "xml"

#: ../../whatsnew/3.13.rst:1459
msgid ""
"Allow controlling Expat >=2.6.0 reparse deferral (:cve:`2023-52425`) by "
"adding five new methods:"
msgstr ""
"Permitido controlar o adiamento de reanálise do Expat >=2.6.0 (:cve:"
"`2023-52425`) através da adição de cinco novos métodos:"

#: ../../whatsnew/3.13.rst:1462
msgid ":meth:`xml.etree.ElementTree.XMLParser.flush`"
msgstr ":meth:`xml.etree.ElementTree.XMLParser.flush`"

#: ../../whatsnew/3.13.rst:1463
msgid ":meth:`xml.etree.ElementTree.XMLPullParser.flush`"
msgstr ":meth:`xml.etree.ElementTree.XMLPullParser.flush`"

#: ../../whatsnew/3.13.rst:1464
msgid ":meth:`xml.parsers.expat.xmlparser.GetReparseDeferralEnabled`"
msgstr ":meth:`xml.parsers.expat.xmlparser.GetReparseDeferralEnabled`"

#: ../../whatsnew/3.13.rst:1465
msgid ":meth:`xml.parsers.expat.xmlparser.SetReparseDeferralEnabled`"
msgstr ":meth:`xml.parsers.expat.xmlparser.SetReparseDeferralEnabled`"

#: ../../whatsnew/3.13.rst:1466
msgid ":meth:`!xml.sax.expatreader.ExpatParser.flush`"
msgstr ":meth:`!xml.sax.expatreader.ExpatParser.flush`"

#: ../../whatsnew/3.13.rst:1468
msgid "(Contributed by Sebastian Pipping in :gh:`115623`.)"
msgstr "(Contribuído por Sebastian Pipping em :gh:`115623`.)"

#: ../../whatsnew/3.13.rst:1470
msgid ""
"Add the :meth:`!close` method for the iterator returned by :func:`~xml.etree."
"ElementTree.iterparse` for explicit cleanup. (Contributed by Serhiy "
"Storchaka in :gh:`69893`.)"
msgstr ""
"Adicionado o método :meth:`!close` para o iterador devolvido por :func:`~xml."
"etree.ElementTree.iterparse` para limpeza explícita. (Contribuído por Serhiy "
"Storchaka em :gh:`69893`.)"

#: ../../whatsnew/3.13.rst:1476
msgid "zipimport"
msgstr "zipimport"

#: ../../whatsnew/3.13.rst:1478
msgid ""
"Add support for ZIP64_ format files. Everybody loves huge data, right? "
"(Contributed by Tim Hatch in :gh:`94146`.)"
msgstr ""
"Adicionado suporte para ficheiros no formato ZIP64_. Todos adoram dados "
"enormes, certo? (Contribuído por Tim Hatch em :gh:`94146`.)"

#: ../../whatsnew/3.13.rst:1486
msgid "Optimizations"
msgstr "Otimizações"

#: ../../whatsnew/3.13.rst:1488
msgid ""
"Several standard library modules have had their import times significantly "
"improved. For example, the import time of the :mod:`typing` module has been "
"reduced by around a third by removing dependencies on :mod:`re` and :mod:"
"`contextlib`. Other modules to enjoy import-time speedups include :mod:"
"`email.utils`, :mod:`enum`, :mod:`functools`, :mod:`importlib.metadata`, "
"and :mod:`threading`. (Contributed by Alex Waygood, Shantanu Jain, Adam "
"Turner, Daniel Hollas, and others in :gh:`109653`.)"
msgstr ""
"Vários módulos da biblioteca padrão tiveram os seus tempos de importação "
"significativamente melhorados. Por exemplo, o tempo de importação do módulo :"
"mod:`typing` foi reduzido em cerca de um terço, removendo dependências de :"
"mod:`re` e :mod:`contextlib`. Outros módulos que beneficiam de melhorias de "
"velocidade de importação incluem :mod:`email.utils`, :mod:`enum`, :mod:"
"`functools`, :mod:`importlib.metadata` e :mod:`threading`. (Contribuído por "
"Alex Waygood, Shantanu Jain, Adam Turner, Daniel Hollas e outros em :gh:"
"`109653`.)"

#: ../../whatsnew/3.13.rst:1499
msgid ""
":func:`textwrap.indent` is now around 30% faster than before for large "
"input. (Contributed by Inada Naoki in :gh:`107369`.)"
msgstr ""
"A função :func:`textwrap.indent` é agora cerca de 30% mais rápida do que "
"antes para entradas grandes. (Contribuído por Inada Naoki em :gh:`107369`.)"

#: ../../whatsnew/3.13.rst:1502
msgid ""
"The :mod:`subprocess` module now uses the :func:`~os.posix_spawn` function "
"in more situations, including when *close_fds* is ``True`` (the default) on "
"many modern platforms. This should provide a notable performance increase "
"when launching processes on FreeBSD and Solaris. See the :ref:`subprocess "
"<whatsnew313-subprocess>` section above for details. (Contributed by Jakub "
"Kulik in :gh:`113117`.)"
msgstr ""
"O módulo :mod:`subprocess` usa agora a função :func:`~os.posix_spawn` em "
"mais situações, incluindo quando *close_fds* é ``True`` (predefinição) em "
"muitas plataformas modernas. Isto deve proporcionar um aumento notável de "
"desempenho ao lançar processos em FreeBSD e Solaris. Consulte a secção :ref:"
"`subprocess <whatsnew313-subprocess>` acima para mais detalhes. (Contribuído "
"por Jakub Kulik em :gh:`113117`.)"

#: ../../whatsnew/3.13.rst:1512
msgid "Removed Modules And APIs"
msgstr "Módulos e APIs Removidos"

#: ../../whatsnew/3.13.rst:1518
msgid "PEP 594: Remove \"dead batteries\" from the standard library"
msgstr "PEP 594: Remover \"baterias mortas\" da biblioteca padrão"

#: ../../whatsnew/3.13.rst:1520
msgid ""
":pep:`594` proposed removing 19 modules from the standard library, "
"colloquially referred to as 'dead batteries' due to their historic, "
"obsolete, or insecure status. All of the following modules were deprecated "
"in Python 3.11, and are now removed:"
msgstr ""
"A :pep:`594` propôs a remoção de 19 módulos da biblioteca padrão, "
"colloquialmente referidos como \"baterias mortas\" devido ao seu estado "
"histórico, obsoleto ou inseguro. Todos os seguintes módulos foram obsoletos "
"no Python 3.11 e foram agora removidos:"

#: ../../whatsnew/3.13.rst:1526
msgid ":mod:`!aifc`"
msgstr ":mod:`!aifc`"

#: ../../whatsnew/3.13.rst:1528
msgid ""
":pypi:`standard-aifc`: Use the redistribution of ``aifc`` library from PyPI."
msgstr ""
":pypi:`standard-aifc`: Use a redistribuição da biblioteca ``aifc`` do PyPI."

#: ../../whatsnew/3.13.rst:1531
msgid ":mod:`!audioop`"
msgstr ":mod:`!audioop`"

#: ../../whatsnew/3.13.rst:1533
msgid ":pypi:`audioop-lts`: Use ``audioop-lts`` library from PyPI."
msgstr ":pypi:`audioop-lts`: Use a biblioteca ``audioop-lts`` do PyPI."

#: ../../whatsnew/3.13.rst:1536
msgid ":mod:`!chunk`"
msgstr ":mod:`!chunk`"

#: ../../whatsnew/3.13.rst:1538
msgid ""
":pypi:`standard-chunk`: Use the redistribution of ``chunk`` library from "
"PyPI."
msgstr ""
":pypi:`standard-chunk`: Use a redistribuição da biblioteca ``chunk`` do PyPI."

#: ../../whatsnew/3.13.rst:1541
msgid ":mod:`!cgi` and :mod:`!cgitb`"
msgstr ":mod:`!cgi` e :mod:`!cgitb`"

#: ../../whatsnew/3.13.rst:1543
msgid ""
":class:`!cgi.FieldStorage` can typically be replaced with :func:`urllib."
"parse.parse_qsl` for ``GET`` and ``HEAD`` requests, and the :mod:`email."
"message` module or the :pypi:`multipart` library for ``POST`` and ``PUT`` "
"requests."
msgstr ""
"A classe :class:`!cgi.FieldStorage` pode tipicamente ser substituída por :"
"func:`urllib.parse.parse_qsl` para pedidos ``GET`` e ``HEAD``, e pelo "
"módulo :mod:`email.message` ou pela biblioteca :pypi:`multipart` para "
"pedidos ``POST`` e ``PUT``."

#: ../../whatsnew/3.13.rst:1548
msgid ""
":func:`!cgi.parse` can be replaced by calling :func:`urllib.parse.parse_qs` "
"directly on the desired query string, unless the input is ``multipart/form-"
"data``, which should be replaced as described below for :func:`!cgi."
"parse_multipart`."
msgstr ""
"A função :func:`!cgi.parse` pode ser substituída chamando :func:`urllib."
"parse.parse_qs` diretamente na *string* de consulta desejada, a menos que a "
"entrada seja ``multipart/form-data``, que deve ser substituída como descrito "
"abaixo para :func:`!cgi.parse_multipart`."

#: ../../whatsnew/3.13.rst:1553
msgid ""
":func:`!cgi.parse_header` can be replaced with the functionality in the :mod:"
"`email` package, which implements the same MIME RFCs. For example, with :"
"class:`email.message.EmailMessage`:"
msgstr ""
"A função :func:`!cgi.parse_header` pode ser substituída pela funcionalidade "
"no pacote :mod:`email`, que implementa os mesmos RFCs MIME. Por exemplo, "
"com :class:`email.message.EmailMessage`:"

#: ../../whatsnew/3.13.rst:1557
msgid ""
"from email.message import EmailMessage\n"
"\n"
"msg = EmailMessage()\n"
"msg['content-type'] = 'application/json; charset=\"utf8\"'\n"
"main, params = msg.get_content_type(), msg['content-type'].params"
msgstr ""
"from email.message import EmailMessage\n"
"\n"
"msg = EmailMessage()\n"
"msg['content-type'] = 'application/json; charset=\"utf8\"'\n"
"main, params = msg.get_content_type(), msg['content-type'].params"

#: ../../whatsnew/3.13.rst:1565
msgid ""
":func:`!cgi.parse_multipart` can be replaced with the functionality in the :"
"mod:`email` package, which implements the same MIME RFCs, or with the :pypi:"
"`multipart` library. For example, the :class:`email.message.EmailMessage` "
"and :class:`email.message.Message` classes."
msgstr ""
"A função :func:`!cgi.parse_multipart` pode ser substituída pela "
"funcionalidade no pacote :mod:`email`, que implementa os mesmos RFCs MIME, "
"ou pela biblioteca :pypi:`multipart`. Por exemplo, as classes :class:`email."
"message.EmailMessage` e :class:`email.message.Message`."

#: ../../whatsnew/3.13.rst:1571
msgid ""
":pypi:`standard-cgi`: and :pypi:`standard-cgitb`: Use the redistribution of "
"``cgi`` and ``cgitb`` library from PyPI."
msgstr ""
":pypi:`standard-cgi`: e :pypi:`standard-cgitb`: Use a redistribuição das "
"bibliotecas ``cgi`` e ``cgitb`` do PyPI."

#: ../../whatsnew/3.13.rst:1574
msgid ""
":mod:`!crypt` and the private :mod:`!_crypt` extension. The :mod:`hashlib` "
"module may be an appropriate replacement when simply hashing a value is "
"required. Otherwise, various third-party libraries on PyPI are available:"
msgstr ""
"O módulo :mod:`!crypt` e a extensão privada :mod:`!_crypt`. O módulo :mod:"
"`hashlib` pode ser uma substituição apropriada quando é necessário "
"simplesmente fazer *hash* de um valor. Caso contrário, várias bibliotecas de "
"terceiros estão disponíveis no PyPI:"

#: ../../whatsnew/3.13.rst:1579
msgid ""
":pypi:`bcrypt`: Modern password hashing for your software and your servers."
msgstr ""
":pypi:`bcrypt`: *Hashing* moderno de palavras-passe para o seu software e "
"servidores."

#: ../../whatsnew/3.13.rst:1581
msgid ":pypi:`argon2-cffi`: The secure Argon2 password hashing algorithm."
msgstr ""
":pypi:`argon2-cffi`: O algoritmo seguro de *hashing* de palavras-passe "
"Argon2."

#: ../../whatsnew/3.13.rst:1583
msgid ""
":pypi:`legacycrypt`: :mod:`ctypes` wrapper to the POSIX crypt library call "
"and associated functionality."
msgstr ""
":pypi:`legacycrypt`: *Wrapper* :mod:`ctypes` para a chamada da biblioteca "
"POSIX crypt e funcionalidades associadas."

#: ../../whatsnew/3.13.rst:1586
msgid ""
":pypi:`crypt_r`: Fork of the :mod:`!crypt` module, wrapper to the :manpage:"
"`crypt_r(3)` library call and associated functionality."
msgstr ""
":pypi:`crypt_r`: *Fork* do módulo :mod:`!crypt`, *wrapper* para a chamada da "
"biblioteca :manpage:`crypt_r(3)` e funcionalidades associadas."

#: ../../whatsnew/3.13.rst:1590
msgid ""
":pypi:`standard-crypt` and :pypi:`deprecated-crypt-alternative`: Use the "
"redistribution of ``crypt`` and reimplementation of ``_crypt`` libraries "
"from PyPI."
msgstr ""
":pypi:`standard-crypt` e :pypi:`deprecated-crypt-alternative`: Use a "
"redistribuição das bibliotecas ``crypt`` e a reimplementação de ``_crypt`` "
"do PyPI."

#: ../../whatsnew/3.13.rst:1593
msgid ""
":mod:`!imghdr`: The :pypi:`filetype`, :pypi:`puremagic`, or :pypi:`python-"
"magic` libraries should be used as replacements. For example, the :func:`!"
"puremagic.what` function can be used to replace the :func:`!imghdr.what` "
"function for all file formats that were supported by :mod:`!imghdr`."
msgstr ""
"O módulo :mod:`!imghdr`: As bibliotecas :pypi:`filetype`, :pypi:`puremagic` "
"ou :pypi:`python-magic` devem ser usadas como substituições. Por exemplo, a "
"função :func:`!puremagic.what` pode ser usada para substituir a função :func:"
"`!imghdr.what` para todos os formatos de ficheiro que eram suportados pelo :"
"mod:`!imghdr`."

#: ../../whatsnew/3.13.rst:1600
msgid ""
":pypi:`standard-imghdr`: Use the redistribution of ``imghdr`` library from "
"PyPI."
msgstr ""
":pypi:`standard-imghdr`: Use a redistribuição da biblioteca ``imghdr`` do "
"PyPI."

#: ../../whatsnew/3.13.rst:1603
msgid ":mod:`!mailcap`: Use the :mod:`mimetypes` module instead."
msgstr ":mod:`!mailcap`: Use o módulo :mod:`mimetypes` em vez disso."

#: ../../whatsnew/3.13.rst:1606
msgid ""
":pypi:`standard-mailcap`: Use the redistribution of ``mailcap`` library from "
"PyPI."
msgstr ""
":pypi:`standard-mailcap`: Use a redistribuição da biblioteca ``mailcap`` do "
"PyPI."

#: ../../whatsnew/3.13.rst:1609
msgid ":mod:`!msilib`"
msgstr ":mod:`!msilib`"

#: ../../whatsnew/3.13.rst:1610
msgid ":mod:`!nis`"
msgstr ":mod:`!nis`"

#: ../../whatsnew/3.13.rst:1611
msgid ":mod:`!nntplib`: Use the :pypi:`pynntp` library from PyPI instead."
msgstr ":mod:`!nntplib`: Use a biblioteca :pypi:`pynntp` do PyPI em vez disso."

#: ../../whatsnew/3.13.rst:1614
msgid ""
":pypi:`standard-nntplib`: Use the redistribution of ``nntplib`` library from "
"PyPI."
msgstr ""
":pypi:`standard-nntplib`: Use a redistribuição da biblioteca ``nntplib`` do "
"PyPI."

#: ../../whatsnew/3.13.rst:1617
msgid ""
":mod:`!ossaudiodev`: For audio playback, use the :pypi:`pygame` library from "
"PyPI instead."
msgstr ""
":mod:`!ossaudiodev`: Para reprodução de áudio, use a biblioteca :pypi:"
"`pygame` do PyPI em vez disso."

#: ../../whatsnew/3.13.rst:1619
msgid ""
":mod:`!pipes`: Use the :mod:`subprocess` module instead. Use :func:`shlex."
"quote` to replace the undocumented ``pipes.quote`` function."
msgstr ""
":mod:`!pipes`: Use o módulo :mod:`subprocess` em vez disso. Use :func:`shlex."
"quote` para substituir a função indocumentada ``pipes.quote``."

#: ../../whatsnew/3.13.rst:1624
msgid ""
":pypi:`standard-pipes`: Use the redistribution of ``pipes`` library from "
"PyPI."
msgstr ""
":pypi:`standard-pipes`: Use a redistribuição da biblioteca ``pipes`` do PyPI."

#: ../../whatsnew/3.13.rst:1627
msgid ""
":mod:`!sndhdr`: The :pypi:`filetype`, :pypi:`puremagic`, or :pypi:`python-"
"magic` libraries should be used as replacements."
msgstr ""
":mod:`!sndhdr`: As bibliotecas :pypi:`filetype`, :pypi:`puremagic` ou :pypi:"
"`python-magic` devem ser usadas como substituições."

#: ../../whatsnew/3.13.rst:1631
msgid ""
":pypi:`standard-sndhdr`: Use the redistribution of ``sndhdr`` library from "
"PyPI."
msgstr ""
":pypi:`standard-sndhdr`: Use a redistribuição da biblioteca ``sndhdr`` do "
"PyPI."

#: ../../whatsnew/3.13.rst:1634
msgid ":mod:`!spwd`: Use the :pypi:`python-pam` library from PyPI instead."
msgstr ""
":mod:`!spwd`: Use a biblioteca :pypi:`python-pam` do PyPI em vez disso."

#: ../../whatsnew/3.13.rst:1636
msgid ":mod:`!sunau`"
msgstr ":mod:`!sunau`"

#: ../../whatsnew/3.13.rst:1638
msgid ""
":pypi:`standard-sunau`: Use the redistribution of ``sunau`` library from "
"PyPI."
msgstr ""
":pypi:`standard-sunau`: Use a redistribuição da biblioteca ``sunau`` do PyPI."

#: ../../whatsnew/3.13.rst:1641
msgid ""
":mod:`!telnetlib`, Use the :pypi:`telnetlib3` or :pypi:`Exscript` libraries "
"from PyPI instead."
msgstr ""
"O módulo :mod:`!telnetlib`: Use as bibliotecas :pypi:`telnetlib3` ou :pypi:"
"`Exscript` do PyPI em vez disso."

#: ../../whatsnew/3.13.rst:1644
msgid ""
":pypi:`standard-telnetlib`: Use the redistribution of ``telnetlib`` library "
"from PyPI."
msgstr ""
":pypi:`standard-telnetlib`: Use a redistribuição da biblioteca ``telnetlib`` "
"do PyPI."

#: ../../whatsnew/3.13.rst:1647
msgid ""
":mod:`!uu`: Use the :mod:`base64` module instead, as a modern alternative."
msgstr ""
":mod:`!uu`: Use o módulo :mod:`base64` em vez disso, como alternativa "
"moderna."

#: ../../whatsnew/3.13.rst:1650
msgid ""
":pypi:`standard-uu`: Use the redistribution of ``uu`` library from PyPI."
msgstr ""
":pypi:`standard-uu`: Use a redistribuição da biblioteca ``uu`` do PyPI."

#: ../../whatsnew/3.13.rst:1653
msgid ":mod:`!xdrlib`"
msgstr ":mod:`!xdrlib`"

#: ../../whatsnew/3.13.rst:1655
msgid ""
":pypi:`standard-xdrlib`: Use the redistribution of ``xdrlib`` library from "
"PyPI."
msgstr ""
":pypi:`standard-xdrlib`: Use a redistribuição da biblioteca ``xdrlib`` do "
"PyPI."

#: ../../whatsnew/3.13.rst:1658
msgid ""
"(Contributed by Victor Stinner and Zachary Ware in :gh:`104773` and :gh:"
"`104780`.)"
msgstr ""
"(Contribuído por Victor Stinner e Zachary Ware em :gh:`104773` e :gh:"
"`104780`.)"

#: ../../whatsnew/3.13.rst:1662
msgid "2to3"
msgstr "2to3"

#: ../../whatsnew/3.13.rst:1664
msgid ""
"Remove the :program:`2to3` program and the :mod:`!lib2to3` module, "
"previously deprecated in Python 3.11. (Contributed by Victor Stinner in :gh:"
"`104780`.)"
msgstr ""
"Remover o programa :program:`2to3` e o módulo :mod:`!lib2to3`, anteriormente "
"obsoletos no Python 3.11. (Contribuído por Victor Stinner em :gh:`104780`.)"

#: ../../whatsnew/3.13.rst:1670
msgid "builtins"
msgstr "integrados"

#: ../../whatsnew/3.13.rst:1672
msgid ""
"Remove support for chained :class:`classmethod` descriptors (introduced in :"
"gh:`63272`). These can no longer be used to wrap other descriptors, such as :"
"class:`property`. The core design of this feature was flawed and led to "
"several problems. To \"pass-through\" a :class:`classmethod`, consider using "
"the :attr:`!__wrapped__` attribute that was added in Python 3.10. "
"(Contributed by Raymond Hettinger in :gh:`89519`.)"
msgstr ""
"Remover o suporte para descritores :class:`classmethod` encadeados "
"(introduzidos em :gh:`63272`). Estes já não podem ser usados para envolver "
"outros descritores, como :class:`property`. O design central desta "
"funcionalidade era defeituoso e levou a vários problemas. Para \"passar\" "
"um :class:`classmethod`, considere usar o atributo :attr:`!__wrapped__` que "
"foi adicionado no Python 3.10. (Contribuído por Raymond Hettinger em :gh:"
"`89519`.)"

#: ../../whatsnew/3.13.rst:1681
msgid ""
"Raise a :exc:`RuntimeError` when calling :meth:`frame.clear` on a suspended "
"frame (as has always been the case for an executing frame). (Contributed by "
"Irit Katriel in :gh:`79932`.)"
msgstr ""
"Levantar um :exc:`RuntimeError` ao chamar :meth:`frame.clear` num *frame* "
"suspenso (como sempre foi o caso para um *frame* em execução). (Contribuído "
"por Irit Katriel em :gh:`79932`.)"

#: ../../whatsnew/3.13.rst:1689
msgid ""
"Remove the undocumented :class:`!LegacyInterpolation` class, deprecated in "
"the docstring since Python 3.2, and at runtime since Python 3.11. "
"(Contributed by Hugo van Kemenade in :gh:`104886`.)"
msgstr ""
"Remover a classe indocumentada :class:`!LegacyInterpolation`, obsoleta na "
"docstring desde o Python 3.2 e em tempo de execução desde o Python 3.11. "
"(Contribuído por Hugo van Kemenade em :gh:`104886`.)"

#: ../../whatsnew/3.13.rst:1696
msgid "importlib.metadata"
msgstr "importlib.metadata"

#: ../../whatsnew/3.13.rst:1698
msgid ""
"Remove deprecated subscript (:meth:`~object.__getitem__`) access for :ref:"
"`EntryPoint <entry-points>` objects. (Contributed by Jason R. Coombs in :gh:"
"`113175`.)"
msgstr ""
"Remover o acesso obsoleto por subscrito (:meth:`~object.__getitem__`) para "
"objetos :ref:`EntryPoint <entry-points>`. (Contribuído por Jason R. Coombs "
"em :gh:`113175`.)"

#: ../../whatsnew/3.13.rst:1704
msgid "locale"
msgstr "locale"

#: ../../whatsnew/3.13.rst:1706
msgid ""
"Remove the :func:`!locale.resetlocale` function, deprecated in Python 3.11. "
"Use ``locale.setlocale(locale.LC_ALL, \"\")`` instead. (Contributed by "
"Victor Stinner in :gh:`104783`.)"
msgstr ""
"Remover a função :func:`!locale.resetlocale`, obsoleta no Python 3.11. Use "
"``locale.setlocale(locale.LC_ALL, \"\")`` em vez disso. (Contribuído por "
"Victor Stinner em :gh:`104783`.)"

#: ../../whatsnew/3.13.rst:1712
msgid "opcode"
msgstr "opcode"

#: ../../whatsnew/3.13.rst:1714
msgid ""
"Move :attr:`!opcode.ENABLE_SPECIALIZATION` to :attr:`!_opcode."
"ENABLE_SPECIALIZATION`. This field was added in 3.12, it was never "
"documented, and is not intended for external use. (Contributed by Irit "
"Katriel in :gh:`105481`.)"
msgstr ""
"Mover :attr:`!opcode.ENABLE_SPECIALIZATION` para :attr:`!_opcode."
"ENABLE_SPECIALIZATION`. Este campo foi adicionado no 3.12, nunca foi "
"documentado e não é destinado a uso externo. (Contribuído por Irit Katriel "
"em :gh:`105481`.)"

#: ../../whatsnew/3.13.rst:1719
msgid ""
"Remove :func:`!opcode.is_pseudo`, :attr:`!opcode.MIN_PSEUDO_OPCODE`, and :"
"attr:`!opcode.MAX_PSEUDO_OPCODE`, which were added in Python 3.12, but were "
"neither documented nor exposed through :mod:`dis`, and were not intended to "
"be used externally. (Contributed by Irit Katriel in :gh:`105481`.)"
msgstr ""
"Remover :func:`!opcode.is_pseudo`, :attr:`!opcode.MIN_PSEUDO_OPCODE` e :attr:"
"`!opcode.MAX_PSEUDO_OPCODE`, que foram adicionados no Python 3.12, mas não "
"foram documentados nem expostos através de :mod:`dis`, e não eram destinados "
"a ser usados externamente. (Contribuído por Irit Katriel em :gh:`105481`.)"

#: ../../whatsnew/3.13.rst:1727
msgid "optparse"
msgstr "optparse"

#: ../../whatsnew/3.13.rst:1729
msgid ""
"This module is no longer considered :term:`soft deprecated`. While :mod:"
"`argparse` remains preferred for new projects that aren't using a third "
"party command line argument processing library, there are aspects of the way "
"``argparse`` works that mean the lower level ``optparse`` module may provide "
"a better foundation for *writing* argument processing libraries, and for "
"implementing command line applications which adhere more strictly than "
"``argparse`` does to various Unix command line processing conventions that "
"originate in the behaviour of the C :c:func:`!getopt` function . "
"(Contributed by Alyssa Coghlan and Serhiy Storchaka in :gh:`126180`.)"
msgstr ""
"Este módulo já não é considerado :term:`obsoleto`. Embora o :mod:`argparse` "
"continue a ser preferido para novos projetos que não estão a usar uma "
"biblioteca de processamento de argumentos de linha de comandos de terceiros, "
"existem aspetos na forma como o ``argparse`` funciona que significam que o "
"módulo de nível inferior ``optparse`` pode fornecer uma base melhor para "
"*escrever* bibliotecas de processamento de argumentos e para implementar "
"aplicações de linha de comandos que aderem mais estritamente do que o "
"``argparse`` às várias convenções de processamento de linha de comandos Unix "
"que têm origem no comportamento da função C :c:func:`!getopt`. (Contribuído "
"por Alyssa Coghlan e Serhiy Storchaka em :gh:`126180`.)"

#: ../../whatsnew/3.13.rst:1745
msgid ""
"Remove the ability to use :class:`~pathlib.Path` objects as context "
"managers. This functionality was deprecated and has had no effect since "
"Python 3.9. (Contributed by Barney Gale in :gh:`83863`.)"
msgstr ""
"Remover a capacidade de usar objetos :class:`~pathlib.Path` como gestores de "
"contexto. Esta funcionalidade estava obsoleta e não teve efeito desde o "
"Python 3.9. (Contribuído por Barney Gale em :gh:`83863`.)"

#: ../../whatsnew/3.13.rst:1753
msgid ""
"Remove the undocumented, deprecated, and broken :func:`!re.template` "
"function and :attr:`!re.TEMPLATE` / :attr:`!re.T` flag. (Contributed by "
"Serhiy Storchaka and Nikita Sobolev in :gh:`105687`.)"
msgstr ""
"Remover a função indocumentada, obsoleta e defeituosa :func:`!re.template` e "
"as *flags* :attr:`!re.TEMPLATE` / :attr:`!re.T`. (Contribuído por Serhiy "
"Storchaka e Nikita Sobolev em :gh:`105687`.)"

#: ../../whatsnew/3.13.rst:1759
msgid "tkinter.tix"
msgstr "tkinter.tix"

#: ../../whatsnew/3.13.rst:1761
msgid ""
"Remove the :mod:`!tkinter.tix` module, deprecated in Python 3.6. The third-"
"party Tix library which the module wrapped is unmaintained. (Contributed by "
"Zachary Ware in :gh:`75552`.)"
msgstr ""
"Remover o módulo :mod:`!tkinter.tix`, obsoleto no Python 3.6. A biblioteca "
"de terceiros Tix, que o módulo envolvia, não é mantida. (Contribuído por "
"Zachary Ware em :gh:`75552`.)"

#: ../../whatsnew/3.13.rst:1767
msgid "turtle"
msgstr "turtle"

#: ../../whatsnew/3.13.rst:1769
msgid ""
"Remove the :meth:`!RawTurtle.settiltangle` method, deprecated in the "
"documentation since Python 3.1 and at runtime since Python 3.11. "
"(Contributed by Hugo van Kemenade in :gh:`104876`.)"
msgstr ""
"Remover o método :meth:`!RawTurtle.settiltangle`, obsoleto na documentação "
"desde o Python 3.1 e em tempo de execução desde o Python 3.11. (Contribuído "
"por Hugo van Kemenade em :gh:`104876`.)"

#: ../../whatsnew/3.13.rst:1778
msgid ""
"Remove the :mod:`!typing.io` and :mod:`!typing.re` namespaces, deprecated "
"since Python 3.8. The items in those namespaces can be imported directly "
"from the :mod:`typing` module. (Contributed by Sebastian Rittau in :gh:"
"`92871`.)"
msgstr ""
"Remover os *namespaces* :mod:`!typing.io` e :mod:`!typing.re`, obsoletos "
"desde o Python 3.8. Os itens nesses *namespaces* podem ser importados "
"diretamente do módulo :mod:`typing`. (Contribuído por Sebastian Rittau em :"
"gh:`92871`.)"

#: ../../whatsnew/3.13.rst:1784
msgid ""
"Remove the keyword-argument method of creating :class:`~typing.TypedDict` "
"types, deprecated in Python 3.11. (Contributed by Tomas Roun in :gh:"
"`104786`.)"
msgstr ""
"Remover o método de argumento de palavra-chave para criar tipos :class:"
"`~typing.TypedDict`, obsoleto no Python 3.11. (Contribuído por Tomas Roun "
"em :gh:`104786`.)"

#: ../../whatsnew/3.13.rst:1790
msgid "unittest"
msgstr "unittest"

#: ../../whatsnew/3.13.rst:1792
msgid ""
"Remove the following :mod:`unittest` functions, deprecated in Python 3.11:"
msgstr ""
"Remover as seguintes funções :mod:`unittest`, obsoletas no Python 3.11:"

#: ../../whatsnew/3.13.rst:1794
msgid ":func:`!unittest.findTestCases`"
msgstr ":func:`!unittest.findTestCases`"

#: ../../whatsnew/3.13.rst:1795
msgid ":func:`!unittest.makeSuite`"
msgstr ":func:`!unittest.makeSuite`"

#: ../../whatsnew/3.13.rst:1796
msgid ":func:`!unittest.getTestCaseNames`"
msgstr ":func:`!unittest.getTestCaseNames`"

#: ../../whatsnew/3.13.rst:1798
msgid "Use :class:`~unittest.TestLoader` methods instead:"
msgstr "Use os métodos :class:`~unittest.TestLoader` em vez disso:"

#: ../../whatsnew/3.13.rst:1800
msgid ":meth:`~unittest.TestLoader.loadTestsFromModule`"
msgstr ":meth:`~unittest.TestLoader.loadTestsFromModule`"

#: ../../whatsnew/3.13.rst:1801
msgid ":meth:`~unittest.TestLoader.loadTestsFromTestCase`"
msgstr ":meth:`~unittest.TestLoader.loadTestsFromTestCase`"

#: ../../whatsnew/3.13.rst:1802
msgid ":meth:`~unittest.TestLoader.getTestCaseNames`"
msgstr ":meth:`~unittest.TestLoader.getTestCaseNames`"

#: ../../whatsnew/3.13.rst:1804
msgid "(Contributed by Hugo van Kemenade in :gh:`104835`.)"
msgstr "(Contribuído por Hugo van Kemenade em :gh:`104835`.)"

#: ../../whatsnew/3.13.rst:1806
msgid ""
"Remove the untested and undocumented :meth:`!TestProgram.usageExit` method, "
"deprecated in Python 3.11. (Contributed by Hugo van Kemenade in :gh:"
"`104992`.)"
msgstr ""
"Remover o método indocumentado e não testado :meth:`!TestProgram.usageExit`, "
"obsoleto no Python 3.11. (Contribuído por Hugo van Kemenade em :gh:`104992`.)"

#: ../../whatsnew/3.13.rst:1812
msgid "urllib"
msgstr "urllib"

#: ../../whatsnew/3.13.rst:1814
msgid ""
"Remove the *cafile*, *capath*, and *cadefault* parameters of the :func:"
"`urllib.request.urlopen` function, deprecated in Python 3.6. Use the "
"*context* parameter instead with an :class:`~ssl.SSLContext` instance. The :"
"meth:`ssl.SSLContext.load_cert_chain` function can be used to load specific "
"certificates, or let :func:`ssl.create_default_context` select the operating "
"system's trusted certificate authority (CA) certificates. (Contributed by "
"Victor Stinner in :gh:`105382`.)"
msgstr ""
"Remover os parâmetros *cafile*, *capath* e *cadefault* da função :func:"
"`urllib.request.urlopen`, obsoletos no Python 3.6. Use o parâmetro *context* "
"em vez disso, com uma instância :class:`~ssl.SSLContext`. A função :meth:"
"`ssl.SSLContext.load_cert_chain` pode ser usada para carregar certificados "
"específicos, ou deixe :func:`ssl.create_default_context` selecionar os "
"certificados de autoridade de certificação (CA) confiáveis do sistema "
"operativo. (Contribuído por Victor Stinner em :gh:`105382`.)"

#: ../../whatsnew/3.13.rst:1825
msgid "webbrowser"
msgstr "webbrowser"

#: ../../whatsnew/3.13.rst:1827
msgid ""
"Remove the untested and undocumented :class:`!MacOSX` class, deprecated in "
"Python 3.11. Use the :class:`!MacOSXOSAScript` class (introduced in Python "
"3.2) instead. (Contributed by Hugo van Kemenade in :gh:`104804`.)"
msgstr ""
"Remover a classe indocumentada e não testada :class:`!MacOSX`, obsoleta no "
"Python 3.11. Use a classe :class:`!MacOSXOSAScript` (introduzida no Python "
"3.2) em vez disso. (Contribuído por Hugo van Kemenade em :gh:`104804`.)"

#: ../../whatsnew/3.13.rst:1832
msgid ""
"Remove the deprecated :attr:`!MacOSXOSAScript._name` attribute. Use the :"
"attr:`MacOSXOSAScript.name <webbrowser.controller.name>` attribute instead. "
"(Contributed by Nikita Sobolev in :gh:`105546`.)"
msgstr ""
"Remover o atributo obsoleto :attr:`!MacOSXOSAScript._name`. Use o atributo :"
"attr:`MacOSXOSAScript.name <webbrowser.controller.name>` em vez disso. "
"(Contribuído por Nikita Sobolev em :gh:`105546`.)"

#: ../../whatsnew/3.13.rst:1839
msgid "New Deprecations"
msgstr "Novas Obsolescências"

#: ../../whatsnew/3.13.rst:1841
msgid ":ref:`User-defined functions <user-defined-funcs>`:"
msgstr ":ref:`Funções definidas pelo utilizador <user-defined-funcs>`:"

#: ../../whatsnew/3.13.rst:1843
msgid ""
"Deprecate assignment to a function's :attr:`~function.__code__` attribute, "
"where the new code object's type does not match the function's type. The "
"different types are: plain function, generator, async generator, and "
"coroutine. (Contributed by Irit Katriel in :gh:`81137`.)"
msgstr ""
"Descontinuar a atribuição ao atributo :attr:`~function.__code__` de uma "
"função, quando o tipo do novo objeto de código não corresponda ao tipo da "
"função. Os diferentes tipos são: função normal, gerador, gerador assíncrono "
"e corrotina. (Contribuído por Irit Katriel em :gh:`81137`.)"

#: ../../whatsnew/3.13.rst:1849
#: ../../deprecations/pending-removal-in-3.16.rst:11
msgid ":mod:`array`:"
msgstr ":mod:`array`:"

#: ../../whatsnew/3.13.rst:1851
msgid ""
"Deprecate the ``'u'`` format code (:c:type:`wchar_t`) at runtime. This "
"format code has been deprecated in documentation since Python 3.3, and will "
"be removed in Python 3.16. Use the ``'w'`` format code (:c:type:`Py_UCS4`) "
"for Unicode characters instead. (Contributed by Hugo van Kemenade in :gh:"
"`80480`.)"
msgstr ""
"Descontinuar o código de formato ``'u'`` (:c:type:`wchar_t`) em tempo de "
"execução. Este código de formato está obsoleto na documentação desde o "
"Python 3.3 e será removido no Python 3.16. Use o código de formato ``'w'`` (:"
"c:type:`Py_UCS4`) para caracteres Unicode em vez disso. (Contribuído por "
"Hugo van Kemenade em :gh:`80480`.)"

#: ../../whatsnew/3.13.rst:1858
#: ../../deprecations/pending-removal-in-3.15.rst:16
msgid ":mod:`ctypes`:"
msgstr ":mod:`ctypes`:"

#: ../../whatsnew/3.13.rst:1860
msgid ""
"Deprecate the undocumented :func:`!SetPointerType` function, to be removed "
"in Python 3.15. (Contributed by Victor Stinner in :gh:`105733`.)"
msgstr ""
"Descontinuar a função indocumentada :func:`!SetPointerType`, que será "
"removida no Python 3.15. (Contribuído por Victor Stinner em :gh:`105733`.)"

#: ../../whatsnew/3.13.rst:1864
msgid ""
":term:`Soft-deprecate <soft deprecated>` the :func:`~ctypes.ARRAY` function "
"in favour of ``type * length`` multiplication. (Contributed by Victor "
"Stinner in :gh:`105733`.)"
msgstr ""
":term:`Descontinuar suavemente <soft deprecated>` a função :func:`~ctypes."
"ARRAY` em favor da multiplicação ``type * length``. (Contribuído por Victor "
"Stinner em :gh:`105733`.)"

#: ../../whatsnew/3.13.rst:1868
msgid ":mod:`decimal`:"
msgstr ":mod:`decimal`:"

#: ../../whatsnew/3.13.rst:1870
msgid ""
"Deprecate the non-standard and undocumented :class:`~decimal.Decimal` format "
"specifier ``'N'``, which is only supported in the :mod:`!decimal` module's C "
"implementation. (Contributed by Serhiy Storchaka in :gh:`89902`.)"
msgstr ""
"Descontinuar o especificador de formato não padrão e indocumentado ``'N'`` "
"da classe :class:`~decimal.Decimal`, que é apenas suportado na implementação "
"C do módulo :mod:`!decimal`. (Contribuído por Serhiy Storchaka em :gh:"
"`89902`.)"

#: ../../whatsnew/3.13.rst:1875
msgid ":mod:`dis`:"
msgstr ":mod:`dis`:"

#: ../../whatsnew/3.13.rst:1877
msgid ""
"Deprecate the :attr:`!HAVE_ARGUMENT` separator. Check membership in :data:"
"`~dis.hasarg` instead. (Contributed by Irit Katriel in :gh:`109319`.)"
msgstr ""
"Descontinuar o separador :attr:`!HAVE_ARGUMENT`. Verifique a associação em :"
"data:`~dis.hasarg` em vez disso. (Contribuído por Irit Katriel em :gh:"
"`109319`.)"

#: ../../whatsnew/3.13.rst:1881
msgid ":mod:`gettext`:"
msgstr ":mod:`gettext`:"

#: ../../whatsnew/3.13.rst:1883
msgid ""
"Deprecate non-integer numbers as arguments to functions and methods that "
"consider plural forms in the :mod:`!gettext` module, even if no translation "
"was found. (Contributed by Serhiy Storchaka in :gh:`88434`.)"
msgstr ""
"Descontinuar números não inteiros como argumentos para funções e métodos que "
"consideram formas plurais no módulo :mod:`!gettext`, mesmo que nenhuma "
"tradução tenha sido encontrada. (Contribuído por Serhiy Storchaka em :gh:"
"`88434`.)"

#: ../../whatsnew/3.13.rst:1888
msgid ":mod:`glob`:"
msgstr ":mod:`glob`:"

#: ../../whatsnew/3.13.rst:1890
msgid ""
"Deprecate the undocumented :func:`!glob0` and :func:`!glob1` functions. Use :"
"func:`~glob.glob` and pass a :term:`path-like object` specifying the root "
"directory to the *root_dir* parameter instead. (Contributed by Barney Gale "
"in :gh:`117337`.)"
msgstr ""
"Descontinuar as funções indocumentadas :func:`!glob0` e :func:`!glob1`. Use :"
"func:`~glob.glob` e passe um objeto :term:`semelhante a caminho` que "
"especifique o diretório raiz para o parâmetro *root_dir* em vez disso. "
"(Contribuído por Barney Gale em :gh:`117337`.)"

#: ../../whatsnew/3.13.rst:1895
#: ../../deprecations/pending-removal-in-3.15.rst:21
msgid ":mod:`http.server`:"
msgstr ":mod:`http.server`:"

#: ../../whatsnew/3.13.rst:1897
msgid ""
"Deprecate :class:`~http.server.CGIHTTPRequestHandler`, to be removed in "
"Python 3.15. Process-based CGI HTTP servers have been out of favor for a "
"very long time. This code was outdated, unmaintained, and rarely used. It "
"has a high potential for both security and functionality bugs. (Contributed "
"by Gregory P. Smith in :gh:`109096`.)"
msgstr ""
"Descontinuar :class:`~http.server.CGIHTTPRequestHandler`, que será removido "
"no Python 3.15. Servidores HTTP baseados em processos CGI estão fora de uso "
"há muito tempo. Este código estava desatualizado, não era mantido e "
"raramente era usado. Tem um alto potencial para erros de segurança e "
"funcionalidade. (Contribuído por Gregory P. Smith em :gh:`109096`.)"

#: ../../whatsnew/3.13.rst:1904
msgid ""
"Deprecate the :option:`!--cgi` flag to the :program:`python -m http.server` "
"command-line interface, to be removed in Python 3.15. (Contributed by "
"Gregory P. Smith in :gh:`109096`.)"
msgstr ""
"Descontinuar a opção :option:`!--cgi` da interface de linha de comandos :"
"program:`python -m http.server`, que será removida no Python 3.15. "
"(Contribuído por Gregory P. Smith em :gh:`109096`.)"

#: ../../whatsnew/3.13.rst:1909
msgid ":mod:`mimetypes`:"
msgstr ":mod:`mimetypes`:"

#: ../../whatsnew/3.13.rst:1911
msgid ""
":term:`Soft-deprecate <soft deprecated>` file path arguments to :func:"
"`~mimetypes.guess_type`, use :func:`~mimetypes.guess_file_type` instead. "
"(Contributed by Serhiy Storchaka in :gh:`66543`.)"
msgstr ""
"Descontinuar suavemente argumentos de caminho de ficheiro para :func:"
"`~mimetypes.guess_type`; use :func:`~mimetypes.guess_file_type` em vez "
"disso. (Contribuído por Serhiy Storchaka em :gh:`66543`.)"

#: ../../whatsnew/3.13.rst:1916
msgid ":mod:`re`:"
msgstr ":mod:`re`:"

#: ../../whatsnew/3.13.rst:1918
msgid ""
"Deprecate passing the optional *maxsplit*, *count*, or *flags* arguments as "
"positional arguments to the module-level :func:`~re.split`, :func:`~re.sub`, "
"and :func:`~re.subn` functions. These parameters will become :ref:`keyword-"
"only <keyword-only_parameter>` in a future version of Python. (Contributed "
"by Serhiy Storchaka in :gh:`56166`.)"
msgstr ""
"Descontinuar a passagem dos argumentos opcionais *maxsplit*, *count* ou "
"*flags* como argumentos posicionais para as funções de nível de módulo :func:"
"`~re.split`, :func:`~re.sub` e :func:`~re.subn`. Estes parâmetros tornar-se-"
"ão :ref:`apenas de palavra-chave <keyword-only_parameter>` numa versão "
"futura do Python. (Contribuído por Serhiy Storchaka em :gh:`56166`.)"

#: ../../whatsnew/3.13.rst:1925
#: ../../deprecations/pending-removal-in-3.15.rst:46
msgid ":mod:`pathlib`:"
msgstr ":mod:`pathlib`:"

#: ../../whatsnew/3.13.rst:1927
msgid ""
"Deprecate :meth:`.PurePath.is_reserved`, to be removed in Python 3.15. Use :"
"func:`os.path.isreserved` to detect reserved paths on Windows. (Contributed "
"by Barney Gale in :gh:`88569`.)"
msgstr ""
"Descontinuar :meth:`.PurePath.is_reserved`, que será removido no Python "
"3.15. Use :func:`os.path.isreserved` para detetar caminhos reservados no "
"Windows. (Contribuído por Barney Gale em :gh:`88569`.)"

#: ../../whatsnew/3.13.rst:1932
#: ../../deprecations/pending-removal-in-3.15.rst:52
msgid ":mod:`platform`:"
msgstr ":mod:`platform`:"

#: ../../whatsnew/3.13.rst:1934
msgid ""
"Deprecate :func:`~platform.java_ver`, to be removed in Python 3.15. This "
"function is only useful for Jython support, has a confusing API, and is "
"largely untested. (Contributed by Nikita Sobolev in :gh:`116349`.)"
msgstr ""
"Descontinuar :func:`~platform.java_ver`, que será removido no Python 3.15. "
"Esta função é útil apenas para suporte ao Jython, tem uma API confusa e é "
"largamente não testada. (Contribuído por Nikita Sobolev em :gh:`116349`.)"

#: ../../whatsnew/3.13.rst:1940
msgid ":mod:`pydoc`:"
msgstr ":mod:`pydoc`:"

#: ../../whatsnew/3.13.rst:1942
msgid ""
"Deprecate the undocumented :func:`!ispackage` function. (Contributed by "
"Zackery Spytz in :gh:`64020`.)"
msgstr ""
"Descontinuar a função indocumentada :func:`!ispackage`. (Contribuído por "
"Zackery Spytz em :gh:`64020`.)"

#: ../../whatsnew/3.13.rst:1945
#: ../../deprecations/pending-removal-in-3.14.rst:89
msgid ":mod:`sqlite3`:"
msgstr ":mod:`sqlite3`:"

#: ../../whatsnew/3.13.rst:1947
msgid ""
"Deprecate passing more than one positional argument to the :func:`~sqlite3."
"connect` function and the :class:`~sqlite3.Connection` constructor. The "
"remaining parameters will become keyword-only in Python 3.15. (Contributed "
"by Erlend E. Aasland in :gh:`107948`.)"
msgstr ""
"Descontinuar a passagem de mais do que um argumento posicional para a "
"função :func:`~sqlite3.connect` e o construtor :class:`~sqlite3.Connection`. "
"Os parâmetros restantes tornar-se-ão apenas de palavra-chave no Python 3.15. "
"(Contribuído por Erlend E. Aasland em :gh:`107948`.)"

#: ../../whatsnew/3.13.rst:1953
msgid ""
"Deprecate passing name, number of arguments, and the callable as keyword "
"arguments for :meth:`.Connection.create_function` and :meth:`.Connection."
"create_aggregate` These parameters will become positional-only in Python "
"3.15. (Contributed by Erlend E. Aasland in :gh:`108278`.)"
msgstr ""
"Descontinuar a passagem do nome, número de argumentos e do objeto chamável "
"como argumentos de palavra-chave para :meth:`.Connection.create_function` e :"
"meth:`.Connection.create_aggregate`. Estes parâmetros tornar-se-ão apenas "
"posicionais no Python 3.15. (Contribuído por Erlend E. Aasland em :gh:"
"`108278`.)"

#: ../../whatsnew/3.13.rst:1959
msgid ""
"Deprecate passing the callback callable by keyword for the :meth:`~sqlite3."
"Connection.set_authorizer`, :meth:`~sqlite3.Connection."
"set_progress_handler`, and :meth:`~sqlite3.Connection.set_trace_callback` :"
"class:`~sqlite3.Connection` methods. The callback callables will become "
"positional-only in Python 3.15. (Contributed by Erlend E. Aasland in :gh:"
"`108278`.)"
msgstr ""
"Descontinuar a passagem do objeto chamável de retorno de chamada por palavra-"
"chave para os métodos :meth:`~sqlite3.Connection.set_authorizer`, :meth:"
"`~sqlite3.Connection.set_progress_handler` e :meth:`~sqlite3.Connection."
"set_trace_callback` da classe :class:`~sqlite3.Connection`. Os objetos "
"chamáveis de retorno de chamada tornar-se-ão apenas posicionais no Python "
"3.15. (Contribuído por Erlend E. Aasland em :gh:`108278`.)"

#: ../../whatsnew/3.13.rst:1967
#: ../../deprecations/pending-removal-in-3.16.rst:47
msgid ":mod:`sys`:"
msgstr ":mod:`sys`:"

#: ../../whatsnew/3.13.rst:1969
msgid ""
"Deprecate the :func:`~sys._enablelegacywindowsfsencoding` function, to be "
"removed in Python 3.16. Use the :envvar:`PYTHONLEGACYWINDOWSFSENCODING` "
"environment variable instead. (Contributed by Inada Naoki in :gh:`73427`.)"
msgstr ""
"Descontinuar a função :func:`~sys._enablelegacywindowsfsencoding`, que será "
"removida no Python 3.16. Use a variável de ambiente :envvar:"
"`PYTHONLEGACYWINDOWSFSENCODING` em vez disso. (Contribuído por Inada Naoki "
"em :gh:`73427`.)"

#: ../../whatsnew/3.13.rst:1974
#: ../../deprecations/pending-removal-in-3.16.rst:53
msgid ":mod:`tarfile`:"
msgstr ":mod:`tarfile`:"

#: ../../whatsnew/3.13.rst:1976
msgid ""
"Deprecate the undocumented and unused :attr:`!TarFile.tarfile` attribute, to "
"be removed in Python 3.16. (Contributed in :gh:`115256`.)"
msgstr ""
"Descontinuar o atributo indocumentado e não utilizado :attr:`!TarFile."
"tarfile`, que será removido no Python 3.16. (Contribuído em :gh:`115256`.)"

#: ../../whatsnew/3.13.rst:1980
msgid ":mod:`traceback`:"
msgstr ":mod:`traceback`:"

#: ../../whatsnew/3.13.rst:1982
msgid ""
"Deprecate the :attr:`.TracebackException.exc_type` attribute. Use :attr:`."
"TracebackException.exc_type_str` instead. (Contributed by Irit Katriel in :"
"gh:`112332`.)"
msgstr ""
"Descontinuar o atributo :attr:`.TracebackException.exc_type`. Use :attr:`."
"TracebackException.exc_type_str` em vez disso. (Contribuído por Irit Katriel "
"em :gh:`112332`.)"

#: ../../whatsnew/3.13.rst:1986
#: ../../deprecations/pending-removal-in-3.15.rst:80
#: ../../deprecations/pending-removal-in-3.17.rst:26
msgid ":mod:`typing`:"
msgstr ":mod:`typing`:"

#: ../../whatsnew/3.13.rst:1988
msgid ""
"Deprecate the undocumented keyword argument syntax for creating :class:"
"`~typing.NamedTuple` classes (e.g. ``Point = NamedTuple(\"Point\", x=int, "
"y=int)``), to be removed in Python 3.15. Use the class-based syntax or the "
"functional syntax instead. (Contributed by Alex Waygood in :gh:`105566`.)"
msgstr ""
"Descontinuar a sintaxe de argumento de palavra-chave indocumentada para "
"criar classes :class:`~typing.NamedTuple` (por exemplo, ``Point = "
"NamedTuple(\"Point\", x=int, y=int)``), que será removida no Python 3.15. "
"Use a sintaxe baseada em classes ou a sintaxe funcional em vez disso. "
"(Contribuído por Alex Waygood em :gh:`105566`.)"

#: ../../whatsnew/3.13.rst:1995
msgid ""
"Deprecate omitting the *fields* parameter when creating a :class:`~typing."
"NamedTuple` or :class:`typing.TypedDict` class, and deprecate passing "
"``None`` to the *fields* parameter of both types. Python 3.15 will require a "
"valid sequence for the *fields* parameter. To create a NamedTuple class with "
"zero fields, use ``class NT(NamedTuple): pass`` or ``NT = NamedTuple(\"NT\", "
"())``. To create a TypedDict class with zero fields, use ``class "
"TD(TypedDict): pass`` or ``TD = TypedDict(\"TD\", {})``. (Contributed by "
"Alex Waygood in :gh:`105566` and :gh:`105570`.)"
msgstr ""
"Descontinuar a omissão do parâmetro *fields* ao criar uma classe :class:"
"`~typing.NamedTuple` ou :class:`typing.TypedDict`, e descontinuar a passagem "
"de ``None`` para o parâmetro *fields* de ambos os tipos. O Python 3.15 "
"exigirá uma sequência válida para o parâmetro *fields*. Para criar uma "
"classe NamedTuple com zero campos, use ``class NT(NamedTuple): pass`` ou "
"``NT = NamedTuple(\"NT\", ())``. Para criar uma classe TypedDict com zero "
"campos, use ``class TD(TypedDict): pass`` ou ``TD = TypedDict(\"TD\", {})``. "
"(Contribuído por Alex Waygood em :gh:`105566` e :gh:`105570`.)"

#: ../../whatsnew/3.13.rst:2005
msgid ""
"Deprecate the :func:`typing.no_type_check_decorator` decorator function, to "
"be removed in Python 3.15. After eight years in the :mod:`typing` module, it "
"has yet to be supported by any major type checker. (Contributed by Alex "
"Waygood in :gh:`106309`.)"
msgstr ""
"Descontinuar a função decoradora :func:`typing.no_type_check_decorator`, que "
"será removida no Python 3.15. Após oito anos no módulo :mod:`typing`, ainda "
"não é suportada por nenhum verificador de tipos principal. (Contribuído por "
"Alex Waygood em :gh:`106309`.)"

#: ../../whatsnew/3.13.rst:2011
msgid ""
"Deprecate :data:`typing.AnyStr`. In Python 3.16, it will be removed from "
"``typing.__all__``, and a :exc:`DeprecationWarning` will be emitted at "
"runtime when it is imported or accessed. It will be removed entirely in "
"Python 3.18. Use the new :ref:`type parameter syntax <type-params>` instead. "
"(Contributed by Michael The in :gh:`107116`.)"
msgstr ""
"Descontinuar :data:`typing.AnyStr`. No Python 3.16, será removido de "
"``typing.__all__`` e um :exc:`DeprecationWarning` será emitido em tempo de "
"execução quando for importado ou acedido. Será removido completamente no "
"Python 3.18. Use a nova sintaxe :ref:`parâmetros de tipo <type-params>` em "
"vez disso. (Contribuído por Michael The em :gh:`107116`.)"

#: ../../whatsnew/3.13.rst:2019
#: ../../deprecations/pending-removal-in-3.15.rst:100
msgid ":mod:`wave`:"
msgstr ":mod:`wave`:"

#: ../../whatsnew/3.13.rst:2021
msgid ""
"Deprecate the :meth:`~wave.Wave_read.getmark`, :meth:`!setmark`, and :meth:"
"`~wave.Wave_read.getmarkers` methods of the :class:`~wave.Wave_read` and :"
"class:`~wave.Wave_write` classes, to be removed in Python 3.15. (Contributed "
"by Victor Stinner in :gh:`105096`.)"
msgstr ""
"Descontinuar os métodos :meth:`~wave.Wave_read.getmark`, :meth:`!setmark` e :"
"meth:`~wave.Wave_read.getmarkers` das classes :class:`~wave.Wave_read` e :"
"class:`~wave.Wave_write`, que serão removidos no Python 3.15. (Contribuído "
"por Victor Stinner em :gh:`105096`.)"

#: ../../deprecations/c-api-pending-removal-in-3.14.rst:2
#: ../../deprecations/pending-removal-in-3.14.rst:2
msgid "Pending Removal in Python 3.14"
msgstr ""

#: ../../deprecations/pending-removal-in-3.14.rst:4
msgid ""
":mod:`argparse`: The *type*, *choices*, and *metavar* parameters of :class:`!"
"argparse.BooleanOptionalAction` are deprecated and will be removed in 3.14. "
"(Contributed by Nikita Sobolev in :gh:`92248`.)"
msgstr ""
":mod:`argparse`: Os parâmetros *type*, *choices* e *metavar* de :class:`!"
"argparse.BooleanOptionalAction` estão obsoletos e serão removidos no 3.14. "
"(Contribuído por Nikita Sobolev em :gh:`92248`.)"

#: ../../deprecations/pending-removal-in-3.14.rst:9
msgid ""
":mod:`ast`: The following features have been deprecated in documentation "
"since Python 3.8, now cause a :exc:`DeprecationWarning` to be emitted at "
"runtime when they are accessed or used, and will be removed in Python 3.14:"
msgstr ""
":mod:`ast`: As seguintes funcionalidades estão obsoletas na documentação "
"desde o Python 3.8, agora fazem com que um :exc:`DeprecationWarning` seja "
"emitido em tempo de execução quando são acedidas ou usadas, e serão "
"removidas no Python 3.14:"

#: ../../deprecations/pending-removal-in-3.14.rst:13
msgid ":class:`!ast.Num`"
msgstr ":class:`!ast.Num`"

#: ../../deprecations/pending-removal-in-3.14.rst:14
msgid ":class:`!ast.Str`"
msgstr ":class:`!ast.Str`"

#: ../../deprecations/pending-removal-in-3.14.rst:15
msgid ":class:`!ast.Bytes`"
msgstr ":class:`!ast.Bytes`"

#: ../../deprecations/pending-removal-in-3.14.rst:16
msgid ":class:`!ast.NameConstant`"
msgstr ":class:`!ast.NameConstant`"

#: ../../deprecations/pending-removal-in-3.14.rst:17
msgid ":class:`!ast.Ellipsis`"
msgstr ":class:`!ast.Ellipsis`"

#: ../../deprecations/pending-removal-in-3.14.rst:19
msgid ""
"Use :class:`ast.Constant` instead. (Contributed by Serhiy Storchaka in :gh:"
"`90953`.)"
msgstr ""
"Use :class:`ast.Constant` em vez disso. (Contribuído por Serhiy Storchaka "
"em :gh:`90953`.)"

#: ../../deprecations/pending-removal-in-3.14.rst:22
#: ../../deprecations/pending-removal-in-3.16.rst:19
msgid ":mod:`asyncio`:"
msgstr ":mod:`asyncio`:"

#: ../../deprecations/pending-removal-in-3.14.rst:24
msgid ""
"The child watcher classes :class:`~asyncio.MultiLoopChildWatcher`, :class:"
"`~asyncio.FastChildWatcher`, :class:`~asyncio.AbstractChildWatcher` and :"
"class:`~asyncio.SafeChildWatcher` are deprecated and will be removed in "
"Python 3.14. (Contributed by Kumar Aditya in :gh:`94597`.)"
msgstr ""

#: ../../deprecations/pending-removal-in-3.14.rst:30
msgid ""
":func:`asyncio.set_child_watcher`, :func:`asyncio.get_child_watcher`, :meth:"
"`asyncio.AbstractEventLoopPolicy.set_child_watcher` and :meth:`asyncio."
"AbstractEventLoopPolicy.get_child_watcher` are deprecated and will be "
"removed in Python 3.14. (Contributed by Kumar Aditya in :gh:`94597`.)"
msgstr ""

#: ../../deprecations/pending-removal-in-3.14.rst:36
msgid ""
"The :meth:`~asyncio.get_event_loop` method of the default event loop policy "
"now emits a :exc:`DeprecationWarning` if there is no current event loop set "
"and it decides to create one. (Contributed by Serhiy Storchaka and Guido van "
"Rossum in :gh:`100160`.)"
msgstr ""
"O método :meth:`~asyncio.get_event_loop` da política de loop de eventos "
"predefinida agora emite um :exc:`DeprecationWarning` se não houver um loop "
"de eventos atual definido e decidir criar um. (Contribuído por Serhiy "
"Storchaka e Guido van Rossum em :gh:`100160`.)"

#: ../../deprecations/pending-removal-in-3.14.rst:41
msgid ""
":mod:`builtins`: ``bool(NotImplemented)`` now emits a :exc:"
"`DeprecationWarning` and will raise a :exc:`TypeError` in Python 3.14. "
"(Contributed by Jelle Zijlstra in :gh:`118767`.)"
msgstr ""

#: ../../deprecations/pending-removal-in-3.14.rst:45
msgid ""
":mod:`email`: Deprecated the *isdst* parameter in :func:`email.utils."
"localtime`. (Contributed by Alan Williams in :gh:`72346`.)"
msgstr ""
":mod:`email`: O parâmetro *isdst* em :func:`email.utils.localtime` está "
"obsoleto. (Contribuído por Alan Williams em :gh:`72346`.)"

#: ../../deprecations/pending-removal-in-3.14.rst:48
msgid ":mod:`importlib.abc` deprecated classes:"
msgstr "Classes obsoletas de :mod:`importlib.abc`:"

#: ../../deprecations/pending-removal-in-3.14.rst:50
msgid ":class:`!importlib.abc.ResourceReader`"
msgstr ":class:`!importlib.abc.ResourceReader`"

#: ../../deprecations/pending-removal-in-3.14.rst:51
msgid ":class:`!importlib.abc.Traversable`"
msgstr ":class:`!importlib.abc.Traversable`"

#: ../../deprecations/pending-removal-in-3.14.rst:52
msgid ":class:`!importlib.abc.TraversableResources`"
msgstr ":class:`!importlib.abc.TraversableResources`"

#: ../../deprecations/pending-removal-in-3.14.rst:54
msgid "Use :mod:`importlib.resources.abc` classes instead:"
msgstr "Use as classes :mod:`importlib.resources.abc` em vez disso:"

#: ../../deprecations/pending-removal-in-3.14.rst:56
msgid ":class:`importlib.resources.abc.Traversable`"
msgstr ":class:`importlib.resources.abc.Traversable`"

#: ../../deprecations/pending-removal-in-3.14.rst:57
msgid ":class:`importlib.resources.abc.TraversableResources`"
msgstr ":class:`importlib.resources.abc.TraversableResources`"

#: ../../deprecations/pending-removal-in-3.14.rst:59
msgid "(Contributed by Jason R. Coombs and Hugo van Kemenade in :gh:`93963`.)"
msgstr "(Contribuído por Jason R. Coombs e Hugo van Kemenade em :gh:`93963`.)"

#: ../../deprecations/pending-removal-in-3.14.rst:61
msgid ""
":mod:`itertools` had undocumented, inefficient, historically buggy, and "
"inconsistent support for copy, deepcopy, and pickle operations. This will be "
"removed in 3.14 for a significant reduction in code volume and maintenance "
"burden. (Contributed by Raymond Hettinger in :gh:`101588`.)"
msgstr ""
":mod:`itertools` tinha suporte indocumentado, ineficiente, historicamente "
"problemático e inconsistente para operações de cópia, deepcopy e pickle. "
"Isto será removido no 3.14 para uma redução significativa no volume de "
"código e na carga de manutenção. (Contribuído por Raymond Hettinger em :gh:"
"`101588`.)"

#: ../../deprecations/pending-removal-in-3.14.rst:67
msgid ""
":mod:`multiprocessing`: The default start method will change to a safer one "
"on Linux, BSDs, and other non-macOS POSIX platforms where ``'fork'`` is "
"currently the default (:gh:`84559`). Adding a runtime warning about this was "
"deemed too disruptive as the majority of code is not expected to care. Use "
"the :func:`~multiprocessing.get_context` or :func:`~multiprocessing."
"set_start_method` APIs to explicitly specify when your code *requires* "
"``'fork'``.  See :ref:`multiprocessing-start-methods`."
msgstr ""
":mod:`multiprocessing`: O método de início predefinido mudará para um mais "
"seguro no Linux, BSDs e outras plataformas POSIX não-macOS onde ``'fork'`` é "
"atualmente o predefinido (:gh:`84559`). A adição de um aviso em tempo de "
"execução sobre isto foi considerada demasiado perturbadora, uma vez que a "
"maioria do código não é esperado que se importe. Use as APIs :func:"
"`~multiprocessing.get_context` ou :func:`~multiprocessing.set_start_method` "
"para especificar explicitamente quando o seu código *requer* ``'fork'``. "
"Consulte :ref:`multiprocessing-start-methods`."

#: ../../deprecations/pending-removal-in-3.14.rst:75
msgid ""
":mod:`pathlib`: :meth:`~pathlib.PurePath.is_relative_to` and :meth:`~pathlib."
"PurePath.relative_to`: passing additional arguments is deprecated."
msgstr ""
":mod:`pathlib`: :meth:`~pathlib.PurePath.is_relative_to` e :meth:`~pathlib."
"PurePath.relative_to`: passar argumentos adicionais está obsoleto."

#: ../../deprecations/pending-removal-in-3.14.rst:79
msgid ""
":mod:`pkgutil`: :func:`~pkgutil.find_loader` and :func:`~pkgutil.get_loader` "
"now raise :exc:`DeprecationWarning`; use :func:`importlib.util.find_spec` "
"instead. (Contributed by Nikita Sobolev in :gh:`97850`.)"
msgstr ""

#: ../../deprecations/pending-removal-in-3.14.rst:84
msgid ":mod:`pty`:"
msgstr ":mod:`pty`:"

#: ../../deprecations/pending-removal-in-3.14.rst:86
msgid "``master_open()``: use :func:`pty.openpty`."
msgstr "``master_open()``: use :func:`pty.openpty`."

#: ../../deprecations/pending-removal-in-3.14.rst:87
msgid "``slave_open()``: use :func:`pty.openpty`."
msgstr "``slave_open()``: use :func:`pty.openpty`."

#: ../../deprecations/pending-removal-in-3.14.rst:91
msgid ":data:`~sqlite3.version` and :data:`~sqlite3.version_info`."
msgstr ""

#: ../../deprecations/pending-removal-in-3.14.rst:93
msgid ""
":meth:`~sqlite3.Cursor.execute` and :meth:`~sqlite3.Cursor.executemany` if :"
"ref:`named placeholders <sqlite3-placeholders>` are used and *parameters* is "
"a sequence instead of a :class:`dict`."
msgstr ""
":meth:`~sqlite3.Cursor.execute` e :meth:`~sqlite3.Cursor.executemany` se os :"
"ref:`placeholders nomeados <sqlite3-placeholders>` forem usados e "
"*parameters* for uma sequência em vez de um :class:`dict`."

#: ../../deprecations/pending-removal-in-3.14.rst:97
msgid ""
":mod:`urllib`: :class:`!urllib.parse.Quoter` is deprecated: it was not "
"intended to be a public API. (Contributed by Gregory P. Smith in :gh:"
"`88168`.)"
msgstr ""
":mod:`urllib`: :class:`!urllib.parse.Quoter` está obsoleto: não era "
"destinado a ser uma API pública. (Contribuído por Gregory P. Smith em :gh:"
"`88168`.)"

#: ../../deprecations/c-api-pending-removal-in-3.15.rst:2
#: ../../deprecations/pending-removal-in-3.15.rst:2
msgid "Pending Removal in Python 3.15"
msgstr ""

#: ../../deprecations/pending-removal-in-3.15.rst:4
#: ../../deprecations/pending-removal-in-3.16.rst:4
msgid "The import system:"
msgstr "O sistema de importação:"

#: ../../deprecations/pending-removal-in-3.15.rst:6
msgid ""
"Setting :attr:`~module.__cached__` on a module while failing to set :attr:"
"`__spec__.cached <importlib.machinery.ModuleSpec.cached>` is deprecated. In "
"Python 3.15, :attr:`!__cached__` will cease to be set or take into "
"consideration by the import system or standard library. (:gh:`97879`)"
msgstr ""
"A definição de :attr:`~module.__cached__` num módulo enquanto falha ao "
"definir :attr:`__spec__.cached <importlib.machinery.ModuleSpec.cached>` está "
"obsoleta. No Python 3.15, :attr:`!__cached__` deixará de ser definido ou "
"considerado pelo sistema de importação ou biblioteca padrão. (:gh:`97879`)"

#: ../../deprecations/pending-removal-in-3.15.rst:11
msgid ""
"Setting :attr:`~module.__package__` on a module while failing to set :attr:"
"`__spec__.parent <importlib.machinery.ModuleSpec.parent>` is deprecated. In "
"Python 3.15, :attr:`!__package__` will cease to be set or take into "
"consideration by the import system or standard library. (:gh:`97879`)"
msgstr ""
"A definição de :attr:`~module.__package__` num módulo enquanto falha ao "
"definir :attr:`__spec__.parent <importlib.machinery.ModuleSpec.parent>` está "
"obsoleta. No Python 3.15, :attr:`!__package__` deixará de ser definido ou "
"considerado pelo sistema de importação ou biblioteca padrão. (:gh:`97879`)"

#: ../../deprecations/pending-removal-in-3.15.rst:18
msgid ""
"The undocumented :func:`!ctypes.SetPointerType` function has been deprecated "
"since Python 3.13."
msgstr ""
"A função indocumentada :func:`!ctypes.SetPointerType` está obsoleta desde o "
"Python 3.13."

#: ../../deprecations/pending-removal-in-3.15.rst:23
msgid ""
"The obsolete and rarely used :class:`~http.server.CGIHTTPRequestHandler` has "
"been deprecated since Python 3.13. No direct replacement exists. *Anything* "
"is better than CGI to interface a web server with a request handler."
msgstr ""
"O :class:`~http.server.CGIHTTPRequestHandler`, obsoleto e raramente usado, "
"está obsoleto desde o Python 3.13. Não existe uma substituição direta. "
"*Qualquer coisa* é melhor do que CGI para interfacear um servidor web com um "
"manipulador de pedidos."

#: ../../deprecations/pending-removal-in-3.15.rst:29
msgid ""
"The :option:`!--cgi` flag to the :program:`python -m http.server` command-"
"line interface has been deprecated since Python 3.13."
msgstr ""
"A flag :option:`!--cgi` para a interface de linha de comandos :program:"
"`python -m http.server` está obsoleta desde o Python 3.13."

#: ../../deprecations/pending-removal-in-3.15.rst:32
#: ../../deprecations/pending-removal-in-future.rst:55
msgid ":mod:`importlib`:"
msgstr ":mod:`importlib`:"

#: ../../deprecations/pending-removal-in-3.15.rst:34
msgid "``load_module()`` method: use ``exec_module()`` instead."
msgstr "Método ``load_module()``: use ``exec_module()`` em vez disso."

#: ../../deprecations/pending-removal-in-3.15.rst:36
msgid ":class:`locale`:"
msgstr ":class:`locale`:"

#: ../../deprecations/pending-removal-in-3.15.rst:38
msgid ""
"The :func:`~locale.getdefaultlocale` function has been deprecated since "
"Python 3.11. Its removal was originally planned for Python 3.13 (:gh:"
"`90817`), but has been postponed to Python 3.15. Use :func:`~locale."
"getlocale`, :func:`~locale.setlocale`, and :func:`~locale.getencoding` "
"instead. (Contributed by Hugo van Kemenade in :gh:`111187`.)"
msgstr ""
"A função :func:`~locale.getdefaultlocale` está obsoleta desde o Python 3.11. "
"A sua remoção estava originalmente planeada para o Python 3.13 (:gh:"
"`90817`), mas foi adiada para o Python 3.15. Use :func:`~locale.getlocale`, :"
"func:`~locale.setlocale` e :func:`~locale.getencoding` em vez disso. "
"(Contribuído por Hugo van Kemenade em :gh:`111187`.)"

#: ../../deprecations/pending-removal-in-3.15.rst:48
msgid ""
":meth:`.PurePath.is_reserved` has been deprecated since Python 3.13. Use :"
"func:`os.path.isreserved` to detect reserved paths on Windows."
msgstr ""
":meth:`.PurePath.is_reserved` está obsoleto desde o Python 3.13. Use :func:"
"`os.path.isreserved` para detetar caminhos reservados no Windows."

#: ../../deprecations/pending-removal-in-3.15.rst:54
msgid ""
":func:`~platform.java_ver` has been deprecated since Python 3.13. This "
"function is only useful for Jython support, has a confusing API, and is "
"largely untested."
msgstr ""
"A função :func:`~platform.java_ver` está obsoleta desde o Python 3.13. Esta "
"função é útil apenas para suporte ao Jython, tem uma API confusa e é em "
"grande parte não testada."

#: ../../deprecations/pending-removal-in-3.15.rst:58
msgid ":mod:`sysconfig`:"
msgstr ":mod:`sysconfig`:"

#: ../../deprecations/pending-removal-in-3.15.rst:60
msgid ""
"The *check_home* argument of :func:`sysconfig.is_python_build` has been "
"deprecated since Python 3.12."
msgstr ""
"O argumento *check_home* de :func:`sysconfig.is_python_build` está obsoleto "
"desde o Python 3.12."

#: ../../deprecations/pending-removal-in-3.15.rst:63
msgid ":mod:`threading`:"
msgstr ":mod:`threading`:"

#: ../../deprecations/pending-removal-in-3.15.rst:65
msgid ""
":func:`~threading.RLock` will take no arguments in Python 3.15. Passing any "
"arguments has been deprecated since Python 3.14, as the  Python version does "
"not permit any arguments, but the C version allows any number of positional "
"or keyword arguments, ignoring every argument."
msgstr ""
":func:`~threading.RLock` não aceitará argumentos no Python 3.15. Passar "
"quaisquer argumentos está obsoleto desde o Python 3.14, uma vez que a versão "
"Python não permite quaisquer argumentos, mas a versão C permite qualquer "
"número de argumentos posicionais ou de palavra-chave, ignorando todos os "
"argumentos."

#: ../../deprecations/pending-removal-in-3.15.rst:71
msgid ":mod:`types`:"
msgstr ":mod:`types`:"

#: ../../deprecations/pending-removal-in-3.15.rst:73
msgid ""
":class:`types.CodeType`: Accessing :attr:`~codeobject.co_lnotab` was "
"deprecated in :pep:`626` since 3.10 and was planned to be removed in 3.12, "
"but it only got a proper :exc:`DeprecationWarning` in 3.12. May be removed "
"in 3.15. (Contributed by Nikita Sobolev in :gh:`101866`.)"
msgstr ""
":class:`types.CodeType`: O acesso a :attr:`~codeobject.co_lnotab` foi "
"descontinuado na :pep:`626` desde o 3.10 e estava planeado para ser removido "
"no 3.12, mas só recebeu um :exc:`DeprecationWarning` adequado no 3.12. Pode "
"ser removido no 3.15. (Contribuído por Nikita Sobolev em :gh:`101866`.)"

#: ../../deprecations/pending-removal-in-3.15.rst:82
msgid ""
"The undocumented keyword argument syntax for creating :class:`~typing."
"NamedTuple` classes (e.g. ``Point = NamedTuple(\"Point\", x=int, y=int)``) "
"has been deprecated since Python 3.13. Use the class-based syntax or the "
"functional syntax instead."
msgstr ""

#: ../../deprecations/pending-removal-in-3.15.rst:88
msgid ""
"When using the functional syntax of :class:`~typing.TypedDict`\\s, failing "
"to pass a value to the *fields* parameter (``TD = TypedDict(\"TD\")``) or "
"passing ``None`` (``TD = TypedDict(\"TD\", None)``) has been deprecated "
"since Python 3.13. Use ``class TD(TypedDict): pass`` or ``TD = "
"TypedDict(\"TD\", {})`` to create a TypedDict with zero field."
msgstr ""
"Ao usar a sintaxe funcional de :class:`~typing.TypedDict`, falhar ao passar "
"um valor para o parâmetro *fields* (``TD = TypedDict(\"TD\")``) ou passar "
"``None`` (``TD = TypedDict(\"TD\", None)``) está obsoleto desde o Python "
"3.13. Use ``class TD(TypedDict): pass`` ou ``TD = TypedDict(\"TD\", {})`` "
"para criar um TypedDict com zero campos."

#: ../../deprecations/pending-removal-in-3.15.rst:95
msgid ""
"The :func:`typing.no_type_check_decorator` decorator function has been "
"deprecated since Python 3.13. After eight years in the :mod:`typing` module, "
"it has yet to be supported by any major type checker."
msgstr ""
"A função decoradora :func:`typing.no_type_check_decorator` está obsoleta "
"desde o Python 3.13. Após oito anos no módulo :mod:`typing`, ainda não é "
"suportada por nenhum verificador de tipo principal."

#: ../../deprecations/pending-removal-in-3.15.rst:102
msgid ""
"The :meth:`~wave.Wave_read.getmark`, :meth:`!setmark`, and :meth:`~wave."
"Wave_read.getmarkers` methods of the :class:`~wave.Wave_read` and :class:"
"`~wave.Wave_write` classes have been deprecated since Python 3.13."
msgstr ""
"Os métodos :meth:`~wave.Wave_read.getmark`, :meth:`!setmark` e :meth:`~wave."
"Wave_read.getmarkers` das classes :class:`~wave.Wave_read` e :class:`~wave."
"Wave_write` estão obsoletos desde o Python 3.13."

#: ../../deprecations/c-api-pending-removal-in-3.16.rst:2
#: ../../deprecations/pending-removal-in-3.16.rst:2
msgid "Pending removal in Python 3.16"
msgstr "Remoção pendente no Python 3.16"

#: ../../deprecations/pending-removal-in-3.16.rst:6
msgid ""
"Setting :attr:`~module.__loader__` on a module while failing to set :attr:"
"`__spec__.loader <importlib.machinery.ModuleSpec.loader>` is deprecated. In "
"Python 3.16, :attr:`!__loader__` will cease to be set or taken into "
"consideration by the import system or the standard library."
msgstr ""
"A definição de :attr:`~module.__loader__` num módulo enquanto falha ao "
"definir :attr:`__spec__.loader <importlib.machinery.ModuleSpec.loader>` está "
"obsoleta. No Python 3.16, :attr:`!__loader__` deixará de ser definido ou "
"considerado pelo sistema de importação ou pela biblioteca padrão."

#: ../../deprecations/pending-removal-in-3.16.rst:13
msgid ""
"The ``'u'`` format code (:c:type:`wchar_t`) has been deprecated in "
"documentation since Python 3.3 and at runtime since Python 3.13. Use the "
"``'w'`` format code (:c:type:`Py_UCS4`) for Unicode characters instead."
msgstr ""
"O código de formato ``'u'`` (:c:type:`wchar_t`) está obsoleto na "
"documentação desde o Python 3.3 e em tempo de execução desde o Python 3.13. "
"Use o código de formato ``'w'`` (:c:type:`Py_UCS4`) para caracteres Unicode "
"em vez disso."

#: ../../deprecations/pending-removal-in-3.16.rst:21
msgid ""
":func:`!asyncio.iscoroutinefunction` is deprecated and will be removed in "
"Python 3.16, use :func:`inspect.iscoroutinefunction` instead. (Contributed "
"by Jiahao Li and Kumar Aditya in :gh:`122875`.)"
msgstr ""

#: ../../deprecations/pending-removal-in-3.16.rst:26
#: ../../deprecations/pending-removal-in-future.rst:10
msgid ":mod:`builtins`:"
msgstr ":mod:`builtins`:"

#: ../../deprecations/pending-removal-in-3.16.rst:28
msgid ""
"Bitwise inversion on boolean types, ``~True`` or ``~False`` has been "
"deprecated since Python 3.12, as it produces surprising and unintuitive "
"results (``-2`` and ``-1``). Use ``not x`` instead for the logical negation "
"of a Boolean. In the rare case that you need the bitwise inversion of the "
"underlying integer, convert to ``int`` explicitly (``~int(x)``)."
msgstr ""
"A inversão bit a bit em tipos booleanos, ``~True`` ou ``~False``, foi "
"descontinuada desde o Python 3.12, pois produz resultados surpreendentes e "
"pouco intuitivos (``-2`` e ``-1``). Use ``not x`` em vez disso para a "
"negação lógica de um booleano. No caso raro em que você precisar da inversão "
"bit a bit do inteiro subjacente, converta para ``int`` explicitamente "
"(``~int(x)``)."

#: ../../deprecations/pending-removal-in-3.16.rst:35
msgid ":mod:`shutil`:"
msgstr ":mod:`shutil`:"

#: ../../deprecations/pending-removal-in-3.16.rst:37
msgid ""
"The :class:`!ExecError` exception has been deprecated since Python 3.14. It "
"has not been used by any function in :mod:`!shutil` since Python 3.4, and is "
"now an alias of :exc:`RuntimeError`."
msgstr ""
"A exceção :class:`!ExecError` está obsoleta desde o Python 3.14. Não tem "
"sido usada por nenhuma função em :mod:`!shutil` desde o Python 3.4 e é agora "
"um alias de :exc:`RuntimeError`."

#: ../../deprecations/pending-removal-in-3.16.rst:42
msgid ":mod:`symtable`:"
msgstr ":mod:`symtable`:"

#: ../../deprecations/pending-removal-in-3.16.rst:44
msgid ""
"The :meth:`Class.get_methods <symtable.Class.get_methods>` method has been "
"deprecated since Python 3.14."
msgstr ""
"O método :meth:`Class.get_methods <symtable.Class.get_methods>` está "
"obsoleto desde o Python 3.14."

#: ../../deprecations/pending-removal-in-3.16.rst:49
msgid ""
"The :func:`~sys._enablelegacywindowsfsencoding` function has been deprecated "
"since Python 3.13. Use the :envvar:`PYTHONLEGACYWINDOWSFSENCODING` "
"environment variable instead."
msgstr ""
"A função :func:`~sys._enablelegacywindowsfsencoding` foi descontinuada desde "
"o Python 3.13. Use a variável de ambiente :envvar:"
"`PYTHONLEGACYWINDOWSFSENCODING` em vez disso."

#: ../../deprecations/pending-removal-in-3.16.rst:55
msgid ""
"The undocumented and unused :attr:`!TarFile.tarfile` attribute has been "
"deprecated since Python 3.13."
msgstr ""
"O atributo indocumentado e não utilizado :attr:`!TarFile.tarfile` está "
"obsoleto desde o Python 3.13."

#: ../../deprecations/pending-removal-in-3.17.rst:2
msgid "Pending removal in Python 3.17"
msgstr "Remoção pendente no Python 3.17"

#: ../../deprecations/pending-removal-in-3.17.rst:4
msgid ":mod:`collections.abc`:"
msgstr ":mod:`collections.abc`:"

#: ../../deprecations/pending-removal-in-3.17.rst:6
msgid ""
":class:`collections.abc.ByteString` is scheduled for removal in Python 3.17."
msgstr ""
":class:`collections.abc.ByteString` está agendado para remoção no Python "
"3.17."

#: ../../deprecations/pending-removal-in-3.17.rst:8
#: ../../deprecations/pending-removal-in-3.17.rst:36
msgid ""
"Use ``isinstance(obj, collections.abc.Buffer)`` to test if ``obj`` "
"implements the :ref:`buffer protocol <bufferobjects>` at runtime. For use in "
"type annotations, either use :class:`~collections.abc.Buffer` or a union "
"that explicitly specifies the types your code supports (e.g., ``bytes | "
"bytearray | memoryview``)."
msgstr ""
"Use ``isinstance(obj, collections.abc.Buffer)`` para testar se ``obj`` "
"implementa o :ref:`protocolo de buffer <bufferobjects>` em tempo de "
"execução. Para uso em anotações de tipo, use :class:`~collections.abc."
"Buffer` ou uma união que especifique explicitamente os tipos que o seu "
"código suporta (por exemplo, ``bytes | bytearray | memoryview``)."

#: ../../deprecations/pending-removal-in-3.17.rst:14
#: ../../deprecations/pending-removal-in-3.17.rst:42
msgid ""
":class:`!ByteString` was originally intended to be an abstract class that "
"would serve as a supertype of both :class:`bytes` and :class:`bytearray`. "
"However, since the ABC never had any methods, knowing that an object was an "
"instance of :class:`!ByteString` never actually told you anything useful "
"about the object. Other common buffer types such as :class:`memoryview` were "
"also never understood as subtypes of :class:`!ByteString` (either at runtime "
"or by static type checkers)."
msgstr ""
":class:`!ByteString` foi originalmente concebida para ser uma classe "
"abstrata que serviria como supertipo de :class:`bytes` e :class:`bytearray`. "
"No entanto, uma vez que a ABC nunca teve quaisquer métodos, saber que um "
"objeto era uma instância de :class:`!ByteString` nunca lhe dizia nada de "
"útil sobre o objeto. Outros tipos comuns de buffer, como :class:"
"`memoryview`, também nunca foram compreendidos como subtipos de :class:`!"
"ByteString` (nem em tempo de execução nem por verificadores de tipo "
"estáticos)."

#: ../../deprecations/pending-removal-in-3.17.rst:22
#: ../../deprecations/pending-removal-in-3.17.rst:50
msgid ""
"See :pep:`PEP 688 <688#current-options>` for more details. (Contributed by "
"Shantanu Jain in :gh:`91896`.)"
msgstr ""
"Consulte :pep:`PEP 688 <688#current-options>` para mais detalhes. "
"(Contribuído por Shantanu Jain em :gh:`91896`.)"

#: ../../deprecations/pending-removal-in-3.17.rst:28
msgid ""
"Before Python 3.14, old-style unions were implemented using the private "
"class ``typing._UnionGenericAlias``. This class is no longer needed for the "
"implementation, but it has been retained for backward compatibility, with "
"removal scheduled for Python 3.17. Users should use documented introspection "
"helpers like :func:`typing.get_origin` and :func:`typing.get_args` instead "
"of relying on private implementation details."
msgstr ""
"Antes do Python 3.14, as uniões no estilo antigo eram implementadas usando a "
"classe privada ``typing._UnionGenericAlias``. Esta classe já não é "
"necessária para a implementação, mas foi mantida por compatibilidade "
"retroativa, com remoção agendada para o Python 3.17. Os utilizadores devem "
"usar auxiliares de introspeção documentados como :func:`typing.get_origin` "
"e :func:`typing.get_args` em vez de depender de detalhes de implementação "
"privados."

#: ../../deprecations/pending-removal-in-3.17.rst:33
msgid ""
":class:`typing.ByteString`, deprecated since Python 3.9, is scheduled for "
"removal in Python 3.17."
msgstr ""
":class:`typing.ByteString`, obsoleto desde o Python 3.9, está agendado para "
"remoção no Python 3.17."

#: ../../deprecations/c-api-pending-removal-in-future.rst:2
#: ../../deprecations/pending-removal-in-future.rst:2
msgid "Pending Removal in Future Versions"
msgstr ""

#: ../../deprecations/pending-removal-in-future.rst:4
msgid ""
"The following APIs will be removed in the future, although there is "
"currently no date scheduled for their removal."
msgstr ""
"As seguintes APIs serão removidas no futuro, embora ainda não haja uma data "
"prevista para a sua remoção."

#: ../../deprecations/pending-removal-in-future.rst:7
msgid ""
":mod:`argparse`: Nesting argument groups and nesting mutually exclusive "
"groups are deprecated."
msgstr ""

#: ../../deprecations/pending-removal-in-future.rst:12
msgid ""
"Generators: ``throw(type, exc, tb)`` and ``athrow(type, exc, tb)`` signature "
"is deprecated: use ``throw(exc)`` and ``athrow(exc)`` instead, the single "
"argument signature."
msgstr ""
"Geradores: a assinatura ``throw(type, exc, tb)`` e ``athrow(type, exc, tb)`` "
"está obsoleta: use ``throw(exc)`` e ``athrow(exc)`` em vez disso, a "
"assinatura de argumento único."

#: ../../deprecations/pending-removal-in-future.rst:15
msgid ""
"Currently Python accepts numeric literals immediately followed by keywords, "
"for example ``0in x``, ``1or x``, ``0if 1else 2``.  It allows confusing and "
"ambiguous expressions like ``[0x1for x in y]`` (which can be interpreted as "
"``[0x1 for x in y]`` or ``[0x1f or x in y]``).  A syntax warning is raised "
"if the numeric literal is immediately followed by one of keywords :keyword:"
"`and`, :keyword:`else`, :keyword:`for`, :keyword:`if`, :keyword:`in`, :"
"keyword:`is` and :keyword:`or`.  In a future release it will be changed to a "
"syntax error. (:gh:`87999`)"
msgstr ""
"Atualmente, o Python aceita literais numéricos imediatamente seguidos de "
"palavras-chave, por exemplo ``0in x``, ``1or x``, ``0if 1else 2``. Isto "
"permite expressões confusas e ambíguas como ``[0x1for x in y]`` (que pode "
"ser interpretado como ``[0x1 for x in y]`` ou ``[0x1f or x in y]``). Um "
"aviso de sintaxe é levantado se o literal numérico for imediatamente seguido "
"por uma das palavras-chave :keyword:`and`, :keyword:`else`, :keyword:`for`, :"
"keyword:`if`, :keyword:`in`, :keyword:`is` e :keyword:`or`. Numa versão "
"futura, isto será alterado para um erro de sintaxe. (:gh:`87999`)"

#: ../../deprecations/pending-removal-in-future.rst:23
msgid ""
"Support for ``__index__()`` and ``__int__()`` method returning non-int type: "
"these methods will be required to return an instance of a strict subclass "
"of :class:`int`."
msgstr ""
"Suporte para métodos ``__index__()`` e ``__int__()`` que retornam um tipo "
"não-int: estes métodos serão obrigados a retornar uma instância de uma "
"subclasse estrita de :class:`int`."

#: ../../deprecations/pending-removal-in-future.rst:26
msgid ""
"Support for ``__float__()`` method returning a strict subclass of :class:"
"`float`: these methods will be required to return an instance of :class:"
"`float`."
msgstr ""
"Suporte para o método ``__float__()`` que retorna uma subclasse estrita de :"
"class:`float`: estes métodos serão obrigados a retornar uma instância de :"
"class:`float`."

#: ../../deprecations/pending-removal-in-future.rst:29
msgid ""
"Support for ``__complex__()`` method returning a strict subclass of :class:"
"`complex`: these methods will be required to return an instance of :class:"
"`complex`."
msgstr ""
"Suporte para o método ``__complex__()`` que retorna uma subclasse estrita "
"de :class:`complex`: estes métodos serão obrigados a retornar uma instância "
"de :class:`complex`."

#: ../../deprecations/pending-removal-in-future.rst:32
msgid "Delegation of ``int()`` to ``__trunc__()`` method."
msgstr "Delegação de ``int()`` ao método ``__trunc__()``."

#: ../../deprecations/pending-removal-in-future.rst:33
msgid ""
"Passing a complex number as the *real* or *imag* argument in the :func:"
"`complex` constructor is now deprecated; it should only be passed as a "
"single positional argument. (Contributed by Serhiy Storchaka in :gh:"
"`109218`.)"
msgstr ""
"Passar um número complexo como argumento *real* ou *imag* no construtor :"
"func:`complex` está agora obsoleto; deve ser passado apenas como um "
"argumento posicional único. (Contribuído por Serhiy Storchaka em :gh:"
"`109218`.)"

#: ../../deprecations/pending-removal-in-future.rst:38
msgid ""
":mod:`calendar`: ``calendar.January`` and ``calendar.February`` constants "
"are deprecated and replaced by :data:`calendar.JANUARY` and :data:`calendar."
"FEBRUARY`. (Contributed by Prince Roshan in :gh:`103636`.)"
msgstr ""
":mod:`calendar`: As constantes ``calendar.January`` e ``calendar.February`` "
"estão obsoletas e foram substituídas por :data:`calendar.JANUARY` e :data:"
"`calendar.FEBRUARY`. (Contribuído por Prince Roshan em :gh:`103636`.)"

#: ../../deprecations/pending-removal-in-future.rst:43
msgid ""
":attr:`codeobject.co_lnotab`: use the :meth:`codeobject.co_lines` method "
"instead."
msgstr ""
":attr:`codeobject.co_lnotab`: use o método :meth:`codeobject.co_lines` em "
"vez disso."

#: ../../deprecations/pending-removal-in-future.rst:46
msgid ":mod:`datetime`:"
msgstr ":mod:`datetime`:"

#: ../../deprecations/pending-removal-in-future.rst:48
msgid ""
":meth:`~datetime.datetime.utcnow`: use ``datetime.datetime.now(tz=datetime."
"UTC)``."
msgstr ""
":meth:`~datetime.datetime.utcnow`: use ``datetime.datetime.now(tz=datetime."
"UTC)``."

#: ../../deprecations/pending-removal-in-future.rst:50
msgid ""
":meth:`~datetime.datetime.utcfromtimestamp`: use ``datetime.datetime."
"fromtimestamp(timestamp, tz=datetime.UTC)``."
msgstr ""
":meth:`~datetime.datetime.utcfromtimestamp`: use ``datetime.datetime."
"fromtimestamp(timestamp, tz=datetime.UTC)``."

#: ../../deprecations/pending-removal-in-future.rst:53
msgid ":mod:`gettext`: Plural value must be an integer."
msgstr ":mod:`gettext`: O valor plural deve ser um inteiro."

#: ../../deprecations/pending-removal-in-future.rst:57
msgid ""
":func:`~importlib.util.cache_from_source` *debug_override* parameter is "
"deprecated: use the *optimization* parameter instead."
msgstr ""
"O parâmetro *debug_override* de :func:`~importlib.util.cache_from_source` "
"está obsoleto: use o parâmetro *optimization* em vez disso."

#: ../../deprecations/pending-removal-in-future.rst:60
msgid ":mod:`importlib.metadata`:"
msgstr ":mod:`importlib.metadata`:"

#: ../../deprecations/pending-removal-in-future.rst:62
msgid "``EntryPoints`` tuple interface."
msgstr "Interface de tuplo ``EntryPoints``."

#: ../../deprecations/pending-removal-in-future.rst:63
msgid "Implicit ``None`` on return values."
msgstr "``None`` implícito em valores de retorno."

#: ../../deprecations/pending-removal-in-future.rst:65
msgid ""
":mod:`logging`: the ``warn()`` method has been deprecated since Python 3.3, "
"use :meth:`~logging.warning` instead."
msgstr ""
":mod:`logging`: o método ``warn()`` está obsoleto desde o Python 3.3, use :"
"meth:`~logging.warning` em vez disso."

#: ../../deprecations/pending-removal-in-future.rst:68
msgid ""
":mod:`mailbox`: Use of StringIO input and text mode is deprecated, use "
"BytesIO and binary mode instead."
msgstr ""
":mod:`mailbox`: O uso de entrada StringIO e modo de texto está obsoleto, use "
"BytesIO e modo binário em vez disso."

#: ../../deprecations/pending-removal-in-future.rst:71
msgid ""
":mod:`os`: Calling :func:`os.register_at_fork` in multi-threaded process."
msgstr ""
":mod:`os`: Chamar :func:`os.register_at_fork` num processo multi-thread."

#: ../../deprecations/pending-removal-in-future.rst:73
msgid ""
":class:`!pydoc.ErrorDuringImport`: A tuple value for *exc_info* parameter is "
"deprecated, use an exception instance."
msgstr ""
":class:`!pydoc.ErrorDuringImport`: Um valor de tuplo para o parâmetro "
"*exc_info* está obsoleto, use uma instância de exceção."

#: ../../deprecations/pending-removal-in-future.rst:76
msgid ""
":mod:`re`: More strict rules are now applied for numerical group references "
"and group names in regular expressions.  Only sequence of ASCII digits is "
"now accepted as a numerical reference.  The group name in bytes patterns and "
"replacement strings can now only contain ASCII letters and digits and "
"underscore. (Contributed by Serhiy Storchaka in :gh:`91760`.)"
msgstr ""
":mod:`re`: Regras mais estritas são agora aplicadas para referências de "
"grupo numéricas e nomes de grupo em expressões regulares. Apenas sequências "
"de dígitos ASCII são agora aceites como referência numérica. O nome do grupo "
"em padrões de bytes e strings de substituição pode agora conter apenas "
"letras ASCII, dígitos e sublinhado. (Contribuído por Serhiy Storchaka em :gh:"
"`91760`.)"

#: ../../deprecations/pending-removal-in-future.rst:83
msgid ""
":mod:`!sre_compile`, :mod:`!sre_constants` and :mod:`!sre_parse` modules."
msgstr ""
"Módulos :mod:`!sre_compile`, :mod:`!sre_constants` e :mod:`!sre_parse`."

#: ../../deprecations/pending-removal-in-future.rst:85
msgid ""
":mod:`shutil`: :func:`~shutil.rmtree`'s *onerror* parameter is deprecated in "
"Python 3.12; use the *onexc* parameter instead."
msgstr ""
":mod:`shutil`: O parâmetro *onerror* de :func:`~shutil.rmtree` está obsoleto "
"no Python 3.12; use o parâmetro *onexc* em vez disso."

#: ../../deprecations/pending-removal-in-future.rst:88
msgid ":mod:`ssl` options and protocols:"
msgstr "Opções e protocolos :mod:`ssl`:"

#: ../../deprecations/pending-removal-in-future.rst:90
msgid ":class:`ssl.SSLContext` without protocol argument is deprecated."
msgstr ":class:`ssl.SSLContext` sem argumento de protocolo está obsoleto."

#: ../../deprecations/pending-removal-in-future.rst:91
msgid ""
":class:`ssl.SSLContext`: :meth:`~ssl.SSLContext.set_npn_protocols` and :meth:"
"`!selected_npn_protocol` are deprecated: use ALPN instead."
msgstr ""
":class:`ssl.SSLContext`: :meth:`~ssl.SSLContext.set_npn_protocols` e :meth:`!"
"selected_npn_protocol` estão obsoletos: use ALPN em vez disso."

#: ../../deprecations/pending-removal-in-future.rst:94
msgid "``ssl.OP_NO_SSL*`` options"
msgstr "Opções ``ssl.OP_NO_SSL*``"

#: ../../deprecations/pending-removal-in-future.rst:95
msgid "``ssl.OP_NO_TLS*`` options"
msgstr "Opções ``ssl.OP_NO_TLS*``"

#: ../../deprecations/pending-removal-in-future.rst:96
msgid "``ssl.PROTOCOL_SSLv3``"
msgstr "``ssl.PROTOCOL_SSLv3``"

#: ../../deprecations/pending-removal-in-future.rst:97
msgid "``ssl.PROTOCOL_TLS``"
msgstr "``ssl.PROTOCOL_TLS``"

#: ../../deprecations/pending-removal-in-future.rst:98
msgid "``ssl.PROTOCOL_TLSv1``"
msgstr "``ssl.PROTOCOL_TLSv1``"

#: ../../deprecations/pending-removal-in-future.rst:99
msgid "``ssl.PROTOCOL_TLSv1_1``"
msgstr "``ssl.PROTOCOL_TLSv1_1``"

#: ../../deprecations/pending-removal-in-future.rst:100
msgid "``ssl.PROTOCOL_TLSv1_2``"
msgstr "``ssl.PROTOCOL_TLSv1_2``"

#: ../../deprecations/pending-removal-in-future.rst:101
msgid "``ssl.TLSVersion.SSLv3``"
msgstr "``ssl.TLSVersion.SSLv3``"

#: ../../deprecations/pending-removal-in-future.rst:102
msgid "``ssl.TLSVersion.TLSv1``"
msgstr "``ssl.TLSVersion.TLSv1``"

#: ../../deprecations/pending-removal-in-future.rst:103
msgid "``ssl.TLSVersion.TLSv1_1``"
msgstr "``ssl.TLSVersion.TLSv1_1``"

#: ../../deprecations/pending-removal-in-future.rst:105
msgid ":mod:`threading` methods:"
msgstr "Métodos :mod:`threading`:"

#: ../../deprecations/pending-removal-in-future.rst:107
msgid ""
":meth:`!threading.Condition.notifyAll`: use :meth:`~threading.Condition."
"notify_all`."
msgstr ""
":meth:`!threading.Condition.notifyAll`: use :meth:`~threading.Condition."
"notify_all`."

#: ../../deprecations/pending-removal-in-future.rst:108
msgid ":meth:`!threading.Event.isSet`: use :meth:`~threading.Event.is_set`."
msgstr ":meth:`!threading.Event.isSet`: use :meth:`~threading.Event.is_set`."

#: ../../deprecations/pending-removal-in-future.rst:109
msgid ""
":meth:`!threading.Thread.isDaemon`, :meth:`threading.Thread.setDaemon`: use :"
"attr:`threading.Thread.daemon` attribute."
msgstr ""
":meth:`!threading.Thread.isDaemon`, :meth:`threading.Thread.setDaemon`: use "
"o atributo :attr:`threading.Thread.daemon`."

#: ../../deprecations/pending-removal-in-future.rst:111
msgid ""
":meth:`!threading.Thread.getName`, :meth:`threading.Thread.setName`: use :"
"attr:`threading.Thread.name` attribute."
msgstr ""
":meth:`!threading.Thread.getName`, :meth:`threading.Thread.setName`: use o "
"atributo :attr:`threading.Thread.name`."

#: ../../deprecations/pending-removal-in-future.rst:113
msgid ":meth:`!threading.currentThread`: use :meth:`threading.current_thread`."
msgstr ""
":meth:`!threading.currentThread`: use :meth:`threading.current_thread`."

#: ../../deprecations/pending-removal-in-future.rst:114
msgid ":meth:`!threading.activeCount`: use :meth:`threading.active_count`."
msgstr ":meth:`!threading.activeCount`: use :meth:`threading.active_count`."

#: ../../deprecations/pending-removal-in-future.rst:116
msgid ":class:`typing.Text` (:gh:`92332`)."
msgstr ":class:`typing.Text` (:gh:`92332`)."

#: ../../deprecations/pending-removal-in-future.rst:118
msgid ""
":class:`unittest.IsolatedAsyncioTestCase`: it is deprecated to return a "
"value that is not ``None`` from a test case."
msgstr ""
":class:`unittest.IsolatedAsyncioTestCase`: está obsoleto retornar um valor "
"que não seja ``None`` a partir de um caso de teste."

#: ../../deprecations/pending-removal-in-future.rst:121
msgid ""
":mod:`urllib.parse` deprecated functions: :func:`~urllib.parse.urlparse` "
"instead"
msgstr ""
"Funções obsoletas de :mod:`urllib.parse`: use :func:`~urllib.parse.urlparse` "
"em vez disso"

#: ../../deprecations/pending-removal-in-future.rst:123
msgid "``splitattr()``"
msgstr "``splitattr()``"

#: ../../deprecations/pending-removal-in-future.rst:124
msgid "``splithost()``"
msgstr "``splithost()``"

#: ../../deprecations/pending-removal-in-future.rst:125
msgid "``splitnport()``"
msgstr "``splitnport()``"

#: ../../deprecations/pending-removal-in-future.rst:126
msgid "``splitpasswd()``"
msgstr "``splitpasswd()``"

#: ../../deprecations/pending-removal-in-future.rst:127
msgid "``splitport()``"
msgstr "``splitport()``"

#: ../../deprecations/pending-removal-in-future.rst:128
msgid "``splitquery()``"
msgstr "``splitquery()``"

#: ../../deprecations/pending-removal-in-future.rst:129
msgid "``splittag()``"
msgstr "``splittag()``"

#: ../../deprecations/pending-removal-in-future.rst:130
msgid "``splittype()``"
msgstr "``splittype()``"

#: ../../deprecations/pending-removal-in-future.rst:131
msgid "``splituser()``"
msgstr "``splituser()``"

#: ../../deprecations/pending-removal-in-future.rst:132
msgid "``splitvalue()``"
msgstr "``splitvalue()``"

#: ../../deprecations/pending-removal-in-future.rst:133
msgid "``to_bytes()``"
msgstr "``to_bytes()``"

#: ../../deprecations/pending-removal-in-future.rst:135
msgid ""
":mod:`urllib.request`: :class:`~urllib.request.URLopener` and :class:"
"`~urllib.request.FancyURLopener` style of invoking requests is deprecated. "
"Use newer :func:`~urllib.request.urlopen` functions and methods."
msgstr ""

#: ../../deprecations/pending-removal-in-future.rst:139
msgid ""
":mod:`wsgiref`: ``SimpleHandler.stdout.write()`` should not do partial "
"writes."
msgstr ""
":mod:`wsgiref`: ``SimpleHandler.stdout.write()`` não deve fazer escritas "
"parciais."

#: ../../deprecations/pending-removal-in-future.rst:142
msgid ""
":mod:`xml.etree.ElementTree`: Testing the truth value of an :class:`~xml."
"etree.ElementTree.Element` is deprecated. In a future release it will always "
"return ``True``. Prefer explicit ``len(elem)`` or ``elem is not None`` tests "
"instead."
msgstr ""
":mod:`xml.etree.ElementTree`: Testar o valor de verdade de um :class:`~xml."
"etree.ElementTree.Element` está obsoleto. Numa versão futura, sempre "
"retornará ``True``. Prefira testes explícitos como ``len(elem)`` ou ``elem "
"is not None`` em vez disso."

#: ../../deprecations/pending-removal-in-future.rst:147
msgid ""
":meth:`zipimport.zipimporter.load_module` is deprecated: use :meth:"
"`~zipimport.zipimporter.exec_module` instead."
msgstr ""

#: ../../whatsnew/3.13.rst:2040
msgid "CPython Bytecode Changes"
msgstr "Alterações no Bytecode do CPython"

#: ../../whatsnew/3.13.rst:2042
msgid ""
"The oparg of :opcode:`YIELD_VALUE` is now ``1`` if the yield is part of a "
"yield-from or await, and ``0`` otherwise. The oparg of :opcode:`RESUME` was "
"changed to add a bit indicating if the except-depth is 1, which is needed to "
"optimize closing of generators. (Contributed by Irit Katriel in :gh:"
"`111354`.)"
msgstr ""
"O oparg de :opcode:`YIELD_VALUE` é agora ``1`` se o yield for parte de um "
"yield-from ou await, e ``0`` caso contrário. O oparg de :opcode:`RESUME` foi "
"alterado para adicionar um bit que indica se a profundidade de exceção é 1, "
"o que é necessário para otimizar o fechamento de geradores. (Contribuído por "
"Irit Katriel em :gh:`111354`.)"

#: ../../whatsnew/3.13.rst:2050
msgid "C API Changes"
msgstr "Alterações na API C"

#: ../../whatsnew/3.13.rst:2055
msgid ""
"Add the :ref:`PyMonitoring C API <c-api-monitoring>` for generating :pep:"
"`669` monitoring events:"
msgstr ""
"Adicionada a :ref:`PyMonitoring C API <c-api-monitoring>` para gerar eventos "
"de monitorização :pep:`669`:"

#: ../../whatsnew/3.13.rst:2058
msgid ":c:type:`PyMonitoringState`"
msgstr ":c:type:`PyMonitoringState`"

#: ../../whatsnew/3.13.rst:2059
msgid ":c:func:`PyMonitoring_FirePyStartEvent`"
msgstr ":c:func:`PyMonitoring_FirePyStartEvent`"

#: ../../whatsnew/3.13.rst:2060
msgid ":c:func:`PyMonitoring_FirePyResumeEvent`"
msgstr ":c:func:`PyMonitoring_FirePyResumeEvent`"

#: ../../whatsnew/3.13.rst:2061
msgid ":c:func:`PyMonitoring_FirePyReturnEvent`"
msgstr ":c:func:`PyMonitoring_FirePyReturnEvent`"

#: ../../whatsnew/3.13.rst:2062
msgid ":c:func:`PyMonitoring_FirePyYieldEvent`"
msgstr ":c:func:`PyMonitoring_FirePyYieldEvent`"

#: ../../whatsnew/3.13.rst:2063
msgid ":c:func:`PyMonitoring_FireCallEvent`"
msgstr ":c:func:`PyMonitoring_FireCallEvent`"

#: ../../whatsnew/3.13.rst:2064
msgid ":c:func:`PyMonitoring_FireLineEvent`"
msgstr ":c:func:`PyMonitoring_FireLineEvent`"

#: ../../whatsnew/3.13.rst:2065
msgid ":c:func:`PyMonitoring_FireJumpEvent`"
msgstr ":c:func:`PyMonitoring_FireJumpEvent`"

#: ../../whatsnew/3.13.rst:2066
msgid ":c:func:`PyMonitoring_FireBranchEvent`"
msgstr ""

#: ../../whatsnew/3.13.rst:2067
msgid ":c:func:`PyMonitoring_FireCReturnEvent`"
msgstr ":c:func:`PyMonitoring_FireCReturnEvent`"

#: ../../whatsnew/3.13.rst:2068
msgid ":c:func:`PyMonitoring_FirePyThrowEvent`"
msgstr ":c:func:`PyMonitoring_FirePyThrowEvent`"

#: ../../whatsnew/3.13.rst:2069
msgid ":c:func:`PyMonitoring_FireRaiseEvent`"
msgstr ":c:func:`PyMonitoring_FireRaiseEvent`"

#: ../../whatsnew/3.13.rst:2070
msgid ":c:func:`PyMonitoring_FireCRaiseEvent`"
msgstr ":c:func:`PyMonitoring_FireCRaiseEvent`"

#: ../../whatsnew/3.13.rst:2071
msgid ":c:func:`PyMonitoring_FireReraiseEvent`"
msgstr ":c:func:`PyMonitoring_FireReraiseEvent`"

#: ../../whatsnew/3.13.rst:2072
msgid ":c:func:`PyMonitoring_FireExceptionHandledEvent`"
msgstr ":c:func:`PyMonitoring_FireExceptionHandledEvent`"

#: ../../whatsnew/3.13.rst:2073
msgid ":c:func:`PyMonitoring_FirePyUnwindEvent`"
msgstr ":c:func:`PyMonitoring_FirePyUnwindEvent`"

#: ../../whatsnew/3.13.rst:2074
msgid ":c:func:`PyMonitoring_FireStopIterationEvent`"
msgstr ":c:func:`PyMonitoring_FireStopIterationEvent`"

#: ../../whatsnew/3.13.rst:2075
msgid ":c:func:`PyMonitoring_EnterScope`"
msgstr ":c:func:`PyMonitoring_EnterScope`"

#: ../../whatsnew/3.13.rst:2076
msgid ":c:func:`PyMonitoring_ExitScope`"
msgstr ":c:func:`PyMonitoring_ExitScope`"

#: ../../whatsnew/3.13.rst:2078
msgid "(Contributed by Irit Katriel in :gh:`111997`)."
msgstr "(Contribuído por Irit Katriel em :gh:`111997`.)"

#: ../../whatsnew/3.13.rst:2080
msgid ""
"Add :c:type:`PyMutex`, a lightweight mutex that occupies a single byte, and "
"the new :c:func:`PyMutex_Lock` and :c:func:`PyMutex_Unlock` functions. :c:"
"func:`!PyMutex_Lock` will release the :term:`GIL` (if currently held) if the "
"operation needs to block. (Contributed by Sam Gross in :gh:`108724`.)"
msgstr ""
"Adicionado :c:type:`PyMutex`, um mutex leve que ocupa um único byte, e as "
"novas funções :c:func:`PyMutex_Lock` e :c:func:`PyMutex_Unlock`. :c:func:`!"
"PyMutex_Lock` libertará o :term:`GIL` (se atualmente mantido) se a operação "
"precisar bloquear. (Contribuído por Sam Gross em :gh:`108724`.)"

#: ../../whatsnew/3.13.rst:2086
msgid ""
"Add the :ref:`PyTime C API <c-api-time>` to provide access to system clocks:"
msgstr ""
"Adicionada a :ref:`PyTime C API <c-api-time>` para fornecer acesso a "
"relógios do sistema:"

#: ../../whatsnew/3.13.rst:2088
msgid ":c:type:`PyTime_t`."
msgstr ":c:type:`PyTime_t`."

#: ../../whatsnew/3.13.rst:2089
msgid ":c:var:`PyTime_MIN` and :c:var:`PyTime_MAX`."
msgstr ":c:var:`PyTime_MIN` e :c:var:`PyTime_MAX`."

#: ../../whatsnew/3.13.rst:2090
msgid ":c:func:`PyTime_AsSecondsDouble`."
msgstr ":c:func:`PyTime_AsSecondsDouble`."

#: ../../whatsnew/3.13.rst:2091
msgid ":c:func:`PyTime_Monotonic`."
msgstr ":c:func:`PyTime_Monotonic`."

#: ../../whatsnew/3.13.rst:2092
msgid ":c:func:`PyTime_MonotonicRaw`."
msgstr ":c:func:`PyTime_MonotonicRaw`."

#: ../../whatsnew/3.13.rst:2093
msgid ":c:func:`PyTime_PerfCounter`."
msgstr ":c:func:`PyTime_PerfCounter`."

#: ../../whatsnew/3.13.rst:2094
msgid ":c:func:`PyTime_PerfCounterRaw`."
msgstr ":c:func:`PyTime_PerfCounterRaw`."

#: ../../whatsnew/3.13.rst:2095
msgid ":c:func:`PyTime_Time`."
msgstr ":c:func:`PyTime_Time`."

#: ../../whatsnew/3.13.rst:2096
msgid ":c:func:`PyTime_TimeRaw`."
msgstr ":c:func:`PyTime_TimeRaw`."

#: ../../whatsnew/3.13.rst:2098
msgid "(Contributed by Victor Stinner and Petr Viktorin in :gh:`110850`.)"
msgstr "(Contribuído por Victor Stinner e Petr Viktorin em :gh:`110850`.)"

#: ../../whatsnew/3.13.rst:2100
msgid ""
"Add the :c:func:`PyDict_ContainsString` function with the same behavior as :"
"c:func:`PyDict_Contains`, but *key* is specified as a :c:expr:`const char*` "
"UTF-8 encoded bytes string, rather than a :c:expr:`PyObject*`. (Contributed "
"by Victor Stinner in :gh:`108314`.)"
msgstr ""
"Adicionada a função :c:func:`PyDict_ContainsString` com o mesmo "
"comportamento que :c:func:`PyDict_Contains`, mas *key* é especificado como "
"uma string de bytes codificada em UTF-8 :c:expr:`const char*`, em vez de um :"
"c:expr:`PyObject*`. (Contribuído por Victor Stinner em :gh:`108314`.)"

#: ../../whatsnew/3.13.rst:2106
msgid ""
"Add the :c:func:`PyDict_GetItemRef` and :c:func:`PyDict_GetItemStringRef` "
"functions, which behave similarly to :c:func:`PyDict_GetItemWithError`, but "
"return a  :term:`strong reference` instead of a :term:`borrowed reference`. "
"Moreover, these functions return ``-1`` on error, removing the need to "
"check :c:func:`!PyErr_Occurred`. (Contributed by Victor Stinner in :gh:"
"`106004`.)"
msgstr ""
"Adicionadas as funções :c:func:`PyDict_GetItemRef` e :c:func:"
"`PyDict_GetItemStringRef`, que se comportam de forma semelhante a :c:func:"
"`PyDict_GetItemWithError`, mas devolvem uma :term:`referência forte` em vez "
"de uma :term:`referência emprestada`. Além disso, estas funções devolvem "
"``-1`` em caso de erro, eliminando a necessidade de verificar :c:func:`!"
"PyErr_Occurred`. (Contribuído por Victor Stinner em :gh:`106004`.)"

#: ../../whatsnew/3.13.rst:2114
msgid ""
"Add the :c:func:`PyDict_SetDefaultRef` function, which behaves similarly to :"
"c:func:`PyDict_SetDefault`, but returns a :term:`strong reference` instead "
"of a :term:`borrowed reference`. This function returns ``-1`` on error, "
"``0`` on insertion, and ``1`` if the key was already present in the "
"dictionary. (Contributed by Sam Gross in :gh:`112066`.)"
msgstr ""
"Adicionada a função :c:func:`PyDict_SetDefaultRef`, que se comporta de forma "
"semelhante a :c:func:`PyDict_SetDefault`, mas retorna uma :term:`referência "
"forte` em vez de uma :term:`referência emprestada`. Esta função retorna "
"``-1`` em caso de erro, ``0`` em caso de inserção, e ``1`` se a chave já "
"estava presente no dicionário. (Contribuído por Sam Gross em :gh:`112066`.)"

#: ../../whatsnew/3.13.rst:2122
msgid ""
"Add the :c:func:`PyDict_Pop` and :c:func:`PyDict_PopString` functions to "
"remove a key from a dictionary and optionally return the removed value. This "
"is similar to :meth:`dict.pop`, though there is no default value, and :exc:"
"`KeyError` is not raised for missing keys. (Contributed by Stefan Behnel and "
"Victor Stinner in :gh:`111262`.)"
msgstr ""
"Adicionadas as funções :c:func:`PyDict_Pop` e :c:func:`PyDict_PopString` "
"para remover uma chave de um dicionário e, opcionalmente, retornar o valor "
"removido. Isto é semelhante a :meth:`dict.pop`, embora não haja valor "
"predefinido, e :exc:`KeyError` não é levantado para chaves em falta. "
"(Contribuído por Stefan Behnel e Victor Stinner em :gh:`111262`.)"

#: ../../whatsnew/3.13.rst:2129
msgid ""
"Add the :c:func:`PyMapping_GetOptionalItem` and :c:func:"
"`PyMapping_GetOptionalItemString` functions as alternatives to :c:func:"
"`PyObject_GetItem` and :c:func:`PyMapping_GetItemString` respectively. The "
"new functions do not raise :exc:`KeyError` if the requested key is missing "
"from the mapping. These variants are more convenient and faster if a missing "
"key should not be treated as a failure. (Contributed by Serhiy Storchaka in :"
"gh:`106307`.)"
msgstr ""
"Adicionadas as funções :c:func:`PyMapping_GetOptionalItem` e :c:func:"
"`PyMapping_GetOptionalItemString` como alternativas a :c:func:"
"`PyObject_GetItem` e :c:func:`PyMapping_GetItemString`, respetivamente. As "
"novas funções não levantam :exc:`KeyError` se a chave solicitada estiver em "
"falta no mapeamento. Estas variantes são mais convenientes e mais rápidas se "
"uma chave em falta não deve ser tratada como uma falha. (Contribuído por "
"Serhiy Storchaka em :gh:`106307`.)"

#: ../../whatsnew/3.13.rst:2139
msgid ""
"Add the :c:func:`PyObject_GetOptionalAttr` and :c:func:"
"`PyObject_GetOptionalAttrString` functions as alternatives to  :c:func:"
"`PyObject_GetAttr` and :c:func:`PyObject_GetAttrString` respectively. The "
"new functions do not raise :exc:`AttributeError` if the requested attribute "
"is not found on the object. These variants are more convenient and faster if "
"the missing attribute should not be treated as a failure. (Contributed by "
"Serhiy Storchaka in :gh:`106521`.)"
msgstr ""
"Adicionadas as funções :c:func:`PyObject_GetOptionalAttr` e :c:func:"
"`PyObject_GetOptionalAttrString` como alternativas a :c:func:"
"`PyObject_GetAttr` e :c:func:`PyObject_GetAttrString`, respetivamente. As "
"novas funções não levantam :exc:`AttributeError` se o atributo solicitado "
"não for encontrado no objeto. Estas variantes são mais convenientes e "
"rápidas se o atributo em falta não deve ser tratado como uma falha. "
"(Contribuído por Serhiy Storchaka em :gh:`106521`.)"

#: ../../whatsnew/3.13.rst:2149
msgid ""
"Add the :c:func:`PyErr_FormatUnraisable` function as an extension to :c:func:"
"`PyErr_WriteUnraisable` that allows customizing the warning message. "
"(Contributed by Serhiy Storchaka in :gh:`108082`.)"
msgstr ""
"Adicionada a função :c:func:`PyErr_FormatUnraisable` como uma extensão a :c:"
"func:`PyErr_WriteUnraisable` que permite personalizar a mensagem de aviso. "
"(Contribuído por Serhiy Storchaka em :gh:`108082`.)"

#: ../../whatsnew/3.13.rst:2154
msgid ""
"Add new functions that return a :term:`strong reference` instead of a :term:"
"`borrowed reference` for frame locals, globals, and builtins, as part of :"
"ref:`PEP 667 <whatsnew313-locals-semantics>`:"
msgstr ""
"Adicionadas novas funções que retornam uma :term:`referência forte` em vez "
"de uma :term:`referência emprestada` para locais, globais e builtins do "
"quadro, como parte de :ref:`PEP 667 <whatsnew313-locals-semantics>`:"

#: ../../whatsnew/3.13.rst:2158
msgid ":c:func:`PyEval_GetFrameBuiltins` replaces :c:func:`PyEval_GetBuiltins`"
msgstr ""
":c:func:`PyEval_GetFrameBuiltins` substitui :c:func:`PyEval_GetBuiltins`"

#: ../../whatsnew/3.13.rst:2159
msgid ":c:func:`PyEval_GetFrameGlobals` replaces :c:func:`PyEval_GetGlobals`"
msgstr ":c:func:`PyEval_GetFrameGlobals` substitui :c:func:`PyEval_GetGlobals`"

#: ../../whatsnew/3.13.rst:2160
msgid ":c:func:`PyEval_GetFrameLocals` replaces :c:func:`PyEval_GetLocals`"
msgstr ":c:func:`PyEval_GetFrameLocals` substitui :c:func:`PyEval_GetLocals`"

#: ../../whatsnew/3.13.rst:2162
msgid "(Contributed by Mark Shannon and Tian Gao in :gh:`74929`.)"
msgstr "(Contribuído por Mark Shannon e Tian Gao em :gh:`74929`.)"

#: ../../whatsnew/3.13.rst:2164
msgid ""
"Add the :c:func:`Py_GetConstant` and :c:func:`Py_GetConstantBorrowed` "
"functions to get :term:`strong <strong reference>` or :term:`borrowed "
"<borrowed reference>` references to constants. For example, "
"``Py_GetConstant(Py_CONSTANT_ZERO)`` returns a strong reference to the "
"constant zero. (Contributed by Victor  Stinner in :gh:`115754`.)"
msgstr ""
"Adicionadas as funções :c:func:`Py_GetConstant` e :c:func:"
"`Py_GetConstantBorrowed` para obter :term:`referências fortes` ou :term:"
"`referências emprestadas` a constantes. Por exemplo, "
"``Py_GetConstant(Py_CONSTANT_ZERO)`` devolve uma referência forte à "
"constante zero. (Contribuído por Victor Stinner em :gh:`115754`.)"

#: ../../whatsnew/3.13.rst:2171
msgid ""
"Add the :c:func:`PyImport_AddModuleRef` function as a replacement for :c:"
"func:`PyImport_AddModule` that returns a :term:`strong reference` instead of "
"a :term:`borrowed reference`. (Contributed by Victor Stinner in :gh:"
"`105922`.)"
msgstr ""
"Adicionada a função :c:func:`PyImport_AddModuleRef` como substituição para :"
"c:func:`PyImport_AddModule` que retorna uma :term:`referência forte` em vez "
"de uma :term:`referência emprestada`. (Contribuído por Victor Stinner em :gh:"
"`105922`.)"

#: ../../whatsnew/3.13.rst:2176
msgid ""
"Add the :c:func:`Py_IsFinalizing` function to check whether the main Python "
"interpreter is :term:`shutting down <interpreter shutdown>`. (Contributed by "
"Victor Stinner in :gh:`108014`.)"
msgstr ""
"Adicionada a função :c:func:`Py_IsFinalizing` para verificar se o "
"interpretador principal do Python está a :term:`encerrar <interpreter "
"shutdown>`. (Contribuído por Victor Stinner em :gh:`108014`.)"

#: ../../whatsnew/3.13.rst:2181
msgid ""
"Add the :c:func:`PyList_GetItemRef` function as a replacement for :c:func:"
"`PyList_GetItem` that returns a :term:`strong reference` instead of a :term:"
"`borrowed reference`. (Contributed by Sam Gross in :gh:`114329`.)"
msgstr ""
"Adicionada a função :c:func:`PyList_GetItemRef` como substituição para :c:"
"func:`PyList_GetItem` que retorna uma :term:`referência forte` em vez de "
"uma :term:`referência emprestada`. (Contribuído por Sam Gross em :gh:"
"`114329`.)"

#: ../../whatsnew/3.13.rst:2186
msgid ""
"Add the :c:func:`PyList_Extend` and :c:func:`PyList_Clear` functions, "
"mirroring the Python :meth:`list.extend` and :meth:`list.clear` methods. "
"(Contributed by Victor Stinner in :gh:`111138`.)"
msgstr ""
"Adicionadas as funções :c:func:`PyList_Extend` e :c:func:`PyList_Clear`, que "
"refletem os métodos Python :meth:`list.extend` e :meth:`list.clear`. "
"(Contribuído por Victor Stinner em :gh:`111138`.)"

#: ../../whatsnew/3.13.rst:2190
msgid ""
"Add the :c:func:`PyLong_AsInt` function. It behaves similarly to :c:func:"
"`PyLong_AsLong`, but stores the result in a C :c:expr:`int` instead of a C :"
"c:expr:`long`. (Contributed by Victor Stinner in :gh:`108014`.)"
msgstr ""
"Adicionada a função :c:func:`PyLong_AsInt`. Comporta-se de forma semelhante "
"a :c:func:`PyLong_AsLong`, mas armazena o resultado num C :c:expr:`int` em "
"vez de num C :c:expr:`long`. (Contribuído por Victor Stinner em :gh:"
"`108014`.)"

#: ../../whatsnew/3.13.rst:2195
msgid ""
"Add the :c:func:`PyLong_AsNativeBytes`, :c:func:`PyLong_FromNativeBytes`, "
"and :c:func:`PyLong_FromUnsignedNativeBytes` functions to simplify "
"converting between native integer types and Python :class:`int` objects. "
"(Contributed by Steve Dower in :gh:`111140`.)"
msgstr ""
"Adicionadas as funções :c:func:`PyLong_AsNativeBytes`, :c:func:"
"`PyLong_FromNativeBytes`, e :c:func:`PyLong_FromUnsignedNativeBytes` para "
"simplificar a conversão entre tipos inteiros nativos e objetos Python :class:"
"`int`. (Contribuído por Steve Dower em :gh:`111140`.)"

#: ../../whatsnew/3.13.rst:2201
msgid ""
"Add :c:func:`PyModule_Add` function, which is similar to :c:func:"
"`PyModule_AddObjectRef` and :c:func:`PyModule_AddObject`, but always steals "
"a reference to the value. (Contributed by Serhiy Storchaka in :gh:`86493`.)"
msgstr ""
"Adicionada a função :c:func:`PyModule_Add`, que é semelhante a :c:func:"
"`PyModule_AddObjectRef` e :c:func:`PyModule_AddObject`, mas sempre rouba uma "
"referência ao valor. (Contribuído por Serhiy Storchaka em :gh:`86493`.)"

#: ../../whatsnew/3.13.rst:2206
msgid ""
"Add the :c:func:`PyObject_GenericHash` function that implements the default "
"hashing function of a Python object. (Contributed by Serhiy Storchaka in :gh:"
"`113024`.)"
msgstr ""
"Adicionada a função :c:func:`PyObject_GenericHash` que implementa a função "
"de hash predefinida de um objeto Python. (Contribuído por Serhiy Storchaka "
"em :gh:`113024`.)"

#: ../../whatsnew/3.13.rst:2210
msgid ""
"Add the :c:func:`Py_HashPointer` function to hash a raw pointer. "
"(Contributed by Victor Stinner in :gh:`111545`.)"
msgstr ""
"Adicionada a função :c:func:`Py_HashPointer` para fazer hash de um ponteiro "
"bruto. (Contribuído por Victor Stinner em :gh:`111545`.)"

#: ../../whatsnew/3.13.rst:2213
msgid ""
"Add the :c:func:`PyObject_VisitManagedDict` and :c:func:"
"`PyObject_ClearManagedDict` functions. which must be called by the traverse "
"and clear functions of a type using the :c:macro:`Py_TPFLAGS_MANAGED_DICT` "
"flag. The `pythoncapi-compat project`_ can be used to use these functions "
"with Python 3.11 and 3.12. (Contributed by Victor Stinner in :gh:`107073`.)"
msgstr ""
"Adicionadas as funções :c:func:`PyObject_VisitManagedDict` e :c:func:"
"`PyObject_ClearManagedDict`, que devem ser chamadas pelas funções traverse e "
"clear de um tipo que usa a flag :c:macro:`Py_TPFLAGS_MANAGED_DICT`. O "
"projeto `pythoncapi-compat project`_ pode ser usado para utilizar estas "
"funções com Python 3.11 e 3.12. (Contribuído por Victor Stinner em :gh:"
"`107073`.)"

#: ../../whatsnew/3.13.rst:2221
msgid ""
"Add the :c:func:`PyRefTracer_SetTracer` and :c:func:`PyRefTracer_GetTracer` "
"functions, which enable tracking object creation and destruction in the same "
"way that the :mod:`tracemalloc` module does. (Contributed by Pablo Galindo "
"in :gh:`93502`.)"
msgstr ""
"Adicionadas as funções :c:func:`PyRefTracer_SetTracer` e :c:func:"
"`PyRefTracer_GetTracer`, que permitem rastrear a criação e destruição de "
"objetos da mesma forma que o módulo :mod:`tracemalloc` faz. (Contribuído por "
"Pablo Galindo em :gh:`93502`.)"

#: ../../whatsnew/3.13.rst:2227
msgid ""
"Add the :c:func:`PySys_AuditTuple` function as an alternative to :c:func:"
"`PySys_Audit` that takes event arguments as a Python :class:`tuple` object. "
"(Contributed by Victor Stinner in :gh:`85283`.)"
msgstr ""
"Adicionada a função :c:func:`PySys_AuditTuple` como alternativa a :c:func:"
"`PySys_Audit` que recebe argumentos de eventos como um objeto Python :class:"
"`tuple`. (Contribuído por Victor Stinner em :gh:`85283`.)"

#: ../../whatsnew/3.13.rst:2232
msgid ""
"Add the :c:func:`PyThreadState_GetUnchecked()` function as an alternative "
"to :c:func:`PyThreadState_Get()` that doesn't kill the process with a fatal "
"error if it is ``NULL``. The caller is responsible for checking if the "
"result is ``NULL``. (Contributed by Victor Stinner in :gh:`108867`.)"
msgstr ""
"Adicionada a função :c:func:`PyThreadState_GetUnchecked()` como alternativa "
"a :c:func:`PyThreadState_Get()` que não termina o processo com um erro fatal "
"se for ``NULL``. O chamador é responsável por verificar se o resultado é "
"``NULL``. (Contribuído por Victor Stinner em :gh:`108867`.)"

#: ../../whatsnew/3.13.rst:2238
msgid ""
"Add the :c:func:`PyType_GetFullyQualifiedName` function to get the type's "
"fully qualified name. The module name is prepended if :attr:`type."
"__module__` is a string and is not equal to either ``'builtins'`` or "
"``'__main__'``. (Contributed by Victor Stinner in :gh:`111696`.)"
msgstr ""
"Adicionada a função :c:func:`PyType_GetFullyQualifiedName` para obter o nome "
"totalmente qualificado do tipo. O nome do módulo é prefixado se :attr:`type."
"__module__` for uma string e não for igual a ``'builtins'`` ou "
"``'__main__'``. (Contribuído por Victor Stinner em :gh:`111696`.)"

#: ../../whatsnew/3.13.rst:2244
msgid ""
"Add the :c:func:`PyType_GetModuleName` function to get the type's module "
"name. This is equivalent to getting the :attr:`type.__module__` attribute. "
"(Contributed by Eric Snow and Victor Stinner in :gh:`111696`.)"
msgstr ""
"Adicionada a função :c:func:`PyType_GetModuleName` para obter o nome do "
"módulo do tipo. Isto é equivalente a obter o atributo :attr:`type."
"__module__`. (Contribuído por Eric Snow e Victor Stinner em :gh:`111696`.)"

#: ../../whatsnew/3.13.rst:2249
msgid ""
"Add the :c:func:`PyUnicode_EqualToUTF8AndSize` and :c:func:"
"`PyUnicode_EqualToUTF8` functions to compare a Unicode object with a :c:expr:"
"`const char*` UTF-8 encoded string and ``1`` if they are equal or ``0`` "
"otherwise. These functions do not raise exceptions. (Contributed by Serhiy "
"Storchaka in :gh:`110289`.)"
msgstr ""
"Adicionadas as funções :c:func:`PyUnicode_EqualToUTF8AndSize` e :c:func:"
"`PyUnicode_EqualToUTF8` para comparar um objeto Unicode com uma string "
"codificada em UTF-8 :c:expr:`const char*` e retorna ``1`` se forem iguais ou "
"``0`` caso contrário. Estas funções não levantam exceções. (Contribuído por "
"Serhiy Storchaka em :gh:`110289`.)"

#: ../../whatsnew/3.13.rst:2256
msgid ""
"Add the :c:func:`PyWeakref_GetRef` function as an alternative to  :c:func:"
"`PyWeakref_GetObject` that returns a :term:`strong reference` or ``NULL`` if "
"the referent is no longer live. (Contributed by Victor Stinner in :gh:"
"`105927`.)"
msgstr ""
"Adicionada a função :c:func:`PyWeakref_GetRef` como alternativa a :c:func:"
"`PyWeakref_GetObject`, que devolve uma :term:`referência forte` ou ``NULL`` "
"se o referente já não estiver ativo. (Contribuído por Victor Stinner em :gh:"
"`105927`.)"

#: ../../whatsnew/3.13.rst:2262
msgid "Add fixed variants of functions which silently ignore errors:"
msgstr ""
"Adicionadas variantes fixas de funções que ignoram silenciosamente erros:"

#: ../../whatsnew/3.13.rst:2264
msgid ""
":c:func:`PyObject_HasAttrWithError` replaces :c:func:`PyObject_HasAttr`."
msgstr ""
":c:func:`PyObject_HasAttrWithError` substitui :c:func:`PyObject_HasAttr`."

#: ../../whatsnew/3.13.rst:2265
msgid ""
":c:func:`PyObject_HasAttrStringWithError` replaces :c:func:"
"`PyObject_HasAttrString`."
msgstr ""
":c:func:`PyObject_HasAttrStringWithError` substitui :c:func:"
"`PyObject_HasAttrString`."

#: ../../whatsnew/3.13.rst:2267
msgid ""
":c:func:`PyMapping_HasKeyWithError` replaces :c:func:`PyMapping_HasKey`."
msgstr ""
":c:func:`PyMapping_HasKeyWithError` substitui :c:func:`PyMapping_HasKey`."

#: ../../whatsnew/3.13.rst:2268
msgid ""
":c:func:`PyMapping_HasKeyStringWithError` replaces :c:func:"
"`PyMapping_HasKeyString`."
msgstr ""
":c:func:`PyMapping_HasKeyStringWithError` substitui :c:func:"
"`PyMapping_HasKeyString`."

#: ../../whatsnew/3.13.rst:2271
msgid ""
"The new functions return ``-1`` for errors and the standard ``1`` for true "
"and ``0`` for false."
msgstr ""
"As novas funções retornam ``-1`` para erros e o padrão ``1`` para verdadeiro "
"e ``0`` para falso."

#: ../../whatsnew/3.13.rst:2274
msgid "(Contributed by Serhiy Storchaka in :gh:`108511`.)"
msgstr "(Contribuído por Serhiy Storchaka em :gh:`108511`.)"

#: ../../whatsnew/3.13.rst:2278
msgid "Changed C APIs"
msgstr "APIs C Alteradas"

#: ../../whatsnew/3.13.rst:2280
msgid ""
"The *keywords* parameter of :c:func:`PyArg_ParseTupleAndKeywords` and :c:"
"func:`PyArg_VaParseTupleAndKeywords` now has type :c:expr:`char * const *` "
"in C and :c:expr:`const char * const *` in C++, instead of :c:expr:`char "
"**`. In C++, this makes these functions compatible with arguments of type :c:"
"expr:`const char * const *`, :c:expr:`const char **`, or :c:expr:`char * "
"const *` without an explicit type cast. In C, the functions only support "
"arguments of type :c:expr:`char * const *`. This can be overridden with the :"
"c:macro:`PY_CXX_CONST` macro. (Contributed by Serhiy Storchaka in :gh:"
"`65210`.)"
msgstr ""
"O parâmetro *keywords* de :c:func:`PyArg_ParseTupleAndKeywords` e :c:func:"
"`PyArg_VaParseTupleAndKeywords` tem agora o tipo :c:expr:`char * const *` em "
"C e :c:expr:`const char * const *` em C++, em vez de :c:expr:`char **`. Em C+"
"+, isto torna estas funções compatíveis com argumentos do tipo :c:expr:"
"`const char * const *`, :c:expr:`const char **`, ou :c:expr:`char * const *` "
"sem uma conversão de tipo explícita. Em C, as funções suportam apenas "
"argumentos do tipo :c:expr:`char * const *`. Isto pode ser substituído com a "
"macro :c:macro:`PY_CXX_CONST`. (Contribuído por Serhiy Storchaka em :gh:"
"`65210`.)"

#: ../../whatsnew/3.13.rst:2292
msgid ""
":c:func:`PyArg_ParseTupleAndKeywords` now supports non-ASCII keyword "
"parameter names. (Contributed by Serhiy Storchaka in :gh:`110815`.)"
msgstr ""
":c:func:`PyArg_ParseTupleAndKeywords` agora suporta nomes de parâmetros de "
"palavra-chave não-ASCII. (Contribuído por Serhiy Storchaka em :gh:`110815`.)"

#: ../../whatsnew/3.13.rst:2296
msgid ""
"The :c:func:`!PyCode_GetFirstFree` function is now unstable API and is now "
"named :c:func:`PyUnstable_Code_GetFirstFree`. (Contributed by Bogdan "
"Romanyuk in :gh:`115781`.)"
msgstr ""
"A função :c:func:`!PyCode_GetFirstFree` é agora uma API instável e é agora "
"chamada :c:func:`PyUnstable_Code_GetFirstFree`. (Contribuído por Bogdan "
"Romanyuk em :gh:`115781`.)"

#: ../../whatsnew/3.13.rst:2300
msgid ""
"The :c:func:`PyDict_GetItem`, :c:func:`PyDict_GetItemString`, :c:func:"
"`PyMapping_HasKey`, :c:func:`PyMapping_HasKeyString`, :c:func:"
"`PyObject_HasAttr`, :c:func:`PyObject_HasAttrString`, and :c:func:"
"`PySys_GetObject` functions, each of which clears all errors which occurred "
"when calling them now reports these errors using :func:`sys.unraisablehook`. "
"You may replace them with other functions as recommended in the "
"documentation. (Contributed by Serhiy Storchaka in :gh:`106672`.)"
msgstr ""
"As funções :c:func:`PyDict_GetItem`, :c:func:`PyDict_GetItemString`, :c:func:"
"`PyMapping_HasKey`, :c:func:`PyMapping_HasKeyString`, :c:func:"
"`PyObject_HasAttr`, :c:func:`PyObject_HasAttrString`, e :c:func:"
"`PySys_GetObject`, cada uma das quais limpa todos os erros que ocorreram ao "
"chamá-las, agora relatam estes erros usando :func:`sys.unraisablehook`. Pode "
"substituí-las por outras funções conforme recomendado na documentação. "
"(Contribuído por Serhiy Storchaka em :gh:`106672`.)"

#: ../../whatsnew/3.13.rst:2309
msgid ""
"Add support for the ``%T``, ``%#T``, ``%N`` and ``%#N`` formats to :c:func:"
"`PyUnicode_FromFormat`:"
msgstr ""
"Adicionado suporte para os formatos ``%T``, ``%#T``, ``%N`` e ``%#N`` a :c:"
"func:`PyUnicode_FromFormat`:"

#: ../../whatsnew/3.13.rst:2312
msgid "``%T``: Get the fully qualified name of an object type"
msgstr "``%T``: Obter o nome totalmente qualificado de um tipo de objeto"

#: ../../whatsnew/3.13.rst:2313
msgid "``%#T``: As above, but use a colon as the separator"
msgstr "``%#T``: Como acima, mas usa dois pontos como separador"

#: ../../whatsnew/3.13.rst:2314
msgid "``%N``: Get the fully qualified name of a type"
msgstr "``%N``: Obter o nome totalmente qualificado de um tipo"

#: ../../whatsnew/3.13.rst:2315
msgid "``%#N``: As above, but use a colon as the separator"
msgstr "``%#N``: Como acima, mas usa dois pontos como separador"

#: ../../whatsnew/3.13.rst:2317
msgid ""
"See :pep:`737` for more information. (Contributed by Victor Stinner in :gh:"
"`111696`.)"
msgstr ""
"Consulte :pep:`737` para mais informações. (Contribuído por Victor Stinner "
"em :gh:`111696`.)"

#: ../../whatsnew/3.13.rst:2320
msgid ""
"You no longer have to define the ``PY_SSIZE_T_CLEAN`` macro before "
"including :file:`Python.h` when using ``#`` formats in :ref:`format codes "
"<arg-parsing-string-and-buffers>`. APIs accepting the format codes always "
"use ``Py_ssize_t`` for ``#`` formats. (Contributed by Inada Naoki in :gh:"
"`104922`.)"
msgstr ""
"Já não é necessário definir a macro ``PY_SSIZE_T_CLEAN`` antes de incluir :"
"file:`Python.h` ao usar formatos ``#`` em :ref:`códigos de formato <arg-"
"parsing-string-and-buffers>`. As APIs que aceitam os códigos de formato "
"sempre usam ``Py_ssize_t`` para formatos ``#``. (Contribuído por Inada Naoki "
"em :gh:`104922`.)"

#: ../../whatsnew/3.13.rst:2326
msgid ""
"If Python is built in :ref:`debug mode <debug-build>` or :option:`with "
"assertions <--with-assertions>`, :c:func:`PyTuple_SET_ITEM` and :c:func:"
"`PyList_SET_ITEM` now check the index argument with an assertion. "
"(Contributed by Victor Stinner in :gh:`106168`.)"
msgstr ""
"Se o Python for compilado em :ref:`modo de depuração <debug-build>` ou com :"
"option:`asserções <--with-assertions>`, :c:func:`PyTuple_SET_ITEM` e :c:func:"
"`PyList_SET_ITEM` agora verificam o argumento de índice com uma asserção. "
"(Contribuído por Victor Stinner em :gh:`106168`.)"

#: ../../whatsnew/3.13.rst:2334
msgid "Limited C API Changes"
msgstr "Alterações na API C Limitada"

#: ../../whatsnew/3.13.rst:2336
msgid "The following functions are now included in the Limited C API:"
msgstr "As seguintes funções estão agora incluídas na API C Limitada:"

#: ../../whatsnew/3.13.rst:2338
msgid ":c:func:`PyMem_RawMalloc`"
msgstr ":c:func:`PyMem_RawMalloc`"

#: ../../whatsnew/3.13.rst:2339
msgid ":c:func:`PyMem_RawCalloc`"
msgstr ":c:func:`PyMem_RawCalloc`"

#: ../../whatsnew/3.13.rst:2340
msgid ":c:func:`PyMem_RawRealloc`"
msgstr ":c:func:`PyMem_RawRealloc`"

#: ../../whatsnew/3.13.rst:2341
msgid ":c:func:`PyMem_RawFree`"
msgstr ":c:func:`PyMem_RawFree`"

#: ../../whatsnew/3.13.rst:2342
msgid ":c:func:`PySys_Audit`"
msgstr ":c:func:`PySys_Audit`"

#: ../../whatsnew/3.13.rst:2343
msgid ":c:func:`PySys_AuditTuple`"
msgstr ":c:func:`PySys_AuditTuple`"

#: ../../whatsnew/3.13.rst:2344
msgid ":c:func:`PyType_GetModuleByDef`"
msgstr ":c:func:`PyType_GetModuleByDef`"

#: ../../whatsnew/3.13.rst:2346
msgid ""
"(Contributed by Victor Stinner in :gh:`85283`, :gh:`85283`, and :gh:"
"`116936`.)"
msgstr ""
"(Contribuído por Victor Stinner em :gh:`85283`, :gh:`85283`, e :gh:`116936`.)"

#: ../../whatsnew/3.13.rst:2348
msgid ""
"Python built with :option:`--with-trace-refs` (tracing references) now "
"supports the :ref:`Limited API <limited-c-api>`. (Contributed by Victor "
"Stinner in :gh:`108634`.)"
msgstr ""
"Python compilado com :option:`--with-trace-refs` (rastreamento de "
"referências) agora suporta a :ref:`API Limitada <limited-c-api>`. "
"(Contribuído por Victor Stinner em :gh:`108634`.)"

#: ../../whatsnew/3.13.rst:2354
msgid "Removed C APIs"
msgstr "APIs C Removidas"

#: ../../whatsnew/3.13.rst:2356
msgid ""
"Remove several functions, macros, variables, etc with names prefixed by "
"``_Py`` or ``_PY`` (which are considered private). If your project is "
"affected  by one of these removals and you believe that the removed API "
"should remain available, please :ref:`open a new issue <using-the-tracker>` "
"to request a public C API and add ``cc: @vstinner`` to the issue to notify "
"Victor Stinner. (Contributed by Victor Stinner in :gh:`106320`.)"
msgstr ""
"Removidas várias funções, macros, variáveis, etc., com nomes prefixados por "
"``_Py`` ou ``_PY`` (consideradas privadas). Se o seu projeto for afetado por "
"uma destas remoções e acredita que a API removida deve permanecer "
"disponível, por favor :ref:`abra um novo problema <using-the-tracker>` para "
"solicitar uma API C pública e adicione ``cc: @vstinner`` ao problema para "
"notificar Victor Stinner. (Contribuído por Victor Stinner em :gh:`106320`.)"

#: ../../whatsnew/3.13.rst:2364
msgid ""
"Remove old buffer protocols deprecated in Python 3.0. Use :ref:"
"`bufferobjects` instead."
msgstr ""
"Removidos protocolos de buffer antigos obsoletos no Python 3.0. Use :ref:"
"`bufferobjects` em vez disso."

#: ../../whatsnew/3.13.rst:2367
msgid ""
":c:func:`!PyObject_CheckReadBuffer`: Use :c:func:`PyObject_CheckBuffer` to "
"test whether the object supports the buffer protocol. Note that :c:func:"
"`PyObject_CheckBuffer` doesn't guarantee that :c:func:`PyObject_GetBuffer` "
"will succeed. To test if the object is actually readable, see the next "
"example of :c:func:`PyObject_GetBuffer`."
msgstr ""
":c:func:`!PyObject_CheckReadBuffer`: Use :c:func:`PyObject_CheckBuffer` para "
"testar se o objeto suporta o protocolo de buffer. Note que :c:func:"
"`PyObject_CheckBuffer` não garante que :c:func:`PyObject_GetBuffer` terá "
"sucesso. Para testar se o objeto é realmente legível, veja o próximo exemplo "
"de :c:func:`PyObject_GetBuffer`."

#: ../../whatsnew/3.13.rst:2375
msgid ""
":c:func:`!PyObject_AsCharBuffer`, :c:func:`!PyObject_AsReadBuffer`: Use :c:"
"func:`PyObject_GetBuffer` and :c:func:`PyBuffer_Release` instead:"
msgstr ""
":c:func:`!PyObject_AsCharBuffer`, :c:func:`!PyObject_AsReadBuffer`: Use :c:"
"func:`PyObject_GetBuffer` e :c:func:`PyBuffer_Release` em vez disso:"

#: ../../whatsnew/3.13.rst:2378
msgid ""
"Py_buffer view;\n"
"if (PyObject_GetBuffer(obj, &view, PyBUF_SIMPLE) < 0) {\n"
"    return NULL;\n"
"}\n"
"// Use `view.buf` and `view.len` to read from the buffer.\n"
"// You may need to cast buf as `(const char*)view.buf`.\n"
"PyBuffer_Release(&view);"
msgstr ""
"Py_buffer view;\n"
"if (PyObject_GetBuffer(obj, &view, PyBUF_SIMPLE) < 0) {\n"
"    return NULL;\n"
"}\n"
"// Use `view.buf` e `view.len` para ler do buffer.\n"
"// Pode ser necessário fazer cast de buf como `(const char*)view.buf`.\n"
"PyBuffer_Release(&view);"

#: ../../whatsnew/3.13.rst:2388
msgid ""
":c:func:`!PyObject_AsWriteBuffer`: Use :c:func:`PyObject_GetBuffer` and :c:"
"func:`PyBuffer_Release` instead:"
msgstr ""
":c:func:`!PyObject_AsWriteBuffer`: Use :c:func:`PyObject_GetBuffer` e :c:"
"func:`PyBuffer_Release` em vez disso:"

#: ../../whatsnew/3.13.rst:2391
msgid ""
"Py_buffer view;\n"
"if (PyObject_GetBuffer(obj, &view, PyBUF_WRITABLE) < 0) {\n"
"    return NULL;\n"
"}\n"
"// Use `view.buf` and `view.len` to write to the buffer.\n"
"PyBuffer_Release(&view);"
msgstr ""
"Py_buffer view;\n"
"if (PyObject_GetBuffer(obj, &view, PyBUF_WRITABLE) < 0) {\n"
"    return NULL;\n"
"}\n"
"// Use `view.buf` e `view.len` para escrever no buffer.\n"
"PyBuffer_Release(&view);"

#: ../../whatsnew/3.13.rst:2400
msgid "(Contributed by Inada Naoki in :gh:`85275`.)"
msgstr "(Contribuído por Inada Naoki em :gh:`85275`.)"

#: ../../whatsnew/3.13.rst:2402
msgid "Remove various functions deprecated in Python 3.9:"
msgstr "Remover várias funções obsoletas no Python 3.9:"

#: ../../whatsnew/3.13.rst:2404
msgid ""
":c:func:`!PyEval_CallObject`, :c:func:`!PyEval_CallObjectWithKeywords`: Use :"
"c:func:`PyObject_CallNoArgs` or :c:func:`PyObject_Call` instead."
msgstr ""
":c:func:`!PyEval_CallObject`, :c:func:`!PyEval_CallObjectWithKeywords`: Use :"
"c:func:`PyObject_CallNoArgs` ou :c:func:`PyObject_Call` em vez disso."

#: ../../whatsnew/3.13.rst:2409
msgid ""
"In :c:func:`PyObject_Call`, positional arguments must be a :class:`tuple` "
"and must not be ``NULL``, and keyword arguments must be a :class:`dict` or "
"``NULL``, whereas the removed functions checked argument types and accepted "
"``NULL`` positional and keyword arguments. To replace "
"``PyEval_CallObjectWithKeywords(func, NULL, kwargs)`` with :c:func:"
"`PyObject_Call`, pass an empty tuple as positional arguments using :c:func:"
"`PyTuple_New(0) <PyTuple_New>`."
msgstr ""
"Em :c:func:`PyObject_Call`, os argumentos posicionais devem ser um :class:"
"`tuple` e não devem ser ``NULL``, e os argumentos de palavra-chave devem ser "
"um :class:`dict` ou ``NULL``, enquanto as funções removidas verificavam os "
"tipos de argumentos e aceitavam argumentos posicionais e de palavra-chave "
"``NULL``. Para substituir ``PyEval_CallObjectWithKeywords(func, NULL, "
"kwargs)`` com :c:func:`PyObject_Call`, passe um tuplo vazio como argumentos "
"posicionais usando :c:func:`PyTuple_New(0) <PyTuple_New>`."

#: ../../whatsnew/3.13.rst:2419
msgid ""
":c:func:`!PyEval_CallFunction`: Use :c:func:`PyObject_CallFunction` instead."
msgstr ""
":c:func:`!PyEval_CallFunction`: Use :c:func:`PyObject_CallFunction` em vez "
"disso."

#: ../../whatsnew/3.13.rst:2421
msgid ""
":c:func:`!PyEval_CallMethod`: Use :c:func:`PyObject_CallMethod` instead."
msgstr ""
":c:func:`!PyEval_CallMethod`: Use :c:func:`PyObject_CallMethod` em vez disso."

#: ../../whatsnew/3.13.rst:2423
msgid ":c:func:`!PyCFunction_Call`: Use :c:func:`PyObject_Call` instead."
msgstr ":c:func:`!PyCFunction_Call`: Use :c:func:`PyObject_Call` em vez disso."

#: ../../whatsnew/3.13.rst:2426
msgid "(Contributed by Victor Stinner in :gh:`105107`.)"
msgstr "(Contribuído por Victor Stinner em :gh:`105107`.)"

#: ../../whatsnew/3.13.rst:2428
msgid ""
"Remove the following old functions to configure the Python initialization, "
"deprecated in Python 3.11:"
msgstr ""
"Remover as seguintes funções antigas para configurar a inicialização do "
"Python, obsoletas no Python 3.11:"

#: ../../whatsnew/3.13.rst:2431
msgid ""
":c:func:`!PySys_AddWarnOptionUnicode`: Use :c:member:`PyConfig.warnoptions` "
"instead."
msgstr ""
":c:func:`!PySys_AddWarnOptionUnicode`: Use :c:member:`PyConfig.warnoptions` "
"em vez disso."

#: ../../whatsnew/3.13.rst:2433
msgid ""
":c:func:`!PySys_AddWarnOption`: Use :c:member:`PyConfig.warnoptions` instead."
msgstr ""
":c:func:`!PySys_AddWarnOption`: Use :c:member:`PyConfig.warnoptions` em vez "
"disso."

#: ../../whatsnew/3.13.rst:2435
msgid ":c:func:`!PySys_AddXOption`: Use :c:member:`PyConfig.xoptions` instead."
msgstr ""
":c:func:`!PySys_AddXOption`: Use :c:member:`PyConfig.xoptions` em vez disso."

#: ../../whatsnew/3.13.rst:2437
msgid ""
":c:func:`!PySys_HasWarnOptions`: Use :c:member:`PyConfig.xoptions` instead."
msgstr ""
":c:func:`!PySys_HasWarnOptions`: Use :c:member:`PyConfig.xoptions` em vez "
"disso."

#: ../../whatsnew/3.13.rst:2439
msgid ""
":c:func:`!PySys_SetPath`: Set :c:member:`PyConfig.module_search_paths` "
"instead."
msgstr ""
":c:func:`!PySys_SetPath`: Defina :c:member:`PyConfig.module_search_paths` em "
"vez disso."

#: ../../whatsnew/3.13.rst:2441
msgid ""
":c:func:`!Py_SetPath`: Set :c:member:`PyConfig.module_search_paths` instead."
msgstr ""
":c:func:`!Py_SetPath`: Defina :c:member:`PyConfig.module_search_paths` em "
"vez disso."

#: ../../whatsnew/3.13.rst:2443
msgid ""
":c:func:`!Py_SetStandardStreamEncoding`: Set :c:member:`PyConfig."
"stdio_encoding` instead, and set also maybe :c:member:`PyConfig."
"legacy_windows_stdio` (on Windows)."
msgstr ""
":c:func:`!Py_SetStandardStreamEncoding`: Defina :c:member:`PyConfig."
"stdio_encoding` em vez disso, e defina também possivelmente :c:member:"
"`PyConfig.legacy_windows_stdio` (no Windows)."

#: ../../whatsnew/3.13.rst:2446
msgid ""
":c:func:`!_Py_SetProgramFullPath`: Set :c:member:`PyConfig.executable` "
"instead."
msgstr ""
":c:func:`!_Py_SetProgramFullPath`: Defina :c:member:`PyConfig.executable` em "
"vez disso."

#: ../../whatsnew/3.13.rst:2449
msgid ""
"Use the new :c:type:`PyConfig` API of the :ref:`Python Initialization "
"Configuration <init-config>` instead (:pep:`587`), added to Python 3.8. "
"(Contributed by Victor Stinner in :gh:`105145`.)"
msgstr ""
"Use a nova API :c:type:`PyConfig` da :ref:`Configuração de Inicialização do "
"Python <init-config>` em vez disso (:pep:`587`), adicionada ao Python 3.8. "
"(Contribuído por Victor Stinner em :gh:`105145`.)"

#: ../../whatsnew/3.13.rst:2453
msgid ""
"Remove :c:func:`!PyEval_AcquireLock` and :c:func:`!PyEval_ReleaseLock` "
"functions, deprecated in Python 3.2. They didn't update the current thread "
"state. They can be replaced with:"
msgstr ""
"Remover as funções :c:func:`!PyEval_AcquireLock` e :c:func:`!"
"PyEval_ReleaseLock`, obsoletas no Python 3.2. Elas não atualizavam o estado "
"da thread atual. Podem ser substituídas por:"

#: ../../whatsnew/3.13.rst:2458
msgid ":c:func:`PyEval_SaveThread` and :c:func:`PyEval_RestoreThread`;"
msgstr ":c:func:`PyEval_SaveThread` e :c:func:`PyEval_RestoreThread`;"

#: ../../whatsnew/3.13.rst:2459
msgid ""
"low-level :c:func:`PyEval_AcquireThread` and :c:func:`PyEval_RestoreThread`;"
msgstr ""
"nível baixo :c:func:`PyEval_AcquireThread` e :c:func:`PyEval_RestoreThread`;"

#: ../../whatsnew/3.13.rst:2460
msgid "or :c:func:`PyGILState_Ensure` and :c:func:`PyGILState_Release`."
msgstr "ou :c:func:`PyGILState_Ensure` e :c:func:`PyGILState_Release`."

#: ../../whatsnew/3.13.rst:2462
msgid "(Contributed by Victor Stinner in :gh:`105182`.)"
msgstr "(Contribuído por Victor Stinner em :gh:`105182`.)"

#: ../../whatsnew/3.13.rst:2464
msgid ""
"Remove the :c:func:`!PyEval_ThreadsInitialized` function, deprecated in "
"Python 3.9. Since Python 3.7, :c:func:`!Py_Initialize` always creates the "
"GIL: calling :c:func:`!PyEval_InitThreads` does nothing and :c:func:`!"
"PyEval_ThreadsInitialized` always returns non-zero. (Contributed by Victor "
"Stinner in :gh:`105182`.)"
msgstr ""
"Remover a função :c:func:`!PyEval_ThreadsInitialized`, obsoleta no Python "
"3.9. Desde o Python 3.7, :c:func:`!Py_Initialize` sempre cria o GIL: chamar :"
"c:func:`!PyEval_InitThreads` não faz nada e :c:func:`!"
"PyEval_ThreadsInitialized` sempre retorna um valor não-zero. (Contribuído "
"por Victor Stinner em :gh:`105182`.)"

#: ../../whatsnew/3.13.rst:2471
msgid ""
"Remove the :c:func:`!_PyInterpreterState_Get` alias to :c:func:"
"`PyInterpreterState_Get()` which was kept for backward compatibility with "
"Python 3.8. The `pythoncapi-compat project`_ can be used to get :c:func:"
"`PyInterpreterState_Get()` on Python 3.8 and older. (Contributed by Victor "
"Stinner in :gh:`106320`.)"
msgstr ""
"Remover o alias :c:func:`!_PyInterpreterState_Get` para :c:func:"
"`PyInterpreterState_Get()`, que foi mantido para compatibilidade retroativa "
"com o Python 3.8. O projeto `pythoncapi-compat project`_ pode ser usado para "
"obter :c:func:`PyInterpreterState_Get()` no Python 3.8 e versões anteriores. "
"(Contribuído por Victor Stinner em :gh:`106320`.)"

#: ../../whatsnew/3.13.rst:2478
msgid ""
"Remove the private :c:func:`!_PyObject_FastCall` function: use :c:func:`!"
"PyObject_Vectorcall` which is available since Python 3.8 (:pep:`590`). "
"(Contributed by Victor Stinner in :gh:`106023`.)"
msgstr ""
"Remover a função privada :c:func:`!_PyObject_FastCall`: use :c:func:`!"
"PyObject_Vectorcall`, que está disponível desde o Python 3.8 (:pep:`590`). "
"(Contribuído por Victor Stinner em :gh:`106023`.)"

#: ../../whatsnew/3.13.rst:2483
msgid ""
"Remove the ``cpython/pytime.h`` header file, which only contained private "
"functions. (Contributed by Victor Stinner in :gh:`106316`.)"
msgstr ""
"Remover o ficheiro de cabeçalho ``cpython/pytime.h``, que continha apenas "
"funções privadas. (Contribuído por Victor Stinner em :gh:`106316`.)"

#: ../../whatsnew/3.13.rst:2487
msgid ""
"Remove the undocumented ``PY_TIMEOUT_MAX`` constant from the limited C API. "
"(Contributed by Victor Stinner in :gh:`110014`.)"
msgstr ""
"Remover a constante indocumentada ``PY_TIMEOUT_MAX`` da API C limitada. "
"(Contribuído por Victor Stinner em :gh:`110014`.)"

#: ../../whatsnew/3.13.rst:2490
msgid ""
"Remove the old trashcan macros ``Py_TRASHCAN_SAFE_BEGIN`` and "
"``Py_TRASHCAN_SAFE_END``. Replace both with the new macros "
"``Py_TRASHCAN_BEGIN`` and ``Py_TRASHCAN_END``. (Contributed by Irit Katriel "
"in :gh:`105111`.)"
msgstr ""
"Remover as macros antigas de lixeira ``Py_TRASHCAN_SAFE_BEGIN`` e "
"``Py_TRASHCAN_SAFE_END``. Substitua ambas pelas novas macros "
"``Py_TRASHCAN_BEGIN`` e ``Py_TRASHCAN_END``. (Contribuído por Irit Katriel "
"em :gh:`105111`.)"

#: ../../whatsnew/3.13.rst:2497
msgid "Deprecated C APIs"
msgstr "APIs C Obsoletas"

#: ../../whatsnew/3.13.rst:2499
msgid "Deprecate old Python initialization functions:"
msgstr "Tornar obsoletas as funções antigas de inicialização do Python:"

#: ../../whatsnew/3.13.rst:2501
#: ../../deprecations/c-api-pending-removal-in-3.15.rst:12
msgid ""
":c:func:`PySys_ResetWarnOptions`: Clear :data:`sys.warnoptions` and :data:`!"
"warnings.filters` instead."
msgstr ""
"A função :c:func:`PySys_ResetWarnOptions`: Limpe :data:`sys.warnoptions` e :"
"data:`!warnings.filters` em vez disso."

#: ../../whatsnew/3.13.rst:2503
msgid ":c:func:`Py_GetExecPrefix`: Get :data:`sys.exec_prefix` instead."
msgstr ""
":c:func:`Py_GetExecPrefix`: Obtenha :data:`sys.exec_prefix` em vez disso."

#: ../../whatsnew/3.13.rst:2505
#: ../../deprecations/c-api-pending-removal-in-3.15.rst:16
msgid ":c:func:`Py_GetPath`: Get :data:`sys.path` instead."
msgstr ":c:func:`Py_GetPath`: Obtenha :data:`sys.path` em vez disso."

#: ../../whatsnew/3.13.rst:2507
msgid ":c:func:`Py_GetPrefix`: Get :data:`sys.prefix` instead."
msgstr ":c:func:`Py_GetPrefix`: Obtenha :data:`sys.prefix` em vez disso."

#: ../../whatsnew/3.13.rst:2509
#: ../../deprecations/c-api-pending-removal-in-3.15.rst:20
msgid ":c:func:`Py_GetProgramFullPath`: Get :data:`sys.executable` instead."
msgstr ""
":c:func:`Py_GetProgramFullPath`: Obtenha :data:`sys.executable` em vez disso."

#: ../../whatsnew/3.13.rst:2511
#: ../../deprecations/c-api-pending-removal-in-3.15.rst:22
msgid ":c:func:`Py_GetProgramName`: Get :data:`sys.executable` instead."
msgstr ""
":c:func:`Py_GetProgramName`: Obtenha :data:`sys.executable` em vez disso."

#: ../../whatsnew/3.13.rst:2513
#: ../../deprecations/c-api-pending-removal-in-3.15.rst:24
msgid ""
":c:func:`Py_GetPythonHome`: Get :c:member:`PyConfig.home` or the :envvar:"
"`PYTHONHOME` environment variable instead."
msgstr ""
":c:func:`Py_GetPythonHome`: Obtenha :c:member:`PyConfig.home` ou a variável "
"de ambiente :envvar:`PYTHONHOME` em vez disso."

#: ../../whatsnew/3.13.rst:2517
msgid "(Contributed by Victor Stinner in :gh:`105145`.)"
msgstr "(Contribuído por Victor Stinner em :gh:`105145`.)"

#: ../../whatsnew/3.13.rst:2519
msgid ""
":term:`Soft deprecate <soft deprecated>` the :c:func:`PyEval_GetBuiltins`, :"
"c:func:`PyEval_GetGlobals`, and :c:func:`PyEval_GetLocals` functions, which "
"return a :term:`borrowed reference`. (Soft deprecated as part of :pep:`667`.)"
msgstr ""
"Tornar :term:`obsoleto de forma suave <soft deprecated>` as funções :c:func:"
"`PyEval_GetBuiltins`, :c:func:`PyEval_GetGlobals`, e :c:func:"
"`PyEval_GetLocals`, que retornam uma :term:`referência emprestada`. "
"(Obsoleto de forma suave como parte da :pep:`667`.)"

#: ../../whatsnew/3.13.rst:2525
msgid ""
"Deprecate the :c:func:`PyImport_ImportModuleNoBlock` function, which is just "
"an alias to :c:func:`PyImport_ImportModule` since Python 3.3. (Contributed "
"by Victor Stinner in :gh:`105396`.)"
msgstr ""
"Tornar obsoleta a função :c:func:`PyImport_ImportModuleNoBlock`, que é "
"apenas um alias para :c:func:`PyImport_ImportModule` desde o Python 3.3. "
"(Contribuído por Victor Stinner em :gh:`105396`.)"

#: ../../whatsnew/3.13.rst:2529
msgid ""
":term:`Soft deprecate <soft deprecated>` the :c:func:`PyModule_AddObject` "
"function. It should be replaced with :c:func:`PyModule_Add` or :c:func:"
"`PyModule_AddObjectRef`. (Contributed by Serhiy Storchaka in :gh:`86493`.)"
msgstr ""
"Tornar :term:`obsoleto de forma suave <soft deprecated>` a função :c:func:"
"`PyModule_AddObject`. Deve ser substituída por :c:func:`PyModule_Add` ou :c:"
"func:`PyModule_AddObjectRef`. (Contribuído por Serhiy Storchaka em :gh:"
"`86493`.)"

#: ../../whatsnew/3.13.rst:2535
msgid ""
"Deprecate the old ``Py_UNICODE`` and ``PY_UNICODE_TYPE`` types and the :c:"
"macro:`!Py_UNICODE_WIDE` define. Use the :c:type:`wchar_t` type directly "
"instead. Since Python 3.3, ``Py_UNICODE`` and ``PY_UNICODE_TYPE`` are just "
"aliases to :c:type:`!wchar_t`. (Contributed by Victor Stinner in :gh:"
"`105156`.)"
msgstr ""
"Tornar obsoletos os tipos antigos ``Py_UNICODE`` e ``PY_UNICODE_TYPE`` e a "
"macro :c:macro:`!Py_UNICODE_WIDE`. Use o tipo :c:type:`wchar_t` diretamente "
"em vez disso. Desde o Python 3.3, ``Py_UNICODE`` e ``PY_UNICODE_TYPE`` são "
"apenas alias para :c:type:`!wchar_t`. (Contribuído por Victor Stinner em :gh:"
"`105156`.)"

#: ../../whatsnew/3.13.rst:2542
msgid ""
"Deprecate the :c:func:`PyWeakref_GetObject` and :c:func:"
"`PyWeakref_GET_OBJECT` functions, which return a :term:`borrowed reference`. "
"Replace them with the new :c:func:`PyWeakref_GetRef` function, which returns "
"a :term:`strong reference`. The `pythoncapi-compat project`_ can be used to "
"get :c:func:`PyWeakref_GetRef` on Python 3.12 and older. (Contributed by "
"Victor Stinner in :gh:`105927`.)"
msgstr ""
"Tornar obsoletas as funções :c:func:`PyWeakref_GetObject` e :c:func:"
"`PyWeakref_GET_OBJECT`, que retornam uma :term:`referência emprestada`. "
"Substitua-as pela nova função :c:func:`PyWeakref_GetRef`, que retorna uma :"
"term:`referência forte`. O projeto `pythoncapi-compat project`_ pode ser "
"usado para obter :c:func:`PyWeakref_GetRef` no Python 3.12 e versões "
"anteriores. (Contribuído por Victor Stinner em :gh:`105927`.)"

#: ../../deprecations/c-api-pending-removal-in-3.14.rst:4
msgid ""
"The ``ma_version_tag`` field in :c:type:`PyDictObject` for extension modules "
"(:pep:`699`; :gh:`101193`)."
msgstr ""
"O campo ``ma_version_tag`` em :c:type:`PyDictObject` para módulos de "
"extensão (:pep:`699`; :gh:`101193`)."

#: ../../deprecations/c-api-pending-removal-in-3.14.rst:7
msgid ""
"Creating :c:data:`immutable types <Py_TPFLAGS_IMMUTABLETYPE>` with mutable "
"bases (:gh:`95388`)."
msgstr ""
"A criação de :c:data:`tipos imutáveis <Py_TPFLAGS_IMMUTABLETYPE>` com bases "
"mutáveis (:gh:`95388`)."

#: ../../deprecations/c-api-pending-removal-in-3.14.rst:10
msgid ""
"Functions to configure Python's initialization, deprecated in Python 3.11:"
msgstr ""
"Funções para configurar a inicialização do Python, obsoletas no Python 3.11:"

#: ../../deprecations/c-api-pending-removal-in-3.14.rst:12
msgid ":c:func:`!PySys_SetArgvEx()`: Set :c:member:`PyConfig.argv` instead."
msgstr ""
":c:func:`!PySys_SetArgvEx()`: Defina :c:member:`PyConfig.argv` em vez disso."

#: ../../deprecations/c-api-pending-removal-in-3.14.rst:14
msgid ":c:func:`!PySys_SetArgv()`: Set :c:member:`PyConfig.argv` instead."
msgstr ""
":c:func:`!PySys_SetArgv()`: Defina :c:member:`PyConfig.argv` em vez disso."

#: ../../deprecations/c-api-pending-removal-in-3.14.rst:16
msgid ""
":c:func:`!Py_SetProgramName()`: Set :c:member:`PyConfig.program_name` "
"instead."
msgstr ""
"A função :c:func:`!Py_SetProgramName()`: Defina :c:member:`PyConfig."
"program_name` em vez disso."

#: ../../deprecations/c-api-pending-removal-in-3.14.rst:18
msgid ":c:func:`!Py_SetPythonHome()`: Set :c:member:`PyConfig.home` instead."
msgstr ""
":c:func:`!Py_SetPythonHome()`: Defina :c:member:`PyConfig.home` em vez disso."

#: ../../deprecations/c-api-pending-removal-in-3.14.rst:21
#: ../../deprecations/c-api-pending-removal-in-3.14.rst:71
msgid ""
"The :c:func:`Py_InitializeFromConfig` API should be used with :c:type:"
"`PyConfig` instead."
msgstr ""
"A API :c:func:`Py_InitializeFromConfig` deve ser usada com :c:type:"
"`PyConfig` em vez disso."

#: ../../deprecations/c-api-pending-removal-in-3.14.rst:24
msgid "Global configuration variables:"
msgstr "Variáveis de configuração global:"

#: ../../deprecations/c-api-pending-removal-in-3.14.rst:26
msgid ":c:var:`Py_DebugFlag`: Use :c:member:`PyConfig.parser_debug` instead."
msgstr ""

#: ../../deprecations/c-api-pending-removal-in-3.14.rst:28
msgid ":c:var:`Py_VerboseFlag`: Use :c:member:`PyConfig.verbose` instead."
msgstr ""

#: ../../deprecations/c-api-pending-removal-in-3.14.rst:30
msgid ":c:var:`Py_QuietFlag`: Use :c:member:`PyConfig.quiet` instead."
msgstr ""

#: ../../deprecations/c-api-pending-removal-in-3.14.rst:32
msgid ""
":c:var:`Py_InteractiveFlag`: Use :c:member:`PyConfig.interactive` instead."
msgstr ""

#: ../../deprecations/c-api-pending-removal-in-3.14.rst:34
msgid ":c:var:`Py_InspectFlag`: Use :c:member:`PyConfig.inspect` instead."
msgstr ""

#: ../../deprecations/c-api-pending-removal-in-3.14.rst:36
msgid ""
":c:var:`Py_OptimizeFlag`: Use :c:member:`PyConfig.optimization_level` "
"instead."
msgstr ""

#: ../../deprecations/c-api-pending-removal-in-3.14.rst:38
msgid ":c:var:`Py_NoSiteFlag`: Use :c:member:`PyConfig.site_import` instead."
msgstr ""

#: ../../deprecations/c-api-pending-removal-in-3.14.rst:40
msgid ""
":c:var:`Py_BytesWarningFlag`: Use :c:member:`PyConfig.bytes_warning` instead."
msgstr ""

#: ../../deprecations/c-api-pending-removal-in-3.14.rst:42
msgid ""
":c:var:`Py_FrozenFlag`: Use :c:member:`PyConfig.pathconfig_warnings` instead."
msgstr ""

#: ../../deprecations/c-api-pending-removal-in-3.14.rst:44
msgid ""
":c:var:`Py_IgnoreEnvironmentFlag`: Use :c:member:`PyConfig.use_environment` "
"instead."
msgstr ""

#: ../../deprecations/c-api-pending-removal-in-3.14.rst:46
msgid ""
":c:var:`Py_DontWriteBytecodeFlag`: Use :c:member:`PyConfig.write_bytecode` "
"instead."
msgstr ""

#: ../../deprecations/c-api-pending-removal-in-3.14.rst:48
msgid ""
":c:var:`Py_NoUserSiteDirectory`: Use :c:member:`PyConfig."
"user_site_directory` instead."
msgstr ""

#: ../../deprecations/c-api-pending-removal-in-3.14.rst:50
msgid ""
":c:var:`Py_UnbufferedStdioFlag`: Use :c:member:`PyConfig.buffered_stdio` "
"instead."
msgstr ""

#: ../../deprecations/c-api-pending-removal-in-3.14.rst:52
msgid ""
":c:var:`Py_HashRandomizationFlag`: Use :c:member:`PyConfig.use_hash_seed` "
"and :c:member:`PyConfig.hash_seed` instead."
msgstr ""

#: ../../deprecations/c-api-pending-removal-in-3.14.rst:55
msgid ":c:var:`Py_IsolatedFlag`: Use :c:member:`PyConfig.isolated` instead."
msgstr ""

#: ../../deprecations/c-api-pending-removal-in-3.14.rst:57
msgid ""
":c:var:`Py_LegacyWindowsFSEncodingFlag`: Use :c:member:`PyPreConfig."
"legacy_windows_fs_encoding` instead."
msgstr ""

#: ../../deprecations/c-api-pending-removal-in-3.14.rst:59
msgid ""
":c:var:`Py_LegacyWindowsStdioFlag`: Use :c:member:`PyConfig."
"legacy_windows_stdio` instead."
msgstr ""

#: ../../deprecations/c-api-pending-removal-in-3.14.rst:61
msgid ""
":c:var:`!Py_FileSystemDefaultEncoding`: Use :c:member:`PyConfig."
"filesystem_encoding` instead."
msgstr ""

#: ../../deprecations/c-api-pending-removal-in-3.14.rst:63
msgid ""
":c:var:`!Py_HasFileSystemDefaultEncoding`: Use :c:member:`PyConfig."
"filesystem_encoding` instead."
msgstr ""

#: ../../deprecations/c-api-pending-removal-in-3.14.rst:65
msgid ""
":c:var:`!Py_FileSystemDefaultEncodeErrors`: Use :c:member:`PyConfig."
"filesystem_errors` instead."
msgstr ""

#: ../../deprecations/c-api-pending-removal-in-3.14.rst:67
msgid ""
":c:var:`!Py_UTF8Mode`: Use :c:member:`PyPreConfig.utf8_mode` instead. (see :"
"c:func:`Py_PreInitialize`)"
msgstr ""

#: ../../deprecations/c-api-pending-removal-in-3.15.rst:4
msgid ""
"The :c:func:`PyImport_ImportModuleNoBlock`: Use :c:func:"
"`PyImport_ImportModule` instead."
msgstr ""
"A função :c:func:`PyImport_ImportModuleNoBlock`: Use :c:func:"
"`PyImport_ImportModule` em vez disso."

#: ../../deprecations/c-api-pending-removal-in-3.15.rst:6
msgid ""
":c:func:`PyWeakref_GetObject` and :c:func:`PyWeakref_GET_OBJECT`: Use :c:"
"func:`PyWeakref_GetRef` instead."
msgstr ""

#: ../../deprecations/c-api-pending-removal-in-3.15.rst:8
msgid ""
":c:type:`Py_UNICODE` type and the :c:macro:`!Py_UNICODE_WIDE` macro: Use :c:"
"type:`wchar_t` instead."
msgstr ""
"O tipo :c:type:`Py_UNICODE` e a macro :c:macro:`!Py_UNICODE_WIDE`: Use :c:"
"type:`wchar_t` em vez disso."

#: ../../deprecations/c-api-pending-removal-in-3.15.rst:10
msgid "Python initialization functions:"
msgstr ""

#: ../../deprecations/c-api-pending-removal-in-3.15.rst:14
msgid ""
":c:func:`Py_GetExecPrefix`: Get :data:`sys.base_exec_prefix` and :data:`sys."
"exec_prefix` instead."
msgstr ""

#: ../../deprecations/c-api-pending-removal-in-3.15.rst:18
msgid ""
":c:func:`Py_GetPrefix`: Get :data:`sys.base_prefix` and :data:`sys.prefix` "
"instead."
msgstr ""

#: ../../deprecations/c-api-pending-removal-in-3.16.rst:4
msgid "The bundled copy of ``libmpdec``."
msgstr "A cópia incluída de ``libmpdec``."

#: ../../deprecations/c-api-pending-removal-in-future.rst:4
msgid ""
"The following APIs are deprecated and will be removed, although there is "
"currently no date scheduled for their removal."
msgstr ""
"As seguintes APIs estão obsoletas e serão removidas, embora atualmente não "
"haja data agendada para a sua remoção."

#: ../../deprecations/c-api-pending-removal-in-future.rst:7
msgid ":c:macro:`Py_TPFLAGS_HAVE_FINALIZE`: Unneeded since Python 3.8."
msgstr ":c:macro:`Py_TPFLAGS_HAVE_FINALIZE`: Desnecessária desde o Python 3.8."

#: ../../deprecations/c-api-pending-removal-in-future.rst:9
msgid ":c:func:`PyErr_Fetch`: Use :c:func:`PyErr_GetRaisedException` instead."
msgstr ""
":c:func:`PyErr_Fetch`: Use :c:func:`PyErr_GetRaisedException` em vez disso."

#: ../../deprecations/c-api-pending-removal-in-future.rst:11
msgid ""
":c:func:`PyErr_NormalizeException`: Use :c:func:`PyErr_GetRaisedException` "
"instead."
msgstr ""
"A função :c:func:`PyErr_NormalizeException`: Use :c:func:"
"`PyErr_GetRaisedException` em vez disso."

#: ../../deprecations/c-api-pending-removal-in-future.rst:13
msgid ""
":c:func:`PyErr_Restore`: Use :c:func:`PyErr_SetRaisedException` instead."
msgstr ""
"A função :c:func:`PyErr_Restore`: Use :c:func:`PyErr_SetRaisedException` em "
"vez disso."

#: ../../deprecations/c-api-pending-removal-in-future.rst:15
msgid ""
":c:func:`PyModule_GetFilename`: Use :c:func:`PyModule_GetFilenameObject` "
"instead."
msgstr ""
"A função :c:func:`PyModule_GetFilename`: Use :c:func:"
"`PyModule_GetFilenameObject` em vez disso."

#: ../../deprecations/c-api-pending-removal-in-future.rst:17
msgid ":c:func:`PyOS_AfterFork`: Use :c:func:`PyOS_AfterFork_Child` instead."
msgstr ""
"A função :c:func:`PyOS_AfterFork`: Use :c:func:`PyOS_AfterFork_Child` em vez "
"disso."

#: ../../deprecations/c-api-pending-removal-in-future.rst:19
msgid ""
":c:func:`PySlice_GetIndicesEx`: Use :c:func:`PySlice_Unpack` and :c:func:"
"`PySlice_AdjustIndices` instead."
msgstr ""
"A função :c:func:`PySlice_GetIndicesEx`: Use :c:func:`PySlice_Unpack` e :c:"
"func:`PySlice_AdjustIndices` em vez disso."

#: ../../deprecations/c-api-pending-removal-in-future.rst:21
msgid ""
":c:func:`!PyUnicode_AsDecodedObject`: Use :c:func:`PyCodec_Decode` instead."
msgstr ""
"A função :c:func:`!PyUnicode_AsDecodedObject`: Use :c:func:`PyCodec_Decode` "
"em vez disso."

#: ../../deprecations/c-api-pending-removal-in-future.rst:23
msgid ""
":c:func:`!PyUnicode_AsDecodedUnicode`: Use :c:func:`PyCodec_Decode` instead."
msgstr ""

#: ../../deprecations/c-api-pending-removal-in-future.rst:25
msgid ""
":c:func:`!PyUnicode_AsEncodedObject`: Use :c:func:`PyCodec_Encode` instead."
msgstr ""
"A função :c:func:`!PyUnicode_AsEncodedObject`: Use :c:func:`PyCodec_Encode` "
"em vez disso."

#: ../../deprecations/c-api-pending-removal-in-future.rst:27
msgid ""
":c:func:`!PyUnicode_AsEncodedUnicode`: Use :c:func:`PyCodec_Encode` instead."
msgstr ""

#: ../../deprecations/c-api-pending-removal-in-future.rst:29
msgid ":c:func:`PyUnicode_READY`: Unneeded since Python 3.12"
msgstr "A função :c:func:`PyUnicode_READY`: Desnecessária desde o Python 3.12."

#: ../../deprecations/c-api-pending-removal-in-future.rst:31
msgid ":c:func:`!PyErr_Display`: Use :c:func:`PyErr_DisplayException` instead."
msgstr ""
"A função :c:func:`!PyErr_Display`: Use :c:func:`PyErr_DisplayException` em "
"vez disso."

#: ../../deprecations/c-api-pending-removal-in-future.rst:33
msgid ""
":c:func:`!_PyErr_ChainExceptions`: Use :c:func:`!_PyErr_ChainExceptions1` "
"instead."
msgstr ""
"A função :c:func:`!_PyErr_ChainExceptions`: Use :c:func:`!"
"_PyErr_ChainExceptions1` em vez disso."

#: ../../deprecations/c-api-pending-removal-in-future.rst:35
msgid ""
":c:member:`!PyBytesObject.ob_shash` member: call :c:func:`PyObject_Hash` "
"instead."
msgstr ""
"O membro :c:member:`!PyBytesObject.ob_shash`: Chame :c:func:`PyObject_Hash` "
"em vez disso."

#: ../../deprecations/c-api-pending-removal-in-future.rst:37
msgid ":c:member:`!PyDictObject.ma_version_tag` member."
msgstr ""

#: ../../deprecations/c-api-pending-removal-in-future.rst:38
msgid "Thread Local Storage (TLS) API:"
msgstr "API de Armazenamento Local de *Thread* (TLS):"

#: ../../deprecations/c-api-pending-removal-in-future.rst:40
msgid ""
":c:func:`PyThread_create_key`: Use :c:func:`PyThread_tss_alloc` instead."
msgstr ""
"A função :c:func:`PyThread_create_key`: Use :c:func:`PyThread_tss_alloc` em "
"vez disso."

#: ../../deprecations/c-api-pending-removal-in-future.rst:42
msgid ":c:func:`PyThread_delete_key`: Use :c:func:`PyThread_tss_free` instead."
msgstr ""
"A função :c:func:`PyThread_delete_key`: Use :c:func:`PyThread_tss_free` em "
"vez disso."

#: ../../deprecations/c-api-pending-removal-in-future.rst:44
msgid ""
":c:func:`PyThread_set_key_value`: Use :c:func:`PyThread_tss_set` instead."
msgstr ""
"A função :c:func:`PyThread_set_key_value`: Use :c:func:`PyThread_tss_set` em "
"vez disso."

#: ../../deprecations/c-api-pending-removal-in-future.rst:46
msgid ""
":c:func:`PyThread_get_key_value`: Use :c:func:`PyThread_tss_get` instead."
msgstr ""
"A função :c:func:`PyThread_get_key_value`: Use :c:func:`PyThread_tss_get` em "
"vez disso."

#: ../../deprecations/c-api-pending-removal-in-future.rst:48
msgid ""
":c:func:`PyThread_delete_key_value`: Use :c:func:`PyThread_tss_delete` "
"instead."
msgstr ""
"A função :c:func:`PyThread_delete_key_value`: Use :c:func:"
"`PyThread_tss_delete` em vez disso."

#: ../../deprecations/c-api-pending-removal-in-future.rst:50
msgid ":c:func:`PyThread_ReInitTLS`: Unneeded since Python 3.7."
msgstr ""
"A função :c:func:`PyThread_ReInitTLS`: Desnecessária desde o Python 3.7."

#: ../../whatsnew/3.13.rst:2564
msgid "Build Changes"
msgstr "Alterações na Compilação"

#: ../../whatsnew/3.13.rst:2566
msgid ""
"``arm64-apple-ios`` and ``arm64-apple-ios-simulator`` are both now :pep:`11` "
"tier 3 platforms. (:ref:`PEP 730 <whatsnew313-platform-support>` written and "
"implementation contributed by Russell Keith-Magee in :gh:`114099`.)"
msgstr ""
"``arm64-apple-ios`` e ``arm64-apple-ios-simulator`` são agora ambas "
"plataformas :pep:`11` de nível 3. (:ref:`PEP 730 <whatsnew313-platform-"
"support>` escrito e implementação contribuída por Russell Keith-Magee em :gh:"
"`114099`.)"

#: ../../whatsnew/3.13.rst:2571
msgid ""
"``aarch64-linux-android`` and ``x86_64-linux-android`` are both now :pep:"
"`11` tier 3 platforms. (:ref:`PEP 738 <whatsnew313-platform-support>` "
"written and implementation contributed by Malcolm Smith in :gh:`116622`.)"
msgstr ""
"``aarch64-linux-android`` e ``x86_64-linux-android`` são agora ambas "
"plataformas :pep:`11` de nível 3. (:ref:`PEP 738 <whatsnew313-platform-"
"support>` escrito e implementação contribuída por Malcolm Smith em :gh:"
"`116622`.)"

#: ../../whatsnew/3.13.rst:2576
msgid ""
"``wasm32-wasi`` is now a :pep:`11` tier 2 platform. (Contributed by Brett "
"Cannon in :gh:`115192`.)"
msgstr ""
"``wasm32-wasi`` é agora uma plataforma :pep:`11` de nível 2. (Contribuído "
"por Brett Cannon em :gh:`115192`.)"

#: ../../whatsnew/3.13.rst:2579
msgid ""
"``wasm32-emscripten`` is no longer a :pep:`11` supported platform. "
"(Contributed by Brett Cannon in :gh:`115192`.)"
msgstr ""
"``wasm32-emscripten`` já não é uma plataforma suportada :pep:`11`. "
"(Contribuído por Brett Cannon em :gh:`115192`.)"

#: ../../whatsnew/3.13.rst:2582
msgid ""
"Building CPython now requires a compiler with support for the C11 atomic "
"library, GCC built-in atomic functions, or MSVC interlocked intrinsics."
msgstr ""
"A compilação do CPython requer agora um compilador com suporte para a "
"biblioteca atómica C11, funções atómicas integradas do GCC ou intrínsecos "
"interligados do MSVC."

#: ../../whatsnew/3.13.rst:2585
msgid ""
"Autoconf 2.71 and aclocal 1.16.5 are now required to regenerate the :file:"
"`configure` script. (Contributed by Christian Heimes in :gh:`89886` and by "
"Victor Stinner in :gh:`112090`.)"
msgstr ""
"Autoconf 2.71 e aclocal 1.16.5 são agora necessários para regenerar o "
"script :file:`configure`. (Contribuído por Christian Heimes em :gh:`89886` e "
"por Victor Stinner em :gh:`112090`.)"

#: ../../whatsnew/3.13.rst:2589
msgid ""
"SQLite 3.15.2 or newer is required to build the :mod:`sqlite3` extension "
"module. (Contributed by Erlend Aasland in :gh:`105875`.)"
msgstr ""
"SQLite 3.15.2 ou mais recente é necessário para compilar o módulo de "
"extensão :mod:`sqlite3`. (Contribuído por Erlend Aasland em :gh:`105875`.)"

#: ../../whatsnew/3.13.rst:2593
msgid ""
"CPython now bundles the `mimalloc library`_ by default. It is licensed under "
"the MIT license; see :ref:`mimalloc license <mimalloc-license>`. The bundled "
"mimalloc has custom changes, see :gh:`113141` for details. (Contributed by "
"Dino Viehland in :gh:`109914`.)"
msgstr ""
"O CPython agora inclui por defeito a `biblioteca mimalloc`_. Está licenciada "
"sob a licença MIT; consulte :ref:`licença mimalloc <mimalloc-license>`. A "
"versão incluída do mimalloc tem alterações personalizadas, consulte :gh:"
"`113141` para mais detalhes. (Contribuído por Dino Viehland em :gh:`109914`.)"

#: ../../whatsnew/3.13.rst:2601
msgid ""
"The :file:`configure` option :option:`--with-system-libmpdec` now defaults "
"to ``yes``. The bundled copy of ``libmpdec`` will be removed in Python 3.16."
msgstr ""
"A opção :file:`configure` :option:`--with-system-libmpdec` agora tem como "
"valor predefinido ``yes``. A cópia incluída de ``libmpdec`` será removida no "
"Python 3.16."

#: ../../whatsnew/3.13.rst:2605
msgid ""
"Python built with :file:`configure` :option:`--with-trace-refs` (tracing "
"references) is now ABI compatible with the Python release build and :ref:"
"`debug build <debug-build>`. (Contributed by Victor Stinner in :gh:`108634`.)"
msgstr ""
"O Python compilado com :file:`configure` :option:`--with-trace-refs` "
"(rastreamento de referências) é agora compatível em ABI com a versão de "
"lançamento do Python e a :ref:`versão de depuração <debug-build>`. "
"(Contribuído por Victor Stinner em :gh:`108634`.)"

#: ../../whatsnew/3.13.rst:2610
msgid ""
"On POSIX systems, the pkg-config (``.pc``) filenames now include the ABI "
"flags.  For example, the free-threaded build generates ``python-3.13t.pc`` "
"and the debug build generates ``python-3.13d.pc``."
msgstr ""
"Nos sistemas POSIX, os nomes de ficheiros pkg-config (``.pc``) agora incluem "
"as flags ABI. Por exemplo, a compilação com threads livres gera "
"``python-3.13t.pc`` e a compilação de depuração gera ``python-3.13d.pc``."

#: ../../whatsnew/3.13.rst:2614
msgid ""
"The ``errno``, ``fcntl``, ``grp``, ``md5``, ``pwd``, ``resource``, "
"``termios``, ``winsound``, ``_ctypes_test``, ``_multiprocessing."
"posixshmem``, ``_scproxy``, ``_stat``, ``_statistics``, ``_testconsole``, "
"``_testimportmultiple`` and ``_uuid`` C extensions are now built with the :"
"ref:`limited C API <limited-c-api>`. (Contributed by Victor Stinner in :gh:"
"`85283`.)"
msgstr ""
"As extensões C ``errno``, ``fcntl``, ``grp``, ``md5``, ``pwd``, "
"``resource``, ``termios``, ``winsound``, ``_ctypes_test``, "
"``_multiprocessing.posixshmem``, ``_scproxy``, ``_stat``, ``_statistics``, "
"``_testconsole``, ``_testimportmultiple`` e ``_uuid`` são agora compiladas "
"com a :ref:`API C limitada <limited-c-api>`. (Contribuído por Victor Stinner "
"em :gh:`85283`.)"

#: ../../whatsnew/3.13.rst:2623
msgid "Porting to Python 3.13"
msgstr "Portar para Python 3.13"

#: ../../whatsnew/3.13.rst:2625
msgid ""
"This section lists previously described changes and other bugfixes that may "
"require changes to your code."
msgstr ""
"Esta secção lista alterações previamente descritas e outras correções de "
"erros que podem exigir alterações no seu código."

#: ../../whatsnew/3.13.rst:2629
msgid "Changes in the Python API"
msgstr "Alterações na API do Python"

#: ../../whatsnew/3.13.rst:2633
msgid ""
":ref:`PEP 667 <whatsnew313-locals-semantics>` introduces several changes to "
"the semantics of :func:`locals` and :attr:`f_locals <frame.f_locals>`:"
msgstr ""
":ref:`PEP 667 <whatsnew313-locals-semantics>` introduz várias alterações à "
"semântica de :func:`locals` e :attr:`f_locals <frame.f_locals>`:"

#: ../../whatsnew/3.13.rst:2636
msgid ""
"Calling :func:`locals` in an :term:`optimized scope` now produces an "
"independent snapshot on each call, and hence no longer implicitly updates "
"previously returned references. Obtaining the legacy CPython behavior now "
"requires explicit calls to update the initially returned dictionary with the "
"results of subsequent calls to :func:`!locals`. Code execution functions "
"that implicitly target :func:`!locals` (such as ``exec`` and ``eval``) must "
"be passed an explicit namespace to access their results in an optimized "
"scope. (Changed as part of :pep:`667`.)"
msgstr ""
"Chamar :func:`locals` num :term:`âmbito otimizado` agora produz um "
"instantâneo independente em cada chamada, e, portanto, já não atualiza "
"implicitamente referências retornadas anteriormente. Obter o comportamento "
"legado do CPython agora requer chamadas explícitas para atualizar o "
"dicionário inicialmente retornado com os resultados de chamadas subsequentes "
"a :func:`!locals`. Funções de execução de código que visam implicitamente :"
"func:`!locals` (como ``exec`` e ``eval``) devem receber um espaço de nomes "
"explícito para aceder aos seus resultados num âmbito otimizado. (Alterado "
"como parte da :pep:`667`.)"

#: ../../whatsnew/3.13.rst:2645
msgid ""
"Calling :func:`locals` from a comprehension at module or class scope "
"(including via ``exec`` or ``eval``) once more behaves as if the "
"comprehension were running as an independent nested function (i.e. the local "
"variables from the containing scope are not included). In Python 3.12, this "
"had changed to include the local variables from the containing scope when "
"implementing :pep:`709`. (Changed as part of :pep:`667`.)"
msgstr ""
"Chamar :func:`locals` a partir de uma compreensão no âmbito de módulo ou "
"classe (incluindo via ``exec`` ou ``eval``) volta a comportar-se como se a "
"compreensão estivesse a ser executada como uma função aninhada independente "
"(ou seja, as variáveis locais do âmbito contido não estão incluídas). No "
"Python 3.12, isto tinha mudado para incluir as variáveis locais do âmbito "
"contido ao implementar :pep:`709`. (Alterado como parte da :pep:`667`.)"

#: ../../whatsnew/3.13.rst:2652
msgid ""
"Accessing :attr:`FrameType.f_locals <frame.f_locals>` in an :term:`optimized "
"scope` now returns a write-through proxy rather than a snapshot that gets "
"updated at ill-specified times. If a snapshot is desired, it must be created "
"explicitly with ``dict`` or the proxy's ``.copy()`` method. (Changed as part "
"of :pep:`667`.)"
msgstr ""
"Aceder a :attr:`FrameType.f_locals <frame.f_locals>` num :term:`âmbito "
"otimizado` agora retorna um proxy de escrita em vez de um instantâneo que é "
"atualizado em momentos não especificados. Se for desejado um instantâneo, "
"este deve ser criado explicitamente com ``dict`` ou o método ``.copy()`` do "
"proxy. (Alterado como parte da :pep:`667`.)"

#: ../../whatsnew/3.13.rst:2658
msgid ""
":class:`functools.partial` now emits a :exc:`FutureWarning` when used as a "
"method. The behavior will change in future Python versions. Wrap it in :func:"
"`staticmethod` if you want to preserve the old behavior. (Contributed by "
"Serhiy Storchaka in :gh:`121027`.)"
msgstr ""
":class:`functools.partial` agora emite um :exc:`FutureWarning` quando usado "
"como um método. O comportamento mudará em versões futuras do Python. Envolva-"
"o em :func:`staticmethod` se quiser preservar o comportamento antigo. "
"(Contribuído por Serhiy Storchaka em :gh:`121027`.)"

#: ../../whatsnew/3.13.rst:2664
msgid ""
"An :exc:`OSError` is now raised by :func:`getpass.getuser` for any failure "
"to retrieve a username, instead of :exc:`ImportError` on non-Unix platforms "
"or :exc:`KeyError` on Unix platforms where the password database is empty."
msgstr ""
"A função :func:`getpass.getuser` agora levanta um :exc:`OSError` para "
"qualquer falha ao recuperar um nome de utilizador, em vez de :exc:"
"`ImportError` em plataformas não-Unix ou :exc:`KeyError` em plataformas Unix "
"onde a base de dados de passwords está vazia."

#: ../../whatsnew/3.13.rst:2669
msgid ""
"The value of the :attr:`!mode` attribute of :class:`gzip.GzipFile` is now a "
"string (``'rb'`` or ``'wb'``) instead of an integer (``1`` or ``2``). The "
"value of the :attr:`!mode` attribute of the readable file-like object "
"returned by :meth:`zipfile.ZipFile.open` is now ``'rb'`` instead of ``'r'``. "
"(Contributed by Serhiy Storchaka in :gh:`115961`.)"
msgstr ""
"O valor do atributo :attr:`!mode` de :class:`gzip.GzipFile` é agora uma "
"string (``'rb'`` ou ``'wb'``) em vez de um inteiro (``1`` ou ``2``). O valor "
"do atributo :attr:`!mode` do objeto tipo ficheiro legível retornado por :"
"meth:`zipfile.ZipFile.open` é agora ``'rb'`` em vez de ``'r'``. (Contribuído "
"por Serhiy Storchaka em :gh:`115961`.)"

#: ../../whatsnew/3.13.rst:2675
msgid ""
":class:`mailbox.Maildir` now ignores files with a leading dot (``.``). "
"(Contributed by Zackery Spytz in :gh:`65559`.)"
msgstr ""
":class:`mailbox.Maildir` agora ignora ficheiros com um ponto inicial (``."
"``). (Contribuído por Zackery Spytz em :gh:`65559`.)"

#: ../../whatsnew/3.13.rst:2678
msgid ""
":meth:`pathlib.Path.glob` and :meth:`~pathlib.Path.rglob` now return both "
"files and directories if a pattern that ends with \"``**``\" is given, "
"rather than directories only. Add a trailing slash to keep the previous "
"behavior and only match directories."
msgstr ""
":meth:`pathlib.Path.glob` e :meth:`~pathlib.Path.rglob` agora retornam tanto "
"ficheiros como diretórios se for fornecido um padrão que termina com "
"\"``**``\", em vez de apenas diretórios. Adicione uma barra final para "
"manter o comportamento anterior e corresponder apenas a diretórios."

#: ../../whatsnew/3.13.rst:2683
msgid ""
"The :mod:`threading` module now expects the :mod:`!_thread` module to have "
"an :func:`!_is_main_interpreter` function. This function takes no arguments "
"and returns ``True`` if the current interpreter is the main interpreter."
msgstr ""
"O módulo :mod:`threading` agora espera que o módulo :mod:`!_thread` tenha "
"uma função :func:`!_is_main_interpreter`. Esta função não recebe argumentos "
"e retorna ``True`` se o interpretador atual for o interpretador principal."

#: ../../whatsnew/3.13.rst:2688
msgid ""
"Any library or application that provides a custom :mod:`!_thread` module "
"must provide :func:`!_is_main_interpreter`, just like the module's other "
"\"private\" attributes. (:gh:`112826`.)"
msgstr ""
"Qualquer biblioteca ou aplicação que forneça um módulo :mod:`!_thread` "
"personalizado deve fornecer :func:`!_is_main_interpreter`, tal como os "
"outros atributos \"privados\" do módulo. (:gh:`112826`.)"

#: ../../whatsnew/3.13.rst:2695
msgid "Changes in the C API"
msgstr "Alterações na API C"

#: ../../whatsnew/3.13.rst:2697
msgid ""
"``Python.h`` no longer includes the ``<ieeefp.h>`` standard header. It was "
"included for the :c:func:`!finite` function which is now provided by the "
"``<math.h>`` header. It should now be included explicitly if needed. Remove "
"also the ``HAVE_IEEEFP_H`` macro. (Contributed by Victor Stinner in :gh:"
"`108765`.)"
msgstr ""
"``Python.h`` já não inclui o cabeçalho padrão ``<ieeefp.h>``. Era incluído "
"para a função :c:func:`!finite`, que agora é fornecida pelo cabeçalho "
"``<math.h>``. Deve agora ser incluído explicitamente, se necessário. Remova "
"também a macro ``HAVE_IEEEFP_H``. (Contribuído por Victor Stinner em :gh:"
"`108765`.)"

#: ../../whatsnew/3.13.rst:2703
msgid ""
"``Python.h`` no longer includes these standard header files: ``<time.h>``, "
"``<sys/select.h>`` and ``<sys/time.h>``. If needed, they should now be "
"included explicitly. For example, ``<time.h>`` provides the :c:func:`!clock` "
"and :c:func:`!gmtime` functions, ``<sys/select.h>`` provides the :c:func:`!"
"select` function, and ``<sys/time.h>`` provides the :c:func:`!futimes`, :c:"
"func:`!gettimeofday` and :c:func:`!setitimer` functions. (Contributed by "
"Victor Stinner in :gh:`108765`.)"
msgstr ""
"``Python.h`` já não inclui os seguintes ficheiros de cabeçalho padrão: "
"``<time.h>``, ``<sys/select.h>`` e ``<sys/time.h>``. Se necessário, devem "
"ser incluídos explicitamente. Por exemplo, ``<time.h>`` fornece as funções :"
"c:func:`!clock` e :c:func:`!gmtime`, ``<sys/select.h>`` fornece a função :c:"
"func:`!select`, e ``<sys/time.h>`` fornece as funções :c:func:`!futimes`, :c:"
"func:`!gettimeofday` e :c:func:`!setitimer`. (Contribuído por Victor Stinner "
"em :gh:`108765`.)"

#: ../../whatsnew/3.13.rst:2711
msgid ""
"On Windows, ``Python.h`` no longer includes the ``<stddef.h>`` standard "
"header file. If needed, it should now be included explicitly. For example, "
"it provides :c:func:`!offsetof` function, and ``size_t`` and ``ptrdiff_t`` "
"types. Including ``<stddef.h>`` explicitly was already needed by all other "
"platforms, the ``HAVE_STDDEF_H`` macro is only defined on Windows. "
"(Contributed by Victor Stinner in :gh:`108765`.)"
msgstr ""
"No Windows, ``Python.h`` já não inclui o ficheiro de cabeçalho padrão "
"``<stddef.h>``. Se necessário, deve agora ser incluído explicitamente. Por "
"exemplo, fornece a função :c:func:`!offsetof` e os tipos ``size_t`` e "
"``ptrdiff_t``. A inclusão explícita de ``<stddef.h>`` já era necessária em "
"todas as outras plataformas; a macro ``HAVE_STDDEF_H`` está apenas definida "
"no Windows. (Contribuído por Victor Stinner em :gh:`108765`.)"

#: ../../whatsnew/3.13.rst:2718
msgid ""
"If the :c:macro:`Py_LIMITED_API` macro is defined, :c:macro:`!"
"Py_BUILD_CORE`, :c:macro:`!Py_BUILD_CORE_BUILTIN` and :c:macro:`!"
"Py_BUILD_CORE_MODULE` macros are now undefined by ``<Python.h>``. "
"(Contributed by Victor Stinner in :gh:`85283`.)"
msgstr ""
"Se a macro :c:macro:`Py_LIMITED_API` estiver definida, as macros :c:macro:`!"
"Py_BUILD_CORE`, :c:macro:`!Py_BUILD_CORE_BUILTIN` e :c:macro:`!"
"Py_BUILD_CORE_MODULE` agora não estão definidas por ``<Python.h>``. "
"(Contribuído por Victor Stinner em :gh:`85283`.)"

#: ../../whatsnew/3.13.rst:2723
msgid ""
"The old trashcan macros ``Py_TRASHCAN_SAFE_BEGIN`` and "
"``Py_TRASHCAN_SAFE_END`` were removed. They should be replaced by the new "
"macros ``Py_TRASHCAN_BEGIN`` and ``Py_TRASHCAN_END``."
msgstr ""
"As macros antigas de lixeira ``Py_TRASHCAN_SAFE_BEGIN`` e "
"``Py_TRASHCAN_SAFE_END`` foram removidas. Devem ser substituídas pelas novas "
"macros ``Py_TRASHCAN_BEGIN`` e ``Py_TRASHCAN_END``."

#: ../../whatsnew/3.13.rst:2727
msgid "A ``tp_dealloc`` function that has the old macros, such as::"
msgstr "Uma função ``tp_dealloc`` que tem as macros antigas, como::"

#: ../../whatsnew/3.13.rst:2729
msgid ""
"static void\n"
"mytype_dealloc(mytype *p)\n"
"{\n"
"    PyObject_GC_UnTrack(p);\n"
"    Py_TRASHCAN_SAFE_BEGIN(p);\n"
"    ...\n"
"    Py_TRASHCAN_SAFE_END\n"
"}"
msgstr ""
"static void\n"
"mytype_dealloc(mytype *p)\n"
"{\n"
"    PyObject_GC_UnTrack(p);\n"
"    Py_TRASHCAN_SAFE_BEGIN(p);\n"
"    ...\n"
"    Py_TRASHCAN_SAFE_END\n"
"}"

#: ../../whatsnew/3.13.rst:2738
msgid "should migrate to the new macros as follows::"
msgstr "deve migrar para as novas macros da seguinte forma::"

#: ../../whatsnew/3.13.rst:2740
msgid ""
"static void\n"
"mytype_dealloc(mytype *p)\n"
"{\n"
"    PyObject_GC_UnTrack(p);\n"
"    Py_TRASHCAN_BEGIN(p, mytype_dealloc)\n"
"    ...\n"
"    Py_TRASHCAN_END\n"
"}"
msgstr ""
"static void\n"
"mytype_dealloc(mytype *p)\n"
"{\n"
"    PyObject_GC_UnTrack(p);\n"
"    Py_TRASHCAN_BEGIN(p, mytype_dealloc)\n"
"    ...\n"
"    Py_TRASHCAN_END\n"
"}"

#: ../../whatsnew/3.13.rst:2749
msgid ""
"Note that ``Py_TRASHCAN_BEGIN`` has a second argument which should be the "
"deallocation function it is in. The new macros were added in Python 3.8 and "
"the old macros were deprecated in Python 3.11. (Contributed by Irit Katriel "
"in :gh:`105111`.)"
msgstr ""
"Note que ``Py_TRASHCAN_BEGIN`` tem um segundo argumento que deve ser a "
"função de desalocação em que está. As novas macros foram adicionadas no "
"Python 3.8 e as macros antigas foram obsoletas no Python 3.11. (Contribuído "
"por Irit Katriel em :gh:`105111`.)"

#: ../../whatsnew/3.13.rst:2756
msgid ""
":ref:`PEP 667 <whatsnew313-locals-semantics>` introduces several changes to "
"frame-related functions:"
msgstr ""
":ref:`PEP 667 <whatsnew313-locals-semantics>` introduz várias alterações às "
"funções relacionadas com quadros:"

#: ../../whatsnew/3.13.rst:2759
msgid ""
"The effects of mutating the dictionary returned from :c:func:"
"`PyEval_GetLocals` in an :term:`optimized scope` have changed. New dict "
"entries added this way will now *only* be visible to subsequent :c:func:"
"`PyEval_GetLocals` calls in that frame, as :c:func:`PyFrame_GetLocals`, :"
"func:`locals`, and :attr:`FrameType.f_locals <frame.f_locals>` no longer "
"access the same underlying cached dictionary. Changes made to entries for "
"actual variable names and names added via the write-through proxy interfaces "
"will be overwritten on subsequent calls to :c:func:`PyEval_GetLocals` in "
"that frame. The recommended code update depends on how the function was "
"being used, so refer to the deprecation notice on the function for details."
msgstr ""
"Os efeitos de mutar o dicionário retornado de :c:func:`PyEval_GetLocals` "
"num :term:`âmbito otimizado` mudaram. Novas entradas de dicionário "
"adicionadas desta forma serão agora *apenas* visíveis em chamadas "
"subsequentes a :c:func:`PyEval_GetLocals` nesse quadro, uma vez que :c:func:"
"`PyFrame_GetLocals`, :func:`locals` e :attr:`FrameType.f_locals <frame."
"f_locals>` já não acedem ao mesmo dicionário em cache subjacente. Alterações "
"feitas a entradas para nomes de variáveis reais e nomes adicionados através "
"das interfaces proxy de escrita serão sobrescritas em chamadas subsequentes "
"a :c:func:`PyEval_GetLocals` nesse quadro. A atualização de código "
"recomendada depende de como a função estava a ser usada, pelo que deve "
"consultar o aviso de obsolescência na função para obter detalhes."

#: ../../whatsnew/3.13.rst:2772
msgid ""
"Calling :c:func:`PyFrame_GetLocals` in an :term:`optimized scope` now "
"returns a write-through proxy rather than a snapshot that gets updated at "
"ill-specified times. If a snapshot is desired, it must be created explicitly "
"(e.g. with :c:func:`PyDict_Copy`), or by calling the new :c:func:"
"`PyEval_GetFrameLocals` API."
msgstr ""
"Chamar :c:func:`PyFrame_GetLocals` num :term:`âmbito otimizado` agora "
"retorna um proxy de escrita em vez de um instantâneo que é atualizado em "
"momentos não especificados. Se for desejado um instantâneo, este deve ser "
"criado explicitamente (por exemplo, com :c:func:`PyDict_Copy`), ou chamando "
"a nova API :c:func:`PyEval_GetFrameLocals`."

#: ../../whatsnew/3.13.rst:2779
msgid ""
":c:func:`!PyFrame_FastToLocals` and :c:func:`!PyFrame_FastToLocalsWithError` "
"no longer have any effect. Calling these functions has been redundant since "
"Python 3.11, when :c:func:`PyFrame_GetLocals` was first introduced."
msgstr ""
":c:func:`!PyFrame_FastToLocals` e :c:func:`!PyFrame_FastToLocalsWithError` "
"já não têm qualquer efeito. Chamar estas funções tem sido redundante desde o "
"Python 3.11, quando :c:func:`PyFrame_GetLocals` foi introduzido pela "
"primeira vez."

#: ../../whatsnew/3.13.rst:2784
msgid ""
":c:func:`!PyFrame_LocalsToFast` no longer has any effect. Calling this "
"function is redundant now that :c:func:`PyFrame_GetLocals` returns a write-"
"through proxy for :term:`optimized scopes <optimized scope>`."
msgstr ""
":c:func:`!PyFrame_LocalsToFast` já não tem qualquer efeito. Chamar esta "
"função é redundante agora que :c:func:`PyFrame_GetLocals` retorna um proxy "
"de escrita para :term:`âmbitos otimizados <optimized scope>`."

#: ../../whatsnew/3.13.rst:2788
msgid ""
"Python 3.13 removed many private functions. Some of them can be replaced "
"using these alternatives:"
msgstr ""
"O Python 3.13 removeu muitas funções privadas. Algumas delas podem ser "
"substituídas usando estas alternativas:"

#: ../../whatsnew/3.13.rst:2791
msgid "``_PyDict_Pop()``: :c:func:`PyDict_Pop` or :c:func:`PyDict_PopString`;"
msgstr "``_PyDict_Pop()``: :c:func:`PyDict_Pop` ou :c:func:`PyDict_PopString`;"

#: ../../whatsnew/3.13.rst:2792
msgid "``_PyDict_GetItemWithError()``: :c:func:`PyDict_GetItemRef`;"
msgstr "``_PyDict_GetItemWithError()``: :c:func:`PyDict_GetItemRef`;"

#: ../../whatsnew/3.13.rst:2793
msgid "``_PyErr_WriteUnraisableMsg()``:  :c:func:`PyErr_FormatUnraisable`;"
msgstr "``_PyErr_WriteUnraisableMsg()``: :c:func:`PyErr_FormatUnraisable`;"

#: ../../whatsnew/3.13.rst:2794
msgid ""
"``_PyEval_SetTrace()``: :c:func:`PyEval_SetTrace` or :c:func:"
"`PyEval_SetTraceAllThreads`;"
msgstr ""
"``_PyEval_SetTrace()``: :c:func:`PyEval_SetTrace` ou :c:func:"
"`PyEval_SetTraceAllThreads`;"

#: ../../whatsnew/3.13.rst:2795
msgid "``_PyList_Extend()``: :c:func:`PyList_Extend`;"
msgstr "``_PyList_Extend()``: :c:func:`PyList_Extend`;"

#: ../../whatsnew/3.13.rst:2796
msgid "``_PyLong_AsInt()``: :c:func:`PyLong_AsInt`;"
msgstr "``_PyLong_AsInt()``: :c:func:`PyLong_AsInt`;"

#: ../../whatsnew/3.13.rst:2797
msgid "``_PyMem_RawStrdup()``: ``strdup()``;"
msgstr "``_PyMem_RawStrdup()``: ``strdup()``;"

#: ../../whatsnew/3.13.rst:2798
msgid "``_PyMem_Strdup()``: ``strdup()``;"
msgstr "``_PyMem_Strdup()``: ``strdup()``;"

#: ../../whatsnew/3.13.rst:2799
msgid "``_PyObject_ClearManagedDict()``: :c:func:`PyObject_ClearManagedDict`;"
msgstr "``_PyObject_ClearManagedDict()``: :c:func:`PyObject_ClearManagedDict`;"

#: ../../whatsnew/3.13.rst:2800
msgid "``_PyObject_VisitManagedDict()``: :c:func:`PyObject_VisitManagedDict`;"
msgstr "``_PyObject_VisitManagedDict()``: :c:func:`PyObject_VisitManagedDict`;"

#: ../../whatsnew/3.13.rst:2801
msgid ""
"``_PyThreadState_UncheckedGet()``: :c:func:`PyThreadState_GetUnchecked()`;"
msgstr ""
"``_PyThreadState_UncheckedGet()``: :c:func:`PyThreadState_GetUnchecked()`;"

#: ../../whatsnew/3.13.rst:2802
msgid "``_PyTime_AsSecondsDouble()``: :c:func:`PyTime_AsSecondsDouble`;"
msgstr "``_PyTime_AsSecondsDouble()``: :c:func:`PyTime_AsSecondsDouble`;"

#: ../../whatsnew/3.13.rst:2803
msgid ""
"``_PyTime_GetMonotonicClock()``: :c:func:`PyTime_Monotonic` or :c:func:"
"`PyTime_MonotonicRaw`;"
msgstr ""
"``_PyTime_GetMonotonicClock()``: :c:func:`PyTime_Monotonic` ou :c:func:"
"`PyTime_MonotonicRaw`;"

#: ../../whatsnew/3.13.rst:2804
msgid ""
"``_PyTime_GetPerfCounter()``: :c:func:`PyTime_PerfCounter` or :c:func:"
"`PyTime_PerfCounterRaw`;"
msgstr ""
"``_PyTime_GetPerfCounter()``: :c:func:`PyTime_PerfCounter` ou :c:func:"
"`PyTime_PerfCounterRaw`;"

#: ../../whatsnew/3.13.rst:2805
msgid ""
"``_PyTime_GetSystemClock()``: :c:func:`PyTime_Time` or :c:func:"
"`PyTime_TimeRaw`;"
msgstr ""
"``_PyTime_GetSystemClock()``: :c:func:`PyTime_Time` ou :c:func:"
"`PyTime_TimeRaw`;"

#: ../../whatsnew/3.13.rst:2806
msgid "``_PyTime_MAX``: :c:var:`PyTime_MAX`;"
msgstr "``_PyTime_MAX``: :c:var:`PyTime_MAX`;"

#: ../../whatsnew/3.13.rst:2807
msgid "``_PyTime_MIN``: :c:var:`PyTime_MIN`;"
msgstr "``_PyTime_MIN``: :c:var:`PyTime_MIN`;"

#: ../../whatsnew/3.13.rst:2808
msgid "``_PyTime_t``: :c:type:`PyTime_t`;"
msgstr "``_PyTime_t``: :c:type:`PyTime_t`;"

#: ../../whatsnew/3.13.rst:2809
msgid "``_Py_HashPointer()``: :c:func:`Py_HashPointer`;"
msgstr "``_Py_HashPointer()``: :c:func:`Py_HashPointer`;"

#: ../../whatsnew/3.13.rst:2810
msgid "``_Py_IsFinalizing()``: :c:func:`Py_IsFinalizing`."
msgstr "``_Py_IsFinalizing()``: :c:func:`Py_IsFinalizing`."

#: ../../whatsnew/3.13.rst:2812
msgid ""
"The `pythoncapi-compat project`_ can be used to get most of these new "
"functions on Python 3.12 and older."
msgstr ""
"O projeto `pythoncapi-compat project`_ pode ser usado para obter a maioria "
"destas novas funções no Python 3.12 e versões anteriores."

#: ../../whatsnew/3.13.rst:2816
msgid "Regression Test Changes"
msgstr "Alterações nos Testes de Regressão"

#: ../../whatsnew/3.13.rst:2818
msgid ""
"Python built with :file:`configure` :option:`--with-pydebug` now supports a :"
"option:`-X presite=package.module <-X>` command-line option. If used, it "
"specifies a module that should be imported early in the lifecycle of the "
"interpreter, before ``site.py`` is executed. (Contributed by Łukasz Langa "
"in :gh:`110769`.)"
msgstr ""
"O Python compilado com :file:`configure` :option:`--with-pydebug` agora "
"suporta uma opção de linha de comandos :option:`-X presite=package.module <-"
"X>`. Se usada, especifica um módulo que deve ser importado no início do "
"ciclo de vida do interpretador, antes de ``site.py`` ser executado. "
"(Contribuído por Łukasz Langa em :gh:`110769`.)"

#: ../../whatsnew/3.13.rst:2826
msgid "Notable changes in 3.13.1"
msgstr ""

#: ../../whatsnew/3.13.rst:2831
msgid ""
"The previously undocumented special function :func:`sys.getobjects`, which "
"only exists in specialized builds of Python, may now return objects from "
"other interpreters than the one it's called in."
msgstr ""

#: ../../whatsnew/3.13.rst:2836
msgid "Notable changes in 3.13.4"
msgstr ""

#: ../../whatsnew/3.13.rst:2841
msgid ""
"The *strict* parameter to :func:`os.path.realpath` accepts a new value, :"
"data:`os.path.ALLOW_MISSING`. If used, errors other than :exc:"
"`FileNotFoundError` will be re-raised; the resulting path can be missing but "
"it will be free of symlinks. (Contributed by Petr Viktorin for :cve:"
"`2025-4517`.)"
msgstr ""

#: ../../whatsnew/3.13.rst:2848
msgid "tarfile"
msgstr "tarfile"

#: ../../whatsnew/3.13.rst:2850
msgid ""
":func:`~tarfile.data_filter` now normalizes symbolic link targets in order "
"to avoid path traversal attacks. (Contributed by Petr Viktorin in :gh:"
"`127987` and :cve:`2025-4138`.)"
msgstr ""

#: ../../whatsnew/3.13.rst:2853
msgid ""
":func:`~tarfile.TarFile.extractall` now skips fixing up directory attributes "
"when a directory was removed or replaced by another kind of file. "
"(Contributed by Petr Viktorin in :gh:`127987` and :cve:`2024-12718`.)"
msgstr ""

#: ../../whatsnew/3.13.rst:2856
msgid ""
":func:`~tarfile.TarFile.extract` and :func:`~tarfile.TarFile.extractall` now "
"(re-)apply the extraction filter when substituting a link (hard or symbolic) "
"with a copy of another archive member, and when fixing up directory "
"attributes. The former raises a new exception, :exc:`~tarfile."
"LinkFallbackError`. (Contributed by Petr Viktorin for :cve:`2025-4330` and :"
"cve:`2024-12718`.)"
msgstr ""

#: ../../whatsnew/3.13.rst:2862
msgid ""
":func:`~tarfile.TarFile.extract` and :func:`~tarfile.TarFile.extractall` no "
"longer extract rejected members when :func:`~tarfile.TarFile.errorlevel` is "
"zero. (Contributed by Matt Prodani and Petr Viktorin in :gh:`112887` and :"
"cve:`2025-4435`.)"
msgstr ""
