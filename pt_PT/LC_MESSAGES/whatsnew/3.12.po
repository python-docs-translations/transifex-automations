# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001 Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# python-doc bot, 2025
# André Moreira <afrmscb@gmail.com>, 2025
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.14\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-10-13 14:15+0000\n"
"PO-Revision-Date: 2025-09-16 00:02+0000\n"
"Last-Translator: André Moreira <afrmscb@gmail.com>, 2025\n"
"Language-Team: Portuguese (Portugal) (https://app.transifex.com/python-doc/"
"teams/5390/pt_PT/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: pt_PT\n"
"Plural-Forms: nplurals=3; plural=(n == 0 || n == 1) ? 0 : n != 0 && n % "
"1000000 == 0 ? 1 : 2;\n"

#: ../../whatsnew/3.12.rst:4
msgid "What's New In Python 3.12"
msgstr "Novidades no Python 3.12"

#: ../../whatsnew/3.12.rst:0
msgid "Editor"
msgstr "Editor"

#: ../../whatsnew/3.12.rst:6
msgid "Adam Turner"
msgstr "Adam Turner"

#: ../../whatsnew/3.12.rst:48
msgid ""
"This article explains the new features in Python 3.12, compared to 3.11. "
"Python 3.12 was released on October 2, 2023. For full details, see the :ref:"
"`changelog <changelog>`."
msgstr ""
"Este artigo explica as novas funcionalidades do Python 3.12, em comparação "
"com o 3.11. O Python 3.12 foi lançado a 2 de outubro de 2023. Para mais "
"detalhes, consulte o :ref:`registo de alterações <changelog>`"

#: ../../whatsnew/3.12.rst:54
msgid ":pep:`693` -- Python 3.12 Release Schedule"
msgstr ":pep:`693` -- Cronograma de lançamento do Python 3.12"

#: ../../whatsnew/3.12.rst:57
msgid "Summary -- Release highlights"
msgstr "Resumo — Destaques da versão"

#: ../../whatsnew/3.12.rst:62
msgid ""
"Python 3.12 is a stable release of the Python programming language, with a "
"mix of changes to the language and the standard library. The library changes "
"focus on cleaning up deprecated APIs, usability, and correctness. Of note, "
"the :mod:`!distutils` package has been removed from the standard library. "
"Filesystem support in :mod:`os` and :mod:`pathlib` has seen a number of "
"improvements, and several modules have better performance."
msgstr ""
"O Python 3.12 é uma versão estável da linguagem de programação Python, com "
"uma mistura de alterações à linguagem e à biblioteca padrão. As alterações "
"na biblioteca centram-se na limpeza de APIs obsoletas, usabilidade e "
"correção. De destacar, o pacote :mod:`!distutils` foi removido da biblioteca "
"padrão. O suporte ao sistema de ficheiros em :mod:`os` e :mod:`pathlib` "
"recebeu várias melhorias e vários módulos têm agora melhor desempenho."

#: ../../whatsnew/3.12.rst:69
msgid ""
"The language changes focus on usability, as :term:`f-strings <f-string>` "
"have had many limitations removed and 'Did you mean ...' suggestions "
"continue to improve. The new :ref:`type parameter syntax <whatsnew312-"
"pep695>` and :keyword:`type` statement improve ergonomics for using :term:"
"`generic types <generic type>` and :term:`type aliases <type alias>` with "
"static type checkers."
msgstr ""
"As alterações na linguagem focam-se na usabilidade, uma vez que as :term:`f-"
"strings <f-string>` tiveram muitas limitações removidas e as sugestões 'Did "
"you mean ...' continuam a melhorar. A nova :ref:`sintaxe de parâmetros de "
"tipo <whatsnew312-pep695>` e a instrução :keyword:`type` melhoram a "
"ergonomia para o uso de :term:`tipos genéricos <generic type>` e :term:"
"`alias de tipo <type alias>` com verificadores de tipo estáticos."

#: ../../whatsnew/3.12.rst:76
msgid ""
"This article doesn't attempt to provide a complete specification of all new "
"features, but instead gives a convenient overview. For full details, you "
"should refer to the documentation, such as the  :ref:`Library Reference "
"<library-index>` and :ref:`Language Reference <reference-index>`. If you "
"want to understand the complete implementation and design rationale for a "
"change, refer to the PEP for a particular new feature; but note that PEPs "
"usually are not kept up-to-date once a feature has been fully implemented."
msgstr ""
"Este artigo não tenta fornecer uma especificação completa de todas as novas "
"funcionalidades, mas em vez disso dá uma visão geral conveniente. Para "
"detalhes completos, deve consultar a documentação, como a :ref:`Referência "
"da Biblioteca <library-index>` e a :ref:`Referência da Linguagem <reference-"
"index>`. Se quiser entender a implementação completa e a justificação de "
"design de uma alteração, consulte a PEP para uma funcionalidade específica; "
"mas note que as PEPs geralmente não são mantidas atualizadas depois de uma "
"funcionalidade estar totalmente implementada."

#: ../../whatsnew/3.12.rst:90
msgid "New syntax features:"
msgstr "Novas funcionalidades de sintaxe:"

#: ../../whatsnew/3.12.rst:92
msgid ""
":ref:`PEP 695 <whatsnew312-pep695>`, type parameter syntax and the :keyword:"
"`type` statement"
msgstr ""
":ref:`PEP 695 <whatsnew312-pep695>`, sintaxe de parâmetros de tipo e a "
"instrução :keyword:`type`"

#: ../../whatsnew/3.12.rst:94
msgid "New grammar features:"
msgstr "Novas funcionalidades de gramática:"

#: ../../whatsnew/3.12.rst:96
msgid ""
":ref:`PEP 701 <whatsnew312-pep701>`, :term:`f-strings <f-string>` in the "
"grammar"
msgstr ""
":ref:`PEP 701 <whatsnew312-pep701>`, :term:`f-strings <f-string>` na "
"gramática"

#: ../../whatsnew/3.12.rst:98
msgid "Interpreter improvements:"
msgstr "Melhorias no interpretador:"

#: ../../whatsnew/3.12.rst:100
msgid ""
":ref:`PEP 684 <whatsnew312-pep684>`, a unique per-interpreter :term:`GIL "
"<global interpreter lock>`"
msgstr ""
":ref:`PEP 684 <whatsnew312-pep684>`, um :term:`GIL <global interpreter "
"lock>` único por interpretador"

#: ../../whatsnew/3.12.rst:102
msgid ":ref:`PEP 669 <whatsnew312-pep669>`, low impact monitoring"
msgstr ":ref:`PEP 669 <whatsnew312-pep669>`, monitorização de baixo impacto"

#: ../../whatsnew/3.12.rst:103
msgid ""
"`Improved 'Did you mean ...' suggestions <improved error messages_>`_ for :"
"exc:`NameError`, :exc:`ImportError`, and :exc:`SyntaxError` exceptions"
msgstr ""
"Sugestões melhoradas de 'Did you mean ...' para exceções :exc:`NameError`, :"
"exc:`ImportError` e :exc:`SyntaxError`"

#: ../../whatsnew/3.12.rst:106
msgid "Python data model improvements:"
msgstr "Melhorias no modelo de dados do Python:"

#: ../../whatsnew/3.12.rst:108
msgid ""
":ref:`PEP 688 <whatsnew312-pep688>`, using the :ref:`buffer protocol "
"<bufferobjects>` from Python"
msgstr ""
":ref:`PEP 688 <whatsnew312-pep688>`, uso do :ref:`protocolo de buffer "
"<bufferobjects>` a partir do Python"

#: ../../whatsnew/3.12.rst:111
msgid "Significant improvements in the standard library:"
msgstr "Melhorias significativas na biblioteca padrão:"

#: ../../whatsnew/3.12.rst:113
msgid "The :class:`pathlib.Path` class now supports subclassing"
msgstr "A classe :class:`pathlib.Path` agora suporta subclasses"

#: ../../whatsnew/3.12.rst:114
msgid "The :mod:`os` module received several improvements for Windows support"
msgstr "O módulo :mod:`os` recebeu várias melhorias para suporte ao Windows"

#: ../../whatsnew/3.12.rst:115
msgid ""
"A :ref:`command-line interface <sqlite3-cli>` has been added to the :mod:"
"`sqlite3` module"
msgstr ""
"Foi adicionada uma :ref:`interface de linha de comandos <sqlite3-cli>` ao "
"módulo :mod:`sqlite3`"

#: ../../whatsnew/3.12.rst:117
msgid ""
":func:`isinstance` checks against :func:`runtime-checkable protocols <typing."
"runtime_checkable>` enjoy a speed up of between two and 20 times"
msgstr ""
"As verificações :func:`isinstance` contra :func:`protocolo verificáveis em "
"tempo de execução <typing.runtime_checkable>` têm agora um aumento de "
"velocidade entre duas e 20 vezes"

#: ../../whatsnew/3.12.rst:119
msgid ""
"The :mod:`asyncio` package has had a number of performance improvements, "
"with some benchmarks showing a 75% speed up."
msgstr ""
"O pacote :mod:`asyncio` teve várias melhorias de desempenho, com alguns "
"benchmarks a mostrarem um aumento de velocidade de 75%."

#: ../../whatsnew/3.12.rst:121
msgid ""
"A :ref:`command-line interface <uuid-cli>` has been added to the :mod:`uuid` "
"module"
msgstr ""
"Foi adicionada uma :ref:`interface de linha de comandos <uuid-cli>` ao "
"módulo :mod:`uuid`"

#: ../../whatsnew/3.12.rst:123
msgid ""
"Due to the changes in :ref:`PEP 701 <whatsnew312-pep701>`, producing tokens "
"via the :mod:`tokenize` module is up to 64% faster."
msgstr ""
"Devido às alterações na :ref:`PEP 701 <whatsnew312-pep701>`, a produção de "
"tokens através do módulo :mod:`tokenize` é até 64% mais rápida."

#: ../../whatsnew/3.12.rst:126
msgid "Security improvements:"
msgstr "Melhorias de segurança:"

#: ../../whatsnew/3.12.rst:128
msgid ""
"Replace the builtin :mod:`hashlib` implementations of SHA1, SHA3, SHA2-384, "
"SHA2-512, and MD5 with formally verified code from the `HACL* <https://"
"github.com/hacl-star/hacl-star/>`__ project. These builtin implementations "
"remain as fallbacks that are only used when OpenSSL does not provide them."
msgstr ""
"Substituir as implementações integradas de SHA1, SHA3, SHA2-384, SHA2-512 e "
"MD5 no módulo :mod:`hashlib` por código formalmente verificado do projeto "
"`HACL* <https://github.com/hacl-star/hacl-star/>`__. Estas implementações "
"integradas permanecem como alternativas que só são usadas quando o OpenSSL "
"não as fornece."

#: ../../whatsnew/3.12.rst:134
msgid "C API improvements:"
msgstr "Melhorias na API C:"

#: ../../whatsnew/3.12.rst:136
msgid ":ref:`PEP 697 <whatsnew312-pep697>`, unstable C API tier"
msgstr ":ref:`PEP 697 <whatsnew312-pep697>`, nível de API C instável"

#: ../../whatsnew/3.12.rst:137
msgid ":ref:`PEP 683 <whatsnew312-pep683>`, immortal objects"
msgstr ":ref:`PEP 683 <whatsnew312-pep683>`, objetos imortais"

#: ../../whatsnew/3.12.rst:139
msgid "CPython implementation improvements:"
msgstr "Melhorias na implementação do CPython:"

#: ../../whatsnew/3.12.rst:141
msgid ":ref:`PEP 709 <whatsnew312-pep709>`, comprehension inlining"
msgstr ":ref:`PEP 709 <whatsnew312-pep709>`, inline de comprehensions"

#: ../../whatsnew/3.12.rst:142
msgid ":ref:`CPython support <perf_profiling>` for the Linux ``perf`` profiler"
msgstr ""
"Suporte do :ref:`CPython <perf_profiling>` para o perfilador Linux ``perf``"

#: ../../whatsnew/3.12.rst:143
msgid "Implement stack overflow protection on supported platforms"
msgstr ""
"Implementar proteção contra overflow de stack em plataformas suportadas"

#: ../../whatsnew/3.12.rst:145
msgid "New typing features:"
msgstr "Novas funcionalidades de tipagem:"

#: ../../whatsnew/3.12.rst:147
msgid ""
":ref:`PEP 692 <whatsnew312-pep692>`, using :class:`~typing.TypedDict` to "
"annotate :term:`**kwargs <argument>`"
msgstr ""
":ref:`PEP 692 <whatsnew312-pep692>`, uso de :class:`~typing.TypedDict` para "
"anotar :term:`**kwargs <argument>`"

#: ../../whatsnew/3.12.rst:149
msgid ":ref:`PEP 698 <whatsnew312-pep698>`, :func:`typing.override` decorator"
msgstr ":ref:`PEP 698 <whatsnew312-pep698>`, decorador :func:`typing.override`"

#: ../../whatsnew/3.12.rst:151
msgid "Important deprecations, removals or restrictions:"
msgstr "Descontinuações, remoções ou restrições importantes:"

#: ../../whatsnew/3.12.rst:153
msgid ""
":pep:`623`: Remove ``wstr`` from Unicode objects in Python's C API, reducing "
"the size of every :class:`str` object by at least 8 bytes."
msgstr ""
":pep:`623`: Remover ``wstr`` dos objetos Unicode na API C do Python, "
"reduzindo o tamanho de cada objeto :class:`str` em pelo menos 8 bytes."

#: ../../whatsnew/3.12.rst:156
msgid ""
":pep:`632`: Remove the :mod:`!distutils` package. See :pep:`the migration "
"guide <0632#migration-advice>` for advice replacing the APIs it provided. "
"The third-party `Setuptools <https://setuptools.pypa.io/en/latest/deprecated/"
"distutils-legacy.html>`__ package continues to provide :mod:`!distutils`, if "
"you still require it in Python 3.12 and beyond."
msgstr ""
":pep:`632`: Remover o pacote :mod:`!distutils`. Consulte o :pep:`guia de "
"migração <0632#migration-advice>` para obter conselhos sobre como substituir "
"as APIs que fornecia. O pacote de terceiros `Setuptools <https://setuptools."
"pypa.io/en/latest/deprecated/distutils-legacy.html>`__ continua a fornecer :"
"mod:`!distutils`, se ainda o necessitar no Python 3.12 e além."

#: ../../whatsnew/3.12.rst:163
msgid ""
":gh:`95299`: Do not pre-install ``setuptools`` in virtual environments "
"created with :mod:`venv`. This means that ``distutils``, ``setuptools``, "
"``pkg_resources``, and ``easy_install`` will no longer available by default; "
"to access these run ``pip install setuptools`` in the :ref:`activated <venv-"
"explanation>` virtual environment."
msgstr ""
":gh:`95299`: Não pré-instalar ``setuptools`` em ambientes virtuais criados "
"com :mod:`venv`. Isto significa que ``distutils``, ``setuptools``, "
"``pkg_resources`` e ``easy_install`` já não estarão disponíveis por "
"predefinição; para aceder a estes, execute ``pip install setuptools`` no "
"ambiente virtual :ref:`ativado <venv-explanation>`."

#: ../../whatsnew/3.12.rst:170
msgid ""
"The :mod:`!asynchat`, :mod:`!asyncore`, and :mod:`!imp` modules have been "
"removed, along with several :class:`unittest.TestCase` `method aliases "
"<unittest-TestCase-removed-aliases_>`_."
msgstr ""
"Os módulos :mod:`!asynchat`, :mod:`!asyncore` e :mod:`!imp` foram removidos, "
"juntamente com vários alias de métodos :class:`unittest.TestCase` `métodos "
"<unittest-TestCase-removed-aliases_>`_."

#: ../../whatsnew/3.12.rst:176 ../../whatsnew/3.12.rst:1856
msgid "New Features"
msgstr "Novas Funcionalidades"

#: ../../whatsnew/3.12.rst:181
msgid "PEP 695: Type Parameter Syntax"
msgstr "PEP 695: Sintaxe de Parâmetros de Tipo"

#: ../../whatsnew/3.12.rst:183
msgid ""
"Generic classes and functions under :pep:`484` were declared using a verbose "
"syntax that left the scope of type parameters unclear and required explicit "
"declarations of variance."
msgstr ""
"As classes e funções genéricas sob :pep:`484` eram declaradas usando uma "
"sintaxe verbosa que deixava o âmbito dos parâmetros de tipo pouco claro e "
"exigia declarações explícitas de variância."

#: ../../whatsnew/3.12.rst:187
msgid ""
":pep:`695` introduces a new, more compact and explicit way to create :ref:"
"`generic classes <generic-classes>` and :ref:`functions <generic-"
"functions>`::"
msgstr ""
"A :pep:`695` introduz uma nova forma, mais compacta e explícita, de criar :"
"ref:`classes genéricas <generic-classes>` e :ref:`funções <generic-"
"functions>`::"

#: ../../whatsnew/3.12.rst:190
msgid ""
"def max[T](args: Iterable[T]) -> T:\n"
"    ...\n"
"\n"
"class list[T]:\n"
"    def __getitem__(self, index: int, /) -> T:\n"
"        ...\n"
"\n"
"    def append(self, element: T) -> None:\n"
"        ..."
msgstr ""
"def max[T](args: Iterable[T]) -> T:\n"
"    ...\n"
"\n"
"class list[T]:\n"
"    def __getitem__(self, index: int, /) -> T:\n"
"        ...\n"
"\n"
"    def append(self, element: T) -> None:\n"
"        ..."

#: ../../whatsnew/3.12.rst:200
msgid ""
"In addition, the PEP introduces a new way to declare :ref:`type aliases "
"<type-aliases>` using the :keyword:`type` statement, which creates an "
"instance of :class:`~typing.TypeAliasType`::"
msgstr ""
"Além disso, a PEP introduz uma nova forma de declarar :ref:`alias de tipo "
"<type-aliases>` usando a instrução :keyword:`type`, que cria uma instância "
"de :class:`~typing.TypeAliasType`::"

#: ../../whatsnew/3.12.rst:204
msgid "type Point = tuple[float, float]"
msgstr "type Point = tuple[float, float]"

#: ../../whatsnew/3.12.rst:206
msgid "Type aliases can also be :ref:`generic <generic-type-aliases>`::"
msgstr ""
"Os alias de tipo também podem ser :ref:`genéricos <generic-type-aliases>`::"

#: ../../whatsnew/3.12.rst:208
msgid "type Point[T] = tuple[T, T]"
msgstr "type Point[T] = tuple[T, T]"

#: ../../whatsnew/3.12.rst:210
msgid ""
"The new syntax allows declaring :class:`~typing.TypeVarTuple` and :class:"
"`~typing.ParamSpec` parameters, as well as :class:`~typing.TypeVar` "
"parameters with bounds or constraints::"
msgstr ""
"A nova sintaxe permite declarar parâmetros :class:`~typing.TypeVarTuple` e :"
"class:`~typing.ParamSpec`, bem como parâmetros :class:`~typing.TypeVar` com "
"limites ou restrições::"

#: ../../whatsnew/3.12.rst:214
msgid ""
"type IntFunc[**P] = Callable[P, int]  # ParamSpec\n"
"type LabeledTuple[*Ts] = tuple[str, *Ts]  # TypeVarTuple\n"
"type HashableSequence[T: Hashable] = Sequence[T]  # TypeVar with bound\n"
"type IntOrStrSequence[T: (int, str)] = Sequence[T]  # TypeVar with "
"constraints"
msgstr ""
"type IntFunc[**P] = Callable[P, int]  # ParamSpec\n"
"type LabeledTuple[*Ts] = tuple[str, *Ts]  # TypeVarTuple\n"
"type HashableSequence[T: Hashable] = Sequence[T]  # TypeVar com limite\n"
"type IntOrStrSequence[T: (int, str)] = Sequence[T]  # TypeVar com restrições"

#: ../../whatsnew/3.12.rst:219
msgid ""
"The value of type aliases and the bound and constraints of type variables "
"created through this syntax are evaluated only on demand (see :ref:`lazy "
"evaluation <lazy-evaluation>`). This means type aliases are able to refer to "
"other types defined later in the file."
msgstr ""
"O valor dos alias de tipo e os limites e restrições das variáveis de tipo "
"criadas através desta sintaxe são avaliados apenas quando necessário "
"(consulte :ref:`avaliação preguiçosa <lazy-evaluation>`). Isto significa que "
"os alias de tipo podem referir-se a outros tipos definidos mais tarde no "
"ficheiro."

#: ../../whatsnew/3.12.rst:224
msgid ""
"Type parameters declared through a type parameter list are visible within "
"the scope of the declaration and any nested scopes, but not in the outer "
"scope. For example, they can be used in the type annotations for the methods "
"of a generic class or in the class body. However, they cannot be used in the "
"module scope after the class is defined. See :ref:`type-params` for a "
"detailed description of the runtime semantics of type parameters."
msgstr ""
"Os parâmetros de tipo declarados através de uma lista de parâmetros de tipo "
"são visíveis dentro do âmbito da declaração e de quaisquer âmbitos "
"aninhados, mas não no âmbito externo. Por exemplo, podem ser usados nas "
"anotações de tipo para os métodos de uma classe genérica ou no corpo da "
"classe. No entanto, não podem ser usados no âmbito do módulo após a classe "
"ser definida. Consulte :ref:`type-params` para uma descrição detalhada da "
"semântica de tempo de execução dos parâmetros de tipo."

#: ../../whatsnew/3.12.rst:231
msgid ""
"In order to support these scoping semantics, a new kind of scope is "
"introduced, the :ref:`annotation scope <annotation-scopes>`. Annotation "
"scopes behave for the most part like function scopes, but interact "
"differently with enclosing class scopes. In Python 3.13, :term:`annotations "
"<annotation>` will also be evaluated in annotation scopes."
msgstr ""
"Para suportar estas semânticas de âmbito, é introduzido um novo tipo de "
"âmbito, o :ref:`âmbito de anotação <annotation-scopes>`. Os âmbitos de "
"anotação comportam-se, na maior parte, como âmbitos de função, mas interagem "
"de forma diferente com os âmbitos de classe envolventes. No Python 3.13, as :"
"term:`anotações <annotation>` também serão avaliadas em âmbitos de anotação."

#: ../../whatsnew/3.12.rst:237
msgid "See :pep:`695` for more details."
msgstr "Consulte :pep:`695` para mais detalhes."

#: ../../whatsnew/3.12.rst:239
msgid ""
"(PEP written by Eric Traut. Implementation by Jelle Zijlstra, Eric Traut, "
"and others in :gh:`103764`.)"
msgstr ""
"(PEP escrita por Eric Traut. Implementação por Jelle Zijlstra, Eric Traut e "
"outros em :gh:`103764`.)"

#: ../../whatsnew/3.12.rst:245
msgid "PEP 701: Syntactic formalization of f-strings"
msgstr "PEP 701: Formalização sintática das f-strings"

#: ../../whatsnew/3.12.rst:247
msgid ""
":pep:`701` lifts some restrictions on the usage of :term:`f-strings <f-"
"string>`. Expression components inside f-strings can now be any valid Python "
"expression, including strings reusing the same quote as the containing f-"
"string, multi-line expressions, comments, backslashes, and unicode escape "
"sequences. Let's cover these in detail:"
msgstr ""
"A :pep:`701` remove algumas restrições no uso de :term:`f-strings <f-"
"string>`. Os componentes de expressão dentro de f-strings podem agora ser "
"qualquer expressão Python válida, incluindo strings que reutilizam as mesmas "
"aspas da f-string contenedora, expressões multi-linha, comentários, barras "
"invertidas e sequências de escape unicode. Vamos abordar estes detalhes:"

#: ../../whatsnew/3.12.rst:253
msgid ""
"Quote reuse: in Python 3.11, reusing the same quotes as the enclosing f-"
"string raises a :exc:`SyntaxError`, forcing the user to either use other "
"available quotes (like using double quotes or triple quotes if the f-string "
"uses single quotes). In Python 3.12, you can now do things like this:"
msgstr ""
"Reutilização de aspas: no Python 3.11, reutilizar as mesmas aspas da f-"
"string envolvente levanta um :exc:`SyntaxError`, forçando o utilizador a "
"usar outras aspas disponíveis (como usar aspas duplas ou aspas triplas se a "
"f-string usar aspas simples). No Python 3.12, pode agora fazer coisas como "
"isto:"

#: ../../whatsnew/3.12.rst:262
msgid ""
"Note that before this change there was no explicit limit in how f-strings "
"can be nested, but the fact that string quotes cannot be reused inside the "
"expression component of f-strings made it impossible to nest f-strings "
"arbitrarily. In fact, this is the most nested f-string that could be written:"
msgstr ""
"Note que antes desta alteração não havia um limite explícito na forma como "
"as f-strings podiam ser aninhadas, mas o facto de as aspas de strings não "
"poderem ser reutilizadas dentro do componente de expressão das f-strings "
"tornava impossível aninhar f-strings arbitrariamente. De facto, esta era a f-"
"string mais aninhada que podia ser escrita:"

#: ../../whatsnew/3.12.rst:270
msgid ""
"As now f-strings can contain any valid Python expression inside expression "
"components, it is now possible to nest f-strings arbitrarily:"
msgstr ""
"Como agora as f-strings podem conter qualquer expressão Python válida dentro "
"dos componentes de expressão, é agora possível aninhar f-strings "
"arbitrariamente:"

#: ../../whatsnew/3.12.rst:276
msgid ""
"Multi-line expressions and comments: In Python 3.11, f-string expressions "
"must be defined in a single line, even if the expression within the f-string "
"could normally span multiple lines (like literal lists being defined over "
"multiple lines), making them harder to read. In Python 3.12 you can now "
"define f-strings spanning multiple lines, and add inline comments:"
msgstr ""
"Expressões multi-linha e comentários: No Python 3.11, as expressões de f-"
"string tinham de ser definidas numa única linha, mesmo que a expressão "
"dentro da f-string pudesse normalmente abarcar várias linhas (como listas "
"literais definidas em várias linhas), tornando-as mais difíceis de ler. No "
"Python 3.12, pode agora definir f-strings que abarcam várias linhas e "
"adicionar comentários em linha:"

#: ../../whatsnew/3.12.rst:290
msgid ""
"Backslashes and unicode characters: before Python 3.12 f-string expressions "
"couldn't contain any ``\\`` character. This also affected unicode :ref:"
"`escape sequences <escape-sequences>` (such as ``\\N{snowman}``) as these "
"contain the ``\\N`` part that previously could not be part of expression "
"components of f-strings. Now, you can define expressions like this:"
msgstr ""
"Barras invertidas e caracteres unicode: antes do Python 3.12, as expressões "
"de f-string não podiam conter qualquer carácter ``\\``. Isto também afetava "
"as sequências de escape :ref:`unicode <escape-sequences>` (como "
"``\\N{snowman}``), uma vez que estas contêm a parte ``\\N`` que "
"anteriormente não podia fazer parte dos componentes de expressão das f-"
"strings. Agora, pode definir expressões como esta:"

#: ../../whatsnew/3.12.rst:303
msgid "See :pep:`701` for more details."
msgstr "Consulte :pep:`701` para mais detalhes."

#: ../../whatsnew/3.12.rst:305
msgid ""
"As a positive side-effect of how this feature has been implemented (by "
"parsing f-strings with :pep:`the PEG parser <617>`), now error messages for "
"f-strings are more precise and include the exact location of the error. For "
"example, in Python 3.11, the following f-string raises a :exc:`SyntaxError`:"
msgstr ""
"Como efeito colateral positivo da forma como esta funcionalidade foi "
"implementada (analisando f-strings com o :pep:`analisador PEG <617>`), as "
"mensagens de erro para f-strings são agora mais precisas e incluem a "
"localização exata do erro. Por exemplo, no Python 3.11, a seguinte f-string "
"levanta um :exc:`SyntaxError`:"

#: ../../whatsnew/3.12.rst:310
msgid ""
">>> my_string = f\"{x z y}\" + f\"{1 + 1}\"\n"
"  File \"<stdin>\", line 1\n"
"    (x z y)\n"
"     ^^^\n"
"SyntaxError: f-string: invalid syntax. Perhaps you forgot a comma?"
msgstr ""
">>> my_string = f\"{x z y}\" + f\"{1 + 1}\"\n"
"  File \"<stdin>\", line 1\n"
"    (x z y)\n"
"     ^^^\n"
"SyntaxError: f-string: sintaxe inválida. Talvez tenha esquecido uma vírgula?"

#: ../../whatsnew/3.12.rst:318
msgid ""
"but the error message doesn't include the exact location of the error within "
"the line and also has the expression artificially surrounded by parentheses. "
"In Python 3.12, as f-strings are parsed with the PEG parser, error messages "
"can be more precise and show the entire line:"
msgstr ""
"mas a mensagem de erro não inclui a localização exata do erro dentro da "
"linha e também tem a expressão artificialmente rodeada por parênteses. No "
"Python 3.12, como as f-strings são analisadas com o analisador PEG, as "
"mensagens de erro podem ser mais precisas e mostrar toda a linha:"

#: ../../whatsnew/3.12.rst:322
msgid ""
">>> my_string = f\"{x z y}\" + f\"{1 + 1}\"\n"
"  File \"<stdin>\", line 1\n"
"    my_string = f\"{x z y}\" + f\"{1 + 1}\"\n"
"                   ^^^\n"
"SyntaxError: invalid syntax. Perhaps you forgot a comma?"
msgstr ""
">>> my_string = f\"{x z y}\" + f\"{1 + 1}\"\n"
"  File \"<stdin>\", line 1\n"
"    my_string = f\"{x z y}\" + f\"{1 + 1}\"\n"
"                   ^^^\n"
"SyntaxError: sintaxe inválida. Talvez tenha esquecido uma vírgula?"

#: ../../whatsnew/3.12.rst:330
msgid ""
"(Contributed by Pablo Galindo, Batuhan Taskaya, Lysandros Nikolaou, Cristián "
"Maureira-Fredes and Marta Gómez in :gh:`102856`. PEP written by Pablo "
"Galindo, Batuhan Taskaya, Lysandros Nikolaou and Marta Gómez)."
msgstr ""
"(Contribuído por Pablo Galindo, Batuhan Taskaya, Lysandros Nikolaou, "
"Cristián Maureira-Fredes e Marta Gómez em :gh:`102856`. PEP escrita por "
"Pablo Galindo, Batuhan Taskaya, Lysandros Nikolaou e Marta Gómez)."

#: ../../whatsnew/3.12.rst:337
msgid "PEP 684: A Per-Interpreter GIL"
msgstr "PEP 684: Um GIL por Interpretador"

#: ../../whatsnew/3.12.rst:339
msgid ""
":pep:`684` introduces a per-interpreter :term:`GIL <global interpreter "
"lock>`, so that sub-interpreters may now be created with a unique GIL per "
"interpreter. This allows Python programs to take full advantage of multiple "
"CPU cores. This is currently only available through the C-API, though a "
"Python API is :pep:`anticipated for 3.13 <554>`."
msgstr ""
"A :pep:`684` introduz um :term:`GIL <global interpreter lock>` por "
"interpretador, de modo que os sub-interpretadores podem agora ser criados "
"com um GIL único por interpretador. Isto permite que os programas Python "
"tirem total partido de vários núcleos de CPU. Isto está atualmente "
"disponível apenas através da API C, embora uma API Python esteja :pep:"
"`prevista para 3.13 <554>`."

#: ../../whatsnew/3.12.rst:345
msgid ""
"Use the new :c:func:`Py_NewInterpreterFromConfig` function to create an "
"interpreter with its own GIL:"
msgstr ""
"Use a nova função :c:func:`Py_NewInterpreterFromConfig` para criar um "
"interpretador com o seu próprio GIL:"

#: ../../whatsnew/3.12.rst:348
msgid ""
"PyInterpreterConfig config = {\n"
"    .check_multi_interp_extensions = 1,\n"
"    .gil = PyInterpreterConfig_OWN_GIL,\n"
"};\n"
"PyThreadState *tstate = NULL;\n"
"PyStatus status = Py_NewInterpreterFromConfig(&tstate, &config);\n"
"if (PyStatus_Exception(status)) {\n"
"    return -1;\n"
"}\n"
"/* The new interpreter is now active in the current thread. */"
msgstr ""
"PyInterpreterConfig config = {\n"
"    .check_multi_interp_extensions = 1,\n"
"    .gil = PyInterpreterConfig_OWN_GIL,\n"
"};\n"
"PyThreadState *tstate = NULL;\n"
"PyStatus status = Py_NewInterpreterFromConfig(&tstate, &config);\n"
"if (PyStatus_Exception(status)) {\n"
"    return -1;\n"
"}\n"
"/* O novo interpretador está agora ativo na thread atual. */"

#: ../../whatsnew/3.12.rst:361
msgid ""
"For further examples how to use the C-API for sub-interpreters with a per-"
"interpreter GIL, see ``Modules/_xxsubinterpretersmodule.c``."
msgstr ""
"Para mais exemplos de como usar a API C para sub-interpretadores com um GIL "
"por interpretador, consulte ``Modules/_xxsubinterpretersmodule.c``."

#: ../../whatsnew/3.12.rst:364
msgid "(Contributed by Eric Snow in :gh:`104210`, etc.)"
msgstr "(Contribuído por Eric Snow em :gh:`104210`, etc.)"

#: ../../whatsnew/3.12.rst:369
msgid "PEP 669: Low impact monitoring for CPython"
msgstr "PEP 669: Monitorização de baixo impacto para CPython"

#: ../../whatsnew/3.12.rst:371
msgid ""
":pep:`669` defines a new :mod:`API <sys.monitoring>` for profilers, "
"debuggers, and other tools to monitor events in CPython. It covers a wide "
"range of events, including calls, returns, lines, exceptions, jumps, and "
"more. This means that you only pay for what you use, providing support for "
"near-zero overhead debuggers and coverage tools. See  :mod:`sys.monitoring` "
"for details."
msgstr ""
"A :pep:`669` define uma nova :mod:`API <sys.monitoring>` para perfiladores, "
"depuradores e outras ferramentas para monitorizar eventos no CPython. "
"Abrange uma vasta gama de eventos, incluindo chamadas, retornos, linhas, "
"exceções, saltos e mais. Isto significa que só paga pelo que usa, fornecendo "
"suporte para depuradores e ferramentas de cobertura com sobrecarga quase "
"nula. Consulte :mod:`sys.monitoring` para mais detalhes."

#: ../../whatsnew/3.12.rst:379
msgid "(Contributed by Mark Shannon in :gh:`103082`.)"
msgstr "(Contribuído por Mark Shannon em :gh:`103082`.)"

#: ../../whatsnew/3.12.rst:384
msgid "PEP 688: Making the buffer protocol accessible in Python"
msgstr "PEP 688: Tornar o protocolo de buffer acessível em Python"

#: ../../whatsnew/3.12.rst:386
msgid ""
":pep:`688` introduces a way to use the :ref:`buffer protocol "
"<bufferobjects>` from Python code. Classes that implement the :meth:`~object."
"__buffer__` method are now usable as buffer types."
msgstr ""
"A :pep:`688` introduz uma forma de usar o :ref:`protocolo de buffer "
"<bufferobjects>` a partir de código Python. As classes que implementam o "
"método :meth:`~object.__buffer__` são agora utilizáveis como tipos de buffer."

#: ../../whatsnew/3.12.rst:390
msgid ""
"The new :class:`collections.abc.Buffer` ABC provides a standard way to "
"represent buffer objects, for example in type annotations. The new :class:"
"`inspect.BufferFlags` enum represents the flags that can be used to "
"customize buffer creation. (Contributed by Jelle Zijlstra in :gh:`102500`.)"
msgstr ""
"A nova ABC :class:`collections.abc.Buffer` fornece uma forma padrão de "
"representar objetos de buffer, por exemplo, em anotações de tipo. A nova "
"enumeração :class:`inspect.BufferFlags` representa as flags que podem ser "
"usadas para personalizar a criação de buffers. (Contribuído por Jelle "
"Zijlstra em :gh:`102500`.)"

#: ../../whatsnew/3.12.rst:399
msgid "PEP 709: Comprehension inlining"
msgstr "PEP 709: Inline de comprehensions"

#: ../../whatsnew/3.12.rst:401
msgid ""
"Dictionary, list, and set comprehensions are now inlined, rather than "
"creating a new single-use function object for each execution of the "
"comprehension. This speeds up execution of a comprehension by up to two "
"times. See :pep:`709` for further details."
msgstr ""
"As comprehensions de dicionário, lista e conjunto são agora inline, em vez "
"de criar um novo objeto de função de uso único para cada execução da "
"comprehension. Isto acelera a execução de uma comprehension até duas vezes. "
"Consulte :pep:`709` para mais detalhes."

#: ../../whatsnew/3.12.rst:406
msgid ""
"Comprehension iteration variables remain isolated and don't overwrite a "
"variable of the same name in the outer scope, nor are they visible after the "
"comprehension. Inlining does result in a few visible behavior changes:"
msgstr ""
"As variáveis de iteração de comprehension permanecem isoladas e não "
"substituem uma variável com o mesmo nome no âmbito externo, nem são visíveis "
"após a comprehension. O inline resulta em algumas alterações visíveis de "
"comportamento:"

#: ../../whatsnew/3.12.rst:410
msgid ""
"There is no longer a separate frame for the comprehension in tracebacks, and "
"tracing/profiling no longer shows the comprehension as a function call."
msgstr ""
"Já não existe um frame separado para a comprehension nos tracebacks, e o "
"rastreio/perfilagem já não mostra a comprehension como uma chamada de função."

#: ../../whatsnew/3.12.rst:412
msgid ""
"The :mod:`symtable` module will no longer produce child symbol tables for "
"each comprehension; instead, the comprehension's locals will be included in "
"the parent function's symbol table."
msgstr ""
"O módulo :mod:`symtable` já não produzirá tabelas de símbolos filho para "
"cada comprehension; em vez disso, os locais da comprehension serão incluídos "
"na tabela de símbolos da função pai."

#: ../../whatsnew/3.12.rst:415
msgid ""
"Calling :func:`locals` inside a comprehension now includes variables from "
"outside the comprehension, and no longer includes the synthetic ``.0`` "
"variable for the comprehension \"argument\"."
msgstr ""
"A chamada a :func:`locals` dentro de uma comprehension agora inclui "
"variáveis de fora da comprehension, e já não inclui a variável sintética "
"``.0`` para o \"argumento\" da comprehension."

#: ../../whatsnew/3.12.rst:418
msgid ""
"A comprehension iterating directly over ``locals()`` (e.g. ``[k for k in "
"locals()]``) may see \"RuntimeError: dictionary changed size during "
"iteration\" when run under tracing (e.g. code coverage measurement). This is "
"the same behavior already seen in e.g. ``for k in locals():``. To avoid the "
"error, first create a list of keys to iterate over: ``keys = list(locals()); "
"[k for k in keys]``."
msgstr ""
"Uma comprehension que itera diretamente sobre ``locals()`` (por exemplo, "
"``[k for k in locals()]``) pode ver \"RuntimeError: dictionary changed size "
"during iteration\" quando executada sob rastreio (por exemplo, medição de "
"cobertura de código). Este é o mesmo comportamento já visto em, por exemplo, "
"``for k in locals():``. Para evitar o erro, crie primeiro uma lista de "
"chaves para iterar: ``keys = list(locals()); [k for k in keys]``."

#: ../../whatsnew/3.12.rst:425
msgid "(Contributed by Carl Meyer and Vladimir Matveev in :pep:`709`.)"
msgstr "(Contribuído por Carl Meyer e Vladimir Matveev em :pep:`709`.)"

#: ../../whatsnew/3.12.rst:428
msgid "Improved Error Messages"
msgstr "Mensagens de Erro Melhoradas"

#: ../../whatsnew/3.12.rst:430
msgid ""
"Modules from the standard library are now potentially suggested as part of "
"the error messages displayed by the interpreter when a :exc:`NameError` is "
"raised to the top level. (Contributed by Pablo Galindo in :gh:`98254`.)"
msgstr ""
"Os módulos da biblioteca padrão são agora potencialmente sugeridos como "
"parte das mensagens de erro exibidas pelo interpretador quando um :exc:"
"`NameError` é levantado ao nível superior. (Contribuído por Pablo Galindo "
"em :gh:`98254`.)"

#: ../../whatsnew/3.12.rst:439
msgid ""
"Improve the error suggestion for :exc:`NameError` exceptions for instances. "
"Now if a :exc:`NameError` is raised in a method and the instance has an "
"attribute that's exactly equal to the name in the exception, the suggestion "
"will include ``self.<NAME>`` instead of the closest match in the method "
"scope. (Contributed by Pablo Galindo in :gh:`99139`.)"
msgstr ""
"Melhorar a sugestão de erro para exceções :exc:`NameError` em instâncias. "
"Agora, se um :exc:`NameError` for levantado num método e a instância tiver "
"um atributo que seja exatamente igual ao nome na exceção, a sugestão "
"incluirá ``self.<NAME>`` em vez da correspondência mais próxima no âmbito do "
"método. (Contribuído por Pablo Galindo em :gh:`99139`.)"

#: ../../whatsnew/3.12.rst:459
msgid ""
"Improve the :exc:`SyntaxError` error message when the user types ``import x "
"from y`` instead of ``from y import x``. (Contributed by Pablo Galindo in :"
"gh:`98931`.)"
msgstr ""
"Melhorar a mensagem de erro :exc:`SyntaxError` quando o utilizador escreve "
"``import x from y`` em vez de ``from y import x``. (Contribuído por Pablo "
"Galindo em :gh:`98931`.)"

#: ../../whatsnew/3.12.rst:469
msgid ""
":exc:`ImportError` exceptions raised from failed ``from <module> import "
"<name>`` statements now include suggestions for the value of ``<name>`` "
"based on the available names in ``<module>``. (Contributed by Pablo Galindo "
"in :gh:`91058`.)"
msgstr ""
"As exceções :exc:`ImportError` levantadas a partir de instruções ``from "
"<module> import <name>`` falhadas agora incluem sugestões para o valor de "
"``<name>`` com base nos nomes disponíveis em ``<module>``. (Contribuído por "
"Pablo Galindo em :gh:`91058`.)"

#: ../../whatsnew/3.12.rst:480
msgid "New Features Related to Type Hints"
msgstr "Novas Funcionalidades Relacionadas com Dicas de Tipo"

#: ../../whatsnew/3.12.rst:482
msgid ""
"This section covers major changes affecting :pep:`type hints <484>` and the :"
"mod:`typing` module."
msgstr ""
"Esta secção abrange as principais alterações que afetam as :pep:`dicas de "
"tipo <484>` e o módulo :mod:`typing`."

#: ../../whatsnew/3.12.rst:488
msgid "PEP 692: Using ``TypedDict`` for more precise ``**kwargs`` typing"
msgstr ""
"PEP 692: Uso de ``TypedDict`` para tipagem mais precisa de ``**kwargs``"

#: ../../whatsnew/3.12.rst:490
msgid ""
"Typing ``**kwargs`` in a function signature as introduced by :pep:`484` "
"allowed for valid annotations only in cases where all of the ``**kwargs`` "
"were of the same type."
msgstr ""
"A tipagem de ``**kwargs`` numa assinatura de função, como introduzido pela :"
"pep:`484`, permitia anotações válidas apenas em casos em que todos os "
"``**kwargs`` eram do mesmo tipo."

#: ../../whatsnew/3.12.rst:494
msgid ""
":pep:`692` specifies a more precise way of typing ``**kwargs`` by relying on "
"typed dictionaries::"
msgstr ""
"A :pep:`692` especifica uma forma mais precisa de tipagem de ``**kwargs`` "
"baseando-se em dicionários tipados::"

#: ../../whatsnew/3.12.rst:497
msgid ""
"from typing import TypedDict, Unpack\n"
"\n"
"class Movie(TypedDict):\n"
"  name: str\n"
"  year: int\n"
"\n"
"def foo(**kwargs: Unpack[Movie]): ..."
msgstr ""
"from typing import TypedDict, Unpack\n"
"\n"
"class Movie(TypedDict):\n"
"  name: str\n"
"  year: int\n"
"\n"
"def foo(**kwargs: Unpack[Movie]): ..."

#: ../../whatsnew/3.12.rst:505
msgid "See :pep:`692` for more details."
msgstr "Consulte :pep:`692` para mais detalhes."

#: ../../whatsnew/3.12.rst:507
msgid "(Contributed by Franek Magiera in :gh:`103629`.)"
msgstr "(Contribuído por Franek Magiera em :gh:`103629`.)"

#: ../../whatsnew/3.12.rst:512
msgid "PEP 698: Override Decorator for Static Typing"
msgstr "PEP 698: Decorador Override para Tipagem Estática"

#: ../../whatsnew/3.12.rst:514
msgid ""
"A new decorator :func:`typing.override` has been added to the :mod:`typing` "
"module. It indicates to type checkers that the method is intended to "
"override a method in a superclass. This allows type checkers to catch "
"mistakes where a method that is intended to override something in a base "
"class does not in fact do so."
msgstr ""
"Foi adicionado um novo decorador :func:`typing.override` ao módulo :mod:"
"`typing`. Indica aos verificadores de tipo que o método é destinado a "
"substituir um método numa superclasse. Isto permite que os verificadores de "
"tipo detetem erros em que um método que se destina a substituir algo numa "
"classe base não o faz de facto."

#: ../../whatsnew/3.12.rst:520
msgid "Example::"
msgstr "Exemplo::"

#: ../../whatsnew/3.12.rst:522
msgid ""
"from typing import override\n"
"\n"
"class Base:\n"
"  def get_color(self) -> str:\n"
"    return \"blue\"\n"
"\n"
"class GoodChild(Base):\n"
"  @override  # ok: overrides Base.get_color\n"
"  def get_color(self) -> str:\n"
"    return \"yellow\"\n"
"\n"
"class BadChild(Base):\n"
"  @override  # type checker error: does not override Base.get_color\n"
"  def get_colour(self) -> str:\n"
"    return \"red\""
msgstr ""
"from typing import override\n"
"\n"
"class Base:\n"
"  def get_color(self) -> str:\n"
"    return \"blue\"\n"
"\n"
"class GoodChild(Base):\n"
"  @override  # ok: substitui Base.get_color\n"
"  def get_color(self) -> str:\n"
"    return \"yellow\"\n"
"\n"
"class BadChild(Base):\n"
"  @override  # erro do verificador de tipo: não substitui Base.get_color\n"
"  def get_colour(self) -> str:\n"
"    return \"red\""

#: ../../whatsnew/3.12.rst:538
msgid "See :pep:`698` for more details."
msgstr "Consulte :pep:`698` para mais detalhes."

#: ../../whatsnew/3.12.rst:540
msgid "(Contributed by Steven Troxler in :gh:`101561`.)"
msgstr "(Contribuído por Steven Troxler em :gh:`101561`.)"

#: ../../whatsnew/3.12.rst:543
msgid "Other Language Changes"
msgstr "Outras Alterações à Linguagem"

#: ../../whatsnew/3.12.rst:545
msgid ""
"The parser now raises :exc:`SyntaxError` when parsing source code containing "
"null bytes. (Contributed by Pablo Galindo in :gh:`96670`.)"
msgstr ""
"O analisador agora levanta :exc:`SyntaxError` ao analisar código-fonte que "
"contenha bytes nulos. (Contribuído por Pablo Galindo em :gh:`96670`.)"

#: ../../whatsnew/3.12.rst:548
msgid ""
"A backslash-character pair that is not a valid escape sequence now generates "
"a :exc:`SyntaxWarning`, instead of :exc:`DeprecationWarning`. For example, "
"``re.compile(\"\\d+\\.\\d+\")`` now emits a :exc:`SyntaxWarning` "
"(``\"\\d\"`` is an invalid escape sequence, use raw strings for regular "
"expression: ``re.compile(r\"\\d+\\.\\d+\")``). In a future Python version, :"
"exc:`SyntaxError` will eventually be raised, instead of :exc:"
"`SyntaxWarning`. (Contributed by Victor Stinner in :gh:`98401`.)"
msgstr ""
"Um par de caracteres de barra invertida que não é uma sequência de escape "
"válida agora gera um :exc:`SyntaxWarning`, em vez de :exc:"
"`DeprecationWarning`. Por exemplo, ``re.compile(\"\\d+\\.\\d+\")`` agora "
"emite um :exc:`SyntaxWarning` (``\"\\d\"`` é uma sequência de escape "
"inválida, use strings brutas para expressões regulares: ``re.compile(r\"\\d+"
"\\.\\d+\")``). Numa versão futura do Python, :exc:`SyntaxError` será "
"eventualmente levantado, em vez de :exc:`SyntaxWarning`. (Contribuído por "
"Victor Stinner em :gh:`98401`.)"

#: ../../whatsnew/3.12.rst:557
msgid ""
"Octal escapes with value larger than ``0o377`` (ex: ``\"\\477\"``), "
"deprecated in Python 3.11, now produce a :exc:`SyntaxWarning`, instead of :"
"exc:`DeprecationWarning`. In a future Python version they will be eventually "
"a :exc:`SyntaxError`. (Contributed by Victor Stinner in :gh:`98401`.)"
msgstr ""
"As sequências de escape octal com valor superior a ``0o377`` (por exemplo, "
"``\"\\477\"``), obsoletas no Python 3.11, agora produzem um :exc:"
"`SyntaxWarning`, em vez de :exc:`DeprecationWarning`. Numa versão futura do "
"Python, serão eventualmente um :exc:`SyntaxError`. (Contribuído por Victor "
"Stinner em :gh:`98401`.)"

#: ../../whatsnew/3.12.rst:563
msgid ""
"Variables used in the target part of comprehensions that are not stored to "
"can now be used in assignment expressions (``:=``). For example, in ``[(b := "
"1) for a, b.prop in some_iter]``, the assignment to ``b`` is now allowed. "
"Note that assigning to variables stored to in the target part of "
"comprehensions (like ``a``) is still disallowed, as per :pep:`572`. "
"(Contributed by Nikita Sobolev in :gh:`100581`.)"
msgstr ""
"As variáveis usadas na parte de destino de comprehensions que não são "
"armazenadas podem agora ser usadas em expressões de atribuição (``:=``). Por "
"exemplo, em ``[(b := 1) for a, b.prop in some_iter]``, a atribuição a ``b`` "
"é agora permitida. Note que a atribuição a variáveis armazenadas na parte de "
"destino de comprehensions (como ``a``) continua a não ser permitida, "
"conforme :pep:`572`. (Contribuído por Nikita Sobolev em :gh:`100581`.)"

#: ../../whatsnew/3.12.rst:570
msgid ""
"Exceptions raised in a class or type's ``__set_name__`` method are no longer "
"wrapped by a :exc:`RuntimeError`. Context information is added to the "
"exception as a :pep:`678` note. (Contributed by Irit Katriel in :gh:`77757`.)"
msgstr ""
"As exceções levantadas no método ``__set_name__`` de uma classe ou tipo já "
"não são envolvidas por um :exc:`RuntimeError`. A informação de contexto é "
"adicionada à exceção como uma nota :pep:`678`. (Contribuído por Irit Katriel "
"em :gh:`77757`.)"

#: ../../whatsnew/3.12.rst:574
msgid ""
"When a ``try-except*`` construct handles the entire :exc:`ExceptionGroup` "
"and raises one other exception, that exception is no longer wrapped in an :"
"exc:`ExceptionGroup`. Also changed in version 3.11.4. (Contributed by Irit "
"Katriel in :gh:`103590`.)"
msgstr ""
"Quando uma construção ``try-except*`` trata todo o :exc:`ExceptionGroup` e "
"levanta outra exceção, essa exceção já não é envolvida num :exc:"
"`ExceptionGroup`. Também alterado na versão 3.11.4. (Contribuído por Irit "
"Katriel em :gh:`103590`.)"

#: ../../whatsnew/3.12.rst:579
msgid ""
"The Garbage Collector now runs only on the eval breaker mechanism of the "
"Python bytecode evaluation loop instead of object allocations. The GC can "
"also run when :c:func:`PyErr_CheckSignals` is called so C extensions that "
"need to run for a long time without executing any Python code also have a "
"chance to execute the GC periodically. (Contributed by Pablo Galindo in :gh:"
"`97922`.)"
msgstr ""
"O Garbage Collector agora é executado apenas no mecanismo de interrupção de "
"avaliação do loop de avaliação de bytecode Python em vez de alocações de "
"objetos. O GC também pode ser executado quando :c:func:`PyErr_CheckSignals` "
"é chamado, de modo que as extensões C que precisam de ser executadas por um "
"longo período de tempo sem executar qualquer código Python também têm a "
"oportunidade de executar o GC periodicamente. (Contribuído por Pablo Galindo "
"em :gh:`97922`.)"

#: ../../whatsnew/3.12.rst:586
msgid ""
"All builtin and extension callables expecting boolean parameters now accept "
"arguments of any type instead of just :class:`bool` and :class:`int`. "
"(Contributed by Serhiy Storchaka in :gh:`60203`.)"
msgstr ""
"Todos os chamáveis integrados e de extensão que esperam parâmetros booleanos "
"agora aceitam argumentos de qualquer tipo em vez de apenas :class:`bool` e :"
"class:`int`. (Contribuído por Serhiy Storchaka em :gh:`60203`.)"

#: ../../whatsnew/3.12.rst:590
msgid ""
":class:`memoryview` now supports the half-float type (the \"e\" format "
"code). (Contributed by Donghee Na and Antoine Pitrou in :gh:`90751`.)"
msgstr ""
"A classe :class:`memoryview` agora suporta o tipo half-float (o código de "
"formato \"e\"). (Contribuído por Donghee Na e Antoine Pitrou em :gh:`90751`.)"

#: ../../whatsnew/3.12.rst:593
msgid ""
":class:`slice` objects are now hashable, allowing them to be used as dict "
"keys and set items. (Contributed by Will Bradshaw, Furkan Onder, and Raymond "
"Hettinger in :gh:`101264`.)"
msgstr ""
"Os objetos :class:`slice` são agora hashable, permitindo que sejam usados "
"como chaves de dicionário e itens de conjunto. (Contribuído por Will "
"Bradshaw, Furkan Onder e Raymond Hettinger em :gh:`101264`.)"

#: ../../whatsnew/3.12.rst:596
msgid ""
":func:`sum` now uses Neumaier summation to improve accuracy and "
"commutativity when summing floats or mixed ints and floats. (Contributed by "
"Raymond Hettinger in :gh:`100425`.)"
msgstr ""
"A função :func:`sum` agora usa a soma de Neumaier para melhorar a precisão e "
"a comutatividade ao somar flutuantes ou inteiros e flutuantes misturados. "
"(Contribuído por Raymond Hettinger em :gh:`100425`.)"

#: ../../whatsnew/3.12.rst:600
msgid ""
":func:`ast.parse` now raises :exc:`SyntaxError` instead of :exc:`ValueError` "
"when parsing source code containing null bytes. (Contributed by Pablo "
"Galindo in :gh:`96670`.)"
msgstr ""
"A função :func:`ast.parse` agora levanta :exc:`SyntaxError` em vez de :exc:"
"`ValueError` ao analisar código-fonte que contenha bytes nulos. (Contribuído "
"por Pablo Galindo em :gh:`96670`.)"

#: ../../whatsnew/3.12.rst:604
msgid ""
"The extraction methods in :mod:`tarfile`, and :func:`shutil.unpack_archive`, "
"have a new a *filter* argument that allows limiting tar features than may be "
"surprising or dangerous, such as creating files outside the destination "
"directory. See :ref:`tarfile extraction filters <tarfile-extraction-filter>` "
"for details. In Python 3.14, the default will switch to ``'data'``. "
"(Contributed by Petr Viktorin in :pep:`706`.)"
msgstr ""
"Os métodos de extração em :mod:`tarfile` e :func:`shutil.unpack_archive` têm "
"um novo argumento *filter* que permite limitar funcionalidades tar que podem "
"ser surpreendentes ou perigosas, como criar ficheiros fora do diretório de "
"destino. Consulte :ref:`filtros de extração tarfile <tarfile-extraction-"
"filter>` para mais detalhes. No Python 3.14, o predefinido mudará para "
"``'data'``. (Contribuído por Petr Viktorin em :pep:`706`.)"

#: ../../whatsnew/3.12.rst:612
msgid ""
":class:`types.MappingProxyType` instances are now hashable if the underlying "
"mapping is hashable. (Contributed by Serhiy Storchaka in :gh:`87995`.)"
msgstr ""
"As instâncias de :class:`types.MappingProxyType` são agora hashable se o "
"mapeamento subjacente for hashable. (Contribuído por Serhiy Storchaka em :gh:"
"`87995`.)"

#: ../../whatsnew/3.12.rst:616
msgid ""
"Add :ref:`support for the perf profiler <perf_profiling>` through the new "
"environment variable :envvar:`PYTHONPERFSUPPORT` and command-line option :"
"option:`-X perf <-X>`, as well as the new :func:`sys."
"activate_stack_trampoline`, :func:`sys.deactivate_stack_trampoline`, and :"
"func:`sys.is_stack_trampoline_active` functions. (Design by Pablo Galindo. "
"Contributed by Pablo Galindo and Christian Heimes with contributions from "
"Gregory P. Smith [Google] and Mark Shannon in :gh:`96123`.)"
msgstr ""
"Adicionado :ref:`suporte para o perfilador perf <perf_profiling>` através da "
"nova variável de ambiente :envvar:`PYTHONPERFSUPPORT` e da opção de linha de "
"comandos :option:`-X perf <-X>`, bem como as novas funções :func:`sys."
"activate_stack_trampoline`, :func:`sys.deactivate_stack_trampoline` e :func:"
"`sys.is_stack_trampoline_active`. (Design de Pablo Galindo. Contribuído por "
"Pablo Galindo e Christian Heimes com contribuições de Gregory P. Smith "
"[Google] e Mark Shannon em :gh:`96123`.)"

#: ../../whatsnew/3.12.rst:628
msgid "New Modules"
msgstr "Novos Módulos"

#: ../../whatsnew/3.12.rst:630
msgid "None."
msgstr "Nenhum."

#: ../../whatsnew/3.12.rst:634
msgid "Improved Modules"
msgstr "Módulos Melhorados"

#: ../../whatsnew/3.12.rst:637
msgid "array"
msgstr "array"

#: ../../whatsnew/3.12.rst:639
msgid ""
"The :class:`array.array` class now supports subscripting, making it a :term:"
"`generic type`. (Contributed by Jelle Zijlstra in :gh:`98658`.)"
msgstr ""
"A classe :class:`array.array` agora suporta subscripting, tornando-a um :"
"term:`tipo genérico`. (Contribuído por Jelle Zijlstra em :gh:`98658`.)"

#: ../../whatsnew/3.12.rst:643
msgid "asyncio"
msgstr "asyncio"

#: ../../whatsnew/3.12.rst:645
msgid ""
"The performance of writing to sockets in :mod:`asyncio` has been "
"significantly improved. ``asyncio`` now avoids unnecessary copying when "
"writing to sockets and uses :meth:`~socket.socket.sendmsg` if the platform "
"supports it. (Contributed by Kumar Aditya in :gh:`91166`.)"
msgstr ""
"O desempenho da escrita em sockets em :mod:`asyncio` foi significativamente "
"melhorado. O ``asyncio`` agora evita cópias desnecessárias ao escrever em "
"sockets e usa :meth:`~socket.socket.sendmsg` se a plataforma o suportar. "
"(Contribuído por Kumar Aditya em :gh:`91166`.)"

#: ../../whatsnew/3.12.rst:650
msgid ""
"Add :func:`asyncio.eager_task_factory` and :func:`asyncio."
"create_eager_task_factory` functions to allow opting an event loop in to "
"eager task execution, making some use-cases 2x to 5x faster. (Contributed by "
"Jacob Bower & Itamar Oren in :gh:`102853`, :gh:`104140`, and :gh:`104138`)"
msgstr ""
"Adicionadas as funções :func:`asyncio.eager_task_factory` e :func:`asyncio."
"create_eager_task_factory` para permitir a execução ávida de tarefas num "
"loop de eventos, tornando alguns casos de uso 2x a 5x mais rápidos. "
"(Contribuído por Jacob Bower & Itamar Oren em :gh:`102853`, :gh:`104140` e :"
"gh:`104138`)"

#: ../../whatsnew/3.12.rst:655
msgid ""
"On Linux, :mod:`asyncio` uses :class:`!asyncio.PidfdChildWatcher` by default "
"if :func:`os.pidfd_open` is available and functional instead of :class:`!"
"asyncio.ThreadedChildWatcher`. (Contributed by Kumar Aditya in :gh:`98024`.)"
msgstr ""
"No Linux, o :mod:`asyncio` usa :class:`!asyncio.PidfdChildWatcher` por "
"predefinição se :func:`os.pidfd_open` estiver disponível e funcional, em vez "
"de :class:`!asyncio.ThreadedChildWatcher`. (Contribuído por Kumar Aditya em :"
"gh:`98024`.)"

#: ../../whatsnew/3.12.rst:660
msgid ""
"The event loop now uses the best available child watcher for each platform (:"
"class:`!asyncio.PidfdChildWatcher` if supported and :class:`!asyncio."
"ThreadedChildWatcher` otherwise), so manually configuring a child watcher is "
"not recommended. (Contributed by Kumar Aditya in :gh:`94597`.)"
msgstr ""
"O loop de eventos agora usa o melhor child watcher disponível para cada "
"plataforma (:class:`!asyncio.PidfdChildWatcher` se suportado e :class:`!"
"asyncio.ThreadedChildWatcher` caso contrário), pelo que não é recomendado "
"configurar manualmente um child watcher. (Contribuído por Kumar Aditya em :"
"gh:`94597`.)"

#: ../../whatsnew/3.12.rst:666
msgid ""
"Add *loop_factory* parameter to :func:`asyncio.run` to allow specifying a "
"custom event loop factory. (Contributed by Kumar Aditya in :gh:`99388`.)"
msgstr ""
"Adicionado o parâmetro *loop_factory* a :func:`asyncio.run` para permitir a "
"especificação de uma fábrica de loop de eventos personalizada. (Contribuído "
"por Kumar Aditya em :gh:`99388`.)"

#: ../../whatsnew/3.12.rst:670
msgid ""
"Add C implementation of :func:`asyncio.current_task` for 4x-6x speedup. "
"(Contributed by Itamar Oren and Pranav Thulasiram Bhat in :gh:`100344`.)"
msgstr ""
"Adicionada implementação em C de :func:`asyncio.current_task` para um "
"aumento de velocidade de 4x-6x. (Contribuído por Itamar Oren e Pranav "
"Thulasiram Bhat em :gh:`100344`.)"

#: ../../whatsnew/3.12.rst:673
msgid ""
":func:`asyncio.iscoroutine` now returns ``False`` for generators as :mod:"
"`asyncio` does not support legacy generator-based coroutines. (Contributed "
"by Kumar Aditya in :gh:`102748`.)"
msgstr ""
"A função :func:`asyncio.iscoroutine` agora retorna ``False`` para geradores, "
"uma vez que o :mod:`asyncio` não suporta corrotinas baseadas em geradores "
"legados. (Contribuído por Kumar Aditya em :gh:`102748`.)"

#: ../../whatsnew/3.12.rst:677
msgid ""
":func:`asyncio.wait` and :func:`asyncio.as_completed` now accepts generators "
"yielding tasks. (Contributed by Kumar Aditya in :gh:`78530`.)"
msgstr ""
"As funções :func:`asyncio.wait` e :func:`asyncio.as_completed` agora aceitam "
"geradores que produzem tarefas. (Contribuído por Kumar Aditya em :gh:"
"`78530`.)"

#: ../../whatsnew/3.12.rst:682
msgid "calendar"
msgstr "calendar"

#: ../../whatsnew/3.12.rst:684
msgid ""
"Add enums :data:`calendar.Month` and :data:`calendar.Day` defining months of "
"the year and days of the week. (Contributed by Prince Roshan in :gh:"
"`103636`.)"
msgstr ""
"Adicionadas enums :data:`calendar.Month` e :data:`calendar.Day` que definem "
"os meses do ano e os dias da semana. (Contribuído por Prince Roshan em :gh:"
"`103636`.)"

#: ../../whatsnew/3.12.rst:689
msgid "csv"
msgstr "csv"

#: ../../whatsnew/3.12.rst:691
msgid ""
"Add :const:`csv.QUOTE_NOTNULL` and :const:`csv.QUOTE_STRINGS` flags to "
"provide finer grained control of ``None`` and empty strings by :class:`~csv."
"reader` and :class:`~csv.writer` objects."
msgstr ""
"Adicionadas flags :const:`csv.QUOTE_NOTNULL` e :const:`csv.QUOTE_STRINGS` "
"para fornecer um controlo mais fino de ``None`` e strings vazias pelos "
"objetos :class:`~csv.reader` e :class:`~csv.writer`."

#: ../../whatsnew/3.12.rst:696
msgid "dis"
msgstr "dis"

#: ../../whatsnew/3.12.rst:698
msgid ""
"Pseudo instruction opcodes (which are used by the compiler but do not appear "
"in executable bytecode) are now exposed in the :mod:`dis` module. :opcode:"
"`HAVE_ARGUMENT` is still relevant to real opcodes, but it is not useful for "
"pseudo instructions. Use the new :data:`dis.hasarg` collection instead. "
"(Contributed by Irit Katriel in :gh:`94216`.)"
msgstr ""
"Os códigos de operação de instruções pseudo (que são usados pelo compilador "
"mas não aparecem em bytecode executável) estão agora expostos no módulo :mod:"
"`dis`. :opcode:`HAVE_ARGUMENT` ainda é relevante para opcodes reais, mas não "
"é útil para instruções pseudo. Use a nova coleção :data:`dis.hasarg` em vez "
"disso. (Contribuído por Irit Katriel em :gh:`94216`.)"

#: ../../whatsnew/3.12.rst:706
msgid ""
"Add the :data:`dis.hasexc` collection to signify instructions that set an "
"exception handler. (Contributed by Irit Katriel in :gh:`94216`.)"
msgstr ""
"Adicionada a coleção :data:`dis.hasexc` para significar instruções que "
"definem um manipulador de exceções. (Contribuído por Irit Katriel em :gh:"
"`94216`.)"

#: ../../whatsnew/3.12.rst:710
msgid "fractions"
msgstr "fractions"

#: ../../whatsnew/3.12.rst:712
msgid ""
"Objects of type :class:`fractions.Fraction` now support float-style "
"formatting. (Contributed by Mark Dickinson in :gh:`100161`.)"
msgstr ""
"Os objetos do tipo :class:`fractions.Fraction` agora suportam formatação "
"estilo float. (Contribuído por Mark Dickinson em :gh:`100161`.)"

#: ../../whatsnew/3.12.rst:716
msgid "importlib.resources"
msgstr "importlib.resources"

#: ../../whatsnew/3.12.rst:718
msgid ""
":func:`importlib.resources.as_file` now supports resource directories. "
"(Contributed by Jason R. Coombs in :gh:`97930`.)"
msgstr ""
"A função :func:`importlib.resources.as_file` agora suporta diretórios de "
"recursos. (Contribuído por Jason R. Coombs em :gh:`97930`.)"

#: ../../whatsnew/3.12.rst:721
msgid ""
"Rename first parameter of :func:`importlib.resources.files` to *anchor*. "
"(Contributed by Jason R. Coombs in :gh:`100598`.)"
msgstr ""
"Renomeado o primeiro parâmetro de :func:`importlib.resources.files` para "
"*anchor*. (Contribuído por Jason R. Coombs em :gh:`100598`.)"

#: ../../whatsnew/3.12.rst:725
msgid "inspect"
msgstr "inspect"

#: ../../whatsnew/3.12.rst:727
msgid ""
"Add :func:`inspect.markcoroutinefunction` to mark sync functions that return "
"a :term:`coroutine` for use with :func:`inspect.iscoroutinefunction`. "
"(Contributed by Carlton Gibson in :gh:`99247`.)"
msgstr ""
"Adicionada a função :func:`inspect.markcoroutinefunction` para marcar "
"funções síncronas que retornam uma :term:`coroutine` para uso com :func:"
"`inspect.iscoroutinefunction`. (Contribuído por Carlton Gibson em :gh:"
"`99247`.)"

#: ../../whatsnew/3.12.rst:731
msgid ""
"Add :func:`inspect.getasyncgenstate` and :func:`inspect.getasyncgenlocals` "
"for determining the current state of asynchronous generators. (Contributed "
"by Thomas Krennwallner in :gh:`79940`.)"
msgstr ""
"Adicionadas as funções :func:`inspect.getasyncgenstate` e :func:`inspect."
"getasyncgenlocals` para determinar o estado atual de geradores assíncronos. "
"(Contribuído por Thomas Krennwallner em :gh:`79940`.)"

#: ../../whatsnew/3.12.rst:735
msgid ""
"The performance of :func:`inspect.getattr_static` has been considerably "
"improved. Most calls to the function should be at least 2x faster than they "
"were in Python 3.11. (Contributed by Alex Waygood in :gh:`103193`.)"
msgstr ""
"O desempenho de :func:`inspect.getattr_static` foi consideravelmente "
"melhorado. A maioria das chamadas à função deve ser pelo menos 2x mais "
"rápida do que eram no Python 3.11. (Contribuído por Alex Waygood em :gh:"
"`103193`.)"

#: ../../whatsnew/3.12.rst:740
msgid "itertools"
msgstr "itertools"

#: ../../whatsnew/3.12.rst:742
msgid ""
"Add :func:`itertools.batched` for collecting into even-sized tuples where "
"the last batch may be shorter than the rest. (Contributed by Raymond "
"Hettinger in :gh:`98363`.)"
msgstr ""
"Adicionada a função :func:`itertools.batched` para recolher em tuplos de "
"tamanho par, onde o último lote pode ser mais curto do que os restantes. "
"(Contribuído por Raymond Hettinger em :gh:`98363`.)"

#: ../../whatsnew/3.12.rst:747
msgid "math"
msgstr "math"

#: ../../whatsnew/3.12.rst:749
msgid ""
"Add :func:`math.sumprod` for computing a sum of products. (Contributed by "
"Raymond Hettinger in :gh:`100485`.)"
msgstr ""
"Adicionada a função :func:`math.sumprod` para calcular uma soma de produtos. "
"(Contribuído por Raymond Hettinger em :gh:`100485`.)"

#: ../../whatsnew/3.12.rst:752
msgid ""
"Extend :func:`math.nextafter` to include a *steps* argument for moving up or "
"down multiple steps at a time. (Contributed by Matthias Goergens, Mark "
"Dickinson, and Raymond Hettinger in :gh:`94906`.)"
msgstr ""
"Estendida a função :func:`math.nextafter` para incluir um argumento *steps* "
"para mover para cima ou para baixo vários passos de cada vez. (Contribuído "
"por Matthias Goergens, Mark Dickinson e Raymond Hettinger em :gh:`94906`.)"

#: ../../whatsnew/3.12.rst:757
msgid "os"
msgstr "os"

#: ../../whatsnew/3.12.rst:759
msgid ""
"Add :const:`os.PIDFD_NONBLOCK` to open a file descriptor for a process with :"
"func:`os.pidfd_open` in non-blocking mode. (Contributed by Kumar Aditya in :"
"gh:`93312`.)"
msgstr ""
"Adicionada a constante :const:`os.PIDFD_NONBLOCK` para abrir um descritor de "
"ficheiro para um processo com :func:`os.pidfd_open` em modo não bloqueante. "
"(Contribuído por Kumar Aditya em :gh:`93312`.)"

#: ../../whatsnew/3.12.rst:763
msgid ""
":class:`os.DirEntry` now includes an :meth:`os.DirEntry.is_junction` method "
"to check if the entry is a junction. (Contributed by Charles Machalow in :gh:"
"`99547`.)"
msgstr ""
"A classe :class:`os.DirEntry` agora inclui um método :meth:`os.DirEntry."
"is_junction` para verificar se a entrada é uma junção. (Contribuído por "
"Charles Machalow em :gh:`99547`.)"

#: ../../whatsnew/3.12.rst:767
msgid ""
"Add :func:`os.listdrives`, :func:`os.listvolumes` and :func:`os.listmounts` "
"functions on Windows for enumerating drives, volumes and mount points. "
"(Contributed by Steve Dower in :gh:`102519`.)"
msgstr ""
"Adicionadas as funções :func:`os.listdrives`, :func:`os.listvolumes` e :func:"
"`os.listmounts` no Windows para enumerar drives, volumes e pontos de "
"montagem. (Contribuído por Steve Dower em :gh:`102519`.)"

#: ../../whatsnew/3.12.rst:771
msgid ""
":func:`os.stat` and :func:`os.lstat` are now more accurate on Windows. The "
"``st_birthtime`` field will now be filled with the creation time of the "
"file, and ``st_ctime`` is deprecated but still contains the creation time "
"(but in the future will return the last metadata change, for consistency "
"with other platforms). ``st_dev`` may be up to 64 bits and ``st_ino`` up to "
"128 bits depending on your file system, and ``st_rdev`` is always set to "
"zero rather than incorrect values. Both functions may be significantly "
"faster on newer releases of Windows. (Contributed by Steve Dower in :gh:"
"`99726`.)"
msgstr ""
"As funções :func:`os.stat` e :func:`os.lstat` são agora mais precisas no "
"Windows. O campo ``st_birthtime`` será agora preenchido com a hora de "
"criação do ficheiro, e ``st_ctime`` está obsoleto, mas ainda contém a hora "
"de criação (mas no futuro retornará a última alteração de metadados, por "
"consistência com outras plataformas). ``st_dev`` pode ter até 64 bits e "
"``st_ino`` até 128 bits, dependendo do seu sistema de ficheiros, e "
"``st_rdev`` é sempre definido para zero em vez de valores incorretos. Ambas "
"as funções podem ser significativamente mais rápidas em versões mais "
"recentes do Windows. (Contribuído por Steve Dower em :gh:`99726`.)"

#: ../../whatsnew/3.12.rst:782
msgid "os.path"
msgstr "os.path"

#: ../../whatsnew/3.12.rst:784
msgid ""
"Add :func:`os.path.isjunction` to check if a given path is a junction. "
"(Contributed by Charles Machalow in :gh:`99547`.)"
msgstr ""
"Adicionada a função :func:`os.path.isjunction` para verificar se um caminho "
"dado é uma junção. (Contribuído por Charles Machalow em :gh:`99547`.)"

#: ../../whatsnew/3.12.rst:787
msgid ""
"Add :func:`os.path.splitroot` to split a path into a triad ``(drive, root, "
"tail)``. (Contributed by Barney Gale in :gh:`101000`.)"
msgstr ""
"Adicionada a função :func:`os.path.splitroot` para dividir um caminho numa "
"tríade ``(drive, root, tail)``. (Contribuído por Barney Gale em :gh:"
"`101000`.)"

#: ../../whatsnew/3.12.rst:791
msgid "pathlib"
msgstr "pathlib"

#: ../../whatsnew/3.12.rst:793
msgid ""
"Add support for subclassing :class:`pathlib.PurePath` and :class:`pathlib."
"Path`, plus their Posix- and Windows-specific variants. Subclasses may "
"override the :meth:`pathlib.PurePath.with_segments` method to pass "
"information between path instances."
msgstr ""
"Adicionado suporte para subclasses de :class:`pathlib.PurePath` e :class:"
"`pathlib.Path`, além das suas variantes específicas para Posix e Windows. As "
"subclasses podem substituir o método :meth:`pathlib.PurePath.with_segments` "
"para passar informações entre instâncias de caminho."

#: ../../whatsnew/3.12.rst:798
msgid ""
"Add :meth:`pathlib.Path.walk` for walking the directory trees and generating "
"all file or directory names within them, similar to :func:`os.walk`. "
"(Contributed by Stanislav Zmiev in :gh:`90385`.)"
msgstr ""
"Adicionado o método :meth:`pathlib.Path.walk` para percorrer árvores de "
"diretórios e gerar todos os nomes de ficheiros ou diretórios nelas, "
"semelhante a :func:`os.walk`. (Contribuído por Stanislav Zmiev em :gh:"
"`90385`.)"

#: ../../whatsnew/3.12.rst:802
msgid ""
"Add *walk_up* optional parameter to :meth:`pathlib.PurePath.relative_to` to "
"allow the insertion of ``..`` entries in the result; this behavior is more "
"consistent with :func:`os.path.relpath`. (Contributed by Domenico Ragusa in :"
"gh:`84538`.)"
msgstr ""
"Adicionado o parâmetro opcional *walk_up* a :meth:`pathlib.PurePath."
"relative_to` para permitir a inserção de entradas ``..`` no resultado; este "
"comportamento é mais consistente com :func:`os.path.relpath`. (Contribuído "
"por Domenico Ragusa em :gh:`84538`.)"

#: ../../whatsnew/3.12.rst:807
msgid ""
"Add :meth:`pathlib.Path.is_junction` as a proxy to :func:`os.path."
"isjunction`. (Contributed by Charles Machalow in :gh:`99547`.)"
msgstr ""
"Adicionado o método :meth:`pathlib.Path.is_junction` como proxy para :func:"
"`os.path.isjunction`. (Contribuído por Charles Machalow em :gh:`99547`.)"

#: ../../whatsnew/3.12.rst:810
msgid ""
"Add *case_sensitive* optional parameter to :meth:`pathlib.Path.glob`, :meth:"
"`pathlib.Path.rglob` and :meth:`pathlib.PurePath.match` for matching the "
"path's case sensitivity, allowing for more precise control over the matching "
"process."
msgstr ""
"Adicionado o parâmetro opcional *case_sensitive* a :meth:`pathlib.Path."
"glob`, :meth:`pathlib.Path.rglob` e :meth:`pathlib.PurePath.match` para "
"corresponder à sensibilidade a maiúsculas/minúsculas do caminho, permitindo "
"um controlo mais preciso sobre o processo de correspondência."

#: ../../whatsnew/3.12.rst:815
msgid "platform"
msgstr "platform"

#: ../../whatsnew/3.12.rst:817
msgid ""
"Add support for detecting Windows 11 and Windows Server releases past 2012. "
"Previously, lookups on Windows Server platforms newer than Windows Server "
"2012 and on Windows 11 would return ``Windows-10``. (Contributed by Steve "
"Dower in :gh:`89545`.)"
msgstr ""
"Adicionado suporte para detetar o Windows 11 e versões do Windows Server "
"posteriores a 2012. Anteriormente, as pesquisas em plataformas Windows "
"Server mais recentes do que o Windows Server 2012 e no Windows 11 retornavam "
"``Windows-10``. (Contribuído por Steve Dower em :gh:`89545`.)"

#: ../../whatsnew/3.12.rst:823
msgid "pdb"
msgstr "pdb"

#: ../../whatsnew/3.12.rst:825
msgid ""
"Add convenience variables to hold values temporarily for debug session and "
"provide quick access to values like the current frame or the return value. "
"(Contributed by Tian Gao in :gh:`103693`.)"
msgstr ""
"Adicionadas variáveis de conveniência para guardar valores temporariamente "
"para sessões de depuração e fornecer acesso rápido a valores como o frame "
"atual ou o valor de retorno. (Contribuído por Tian Gao em :gh:`103693`.)"

#: ../../whatsnew/3.12.rst:831
msgid "random"
msgstr "random"

#: ../../whatsnew/3.12.rst:833
msgid ""
"Add :func:`random.binomialvariate`. (Contributed by Raymond Hettinger in :gh:"
"`81620`.)"
msgstr ""
"Adicionada a função :func:`random.binomialvariate`. (Contribuído por Raymond "
"Hettinger em :gh:`81620`.)"

#: ../../whatsnew/3.12.rst:836
msgid ""
"Add a default of ``lambd=1.0`` to :func:`random.expovariate`. (Contributed "
"by Raymond Hettinger in :gh:`100234`.)"
msgstr ""
"Adicionado um valor predefinido de ``lambd=1.0`` a :func:`random."
"expovariate`. (Contribuído por Raymond Hettinger em :gh:`100234`.)"

#: ../../whatsnew/3.12.rst:840
msgid "shutil"
msgstr "shutil"

#: ../../whatsnew/3.12.rst:842
msgid ""
":func:`shutil.make_archive` now passes the *root_dir* argument to custom "
"archivers which support it. In this case it no longer temporarily changes "
"the current working directory of the process to *root_dir* to perform "
"archiving. (Contributed by Serhiy Storchaka in :gh:`74696`.)"
msgstr ""
"A função :func:`shutil.make_archive` agora passa o argumento *root_dir* para "
"arquivadores personalizados que o suportam. Neste caso, já não altera "
"temporariamente o diretório de trabalho atual do processo para *root_dir* "
"para realizar o arquivamento. (Contribuído por Serhiy Storchaka em :gh:"
"`74696`.)"

#: ../../whatsnew/3.12.rst:848
msgid ""
":func:`shutil.rmtree` now accepts a new argument *onexc* which is an error "
"handler like *onerror* but which expects an exception instance rather than a "
"*(typ, val, tb)* triplet. *onerror* is deprecated. (Contributed by Irit "
"Katriel in :gh:`102828`.)"
msgstr ""
"A função :func:`shutil.rmtree` agora aceita um novo argumento *onexc*, que é "
"um manipulador de erros semelhante a *onerror*, mas que espera uma instância "
"de exceção em vez de um tripleto *(typ, val, tb)*. *onerror* está obsoleto. "
"(Contribuído por Irit Katriel em :gh:`102828`.)"

#: ../../whatsnew/3.12.rst:853
msgid ""
":func:`shutil.which` now consults the *PATHEXT* environment variable to find "
"matches within *PATH* on Windows even when the given *cmd* includes a "
"directory component. (Contributed by Charles Machalow in :gh:`103179`.)"
msgstr ""
"A função :func:`shutil.which` agora consulta a variável de ambiente "
"*PATHEXT* para encontrar correspondências dentro de *PATH* no Windows, mesmo "
"quando o *cmd* dado inclui um componente de diretório. (Contribuído por "
"Charles Machalow em :gh:`103179`.)"

#: ../../whatsnew/3.12.rst:858
msgid ""
":func:`shutil.which` will call ``NeedCurrentDirectoryForExePathW`` when "
"querying for executables on Windows to determine if the current working "
"directory should be prepended to the search path. (Contributed by Charles "
"Machalow in :gh:`103179`.)"
msgstr ""
"A função :func:`shutil.which` chamará ``NeedCurrentDirectoryForExePathW`` ao "
"consultar executáveis no Windows para determinar se o diretório de trabalho "
"atual deve ser adicionado ao início do caminho de pesquisa. (Contribuído por "
"Charles Machalow em :gh:`103179`.)"

#: ../../whatsnew/3.12.rst:863
msgid ""
":func:`shutil.which` will return a path matching the *cmd* with a component "
"from ``PATHEXT`` prior to a direct match elsewhere in the search path on "
"Windows. (Contributed by Charles Machalow in :gh:`103179`.)"
msgstr ""
"A função :func:`shutil.which` retornará um caminho correspondente ao *cmd* "
"com um componente de ``PATHEXT`` antes de uma correspondência direta noutro "
"local no caminho de pesquisa no Windows. (Contribuído por Charles Machalow "
"em :gh:`103179`.)"

#: ../../whatsnew/3.12.rst:869 ../../whatsnew/3.12.rst:1560
msgid "sqlite3"
msgstr "sqlite3"

#: ../../whatsnew/3.12.rst:871
msgid ""
"Add a :ref:`command-line interface <sqlite3-cli>`. (Contributed by Erlend E. "
"Aasland in :gh:`77617`.)"
msgstr ""
"Adicionada uma :ref:`interface de linha de comandos <sqlite3-cli>`. "
"(Contribuído por Erlend E. Aasland em :gh:`77617`.)"

#: ../../whatsnew/3.12.rst:874
msgid ""
"Add the :attr:`sqlite3.Connection.autocommit` attribute to :class:`sqlite3."
"Connection` and the *autocommit* parameter to :func:`sqlite3.connect` to "
"control :pep:`249`-compliant :ref:`transaction handling <sqlite3-transaction-"
"control-autocommit>`. (Contributed by Erlend E. Aasland in :gh:`83638`.)"
msgstr ""
"Adicionado o atributo :attr:`sqlite3.Connection.autocommit` a :class:"
"`sqlite3.Connection` e o parâmetro *autocommit* a :func:`sqlite3.connect` "
"para controlar o :pep:`249`-compliant :ref:`manuseamento de transações "
"<sqlite3-transaction-control-autocommit>`. (Contribuído por Erlend E. "
"Aasland em :gh:`83638`.)"

#: ../../whatsnew/3.12.rst:881
msgid ""
"Add *entrypoint* keyword-only parameter to :meth:`sqlite3.Connection."
"load_extension`, for overriding the SQLite extension entry point. "
"(Contributed by Erlend E. Aasland in :gh:`103015`.)"
msgstr ""
"Adicionado o parâmetro *entrypoint* apenas por palavra-chave a :meth:"
"`sqlite3.Connection.load_extension`, para substituir o ponto de entrada da "
"extensão SQLite. (Contribuído por Erlend E. Aasland em :gh:`103015`.)"

#: ../../whatsnew/3.12.rst:886
msgid ""
"Add :meth:`sqlite3.Connection.getconfig` and :meth:`sqlite3.Connection."
"setconfig` to :class:`sqlite3.Connection` to make configuration changes to a "
"database connection. (Contributed by Erlend E. Aasland in :gh:`103489`.)"
msgstr ""
"Adicionados os métodos :meth:`sqlite3.Connection.getconfig` e :meth:`sqlite3."
"Connection.setconfig` a :class:`sqlite3.Connection` para fazer alterações de "
"configuração a uma ligação de base de dados. (Contribuído por Erlend E. "
"Aasland em :gh:`103489`.)"

#: ../../whatsnew/3.12.rst:892
msgid "statistics"
msgstr "statistics"

#: ../../whatsnew/3.12.rst:894
msgid ""
"Extend :func:`statistics.correlation` to include as a ``ranked`` method for "
"computing the Spearman correlation of ranked data. (Contributed by Raymond "
"Hettinger in :gh:`95861`.)"
msgstr ""
"Estendida a função :func:`statistics.correlation` para incluir um método "
"``ranked`` para calcular a correlação de Spearman de dados classificados. "
"(Contribuído por Raymond Hettinger em :gh:`95861`.)"

#: ../../whatsnew/3.12.rst:899
msgid "sys"
msgstr "sys"

#: ../../whatsnew/3.12.rst:901
msgid ""
"Add the :mod:`sys.monitoring` namespace to expose the new :ref:`PEP 669 "
"<whatsnew312-pep669>` monitoring API. (Contributed by Mark Shannon in :gh:"
"`103082`.)"
msgstr ""
"Adicionado o espaço de nomes :mod:`sys.monitoring` para expor a nova API de "
"monitorização :ref:`PEP 669 <whatsnew312-pep669>`. (Contribuído por Mark "
"Shannon em :gh:`103082`.)"

#: ../../whatsnew/3.12.rst:905
msgid ""
"Add :func:`sys.activate_stack_trampoline` and :func:`sys."
"deactivate_stack_trampoline` for activating and deactivating stack profiler "
"trampolines, and :func:`sys.is_stack_trampoline_active` for querying if "
"stack profiler trampolines are active. (Contributed by Pablo Galindo and "
"Christian Heimes with contributions from Gregory P. Smith [Google] and Mark "
"Shannon in :gh:`96123`.)"
msgstr ""
"Adicionadas as funções :func:`sys.activate_stack_trampoline` e :func:`sys."
"deactivate_stack_trampoline` para ativar e desativar trampolins de "
"perfilador de stack, e :func:`sys.is_stack_trampoline_active` para consultar "
"se os trampolins de perfilador de stack estão ativos. (Contribuído por Pablo "
"Galindo e Christian Heimes com contribuições de Gregory P. Smith [Google] e "
"Mark Shannon em :gh:`96123`.)"

#: ../../whatsnew/3.12.rst:914
msgid ""
"Add :data:`sys.last_exc` which holds the last unhandled exception that was "
"raised (for post-mortem debugging use cases). Deprecate the three fields "
"that have the same information in its legacy form: :data:`sys.last_type`, :"
"data:`sys.last_value` and :data:`sys.last_traceback`. (Contributed by Irit "
"Katriel in :gh:`102778`.)"
msgstr ""
"Adicionado :data:`sys.last_exc`, que contém a última exceção não tratada que "
"foi levantada (para casos de uso de depuração post-mortem). Descontinuados "
"os três campos que têm a mesma informação na sua forma legada: :data:`sys."
"last_type`, :data:`sys.last_value` e :data:`sys.last_traceback`. "
"(Contribuído por Irit Katriel em :gh:`102778`.)"

#: ../../whatsnew/3.12.rst:920 ../../whatsnew/3.12.rst:1755
msgid ""
":func:`sys._current_exceptions` now returns a mapping from thread-id to an "
"exception instance, rather than to a ``(typ, exc, tb)`` tuple. (Contributed "
"by Irit Katriel in :gh:`103176`.)"
msgstr ""
"A função :func:`sys._current_exceptions` agora retorna um mapeamento de "
"thread-id para uma instância de exceção, em vez de para um tuplo ``(typ, "
"exc, tb)``. (Contribuído por Irit Katriel em :gh:`103176`.)"

#: ../../whatsnew/3.12.rst:924
msgid ""
":func:`sys.setrecursionlimit` and :func:`sys.getrecursionlimit`. The "
"recursion limit now applies only to Python code. Builtin functions do not "
"use the recursion limit, but are protected by a different mechanism that "
"prevents recursion from causing a virtual machine crash."
msgstr ""
"As funções :func:`sys.setrecursionlimit` e :func:`sys.getrecursionlimit`. O "
"limite de recursão agora aplica-se apenas ao código Python. As funções "
"integradas não usam o limite de recursão, mas estão protegidas por um "
"mecanismo diferente que impede que a recursão cause uma falha na máquina "
"virtual."

#: ../../whatsnew/3.12.rst:930
msgid "tempfile"
msgstr "tempfile"

#: ../../whatsnew/3.12.rst:932
msgid ""
"The :class:`tempfile.NamedTemporaryFile` function has a new optional "
"parameter *delete_on_close* (Contributed by Evgeny Zorin in :gh:`58451`.)"
msgstr ""
"A função :class:`tempfile.NamedTemporaryFile` tem um novo parâmetro opcional "
"*delete_on_close* (Contribuído por Evgeny Zorin em :gh:`58451`.)"

#: ../../whatsnew/3.12.rst:934
msgid ""
":func:`tempfile.mkdtemp` now always returns an absolute path, even if the "
"argument provided to the *dir* parameter is a relative path."
msgstr ""
"A função :func:`tempfile.mkdtemp` agora retorna sempre um caminho absoluto, "
"mesmo que o argumento fornecido ao parâmetro *dir* seja um caminho relativo."

#: ../../whatsnew/3.12.rst:938
msgid "threading"
msgstr "threading"

#: ../../whatsnew/3.12.rst:940
msgid ""
"Add :func:`threading.settrace_all_threads` and :func:`threading."
"setprofile_all_threads` that allow to set tracing and profiling functions in "
"all running threads in addition to the calling one. (Contributed by Pablo "
"Galindo in :gh:`93503`.)"
msgstr ""
"Adicionadas as funções :func:`threading.settrace_all_threads` e :func:"
"`threading.setprofile_all_threads` que permitem definir funções de rastreio "
"e perfilagem em todas as threads em execução, além da thread chamadora. "
"(Contribuído por Pablo Galindo em :gh:`93503`.)"

#: ../../whatsnew/3.12.rst:946
msgid "tkinter"
msgstr "tkinter"

#: ../../whatsnew/3.12.rst:948
msgid ""
"``tkinter.Canvas.coords()`` now flattens its arguments. It now accepts not "
"only coordinates as separate arguments (``x1, y1, x2, y2, ...``) and a "
"sequence of coordinates (``[x1, y1, x2, y2, ...]``), but also coordinates "
"grouped in pairs (``(x1, y1), (x2, y2), ...`` and ``[(x1, y1), (x2, "
"y2), ...]``), like ``create_*()`` methods. (Contributed by Serhiy Storchaka "
"in :gh:`94473`.)"
msgstr ""
"``tkinter.Canvas.coords()`` agora achata os seus argumentos. Agora aceita "
"não só coordenadas como argumentos separados (``x1, y1, x2, y2, ...``) e uma "
"sequência de coordenadas (``[x1, y1, x2, y2, ...]``), mas também coordenadas "
"agrupadas em pares (``(x1, y1), (x2, y2), ...`` e ``[(x1, y1), (x2, "
"y2), ...]``), como os métodos ``create_*()``. (Contribuído por Serhiy "
"Storchaka em :gh:`94473`.)"

#: ../../whatsnew/3.12.rst:957
msgid "tokenize"
msgstr "tokenize"

#: ../../whatsnew/3.12.rst:959
msgid ""
"The :mod:`tokenize` module includes the changes introduced in :pep:`701`. "
"(Contributed by Marta Gómez Macías and Pablo Galindo in :gh:`102856`.) See :"
"ref:`whatsnew312-porting-to-python312` for more information on the changes "
"to the :mod:`tokenize` module."
msgstr ""
"O módulo :mod:`tokenize` inclui as alterações introduzidas na :pep:`701`. "
"(Contribuído por Marta Gómez Macías e Pablo Galindo em :gh:`102856`.) "
"Consulte :ref:`whatsnew312-porting-to-python312` para mais informações sobre "
"as alterações no módulo :mod:`tokenize`."

#: ../../whatsnew/3.12.rst:965
msgid "types"
msgstr "types"

#: ../../whatsnew/3.12.rst:967
msgid ""
"Add :func:`types.get_original_bases` to allow for further introspection of :"
"ref:`user-defined-generics` when subclassed. (Contributed by James Hilton-"
"Balfe and Alex Waygood in :gh:`101827`.)"
msgstr ""
"Adicionada a função :func:`types.get_original_bases` para permitir uma "
"introspeção adicional de :ref:`user-defined-generics` quando "
"subclassificados. (Contribuído por James Hilton-Balfe e Alex Waygood em :gh:"
"`101827`.)"

#: ../../whatsnew/3.12.rst:974
msgid "typing"
msgstr "typing"

#: ../../whatsnew/3.12.rst:976
msgid ""
":func:`isinstance` checks against :func:`runtime-checkable protocols <typing."
"runtime_checkable>` now use :func:`inspect.getattr_static` rather than :func:"
"`hasattr` to lookup whether attributes exist. This means that descriptors "
"and :meth:`~object.__getattr__` methods are no longer unexpectedly evaluated "
"during ``isinstance()`` checks against runtime-checkable protocols. However, "
"it may also mean that some objects which used to be considered instances of "
"a runtime-checkable protocol may no longer be considered instances of that "
"protocol on Python 3.12+, and vice versa. Most users are unlikely to be "
"affected by this change. (Contributed by Alex Waygood in :gh:`102433`.)"
msgstr ""
"As verificações :func:`isinstance` contra :func:`protocolo verificáveis em "
"tempo de execução <typing.runtime_checkable>` agora usam :func:`inspect."
"getattr_static` em vez de :func:`hasattr` para verificar se os atributos "
"existem. Isto significa que os descritores e os métodos :meth:`~object."
"__getattr__` já não são avaliados inesperadamente durante as verificações "
"``isinstance()`` contra protocolos verificáveis em tempo de execução. No "
"entanto, também pode significar que alguns objetos que eram considerados "
"instâncias de um protocolo verificável em tempo de execução podem já não ser "
"considerados instâncias desse protocolo no Python 3.12+, e vice-versa. A "
"maioria dos utilizadores é improvável de ser afetada por esta alteração. "
"(Contribuído por Alex Waygood em :gh:`102433`.)"

#: ../../whatsnew/3.12.rst:987
msgid ""
"The members of a runtime-checkable protocol are now considered \"frozen\" at "
"runtime as soon as the class has been created. Monkey-patching attributes "
"onto a runtime-checkable protocol will still work, but will have no impact "
"on :func:`isinstance` checks comparing objects to the protocol. For example::"
msgstr ""
"Os membros de um protocolo verificável em tempo de execução são agora "
"considerados \"congelados\" em tempo de execução assim que a classe é "
"criada. O monkey-patching de atributos num protocolo verificável em tempo de "
"execução ainda funcionará, mas não terá impacto nas verificações :func:"
"`isinstance` que comparam objetos com o protocolo. Por exemplo::"

#: ../../whatsnew/3.12.rst:992
msgid ""
">>> from typing import Protocol, runtime_checkable\n"
">>> @runtime_checkable\n"
"... class HasX(Protocol):\n"
"...     x = 1\n"
"...\n"
">>> class Foo: ...\n"
"...\n"
">>> f = Foo()\n"
">>> isinstance(f, HasX)\n"
"False\n"
">>> f.x = 1\n"
">>> isinstance(f, HasX)\n"
"True\n"
">>> HasX.y = 2\n"
">>> isinstance(f, HasX)  # unchanged, even though HasX now also has a \"y\" "
"attribute\n"
"True"
msgstr ""
">>> from typing import Protocol, runtime_checkable\n"
">>> @runtime_checkable\n"
"... class HasX(Protocol):\n"
"...     x = 1\n"
"...\n"
">>> class Foo: ...\n"
"...\n"
">>> f = Foo()\n"
">>> isinstance(f, HasX)\n"
"False\n"
">>> f.x = 1\n"
">>> isinstance(f, HasX)\n"
"True\n"
">>> HasX.y = 2\n"
">>> isinstance(f, HasX)  # inalterado, mesmo que HasX agora também tenha um "
"atributo \"y\"\n"
"True"

#: ../../whatsnew/3.12.rst:1009
msgid ""
"This change was made in order to speed up ``isinstance()`` checks against "
"runtime-checkable protocols."
msgstr ""
"Esta alteração foi feita para acelerar as verificações ``isinstance()`` "
"contra protocolos verificáveis em tempo de execução."

#: ../../whatsnew/3.12.rst:1012
msgid ""
"The performance profile of :func:`isinstance` checks against :func:`runtime-"
"checkable protocols <typing.runtime_checkable>` has changed significantly. "
"Most ``isinstance()`` checks against protocols with only a few members "
"should be at least 2x faster than in 3.11, and some may be 20x faster or "
"more. However, ``isinstance()`` checks against protocols with many members "
"may be slower than in Python 3.11. (Contributed by Alex Waygood in :gh:"
"`74690` and :gh:`103193`.)"
msgstr ""
"O perfil de desempenho das verificações :func:`isinstance` contra :func:"
"`protocolo verificáveis em tempo de execução <typing.runtime_checkable>` "
"mudou significativamente. A maioria das verificações ``isinstance()`` contra "
"protocolos com poucos membros deve ser pelo menos 2x mais rápida do que no "
"3.11, e algumas podem ser 20x mais rápidas ou mais. No entanto, as "
"verificações ``isinstance()`` contra protocolos com muitos membros podem ser "
"mais lentas do que no Python 3.11. (Contribuído por Alex Waygood em :gh:"
"`74690` e :gh:`103193`.)"

#: ../../whatsnew/3.12.rst:1020
msgid ""
"All :data:`typing.TypedDict` and :data:`typing.NamedTuple` classes now have "
"the ``__orig_bases__`` attribute. (Contributed by Adrian Garcia Badaracco "
"in :gh:`103699`.)"
msgstr ""
"Todas as classes :data:`typing.TypedDict` e :data:`typing.NamedTuple` agora "
"têm o atributo ``__orig_bases__``. (Contribuído por Adrian Garcia Badaracco "
"em :gh:`103699`.)"

#: ../../whatsnew/3.12.rst:1024
msgid ""
"Add ``frozen_default`` parameter to :func:`typing.dataclass_transform`. "
"(Contributed by Erik De Bonte in :gh:`99957`.)"
msgstr ""
"Adicionado o parâmetro ``frozen_default`` a :func:`typing."
"dataclass_transform`. (Contribuído por Erik De Bonte em :gh:`99957`.)"

#: ../../whatsnew/3.12.rst:1028
msgid "unicodedata"
msgstr "unicodedata"

#: ../../whatsnew/3.12.rst:1030
msgid ""
"The Unicode database has been updated to version 15.0.0. (Contributed by "
"Benjamin Peterson in :gh:`96734`)."
msgstr ""
"A base de dados Unicode foi atualizada para a versão 15.0.0. (Contribuído "
"por Benjamin Peterson em :gh:`96734`.)"

#: ../../whatsnew/3.12.rst:1034 ../../whatsnew/3.12.rst:1600
msgid "unittest"
msgstr "unittest"

#: ../../whatsnew/3.12.rst:1036
msgid ""
"Add a ``--durations`` command line option, showing the N slowest test cases::"
msgstr ""
"Adicionada a opção de linha de comandos ``--durations``, mostrando os N "
"casos de teste mais lentos::"

#: ../../whatsnew/3.12.rst:1038
msgid ""
"python3 -m unittest --durations=3 lib.tests.test_threading\n"
".....\n"
"Slowest test durations\n"
"----------------------------------------------------------------------\n"
"1.210s     test_timeout (Lib.test.test_threading.BarrierTests)\n"
"1.003s     test_default_timeout (Lib.test.test_threading.BarrierTests)\n"
"0.518s     test_timeout (Lib.test.test_threading.EventTests)\n"
"\n"
"(0.000 durations hidden.  Use -v to show these durations.)\n"
"----------------------------------------------------------------------\n"
"Ran 158 tests in 9.869s\n"
"\n"
"OK (skipped=3)"
msgstr ""
"python3 -m unittest --durations=3 lib.tests.test_threading\n"
".....\n"
"Durações dos testes mais lentos\n"
"----------------------------------------------------------------------\n"
"1.210s     test_timeout (Lib.test.test_threading.BarrierTests)\n"
"1.003s     test_default_timeout (Lib.test.test_threading.BarrierTests)\n"
"0.518s     test_timeout (Lib.test.test_threading.EventTests)\n"
"\n"
"(0.000 durações ocultas. Use -v para mostrar estas durações.)\n"
"----------------------------------------------------------------------\n"
"Executados 158 testes em 9.869s\n"
"\n"
"OK (ignorados=3)"

#: ../../whatsnew/3.12.rst:1052
msgid "(Contributed by Giampaolo Rodola in :gh:`48330`)"
msgstr "(Contribuído por Giampaolo Rodola em :gh:`48330`)"

#: ../../whatsnew/3.12.rst:1055
msgid "uuid"
msgstr "uuid"

#: ../../whatsnew/3.12.rst:1057
msgid ""
"Add a :ref:`command-line interface <uuid-cli>`. (Contributed by Adam Chhina "
"in :gh:`88597`.)"
msgstr ""
"Adicionada uma :ref:`interface de linha de comandos <uuid-cli>`. "
"(Contribuído por Adam Chhina em :gh:`88597`.)"

#: ../../whatsnew/3.12.rst:1062
msgid "Optimizations"
msgstr "Otimizações"

#: ../../whatsnew/3.12.rst:1064
msgid ""
"Remove ``wstr`` and ``wstr_length`` members from Unicode objects. It reduces "
"object size by 8 or 16 bytes on 64bit platform. (:pep:`623`) (Contributed by "
"Inada Naoki in :gh:`92536`.)"
msgstr ""
"Remover os membros ``wstr`` e ``wstr_length`` dos objetos Unicode. Isto "
"reduz o tamanho do objeto em 8 ou 16 bytes em plataformas de 64 bits. (:pep:"
"`623`) (Contribuído por Inada Naoki em :gh:`92536`.)"

#: ../../whatsnew/3.12.rst:1068
msgid ""
"Add experimental support for using the BOLT binary optimizer in the build "
"process, which improves performance by 1-5%. (Contributed by Kevin "
"Modzelewski in :gh:`90536` and tuned by Donghee Na in :gh:`101525`)"
msgstr ""
"Adicionado suporte experimental para o uso do otimizador binário BOLT no "
"processo de construção, o que melhora o desempenho em 1-5%. (Contribuído por "
"Kevin Modzelewski em :gh:`90536` e ajustado por Donghee Na em :gh:`101525`)"

#: ../../whatsnew/3.12.rst:1072
msgid ""
"Speed up the regular expression substitution (functions :func:`re.sub` and :"
"func:`re.subn` and corresponding :class:`!re.Pattern` methods) for "
"replacement strings containing group references by 2--3 times. (Contributed "
"by Serhiy Storchaka in :gh:`91524`.)"
msgstr ""
"Acelerar a substituição de expressões regulares (funções :func:`re.sub` e :"
"func:`re.subn` e métodos correspondentes de :class:`!re.Pattern`) para "
"strings de substituição que contêm referências a grupos em 2--3 vezes. "
"(Contribuído por Serhiy Storchaka em :gh:`91524`.)"

#: ../../whatsnew/3.12.rst:1077
msgid ""
"Speed up :class:`asyncio.Task` creation by deferring expensive string "
"formatting. (Contributed by Itamar Oren in :gh:`103793`.)"
msgstr ""
"Acelerar a criação de :class:`asyncio.Task` adiantando a formatação de "
"strings dispendiosa. (Contribuído por Itamar Oren em :gh:`103793`.)"

#: ../../whatsnew/3.12.rst:1080
msgid ""
"The :func:`tokenize.tokenize` and :func:`tokenize.generate_tokens` functions "
"are up to 64% faster as a side effect of the changes required to cover :pep:"
"`701` in the :mod:`tokenize` module. (Contributed by Marta Gómez Macías and "
"Pablo Galindo in :gh:`102856`.)"
msgstr ""
"As funções :func:`tokenize.tokenize` e :func:`tokenize.generate_tokens` são "
"até 64% mais rápidas como efeito colateral das alterações necessárias para "
"cobrir a :pep:`701` no módulo :mod:`tokenize`. (Contribuído por Marta Gómez "
"Macías e Pablo Galindo em :gh:`102856`.)"

#: ../../whatsnew/3.12.rst:1085
msgid ""
"Speed up :func:`super` method calls and attribute loads via the new :opcode:"
"`LOAD_SUPER_ATTR` instruction. (Contributed by Carl Meyer and Vladimir "
"Matveev in :gh:`103497`.)"
msgstr ""
"Acelerar chamadas de métodos :func:`super` e carregamentos de atributos "
"através da nova instrução :opcode:`LOAD_SUPER_ATTR`. (Contribuído por Carl "
"Meyer e Vladimir Matveev em :gh:`103497`.)"

#: ../../whatsnew/3.12.rst:1091
msgid "CPython bytecode changes"
msgstr "Alterações no bytecode do CPython"

#: ../../whatsnew/3.12.rst:1093
msgid ""
"Remove the :opcode:`!LOAD_METHOD` instruction. It has been merged into :"
"opcode:`LOAD_ATTR`. :opcode:`LOAD_ATTR` will now behave like the old :opcode:"
"`!LOAD_METHOD` instruction if the low bit of its oparg is set. (Contributed "
"by Ken Jin in :gh:`93429`.)"
msgstr ""
"Remover a instrução :opcode:`!LOAD_METHOD`. Foi fundida na instrução :opcode:"
"`LOAD_ATTR`. :opcode:`LOAD_ATTR` agora comportar-se-á como a antiga "
"instrução :opcode:`!LOAD_METHOD` se o bit baixo do seu oparg estiver "
"definido. (Contribuído por Ken Jin em :gh:`93429`.)"

#: ../../whatsnew/3.12.rst:1098
msgid ""
"Remove the :opcode:`!JUMP_IF_FALSE_OR_POP` and :opcode:`!"
"JUMP_IF_TRUE_OR_POP` instructions. (Contributed by Irit Katriel in :gh:"
"`102859`.)"
msgstr ""
"Remover as instruções :opcode:`!JUMP_IF_FALSE_OR_POP` e :opcode:`!"
"JUMP_IF_TRUE_OR_POP`. (Contribuído por Irit Katriel em :gh:`102859`.)"

#: ../../whatsnew/3.12.rst:1101
msgid ""
"Remove the :opcode:`!PRECALL` instruction. (Contributed by Mark Shannon in :"
"gh:`92925`.)"
msgstr ""
"Remover a instrução :opcode:`!PRECALL`. (Contribuído por Mark Shannon em :gh:"
"`92925`.)"

#: ../../whatsnew/3.12.rst:1104
msgid ""
"Add the :opcode:`BINARY_SLICE` and :opcode:`STORE_SLICE` instructions. "
"(Contributed by Mark Shannon in :gh:`94163`.)"
msgstr ""
"Adicionadas as instruções :opcode:`BINARY_SLICE` e :opcode:`STORE_SLICE`. "
"(Contribuído por Mark Shannon em :gh:`94163`.)"

#: ../../whatsnew/3.12.rst:1107
msgid ""
"Add the :opcode:`CALL_INTRINSIC_1` instructions. (Contributed by Mark "
"Shannon in :gh:`99005`.)"
msgstr ""
"Adicionadas as instruções :opcode:`CALL_INTRINSIC_1`. (Contribuído por Mark "
"Shannon em :gh:`99005`.)"

#: ../../whatsnew/3.12.rst:1110
msgid ""
"Add the :opcode:`CALL_INTRINSIC_2` instruction. (Contributed by Irit Katriel "
"in :gh:`101799`.)"
msgstr ""
"Adicionada a instrução :opcode:`CALL_INTRINSIC_2`. (Contribuído por Irit "
"Katriel em :gh:`101799`.)"

#: ../../whatsnew/3.12.rst:1113
msgid ""
"Add the :opcode:`CLEANUP_THROW` instruction. (Contributed by Brandt Bucher "
"in :gh:`90997`.)"
msgstr ""
"Adicionada a instrução :opcode:`CLEANUP_THROW`. (Contribuído por Brandt "
"Bucher em :gh:`90997`.)"

#: ../../whatsnew/3.12.rst:1116
msgid ""
"Add the :opcode:`!END_SEND` instruction. (Contributed by Mark Shannon in :gh:"
"`103082`.)"
msgstr ""
"Adicionada a instrução :opcode:`!END_SEND`. (Contribuído por Mark Shannon "
"em :gh:`103082`.)"

#: ../../whatsnew/3.12.rst:1119
msgid ""
"Add the :opcode:`LOAD_FAST_AND_CLEAR` instruction as part of the "
"implementation of :pep:`709`. (Contributed by Carl Meyer in :gh:`101441`.)"
msgstr ""
"Adicionada a instrução :opcode:`LOAD_FAST_AND_CLEAR` como parte da "
"implementação da :pep:`709`. (Contribuído por Carl Meyer em :gh:`101441`.)"

#: ../../whatsnew/3.12.rst:1122
msgid ""
"Add the :opcode:`LOAD_FAST_CHECK` instruction. (Contributed by Dennis "
"Sweeney in :gh:`93143`.)"
msgstr ""
"Adicionada a instrução :opcode:`LOAD_FAST_CHECK`. (Contribuído por Dennis "
"Sweeney em :gh:`93143`.)"

#: ../../whatsnew/3.12.rst:1125
msgid ""
"Add the :opcode:`LOAD_FROM_DICT_OR_DEREF`, :opcode:"
"`LOAD_FROM_DICT_OR_GLOBALS`, and :opcode:`LOAD_LOCALS` opcodes as part of "
"the implementation of :pep:`695`. Remove the :opcode:`!LOAD_CLASSDEREF` "
"opcode, which can be replaced with :opcode:`LOAD_LOCALS` plus :opcode:"
"`LOAD_FROM_DICT_OR_DEREF`. (Contributed by Jelle Zijlstra in :gh:`103764`.)"
msgstr ""
"Adicionados os opcodes :opcode:`LOAD_FROM_DICT_OR_DEREF`, :opcode:"
"`LOAD_FROM_DICT_OR_GLOBALS` e :opcode:`LOAD_LOCALS` como parte da "
"implementação da :pep:`695`. Removido o opcode :opcode:`!LOAD_CLASSDEREF`, "
"que pode ser substituído por :opcode:`LOAD_LOCALS` mais :opcode:"
"`LOAD_FROM_DICT_OR_DEREF`. (Contribuído por Jelle Zijlstra em :gh:`103764`.)"

#: ../../whatsnew/3.12.rst:1131
msgid ""
"Add the :opcode:`LOAD_SUPER_ATTR` instruction. (Contributed by Carl Meyer "
"and Vladimir Matveev in :gh:`103497`.)"
msgstr ""
"Adicionada a instrução :opcode:`LOAD_SUPER_ATTR`. (Contribuído por Carl "
"Meyer e Vladimir Matveev em :gh:`103497`.)"

#: ../../whatsnew/3.12.rst:1134
msgid ""
"Add the ``RETURN_CONST`` instruction. (Contributed by Wenyang Wang in :gh:"
"`101632`.)"
msgstr ""
"Adicionada a instrução ``RETURN_CONST``. (Contribuído por Wenyang Wang em :"
"gh:`101632`.)"

#: ../../whatsnew/3.12.rst:1137
msgid "Demos and Tools"
msgstr "Demos e Ferramentas"

#: ../../whatsnew/3.12.rst:1139
msgid ""
"Remove the ``Tools/demo/`` directory which contained old demo scripts. A "
"copy can be found in the `old-demos project <https://github.com/gvanrossum/"
"old-demos>`_. (Contributed by Victor Stinner in :gh:`97681`.)"
msgstr ""
"Remover o diretório ``Tools/demo/`` que continha scripts de demonstração "
"antigos. Uma cópia pode ser encontrada no `projeto old-demos <https://github."
"com/gvanrossum/old-demos>`_. (Contribuído por Victor Stinner em :gh:`97681`.)"

#: ../../whatsnew/3.12.rst:1144
msgid ""
"Remove outdated example scripts of the ``Tools/scripts/`` directory. A copy "
"can be found in the `old-demos project <https://github.com/gvanrossum/old-"
"demos>`_. (Contributed by Victor Stinner in :gh:`97669`.)"
msgstr ""
"Remover scripts de exemplo desatualizados do diretório ``Tools/scripts/``. "
"Uma cópia pode ser encontrada no `projeto old-demos <https://github.com/"
"gvanrossum/old-demos>`_. (Contribuído por Victor Stinner em :gh:`97669`.)"

#: ../../whatsnew/3.12.rst:1151 ../../whatsnew/3.12.rst:2158
msgid "Deprecated"
msgstr "Obsoleto"

#: ../../whatsnew/3.12.rst:1153
#: ../../deprecations/pending-removal-in-3.14.rst:4
msgid ""
":mod:`argparse`: The *type*, *choices*, and *metavar* parameters of :class:`!"
"argparse.BooleanOptionalAction` are deprecated and will be removed in 3.14. "
"(Contributed by Nikita Sobolev in :gh:`92248`.)"
msgstr ""
":mod:`argparse`: Os parâmetros *type*, *choices* e *metavar* de :class:`!"
"argparse.BooleanOptionalAction` estão obsoletos e serão removidos no 3.14. "
"(Contribuído por Nikita Sobolev em :gh:`92248`.)"

#: ../../whatsnew/3.12.rst:1158
msgid ""
":mod:`ast`: The following :mod:`ast` features have been deprecated in "
"documentation since Python 3.8, now cause a :exc:`DeprecationWarning` to be "
"emitted at runtime when they are accessed or used, and will be removed in "
"Python 3.14:"
msgstr ""
":mod:`ast`: As seguintes funcionalidades do :mod:`ast` estão obsoletas na "
"documentação desde o Python 3.8, agora emitem um :exc:`DeprecationWarning` "
"em tempo de execução quando são acedidas ou usadas, e serão removidas no "
"Python 3.14:"

#: ../../whatsnew/3.12.rst:1162
#: ../../deprecations/pending-removal-in-3.14.rst:13
msgid ":class:`!ast.Num`"
msgstr ":class:`!ast.Num`"

#: ../../whatsnew/3.12.rst:1163
#: ../../deprecations/pending-removal-in-3.14.rst:14
msgid ":class:`!ast.Str`"
msgstr ":class:`!ast.Str`"

#: ../../whatsnew/3.12.rst:1164
#: ../../deprecations/pending-removal-in-3.14.rst:15
msgid ":class:`!ast.Bytes`"
msgstr ":class:`!ast.Bytes`"

#: ../../whatsnew/3.12.rst:1165
#: ../../deprecations/pending-removal-in-3.14.rst:16
msgid ":class:`!ast.NameConstant`"
msgstr ":class:`!ast.NameConstant`"

#: ../../whatsnew/3.12.rst:1166
#: ../../deprecations/pending-removal-in-3.14.rst:17
msgid ":class:`!ast.Ellipsis`"
msgstr ":class:`!ast.Ellipsis`"

#: ../../whatsnew/3.12.rst:1168
#: ../../deprecations/pending-removal-in-3.14.rst:19
msgid ""
"Use :class:`ast.Constant` instead. (Contributed by Serhiy Storchaka in :gh:"
"`90953`.)"
msgstr ""
"Use :class:`ast.Constant` em vez disso. (Contribuído por Serhiy Storchaka "
"em :gh:`90953`.)"

#: ../../whatsnew/3.12.rst:1171
#: ../../deprecations/pending-removal-in-3.14.rst:22
#: ../../deprecations/pending-removal-in-3.16.rst:19
msgid ":mod:`asyncio`:"
msgstr ":mod:`asyncio`:"

#: ../../whatsnew/3.12.rst:1173
#: ../../deprecations/pending-removal-in-3.14.rst:24
msgid ""
"The child watcher classes :class:`!asyncio.MultiLoopChildWatcher`, :class:`!"
"asyncio.FastChildWatcher`, :class:`!asyncio.AbstractChildWatcher` and :class:"
"`!asyncio.SafeChildWatcher` are deprecated and will be removed in Python "
"3.14. (Contributed by Kumar Aditya in :gh:`94597`.)"
msgstr ""
"As classes de child watcher :class:`!asyncio.MultiLoopChildWatcher`, :class:"
"`!asyncio.FastChildWatcher`, :class:`!asyncio.AbstractChildWatcher` e :class:"
"`!asyncio.SafeChildWatcher` estão obsoletas e serão removidas no Python "
"3.14. (Contribuído por Kumar Aditya em :gh:`94597`.)"

#: ../../whatsnew/3.12.rst:1179
#: ../../deprecations/pending-removal-in-3.14.rst:30
msgid ""
":func:`!asyncio.set_child_watcher`, :func:`!asyncio.get_child_watcher`, :"
"meth:`!asyncio.AbstractEventLoopPolicy.set_child_watcher` and :meth:`!"
"asyncio.AbstractEventLoopPolicy.get_child_watcher` are deprecated and will "
"be removed in Python 3.14. (Contributed by Kumar Aditya in :gh:`94597`.)"
msgstr ""
"As funções :func:`!asyncio.set_child_watcher`, :func:`!asyncio."
"get_child_watcher`, :meth:`!asyncio.AbstractEventLoopPolicy."
"set_child_watcher` e :meth:`!asyncio.AbstractEventLoopPolicy."
"get_child_watcher` estão obsoletas e serão removidas no Python 3.14. "
"(Contribuído por Kumar Aditya em :gh:`94597`.)"

#: ../../whatsnew/3.12.rst:1185
#: ../../deprecations/pending-removal-in-3.14.rst:36
msgid ""
"The :meth:`~asyncio.get_event_loop` method of the default event loop policy "
"now emits a :exc:`DeprecationWarning` if there is no current event loop set "
"and it decides to create one. (Contributed by Serhiy Storchaka and Guido van "
"Rossum in :gh:`100160`.)"
msgstr ""
"O método :meth:`~asyncio.get_event_loop` da política de loop de eventos "
"predefinida agora emite um :exc:`DeprecationWarning` se não houver um loop "
"de eventos atual definido e decidir criar um. (Contribuído por Serhiy "
"Storchaka e Guido van Rossum em :gh:`100160`.)"

#: ../../whatsnew/3.12.rst:1190
#: ../../deprecations/pending-removal-in-future.rst:44
msgid ""
":mod:`calendar`: ``calendar.January`` and ``calendar.February`` constants "
"are deprecated and replaced by :data:`calendar.JANUARY` and :data:`calendar."
"FEBRUARY`. (Contributed by Prince Roshan in :gh:`103636`.)"
msgstr ""
":mod:`calendar`: As constantes ``calendar.January`` e ``calendar.February`` "
"estão obsoletas e foram substituídas por :data:`calendar.JANUARY` e :data:"
"`calendar.FEBRUARY`. (Contribuído por Prince Roshan em :gh:`103636`.)"

#: ../../whatsnew/3.12.rst:1194
msgid ":mod:`collections.abc`: Deprecated :class:`collections.abc.ByteString`."
msgstr ""
":mod:`collections.abc`: :class:`collections.abc.ByteString` está obsoleto."

#: ../../whatsnew/3.12.rst:1196
#: ../../deprecations/pending-removal-in-3.17.rst:8
#: ../../deprecations/pending-removal-in-3.17.rst:36
msgid ""
"Use ``isinstance(obj, collections.abc.Buffer)`` to test if ``obj`` "
"implements the :ref:`buffer protocol <bufferobjects>` at runtime. For use in "
"type annotations, either use :class:`~collections.abc.Buffer` or a union "
"that explicitly specifies the types your code supports (e.g., ``bytes | "
"bytearray | memoryview``)."
msgstr ""
"Use ``isinstance(obj, collections.abc.Buffer)`` para testar se ``obj`` "
"implementa o :ref:`protocolo de buffer <bufferobjects>` em tempo de "
"execução. Para uso em anotações de tipo, use :class:`~collections.abc."
"Buffer` ou uma união que especifique explicitamente os tipos que o seu "
"código suporta (por exemplo, ``bytes | bytearray | memoryview``)."

#: ../../whatsnew/3.12.rst:1202
#: ../../deprecations/pending-removal-in-3.17.rst:14
#: ../../deprecations/pending-removal-in-3.17.rst:42
msgid ""
":class:`!ByteString` was originally intended to be an abstract class that "
"would serve as a supertype of both :class:`bytes` and :class:`bytearray`. "
"However, since the ABC never had any methods, knowing that an object was an "
"instance of :class:`!ByteString` never actually told you anything useful "
"about the object. Other common buffer types such as :class:`memoryview` were "
"also never understood as subtypes of :class:`!ByteString` (either at runtime "
"or by static type checkers)."
msgstr ""
":class:`!ByteString` foi originalmente concebida para ser uma classe "
"abstrata que serviria como supertipo de :class:`bytes` e :class:`bytearray`. "
"No entanto, uma vez que a ABC nunca teve quaisquer métodos, saber que um "
"objeto era uma instância de :class:`!ByteString` nunca lhe dizia nada de "
"útil sobre o objeto. Outros tipos comuns de buffer, como :class:"
"`memoryview`, também nunca foram compreendidos como subtipos de :class:`!"
"ByteString` (nem em tempo de execução nem por verificadores de tipo "
"estáticos)."

#: ../../whatsnew/3.12.rst:1210
#: ../../deprecations/pending-removal-in-3.17.rst:22
#: ../../deprecations/pending-removal-in-3.17.rst:50
msgid ""
"See :pep:`PEP 688 <688#current-options>` for more details. (Contributed by "
"Shantanu Jain in :gh:`91896`.)"
msgstr ""
"Consulte :pep:`PEP 688 <688#current-options>` para mais detalhes. "
"(Contribuído por Shantanu Jain em :gh:`91896`.)"

#: ../../whatsnew/3.12.rst:1213
msgid ""
":mod:`datetime`: :class:`datetime.datetime`'s :meth:`~datetime.datetime."
"utcnow` and :meth:`~datetime.datetime.utcfromtimestamp` are deprecated and "
"will be removed in a future version. Instead, use timezone-aware objects to "
"represent datetimes in UTC: respectively, call :meth:`~datetime.datetime."
"now` and :meth:`~datetime.datetime.fromtimestamp`  with the *tz* parameter "
"set to :const:`datetime.UTC`. (Contributed by Paul Ganssle in :gh:`103857`.)"
msgstr ""
":mod:`datetime`: Os métodos :meth:`~datetime.datetime.utcnow` e :meth:"
"`~datetime.datetime.utcfromtimestamp` de :class:`datetime.datetime` estão "
"obsoletos e serão removidos numa versão futura. Em vez disso, use objetos "
"com consciência de fuso horário para representar datas/horas em UTC: "
"respetivamente, chame :meth:`~datetime.datetime.now` e :meth:`~datetime."
"datetime.fromtimestamp` com o parâmetro *tz* definido para :const:`datetime."
"UTC`. (Contribuído por Paul Ganssle em :gh:`103857`.)"

#: ../../whatsnew/3.12.rst:1221
msgid ""
":mod:`email`: Deprecate the *isdst* parameter in :func:`email.utils."
"localtime`. (Contributed by Alan Williams in :gh:`72346`.)"
msgstr ""
":mod:`email`: O parâmetro *isdst* em :func:`email.utils.localtime` está "
"obsoleto. (Contribuído por Alan Williams em :gh:`72346`.)"

#: ../../whatsnew/3.12.rst:1224
msgid ""
":mod:`importlib.abc`: Deprecated the following classes, scheduled for "
"removal in Python 3.14:"
msgstr ""
":mod:`importlib.abc`: As seguintes classes estão obsoletas, com remoção "
"prevista para o Python 3.14:"

#: ../../whatsnew/3.12.rst:1227
#: ../../deprecations/pending-removal-in-3.14.rst:46
msgid ":class:`!importlib.abc.ResourceReader`"
msgstr ":class:`!importlib.abc.ResourceReader`"

#: ../../whatsnew/3.12.rst:1228
#: ../../deprecations/pending-removal-in-3.14.rst:47
msgid ":class:`!importlib.abc.Traversable`"
msgstr ":class:`!importlib.abc.Traversable`"

#: ../../whatsnew/3.12.rst:1229
#: ../../deprecations/pending-removal-in-3.14.rst:48
msgid ":class:`!importlib.abc.TraversableResources`"
msgstr ":class:`!importlib.abc.TraversableResources`"

#: ../../whatsnew/3.12.rst:1231
#: ../../deprecations/pending-removal-in-3.14.rst:50
msgid "Use :mod:`importlib.resources.abc` classes instead:"
msgstr "Use as classes :mod:`importlib.resources.abc` em vez disso:"

#: ../../whatsnew/3.12.rst:1233
#: ../../deprecations/pending-removal-in-3.14.rst:52
msgid ":class:`importlib.resources.abc.Traversable`"
msgstr ":class:`importlib.resources.abc.Traversable`"

#: ../../whatsnew/3.12.rst:1234
#: ../../deprecations/pending-removal-in-3.14.rst:53
msgid ":class:`importlib.resources.abc.TraversableResources`"
msgstr ":class:`importlib.resources.abc.TraversableResources`"

#: ../../whatsnew/3.12.rst:1236
#: ../../deprecations/pending-removal-in-3.14.rst:55
msgid "(Contributed by Jason R. Coombs and Hugo van Kemenade in :gh:`93963`.)"
msgstr "(Contribuído por Jason R. Coombs e Hugo van Kemenade em :gh:`93963`.)"

#: ../../whatsnew/3.12.rst:1238
msgid ""
":mod:`itertools`: Deprecate the support for copy, deepcopy, and pickle "
"operations, which is undocumented, inefficient, historically buggy, and "
"inconsistent. This will be removed in 3.14 for a significant reduction in "
"code volume and maintenance burden. (Contributed by Raymond Hettinger in :gh:"
"`101588`.)"
msgstr ""
":mod:`itertools`: O suporte para operações de cópia, deepcopy e pickle está "
"obsoleto, uma vez que é indocumentado, ineficiente, historicamente "
"problemático e inconsistente. Isto será removido no 3.14 para uma redução "
"significativa no volume de código e na carga de manutenção. (Contribuído por "
"Raymond Hettinger em :gh:`101588`.)"

#: ../../whatsnew/3.12.rst:1244
msgid ""
":mod:`multiprocessing`: In Python 3.14, the default :mod:`multiprocessing` "
"start method will change to a safer one on Linux, BSDs, and other non-macOS "
"POSIX platforms where ``'fork'`` is currently the default (:gh:`84559`). "
"Adding a runtime warning about this was deemed too disruptive as the "
"majority of code is not expected to care. Use the :func:`~multiprocessing."
"get_context` or :func:`~multiprocessing.set_start_method` APIs to explicitly "
"specify when your code *requires* ``'fork'``.  See :ref:`contexts and start "
"methods <multiprocessing-start-methods>`."
msgstr ""
":mod:`multiprocessing`: No Python 3.14, o método de início predefinido do :"
"mod:`multiprocessing` mudará para um mais seguro no Linux, BSDs e outras "
"plataformas POSIX não-macOS onde ``'fork'`` é atualmente o predefinido (:gh:"
"`84559`). A adição de um aviso em tempo de execução sobre isto foi "
"considerada demasiado perturbadora, uma vez que a maioria do código não é "
"esperado que se importe. Use as APIs :func:`~multiprocessing.get_context` "
"ou :func:`~multiprocessing.set_start_method` para especificar explicitamente "
"quando o seu código *requer* ``'fork'``. Consulte :ref:`contextos e métodos "
"de início <multiprocessing-start-methods>`."

#: ../../whatsnew/3.12.rst:1254
msgid ""
":mod:`pkgutil`: :func:`!pkgutil.find_loader` and :func:`!pkgutil.get_loader` "
"are deprecated and will be removed in Python 3.14; use :func:`importlib.util."
"find_spec` instead. (Contributed by Nikita Sobolev in :gh:`97850`.)"
msgstr ""
":mod:`pkgutil`: As funções :func:`!pkgutil.find_loader` e :func:`!pkgutil."
"get_loader` estão obsoletas e serão removidas no Python 3.14; use :func:"
"`importlib.util.find_spec` em vez disso. (Contribuído por Nikita Sobolev em :"
"gh:`97850`.)"

#: ../../whatsnew/3.12.rst:1259
msgid ""
":mod:`pty`: The module has two undocumented ``master_open()`` and "
"``slave_open()`` functions that have been deprecated since Python 2 but only "
"gained a proper :exc:`DeprecationWarning` in 3.12. Remove them in 3.14. "
"(Contributed by Soumendra Ganguly and Gregory P. Smith in :gh:`85984`.)"
msgstr ""
":mod:`pty`: O módulo tem duas funções indocumentadas ``master_open()`` e "
"``slave_open()`` que estão obsoletas desde o Python 2, mas só ganharam um :"
"exc:`DeprecationWarning` adequado no 3.12. Remova-as no 3.14. (Contribuído "
"por Soumendra Ganguly e Gregory P. Smith em :gh:`85984`.)"

#: ../../whatsnew/3.12.rst:1264
msgid ":mod:`os`:"
msgstr ":mod:`os`:"

#: ../../whatsnew/3.12.rst:1266
msgid ""
"The ``st_ctime`` fields return by :func:`os.stat` and :func:`os.lstat` on "
"Windows are deprecated. In a future release, they will contain the last "
"metadata change time, consistent with other platforms. For now, they still "
"contain the creation time, which is also available in the new "
"``st_birthtime`` field. (Contributed by Steve Dower in :gh:`99726`.)"
msgstr ""
"Os campos ``st_ctime`` retornados por :func:`os.stat` e :func:`os.lstat` no "
"Windows estão obsoletos. Numa versão futura, conterão a hora da última "
"alteração de metadados, consistente com outras plataformas. Por agora, ainda "
"contêm a hora de criação, que também está disponível no novo campo "
"``st_birthtime``. (Contribuído por Steve Dower em :gh:`99726`.)"

#: ../../whatsnew/3.12.rst:1272
msgid ""
"On POSIX platforms, :func:`os.fork` can now raise a :exc:"
"`DeprecationWarning` when it can detect being called from a multithreaded "
"process. There has always been a fundamental incompatibility with the POSIX "
"platform when doing so. Even if such code *appeared* to work. We added the "
"warning to raise awareness as issues encountered by code doing this are "
"becoming more frequent. See the :func:`os.fork` documentation for more "
"details along with `this discussion on fork being incompatible with threads "
"<https://discuss.python.org/t/concerns-regarding-deprecation-of-fork-with-"
"alive-threads/33555>`_ for *why* we're now surfacing this longstanding "
"platform compatibility problem to developers."
msgstr ""
"Nas plataformas POSIX, :func:`os.fork` pode agora levantar um :exc:"
"`DeprecationWarning` quando deteta ser chamado a partir de um processo multi-"
"thread. Sempre houve uma incompatibilidade fundamental com a plataforma "
"POSIX ao fazer isto. Mesmo que tal código *parecesse* funcionar. Adicionámos "
"o aviso para aumentar a consciencialização, uma vez que os problemas "
"encontrados pelo código que faz isto estão a tornar-se mais frequentes. "
"Consulte a documentação de :func:`os.fork` para mais detalhes, juntamente "
"com `esta discussão sobre o fork ser incompatível com threads <https://"
"discuss.python.org/t/concerns-regarding-deprecation-of-fork-with-alive-"
"threads/33555>`_ para saber *porquê* estamos agora a expor este problema de "
"compatibilidade de plataforma de longa data aos programadores."

#: ../../whatsnew/3.12.rst:1282
msgid ""
"When this warning appears due to usage of :mod:`multiprocessing` or :mod:"
"`concurrent.futures` the fix is to use a different :mod:`multiprocessing` "
"start method such as ``\"spawn\"`` or ``\"forkserver\"``."
msgstr ""
"Quando este aviso aparece devido ao uso de :mod:`multiprocessing` ou :mod:"
"`concurrent.futures`, a solução é usar um método de início :mod:"
"`multiprocessing` diferente, como ``\"spawn\"`` ou ``\"forkserver\"``."

#: ../../whatsnew/3.12.rst:1286
msgid ""
":mod:`shutil`: The *onerror* argument of :func:`shutil.rmtree` is "
"deprecated; use *onexc* instead. (Contributed by Irit Katriel in :gh:"
"`102828`.)"
msgstr ""
":mod:`shutil`: O argumento *onerror* de :func:`shutil.rmtree` está obsoleto; "
"use *onexc* em vez disso. (Contribuído por Irit Katriel em :gh:`102828`.)"

#: ../../whatsnew/3.12.rst:1289
#: ../../deprecations/pending-removal-in-3.14.rst:85
msgid ":mod:`sqlite3`:"
msgstr ":mod:`sqlite3`:"

#: ../../whatsnew/3.12.rst:1291
msgid ""
":ref:`default adapters and converters <sqlite3-default-converters>` are now "
"deprecated. Instead, use the :ref:`sqlite3-adapter-converter-recipes` and "
"tailor them to your needs. (Contributed by Erlend E. Aasland in :gh:`90016`.)"
msgstr ""
"Os :ref:`adaptadores e conversores predefinidos <sqlite3-default-"
"converters>` estão agora obsoletos. Em vez disso, use as :ref:`sqlite3-"
"adapter-converter-recipes` e adapte-as às suas necessidades. (Contribuído "
"por Erlend E. Aasland em :gh:`90016`.)"

#: ../../whatsnew/3.12.rst:1297
msgid ""
"In :meth:`~sqlite3.Cursor.execute`, :exc:`DeprecationWarning` is now emitted "
"when :ref:`named placeholders <sqlite3-placeholders>` are used together with "
"parameters supplied as a :term:`sequence` instead of as a :class:`dict`. "
"Starting from Python 3.14, using named placeholders with parameters supplied "
"as a sequence will raise a :exc:`~sqlite3.ProgrammingError`. (Contributed by "
"Erlend E. Aasland in :gh:`101698`.)"
msgstr ""
"Em :meth:`~sqlite3.Cursor.execute`, um :exc:`DeprecationWarning` é agora "
"emitido quando os :ref:`placeholders nomeados <sqlite3-placeholders>` são "
"usados em conjunto com parâmetros fornecidos como uma :term:`sequência` em "
"vez de como um :class:`dict`. A partir do Python 3.14, o uso de placeholders "
"nomeados com parâmetros fornecidos como uma sequência levantará um :exc:"
"`~sqlite3.ProgrammingError`. (Contribuído por Erlend E. Aasland em :gh:"
"`101698`.)"

#: ../../whatsnew/3.12.rst:1304
msgid ""
":mod:`sys`: The :data:`sys.last_type`, :data:`sys.last_value` and :data:`sys."
"last_traceback` fields are deprecated. Use :data:`sys.last_exc` instead. "
"(Contributed by Irit Katriel in :gh:`102778`.)"
msgstr ""
":mod:`sys`: Os campos :data:`sys.last_type`, :data:`sys.last_value` e :data:"
"`sys.last_traceback` estão obsoletos. Use :data:`sys.last_exc` em vez disso. "
"(Contribuído por Irit Katriel em :gh:`102778`.)"

#: ../../whatsnew/3.12.rst:1308
msgid ""
":mod:`tarfile`: Extracting tar archives without specifying *filter* is "
"deprecated until Python 3.14, when ``'data'`` filter will become the "
"default. See :ref:`tarfile-extraction-filter` for details."
msgstr ""
":mod:`tarfile`: A extração de arquivos tar sem especificar *filter* está "
"obsoleta até ao Python 3.14, quando o filtro ``'data'`` se tornará o "
"predefinido. Consulte :ref:`tarfile-extraction-filter` para mais detalhes."

#: ../../whatsnew/3.12.rst:1312
#: ../../deprecations/pending-removal-in-3.15.rst:80
#: ../../deprecations/pending-removal-in-3.17.rst:26
msgid ":mod:`typing`:"
msgstr ":mod:`typing`:"

#: ../../whatsnew/3.12.rst:1314
msgid ""
":class:`typing.Hashable` and :class:`typing.Sized`, aliases for :class:"
"`collections.abc.Hashable` and :class:`collections.abc.Sized` respectively, "
"are deprecated. (:gh:`94309`.)"
msgstr ""
":class:`typing.Hashable` e :class:`typing.Sized`, alias para :class:"
"`collections.abc.Hashable` e :class:`collections.abc.Sized`, respetivamente, "
"estão obsoletos. (:gh:`94309`.)"

#: ../../whatsnew/3.12.rst:1318
msgid ""
":class:`typing.ByteString`, deprecated since Python 3.9, now causes a :exc:"
"`DeprecationWarning` to be emitted when it is used. (Contributed by Alex "
"Waygood in :gh:`91896`.)"
msgstr ""
":class:`typing.ByteString`, obsoleto desde o Python 3.9, agora faz com que "
"um :exc:`DeprecationWarning` seja emitido quando é usado. (Contribuído por "
"Alex Waygood em :gh:`91896`.)"

#: ../../whatsnew/3.12.rst:1322
msgid ""
":mod:`xml.etree.ElementTree`: The module now emits :exc:`DeprecationWarning` "
"when testing the truth value of an :class:`xml.etree.ElementTree.Element`. "
"Before, the Python implementation emitted :exc:`FutureWarning`, and the C "
"implementation emitted nothing. (Contributed by Jacob Walls in :gh:`83122`.)"
msgstr ""
":mod:`xml.etree.ElementTree`: O módulo agora emite :exc:`DeprecationWarning` "
"ao testar o valor de verdade de um :class:`xml.etree.ElementTree.Element`. "
"Antes, a implementação Python emitia :exc:`FutureWarning`, e a implementação "
"C não emitia nada. (Contribuído por Jacob Walls em :gh:`83122`.)"

#: ../../whatsnew/3.12.rst:1328
msgid ""
"The 3-arg signatures (type, value, traceback) of :meth:`coroutine throw() "
"<coroutine.throw>`, :meth:`generator throw() <generator.throw>` and :meth:"
"`async generator throw() <agen.athrow>` are deprecated and may be removed in "
"a future version of Python. Use the single-arg versions of these functions "
"instead. (Contributed by Ofey Chan in :gh:`89874`.)"
msgstr ""
"As assinaturas de 3 argumentos (tipo, valor, traceback) de :meth:`coroutine "
"throw() <coroutine.throw>`, :meth:`generator throw() <generator.throw>` e :"
"meth:`async generator throw() <agen.athrow>` estão obsoletas e podem ser "
"removidas numa versão futura do Python. Use as versões de argumento único "
"destas funções em vez disso. (Contribuído por Ofey Chan em :gh:`89874`.)"

#: ../../whatsnew/3.12.rst:1334
msgid ""
":exc:`DeprecationWarning` is now raised when :attr:`~module.__package__` on "
"a module differs from :attr:`__spec__.parent <importlib.machinery.ModuleSpec."
"parent>` (previously it was :exc:`ImportWarning`). (Contributed by Brett "
"Cannon in :gh:`65961`.)"
msgstr ""
"Avisos :exc:`DeprecationWarning` são agora levantados quando :attr:`~module."
"__package__` num módulo difere de :attr:`__spec__.parent <importlib."
"machinery.ModuleSpec.parent>` (anteriormente era :exc:`ImportWarning`). "
"(Contribuído por Brett Cannon em :gh:`65961`.)"

#: ../../whatsnew/3.12.rst:1340
msgid ""
"Setting :attr:`~module.__package__` or :attr:`~module.__cached__` on a "
"module is deprecated, and will cease to be set or taken into consideration "
"by the import system in Python 3.14. (Contributed by Brett Cannon in :gh:"
"`65961`.)"
msgstr ""
"A definição de :attr:`~module.__package__` ou :attr:`~module.__cached__` num "
"módulo está obsoleta e deixará de ser definida ou considerada pelo sistema "
"de importação no Python 3.14. (Contribuído por Brett Cannon em :gh:`65961`.)"

#: ../../whatsnew/3.12.rst:1344
msgid ""
"The bitwise inversion operator (``~``) on bool is deprecated. It will throw "
"an error in Python 3.16. Use ``not`` for logical negation of bools instead. "
"In the rare case that you really need the bitwise inversion of the "
"underlying ``int``, convert to int explicitly: ``~int(x)``. (Contributed by "
"Tim Hoffmann in :gh:`103487`.)"
msgstr ""
"O operador de inversão bit a bit (``~``) em bool está obsoleto. Lançará um "
"erro no Python 3.16. Use ``not`` para a negação lógica de bools em vez "
"disso. No raro caso de precisar realmente da inversão bit a bit do ``int`` "
"subjacente, converta explicitamente para int: ``~int(x)``. (Contribuído por "
"Tim Hoffmann em :gh:`103487`.)"

#: ../../whatsnew/3.12.rst:1350
msgid ""
"Accessing :attr:`~codeobject.co_lnotab` on code objects was deprecated in "
"Python 3.10 via :pep:`626`, but it only got a proper :exc:"
"`DeprecationWarning` in 3.12. May be removed in 3.15. (Contributed by Nikita "
"Sobolev in :gh:`101866`.)"
msgstr ""
"O acesso a :attr:`~codeobject.co_lnotab` em objetos de código foi "
"descontinuado no Python 3.10 através da :pep:`626`, mas só recebeu um :exc:"
"`DeprecationWarning` adequado no 3.12. Pode ser removido no 3.15. "
"(Contribuído por Nikita Sobolev em :gh:`101866`.)"

#: ../../deprecations/pending-removal-in-3.13.rst:2
msgid "Pending removal in Python 3.13"
msgstr "Remoção pendente no Python 3.13"

#: ../../deprecations/pending-removal-in-3.13.rst:4
msgid "Modules (see :pep:`594`):"
msgstr "Módulos (consulte :pep:`594`):"

#: ../../deprecations/pending-removal-in-3.13.rst:6
msgid ":mod:`!aifc`"
msgstr ":mod:`!aifc`"

#: ../../deprecations/pending-removal-in-3.13.rst:7
msgid ":mod:`!audioop`"
msgstr ":mod:`!audioop`"

#: ../../deprecations/pending-removal-in-3.13.rst:8
msgid ":mod:`!cgi`"
msgstr ":mod:`!cgi`"

#: ../../deprecations/pending-removal-in-3.13.rst:9
msgid ":mod:`!cgitb`"
msgstr ":mod:`!cgitb`"

#: ../../deprecations/pending-removal-in-3.13.rst:10
msgid ":mod:`!chunk`"
msgstr ":mod:`!chunk`"

#: ../../deprecations/pending-removal-in-3.13.rst:11
msgid ":mod:`!crypt`"
msgstr ":mod:`!crypt`"

#: ../../deprecations/pending-removal-in-3.13.rst:12
msgid ":mod:`!imghdr`"
msgstr ":mod:`!imghdr`"

#: ../../deprecations/pending-removal-in-3.13.rst:13
msgid ":mod:`!mailcap`"
msgstr ":mod:`!mailcap`"

#: ../../deprecations/pending-removal-in-3.13.rst:14
msgid ":mod:`!msilib`"
msgstr ":mod:`!msilib`"

#: ../../deprecations/pending-removal-in-3.13.rst:15
msgid ":mod:`!nis`"
msgstr ":mod:`!nis`"

#: ../../deprecations/pending-removal-in-3.13.rst:16
msgid ":mod:`!nntplib`"
msgstr ":mod:`!nntplib`"

#: ../../deprecations/pending-removal-in-3.13.rst:17
msgid ":mod:`!ossaudiodev`"
msgstr ":mod:`!ossaudiodev`"

#: ../../deprecations/pending-removal-in-3.13.rst:18
msgid ":mod:`!pipes`"
msgstr ":mod:`!pipes`"

#: ../../deprecations/pending-removal-in-3.13.rst:19
msgid ":mod:`!sndhdr`"
msgstr ":mod:`!sndhdr`"

#: ../../deprecations/pending-removal-in-3.13.rst:20
msgid ":mod:`!spwd`"
msgstr ":mod:`!spwd`"

#: ../../deprecations/pending-removal-in-3.13.rst:21
msgid ":mod:`!sunau`"
msgstr ":mod:`!sunau`"

#: ../../deprecations/pending-removal-in-3.13.rst:22
msgid ":mod:`!telnetlib`"
msgstr ":mod:`!telnetlib`"

#: ../../deprecations/pending-removal-in-3.13.rst:23
msgid ":mod:`!uu`"
msgstr ":mod:`!uu`"

#: ../../deprecations/pending-removal-in-3.13.rst:24
msgid ":mod:`!xdrlib`"
msgstr ":mod:`!xdrlib`"

#: ../../deprecations/pending-removal-in-3.13.rst:26
msgid "Other modules:"
msgstr "Outros módulos:"

#: ../../deprecations/pending-removal-in-3.13.rst:28
msgid ":mod:`!lib2to3`, and the :program:`2to3` program (:gh:`84540`)"
msgstr ":mod:`!lib2to3` e o programa :program:`2to3` (:gh:`84540`)"

#: ../../deprecations/pending-removal-in-3.13.rst:30
msgid "APIs:"
msgstr "APIs:"

#: ../../deprecations/pending-removal-in-3.13.rst:32
msgid ":class:`!configparser.LegacyInterpolation` (:gh:`90765`)"
msgstr ":class:`!configparser.LegacyInterpolation` (:gh:`90765`)"

#: ../../deprecations/pending-removal-in-3.13.rst:33
msgid "``locale.resetlocale()`` (:gh:`90817`)"
msgstr "``locale.resetlocale()`` (:gh:`90817`)"

#: ../../deprecations/pending-removal-in-3.13.rst:34
msgid ":meth:`!turtle.RawTurtle.settiltangle` (:gh:`50096`)"
msgstr ":meth:`!turtle.RawTurtle.settiltangle` (:gh:`50096`)"

#: ../../deprecations/pending-removal-in-3.13.rst:35
msgid ":func:`!unittest.findTestCases` (:gh:`50096`)"
msgstr ":func:`!unittest.findTestCases` (:gh:`50096`)"

#: ../../deprecations/pending-removal-in-3.13.rst:36
msgid ":func:`!unittest.getTestCaseNames` (:gh:`50096`)"
msgstr ":func:`!unittest.getTestCaseNames` (:gh:`50096`)"

#: ../../deprecations/pending-removal-in-3.13.rst:37
msgid ":func:`!unittest.makeSuite` (:gh:`50096`)"
msgstr ":func:`!unittest.makeSuite` (:gh:`50096`)"

#: ../../deprecations/pending-removal-in-3.13.rst:38
msgid ":meth:`!unittest.TestProgram.usageExit` (:gh:`67048`)"
msgstr ":meth:`!unittest.TestProgram.usageExit` (:gh:`67048`)"

#: ../../deprecations/pending-removal-in-3.13.rst:39
msgid ":class:`!webbrowser.MacOSX` (:gh:`86421`)"
msgstr ":class:`!webbrowser.MacOSX` (:gh:`86421`)"

#: ../../deprecations/pending-removal-in-3.13.rst:40
msgid ":class:`classmethod` descriptor chaining (:gh:`89519`)"
msgstr "Encadeamento de descritores :class:`classmethod` (:gh:`89519`)"

#: ../../deprecations/pending-removal-in-3.13.rst:41
msgid ":mod:`importlib.resources` deprecated methods:"
msgstr "Métodos obsoletos de :mod:`importlib.resources`:"

#: ../../deprecations/pending-removal-in-3.13.rst:43
msgid "``contents()``"
msgstr "``contents()``"

#: ../../deprecations/pending-removal-in-3.13.rst:44
msgid "``is_resource()``"
msgstr "``is_resource()``"

#: ../../deprecations/pending-removal-in-3.13.rst:45
msgid "``open_binary()``"
msgstr "``open_binary()``"

#: ../../deprecations/pending-removal-in-3.13.rst:46
msgid "``open_text()``"
msgstr "``open_text()``"

#: ../../deprecations/pending-removal-in-3.13.rst:47
msgid "``path()``"
msgstr "``path()``"

#: ../../deprecations/pending-removal-in-3.13.rst:48
msgid "``read_binary()``"
msgstr "``read_binary()``"

#: ../../deprecations/pending-removal-in-3.13.rst:49
msgid "``read_text()``"
msgstr "``read_text()``"

#: ../../deprecations/pending-removal-in-3.13.rst:51
msgid ""
"Use :func:`importlib.resources.files` instead.  Refer to `importlib-"
"resources: Migrating from Legacy <https://importlib-resources.readthedocs.io/"
"en/latest/using.html#migrating-from-legacy>`_ (:gh:`106531`)"
msgstr ""
"Use :func:`importlib.resources.files` em vez disso. Consulte `importlib-"
"resources: Migrating from Legacy <https://importlib-resources.readthedocs.io/"
"en/latest/using.html#migrating-from-legacy>`_ (:gh:`106531`)"

#: ../../deprecations/c-api-pending-removal-in-3.14.rst:2
#: ../../deprecations/pending-removal-in-3.14.rst:2
msgid "Pending removal in Python 3.14"
msgstr "Remoção pendente no Python 3.14"

#: ../../deprecations/pending-removal-in-3.14.rst:9
msgid ""
":mod:`ast`: The following features have been deprecated in documentation "
"since Python 3.8, now cause a :exc:`DeprecationWarning` to be emitted at "
"runtime when they are accessed or used, and will be removed in Python 3.14:"
msgstr ""
":mod:`ast`: As seguintes funcionalidades estão obsoletas na documentação "
"desde o Python 3.8, agora fazem com que um :exc:`DeprecationWarning` seja "
"emitido em tempo de execução quando são acedidas ou usadas, e serão "
"removidas no Python 3.14:"

#: ../../deprecations/pending-removal-in-3.14.rst:41
msgid ""
":mod:`email`: Deprecated the *isdst* parameter in :func:`email.utils."
"localtime`. (Contributed by Alan Williams in :gh:`72346`.)"
msgstr ""
":mod:`email`: O parâmetro *isdst* em :func:`email.utils.localtime` está "
"obsoleto. (Contribuído por Alan Williams em :gh:`72346`.)"

#: ../../deprecations/pending-removal-in-3.14.rst:44
msgid ":mod:`importlib.abc` deprecated classes:"
msgstr "Classes obsoletas de :mod:`importlib.abc`:"

#: ../../deprecations/pending-removal-in-3.14.rst:57
msgid ""
":mod:`itertools` had undocumented, inefficient, historically buggy, and "
"inconsistent support for copy, deepcopy, and pickle operations. This will be "
"removed in 3.14 for a significant reduction in code volume and maintenance "
"burden. (Contributed by Raymond Hettinger in :gh:`101588`.)"
msgstr ""
":mod:`itertools` tinha suporte indocumentado, ineficiente, historicamente "
"problemático e inconsistente para operações de cópia, deepcopy e pickle. "
"Isto será removido no 3.14 para uma redução significativa no volume de "
"código e na carga de manutenção. (Contribuído por Raymond Hettinger em :gh:"
"`101588`.)"

#: ../../deprecations/pending-removal-in-3.14.rst:63
msgid ""
":mod:`multiprocessing`: The default start method will change to a safer one "
"on Linux, BSDs, and other non-macOS POSIX platforms where ``'fork'`` is "
"currently the default (:gh:`84559`). Adding a runtime warning about this was "
"deemed too disruptive as the majority of code is not expected to care. Use "
"the :func:`~multiprocessing.get_context` or :func:`~multiprocessing."
"set_start_method` APIs to explicitly specify when your code *requires* "
"``'fork'``.  See :ref:`multiprocessing-start-methods`."
msgstr ""
":mod:`multiprocessing`: O método de início predefinido mudará para um mais "
"seguro no Linux, BSDs e outras plataformas POSIX não-macOS onde ``'fork'`` é "
"atualmente o predefinido (:gh:`84559`). A adição de um aviso em tempo de "
"execução sobre isto foi considerada demasiado perturbadora, uma vez que a "
"maioria do código não é esperado que se importe. Use as APIs :func:"
"`~multiprocessing.get_context` ou :func:`~multiprocessing.set_start_method` "
"para especificar explicitamente quando o seu código *requer* ``'fork'``. "
"Consulte :ref:`multiprocessing-start-methods`."

#: ../../deprecations/pending-removal-in-3.14.rst:71
msgid ""
":mod:`pathlib`: :meth:`~pathlib.PurePath.is_relative_to` and :meth:`~pathlib."
"PurePath.relative_to`: passing additional arguments is deprecated."
msgstr ""
":mod:`pathlib`: :meth:`~pathlib.PurePath.is_relative_to` e :meth:`~pathlib."
"PurePath.relative_to`: passar argumentos adicionais está obsoleto."

#: ../../deprecations/pending-removal-in-3.14.rst:75
msgid ""
":mod:`pkgutil`: :func:`!pkgutil.find_loader` and :func:`!pkgutil.get_loader` "
"now raise :exc:`DeprecationWarning`; use :func:`importlib.util.find_spec` "
"instead. (Contributed by Nikita Sobolev in :gh:`97850`.)"
msgstr ""
":mod:`pkgutil`: As funções :func:`!pkgutil.find_loader` e :func:`!pkgutil."
"get_loader` agora levantam :exc:`DeprecationWarning`; use :func:`importlib."
"util.find_spec` em vez disso. (Contribuído por Nikita Sobolev em :gh:"
"`97850`.)"

#: ../../deprecations/pending-removal-in-3.14.rst:80
msgid ":mod:`pty`:"
msgstr ":mod:`pty`:"

#: ../../deprecations/pending-removal-in-3.14.rst:82
msgid "``master_open()``: use :func:`pty.openpty`."
msgstr "``master_open()``: use :func:`pty.openpty`."

#: ../../deprecations/pending-removal-in-3.14.rst:83
msgid "``slave_open()``: use :func:`pty.openpty`."
msgstr "``slave_open()``: use :func:`pty.openpty`."

#: ../../deprecations/pending-removal-in-3.14.rst:87
msgid ":data:`!version` and :data:`!version_info`."
msgstr ":data:`!version` e :data:`!version_info`."

#: ../../deprecations/pending-removal-in-3.14.rst:89
msgid ""
":meth:`~sqlite3.Cursor.execute` and :meth:`~sqlite3.Cursor.executemany` if :"
"ref:`named placeholders <sqlite3-placeholders>` are used and *parameters* is "
"a sequence instead of a :class:`dict`."
msgstr ""
":meth:`~sqlite3.Cursor.execute` e :meth:`~sqlite3.Cursor.executemany` se os :"
"ref:`placeholders nomeados <sqlite3-placeholders>` forem usados e "
"*parameters* for uma sequência em vez de um :class:`dict`."

#: ../../deprecations/pending-removal-in-3.14.rst:93
msgid ""
":mod:`urllib`: :class:`!urllib.parse.Quoter` is deprecated: it was not "
"intended to be a public API. (Contributed by Gregory P. Smith in :gh:"
"`88168`.)"
msgstr ""
":mod:`urllib`: :class:`!urllib.parse.Quoter` está obsoleto: não era "
"destinado a ser uma API pública. (Contribuído por Gregory P. Smith em :gh:"
"`88168`.)"

#: ../../deprecations/c-api-pending-removal-in-3.15.rst:2
#: ../../deprecations/pending-removal-in-3.15.rst:2
msgid "Pending removal in Python 3.15"
msgstr "Remoção pendente no Python 3.15"

#: ../../deprecations/pending-removal-in-3.15.rst:4
#: ../../deprecations/pending-removal-in-3.16.rst:4
msgid "The import system:"
msgstr "O sistema de importação:"

#: ../../deprecations/pending-removal-in-3.15.rst:6
msgid ""
"Setting :attr:`~module.__cached__` on a module while failing to set :attr:"
"`__spec__.cached <importlib.machinery.ModuleSpec.cached>` is deprecated. In "
"Python 3.15, :attr:`!__cached__` will cease to be set or take into "
"consideration by the import system or standard library. (:gh:`97879`)"
msgstr ""
"A definição de :attr:`~module.__cached__` num módulo enquanto falha ao "
"definir :attr:`__spec__.cached <importlib.machinery.ModuleSpec.cached>` está "
"obsoleta. No Python 3.15, :attr:`!__cached__` deixará de ser definido ou "
"considerado pelo sistema de importação ou biblioteca padrão. (:gh:`97879`)"

#: ../../deprecations/pending-removal-in-3.15.rst:11
msgid ""
"Setting :attr:`~module.__package__` on a module while failing to set :attr:"
"`__spec__.parent <importlib.machinery.ModuleSpec.parent>` is deprecated. In "
"Python 3.15, :attr:`!__package__` will cease to be set or take into "
"consideration by the import system or standard library. (:gh:`97879`)"
msgstr ""
"A definição de :attr:`~module.__package__` num módulo enquanto falha ao "
"definir :attr:`__spec__.parent <importlib.machinery.ModuleSpec.parent>` está "
"obsoleta. No Python 3.15, :attr:`!__package__` deixará de ser definido ou "
"considerado pelo sistema de importação ou biblioteca padrão. (:gh:`97879`)"

#: ../../deprecations/pending-removal-in-3.15.rst:16
msgid ":mod:`ctypes`:"
msgstr ":mod:`ctypes`:"

#: ../../deprecations/pending-removal-in-3.15.rst:18
msgid ""
"The undocumented :func:`!ctypes.SetPointerType` function has been deprecated "
"since Python 3.13."
msgstr ""
"A função indocumentada :func:`!ctypes.SetPointerType` está obsoleta desde o "
"Python 3.13."

#: ../../deprecations/pending-removal-in-3.15.rst:21
msgid ":mod:`http.server`:"
msgstr ":mod:`http.server`:"

#: ../../deprecations/pending-removal-in-3.15.rst:23
msgid ""
"The obsolete and rarely used :class:`~http.server.CGIHTTPRequestHandler` has "
"been deprecated since Python 3.13. No direct replacement exists. *Anything* "
"is better than CGI to interface a web server with a request handler."
msgstr ""
"O :class:`~http.server.CGIHTTPRequestHandler`, obsoleto e raramente usado, "
"está obsoleto desde o Python 3.13. Não existe uma substituição direta. "
"*Qualquer coisa* é melhor do que CGI para interfacear um servidor web com um "
"manipulador de pedidos."

#: ../../deprecations/pending-removal-in-3.15.rst:29
msgid ""
"The :option:`!--cgi` flag to the :program:`python -m http.server` command-"
"line interface has been deprecated since Python 3.13."
msgstr ""
"A flag :option:`!--cgi` para a interface de linha de comandos :program:"
"`python -m http.server` está obsoleta desde o Python 3.13."

#: ../../deprecations/pending-removal-in-3.15.rst:32
#: ../../deprecations/pending-removal-in-future.rst:63
msgid ":mod:`importlib`:"
msgstr ":mod:`importlib`:"

#: ../../deprecations/pending-removal-in-3.15.rst:34
msgid "``load_module()`` method: use ``exec_module()`` instead."
msgstr "Método ``load_module()``: use ``exec_module()`` em vez disso."

#: ../../deprecations/pending-removal-in-3.15.rst:36
msgid ":class:`locale`:"
msgstr ":class:`locale`:"

#: ../../deprecations/pending-removal-in-3.15.rst:38
msgid ""
"The :func:`~locale.getdefaultlocale` function has been deprecated since "
"Python 3.11. Its removal was originally planned for Python 3.13 (:gh:"
"`90817`), but has been postponed to Python 3.15. Use :func:`~locale."
"getlocale`, :func:`~locale.setlocale`, and :func:`~locale.getencoding` "
"instead. (Contributed by Hugo van Kemenade in :gh:`111187`.)"
msgstr ""
"A função :func:`~locale.getdefaultlocale` está obsoleta desde o Python 3.11. "
"A sua remoção estava originalmente planeada para o Python 3.13 (:gh:"
"`90817`), mas foi adiada para o Python 3.15. Use :func:`~locale.getlocale`, :"
"func:`~locale.setlocale` e :func:`~locale.getencoding` em vez disso. "
"(Contribuído por Hugo van Kemenade em :gh:`111187`.)"

#: ../../deprecations/pending-removal-in-3.15.rst:46
msgid ":mod:`pathlib`:"
msgstr ":mod:`pathlib`:"

#: ../../deprecations/pending-removal-in-3.15.rst:48
msgid ""
":meth:`.PurePath.is_reserved` has been deprecated since Python 3.13. Use :"
"func:`os.path.isreserved` to detect reserved paths on Windows."
msgstr ""
":meth:`.PurePath.is_reserved` está obsoleto desde o Python 3.13. Use :func:"
"`os.path.isreserved` para detetar caminhos reservados no Windows."

#: ../../deprecations/pending-removal-in-3.15.rst:52
msgid ":mod:`platform`:"
msgstr ":mod:`platform`:"

#: ../../deprecations/pending-removal-in-3.15.rst:54
msgid ""
":func:`~platform.java_ver` has been deprecated since Python 3.13. This "
"function is only useful for Jython support, has a confusing API, and is "
"largely untested."
msgstr ""
"A função :func:`~platform.java_ver` está obsoleta desde o Python 3.13. Esta "
"função é útil apenas para suporte ao Jython, tem uma API confusa e é em "
"grande parte não testada."

#: ../../deprecations/pending-removal-in-3.15.rst:58
#: ../../deprecations/pending-removal-in-3.16.rst:96
msgid ":mod:`sysconfig`:"
msgstr ":mod:`sysconfig`:"

#: ../../deprecations/pending-removal-in-3.15.rst:60
msgid ""
"The *check_home* argument of :func:`sysconfig.is_python_build` has been "
"deprecated since Python 3.12."
msgstr ""
"O argumento *check_home* de :func:`sysconfig.is_python_build` está obsoleto "
"desde o Python 3.12."

#: ../../deprecations/pending-removal-in-3.15.rst:63
msgid ":mod:`threading`:"
msgstr ":mod:`threading`:"

#: ../../deprecations/pending-removal-in-3.15.rst:65
msgid ""
":func:`~threading.RLock` will take no arguments in Python 3.15. Passing any "
"arguments has been deprecated since Python 3.14, as the  Python version does "
"not permit any arguments, but the C version allows any number of positional "
"or keyword arguments, ignoring every argument."
msgstr ""
":func:`~threading.RLock` não aceitará argumentos no Python 3.15. Passar "
"quaisquer argumentos está obsoleto desde o Python 3.14, uma vez que a versão "
"Python não permite quaisquer argumentos, mas a versão C permite qualquer "
"número de argumentos posicionais ou de palavra-chave, ignorando todos os "
"argumentos."

#: ../../deprecations/pending-removal-in-3.15.rst:71
msgid ":mod:`types`:"
msgstr ":mod:`types`:"

#: ../../deprecations/pending-removal-in-3.15.rst:73
msgid ""
":class:`types.CodeType`: Accessing :attr:`~codeobject.co_lnotab` was "
"deprecated in :pep:`626` since 3.10 and was planned to be removed in 3.12, "
"but it only got a proper :exc:`DeprecationWarning` in 3.12. May be removed "
"in 3.15. (Contributed by Nikita Sobolev in :gh:`101866`.)"
msgstr ""
":class:`types.CodeType`: O acesso a :attr:`~codeobject.co_lnotab` foi "
"descontinuado na :pep:`626` desde o 3.10 e estava planeado para ser removido "
"no 3.12, mas só recebeu um :exc:`DeprecationWarning` adequado no 3.12. Pode "
"ser removido no 3.15. (Contribuído por Nikita Sobolev em :gh:`101866`.)"

#: ../../deprecations/pending-removal-in-3.15.rst:82
msgid ""
"The undocumented keyword argument syntax for creating :class:`~typing."
"NamedTuple` classes (for example, ``Point = NamedTuple(\"Point\", x=int, "
"y=int)``) has been deprecated since Python 3.13. Use the class-based syntax "
"or the functional syntax instead."
msgstr ""
"A sintaxe de argumento de palavra-chave indocumentada para criar classes :"
"class:`~typing.NamedTuple` (por exemplo, ``Point = NamedTuple(\"Point\", "
"x=int, y=int)``) está obsoleta desde o Python 3.13. Use a sintaxe baseada em "
"classes ou a sintaxe funcional em vez disso."

#: ../../deprecations/pending-removal-in-3.15.rst:88
msgid ""
"When using the functional syntax of :class:`~typing.TypedDict`\\s, failing "
"to pass a value to the *fields* parameter (``TD = TypedDict(\"TD\")``) or "
"passing ``None`` (``TD = TypedDict(\"TD\", None)``) has been deprecated "
"since Python 3.13. Use ``class TD(TypedDict): pass`` or ``TD = "
"TypedDict(\"TD\", {})`` to create a TypedDict with zero field."
msgstr ""
"Ao usar a sintaxe funcional de :class:`~typing.TypedDict`, falhar ao passar "
"um valor para o parâmetro *fields* (``TD = TypedDict(\"TD\")``) ou passar "
"``None`` (``TD = TypedDict(\"TD\", None)``) está obsoleto desde o Python "
"3.13. Use ``class TD(TypedDict): pass`` ou ``TD = TypedDict(\"TD\", {})`` "
"para criar um TypedDict com zero campos."

#: ../../deprecations/pending-removal-in-3.15.rst:95
msgid ""
"The :func:`typing.no_type_check_decorator` decorator function has been "
"deprecated since Python 3.13. After eight years in the :mod:`typing` module, "
"it has yet to be supported by any major type checker."
msgstr ""
"A função decoradora :func:`typing.no_type_check_decorator` está obsoleta "
"desde o Python 3.13. Após oito anos no módulo :mod:`typing`, ainda não é "
"suportada por nenhum verificador de tipo principal."

#: ../../deprecations/pending-removal-in-3.15.rst:100
msgid ":mod:`wave`:"
msgstr ":mod:`wave`:"

#: ../../deprecations/pending-removal-in-3.15.rst:102
msgid ""
"The :meth:`~wave.Wave_read.getmark`, :meth:`!setmark`, and :meth:`~wave."
"Wave_read.getmarkers` methods of the :class:`~wave.Wave_read` and :class:"
"`~wave.Wave_write` classes have been deprecated since Python 3.13."
msgstr ""
"Os métodos :meth:`~wave.Wave_read.getmark`, :meth:`!setmark` e :meth:`~wave."
"Wave_read.getmarkers` das classes :class:`~wave.Wave_read` e :class:`~wave."
"Wave_write` estão obsoletos desde o Python 3.13."

#: ../../deprecations/pending-removal-in-3.15.rst:107
msgid ":mod:`zipimport`:"
msgstr ":mod:`zipimport`:"

#: ../../deprecations/pending-removal-in-3.15.rst:109
msgid ""
":meth:`~zipimport.zipimporter.load_module` has been deprecated since Python "
"3.10. Use :meth:`~zipimport.zipimporter.exec_module` instead. (Contributed "
"by Jiahao Li in :gh:`125746`.)"
msgstr ""
":meth:`~zipimport.zipimporter.load_module` está obsoleto desde o Python "
"3.10. Use :meth:`~zipimport.zipimporter.exec_module` em vez disso. "
"(Contribuído por Jiahao Li em :gh:`125746`.)"

#: ../../deprecations/c-api-pending-removal-in-3.16.rst:2
#: ../../deprecations/pending-removal-in-3.16.rst:2
msgid "Pending removal in Python 3.16"
msgstr "Remoção pendente no Python 3.16"

#: ../../deprecations/pending-removal-in-3.16.rst:6
msgid ""
"Setting :attr:`~module.__loader__` on a module while failing to set :attr:"
"`__spec__.loader <importlib.machinery.ModuleSpec.loader>` is deprecated. In "
"Python 3.16, :attr:`!__loader__` will cease to be set or taken into "
"consideration by the import system or the standard library."
msgstr ""
"A definição de :attr:`~module.__loader__` num módulo enquanto falha ao "
"definir :attr:`__spec__.loader <importlib.machinery.ModuleSpec.loader>` está "
"obsoleta. No Python 3.16, :attr:`!__loader__` deixará de ser definido ou "
"considerado pelo sistema de importação ou pela biblioteca padrão."

#: ../../deprecations/pending-removal-in-3.16.rst:11
msgid ":mod:`array`:"
msgstr ":mod:`array`:"

#: ../../deprecations/pending-removal-in-3.16.rst:13
msgid ""
"The ``'u'`` format code (:c:type:`wchar_t`) has been deprecated in "
"documentation since Python 3.3 and at runtime since Python 3.13. Use the "
"``'w'`` format code (:c:type:`Py_UCS4`) for Unicode characters instead."
msgstr ""
"O código de formato ``'u'`` (:c:type:`wchar_t`) está obsoleto na "
"documentação desde o Python 3.3 e em tempo de execução desde o Python 3.13. "
"Use o código de formato ``'w'`` (:c:type:`Py_UCS4`) para caracteres Unicode "
"em vez disso."

#: ../../deprecations/pending-removal-in-3.16.rst:21
msgid ""
":func:`!asyncio.iscoroutinefunction` is deprecated and will be removed in "
"Python 3.16; use :func:`inspect.iscoroutinefunction` instead. (Contributed "
"by Jiahao Li and Kumar Aditya in :gh:`122875`.)"
msgstr ""
":func:`!asyncio.iscoroutinefunction` está obsoleta e será removida no Python "
"3.16; use :func:`inspect.iscoroutinefunction` em vez disso. (Contribuído por "
"Jiahao Li e Kumar Aditya em :gh:`122875`.)"

#: ../../deprecations/pending-removal-in-3.16.rst:26
msgid ""
":mod:`asyncio` policy system is deprecated and will be removed in Python "
"3.16. In particular, the following classes and functions are deprecated:"
msgstr ""
"O sistema de políticas :mod:`asyncio` está obsoleto e será removido no "
"Python 3.16. Em particular, as seguintes classes e funções estão obsoletas:"

#: ../../deprecations/pending-removal-in-3.16.rst:29
msgid ":class:`asyncio.AbstractEventLoopPolicy`"
msgstr ":class:`asyncio.AbstractEventLoopPolicy`"

#: ../../deprecations/pending-removal-in-3.16.rst:30
msgid ":class:`asyncio.DefaultEventLoopPolicy`"
msgstr ":class:`asyncio.DefaultEventLoopPolicy`"

#: ../../deprecations/pending-removal-in-3.16.rst:31
msgid ":class:`asyncio.WindowsSelectorEventLoopPolicy`"
msgstr ":class:`asyncio.WindowsSelectorEventLoopPolicy`"

#: ../../deprecations/pending-removal-in-3.16.rst:32
msgid ":class:`asyncio.WindowsProactorEventLoopPolicy`"
msgstr ":class:`asyncio.WindowsProactorEventLoopPolicy`"

#: ../../deprecations/pending-removal-in-3.16.rst:33
msgid ":func:`asyncio.get_event_loop_policy`"
msgstr ":func:`asyncio.get_event_loop_policy`"

#: ../../deprecations/pending-removal-in-3.16.rst:34
msgid ":func:`asyncio.set_event_loop_policy`"
msgstr ":func:`asyncio.set_event_loop_policy`"

#: ../../deprecations/pending-removal-in-3.16.rst:36
msgid ""
"Users should use :func:`asyncio.run` or :class:`asyncio.Runner` with "
"*loop_factory* to use the desired event loop implementation."
msgstr ""
"Os utilizadores devem usar :func:`asyncio.run` ou :class:`asyncio.Runner` "
"com *loop_factory* para usar a implementação desejada do loop de eventos."

#: ../../deprecations/pending-removal-in-3.16.rst:39
msgid "For example, to use :class:`asyncio.SelectorEventLoop` on Windows::"
msgstr "Por exemplo, para usar :class:`asyncio.SelectorEventLoop` no Windows::"

#: ../../deprecations/pending-removal-in-3.16.rst:41
msgid ""
"import asyncio\n"
"\n"
"async def main():\n"
"    ...\n"
"\n"
"asyncio.run(main(), loop_factory=asyncio.SelectorEventLoop)"
msgstr ""
"import asyncio\n"
"\n"
"async def main():\n"
"    ...\n"
"\n"
"asyncio.run(main(), loop_factory=asyncio.SelectorEventLoop)"

#: ../../deprecations/pending-removal-in-3.16.rst:48
msgid "(Contributed by Kumar Aditya in :gh:`127949`.)"
msgstr "(Contribuído por Kumar Aditya em :gh:`127949`.)"

#: ../../deprecations/pending-removal-in-3.16.rst:50
#: ../../deprecations/pending-removal-in-future.rst:16
msgid ":mod:`builtins`:"
msgstr ":mod:`builtins`:"

#: ../../deprecations/pending-removal-in-3.16.rst:52
msgid ""
"Bitwise inversion on boolean types, ``~True`` or ``~False`` has been "
"deprecated since Python 3.12, as it produces surprising and unintuitive "
"results (``-2`` and ``-1``). Use ``not x`` instead for the logical negation "
"of a Boolean. In the rare case that you need the bitwise inversion of the "
"underlying integer, convert to ``int`` explicitly (``~int(x)``)."
msgstr ""
"A inversão bit a bit em tipos booleanos, ``~True`` ou ``~False``, foi "
"descontinuada desde o Python 3.12, pois produz resultados surpreendentes e "
"pouco intuitivos (``-2`` e ``-1``). Use ``not x`` em vez disso para a "
"negação lógica de um booleano. No caso raro em que você precisar da inversão "
"bit a bit do inteiro subjacente, converta para ``int`` explicitamente "
"(``~int(x)``)."

#: ../../deprecations/pending-removal-in-3.16.rst:59
msgid ":mod:`functools`:"
msgstr ":mod:`functools`:"

#: ../../deprecations/pending-removal-in-3.16.rst:61
msgid ""
"Calling the Python implementation of :func:`functools.reduce` with "
"*function* or *sequence* as keyword arguments has been deprecated since "
"Python 3.14."
msgstr ""
"Chamar a implementação Python de :func:`functools.reduce` com *function* ou "
"*sequence* como argumentos de palavra-chave está obsoleto desde o Python "
"3.14."

#: ../../deprecations/pending-removal-in-3.16.rst:64
msgid ":mod:`logging`:"
msgstr ":mod:`logging`:"

#: ../../deprecations/pending-removal-in-3.16.rst:66
msgid ""
"Support for custom logging handlers with the *strm* argument is deprecated "
"and scheduled for removal in Python 3.16. Define handlers with the *stream* "
"argument instead. (Contributed by Mariusz Felisiak in :gh:`115032`.)"
msgstr ""
"O suporte para manipuladores de registo personalizados com o argumento "
"*strm* está obsoleto e agendado para remoção no Python 3.16. Defina "
"manipuladores com o argumento *stream* em vez disso. (Contribuído por "
"Mariusz Felisiak em :gh:`115032`.)"

#: ../../deprecations/pending-removal-in-3.16.rst:70
msgid ":mod:`mimetypes`:"
msgstr ":mod:`mimetypes`:"

#: ../../deprecations/pending-removal-in-3.16.rst:72
msgid ""
"Valid extensions start with a '.' or are empty for :meth:`mimetypes."
"MimeTypes.add_type`. Undotted extensions are deprecated and will raise a :"
"exc:`ValueError` in Python 3.16. (Contributed by Hugo van Kemenade in :gh:"
"`75223`.)"
msgstr ""
"Extensões válidas começam com um '.' ou estão vazias para :meth:`mimetypes."
"MimeTypes.add_type`. Extensões sem ponto estão obsoletas e levantarão um :"
"exc:`ValueError` no Python 3.16. (Contribuído por Hugo van Kemenade em :gh:"
"`75223`.)"

#: ../../deprecations/pending-removal-in-3.16.rst:78
msgid ":mod:`shutil`:"
msgstr ":mod:`shutil`:"

#: ../../deprecations/pending-removal-in-3.16.rst:80
msgid ""
"The :class:`!ExecError` exception has been deprecated since Python 3.14. It "
"has not been used by any function in :mod:`!shutil` since Python 3.4, and is "
"now an alias of :exc:`RuntimeError`."
msgstr ""
"A exceção :class:`!ExecError` está obsoleta desde o Python 3.14. Não tem "
"sido usada por nenhuma função em :mod:`!shutil` desde o Python 3.4 e é agora "
"um alias de :exc:`RuntimeError`."

#: ../../deprecations/pending-removal-in-3.16.rst:85
msgid ":mod:`symtable`:"
msgstr ":mod:`symtable`:"

#: ../../deprecations/pending-removal-in-3.16.rst:87
msgid ""
"The :meth:`Class.get_methods <symtable.Class.get_methods>` method has been "
"deprecated since Python 3.14."
msgstr ""
"O método :meth:`Class.get_methods <symtable.Class.get_methods>` está "
"obsoleto desde o Python 3.14."

#: ../../deprecations/pending-removal-in-3.16.rst:90
msgid ":mod:`sys`:"
msgstr ":mod:`sys`:"

#: ../../deprecations/pending-removal-in-3.16.rst:92
msgid ""
"The :func:`~sys._enablelegacywindowsfsencoding` function has been deprecated "
"since Python 3.13. Use the :envvar:`PYTHONLEGACYWINDOWSFSENCODING` "
"environment variable instead."
msgstr ""
"A função :func:`~sys._enablelegacywindowsfsencoding` foi descontinuada desde "
"o Python 3.13. Use a variável de ambiente :envvar:"
"`PYTHONLEGACYWINDOWSFSENCODING` em vez disso."

#: ../../deprecations/pending-removal-in-3.16.rst:98
msgid ""
"The :func:`!sysconfig.expand_makefile_vars` function has been deprecated "
"since Python 3.14. Use the ``vars`` argument of :func:`sysconfig.get_paths` "
"instead."
msgstr ""
"A função :func:`!sysconfig.expand_makefile_vars` está obsoleta desde o "
"Python 3.14. Use o argumento ``vars`` de :func:`sysconfig.get_paths` em vez "
"disso."

#: ../../deprecations/pending-removal-in-3.16.rst:102
msgid ":mod:`tarfile`:"
msgstr ":mod:`tarfile`:"

#: ../../deprecations/pending-removal-in-3.16.rst:104
msgid ""
"The undocumented and unused :attr:`!TarFile.tarfile` attribute has been "
"deprecated since Python 3.13."
msgstr ""
"O atributo indocumentado e não utilizado :attr:`!TarFile.tarfile` está "
"obsoleto desde o Python 3.13."

#: ../../deprecations/pending-removal-in-3.17.rst:2
msgid "Pending removal in Python 3.17"
msgstr "Remoção pendente no Python 3.17"

#: ../../deprecations/pending-removal-in-3.17.rst:4
msgid ":mod:`collections.abc`:"
msgstr ":mod:`collections.abc`:"

#: ../../deprecations/pending-removal-in-3.17.rst:6
msgid ""
":class:`collections.abc.ByteString` is scheduled for removal in Python 3.17."
msgstr ""
":class:`collections.abc.ByteString` está agendado para remoção no Python "
"3.17."

#: ../../deprecations/pending-removal-in-3.17.rst:28
msgid ""
"Before Python 3.14, old-style unions were implemented using the private "
"class ``typing._UnionGenericAlias``. This class is no longer needed for the "
"implementation, but it has been retained for backward compatibility, with "
"removal scheduled for Python 3.17. Users should use documented introspection "
"helpers like :func:`typing.get_origin` and :func:`typing.get_args` instead "
"of relying on private implementation details."
msgstr ""
"Antes do Python 3.14, as uniões no estilo antigo eram implementadas usando a "
"classe privada ``typing._UnionGenericAlias``. Esta classe já não é "
"necessária para a implementação, mas foi mantida por compatibilidade "
"retroativa, com remoção agendada para o Python 3.17. Os utilizadores devem "
"usar auxiliares de introspeção documentados como :func:`typing.get_origin` "
"e :func:`typing.get_args` em vez de depender de detalhes de implementação "
"privados."

#: ../../deprecations/pending-removal-in-3.17.rst:33
msgid ""
":class:`typing.ByteString`, deprecated since Python 3.9, is scheduled for "
"removal in Python 3.17."
msgstr ""
":class:`typing.ByteString`, obsoleto desde o Python 3.9, está agendado para "
"remoção no Python 3.17."

#: ../../deprecations/c-api-pending-removal-in-future.rst:2
#: ../../deprecations/pending-removal-in-future.rst:2
msgid "Pending removal in future versions"
msgstr "Remoção pendente em versões futuras"

#: ../../deprecations/pending-removal-in-future.rst:4
msgid ""
"The following APIs will be removed in the future, although there is "
"currently no date scheduled for their removal."
msgstr ""
"As seguintes APIs serão removidas no futuro, embora ainda não haja uma data "
"prevista para a sua remoção."

#: ../../deprecations/pending-removal-in-future.rst:7
msgid ":mod:`argparse`:"
msgstr ":mod:`argparse`:"

#: ../../deprecations/pending-removal-in-future.rst:9
msgid ""
"Nesting argument groups and nesting mutually exclusive groups are deprecated."
msgstr ""
"Aninhar grupos de argumentos e aninhar grupos mutuamente exclusivos estão "
"obsoletos."

#: ../../deprecations/pending-removal-in-future.rst:11
msgid ""
"Passing the undocumented keyword argument *prefix_chars* to :meth:`~argparse."
"ArgumentParser.add_argument_group` is now deprecated."
msgstr ""
"Passar o argumento de palavra-chave indocumentado *prefix_chars* para :meth:"
"`~argparse.ArgumentParser.add_argument_group` está agora obsoleto."

#: ../../deprecations/pending-removal-in-future.rst:14
msgid "The :class:`argparse.FileType` type converter is deprecated."
msgstr "O conversor de tipo :class:`argparse.FileType` está obsoleto."

#: ../../deprecations/pending-removal-in-future.rst:18
msgid ""
"Generators: ``throw(type, exc, tb)`` and ``athrow(type, exc, tb)`` signature "
"is deprecated: use ``throw(exc)`` and ``athrow(exc)`` instead, the single "
"argument signature."
msgstr ""
"Geradores: a assinatura ``throw(type, exc, tb)`` e ``athrow(type, exc, tb)`` "
"está obsoleta: use ``throw(exc)`` e ``athrow(exc)`` em vez disso, a "
"assinatura de argumento único."

#: ../../deprecations/pending-removal-in-future.rst:21
msgid ""
"Currently Python accepts numeric literals immediately followed by keywords, "
"for example ``0in x``, ``1or x``, ``0if 1else 2``.  It allows confusing and "
"ambiguous expressions like ``[0x1for x in y]`` (which can be interpreted as "
"``[0x1 for x in y]`` or ``[0x1f or x in y]``).  A syntax warning is raised "
"if the numeric literal is immediately followed by one of keywords :keyword:"
"`and`, :keyword:`else`, :keyword:`for`, :keyword:`if`, :keyword:`in`, :"
"keyword:`is` and :keyword:`or`.  In a future release it will be changed to a "
"syntax error. (:gh:`87999`)"
msgstr ""
"Atualmente, o Python aceita literais numéricos imediatamente seguidos de "
"palavras-chave, por exemplo ``0in x``, ``1or x``, ``0if 1else 2``. Isto "
"permite expressões confusas e ambíguas como ``[0x1for x in y]`` (que pode "
"ser interpretado como ``[0x1 for x in y]`` ou ``[0x1f or x in y]``). Um "
"aviso de sintaxe é levantado se o literal numérico for imediatamente seguido "
"por uma das palavras-chave :keyword:`and`, :keyword:`else`, :keyword:`for`, :"
"keyword:`if`, :keyword:`in`, :keyword:`is` e :keyword:`or`. Numa versão "
"futura, isto será alterado para um erro de sintaxe. (:gh:`87999`)"

#: ../../deprecations/pending-removal-in-future.rst:29
msgid ""
"Support for ``__index__()`` and ``__int__()`` method returning non-int type: "
"these methods will be required to return an instance of a strict subclass "
"of :class:`int`."
msgstr ""
"Suporte para métodos ``__index__()`` e ``__int__()`` que retornam um tipo "
"não-int: estes métodos serão obrigados a retornar uma instância de uma "
"subclasse estrita de :class:`int`."

#: ../../deprecations/pending-removal-in-future.rst:32
msgid ""
"Support for ``__float__()`` method returning a strict subclass of :class:"
"`float`: these methods will be required to return an instance of :class:"
"`float`."
msgstr ""
"Suporte para o método ``__float__()`` que retorna uma subclasse estrita de :"
"class:`float`: estes métodos serão obrigados a retornar uma instância de :"
"class:`float`."

#: ../../deprecations/pending-removal-in-future.rst:35
msgid ""
"Support for ``__complex__()`` method returning a strict subclass of :class:"
"`complex`: these methods will be required to return an instance of :class:"
"`complex`."
msgstr ""
"Suporte para o método ``__complex__()`` que retorna uma subclasse estrita "
"de :class:`complex`: estes métodos serão obrigados a retornar uma instância "
"de :class:`complex`."

#: ../../deprecations/pending-removal-in-future.rst:38
msgid "Delegation of ``int()`` to ``__trunc__()`` method."
msgstr "Delegação de ``int()`` ao método ``__trunc__()``."

#: ../../deprecations/pending-removal-in-future.rst:39
msgid ""
"Passing a complex number as the *real* or *imag* argument in the :func:"
"`complex` constructor is now deprecated; it should only be passed as a "
"single positional argument. (Contributed by Serhiy Storchaka in :gh:"
"`109218`.)"
msgstr ""
"Passar um número complexo como argumento *real* ou *imag* no construtor :"
"func:`complex` está agora obsoleto; deve ser passado apenas como um "
"argumento posicional único. (Contribuído por Serhiy Storchaka em :gh:"
"`109218`.)"

#: ../../deprecations/pending-removal-in-future.rst:49
msgid ""
":mod:`codecs`: use :func:`open` instead of :func:`codecs.open`. (:gh:"
"`133038`)"
msgstr ""
":mod:`codecs`: use :func:`open` em vez de :func:`codecs.open`. (:gh:`133038`)"

#: ../../deprecations/pending-removal-in-future.rst:51
msgid ""
":attr:`codeobject.co_lnotab`: use the :meth:`codeobject.co_lines` method "
"instead."
msgstr ""
":attr:`codeobject.co_lnotab`: use o método :meth:`codeobject.co_lines` em "
"vez disso."

#: ../../deprecations/pending-removal-in-future.rst:54
msgid ":mod:`datetime`:"
msgstr ":mod:`datetime`:"

#: ../../deprecations/pending-removal-in-future.rst:56
msgid ""
":meth:`~datetime.datetime.utcnow`: use ``datetime.datetime.now(tz=datetime."
"UTC)``."
msgstr ""
":meth:`~datetime.datetime.utcnow`: use ``datetime.datetime.now(tz=datetime."
"UTC)``."

#: ../../deprecations/pending-removal-in-future.rst:58
msgid ""
":meth:`~datetime.datetime.utcfromtimestamp`: use ``datetime.datetime."
"fromtimestamp(timestamp, tz=datetime.UTC)``."
msgstr ""
":meth:`~datetime.datetime.utcfromtimestamp`: use ``datetime.datetime."
"fromtimestamp(timestamp, tz=datetime.UTC)``."

#: ../../deprecations/pending-removal-in-future.rst:61
msgid ":mod:`gettext`: Plural value must be an integer."
msgstr ":mod:`gettext`: O valor plural deve ser um inteiro."

#: ../../deprecations/pending-removal-in-future.rst:65
msgid ""
":func:`~importlib.util.cache_from_source` *debug_override* parameter is "
"deprecated: use the *optimization* parameter instead."
msgstr ""
"O parâmetro *debug_override* de :func:`~importlib.util.cache_from_source` "
"está obsoleto: use o parâmetro *optimization* em vez disso."

#: ../../deprecations/pending-removal-in-future.rst:68
msgid ":mod:`importlib.metadata`:"
msgstr ":mod:`importlib.metadata`:"

#: ../../deprecations/pending-removal-in-future.rst:70
msgid "``EntryPoints`` tuple interface."
msgstr "Interface de tuplo ``EntryPoints``."

#: ../../deprecations/pending-removal-in-future.rst:71
msgid "Implicit ``None`` on return values."
msgstr "``None`` implícito em valores de retorno."

#: ../../deprecations/pending-removal-in-future.rst:73
msgid ""
":mod:`logging`: the ``warn()`` method has been deprecated since Python 3.3, "
"use :meth:`~logging.warning` instead."
msgstr ""
":mod:`logging`: o método ``warn()`` está obsoleto desde o Python 3.3, use :"
"meth:`~logging.warning` em vez disso."

#: ../../deprecations/pending-removal-in-future.rst:76
msgid ""
":mod:`mailbox`: Use of StringIO input and text mode is deprecated, use "
"BytesIO and binary mode instead."
msgstr ""
":mod:`mailbox`: O uso de entrada StringIO e modo de texto está obsoleto, use "
"BytesIO e modo binário em vez disso."

#: ../../deprecations/pending-removal-in-future.rst:79
msgid ""
":mod:`os`: Calling :func:`os.register_at_fork` in multi-threaded process."
msgstr ""
":mod:`os`: Chamar :func:`os.register_at_fork` num processo multi-thread."

#: ../../deprecations/pending-removal-in-future.rst:81
msgid ""
":class:`!pydoc.ErrorDuringImport`: A tuple value for *exc_info* parameter is "
"deprecated, use an exception instance."
msgstr ""
":class:`!pydoc.ErrorDuringImport`: Um valor de tuplo para o parâmetro "
"*exc_info* está obsoleto, use uma instância de exceção."

#: ../../deprecations/pending-removal-in-future.rst:84
msgid ""
":mod:`re`: More strict rules are now applied for numerical group references "
"and group names in regular expressions.  Only sequence of ASCII digits is "
"now accepted as a numerical reference.  The group name in bytes patterns and "
"replacement strings can now only contain ASCII letters and digits and "
"underscore. (Contributed by Serhiy Storchaka in :gh:`91760`.)"
msgstr ""
":mod:`re`: Regras mais estritas são agora aplicadas para referências de "
"grupo numéricas e nomes de grupo em expressões regulares. Apenas sequências "
"de dígitos ASCII são agora aceites como referência numérica. O nome do grupo "
"em padrões de bytes e strings de substituição pode agora conter apenas "
"letras ASCII, dígitos e sublinhado. (Contribuído por Serhiy Storchaka em :gh:"
"`91760`.)"

#: ../../deprecations/pending-removal-in-future.rst:91
msgid ""
":mod:`!sre_compile`, :mod:`!sre_constants` and :mod:`!sre_parse` modules."
msgstr ""
"Módulos :mod:`!sre_compile`, :mod:`!sre_constants` e :mod:`!sre_parse`."

#: ../../deprecations/pending-removal-in-future.rst:93
msgid ""
":mod:`shutil`: :func:`~shutil.rmtree`'s *onerror* parameter is deprecated in "
"Python 3.12; use the *onexc* parameter instead."
msgstr ""
":mod:`shutil`: O parâmetro *onerror* de :func:`~shutil.rmtree` está obsoleto "
"no Python 3.12; use o parâmetro *onexc* em vez disso."

#: ../../deprecations/pending-removal-in-future.rst:96
msgid ":mod:`ssl` options and protocols:"
msgstr "Opções e protocolos :mod:`ssl`:"

#: ../../deprecations/pending-removal-in-future.rst:98
msgid ":class:`ssl.SSLContext` without protocol argument is deprecated."
msgstr ":class:`ssl.SSLContext` sem argumento de protocolo está obsoleto."

#: ../../deprecations/pending-removal-in-future.rst:99
msgid ""
":class:`ssl.SSLContext`: :meth:`~ssl.SSLContext.set_npn_protocols` and :meth:"
"`!selected_npn_protocol` are deprecated: use ALPN instead."
msgstr ""
":class:`ssl.SSLContext`: :meth:`~ssl.SSLContext.set_npn_protocols` e :meth:`!"
"selected_npn_protocol` estão obsoletos: use ALPN em vez disso."

#: ../../deprecations/pending-removal-in-future.rst:102
msgid "``ssl.OP_NO_SSL*`` options"
msgstr "Opções ``ssl.OP_NO_SSL*``"

#: ../../deprecations/pending-removal-in-future.rst:103
msgid "``ssl.OP_NO_TLS*`` options"
msgstr "Opções ``ssl.OP_NO_TLS*``"

#: ../../deprecations/pending-removal-in-future.rst:104
msgid "``ssl.PROTOCOL_SSLv3``"
msgstr "``ssl.PROTOCOL_SSLv3``"

#: ../../deprecations/pending-removal-in-future.rst:105
msgid "``ssl.PROTOCOL_TLS``"
msgstr "``ssl.PROTOCOL_TLS``"

#: ../../deprecations/pending-removal-in-future.rst:106
msgid "``ssl.PROTOCOL_TLSv1``"
msgstr "``ssl.PROTOCOL_TLSv1``"

#: ../../deprecations/pending-removal-in-future.rst:107
msgid "``ssl.PROTOCOL_TLSv1_1``"
msgstr "``ssl.PROTOCOL_TLSv1_1``"

#: ../../deprecations/pending-removal-in-future.rst:108
msgid "``ssl.PROTOCOL_TLSv1_2``"
msgstr "``ssl.PROTOCOL_TLSv1_2``"

#: ../../deprecations/pending-removal-in-future.rst:109
msgid "``ssl.TLSVersion.SSLv3``"
msgstr "``ssl.TLSVersion.SSLv3``"

#: ../../deprecations/pending-removal-in-future.rst:110
msgid "``ssl.TLSVersion.TLSv1``"
msgstr "``ssl.TLSVersion.TLSv1``"

#: ../../deprecations/pending-removal-in-future.rst:111
msgid "``ssl.TLSVersion.TLSv1_1``"
msgstr "``ssl.TLSVersion.TLSv1_1``"

#: ../../deprecations/pending-removal-in-future.rst:113
msgid ":mod:`threading` methods:"
msgstr "Métodos :mod:`threading`:"

#: ../../deprecations/pending-removal-in-future.rst:115
msgid ""
":meth:`!threading.Condition.notifyAll`: use :meth:`~threading.Condition."
"notify_all`."
msgstr ""
":meth:`!threading.Condition.notifyAll`: use :meth:`~threading.Condition."
"notify_all`."

#: ../../deprecations/pending-removal-in-future.rst:116
msgid ":meth:`!threading.Event.isSet`: use :meth:`~threading.Event.is_set`."
msgstr ":meth:`!threading.Event.isSet`: use :meth:`~threading.Event.is_set`."

#: ../../deprecations/pending-removal-in-future.rst:117
msgid ""
":meth:`!threading.Thread.isDaemon`, :meth:`threading.Thread.setDaemon`: use :"
"attr:`threading.Thread.daemon` attribute."
msgstr ""
":meth:`!threading.Thread.isDaemon`, :meth:`threading.Thread.setDaemon`: use "
"o atributo :attr:`threading.Thread.daemon`."

#: ../../deprecations/pending-removal-in-future.rst:119
msgid ""
":meth:`!threading.Thread.getName`, :meth:`threading.Thread.setName`: use :"
"attr:`threading.Thread.name` attribute."
msgstr ""
":meth:`!threading.Thread.getName`, :meth:`threading.Thread.setName`: use o "
"atributo :attr:`threading.Thread.name`."

#: ../../deprecations/pending-removal-in-future.rst:121
msgid ":meth:`!threading.currentThread`: use :meth:`threading.current_thread`."
msgstr ""
":meth:`!threading.currentThread`: use :meth:`threading.current_thread`."

#: ../../deprecations/pending-removal-in-future.rst:122
msgid ":meth:`!threading.activeCount`: use :meth:`threading.active_count`."
msgstr ":meth:`!threading.activeCount`: use :meth:`threading.active_count`."

#: ../../deprecations/pending-removal-in-future.rst:124
msgid ":class:`typing.Text` (:gh:`92332`)."
msgstr ":class:`typing.Text` (:gh:`92332`)."

#: ../../deprecations/pending-removal-in-future.rst:126
msgid ""
"The internal class ``typing._UnionGenericAlias`` is no longer used to "
"implement :class:`typing.Union`. To preserve compatibility with users using "
"this private class, a compatibility shim will be provided until at least "
"Python 3.17. (Contributed by Jelle Zijlstra in :gh:`105499`.)"
msgstr ""
"A classe interna ``typing._UnionGenericAlias`` já não é usada para "
"implementar :class:`typing.Union`. Para preservar a compatibilidade com "
"utilizadores que usam esta classe privada, será fornecido um adaptador de "
"compatibilidade até pelo menos o Python 3.17. (Contribuído por Jelle "
"Zijlstra em :gh:`105499`.)"

#: ../../deprecations/pending-removal-in-future.rst:131
msgid ""
":class:`unittest.IsolatedAsyncioTestCase`: it is deprecated to return a "
"value that is not ``None`` from a test case."
msgstr ""
":class:`unittest.IsolatedAsyncioTestCase`: está obsoleto retornar um valor "
"que não seja ``None`` a partir de um caso de teste."

#: ../../deprecations/pending-removal-in-future.rst:134
msgid ""
":mod:`urllib.parse` deprecated functions: :func:`~urllib.parse.urlparse` "
"instead"
msgstr ""
"Funções obsoletas de :mod:`urllib.parse`: use :func:`~urllib.parse.urlparse` "
"em vez disso"

#: ../../deprecations/pending-removal-in-future.rst:136
msgid "``splitattr()``"
msgstr "``splitattr()``"

#: ../../deprecations/pending-removal-in-future.rst:137
msgid "``splithost()``"
msgstr "``splithost()``"

#: ../../deprecations/pending-removal-in-future.rst:138
msgid "``splitnport()``"
msgstr "``splitnport()``"

#: ../../deprecations/pending-removal-in-future.rst:139
msgid "``splitpasswd()``"
msgstr "``splitpasswd()``"

#: ../../deprecations/pending-removal-in-future.rst:140
msgid "``splitport()``"
msgstr "``splitport()``"

#: ../../deprecations/pending-removal-in-future.rst:141
msgid "``splitquery()``"
msgstr "``splitquery()``"

#: ../../deprecations/pending-removal-in-future.rst:142
msgid "``splittag()``"
msgstr "``splittag()``"

#: ../../deprecations/pending-removal-in-future.rst:143
msgid "``splittype()``"
msgstr "``splittype()``"

#: ../../deprecations/pending-removal-in-future.rst:144
msgid "``splituser()``"
msgstr "``splituser()``"

#: ../../deprecations/pending-removal-in-future.rst:145
msgid "``splitvalue()``"
msgstr "``splitvalue()``"

#: ../../deprecations/pending-removal-in-future.rst:146
msgid "``to_bytes()``"
msgstr "``to_bytes()``"

#: ../../deprecations/pending-removal-in-future.rst:148
msgid ""
":mod:`wsgiref`: ``SimpleHandler.stdout.write()`` should not do partial "
"writes."
msgstr ""
":mod:`wsgiref`: ``SimpleHandler.stdout.write()`` não deve fazer escritas "
"parciais."

#: ../../deprecations/pending-removal-in-future.rst:151
msgid ""
":mod:`xml.etree.ElementTree`: Testing the truth value of an :class:`~xml."
"etree.ElementTree.Element` is deprecated. In a future release it will always "
"return ``True``. Prefer explicit ``len(elem)`` or ``elem is not None`` tests "
"instead."
msgstr ""
":mod:`xml.etree.ElementTree`: Testar o valor de verdade de um :class:`~xml."
"etree.ElementTree.Element` está obsoleto. Numa versão futura, sempre "
"retornará ``True``. Prefira testes explícitos como ``len(elem)`` ou ``elem "
"is not None`` em vez disso."

#: ../../deprecations/pending-removal-in-future.rst:156
msgid ""
":func:`sys._clear_type_cache` is deprecated: use :func:`sys."
"_clear_internal_caches` instead."
msgstr ""
":func:`sys._clear_type_cache` está obsoleta: use :func:`sys."
"_clear_internal_caches` em vez disso."

#: ../../whatsnew/3.12.rst:1371 ../../whatsnew/3.12.rst:2255
msgid "Removed"
msgstr "Removido"

#: ../../whatsnew/3.12.rst:1374
msgid "asynchat and asyncore"
msgstr "asynchat e asyncore"

#: ../../whatsnew/3.12.rst:1376
msgid ""
"These two modules have been removed according to the schedule in :pep:`594`, "
"having been deprecated in Python 3.6. Use :mod:`asyncio` instead. "
"(Contributed by Nikita Sobolev in :gh:`96580`.)"
msgstr ""
"Estes dois módulos foram removidos de acordo com o cronograma na :pep:`594`, "
"tendo sido obsoletos desde o Python 3.6. Use :mod:`asyncio` em vez disso. "
"(Contribuído por Nikita Sobolev em :gh:`96580`.)"

#: ../../whatsnew/3.12.rst:1383
msgid "configparser"
msgstr "configparser"

#: ../../whatsnew/3.12.rst:1385
msgid ""
"Several names deprecated in the :mod:`configparser` way back in 3.2 have "
"been removed per :gh:`89336`:"
msgstr ""
"Vários nomes obsoletos no :mod:`configparser` desde a versão 3.2 foram "
"removidos conforme :gh:`89336`:"

#: ../../whatsnew/3.12.rst:1388
msgid ""
":class:`configparser.ParsingError` no longer has a ``filename`` attribute or "
"argument. Use the ``source`` attribute and argument instead."
msgstr ""
":class:`configparser.ParsingError` já não tem um atributo ou argumento "
"``filename``. Use o atributo e argumento ``source`` em vez disso."

#: ../../whatsnew/3.12.rst:1390
msgid ""
":mod:`configparser` no longer has a ``SafeConfigParser`` class. Use the "
"shorter :class:`~configparser.ConfigParser` name instead."
msgstr ""
":mod:`configparser` já não tem uma classe ``SafeConfigParser``. Use o nome "
"mais curto :class:`~configparser.ConfigParser` em vez disso."

#: ../../whatsnew/3.12.rst:1392
msgid ""
":class:`configparser.ConfigParser` no longer has a ``readfp`` method. Use :"
"meth:`~configparser.ConfigParser.read_file` instead."
msgstr ""
":class:`configparser.ConfigParser` já não tem um método ``readfp``. Use :"
"meth:`~configparser.ConfigParser.read_file` em vez disso."

#: ../../whatsnew/3.12.rst:1398
msgid "distutils"
msgstr "distutils"

#: ../../whatsnew/3.12.rst:1400
msgid ""
"Remove the :py:mod:`!distutils` package. It was deprecated in Python 3.10 "
"by :pep:`632` \"Deprecate distutils module\". For projects still using "
"``distutils`` and cannot be updated to something else, the ``setuptools`` "
"project can be installed: it still provides ``distutils``. (Contributed by "
"Victor Stinner in :gh:`92584`.)"
msgstr ""
"Remover o pacote :py:mod:`!distutils`. Foi obsoleto no Python 3.10 pela :pep:"
"`632` \"Deprecate distutils module\". Para projetos que ainda usam "
"``distutils`` e não podem ser atualizados para outra coisa, o projeto "
"``setuptools`` pode ser instalado: ainda fornece ``distutils``. (Contribuído "
"por Victor Stinner em :gh:`92584`.)"

#: ../../whatsnew/3.12.rst:1407
msgid "ensurepip"
msgstr "ensurepip"

#: ../../whatsnew/3.12.rst:1409
msgid ""
"Remove the bundled setuptools wheel from :mod:`ensurepip`, and stop "
"installing setuptools in environments created by :mod:`venv`."
msgstr ""
"Remover a roda setuptools em pacote de :mod:`ensurepip` e parar de instalar "
"setuptools em ambientes criados por :mod:`venv`."

#: ../../whatsnew/3.12.rst:1412
msgid ""
"``pip (>= 22.1)`` does not require setuptools to be installed in the "
"environment. ``setuptools``-based (and ``distutils``-based) packages can "
"still be used with ``pip install``, since pip will provide ``setuptools`` in "
"the build environment it uses for building a package."
msgstr ""
"``pip (>= 22.1)`` não requer que setuptools esteja instalado no ambiente. "
"``setuptools``-based (and ``distutils``-based) packages can still be used "
"with ``pip install``, uma vez que o pip fornecerá ``setuptools`` no ambiente "
"de construção que usa para construir um pacote."

#: ../../whatsnew/3.12.rst:1418
msgid ""
"``easy_install``, ``pkg_resources``, ``setuptools`` and ``distutils`` are no "
"longer provided by default in environments created with ``venv`` or "
"bootstrapped with ``ensurepip``, since they are part of the ``setuptools`` "
"package. For projects relying on these at runtime, the ``setuptools`` "
"project should be declared as a dependency and installed separately "
"(typically, using pip)."
msgstr ""
"``easy_install``, ``pkg_resources``, ``setuptools`` e ``distutils`` já não "
"são fornecidos por predefinição em ambientes criados com ``venv`` ou "
"inicializados com ``ensurepip``, uma vez que fazem parte do pacote "
"``setuptools``. Para projetos que dependem destes em tempo de execução, o "
"projeto ``setuptools`` deve ser declarado como uma dependência e instalado "
"separadamente (normalmente, usando pip)."

#: ../../whatsnew/3.12.rst:1425
msgid "(Contributed by Pradyun Gedam in :gh:`95299`.)"
msgstr "(Contribuído por Pradyun Gedam em :gh:`95299`.)"

#: ../../whatsnew/3.12.rst:1428
msgid "enum"
msgstr "enum"

#: ../../whatsnew/3.12.rst:1430
msgid ""
"Remove :mod:`enum`'s ``EnumMeta.__getattr__``, which is no longer needed for "
"enum attribute access. (Contributed by Ethan Furman in :gh:`95083`.)"
msgstr ""
"Remover ``EnumMeta.__getattr__`` de :mod:`enum`, que já não é necessário "
"para acesso a atributos de enum. (Contribuído por Ethan Furman em :gh:"
"`95083`.)"

#: ../../whatsnew/3.12.rst:1435
msgid "ftplib"
msgstr "ftplib"

#: ../../whatsnew/3.12.rst:1437
msgid ""
"Remove :mod:`ftplib`'s ``FTP_TLS.ssl_version`` class attribute: use the "
"*context* parameter instead. (Contributed by Victor Stinner in :gh:`94172`.)"
msgstr ""
"Remover o atributo de classe ``FTP_TLS.ssl_version`` de :mod:`ftplib`: use o "
"parâmetro *context* em vez disso. (Contribuído por Victor Stinner em :gh:"
"`94172`.)"

#: ../../whatsnew/3.12.rst:1442
msgid "gzip"
msgstr "gzip"

#: ../../whatsnew/3.12.rst:1444
msgid ""
"Remove the ``filename`` attribute of :mod:`gzip`'s :class:`gzip.GzipFile`, "
"deprecated since Python 2.6, use the :attr:`~gzip.GzipFile.name` attribute "
"instead. In write mode, the ``filename`` attribute added ``'.gz'`` file "
"extension if it was not present. (Contributed by Victor Stinner in :gh:"
"`94196`.)"
msgstr ""
"Remover o atributo ``filename`` de :class:`gzip.GzipFile` de :mod:`gzip`, "
"obsoleto desde o Python 2.6, use o atributo :attr:`~gzip.GzipFile.name` em "
"vez disso. No modo de escrita, o atributo ``filename`` adicionava a extensão "
"de ficheiro ``'.gz'`` se não estivesse presente. (Contribuído por Victor "
"Stinner em :gh:`94196`.)"

#: ../../whatsnew/3.12.rst:1451
msgid "hashlib"
msgstr "hashlib"

#: ../../whatsnew/3.12.rst:1453
msgid ""
"Remove the pure Python implementation of :mod:`hashlib`'s :func:`hashlib."
"pbkdf2_hmac`, deprecated in Python 3.10. Python 3.10 and newer requires "
"OpenSSL 1.1.1 (:pep:`644`): this OpenSSL version provides a C implementation "
"of :func:`~hashlib.pbkdf2_hmac` which is faster. (Contributed by Victor "
"Stinner in :gh:`94199`.)"
msgstr ""
"Remover a implementação pura em Python de :func:`hashlib.pbkdf2_hmac` de :"
"mod:`hashlib`, obsoleta desde o Python 3.10. O Python 3.10 e versões mais "
"recentes requerem OpenSSL 1.1.1 (:pep:`644`): esta versão do OpenSSL fornece "
"uma implementação em C de :func:`~hashlib.pbkdf2_hmac` que é mais rápida. "
"(Contribuído por Victor Stinner em :gh:`94199`.)"

#: ../../whatsnew/3.12.rst:1460 ../../whatsnew/3.12.rst:1489
msgid "importlib"
msgstr "importlib"

#: ../../whatsnew/3.12.rst:1462
msgid ""
"Many previously deprecated cleanups in :mod:`importlib` have now been "
"completed:"
msgstr ""
"Muitas limpezas previamente obsoletas em :mod:`importlib` foram agora "
"concluídas:"

#: ../../whatsnew/3.12.rst:1465
msgid ""
"References to, and support for :meth:`!module_repr` has been removed. "
"(Contributed by Barry Warsaw in :gh:`97850`.)"
msgstr ""
"Referências e suporte para :meth:`!module_repr` foram removidos. "
"(Contribuído por Barry Warsaw em :gh:`97850`.)"

#: ../../whatsnew/3.12.rst:1468
msgid ""
"``importlib.util.set_package``, ``importlib.util.set_loader`` and "
"``importlib.util.module_for_loader`` have all been removed. (Contributed by "
"Brett Cannon and Nikita Sobolev in :gh:`65961` and :gh:`97850`.)"
msgstr ""
"``importlib.util.set_package``, ``importlib.util.set_loader`` e ``importlib."
"util.module_for_loader`` foram todos removidos. (Contribuído por Brett "
"Cannon e Nikita Sobolev em :gh:`65961` e :gh:`97850`.)"

#: ../../whatsnew/3.12.rst:1472
msgid ""
"Support for ``find_loader()`` and ``find_module()`` APIs have been removed.  "
"(Contributed by Barry Warsaw in :gh:`98040`.)"
msgstr ""
"O suporte para as APIs ``find_loader()`` e ``find_module()`` foi removido. "
"(Contribuído por Barry Warsaw em :gh:`98040`.)"

#: ../../whatsnew/3.12.rst:1475
msgid ""
"``importlib.abc.Finder``, ``pkgutil.ImpImporter``, and ``pkgutil.ImpLoader`` "
"have been removed.  (Contributed by Barry Warsaw in :gh:`98040`.)"
msgstr ""
"``importlib.abc.Finder``, ``pkgutil.ImpImporter`` e ``pkgutil.ImpLoader`` "
"foram removidos. (Contribuído por Barry Warsaw em :gh:`98040`.)"

#: ../../whatsnew/3.12.rst:1481 ../../whatsnew/3.12.rst:1489
msgid "imp"
msgstr "imp"

#: ../../whatsnew/3.12.rst:1483
msgid ""
"The :mod:`!imp` module has been removed.  (Contributed by Barry Warsaw in :"
"gh:`98040`.)"
msgstr ""
"O módulo :mod:`!imp` foi removido. (Contribuído por Barry Warsaw em :gh:"
"`98040`.)"

#: ../../whatsnew/3.12.rst:1486
msgid "To migrate, consult the following correspondence table:"
msgstr "Para migrar, consulte a seguinte tabela de correspondência:"

#: ../../whatsnew/3.12.rst:1491
msgid "``imp.NullImporter``"
msgstr "``imp.NullImporter``"

#: ../../whatsnew/3.12.rst:1491
msgid "Insert ``None`` into ``sys.path_importer_cache``"
msgstr "Inserir ``None`` em ``sys.path_importer_cache``"

#: ../../whatsnew/3.12.rst:1492
msgid "``imp.cache_from_source()``"
msgstr "``imp.cache_from_source()``"

#: ../../whatsnew/3.12.rst:1492
msgid ":func:`importlib.util.cache_from_source`"
msgstr ":func:`importlib.util.cache_from_source`"

#: ../../whatsnew/3.12.rst:1493
msgid "``imp.find_module()``"
msgstr "``imp.find_module()``"

#: ../../whatsnew/3.12.rst:1493
msgid ":func:`importlib.util.find_spec`"
msgstr ":func:`importlib.util.find_spec`"

#: ../../whatsnew/3.12.rst:1494
msgid "``imp.get_magic()``"
msgstr "``imp.get_magic()``"

#: ../../whatsnew/3.12.rst:1494
msgid ":const:`importlib.util.MAGIC_NUMBER`"
msgstr ":const:`importlib.util.MAGIC_NUMBER`"

#: ../../whatsnew/3.12.rst:1495
msgid "``imp.get_suffixes()``"
msgstr "``imp.get_suffixes()``"

#: ../../whatsnew/3.12.rst:1495
msgid ""
":const:`importlib.machinery.SOURCE_SUFFIXES`, :const:`importlib.machinery."
"EXTENSION_SUFFIXES`, and :const:`importlib.machinery.BYTECODE_SUFFIXES`"
msgstr ""
":const:`importlib.machinery.SOURCE_SUFFIXES`, :const:`importlib.machinery."
"EXTENSION_SUFFIXES` e :const:`importlib.machinery.BYTECODE_SUFFIXES`"

#: ../../whatsnew/3.12.rst:1496
msgid "``imp.get_tag()``"
msgstr "``imp.get_tag()``"

#: ../../whatsnew/3.12.rst:1496
msgid ":attr:`sys.implementation.cache_tag <sys.implementation>`"
msgstr ":attr:`sys.implementation.cache_tag <sys.implementation>`"

#: ../../whatsnew/3.12.rst:1497
msgid "``imp.load_module()``"
msgstr "``imp.load_module()``"

#: ../../whatsnew/3.12.rst:1497
msgid ":func:`importlib.import_module`"
msgstr ":func:`importlib.import_module`"

#: ../../whatsnew/3.12.rst:1498
msgid "``imp.new_module(name)``"
msgstr "``imp.new_module(name)``"

#: ../../whatsnew/3.12.rst:1498
msgid "``types.ModuleType(name)``"
msgstr "``types.ModuleType(name)``"

#: ../../whatsnew/3.12.rst:1499
msgid "``imp.reload()``"
msgstr "``imp.reload()``"

#: ../../whatsnew/3.12.rst:1499
msgid ":func:`importlib.reload`"
msgstr ":func:`importlib.reload`"

#: ../../whatsnew/3.12.rst:1500
msgid "``imp.source_from_cache()``"
msgstr "``imp.source_from_cache()``"

#: ../../whatsnew/3.12.rst:1500
msgid ":func:`importlib.util.source_from_cache`"
msgstr ":func:`importlib.util.source_from_cache`"

#: ../../whatsnew/3.12.rst:1501
msgid "``imp.load_source()``"
msgstr "``imp.load_source()``"

#: ../../whatsnew/3.12.rst:1501
msgid "*See below*"
msgstr "*Veja abaixo*"

#: ../../whatsnew/3.12.rst:1504
msgid "Replace ``imp.load_source()`` with::"
msgstr "Substitua ``imp.load_source()`` por::"

#: ../../whatsnew/3.12.rst:1506
msgid ""
"import importlib.util\n"
"import importlib.machinery\n"
"\n"
"def load_source(modname, filename):\n"
"    loader = importlib.machinery.SourceFileLoader(modname, filename)\n"
"    spec = importlib.util.spec_from_file_location(modname, filename, "
"loader=loader)\n"
"    module = importlib.util.module_from_spec(spec)\n"
"    # The module is always executed and not cached in sys.modules.\n"
"    # Uncomment the following line to cache the module.\n"
"    # sys.modules[module.__name__] = module\n"
"    loader.exec_module(module)\n"
"    return module"
msgstr ""
"import importlib.util\n"
"import importlib.machinery\n"
"\n"
"def load_source(modname, filename):\n"
"    loader = importlib.machinery.SourceFileLoader(modname, filename)\n"
"    spec = importlib.util.spec_from_file_location(modname, filename, "
"loader=loader)\n"
"    module = importlib.util.module_from_spec(spec)\n"
"    # O módulo é sempre executado e não é guardado em cache em sys.modules.\n"
"    # Descomente a linha seguinte para guardar o módulo em cache.\n"
"    # sys.modules[module.__name__] = module\n"
"    loader.exec_module(module)\n"
"    return module"

#: ../../whatsnew/3.12.rst:1519
msgid "Remove :mod:`!imp` functions and attributes with no replacements:"
msgstr "Remover funções e atributos :mod:`!imp` sem substituições:"

#: ../../whatsnew/3.12.rst:1521
msgid "Undocumented functions:"
msgstr "Funções indocumentadas:"

#: ../../whatsnew/3.12.rst:1523
msgid "``imp.init_builtin()``"
msgstr "``imp.init_builtin()``"

#: ../../whatsnew/3.12.rst:1524
msgid "``imp.load_compiled()``"
msgstr "``imp.load_compiled()``"

#: ../../whatsnew/3.12.rst:1525
msgid "``imp.load_dynamic()``"
msgstr "``imp.load_dynamic()``"

#: ../../whatsnew/3.12.rst:1526
msgid "``imp.load_package()``"
msgstr "``imp.load_package()``"

#: ../../whatsnew/3.12.rst:1528
msgid ""
"``imp.lock_held()``, ``imp.acquire_lock()``, ``imp.release_lock()``: the "
"locking scheme has changed in Python 3.3 to per-module locks."
msgstr ""
"``imp.lock_held()``, ``imp.acquire_lock()``, ``imp.release_lock()``: o "
"esquema de bloqueio mudou no Python 3.3 para bloqueios por módulo."

#: ../../whatsnew/3.12.rst:1530
msgid ""
"``imp.find_module()`` constants: ``SEARCH_ERROR``, ``PY_SOURCE``, "
"``PY_COMPILED``, ``C_EXTENSION``, ``PY_RESOURCE``, ``PKG_DIRECTORY``, "
"``C_BUILTIN``, ``PY_FROZEN``, ``PY_CODERESOURCE``, ``IMP_HOOK``."
msgstr ""
"Constantes ``imp.find_module()``: ``SEARCH_ERROR``, ``PY_SOURCE``, "
"``PY_COMPILED``, ``C_EXTENSION``, ``PY_RESOURCE``, ``PKG_DIRECTORY``, "
"``C_BUILTIN``, ``PY_FROZEN``, ``PY_CODERESOURCE``, ``IMP_HOOK``."

#: ../../whatsnew/3.12.rst:1535
msgid "io"
msgstr "io"

#: ../../whatsnew/3.12.rst:1537
msgid ""
"Remove :mod:`io`'s ``io.OpenWrapper`` and ``_pyio.OpenWrapper``, deprecated "
"in Python 3.10: just use :func:`open` instead. The :func:`open` (:func:`io."
"open`) function is a built-in function. Since Python 3.10, :func:`!_pyio."
"open` is also a static method. (Contributed by Victor Stinner in :gh:"
"`94169`.)"
msgstr ""
"Remover ``io.OpenWrapper`` e ``_pyio.OpenWrapper`` de :mod:`io`, obsoletos "
"desde o Python 3.10: use simplesmente :func:`open` em vez disso. A função :"
"func:`open` (:func:`io.open`) é uma função integrada. Desde o Python 3.10, :"
"func:`!_pyio.open` também é um método estático. (Contribuído por Victor "
"Stinner em :gh:`94169`.)"

#: ../../whatsnew/3.12.rst:1544
msgid "locale"
msgstr "locale"

#: ../../whatsnew/3.12.rst:1546
msgid ""
"Remove :mod:`locale`'s :func:`!locale.format` function, deprecated in Python "
"3.7: use :func:`locale.format_string` instead. (Contributed by Victor "
"Stinner in :gh:`94226`.)"
msgstr ""
"Remover a função :func:`!locale.format` de :mod:`locale`, obsoleta desde o "
"Python 3.7: use :func:`locale.format_string` em vez disso. (Contribuído por "
"Victor Stinner em :gh:`94226`.)"

#: ../../whatsnew/3.12.rst:1551
msgid "smtpd"
msgstr "smtpd"

#: ../../whatsnew/3.12.rst:1553
msgid ""
"The ``smtpd`` module has been removed according to the schedule in :pep:"
"`594`, having been deprecated in Python 3.4.7 and 3.5.4. Use the :pypi:"
"`aiosmtpd` PyPI module or any other :mod:`asyncio`-based server instead. "
"(Contributed by Oleg Iarygin in :gh:`93243`.)"
msgstr ""
"O módulo ``smtpd`` foi removido de acordo com o cronograma na :pep:`594`, "
"tendo sido obsoleto desde o Python 3.4.7 e 3.5.4. Use o módulo :pypi:"
"`aiosmtpd` do PyPI ou qualquer outro servidor baseado em :mod:`asyncio` em "
"vez disso. (Contribuído por Oleg Iarygin em :gh:`93243`.)"

#: ../../whatsnew/3.12.rst:1562
msgid ""
"The following undocumented :mod:`sqlite3` features, deprecated in Python "
"3.10, are now removed:"
msgstr ""
"As seguintes funcionalidades indocumentadas de :mod:`sqlite3`, obsoletas "
"desde o Python 3.10, foram agora removidas:"

#: ../../whatsnew/3.12.rst:1565
msgid "``sqlite3.enable_shared_cache()``"
msgstr "``sqlite3.enable_shared_cache()``"

#: ../../whatsnew/3.12.rst:1566
msgid "``sqlite3.OptimizedUnicode``"
msgstr "``sqlite3.OptimizedUnicode``"

#: ../../whatsnew/3.12.rst:1568
msgid ""
"If a shared cache must be used, open the database in URI mode using the "
"``cache=shared`` query parameter."
msgstr ""
"Se uma cache partilhada tiver de ser usada, abra a base de dados em modo URI "
"usando o parâmetro de consulta ``cache=shared``."

#: ../../whatsnew/3.12.rst:1571
msgid ""
"The ``sqlite3.OptimizedUnicode`` text factory has been an alias for :class:"
"`str` since Python 3.3. Code that previously set the text factory to "
"``OptimizedUnicode`` can either use ``str`` explicitly, or rely on the "
"default value which is also ``str``."
msgstr ""
"A fábrica de texto ``sqlite3.OptimizedUnicode`` tem sido um alias para :"
"class:`str` desde o Python 3.3. Código que anteriormente definia a fábrica "
"de texto para ``OptimizedUnicode`` pode usar ``str`` explicitamente ou "
"confiar no valor predefinido, que também é ``str``."

#: ../../whatsnew/3.12.rst:1576
msgid "(Contributed by Erlend E. Aasland in :gh:`92548`.)"
msgstr "(Contribuído por Erlend E. Aasland em :gh:`92548`.)"

#: ../../whatsnew/3.12.rst:1579
msgid "ssl"
msgstr "ssl"

#: ../../whatsnew/3.12.rst:1581
msgid ""
"Remove :mod:`ssl`'s :func:`!ssl.RAND_pseudo_bytes` function, deprecated in "
"Python 3.6: use :func:`os.urandom` or :func:`ssl.RAND_bytes` instead. "
"(Contributed by Victor Stinner in :gh:`94199`.)"
msgstr ""
"Remover a função :func:`!ssl.RAND_pseudo_bytes` de :mod:`ssl`, obsoleta "
"desde o Python 3.6: use :func:`os.urandom` ou :func:`ssl.RAND_bytes` em vez "
"disso. (Contribuído por Victor Stinner em :gh:`94199`.)"

#: ../../whatsnew/3.12.rst:1585
msgid ""
"Remove the :func:`!ssl.match_hostname` function. It was deprecated in Python "
"3.7. OpenSSL performs hostname matching since Python 3.7, Python no longer "
"uses the :func:`!ssl.match_hostname` function. (Contributed by Victor "
"Stinner in :gh:`94199`.)"
msgstr ""
"Remover a função :func:`!ssl.match_hostname`. Foi obsoleta desde o Python "
"3.7. O OpenSSL realiza a correspondência de nomes de anfitrião desde o "
"Python 3.7; o Python já não usa a função :func:`!ssl.match_hostname`. "
"(Contribuído por Victor Stinner em :gh:`94199`.)"

#: ../../whatsnew/3.12.rst:1591
msgid ""
"Remove the :func:`!ssl.wrap_socket` function, deprecated in Python 3.7: "
"instead, create a :class:`ssl.SSLContext` object and call its :class:`ssl."
"SSLContext.wrap_socket` method. Any package that still uses :func:`!ssl."
"wrap_socket` is broken and insecure. The function neither sends a SNI TLS "
"extension nor validates the server hostname. Code is subject to :cwe:`295` "
"(Improper Certificate Validation). (Contributed by Victor Stinner in :gh:"
"`94199`.)"
msgstr ""
"Remover a função :func:`!ssl.wrap_socket`, obsoleta desde o Python 3.7: em "
"vez disso, crie um objeto :class:`ssl.SSLContext` e chame o seu método :"
"class:`ssl.SSLContext.wrap_socket`. Qualquer pacote que ainda use :func:`!"
"ssl.wrap_socket` está quebrado e é inseguro. A função não envia uma extensão "
"TLS SNI nem valida o nome do anfitrião do servidor. O código está sujeito a :"
"cwe:`295` (Validação de Certificado Imprópria). (Contribuído por Victor "
"Stinner em :gh:`94199`.)"

#: ../../whatsnew/3.12.rst:1602
msgid "Remove many long-deprecated :mod:`unittest` features:"
msgstr ""
"Remover muitas funcionalidades obsoletas há muito tempo de :mod:`unittest`:"

#: ../../whatsnew/3.12.rst:1606
msgid "A number of :class:`~unittest.TestCase` method aliases:"
msgstr "Vários alias de métodos de :class:`~unittest.TestCase`:"

#: ../../whatsnew/3.12.rst:1609
msgid "Deprecated alias"
msgstr "Alias obsoleto"

#: ../../whatsnew/3.12.rst:1609
msgid "Method Name"
msgstr "Nome do método"

#: ../../whatsnew/3.12.rst:1609
msgid "Deprecated in"
msgstr "Obsoleto em"

#: ../../whatsnew/3.12.rst:1611
msgid "``failUnless``"
msgstr "``failUnless``"

#: ../../whatsnew/3.12.rst:1611 ../../whatsnew/3.12.rst:1618
msgid ":meth:`.assertTrue`"
msgstr ":meth:`.assertTrue`"

#: ../../whatsnew/3.12.rst:1611 ../../whatsnew/3.12.rst:1612
#: ../../whatsnew/3.12.rst:1613 ../../whatsnew/3.12.rst:1614
#: ../../whatsnew/3.12.rst:1615 ../../whatsnew/3.12.rst:1616
#: ../../whatsnew/3.12.rst:1617
msgid "3.1"
msgstr "3.1"

#: ../../whatsnew/3.12.rst:1612
msgid "``failIf``"
msgstr "``failIf``"

#: ../../whatsnew/3.12.rst:1612
msgid ":meth:`.assertFalse`"
msgstr ":meth:`.assertFalse`"

#: ../../whatsnew/3.12.rst:1613
msgid "``failUnlessEqual``"
msgstr "``failUnlessEqual``"

#: ../../whatsnew/3.12.rst:1613 ../../whatsnew/3.12.rst:1619
msgid ":meth:`.assertEqual`"
msgstr ":meth:`.assertEqual`"

#: ../../whatsnew/3.12.rst:1614
msgid "``failIfEqual``"
msgstr "``failIfEqual``"

#: ../../whatsnew/3.12.rst:1614 ../../whatsnew/3.12.rst:1620
msgid ":meth:`.assertNotEqual`"
msgstr ":meth:`.assertNotEqual`"

#: ../../whatsnew/3.12.rst:1615
msgid "``failUnlessAlmostEqual``"
msgstr "``failUnlessAlmostEqual``"

#: ../../whatsnew/3.12.rst:1615 ../../whatsnew/3.12.rst:1621
msgid ":meth:`.assertAlmostEqual`"
msgstr ":meth:`.assertAlmostEqual`"

#: ../../whatsnew/3.12.rst:1616
msgid "``failIfAlmostEqual``"
msgstr "``failIfAlmostEqual``"

#: ../../whatsnew/3.12.rst:1616 ../../whatsnew/3.12.rst:1622
msgid ":meth:`.assertNotAlmostEqual`"
msgstr ":meth:`.assertNotAlmostEqual`"

#: ../../whatsnew/3.12.rst:1617
msgid "``failUnlessRaises``"
msgstr "``failUnlessRaises``"

#: ../../whatsnew/3.12.rst:1617
msgid ":meth:`.assertRaises`"
msgstr ":meth:`.assertRaises`"

#: ../../whatsnew/3.12.rst:1618
msgid "``assert_``"
msgstr "``assert_``"

#: ../../whatsnew/3.12.rst:1618 ../../whatsnew/3.12.rst:1619
#: ../../whatsnew/3.12.rst:1620 ../../whatsnew/3.12.rst:1621
#: ../../whatsnew/3.12.rst:1622 ../../whatsnew/3.12.rst:1623
#: ../../whatsnew/3.12.rst:1624
msgid "3.2"
msgstr "3.2"

#: ../../whatsnew/3.12.rst:1619
msgid "``assertEquals``"
msgstr "``assertEquals``"

#: ../../whatsnew/3.12.rst:1620
msgid "``assertNotEquals``"
msgstr "``assertNotEquals``"

#: ../../whatsnew/3.12.rst:1621
msgid "``assertAlmostEquals``"
msgstr "``assertAlmostEquals``"

#: ../../whatsnew/3.12.rst:1622
msgid "``assertNotAlmostEquals``"
msgstr "``assertNotAlmostEquals``"

#: ../../whatsnew/3.12.rst:1623
msgid "``assertRegexpMatches``"
msgstr "``assertRegexpMatches``"

#: ../../whatsnew/3.12.rst:1623
msgid ":meth:`.assertRegex`"
msgstr ":meth:`.assertRegex`"

#: ../../whatsnew/3.12.rst:1624
msgid "``assertRaisesRegexp``"
msgstr "``assertRaisesRegexp``"

#: ../../whatsnew/3.12.rst:1624
msgid ":meth:`.assertRaisesRegex`"
msgstr ":meth:`.assertRaisesRegex`"

#: ../../whatsnew/3.12.rst:1625
msgid "``assertNotRegexpMatches``"
msgstr "``assertNotRegexpMatches``"

#: ../../whatsnew/3.12.rst:1625
msgid ":meth:`.assertNotRegex`"
msgstr ":meth:`.assertNotRegex`"

#: ../../whatsnew/3.12.rst:1625
msgid "3.5"
msgstr "3.5"

#: ../../whatsnew/3.12.rst:1628
msgid ""
"You can use https://github.com/isidentical/teyit to automatically modernise "
"your unit tests."
msgstr ""
"Pode usar https://github.com/isidentical/teyit para modernizar "
"automaticamente os seus testes unitários."

#: ../../whatsnew/3.12.rst:1631
msgid ""
"Undocumented and broken :class:`~unittest.TestCase` method "
"``assertDictContainsSubset`` (deprecated in Python 3.2)."
msgstr ""
"Método indocumentado e quebrado de :class:`~unittest.TestCase` "
"``assertDictContainsSubset`` (obsoleto desde o Python 3.2)."

#: ../../whatsnew/3.12.rst:1634
msgid ""
"Undocumented :meth:`TestLoader.loadTestsFromModule <unittest.TestLoader."
"loadTestsFromModule>` parameter *use_load_tests* (deprecated and ignored "
"since Python 3.5)."
msgstr ""
"Parâmetro indocumentado *use_load_tests* de :meth:`TestLoader."
"loadTestsFromModule <unittest.TestLoader.loadTestsFromModule>` (obsoleto e "
"ignorado desde o Python 3.5)."

#: ../../whatsnew/3.12.rst:1638
msgid ""
"An alias of the :class:`~unittest.TextTestResult` class: ``_TextTestResult`` "
"(deprecated in Python 3.2)."
msgstr ""
"Um alias da classe :class:`~unittest.TextTestResult`: ``_TextTestResult`` "
"(obsoleto desde o Python 3.2)."

#: ../../whatsnew/3.12.rst:1641
msgid "(Contributed by Serhiy Storchaka in :gh:`89325`.)"
msgstr "(Contribuído por Serhiy Storchaka em :gh:`89325`.)"

#: ../../whatsnew/3.12.rst:1644
msgid "webbrowser"
msgstr "webbrowser"

#: ../../whatsnew/3.12.rst:1646
msgid ""
"Remove support for obsolete browsers from :mod:`webbrowser`. The removed "
"browsers include: Grail, Mosaic, Netscape, Galeon, Skipstone, Iceape, "
"Firebird, and Firefox versions 35 and below (:gh:`102871`)."
msgstr ""
"Remover suporte para navegadores obsoletos de :mod:`webbrowser`. Os "
"navegadores removidos incluem: Grail, Mosaic, Netscape, Galeon, Skipstone, "
"Iceape, Firebird e versões do Firefox 35 e inferiores (:gh:`102871`)."

#: ../../whatsnew/3.12.rst:1651
msgid "xml.etree.ElementTree"
msgstr "xml.etree.ElementTree"

#: ../../whatsnew/3.12.rst:1653
msgid ""
"Remove the ``ElementTree.Element.copy()`` method of the pure Python "
"implementation, deprecated in Python 3.10, use the :func:`copy.copy` "
"function instead.  The C implementation of :mod:`xml.etree.ElementTree` has "
"no ``copy()`` method, only a ``__copy__()`` method. (Contributed by Victor "
"Stinner in :gh:`94383`.)"
msgstr ""
"Remover o método ``ElementTree.Element.copy()`` da implementação pura em "
"Python, obsoleto desde o Python 3.10, use a função :func:`copy.copy` em vez "
"disso. A implementação em C de :mod:`xml.etree.ElementTree` não tem um "
"método ``copy()``, apenas um método ``__copy__()``. (Contribuído por Victor "
"Stinner em :gh:`94383`.)"

#: ../../whatsnew/3.12.rst:1660
msgid "zipimport"
msgstr "zipimport"

#: ../../whatsnew/3.12.rst:1662
msgid ""
"Remove :mod:`zipimport`'s ``find_loader()`` and ``find_module()`` methods, "
"deprecated in Python 3.10: use the ``find_spec()`` method instead.  See :pep:"
"`451` for the rationale. (Contributed by Victor Stinner in :gh:`94379`.)"
msgstr ""
"Remover os métodos ``find_loader()`` e ``find_module()`` de :mod:"
"`zipimport`, obsoletos desde o Python 3.10: use o método ``find_spec()`` em "
"vez disso. Consulte :pep:`451` para a justificação. (Contribuído por Victor "
"Stinner em :gh:`94379`.)"

#: ../../whatsnew/3.12.rst:1668
msgid "Others"
msgstr "Outros"

#: ../../whatsnew/3.12.rst:1670
msgid ""
"Remove the ``suspicious`` rule from the documentation :file:`Makefile` and :"
"file:`Doc/tools/rstlint.py`, both in favor of `sphinx-lint <https://github."
"com/sphinx-contrib/sphinx-lint>`_. (Contributed by Julien Palard in :gh:"
"`98179`.)"
msgstr ""
"Remover a regra ``suspicious`` do :file:`Makefile` da documentação e do :"
"file:`Doc/tools/rstlint.py`, ambos em favor do `sphinx-lint <https://github."
"com/sphinx-contrib/sphinx-lint>`_. (Contribuído por Julien Palard em :gh:"
"`98179`.)"

#: ../../whatsnew/3.12.rst:1675
msgid ""
"Remove the *keyfile* and *certfile* parameters from the :mod:`ftplib`, :mod:"
"`imaplib`, :mod:`poplib` and :mod:`smtplib` modules, and the *key_file*, "
"*cert_file* and *check_hostname* parameters from the :mod:`http.client` "
"module, all deprecated since Python 3.6. Use the *context* parameter "
"(*ssl_context* in :mod:`imaplib`) instead. (Contributed by Victor Stinner "
"in :gh:`94172`.)"
msgstr ""
"Remover os parâmetros *keyfile* e *certfile* dos módulos :mod:`ftplib`, :mod:"
"`imaplib`, :mod:`poplib` e :mod:`smtplib`, e os parâmetros *key_file*, "
"*cert_file* e *check_hostname* do módulo :mod:`http.client`, todos obsoletos "
"desde o Python 3.6. Use o parâmetro *context* (*ssl_context* em :mod:"
"`imaplib`) em vez disso. (Contribuído por Victor Stinner em :gh:`94172`.)"

#: ../../whatsnew/3.12.rst:1683
msgid ""
"Remove ``Jython`` compatibility hacks from several stdlib modules and tests. "
"(Contributed by Nikita Sobolev in :gh:`99482`.)"
msgstr ""
"Remover hacks de compatibilidade com ``Jython`` de vários módulos e testes "
"da biblioteca padrão. (Contribuído por Nikita Sobolev em :gh:`99482`.)"

#: ../../whatsnew/3.12.rst:1686
msgid ""
"Remove ``_use_broken_old_ctypes_structure_semantics_`` flag from :mod:"
"`ctypes` module. (Contributed by Nikita Sobolev in :gh:`99285`.)"
msgstr ""
"Remover a flag ``_use_broken_old_ctypes_structure_semantics_`` do módulo :"
"mod:`ctypes`. (Contribuído por Nikita Sobolev em :gh:`99285`.)"

#: ../../whatsnew/3.12.rst:1694 ../../whatsnew/3.12.rst:2018
msgid "Porting to Python 3.12"
msgstr "Portar para o Python 3.12"

#: ../../whatsnew/3.12.rst:1696
msgid ""
"This section lists previously described changes and other bugfixes that may "
"require changes to your code."
msgstr ""
"Esta secção lista alterações previamente descritas e outras correções de "
"erros que podem exigir alterações no seu código."

#: ../../whatsnew/3.12.rst:1700
msgid "Changes in the Python API"
msgstr "Alterações na API do Python"

#: ../../whatsnew/3.12.rst:1702
msgid ""
"More strict rules are now applied for numerical group references and group "
"names in regular expressions. Only sequence of ASCII digits is now accepted "
"as a numerical reference. The group name in bytes patterns and replacement "
"strings can now only contain ASCII letters and digits and underscore. "
"(Contributed by Serhiy Storchaka in :gh:`91760`.)"
msgstr ""
"Regras mais estritas são agora aplicadas para referências de grupo numéricas "
"e nomes de grupo em expressões regulares. Apenas sequências de dígitos ASCII "
"são agora aceites como referência numérica. O nome do grupo em padrões de "
"bytes e strings de substituição pode agora conter apenas letras ASCII, "
"dígitos e sublinhado. (Contribuído por Serhiy Storchaka em :gh:`91760`.)"

#: ../../whatsnew/3.12.rst:1709
msgid ""
"Remove ``randrange()`` functionality deprecated since Python 3.10.  "
"Formerly, ``randrange(10.0)`` losslessly converted to ``randrange(10)``. "
"Now, it raises a :exc:`TypeError`. Also, the exception raised for non-"
"integer values such as ``randrange(10.5)`` or ``randrange('10')`` has been "
"changed from :exc:`ValueError` to :exc:`TypeError`.  This also prevents bugs "
"where ``randrange(1e25)`` would silently select from a larger range than "
"``randrange(10**25)``. (Originally suggested by Serhiy Storchaka :gh:"
"`86388`.)"
msgstr ""
"Remover a funcionalidade ``randrange()`` obsoleta desde o Python 3.10. "
"Anteriormente, ``randrange(10.0)`` era convertido sem perda para "
"``randrange(10)``. Agora, levanta um :exc:`TypeError`. Além disso, a exceção "
"levantada para valores não inteiros como ``randrange(10.5)`` ou "
"``randrange('10')`` foi alterada de :exc:`ValueError` para :exc:`TypeError`. "
"Isto também previne erros onde ``randrange(1e25)`` selecionaria "
"silenciosamente de um intervalo maior do que ``randrange(10**25)``. "
"(Originalmente sugerido por Serhiy Storchaka em :gh:`86388`.)"

#: ../../whatsnew/3.12.rst:1717
msgid ""
":class:`argparse.ArgumentParser` changed encoding and error handler for "
"reading arguments from file (e.g. ``fromfile_prefix_chars`` option) from "
"default text encoding (e.g. :func:`locale.getpreferredencoding(False) "
"<locale.getpreferredencoding>`) to :term:`filesystem encoding and error "
"handler`. Argument files should be encoded in UTF-8 instead of ANSI Codepage "
"on Windows."
msgstr ""
"A classe :class:`argparse.ArgumentParser` alterou a codificação e o gestor "
"de erros para a leitura de argumentos a partir de ficheiros (por exemplo, a "
"opção ``fromfile_prefix_chars``) da codificação de texto predefinida (por "
"exemplo, :func:`locale.getpreferredencoding(False) <locale."
"getpreferredencoding>`) para a :term:`codificação do sistema de ficheiros e "
"gestor de erros`. Os ficheiros de argumentos devem ser codificados em UTF-8 "
"em vez de ANSI Codepage no Windows."

#: ../../whatsnew/3.12.rst:1723
msgid ""
"Remove the ``asyncore``-based ``smtpd`` module deprecated in Python 3.4.7 "
"and 3.5.4.  A recommended replacement is the :mod:`asyncio`-based :pypi:"
"`aiosmtpd` PyPI module."
msgstr ""
"Removido o módulo ``asyncore``-based ``smtpd``, obsoleto desde o Python "
"3.4.7 e 3.5.4. A alternativa recomendada é o módulo :pypi:`aiosmtpd` baseado "
"em :mod:`asyncio`."

#: ../../whatsnew/3.12.rst:1727
msgid ""
":func:`shlex.split`: Passing ``None`` for *s* argument now raises an "
"exception, rather than reading :data:`sys.stdin`. The feature was deprecated "
"in Python 3.9. (Contributed by Victor Stinner in :gh:`94352`.)"
msgstr ""
"A função :func:`shlex.split` agora lança uma exceção ao receber ``None`` "
"como argumento *s*, em vez de ler :data:`sys.stdin`. Esta funcionalidade "
"estava obsoleta desde o Python 3.9. (Contribuição de Victor Stinner em :gh:"
"`94352`.)"

#: ../../whatsnew/3.12.rst:1732
msgid ""
"The :mod:`os` module no longer accepts bytes-like paths, like :class:"
"`bytearray` and :class:`memoryview` types: only the exact :class:`bytes` "
"type is accepted for bytes strings. (Contributed by Victor Stinner in :gh:"
"`98393`.)"
msgstr ""
"O módulo :mod:`os` já não aceita caminhos do tipo *bytes-like*, como :class:"
"`bytearray` e :class:`memoryview`: apenas o tipo exato :class:`bytes` é "
"aceite para strings de bytes. (Contribuição de Victor Stinner em :gh:"
"`98393`.)"

#: ../../whatsnew/3.12.rst:1737
msgid ""
":func:`syslog.openlog` and :func:`syslog.closelog` now fail if used in "
"subinterpreters. :func:`syslog.syslog` may still be used in subinterpreters, "
"but now only if :func:`syslog.openlog` has already been called in the main "
"interpreter. These new restrictions do not apply to the main interpreter, so "
"only a very small set of users might be affected. This change helps with "
"interpreter isolation.  Furthermore, :mod:`syslog` is a wrapper around "
"process-global resources, which are best managed from the main interpreter. "
"(Contributed by Donghee Na in :gh:`99127`.)"
msgstr ""
"As funções :func:`syslog.openlog` e :func:`syslog.closelog` agora falham se "
"usadas em subinterpretadores. A função :func:`syslog.syslog` ainda pode ser "
"usada em subinterpretadores, mas apenas se :func:`syslog.openlog` já tiver "
"sido chamada no interpretador principal. Estas novas restrições não se "
"aplicam ao interpretador principal, pelo que apenas um conjunto muito "
"reduzido de utilizadores poderá ser afetado. Esta alteração contribui para o "
"isolamento do interpretador. Além disso, o módulo :mod:`syslog` é um "
"*wrapper* em torno de recursos globais do processo, que são melhor geridos a "
"partir do interpretador principal. (Contribuição de Donghee Na em :gh:"
"`99127`.)"

#: ../../whatsnew/3.12.rst:1746
msgid ""
"The undocumented locking behavior of :func:`~functools.cached_property` is "
"removed, because it locked across all instances of the class, leading to "
"high lock contention. This means that a cached property getter function "
"could now run more than once for a single instance, if two threads race. For "
"most simple cached properties (e.g. those that are idempotent and simply "
"calculate a value based on other attributes of the instance) this will be "
"fine.  If synchronization is needed, implement locking within the cached "
"property getter function or around multi-threaded access points."
msgstr ""
"O comportamento de bloqueio não documentado de :func:`~functools."
"cached_property` foi removido, uma vez que bloqueava todas as instâncias da "
"classe, causando alta contensão de bloqueios. Isto significa que uma função "
"*getter* de uma propriedade em cache pode agora ser executada mais do que "
"uma vez para uma única instância, se duas *threads* competirem. Para a "
"maioria das propriedades em cache simples (por exemplo, aquelas que são "
"idempotentes e simplesmente calculam um valor com base noutros atributos da "
"instância), isto não será problemático. Se for necessária sincronização, "
"implemente o bloqueio dentro da função *getter* da propriedade em cache ou "
"em pontos de acesso multithread."

#: ../../whatsnew/3.12.rst:1759
msgid ""
"When extracting tar files using :mod:`tarfile` or :func:`shutil."
"unpack_archive`, pass the *filter* argument to limit features that may be "
"surprising or dangerous. See :ref:`tarfile-extraction-filter` for details."
msgstr ""
"Ao extrair ficheiros tar usando :mod:`tarfile` ou :func:`shutil."
"unpack_archive`, passe o argumento *filter* para limitar funcionalidades que "
"possam ser surpreendentes ou perigosas. Consulte :ref:`tarfile-extraction-"
"filter` para mais detalhes."

#: ../../whatsnew/3.12.rst:1764
msgid ""
"The output of the :func:`tokenize.tokenize` and :func:`tokenize."
"generate_tokens` functions is now changed due to the changes introduced in :"
"pep:`701`. This means that ``STRING`` tokens are not emitted any more for f-"
"strings and the tokens described in :pep:`701` are now produced instead: "
"``FSTRING_START``, ``FSTRING_MIDDLE`` and ``FSTRING_END`` are now emitted "
"for f-string \"string\" parts in addition to the appropriate tokens for the "
"tokenization in the expression components. For example for the f-string "
"``f\"start {1+1} end\"`` the old version of the tokenizer emitted::"
msgstr ""
"A saída das funções :func:`tokenize.tokenize` e :func:`tokenize."
"generate_tokens` foi alterada devido às mudanças introduzidas na :pep:`701`. "
"Isto significa que os *tokens* ``STRING`` já não são emitidos para *f-"
"strings*, e em vez disso são produzidos os *tokens* descritos na :pep:`701`: "
"``FSTRING_START``, ``FSTRING_MIDDLE`` e ``FSTRING_END`` são agora emitidos "
"para as partes de *string* das *f-strings*, além dos *tokens* apropriados "
"para os componentes de expressão. Por exemplo, para a *f-string* ``f\"start "
"{1+1} end\"``, a versão antiga do *tokenizer* emitia::"

#: ../../whatsnew/3.12.rst:1773
msgid "1,0-1,18:           STRING         'f\"start {1+1} end\"'"
msgstr "1,0-1,18:           STRING         'f\"start {1+1} end\"'"

#: ../../whatsnew/3.12.rst:1775
msgid "while the new version emits::"
msgstr "enquanto a nova versão emite::"

#: ../../whatsnew/3.12.rst:1777
msgid ""
"1,0-1,2:            FSTRING_START  'f\"'\n"
"1,2-1,8:            FSTRING_MIDDLE 'start '\n"
"1,8-1,9:            OP             '{'\n"
"1,9-1,10:           NUMBER         '1'\n"
"1,10-1,11:          OP             '+'\n"
"1,11-1,12:          NUMBER         '1'\n"
"1,12-1,13:          OP             '}'\n"
"1,13-1,17:          FSTRING_MIDDLE ' end'\n"
"1,17-1,18:          FSTRING_END    '\"'"
msgstr ""
"1,0-1,2:            FSTRING_START  'f\"'\n"
"1,2-1,8:            FSTRING_MIDDLE 'start '\n"
"1,8-1,9:            OP             '{'\n"
"1,9-1,10:           NUMBER         '1'\n"
"1,10-1,11:          OP             '+'\n"
"1,11-1,12:          NUMBER         '1'\n"
"1,12-1,13:          OP             '}'\n"
"1,13-1,17:          FSTRING_MIDDLE ' end'\n"
"1,17-1,18:          FSTRING_END    '\"'"

#: ../../whatsnew/3.12.rst:1787
msgid ""
"Additionally, there may be some minor behavioral changes as a consequence of "
"the changes required to support :pep:`701`. Some of these changes include:"
msgstr ""
"Adicionalmente, podem existir algumas alterações comportamentais menores "
"como consequência das mudanças necessárias para suportar a :pep:`701`. "
"Algumas destas alterações incluem:"

#: ../../whatsnew/3.12.rst:1790
msgid ""
"The ``type`` attribute of the tokens emitted when tokenizing some invalid "
"Python characters such as ``!`` has changed from ``ERRORTOKEN`` to ``OP``."
msgstr ""
"O atributo ``type`` dos *tokens* emitidos ao tokenizar alguns caracteres "
"inválidos do Python, como ``!``, foi alterado de ``ERRORTOKEN`` para ``OP``."

#: ../../whatsnew/3.12.rst:1793
msgid ""
"Incomplete single-line strings now also raise :exc:`tokenize.TokenError` as "
"incomplete multiline strings do."
msgstr ""
"As *strings* de linha única incompletas agora também lançam :exc:`tokenize."
"TokenError`, tal como as *strings* multilinhas incompletas."

#: ../../whatsnew/3.12.rst:1796
msgid ""
"Some incomplete or invalid Python code now raises :exc:`tokenize.TokenError` "
"instead of returning arbitrary ``ERRORTOKEN`` tokens when tokenizing it."
msgstr ""
"Algum código Python incompleto ou inválido agora lança :exc:`tokenize."
"TokenError` em vez de devolver *tokens* arbitrários ``ERRORTOKEN`` ao "
"tokenizá-lo."

#: ../../whatsnew/3.12.rst:1799
msgid ""
"Mixing tabs and spaces as indentation in the same file is not supported "
"anymore and will raise a :exc:`TabError`."
msgstr ""
"A mistura de tabulações e espaços como indentação no mesmo ficheiro já não é "
"suportada e lançará um :exc:`TabError`."

#: ../../whatsnew/3.12.rst:1802
msgid ""
"The :mod:`threading` module now expects the :mod:`!_thread` module to have "
"an ``_is_main_interpreter`` attribute.  It is a function with no arguments "
"that returns ``True`` if the current interpreter is the main interpreter."
msgstr ""
"O módulo :mod:`threading` agora espera que o módulo :mod:`!_thread` tenha um "
"atributo ``_is_main_interpreter``. Trata-se de uma função sem argumentos que "
"devolve ``True`` se o interpretador atual for o interpretador principal."

#: ../../whatsnew/3.12.rst:1807
msgid ""
"Any library or application that provides a custom ``_thread`` module should "
"provide ``_is_main_interpreter()``. (See :gh:`112826`.)"
msgstr ""
"Qualquer biblioteca ou aplicação que forneça um módulo ``_thread`` "
"personalizado deve fornecer ``_is_main_interpreter()``. (Consulte :gh:"
"`112826`.)"

#: ../../whatsnew/3.12.rst:1812
msgid "Build Changes"
msgstr "Alterações na Compilação"

#: ../../whatsnew/3.12.rst:1814
msgid ""
"Python no longer uses :file:`setup.py` to build shared C extension modules. "
"Build parameters like headers and libraries are detected in ``configure`` "
"script. Extensions are built by :file:`Makefile`. Most extensions use ``pkg-"
"config`` and fall back to manual detection. (Contributed by Christian Heimes "
"in :gh:`93939`.)"
msgstr ""
"O Python já não usa :file:`setup.py` para compilar módulos de extensão C "
"partilhados. Os parâmetros de compilação, como *headers* e bibliotecas, são "
"detetados no script ``configure``. As extensões são compiladas pelo :file:"
"`Makefile`. A maioria das extensões usa ``pkg-config`` e recorre à deteção "
"manual como alternativa. (Contribuição de Christian Heimes em :gh:`93939`.)"

#: ../../whatsnew/3.12.rst:1820
msgid ""
"``va_start()`` with two parameters, like ``va_start(args, format),`` is now "
"required to build Python. ``va_start()`` is no longer called with a single "
"parameter. (Contributed by Kumar Aditya in :gh:`93207`.)"
msgstr ""
"A função ``va_start()`` com dois parâmetros, como ``va_start(args, format),"
"``, é agora necessária para compilar o Python. A função ``va_start()`` já "
"não é chamada com um único parâmetro. (Contribuição de Kumar Aditya em :gh:"
"`93207`.)"

#: ../../whatsnew/3.12.rst:1825
msgid ""
"CPython now uses the ThinLTO option as the default link time optimization "
"policy if the Clang compiler accepts the flag. (Contributed by Donghee Na "
"in :gh:`89536`.)"
msgstr ""
"O CPython agora usa a opção ThinLTO como a política de otimização de tempo "
"de ligação predefinida se o compilador Clang aceitar a *flag*. (Contribuição "
"de Donghee Na em :gh:`89536`.)"

#: ../../whatsnew/3.12.rst:1829
msgid ""
"Add ``COMPILEALL_OPTS`` variable in :file:`Makefile` to override :mod:"
"`compileall` options (default: ``-j0``) in ``make install``. Also merged the "
"3 ``compileall`` commands into a single command to build .pyc files for all "
"optimization levels (0, 1, 2) at once. (Contributed by Victor Stinner in :gh:"
"`99289`.)"
msgstr ""
"Adicionada a variável ``COMPILEALL_OPTS`` no :file:`Makefile` para "
"substituir as opções do :mod:`compileall` (predefinição: ``-j0``) em ``make "
"install``. Também foram fundidos os 3 comandos ``compileall`` num único "
"comando para compilar ficheiros .pyc para todos os níveis de otimização (0, "
"1, 2) de uma só vez. (Contribuição de Victor Stinner em :gh:`99289`.)"

#: ../../whatsnew/3.12.rst:1835
msgid "Add platform triplets for 64-bit LoongArch:"
msgstr "Adicionados *triplets* de plataforma para LoongArch de 64 bits:"

#: ../../whatsnew/3.12.rst:1837
msgid "loongarch64-linux-gnusf"
msgstr "loongarch64-linux-gnusf"

#: ../../whatsnew/3.12.rst:1838
msgid "loongarch64-linux-gnuf32"
msgstr "loongarch64-linux-gnuf32"

#: ../../whatsnew/3.12.rst:1839
msgid "loongarch64-linux-gnu"
msgstr "loongarch64-linux-gnu"

#: ../../whatsnew/3.12.rst:1841
msgid "(Contributed by Zhang Na in :gh:`90656`.)"
msgstr "(Contribuição de Zhang Na em :gh:`90656`.)"

#: ../../whatsnew/3.12.rst:1843
msgid "``PYTHON_FOR_REGEN`` now require Python 3.10 or newer."
msgstr ""
"A variável ``PYTHON_FOR_REGEN`` agora requer o Python 3.10 ou superior."

#: ../../whatsnew/3.12.rst:1845
msgid ""
"Autoconf 2.71 and aclocal 1.16.4 is now required to regenerate :file:"
"`configure`. (Contributed by Christian Heimes in :gh:`89886`.)"
msgstr ""
"Agora é necessário o Autoconf 2.71 e o aclocal 1.16.4 para regenerar o :file:"
"`configure`. (Contribuição de Christian Heimes em :gh:`89886`.)"

#: ../../whatsnew/3.12.rst:1849
msgid ""
"Windows builds and macOS installers from python.org now use OpenSSL 3.0."
msgstr ""
"As compilações para Windows e os instaladores para macOS do python.org agora "
"usam o OpenSSL 3.0."

#: ../../whatsnew/3.12.rst:1853
msgid "C API Changes"
msgstr "Alterações na API C"

#: ../../whatsnew/3.12.rst:1860
msgid ""
":pep:`697`: Introduce the :ref:`Unstable C API tier <unstable-c-api>`, "
"intended for low-level tools like debuggers and JIT compilers. This API may "
"change in each minor release of CPython without deprecation warnings. Its "
"contents are marked by the ``PyUnstable_`` prefix in names."
msgstr ""
":pep:`697`: Introduzida a :ref:`camada instável da API C <unstable-c-api>`, "
"destinada a ferramentas de baixo nível como *debuggers* e compiladores JIT. "
"Esta API pode mudar em cada versão secundária do CPython sem avisos de "
"obsolescência. O seu conteúdo é marcado pelo prefixo ``PyUnstable_`` nos "
"nomes."

#: ../../whatsnew/3.12.rst:1866
msgid "Code object constructors:"
msgstr "Construtores de objetos de código:"

#: ../../whatsnew/3.12.rst:1868
msgid "``PyUnstable_Code_New()`` (renamed from ``PyCode_New``)"
msgstr "``PyUnstable_Code_New()`` (renomeado de ``PyCode_New``)"

#: ../../whatsnew/3.12.rst:1869
msgid ""
"``PyUnstable_Code_NewWithPosOnlyArgs()`` (renamed from "
"``PyCode_NewWithPosOnlyArgs``)"
msgstr ""
"``PyUnstable_Code_NewWithPosOnlyArgs()`` (renomeado de "
"``PyCode_NewWithPosOnlyArgs``)"

#: ../../whatsnew/3.12.rst:1871
msgid "Extra storage for code objects (:pep:`523`):"
msgstr "Armazenamento extra para objetos de código (:pep:`523`):"

#: ../../whatsnew/3.12.rst:1873
msgid ""
"``PyUnstable_Eval_RequestCodeExtraIndex()`` (renamed from "
"``_PyEval_RequestCodeExtraIndex``)"
msgstr ""
"``PyUnstable_Eval_RequestCodeExtraIndex()`` (renomeado de "
"``_PyEval_RequestCodeExtraIndex``)"

#: ../../whatsnew/3.12.rst:1874
msgid "``PyUnstable_Code_GetExtra()`` (renamed from ``_PyCode_GetExtra``)"
msgstr "``PyUnstable_Code_GetExtra()`` (renomeado de ``_PyCode_GetExtra``)"

#: ../../whatsnew/3.12.rst:1875
msgid "``PyUnstable_Code_SetExtra()`` (renamed from ``_PyCode_SetExtra``)"
msgstr "``PyUnstable_Code_SetExtra()`` (renomeado de ``_PyCode_SetExtra``)"

#: ../../whatsnew/3.12.rst:1877
msgid ""
"The original names will continue to be available until the respective API "
"changes."
msgstr ""
"Os nomes originais continuarão disponíveis até que as respetivas alterações "
"na API ocorram."

#: ../../whatsnew/3.12.rst:1880
msgid "(Contributed by Petr Viktorin in :gh:`101101`.)"
msgstr "(Contribuição de Petr Viktorin em :gh:`101101`.)"

#: ../../whatsnew/3.12.rst:1882
msgid ""
":pep:`697`: Add an API for extending types whose instance memory layout is "
"opaque:"
msgstr ""
":pep:`697`: Adicionada uma API para estender tipos cujo *layout* de memória "
"da instância é opaco:"

#: ../../whatsnew/3.12.rst:1885
msgid ""
":c:member:`PyType_Spec.basicsize` can be zero or negative to specify "
"inheriting or extending the base class size."
msgstr ""
"O membro :c:member:`PyType_Spec.basicsize` pode ser zero ou negativo para "
"especificar a herança ou extensão do tamanho da classe base."

#: ../../whatsnew/3.12.rst:1887
msgid ""
":c:func:`PyObject_GetTypeData` and :c:func:`PyType_GetTypeDataSize` added to "
"allow access to subclass-specific instance data."
msgstr ""
"Adicionadas as funções :c:func:`PyObject_GetTypeData` e :c:func:"
"`PyType_GetTypeDataSize` para permitir o acesso a dados de instância "
"específicos da subclasse."

#: ../../whatsnew/3.12.rst:1889
msgid ""
":c:macro:`Py_TPFLAGS_ITEMS_AT_END` and :c:func:`PyObject_GetItemData` added "
"to allow safely extending certain variable-sized types, including :c:var:"
"`PyType_Type`."
msgstr ""
"Adicionadas a macro :c:macro:`Py_TPFLAGS_ITEMS_AT_END` e a função :c:func:"
"`PyObject_GetItemData` para permitir a extensão segura de certos tipos de "
"tamanho variável, incluindo :c:var:`PyType_Type`."

#: ../../whatsnew/3.12.rst:1892
msgid ""
":c:macro:`Py_RELATIVE_OFFSET` added to allow defining :c:type:`members "
"<PyMemberDef>` in terms of a subclass-specific struct."
msgstr ""
"Adicionada a macro :c:macro:`Py_RELATIVE_OFFSET` para permitir definir :c:"
"type:`members <PyMemberDef>` em termos de uma *struct* específica da "
"subclasse."

#: ../../whatsnew/3.12.rst:1895
msgid "(Contributed by Petr Viktorin in :gh:`103509`.)"
msgstr "(Contribuição de Petr Viktorin em :gh:`103509`.)"

#: ../../whatsnew/3.12.rst:1897
msgid ""
"Add the new :ref:`limited C API <limited-c-api>` function :c:func:"
"`PyType_FromMetaclass`, which generalizes the existing :c:func:"
"`PyType_FromModuleAndSpec` using an additional metaclass argument. "
"(Contributed by Wenzel Jakob in :gh:`93012`.)"
msgstr ""
"Adicionada a nova função :ref:`limited C API <limited-c-api>` :c:func:"
"`PyType_FromMetaclass`, que generaliza a função existente :c:func:"
"`PyType_FromModuleAndSpec` usando um argumento adicional de metaclasse. "
"(Contribuição de Wenzel Jakob em :gh:`93012`.)"

#: ../../whatsnew/3.12.rst:1902
msgid ""
"API for creating objects that can be called using :ref:`the vectorcall "
"protocol <vectorcall>` was added to the :ref:`Limited API <stable>`:"
msgstr ""
"Adicionada à :ref:`API Limitada <stable>` a API para criar objetos que podem "
"ser chamados usando o :ref:`protocolo vectorcall <vectorcall>`:"

#: ../../whatsnew/3.12.rst:1906
msgid ":c:macro:`Py_TPFLAGS_HAVE_VECTORCALL`"
msgstr ":c:macro:`Py_TPFLAGS_HAVE_VECTORCALL`"

#: ../../whatsnew/3.12.rst:1907
msgid ":c:func:`PyVectorcall_NARGS`"
msgstr ":c:func:`PyVectorcall_NARGS`"

#: ../../whatsnew/3.12.rst:1908
msgid ":c:func:`PyVectorcall_Call`"
msgstr ":c:func:`PyVectorcall_Call`"

#: ../../whatsnew/3.12.rst:1909
msgid ":c:type:`vectorcallfunc`"
msgstr ":c:type:`vectorcallfunc`"

#: ../../whatsnew/3.12.rst:1911
msgid ""
"The :c:macro:`Py_TPFLAGS_HAVE_VECTORCALL` flag is now removed from a class "
"when the class's :py:meth:`~object.__call__` method is reassigned. This "
"makes vectorcall safe to use with mutable types (i.e. heap types without the "
"immutable flag, :c:macro:`Py_TPFLAGS_IMMUTABLETYPE`). Mutable types that do "
"not override :c:member:`~PyTypeObject.tp_call` now inherit the "
"``Py_TPFLAGS_HAVE_VECTORCALL`` flag. (Contributed by Petr Viktorin in :gh:"
"`93274`.)"
msgstr ""
"A *flag* :c:macro:`Py_TPFLAGS_HAVE_VECTORCALL` é agora removida de uma "
"classe quando o método :py:meth:`~object.__call__` da classe é reatribuído. "
"Isto torna o *vectorcall* seguro para uso com tipos mutáveis (ou seja, tipos "
"de *heap* sem a *flag* imutável, :c:macro:`Py_TPFLAGS_IMMUTABLETYPE`). Tipos "
"mutáveis que não substituem :c:member:`~PyTypeObject.tp_call` agora herdam a "
"*flag* ``Py_TPFLAGS_HAVE_VECTORCALL``. (Contribuição de Petr Viktorin em :gh:"
"`93274`.)"

#: ../../whatsnew/3.12.rst:1919
msgid ""
"The :c:macro:`Py_TPFLAGS_MANAGED_DICT` and :c:macro:"
"`Py_TPFLAGS_MANAGED_WEAKREF` flags have been added. This allows extensions "
"classes to support object :attr:`~object.__dict__` and weakrefs with less "
"bookkeeping, using less memory and with faster access."
msgstr ""
"Foram adicionadas as *flags* :c:macro:`Py_TPFLAGS_MANAGED_DICT` e :c:macro:"
"`Py_TPFLAGS_MANAGED_WEAKREF`. Isto permite que as classes de extensão "
"suportem o atributo :attr:`~object.__dict__` e *weakrefs* com menos gestão, "
"usando menos memória e com acesso mais rápido."

#: ../../whatsnew/3.12.rst:1924
msgid ""
"API for performing calls using :ref:`the vectorcall protocol <vectorcall>` "
"was added to the :ref:`Limited API <stable>`:"
msgstr ""
"Adicionada à :ref:`API Limitada <stable>` a API para realizar chamadas "
"usando o :ref:`protocolo vectorcall <vectorcall>`:"

#: ../../whatsnew/3.12.rst:1928
msgid ":c:func:`PyObject_Vectorcall`"
msgstr ":c:func:`PyObject_Vectorcall`"

#: ../../whatsnew/3.12.rst:1929
msgid ":c:func:`PyObject_VectorcallMethod`"
msgstr ":c:func:`PyObject_VectorcallMethod`"

#: ../../whatsnew/3.12.rst:1930
msgid ":c:macro:`PY_VECTORCALL_ARGUMENTS_OFFSET`"
msgstr ":c:macro:`PY_VECTORCALL_ARGUMENTS_OFFSET`"

#: ../../whatsnew/3.12.rst:1932
msgid ""
"This means that both the incoming and outgoing ends of the vector call "
"protocol are now available in the :ref:`Limited API <stable>`. (Contributed "
"by Wenzel Jakob in :gh:`98586`.)"
msgstr ""
"Isto significa que tanto as extremidades de entrada como de saída do "
"protocolo *vectorcall* estão agora disponíveis na :ref:`API Limitada "
"<stable>`. (Contribuição de Wenzel Jakob em :gh:`98586`.)"

#: ../../whatsnew/3.12.rst:1936
msgid ""
"Add two new public functions, :c:func:`PyEval_SetProfileAllThreads` and :c:"
"func:`PyEval_SetTraceAllThreads`, that allow to set tracing and profiling "
"functions in all running threads in addition to the calling one. "
"(Contributed by Pablo Galindo in :gh:`93503`.)"
msgstr ""
"Adicionadas duas novas funções públicas, :c:func:"
"`PyEval_SetProfileAllThreads` e :c:func:`PyEval_SetTraceAllThreads`, que "
"permitem definir funções de rastreio e perfilagem em todas as *threads* em "
"execução, além da *thread* chamadora. (Contribuição de Pablo Galindo em :gh:"
"`93503`.)"

#: ../../whatsnew/3.12.rst:1942
msgid ""
"Add new function :c:func:`PyFunction_SetVectorcall` to the C API which sets "
"the vectorcall field of a given :c:type:`PyFunctionObject`. (Contributed by "
"Andrew Frost in :gh:`92257`.)"
msgstr ""
"Adicionada a nova função :c:func:`PyFunction_SetVectorcall` à API C, que "
"define o campo *vectorcall* de um objeto :c:type:`PyFunctionObject`. "
"(Contribuição de Andrew Frost em :gh:`92257`.)"

#: ../../whatsnew/3.12.rst:1946
msgid ""
"The C API now permits registering callbacks via :c:func:"
"`PyDict_AddWatcher`, :c:func:`PyDict_Watch` and related APIs to be called "
"whenever a dictionary is modified. This is intended for use by optimizing "
"interpreters, JIT compilers, or debuggers. (Contributed by Carl Meyer in :gh:"
"`91052`.)"
msgstr ""
"A API C agora permite registar *callbacks* através de :c:func:"
"`PyDict_AddWatcher`, :c:func:`PyDict_Watch` e APIs relacionadas para serem "
"chamadas sempre que um dicionário é modificado. Isto destina-se a ser usado "
"por interpretadores otimizados, compiladores JIT ou *debuggers*. "
"(Contribuição de Carl Meyer em :gh:`91052`.)"

#: ../../whatsnew/3.12.rst:1952
msgid ""
"Add :c:func:`PyType_AddWatcher` and :c:func:`PyType_Watch` API to register "
"callbacks to receive notification on changes to a type. (Contributed by Carl "
"Meyer in :gh:`91051`.)"
msgstr ""
"Adicionadas as APIs :c:func:`PyType_AddWatcher` e :c:func:`PyType_Watch` "
"para registar *callbacks* que recebem notificações sobre alterações a um "
"tipo. (Contribuição de Carl Meyer em :gh:`91051`.)"

#: ../../whatsnew/3.12.rst:1956
msgid ""
"Add :c:func:`PyCode_AddWatcher` and :c:func:`PyCode_ClearWatcher` APIs to "
"register callbacks to receive notification on creation and destruction of "
"code objects. (Contributed by Itamar Oren in :gh:`91054`.)"
msgstr ""
"Adicionadas as APIs :c:func:`PyCode_AddWatcher` e :c:func:"
"`PyCode_ClearWatcher` para registar *callbacks* que recebem notificações "
"sobre a criação e destruição de objetos de código. (Contribuição de Itamar "
"Oren em :gh:`91054`.)"

#: ../../whatsnew/3.12.rst:1961
msgid ""
"Add :c:func:`PyFrame_GetVar` and :c:func:`PyFrame_GetVarString` functions to "
"get a frame variable by its name. (Contributed by Victor Stinner in :gh:"
"`91248`.)"
msgstr ""
"Adicionadas as funções :c:func:`PyFrame_GetVar` e :c:func:"
"`PyFrame_GetVarString` para obter uma variável de um *frame* pelo seu nome. "
"(Contribuição de Victor Stinner em :gh:`91248`.)"

#: ../../whatsnew/3.12.rst:1965
msgid ""
"Add :c:func:`PyErr_GetRaisedException` and :c:func:"
"`PyErr_SetRaisedException` for saving and restoring the current exception. "
"These functions return and accept a single exception object, rather than the "
"triple arguments of the now-deprecated :c:func:`PyErr_Fetch` and :c:func:"
"`PyErr_Restore`. This is less error prone and a bit more efficient. "
"(Contributed by Mark Shannon in :gh:`101578`.)"
msgstr ""
"Adicionadas as funções :c:func:`PyErr_GetRaisedException` e :c:func:"
"`PyErr_SetRaisedException` para guardar e restaurar a exceção atual. Estas "
"funções devolvem e aceitam um único objeto de exceção, em vez dos três "
"argumentos das funções agora obsoletas :c:func:`PyErr_Fetch` e :c:func:"
"`PyErr_Restore`. Isto é menos propenso a erros e um pouco mais eficiente. "
"(Contribuição de Mark Shannon em :gh:`101578`.)"

#: ../../whatsnew/3.12.rst:1973
msgid ""
"Add ``_PyErr_ChainExceptions1``, which takes an exception instance, to "
"replace the legacy-API ``_PyErr_ChainExceptions``, which is now deprecated. "
"(Contributed by Mark Shannon in :gh:`101578`.)"
msgstr ""
"Adicionada a função ``_PyErr_ChainExceptions1``, que recebe uma instância de "
"exceção, para substituir a função da API antiga ``_PyErr_ChainExceptions``, "
"agora obsoleta. (Contribuição de Mark Shannon em :gh:`101578`.)"

#: ../../whatsnew/3.12.rst:1977
msgid ""
"Add :c:func:`PyException_GetArgs` and :c:func:`PyException_SetArgs` as "
"convenience functions for retrieving and modifying the :attr:`~BaseException."
"args` passed to the exception's constructor. (Contributed by Mark Shannon "
"in :gh:`101578`.)"
msgstr ""
"Adicionadas as funções :c:func:`PyException_GetArgs` e :c:func:"
"`PyException_SetArgs` como funções de conveniência para recuperar e "
"modificar os :attr:`~BaseException.args` passados ao construtor da exceção. "
"(Contribuição de Mark Shannon em :gh:`101578`.)"

#: ../../whatsnew/3.12.rst:1982
msgid ""
"Add :c:func:`PyErr_DisplayException`, which takes an exception instance, to "
"replace the legacy-api :c:func:`!PyErr_Display`. (Contributed by Irit "
"Katriel in :gh:`102755`)."
msgstr ""
"Adicionada a função :c:func:`PyErr_DisplayException`, que recebe uma "
"instância de exceção, para substituir a função da API antiga :c:func:`!"
"PyErr_Display`. (Contribuição de Irit Katriel em :gh:`102755`.)"

#: ../../whatsnew/3.12.rst:1988
msgid ""
":pep:`683`: Introduce *Immortal Objects*, which allows objects to bypass "
"reference counts, and related changes to the C-API:"
msgstr ""
":pep:`683`: Introdução de *Objetos Imortais*, que permite que objetos "
"contornem a contagem de referências, e alterações relacionadas na API C:"

#: ../../whatsnew/3.12.rst:1991
msgid "``_Py_IMMORTAL_REFCNT``: The reference count that defines an object"
msgstr ""
"``_Py_IMMORTAL_REFCNT``: A contagem de referências que define um objeto"

#: ../../whatsnew/3.12.rst:1992
msgid "as immortal."
msgstr "como imortal."

#: ../../whatsnew/3.12.rst:1993
msgid ""
"``_Py_IsImmortal`` Checks if an object has the immortal reference count."
msgstr ""
"``_Py_IsImmortal`` Verifica se um objeto tem a contagem de referências "
"imortal."

#: ../../whatsnew/3.12.rst:1994
msgid "``PyObject_HEAD_INIT`` This will now initialize reference count to"
msgstr "``PyObject_HEAD_INIT`` Agora inicializa a contagem de referências para"

#: ../../whatsnew/3.12.rst:1995
msgid "``_Py_IMMORTAL_REFCNT`` when used with ``Py_BUILD_CORE``."
msgstr "``_Py_IMMORTAL_REFCNT`` quando usado com ``Py_BUILD_CORE``."

#: ../../whatsnew/3.12.rst:1996
msgid "``SSTATE_INTERNED_IMMORTAL`` An identifier for interned unicode objects"
msgstr ""
"``SSTATE_INTERNED_IMMORTAL`` Um identificador para objetos unicode internados"

#: ../../whatsnew/3.12.rst:1997
msgid "that are immortal."
msgstr "que são imortais."

#: ../../whatsnew/3.12.rst:1998
msgid "``SSTATE_INTERNED_IMMORTAL_STATIC`` An identifier for interned unicode"
msgstr ""
"``SSTATE_INTERNED_IMMORTAL_STATIC`` Um identificador para objetos unicode "
"internados"

#: ../../whatsnew/3.12.rst:1999
msgid "objects that are immortal and static"
msgstr "que são imortais e estáticos."

#: ../../whatsnew/3.12.rst:2000
msgid "``sys.getunicodeinternedsize`` This returns the total number of unicode"
msgstr ""
"``sys.getunicodeinternedsize`` Devolve o número total de objetos unicode"

#: ../../whatsnew/3.12.rst:2001
msgid ""
"objects that have been interned. This is now needed for :file:`refleak.py` "
"to correctly track reference counts and allocated blocks"
msgstr ""
"que foram internados. Isto é agora necessário para que o :file:`refleak.py` "
"acompanhe corretamente as contagens de referências e os blocos alocados."

#: ../../whatsnew/3.12.rst:2004
msgid "(Contributed by Eddie Elizondo in :gh:`84436`.)"
msgstr "(Contribuição de Eddie Elizondo em :gh:`84436`.)"

#: ../../whatsnew/3.12.rst:2006
msgid ""
":pep:`684`: Add the new :c:func:`Py_NewInterpreterFromConfig` function and :"
"c:type:`PyInterpreterConfig`, which may be used to create sub-interpreters "
"with their own GILs. (See :ref:`whatsnew312-pep684` for more info.) "
"(Contributed by Eric Snow in :gh:`104110`.)"
msgstr ""
":pep:`684`: Adicionada a nova função :c:func:`Py_NewInterpreterFromConfig` e "
"o tipo :c:type:`PyInterpreterConfig`, que podem ser usados para criar "
"subinterpretadores com os seus próprios GILs. (Consulte :ref:`whatsnew312-"
"pep684` para mais informações.) (Contribuição de Eric Snow em :gh:`104110`.)"

#: ../../whatsnew/3.12.rst:2012
msgid ""
"In the limited C API version 3.12, :c:func:`Py_INCREF` and :c:func:"
"`Py_DECREF` functions are now implemented as opaque function calls to hide "
"implementation details. (Contributed by Victor Stinner in :gh:`105387`.)"
msgstr ""
"Na versão 3.12 da API C limitada, as funções :c:func:`Py_INCREF` e :c:func:"
"`Py_DECREF` são agora implementadas como chamadas de função opacas para "
"ocultar detalhes de implementação. (Contribuição de Victor Stinner em :gh:"
"`105387`.)"

#: ../../whatsnew/3.12.rst:2020
msgid ""
"Legacy Unicode APIs based on ``Py_UNICODE*`` representation has been "
"removed. Please migrate to APIs based on UTF-8 or ``wchar_t*``."
msgstr ""
"As APIs Unicode antigas baseadas na representação ``Py_UNICODE*`` foram "
"removidas. Por favor, migre para APIs baseadas em UTF-8 ou ``wchar_t*``."

#: ../../whatsnew/3.12.rst:2023
msgid ""
"Argument parsing functions like :c:func:`PyArg_ParseTuple` doesn't support "
"``Py_UNICODE*`` based format (e.g. ``u``, ``Z``) anymore. Please migrate to "
"other formats for Unicode like ``s``, ``z``, ``es``, and ``U``."
msgstr ""
"Funções de análise de argumentos como :c:func:`PyArg_ParseTuple` já não "
"suportam formatos baseados em ``Py_UNICODE*`` (por exemplo, ``u``, ``Z``). "
"Por favor, migre para outros formatos para Unicode, como ``s``, ``z``, "
"``es`` e ``U``."

#: ../../whatsnew/3.12.rst:2027
msgid ""
"``tp_weaklist`` for all static builtin types is always ``NULL``. This is an "
"internal-only field on ``PyTypeObject`` but we're pointing out the change in "
"case someone happens to be accessing the field directly anyway.  To avoid "
"breakage, consider using the existing public C-API instead, or, if "
"necessary, the (internal-only) ``_PyObject_GET_WEAKREFS_LISTPTR()`` macro."
msgstr ""
"O campo ``tp_weaklist`` para todos os tipos internos estáticos é sempre "
"``NULL``. Este é um campo apenas interno em ``PyTypeObject``, mas estamos a "
"destacar esta alteração caso alguém esteja a aceder diretamente ao campo. "
"Para evitar problemas, considere usar a API C pública existente, ou, se "
"necessário, a macro (apenas interna) ``_PyObject_GET_WEAKREFS_LISTPTR()``."

#: ../../whatsnew/3.12.rst:2034
msgid ""
"This internal-only :c:member:`PyTypeObject.tp_subclasses` may now not be a "
"valid object pointer.  Its type was changed to :c:expr:`void *` to reflect "
"this.  We mention this in case someone happens to be accessing the internal-"
"only field directly."
msgstr ""
"Este campo interno :c:member:`PyTypeObject.tp_subclasses` pode agora não ser "
"um ponteiro de objeto válido. O seu tipo foi alterado para :c:expr:`void *` "
"para refletir isto. Mencionamos isto caso alguém esteja a aceder diretamente "
"ao campo interno."

#: ../../whatsnew/3.12.rst:2039
msgid ""
"To get a list of subclasses, call the Python method :py:meth:`~type."
"__subclasses__` (using :c:func:`PyObject_CallMethod`, for example)."
msgstr ""
"Para obter uma lista de subclasses, chame o método Python :py:meth:`~type."
"__subclasses__` (usando, por exemplo, :c:func:`PyObject_CallMethod`)."

#: ../../whatsnew/3.12.rst:2043
msgid ""
"Add support of more formatting options (left aligning, octals, uppercase "
"hexadecimals, :c:type:`intmax_t`, :c:type:`ptrdiff_t`, :c:type:`wchar_t` C "
"strings, variable width and precision) in :c:func:`PyUnicode_FromFormat` "
"and :c:func:`PyUnicode_FromFormatV`. (Contributed by Serhiy Storchaka in :gh:"
"`98836`.)"
msgstr ""
"Adicionado suporte para mais opções de formatação (alinhamento à esquerda, "
"octais, hexadecimais maiúsculos, :c:type:`intmax_t`, :c:type:`ptrdiff_t`, "
"*strings* C :c:type:`wchar_t`, largura e precisão variáveis) em :c:func:"
"`PyUnicode_FromFormat` e :c:func:`PyUnicode_FromFormatV`. (Contribuição de "
"Serhiy Storchaka em :gh:`98836`.)"

#: ../../whatsnew/3.12.rst:2049
msgid ""
"An unrecognized format character in :c:func:`PyUnicode_FromFormat` and :c:"
"func:`PyUnicode_FromFormatV` now sets a :exc:`SystemError`. In previous "
"versions it caused all the rest of the format string to be copied as-is to "
"the result string, and any extra arguments discarded. (Contributed by Serhiy "
"Storchaka in :gh:`95781`.)"
msgstr ""
"Um carácter de formatação não reconhecido em :c:func:`PyUnicode_FromFormat` "
"e :c:func:`PyUnicode_FromFormatV` agora define um :exc:`SystemError`. Nas "
"versões anteriores, isto fazia com que o resto da *string* de formatação "
"fosse copiado tal como estava para a *string* de resultado, e quaisquer "
"argumentos extra fossem descartados. (Contribuição de Serhiy Storchaka em :"
"gh:`95781`.)"

#: ../../whatsnew/3.12.rst:2055
msgid ""
"Fix wrong sign placement in :c:func:`PyUnicode_FromFormat` and :c:func:"
"`PyUnicode_FromFormatV`. (Contributed by Philip Georgi in :gh:`95504`.)"
msgstr ""
"Corrigida a colocação errada do sinal em :c:func:`PyUnicode_FromFormat` e :c:"
"func:`PyUnicode_FromFormatV`. (Contribuição de Philip Georgi em :gh:`95504`.)"

#: ../../whatsnew/3.12.rst:2059
msgid ""
"Extension classes wanting to add a :attr:`~object.__dict__` or weak "
"reference slot should use :c:macro:`Py_TPFLAGS_MANAGED_DICT` and :c:macro:"
"`Py_TPFLAGS_MANAGED_WEAKREF` instead of ``tp_dictoffset`` and "
"``tp_weaklistoffset``, respectively. The use of ``tp_dictoffset`` and "
"``tp_weaklistoffset`` is still supported, but does not fully support "
"multiple inheritance (:gh:`95589`), and performance may be worse. Classes "
"declaring :c:macro:`Py_TPFLAGS_MANAGED_DICT` must call :c:func:`!"
"_PyObject_VisitManagedDict` and :c:func:`!_PyObject_ClearManagedDict` to "
"traverse and clear their instance's dictionaries. To clear weakrefs, call :c:"
"func:`PyObject_ClearWeakRefs`, as before."
msgstr ""
"As classes de extensão que pretendem adicionar um :attr:`~object.__dict__` "
"ou um *slot* de referência fraca devem usar :c:macro:"
"`Py_TPFLAGS_MANAGED_DICT` e :c:macro:`Py_TPFLAGS_MANAGED_WEAKREF` em vez de "
"``tp_dictoffset`` e ``tp_weaklistoffset``, respetivamente. O uso de "
"``tp_dictoffset`` e ``tp_weaklistoffset`` ainda é suportado, mas não suporta "
"totalmente a herança múltipla (:gh:`95589`), e o desempenho pode ser pior. "
"As classes que declararem :c:macro:`Py_TPFLAGS_MANAGED_DICT` devem chamar :c:"
"func:`!_PyObject_VisitManagedDict` e :c:func:`!_PyObject_ClearManagedDict` "
"para percorrer e limpar os dicionários das suas instâncias. Para limpar "
"*weakrefs*, chame :c:func:`PyObject_ClearWeakRefs`, como antes."

#: ../../whatsnew/3.12.rst:2071
msgid ""
"The :c:func:`PyUnicode_FSDecoder` function no longer accepts bytes-like "
"paths, like :class:`bytearray` and :class:`memoryview` types: only the "
"exact :class:`bytes` type is accepted for bytes strings. (Contributed by "
"Victor Stinner in :gh:`98393`.)"
msgstr ""
"A função :c:func:`PyUnicode_FSDecoder` já não aceita caminhos do tipo *bytes-"
"like*, como :class:`bytearray` e :class:`memoryview`: apenas o tipo exato :"
"class:`bytes` é aceite para *strings* de bytes. (Contribuição de Victor "
"Stinner em :gh:`98393`.)"

#: ../../whatsnew/3.12.rst:2076
msgid ""
"The :c:macro:`Py_CLEAR`, :c:macro:`Py_SETREF` and :c:macro:`Py_XSETREF` "
"macros now only evaluate their arguments once. If an argument has side "
"effects, these side effects are no longer duplicated. (Contributed by Victor "
"Stinner in :gh:`98724`.)"
msgstr ""
"As macros :c:macro:`Py_CLEAR`, :c:macro:`Py_SETREF` e :c:macro:`Py_XSETREF` "
"agora avaliam os seus argumentos apenas uma vez. Se um argumento tiver "
"efeitos secundários, esses efeitos já não são duplicados. (Contribuição de "
"Victor Stinner em :gh:`98724`.)"

#: ../../whatsnew/3.12.rst:2081
msgid ""
"The interpreter's error indicator is now always normalized. This means that :"
"c:func:`PyErr_SetObject`, :c:func:`PyErr_SetString` and the other functions "
"that set the error indicator now normalize the exception before storing it. "
"(Contributed by Mark Shannon in :gh:`101578`.)"
msgstr ""
"O indicador de erro do interpretador agora está sempre normalizado. Isso "
"significa que :c:func:`PyErr_SetObject`, :c:func:`PyErr_SetString` e as "
"outras funções que definem o indicador de erro agora normalizam a exceção "
"antes de armazená-la. (Contribuição de Mark Shannon em :gh:`101578`.)"

#: ../../whatsnew/3.12.rst:2086
msgid ""
"``_Py_RefTotal`` is no longer authoritative and only kept around for ABI "
"compatibility.  Note that it is an internal global and only available on "
"debug builds.  If you happen to be using it then you'll need to start using "
"``_Py_GetGlobalRefTotal()``."
msgstr ""
"``_Py_RefTotal`` já não é autoritativo e é mantido apenas por "
"compatibilidade com a ABI. Note que é uma variável global interna e está "
"disponível apenas em compilações de depuração. Se estiver a usá-la, terá de "
"começar a usar ``_Py_GetGlobalRefTotal()``."

#: ../../whatsnew/3.12.rst:2091
msgid ""
"The following functions now select an appropriate metaclass for the newly "
"created type:"
msgstr ""
"As seguintes funções agora selecionam uma metaclasse apropriada para o tipo "
"recém-criado:"

#: ../../whatsnew/3.12.rst:2094
msgid ":c:func:`PyType_FromSpec`"
msgstr ":c:func:`PyType_FromSpec`"

#: ../../whatsnew/3.12.rst:2095
msgid ":c:func:`PyType_FromSpecWithBases`"
msgstr ":c:func:`PyType_FromSpecWithBases`"

#: ../../whatsnew/3.12.rst:2096
msgid ":c:func:`PyType_FromModuleAndSpec`"
msgstr ":c:func:`PyType_FromModuleAndSpec`"

#: ../../whatsnew/3.12.rst:2098
msgid ""
"Creating classes whose metaclass overrides :c:member:`~PyTypeObject.tp_new` "
"is deprecated, and in Python 3.14+ it will be disallowed. Note that these "
"functions ignore ``tp_new`` of the metaclass, possibly allowing incomplete "
"initialization."
msgstr ""
"A criação de classes cuja metaclasse substitui :c:member:`~PyTypeObject."
"tp_new` está obsoleta e será proibida no Python 3.14+. Note que estas "
"funções ignoram o ``tp_new`` da metaclasse, o que pode permitir uma "
"inicialização incompleta."

#: ../../whatsnew/3.12.rst:2103
msgid ""
"Note that :c:func:`PyType_FromMetaclass` (added in Python 3.12) already "
"disallows creating classes whose metaclass overrides ``tp_new`` (:meth:"
"`~object.__new__` in Python)."
msgstr ""
"Note que :c:func:`PyType_FromMetaclass` (adicionada no Python 3.12) já "
"proíbe a criação de classes cuja metaclasse substitui ``tp_new`` (:meth:"
"`~object.__new__` em Python)."

#: ../../whatsnew/3.12.rst:2107
msgid ""
"Since ``tp_new`` overrides almost everything ``PyType_From*`` functions do, "
"the two are incompatible with each other. The existing behavior -- ignoring "
"the metaclass for several steps of type creation -- is unsafe in general, "
"since (meta)classes assume that ``tp_new`` was called. There is no simple "
"general workaround. One of the following may work for you:"
msgstr ""
"Uma vez que ``tp_new`` substitui quase tudo o que as funções "
"``PyType_From*`` fazem, as duas são incompatíveis entre si. O comportamento "
"existente — ignorar a metaclasse em várias etapas da criação de tipos — é "
"inseguro em geral, uma vez que as (meta)classes assumem que ``tp_new`` foi "
"chamado. Não existe uma solução geral simples. Uma das seguintes opções pode "
"funcionar para si:"

#: ../../whatsnew/3.12.rst:2114
msgid "If you control the metaclass, avoid using ``tp_new`` in it:"
msgstr "Se controlar a metaclasse, evite usar ``tp_new`` nela:"

#: ../../whatsnew/3.12.rst:2116
msgid ""
"If initialization can be skipped, it can be done in :c:member:`~PyTypeObject."
"tp_init` instead."
msgstr ""
"Se a inicialização puder ser ignorada, pode ser feita em :c:member:"
"`~PyTypeObject.tp_init` em vez disso."

#: ../../whatsnew/3.12.rst:2118
msgid ""
"If the metaclass doesn't need to be instantiated from Python, set its "
"``tp_new`` to ``NULL`` using the :c:macro:"
"`Py_TPFLAGS_DISALLOW_INSTANTIATION` flag. This makes it acceptable for "
"``PyType_From*`` functions."
msgstr ""
"Se a metaclasse não precisar de ser instanciada a partir do Python, defina o "
"seu ``tp_new`` para ``NULL`` usando a *flag* :c:macro:"
"`Py_TPFLAGS_DISALLOW_INSTANTIATION`. Isto torna-a aceitável para as funções "
"``PyType_From*``."

#: ../../whatsnew/3.12.rst:2123
msgid ""
"Avoid ``PyType_From*`` functions: if you don't need C-specific features "
"(slots or setting the instance size), create types by :ref:`calling <call>` "
"the metaclass."
msgstr ""
"Evite as funções ``PyType_From*``: se não precisar de funcionalidades "
"específicas do C (como *slots* ou definir o tamanho da instância), crie "
"tipos :ref:`calling <call>` a metaclasse."

#: ../../whatsnew/3.12.rst:2127
msgid ""
"If you *know* the ``tp_new`` can be skipped safely, filter the deprecation "
"warning out using :func:`warnings.catch_warnings` from Python."
msgstr ""
"Se *souber* que o ``tp_new`` pode ser ignorado com segurança, filtre o aviso "
"de obsolescência usando :func:`warnings.catch_warnings` do Python."

#: ../../whatsnew/3.12.rst:2130
msgid ""
":c:var:`PyOS_InputHook` and :c:var:`PyOS_ReadlineFunctionPointer` are no "
"longer called in :ref:`subinterpreters <sub-interpreter-support>`. This is "
"because clients generally rely on process-wide global state (since these "
"callbacks have no way of recovering extension module state)."
msgstr ""
"As variáveis :c:var:`PyOS_InputHook` e :c:var:`PyOS_ReadlineFunctionPointer` "
"já não são chamadas em :ref:`subinterpretadores <sub-interpreter-support>`. "
"Isto deve-se ao facto de os clientes geralmente dependerem do estado global "
"do processo (uma vez que estas *callbacks* não têm forma de recuperar o "
"estado do módulo de extensão)."

#: ../../whatsnew/3.12.rst:2135
msgid ""
"This also avoids situations where extensions may find themselves running in "
"a subinterpreter that they don't support (or haven't yet been loaded in). "
"See :gh:`104668` for more info."
msgstr ""
"Isto também evita situações em que as extensões possam encontrar-se a "
"executar num subinterpretador que não suportam (ou que ainda não foi "
"carregado). Consulte :gh:`104668` para mais informações."

#: ../../whatsnew/3.12.rst:2139
msgid ""
":c:struct:`PyLongObject` has had its internals changed for better "
"performance. Although the internals of :c:struct:`PyLongObject` are private, "
"they are used by some extension modules. The internal fields should no "
"longer be accessed directly, instead the API functions beginning ``PyLong_..."
"`` should be used instead. Two new *unstable* API functions are provided for "
"efficient access to the value of :c:struct:`PyLongObject`\\s which fit into "
"a single machine word:"
msgstr ""
"A estrutura interna de :c:struct:`PyLongObject` foi alterada para melhorar o "
"desempenho. Embora os detalhes internos de :c:struct:`PyLongObject` sejam "
"privados, são usados por alguns módulos de extensão. Os campos internos já "
"não devem ser acedidos diretamente; em vez disso, devem ser usadas as "
"funções da API que começam por ``PyLong_...``. Foram fornecidas duas novas "
"funções de API *instáveis* para acesso eficiente ao valor de objetos :c:"
"struct:`PyLongObject` que cabem numa palavra de máquina:"

#: ../../whatsnew/3.12.rst:2147
msgid ":c:func:`PyUnstable_Long_IsCompact`"
msgstr ":c:func:`PyUnstable_Long_IsCompact`"

#: ../../whatsnew/3.12.rst:2148
msgid ":c:func:`PyUnstable_Long_CompactValue`"
msgstr ":c:func:`PyUnstable_Long_CompactValue`"

#: ../../whatsnew/3.12.rst:2150
msgid ""
"Custom allocators, set via :c:func:`PyMem_SetAllocator`, are now required to "
"be thread-safe, regardless of memory domain.  Allocators that don't have "
"their own state, including \"hooks\", are not affected. If your custom "
"allocator is not already thread-safe and you need guidance then please "
"create a new GitHub issue and CC ``@ericsnowcurrently``."
msgstr ""
"Os alocadores personalizados, definidos através de :c:func:"
"`PyMem_SetAllocator`, são agora obrigados a ser *thread-safe*, "
"independentemente do domínio de memória. Alocadores que não têm o seu "
"próprio estado, incluindo *hooks*, não são afetados. Se o seu alocador "
"personalizado ainda não for *thread-safe* e precisar de orientação, crie um "
"novo *issue* no GitHub e mencione ``@ericsnowcurrently``."

#: ../../whatsnew/3.12.rst:2160
msgid ""
"In accordance with :pep:`699`, the ``ma_version_tag`` field in :c:type:"
"`PyDictObject` is deprecated for extension modules. Accessing this field "
"will generate a compiler warning at compile time. This field will be removed "
"in Python 3.14. (Contributed by Ramvikrams and Kumar Aditya in :gh:`101193`. "
"PEP by Ken Jin.)"
msgstr ""
"De acordo com a :pep:`699`, o campo ``ma_version_tag`` em :c:type:"
"`PyDictObject` está obsoleto para módulos de extensão. O acesso a este campo "
"gerará um aviso do compilador em tempo de compilação. Este campo será "
"removido no Python 3.14. (Contribuição de Ramvikrams e Kumar Aditya em :gh:"
"`101193`. PEP de Ken Jin.)"

#: ../../whatsnew/3.12.rst:2165
msgid "Deprecate global configuration variable:"
msgstr "Variáveis de configuração global obsoletas:"

#: ../../whatsnew/3.12.rst:2167
msgid ":c:var:`Py_DebugFlag`: use :c:member:`PyConfig.parser_debug`"
msgstr ":c:var:`Py_DebugFlag`: use :c:member:`PyConfig.parser_debug`"

#: ../../whatsnew/3.12.rst:2168
msgid ":c:var:`Py_VerboseFlag`: use :c:member:`PyConfig.verbose`"
msgstr ":c:var:`Py_VerboseFlag`: use :c:member:`PyConfig.verbose`"

#: ../../whatsnew/3.12.rst:2169
msgid ":c:var:`Py_QuietFlag`: use :c:member:`PyConfig.quiet`"
msgstr ":c:var:`Py_QuietFlag`: use :c:member:`PyConfig.quiet`"

#: ../../whatsnew/3.12.rst:2170
msgid ":c:var:`Py_InteractiveFlag`: use :c:member:`PyConfig.interactive`"
msgstr ":c:var:`Py_InteractiveFlag`: use :c:member:`PyConfig.interactive`"

#: ../../whatsnew/3.12.rst:2171
msgid ":c:var:`Py_InspectFlag`: use :c:member:`PyConfig.inspect`"
msgstr ":c:var:`Py_InspectFlag`: use :c:member:`PyConfig.inspect`"

#: ../../whatsnew/3.12.rst:2172
msgid ":c:var:`Py_OptimizeFlag`: use :c:member:`PyConfig.optimization_level`"
msgstr ":c:var:`Py_OptimizeFlag`: use :c:member:`PyConfig.optimization_level`"

#: ../../whatsnew/3.12.rst:2173
msgid ":c:var:`Py_NoSiteFlag`: use :c:member:`PyConfig.site_import`"
msgstr ":c:var:`Py_NoSiteFlag`: use :c:member:`PyConfig.site_import`"

#: ../../whatsnew/3.12.rst:2174
msgid ":c:var:`Py_BytesWarningFlag`: use :c:member:`PyConfig.bytes_warning`"
msgstr ":c:var:`Py_BytesWarningFlag`: use :c:member:`PyConfig.bytes_warning`"

#: ../../whatsnew/3.12.rst:2175
msgid ":c:var:`Py_FrozenFlag`: use :c:member:`PyConfig.pathconfig_warnings`"
msgstr ":c:var:`Py_FrozenFlag`: use :c:member:`PyConfig.pathconfig_warnings`"

#: ../../whatsnew/3.12.rst:2176
msgid ""
":c:var:`Py_IgnoreEnvironmentFlag`: use :c:member:`PyConfig.use_environment`"
msgstr ""
":c:var:`Py_IgnoreEnvironmentFlag`: use :c:member:`PyConfig.use_environment`"

#: ../../whatsnew/3.12.rst:2177
msgid ""
":c:var:`Py_DontWriteBytecodeFlag`: use :c:member:`PyConfig.write_bytecode`"
msgstr ""
":c:var:`Py_DontWriteBytecodeFlag`: use :c:member:`PyConfig.write_bytecode`"

#: ../../whatsnew/3.12.rst:2178
msgid ""
":c:var:`Py_NoUserSiteDirectory`: use :c:member:`PyConfig.user_site_directory`"
msgstr ""
":c:var:`Py_NoUserSiteDirectory`: use :c:member:`PyConfig.user_site_directory`"

#: ../../whatsnew/3.12.rst:2179
msgid ""
":c:var:`Py_UnbufferedStdioFlag`: use :c:member:`PyConfig.buffered_stdio`"
msgstr ""
":c:var:`Py_UnbufferedStdioFlag`: use :c:member:`PyConfig.buffered_stdio`"

#: ../../whatsnew/3.12.rst:2180
msgid ""
":c:var:`Py_HashRandomizationFlag`: use :c:member:`PyConfig.use_hash_seed` "
"and :c:member:`PyConfig.hash_seed`"
msgstr ""
":c:var:`Py_HashRandomizationFlag`: use :c:member:`PyConfig.use_hash_seed` e :"
"c:member:`PyConfig.hash_seed`"

#: ../../whatsnew/3.12.rst:2182
msgid ":c:var:`Py_IsolatedFlag`: use :c:member:`PyConfig.isolated`"
msgstr ":c:var:`Py_IsolatedFlag`: use :c:member:`PyConfig.isolated`"

#: ../../whatsnew/3.12.rst:2183
msgid ""
":c:var:`Py_LegacyWindowsFSEncodingFlag`: use :c:member:`PyPreConfig."
"legacy_windows_fs_encoding`"
msgstr ""
":c:var:`Py_LegacyWindowsFSEncodingFlag`: use :c:member:`PyPreConfig."
"legacy_windows_fs_encoding`"

#: ../../whatsnew/3.12.rst:2184
msgid ""
":c:var:`Py_LegacyWindowsStdioFlag`: use :c:member:`PyConfig."
"legacy_windows_stdio`"
msgstr ""
":c:var:`Py_LegacyWindowsStdioFlag`: use :c:member:`PyConfig."
"legacy_windows_stdio`"

#: ../../whatsnew/3.12.rst:2185
msgid ""
":c:var:`!Py_FileSystemDefaultEncoding`: use :c:member:`PyConfig."
"filesystem_encoding`"
msgstr ""
":c:var:`!Py_FileSystemDefaultEncoding`: use :c:member:`PyConfig."
"filesystem_encoding`"

#: ../../whatsnew/3.12.rst:2186
msgid ""
":c:var:`!Py_HasFileSystemDefaultEncoding`: use :c:member:`PyConfig."
"filesystem_encoding`"
msgstr ""
":c:var:`!Py_HasFileSystemDefaultEncoding`: use :c:member:`PyConfig."
"filesystem_encoding`"

#: ../../whatsnew/3.12.rst:2187
msgid ""
":c:var:`!Py_FileSystemDefaultEncodeErrors`: use :c:member:`PyConfig."
"filesystem_errors`"
msgstr ""
":c:var:`!Py_FileSystemDefaultEncodeErrors`: use :c:member:`PyConfig."
"filesystem_errors`"

#: ../../whatsnew/3.12.rst:2188
msgid ""
":c:var:`!Py_UTF8Mode`: use :c:member:`PyPreConfig.utf8_mode` (see :c:func:"
"`Py_PreInitialize`)"
msgstr ""
":c:var:`!Py_UTF8Mode`: use :c:member:`PyPreConfig.utf8_mode` (consulte :c:"
"func:`Py_PreInitialize`)"

#: ../../whatsnew/3.12.rst:2190
msgid ""
"The :c:func:`Py_InitializeFromConfig` API should be used with :c:type:"
"`PyConfig` instead. (Contributed by Victor Stinner in :gh:`77782`.)"
msgstr ""
"A API :c:func:`Py_InitializeFromConfig` deve ser usada com :c:type:"
"`PyConfig`. (Contribuição de Victor Stinner em :gh:`77782`.)"

#: ../../whatsnew/3.12.rst:2194
msgid ""
"Creating :c:data:`immutable types <Py_TPFLAGS_IMMUTABLETYPE>` with mutable "
"bases is deprecated and will be disabled in Python 3.14. (:gh:`95388`)"
msgstr ""
"A criação de :c:data:`tipos imutáveis <Py_TPFLAGS_IMMUTABLETYPE>` com bases "
"mutáveis está obsoleta e será desativada no Python 3.14. (:gh:`95388`)"

#: ../../whatsnew/3.12.rst:2197
msgid ""
"The :file:`structmember.h` header is deprecated, though it continues to be "
"available and there are no plans to remove it."
msgstr ""
"O cabeçalho :file:`structmember.h` está obsoleto, embora continue disponível "
"e não haja planos para removê-lo."

#: ../../whatsnew/3.12.rst:2200
msgid ""
"Its contents are now available just by including :file:`Python.h`, with a "
"``Py`` prefix added if it was missing:"
msgstr ""
"O seu conteúdo está agora disponível simplesmente incluindo :file:`Python."
"h`, com um prefixo ``Py`` adicionado se estiver em falta:"

#: ../../whatsnew/3.12.rst:2203
msgid ""
":c:struct:`PyMemberDef`, :c:func:`PyMember_GetOne` and :c:func:"
"`PyMember_SetOne`"
msgstr ""
":c:struct:`PyMemberDef`, :c:func:`PyMember_GetOne` e :c:func:"
"`PyMember_SetOne`"

#: ../../whatsnew/3.12.rst:2205
msgid ""
"Type macros like :c:macro:`Py_T_INT`, :c:macro:`Py_T_DOUBLE`, etc. "
"(previously ``T_INT``, ``T_DOUBLE``, etc.)"
msgstr ""
"Macros de tipo como :c:macro:`Py_T_INT`, :c:macro:`Py_T_DOUBLE`, etc. "
"(anteriormente ``T_INT``, ``T_DOUBLE``, etc.)"

#: ../../whatsnew/3.12.rst:2207
msgid ""
"The flags :c:macro:`Py_READONLY` (previously ``READONLY``) and :c:macro:"
"`Py_AUDIT_READ` (previously all uppercase)"
msgstr ""
"As *flags* :c:macro:`Py_READONLY` (anteriormente ``READONLY``) e :c:macro:"
"`Py_AUDIT_READ` (anteriormente todas maiúsculas)"

#: ../../whatsnew/3.12.rst:2210
msgid "Several items are not exposed from :file:`Python.h`:"
msgstr "Vários itens não estão expostos a partir de :file:`Python.h`:"

#: ../../whatsnew/3.12.rst:2212
msgid ":c:macro:`T_OBJECT` (use :c:macro:`Py_T_OBJECT_EX`)"
msgstr ":c:macro:`T_OBJECT` (use :c:macro:`Py_T_OBJECT_EX`)"

#: ../../whatsnew/3.12.rst:2213
msgid ":c:macro:`T_NONE` (previously undocumented, and pretty quirky)"
msgstr ":c:macro:`T_NONE` (anteriormente não documentado e bastante peculiar)"

#: ../../whatsnew/3.12.rst:2214
msgid "The macro ``WRITE_RESTRICTED`` which does nothing."
msgstr "A macro ``WRITE_RESTRICTED``, que não faz nada."

#: ../../whatsnew/3.12.rst:2215
msgid ""
"The macros ``RESTRICTED`` and ``READ_RESTRICTED``, equivalents of :c:macro:"
"`Py_AUDIT_READ`."
msgstr ""
"As macros ``RESTRICTED`` e ``READ_RESTRICTED``, equivalentes a :c:macro:"
"`Py_AUDIT_READ`."

#: ../../whatsnew/3.12.rst:2217
msgid ""
"In some configurations, ``<stddef.h>`` is not included from :file:`Python."
"h`. It should be included manually when using ``offsetof()``."
msgstr ""
"Em algumas configurações, ``<stddef.h>`` não é incluído a partir de :file:"
"`Python.h`. Deve ser incluído manualmente ao usar ``offsetof()``."

#: ../../whatsnew/3.12.rst:2220
msgid ""
"The deprecated header continues to provide its original contents under the "
"original names. Your old code can stay unchanged, unless the extra include "
"and non-namespaced macros bother you greatly."
msgstr ""
"O cabeçalho obsoleto continua a fornecer o seu conteúdo original com os "
"nomes originais. O seu código antigo pode permanecer inalterado, a menos que "
"a inclusão extra e as macros sem *namespace* o incomodem muito."

#: ../../whatsnew/3.12.rst:2225
msgid ""
"(Contributed in :gh:`47146` by Petr Viktorin, based on earlier work by "
"Alexander Belopolsky and Matthias Braun.)"
msgstr ""
"(Contribuição em :gh:`47146` de Petr Viktorin, com base no trabalho anterior "
"de Alexander Belopolsky e Matthias Braun.)"

#: ../../whatsnew/3.12.rst:2228
msgid ""
":c:func:`PyErr_Fetch` and :c:func:`PyErr_Restore` are deprecated. Use :c:"
"func:`PyErr_GetRaisedException` and :c:func:`PyErr_SetRaisedException` "
"instead. (Contributed by Mark Shannon in :gh:`101578`.)"
msgstr ""
"As funções :c:func:`PyErr_Fetch` e :c:func:`PyErr_Restore` estão obsoletas. "
"Use :c:func:`PyErr_GetRaisedException` e :c:func:`PyErr_SetRaisedException` "
"em vez disso. (Contribuição de Mark Shannon em :gh:`101578`.)"

#: ../../whatsnew/3.12.rst:2233
msgid ""
":c:func:`!PyErr_Display` is deprecated. Use :c:func:`PyErr_DisplayException` "
"instead. (Contributed by Irit Katriel in :gh:`102755`)."
msgstr ""
"A função :c:func:`!PyErr_Display` está obsoleta. Use :c:func:"
"`PyErr_DisplayException` em vez disso. (Contribuição de Irit Katriel em :gh:"
"`102755`.)"

#: ../../whatsnew/3.12.rst:2236
msgid ""
"``_PyErr_ChainExceptions`` is deprecated. Use ``_PyErr_ChainExceptions1`` "
"instead. (Contributed by Irit Katriel in :gh:`102192`.)"
msgstr ""
"A função ``_PyErr_ChainExceptions`` está obsoleta. Use "
"``_PyErr_ChainExceptions1`` em vez disso. (Contribuição de Irit Katriel em :"
"gh:`102192`.)"

#: ../../whatsnew/3.12.rst:2239
msgid ""
"Using :c:func:`PyType_FromSpec`, :c:func:`PyType_FromSpecWithBases` or :c:"
"func:`PyType_FromModuleAndSpec` to create a class whose metaclass overrides :"
"c:member:`~PyTypeObject.tp_new` is deprecated. Call the metaclass instead."
msgstr ""
"Usar :c:func:`PyType_FromSpec`, :c:func:`PyType_FromSpecWithBases` ou :c:"
"func:`PyType_FromModuleAndSpec` para criar uma classe cuja metaclasse "
"substitui :c:member:`~PyTypeObject.tp_new` está obsoleto. Chame a metaclasse "
"em vez disso."

#: ../../deprecations/c-api-pending-removal-in-3.14.rst:4
msgid ""
"The ``ma_version_tag`` field in :c:type:`PyDictObject` for extension modules "
"(:pep:`699`; :gh:`101193`)."
msgstr ""
"O campo ``ma_version_tag`` em :c:type:`PyDictObject` para módulos de "
"extensão (:pep:`699`; :gh:`101193`)."

#: ../../deprecations/c-api-pending-removal-in-3.14.rst:7
msgid ""
"Creating :c:data:`immutable types <Py_TPFLAGS_IMMUTABLETYPE>` with mutable "
"bases (:gh:`95388`)."
msgstr ""
"A criação de :c:data:`tipos imutáveis <Py_TPFLAGS_IMMUTABLETYPE>` com bases "
"mutáveis (:gh:`95388`)."

#: ../../deprecations/c-api-pending-removal-in-3.15.rst:4
msgid ""
"The :c:func:`PyImport_ImportModuleNoBlock`: Use :c:func:"
"`PyImport_ImportModule` instead."
msgstr ""
"A função :c:func:`PyImport_ImportModuleNoBlock`: Use :c:func:"
"`PyImport_ImportModule` em vez disso."

#: ../../deprecations/c-api-pending-removal-in-3.15.rst:6
msgid ""
":c:func:`PyWeakref_GetObject` and :c:func:`PyWeakref_GET_OBJECT`: Use :c:"
"func:`PyWeakref_GetRef` instead. The `pythoncapi-compat project <https://"
"github.com/python/pythoncapi-compat/>`__ can be used to get :c:func:"
"`PyWeakref_GetRef` on Python 3.12 and older."
msgstr ""
"As funções :c:func:`PyWeakref_GetObject` e :c:func:`PyWeakref_GET_OBJECT`: "
"Use :c:func:`PyWeakref_GetRef` em vez disso. O projeto `pythoncapi-compat "
"<https://github.com/python/pythoncapi-compat/>`__ pode ser usado para obter :"
"c:func:`PyWeakref_GetRef` no Python 3.12 e versões anteriores."

#: ../../deprecations/c-api-pending-removal-in-3.15.rst:10
msgid ""
":c:type:`Py_UNICODE` type and the :c:macro:`!Py_UNICODE_WIDE` macro: Use :c:"
"type:`wchar_t` instead."
msgstr ""
"O tipo :c:type:`Py_UNICODE` e a macro :c:macro:`!Py_UNICODE_WIDE`: Use :c:"
"type:`wchar_t` em vez disso."

#: ../../deprecations/c-api-pending-removal-in-3.15.rst:12
msgid ""
":c:func:`!PyUnicode_AsDecodedObject`: Use :c:func:`PyCodec_Decode` instead."
msgstr ""
"A função :c:func:`!PyUnicode_AsDecodedObject`: Use :c:func:`PyCodec_Decode` "
"em vez disso."

#: ../../deprecations/c-api-pending-removal-in-3.15.rst:14
msgid ""
":c:func:`!PyUnicode_AsDecodedUnicode`: Use :c:func:`PyCodec_Decode` instead; "
"Note that some codecs (for example, \"base64\") may return a type other "
"than :class:`str`, such as :class:`bytes`."
msgstr ""
"A função :c:func:`!PyUnicode_AsDecodedUnicode`: Use :c:func:`PyCodec_Decode` "
"em vez disso; Note que alguns *codecs* (por exemplo, \"base64\") podem "
"devolver um tipo diferente de :class:`str`, como :class:`bytes`."

#: ../../deprecations/c-api-pending-removal-in-3.15.rst:17
msgid ""
":c:func:`!PyUnicode_AsEncodedObject`: Use :c:func:`PyCodec_Encode` instead."
msgstr ""
"A função :c:func:`!PyUnicode_AsEncodedObject`: Use :c:func:`PyCodec_Encode` "
"em vez disso."

#: ../../deprecations/c-api-pending-removal-in-3.15.rst:19
msgid ""
":c:func:`!PyUnicode_AsEncodedUnicode`: Use :c:func:`PyCodec_Encode` instead; "
"Note that some codecs (for example, \"base64\") may return a type other "
"than :class:`bytes`, such as :class:`str`."
msgstr ""
"A função :c:func:`!PyUnicode_AsEncodedUnicode`: Use :c:func:`PyCodec_Encode` "
"em vez disso; Note que alguns *codecs* (por exemplo, \"base64\") podem "
"devolver um tipo diferente de :class:`bytes`, como :class:`str`."

#: ../../deprecations/c-api-pending-removal-in-3.15.rst:22
msgid "Python initialization functions, deprecated in Python 3.13:"
msgstr "Funções de inicialização do Python, obsoletas no Python 3.13:"

#: ../../deprecations/c-api-pending-removal-in-3.15.rst:24
msgid ""
":c:func:`Py_GetPath`: Use :c:func:`PyConfig_Get(\"module_search_paths\") "
"<PyConfig_Get>` (:data:`sys.path`) instead."
msgstr ""
"A função :c:func:`Py_GetPath`: Use :c:func:"
"`PyConfig_Get(\"module_search_paths\") <PyConfig_Get>` (:data:`sys.path`) em "
"vez disso."

#: ../../deprecations/c-api-pending-removal-in-3.15.rst:27
msgid ""
":c:func:`Py_GetPrefix`: Use :c:func:`PyConfig_Get(\"base_prefix\") "
"<PyConfig_Get>` (:data:`sys.base_prefix`) instead. Use :c:func:"
"`PyConfig_Get(\"prefix\") <PyConfig_Get>` (:data:`sys.prefix`) if :ref:"
"`virtual environments <venv-def>` need to be handled."
msgstr ""
"A função :c:func:`Py_GetPrefix`: Use :c:func:`PyConfig_Get(\"base_prefix\") "
"<PyConfig_Get>` (:data:`sys.base_prefix`) em vez disso. Use :c:func:"
"`PyConfig_Get(\"prefix\") <PyConfig_Get>` (:data:`sys.prefix`) se for "
"necessário lidar com :ref:`ambientes virtuais <venv-def>`."

#: ../../deprecations/c-api-pending-removal-in-3.15.rst:32
msgid ""
":c:func:`Py_GetExecPrefix`: Use :c:func:`PyConfig_Get(\"base_exec_prefix\") "
"<PyConfig_Get>` (:data:`sys.base_exec_prefix`) instead. Use :c:func:"
"`PyConfig_Get(\"exec_prefix\") <PyConfig_Get>` (:data:`sys.exec_prefix`) if :"
"ref:`virtual environments <venv-def>` need to be handled."
msgstr ""
"A função :c:func:`Py_GetExecPrefix`: Use :c:func:"
"`PyConfig_Get(\"base_exec_prefix\") <PyConfig_Get>` (:data:`sys."
"base_exec_prefix`) em vez disso. Use :c:func:`PyConfig_Get(\"exec_prefix\") "
"<PyConfig_Get>` (:data:`sys.exec_prefix`) se for necessário lidar com :ref:"
"`ambientes virtuais <venv-def>`."

#: ../../deprecations/c-api-pending-removal-in-3.15.rst:38
msgid ""
":c:func:`Py_GetProgramFullPath`: Use :c:func:`PyConfig_Get(\"executable\") "
"<PyConfig_Get>` (:data:`sys.executable`) instead."
msgstr ""
"A função :c:func:`Py_GetProgramFullPath`: Use :c:func:"
"`PyConfig_Get(\"executable\") <PyConfig_Get>` (:data:`sys.executable`) em "
"vez disso."

#: ../../deprecations/c-api-pending-removal-in-3.15.rst:41
msgid ""
":c:func:`Py_GetProgramName`: Use :c:func:`PyConfig_Get(\"executable\") "
"<PyConfig_Get>` (:data:`sys.executable`) instead."
msgstr ""
"A função :c:func:`Py_GetProgramName`: Use :c:func:"
"`PyConfig_Get(\"executable\") <PyConfig_Get>` (:data:`sys.executable`) em "
"vez disso."

#: ../../deprecations/c-api-pending-removal-in-3.15.rst:44
msgid ""
":c:func:`Py_GetPythonHome`: Use :c:func:`PyConfig_Get(\"home\") "
"<PyConfig_Get>` or the :envvar:`PYTHONHOME` environment variable instead."
msgstr ""
"A função :c:func:`Py_GetPythonHome`: Use :c:func:`PyConfig_Get(\"home\") "
"<PyConfig_Get>` ou a variável de ambiente :envvar:`PYTHONHOME` em vez disso."

#: ../../deprecations/c-api-pending-removal-in-3.15.rst:48
msgid ""
"The `pythoncapi-compat project <https://github.com/python/pythoncapi-compat/"
">`__ can be used to get :c:func:`PyConfig_Get` on Python 3.13 and older."
msgstr ""
"O projeto `pythoncapi-compat <https://github.com/python/pythoncapi-compat/"
">`__ pode ser usado para obter :c:func:`PyConfig_Get` no Python 3.13 e "
"versões anteriores."

#: ../../deprecations/c-api-pending-removal-in-3.15.rst:52
msgid ""
"Functions to configure Python's initialization, deprecated in Python 3.11:"
msgstr ""
"Funções para configurar a inicialização do Python, obsoletas no Python 3.11:"

#: ../../deprecations/c-api-pending-removal-in-3.15.rst:54
msgid ":c:func:`!PySys_SetArgvEx()`: Set :c:member:`PyConfig.argv` instead."
msgstr ""
":c:func:`!PySys_SetArgvEx()`: Defina :c:member:`PyConfig.argv` em vez disso."

#: ../../deprecations/c-api-pending-removal-in-3.15.rst:56
msgid ":c:func:`!PySys_SetArgv()`: Set :c:member:`PyConfig.argv` instead."
msgstr ""
":c:func:`!PySys_SetArgv()`: Defina :c:member:`PyConfig.argv` em vez disso."

#: ../../deprecations/c-api-pending-removal-in-3.15.rst:58
msgid ""
":c:func:`!Py_SetProgramName()`: Set :c:member:`PyConfig.program_name` "
"instead."
msgstr ""
"A função :c:func:`!Py_SetProgramName()`: Defina :c:member:`PyConfig."
"program_name` em vez disso."

#: ../../deprecations/c-api-pending-removal-in-3.15.rst:60
msgid ":c:func:`!Py_SetPythonHome()`: Set :c:member:`PyConfig.home` instead."
msgstr ""
":c:func:`!Py_SetPythonHome()`: Defina :c:member:`PyConfig.home` em vez disso."

#: ../../deprecations/c-api-pending-removal-in-3.15.rst:62
msgid ""
":c:func:`PySys_ResetWarnOptions`: Clear :data:`sys.warnoptions` and :data:`!"
"warnings.filters` instead."
msgstr ""
"A função :c:func:`PySys_ResetWarnOptions`: Limpe :data:`sys.warnoptions` e :"
"data:`!warnings.filters` em vez disso."

#: ../../deprecations/c-api-pending-removal-in-3.15.rst:65
msgid ""
"The :c:func:`Py_InitializeFromConfig` API should be used with :c:type:"
"`PyConfig` instead."
msgstr ""
"A API :c:func:`Py_InitializeFromConfig` deve ser usada com :c:type:"
"`PyConfig` em vez disso."

#: ../../deprecations/c-api-pending-removal-in-3.15.rst:68
msgid "Global configuration variables:"
msgstr "Variáveis de configuração global:"

#: ../../deprecations/c-api-pending-removal-in-3.15.rst:70
msgid ""
":c:var:`Py_DebugFlag`: Use :c:member:`PyConfig.parser_debug` or :c:func:"
"`PyConfig_Get(\"parser_debug\") <PyConfig_Get>` instead."
msgstr ""
"A variável :c:var:`Py_DebugFlag`: Use :c:member:`PyConfig.parser_debug` ou :"
"c:func:`PyConfig_Get(\"parser_debug\") <PyConfig_Get>` em vez disso."

#: ../../deprecations/c-api-pending-removal-in-3.15.rst:73
msgid ""
":c:var:`Py_VerboseFlag`: Use :c:member:`PyConfig.verbose` or :c:func:"
"`PyConfig_Get(\"verbose\") <PyConfig_Get>` instead."
msgstr ""
"A variável :c:var:`Py_VerboseFlag`: Use :c:member:`PyConfig.verbose` ou :c:"
"func:`PyConfig_Get(\"verbose\") <PyConfig_Get>` em vez disso."

#: ../../deprecations/c-api-pending-removal-in-3.15.rst:76
msgid ""
":c:var:`Py_QuietFlag`: Use :c:member:`PyConfig.quiet` or :c:func:"
"`PyConfig_Get(\"quiet\") <PyConfig_Get>` instead."
msgstr ""
"A variável :c:var:`Py_QuietFlag`: Use :c:member:`PyConfig.quiet` ou :c:func:"
"`PyConfig_Get(\"quiet\") <PyConfig_Get>` em vez disso."

#: ../../deprecations/c-api-pending-removal-in-3.15.rst:79
msgid ""
":c:var:`Py_InteractiveFlag`: Use :c:member:`PyConfig.interactive` or :c:func:"
"`PyConfig_Get(\"interactive\") <PyConfig_Get>` instead."
msgstr ""
"A variável :c:var:`Py_InteractiveFlag`: Use :c:member:`PyConfig.interactive` "
"ou :c:func:`PyConfig_Get(\"interactive\") <PyConfig_Get>` em vez disso."

#: ../../deprecations/c-api-pending-removal-in-3.15.rst:82
msgid ""
":c:var:`Py_InspectFlag`: Use :c:member:`PyConfig.inspect` or :c:func:"
"`PyConfig_Get(\"inspect\") <PyConfig_Get>` instead."
msgstr ""
"A variável :c:var:`Py_InspectFlag`: Use :c:member:`PyConfig.inspect` ou :c:"
"func:`PyConfig_Get(\"inspect\") <PyConfig_Get>` em vez disso."

#: ../../deprecations/c-api-pending-removal-in-3.15.rst:85
msgid ""
":c:var:`Py_OptimizeFlag`: Use :c:member:`PyConfig.optimization_level` or :c:"
"func:`PyConfig_Get(\"optimization_level\") <PyConfig_Get>` instead."
msgstr ""
"A variável :c:var:`Py_OptimizeFlag`: Use :c:member:`PyConfig."
"optimization_level` ou :c:func:`PyConfig_Get(\"optimization_level\") "
"<PyConfig_Get>` em vez disso."

#: ../../deprecations/c-api-pending-removal-in-3.15.rst:88
msgid ""
":c:var:`Py_NoSiteFlag`: Use :c:member:`PyConfig.site_import` or :c:func:"
"`PyConfig_Get(\"site_import\") <PyConfig_Get>` instead."
msgstr ""
"A variável :c:var:`Py_NoSiteFlag`: Use :c:member:`PyConfig.site_import` ou :"
"c:func:`PyConfig_Get(\"site_import\") <PyConfig_Get>` em vez disso."

#: ../../deprecations/c-api-pending-removal-in-3.15.rst:91
msgid ""
":c:var:`Py_BytesWarningFlag`: Use :c:member:`PyConfig.bytes_warning` or :c:"
"func:`PyConfig_Get(\"bytes_warning\") <PyConfig_Get>` instead."
msgstr ""
"A variável :c:var:`Py_BytesWarningFlag`: Use :c:member:`PyConfig."
"bytes_warning` ou :c:func:`PyConfig_Get(\"bytes_warning\") <PyConfig_Get>` "
"em vez disso."

#: ../../deprecations/c-api-pending-removal-in-3.15.rst:94
msgid ""
":c:var:`Py_FrozenFlag`: Use :c:member:`PyConfig.pathconfig_warnings` or :c:"
"func:`PyConfig_Get(\"pathconfig_warnings\") <PyConfig_Get>` instead."
msgstr ""
"A variável :c:var:`Py_FrozenFlag`: Use :c:member:`PyConfig."
"pathconfig_warnings` ou :c:func:`PyConfig_Get(\"pathconfig_warnings\") "
"<PyConfig_Get>` em vez disso."

#: ../../deprecations/c-api-pending-removal-in-3.15.rst:97
msgid ""
":c:var:`Py_IgnoreEnvironmentFlag`: Use :c:member:`PyConfig.use_environment` "
"or :c:func:`PyConfig_Get(\"use_environment\") <PyConfig_Get>` instead."
msgstr ""
"A variável :c:var:`Py_IgnoreEnvironmentFlag`: Use :c:member:`PyConfig."
"use_environment` ou :c:func:`PyConfig_Get(\"use_environment\") "
"<PyConfig_Get>` em vez disso."

#: ../../deprecations/c-api-pending-removal-in-3.15.rst:100
msgid ""
":c:var:`Py_DontWriteBytecodeFlag`: Use :c:member:`PyConfig.write_bytecode` "
"or :c:func:`PyConfig_Get(\"write_bytecode\") <PyConfig_Get>` instead."
msgstr ""
"A variável :c:var:`Py_DontWriteBytecodeFlag`: Use :c:member:`PyConfig."
"write_bytecode` ou :c:func:`PyConfig_Get(\"write_bytecode\") <PyConfig_Get>` "
"em vez disso."

#: ../../deprecations/c-api-pending-removal-in-3.15.rst:103
msgid ""
":c:var:`Py_NoUserSiteDirectory`: Use :c:member:`PyConfig."
"user_site_directory` or :c:func:`PyConfig_Get(\"user_site_directory\") "
"<PyConfig_Get>` instead."
msgstr ""
"A variável :c:var:`Py_NoUserSiteDirectory`: Use :c:member:`PyConfig."
"user_site_directory` ou :c:func:`PyConfig_Get(\"user_site_directory\") "
"<PyConfig_Get>` em vez disso."

#: ../../deprecations/c-api-pending-removal-in-3.15.rst:106
msgid ""
":c:var:`Py_UnbufferedStdioFlag`: Use :c:member:`PyConfig.buffered_stdio` or :"
"c:func:`PyConfig_Get(\"buffered_stdio\") <PyConfig_Get>` instead."
msgstr ""
"A variável :c:var:`Py_UnbufferedStdioFlag`: Use :c:member:`PyConfig."
"buffered_stdio` ou :c:func:`PyConfig_Get(\"buffered_stdio\") <PyConfig_Get>` "
"em vez disso."

#: ../../deprecations/c-api-pending-removal-in-3.15.rst:109
msgid ""
":c:var:`Py_HashRandomizationFlag`: Use :c:member:`PyConfig.use_hash_seed` "
"and :c:member:`PyConfig.hash_seed` or :c:func:`PyConfig_Get(\"hash_seed\") "
"<PyConfig_Get>` instead."
msgstr ""
"A variável :c:var:`Py_HashRandomizationFlag`: Use :c:member:`PyConfig."
"use_hash_seed` e :c:member:`PyConfig.hash_seed` ou :c:func:"
"`PyConfig_Get(\"hash_seed\") <PyConfig_Get>` em vez disso."

#: ../../deprecations/c-api-pending-removal-in-3.15.rst:113
msgid ""
":c:var:`Py_IsolatedFlag`: Use :c:member:`PyConfig.isolated` or :c:func:"
"`PyConfig_Get(\"isolated\") <PyConfig_Get>` instead."
msgstr ""
"A variável :c:var:`Py_IsolatedFlag`: Use :c:member:`PyConfig.isolated` ou :c:"
"func:`PyConfig_Get(\"isolated\") <PyConfig_Get>` em vez disso."

#: ../../deprecations/c-api-pending-removal-in-3.15.rst:116
msgid ""
":c:var:`Py_LegacyWindowsFSEncodingFlag`: Use :c:member:`PyPreConfig."
"legacy_windows_fs_encoding` or :c:func:"
"`PyConfig_Get(\"legacy_windows_fs_encoding\") <PyConfig_Get>` instead."
msgstr ""
"A variável :c:var:`Py_LegacyWindowsFSEncodingFlag`: Use :c:member:"
"`PyPreConfig.legacy_windows_fs_encoding` ou :c:func:"
"`PyConfig_Get(\"legacy_windows_fs_encoding\") <PyConfig_Get>` em vez disso."

#: ../../deprecations/c-api-pending-removal-in-3.15.rst:119
msgid ""
":c:var:`Py_LegacyWindowsStdioFlag`: Use :c:member:`PyConfig."
"legacy_windows_stdio` or :c:func:`PyConfig_Get(\"legacy_windows_stdio\") "
"<PyConfig_Get>` instead."
msgstr ""
"A variável :c:var:`Py_LegacyWindowsStdioFlag`: Use :c:member:`PyConfig."
"legacy_windows_stdio` ou :c:func:`PyConfig_Get(\"legacy_windows_stdio\") "
"<PyConfig_Get>` em vez disso."

#: ../../deprecations/c-api-pending-removal-in-3.15.rst:122
msgid ""
":c:var:`!Py_FileSystemDefaultEncoding`, :c:var:`!"
"Py_HasFileSystemDefaultEncoding`: Use :c:member:`PyConfig."
"filesystem_encoding` or :c:func:`PyConfig_Get(\"filesystem_encoding\") "
"<PyConfig_Get>` instead."
msgstr ""
":c:var:`!Py_FileSystemDefaultEncoding`, :c:var:`!"
"Py_HasFileSystemDefaultEncoding`: Use :c:member:`PyConfig."
"filesystem_encoding` ou :c:func:`PyConfig_Get(\"filesystem_encoding\") "
"<PyConfig_Get>` em vez disso."

#: ../../deprecations/c-api-pending-removal-in-3.15.rst:125
msgid ""
":c:var:`!Py_FileSystemDefaultEncodeErrors`: Use :c:member:`PyConfig."
"filesystem_errors` or :c:func:`PyConfig_Get(\"filesystem_errors\") "
"<PyConfig_Get>` instead."
msgstr ""
"A variável :c:var:`!Py_FileSystemDefaultEncodeErrors`: Use :c:member:"
"`PyConfig.filesystem_errors` ou :c:func:`PyConfig_Get(\"filesystem_errors\") "
"<PyConfig_Get>` em vez disso."

#: ../../deprecations/c-api-pending-removal-in-3.15.rst:128
msgid ""
":c:var:`!Py_UTF8Mode`: Use :c:member:`PyPreConfig.utf8_mode` or :c:func:"
"`PyConfig_Get(\"utf8_mode\") <PyConfig_Get>` instead. (see :c:func:"
"`Py_PreInitialize`)"
msgstr ""
"A variável :c:var:`!Py_UTF8Mode`: Use :c:member:`PyPreConfig.utf8_mode` ou :"
"c:func:`PyConfig_Get(\"utf8_mode\") <PyConfig_Get>` em vez disso. (consulte :"
"c:func:`Py_PreInitialize`)"

#: ../../deprecations/c-api-pending-removal-in-3.15.rst:133
msgid ""
"The :c:func:`Py_InitializeFromConfig` API should be used with :c:type:"
"`PyConfig` to set these options. Or :c:func:`PyConfig_Get` can be used to "
"get these options at runtime."
msgstr ""
"A API :c:func:`Py_InitializeFromConfig` deve ser usada com :c:type:"
"`PyConfig` para definir estas opções. Ou :c:func:`PyConfig_Get` pode ser "
"usada para obter estas opções em tempo de execução."

#: ../../deprecations/c-api-pending-removal-in-3.16.rst:4
msgid "The bundled copy of ``libmpdec``."
msgstr "A cópia incluída de ``libmpdec``."

#: ../../deprecations/c-api-pending-removal-in-future.rst:4
msgid ""
"The following APIs are deprecated and will be removed, although there is "
"currently no date scheduled for their removal."
msgstr ""
"As seguintes APIs estão obsoletas e serão removidas, embora atualmente não "
"haja data agendada para a sua remoção."

#: ../../deprecations/c-api-pending-removal-in-future.rst:7
msgid ":c:macro:`Py_TPFLAGS_HAVE_FINALIZE`: Unneeded since Python 3.8."
msgstr ":c:macro:`Py_TPFLAGS_HAVE_FINALIZE`: Desnecessária desde o Python 3.8."

#: ../../deprecations/c-api-pending-removal-in-future.rst:9
msgid ":c:func:`PyErr_Fetch`: Use :c:func:`PyErr_GetRaisedException` instead."
msgstr ""
":c:func:`PyErr_Fetch`: Use :c:func:`PyErr_GetRaisedException` em vez disso."

#: ../../deprecations/c-api-pending-removal-in-future.rst:11
msgid ""
":c:func:`PyErr_NormalizeException`: Use :c:func:`PyErr_GetRaisedException` "
"instead."
msgstr ""
"A função :c:func:`PyErr_NormalizeException`: Use :c:func:"
"`PyErr_GetRaisedException` em vez disso."

#: ../../deprecations/c-api-pending-removal-in-future.rst:13
msgid ""
":c:func:`PyErr_Restore`: Use :c:func:`PyErr_SetRaisedException` instead."
msgstr ""
"A função :c:func:`PyErr_Restore`: Use :c:func:`PyErr_SetRaisedException` em "
"vez disso."

#: ../../deprecations/c-api-pending-removal-in-future.rst:15
msgid ""
":c:func:`PyModule_GetFilename`: Use :c:func:`PyModule_GetFilenameObject` "
"instead."
msgstr ""
"A função :c:func:`PyModule_GetFilename`: Use :c:func:"
"`PyModule_GetFilenameObject` em vez disso."

#: ../../deprecations/c-api-pending-removal-in-future.rst:17
msgid ":c:func:`PyOS_AfterFork`: Use :c:func:`PyOS_AfterFork_Child` instead."
msgstr ""
"A função :c:func:`PyOS_AfterFork`: Use :c:func:`PyOS_AfterFork_Child` em vez "
"disso."

#: ../../deprecations/c-api-pending-removal-in-future.rst:19
msgid ""
":c:func:`PySlice_GetIndicesEx`: Use :c:func:`PySlice_Unpack` and :c:func:"
"`PySlice_AdjustIndices` instead."
msgstr ""
"A função :c:func:`PySlice_GetIndicesEx`: Use :c:func:`PySlice_Unpack` e :c:"
"func:`PySlice_AdjustIndices` em vez disso."

#: ../../deprecations/c-api-pending-removal-in-future.rst:21
msgid ":c:func:`PyUnicode_READY`: Unneeded since Python 3.12"
msgstr "A função :c:func:`PyUnicode_READY`: Desnecessária desde o Python 3.12."

#: ../../deprecations/c-api-pending-removal-in-future.rst:23
msgid ":c:func:`!PyErr_Display`: Use :c:func:`PyErr_DisplayException` instead."
msgstr ""
"A função :c:func:`!PyErr_Display`: Use :c:func:`PyErr_DisplayException` em "
"vez disso."

#: ../../deprecations/c-api-pending-removal-in-future.rst:25
msgid ""
":c:func:`!_PyErr_ChainExceptions`: Use :c:func:`!_PyErr_ChainExceptions1` "
"instead."
msgstr ""
"A função :c:func:`!_PyErr_ChainExceptions`: Use :c:func:`!"
"_PyErr_ChainExceptions1` em vez disso."

#: ../../deprecations/c-api-pending-removal-in-future.rst:27
msgid ""
":c:member:`!PyBytesObject.ob_shash` member: call :c:func:`PyObject_Hash` "
"instead."
msgstr ""
"O membro :c:member:`!PyBytesObject.ob_shash`: Chame :c:func:`PyObject_Hash` "
"em vez disso."

#: ../../deprecations/c-api-pending-removal-in-future.rst:29
msgid "Thread Local Storage (TLS) API:"
msgstr "API de Armazenamento Local de *Thread* (TLS):"

#: ../../deprecations/c-api-pending-removal-in-future.rst:31
msgid ""
":c:func:`PyThread_create_key`: Use :c:func:`PyThread_tss_alloc` instead."
msgstr ""
"A função :c:func:`PyThread_create_key`: Use :c:func:`PyThread_tss_alloc` em "
"vez disso."

#: ../../deprecations/c-api-pending-removal-in-future.rst:33
msgid ":c:func:`PyThread_delete_key`: Use :c:func:`PyThread_tss_free` instead."
msgstr ""
"A função :c:func:`PyThread_delete_key`: Use :c:func:`PyThread_tss_free` em "
"vez disso."

#: ../../deprecations/c-api-pending-removal-in-future.rst:35
msgid ""
":c:func:`PyThread_set_key_value`: Use :c:func:`PyThread_tss_set` instead."
msgstr ""
"A função :c:func:`PyThread_set_key_value`: Use :c:func:`PyThread_tss_set` em "
"vez disso."

#: ../../deprecations/c-api-pending-removal-in-future.rst:37
msgid ""
":c:func:`PyThread_get_key_value`: Use :c:func:`PyThread_tss_get` instead."
msgstr ""
"A função :c:func:`PyThread_get_key_value`: Use :c:func:`PyThread_tss_get` em "
"vez disso."

#: ../../deprecations/c-api-pending-removal-in-future.rst:39
msgid ""
":c:func:`PyThread_delete_key_value`: Use :c:func:`PyThread_tss_delete` "
"instead."
msgstr ""
"A função :c:func:`PyThread_delete_key_value`: Use :c:func:"
"`PyThread_tss_delete` em vez disso."

#: ../../deprecations/c-api-pending-removal-in-future.rst:41
msgid ":c:func:`PyThread_ReInitTLS`: Unneeded since Python 3.7."
msgstr ""
"A função :c:func:`PyThread_ReInitTLS`: Desnecessária desde o Python 3.7."

#: ../../whatsnew/3.12.rst:2257
msgid ""
"Remove the :file:`token.h` header file. There was never any public tokenizer "
"C API. The :file:`token.h` header file was only designed to be used by "
"Python internals. (Contributed by Victor Stinner in :gh:`92651`.)"
msgstr ""
"Removido o ficheiro de cabeçalho :file:`token.h`. Nunca existiu uma API C "
"pública para o *tokenizer*. O ficheiro de cabeçalho :file:`token.h` foi "
"concebido apenas para ser usado pelos internos do Python. (Contribuição de "
"Victor Stinner em :gh:`92651`.)"

#: ../../whatsnew/3.12.rst:2262
msgid "Legacy Unicode APIs have been removed. See :pep:`623` for detail."
msgstr ""
"As APIs Unicode antigas foram removidas. Consulte a :pep:`623` para mais "
"detalhes."

#: ../../whatsnew/3.12.rst:2264
msgid ":c:macro:`!PyUnicode_WCHAR_KIND`"
msgstr ":c:macro:`!PyUnicode_WCHAR_KIND`"

#: ../../whatsnew/3.12.rst:2265
msgid ":c:func:`!PyUnicode_AS_UNICODE`"
msgstr ":c:func:`!PyUnicode_AS_UNICODE`"

#: ../../whatsnew/3.12.rst:2266
msgid ":c:func:`!PyUnicode_AsUnicode`"
msgstr ":c:func:`!PyUnicode_AsUnicode`"

#: ../../whatsnew/3.12.rst:2267
msgid ":c:func:`!PyUnicode_AsUnicodeAndSize`"
msgstr ":c:func:`!PyUnicode_AsUnicodeAndSize`"

#: ../../whatsnew/3.12.rst:2268
msgid ":c:func:`!PyUnicode_AS_DATA`"
msgstr ":c:func:`!PyUnicode_AS_DATA`"

#: ../../whatsnew/3.12.rst:2269
msgid ":c:func:`!PyUnicode_FromUnicode`"
msgstr ":c:func:`!PyUnicode_FromUnicode`"

#: ../../whatsnew/3.12.rst:2270
msgid ":c:func:`!PyUnicode_GET_SIZE`"
msgstr ":c:func:`!PyUnicode_GET_SIZE`"

#: ../../whatsnew/3.12.rst:2271
msgid ":c:func:`!PyUnicode_GetSize`"
msgstr ":c:func:`!PyUnicode_GetSize`"

#: ../../whatsnew/3.12.rst:2272
msgid ":c:func:`!PyUnicode_GET_DATA_SIZE`"
msgstr ":c:func:`!PyUnicode_GET_DATA_SIZE`"

#: ../../whatsnew/3.12.rst:2274
msgid ""
"Remove the ``PyUnicode_InternImmortal()`` function macro. (Contributed by "
"Victor Stinner in :gh:`85858`.)"
msgstr ""
"Removida a macro de função ``PyUnicode_InternImmortal()``. (Contribuição de "
"Victor Stinner em :gh:`85858`.)"
