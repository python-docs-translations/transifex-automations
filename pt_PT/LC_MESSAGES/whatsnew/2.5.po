# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001 Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# André Moreira <afrmscb@gmail.com>, 2025
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.14\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-10-07 14:17+0000\n"
"PO-Revision-Date: 2025-09-16 00:02+0000\n"
"Last-Translator: André Moreira <afrmscb@gmail.com>, 2025\n"
"Language-Team: Portuguese (Portugal) (https://app.transifex.com/python-doc/"
"teams/5390/pt_PT/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: pt_PT\n"
"Plural-Forms: nplurals=3; plural=(n == 0 || n == 1) ? 0 : n != 0 && n % "
"1000000 == 0 ? 1 : 2;\n"

#: ../../whatsnew/2.5.rst:3
msgid "What's New in Python 2.5"
msgstr "Novidades no Python 2.5"

#: ../../whatsnew/2.5.rst:0
msgid "Author"
msgstr "Autor"

#: ../../whatsnew/2.5.rst:5
msgid "A.M. Kuchling"
msgstr "A.M. Kuchling"

#: ../../whatsnew/2.5.rst:12
msgid ""
"This article explains the new features in Python 2.5.  The final release of "
"Python 2.5 is scheduled for August 2006; :pep:`356` describes the planned "
"release schedule.  Python 2.5 was released on September 19, 2006."
msgstr ""
"Este artigo explica as novas funcionalidades do Python 2.5. A versão final "
"do Python 2.5 estava prevista para agosto de 2006; a :pep:`356` descreve o "
"cronograma de lançamento planeado. O Python 2.5 foi lançado a 19 de setembro "
"de 2006."

#: ../../whatsnew/2.5.rst:16
msgid ""
"The changes in Python 2.5 are an interesting mix of language and library "
"improvements. The library enhancements will be more important to Python's "
"user community, I think, because several widely useful packages were added.  "
"New modules include ElementTree for XML processing (:mod:`xml.etree`), the "
"SQLite database module (:mod:`sqlite`), and the :mod:`ctypes` module for "
"calling C functions."
msgstr ""
"As alterações no Python 2.5 são uma mistura interessante de melhorias na "
"linguagem e na biblioteca. Acho que as melhorias na biblioteca serão mais "
"importantes para a comunidade de utilizadores do Python, porque vários "
"pacotes amplamente úteis foram adicionados. Novos módulos incluem o "
"ElementTree para processamento de XML (:mod:`xml.etree`), o módulo de base "
"de dados SQLite (:mod:`sqlite`), e o módulo :mod:`ctypes` para chamar "
"funções C."

#: ../../whatsnew/2.5.rst:23
msgid ""
"The language changes are of middling significance.  Some pleasant new "
"features were added, but most of them aren't features that you'll use every "
"day. Conditional expressions were finally added to the language using a "
"novel syntax; see section :ref:`pep-308`.  The new ':keyword:`with`' "
"statement will make writing cleanup code easier (section :ref:`pep-343`).  "
"Values can now be passed into generators (section :ref:`pep-342`).  Imports "
"are now visible as either absolute or relative (section :ref:`pep-328`).  "
"Some corner cases of exception handling are handled better (section :ref:"
"`pep-341`).  All these improvements are worthwhile, but they're improvements "
"to one specific language feature or another; none of them are broad "
"modifications to Python's semantics."
msgstr ""
"As alterações na linguagem são de importância média. Algumas novas "
"funcionalidades agradáveis foram adicionadas, mas a maioria não são "
"funcionalidades que usará todos os dias. Expressões condicionais foram "
"finalmente adicionadas à linguagem usando uma sintaxe nova; veja a secção :"
"ref:`pep-308`. A nova instrução ':keyword:`with`' tornará mais fácil a "
"escrita de código de limpeza (secção :ref:`pep-343`). Valores podem agora "
"ser passados para geradores (secção :ref:`pep-342`). As importações são "
"agora visíveis como absolutas ou relativas (secção :ref:`pep-328`). Alguns "
"casos especiais de tratamento de exceções são agora melhor tratados (secção :"
"ref:`pep-341`). Todas estas melhorias são valiosas, mas são melhorias em "
"funcionalidades específicas da linguagem; nenhuma delas são modificações "
"amplas na semântica do Python."

#: ../../whatsnew/2.5.rst:34
msgid ""
"As well as the language and library additions, other improvements and "
"bugfixes were made throughout the source tree.  A search through the SVN "
"change logs finds there were 353 patches applied and 458 bugs fixed between "
"Python 2.4 and 2.5.  (Both figures are likely to be underestimates.)"
msgstr ""
"Além das adições à linguagem e à biblioteca, outras melhorias e correções de "
"*bugs* foram feitas em toda a árvore de origem. Uma pesquisa nos registos de "
"alterações do SVN mostra que foram aplicadas 353 correções e corrigidos 458 "
"*bugs* entre o Python 2.4 e o 2.5. (Ambos os números são provavelmente "
"subestimados.)"

#: ../../whatsnew/2.5.rst:39
msgid ""
"This article doesn't try to be a complete specification of the new features; "
"instead changes are briefly introduced using helpful examples.  For full "
"details, you should always refer to the documentation for Python 2.5 at "
"https://docs.python.org. If you want to understand the complete "
"implementation and design rationale, refer to the PEP for a particular new "
"feature."
msgstr ""
"Este artigo não tenta ser uma especificação completa das novas "
"funcionalidades; em vez disso, as alterações são brevemente introduzidas "
"usando exemplos úteis. Para detalhes completos, deve sempre consultar a "
"documentação do Python 2.5 em https://docs.python.org. Se quiser entender a "
"implementação completa e a racionalidade do design, consulte a PEP de uma "
"funcionalidade nova específica."

#: ../../whatsnew/2.5.rst:45
msgid ""
"Comments, suggestions, and error reports for this document are welcome; "
"please e-mail them to the author or open a bug in the Python bug tracker."
msgstr ""
"Comentários, sugestões e relatórios de erros para este documento são bem-"
"vindos; por favor envie-os por e-mail ao autor ou abra um *bug* no *bug "
"tracker* do Python."

#: ../../whatsnew/2.5.rst:54
msgid "PEP 308: Conditional Expressions"
msgstr "PEP 308: Expressões Condicionais"

#: ../../whatsnew/2.5.rst:56
msgid ""
"For a long time, people have been requesting a way to write conditional "
"expressions, which are expressions that return value A or value B depending "
"on whether a Boolean value is true or false.  A conditional expression lets "
"you write a single assignment statement that has the same effect as the "
"following::"
msgstr ""
"Há muito tempo que as pessoas têm vindo a pedir uma forma de escrever "
"expressões condicionais, que são expressões que devolvem o valor A ou o "
"valor B dependendo se um valor booleano é verdadeiro ou falso. Uma expressão "
"condicional permite-lhe escrever uma única instrução de atribuição que tem o "
"mesmo efeito que o seguinte::"

#: ../../whatsnew/2.5.rst:61
msgid ""
"if condition:\n"
"    x = true_value\n"
"else:\n"
"    x = false_value"
msgstr ""
"if condition:\n"
"    x = true_value\n"
"else:\n"
"    x = false_value"

#: ../../whatsnew/2.5.rst:66
msgid ""
"There have been endless tedious discussions of syntax on both python-dev and "
"comp.lang.python.  A vote was even held that found the majority of voters "
"wanted conditional expressions in some form, but there was no syntax that "
"was preferred by a clear majority. Candidates included C's ``cond ? true_v : "
"false_v``, ``if cond then true_v else false_v``, and 16 other variations."
msgstr ""
"Houve discussões intermináveis e tediosas sobre sintaxe tanto no python-dev "
"como no comp.lang.python. Foi até realizada uma votação que descobriu que a "
"maioria dos votantes queria expressões condicionais de alguma forma, mas não "
"havia uma sintaxe preferida por uma maioria clara. Os candidatos incluíam o "
"``cond ? true_v : false_v`` do C, ``if cond then true_v else false_v``, e 16 "
"outras variações."

#: ../../whatsnew/2.5.rst:72
msgid "Guido van Rossum eventually chose a surprising syntax::"
msgstr "Guido van Rossum acabou por escolher uma sintaxe surpreendente::"

#: ../../whatsnew/2.5.rst:74
msgid "x = true_value if condition else false_value"
msgstr "x = true_value if condition else false_value"

#: ../../whatsnew/2.5.rst:76
msgid ""
"Evaluation is still lazy as in existing Boolean expressions, so the order of "
"evaluation jumps around a bit.  The *condition* expression in the middle is "
"evaluated first, and the *true_value* expression is evaluated only if the "
"condition was true.  Similarly, the *false_value* expression is only "
"evaluated when the condition is false."
msgstr ""
"A avaliação continua a ser preguiçosa como nas expressões booleanas "
"existentes, pelo que a ordem de avaliação muda um pouco. A expressão "
"*condition* no meio é avaliada primeiro, e a expressão *true_value* é "
"avaliada apenas se a condição for verdadeira. Da mesma forma, a expressão "
"*false_value* é avaliada apenas quando a condição é falsa."

#: ../../whatsnew/2.5.rst:82
msgid ""
"This syntax may seem strange and backwards; why does the condition go in the "
"*middle* of the expression, and not in the front as in C's ``c ? x : y``?  "
"The decision was checked by applying the new syntax to the modules in the "
"standard library and seeing how the resulting code read.  In many cases "
"where a conditional expression is used, one value seems to be the 'common "
"case' and one value is an 'exceptional case', used only on rarer occasions "
"when the condition isn't met.  The conditional syntax makes this pattern a "
"bit more obvious::"
msgstr ""
"Esta sintaxe pode parecer estranha e invertida; porque é que a condição vai "
"no *meio* da expressão, e não na frente como no ``c ? x : y`` do C? A "
"decisão foi verificada aplicando a nova sintaxe aos módulos da biblioteca "
"padrão e vendo como o código resultante se lia. Em muitos casos onde uma "
"expressão condicional é usada, um valor parece ser o 'caso comum' e outro "
"valor é um 'caso excepcional', usado apenas em ocasiões mais raras quando a "
"condição não é cumprida. A sintaxe condicional torna este padrão um pouco "
"mais óbvio::"

#: ../../whatsnew/2.5.rst:90
msgid "contents = ((doc + '\\n') if doc else '')"
msgstr "contents = ((doc + '\\n') if doc else '')"

#: ../../whatsnew/2.5.rst:92
msgid ""
"I read the above statement as meaning \"here *contents* is  usually assigned "
"a value of ``doc+'\\n'``; sometimes  *doc* is empty, in which special case "
"an empty string is returned.\"   I doubt I will use conditional expressions "
"very often where there  isn't a clear common and uncommon case."
msgstr ""
"Eu leio a instrução acima como significando \"aqui *contents* é normalmente "
"atribuído um valor de ``doc+'\\n'``; às vezes *doc* está vazio, nesse caso "
"especial uma string vazia é devolvida.\" Duvido que usarei expressões "
"condicionais com muita frequência onde não haja um caso comum e um caso "
"incomum claros."

#: ../../whatsnew/2.5.rst:97
msgid ""
"There was some discussion of whether the language should require surrounding "
"conditional expressions with parentheses.  The decision was made to *not* "
"require parentheses in the Python language's grammar, but as a matter of "
"style I think you should always use them. Consider these two statements::"
msgstr ""
"Houve alguma discussão sobre se a linguagem deveria exigir que as expressões "
"condicionais fossem rodeadas por parênteses. A decisão foi não exigir "
"parênteses na gramática da linguagem Python, mas como questão de estilo, "
"acho que deve sempre usá-los. Considere estas duas instruções::"

#: ../../whatsnew/2.5.rst:102
msgid ""
"# First version -- no parens\n"
"level = 1 if logging else 0\n"
"\n"
"# Second version -- with parens\n"
"level = (1 if logging else 0)"
msgstr ""
"# Primeira versão -- sem parênteses\n"
"level = 1 if logging else 0\n"
"\n"
"# Segunda versão -- com parênteses\n"
"level = (1 if logging else 0)"

#: ../../whatsnew/2.5.rst:108
msgid ""
"In the first version, I think a reader's eye might group the statement into "
"'level = 1', 'if logging', 'else 0', and think that the condition decides "
"whether the assignment to *level* is performed.  The second version reads "
"better, in my opinion, because it makes it clear that the assignment is "
"always performed and the choice is being made between two values."
msgstr ""
"Na primeira versão, acho que o olho do leitor pode agrupar a instrução em "
"'level = 1', 'if logging', 'else 0', e pensar que a condição decide se a "
"atribuição a *level* é realizada. A segunda versão lê-se melhor, na minha "
"opinião, porque torna claro que a atribuição é sempre realizada e que a "
"escolha está a ser feita entre dois valores."

#: ../../whatsnew/2.5.rst:114
msgid ""
"Another reason for including the brackets: a few odd combinations of list "
"comprehensions and lambdas could look like incorrect conditional "
"expressions. See :pep:`308` for some examples.  If you put parentheses "
"around your conditional expressions, you won't run into this case."
msgstr ""
"Outra razão para incluir os parênteses: algumas combinações estranhas de "
"*list comprehensions* e *lambdas* podem parecer expressões condicionais "
"incorretas. Veja a :pep:`308` para alguns exemplos. Se colocar parênteses à "
"volta das suas expressões condicionais, não encontrará este caso."

#: ../../whatsnew/2.5.rst:122
msgid ":pep:`308` - Conditional Expressions"
msgstr ":pep:`308` - Expressões Condicionais"

#: ../../whatsnew/2.5.rst:123
msgid ""
"PEP written by Guido van Rossum and Raymond D. Hettinger; implemented by "
"Thomas Wouters."
msgstr ""
"PEP escrita por Guido van Rossum e Raymond D. Hettinger; implementada por "
"Thomas Wouters."

#: ../../whatsnew/2.5.rst:132
msgid "PEP 309: Partial Function Application"
msgstr "PEP 309: Aplicação Parcial de Funções"

#: ../../whatsnew/2.5.rst:134
msgid ""
"The :mod:`functools` module is intended to contain tools for functional-"
"style programming."
msgstr ""
"O módulo :mod:`functools` destina-se a conter ferramentas para programação "
"no estilo funcional."

#: ../../whatsnew/2.5.rst:137
msgid ""
"One useful tool in this module is the :func:`partial` function. For programs "
"written in a functional style, you'll sometimes want to construct variants "
"of existing functions that have some of the parameters filled in.  Consider "
"a Python function ``f(a, b, c)``; you could create a new function ``g(b, "
"c)`` that was equivalent to ``f(1, b, c)``.  This is called \"partial "
"function application\"."
msgstr ""
"Uma ferramenta útil neste módulo é a função :func:`partial`. Para programas "
"escritos num estilo funcional, por vezes irá querer construir variantes de "
"funções existentes que têm alguns dos parâmetros preenchidos. Considere uma "
"função Python ``f(a, b, c)``; pode criar uma nova função ``g(b, c)`` que "
"seja equivalente a ``f(1, b, c)``. Isto chama-se \"aplicação parcial de "
"funções\". "

#: ../../whatsnew/2.5.rst:144
msgid ""
":func:`partial` takes the arguments ``(function, arg1, arg2, ... "
"kwarg1=value1, kwarg2=value2)``.  The resulting object is callable, so you "
"can just call it to invoke *function* with the filled-in arguments."
msgstr ""
":func:`partial` recebe os argumentos ``(function, arg1, arg2, ... "
"kwarg1=value1, kwarg2=value2)``. O objeto resultante é chamável, pelo que "
"pode simplesmente chamá-lo para invocar *function* com os argumentos "
"preenchidos."

#: ../../whatsnew/2.5.rst:148
msgid "Here's a small but realistic example::"
msgstr "Aqui está um exemplo pequeno mas realista::"

#: ../../whatsnew/2.5.rst:150
msgid ""
"import functools\n"
"\n"
"def log (message, subsystem):\n"
"    \"Write the contents of 'message' to the specified subsystem.\"\n"
"    print '%s: %s' % (subsystem, message)\n"
"    ...\n"
"\n"
"server_log = functools.partial(log, subsystem='server')\n"
"server_log('Unable to open socket')"
msgstr ""
"import functools\n"
"\n"
"def log (message, subsystem):\n"
"    \"Escreve o conteúdo de 'message' no subsistema especificado.\"\n"
"    print '%s: %s' % (subsystem, message)\n"
"    ...\n"
"\n"
"server_log = functools.partial(log, subsystem='server')\n"
"server_log('Não foi possível abrir o socket')"

#: ../../whatsnew/2.5.rst:160
msgid ""
"Here's another example, from a program that uses PyGTK.  Here a context-"
"sensitive pop-up menu is being constructed dynamically.  The callback "
"provided for the menu option is a partially applied version of the :meth:"
"`open_item` method, where the first argument has been provided. ::"
msgstr ""
"Aqui está outro exemplo, de um programa que usa PyGTK. Aqui, um menu pop-up "
"sensível ao contexto está a ser construído dinamicamente. A função de "
"retorno fornecida para a opção do menu é uma versão parcialmente aplicada do "
"método :meth:`open_item`, onde o primeiro argumento foi fornecido. ::"

#: ../../whatsnew/2.5.rst:165
msgid ""
"...\n"
"class Application:\n"
"    def open_item(self, path):\n"
"       ...\n"
"    def init (self):\n"
"        open_func = functools.partial(self.open_item, item_path)\n"
"        popup_menu.append( (\"Open\", open_func, 1) )"
msgstr ""
"...\n"
"class Application:\n"
"    def open_item(self, path):\n"
"       ...\n"
"    def init (self):\n"
"        open_func = functools.partial(self.open_item, item_path)\n"
"        popup_menu.append( (\"Abrir\", open_func, 1) )"

#: ../../whatsnew/2.5.rst:173
msgid ""
"Another function in the :mod:`functools` module is the "
"``update_wrapper(wrapper, wrapped)`` function that helps you write well-"
"behaved decorators.  :func:`update_wrapper` copies the name, module, and "
"docstring attribute to a wrapper function so that tracebacks inside the "
"wrapped function are easier to understand.  For example, you might write::"
msgstr ""
"Outra função no módulo :mod:`functools` é a função ``update_wrapper(wrapper, "
"wrapped)`` que o ajuda a escrever decoradores bem comportados. :func:"
"`update_wrapper` copia o nome, módulo e atributo docstring para uma função "
"wrapper para que os *tracebacks* dentro da função envolvida sejam mais "
"fáceis de entender. Por exemplo, pode escrever::"

#: ../../whatsnew/2.5.rst:179
msgid ""
"def my_decorator(f):\n"
"    def wrapper(*args, **kwds):\n"
"        print 'Calling decorated function'\n"
"        return f(*args, **kwds)\n"
"    functools.update_wrapper(wrapper, f)\n"
"    return wrapper"
msgstr ""
"def my_decorator(f):\n"
"    def wrapper(*args, **kwds):\n"
"        print 'A chamar função decorada'\n"
"        return f(*args, **kwds)\n"
"    functools.update_wrapper(wrapper, f)\n"
"    return wrapper"

#: ../../whatsnew/2.5.rst:186
msgid ""
":func:`wraps` is a decorator that can be used inside your own decorators to "
"copy the wrapped function's information.  An alternate  version of the "
"previous example would be::"
msgstr ""
":func:`wraps` é um decorador que pode ser usado dentro dos seus próprios "
"decoradores para copiar a informação da função envolvida. Uma versão "
"alternativa do exemplo anterior seria::"

#: ../../whatsnew/2.5.rst:190
msgid ""
"def my_decorator(f):\n"
"    @functools.wraps(f)\n"
"    def wrapper(*args, **kwds):\n"
"        print 'Calling decorated function'\n"
"        return f(*args, **kwds)\n"
"    return wrapper"
msgstr ""
"def my_decorator(f):\n"
"    @functools.wraps(f)\n"
"    def wrapper(*args, **kwds):\n"
"        print 'A chamar função decorada'\n"
"        return f(*args, **kwds)\n"
"    return wrapper"

#: ../../whatsnew/2.5.rst:200
msgid ":pep:`309` - Partial Function Application"
msgstr ":pep:`309` - Aplicação Parcial de Funções"

#: ../../whatsnew/2.5.rst:201
msgid ""
"PEP proposed and written by Peter Harris; implemented by Hye-Shik Chang and "
"Nick Coghlan, with adaptations by Raymond Hettinger."
msgstr ""
"PEP proposta e escrita por Peter Harris; implementada por Hye-Shik Chang e "
"Nick Coghlan, com adaptações de Raymond Hettinger."

#: ../../whatsnew/2.5.rst:210
msgid "PEP 314: Metadata for Python Software Packages v1.1"
msgstr "PEP 314: Metadados para Pacotes de Software Python v1.1"

#: ../../whatsnew/2.5.rst:212
msgid ""
"Some simple dependency support was added to Distutils.  The :func:`setup` "
"function now has ``requires``, ``provides``, and ``obsoletes`` keyword "
"parameters.  When you build a source distribution using the ``sdist`` "
"command, the dependency information will be recorded in the :file:`PKG-INFO` "
"file."
msgstr ""
"Foi adicionado um suporte simples de dependências ao Distutils. A função :"
"func:`setup` tem agora os parâmetros nomeados ``requires``, ``provides`` e "
"``obsoletes``. Quando constrói uma distribuição de origem usando o comando "
"``sdist``, a informação de dependência será registada no ficheiro :file:`PKG-"
"INFO`."

#: ../../whatsnew/2.5.rst:217
msgid ""
"Another new keyword parameter is ``download_url``, which should be set to a "
"URL for the package's source code.  This means it's now possible to look up "
"an entry in the package index, determine the dependencies for a package, and "
"download the required packages. ::"
msgstr ""
"Outro novo parâmetro nomeado é ``download_url``, que deve ser definido para "
"um URL para o código-fonte do pacote. Isto significa que é agora possível "
"procurar uma entrada no índice de pacotes, determinar as dependências de um "
"pacote e descarregar os pacotes necessários. ::"

#: ../../whatsnew/2.5.rst:222
msgid ""
"VERSION = '1.0'\n"
"setup(name='PyPackage',\n"
"      version=VERSION,\n"
"      requires=['numarray', 'zlib (>=1.1.4)'],\n"
"      obsoletes=['OldPackage']\n"
"      download_url=('http://www.example.com/pypackage/dist/pkg-%s.tar.gz'\n"
"                    % VERSION),\n"
"     )"
msgstr ""
"VERSION = '1.0'\n"
"setup(name='PyPackage',\n"
"      version=VERSION,\n"
"      requires=['numarray', 'zlib (>=1.1.4)'],\n"
"      obsoletes=['OldPackage']\n"
"      download_url=('http://www.example.com/pypackage/dist/pkg-%s.tar.gz'\n"
"                    % VERSION),\n"
"     )"

#: ../../whatsnew/2.5.rst:231
msgid ""
"Another new enhancement to the Python package index at https://pypi.org is "
"storing source and binary archives for a package.  The new :command:`upload` "
"Distutils command will upload a package to the repository."
msgstr ""
"Outra nova melhoria no índice de pacotes Python em https://pypi.org é o "
"armazenamento de arquivos de origem e binários para um pacote. O novo "
"comando :command:`upload` do Distutils enviará um pacote para o repositório."

#: ../../whatsnew/2.5.rst:236
msgid ""
"Before a package can be uploaded, you must be able to build a distribution "
"using the :command:`sdist` Distutils command.  Once that works, you can run "
"``python setup.py upload`` to add your package to the PyPI archive.  "
"Optionally you can GPG-sign the package by supplying the :option:`!--sign` "
"and :option:`!--identity` options."
msgstr ""
"Antes de um pacote poder ser enviado, deve ser capaz de construir uma "
"distribuição usando o comando :command:`sdist` do Distutils. Assim que isso "
"funcionar, pode executar ``python setup.py upload`` para adicionar o seu "
"pacote ao arquivo PyPI. Opcionalmente, pode assinar o pacote com GPG "
"fornecendo as opções :option:`!--sign` e :option:`!--identity`."

#: ../../whatsnew/2.5.rst:242
msgid ""
"Package uploading was implemented by Martin von Löwis and Richard Jones."
msgstr ""
"O envio de pacotes foi implementado por Martin von Löwis e Richard Jones."

#: ../../whatsnew/2.5.rst:247
msgid ":pep:`314` - Metadata for Python Software Packages v1.1"
msgstr ":pep:`314` - Metadados para Pacotes de Software Python v1.1"

#: ../../whatsnew/2.5.rst:248
msgid ""
"PEP proposed and written by A.M. Kuchling, Richard Jones, and Fred Drake; "
"implemented by Richard Jones and Fred Drake."
msgstr ""
"PEP proposta e escrita por A.M. Kuchling, Richard Jones e Fred Drake; "
"implementada por Richard Jones e Fred Drake."

#: ../../whatsnew/2.5.rst:257
msgid "PEP 328: Absolute and Relative Imports"
msgstr "PEP 328: Importações Absolutas e Relativas"

#: ../../whatsnew/2.5.rst:259
msgid ""
"The simpler part of :pep:`328` was implemented in Python 2.4: parentheses "
"could now be used to enclose the names imported from a module using the "
"``from ... import ...`` statement, making it easier to import many different "
"names."
msgstr ""
"A parte mais simples da :pep:`328` foi implementada no Python 2.4: "
"parênteses podiam agora ser usados para envolver os nomes importados de um "
"módulo usando a instrução ``from ... import ...``, tornando mais fácil "
"importar muitos nomes diferentes."

#: ../../whatsnew/2.5.rst:263
msgid ""
"The more complicated part has been implemented in Python 2.5: importing a "
"module can be specified to use absolute or package-relative imports.  The "
"plan is to move toward making absolute imports the default in future "
"versions of Python."
msgstr ""
"A parte mais complicada foi implementada no Python 2.5: a importação de um "
"módulo pode ser especificada para usar importações absolutas ou relativas ao "
"pacote. O plano é avançar para tornar as importações absolutas o padrão em "
"futuras versões do Python."

#: ../../whatsnew/2.5.rst:267
msgid "Let's say you have a package directory like this::"
msgstr "Suponha que tem um diretório de pacote como este::"

#: ../../whatsnew/2.5.rst:269
msgid ""
"pkg/\n"
"pkg/__init__.py\n"
"pkg/main.py\n"
"pkg/string.py"
msgstr ""
"pkg/\n"
"pkg/__init__.py\n"
"pkg/main.py\n"
"pkg/string.py"

#: ../../whatsnew/2.5.rst:274
msgid ""
"This defines a package named :mod:`pkg` containing the :mod:`pkg.main` and :"
"mod:`pkg.string` submodules."
msgstr ""
"Isto define um pacote chamado :mod:`pkg` contendo os submódulos :mod:`pkg."
"main` e :mod:`pkg.string`."

#: ../../whatsnew/2.5.rst:277
msgid ""
"Consider the code in the :file:`main.py` module.  What happens if it "
"executes the statement ``import string``?  In Python 2.4 and earlier, it "
"will first look in the package's directory to perform a relative import, "
"finds :file:`pkg/string.py`, imports the contents of that file as the :mod:"
"`pkg.string` module, and that module is bound to the name ``string`` in the :"
"mod:`pkg.main` module's namespace."
msgstr ""
"Considere o código no módulo :file:`main.py`. O que acontece se executar a "
"instrução ``import string``? No Python 2.4 e anteriores, ele procurará "
"primeiro no diretório do pacote para realizar uma importação relativa, "
"encontrará :file:`pkg/string.py`, importará o conteúdo desse ficheiro como o "
"módulo :mod:`pkg.string`, e esse módulo será ligado ao nome ``string`` no "
"espaço de nomes do módulo :mod:`pkg.main`."

#: ../../whatsnew/2.5.rst:284
msgid ""
"That's fine if :mod:`pkg.string` was what you wanted.  But what if you "
"wanted Python's standard :mod:`string` module?  There's no clean way to "
"ignore :mod:`pkg.string` and look for the standard module; generally you had "
"to look at the contents of ``sys.modules``, which is slightly unclean.    "
"Holger Krekel's :mod:`py.std` package provides a tidier way to perform "
"imports from the standard library, ``import py; py.std.string.join()``, but "
"that package isn't available on all Python installations."
msgstr ""
"Isso está bem se :mod:`pkg.string` era o que queria. Mas e se quisesse o "
"módulo :mod:`string` padrão do Python? Não há uma forma limpa de ignorar :"
"mod:`pkg.string` e procurar o módulo padrão; geralmente tinha de ver o "
"conteúdo de ``sys.modules``, o que é ligeiramente deselegante. O pacote :mod:"
"`py.std` de Holger Krekel fornece uma forma mais organizada de realizar "
"importações da biblioteca padrão, ``import py; py.std.string.join()``, mas "
"esse pacote não está disponível em todas as instalações do Python."

#: ../../whatsnew/2.5.rst:292
msgid ""
"Reading code which relies on relative imports is also less clear, because a "
"reader may be confused about which module, :mod:`string` or :mod:`pkg."
"string`, is intended to be used.  Python users soon learned not to duplicate "
"the names of standard library modules in the names of their packages' "
"submodules, but you can't protect against having your submodule's name being "
"used for a new module added in a future version of Python."
msgstr ""
"A leitura de código que depende de importações relativas também é menos "
"clara, porque um leitor pode ficar confuso sobre qual módulo, :mod:`string` "
"ou :mod:`pkg.string`, é pretendido ser usado. Os utilizadores do Python "
"aprenderam rapidamente a não duplicar os nomes dos módulos da biblioteca "
"padrão nos nomes dos submódulos dos seus pacotes, mas não pode proteger-se "
"contra o nome do seu submódulo ser usado para um novo módulo adicionado numa "
"futura versão do Python."

#: ../../whatsnew/2.5.rst:299
msgid ""
"In Python 2.5, you can switch :keyword:`import`'s behaviour to  absolute "
"imports using a ``from __future__ import absolute_import`` directive.  This "
"absolute-import behaviour will become the default in a future version "
"(probably Python 2.7).  Once absolute imports  are the default, ``import "
"string`` will always find the standard library's version. It's suggested "
"that users should begin using absolute imports as much as possible, so it's "
"preferable to begin writing ``from pkg import string`` in your code."
msgstr ""
"No Python 2.5, pode alterar o comportamento de :keyword:`import` para "
"importações absolutas usando uma diretiva ``from __future__ import "
"absolute_import``. Este comportamento de importação absoluta tornar-se-á o "
"predefinido numa futura versão (provavelmente Python 2.7). Assim que as "
"importações absolutas forem o predefinido, ``import string`` encontrará "
"sempre a versão da biblioteca padrão. É sugerido que os utilizadores comecem "
"a usar importações absolutas tanto quanto possível, pelo que é preferível "
"começar a escrever ``from pkg import string`` no seu código."

#: ../../whatsnew/2.5.rst:307
msgid ""
"Relative imports are still possible by adding a leading period  to the "
"module name when using the ``from ... import`` form::"
msgstr ""
"As importações relativas ainda são possíveis adicionando um ponto inicial ao "
"nome do módulo quando se usa a forma ``from ... import``::"

#: ../../whatsnew/2.5.rst:310
msgid ""
"# Import names from pkg.string\n"
"from .string import name1, name2\n"
"# Import pkg.string\n"
"from . import string"
msgstr ""
"# Importar nomes de pkg.string\n"
"from .string import name1, name2\n"
"# Importar pkg.string\n"
"from . import string"

#: ../../whatsnew/2.5.rst:315
msgid ""
"This imports the :mod:`string` module relative to the current package, so "
"in :mod:`pkg.main` this will import *name1* and *name2* from :mod:`pkg."
"string`. Additional leading periods perform the relative import starting "
"from the parent of the current package.  For example, code in the :mod:`A.B."
"C` module can do::"
msgstr ""
"Isto importa o módulo :mod:`string` relativo ao pacote atual, pelo que em :"
"mod:`pkg.main` isto importará *name1* e *name2* de :mod:`pkg.string`. Pontos "
"iniciais adicionais realizam a importação relativa a partir do pai do pacote "
"atual. Por exemplo, o código no módulo :mod:`A.B.C` pode fazer::"

#: ../../whatsnew/2.5.rst:320
msgid ""
"from . import D                 # Imports A.B.D\n"
"from .. import E                # Imports A.E\n"
"from ..F import G               # Imports A.F.G"
msgstr ""
"from . import D                 # Importa A.B.D\n"
"from .. import E                # Importa A.E\n"
"from ..F import G               # Importa A.F.G"

#: ../../whatsnew/2.5.rst:324
msgid ""
"Leading periods cannot be used with the ``import modname``  form of the "
"import statement, only the ``from ... import`` form."
msgstr ""
"Pontos iniciais não podem ser usados com a forma ``import modname`` da "
"instrução de importação, apenas com a forma ``from ... import``."

#: ../../whatsnew/2.5.rst:330
msgid ":pep:`328` - Imports: Multi-Line and Absolute/Relative"
msgstr ":pep:`328` - Importações: Multi-linha e Absolutas/Relativas"

#: ../../whatsnew/2.5.rst:331
msgid "PEP written by Aahz; implemented by Thomas Wouters."
msgstr "PEP escrita por Aahz; implementada por Thomas Wouters."

#: ../../whatsnew/2.5.rst:333
msgid "https://pylib.readthedocs.io/"
msgstr "https://pylib.readthedocs.io/"

#: ../../whatsnew/2.5.rst:334
msgid ""
"The py library by Holger Krekel, which contains the :mod:`py.std` package."
msgstr "A biblioteca py de Holger Krekel, que contém o pacote :mod:`py.std`."

#: ../../whatsnew/2.5.rst:342
msgid "PEP 338: Executing Modules as Scripts"
msgstr "PEP 338: Execução de Módulos como *Scripts*"

#: ../../whatsnew/2.5.rst:344
msgid ""
"The :option:`-m` switch added in Python 2.4 to execute a module as a script "
"gained a few more abilities.  Instead of being implemented in C code inside "
"the Python interpreter, the switch now uses an implementation in a new "
"module, :mod:`runpy`."
msgstr ""
"A opção :option:`-m` adicionada no Python 2.4 para executar um módulo como "
"um *script* ganhou algumas capacidades adicionais. Em vez de ser "
"implementada em código C dentro do interpretador Python, a opção agora usa "
"uma implementação num novo módulo, :mod:`runpy`."

#: ../../whatsnew/2.5.rst:349
msgid ""
"The :mod:`runpy` module implements a more sophisticated import mechanism so "
"that it's now possible to run modules in a package such as :mod:`pychecker."
"checker`. The module also supports alternative import mechanisms such as "
"the :mod:`zipimport` module.  This means you can add a .zip archive's path "
"to ``sys.path`` and then use the :option:`-m` switch to execute code from "
"the archive."
msgstr ""
"O módulo :mod:`runpy` implementa um mecanismo de importação mais "
"sofisticado, pelo que é agora possível executar módulos num pacote como :mod:"
"`pychecker.checker`. O módulo também suporta mecanismos de importação "
"alternativos, como o módulo :mod:`zipimport`. Isto significa que pode "
"adicionar o caminho de um arquivo .zip a ``sys.path`` e depois usar a opção :"
"option:`-m` para executar código do arquivo."

#: ../../whatsnew/2.5.rst:359
msgid ":pep:`338` - Executing modules as scripts"
msgstr ":pep:`338` - Execução de módulos como *scripts*"

#: ../../whatsnew/2.5.rst:360
msgid "PEP written and  implemented by Nick Coghlan."
msgstr "PEP escrita e implementada por Nick Coghlan."

#: ../../whatsnew/2.5.rst:368
msgid "PEP 341: Unified try/except/finally"
msgstr "PEP 341: *try/except/finally* Unificado"

#: ../../whatsnew/2.5.rst:370
msgid ""
"Until Python 2.5, the :keyword:`try` statement came in two flavours. You "
"could use a :keyword:`finally` block to ensure that code is always executed, "
"or one or more :keyword:`except` blocks to catch  specific exceptions.  You "
"couldn't combine both :keyword:`!except` blocks and a :keyword:`!finally` "
"block, because generating the right bytecode for the combined version was "
"complicated and it wasn't clear what the semantics of the combined statement "
"should be."
msgstr ""
"Até ao Python 2.5, a instrução :keyword:`try` vinha em duas variantes. Podia "
"usar um bloco :keyword:`finally` para garantir que o código era sempre "
"executado, ou um ou mais blocos :keyword:`except` para capturar exceções "
"específicas. Não podia combinar blocos :keyword:`!except` e um bloco :"
"keyword:`!finally`, porque gerar o *bytecode* correto para a versão "
"combinada era complicado e não estava claro qual deveria ser a semântica da "
"instrução combinada."

#: ../../whatsnew/2.5.rst:377
msgid ""
"Guido van Rossum spent some time working with Java, which does support the "
"equivalent of combining :keyword:`except` blocks and a :keyword:`finally` "
"block, and this clarified what the statement should mean.  In Python 2.5, "
"you can now write::"
msgstr ""
"Guido van Rossum passou algum tempo a trabalhar com Java, que suporta o "
"equivalente a combinar blocos :keyword:`except` e um bloco :keyword:"
"`finally`, e isto esclareceu o que a instrução deveria significar. No Python "
"2.5, pode agora escrever::"

#: ../../whatsnew/2.5.rst:382
msgid ""
"try:\n"
"    block-1 ...\n"
"except Exception1:\n"
"    handler-1 ...\n"
"except Exception2:\n"
"    handler-2 ...\n"
"else:\n"
"    else-block\n"
"finally:\n"
"    final-block"
msgstr ""
"try:\n"
"    block-1 ...\n"
"except Exception1:\n"
"    handler-1 ...\n"
"except Exception2:\n"
"    handler-2 ...\n"
"else:\n"
"    else-block\n"
"finally:\n"
"    final-block"

#: ../../whatsnew/2.5.rst:393
msgid ""
"The code in *block-1* is executed.  If the code raises an exception, the "
"various :keyword:`except` blocks are tested: if the exception is of class :"
"class:`Exception1`, *handler-1* is executed; otherwise if it's of class :"
"class:`Exception2`, *handler-2* is executed, and so forth.  If no exception "
"is raised, the *else-block* is executed."
msgstr ""
"O código em *block-1* é executado. Se o código gerar uma exceção, os vários "
"blocos :keyword:`except` são testados: se a exceção for da classe :class:"
"`Exception1`, *handler-1* é executado; caso contrário, se for da classe :"
"class:`Exception2`, *handler-2* é executado, e assim por diante. Se nenhuma "
"exceção for gerada, o *else-block* é executado."

#: ../../whatsnew/2.5.rst:399
msgid ""
"No matter what happened previously, the *final-block* is executed once the "
"code block is complete and any raised exceptions handled. Even if there's an "
"error in an exception handler or the *else-block* and a new exception is "
"raised, the code in the *final-block* is still run."
msgstr ""
"Independentemente do que tenha acontecido anteriormente, o *final-block* é "
"executado assim que o bloco de código estiver completo e quaisquer exceções "
"geradas forem tratadas. Mesmo que haja um erro num manipulador de exceções "
"ou no *else-block* e uma nova exceção seja gerada, o código no *final-block* "
"ainda é executado."

#: ../../whatsnew/2.5.rst:407
msgid ":pep:`341` - Unifying try-except and try-finally"
msgstr ":pep:`341` - Unificação de *try-except* e *try-finally*"

#: ../../whatsnew/2.5.rst:408
msgid "PEP written by Georg Brandl;  implementation by Thomas Lee."
msgstr "PEP escrita por Georg Brandl; implementação por Thomas Lee."

#: ../../whatsnew/2.5.rst:416
msgid "PEP 342: New Generator Features"
msgstr "PEP 342: Novas Funcionalidades de Geradores"

#: ../../whatsnew/2.5.rst:418
msgid ""
"Python 2.5 adds a simple way to pass values *into* a generator. As "
"introduced in Python 2.3, generators only produce output; once a generator's "
"code was invoked to create an iterator, there was no way to pass any new "
"information into the function when its execution is resumed.  Sometimes the "
"ability to pass in some information would be useful.  Hackish solutions to "
"this include making the generator's code look at a global variable and then "
"changing the global variable's value, or passing in some mutable object that "
"callers then modify."
msgstr ""
"O Python 2.5 adiciona uma forma simples de passar valores *para* um gerador. "
"Como introduzido no Python 2.3, os geradores apenas produzem saída; uma vez "
"que o código de um gerador era invocado para criar um iterador, não havia "
"forma de passar qualquer nova informação para a função quando a sua execução "
"era retomada. Às vezes, a capacidade de passar alguma informação seria útil. "
"Soluções *hackish* para isto incluem fazer com que o código do gerador olhe "
"para uma variável global e depois alterar o valor da variável global, ou "
"passar algum objeto mutável que os chamadores depois modificam."

#: ../../whatsnew/2.5.rst:426
msgid "To refresh your memory of basic generators, here's a simple example::"
msgstr ""
"Para refrescar a sua memória sobre geradores básicos, aqui está um exemplo "
"simples::"

#: ../../whatsnew/2.5.rst:428
msgid ""
"def counter (maximum):\n"
"    i = 0\n"
"    while i < maximum:\n"
"        yield i\n"
"        i += 1"
msgstr ""
"def counter (maximum):\n"
"    i = 0\n"
"    while i < maximum:\n"
"        yield i\n"
"        i += 1"

#: ../../whatsnew/2.5.rst:434
msgid ""
"When you call ``counter(10)``, the result is an iterator that returns the "
"values from 0 up to 9.  On encountering the :keyword:`yield` statement, the "
"iterator returns the provided value and suspends the function's execution, "
"preserving the local variables. Execution resumes on the following call to "
"the iterator's :meth:`next` method, picking up after the :keyword:`!yield` "
"statement."
msgstr ""
"Quando chama ``counter(10)``, o resultado é um iterador que devolve os "
"valores de 0 a 9. Ao encontrar a instrução :keyword:`yield`, o iterador "
"devolve o valor fornecido e suspende a execução da função, preservando as "
"variáveis locais. A execução retoma na chamada seguinte ao método :meth:"
"`next` do iterador, continuando após a instrução :keyword:`!yield`."

#: ../../whatsnew/2.5.rst:440
msgid ""
"In Python 2.3, :keyword:`yield` was a statement; it didn't return any "
"value.  In 2.5, :keyword:`!yield` is now an expression, returning a value "
"that can be assigned to a variable or otherwise operated on::"
msgstr ""
"No Python 2.3, :keyword:`yield` era uma instrução; não devolvia nenhum "
"valor. No 2.5, :keyword:`!yield` é agora uma expressão, devolvendo um valor "
"que pode ser atribuído a uma variável ou operado de outra forma::"

#: ../../whatsnew/2.5.rst:444
msgid "val = (yield i)"
msgstr "val = (yield i)"

#: ../../whatsnew/2.5.rst:446
msgid ""
"I recommend that you always put parentheses around a :keyword:`yield` "
"expression when you're doing something with the returned value, as in the "
"above example. The parentheses aren't always necessary, but it's easier to "
"always add them instead of having to remember when they're needed."
msgstr ""
"Recomendo que coloque sempre parênteses à volta de uma expressão :keyword:"
"`yield` quando estiver a fazer algo com o valor devolvido, como no exemplo "
"acima. Os parênteses nem sempre são necessários, mas é mais fácil adicioná-"
"los sempre em vez de ter de se lembrar quando são necessários."

#: ../../whatsnew/2.5.rst:451
msgid ""
"(:pep:`342` explains the exact rules, which are that a :keyword:`yield`\\ -"
"expression must always be parenthesized except when it occurs at the top-"
"level expression on the right-hand side of an assignment.  This means you "
"can write ``val = yield i`` but have to use parentheses when there's an "
"operation, as in ``val = (yield i) + 12``.)"
msgstr ""
"(A :pep:`342` explica as regras exatas, que são que uma expressão :keyword:"
"`yield` deve sempre ser colocada entre parênteses, exceto quando ocorre como "
"expressão de nível superior no lado direito de uma atribuição. Isto "
"significa que pode escrever ``val = yield i``, mas tem de usar parênteses "
"quando há uma operação, como em ``val = (yield i) + 12``.)"

#: ../../whatsnew/2.5.rst:458
msgid ""
"Values are sent into a generator by calling its ``send(value)`` method.  The "
"generator's code is then resumed and the :keyword:`yield` expression returns "
"the specified *value*.  If the regular :meth:`next` method is called, the :"
"keyword:`!yield` returns :const:`None`."
msgstr ""
"Os valores são enviados para um gerador chamando o seu método "
"``send(value)``. O código do gerador é então retomado e a expressão :keyword:"
"`yield` devolve o *valor* especificado. Se o método :meth:`next` normal for "
"chamado, o :keyword:`!yield` devolve :const:`None`."

#: ../../whatsnew/2.5.rst:463
msgid ""
"Here's the previous example, modified to allow changing the value of the "
"internal counter. ::"
msgstr ""
"Aqui está o exemplo anterior, modificado para permitir alterar o valor do "
"contador interno. ::"

#: ../../whatsnew/2.5.rst:466
msgid ""
"def counter (maximum):\n"
"    i = 0\n"
"    while i < maximum:\n"
"        val = (yield i)\n"
"        # If value provided, change counter\n"
"        if val is not None:\n"
"            i = val\n"
"        else:\n"
"            i += 1"
msgstr ""
"def counter (maximum):\n"
"    i = 0\n"
"    while i < maximum:\n"
"        val = (yield i)\n"
"        # Se valor fornecido, alterar contador\n"
"        if val is not None:\n"
"            i = val\n"
"        else:\n"
"            i += 1"

#: ../../whatsnew/2.5.rst:476
msgid "And here's an example of changing the counter::"
msgstr "E aqui está um exemplo de alteração do contador::"

#: ../../whatsnew/2.5.rst:478
msgid ""
">>> it = counter(10)\n"
">>> print it.next()\n"
"0\n"
">>> print it.next()\n"
"1\n"
">>> print it.send(8)\n"
"8\n"
">>> print it.next()\n"
"9\n"
">>> print it.next()\n"
"Traceback (most recent call last):\n"
"  File \"t.py\", line 15, in ?\n"
"    print it.next()\n"
"StopIteration"
msgstr ""
">>> it = counter(10)\n"
">>> print it.next()\n"
"0\n"
">>> print it.next()\n"
"1\n"
">>> print it.send(8)\n"
"8\n"
">>> print it.next()\n"
"9\n"
">>> print it.next()\n"
"Traceback (most recent call last):\n"
"  File \"t.py\", line 15, in ?\n"
"    print it.next()\n"
"StopIteration"

#: ../../whatsnew/2.5.rst:493
msgid ""
":keyword:`yield` will usually return :const:`None`, so you should always "
"check for this case.  Don't just use its value in expressions unless you're "
"sure that the :meth:`send` method will be the only method used to resume "
"your generator function."
msgstr ""
":keyword:`yield` normalmente devolverá :const:`None`, pelo que deve sempre "
"verificar este caso. Não use simplesmente o seu valor em expressões a menos "
"que tenha a certeza de que o método :meth:`send` será o único método usado "
"para retomar a sua função geradora."

#: ../../whatsnew/2.5.rst:498
msgid ""
"In addition to :meth:`send`, there are two other new methods on generators:"
msgstr "Além de :meth:`send`, há dois outros novos métodos em geradores:"

#: ../../whatsnew/2.5.rst:500
msgid ""
"``throw(type, value=None, traceback=None)`` is used to raise an exception "
"inside the generator; the exception is raised by the :keyword:`yield` "
"expression where the generator's execution is paused."
msgstr ""
"``throw(type, value=None, traceback=None)`` é usado para gerar uma exceção "
"dentro do gerador; a exceção é gerada pela expressão :keyword:`yield` onde a "
"execução do gerador está pausada."

#: ../../whatsnew/2.5.rst:504
msgid ""
":meth:`close` raises a new :exc:`GeneratorExit` exception inside the "
"generator to terminate the iteration.  On receiving this exception, the "
"generator's code must either raise :exc:`GeneratorExit` or :exc:"
"`StopIteration`.  Catching the :exc:`GeneratorExit` exception and returning "
"a value is illegal and will trigger a :exc:`RuntimeError`; if the function "
"raises some other exception, that exception is propagated to the caller.  :"
"meth:`close` will also be called by Python's garbage collector when the "
"generator is garbage-collected."
msgstr ""
":meth:`close` gera uma nova exceção :exc:`GeneratorExit` dentro do gerador "
"para terminar a iteração. Ao receber esta exceção, o código do gerador deve "
"gerar :exc:`GeneratorExit` ou :exc:`StopIteration`. Capturar a exceção :exc:"
"`GeneratorExit` e devolver um valor é ilegal e irá gerar um :exc:"
"`RuntimeError`; se a função gerar outra exceção, essa exceção é propagada "
"para o chamador. :meth:`close` também será chamado pelo recolhedor de lixo "
"do Python quando o gerador for recolhido."

#: ../../whatsnew/2.5.rst:512
msgid ""
"If you need to run cleanup code when a :exc:`GeneratorExit` occurs, I "
"suggest using a ``try: ... finally:`` suite instead of  catching :exc:"
"`GeneratorExit`."
msgstr ""
"Se precisar de executar código de limpeza quando ocorrer um :exc:"
"`GeneratorExit`, sugiro usar um bloco ``try: ... finally:`` em vez de "
"capturar :exc:`GeneratorExit`."

#: ../../whatsnew/2.5.rst:515
msgid ""
"The cumulative effect of these changes is to turn generators from one-way "
"producers of information into both producers and consumers."
msgstr ""
"O efeito cumulativo destas alterações é transformar os geradores de "
"produtores unidirecionais de informação em produtores e consumidores."

#: ../../whatsnew/2.5.rst:518
msgid ""
"Generators also become *coroutines*, a more generalized form of subroutines. "
"Subroutines are entered at one point and exited at another point (the top of "
"the function, and a :keyword:`return` statement), but coroutines can be "
"entered, exited, and resumed at many different points (the :keyword:`yield` "
"statements). We'll have to figure out patterns for using coroutines "
"effectively in Python."
msgstr ""
"Os geradores também se tornam *corrotinas*, uma forma mais generalizada de "
"sub-rotinas. As sub-rotinas são iniciadas num ponto e terminadas noutro (o "
"topo da função e uma instrução :keyword:`return`), mas as corrotinas podem "
"ser iniciadas, terminadas e retomadas em muitos pontos diferentes (as "
"instruções :keyword:`yield`). Teremos de descobrir padrões para usar "
"corrotinas de forma eficaz em Python."

#: ../../whatsnew/2.5.rst:524
msgid ""
"The addition of the :meth:`close` method has one side effect that isn't "
"obvious. :meth:`close` is called when a generator is garbage-collected, so "
"this means the generator's code gets one last chance to run before the "
"generator is destroyed. This last chance means that ``try...finally`` "
"statements in generators can now be guaranteed to work; the :keyword:"
"`finally` clause will now always get a chance to run.  The syntactic "
"restriction that you couldn't mix :keyword:`yield` statements with a ``try..."
"finally`` suite has therefore been removed.  This seems like a minor bit of "
"language trivia, but using generators and ``try...finally`` is actually "
"necessary in order to implement the :keyword:`with` statement described by :"
"pep:`343`.  I'll look at this new statement in the following  section."
msgstr ""
"A adição do método :meth:`close` tem um efeito secundário que não é óbvio. :"
"meth:`close` é chamado quando um gerador é recolhido pelo *garbage "
"collector*, o que significa que o código do gerador tem uma última "
"oportunidade de ser executado antes de o gerador ser destruído. Esta última "
"oportunidade significa que as instruções ``try...finally`` em geradores "
"podem agora ser garantidas como funcionais; a cláusula :keyword:`finally` "
"terá agora sempre a oportunidade de ser executada. A restrição sintática que "
"impedia a mistura de instruções :keyword:`yield` com um bloco ``try..."
"finally`` foi, portanto, removida. Isto pode parecer um detalhe menor da "
"linguagem, mas o uso de geradores e ``try...finally`` é na verdade "
"necessário para implementar a instrução :keyword:`with` descrita na :pep:"
"`343`. Vou analisar esta nova instrução na secção seguinte."

#: ../../whatsnew/2.5.rst:536
msgid ""
"Another even more esoteric effect of this change: previously, the :attr:"
"`gi_frame` attribute of a generator was always a frame object. It's now "
"possible for :attr:`gi_frame` to be ``None`` once the generator has been "
"exhausted."
msgstr ""
"Outro efeito ainda mais esotérico desta alteração: anteriormente, o "
"atributo :attr:`gi_frame` de um gerador era sempre um objeto de quadro/"
"*frame*. Agora é possível que :attr:`gi_frame` seja ``None`` assim que o "
"gerador estiver esgotado."

#: ../../whatsnew/2.5.rst:544
msgid ":pep:`342` - Coroutines via Enhanced Generators"
msgstr ":pep:`342` - Corrotinas através de Geradores Melhorados"

#: ../../whatsnew/2.5.rst:545
msgid ""
"PEP written by  Guido van Rossum and Phillip J. Eby; implemented by Phillip "
"J. Eby.  Includes examples of  some fancier uses of generators as coroutines."
msgstr ""
"PEP escrita por Guido van Rossum e Phillip J. Eby; implementada por Phillip "
"J. Eby. Inclui exemplos de alguns usos mais elaborados de geradores como "
"corrotinas."

#: ../../whatsnew/2.5.rst:548
msgid ""
"Earlier versions of these features were proposed in  :pep:`288` by Raymond "
"Hettinger and :pep:`325` by Samuele Pedroni."
msgstr ""
"Versões anteriores destas funcionalidades foram propostas na :pep:`288` por "
"Raymond Hettinger e na :pep:`325` por Samuele Pedroni."

#: ../../whatsnew/2.5.rst:551
msgid "https://en.wikipedia.org/wiki/Coroutine"
msgstr "https://en.wikipedia.org/wiki/Coroutine"

#: ../../whatsnew/2.5.rst:552
msgid "The Wikipedia entry for  coroutines."
msgstr "A entrada da Wikipédia sobre corrotinas."

#: ../../whatsnew/2.5.rst:554
msgid ""
"https://web.archive.org/web/20160321211320/http://www.sidhe.org/~dan/blog/"
"archives/000178.html"
msgstr ""
"https://web.archive.org/web/20160321211320/http://www.sidhe.org/~dan/blog/"
"archives/000178.html"

#: ../../whatsnew/2.5.rst:555
msgid ""
"An explanation of coroutines from a Perl point of view, written by Dan "
"Sugalski."
msgstr ""
"Uma explicação sobre corrotinas do ponto de vista do Perl, escrita por Dan "
"Sugalski."

#: ../../whatsnew/2.5.rst:563
msgid "PEP 343: The 'with' statement"
msgstr "PEP 343: A instrução 'with'"

#: ../../whatsnew/2.5.rst:565
msgid ""
"The ':keyword:`with`' statement clarifies code that previously would use "
"``try...finally`` blocks to ensure that clean-up code is executed.  In this "
"section, I'll discuss the statement as it will commonly be used.  In the "
"next section, I'll examine the implementation details and show how to write "
"objects for use with this statement."
msgstr ""
"A instrução ':keyword:`with`' clarifica o código que anteriormente usaria "
"blocos ``try...finally`` para garantir que o código de limpeza é executado. "
"Nesta secção, vou discutir a instrução como será comumente usada. Na secção "
"seguinte, vou examinar os detalhes de implementação e mostrar como escrever "
"objetos para uso com esta instrução."

#: ../../whatsnew/2.5.rst:571
msgid ""
"The ':keyword:`with`' statement is a new control-flow structure whose basic "
"structure is::"
msgstr ""
"A instrução ':keyword:`with`' é uma nova estrutura de controlo de fluxo cuja "
"estrutura básica é::"

#: ../../whatsnew/2.5.rst:574
msgid ""
"with expression [as variable]:\n"
"    with-block"
msgstr ""
"with expressão [as variável]:\n"
"    bloco-with"

#: ../../whatsnew/2.5.rst:577
msgid ""
"The expression is evaluated, and it should result in an object that supports "
"the context management protocol (that is, has :meth:`~object.__enter__` and :"
"meth:`~object.__exit__` methods."
msgstr ""
"A expressão é avaliada e deve resultar num objeto que suporta o protocolo de "
"gestão de contexto (ou seja, tem os métodos :meth:`~object.__enter__` e :"
"meth:`~object.__exit__`."

#: ../../whatsnew/2.5.rst:581
msgid ""
"The object's :meth:`~object.__enter__` is called before *with-block* is "
"executed and therefore can run set-up code. It also may return a value that "
"is bound to the name *variable*, if given.  (Note carefully that *variable* "
"is *not* assigned the result of *expression*.)"
msgstr ""
"O método :meth:`~object.__enter__` do objeto é chamado antes de *bloco-with* "
"ser executado e, portanto, pode executar código de configuração. Também pode "
"devolver um valor que é ligado ao nome *variável*, se fornecido. (Note "
"cuidadosamente que *variável* *não* é atribuída ao resultado de *expressão*.)"

#: ../../whatsnew/2.5.rst:586
msgid ""
"After execution of the *with-block* is finished, the object's :meth:`~object."
"__exit__` method is called, even if the block raised an exception, and can "
"therefore run clean-up code."
msgstr ""
"Após a execução do *bloco-with* estar terminada, o método :meth:`~object."
"__exit__` do objeto é chamado, mesmo que o bloco tenha gerado uma exceção, e "
"pode, portanto, executar código de limpeza."

#: ../../whatsnew/2.5.rst:590
msgid ""
"To enable the statement in Python 2.5, you need to add the following "
"directive to your module::"
msgstr ""
"Para ativar a instrução no Python 2.5, precisa de adicionar a seguinte "
"diretiva ao seu módulo::"

#: ../../whatsnew/2.5.rst:593
msgid "from __future__ import with_statement"
msgstr "from __future__ import with_statement"

#: ../../whatsnew/2.5.rst:595
msgid "The statement will always be enabled in Python 2.6."
msgstr "A instrução estará sempre ativada no Python 2.6."

#: ../../whatsnew/2.5.rst:597
msgid ""
"Some standard Python objects now support the context management protocol and "
"can be used with the ':keyword:`with`' statement. File objects are one "
"example::"
msgstr ""
"Alguns objetos Python padrão agora suportam o protocolo de gestão de "
"contexto e podem ser usados com a instrução ':keyword:`with`'. Os objetos de "
"ficheiro são um exemplo::"

#: ../../whatsnew/2.5.rst:600
msgid ""
"with open('/etc/passwd', 'r') as f:\n"
"    for line in f:\n"
"        print line\n"
"        ... more processing code ..."
msgstr ""
"with open('/etc/passwd', 'r') as f:\n"
"    for line in f:\n"
"        print line\n"
"        ... mais código de processamento ..."

#: ../../whatsnew/2.5.rst:605
msgid ""
"After this statement has executed, the file object in *f* will have been "
"automatically closed, even if the :keyword:`for` loop raised an exception "
"part-way through the block."
msgstr ""
"Após esta instrução ter sido executada, o objeto de ficheiro em *f* terá "
"sido fechado automaticamente, mesmo que o ciclo :keyword:`for` tenha gerado "
"uma exceção a meio do bloco."

#: ../../whatsnew/2.5.rst:611
msgid ""
"In this case, *f* is the same object created by :func:`open`, because :meth:"
"`~object.__enter__` returns *self*."
msgstr ""
"Neste caso, *f* é o mesmo objeto criado por :func:`open`, porque :meth:"
"`~object.__enter__` devolve *self*."

#: ../../whatsnew/2.5.rst:614
msgid ""
"The :mod:`threading` module's locks and condition variables  also support "
"the ':keyword:`with`' statement::"
msgstr ""
"Os bloqueios e variáveis de condição do módulo :mod:`threading` também "
"suportam a instrução ':keyword:`with`'::"

#: ../../whatsnew/2.5.rst:617
msgid ""
"lock = threading.Lock()\n"
"with lock:\n"
"    # Critical section of code\n"
"    ..."
msgstr ""
"lock = threading.Lock()\n"
"with lock:\n"
"    # Secção crítica de código\n"
"    ..."

#: ../../whatsnew/2.5.rst:622
msgid ""
"The lock is acquired before the block is executed and always released once  "
"the block is complete."
msgstr ""
"O bloqueio é adquirido antes de o bloco ser executado e é sempre libertado "
"assim que o bloco estiver completo."

#: ../../whatsnew/2.5.rst:625
msgid ""
"The new :func:`localcontext` function in the :mod:`decimal` module makes it "
"easy to save and restore the current decimal context, which encapsulates the "
"desired precision and rounding characteristics for computations::"
msgstr ""
"A nova função :func:`localcontext` no módulo :mod:`decimal` facilita guardar "
"e restaurar o contexto decimal atual, que encapsula a precisão desejada e as "
"características de arredondamento para cálculos::"

#: ../../whatsnew/2.5.rst:629
msgid ""
"from decimal import Decimal, Context, localcontext\n"
"\n"
"# Displays with default precision of 28 digits\n"
"v = Decimal('578')\n"
"print v.sqrt()\n"
"\n"
"with localcontext(Context(prec=16)):\n"
"    # All code in this block uses a precision of 16 digits.\n"
"    # The original context is restored on exiting the block.\n"
"    print v.sqrt()"
msgstr ""
"from decimal import Decimal, Context, localcontext\n"
"\n"
"# Mostra com a precisão predefinida de 28 dígitos\n"
"v = Decimal('578')\n"
"print v.sqrt()\n"
"\n"
"with localcontext(Context(prec=16)):\n"
"    # Todo o código neste bloco usa uma precisão de 16 dígitos.\n"
"    # O contexto original é restaurado ao sair do bloco.\n"
"    print v.sqrt()"

#: ../../whatsnew/2.5.rst:644
msgid "Writing Context Managers"
msgstr "Escrever Gestores de Contexto"

#: ../../whatsnew/2.5.rst:646
msgid ""
"Under the hood, the ':keyword:`with`' statement is fairly complicated. Most "
"people will only use ':keyword:`!with`' in company with existing objects and "
"don't need to know these details, so you can skip the rest of this section "
"if you like.  Authors of new objects will need to understand the details of "
"the underlying implementation and should keep reading."
msgstr ""
"Por baixo do capot, a instrução ':keyword:`with`' é bastante complicada. A "
"maioria das pessoas usará ':keyword:`!with`' apenas com objetos existentes e "
"não precisa de conhecer estes detalhes, pelo que pode saltar o resto desta "
"secção se quiser. Os autores de novos objetos precisarão de entender os "
"detalhes da implementação subjacente e devem continuar a ler."

#: ../../whatsnew/2.5.rst:652
msgid "A high-level explanation of the context management protocol is:"
msgstr "Uma explicação de alto nível do protocolo de gestão de contexto é:"

#: ../../whatsnew/2.5.rst:654
msgid ""
"The expression is evaluated and should result in an object called a "
"\"context manager\".  The context manager must have :meth:`~object."
"__enter__` and :meth:`~object.__exit__` methods."
msgstr ""
"A expressão é avaliada e deve resultar num objeto chamado \"gestor de "
"contexto\". O gestor de contexto deve ter os métodos :meth:`~object."
"__enter__` e :meth:`~object.__exit__`."

#: ../../whatsnew/2.5.rst:658
msgid ""
"The context manager's :meth:`~object.__enter__` method is called.  The value "
"returned is assigned to *VAR*.  If no ``'as VAR'`` clause is present, the "
"value is simply discarded."
msgstr ""
"O método :meth:`~object.__enter__` do gestor de contexto é chamado. O valor "
"devolvido é atribuído a *VAR*. Se não estiver presente nenhuma cláusula "
"``'as VAR'``, o valor é simplesmente descartado."

#: ../../whatsnew/2.5.rst:662
msgid "The code in *BLOCK* is executed."
msgstr "O código em *BLOCO* é executado."

#: ../../whatsnew/2.5.rst:664
msgid ""
"If *BLOCK* raises an exception, the ``__exit__(type, value, traceback)`` is "
"called with the exception details, the same values returned by :func:`sys."
"exc_info`.  The method's return value controls whether the exception is re-"
"raised: any false value re-raises the exception, and ``True`` will result in "
"suppressing it.  You'll only rarely want to suppress the exception, because "
"if you do the author of the code containing the ':keyword:`with`' statement "
"will never realize anything went wrong."
msgstr ""
"Se *BLOCO* gerar uma exceção, ``__exit__(type, value, traceback)`` é chamado "
"com os detalhes da exceção, os mesmos valores devolvidos por :func:`sys."
"exc_info`. O valor de retorno do método controla se a exceção é gerada "
"novamente: qualquer valor falso gera novamente a exceção, e ``True`` "
"resultará na sua supressão. Só raramente irá querer suprimir a exceção, "
"porque se o fizer, o autor do código que contém a instrução ':keyword:"
"`with`' nunca saberá que algo correu mal."

#: ../../whatsnew/2.5.rst:672
msgid ""
"If *BLOCK* didn't raise an exception,  the :meth:`~object.__exit__` method "
"is still called, but *type*, *value*, and *traceback* are all ``None``."
msgstr ""
"Se *BLOCO* não gerou uma exceção, o método :meth:`~object.__exit__` ainda é "
"chamado, mas *type*, *value* e *traceback* são todos ``None``."

#: ../../whatsnew/2.5.rst:675
msgid ""
"Let's think through an example.  I won't present detailed code but will only "
"sketch the methods necessary for a database that supports transactions."
msgstr ""
"Vamos pensar num exemplo. Não vou apresentar código detalhado, mas apenas "
"esboçar os métodos necessários para uma base de dados que suporta transações."

#: ../../whatsnew/2.5.rst:678
msgid ""
"(For people unfamiliar with database terminology: a set of changes to the "
"database are grouped into a transaction.  Transactions can be either "
"committed, meaning that all the changes are written into the database, or "
"rolled back, meaning that the changes are all discarded and the database is "
"unchanged.  See any database textbook for more information.)"
msgstr ""
"(Para pessoas não familiarizadas com a terminologia de bases de dados: um "
"conjunto de alterações à base de dados é agrupado numa transação. As "
"transações podem ser confirmadas, o que significa que todas as alterações "
"são escritas na base de dados, ou revertidas, o que significa que as "
"alterações são todas descartadas e a base de dados permanece inalterada. "
"Consulte qualquer livro sobre bases de dados para mais informações.)"

#: ../../whatsnew/2.5.rst:684
msgid ""
"Let's assume there's an object representing a database connection. Our goal "
"will be to let the user write code like this::"
msgstr ""
"Vamos assumir que existe um objeto que representa uma ligação a uma base de "
"dados. O nosso objetivo será permitir que o utilizador escreva código como "
"este::"

#: ../../whatsnew/2.5.rst:687
msgid ""
"db_connection = DatabaseConnection()\n"
"with db_connection as cursor:\n"
"    cursor.execute('insert into ...')\n"
"    cursor.execute('delete from ...')\n"
"    # ... more operations ..."
msgstr ""
"db_connection = DatabaseConnection()\n"
"with db_connection as cursor:\n"
"    cursor.execute('insert into ...')\n"
"    cursor.execute('delete from ...')\n"
"    # ... mais operações ..."

#: ../../whatsnew/2.5.rst:693
msgid ""
"The transaction should be committed if the code in the block runs flawlessly "
"or rolled back if there's an exception. Here's the basic interface for :"
"class:`DatabaseConnection` that I'll assume::"
msgstr ""
"A transação deve ser confirmada se o código no bloco for executado sem "
"problemas ou revertida se houver uma exceção. Aqui está a interface básica "
"para :class:`DatabaseConnection` que vou assumir::"

#: ../../whatsnew/2.5.rst:697
msgid ""
"class DatabaseConnection:\n"
"    # Database interface\n"
"    def cursor (self):\n"
"        \"Returns a cursor object and starts a new transaction\"\n"
"    def commit (self):\n"
"        \"Commits current transaction\"\n"
"    def rollback (self):\n"
"        \"Rolls back current transaction\""
msgstr ""
"class DatabaseConnection:\n"
"    # Interface da base de dados\n"
"    def cursor (self):\n"
"        \"Devolve um objeto cursor e inicia uma nova transação\"\n"
"    def commit (self):\n"
"        \"Confirma a transação atual\"\n"
"    def rollback (self):\n"
"        \"Reverte a transação atual\""

#: ../../whatsnew/2.5.rst:706
msgid ""
"The :meth:`~object.__enter__` method is pretty easy, having only to start a "
"new transaction.  For this application the resulting cursor object would be "
"a useful result, so the method will return it.  The user can then add ``as "
"cursor`` to their ':keyword:`with`' statement to bind the cursor to a "
"variable name. ::"
msgstr ""
"O método :meth:`~object.__enter__` é bastante simples, tendo apenas de "
"iniciar uma nova transação. Para esta aplicação, o objeto cursor resultante "
"seria um resultado útil, pelo que o método o devolverá. O utilizador pode "
"então adicionar ``as cursor`` à sua instrução ':keyword:`with`' para ligar o "
"cursor a um nome de variável. ::"

#: ../../whatsnew/2.5.rst:711
msgid ""
"class DatabaseConnection:\n"
"    ...\n"
"    def __enter__ (self):\n"
"        # Code to start a new transaction\n"
"        cursor = self.cursor()\n"
"        return cursor"
msgstr ""
"class DatabaseConnection:\n"
"    ...\n"
"    def __enter__ (self):\n"
"        # Código para iniciar uma nova transação\n"
"        cursor = self.cursor()\n"
"        return cursor"

#: ../../whatsnew/2.5.rst:718
msgid ""
"The :meth:`~object.__exit__` method is the most complicated because it's "
"where most of the work has to be done.  The method has to check if an "
"exception occurred.  If there was no exception, the transaction is "
"committed.  The transaction is rolled back if there was an exception."
msgstr ""
"O método :meth:`~object.__exit__` é o mais complicado porque é onde a maior "
"parte do trabalho tem de ser feito. O método tem de verificar se ocorreu uma "
"exceção. Se não houve exceção, a transação é confirmada. A transação é "
"revertida se houve uma exceção."

#: ../../whatsnew/2.5.rst:723
msgid ""
"In the code below, execution will just fall off the end of the function, "
"returning the default value of ``None``.  ``None`` is false, so the "
"exception will be re-raised automatically.  If you wished, you could be more "
"explicit and add a :keyword:`return` statement at the marked location. ::"
msgstr ""
"No código abaixo, a execução simplesmente chegará ao fim da função, "
"devolvendo o valor predefinido ``None``. ``None`` é falso, pelo que a "
"exceção será gerada novamente automaticamente. Se quisesse, poderia ser mais "
"explícito e adicionar uma instrução :keyword:`return` na localização "
"marcada. ::"

#: ../../whatsnew/2.5.rst:728
msgid ""
"class DatabaseConnection:\n"
"    ...\n"
"    def __exit__ (self, type, value, tb):\n"
"        if tb is None:\n"
"            # No exception, so commit\n"
"            self.commit()\n"
"        else:\n"
"            # Exception occurred, so rollback.\n"
"            self.rollback()\n"
"            # return False"
msgstr ""
"class DatabaseConnection:\n"
"    ...\n"
"    def __exit__ (self, type, value, tb):\n"
"        if tb is None:\n"
"            # Sem exceção, confirmar\n"
"            self.commit()\n"
"        else:\n"
"            # Ocorreu uma exceção, reverter.\n"
"            self.rollback()\n"
"            # return False"

#: ../../whatsnew/2.5.rst:743
msgid "The contextlib module"
msgstr "O módulo contextlib"

#: ../../whatsnew/2.5.rst:745
msgid ""
"The new :mod:`contextlib` module provides some functions and a decorator "
"that are useful for writing objects for use with the ':keyword:`with`' "
"statement."
msgstr ""
"O novo módulo :mod:`contextlib` fornece algumas funções e um decorador que "
"são úteis para escrever objetos para uso com a instrução ':keyword:`with`'."

#: ../../whatsnew/2.5.rst:748
msgid ""
"The decorator is called :func:`contextmanager`, and lets you write a single "
"generator function instead of defining a new class.  The generator should "
"yield exactly one value.  The code up to the :keyword:`yield` will be "
"executed as the :meth:`~object.__enter__` method, and the value yielded will "
"be the method's return value that will get bound to the variable in the ':"
"keyword:`with`' statement's :keyword:`!as` clause, if any.  The code after "
"the :keyword:`yield` will be executed in the :meth:`~object.__exit__` "
"method.  Any exception raised in the block will be raised by the :keyword:`!"
"yield` statement."
msgstr ""
"O decorador chama-se :func:`contextmanager` e permite-lhe escrever uma única "
"função geradora em vez de definir uma nova classe. O gerador deve produzir "
"exatamente um valor. O código até ao :keyword:`yield` será executado como o "
"método :meth:`~object.__enter__`, e o valor produzido será o valor de "
"retorno do método, que será ligado à variável na cláusula :keyword:`!as` da "
"instrução ':keyword:`with`', se existir. O código após o :keyword:`yield` "
"será executado no método :meth:`~object.__exit__`. Qualquer exceção gerada "
"no bloco será gerada pela instrução :keyword:`!yield`."

#: ../../whatsnew/2.5.rst:757
msgid ""
"Our database example from the previous section could be written  using this "
"decorator as::"
msgstr ""
"O exemplo da base de dados da secção anterior poderia ser escrito usando "
"este decorador da seguinte forma::"

#: ../../whatsnew/2.5.rst:760
msgid ""
"from contextlib import contextmanager\n"
"\n"
"@contextmanager\n"
"def db_transaction (connection):\n"
"    cursor = connection.cursor()\n"
"    try:\n"
"        yield cursor\n"
"    except:\n"
"        connection.rollback()\n"
"        raise\n"
"    else:\n"
"        connection.commit()\n"
"\n"
"db = DatabaseConnection()\n"
"with db_transaction(db) as cursor:\n"
"    ..."
msgstr ""
"from contextlib import contextmanager\n"
"\n"
"@contextmanager\n"
"def db_transaction(connection):\n"
"    cursor = connection.cursor()\n"
"    try:\n"
"        yield cursor\n"
"    except:\n"
"        connection.rollback()\n"
"        raise\n"
"    else:\n"
"        connection.commit()\n"
"\n"
"db = DatabaseConnection()\n"
"with db_transaction(db) as cursor:\n"
"    ..."

#: ../../whatsnew/2.5.rst:777
msgid ""
"The :mod:`contextlib` module also has a ``nested(mgr1, mgr2, ...)`` function "
"that combines a number of context managers so you don't need to write nested "
"':keyword:`with`' statements.  In this example, the single ':keyword:`!"
"with`' statement both starts a database transaction and acquires a thread "
"lock::"
msgstr ""
"O módulo :mod:`contextlib` também tem uma função ``nested(mgr1, mgr2, ...)`` "
"que combina vários gestores de contexto, para que não precise de escrever "
"instruções ':keyword:`with`' aninhadas. Neste exemplo, a única instrução ':"
"keyword:`!with`' inicia uma transação de base de dados e adquire um bloqueio "
"de *thread*::"

#: ../../whatsnew/2.5.rst:782
msgid ""
"lock = threading.Lock()\n"
"with nested (db_transaction(db), lock) as (cursor, locked):\n"
"    ..."
msgstr ""
"lock = threading.Lock()\n"
"with nested (db_transaction(db), lock) as (cursor, locked):\n"
"    ..."

#: ../../whatsnew/2.5.rst:786
msgid ""
"Finally, the ``closing(object)`` function returns *object* so that it can be "
"bound to a variable, and calls ``object.close`` at the end of the block. ::"
msgstr ""
"Finalmente, a função ``closing(object)`` devolve *object* para que possa ser "
"ligado a uma variável e chama ``object.close`` no final do bloco. ::"

#: ../../whatsnew/2.5.rst:789
msgid ""
"import urllib, sys\n"
"from contextlib import closing\n"
"\n"
"with closing(urllib.urlopen('http://www.yahoo.com')) as f:\n"
"    for line in f:\n"
"        sys.stdout.write(line)"
msgstr ""
"import urllib, sys\n"
"from contextlib import closing\n"
"\n"
"with closing(urllib.urlopen('http://www.yahoo.com')) as f:\n"
"    for line in f:\n"
"        sys.stdout.write(line)"

#: ../../whatsnew/2.5.rst:799
msgid ":pep:`343` - The \"with\" statement"
msgstr ":pep:`343` - A instrução 'with'"

#: ../../whatsnew/2.5.rst:800
msgid ""
"PEP written by Guido van Rossum and Nick Coghlan; implemented by Mike Bland, "
"Guido van Rossum, and Neal Norwitz.  The PEP shows the code generated for a "
"':keyword:`with`' statement, which can be helpful in learning how the "
"statement works."
msgstr ""
"PEP escrita por Guido van Rossum e Nick Coghlan; implementada por Mike "
"Bland, Guido van Rossum e Neal Norwitz. A PEP mostra o código gerado para "
"uma instrução ':keyword:`with`', o que pode ser útil para aprender como a "
"instrução funciona."

#: ../../whatsnew/2.5.rst:805
msgid "The documentation  for the :mod:`contextlib` module."
msgstr "A documentação para o módulo :mod:`contextlib`."

#: ../../whatsnew/2.5.rst:813
msgid "PEP 352: Exceptions as New-Style Classes"
msgstr "PEP 352: Exceções como Classes de Novo Estilo"

#: ../../whatsnew/2.5.rst:815
msgid ""
"Exception classes can now be new-style classes, not just classic classes, "
"and the built-in :exc:`Exception` class and all the standard built-in "
"exceptions (:exc:`NameError`, :exc:`ValueError`, etc.) are now new-style "
"classes."
msgstr ""
"As classes de exceção podem agora ser classes de novo estilo, não apenas "
"classes clássicas, e a classe integrada :exc:`Exception` e todas as exceções "
"integradas padrão (:exc:`NameError`, :exc:`ValueError`, etc.) são agora "
"classes de novo estilo."

#: ../../whatsnew/2.5.rst:819
msgid ""
"The inheritance hierarchy for exceptions has been rearranged a bit. In 2.5, "
"the inheritance relationships are::"
msgstr ""
"A hierarquia de herança para exceções foi um pouco reorganizada. No 2.5, as "
"relações de herança são::"

#: ../../whatsnew/2.5.rst:822
msgid ""
"BaseException       # New in Python 2.5\n"
"|- KeyboardInterrupt\n"
"|- SystemExit\n"
"|- Exception\n"
"   |- (all other current built-in exceptions)"
msgstr ""
"BaseException       # Novo no Python 2.5\n"
"|- KeyboardInterrupt\n"
"|- SystemExit\n"
"|- Exception\n"
"   |- (todas as outras exceções integradas atuais)"

#: ../../whatsnew/2.5.rst:828
msgid ""
"This rearrangement was done because people often want to catch all "
"exceptions that indicate program errors.  :exc:`KeyboardInterrupt` and :exc:"
"`SystemExit` aren't errors, though, and usually represent an explicit action "
"such as the user hitting :kbd:`Control-C` or code calling :func:`sys.exit`.  "
"A bare ``except:`` will catch all exceptions, so you commonly need to list :"
"exc:`KeyboardInterrupt` and :exc:`SystemExit` in order to re-raise them.  "
"The usual pattern is::"
msgstr ""
"Esta reorganização foi feita porque as pessoas frequentemente querem "
"capturar todas as exceções que indicam erros de programa. :exc:"
"`KeyboardInterrupt` e :exc:`SystemExit` não são erros, no entanto, e "
"geralmente representam uma ação explícita, como o utilizador premir :kbd:"
"`Control-C` ou o código chamar :func:`sys.exit`. Um ``except:`` simples "
"capturará todas as exceções, pelo que normalmente precisa de listar :exc:"
"`KeyboardInterrupt` e :exc:`SystemExit` para as gerar novamente. O padrão "
"habitual é::"

#: ../../whatsnew/2.5.rst:835
msgid ""
"try:\n"
"    ...\n"
"except (KeyboardInterrupt, SystemExit):\n"
"    raise\n"
"except:\n"
"    # Log error...\n"
"    # Continue running program..."
msgstr ""
"try:\n"
"    ...\n"
"except (KeyboardInterrupt, SystemExit):\n"
"    raise\n"
"except:\n"
"    # Registar erro...\n"
"    # Continuar a executar o programa..."

#: ../../whatsnew/2.5.rst:843
msgid ""
"In Python 2.5, you can now write ``except Exception`` to achieve the same "
"result, catching all the exceptions that usually indicate errors  but "
"leaving :exc:`KeyboardInterrupt` and :exc:`SystemExit` alone.  As in "
"previous versions, a bare ``except:`` still catches all exceptions."
msgstr ""
"No Python 2.5, pode agora escrever ``except Exception`` para obter o mesmo "
"resultado, capturando todas as exceções que normalmente indicam erros, mas "
"deixando :exc:`KeyboardInterrupt` e :exc:`SystemExit` de lado. Como nas "
"versões anteriores, um ``except:`` simples ainda captura todas as exceções."

#: ../../whatsnew/2.5.rst:848
msgid ""
"The goal for Python 3.0 is to require any class raised as an exception to "
"derive from :exc:`BaseException` or some descendant of :exc:`BaseException`, "
"and future releases in the Python 2.x series may begin to enforce this "
"constraint. Therefore, I suggest you begin making all your exception classes "
"derive from :exc:`Exception` now.  It's been suggested that the bare "
"``except:`` form should be removed in Python 3.0, but Guido van Rossum "
"hasn't decided whether to do this or not."
msgstr ""
"O objetivo para o Python 3.0 é exigir que qualquer classe gerada como uma "
"exceção derive de :exc:`BaseException` ou de algum descendente de :exc:"
"`BaseException`, e futuras versões da série Python 2.x podem começar a impor "
"esta restrição. Portanto, sugiro que comece a fazer com que todas as suas "
"classes de exceção derivem de :exc:`Exception` agora. Foi sugerido que a "
"forma ``except:`` simples deveria ser removida no Python 3.0, mas Guido van "
"Rossum ainda não decidiu se o fará ou não."

#: ../../whatsnew/2.5.rst:856
msgid ""
"Raising of strings as exceptions, as in the statement ``raise \"Error "
"occurred\"``, is deprecated in Python 2.5 and will trigger a warning.  The "
"aim is to be able to remove the string-exception feature in a few releases."
msgstr ""
"Gerar *strings* como exceções, como na instrução ``raise \"Error "
"occurred\"``, está obsoleto no Python 2.5 e irá gerar um aviso. O objetivo é "
"poder remover a funcionalidade de exceção de *string* em algumas versões."

#: ../../whatsnew/2.5.rst:863
msgid ":pep:`352` - Required Superclass for Exceptions"
msgstr ":pep:`352` - Superclasse Obrigatória para Exceções"

#: ../../whatsnew/2.5.rst:864
msgid ""
"PEP written by  Brett Cannon and Guido van Rossum; implemented by Brett "
"Cannon."
msgstr ""
"PEP escrita por Brett Cannon e Guido van Rossum; implementada por Brett "
"Cannon."

#: ../../whatsnew/2.5.rst:872
msgid "PEP 353: Using ssize_t as the index type"
msgstr "PEP 353: Usar ssize_t como tipo de índice"

#: ../../whatsnew/2.5.rst:874
msgid ""
"A wide-ranging change to Python's C API, using a new  :c:type:`Py_ssize_t` "
"type definition instead of :c:expr:`int`,  will permit the interpreter to "
"handle more data on 64-bit platforms. This change doesn't affect Python's "
"capacity on 32-bit platforms."
msgstr ""
"Uma alteração abrangente à API C do Python, usando uma nova definição de "
"tipo :c:type:`Py_ssize_t` em vez de :c:expr:`int`, permitirá que o "
"interpretador trate mais dados em plataformas de 64 bits. Esta alteração não "
"afeta a capacidade do Python em plataformas de 32 bits."

#: ../../whatsnew/2.5.rst:879
msgid ""
"Various pieces of the Python interpreter used C's :c:expr:`int` type to "
"store sizes or counts; for example, the number of items in a list or tuple "
"were stored in an :c:expr:`int`.  The C compilers for most 64-bit platforms "
"still define :c:expr:`int` as a 32-bit type, so that meant that lists could "
"only hold up to ``2**31 - 1`` = 2147483647 items. (There are actually a few "
"different programming models that 64-bit C compilers can use -- see https://"
"unix.org/version2/whatsnew/lp64_wp.html for a discussion -- but the most "
"commonly available model leaves :c:expr:`int` as 32 bits.)"
msgstr ""
"Várias partes do interpretador Python usavam o tipo :c:expr:`int` do C para "
"armazenar tamanhos ou contagens; por exemplo, o número de itens numa lista "
"ou tuplo era armazenado num :c:expr:`int`. Os compiladores C para a maioria "
"das plataformas de 64 bits ainda definem :c:expr:`int` como um tipo de 32 "
"bits, pelo que isso significava que as listas só podiam conter até ``2**31 - "
"1`` = 2147483647 itens. (Existem, na verdade, alguns modelos de programação "
"diferentes que os compiladores C de 64 bits podem usar -- veja https://unix."
"org/version2/whatsnew/lp64_wp.html para uma discussão -- mas o modelo mais "
"comumente disponível deixa :c:expr:`int` como 32 bits.)"

#: ../../whatsnew/2.5.rst:888
msgid ""
"A limit of 2147483647 items doesn't really matter on a 32-bit platform "
"because you'll run out of memory before hitting the length limit. Each list "
"item requires space for a pointer, which is 4 bytes, plus space for a :c:"
"type:`PyObject` representing the item.  2147483647\\*4 is already more bytes "
"than a 32-bit address space can contain."
msgstr ""
"Um limite de 2147483647 itens não é realmente relevante numa plataforma de "
"32 bits porque ficará sem memória antes de atingir o limite de comprimento. "
"Cada item da lista requer espaço para um ponteiro, que são 4 bytes, além de "
"espaço para um :c:type:`PyObject` que representa o item. 2147483647\\*4 já "
"são mais bytes do que um espaço de endereçamento de 32 bits pode conter."

#: ../../whatsnew/2.5.rst:894
msgid ""
"It's possible to address that much memory on a 64-bit platform, however.  "
"The pointers for a list that size would only require 16 GiB of space, so "
"it's not unreasonable that Python programmers might construct lists that "
"large. Therefore, the Python interpreter had to be changed to use some type "
"other than :c:expr:`int`, and this will be a 64-bit type on 64-bit "
"platforms.  The change will cause incompatibilities on 64-bit machines, so "
"it was deemed worth making the transition now, while the number of 64-bit "
"users is still relatively small. (In 5 or 10 years, we may *all* be on 64-"
"bit machines, and the transition would be more painful then.)"
msgstr ""
"É possível endereçar essa quantidade de memória numa plataforma de 64 bits. "
"Os ponteiros para uma lista desse tamanho só requereriam 16 GiB de espaço, "
"pelo que não é irrazoável que programadores Python possam construir listas "
"desse tamanho. Portanto, o interpretador Python teve de ser alterado para "
"usar um tipo diferente de :c:expr:`int`, e este será um tipo de 64 bits em "
"plataformas de 64 bits. A alteração causará incompatibilidades em máquinas "
"de 64 bits, pelo que foi considerado valer a pena fazer a transição agora, "
"enquanto o número de utilizadores de 64 bits ainda é relativamente pequeno. "
"(Daqui a 5 ou 10 anos, todos podemos estar em máquinas de 64 bits, e a "
"transição seria mais dolorosa.)"

#: ../../whatsnew/2.5.rst:904
msgid ""
"This change most strongly affects authors of C extension modules.   Python "
"strings and container types such as lists and tuples  now use :c:type:"
"`Py_ssize_t` to store their size.   Functions such as :c:func:`PyList_Size`  "
"now return :c:type:`Py_ssize_t`.  Code in extension modules may therefore "
"need to have some variables changed to :c:type:`Py_ssize_t`."
msgstr ""
"Esta alteração afeta principalmente os autores de módulos de extensão em C. "
"As strings Python e os tipos de contentores, como listas e tuplos, usam "
"agora :c:type:`Py_ssize_t` para armazenar o seu tamanho. Funções como :c:"
"func:`PyList_Size` devolvem agora :c:type:`Py_ssize_t`. O código nos módulos "
"de extensão pode, portanto, precisar de ter algumas variáveis alteradas "
"para :c:type:`Py_ssize_t`."

#: ../../whatsnew/2.5.rst:910
msgid ""
"The :c:func:`PyArg_ParseTuple` and :c:func:`Py_BuildValue` functions have a "
"new conversion code, ``n``, for :c:type:`Py_ssize_t`.   :c:func:"
"`PyArg_ParseTuple`'s ``s#`` and ``t#`` still output :c:expr:`int` by "
"default, but you can define the macro  :c:macro:`PY_SSIZE_T_CLEAN` before "
"including :file:`Python.h`  to make them return :c:type:`Py_ssize_t`."
msgstr ""
"As funções :c:func:`PyArg_ParseTuple` e :c:func:`Py_BuildValue` têm um novo "
"código de conversão, ``n``, para :c:type:`Py_ssize_t`. Os ``s#`` e ``t#`` "
"de :c:func:`PyArg_ParseTuple` ainda produzem :c:expr:`int` por predefinição, "
"mas pode definir a macro :c:macro:`PY_SSIZE_T_CLEAN` antes de incluir :file:"
"`Python.h` para fazê-los devolver :c:type:`Py_ssize_t`."

#: ../../whatsnew/2.5.rst:916
msgid ""
":pep:`353` has a section on conversion guidelines that  extension authors "
"should read to learn about supporting 64-bit platforms."
msgstr ""
"A :pep:`353` tem uma secção sobre diretrizes de conversão que os autores de "
"extensões devem ler para aprender sobre o suporte a plataformas de 64 bits."

#: ../../whatsnew/2.5.rst:922
msgid ":pep:`353` - Using ssize_t as the index type"
msgstr ":pep:`353` - Usar ssize_t como tipo de índice"

#: ../../whatsnew/2.5.rst:923
msgid "PEP written and implemented by Martin von Löwis."
msgstr "PEP escrita e implementada por Martin von Löwis."

#: ../../whatsnew/2.5.rst:931
msgid "PEP 357: The '__index__' method"
msgstr "PEP 357: O método '__index__'"

#: ../../whatsnew/2.5.rst:933
msgid ""
"The NumPy developers had a problem that could only be solved by adding a new "
"special method, :meth:`__index__`.  When using slice notation, as in "
"``[start:stop:step]``, the values of the *start*, *stop*, and *step* indexes "
"must all be either integers or long integers.  NumPy defines a variety of "
"specialized integer types corresponding to unsigned and signed integers of "
"8, 16, 32, and 64 bits, but there was no way to signal that these types "
"could be used as slice indexes."
msgstr ""
"Os programadores do NumPy tinham um problema que só poderia ser resolvido "
"adicionando um novo método especial, :meth:`__index__`. Ao usar a notação de "
"fatia, como em ``[start:stop:step]``, os valores dos índices *start*, *stop* "
"e *step* devem ser todos inteiros ou inteiros longos. O NumPy define uma "
"variedade de tipos inteiros especializados correspondentes a inteiros com e "
"sem sinal de 8, 16, 32 e 64 bits, mas não havia forma de sinalizar que esses "
"tipos poderiam ser usados como índices de fatia."

#: ../../whatsnew/2.5.rst:941
msgid ""
"Slicing can't just use the existing :meth:`__int__` method because that "
"method is also used to implement coercion to integers.  If slicing used :"
"meth:`__int__`, floating-point numbers would also become legal slice indexes "
"and that's clearly an undesirable behaviour."
msgstr ""
"A fatiagem não pode simplesmente usar o método :meth:`__int__` existente "
"porque esse método também é usado para implementar a coerção para inteiros. "
"Se a fatiagem usasse :meth:`__int__`, os números de ponto flutuante também "
"se tornariam índices de fatia legais, e isso é claramente um comportamento "
"indesejável."

#: ../../whatsnew/2.5.rst:946
msgid ""
"Instead, a new special method called :meth:`__index__` was added.  It takes "
"no arguments and returns an integer giving the slice index to use.  For "
"example::"
msgstr ""
"Em vez disso, foi adicionado um novo método especial chamado :meth:"
"`__index__`. Ele não recebe argumentos e devolve um inteiro que dá o índice "
"de fatia a usar. Por exemplo::"

#: ../../whatsnew/2.5.rst:949
msgid ""
"class C:\n"
"    def __index__ (self):\n"
"        return self.value"
msgstr ""
"class C:\n"
"    def __index__(self):\n"
"        return self.value"

#: ../../whatsnew/2.5.rst:953
msgid ""
"The return value must be either a Python integer or long integer. The "
"interpreter will check that the type returned is correct, and raises a :exc:"
"`TypeError` if this requirement isn't met."
msgstr ""
"O valor de retorno deve ser um inteiro Python ou um inteiro longo. O "
"interpretador verificará se o tipo devolvido está correto e gera um :exc:"
"`TypeError` se este requisito não for cumprido."

#: ../../whatsnew/2.5.rst:957
msgid ""
"A corresponding :c:member:`~PyNumberMethods.nb_index` slot was added to the "
"C-level :c:type:`PyNumberMethods` structure to let C extensions implement "
"this protocol. ``PyNumber_Index(obj)`` can be used in extension code to call "
"the :meth:`__index__` function and retrieve its result."
msgstr ""
"Um *slot* correspondente :c:member:`~PyNumberMethods.nb_index` foi "
"adicionado à estrutura :c:type:`PyNumberMethods` ao nível de C para permitir "
"que as extensões C implementem este protocolo. ``PyNumber_Index(obj)`` pode "
"ser usado no código de extensão para chamar a função :meth:`__index__` e "
"obter o seu resultado."

#: ../../whatsnew/2.5.rst:965
msgid ":pep:`357` - Allowing Any Object to be Used for Slicing"
msgstr ":pep:`357` - Permitir que Qualquer Objeto seja Usado para Fatiagem"

#: ../../whatsnew/2.5.rst:966
msgid "PEP written  and implemented by Travis Oliphant."
msgstr "PEP escrita e implementada por Travis Oliphant."

#: ../../whatsnew/2.5.rst:974
msgid "Other Language Changes"
msgstr "Outras Alterações na Linguagem"

#: ../../whatsnew/2.5.rst:976
msgid ""
"Here are all of the changes that Python 2.5 makes to the core Python "
"language."
msgstr ""
"Aqui estão todas as alterações que o Python 2.5 faz à linguagem principal do "
"Python."

#: ../../whatsnew/2.5.rst:978
msgid ""
"The :class:`dict` type has a new hook for letting subclasses provide a "
"default value when a key isn't contained in the dictionary. When a key isn't "
"found, the dictionary's ``__missing__(key)`` method will be called.  This "
"hook is used to implement the new :class:`defaultdict` class in the :mod:"
"`collections` module.  The following example defines a dictionary  that "
"returns zero for any missing key::"
msgstr ""
"O tipo :class:`dict` tem um novo gancho para permitir que subclasses "
"forneçam um valor predefinido quando uma chave não está contida no "
"dicionário. Quando uma chave não é encontrada, o método ``__missing__(key)`` "
"do dicionário será chamado. Este gancho é usado para implementar a nova "
"classe :class:`defaultdict` no módulo :mod:`collections`. O exemplo seguinte "
"define um dicionário que devolve zero para qualquer chave em falta::"

#: ../../whatsnew/2.5.rst:985
msgid ""
"class zerodict (dict):\n"
"    def __missing__ (self, key):\n"
"        return 0\n"
"\n"
"d = zerodict({1:1, 2:2})\n"
"print d[1], d[2]   # Prints 1, 2\n"
"print d[3], d[4]   # Prints 0, 0"
msgstr ""
"class zerodict(dict):\n"
"    def __missing__(self, key):\n"
"        return 0\n"
"\n"
"d = zerodict({1:1, 2:2})\n"
"print d[1], d[2]   # Imprime 1, 2\n"
"print d[3], d[4]   # Imprime 0, 0"

#: ../../whatsnew/2.5.rst:993
msgid ""
"Both 8-bit and Unicode strings have new ``partition(sep)``  and "
"``rpartition(sep)`` methods that simplify a common use case."
msgstr ""
"Tanto as *strings* de 8 bits como as Unicode têm novos métodos "
"``partition(sep)`` e ``rpartition(sep)`` que simplificam um caso de uso "
"comum."

#: ../../whatsnew/2.5.rst:996
msgid ""
"The ``find(S)`` method is often used to get an index which is then used to "
"slice the string and obtain the pieces that are before and after the "
"separator. ``partition(sep)`` condenses this pattern into a single method "
"call that returns a 3-tuple containing the substring before the separator, "
"the separator itself, and the substring after the separator.  If the "
"separator isn't found, the first element of the tuple is the entire string "
"and the other two elements are empty.  ``rpartition(sep)`` also returns a 3-"
"tuple but starts searching from the end of the string; the ``r`` stands for "
"'reverse'."
msgstr ""
"O método ``find(S)`` é frequentemente usado para obter um índice que é "
"depois usado para fatiar a *string* e obter as partes que estão antes e "
"depois do separador. ``partition(sep)`` condensa este padrão numa única "
"chamada de método que devolve um 3-tuplo contendo a substring antes do "
"separador, o separador em si, e a substring depois do separador. Se o "
"separador não for encontrado, o primeiro elemento do tuplo é a *string* "
"inteira e os outros dois elementos estão vazios. ``rpartition(sep)`` também "
"devolve um 3-tuplo, mas começa a procurar a partir do final da *string*; o "
"``r`` significa 'reverso'."

#: ../../whatsnew/2.5.rst:1005
msgid "Some examples::"
msgstr "Alguns exemplos::"

#: ../../whatsnew/2.5.rst:1007
msgid ""
">>> ('http://www.python.org').partition('://')\n"
"('http', '://', 'www.python.org')\n"
">>> ('file:/usr/share/doc/index.html').partition('://')\n"
"('file:/usr/share/doc/index.html', '', '')\n"
">>> (u'Subject: a quick question').partition(':')\n"
"(u'Subject', u':', u' a quick question')\n"
">>> 'www.python.org'.rpartition('.')\n"
"('www.python', '.', 'org')\n"
">>> 'www.python.org'.rpartition(':')\n"
"('', '', 'www.python.org')"
msgstr ""
">>> ('http://www.python.org').partition('://')\n"
"('http', '://', 'www.python.org')\n"
">>> ('file:/usr/share/doc/index.html').partition('://')\n"
"('file:/usr/share/doc/index.html', '', '')\n"
">>> (u'Assunto: uma pergunta rápida').partition(':')\n"
"(u'Assunto', u':', u' uma pergunta rápida')\n"
">>> 'www.python.org'.rpartition('.')\n"
"('www.python', '.', 'org')\n"
">>> 'www.python.org'.rpartition(':')\n"
"('', '', 'www.python.org')"

#: ../../whatsnew/2.5.rst:1018
msgid ""
"(Implemented by Fredrik Lundh following a suggestion by Raymond Hettinger.)"
msgstr ""
"(Implementado por Fredrik Lundh seguindo uma sugestão de Raymond Hettinger.)"

#: ../../whatsnew/2.5.rst:1020
msgid ""
"The :meth:`startswith` and :meth:`endswith` methods of string types now "
"accept tuples of strings to check for. ::"
msgstr ""
"Os métodos :meth:`startswith` e :meth:`endswith` dos tipos de *string* agora "
"aceitam tuplos de *strings* para verificar. ::"

#: ../../whatsnew/2.5.rst:1023
msgid ""
"def is_image_file (filename):\n"
"    return filename.endswith(('.gif', '.jpg', '.tiff'))"
msgstr ""
"def is_image_file(filename):\n"
"    return filename.endswith(('.gif', '.jpg', '.tiff'))"

#: ../../whatsnew/2.5.rst:1026
msgid "(Implemented by Georg Brandl following a suggestion by Tom Lynn.)"
msgstr "(Implementado por Georg Brandl seguindo uma sugestão de Tom Lynn.)"

#: ../../whatsnew/2.5.rst:1030
msgid ""
"The :func:`min` and :func:`max` built-in functions gained a ``key`` keyword "
"parameter analogous to the ``key`` argument for :meth:`sort`.  This "
"parameter supplies a function that takes a single argument and is called for "
"every value in the list; :func:`min`/:func:`max` will return the element "
"with the smallest/largest return value from this function. For example, to "
"find the longest string in a list, you can do::"
msgstr ""
"As funções integradas :func:`min` e :func:`max` ganharam um parâmetro "
"nomeado ``key`` análogo ao argumento ``key`` para :meth:`sort`. Este "
"parâmetro fornece uma função que recebe um único argumento e é chamada para "
"cada valor na lista; :func:`min`/:func:`max` devolverá o elemento com o "
"menor/maior valor de retorno desta função. Por exemplo, para encontrar a "
"*string* mais longa numa lista, pode fazer::"

#: ../../whatsnew/2.5.rst:1037
msgid ""
"L = ['medium', 'longest', 'short']\n"
"# Prints 'longest'\n"
"print max(L, key=len)\n"
"# Prints 'short', because lexicographically 'short' has the largest value\n"
"print max(L)"
msgstr ""
"L = ['médio', 'mais longo', 'curto']\n"
"# Imprime 'mais longo'\n"
"print max(L, key=len)\n"
"# Imprime 'curto', porque lexicograficamente 'curto' tem o maior valor\n"
"print max(L)"

#: ../../whatsnew/2.5.rst:1043
msgid "(Contributed by Steven Bethard and Raymond Hettinger.)"
msgstr "(Contribuído por Steven Bethard e Raymond Hettinger.)"

#: ../../whatsnew/2.5.rst:1045
msgid ""
"Two new built-in functions, :func:`any` and :func:`all`, evaluate whether an "
"iterator contains any true or false values.  :func:`any` returns :const:"
"`True` if any value returned by the iterator is true; otherwise it will "
"return :const:`False`.  :func:`all` returns :const:`True` only if all of the "
"values returned by the iterator evaluate as true. (Suggested by Guido van "
"Rossum, and implemented by Raymond Hettinger.)"
msgstr ""
"Duas novas funções integradas, :func:`any` e :func:`all`, avaliam se um "
"iterador contém valores verdadeiros ou falsos. :func:`any` devolve :const:"
"`True` se algum valor devolvido pelo iterador for verdadeiro; caso "
"contrário, devolverá :const:`False`. :func:`all` devolve :const:`True` "
"apenas se todos os valores devolvidos pelo iterador forem avaliados como "
"verdadeiros. (Sugerido por Guido van Rossum e implementado por Raymond "
"Hettinger.)"

#: ../../whatsnew/2.5.rst:1052
msgid ""
"The result of a class's :meth:`__hash__` method can now be either a long "
"integer or a regular integer.  If a long integer is returned, the hash of "
"that value is taken.  In earlier versions the hash value was required to be "
"a regular integer, but in 2.5 the :func:`id` built-in was changed to always "
"return non-negative numbers, and users often seem to use ``id(self)`` in :"
"meth:`__hash__` methods (though this is discouraged)."
msgstr ""
"O resultado do método :meth:`__hash__` de uma classe pode agora ser um "
"inteiro longo ou um inteiro regular. Se um inteiro longo for devolvido, o "
"*hash* desse valor é obtido. Em versões anteriores, o valor de *hash* tinha "
"de ser um inteiro regular, mas no 2.5, a função integrada :func:`id` foi "
"alterada para devolver sempre números não negativos, e os utilizadores "
"frequentemente parecem usar ``id(self)`` em métodos :meth:`__hash__` (embora "
"isto seja desencorajado)."

#: ../../whatsnew/2.5.rst:1061
msgid ""
"ASCII is now the default encoding for modules.  It's now  a syntax error if "
"a module contains string literals with 8-bit characters but doesn't have an "
"encoding declaration.  In Python 2.4 this triggered a warning, not a syntax "
"error.  See :pep:`263`  for how to declare a module's encoding; for example, "
"you might add  a line like this near the top of the source file::"
msgstr ""
"ASCII é agora a codificação predefinida para módulos. É agora um erro de "
"sintaxe se um módulo contiver literais de *string* com caracteres de 8 bits, "
"mas não tiver uma declaração de codificação. No Python 2.4, isto gerava um "
"aviso, não um erro de sintaxe. Veja a :pep:`263` para saber como declarar a "
"codificação de um módulo; por exemplo, pode adicionar uma linha como esta "
"perto do topo do ficheiro de origem::"

#: ../../whatsnew/2.5.rst:1067
msgid "# -*- coding: latin1 -*-"
msgstr "# -*- coding: latin1 -*-"

#: ../../whatsnew/2.5.rst:1069
msgid ""
"A new warning, :class:`UnicodeWarning`, is triggered when  you attempt to "
"compare a Unicode string and an 8-bit string  that can't be converted to "
"Unicode using the default ASCII encoding.   The result of the comparison is "
"false::"
msgstr ""
"Um novo aviso, :class:`UnicodeWarning`, é gerado quando tenta comparar uma "
"*string* Unicode e uma *string* de 8 bits que não pode ser convertida para "
"Unicode usando a codificação ASCII predefinida. O resultado da comparação é "
"falso::"

#: ../../whatsnew/2.5.rst:1073
msgid ""
">>> chr(128) == unichr(128)   # Can't convert chr(128) to Unicode\n"
"__main__:1: UnicodeWarning: Unicode equal comparison failed\n"
"  to convert both arguments to Unicode - interpreting them\n"
"  as being unequal\n"
"False\n"
">>> chr(127) == unichr(127)   # chr(127) can be converted\n"
"True"
msgstr ""
">>> chr(128) == unichr(128)   # Não é possível converter chr(128) para "
"Unicode\n"
"__main__:1: UnicodeWarning: Falhou a comparação igual de Unicode\n"
"  ao converter ambos os argumentos para Unicode - interpretando-os\n"
"  como sendo desiguais\n"
"False\n"
">>> chr(127) == unichr(127)   # chr(127) pode ser convertido\n"
"True"

#: ../../whatsnew/2.5.rst:1081
msgid ""
"Previously this would raise a :class:`UnicodeDecodeError` exception, but in "
"2.5 this could result in puzzling problems when accessing a dictionary.  If "
"you looked up ``unichr(128)`` and ``chr(128)`` was being used as a key, "
"you'd get a :class:`UnicodeDecodeError` exception.  Other changes in 2.5 "
"resulted in this exception being raised instead of suppressed by the code "
"in :file:`dictobject.c` that implements dictionaries."
msgstr ""
"Anteriormente, isto geraria uma exceção :class:`UnicodeDecodeError`, mas no "
"2.5 isto poderia resultar em problemas confusos ao aceder a um dicionário. "
"Se procurasse ``unichr(128)`` e ``chr(128)`` estivesse a ser usado como "
"chave, obteria uma exceção :class:`UnicodeDecodeError`. Outras alterações no "
"2.5 resultaram nesta exceção ser gerada em vez de ser suprimida pelo código "
"em :file:`dictobject.c` que implementa dicionários."

#: ../../whatsnew/2.5.rst:1088
msgid ""
"Raising an exception for such a comparison is strictly correct, but the "
"change might have broken code, so instead  :class:`UnicodeWarning` was "
"introduced."
msgstr ""
"Gerar uma exceção para uma comparação deste tipo é estritamente correto, mas "
"a alteração poderia ter quebrado código, pelo que, em vez disso, foi "
"introduzido o :class:`UnicodeWarning`."

#: ../../whatsnew/2.5.rst:1091
msgid "(Implemented by Marc-André Lemburg.)"
msgstr "(Implementado por Marc-André Lemburg.)"

#: ../../whatsnew/2.5.rst:1093
msgid ""
"One error that Python programmers sometimes make is forgetting to include "
"an :file:`__init__.py` module in a package directory. Debugging this mistake "
"can be confusing, and usually requires running Python with the :option:`-v` "
"switch to log all the paths searched. In Python 2.5, a new :exc:"
"`ImportWarning` warning is triggered when an import would have picked up a "
"directory as a package but no :file:`__init__.py` was found.  This warning "
"is silently ignored by default; provide the :option:`-Wd <-W>` option when "
"running the Python executable to display the warning message. (Implemented "
"by Thomas Wouters.)"
msgstr ""
"Um erro que os programadores Python às vezes cometem é esquecer-se de "
"incluir um módulo :file:`__init__.py` num diretório de pacote. Depurar este "
"erro pode ser confuso e geralmente requer executar o Python com a opção :"
"option:`-v` para registar todos os caminhos procurados. No Python 2.5, um "
"novo aviso :exc:`ImportWarning` é gerado quando uma importação teria "
"selecionado um diretório como um pacote, mas nenhum :file:`__init__.py` foi "
"encontrado. Este aviso é ignorado silenciosamente por predefinição; forneça "
"a opção :option:`-Wd <-W>` ao executar o executável Python para exibir a "
"mensagem de aviso. (Implementado por Thomas Wouters.)"

#: ../../whatsnew/2.5.rst:1102
msgid ""
"The list of base classes in a class definition can now be empty.   As an "
"example, this is now legal::"
msgstr ""
"A lista de classes base numa definição de classe pode agora estar vazia. "
"Como exemplo, isto é agora legal::"

#: ../../whatsnew/2.5.rst:1105
msgid ""
"class C():\n"
"    pass"
msgstr ""
"class C():\n"
"    pass"

#: ../../whatsnew/2.5.rst:1108
msgid "(Implemented by Brett Cannon.)"
msgstr "(Implementado por Brett Cannon.)"

#: ../../whatsnew/2.5.rst:1116
msgid "Interactive Interpreter Changes"
msgstr "Alterações no Interpretador Interativo"

#: ../../whatsnew/2.5.rst:1118
msgid ""
"In the interactive interpreter, ``quit`` and ``exit``  have long been "
"strings so that new users get a somewhat helpful message when they try to "
"quit::"
msgstr ""
"No interpretador interativo, ``quit`` e ``exit`` têm sido há muito tempo "
"*strings* para que novos utilizadores obtenham uma mensagem algo útil quando "
"tentam sair::"

#: ../../whatsnew/2.5.rst:1121
msgid ""
">>> quit\n"
"'Use Ctrl-D (i.e. EOF) to exit.'"
msgstr ""
">>> quit\n"
"'Use Ctrl-D (ou seja, EOF) para sair.'"

#: ../../whatsnew/2.5.rst:1124
msgid ""
"In Python 2.5, ``quit`` and ``exit`` are now objects that still produce "
"string representations of themselves, but are also callable. Newbies who try "
"``quit()`` or ``exit()`` will now exit the interpreter as they expect.  "
"(Implemented by Georg Brandl.)"
msgstr ""
"No Python 2.5, ``quit`` e ``exit`` são agora objetos que ainda produzem "
"representações de *string* de si mesmos, mas também são chamáveis. Novatos "
"que tentam ``quit()`` ou ``exit()`` sairão agora do interpretador como "
"esperam. (Implementado por Georg Brandl.)"

#: ../../whatsnew/2.5.rst:1129
msgid ""
"The Python executable now accepts the standard long options  :option:`--"
"help` and :option:`--version`; on Windows,  it also accepts the :option:`/? "
"<-?>` option for displaying a help message. (Implemented by Georg Brandl.)"
msgstr ""
"O executável Python agora aceita as opções longas padrão :option:`--help` e :"
"option:`--version`; no Windows, também aceita a opção :option:`/? <-?>` para "
"exibir uma mensagem de ajuda. (Implementado por Georg Brandl.)"

#: ../../whatsnew/2.5.rst:1139
msgid "Optimizations"
msgstr "Otimizações"

#: ../../whatsnew/2.5.rst:1141
msgid ""
"Several of the optimizations were developed at the NeedForSpeed sprint, an "
"event held in Reykjavik, Iceland, from May 21--28 2006. The sprint focused "
"on speed enhancements to the CPython implementation and was funded by EWT "
"LLC with local support from CCP Games.  Those optimizations added at this "
"sprint are specially marked in the following list."
msgstr ""
"Várias das otimizações foram desenvolvidas no *sprint* NeedForSpeed, um "
"evento realizado em Reykjavik, Islândia, de 21 a 28 de maio de 2006. O "
"*sprint* focou-se em melhorias de velocidade para a implementação CPython e "
"foi financiado pela EWT LLC com suporte local da CCP Games. As otimizações "
"adicionadas neste *sprint* estão especialmente marcadas na lista seguinte."

#: ../../whatsnew/2.5.rst:1147
msgid ""
"When they were introduced  in Python 2.4, the built-in :class:`set` and :"
"class:`frozenset` types were built on top of Python's dictionary type.   In "
"2.5 the internal data structure has been customized for implementing sets, "
"and as a result sets will use a third less memory and are somewhat faster. "
"(Implemented by Raymond Hettinger.)"
msgstr ""
"Quando foram introduzidos no Python 2.4, os tipos integrados :class:`set` e :"
"class:`frozenset` foram construídos sobre o tipo de dicionário do Python. No "
"2.5, a estrutura de dados interna foi personalizada para implementar "
"conjuntos, e, como resultado, os conjuntos usarão um terço a menos de "
"memória e são algo mais rápidos. (Implementado por Raymond Hettinger.)"

#: ../../whatsnew/2.5.rst:1153
msgid ""
"The speed of some Unicode operations, such as finding substrings, string "
"splitting, and character map encoding and decoding, has been improved. "
"(Substring search and splitting improvements were added by Fredrik Lundh and "
"Andrew Dalke at the NeedForSpeed sprint. Character maps were improved by "
"Walter Dörwald and Martin von Löwis.)"
msgstr ""
"A velocidade de algumas operações Unicode, como encontrar substrings, "
"divisão de *strings* e codificação/descodificação de mapas de caracteres, "
"foi melhorada. (As melhorias na pesquisa e divisão de substrings foram "
"adicionadas por Fredrik Lundh e Andrew Dalke no *sprint* NeedForSpeed. Os "
"mapas de caracteres foram melhorados por Walter Dörwald e Martin von Löwis.)"

#: ../../whatsnew/2.5.rst:1161
msgid ""
"The ``long(str, base)`` function is now faster on long digit strings because "
"fewer intermediate results are calculated.  The peak is for strings of "
"around 800--1000 digits where  the function is 6 times faster. (Contributed "
"by Alan McIntyre and committed at the NeedForSpeed sprint.)"
msgstr ""
"A função ``long(str, base)`` é agora mais rápida em *strings* de dígitos "
"longos porque são calculados menos resultados intermédios. O pico é para "
"*strings* de cerca de 800--1000 dígitos, onde a função é 6 vezes mais "
"rápida. (Contribuído por Alan McIntyre e confirmado no *sprint* "
"NeedForSpeed.)"

#: ../../whatsnew/2.5.rst:1168
msgid ""
"It's now illegal to mix iterating over a file  with ``for line in file`` and "
"calling  the file object's :meth:`read`/:meth:`readline`/:meth:`readlines` "
"methods.  Iteration uses an internal buffer and the  :meth:`!read\\*` "
"methods don't use that buffer.   Instead they would return the data "
"following the buffer, causing the data to appear out of order.  Mixing "
"iteration and these methods will now trigger a :exc:`ValueError` from the :"
"meth:`!read\\*` method. (Implemented by Thomas Wouters.)"
msgstr ""
"É agora ilegal misturar a iteração sobre um ficheiro com ``for line in "
"file`` e chamar os métodos :meth:`read`/:meth:`readline`/:meth:`readlines` "
"do objeto de ficheiro. A iteração usa um buffer interno e os métodos :meth:`!"
"read\\*` não usam esse buffer. Em vez disso, devolveriam os dados seguintes "
"ao buffer, fazendo com que os dados apareçam fora de ordem. Misturar "
"iteração e estes métodos irá agora gerar um :exc:`ValueError` do método :"
"meth:`!read\\*`. (Implementado por Thomas Wouters.)"

#: ../../whatsnew/2.5.rst:1178
msgid ""
"The :mod:`struct` module now compiles structure format  strings into an "
"internal representation and caches this representation, yielding a 20% "
"speedup. (Contributed by Bob Ippolito at the NeedForSpeed sprint.)"
msgstr ""
"O módulo :mod:`struct` agora compila *strings* de formato de estrutura numa "
"representação interna e guarda em cache esta representação, resultando num "
"aumento de velocidade de 20%. (Contribuído por Bob Ippolito no *sprint* "
"NeedForSpeed.)"

#: ../../whatsnew/2.5.rst:1182
msgid ""
"The :mod:`re` module got a 1 or 2% speedup by switching to  Python's "
"allocator functions instead of the system's  :c:func:`malloc` and :c:func:"
"`free`. (Contributed by Jack Diederich at the NeedForSpeed sprint.)"
msgstr ""
"O módulo :mod:`re` obteve um aumento de velocidade de 1 ou 2% ao mudar para "
"as funções de alocação do Python em vez das funções do sistema :c:func:"
"`malloc` e :c:func:`free`. (Contribuído por Jack Diederich no *sprint* "
"NeedForSpeed.)"

#: ../../whatsnew/2.5.rst:1186
msgid ""
"The code generator's peephole optimizer now performs simple constant folding "
"in expressions.  If you write something like ``a = 2+3``, the code generator "
"will do the arithmetic and produce code corresponding to ``a = 5``.  "
"(Proposed and implemented  by Raymond Hettinger.)"
msgstr ""
"O otimizador de *peephole* do gerador de código agora realiza a dobragem de "
"constantes simples em expressões. Se escrever algo como ``a = 2+3``, o "
"gerador de código fará a aritmética e produzirá código correspondente a ``a "
"= 5``. (Proposto e implementado por Raymond Hettinger.)"

#: ../../whatsnew/2.5.rst:1191
msgid ""
"Function calls are now faster because code objects now keep  the most "
"recently finished frame (a \"zombie frame\") in an internal field of the "
"code object, reusing it the next time the code object is invoked.  (Original "
"patch by Michael Hudson, modified by Armin Rigo and Richard Jones; committed "
"at the NeedForSpeed sprint.)  Frame objects are also slightly smaller, which "
"may improve cache locality and reduce memory usage a bit.  (Contributed by "
"Neal Norwitz.)"
msgstr ""
"As chamadas de função são agora mais rápidas porque os objetos de código "
"agora mantêm o quadro mais recentemente terminado (um \"quadro zumbi\") num "
"campo interno do objeto de código, reutilizando-o na próxima vez que o "
"objeto de código é invocado. (Patch original de Michael Hudson, modificado "
"por Armin Rigo e Richard Jones; confirmado no *sprint* NeedForSpeed.) Os "
"objetos de quadro também são ligeiramente menores, o que pode melhorar a "
"localidade da cache e reduzir um pouco o uso de memória. (Contribuído por "
"Neal Norwitz.)"

#: ../../whatsnew/2.5.rst:1201
msgid ""
"Python's built-in exceptions are now new-style classes, a change that speeds "
"up instantiation considerably.  Exception handling in Python 2.5 is "
"therefore about 30% faster than in 2.4. (Contributed by Richard Jones, Georg "
"Brandl and Sean Reifschneider at the NeedForSpeed sprint.)"
msgstr ""
"As exceções integradas do Python são agora classes de novo estilo, uma "
"alteração que acelera consideravelmente a instanciação. O tratamento de "
"exceções no Python 2.5 é, portanto, cerca de 30% mais rápido do que no 2.4. "
"(Contribuído por Richard Jones, Georg Brandl e Sean Reifschneider no "
"*sprint* NeedForSpeed.)"

#: ../../whatsnew/2.5.rst:1206
msgid ""
"Importing now caches the paths tried, recording whether  they exist or not "
"so that the interpreter makes fewer  :c:func:`open` and :c:func:`stat` calls "
"on startup. (Contributed by Martin von Löwis and Georg Brandl.)"
msgstr ""
"A importação agora guarda em cache os caminhos tentados, registando se "
"existem ou não, para que o interpretador faça menos chamadas :c:func:`open` "
"e :c:func:`stat` no arranque. (Contribuído por Martin von Löwis e Georg "
"Brandl.)"

#: ../../whatsnew/2.5.rst:1218
msgid "New, Improved, and Removed Modules"
msgstr "Módulos Novos, Melhorados e Removidos"

#: ../../whatsnew/2.5.rst:1220
msgid ""
"The standard library received many enhancements and bug fixes in Python 2.5. "
"Here's a partial list of the most notable changes, sorted alphabetically by "
"module name. Consult the :file:`Misc/NEWS` file in the source tree for a "
"more complete list of changes, or look through the SVN logs for all the "
"details."
msgstr ""
"A biblioteca padrão recebeu muitas melhorias e correções de *bugs* no Python "
"2.5. Aqui está uma lista parcial das alterações mais notáveis, ordenadas "
"alfabeticamente por nome de módulo. Consulte o ficheiro :file:`Misc/NEWS` na "
"árvore de origem para uma lista mais completa de alterações, ou consulte os "
"registos SVN para todos os detalhes."

#: ../../whatsnew/2.5.rst:1225
msgid ""
"The :mod:`!audioop` module now supports the a-LAW encoding, and the code for "
"u-LAW encoding has been improved.  (Contributed by Lars Immisch.)"
msgstr ""
"O módulo :mod:`!audioop` agora suporta a codificação a-LAW, e o código para "
"a codificação u-LAW foi melhorado. (Contribuído por Lars Immisch.)"

#: ../../whatsnew/2.5.rst:1228
msgid ""
"The :mod:`codecs` module gained support for incremental codecs.  The :func:"
"`codec.lookup` function now returns a :class:`CodecInfo` instance instead of "
"a tuple. :class:`CodecInfo` instances behave like a 4-tuple to preserve "
"backward compatibility but also have the attributes :attr:`encode`, :attr:"
"`decode`, :attr:`incrementalencoder`, :attr:`incrementaldecoder`, :attr:"
"`streamwriter`, and :attr:`streamreader`.  Incremental codecs  can receive "
"input and produce output in multiple chunks; the output is the same as if "
"the entire input was fed to the non-incremental codec. See the :mod:`codecs` "
"module documentation for details. (Designed and implemented by Walter "
"Dörwald.)"
msgstr ""
"O módulo :mod:`codecs` ganhou suporte para *codecs* incrementais. A função :"
"func:`codec.lookup` agora devolve uma instância :class:`CodecInfo` em vez de "
"um tuplo. As instâncias :class:`CodecInfo` comportam-se como um 4-tuplo para "
"preservar a compatibilidade retroativa, mas também têm os atributos :attr:"
"`encode`, :attr:`decode`, :attr:`incrementalencoder`, :attr:"
"`incrementaldecoder`, :attr:`streamwriter` e :attr:`streamreader`. Os "
"*codecs* incrementais podem receber entrada e produzir saída em vários "
"blocos; a saída é a mesma que se toda a entrada fosse fornecida ao *codec* "
"não incremental. Consulte a documentação do módulo :mod:`codecs` para mais "
"detalhes. (Desenhado e implementado por Walter Dörwald.)"

#: ../../whatsnew/2.5.rst:1240
msgid ""
"The :mod:`collections` module gained a new type, :class:`defaultdict`, that "
"subclasses the standard :class:`dict` type.  The new type mostly behaves "
"like a dictionary but constructs a default value when a key isn't present, "
"automatically adding it to the dictionary for the requested key value."
msgstr ""
"O módulo :mod:`collections` ganhou um novo tipo, :class:`defaultdict`, que é "
"uma subclasse do tipo :class:`dict` padrão. O novo tipo comporta-se "
"maioritariamente como um dicionário, mas constrói um valor predefinido "
"quando uma chave não está presente, adicionando-a automaticamente ao "
"dicionário para o valor da chave solicitada."

#: ../../whatsnew/2.5.rst:1245
msgid ""
"The first argument to :class:`defaultdict`'s constructor is a factory "
"function that gets called whenever a key is requested but not found. This "
"factory function receives no arguments, so you can use built-in type "
"constructors such as :func:`list` or :func:`int`.  For example,  you can "
"make an index of words based on their initial letter like this::"
msgstr ""
"O primeiro argumento do construtor de :class:`defaultdict` é uma função "
"fábrica que é chamada sempre que uma chave é solicitada mas não é "
"encontrada. Esta função fábrica não recebe argumentos, pelo que pode usar "
"construtores de tipos integrados como :func:`list` ou :func:`int`. Por "
"exemplo, pode criar um índice de palavras com base na sua letra inicial, "
"como neste exemplo::"

#: ../../whatsnew/2.5.rst:1251
msgid ""
"words = \"\"\"Nel mezzo del cammin di nostra vita\n"
"mi ritrovai per una selva oscura\n"
"che la diritta via era smarrita\"\"\".lower().split()\n"
"\n"
"index = defaultdict(list)\n"
"\n"
"for w in words:\n"
"    init_letter = w[0]\n"
"    index[init_letter].append(w)"
msgstr ""
"words = \"\"\"No meio do caminho da nossa vida\n"
"encontrei-me numa selva escura\n"
"porque a via reta estava perdida\"\"\".lower().split()\n"
"\n"
"index = defaultdict(list)\n"
"\n"
"for w in words:\n"
"    init_letter = w[0]\n"
"    index[init_letter].append(w)"

#: ../../whatsnew/2.5.rst:1261
msgid "Printing ``index`` results in the following output::"
msgstr "Imprimir ``index`` resulta na seguinte saída::"

#: ../../whatsnew/2.5.rst:1263
msgid ""
"defaultdict(<type 'list'>, {'c': ['cammin', 'che'], 'e': ['era'],\n"
"        'd': ['del', 'di', 'diritta'], 'm': ['mezzo', 'mi'],\n"
"        'l': ['la'], 'o': ['oscura'], 'n': ['nel', 'nostra'],\n"
"        'p': ['per'], 's': ['selva', 'smarrita'],\n"
"        'r': ['ritrovai'], 'u': ['una'], 'v': ['vita', 'via']}"
msgstr ""
"defaultdict(<type 'list'>, {'c': ['cammin', 'che'], 'e': ['era'],\n"
"        'd': ['del', 'di', 'diritta'], 'm': ['mezzo', 'mi'],\n"
"        'l': ['la'], 'o': ['oscura'], 'n': ['nel', 'nostra'],\n"
"        'p': ['per'], 's': ['selva', 'smarrita'],\n"
"        'r': ['ritrovai'], 'u': ['una'], 'v': ['vita', 'via']}"

#: ../../whatsnew/2.5.rst:1269
msgid "(Contributed by Guido van Rossum.)"
msgstr "(Contribuído por Guido van Rossum.)"

#: ../../whatsnew/2.5.rst:1271
msgid ""
"The :class:`deque` double-ended queue type supplied by the :mod:"
"`collections` module now has a ``remove(value)`` method that removes the "
"first occurrence of *value* in the queue, raising :exc:`ValueError` if the "
"value isn't found. (Contributed by Raymond Hettinger.)"
msgstr ""
"O tipo de fila de duas extremidades :class:`deque`, fornecido pelo módulo :"
"mod:`collections`, tem agora um método ``remove(value)`` que remove a "
"primeira ocorrência de *value* na fila, gerando :exc:`ValueError` se o valor "
"não for encontrado. (Contribuído por Raymond Hettinger.)"

#: ../../whatsnew/2.5.rst:1276
msgid ""
"New module: The :mod:`contextlib` module contains helper functions for use "
"with the new ':keyword:`with`' statement.  See section :ref:`contextlibmod` "
"for more about this module."
msgstr ""
"Novo módulo: O módulo :mod:`contextlib` contém funções auxiliares para uso "
"com a nova instrução ':keyword:`with`'. Veja a secção :ref:`contextlibmod` "
"para mais informações sobre este módulo."

#: ../../whatsnew/2.5.rst:1280
msgid ""
"New module: The :mod:`cProfile` module is a C implementation of  the "
"existing :mod:`profile` module that has much lower overhead. The module's "
"interface is the same as :mod:`profile`: you run ``cProfile.run('main()')`` "
"to profile a function, can save profile data to a file, etc.  It's not yet "
"known if the Hotshot profiler, which is also written in C but doesn't match "
"the :mod:`profile` module's interface, will continue to be maintained in "
"future versions of Python.  (Contributed by Armin Rigo.)"
msgstr ""
"Novo módulo: O módulo :mod:`cProfile` é uma implementação em C do módulo "
"existente :mod:`profile`, com muito menos sobrecarga. A interface do módulo "
"é a mesma que a do :mod:`profile`: pode executar ``cProfile.run('main()')`` "
"para perfilar uma função, pode guardar dados de perfil num ficheiro, etc. "
"Ainda não se sabe se o perfilador Hotshot, que também está escrito em C mas "
"não corresponde à interface do módulo :mod:`profile`, continuará a ser "
"mantido em futuras versões do Python. (Contribuído por Armin Rigo.)"

#: ../../whatsnew/2.5.rst:1288
msgid ""
"Also, the :mod:`pstats` module for analyzing the data measured by the "
"profiler now supports directing the output to any file object by supplying a "
"*stream* argument to the :class:`Stats` constructor. (Contributed by Skip "
"Montanaro.)"
msgstr ""
"Além disso, o módulo :mod:`pstats`, para analisar os dados medidos pelo "
"perfilador, agora suporta direcionar a saída para qualquer objeto de "
"ficheiro, fornecendo um argumento *stream* ao construtor :class:`Stats`. "
"(Contribuído por Skip Montanaro.)"

#: ../../whatsnew/2.5.rst:1292
msgid ""
"The :mod:`csv` module, which parses files in comma-separated value format, "
"received several enhancements and a number of bugfixes.  You can now set the "
"maximum size in bytes of a field by calling the ``csv."
"field_size_limit(new_limit)`` function; omitting the *new_limit* argument "
"will return the currently set limit.  The :class:`reader` class now has a :"
"attr:`line_num` attribute that counts the number of physical lines read from "
"the source; records can span multiple physical lines, so :attr:`line_num` is "
"not the same as the number of records read."
msgstr ""
"O módulo :mod:`csv`, que analisa ficheiros em formato de valores separados "
"por vírgulas, recebeu várias melhorias e um número de correções de *bugs*. "
"Pode agora definir o tamanho máximo em bytes de um campo chamando a função "
"``csv.field_size_limit(new_limit)``; omitir o argumento *new_limit* "
"devolverá o limite atualmente definido. A classe :class:`reader` tem agora "
"um atributo :attr:`line_num` que conta o número de linhas físicas lidas da "
"origem; os registos podem abranger várias linhas físicas, pelo que :attr:"
"`line_num` não é o mesmo que o número de registos lidos."

#: ../../whatsnew/2.5.rst:1301
msgid ""
"The CSV parser is now stricter about multi-line quoted fields. Previously, "
"if a line ended within a quoted field without a terminating newline "
"character, a newline would be inserted into the returned field. This "
"behavior caused problems when reading files that contained carriage return "
"characters within fields, so the code was changed to return the field "
"without inserting newlines. As a consequence, if newlines embedded within "
"fields are important, the input should be split into lines in a manner that "
"preserves the newline characters."
msgstr ""
"O analisador CSV é agora mais rigoroso em relação a campos citados de várias "
"linhas. Anteriormente, se uma linha terminasse dentro de um campo citado sem "
"um caractere de nova linha de terminação, uma nova linha seria inserida no "
"campo devolvido. Este comportamento causava problemas ao ler ficheiros que "
"continham caracteres de retorno de carro dentro de campos, pelo que o código "
"foi alterado para devolver o campo sem inserir novas linhas. Como "
"consequência, se as novas linhas incorporadas dentro de campos forem "
"importantes, a entrada deve ser dividida em linhas de uma forma que preserve "
"os caracteres de nova linha."

#: ../../whatsnew/2.5.rst:1309
msgid "(Contributed by Skip Montanaro and Andrew McNamara.)"
msgstr "(Contribuído por Skip Montanaro e Andrew McNamara.)"

#: ../../whatsnew/2.5.rst:1311
msgid ""
"The :class:`~datetime.datetime` class in the :mod:`datetime`  module now has "
"a ``strptime(string, format)``  method for parsing date strings, contributed "
"by Josh Spoerri. It uses the same format characters as :func:`time.strptime` "
"and :func:`time.strftime`::"
msgstr ""
"A classe :class:`~datetime.datetime` no módulo :mod:`datetime` tem agora um "
"método ``strptime(string, format)`` para analisar *strings* de data, "
"contribuído por Josh Spoerri. Usa os mesmos caracteres de formato que :func:"
"`time.strptime` e :func:`time.strftime`::"

#: ../../whatsnew/2.5.rst:1316
msgid ""
"from datetime import datetime\n"
"\n"
"ts = datetime.strptime('10:13:15 2006-03-07',\n"
"                       '%H:%M:%S %Y-%m-%d')"
msgstr ""
"from datetime import datetime\n"
"\n"
"ts = datetime.strptime('10:13:15 2006-03-07',\n"
"                       '%H:%M:%S %Y-%m-%d')"

#: ../../whatsnew/2.5.rst:1321
msgid ""
"The :meth:`SequenceMatcher.get_matching_blocks` method in the :mod:`difflib` "
"module now guarantees to return a minimal list of blocks describing matching "
"subsequences.  Previously, the algorithm would occasionally break a block of "
"matching elements into two list entries. (Enhancement by Tim Peters.)"
msgstr ""
"O método :meth:`SequenceMatcher.get_matching_blocks` no módulo :mod:"
"`difflib` garante agora devolver uma lista mínima de blocos que descrevem "
"subsequências correspondentes. Anteriormente, o algoritmo ocasionalmente "
"dividia um bloco de elementos correspondentes em duas entradas de lista. "
"(Melhoria por Tim Peters.)"

#: ../../whatsnew/2.5.rst:1326
msgid ""
"The :mod:`doctest` module gained a ``SKIP`` option that keeps an example "
"from being executed at all.  This is intended for code snippets that are "
"usage examples intended for the reader and aren't actually test cases."
msgstr ""
"O módulo :mod:`doctest` ganhou uma opção ``SKIP`` que impede que um exemplo "
"seja executado. Isto é destinado a trechos de código que são exemplos de uso "
"destinados ao leitor e não são realmente casos de teste."

#: ../../whatsnew/2.5.rst:1330
msgid ""
"An *encoding* parameter was added to the :func:`testfile` function and the :"
"class:`DocFileSuite` class to specify the file's encoding.  This makes it "
"easier to use non-ASCII characters in  tests contained within a docstring. "
"(Contributed by Bjorn Tillenius.)"
msgstr ""
"Um parâmetro *encoding* foi adicionado à função :func:`testfile` e à classe :"
"class:`DocFileSuite` para especificar a codificação do ficheiro. Isto "
"facilita o uso de caracteres não-ASCII em testes contidos numa *docstring*. "
"(Contribuído por Bjorn Tillenius.)"

#: ../../whatsnew/2.5.rst:1337
msgid ""
"The :mod:`email` package has been updated to version 4.0. (Contributed by "
"Barry Warsaw.)"
msgstr ""
"O pacote :mod:`email` foi atualizado para a versão 4.0. (Contribuído por "
"Barry Warsaw.)"

#: ../../whatsnew/2.5.rst:1345
msgid ""
"The :mod:`fileinput` module was made more flexible. Unicode filenames are "
"now supported, and a *mode* parameter that defaults to ``\"r\"`` was added "
"to the :func:`input` function to allow opening files in binary or :term:"
"`universal newlines` mode.  Another new parameter, *openhook*, lets you use "
"a function other than :func:`open`  to open the input files.  Once you're "
"iterating over the set of files, the :class:`FileInput` object's new :meth:"
"`~fileinput.fileno` returns the file descriptor for the currently opened "
"file. (Contributed by Georg Brandl.)"
msgstr ""
"O módulo :mod:`fileinput` foi tornado mais flexível. Nomes de ficheiros "
"Unicode são agora suportados, e um parâmetro *mode* que por predefinição é "
"``\"r\"`` foi adicionado à função :func:`input` para permitir abrir "
"ficheiros em modo binário ou :term:`novas linhas universais`. Outro novo "
"parâmetro, *openhook*, permite usar uma função diferente de :func:`open` "
"para abrir os ficheiros de entrada. Uma vez que está a iterar sobre o "
"conjunto de ficheiros, o novo método :meth:`~fileinput.fileno` do objeto :"
"class:`FileInput` devolve o descritor de ficheiro para o ficheiro atualmente "
"aberto. (Contribuído por Georg Brandl.)"

#: ../../whatsnew/2.5.rst:1354
msgid ""
"In the :mod:`gc` module, the new :func:`get_count` function returns a 3-"
"tuple containing the current collection counts for the three GC "
"generations.  This is accounting information for the garbage collector; when "
"these counts reach a specified threshold, a garbage collection sweep will be "
"made.  The existing :func:`gc.collect` function now takes an optional "
"*generation* argument of 0, 1, or 2 to specify which generation to collect. "
"(Contributed by Barry Warsaw.)"
msgstr ""
"No módulo :mod:`gc`, a nova função :func:`get_count` devolve um 3-tuplo "
"contendo as contagens atuais de coleção para as três gerações do GC. Esta é "
"informação contabilística para o recolhedor de lixo; quando estas contagens "
"atingem um limiar especificado, uma varredura de coleção de lixo será feita. "
"A função existente :func:`gc.collect` agora aceita um argumento opcional "
"*generation* de 0, 1 ou 2 para especificar qual geração recolher. "
"(Contribuído por Barry Warsaw.)"

#: ../../whatsnew/2.5.rst:1361
msgid ""
"The :func:`nsmallest` and  :func:`nlargest` functions in the :mod:`heapq` "
"module  now support a ``key`` keyword parameter similar to the one provided "
"by the :func:`min`/:func:`max` functions and the :meth:`sort` methods.  For "
"example::"
msgstr ""
"As funções :func:`nsmallest` e :func:`nlargest` no módulo :mod:`heapq` agora "
"suportam um parâmetro nomeado ``key`` semelhante ao fornecido pelas funções :"
"func:`min`/:func:`max` e pelos métodos :meth:`sort`. Por exemplo::"

#: ../../whatsnew/2.5.rst:1366
msgid ""
">>> import heapq\n"
">>> L = [\"short\", 'medium', 'longest', 'longer still']\n"
">>> heapq.nsmallest(2, L)  # Return two lowest elements, lexicographically\n"
"['longer still', 'longest']\n"
">>> heapq.nsmallest(2, L, key=len)   # Return two shortest elements\n"
"['short', 'medium']"
msgstr ""
">>> import heapq\n"
">>> L = [\"curto\", 'médio', 'mais longo', 'ainda mais longo']\n"
">>> heapq.nsmallest(2, L)  # Devolve os dois elementos mais baixos, "
"lexicograficamente\n"
"['ainda mais longo', 'mais longo']\n"
">>> heapq.nsmallest(2, L, key=len)   # Devolve os dois elementos mais "
"curtos\n"
"['curto', 'médio']"

#: ../../whatsnew/2.5.rst:1373 ../../whatsnew/2.5.rst:1382
msgid "(Contributed by Raymond Hettinger.)"
msgstr "(Contribuído por Raymond Hettinger.)"

#: ../../whatsnew/2.5.rst:1375
msgid ""
"The :func:`itertools.islice` function now accepts ``None`` for the start and "
"step arguments.  This makes it more compatible with the attributes of slice "
"objects, so that you can now write the following::"
msgstr ""
"A função :func:`itertools.islice` agora aceita ``None`` para os argumentos "
"de início e passo. Isto torna-a mais compatível com os atributos de objetos "
"de fatia, para que possa agora escrever o seguinte::"

#: ../../whatsnew/2.5.rst:1379
msgid ""
"s = slice(5)     # Create slice object\n"
"itertools.islice(iterable, s.start, s.stop, s.step)"
msgstr ""
"s = slice(5)     # Criar objeto de fatia\n"
"itertools.islice(iterable, s.start, s.stop, s.step)"

#: ../../whatsnew/2.5.rst:1384
msgid ""
"The :func:`format` function in the :mod:`locale` module has been modified "
"and two new functions were added, :func:`format_string` and :func:`currency`."
msgstr ""
"A função :func:`format` no módulo :mod:`locale` foi modificada e duas novas "
"funções foram adicionadas, :func:`format_string` e :func:`currency`."

#: ../../whatsnew/2.5.rst:1387
msgid ""
"The :func:`format` function's *val* parameter could previously be a string "
"as long as no more than one %char specifier appeared; now the parameter must "
"be exactly one %char specifier with no surrounding text.  An optional "
"*monetary* parameter was also added which, if ``True``, will use the "
"locale's rules for formatting currency in placing a separator between groups "
"of three digits."
msgstr ""
"O parâmetro *val* da função :func:`format` poderia anteriormente ser uma "
"*string* desde que não aparecesse mais do que um especificador %char; agora "
"o parâmetro deve ser exatamente um especificador %char sem texto "
"circundante. Um parâmetro opcional *monetary* também foi adicionado, que, se "
"``True``, usará as regras da localidade para formatar moeda ao colocar um "
"separador entre grupos de três dígitos."

#: ../../whatsnew/2.5.rst:1393
msgid ""
"To format strings with multiple %char specifiers, use the new :func:"
"`format_string` function that works like :func:`format` but also supports "
"mixing %char specifiers with arbitrary text."
msgstr ""
"Para formatar *strings* com vários especificadores %char, use a nova função :"
"func:`format_string` que funciona como :func:`format`, mas também suporta a "
"mistura de especificadores %char com texto arbitrário."

#: ../../whatsnew/2.5.rst:1397
msgid ""
"A new :func:`currency` function was also added that formats a number "
"according to the current locale's settings."
msgstr ""
"Foi também adicionada uma nova função :func:`currency` que formata um número "
"de acordo com as definições da localidade atual."

#: ../../whatsnew/2.5.rst:1400
msgid "(Contributed by Georg Brandl.)"
msgstr "(Contribuído por Georg Brandl.)"

#: ../../whatsnew/2.5.rst:1404
msgid ""
"The :mod:`mailbox` module underwent a massive rewrite to add the capability "
"to modify mailboxes in addition to reading them.  A new set of classes that "
"include :class:`mbox`, :class:`MH`, and :class:`Maildir` are used to read "
"mailboxes, and have an ``add(message)`` method to add messages, "
"``remove(key)`` to remove messages, and :meth:`lock`/:meth:`unlock` to lock/"
"unlock the mailbox. The following example converts a maildir-format mailbox "
"into an mbox-format one::"
msgstr ""
"O módulo :mod:`mailbox` sofreu uma reescrita massiva para adicionar a "
"capacidade de modificar caixas de correio além de as ler. Um novo conjunto "
"de classes que inclui :class:`mbox`, :class:`MH` e :class:`Maildir` é usado "
"para ler caixas de correio, e tem um método ``add(message)`` para adicionar "
"mensagens, ``remove(key)`` para remover mensagens, e :meth:`lock`/:meth:"
"`unlock` para bloquear/desbloquear a caixa de correio. O exemplo seguinte "
"converte uma caixa de correio no formato maildir para uma no formato mbox::"

#: ../../whatsnew/2.5.rst:1412
msgid ""
"import mailbox\n"
"\n"
"# 'factory=None' uses email.Message.Message as the class representing\n"
"# individual messages.\n"
"src = mailbox.Maildir('maildir', factory=None)\n"
"dest = mailbox.mbox('/tmp/mbox')\n"
"\n"
"for msg in src:\n"
"    dest.add(msg)"
msgstr ""
"import mailbox\n"
"\n"
"# 'factory=None' usa email.Message.Message como a classe que representa\n"
"# mensagens individuais.\n"
"src = mailbox.Maildir('maildir', factory=None)\n"
"dest = mailbox.mbox('/tmp/mbox')\n"
"\n"
"for msg in src:\n"
"    dest.add(msg)"

#: ../../whatsnew/2.5.rst:1422
msgid ""
"(Contributed by Gregory K. Johnson.  Funding was provided by Google's 2005 "
"Summer of Code.)"
msgstr ""
"(Contribuído por Gregory K. Johnson. O financiamento foi fornecido pelo "
"Google's 2005 Summer of Code.)"

#: ../../whatsnew/2.5.rst:1425
msgid ""
"New module: the :mod:`!msilib` module allows creating Microsoft Installer :"
"file:`.msi` files and CAB files.  Some support for reading the :file:`.msi` "
"database is also included. (Contributed by Martin von Löwis.)"
msgstr ""
"Novo módulo: o módulo :mod:`!msilib` permite criar ficheiros Microsoft "
"Installer :file:`.msi` e ficheiros CAB. Algum suporte para ler a base de "
"dados :file:`.msi` também está incluído. (Contribuído por Martin von Löwis.)"

#: ../../whatsnew/2.5.rst:1429
msgid ""
"The :mod:`!nis` module now supports accessing domains other than the system "
"default domain by supplying a *domain* argument to the :func:`!nis.match` "
"and :func:`!nis.maps` functions. (Contributed by Ben Bell.)"
msgstr ""
"O módulo :mod:`!nis` agora suporta o acesso a domínios diferentes do domínio "
"predefinido do sistema, fornecendo um argumento *domain* às funções :func:`!"
"nis.match` e :func:`!nis.maps`. (Contribuído por Ben Bell.)"

#: ../../whatsnew/2.5.rst:1433
msgid ""
"The :mod:`operator` module's :func:`itemgetter`  and :func:`attrgetter` "
"functions now support multiple fields.   A call such as ``operator."
"attrgetter('a', 'b')`` will return a function  that retrieves the :attr:`a` "
"and :attr:`b` attributes.  Combining  this new feature with the :meth:`sort` "
"method's ``key`` parameter  lets you easily sort lists using multiple "
"fields. (Contributed by Raymond Hettinger.)"
msgstr ""
"As funções :func:`itemgetter` e :func:`attrgetter` do módulo :mod:`operator` "
"agora suportam múltiplos campos. Uma chamada como ``operator.attrgetter('a', "
"'b')`` devolverá uma função que recupera os atributos :attr:`a` e :attr:`b`. "
"Combinar esta nova funcionalidade com o parâmetro ``key`` do método :meth:"
"`sort` permite ordenar facilmente listas usando múltiplos campos. "
"(Contribuído por Raymond Hettinger.)"

#: ../../whatsnew/2.5.rst:1440
msgid ""
"The :mod:`optparse` module was updated to version 1.5.1 of the Optik "
"library. The :class:`OptionParser` class gained an :attr:`epilog` attribute, "
"a string that will be printed after the help message, and a :meth:`destroy` "
"method to break reference cycles created by the object. (Contributed by Greg "
"Ward.)"
msgstr ""
"O módulo :mod:`optparse` foi atualizado para a versão 1.5.1 da biblioteca "
"Optik. A classe :class:`OptionParser` ganhou um atributo :attr:`epilog`, uma "
"*string* que será impressa após a mensagem de ajuda, e um método :meth:"
"`destroy` para quebrar ciclos de referência criados pelo objeto. "
"(Contribuído por Greg Ward.)"

#: ../../whatsnew/2.5.rst:1445
msgid ""
"The :mod:`os` module underwent several changes.  The :attr:"
"`stat_float_times` variable now defaults to true, meaning that :func:`os."
"stat` will now return time values as floats.  (This doesn't necessarily mean "
"that :func:`os.stat` will return times that are precise to fractions of a "
"second; not all systems support such precision.)"
msgstr ""
"O módulo :mod:`os` sofreu várias alterações. A variável :attr:"
"`stat_float_times` agora tem o valor predefinido verdadeiro, o que significa "
"que :func:`os.stat` devolverá agora valores de tempo como floats. (Isto não "
"significa necessariamente que :func:`os.stat` devolverá tempos precisos a "
"frações de segundo; nem todos os sistemas suportam tal precisão.)"

#: ../../whatsnew/2.5.rst:1451
msgid ""
"Constants named :const:`os.SEEK_SET`, :const:`os.SEEK_CUR`, and :const:`os."
"SEEK_END` have been added; these are the parameters to the :func:`os.lseek` "
"function.  Two new constants for locking are :const:`os.O_SHLOCK` and :const:"
"`os.O_EXLOCK`."
msgstr ""
"Foram adicionadas constantes denominadas :const:`os.SEEK_SET`, :const:`os."
"SEEK_CUR` e :const:`os.SEEK_END`; estas são os parâmetros para a função :"
"func:`os.lseek`. Duas novas constantes para bloqueio são :const:`os."
"O_SHLOCK` e :const:`os.O_EXLOCK`."

#: ../../whatsnew/2.5.rst:1456
msgid ""
"Two new functions, :func:`wait3` and :func:`wait4`, were added.  They're "
"similar the :func:`waitpid` function which waits for a child process to exit "
"and returns a tuple of the process ID and its exit status, but :func:`wait3` "
"and :func:`wait4` return additional information.  :func:`wait3` doesn't take "
"a process ID as input, so it waits for any child process to exit and returns "
"a 3-tuple of *process-id*, *exit-status*, *resource-usage* as returned from "
"the :func:`resource.getrusage` function. ``wait4(pid)`` does take a process "
"ID. (Contributed by Chad J. Schroeder.)"
msgstr ""
"Duas novas funções, :func:`wait3` e :func:`wait4`, foram adicionadas. Elas "
"são semelhantes à função :func:`waitpid`, que espera que um processo filho "
"termine e devolve um tuplo do ID do processo e do seu estado de saída, mas :"
"func:`wait3` e :func:`wait4` devolvem informações adicionais. :func:`wait3` "
"não recebe um ID de processo como entrada, por isso espera que qualquer "
"processo filho termine e devolve um 3-tuplo de *process-id*, *exit-status*, "
"*resource-usage* como devolvido pela função :func:`resource.getrusage`. "
"``wait4(pid)`` recebe um ID de processo. (Contribuído por Chad J. Schroeder.)"

#: ../../whatsnew/2.5.rst:1465
msgid ""
"On FreeBSD, the :func:`os.stat` function now returns  times with nanosecond "
"resolution, and the returned object now has :attr:`st_gen` and :attr:"
"`st_birthtime`. The :attr:`st_flags` attribute is also available, if the "
"platform supports it. (Contributed by Antti Louko and  Diego Pettenò.)"
msgstr ""
"No FreeBSD, a função :func:`os.stat` agora devolve tempos com resolução de "
"nanosegundos, e o objeto devolvido agora tem :attr:`st_gen` e :attr:"
"`st_birthtime`. O atributo :attr:`st_flags` também está disponível, se a "
"plataforma o suportar. (Contribuído por Antti Louko e Diego Pettenò.)"

#: ../../whatsnew/2.5.rst:1472
msgid ""
"The Python debugger provided by the :mod:`pdb` module can now store lists of "
"commands to execute when a breakpoint is reached and execution stops.  Once "
"breakpoint #1 has been created, enter ``commands 1`` and enter a series of "
"commands to be executed, finishing the list with ``end``.  The command list "
"can include commands that resume execution, such as ``continue`` or "
"``next``. (Contributed by Grégoire Dooms.)"
msgstr ""
"O depurador Python fornecido pelo módulo :mod:`pdb` pode agora armazenar "
"listas de comandos para executar quando um ponto de interrupção é atingido e "
"a execução para. Depois de criado o ponto de interrupção #1, introduza "
"``commands 1`` e introduza uma série de comandos a serem executados, "
"terminando a lista com ``end``. A lista de comandos pode incluir comandos "
"que retomam a execução, como ``continue`` ou ``next``. (Contribuído por "
"Grégoire Dooms.)"

#: ../../whatsnew/2.5.rst:1481
msgid ""
"The :mod:`pickle` and :mod:`!cPickle` modules no longer accept a return "
"value of ``None`` from the :meth:`~object.__reduce__` method; the method "
"must return a tuple of arguments instead.  The ability to return ``None`` "
"was deprecated in Python 2.4, so this completes the removal of the feature."
msgstr ""
"Os módulos :mod:`pickle` e :mod:`!cPickle` já não aceitam um valor de "
"retorno ``None`` do método :meth:`~object.__reduce__`; o método deve "
"devolver um tuplo de argumentos em vez disso. A capacidade de devolver "
"``None`` estava obsoleta no Python 2.4, pelo que isto completa a remoção da "
"funcionalidade."

#: ../../whatsnew/2.5.rst:1486
msgid ""
"The :mod:`pkgutil` module, containing various utility functions for finding "
"packages, was enhanced to support :pep:`302`'s import hooks and now also "
"works for packages stored in ZIP-format archives. (Contributed by Phillip J. "
"Eby.)"
msgstr ""
"O módulo :mod:`pkgutil`, que contém várias funções utilitárias para "
"encontrar pacotes, foi melhorado para suportar os *hooks* de importação da :"
"pep:`302` e agora também funciona para pacotes armazenados em arquivos ZIP. "
"(Contribuído por Phillip J. Eby.)"

#: ../../whatsnew/2.5.rst:1490
msgid ""
"The pybench benchmark suite by Marc-André Lemburg is now included in the :"
"file:`Tools/pybench` directory.  The pybench suite is an improvement on the "
"commonly used :file:`pystone.py` program because pybench provides a more "
"detailed measurement of the interpreter's speed.  It times particular "
"operations such as function calls, tuple slicing, method lookups, and "
"numeric operations, instead of performing many different operations and "
"reducing the result to a single number as :file:`pystone.py` does."
msgstr ""
"A suíte de benchmark pybench de Marc-André Lemburg está agora incluída no "
"diretório :file:`Tools/pybench`. A suíte pybench é uma melhoria em relação "
"ao programa comumente usado :file:`pystone.py` porque o pybench fornece uma "
"medição mais detalhada da velocidade do interpretador. Ele mede operações "
"particulares como chamadas de função, fatiamento de tuplos, pesquisas de "
"métodos e operações numéricas, em vez de realizar muitas operações "
"diferentes e reduzir o resultado a um único número como faz o :file:`pystone."
"py`."

#: ../../whatsnew/2.5.rst:1498
msgid ""
"The :mod:`pyexpat` module now uses version 2.0 of the Expat parser. "
"(Contributed by Trent Mick.)"
msgstr ""
"O módulo :mod:`pyexpat` agora usa a versão 2.0 do analisador Expat. "
"(Contribuído por Trent Mick.)"

#: ../../whatsnew/2.5.rst:1501
msgid ""
"The :class:`~queue.Queue` class provided by the :mod:`Queue` module gained "
"two new methods.  :meth:`join` blocks until all items in the queue have been "
"retrieved and all processing work on the items  have been completed.  Worker "
"threads call the other new method,  :meth:`task_done`, to signal that "
"processing for an item has been completed.  (Contributed by Raymond "
"Hettinger.)"
msgstr ""
"A classe :class:`~queue.Queue` fornecida pelo módulo :mod:`Queue` ganhou "
"dois novos métodos. :meth:`join` bloqueia até que todos os itens na fila "
"tenham sido recuperados e todo o trabalho de processamento nos itens tenha "
"sido concluído. As *threads* de trabalho chamam o outro novo método, :meth:"
"`task_done`, para sinalizar que o processamento de um item foi concluído. "
"(Contribuído por Raymond Hettinger.)"

#: ../../whatsnew/2.5.rst:1507
msgid ""
"The old :mod:`regex` and :mod:`regsub` modules, which have been  deprecated "
"ever since Python 2.0, have finally been deleted.   Other deleted modules: :"
"mod:`statcache`, :mod:`tzparse`, :mod:`whrandom`."
msgstr ""
"Os antigos módulos :mod:`regex` e :mod:`regsub`, que estão obsoletos desde o "
"Python 2.0, foram finalmente eliminados. Outros módulos eliminados: :mod:"
"`statcache`, :mod:`tzparse`, :mod:`whrandom`."

#: ../../whatsnew/2.5.rst:1511
msgid ""
"Also deleted: the :file:`lib-old` directory, which includes ancient modules "
"such as :mod:`dircmp` and :mod:`ni`, was removed.  :file:`lib-old` wasn't on "
"the default ``sys.path``, so unless your programs explicitly added the "
"directory to ``sys.path``, this removal shouldn't affect your code."
msgstr ""
"Também eliminado: o diretório :file:`lib-old`, que incluía módulos antigos "
"como :mod:`dircmp` e :mod:`ni`, foi removido. :file:`lib-old` não estava no "
"``sys.path`` predefinido, pelo que, a menos que os seus programas "
"adicionassem explicitamente o diretório ao ``sys.path``, esta remoção não "
"deve afetar o seu código."

#: ../../whatsnew/2.5.rst:1516
msgid ""
"The :mod:`rlcompleter` module is no longer  dependent on importing the :mod:"
"`readline` module and therefore now works on non-Unix platforms. (Patch from "
"Robert Kiendl.)"
msgstr ""
"O módulo :mod:`rlcompleter` já não depende da importação do módulo :mod:"
"`readline` e, portanto, agora funciona em plataformas não-Unix. (Patch de "
"Robert Kiendl.)"

#: ../../whatsnew/2.5.rst:1522
msgid ""
"The :mod:`SimpleXMLRPCServer <xmlrpc.server>` and :mod:`DocXMLRPCServer "
"<xmlrpc.server>`  classes now have a :attr:`rpc_paths` attribute that "
"constrains XML-RPC operations to a limited set of URL paths; the default is "
"to allow only ``'/'`` and ``'/RPC2'``.  Setting :attr:`rpc_paths` to "
"``None`` or an empty tuple disables  this path checking."
msgstr ""
"As classes :mod:`SimpleXMLRPCServer <xmlrpc.server>` e :mod:`DocXMLRPCServer "
"<xmlrpc.server>` têm agora um atributo :attr:`rpc_paths` que restringe as "
"operações XML-RPC a um conjunto limitado de caminhos de URL; o predefinido é "
"permitir apenas ``'/'`` e ``'/RPC2'``. Definir :attr:`rpc_paths` para "
"``None`` ou um tuplo vazio desativa esta verificação de caminho."

#: ../../whatsnew/2.5.rst:1529
msgid ""
"The :mod:`socket` module now supports :const:`AF_NETLINK` sockets on Linux, "
"thanks to a patch from Philippe Biondi.   Netlink sockets are a Linux-"
"specific mechanism for communications between a user-space process and "
"kernel code; an introductory  article about them is at https://www."
"linuxjournal.com/article/7356. In Python code, netlink addresses are "
"represented as a tuple of 2 integers, ``(pid, group_mask)``."
msgstr ""
"O módulo :mod:`socket` agora suporta sockets :const:`AF_NETLINK` no Linux, "
"graças a um patch de Philippe Biondi. Os sockets Netlink são um mecanismo "
"específico do Linux para comunicações entre um processo no espaço do "
"utilizador e código do kernel; um artigo introdutório sobre eles está em "
"https://www.linuxjournal.com/article/7356. No código Python, os endereços "
"netlink são representados como um tuplo de 2 inteiros, ``(pid, group_mask)``."

#: ../../whatsnew/2.5.rst:1536
msgid ""
"Two new methods on socket objects, ``recv_into(buffer)`` and "
"``recvfrom_into(buffer)``, store the received data in an object  that "
"supports the buffer protocol instead of returning the data as a string.  "
"This means you can put the data directly into an array or a memory-mapped "
"file."
msgstr ""
"Dois novos métodos em objetos de socket, ``recv_into(buffer)`` e "
"``recvfrom_into(buffer)``, armazenam os dados recebidos num objeto que "
"suporta o protocolo de buffer em vez de devolver os dados como uma *string*. "
"Isto significa que pode colocar os dados diretamente num array ou num "
"ficheiro mapeado em memória."

#: ../../whatsnew/2.5.rst:1541
msgid ""
"Socket objects also gained :meth:`getfamily`, :meth:`gettype`, and :meth:"
"`getproto` accessor methods to retrieve the family, type, and protocol "
"values for the socket."
msgstr ""
"Os objetos de socket também ganharam métodos de acesso :meth:`getfamily`, :"
"meth:`gettype` e :meth:`getproto` para recuperar os valores de família, tipo "
"e protocolo do socket."

#: ../../whatsnew/2.5.rst:1545
msgid ""
"New module: the :mod:`!spwd` module provides functions for accessing the "
"shadow password database on systems that support  shadow passwords."
msgstr ""
"Novo módulo: o módulo :mod:`!spwd` fornece funções para aceder à base de "
"dados de palavras-passe shadow em sistemas que suportam palavras-passe "
"shadow."

#: ../../whatsnew/2.5.rst:1548
msgid ""
"The :mod:`struct` is now faster because it  compiles format strings into :"
"class:`Struct` objects with :meth:`pack` and :meth:`unpack` methods.  This "
"is similar to how the :mod:`re` module lets you create compiled regular "
"expression objects.  You can still use the module-level  :func:`pack` and :"
"func:`unpack` functions; they'll create  :class:`Struct` objects and cache "
"them.  Or you can use  :class:`Struct` instances directly::"
msgstr ""
"O módulo :mod:`struct` é agora mais rápido porque compila *strings* de "
"formato em objetos :class:`Struct` com métodos :meth:`pack` e :meth:"
"`unpack`. Isto é semelhante à forma como o módulo :mod:`re` permite criar "
"objetos de expressão regular compilados. Ainda pode usar as funções de nível "
"de módulo :func:`pack` e :func:`unpack`; elas criarão objetos :class:"
"`Struct` e guardá-los-ão em cache. Ou pode usar instâncias :class:`Struct` "
"diretamente::"

#: ../../whatsnew/2.5.rst:1555
msgid ""
"s = struct.Struct('ih3s')\n"
"\n"
"data = s.pack(1972, 187, 'abc')\n"
"year, number, name = s.unpack(data)"
msgstr ""
"s = struct.Struct('ih3s')\n"
"\n"
"data = s.pack(1972, 187, 'abc')\n"
"year, number, name = s.unpack(data)"

#: ../../whatsnew/2.5.rst:1560
msgid ""
"You can also pack and unpack data to and from buffer objects directly using "
"the ``pack_into(buffer, offset, v1, v2, ...)`` and ``unpack_from(buffer, "
"offset)`` methods.  This lets you store data directly into an array or a "
"memory-mapped file."
msgstr ""
"Também pode empacotar e desempacotar dados para e de objetos de buffer "
"diretamente usando os métodos ``pack_into(buffer, offset, v1, v2, ...)`` e "
"``unpack_from(buffer, offset)``. Isto permite armazenar dados diretamente "
"num array ou num ficheiro mapeado em memória."

#: ../../whatsnew/2.5.rst:1565
msgid ""
"(:class:`Struct` objects were implemented by Bob Ippolito at the "
"NeedForSpeed sprint.  Support for buffer objects was added by Martin Blais, "
"also at the NeedForSpeed sprint.)"
msgstr ""
"(Os objetos :class:`Struct` foram implementados por Bob Ippolito no *sprint* "
"NeedForSpeed. O suporte para objetos de buffer foi adicionado por Martin "
"Blais, também no *sprint* NeedForSpeed.)"

#: ../../whatsnew/2.5.rst:1569
msgid ""
"The Python developers switched from CVS to Subversion during the 2.5 "
"development process.  Information about the exact build version is available "
"as the ``sys.subversion`` variable, a 3-tuple of ``(interpreter-name, branch-"
"name, revision-range)``.  For example, at the time of writing my copy of 2.5 "
"was reporting ``('CPython', 'trunk', '45313:45315')``."
msgstr ""
"Os programadores Python mudaram de CVS para Subversion durante o processo de "
"desenvolvimento do 2.5. Informações sobre a versão exata da compilação estão "
"disponíveis na variável ``sys.subversion``, um 3-tuplo de ``(interpreter-"
"name, branch-name, revision-range)``. Por exemplo, na altura da escrita, a "
"minha cópia do 2.5 reportava ``('CPython', 'trunk', '45313:45315')``."

#: ../../whatsnew/2.5.rst:1575
msgid ""
"This information is also available to C extensions via the :c:func:"
"`Py_GetBuildInfo` function that returns a  string of build information like "
"this: ``\"trunk:45355:45356M, Apr 13 2006, 07:42:19\"``.   (Contributed by "
"Barry Warsaw.)"
msgstr ""
"Esta informação também está disponível para extensões C através da função :c:"
"func:`Py_GetBuildInfo`, que devolve uma *string* de informação de compilação "
"como esta: ``\"trunk:45355:45356M, Apr 13 2006, 07:42:19\"``. (Contribuído "
"por Barry Warsaw.)"

#: ../../whatsnew/2.5.rst:1580
msgid ""
"Another new function, :func:`sys._current_frames`, returns the current stack "
"frames for all running threads as a dictionary mapping thread identifiers to "
"the topmost stack frame currently active in that thread at the time the "
"function is called.  (Contributed by Tim Peters.)"
msgstr ""
"Outra nova função, :func:`sys._current_frames`, devolve os quadros de pilha "
"atuais para todas as *threads* em execução como um dicionário que mapeia "
"identificadores de *threads* para o quadro de pilha mais alto atualmente "
"ativo nessa *thread* no momento em que a função é chamada. (Contribuído por "
"Tim Peters.)"

#: ../../whatsnew/2.5.rst:1585
msgid ""
"The :class:`TarFile` class in the :mod:`tarfile` module now has an :meth:"
"`extractall` method that extracts all members from the archive into the "
"current working directory.  It's also possible to set a different directory "
"as the extraction target, and to unpack only a subset of the archive's "
"members."
msgstr ""
"A classe :class:`TarFile` no módulo :mod:`tarfile` tem agora um método :meth:"
"`extractall` que extrai todos os membros do arquivo para o diretório de "
"trabalho atual. Também é possível definir um diretório diferente como alvo "
"de extração e descompactar apenas um subconjunto dos membros do arquivo."

#: ../../whatsnew/2.5.rst:1590
msgid ""
"The compression used for a tarfile opened in stream mode can now be "
"autodetected using the mode ``'r|*'``. (Contributed by Lars Gustäbel.)"
msgstr ""
"A compressão usada para um arquivo tar aberto em modo de *stream* pode agora "
"ser detetada automaticamente usando o modo ``'r|*'``. (Contribuído por Lars "
"Gustäbel.)"

#: ../../whatsnew/2.5.rst:1595
msgid ""
"The :mod:`threading` module now lets you set the stack size used when new "
"threads are created. The ``stack_size([*size*])`` function returns the "
"currently configured stack size, and supplying the optional *size* parameter "
"sets a new value.  Not all platforms support changing the stack size, but "
"Windows, POSIX threading, and OS/2 all do. (Contributed by Andrew MacIntyre.)"
msgstr ""
"O módulo :mod:`threading` agora permite definir o tamanho da pilha usado "
"quando novas *threads* são criadas. A função ``stack_size([*size*])`` "
"devolve o tamanho da pilha atualmente configurado, e fornecer o parâmetro "
"opcional *size* define um novo valor. Nem todas as plataformas suportam a "
"alteração do tamanho da pilha, mas Windows, POSIX threading e OS/2 suportam. "
"(Contribuído por Andrew MacIntyre.)"

#: ../../whatsnew/2.5.rst:1603
msgid ""
"The :mod:`unicodedata` module has been updated to use version 4.1.0 of the "
"Unicode character database.  Version 3.2.0 is required  by some "
"specifications, so it's still available as  :data:`unicodedata.ucd_3_2_0`."
msgstr ""
"O módulo :mod:`unicodedata` foi atualizado para usar a versão 4.1.0 da base "
"de dados de caracteres Unicode. A versão 3.2.0 é necessária por algumas "
"especificações, pelo que ainda está disponível como :data:`unicodedata."
"ucd_3_2_0`."

#: ../../whatsnew/2.5.rst:1607
msgid ""
"New module: the  :mod:`uuid` module generates  universally unique "
"identifiers (UUIDs) according to :rfc:`4122`.  The RFC defines several "
"different UUID versions that are generated from a starting string, from "
"system properties, or purely randomly.  This module contains a :class:`UUID` "
"class and  functions named :func:`uuid1`, :func:`uuid3`, :func:`uuid4`,  "
"and  :func:`uuid5` to generate different versions of UUID.  (Version 2 "
"UUIDs  are not specified in :rfc:`4122` and are not supported by this "
"module.) ::"
msgstr ""
"Novo módulo: o módulo :mod:`uuid` gera identificadores universalmente únicos "
"(UUIDs) de acordo com a :rfc:`4122`. A RFC define várias versões diferentes "
"de UUIDs que são geradas a partir de uma *string* inicial, de propriedades "
"do sistema, ou puramente de forma aleatória. Este módulo contém uma classe :"
"class:`UUID` e funções denominadas :func:`uuid1`, :func:`uuid3`, :func:"
"`uuid4` e :func:`uuid5` para gerar diferentes versões de UUIDs. (Os UUIDs da "
"versão 2 não estão especificados na :rfc:`4122` e não são suportados por "
"este módulo.) ::"

#: ../../whatsnew/2.5.rst:1615
msgid ""
">>> import uuid\n"
">>> # make a UUID based on the host ID and current time\n"
">>> uuid.uuid1()\n"
"UUID('a8098c1a-f86e-11da-bd1a-00112444be1e')\n"
"\n"
">>> # make a UUID using an MD5 hash of a namespace UUID and a name\n"
">>> uuid.uuid3(uuid.NAMESPACE_DNS, 'python.org')\n"
"UUID('6fa459ea-ee8a-3ca4-894e-db77e160355e')\n"
"\n"
">>> # make a random UUID\n"
">>> uuid.uuid4()\n"
"UUID('16fd2706-8baf-433b-82eb-8c7fada847da')\n"
"\n"
">>> # make a UUID using a SHA-1 hash of a namespace UUID and a name\n"
">>> uuid.uuid5(uuid.NAMESPACE_DNS, 'python.org')\n"
"UUID('886313e1-3b8a-5372-9b90-0c9aee199e5d')"
msgstr ""
">>> import uuid\n"
">>> # criar um UUID com base no ID do *host* e na hora atual\n"
">>> uuid.uuid1()\n"
"UUID('a8098c1a-f86e-11da-bd1a-00112444be1e')\n"
"\n"
">>> # criar um UUID usando um *hash* MD5 de um UUID de *namespace* e um "
"nome\n"
">>> uuid.uuid3(uuid.NAMESPACE_DNS, 'python.org')\n"
"UUID('6fa459ea-ee8a-3ca4-894e-db77e160355e')\n"
"\n"
">>> # criar um UUID aleatório\n"
">>> uuid.uuid4()\n"
"UUID('16fd2706-8baf-433b-82eb-8c7fada847da')\n"
"\n"
">>> # criar um UUID usando um *hash* SHA-1 de um UUID de *namespace* e um "
"nome\n"
">>> uuid.uuid5(uuid.NAMESPACE_DNS, 'python.org')\n"
"UUID('886313e1-3b8a-5372-9b90-0c9aee199e5d')"

#: ../../whatsnew/2.5.rst:1632
msgid "(Contributed by Ka-Ping Yee.)"
msgstr "(Contribuído por Ka-Ping Yee.)"

#: ../../whatsnew/2.5.rst:1634
msgid ""
"The :mod:`weakref` module's :class:`WeakKeyDictionary` and :class:"
"`WeakValueDictionary` types gained new methods for iterating over the weak "
"references contained in the dictionary.  :meth:`iterkeyrefs` and :meth:"
"`keyrefs` methods were added to :class:`WeakKeyDictionary`, and :meth:"
"`itervaluerefs` and :meth:`valuerefs` were added to :class:"
"`WeakValueDictionary`.  (Contributed by Fred L. Drake, Jr.)"
msgstr ""
"Os tipos :class:`WeakKeyDictionary` e :class:`WeakValueDictionary` do "
"módulo :mod:`weakref` ganharam novos métodos para iterar sobre as "
"referências fracas contidas no dicionário. Os métodos :meth:`iterkeyrefs` e :"
"meth:`keyrefs` foram adicionados a :class:`WeakKeyDictionary`, e :meth:"
"`itervaluerefs` e :meth:`valuerefs` foram adicionados a :class:"
"`WeakValueDictionary`. (Contribuído por Fred L. Drake, Jr.)"

#: ../../whatsnew/2.5.rst:1641
msgid ""
"The :mod:`webbrowser` module received a number of enhancements. It's now "
"usable as a script with ``python -m webbrowser``, taking a URL as the "
"argument; there are a number of switches  to control the behaviour (:option:"
"`!-n` for a new browser window,  :option:`!-t` for a new tab).  New module-"
"level functions, :func:`open_new` and :func:`open_new_tab`, were added  to "
"support this.  The module's :func:`open` function supports an additional "
"feature, an *autoraise* parameter that signals whether to raise the open "
"window when possible. A number of additional browsers were added to the "
"supported list such as Firefox, Opera, Konqueror, and elinks.  (Contributed "
"by Oleg Broytmann and Georg Brandl.)"
msgstr ""
"O módulo :mod:`webbrowser` recebeu várias melhorias. Agora pode ser usado "
"como um *script* com ``python -m webbrowser``, tomando uma URL como "
"argumento; existem várias opções para controlar o comportamento (:option:`!-"
"n` para uma nova janela do navegador, :option:`!-t` para um novo separador). "
"Novas funções de nível de módulo, :func:`open_new` e :func:`open_new_tab`, "
"foram adicionadas para suportar isto. A função :func:`open` do módulo "
"suporta uma funcionalidade adicional, um parâmetro *autoraise* que sinaliza "
"se deve elevar a janela aberta quando possível. Vários navegadores "
"adicionais foram adicionados à lista suportada, como Firefox, Opera, "
"Konqueror e elinks. (Contribuído por Oleg Broytmann e Georg Brandl.)"

#: ../../whatsnew/2.5.rst:1653
msgid ""
"The :mod:`xmlrpclib <xmlrpc.client>` module now supports returning  :class:"
"`~datetime.datetime` objects for the XML-RPC date type.  Supply  "
"``use_datetime=True`` to the :func:`~xmlrpc.client.loads` function or the :"
"class:`!Unmarshaller` class to enable this feature. (Contributed by Skip "
"Montanaro.)"
msgstr ""
"O módulo :mod:`xmlrpclib <xmlrpc.client>` agora suporta a devolução de "
"objetos :class:`~datetime.datetime` para o tipo de data XML-RPC. Forneça "
"``use_datetime=True`` à função :func:`~xmlrpc.client.loads` ou à classe :"
"class:`!Unmarshaller` para ativar esta funcionalidade. (Contribuído por Skip "
"Montanaro.)"

#: ../../whatsnew/2.5.rst:1660
msgid ""
"The :mod:`zipfile` module now supports the ZIP64 version of the  format, "
"meaning that a .zip archive can now be larger than 4 GiB and can contain "
"individual files larger than 4 GiB.  (Contributed by Ronald Oussoren.)"
msgstr ""
"O módulo :mod:`zipfile` agora suporta a versão ZIP64 do formato, o que "
"significa que um arquivo .zip pode agora ser maior do que 4 GiB e pode "
"conter ficheiros individuais maiores do que 4 GiB. (Contribuído por Ronald "
"Oussoren.)"

#: ../../whatsnew/2.5.rst:1666
msgid ""
"The :mod:`zlib` module's :class:`Compress` and :class:`Decompress` objects "
"now support a :meth:`copy` method that makes a copy of the  object's "
"internal state and returns a new  :class:`Compress` or :class:`Decompress` "
"object. (Contributed by Chris AtLee.)"
msgstr ""
"Os objetos :class:`Compress` e :class:`Decompress` do módulo :mod:`zlib` "
"agora suportam um método :meth:`copy` que faz uma cópia do estado interno do "
"objeto e devolve um novo objeto :class:`Compress` ou :class:`Decompress`. "
"(Contribuído por Chris AtLee.)"

#: ../../whatsnew/2.5.rst:1679
msgid "The ctypes package"
msgstr "O pacote ctypes"

#: ../../whatsnew/2.5.rst:1681
msgid ""
"The :mod:`ctypes` package, written by Thomas Heller, has been added  to the "
"standard library.  :mod:`ctypes` lets you call arbitrary functions  in "
"shared libraries or DLLs.  Long-time users may remember the :mod:`!dl` "
"module, which provides functions for loading shared libraries and calling "
"functions in them. The :mod:`ctypes` package is much fancier."
msgstr ""
"O pacote :mod:`ctypes`, escrito por Thomas Heller, foi adicionado à "
"biblioteca padrão. :mod:`ctypes` permite chamar funções arbitrárias em "
"bibliotecas partilhadas ou DLLs. Utilizadores de longa data podem lembrar-se "
"do módulo :mod:`!dl`, que fornece funções para carregar bibliotecas "
"partilhadas e chamar funções nelas. O pacote :mod:`ctypes` é muito mais "
"sofisticado."

#: ../../whatsnew/2.5.rst:1687
msgid ""
"To load a shared library or DLL, you must create an instance of the :class:"
"`CDLL` class and provide the name or path of the shared library or DLL. Once "
"that's done, you can call arbitrary functions by accessing them as "
"attributes of the :class:`CDLL` object.   ::"
msgstr ""
"Para carregar uma biblioteca partilhada ou DLL, deve criar uma instância da "
"classe :class:`CDLL` e fornecer o nome ou caminho da biblioteca partilhada "
"ou DLL. Uma vez feito isso, pode chamar funções arbitrárias acedendo-as como "
"atributos do objeto :class:`CDLL`. ::"

#: ../../whatsnew/2.5.rst:1692
msgid ""
"import ctypes\n"
"\n"
"libc = ctypes.CDLL('libc.so.6')\n"
"result = libc.printf(\"Line of output\\n\")"
msgstr ""
"import ctypes\n"
"\n"
"libc = ctypes.CDLL('libc.so.6')\n"
"result = libc.printf(\"Linha de saída\\n\")"

#: ../../whatsnew/2.5.rst:1697
msgid ""
"Type constructors for the various C types are provided: :func:`c_int`, :func:"
"`c_float`, :func:`c_double`, :func:`c_char_p` (equivalent to :c:expr:`char "
"\\*`), and so forth.  Unlike Python's types, the C versions are all mutable; "
"you can assign to their :attr:`value` attribute to change the wrapped "
"value.  Python integers and strings will be automatically converted to the "
"corresponding C types, but for other types you  must call the correct type "
"constructor.  (And I mean *must*;  getting it wrong will often result in the "
"interpreter crashing with a segmentation fault.)"
msgstr ""
"São fornecidos construtores de tipo para os vários tipos C: :func:`c_int`, :"
"func:`c_float`, :func:`c_double`, :func:`c_char_p` (equivalente a :c:expr:"
"`char \\*`), e assim por diante. Ao contrário dos tipos Python, as versões C "
"são todas mutáveis; pode atribuir ao seu atributo :attr:`value` para alterar "
"o valor encapsulado. Inteiros e *strings* Python serão automaticamente "
"convertidos para os tipos C correspondentes, mas para outros tipos deve "
"chamar o construtor de tipo correto. (E quero dizer *deve*; errar "
"frequentemente resultará no interpretador falhar com um erro de segmentação.)"

#: ../../whatsnew/2.5.rst:1706
msgid ""
"You shouldn't use :func:`c_char_p` with a Python string when the C function "
"will be modifying the memory area, because Python strings are  supposed to "
"be immutable; breaking this rule will cause puzzling bugs.  When you need a "
"modifiable memory area, use :func:`create_string_buffer`::"
msgstr ""
"Não deve usar :func:`c_char_p` com uma *string* Python quando a função C irá "
"modificar a área de memória, porque as *strings* Python são supostas ser "
"imutáveis; violar esta regra causará *bugs* confusos. Quando precisar de uma "
"área de memória modificável, use :func:`create_string_buffer`::"

#: ../../whatsnew/2.5.rst:1711
msgid ""
"s = \"this is a string\"\n"
"buf = ctypes.create_string_buffer(s)\n"
"libc.strfry(buf)"
msgstr ""
"s = \"esta é uma string\"\n"
"buf = ctypes.create_string_buffer(s)\n"
"libc.strfry(buf)"

#: ../../whatsnew/2.5.rst:1715
msgid ""
"C functions are assumed to return integers, but you can set the :attr:"
"`restype` attribute of the function object to  change this::"
msgstr ""
"As funções C são assumidas como devolvendo inteiros, mas pode definir o "
"atributo :attr:`restype` do objeto função para alterar isto::"

#: ../../whatsnew/2.5.rst:1718
msgid ""
">>> libc.atof('2.71828')\n"
"-1783957616\n"
">>> libc.atof.restype = ctypes.c_double\n"
">>> libc.atof('2.71828')\n"
"2.71828"
msgstr ""
">>> libc.atof('2.71828')\n"
"-1783957616\n"
">>> libc.atof.restype = ctypes.c_double\n"
">>> libc.atof('2.71828')\n"
"2.71828"

#: ../../whatsnew/2.5.rst:1724
msgid ""
":mod:`ctypes` also provides a wrapper for Python's C API  as the ``ctypes."
"pythonapi`` object.  This object does *not*  release the global interpreter "
"lock before calling a function, because the lock must be held when calling "
"into the interpreter's code.   There's a :class:`~ctypes.py_object` type "
"constructor that will create a  :c:expr:`PyObject *` pointer.  A simple "
"usage::"
msgstr ""
":mod:`ctypes` também fornece um *wrapper* para a API C do Python como o "
"objeto ``ctypes.pythonapi``. Este objeto *não* libera o bloqueio global do "
"interpretador antes de chamar uma função, porque o bloqueio deve ser mantido "
"ao chamar o código do interpretador. Existe um construtor de tipo :class:"
"`~ctypes.py_object` que criará um ponteiro :c:expr:`PyObject *`. Um uso "
"simples::"

#: ../../whatsnew/2.5.rst:1730
msgid ""
"import ctypes\n"
"\n"
"d = {}\n"
"ctypes.pythonapi.PyObject_SetItem(ctypes.py_object(d),\n"
"          ctypes.py_object(\"abc\"),  ctypes.py_object(1))\n"
"# d is now {'abc', 1}."
msgstr ""
"import ctypes\n"
"\n"
"d = {}\n"
"ctypes.pythonapi.PyObject_SetItem(ctypes.py_object(d),\n"
"          ctypes.py_object(\"abc\"),  ctypes.py_object(1))\n"
"# d é agora {'abc': 1}."

#: ../../whatsnew/2.5.rst:1737
msgid ""
"Don't forget to use :func:`~ctypes.py_object`; if it's omitted you end  up "
"with a segmentation fault."
msgstr ""
"Não se esqueça de usar :func:`~ctypes.py_object`; se for omitido, acabará "
"com um erro de segmentação."

#: ../../whatsnew/2.5.rst:1740
msgid ""
":mod:`ctypes` has been around for a while, but people still write  and "
"distribution hand-coded extension modules because you can't rely on :mod:"
"`ctypes` being present. Perhaps developers will begin to write  Python "
"wrappers atop a library accessed through :mod:`ctypes` instead of extension "
"modules, now that :mod:`ctypes` is included with core Python."
msgstr ""
":mod:`ctypes` existe há algum tempo, mas as pessoas ainda escrevem e "
"distribuem módulos de extensão codificados manualmente porque não se pode "
"confiar que :mod:`ctypes` esteja presente. Talvez os programadores comecem a "
"escrever *wrappers* Python sobre uma biblioteca acedida através de :mod:"
"`ctypes` em vez de módulos de extensão, agora que :mod:`ctypes` está "
"incluído no Python principal."

#: ../../whatsnew/2.5.rst:1749
msgid ""
"https://web.archive.org/web/20180410025338/http://starship.python.net/crew/"
"theller/ctypes/"
msgstr ""
"https://web.archive.org/web/20180410025338/http://starship.python.net/crew/"
"theller/ctypes/"

#: ../../whatsnew/2.5.rst:1750
msgid "The pre-stdlib ctypes web page, with a tutorial, reference, and FAQ."
msgstr ""
"A página web do ctypes pré-biblioteca padrão, com um tutorial, referência e "
"FAQ."

#: ../../whatsnew/2.5.rst:1752
msgid "The documentation  for the :mod:`ctypes` module."
msgstr "A documentação para o módulo :mod:`ctypes`."

#: ../../whatsnew/2.5.rst:1760
msgid "The ElementTree package"
msgstr "O pacote ElementTree"

#: ../../whatsnew/2.5.rst:1762
msgid ""
"A subset of Fredrik Lundh's ElementTree library for processing XML has been "
"added to the standard library as :mod:`xml.etree`.  The available modules "
"are :mod:`ElementTree`, :mod:`ElementPath`, and :mod:`ElementInclude` from "
"ElementTree 1.2.6.    The :mod:`cElementTree` accelerator module is also "
"included."
msgstr ""
"Um subconjunto da biblioteca ElementTree de Fredrik Lundh para processamento "
"de XML foi adicionado à biblioteca padrão como :mod:`xml.etree`. Os módulos "
"disponíveis são :mod:`ElementTree`, :mod:`ElementPath` e :mod:"
"`ElementInclude` do ElementTree 1.2.6. O módulo acelerador :mod:"
"`cElementTree` também está incluído."

#: ../../whatsnew/2.5.rst:1768
msgid ""
"The rest of this section will provide a brief overview of using ElementTree. "
"Full documentation for ElementTree is available at https://web.archive.org/"
"web/20201124024954/http://effbot.org/zone/element-index.htm."
msgstr ""
"O resto desta secção fornecerá uma breve visão geral do uso do ElementTree. "
"A documentação completa para o ElementTree está disponível em https://web."
"archive.org/web/20201124024954/http://effbot.org/zone/element-index.htm."

#: ../../whatsnew/2.5.rst:1772
msgid ""
"ElementTree represents an XML document as a tree of element nodes. The text "
"content of the document is stored as the :attr:`text` and :attr:`tail` "
"attributes of  (This is one of the major differences between ElementTree and "
"the Document Object Model; in the DOM there are many different types of "
"node, including :class:`TextNode`.)"
msgstr ""
"O ElementTree representa um documento XML como uma árvore de nós de "
"elementos. O conteúdo de texto do documento é armazenado como os atributos :"
"attr:`text` e :attr:`tail` (Esta é uma das principais diferenças entre o "
"ElementTree e o Modelo de Objeto de Documento; no DOM, existem muitos tipos "
"diferentes de nós, incluindo :class:`TextNode`.)"

#: ../../whatsnew/2.5.rst:1778
msgid ""
"The most commonly used parsing function is :func:`parse`, that takes either "
"a string (assumed to contain a filename) or a file-like object and returns "
"an :class:`ElementTree` instance::"
msgstr ""
"A função de análise mais comumente usada é :func:`parse`, que aceita uma "
"*string* (assumida como contendo um nome de ficheiro) ou um objeto tipo "
"ficheiro e devolve uma instância :class:`ElementTree`::"

#: ../../whatsnew/2.5.rst:1782
msgid ""
"from xml.etree import ElementTree as ET\n"
"\n"
"tree = ET.parse('ex-1.xml')\n"
"\n"
"feed = urllib.urlopen(\n"
"          'http://planet.python.org/rss10.xml')\n"
"tree = ET.parse(feed)"
msgstr ""
"from xml.etree import ElementTree as ET\n"
"\n"
"tree = ET.parse('ex-1.xml')\n"
"\n"
"feed = urllib.urlopen(\n"
"          'http://planet.python.org/rss10.xml')\n"
"tree = ET.parse(feed)"

#: ../../whatsnew/2.5.rst:1790
msgid ""
"Once you have an :class:`ElementTree` instance, you can call its :meth:"
"`getroot` method to get the root :class:`Element` node."
msgstr ""
"Uma vez que tenha uma instância :class:`ElementTree`, pode chamar o seu "
"método :meth:`getroot` para obter o nó raiz :class:`Element`."

#: ../../whatsnew/2.5.rst:1793
msgid ""
"There's also an :func:`XML` function that takes a string literal and returns "
"an :class:`Element` node (not an :class:`ElementTree`).   This function "
"provides a tidy way to incorporate XML fragments, approaching the "
"convenience of an XML literal::"
msgstr ""
"Também existe uma função :func:`XML` que recebe um literal de *string* e "
"devolve um nó :class:`Element` (não um :class:`ElementTree`). Esta função "
"fornece uma forma organizada de incorporar fragmentos XML, aproximando-se da "
"conveniência de um literal XML::"

#: ../../whatsnew/2.5.rst:1798
msgid ""
"svg = ET.XML(\"\"\"<svg width=\"10px\" version=\"1.0\">\n"
"             </svg>\"\"\")\n"
"svg.set('height', '320px')\n"
"svg.append(elem1)"
msgstr ""
"svg = ET.XML(\"\"\"<svg width=\"10px\" version=\"1.0\">\n"
"             </svg>\"\"\")\n"
"svg.set('height', '320px')\n"
"svg.append(elem1)"

#: ../../whatsnew/2.5.rst:1803
msgid ""
"Each XML element supports some dictionary-like and some list-like access "
"methods.  Dictionary-like operations are used to access attribute values, "
"and list-like operations are used to access child nodes."
msgstr ""
"Cada elemento XML suporta alguns métodos de acesso semelhantes a dicionários "
"e alguns semelhantes a listas. Operações semelhantes a dicionários são "
"usadas para aceder a valores de atributos, e operações semelhantes a listas "
"são usadas para aceder a nós filhos."

#: ../../whatsnew/2.5.rst:1808
msgid "Operation"
msgstr "Operação"

#: ../../whatsnew/2.5.rst:1808
msgid "Result"
msgstr "Resultado"

#: ../../whatsnew/2.5.rst:1810
msgid "``elem[n]``"
msgstr "``elem[n]``"

#: ../../whatsnew/2.5.rst:1810
msgid "Returns n'th child element."
msgstr "Devolve o n-ésimo elemento filho."

#: ../../whatsnew/2.5.rst:1812
msgid "``elem[m:n]``"
msgstr "``elem[m:n]``"

#: ../../whatsnew/2.5.rst:1812
msgid "Returns list of m'th through n'th child elements."
msgstr "Devolve uma lista dos elementos filhos do m-ésimo ao n-ésimo."

#: ../../whatsnew/2.5.rst:1815
msgid "``len(elem)``"
msgstr "``len(elem)``"

#: ../../whatsnew/2.5.rst:1815
msgid "Returns number of child elements."
msgstr "Devolve o número de elementos filhos."

#: ../../whatsnew/2.5.rst:1817
msgid "``list(elem)``"
msgstr "``list(elem)``"

#: ../../whatsnew/2.5.rst:1817
msgid "Returns list of child elements."
msgstr "Devolve uma lista de elementos filhos."

#: ../../whatsnew/2.5.rst:1819
msgid "``elem.append(elem2)``"
msgstr "``elem.append(elem2)``"

#: ../../whatsnew/2.5.rst:1819
msgid "Adds *elem2* as a child."
msgstr "Adiciona *elem2* como filho."

#: ../../whatsnew/2.5.rst:1821
msgid "``elem.insert(index, elem2)``"
msgstr "``elem.insert(index, elem2)``"

#: ../../whatsnew/2.5.rst:1821
msgid "Inserts *elem2* at the specified location."
msgstr "Insere *elem2* na localização especificada."

#: ../../whatsnew/2.5.rst:1823
msgid "``del elem[n]``"
msgstr "``del elem[n]``"

#: ../../whatsnew/2.5.rst:1823
msgid "Deletes n'th child element."
msgstr "Elimina o n-ésimo elemento filho."

#: ../../whatsnew/2.5.rst:1825
msgid "``elem.keys()``"
msgstr "``elem.keys()``"

#: ../../whatsnew/2.5.rst:1825
msgid "Returns list of attribute names."
msgstr "Devolve uma lista de nomes de atributos."

#: ../../whatsnew/2.5.rst:1827
msgid "``elem.get(name)``"
msgstr "``elem.get(name)``"

#: ../../whatsnew/2.5.rst:1827
msgid "Returns value of attribute *name*."
msgstr "Devolve o valor do atributo *name*."

#: ../../whatsnew/2.5.rst:1829
msgid "``elem.set(name, value)``"
msgstr "``elem.set(name, value)``"

#: ../../whatsnew/2.5.rst:1829
msgid "Sets new value for attribute *name*."
msgstr "Define um novo valor para o atributo *name*."

#: ../../whatsnew/2.5.rst:1831
msgid "``elem.attrib``"
msgstr "``elem.attrib``"

#: ../../whatsnew/2.5.rst:1831
msgid "Retrieves the dictionary containing attributes."
msgstr "Recupera o dicionário que contém os atributos."

#: ../../whatsnew/2.5.rst:1834
msgid "``del elem.attrib[name]``"
msgstr "``del elem.attrib[name]``"

#: ../../whatsnew/2.5.rst:1834
msgid "Deletes attribute *name*."
msgstr "Elimina o atributo *name*."

#: ../../whatsnew/2.5.rst:1837
msgid ""
"Comments and processing instructions are also represented as :class:"
"`Element` nodes.  To check if a node is a comment or processing "
"instructions::"
msgstr ""
"Comentários e instruções de processamento também são representados como nós :"
"class:`Element`. Para verificar se um nó é um comentário ou instruções de "
"processamento::"

#: ../../whatsnew/2.5.rst:1840
msgid ""
"if elem.tag is ET.Comment:\n"
"    ...\n"
"elif elem.tag is ET.ProcessingInstruction:\n"
"    ..."
msgstr ""
"if elem.tag is ET.Comment:\n"
"    ...\n"
"elif elem.tag is ET.ProcessingInstruction:\n"
"    ..."

#: ../../whatsnew/2.5.rst:1845
msgid ""
"To generate XML output, you should call the :meth:`ElementTree.write` "
"method. Like :func:`parse`, it can take either a string or a file-like "
"object::"
msgstr ""
"Para gerar saída XML, deve chamar o método :meth:`ElementTree.write`. Tal "
"como :func:`parse`, pode aceitar uma *string* ou um objeto tipo ficheiro::"

#: ../../whatsnew/2.5.rst:1848
msgid ""
"# Encoding is US-ASCII\n"
"tree.write('output.xml')\n"
"\n"
"# Encoding is UTF-8\n"
"f = open('output.xml', 'w')\n"
"tree.write(f, encoding='utf-8')"
msgstr ""
"# Codificação é US-ASCII\n"
"tree.write('output.xml')\n"
"\n"
"# Codificação é UTF-8\n"
"f = open('output.xml', 'w')\n"
"tree.write(f, encoding='utf-8')"

#: ../../whatsnew/2.5.rst:1855
msgid ""
"(Caution: the default encoding used for output is ASCII.  For general XML "
"work, where an element's name may contain arbitrary Unicode characters, "
"ASCII isn't a very useful encoding because it will raise an exception if an "
"element's name contains any characters with values greater than 127.  "
"Therefore, it's best to specify a different encoding such as UTF-8 that can "
"handle any Unicode character.)"
msgstr ""
"(Atenção: a codificação predefinida usada para saída é ASCII. Para trabalho "
"XML geral, onde o nome de um elemento pode conter caracteres Unicode "
"arbitrários, ASCII não é uma codificação muito útil porque gerará uma "
"exceção se o nome de um elemento contiver quaisquer caracteres com valores "
"superiores a 127. Portanto, é melhor especificar uma codificação diferente, "
"como UTF-8, que pode lidar com qualquer caractere Unicode.)"

#: ../../whatsnew/2.5.rst:1862
msgid ""
"This section is only a partial description of the ElementTree interfaces. "
"Please read the package's official documentation for more details."
msgstr ""
"Esta secção é apenas uma descrição parcial das interfaces do ElementTree. "
"Consulte a documentação oficial do pacote para mais detalhes."

#: ../../whatsnew/2.5.rst:1868
msgid ""
"https://web.archive.org/web/20201124024954/http://effbot.org/zone/element-"
"index.htm"
msgstr ""
"https://web.archive.org/web/20201124024954/http://effbot.org/zone/element-"
"index.htm"

#: ../../whatsnew/2.5.rst:1869
msgid "Official documentation for ElementTree."
msgstr "Documentação oficial para o ElementTree."

#: ../../whatsnew/2.5.rst:1877
msgid "The hashlib package"
msgstr "O pacote hashlib"

#: ../../whatsnew/2.5.rst:1879
msgid ""
"A new :mod:`hashlib` module, written by Gregory P. Smith,  has been added to "
"replace the :mod:`!md5` and :mod:`!sha` modules.  :mod:`hashlib` adds "
"support for additional secure hashes (SHA-224, SHA-256, SHA-384, and "
"SHA-512). When available, the module uses OpenSSL for fast platform "
"optimized implementations of algorithms."
msgstr ""
"Um novo módulo :mod:`hashlib`, escrito por Gregory P. Smith, foi adicionado "
"para substituir os módulos :mod:`!md5` e :mod:`!sha`. :mod:`hashlib` "
"adiciona suporte para *hashes* de segurança adicionais (SHA-224, SHA-256, "
"SHA-384 e SHA-512). Quando disponível, o módulo usa OpenSSL para "
"implementações otimizadas de algoritmos rápidos para a plataforma."

#: ../../whatsnew/2.5.rst:1885
msgid ""
"The old :mod:`!md5` and :mod:`!sha` modules still exist as wrappers around "
"hashlib to preserve backwards compatibility.  The new module's interface is "
"very close to that of the old modules, but not identical. The most "
"significant difference is that the constructor functions for creating new "
"hashing objects are named differently. ::"
msgstr ""
"Os antigos módulos :mod:`!md5` e :mod:`!sha` ainda existem como *wrappers* "
"em torno do hashlib para preservar a compatibilidade retroativa. A interface "
"do novo módulo é muito próxima da dos antigos módulos, mas não idêntica. A "
"diferença mais significativa é que as funções construtoras para criar novos "
"objetos de *hash* têm nomes diferentes. ::"

#: ../../whatsnew/2.5.rst:1891
msgid ""
"# Old versions\n"
"h = md5.md5()\n"
"h = md5.new()\n"
"\n"
"# New version\n"
"h = hashlib.md5()\n"
"\n"
"# Old versions\n"
"h = sha.sha()\n"
"h = sha.new()\n"
"\n"
"# New version\n"
"h = hashlib.sha1()\n"
"\n"
"# Hash that weren't previously available\n"
"h = hashlib.sha224()\n"
"h = hashlib.sha256()\n"
"h = hashlib.sha384()\n"
"h = hashlib.sha512()\n"
"\n"
"# Alternative form\n"
"h = hashlib.new('md5')          # Provide algorithm as a string"
msgstr ""
"# Versões antigas\n"
"h = md5.md5()\n"
"h = md5.new()\n"
"\n"
"# Nova versão\n"
"h = hashlib.md5()\n"
"\n"
"# Versões antigas\n"
"h = sha.sha()\n"
"h = sha.new()\n"
"\n"
"# Nova versão\n"
"h = hashlib.sha1()\n"
"\n"
"# *Hashes* que não estavam anteriormente disponíveis\n"
"h = hashlib.sha224()\n"
"h = hashlib.sha256()\n"
"h = hashlib.sha384()\n"
"h = hashlib.sha512()\n"
"\n"
"# Forma alternativa\n"
"h = hashlib.new('md5')          # Fornecer algoritmo como uma *string*"

#: ../../whatsnew/2.5.rst:1914
msgid ""
"Once a hash object has been created, its methods are the same as before: "
"``update(string)`` hashes the specified string into the  current digest "
"state, :meth:`digest` and :meth:`hexdigest` return the digest value as a "
"binary string or a string of hex digits, and :meth:`copy` returns a new "
"hashing object with the same digest state."
msgstr ""
"Uma vez criado um objeto de *hash*, os seus métodos são os mesmos de antes: "
"``update(string)`` faz o *hash* da *string* especificada no estado atual do "
"resumo, :meth:`digest` e :meth:`hexdigest` devolvem o valor do resumo como "
"uma *string* binária ou uma *string* de dígitos hexadecimais, e :meth:`copy` "
"devolve um novo objeto de *hash* com o mesmo estado de resumo."

#: ../../whatsnew/2.5.rst:1923
msgid "The documentation  for the :mod:`hashlib` module."
msgstr "A documentação para o módulo :mod:`hashlib`."

#: ../../whatsnew/2.5.rst:1931
msgid "The sqlite3 package"
msgstr "O pacote sqlite3"

#: ../../whatsnew/2.5.rst:1933
msgid ""
"The pysqlite module (https://www.pysqlite.org), a wrapper for the SQLite "
"embedded database, has been added to the standard library under the package "
"name :mod:`sqlite3`."
msgstr ""
"O módulo pysqlite (https://www.pysqlite.org), um *wrapper* para a base de "
"dados embutida SQLite, foi adicionado à biblioteca padrão com o nome de "
"pacote :mod:`sqlite3`."

#: ../../whatsnew/2.5.rst:1937
msgid ""
"SQLite is a C library that provides a lightweight disk-based database that "
"doesn't require a separate server process and allows accessing the database "
"using a nonstandard variant of the SQL query language. Some applications can "
"use SQLite for internal data storage.  It's also possible to prototype an "
"application using SQLite and then port the code to a larger database such as "
"PostgreSQL or Oracle."
msgstr ""
"SQLite é uma biblioteca C que fornece uma base de dados baseada em disco "
"leve que não requer um processo de servidor separado e permite aceder à base "
"de dados usando uma variante não padrão da linguagem de consulta SQL. "
"Algumas aplicações podem usar SQLite para armazenamento interno de dados. "
"Também é possível prototipar uma aplicação usando SQLite e depois portar o "
"código para uma base de dados maior, como PostgreSQL ou Oracle."

#: ../../whatsnew/2.5.rst:1944
msgid ""
"pysqlite was written by Gerhard Häring and provides a SQL interface "
"compliant with the DB-API 2.0 specification described by :pep:`249`."
msgstr ""
"O pysqlite foi escrito por Gerhard Häring e fornece uma interface SQL "
"compatível com a especificação DB-API 2.0 descrita na :pep:`249`."

#: ../../whatsnew/2.5.rst:1947
msgid ""
"If you're compiling the Python source yourself, note that the source tree "
"doesn't include the SQLite code, only the wrapper module. You'll need to "
"have the SQLite libraries and headers installed before compiling Python, and "
"the build process will compile the module when the necessary headers are "
"available."
msgstr ""
"Se estiver a compilar o código-fonte do Python, note que a árvore de origem "
"não inclui o código SQLite, apenas o módulo *wrapper*. Precisará de ter as "
"bibliotecas e cabeçalhos do SQLite instalados antes de compilar o Python, e "
"o processo de compilação compilará o módulo quando os cabeçalhos necessários "
"estiverem disponíveis."

#: ../../whatsnew/2.5.rst:1952
msgid ""
"To use the module, you must first create a :class:`Connection` object that "
"represents the database.  Here the data will be stored in the :file:`/tmp/"
"example` file::"
msgstr ""
"Para usar o módulo, deve primeiro criar um objeto :class:`Connection` que "
"representa a base de dados. Aqui, os dados serão armazenados no ficheiro :"
"file:`/tmp/example`::"

#: ../../whatsnew/2.5.rst:1956
msgid "conn = sqlite3.connect('/tmp/example')"
msgstr "conn = sqlite3.connect('/tmp/example')"

#: ../../whatsnew/2.5.rst:1958
msgid ""
"You can also supply the special name ``:memory:`` to create a database in "
"RAM."
msgstr ""
"Também pode fornecer o nome especial ``:memory:`` para criar uma base de "
"dados em RAM."

#: ../../whatsnew/2.5.rst:1960
msgid ""
"Once you have a :class:`Connection`, you can create a :class:`Cursor`  "
"object and call its :meth:`execute` method to perform SQL commands::"
msgstr ""
"Uma vez que tenha uma :class:`Connection`, pode criar um objeto :class:"
"`Cursor` e chamar o seu método :meth:`execute` para executar comandos SQL::"

#: ../../whatsnew/2.5.rst:1963
msgid ""
"c = conn.cursor()\n"
"\n"
"# Create table\n"
"c.execute('''create table stocks\n"
"(date text, trans text, symbol text,\n"
" qty real, price real)''')\n"
"\n"
"# Insert a row of data\n"
"c.execute(\"\"\"insert into stocks\n"
"          values ('2006-01-05','BUY','RHAT',100,35.14)\"\"\")"
msgstr ""
"c = conn.cursor()\n"
"\n"
"# Criar tabela\n"
"c.execute('''create table stocks\n"
"(date text, trans text, symbol text,\n"
" qty real, price real)''')\n"
"\n"
"# Inserir uma linha de dados\n"
"c.execute(\"\"\"insert into stocks\n"
"          values ('2006-01-05','COMPRA','RHAT',100,35.14)\"\"\")"

#: ../../whatsnew/2.5.rst:1974
msgid ""
"Usually your SQL operations will need to use values from Python variables.  "
"You shouldn't assemble your query using Python's string operations because "
"doing so is insecure; it makes your program vulnerable to an SQL injection "
"attack."
msgstr ""
"Normalmente, as suas operações SQL precisarão de usar valores de variáveis "
"Python. Não deve montar a sua consulta usando operações de *string* do "
"Python porque fazer isso é inseguro; torna o seu programa vulnerável a um "
"ataque de injeção SQL."

#: ../../whatsnew/2.5.rst:1978
msgid ""
"Instead, use the DB-API's parameter substitution.  Put ``?`` as a "
"placeholder wherever you want to use a value, and then provide a tuple of "
"values as the second argument to the cursor's :meth:`execute` method.  "
"(Other database modules may use a different placeholder, such as ``%s`` or "
"``:1``.) For example::"
msgstr ""
"Em vez disso, use a substituição de parâmetros da DB-API. Coloque ``?`` como "
"um espaço reservado onde quiser usar um valor, e depois forneça um tuplo de "
"valores como segundo argumento para o método :meth:`execute` do cursor. "
"(Outros módulos de base de dados podem usar um espaço reservado diferente, "
"como ``%s`` ou ``:1``.) Por exemplo::"

#: ../../whatsnew/2.5.rst:1983
msgid ""
"# Never do this -- insecure!\n"
"symbol = 'IBM'\n"
"c.execute(\"... where symbol = '%s'\" % symbol)\n"
"\n"
"# Do this instead\n"
"t = (symbol,)\n"
"c.execute('select * from stocks where symbol=?', t)\n"
"\n"
"# Larger example\n"
"for t in (('2006-03-28', 'BUY', 'IBM', 1000, 45.00),\n"
"          ('2006-04-05', 'BUY', 'MSOFT', 1000, 72.00),\n"
"          ('2006-04-06', 'SELL', 'IBM', 500, 53.00),\n"
"         ):\n"
"    c.execute('insert into stocks values (?,?,?,?,?)', t)"
msgstr ""
"# Nunca faça isto -- inseguro!\n"
"symbol = 'IBM'\n"
"c.execute(\"... where symbol = '%s'\" % symbol)\n"
"\n"
"# Faça isto em vez disso\n"
"t = (symbol,)\n"
"c.execute('select * from stocks where symbol=?', t)\n"
"\n"
"# Exemplo maior\n"
"for t in (('2006-03-28', 'COMPRA', 'IBM', 1000, 45.00),\n"
"          ('2006-04-05', 'COMPRA', 'MSOFT', 1000, 72.00),\n"
"          ('2006-04-06', 'VENDA', 'IBM', 500, 53.00),\n"
"         ):\n"
"    c.execute('insert into stocks values (?,?,?,?,?)', t)"

#: ../../whatsnew/2.5.rst:1998
msgid ""
"To retrieve data after executing a SELECT statement, you can either  treat "
"the cursor as an iterator, call the cursor's :meth:`fetchone` method to "
"retrieve a single matching row,  or call :meth:`fetchall` to get a list of "
"the matching rows."
msgstr ""
"Para recuperar dados após executar uma instrução SELECT, pode tratar o "
"cursor como um iterador, chamar o método :meth:`fetchone` do cursor para "
"recuperar uma linha correspondente única, ou chamar :meth:`fetchall` para "
"obter uma lista das linhas correspondentes."

#: ../../whatsnew/2.5.rst:2003
msgid "This example uses the iterator form::"
msgstr "Este exemplo usa a forma de iterador::"

#: ../../whatsnew/2.5.rst:2005
msgid ""
">>> c = conn.cursor()\n"
">>> c.execute('select * from stocks order by price')\n"
">>> for row in c:\n"
"...    print row\n"
"...\n"
"(u'2006-01-05', u'BUY', u'RHAT', 100, 35.140000000000001)\n"
"(u'2006-03-28', u'BUY', u'IBM', 1000, 45.0)\n"
"(u'2006-04-06', u'SELL', u'IBM', 500, 53.0)\n"
"(u'2006-04-05', u'BUY', u'MSOFT', 1000, 72.0)\n"
">>>"
msgstr ""
">>> c = conn.cursor()\n"
">>> c.execute('select * from stocks order by price')\n"
">>> for row in c:\n"
"...    print row\n"
"...\n"
"(u'2006-01-05', u'COMPRA', u'RHAT', 100, 35.140000000000001)\n"
"(u'2006-03-28', u'COMPRA', u'IBM', 1000, 45.0)\n"
"(u'2006-04-06', u'VENDA', u'IBM', 500, 53.0)\n"
"(u'2006-04-05', u'COMPRA', u'MSOFT', 1000, 72.0)\n"
">>>"

#: ../../whatsnew/2.5.rst:2016
msgid ""
"For more information about the SQL dialect supported by SQLite, see https://"
"www.sqlite.org."
msgstr ""
"Para mais informações sobre o dialeto SQL suportado pelo SQLite, consulte "
"https://www.sqlite.org."

#: ../../whatsnew/2.5.rst:2022
msgid "https://www.pysqlite.org"
msgstr "https://www.pysqlite.org"

#: ../../whatsnew/2.5.rst:2023
msgid "The pysqlite web page."
msgstr "A página web do pysqlite."

#: ../../whatsnew/2.5.rst:2025
msgid "https://www.sqlite.org"
msgstr "https://www.sqlite.org"

#: ../../whatsnew/2.5.rst:2026
msgid ""
"The SQLite web page; the documentation describes the syntax and the "
"available data types for the supported SQL dialect."
msgstr ""
"A página web do SQLite; a documentação descreve a sintaxe e os tipos de "
"dados disponíveis para o dialeto SQL suportado."

#: ../../whatsnew/2.5.rst:2029
msgid "The documentation  for the :mod:`sqlite3` module."
msgstr "A documentação para o módulo :mod:`sqlite3`."

#: ../../whatsnew/2.5.rst:2031
msgid ":pep:`249` - Database API Specification 2.0"
msgstr ":pep:`249` - Especificação da API de Base de Dados 2.0"

#: ../../whatsnew/2.5.rst:2032
msgid "PEP written by Marc-André Lemburg."
msgstr "PEP escrita por Marc-André Lemburg."

#: ../../whatsnew/2.5.rst:2040
msgid "The wsgiref package"
msgstr "O pacote wsgiref"

#: ../../whatsnew/2.5.rst:2042
msgid ""
"The Web Server Gateway Interface (WSGI) v1.0 defines a standard interface "
"between web servers and Python web applications and is described in :pep:"
"`333`. The :mod:`wsgiref` package is a reference implementation of the WSGI "
"specification."
msgstr ""
"A Interface de Gateway de Servidor Web (WSGI) v1.0 define uma interface "
"padrão entre servidores web e aplicações web Python e está descrita na :pep:"
"`333`. O pacote :mod:`wsgiref` é uma implementação de referência da "
"especificação WSGI."

#: ../../whatsnew/2.5.rst:2049
msgid ""
"The package includes a basic HTTP server that will run a WSGI application; "
"this server is useful for debugging but isn't intended for  production use.  "
"Setting up a server takes only a few lines of code::"
msgstr ""
"O pacote inclui um servidor HTTP básico que executará uma aplicação WSGI; "
"este servidor é útil para depuração, mas não é destinado a uso em produção. "
"Configurar um servidor requer apenas algumas linhas de código::"

#: ../../whatsnew/2.5.rst:2053
msgid ""
"from wsgiref import simple_server\n"
"\n"
"wsgi_app = ...\n"
"\n"
"host = ''\n"
"port = 8000\n"
"httpd = simple_server.make_server(host, port, wsgi_app)\n"
"httpd.serve_forever()"
msgstr ""
"from wsgiref import simple_server\n"
"\n"
"wsgi_app = ...\n"
"\n"
"host = ''\n"
"port = 8000\n"
"httpd = simple_server.make_server(host, port, wsgi_app)\n"
"httpd.serve_forever()"

#: ../../whatsnew/2.5.rst:2068
msgid ""
"https://web.archive.org/web/20160331090247/http://wsgi.readthedocs.org/en/"
"latest/"
msgstr ""
"https://web.archive.org/web/20160331090247/http://wsgi.readthedocs.org/en/"
"latest/"

#: ../../whatsnew/2.5.rst:2069
msgid "A central web site for WSGI-related resources."
msgstr "Um site web central para recursos relacionados com WSGI."

#: ../../whatsnew/2.5.rst:2071
msgid ":pep:`333` - Python Web Server Gateway Interface v1.0"
msgstr ":pep:`333` - Interface de Gateway de Servidor Web Python v1.0"

#: ../../whatsnew/2.5.rst:2072
msgid "PEP written by Phillip J. Eby."
msgstr "PEP escrita por Phillip J. Eby."

#: ../../whatsnew/2.5.rst:2080
msgid "Build and C API Changes"
msgstr "Alterações na Compilação e na API C"

#: ../../whatsnew/2.5.rst:2082
msgid "Changes to Python's build process and to the C API include:"
msgstr "As alterações no processo de compilação do Python e na API C incluem:"

#: ../../whatsnew/2.5.rst:2084
msgid ""
"The Python source tree was converted from CVS to Subversion,  in a complex "
"migration procedure that was supervised and flawlessly carried out by Martin "
"von Löwis.  The procedure was developed as :pep:`347`."
msgstr ""
"A árvore de origem do Python foi convertida de CVS para Subversion, num "
"procedimento complexo de migração que foi supervisionado e executado sem "
"falhas por Martin von Löwis. O procedimento foi desenvolvido como :pep:`347`."

#: ../../whatsnew/2.5.rst:2088
msgid ""
"Coverity, a company that markets a source code analysis tool called Prevent, "
"provided the results of their examination of the Python source code.  The "
"analysis found about 60 bugs that  were quickly fixed.  Many of the bugs "
"were refcounting problems, often occurring in error-handling code.  See "
"https://scan.coverity.com for the statistics."
msgstr ""
"A Coverity, uma empresa que comercializa uma ferramenta de análise de código-"
"fonte chamada Prevent, forneceu os resultados da sua análise do código-fonte "
"do Python. A análise encontrou cerca de 60 *bugs* que foram rapidamente "
"corrigidos. Muitos dos *bugs* eram problemas de contagem de referências, "
"frequentemente ocorrendo em código de tratamento de erros. Veja https://scan."
"coverity.com para as estatísticas."

#: ../../whatsnew/2.5.rst:2094
msgid ""
"The largest change to the C API came from :pep:`353`, which modifies the "
"interpreter to use a :c:type:`Py_ssize_t` type definition instead of :c:expr:"
"`int`.  See the earlier section :ref:`pep-353` for a discussion of this "
"change."
msgstr ""
"A maior alteração à API C veio da :pep:`353`, que modifica o interpretador "
"para usar uma definição de tipo :c:type:`Py_ssize_t` em vez de :c:expr:"
"`int`. Veja a secção anterior :ref:`pep-353` para uma discussão sobre esta "
"alteração."

#: ../../whatsnew/2.5.rst:2099
msgid ""
"The design of the bytecode compiler has changed a great deal,  no longer "
"generating bytecode by traversing the parse tree.  Instead the parse tree is "
"converted to an abstract syntax tree (or AST), and it is  the abstract "
"syntax tree that's traversed to produce the bytecode."
msgstr ""
"O desenho do compilador de *bytecode* mudou muito, já não gerando *bytecode* "
"ao percorrer a árvore de análise. Em vez disso, a árvore de análise é "
"convertida numa árvore de sintaxe abstrata (ou AST), e é a árvore de sintaxe "
"abstrata que é percorrida para produzir o *bytecode*."

#: ../../whatsnew/2.5.rst:2104
msgid ""
"It's possible for Python code to obtain AST objects by using the :func:"
"`compile` built-in and specifying ``_ast.PyCF_ONLY_AST`` as the value of "
"the  *flags* parameter::"
msgstr ""
"É possível que o código Python obtenha objetos AST usando a função "
"integrada :func:`compile` e especificando ``_ast.PyCF_ONLY_AST`` como o "
"valor do parâmetro *flags*::"

#: ../../whatsnew/2.5.rst:2108
msgid ""
"from _ast import PyCF_ONLY_AST\n"
"ast = compile(\"\"\"a=0\n"
"for i in range(10):\n"
"    a += i\n"
"\"\"\", \"<string>\", 'exec', PyCF_ONLY_AST)\n"
"\n"
"assignment = ast.body[0]\n"
"for_loop = ast.body[1]"
msgstr ""
"from _ast import PyCF_ONLY_AST\n"
"ast = compile(\"\"\"a=0\n"
"for i in range(10):\n"
"    a += i\n"
"\"\"\", \"<string>\", 'exec', PyCF_ONLY_AST)\n"
"\n"
"assignment = ast.body[0]\n"
"for_loop = ast.body[1]"

#: ../../whatsnew/2.5.rst:2117
msgid ""
"No official documentation has been written for the AST code yet, but :pep:"
"`339` discusses the design.  To start learning about the code, read the "
"definition of the various AST nodes in :file:`Parser/Python.asdl`.  A Python "
"script reads this file and generates a set of C structure definitions in :"
"file:`Include/Python-ast.h`.  The :c:func:`PyParser_ASTFromString` and :c:"
"func:`!PyParser_ASTFromFile`, defined in :file:`Include/pythonrun.h`, take "
"Python source as input and return the root of an AST representing the "
"contents. This AST can then be turned into a code object by :c:func:`!"
"PyAST_Compile`.  For more information, read the source code, and then ask "
"questions on python-dev."
msgstr ""
"Ainda não foi escrita documentação oficial para o código AST, mas a :pep:"
"`339` discute o desenho. Para começar a aprender sobre o código, leia a "
"definição dos vários nós AST em :file:`Parser/Python.asdl`. Um *script* "
"Python lê este ficheiro e gera um conjunto de definições de estruturas C em :"
"file:`Include/Python-ast.h`. As funções :c:func:`PyParser_ASTFromString` e :"
"c:func:`!PyParser_ASTFromFile`, definidas em :file:`Include/pythonrun.h`, "
"recebem código-fonte Python como entrada e devolvem a raiz de uma AST que "
"representa o conteúdo. Esta AST pode então ser transformada num objeto de "
"código por :c:func:`!PyAST_Compile`. Para mais informações, leia o código-"
"fonte e depois faça perguntas em python-dev."

#: ../../whatsnew/2.5.rst:2127
msgid ""
"The AST code was developed under Jeremy Hylton's management, and implemented "
"by (in alphabetical order) Brett Cannon, Nick Coghlan, Grant Edwards, John "
"Ehresman, Kurt Kaiser, Neal Norwitz, Tim Peters, Armin Rigo, and Neil "
"Schemenauer, plus the participants in a number of AST sprints at conferences "
"such as PyCon."
msgstr ""
"O código AST foi desenvolvido sob a gestão de Jeremy Hylton e implementado "
"por (por ordem alfabética) Brett Cannon, Nick Coghlan, Grant Edwards, John "
"Ehresman, Kurt Kaiser, Neal Norwitz, Tim Peters, Armin Rigo e Neil "
"Schemenauer, além dos participantes em vários *sprints* de AST em "
"conferências como a PyCon."

#: ../../whatsnew/2.5.rst:2136
msgid ""
"Evan Jones's patch to obmalloc, first described in a talk at PyCon DC 2005, "
"was applied.  Python 2.4 allocated small objects in 256K-sized arenas, but "
"never freed arenas.  With this patch, Python will free arenas when they're "
"empty.  The net effect is that on some platforms, when you allocate many "
"objects, Python's memory usage may actually drop when you delete them and "
"the memory may be returned to the operating system.  (Implemented by Evan "
"Jones, and reworked by Tim Peters.)"
msgstr ""
"O *patch* de Evan Jones para o obmalloc, descrito pela primeira vez numa "
"palestra na PyCon DC 2005, foi aplicado. O Python 2.4 alocava objetos "
"pequenos em arenas de 256K, mas nunca libertava arenas. Com este *patch*, o "
"Python libertará arenas quando estiverem vazias. O efeito líquido é que, em "
"algumas plataformas, quando aloca muitos objetos, o uso de memória do Python "
"pode realmente diminuir quando os elimina e a memória pode ser devolvida ao "
"sistema operativo. (Implementado por Evan Jones e refeito por Tim Peters.)"

#: ../../whatsnew/2.5.rst:2144
msgid ""
"Note that this change means extension modules must be more careful when "
"allocating memory.  Python's API has many different functions for allocating "
"memory that are grouped into families.  For example, :c:func:"
"`PyMem_Malloc`, :c:func:`PyMem_Realloc`, and :c:func:`PyMem_Free` are one "
"family that allocates raw memory, while :c:func:`PyObject_Malloc`, :c:func:"
"`PyObject_Realloc`, and :c:func:`PyObject_Free` are another family that's "
"supposed to be used for creating Python objects."
msgstr ""
"Note que esta alteração significa que os módulos de extensão devem ser mais "
"cuidadosos ao alocar memória. A API do Python tem muitas funções diferentes "
"para alocar memória que são agrupadas em famílias. Por exemplo, :c:func:"
"`PyMem_Malloc`, :c:func:`PyMem_Realloc` e :c:func:`PyMem_Free` são uma "
"família que aloca memória bruta, enquanto :c:func:`PyObject_Malloc`, :c:func:"
"`PyObject_Realloc` e :c:func:`PyObject_Free` são outra família que deve ser "
"usada para criar objetos Python."

#: ../../whatsnew/2.5.rst:2152
msgid ""
"Previously these different families all reduced to the platform's :c:func:"
"`malloc` and :c:func:`free` functions.  This meant  it didn't matter if you "
"got things wrong and allocated memory with the ``PyMem`` function but freed "
"it with the ``PyObject`` function.  With 2.5's changes to obmalloc, these "
"families now do different things and mismatches will probably result in a "
"segfault.  You should carefully test your C extension modules with Python "
"2.5."
msgstr ""
"Anteriormente, estas diferentes famílias reduziam-se todas às funções :c:"
"func:`malloc` e :c:func:`free` da plataforma. Isto significava que não "
"importava se errava e alocava memória com a função ``PyMem``, mas a "
"libertava com a função ``PyObject``. Com as alterações do Python 2.5 ao "
"obmalloc, estas famílias agora fazem coisas diferentes e incompatibilidades "
"provavelmente resultarão num erro de segmentação. Deve testar cuidadosamente "
"os seus módulos de extensão C com o Python 2.5."

#: ../../whatsnew/2.5.rst:2159
msgid ""
"The built-in set types now have an official C API.  Call :c:func:`PySet_New` "
"and :c:func:`PyFrozenSet_New` to create a new set, :c:func:`PySet_Add` and :"
"c:func:`PySet_Discard` to add and remove elements, and :c:func:"
"`PySet_Contains` and :c:func:`PySet_Size` to examine the set's state. "
"(Contributed by Raymond Hettinger.)"
msgstr ""
"Os tipos de conjunto integrados agora têm uma API C oficial. Chame :c:func:"
"`PySet_New` e :c:func:`PyFrozenSet_New` para criar um novo conjunto, :c:func:"
"`PySet_Add` e :c:func:`PySet_Discard` para adicionar e remover elementos, e :"
"c:func:`PySet_Contains` e :c:func:`PySet_Size` para examinar o estado do "
"conjunto. (Contribuído por Raymond Hettinger.)"

#: ../../whatsnew/2.5.rst:2165
msgid ""
"C code can now obtain information about the exact revision of the Python "
"interpreter by calling the  :c:func:`Py_GetBuildInfo` function that returns "
"a string of build information like this: ``\"trunk:45355:45356M, Apr 13 "
"2006, 07:42:19\"``.   (Contributed by Barry Warsaw.)"
msgstr ""
"O código C pode agora obter informações sobre a revisão exata do "
"interpretador Python chamando a função :c:func:`Py_GetBuildInfo`, que "
"devolve uma *string* de informação de compilação como esta: "
"``\"trunk:45355:45356M, Apr 13 2006, 07:42:19\"``. (Contribuído por Barry "
"Warsaw.)"

#: ../../whatsnew/2.5.rst:2170
msgid ""
"Two new macros can be used to indicate C functions that are local to the "
"current file so that a faster calling convention can be used. "
"``Py_LOCAL(type)`` declares the function as returning a value of the "
"specified *type* and uses a fast-calling qualifier. "
"``Py_LOCAL_INLINE(type)`` does the same thing and also requests the function "
"be inlined.  If macro :c:macro:`!PY_LOCAL_AGGRESSIVE` is defined before :"
"file:`python.h` is included, a set of more aggressive optimizations are "
"enabled for the module; you should benchmark the results to find out if "
"these optimizations actually make the code faster.  (Contributed by Fredrik "
"Lundh at the NeedForSpeed sprint.)"
msgstr ""
"Dois novos macros podem ser usados para indicar funções C que são locais ao "
"ficheiro atual, de modo que uma convenção de chamada mais rápida possa ser "
"usada. ``Py_LOCAL(type)`` declara a função como devolvendo um valor do tipo "
"especificado e usa um qualificador de chamada rápida. "
"``Py_LOCAL_INLINE(type)`` faz a mesma coisa e também solicita que a função "
"seja embutida. Se o macro :c:macro:`!PY_LOCAL_AGGRESSIVE` for definido antes "
"de :file:`python.h` ser incluído, um conjunto de otimizações mais agressivas "
"é ativado para o módulo; deve medir o desempenho dos resultados para "
"descobrir se estas otimizações realmente tornam o código mais rápido. "
"(Contribuído por Fredrik Lundh no *sprint* NeedForSpeed.)"

#: ../../whatsnew/2.5.rst:2181
msgid ""
"``PyErr_NewException(name, base, dict)`` can now accept a tuple of base "
"classes as its *base* argument.  (Contributed by Georg Brandl.)"
msgstr ""
"``PyErr_NewException(name, base, dict)`` pode agora aceitar um tuplo de "
"classes base como argumento *base*. (Contribuído por Georg Brandl.)"

#: ../../whatsnew/2.5.rst:2184
msgid ""
"The :c:func:`!PyErr_Warn` function for issuing warnings is now deprecated in "
"favour of ``PyErr_WarnEx(category, message, stacklevel)`` which lets you "
"specify the number of stack frames separating this function and the caller.  "
"A *stacklevel* of 1 is the function calling :c:func:`PyErr_WarnEx`, 2 is the "
"function above that, and so forth.  (Added by Neal Norwitz.)"
msgstr ""
"A função :c:func:`!PyErr_Warn` para emitir avisos está agora obsoleta em "
"favor de ``PyErr_WarnEx(category, message, stacklevel)``, que permite "
"especificar o número de quadros de pilha que separa esta função e o "
"chamador. Um *stacklevel* de 1 é a função que chama :c:func:`PyErr_WarnEx`, "
"2 é a função acima dessa, e assim por diante. (Adicionado por Neal Norwitz.)"

#: ../../whatsnew/2.5.rst:2190
msgid ""
"The CPython interpreter is still written in C, but  the code can now be "
"compiled with a C++ compiler without errors.   (Implemented by Anthony "
"Baxter, Martin von Löwis, Skip Montanaro.)"
msgstr ""
"O interpretador CPython ainda é escrito em C, mas o código pode agora ser "
"compilado com um compilador C++ sem erros. (Implementado por Anthony Baxter, "
"Martin von Löwis, Skip Montanaro.)"

#: ../../whatsnew/2.5.rst:2194
msgid ""
"The :c:func:`!PyRange_New` function was removed.  It was never documented, "
"never used in the core code, and had dangerously lax error checking.  In the "
"unlikely case that your extensions were using it, you can replace it by "
"something like the following::"
msgstr ""
"A função :c:func:`!PyRange_New` foi removida. Nunca foi documentada, nunca "
"foi usada no código principal e tinha verificação de erros perigosamente "
"frouxa. No improvável caso de as suas extensões a estarem a usar, pode "
"substituí-la por algo como o seguinte::"

#: ../../whatsnew/2.5.rst:2199
msgid ""
"range = PyObject_CallFunction((PyObject*) &PyRange_Type, \"lll\",\n"
"                              start, stop, step);"
msgstr ""
"range = PyObject_CallFunction((PyObject*) &PyRange_Type, \"lll\",\n"
"                              start, stop, step);"

#: ../../whatsnew/2.5.rst:2208
msgid "Port-Specific Changes"
msgstr "Alterações Específicas da Plataforma"

#: ../../whatsnew/2.5.rst:2210
msgid ""
"MacOS X (10.3 and higher): dynamic loading of modules now uses the :c:func:"
"`dlopen` function instead of MacOS-specific functions."
msgstr ""
"MacOS X (10.3 e superior): o carregamento dinâmico de módulos usa agora a "
"função :c:func:`dlopen` em vez de funções específicas do MacOS."

#: ../../whatsnew/2.5.rst:2213
msgid ""
"MacOS X: an :option:`!--enable-universalsdk` switch was added to the :"
"program:`configure` script that compiles the interpreter as a universal "
"binary able to run on both PowerPC and Intel processors. (Contributed by "
"Ronald Oussoren; :issue:`2573`.)"
msgstr ""
"MacOS X: uma opção :option:`!--enable-universalsdk` foi adicionada ao "
"*script* :program:`configure` que compila o interpretador como um binário "
"universal capaz de executar em processadores PowerPC e Intel. (Contribuído "
"por Ronald Oussoren; :issue:`2573`.)"

#: ../../whatsnew/2.5.rst:2218
msgid ""
"Windows: :file:`.dll` is no longer supported as a filename extension for "
"extension modules.  :file:`.pyd` is now the only filename extension that "
"will be searched for."
msgstr ""
"Windows: :file:`.dll` já não é suportado como extensão de nome de ficheiro "
"para módulos de extensão. :file:`.pyd` é agora a única extensão de nome de "
"ficheiro que será procurada."

#: ../../whatsnew/2.5.rst:2228
msgid "Porting to Python 2.5"
msgstr "Portar para o Python 2.5"

#: ../../whatsnew/2.5.rst:2230
msgid ""
"This section lists previously described changes that may require changes to "
"your code:"
msgstr ""
"Esta secção lista alterações previamente descritas que podem exigir "
"alterações ao seu código:"

#: ../../whatsnew/2.5.rst:2233
msgid ""
"ASCII is now the default encoding for modules.  It's now  a syntax error if "
"a module contains string literals with 8-bit characters but doesn't have an "
"encoding declaration.  In Python 2.4 this triggered a warning, not a syntax "
"error."
msgstr ""
"ASCII é agora a codificação predefinida para módulos. É agora um erro de "
"sintaxe se um módulo contiver literais de *string* com caracteres de 8 bits, "
"mas não tiver uma declaração de codificação. No Python 2.4, isto gerava um "
"aviso, não um erro de sintaxe."

#: ../../whatsnew/2.5.rst:2238
msgid ""
"Previously, the :attr:`gi_frame` attribute of a generator was always a frame "
"object.  Because of the :pep:`342` changes described in section :ref:"
"`pep-342`, it's now possible for :attr:`gi_frame` to be ``None``."
msgstr ""
"Anteriormente, o atributo :attr:`gi_frame` de um gerador era sempre um "
"objeto de quadro. Devido às alterações da :pep:`342` descritas na secção :"
"ref:`pep-342`, é agora possível que :attr:`gi_frame` seja ``None``."

#: ../../whatsnew/2.5.rst:2242
msgid ""
"A new warning, :class:`UnicodeWarning`, is triggered when  you attempt to "
"compare a Unicode string and an 8-bit string that can't be converted to "
"Unicode using the default ASCII encoding.  Previously such comparisons would "
"raise a :class:`UnicodeDecodeError` exception."
msgstr ""
"Um novo aviso, :class:`UnicodeWarning`, é gerado quando tenta comparar uma "
"*string* Unicode e uma *string* de 8 bits que não pode ser convertida para "
"Unicode usando a codificação ASCII predefinida. Anteriormente, tais "
"comparações geravam uma exceção :class:`UnicodeDecodeError`."

#: ../../whatsnew/2.5.rst:2247
msgid ""
"Library: the :mod:`csv` module is now stricter about multi-line quoted "
"fields. If your files contain newlines embedded within fields, the input "
"should be split into lines in a manner which preserves the newline "
"characters."
msgstr ""
"Biblioteca: o módulo :mod:`csv` é agora mais rigoroso em relação a campos "
"citados de várias linhas. Se os seus ficheiros contiverem novas linhas "
"incorporadas dentro de campos, a entrada deve ser dividida em linhas de uma "
"forma que preserve os caracteres de nova linha."

#: ../../whatsnew/2.5.rst:2251
msgid ""
"Library: the :mod:`locale` module's  :func:`format` function's would "
"previously  accept any string as long as no more than one %char specifier "
"appeared.  In Python 2.5, the argument must be exactly one %char specifier "
"with no surrounding text."
msgstr ""
"Biblioteca: a função :func:`format` do módulo :mod:`locale` aceitava "
"anteriormente qualquer *string* desde que não aparecesse mais do que um "
"especificador %char. No Python 2.5, o argumento deve ser exatamente um "
"especificador %char sem texto circundante."

#: ../../whatsnew/2.5.rst:2256
msgid ""
"Library: The :mod:`pickle` and :mod:`!cPickle` modules no longer accept a "
"return value of ``None`` from the :meth:`~object.__reduce__` method; the "
"method must return a tuple of arguments instead.  The modules also no longer "
"accept the deprecated *bin* keyword parameter."
msgstr ""
"Biblioteca: Os módulos :mod:`pickle` e :mod:`!cPickle` já não aceitam um "
"valor de retorno ``None`` do método :meth:`~object.__reduce__`; o método "
"deve devolver um tuplo de argumentos em vez disso. Os módulos também já não "
"aceitam o parâmetro nomeado *bin* obsoleto."

#: ../../whatsnew/2.5.rst:2261
msgid ""
"Library: The :mod:`SimpleXMLRPCServer <xmlrpc.server>` and :mod:"
"`DocXMLRPCServer <xmlrpc.server>`  classes now have a :attr:`rpc_paths` "
"attribute that constrains XML-RPC operations to a limited set of URL paths; "
"the default is to allow only ``'/'`` and ``'/RPC2'``. Setting  :attr:"
"`rpc_paths` to ``None`` or an empty tuple disables  this path checking."
msgstr ""
"Biblioteca: As classes :mod:`SimpleXMLRPCServer <xmlrpc.server>` e :mod:"
"`DocXMLRPCServer <xmlrpc.server>` têm agora um atributo :attr:`rpc_paths` "
"que restringe as operações XML-RPC a um conjunto limitado de caminhos de "
"URL; o predefinido é permitir apenas ``'/'`` e ``'/RPC2'``. Definir :attr:"
"`rpc_paths` para ``None`` ou um tuplo vazio desativa esta verificação de "
"caminho."

#: ../../whatsnew/2.5.rst:2267
msgid ""
"C API: Many functions now use :c:type:`Py_ssize_t`  instead of :c:expr:`int` "
"to allow processing more data on 64-bit machines.  Extension code may need "
"to make the same change to avoid warnings and to support 64-bit machines.  "
"See the earlier section :ref:`pep-353` for a discussion of this change."
msgstr ""
"API C: Muitas funções usam agora :c:type:`Py_ssize_t` em vez de :c:expr:"
"`int` para permitir processar mais dados em máquinas de 64 bits. O código de "
"extensão pode precisar de fazer a mesma alteração para evitar avisos e para "
"suportar máquinas de 64 bits. Veja a secção anterior :ref:`pep-353` para uma "
"discussão sobre esta alteração."

#: ../../whatsnew/2.5.rst:2272
msgid ""
"C API:  The obmalloc changes mean that  you must be careful to not mix usage "
"of the ``PyMem_*`` and ``PyObject_*`` families of functions. Memory "
"allocated with  one family's ``*_Malloc`` must be  freed with the "
"corresponding family's ``*_Free`` function."
msgstr ""
"API C: As alterações ao obmalloc significam que deve ter cuidado para não "
"misturar o uso das famílias de funções ``PyMem_*`` e ``PyObject_*``. A "
"memória alocada com ``*_Malloc`` de uma família deve ser libertada com a "
"função ``*_Free`` da família correspondente."

#: ../../whatsnew/2.5.rst:2281
msgid "Acknowledgements"
msgstr "Agradecimentos"

#: ../../whatsnew/2.5.rst:2283
msgid ""
"The author would like to thank the following people for offering "
"suggestions, corrections and assistance with various drafts of this article: "
"Georg Brandl, Nick Coghlan, Phillip J. Eby, Lars Gustäbel, Raymond "
"Hettinger, Ralf W. Grosse-Kunstleve, Kent Johnson, Iain Lowe, Martin von "
"Löwis, Fredrik Lundh, Andrew McNamara, Skip Montanaro, Gustavo Niemeyer, "
"Paul Prescod, James Pryor, Mike Rovner, Scott Weikart, Barry Warsaw, Thomas "
"Wouters."
msgstr ""
"O autor gostaria de agradecer às seguintes pessoas por oferecerem sugestões, "
"correções e assistência com vários rascunhos deste artigo: Georg Brandl, "
"Nick Coghlan, Phillip J. Eby, Lars Gustäbel, Raymond Hettinger, Ralf W. "
"Grosse-Kunstleve, Kent Johnson, Iain Lowe, Martin von Löwis, Fredrik Lundh, "
"Andrew McNamara, Skip Montanaro, Gustavo Niemeyer, Paul Prescod, James "
"Pryor, Mike Rovner, Scott Weikart, Barry Warsaw, Thomas Wouters."

#: ../../whatsnew/2.5.rst:1342
msgid "universal newlines"
msgstr "novas linhas universais"

#: ../../whatsnew/2.5.rst:1342
msgid "What's new"
msgstr "Novidades"
