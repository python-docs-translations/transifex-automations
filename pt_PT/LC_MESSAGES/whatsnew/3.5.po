# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# python-doc bot, 2025
# André Moreira <afrmscb@gmail.com>, 2025
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.13\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-10-31 15:04+0000\n"
"PO-Revision-Date: 2025-09-15 01:05+0000\n"
"Last-Translator: André Moreira <afrmscb@gmail.com>, 2025\n"
"Language-Team: Portuguese (Portugal) (https://app.transifex.com/python-doc/"
"teams/5390/pt_PT/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: pt_PT\n"
"Plural-Forms: nplurals=3; plural=(n == 0 || n == 1) ? 0 : n != 0 && n % "
"1000000 == 0 ? 1 : 2;\n"

#: ../../whatsnew/3.5.rst:3
msgid "What's New In Python 3.5"
msgstr "Novidades no Python 3.5"

#: ../../whatsnew/3.5.rst:0
msgid "Editors"
msgstr "Editores"

#: ../../whatsnew/3.5.rst:5
msgid "Elvis Pranskevichus <elvis@magic.io>, Yury Selivanov <yury@magic.io>"
msgstr "Elvis Pranskevichus <elvis@magic.io>, Yury Selivanov <yury@magic.io>"

#: ../../whatsnew/3.5.rst:47
msgid ""
"This article explains the new features in Python 3.5, compared to 3.4. "
"Python 3.5 was released on September 13, 2015.  See the `changelog <https://"
"docs.python.org/3.5/whatsnew/changelog.html>`_ for a full list of changes."
msgstr ""

#: ../../whatsnew/3.5.rst:54
msgid ":pep:`478` - Python 3.5 Release Schedule"
msgstr ":pep:`478` — Cronograma de Lançamento do Python 3.5"

#: ../../whatsnew/3.5.rst:58
msgid "Summary -- Release highlights"
msgstr "Resumo — Destaques da versão"

#: ../../whatsnew/3.5.rst:60
msgid "New syntax features:"
msgstr "Novas funcionalidades de sintaxe:"

#: ../../whatsnew/3.5.rst:62
msgid ""
":ref:`PEP 492 <whatsnew-pep-492>`, coroutines with async and await syntax."
msgstr ""
":ref:`PEP 492 <whatsnew-pep-492>`, *coroutines* com sintaxe *async* e "
"*await*."

#: ../../whatsnew/3.5.rst:63
msgid ""
":ref:`PEP 465 <whatsnew-pep-465>`, a new matrix multiplication operator: ``a "
"@ b``."
msgstr ""
":ref:`PEP 465 <whatsnew-pep-465>`, um novo operador de multiplicação de "
"matrizes: ``a @ b``."

#: ../../whatsnew/3.5.rst:64
msgid ""
":ref:`PEP 448 <whatsnew-pep-448>`, additional unpacking generalizations."
msgstr ""
":ref:`PEP 448 <whatsnew-pep-448>`, generalizações adicionais de *unpacking*."

#: ../../whatsnew/3.5.rst:67
msgid "New library modules:"
msgstr "Novos módulos de biblioteca:"

#: ../../whatsnew/3.5.rst:69
msgid ":mod:`typing`: :ref:`PEP 484 -- Type Hints <whatsnew-pep-484>`."
msgstr ":mod:`typing`: :ref:`PEP 484 — Dicas de Tipo <whatsnew-pep-484>`."

#: ../../whatsnew/3.5.rst:70
msgid ""
":mod:`zipapp`: :ref:`PEP 441 Improving Python ZIP Application Support "
"<whatsnew-zipapp>`."
msgstr ""
":mod:`zipapp`: :ref:`PEP 441 — Melhorar o Suporte para Aplicações ZIP em "
"Python <whatsnew-zipapp>`."

#: ../../whatsnew/3.5.rst:74
msgid "New built-in features:"
msgstr "Novas funcionalidades integradas:"

#: ../../whatsnew/3.5.rst:76
msgid ""
"``bytes % args``, ``bytearray % args``: :ref:`PEP 461 <whatsnew-pep-461>` -- "
"Adding ``%`` formatting to bytes and bytearray."
msgstr ""
"``bytes % args``, ``bytearray % args``: :ref:`PEP 461 <whatsnew-pep-461>` — "
"Adicionar formatação ``%`` a *bytes* e *bytearray*."

#: ../../whatsnew/3.5.rst:79
msgid ""
"New :meth:`bytes.hex`, :meth:`bytearray.hex` and :meth:`memoryview.hex` "
"methods. (Contributed by Arnon Yaari in :issue:`9951`.)"
msgstr ""
"Novos métodos :meth:`bytes.hex`, :meth:`bytearray.hex` e :meth:`memoryview."
"hex`. (Contribuído por Arnon Yaari em :issue:`9951`.)"

#: ../../whatsnew/3.5.rst:82
msgid ""
":class:`memoryview` now supports tuple indexing (including multi-"
"dimensional). (Contributed by Antoine Pitrou in :issue:`23632`.)"
msgstr ""
"A classe :class:`memoryview` agora suporta indexação por tuplo (incluindo "
"multi-dimensional). (Contribuído por Antoine Pitrou em :issue:`23632`.)"

#: ../../whatsnew/3.5.rst:85
msgid ""
"Generators have a new ``gi_yieldfrom`` attribute, which returns the object "
"being iterated by ``yield from`` expressions. (Contributed by Benno Leslie "
"and Yury Selivanov in :issue:`24450`.)"
msgstr ""
"Os geradores têm um novo atributo ``gi_yieldfrom``, que devolve o objeto que "
"está a ser iterado pelas expressões ``yield from``. (Contribuído por Benno "
"Leslie e Yury Selivanov em :issue:`24450`.)"

#: ../../whatsnew/3.5.rst:89
msgid ""
"A new :exc:`RecursionError` exception is now raised when maximum recursion "
"depth is reached.  (Contributed by Georg Brandl in :issue:`19235`.)"
msgstr ""
"Uma nova exceção :exc:`RecursionError` é agora lançada quando é atingida a "
"profundidade máxima de recursão. (Contribuído por Georg Brandl em :issue:"
"`19235`.)"

#: ../../whatsnew/3.5.rst:94
msgid "CPython implementation improvements:"
msgstr "Melhorias na implementação do CPython:"

#: ../../whatsnew/3.5.rst:96
msgid ""
"When the ``LC_TYPE`` locale is the POSIX locale (``C`` locale), :py:data:"
"`sys.stdin` and :py:data:`sys.stdout` now use the ``surrogateescape`` error "
"handler, instead of the ``strict`` error handler. (Contributed by Victor "
"Stinner in :issue:`19977`.)"
msgstr ""
"Quando a *locale* ``LC_TYPE`` é a *locale* POSIX (``C``), :py:data:`sys."
"stdin` e :py:data:`sys.stdout` agora usam o gestor de erros "
"``surrogateescape``, em vez do gestor de erros ``strict``. (Contribuído por "
"Victor Stinner em :issue:`19977`.)"

#: ../../whatsnew/3.5.rst:101
msgid ""
"``.pyo`` files are no longer used and have been replaced by a more flexible "
"scheme that includes the optimization level explicitly in ``.pyc`` name. "
"(See :ref:`PEP 488 overview <whatsnew-pep-488>`.)"
msgstr ""
"Os ficheiros ``.pyo`` já não são usados e foram substituídos por um esquema "
"mais flexível que inclui o nível de otimização explicitamente no nome ``."
"pyc``. (Consulte :ref:`visão geral da PEP 488 <whatsnew-pep-488>`.)"

#: ../../whatsnew/3.5.rst:105
msgid ""
"Builtin and extension modules are now initialized in a multi-phase process, "
"which is similar to how Python modules are loaded. (See :ref:`PEP 489 "
"overview <whatsnew-pep-489>`.)"
msgstr ""
"Os módulos integrados e de extensão são agora inicializados num processo de "
"múltiplas fases, que é semelhante à forma como os módulos Python são "
"carregados. (Consulte :ref:`visão geral da PEP 489 <whatsnew-pep-489>`.)"

#: ../../whatsnew/3.5.rst:110
msgid "Significant improvements in the standard library:"
msgstr "Melhorias significativas na biblioteca padrão:"

#: ../../whatsnew/3.5.rst:112
msgid ""
":class:`collections.OrderedDict` is now :ref:`implemented in C <whatsnew-"
"ordereddict>`, which makes it 4 to 100 times faster."
msgstr ""
"A classe :class:`collections.OrderedDict` é agora :ref:`implementada em C "
"<whatsnew-ordereddict>`, o que a torna 4 a 100 vezes mais rápida."

#: ../../whatsnew/3.5.rst:116
msgid ""
"The :mod:`ssl` module gained :ref:`support for Memory BIO <whatsnew-"
"sslmemorybio>`, which decouples SSL protocol handling from network IO."
msgstr ""
"O módulo :mod:`ssl` ganhou :ref:`suporte para Memory BIO <whatsnew-"
"sslmemorybio>`, que desvincula o tratamento do protocolo SSL da E/S de rede."

#: ../../whatsnew/3.5.rst:120
msgid ""
"The new :func:`os.scandir` function provides a :ref:`better and "
"significantly faster way <whatsnew-pep-471>` of directory traversal."
msgstr ""
"A nova função :func:`os.scandir` fornece uma :ref:`forma melhor e "
"significativamente mais rápida <whatsnew-pep-471>` de percorrer diretórios."

#: ../../whatsnew/3.5.rst:124
msgid ""
":func:`functools.lru_cache` has been mostly :ref:`reimplemented in C "
"<whatsnew-lrucache>`, yielding much better performance."
msgstr ""
"A função :func:`functools.lru_cache` foi maioritariamente :ref:"
"`reimplementada em C <whatsnew-lrucache>`, resultando num desempenho muito "
"melhor."

#: ../../whatsnew/3.5.rst:128
msgid ""
"The new :func:`subprocess.run` function provides a :ref:`streamlined way to "
"run subprocesses <whatsnew-subprocess>`."
msgstr ""
"A nova função :func:`subprocess.run` fornece uma :ref:`forma simplificada "
"para executar subprocessos <whatsnew-subprocess>`."

#: ../../whatsnew/3.5.rst:131
msgid ""
"The :mod:`traceback` module has been significantly :ref:`enhanced <whatsnew-"
"traceback>` for improved performance and developer convenience."
msgstr ""
"O módulo :mod:`traceback` foi significativamente :ref:`melhorado <whatsnew-"
"traceback>` para melhorar o desempenho e a conveniência do programador."

#: ../../whatsnew/3.5.rst:136
msgid "Security improvements:"
msgstr "Melhorias de segurança:"

#: ../../whatsnew/3.5.rst:138
msgid ""
"SSLv3 is now disabled throughout the standard library. It can still be "
"enabled by instantiating a :class:`ssl.SSLContext` manually.  (See :issue:"
"`22638` for more details; this change was backported to CPython 3.4 and 2.7.)"
msgstr ""
"O SSLv3 está agora desativado em toda a biblioteca padrão. Ainda pode ser "
"ativado instanciando manualmente um :class:`ssl.SSLContext`. (Consulte :"
"issue:`22638` para mais detalhes; esta alteração foi retroportada para o "
"CPython 3.4 e 2.7.)"

#: ../../whatsnew/3.5.rst:143
msgid ""
"HTTP cookie parsing is now stricter, in order to protect against potential "
"injection attacks. (Contributed by Antoine Pitrou in :issue:`22796`.)"
msgstr ""
"A análise de *cookies* HTTP é agora mais rigorosa, para proteger contra "
"potenciais ataques de injeção. (Contribuído por Antoine Pitrou em :issue:"
"`22796`.)"

#: ../../whatsnew/3.5.rst:148
msgid "Windows improvements:"
msgstr "Melhorias no Windows:"

#: ../../whatsnew/3.5.rst:150
msgid ""
"A new installer for Windows has replaced the old MSI. See :ref:`using-on-"
"windows` for more information."
msgstr ""
"Um novo instalador para Windows substituiu o antigo MSI. Consulte :ref:"
"`using-on-windows` para mais informações."

#: ../../whatsnew/3.5.rst:153
msgid ""
"Windows builds now use Microsoft Visual C++ 14.0, and extension modules "
"should use the same."
msgstr ""
"As construções para Windows agora usam o Microsoft Visual C++ 14.0, e os "
"módulos de extensão devem usar o mesmo."

#: ../../whatsnew/3.5.rst:157
msgid ""
"Please read on for a comprehensive list of user-facing changes, including "
"many other smaller improvements, CPython optimizations, deprecations, and "
"potential porting issues."
msgstr ""
"Por favor, continue a ler para uma lista abrangente de alterações visíveis "
"para o utilizador, incluindo muitas outras melhorias menores, otimizações do "
"CPython, descontinuações e potenciais problemas de portabilidade."

#: ../../whatsnew/3.5.rst:163
msgid "New Features"
msgstr "Novas Funcionalidades"

#: ../../whatsnew/3.5.rst:168
msgid "PEP 492 - Coroutines with async and await syntax"
msgstr "PEP 492 — *Coroutines* com sintaxe *async* e *await*"

#: ../../whatsnew/3.5.rst:170
msgid ""
":pep:`492` greatly improves support for asynchronous programming in Python "
"by adding :term:`awaitable objects <awaitable>`, :term:`coroutine functions "
"<coroutine function>`, :term:`asynchronous iteration <asynchronous "
"iterable>`, and :term:`asynchronous context managers <asynchronous context "
"manager>`."
msgstr ""
"A :pep:`492` melhora significativamente o suporte para programação "
"assíncrona em Python, adicionando :term:`objetos aguardáveis <awaitable>`, :"
"term:`funções *coroutine* <coroutine function>`, :term:`iteração assíncrona "
"<asynchronous iterable>`, e :term:`gestores de contexto assíncronos "
"<asynchronous context manager>`."

#: ../../whatsnew/3.5.rst:176
msgid ""
"Coroutine functions are declared using the new :keyword:`async def` syntax::"
msgstr ""
"As funções *coroutine* são declaradas usando a nova sintaxe :keyword:`async "
"def`::"

#: ../../whatsnew/3.5.rst:178
msgid ""
">>> async def coro():\n"
"...     return 'spam'"
msgstr ""
">>> async def coro():\n"
"...     return 'spam'"

#: ../../whatsnew/3.5.rst:181
msgid ""
"Inside a coroutine function, the new :keyword:`await` expression can be used "
"to suspend coroutine execution until the result is available.  Any object "
"can be *awaited*, as long as it implements the :term:`awaitable` protocol by "
"defining the :meth:`~object.__await__` method."
msgstr ""
"Dentro de uma função *coroutine*, a nova expressão :keyword:`await` pode ser "
"usada para suspender a execução da *coroutine* até que o resultado esteja "
"disponível. Qualquer objeto pode ser *aguardado*, desde que implemente o "
"protocolo :term:`awaitable` definindo o método :meth:`~object.__await__`."

#: ../../whatsnew/3.5.rst:186
msgid ""
"PEP 492 also adds :keyword:`async for` statement for convenient iteration "
"over asynchronous iterables."
msgstr ""
"A PEP 492 também adiciona a instrução :keyword:`async for` para iteração "
"conveniente sobre iteráveis assíncronos."

#: ../../whatsnew/3.5.rst:189
msgid "An example of a rudimentary HTTP client written using the new syntax::"
msgstr ""
"Um exemplo de um cliente HTTP rudimentar escrito usando a nova sintaxe::"

#: ../../whatsnew/3.5.rst:191
msgid ""
"import asyncio\n"
"\n"
"async def http_get(domain):\n"
"    reader, writer = await asyncio.open_connection(domain, 80)\n"
"\n"
"    writer.write(b'\\r\\n'.join([\n"
"        b'GET / HTTP/1.1',\n"
"        b'Host: %b' % domain.encode('latin-1'),\n"
"        b'Connection: close',\n"
"        b'', b''\n"
"    ]))\n"
"\n"
"    async for line in reader:\n"
"        print('>>>', line)\n"
"\n"
"    writer.close()\n"
"\n"
"loop = asyncio.get_event_loop()\n"
"try:\n"
"    loop.run_until_complete(http_get('example.com'))\n"
"finally:\n"
"    loop.close()"
msgstr ""
"import asyncio\n"
"\n"
"async def http_get(domain):\n"
"    reader, writer = await asyncio.open_connection(domain, 80)\n"
"\n"
"    writer.write(b'\\r\\n'.join([\n"
"        b'GET / HTTP/1.1',\n"
"        b'Host: %b' % domain.encode('latin-1'),\n"
"        b'Connection: close',\n"
"        b'', b''\n"
"    ]))\n"
"\n"
"    async for line in reader:\n"
"        print('>>>', line)\n"
"\n"
"    writer.close()\n"
"\n"
"loop = asyncio.get_event_loop()\n"
"try:\n"
"    loop.run_until_complete(http_get('example.com'))\n"
"finally:\n"
"    loop.close()"

#: ../../whatsnew/3.5.rst:215
msgid ""
"Similarly to asynchronous iteration, there is a new syntax for asynchronous "
"context managers.  The following script::"
msgstr ""
"De forma semelhante à iteração assíncrona, existe uma nova sintaxe para "
"gestores de contexto assíncronos. O seguinte script::"

#: ../../whatsnew/3.5.rst:218
msgid ""
"import asyncio\n"
"\n"
"async def coro(name, lock):\n"
"    print('coro {}: waiting for lock'.format(name))\n"
"    async with lock:\n"
"        print('coro {}: holding the lock'.format(name))\n"
"        await asyncio.sleep(1)\n"
"        print('coro {}: releasing the lock'.format(name))\n"
"\n"
"loop = asyncio.get_event_loop()\n"
"lock = asyncio.Lock()\n"
"coros = asyncio.gather(coro(1, lock), coro(2, lock))\n"
"try:\n"
"    loop.run_until_complete(coros)\n"
"finally:\n"
"    loop.close()"
msgstr ""
"import asyncio\n"
"\n"
"async def coro(name, lock):\n"
"    print('coro {}: à espera de bloqueio'.format(name))\n"
"    async with lock:\n"
"        print('coro {}: com bloqueio'.format(name))\n"
"        await asyncio.sleep(1)\n"
"        print('coro {}: a libertar bloqueio'.format(name))\n"
"\n"
"loop = asyncio.get_event_loop()\n"
"lock = asyncio.Lock()\n"
"coros = asyncio.gather(coro(1, lock), coro(2, lock))\n"
"try:\n"
"    loop.run_until_complete(coros)\n"
"finally:\n"
"    loop.close()"

#: ../../whatsnew/3.5.rst:235
msgid "will output::"
msgstr "produzirá a saída:"

#: ../../whatsnew/3.5.rst:237
msgid ""
"coro 2: waiting for lock\n"
"coro 2: holding the lock\n"
"coro 1: waiting for lock\n"
"coro 2: releasing the lock\n"
"coro 1: holding the lock\n"
"coro 1: releasing the lock"
msgstr ""
"coro 2: à espera de bloqueio\n"
"coro 2: com bloqueio\n"
"coro 1: à espera de bloqueio\n"
"coro 2: a libertar bloqueio\n"
"coro 1: com bloqueio\n"
"coro 1: a libertar bloqueio"

#: ../../whatsnew/3.5.rst:244
msgid ""
"Note that both :keyword:`async for` and :keyword:`async with` can only be "
"used inside a coroutine function declared with :keyword:`async def`."
msgstr ""
"Note que tanto :keyword:`async for` como :keyword:`async with` só podem ser "
"usados dentro de uma função *coroutine* declarada com :keyword:`async def`."

#: ../../whatsnew/3.5.rst:247
msgid ""
"Coroutine functions are intended to be run inside a compatible event loop, "
"such as the :ref:`asyncio loop <asyncio-event-loop>`."
msgstr ""
"As funções *coroutine* são destinadas a ser executadas dentro de um ciclo de "
"eventos compatível, como o :ref:`ciclo asyncio <asyncio-event-loop>`."

#: ../../whatsnew/3.5.rst:253
msgid ""
"Starting with CPython 3.5.2, ``__aiter__`` can directly return :term:"
"`asynchronous iterators <asynchronous iterator>`.  Returning an :term:"
"`awaitable` object will result in a :exc:`PendingDeprecationWarning`."
msgstr ""
"A partir do CPython 3.5.2, ``__aiter__`` pode devolver diretamente :term:"
"`iteradores assíncronos <asynchronous iterator>`. Devolver um objeto :term:"
"`awaitable` resultará num :exc:`PendingDeprecationWarning`."

#: ../../whatsnew/3.5.rst:259
msgid "See more details in the :ref:`async-iterators` documentation section."
msgstr ""
"Consulte mais detalhes na secção de documentação :ref:`async-iterators`."

#: ../../whatsnew/3.5.rst:265
msgid ":pep:`492` -- Coroutines with async and await syntax"
msgstr ":pep:`492` — *Coroutines* com sintaxe *async* e *await*"

#: ../../whatsnew/3.5.rst:266
msgid "PEP written and implemented by Yury Selivanov."
msgstr "PEP escrita e implementada por Yury Selivanov."

#: ../../whatsnew/3.5.rst:272
msgid "PEP 465 - A dedicated infix operator for matrix multiplication"
msgstr "PEP 465 — Um operador infixo dedicado para multiplicação de matrizes"

#: ../../whatsnew/3.5.rst:274
msgid ""
":pep:`465` adds the ``@`` infix operator for matrix multiplication. "
"Currently, no builtin Python types implement the new operator, however, it "
"can be implemented by defining :meth:`~object.__matmul__`, :meth:`~object."
"__rmatmul__`, and :meth:`~object.__imatmul__` for regular, reflected, and in-"
"place matrix multiplication. The semantics of these methods is similar to "
"that of methods defining other infix arithmetic operators."
msgstr ""
"A :pep:`465` adiciona o operador infixo ``@`` para multiplicação de "
"matrizes. Atualmente, nenhum tipo integrado do Python implementa o novo "
"operador, no entanto, este pode ser implementado definindo :meth:`~object."
"__matmul__`, :meth:`~object.__rmatmul__` e :meth:`~object.__imatmul__` para "
"multiplicação de matrizes regular, refletida e *in-place*. A semântica "
"destes métodos é semelhante à dos métodos que definem outros operadores "
"aritméticos infixos."

#: ../../whatsnew/3.5.rst:282
msgid ""
"Matrix multiplication is a notably common operation in many fields of "
"mathematics, science, engineering, and the addition of ``@`` allows writing "
"cleaner code::"
msgstr ""
"A multiplicação de matrizes é uma operação notavelmente comum em muitos "
"campos da matemática, ciência e engenharia, e a adição de ``@`` permite "
"escrever código mais limpo::"

#: ../../whatsnew/3.5.rst:286
msgid "S = (H @ beta - r).T @ inv(H @ V @ H.T) @ (H @ beta - r)"
msgstr "S = (H @ beta - r).T @ inv(H @ V @ H.T) @ (H @ beta - r)"

#: ../../whatsnew/3.5.rst:288
msgid "instead of::"
msgstr "em vez de:"

#: ../../whatsnew/3.5.rst:290
msgid ""
"S = dot((dot(H, beta) - r).T,\n"
"        dot(inv(dot(dot(H, V), H.T)), dot(H, beta) - r))"
msgstr ""
"S = dot((dot(H, beta) - r).T,\n"
"        dot(inv(dot(dot(H, V), H.T)), dot(H, beta) - r))"

#: ../../whatsnew/3.5.rst:293
msgid "NumPy 1.10 has support for the new operator::"
msgstr "O NumPy 1.10 tem suporte para o novo operador:"

#: ../../whatsnew/3.5.rst:295
msgid ""
">>> import numpy\n"
"\n"
">>> x = numpy.ones(3)\n"
">>> x\n"
"array([ 1., 1., 1.])\n"
"\n"
">>> m = numpy.eye(3)\n"
">>> m\n"
"array([[ 1., 0., 0.],\n"
"       [ 0., 1., 0.],\n"
"       [ 0., 0., 1.]])\n"
"\n"
">>> x @ m\n"
"array([ 1., 1., 1.])"
msgstr ""
">>> import numpy\n"
"\n"
">>> x = numpy.ones(3)\n"
">>> x\n"
"array([ 1., 1., 1.])\n"
"\n"
">>> m = numpy.eye(3)\n"
">>> m\n"
"array([[ 1., 0., 0.],\n"
"       [ 0., 1., 0.],\n"
"       [ 0., 0., 1.]])\n"
"\n"
">>> x @ m\n"
"array([ 1., 1., 1.])"

#: ../../whatsnew/3.5.rst:313
msgid ":pep:`465` -- A dedicated infix operator for matrix multiplication"
msgstr ""
":pep:`465` — Um operador infixo dedicado para multiplicação de matrizes"

#: ../../whatsnew/3.5.rst:314
msgid "PEP written by Nathaniel J. Smith; implemented by Benjamin Peterson."
msgstr ""
"PEP escrita por Nathaniel J. Smith; implementada por Benjamin Peterson."

#: ../../whatsnew/3.5.rst:320
msgid "PEP 448 - Additional Unpacking Generalizations"
msgstr "PEP 448 — Generalizações Adicionais de *Unpacking*"

#: ../../whatsnew/3.5.rst:322
msgid ""
":pep:`448` extends the allowed uses of the ``*`` iterable unpacking operator "
"and ``**`` dictionary unpacking operator.  It is now possible to use an "
"arbitrary number of unpackings in :ref:`function calls <calls>`::"
msgstr ""
"A :pep:`448` estende os usos permitidos do operador de *unpacking* iterável "
"``*`` e do operador de *unpacking* de dicionário ``**``. Agora é possível "
"usar um número arbitrário de *unpackings* em :ref:`chamadas de função "
"<calls>`::"

#: ../../whatsnew/3.5.rst:326
msgid ""
">>> print(*[1], *[2], 3, *[4, 5])\n"
"1 2 3 4 5\n"
"\n"
">>> def fn(a, b, c, d):\n"
"...     print(a, b, c, d)\n"
"...\n"
"\n"
">>> fn(**{'a': 1, 'c': 3}, **{'b': 2, 'd': 4})\n"
"1 2 3 4"
msgstr ""
">>> print(*[1], *[2], 3, *[4, 5])\n"
"1 2 3 4 5\n"
"\n"
">>> def fn(a, b, c, d):\n"
"...     print(a, b, c, d)\n"
"...\n"
"\n"
">>> fn(**{'a': 1, 'c': 3}, **{'b': 2, 'd': 4})\n"
"1 2 3 4"

#: ../../whatsnew/3.5.rst:336
msgid ""
"Similarly, tuple, list, set, and dictionary displays allow multiple "
"unpackings (see :ref:`exprlists` and :ref:`dict`)::"
msgstr ""
"Da mesma forma, as exibições de tuplo, lista, conjunto e dicionário permitem "
"múltiplos *unpackings* (consulte :ref:`exprlists` e :ref:`dict`):"

#: ../../whatsnew/3.5.rst:339
msgid ""
">>> *range(4), 4\n"
"(0, 1, 2, 3, 4)\n"
"\n"
">>> [*range(4), 4]\n"
"[0, 1, 2, 3, 4]\n"
"\n"
">>> {*range(4), 4, *(5, 6, 7)}\n"
"{0, 1, 2, 3, 4, 5, 6, 7}\n"
"\n"
">>> {'x': 1, **{'y': 2}}\n"
"{'x': 1, 'y': 2}"
msgstr ""
">>> *range(4), 4\n"
"(0, 1, 2, 3, 4)\n"
"\n"
">>> [*range(4), 4]\n"
"[0, 1, 2, 3, 4]\n"
"\n"
">>> {*range(4), 4, *(5, 6, 7)}\n"
"{0, 1, 2, 3, 4, 5, 6, 7}\n"
"\n"
">>> {'x': 1, **{'y': 2}}\n"
"{'x': 1, 'y': 2}"

#: ../../whatsnew/3.5.rst:353
msgid ":pep:`448` -- Additional Unpacking Generalizations"
msgstr ":pep:`448` — Generalizações Adicionais de *Unpacking*"

#: ../../whatsnew/3.5.rst:354
msgid ""
"PEP written by Joshua Landau; implemented by Neil Girdhar, Thomas Wouters, "
"and Joshua Landau."
msgstr ""
"PEP escrita por Joshua Landau; implementada por Neil Girdhar, Thomas Wouters "
"e Joshua Landau."

#: ../../whatsnew/3.5.rst:361
msgid "PEP 461 - percent formatting support for bytes and bytearray"
msgstr "PEP 461 — Suporte de formatação percentual para *bytes* e *bytearray*"

#: ../../whatsnew/3.5.rst:363
msgid ""
":pep:`461` adds support for the ``%`` :ref:`interpolation operator <bytes-"
"formatting>` to :class:`bytes` and :class:`bytearray`."
msgstr ""
"A :pep:`461` adiciona suporte para o operador de :ref:`interpolação <bytes-"
"formatting>`` ``%`` a :class:`bytes` e :class:`bytearray`."

#: ../../whatsnew/3.5.rst:367
msgid ""
"While interpolation is usually thought of as a string operation, there are "
"cases where interpolation on ``bytes`` or ``bytearrays`` makes sense, and "
"the work needed to make up for this missing functionality detracts from the "
"overall readability of the code.  This issue is particularly important when "
"dealing with wire format protocols, which are often a mixture of binary and "
"ASCII compatible text."
msgstr ""
"Embora a interpolação seja geralmente considerada uma operação de *string*, "
"existem casos em que a interpolação em ``bytes`` ou ``bytearrays`` faz "
"sentido, e o trabalho necessário para compensar esta funcionalidade em falta "
"prejudica a legibilidade geral do código. Esta questão é particularmente "
"importante ao lidar com protocolos de formato de transmissão, que são "
"frequentemente uma mistura de dados binários e texto compatível com ASCII."

#: ../../whatsnew/3.5.rst:374 ../../whatsnew/3.5.rst:1847
msgid "Examples::"
msgstr "Exemplos:"

#: ../../whatsnew/3.5.rst:376
msgid ""
">>> b'Hello %b!' % b'World'\n"
"b'Hello World!'\n"
"\n"
">>> b'x=%i y=%f' % (1, 2.5)\n"
"b'x=1 y=2.500000'"
msgstr ""
">>> b'Hello %b!' % b'World'\n"
"b'Hello World!'\n"
"\n"
">>> b'x=%i y=%f' % (1, 2.5)\n"
"b'x=1 y=2.500000'"

#: ../../whatsnew/3.5.rst:382
msgid ""
"Unicode is not allowed for ``%b``, but it is accepted by ``%a`` (equivalent "
"of ``repr(obj).encode('ascii', 'backslashreplace')``)::"
msgstr ""
"Unicode não é permitido para ``%b``, mas é aceite por ``%a`` (equivalente a "
"``repr(obj).encode('ascii', 'backslashreplace')``)::"

#: ../../whatsnew/3.5.rst:385
msgid ""
">>> b'Hello %b!' % 'World'\n"
"Traceback (most recent call last):\n"
"  File \"<stdin>\", line 1, in <module>\n"
"TypeError: %b requires bytes, or an object that implements __bytes__, not "
"'str'\n"
"\n"
">>> b'price: %a' % '10€'\n"
"b\"price: '10\\\\u20ac'\""
msgstr ""
">>> b'Hello %b!' % 'World'\n"
"Traceback (most recent call last):\n"
"  File \"<stdin>\", line 1, in <module>\n"
"TypeError: %b requires bytes, or an object that implements __bytes__, not "
"'str'\n"
"\n"
">>> b'price: %a' % '10€'\n"
"b\"price: '10\\\\u20ac'\""

#: ../../whatsnew/3.5.rst:393
msgid ""
"Note that ``%s`` and ``%r`` conversion types, although supported, should "
"only be used in codebases that need compatibility with Python 2."
msgstr ""
"Note que os tipos de conversão ``%s`` e ``%r``, embora suportados, só devem "
"ser usados em bases de código que necessitam de compatibilidade com o Python "
"2."

#: ../../whatsnew/3.5.rst:398
msgid ":pep:`461` -- Adding % formatting to bytes and bytearray"
msgstr ":pep:`461` — Adicionar formatação % a *bytes* e *bytearray*"

#: ../../whatsnew/3.5.rst:399
msgid ""
"PEP written by Ethan Furman; implemented by Neil Schemenauer and Ethan "
"Furman."
msgstr ""
"PEP escrita por Ethan Furman; implementada por Neil Schemenauer e Ethan "
"Furman."

#: ../../whatsnew/3.5.rst:406
msgid "PEP 484 - Type Hints"
msgstr "PEP 484 — Dicas de Tipo"

#: ../../whatsnew/3.5.rst:408
msgid ""
"Function annotation syntax has been a Python feature since version 3.0 (:pep:"
"`3107`), however the semantics of annotations has been left undefined."
msgstr ""
"A sintaxe de anotação de funções tem sido uma funcionalidade do Python desde "
"a versão 3.0 (:pep:`3107`), no entanto, a semântica das anotações tem sido "
"deixada indefinida."

#: ../../whatsnew/3.5.rst:411
msgid ""
"Experience has shown that the majority of function annotation uses were to "
"provide type hints to function parameters and return values.  It became "
"evident that it would be beneficial for Python users, if the standard "
"library included the base definitions and tools for type annotations."
msgstr ""
"A experiência mostrou que a maioria dos usos de anotações de funções era "
"para fornecer dicas de tipo para parâmetros de função e valores de retorno. "
"Tornou-se evidente que seria benéfico para os utilizadores do Python se a "
"biblioteca padrão incluísse as definições base e ferramentas para anotações "
"de tipo."

#: ../../whatsnew/3.5.rst:416
msgid ""
":pep:`484` introduces a :term:`provisional module <provisional API>` to "
"provide these standard definitions and tools, along with some conventions "
"for situations where annotations are not available."
msgstr ""
"A :pep:`484` introduz um :term:`módulo provisório <provisional API>` para "
"fornecer estas definições e ferramentas padrão, juntamente com algumas "
"convenções para situações em que as anotações não estão disponíveis."

#: ../../whatsnew/3.5.rst:420
msgid ""
"For example, here is a simple function whose argument and return type are "
"declared in the annotations::"
msgstr ""
"Por exemplo, aqui está uma função simples cujos argumentos e tipo de retorno "
"são declarados nas anotações::"

#: ../../whatsnew/3.5.rst:423
msgid ""
"def greeting(name: str) -> str:\n"
"    return 'Hello ' + name"
msgstr ""
"def greeting(name: str) -> str:\n"
"    return 'Hello ' + name"

#: ../../whatsnew/3.5.rst:426
msgid ""
"While these annotations are available at runtime through the usual :attr:`!"
"__annotations__` attribute, *no automatic type checking happens at "
"runtime*.  Instead, it is assumed that a separate off-line type checker (e."
"g. `mypy <https://mypy-lang.org>`_) will be used for on-demand source code "
"analysis."
msgstr ""

#: ../../whatsnew/3.5.rst:432
msgid ""
"The type system supports unions, generic types, and a special type named :"
"class:`~typing.Any` which is consistent with (i.e. assignable to and from) "
"all types."
msgstr ""
"O sistema de tipos suporta uniões, tipos genéricos e um tipo especial "
"chamado :class:`~typing.Any`, que é consistente com (ou seja, atribuível a e "
"de) todos os tipos."

#: ../../whatsnew/3.5.rst:438
msgid ":mod:`typing` module documentation"
msgstr "Documentação do módulo :mod:`typing`"

#: ../../whatsnew/3.5.rst:439
msgid ":pep:`484` -- Type Hints"
msgstr ":pep:`484` — Dicas de Tipo"

#: ../../whatsnew/3.5.rst:440
msgid ""
"PEP written by Guido van Rossum, Jukka Lehtosalo, and Łukasz Langa; "
"implemented by Guido van Rossum."
msgstr ""
"PEP escrita por Guido van Rossum, Jukka Lehtosalo e Łukasz Langa; "
"implementada por Guido van Rossum."

#: ../../whatsnew/3.5.rst:442
msgid ":pep:`483` -- The Theory of Type Hints"
msgstr ":pep:`483` — A Teoria das Dicas de Tipo"

#: ../../whatsnew/3.5.rst:443
msgid "PEP written by Guido van Rossum"
msgstr "PEP escrita por Guido van Rossum"

#: ../../whatsnew/3.5.rst:449
msgid ""
"PEP 471 - os.scandir() function -- a better and faster directory iterator"
msgstr ""
"PEP 471 — Função os.scandir() — um iterador de diretórios melhor e mais "
"rápido"

#: ../../whatsnew/3.5.rst:451
msgid ""
":pep:`471` adds a new directory iteration function, :func:`os.scandir`, to "
"the standard library.  Additionally, :func:`os.walk` is now implemented "
"using ``scandir``, which makes it 3 to 5 times faster on POSIX systems and 7 "
"to 20 times faster on Windows systems.  This is largely achieved by greatly "
"reducing the number of calls to :func:`os.stat` required to walk a directory "
"tree."
msgstr ""
"A :pep:`471` adiciona uma nova função de iteração de diretórios, :func:`os."
"scandir`, à biblioteca padrão. Além disso, :func:`os.walk` é agora "
"implementado usando ``scandir``, o que o torna 3 a 5 vezes mais rápido em "
"sistemas POSIX e 7 a 20 vezes mais rápido em sistemas Windows. Isto é "
"conseguido em grande parte reduzindo significativamente o número de chamadas "
"a :func:`os.stat` necessárias para percorrer uma árvore de diretórios."

#: ../../whatsnew/3.5.rst:458
msgid ""
"Additionally, ``scandir`` returns an iterator, as opposed to returning a "
"list of file names, which improves memory efficiency when iterating over "
"very large directories."
msgstr ""
"Além disso, ``scandir`` devolve um iterador, em vez de devolver uma lista de "
"nomes de ficheiros, o que melhora a eficiência de memória ao iterar sobre "
"diretórios muito grandes."

#: ../../whatsnew/3.5.rst:462
msgid ""
"The following example shows a simple use of :func:`os.scandir` to display "
"all the files (excluding directories) in the given *path* that don't start "
"with ``'.'``. The :meth:`entry.is_file() <os.DirEntry.is_file>` call will "
"generally not make an additional system call::"
msgstr ""
"O exemplo seguinte mostra um uso simples de :func:`os.scandir` para "
"apresentar todos os ficheiros (excluindo diretórios) no *path* dado que não "
"começam com ``'.'``. A chamada :meth:`entry.is_file() <os.DirEntry.is_file>` "
"geralmente não fará uma chamada adicional ao sistema::"

#: ../../whatsnew/3.5.rst:467
msgid ""
"for entry in os.scandir(path):\n"
"    if not entry.name.startswith('.') and entry.is_file():\n"
"        print(entry.name)"
msgstr ""
"for entry in os.scandir(path):\n"
"    if not entry.name.startswith('.') and entry.is_file():\n"
"        print(entry.name)"

#: ../../whatsnew/3.5.rst:473
msgid ""
":pep:`471` -- os.scandir() function -- a better and faster directory iterator"
msgstr ""
":pep:`471` — Função os.scandir() — um iterador de diretórios melhor e mais "
"rápido"

#: ../../whatsnew/3.5.rst:474
msgid ""
"PEP written and implemented by Ben Hoyt with the help of Victor Stinner."
msgstr "PEP escrita e implementada por Ben Hoyt com a ajuda de Victor Stinner."

#: ../../whatsnew/3.5.rst:480
msgid "PEP 475: Retry system calls failing with EINTR"
msgstr "PEP 475: Repetir chamadas de sistema que falham com EINTR"

#: ../../whatsnew/3.5.rst:482
msgid ""
"An :py:const:`errno.EINTR` error code is returned whenever a system call, "
"that is waiting for I/O, is interrupted by a signal.  Previously, Python "
"would raise :exc:`InterruptedError` in such cases.  This meant that, when "
"writing a Python application, the developer had two choices:"
msgstr ""
"Um código de erro :py:const:`errno.EINTR` é devolvido sempre que uma chamada "
"de sistema, que está à espera de E/S, é interrompida por um sinal. "
"Anteriormente, o Python lançava uma exceção :exc:`InterruptedError` nestes "
"casos. Isto significava que, ao escrever uma aplicação Python, o programador "
"tinha duas escolhas:"

#: ../../whatsnew/3.5.rst:487
msgid "Ignore the ``InterruptedError``."
msgstr "Ignorar a exceção ``InterruptedError``."

#: ../../whatsnew/3.5.rst:488
msgid ""
"Handle the ``InterruptedError`` and attempt to restart the interrupted "
"system call at every call site."
msgstr ""
"Tratar a exceção ``InterruptedError`` e tentar reiniciar a chamada de "
"sistema interrompida em cada local de chamada."

#: ../../whatsnew/3.5.rst:491
msgid ""
"The first option makes an application fail intermittently. The second option "
"adds a large amount of boilerplate that makes the code nearly unreadable.  "
"Compare::"
msgstr ""
"A primeira opção faz com que uma aplicação falhe intermitentemente. A "
"segunda opção adiciona uma grande quantidade de código repetitivo que torna "
"o código quase ilegível. Compare::"

#: ../../whatsnew/3.5.rst:495
msgid "print(\"Hello World\")"
msgstr "print(\"Hello World\")"

#: ../../whatsnew/3.5.rst:497
msgid "and::"
msgstr "e:"

#: ../../whatsnew/3.5.rst:499
msgid ""
"while True:\n"
"    try:\n"
"        print(\"Hello World\")\n"
"        break\n"
"    except InterruptedError:\n"
"        continue"
msgstr ""
"while True:\n"
"    try:\n"
"        print(\"Hello World\")\n"
"        break\n"
"    except InterruptedError:\n"
"        continue"

#: ../../whatsnew/3.5.rst:506
msgid ""
":pep:`475` implements automatic retry of system calls on ``EINTR``.  This "
"removes the burden of dealing with ``EINTR`` or :exc:`InterruptedError` in "
"user code in most situations and makes Python programs, including the "
"standard library, more robust.  Note that the system call is only retried if "
"the signal handler does not raise an exception."
msgstr ""
"A :pep:`475` implementa a repetição automática de chamadas de sistema em "
"``EINTR``. Isto remove o fardo de lidar com ``EINTR`` ou :exc:"
"`InterruptedError` no código do utilizador na maioria das situações e torna "
"os programas Python, incluindo a biblioteca padrão, mais robustos. Note que "
"a chamada de sistema só é repetida se o gestor de sinal não lançar uma "
"exceção."

#: ../../whatsnew/3.5.rst:513
msgid ""
"Below is a list of functions which are now retried when interrupted by a "
"signal:"
msgstr ""
"Em baixo está uma lista de funções que agora são repetidas quando "
"interrompidas por um sinal:"

#: ../../whatsnew/3.5.rst:516
msgid ":func:`open` and :func:`io.open`;"
msgstr ":func:`open` e :func:`io.open`;"

#: ../../whatsnew/3.5.rst:518
msgid "functions of the :mod:`faulthandler` module;"
msgstr "funções do módulo :mod:`faulthandler`;"

#: ../../whatsnew/3.5.rst:520
msgid ""
":mod:`os` functions: :func:`~os.fchdir`, :func:`~os.fchmod`, :func:`~os."
"fchown`, :func:`~os.fdatasync`, :func:`~os.fstat`, :func:`~os.fstatvfs`, :"
"func:`~os.fsync`, :func:`~os.ftruncate`, :func:`~os.mkfifo`, :func:`~os."
"mknod`, :func:`~os.open`, :func:`~os.posix_fadvise`, :func:`~os."
"posix_fallocate`, :func:`~os.pread`, :func:`~os.pwrite`, :func:`~os.read`, :"
"func:`~os.readv`, :func:`~os.sendfile`, :func:`~os.wait3`, :func:`~os."
"wait4`, :func:`~os.wait`, :func:`~os.waitid`, :func:`~os.waitpid`, :func:"
"`~os.write`, :func:`~os.writev`;"
msgstr ""
"funções do módulo :mod:`os`: :func:`~os.fchdir`, :func:`~os.fchmod`, :func:"
"`~os.fchown`, :func:`~os.fdatasync`, :func:`~os.fstat`, :func:`~os."
"fstatvfs`, :func:`~os.fsync`, :func:`~os.ftruncate`, :func:`~os.mkfifo`, :"
"func:`~os.mknod`, :func:`~os.open`, :func:`~os.posix_fadvise`, :func:`~os."
"posix_fallocate`, :func:`~os.pread`, :func:`~os.pwrite`, :func:`~os.read`, :"
"func:`~os.readv`, :func:`~os.sendfile`, :func:`~os.wait3`, :func:`~os."
"wait4`, :func:`~os.wait`, :func:`~os.waitid`, :func:`~os.waitpid`, :func:"
"`~os.write`, :func:`~os.writev`;"

#: ../../whatsnew/3.5.rst:530
msgid ""
"special cases: :func:`os.close` and :func:`os.dup2` now ignore :py:const:"
"`~errno.EINTR` errors; the syscall is not retried (see the PEP for the "
"rationale);"
msgstr ""
"casos especiais: :func:`os.close` e :func:`os.dup2` agora ignoram erros :py:"
"const:`~errno.EINTR`; a chamada de sistema não é repetida (consulte a PEP "
"para a justificação);"

#: ../../whatsnew/3.5.rst:534
msgid ""
":mod:`select` functions: :func:`devpoll.poll() <select.devpoll.poll>`, :func:"
"`epoll.poll() <select.epoll.poll>`, :func:`kqueue.control() <select.kqueue."
"control>`, :func:`poll.poll() <select.poll.poll>`, :func:`~select.select`;"
msgstr ""
"funções do módulo :mod:`select`: :func:`devpoll.poll() <select.devpoll."
"poll>`, :func:`epoll.poll() <select.epoll.poll>`, :func:`kqueue.control() "
"<select.kqueue.control>`, :func:`poll.poll() <select.poll.poll>`, :func:"
"`~select.select`;"

#: ../../whatsnew/3.5.rst:539
msgid ""
"methods of the :class:`~socket.socket` class: :meth:`~socket.socket."
"accept`, :meth:`~socket.socket.connect` (except for non-blocking sockets), :"
"meth:`~socket.socket.recv`, :meth:`~socket.socket.recvfrom`, :meth:`~socket."
"socket.recvmsg`, :meth:`~socket.socket.send`, :meth:`~socket.socket."
"sendall`, :meth:`~socket.socket.sendmsg`, :meth:`~socket.socket.sendto`;"
msgstr ""
"métodos da classe :class:`~socket.socket`: :meth:`~socket.socket.accept`, :"
"meth:`~socket.socket.connect` (exceto para *sockets* não bloqueantes), :meth:"
"`~socket.socket.recv`, :meth:`~socket.socket.recvfrom`, :meth:`~socket."
"socket.recvmsg`, :meth:`~socket.socket.send`, :meth:`~socket.socket."
"sendall`, :meth:`~socket.socket.sendmsg`, :meth:`~socket.socket.sendto`;"

#: ../../whatsnew/3.5.rst:546
msgid ":func:`signal.sigtimedwait` and :func:`signal.sigwaitinfo`;"
msgstr ":func:`signal.sigtimedwait` e :func:`signal.sigwaitinfo`;"

#: ../../whatsnew/3.5.rst:548
msgid ":func:`time.sleep`."
msgstr ":func:`time.sleep`."

#: ../../whatsnew/3.5.rst:552
msgid ":pep:`475` -- Retry system calls failing with EINTR"
msgstr ":pep:`475` — Repetir chamadas de sistema que falham com EINTR"

#: ../../whatsnew/3.5.rst:553
msgid ""
"PEP and implementation written by Charles-François Natali and Victor "
"Stinner, with the help of Antoine Pitrou (the French connection)."
msgstr ""
"PEP e implementação escritas por Charles-François Natali e Victor Stinner, "
"com a ajuda de Antoine Pitrou (a ligação francesa)."

#: ../../whatsnew/3.5.rst:560
msgid "PEP 479: Change StopIteration handling inside generators"
msgstr "PEP 479: Alterar o tratamento de StopIteration dentro de geradores"

#: ../../whatsnew/3.5.rst:562
msgid ""
"The interaction of generators and :exc:`StopIteration` in Python 3.4 and "
"earlier was sometimes surprising, and could conceal obscure bugs.  "
"Previously, ``StopIteration`` raised accidentally inside a generator "
"function was interpreted as the end of the iteration by the loop construct "
"driving the generator."
msgstr ""
"A interação entre geradores e :exc:`StopIteration` no Python 3.4 e versões "
"anteriores era por vezes surpreendente e podia ocultar erros obscuros. "
"Anteriormente, uma exceção ``StopIteration`` lançada acidentalmente dentro "
"de uma função geradora era interpretada como o fim da iteração pelo "
"construto de ciclo que controlava o gerador."

#: ../../whatsnew/3.5.rst:568
msgid ""
":pep:`479` changes the behavior of generators: when a ``StopIteration`` "
"exception is raised inside a generator, it is replaced with a :exc:"
"`RuntimeError` before it exits the generator frame.  The main goal of this "
"change is to ease debugging in the situation where an unguarded :func:`next` "
"call raises ``StopIteration`` and causes the iteration controlled by the "
"generator to terminate silently. This is particularly pernicious in "
"combination with the ``yield from`` construct."
msgstr ""
"A :pep:`479` altera o comportamento dos geradores: quando uma exceção "
"``StopIteration`` é lançada dentro de um gerador, é substituída por uma "
"exceção :exc:`RuntimeError` antes de sair do *frame* do gerador. O principal "
"objetivo desta alteração é facilitar a depuração em situações em que uma "
"chamada não protegida a :func:`next` lança ``StopIteration`` e faz com que a "
"iteração controlada pelo gerador termine silenciosamente. Isto é "
"particularmente pernicioso em combinação com o construto ``yield from``."

#: ../../whatsnew/3.5.rst:576
msgid ""
"This is a backwards incompatible change, so to enable the new behavior, a :"
"term:`__future__` import is necessary::"
msgstr ""
"Esta é uma alteração incompatível com versões anteriores, por isso, para "
"ativar o novo comportamento, é necessária uma importação :term:`__future__`::"

#: ../../whatsnew/3.5.rst:579
msgid ""
">>> from __future__ import generator_stop\n"
"\n"
">>> def gen():\n"
"...     next(iter([]))\n"
"...     yield\n"
"...\n"
">>> next(gen())\n"
"Traceback (most recent call last):\n"
"  File \"<stdin>\", line 2, in gen\n"
"StopIteration\n"
"\n"
"The above exception was the direct cause of the following exception:\n"
"\n"
"Traceback (most recent call last):\n"
"  File \"<stdin>\", line 1, in <module>\n"
"RuntimeError: generator raised StopIteration"
msgstr ""
">>> from __future__ import generator_stop\n"
"\n"
">>> def gen():\n"
"...     next(iter([]))\n"
"...     yield\n"
"...\n"
">>> next(gen())\n"
"Traceback (most recent call last):\n"
"  File \"<stdin>\", line 2, in gen\n"
"StopIteration\n"
"\n"
"The above exception was the direct cause of the following exception:\n"
"\n"
"Traceback (most recent call last):\n"
"  File \"<stdin>\", line 1, in <module>\n"
"RuntimeError: generator raised StopIteration"

#: ../../whatsnew/3.5.rst:596
msgid ""
"Without a ``__future__`` import, a :exc:`PendingDeprecationWarning` will be "
"raised whenever a :exc:`StopIteration` exception is raised inside a "
"generator."
msgstr ""
"Sem uma importação ``__future__``, um aviso :exc:`PendingDeprecationWarning` "
"será lançado sempre que uma exceção :exc:`StopIteration` for lançada dentro "
"de um gerador."

#: ../../whatsnew/3.5.rst:601
msgid ":pep:`479` -- Change StopIteration handling inside generators"
msgstr ":pep:`479` — Alterar o tratamento de StopIteration dentro de geradores"

#: ../../whatsnew/3.5.rst:602
msgid ""
"PEP written by Chris Angelico and Guido van Rossum. Implemented by Chris "
"Angelico, Yury Selivanov and Nick Coghlan."
msgstr ""
"PEP escrita por Chris Angelico e Guido van Rossum. Implementada por Chris "
"Angelico, Yury Selivanov e Nick Coghlan."

#: ../../whatsnew/3.5.rst:609
msgid "PEP 485: A function for testing approximate equality"
msgstr "PEP 485: Uma função para testar igualdade aproximada"

#: ../../whatsnew/3.5.rst:611
msgid ""
":pep:`485` adds the :func:`math.isclose` and :func:`cmath.isclose` functions "
"which tell whether two values are approximately equal or \"close\" to each "
"other.  Whether or not two values are considered close is determined "
"according to given absolute and relative tolerances. Relative tolerance is "
"the maximum allowed difference between ``isclose`` arguments, relative to "
"the larger absolute value::"
msgstr ""
"A :pep:`485` adiciona as funções :func:`math.isclose` e :func:`cmath."
"isclose`, que indicam se dois valores são aproximadamente iguais ou "
"\"próximos\" um do outro. Se dois valores são considerados próximos é "
"determinado de acordo com tolerâncias absolutas e relativas dadas. A "
"tolerância relativa é a diferença máxima permitida entre os argumentos de "
"``isclose``, relativa ao maior valor absoluto::"

#: ../../whatsnew/3.5.rst:618
msgid ""
">>> import math\n"
">>> a = 5.0\n"
">>> b = 4.99998\n"
">>> math.isclose(a, b, rel_tol=1e-5)\n"
"True\n"
">>> math.isclose(a, b, rel_tol=1e-6)\n"
"False"
msgstr ""
">>> import math\n"
">>> a = 5.0\n"
">>> b = 4.99998\n"
">>> math.isclose(a, b, rel_tol=1e-5)\n"
"True\n"
">>> math.isclose(a, b, rel_tol=1e-6)\n"
"False"

#: ../../whatsnew/3.5.rst:626
msgid ""
"It is also possible to compare two values using absolute tolerance, which "
"must be a non-negative value::"
msgstr ""
"Também é possível comparar dois valores usando tolerância absoluta, que deve "
"ser um valor não negativo::"

#: ../../whatsnew/3.5.rst:629
msgid ""
">>> import math\n"
">>> a = 5.0\n"
">>> b = 4.99998\n"
">>> math.isclose(a, b, abs_tol=0.00003)\n"
"True\n"
">>> math.isclose(a, b, abs_tol=0.00001)\n"
"False"
msgstr ""
">>> import math\n"
">>> a = 5.0\n"
">>> b = 4.99998\n"
">>> math.isclose(a, b, abs_tol=0.00003)\n"
"True\n"
">>> math.isclose(a, b, abs_tol=0.00001)\n"
"False"

#: ../../whatsnew/3.5.rst:639
msgid ":pep:`485` -- A function for testing approximate equality"
msgstr ":pep:`485` — Uma função para testar igualdade aproximada"

#: ../../whatsnew/3.5.rst:640
msgid ""
"PEP written by Christopher Barker; implemented by Chris Barker and Tal Einat."
msgstr ""
"PEP escrita por Christopher Barker; implementada por Chris Barker e Tal "
"Einat."

#: ../../whatsnew/3.5.rst:647
msgid "PEP 486: Make the Python Launcher aware of virtual environments"
msgstr "PEP 486: Tornar o Lançador do Python consciente de ambientes virtuais"

#: ../../whatsnew/3.5.rst:649
msgid ""
":pep:`486` makes the Windows launcher (see :pep:`397`) aware of an active "
"virtual environment. When the default interpreter would be used and the "
"``VIRTUAL_ENV`` environment variable is set, the interpreter in the virtual "
"environment will be used."
msgstr ""
"A :pep:`486` torna o lançador do Windows (consulte :pep:`397`) consciente de "
"um ambiente virtual ativo. Quando o interpretador predefinido seria usado e "
"a variável de ambiente ``VIRTUAL_ENV`` está definida, o interpretador no "
"ambiente virtual será usado."

#: ../../whatsnew/3.5.rst:656
msgid ":pep:`486` -- Make the Python Launcher aware of virtual environments"
msgstr ""
":pep:`486` — Tornar o Lançador do Python consciente de ambientes virtuais"

#: ../../whatsnew/3.5.rst:657
msgid "PEP written and implemented by Paul Moore."
msgstr "PEP escrita e implementada por Paul Moore."

#: ../../whatsnew/3.5.rst:663
msgid "PEP 488: Elimination of PYO files"
msgstr "PEP 488: Eliminação de ficheiros PYO"

#: ../../whatsnew/3.5.rst:665
msgid ""
":pep:`488` does away with the concept of ``.pyo`` files. This means that ``."
"pyc`` files represent both unoptimized and optimized bytecode. To prevent "
"the need to constantly regenerate bytecode files, ``.pyc`` files now have an "
"optional ``opt-`` tag in their name when the bytecode is optimized. This has "
"the side-effect of no more bytecode file name clashes when running under "
"either :option:`-O` or :option:`-OO`. Consequently, bytecode files generated "
"from :option:`-O`, and :option:`-OO` may now exist simultaneously. :func:"
"`importlib.util.cache_from_source` has an updated API to help with this "
"change."
msgstr ""
"A :pep:`488` elimina o conceito de ficheiros ``.pyo``. Isto significa que os "
"ficheiros ``.pyc`` representam tanto *bytecode* não otimizado como "
"otimizado. Para evitar a necessidade de regenerar constantemente ficheiros "
"de *bytecode*, os ficheiros ``.pyc`` têm agora uma etiqueta opcional ``opt-"
"`` no nome quando o *bytecode* é otimizado. Isto tem o efeito colateral de "
"não haver mais conflitos de nomes de ficheiros de *bytecode* ao executar "
"com :option:`-O` ou :option:`-OO`. Consequentemente, os ficheiros de "
"*bytecode* gerados a partir de :option:`-O` e :option:`-OO` podem agora "
"existir simultaneamente. A função :func:`importlib.util.cache_from_source` "
"tem uma API atualizada para ajudar com esta alteração."

#: ../../whatsnew/3.5.rst:677
msgid ":pep:`488` -- Elimination of PYO files"
msgstr ":pep:`488` — Eliminação de ficheiros PYO"

#: ../../whatsnew/3.5.rst:678
msgid "PEP written and implemented by Brett Cannon."
msgstr "PEP escrita e implementada por Brett Cannon."

#: ../../whatsnew/3.5.rst:684
msgid "PEP 489: Multi-phase extension module initialization"
msgstr "PEP 489: Inicialização de módulos de extensão em múltiplas fases"

#: ../../whatsnew/3.5.rst:686
msgid ""
":pep:`489` updates extension module initialization to take advantage of the "
"two step module loading mechanism introduced by :pep:`451` in Python 3.4."
msgstr ""
"A :pep:`489` atualiza a inicialização de módulos de extensão para tirar "
"partido do mecanismo de carregamento de módulos em duas etapas introduzido "
"pela :pep:`451` no Python 3.4."

#: ../../whatsnew/3.5.rst:689
msgid ""
"This change brings the import semantics of extension modules that opt-in to "
"using the new mechanism much closer to those of Python source and bytecode "
"modules, including the ability to use any valid identifier as a module name, "
"rather than being restricted to ASCII."
msgstr ""
"Esta alteração aproxima a semântica de importação de módulos de extensão que "
"optam por usar o novo mecanismo muito mais daqueles dos módulos de origem e "
"*bytecode* do Python, incluindo a capacidade de usar qualquer identificador "
"válido como nome de módulo, em vez de estar restrito a ASCII."

#: ../../whatsnew/3.5.rst:696
msgid ":pep:`489` -- Multi-phase extension module initialization"
msgstr ""

#: ../../whatsnew/3.5.rst:697
msgid ""
"PEP written by Petr Viktorin, Stefan Behnel, and Nick Coghlan; implemented "
"by Petr Viktorin."
msgstr ""

#: ../../whatsnew/3.5.rst:702
msgid "Other Language Changes"
msgstr "Outras Alterações à Linguagem"

#: ../../whatsnew/3.5.rst:704
msgid "Some smaller changes made to the core Python language are:"
msgstr "Algumas alterações menores feitas à linguagem principal do Python são:"

#: ../../whatsnew/3.5.rst:706
msgid ""
"Added the ``\"namereplace\"`` error handlers.  The ``\"backslashreplace\"`` "
"error handlers now work with decoding and translating. (Contributed by "
"Serhiy Storchaka in :issue:`19676` and :issue:`22286`.)"
msgstr ""
"Adicionados os gestores de erros ``\"namereplace\"``. Os gestores de erros "
"``\"backslashreplace\"`` agora funcionam com descodificação e tradução. "
"(Contribuído por Serhiy Storchaka em :issue:`19676` e :issue:`22286`.)"

#: ../../whatsnew/3.5.rst:710
msgid ""
"The :option:`-b` option now affects comparisons of :class:`bytes` with :"
"class:`int`.  (Contributed by Serhiy Storchaka in :issue:`23681`.)"
msgstr ""
"A opção :option:`-b` agora afeta as comparações de :class:`bytes` com :class:"
"`int`. (Contribuído por Serhiy Storchaka em :issue:`23681`.)"

#: ../../whatsnew/3.5.rst:713
msgid ""
"New Kazakh ``kz1048`` and Tajik ``koi8_t`` :ref:`codecs <standard-"
"encodings>`. (Contributed by Serhiy Storchaka in :issue:`22682` and :issue:"
"`22681`.)"
msgstr ""
"Novos :ref:`codecs <standard-encodings>` Cazaque ``kz1048`` e Tajique "
"``koi8_t``. (Contribuído por Serhiy Storchaka em :issue:`22682` e :issue:"
"`22681`.)"

#: ../../whatsnew/3.5.rst:716
msgid ""
"Property docstrings are now writable. This is especially useful for :func:"
"`collections.namedtuple` docstrings. (Contributed by Berker Peksag in :issue:"
"`24064`.)"
msgstr ""
"As *docstrings* de propriedades são agora editáveis. Isto é especialmente "
"útil para as *docstrings* de :func:`collections.namedtuple`. (Contribuído "
"por Berker Peksag em :issue:`24064`.)"

#: ../../whatsnew/3.5.rst:720
msgid ""
"Circular imports involving relative imports are now supported. (Contributed "
"by Brett Cannon and Antoine Pitrou in :issue:`17636`.)"
msgstr ""
"As importações circulares que envolvem importações relativas são agora "
"suportadas. (Contribuído por Brett Cannon e Antoine Pitrou em :issue:"
"`17636`.)"

#: ../../whatsnew/3.5.rst:725
msgid "New Modules"
msgstr "Novos Módulos"

#: ../../whatsnew/3.5.rst:728
msgid "typing"
msgstr "typing"

#: ../../whatsnew/3.5.rst:730
msgid ""
"The new :mod:`typing` :term:`provisional <provisional API>` module provides "
"standard definitions and tools for function type annotations. See :ref:`Type "
"Hints <whatsnew-pep-484>` for more information."
msgstr ""
"O novo módulo :mod:`typing` :term:`provisório <provisional API>` fornece "
"definições e ferramentas padrão para anotações de tipo de função. Consulte :"
"ref:`Dicas de Tipo <whatsnew-pep-484>` para mais informações."

#: ../../whatsnew/3.5.rst:737
msgid "zipapp"
msgstr "zipapp"

#: ../../whatsnew/3.5.rst:739
msgid ""
"The new :mod:`zipapp` module (specified in :pep:`441`) provides an API and "
"command line tool for creating executable Python Zip Applications, which "
"were introduced in Python 2.6 in :issue:`1739468`, but which were not well "
"publicized, either at the time or since."
msgstr ""
"O novo módulo :mod:`zipapp` (especificado na :pep:`441`) fornece uma API e "
"uma ferramenta de linha de comandos para criar Aplicações Python Zip "
"executáveis, que foram introduzidas no Python 2.6 em :issue:`1739468`, mas "
"que não foram bem divulgadas, nem na altura nem desde então."

#: ../../whatsnew/3.5.rst:744
msgid ""
"With the new module, bundling your application is as simple as putting all "
"the files, including a ``__main__.py`` file, into a directory ``myapp`` and "
"running:"
msgstr ""
"Com o novo módulo, agrupar a sua aplicação é tão simples como colocar todos "
"os ficheiros, incluindo um ficheiro ``__main__.py``, num diretório ``myapp`` "
"e executar:"

#: ../../whatsnew/3.5.rst:748
msgid ""
"$ python -m zipapp myapp\n"
"$ python myapp.pyz"
msgstr ""
"$ python -m zipapp myapp\n"
"$ python myapp.pyz"

#: ../../whatsnew/3.5.rst:753
msgid ""
"The module implementation has been contributed by Paul Moore in :issue:"
"`23491`."
msgstr ""
"A implementação do módulo foi contribuída por Paul Moore em :issue:`23491`."

#: ../../whatsnew/3.5.rst:758
msgid ":pep:`441` -- Improving Python ZIP Application Support"
msgstr ":pep:`441` — Melhorar o Suporte para Aplicações ZIP em Python"

#: ../../whatsnew/3.5.rst:762
msgid "Improved Modules"
msgstr "Módulos Melhorados"

#: ../../whatsnew/3.5.rst:765
msgid "argparse"
msgstr "argparse"

#: ../../whatsnew/3.5.rst:767
msgid ""
"The :class:`~argparse.ArgumentParser` class now allows disabling :ref:"
"`abbreviated usage <prefix-matching>` of long options by setting :ref:"
"`allow_abbrev` to ``False``.  (Contributed by Jonathan Paugh, Steven "
"Bethard, paul j3 and Daniel Eriksson in :issue:`14910`.)"
msgstr ""
"A classe :class:`~argparse.ArgumentParser` agora permite desativar o :ref:"
"`uso abreviado <prefix-matching>` de opções longas, definindo :ref:"
"`allow_abbrev` para ``False``. (Contribuído por Jonathan Paugh, Steven "
"Bethard, paul j3 e Daniel Eriksson em :issue:`14910`.)"

#: ../../whatsnew/3.5.rst:774
msgid "asyncio"
msgstr "asyncio"

#: ../../whatsnew/3.5.rst:776
msgid ""
"Since the :mod:`asyncio` module is :term:`provisional <provisional API>`, "
"all changes introduced in Python 3.5 have also been backported to Python 3.4."
"x."
msgstr ""
"Como o módulo :mod:`asyncio` é :term:`provisório <provisional API>`, todas "
"as alterações introduzidas no Python 3.5 também foram retroportadas para o "
"Python 3.4.x."

#: ../../whatsnew/3.5.rst:779
msgid "Notable changes in the :mod:`asyncio` module since Python 3.4.0:"
msgstr "Alterações notáveis no módulo :mod:`asyncio` desde o Python 3.4.0:"

#: ../../whatsnew/3.5.rst:781
msgid ""
"New debugging APIs: :meth:`loop.set_debug() <asyncio.loop.set_debug>` and :"
"meth:`loop.get_debug() <asyncio.loop.get_debug>` methods. (Contributed by "
"Victor Stinner.)"
msgstr ""
"Novas APIs de depuração: métodos :meth:`loop.set_debug() <asyncio.loop."
"set_debug>` e :meth:`loop.get_debug() <asyncio.loop.get_debug>`. "
"(Contribuído por Victor Stinner.)"

#: ../../whatsnew/3.5.rst:785
msgid ""
"The proactor event loop now supports SSL. (Contributed by Antoine Pitrou and "
"Victor Stinner in :issue:`22560`.)"
msgstr ""
"O ciclo de eventos *proactor* agora suporta SSL. (Contribuído por Antoine "
"Pitrou e Victor Stinner em :issue:`22560`.)"

#: ../../whatsnew/3.5.rst:788
msgid ""
"A new :meth:`loop.is_closed() <asyncio.loop.is_closed>` method to check if "
"the event loop is closed. (Contributed by Victor Stinner in :issue:`21326`.)"
msgstr ""
"Um novo método :meth:`loop.is_closed() <asyncio.loop.is_closed>` para "
"verificar se o ciclo de eventos está fechado. (Contribuído por Victor "
"Stinner em :issue:`21326`.)"

#: ../../whatsnew/3.5.rst:792
msgid ""
"A new :meth:`loop.create_task() <asyncio.loop.create_task>` to conveniently "
"create and schedule a new :class:`~asyncio.Task` for a coroutine.  The "
"``create_task`` method is also used by all asyncio functions that wrap "
"coroutines into tasks, such as :func:`asyncio.wait`, :func:`asyncio.gather`, "
"etc. (Contributed by Victor Stinner.)"
msgstr ""
"Um novo método :meth:`loop.create_task() <asyncio.loop.create_task>` para "
"criar e agendar convenientemente uma nova :class:`~asyncio.Task` para uma "
"*coroutine*. O método ``create_task`` também é usado por todas as funções "
"*asyncio* que envolvem *coroutines* em tarefas, como :func:`asyncio.wait`, :"
"func:`asyncio.gather`, etc. (Contribuído por Victor Stinner.)"

#: ../../whatsnew/3.5.rst:799
msgid ""
"A new :meth:`transport.get_write_buffer_limits() <asyncio.WriteTransport."
"get_write_buffer_limits>` method to inquire for *high-* and *low-* water "
"limits of the flow control. (Contributed by Victor Stinner.)"
msgstr ""
"Um novo método :meth:`transport.get_write_buffer_limits() <asyncio."
"WriteTransport.get_write_buffer_limits>` para consultar os limites *high-* e "
"*low-* do controlo de fluxo. (Contribuído por Victor Stinner.)"

#: ../../whatsnew/3.5.rst:804
msgid ""
"The :func:`!async` function is deprecated in favor of :func:`~asyncio."
"ensure_future`. (Contributed by Yury Selivanov.)"
msgstr ""
"A função :func:`!async` está obsoleta em favor de :func:`~asyncio."
"ensure_future`. (Contribuído por Yury Selivanov.)"

#: ../../whatsnew/3.5.rst:808
msgid ""
"New :meth:`loop.set_task_factory() <asyncio.loop.set_task_factory>` and :"
"meth:`loop.get_task_factory() <asyncio.loop.get_task_factory>` methods to "
"customize the task factory that :meth:`loop.create_task() <asyncio.loop."
"create_task>` method uses.  (Contributed by Yury Selivanov.)"
msgstr ""
"Novos métodos :meth:`loop.set_task_factory() <asyncio.loop."
"set_task_factory>` e :meth:`loop.get_task_factory() <asyncio.loop."
"get_task_factory>` para personalizar a fábrica de tarefas que o método :meth:"
"`loop.create_task() <asyncio.loop.create_task>` usa. (Contribuído por Yury "
"Selivanov.)"

#: ../../whatsnew/3.5.rst:815
msgid ""
"New :meth:`Queue.join() <asyncio.Queue.join>` and :meth:`Queue.task_done() "
"<asyncio.Queue.task_done>` queue methods. (Contributed by Victor Stinner.)"
msgstr ""
"Novos métodos de fila :meth:`Queue.join() <asyncio.Queue.join>` e :meth:"
"`Queue.task_done() <asyncio.Queue.task_done>`. (Contribuído por Victor "
"Stinner.)"

#: ../../whatsnew/3.5.rst:819
msgid ""
"The ``JoinableQueue`` class was removed, in favor of the :class:`asyncio."
"Queue` class. (Contributed by Victor Stinner.)"
msgstr ""
"A classe ``JoinableQueue`` foi removida, em favor da classe :class:`asyncio."
"Queue`. (Contribuído por Victor Stinner.)"

#: ../../whatsnew/3.5.rst:823
msgid "Updates in 3.5.1:"
msgstr "Atualizações na versão 3.5.1:"

#: ../../whatsnew/3.5.rst:825
msgid ""
"The :func:`~asyncio.ensure_future` function and all functions that use it, "
"such as :meth:`loop.run_until_complete() <asyncio.loop.run_until_complete>`, "
"now accept all kinds of :term:`awaitable objects <awaitable>`. (Contributed "
"by Yury Selivanov.)"
msgstr ""
"A função :func:`~asyncio.ensure_future` e todas as funções que a usam, como :"
"meth:`loop.run_until_complete() <asyncio.loop.run_until_complete>`, agora "
"aceitam todos os tipos de :term:`objetos aguardáveis <awaitable>`. "
"(Contribuído por Yury Selivanov.)"

#: ../../whatsnew/3.5.rst:830
msgid ""
"New :func:`~asyncio.run_coroutine_threadsafe` function to submit coroutines "
"to event loops from other threads. (Contributed by Vincent Michel.)"
msgstr ""
"Nova função :func:`~asyncio.run_coroutine_threadsafe` para submeter "
"*coroutines* a ciclos de eventos a partir de outras *threads*. (Contribuído "
"por Vincent Michel.)"

#: ../../whatsnew/3.5.rst:834
msgid ""
"New :meth:`Transport.is_closing() <asyncio.BaseTransport.is_closing>` method "
"to check if the transport is closing or closed. (Contributed by Yury "
"Selivanov.)"
msgstr ""
"Novo método :meth:`Transport.is_closing() <asyncio.BaseTransport."
"is_closing>` para verificar se o transporte está a fechar ou fechado. "
"(Contribuído por Yury Selivanov.)"

#: ../../whatsnew/3.5.rst:838
msgid ""
"The :meth:`loop.create_server() <asyncio.loop.create_server>` method can now "
"accept a list of hosts. (Contributed by Yann Sionneau.)"
msgstr ""
"O método :meth:`loop.create_server() <asyncio.loop.create_server>` agora "
"pode aceitar uma lista de *hosts*. (Contribuído por Yann Sionneau.)"

#: ../../whatsnew/3.5.rst:842
msgid "Updates in 3.5.2:"
msgstr "Atualizações na versão 3.5.2:"

#: ../../whatsnew/3.5.rst:844
msgid ""
"New :meth:`loop.create_future() <asyncio.loop.create_future>` method to "
"create Future objects.  This allows alternative event loop implementations, "
"such as `uvloop <https://github.com/MagicStack/uvloop>`_, to provide a "
"faster :class:`asyncio.Future` implementation. (Contributed by Yury "
"Selivanov.)"
msgstr ""
"Novo método :meth:`loop.create_future() <asyncio.loop.create_future>` para "
"criar objetos Future. Isto permite que implementações alternativas de ciclos "
"de eventos, como `uvloop <https://github.com/MagicStack/uvloop>`_, forneçam "
"uma implementação mais rápida de :class:`asyncio.Future`. (Contribuído por "
"Yury Selivanov.)"

#: ../../whatsnew/3.5.rst:851
msgid ""
"New :meth:`loop.get_exception_handler() <asyncio.loop."
"get_exception_handler>` method to get the current exception handler. "
"(Contributed by Yury Selivanov.)"
msgstr ""
"Novo método :meth:`loop.get_exception_handler() <asyncio.loop."
"get_exception_handler>` para obter o gestor de exceções atual. (Contribuído "
"por Yury Selivanov.)"

#: ../../whatsnew/3.5.rst:855
msgid ""
"New :meth:`StreamReader.readuntil() <asyncio.StreamReader.readuntil>` method "
"to read data from the stream until a separator bytes sequence appears. "
"(Contributed by Mark Korenberg.)"
msgstr ""
"Novo método :meth:`StreamReader.readuntil() <asyncio.StreamReader."
"readuntil>` para ler dados do fluxo até que uma sequência de bytes "
"separadora apareça. (Contribuído por Mark Korenberg.)"

#: ../../whatsnew/3.5.rst:860
msgid ""
"The :meth:`loop.create_connection() <asyncio.loop.create_connection>` and :"
"meth:`loop.create_server() <asyncio.loop.create_server>` methods are "
"optimized to avoid calling the system ``getaddrinfo`` function if the "
"address is already resolved. (Contributed by A. Jesse Jiryu Davis.)"
msgstr ""
"Os métodos :meth:`loop.create_connection() <asyncio.loop.create_connection>` "
"e :meth:`loop.create_server() <asyncio.loop.create_server>` estão otimizados "
"para evitar chamar a função do sistema ``getaddrinfo`` se o endereço já "
"estiver resolvido. (Contribuído por A. Jesse Jiryu Davis.)"

#: ../../whatsnew/3.5.rst:866
msgid ""
"The :meth:`loop.sock_connect(sock, address) <asyncio.loop.sock_connect>` no "
"longer requires the *address* to be resolved prior to the call. (Contributed "
"by A. Jesse Jiryu Davis.)"
msgstr ""
"O método :meth:`loop.sock_connect(sock, address) <asyncio.loop."
"sock_connect>` já não exige que o *address* seja resolvido antes da chamada. "
"(Contribuído por A. Jesse Jiryu Davis.)"

#: ../../whatsnew/3.5.rst:872
msgid "bz2"
msgstr "bz2"

#: ../../whatsnew/3.5.rst:874
msgid ""
"The :meth:`BZ2Decompressor.decompress <bz2.BZ2Decompressor.decompress>` "
"method now accepts an optional *max_length* argument to limit the maximum "
"size of decompressed data. (Contributed by Nikolaus Rath in :issue:`15955`.)"
msgstr ""
"O método :meth:`BZ2Decompressor.decompress <bz2.BZ2Decompressor.decompress>` "
"agora aceita um argumento opcional *max_length* para limitar o tamanho "
"máximo dos dados descomprimidos. (Contribuído por Nikolaus Rath em :issue:"
"`15955`.)"

#: ../../whatsnew/3.5.rst:880
msgid "cgi"
msgstr "cgi"

#: ../../whatsnew/3.5.rst:882
msgid ""
"The :class:`!FieldStorage` class now supports the :term:`context manager` "
"protocol.  (Contributed by Berker Peksag in :issue:`20289`.)"
msgstr ""
"A classe :class:`!FieldStorage` agora suporta o protocolo :term:`gestor de "
"contexto`. (Contribuído por Berker Peksag em :issue:`20289`.)"

#: ../../whatsnew/3.5.rst:887
msgid "cmath"
msgstr "cmath"

#: ../../whatsnew/3.5.rst:889
msgid ""
"A new function :func:`~cmath.isclose` provides a way to test for approximate "
"equality.  (Contributed by Chris Barker and Tal Einat in :issue:`24270`.)"
msgstr ""
"Uma nova função :func:`~cmath.isclose` fornece uma forma de testar igualdade "
"aproximada. (Contribuído por Chris Barker e Tal Einat em :issue:`24270`.)"

#: ../../whatsnew/3.5.rst:894
msgid "code"
msgstr "código"

#: ../../whatsnew/3.5.rst:896
msgid ""
"The :func:`InteractiveInterpreter.showtraceback() <code."
"InteractiveInterpreter.showtraceback>` method now prints the full chained "
"traceback, just like the interactive interpreter.  (Contributed by Claudiu "
"Popa in :issue:`17442`.)"
msgstr ""
"O método :func:`InteractiveInterpreter.showtraceback() <code."
"InteractiveInterpreter.showtraceback>` agora imprime o *traceback* encadeado "
"completo, tal como o interpretador interativo. (Contribuído por Claudiu Popa "
"em :issue:`17442`.)"

#: ../../whatsnew/3.5.rst:902
msgid "collections"
msgstr "collections"

#: ../../whatsnew/3.5.rst:906
msgid ""
"The :class:`~collections.OrderedDict` class is now implemented in C, which "
"makes it 4 to 100 times faster.  (Contributed by Eric Snow in :issue:"
"`16991`.)"
msgstr ""
"A classe :class:`~collections.OrderedDict` é agora implementada em C, o que "
"a torna 4 a 100 vezes mais rápida. (Contribuído por Eric Snow em :issue:"
"`16991`.)"

#: ../../whatsnew/3.5.rst:909
msgid ""
":meth:`!OrderedDict.items`, :meth:`!OrderedDict.keys`, and :meth:`!"
"OrderedDict.values` views now support :func:`reversed` iteration. "
"(Contributed by Serhiy Storchaka in :issue:`19505`.)"
msgstr ""
"As vistas :meth:`!OrderedDict.items`, :meth:`!OrderedDict.keys` e :meth:`!"
"OrderedDict.values` agora suportam iteração :func:`reversed`. (Contribuído "
"por Serhiy Storchaka em :issue:`19505`.)"

#: ../../whatsnew/3.5.rst:913
msgid ""
"The :class:`~collections.deque` class now defines :meth:`~collections.deque."
"index`, :meth:`~collections.deque.insert`, and :meth:`~collections.deque."
"copy`, and supports the ``+`` and ``*`` operators. This allows deques to be "
"recognized as a :class:`~collections.abc.MutableSequence` and improves their "
"substitutability for lists. (Contributed by Raymond Hettinger in :issue:"
"`23704`.)"
msgstr ""
"A classe :class:`~collections.deque` agora define :meth:`~collections.deque."
"index`, :meth:`~collections.deque.insert` e :meth:`~collections.deque.copy`, "
"e suporta os operadores ``+`` e ``*``. Isto permite que as *deques* sejam "
"reconhecidas como uma :class:`~collections.abc.MutableSequence` e melhora a "
"sua substituição por listas. (Contribuído por Raymond Hettinger em :issue:"
"`23704`.)"

#: ../../whatsnew/3.5.rst:920
msgid ""
"Docstrings produced by :func:`~collections.namedtuple` can now be updated::"
msgstr ""
"As *docstrings* produzidas por :func:`~collections.namedtuple` agora podem "
"ser atualizadas::"

#: ../../whatsnew/3.5.rst:922
msgid ""
"Point = namedtuple('Point', ['x', 'y'])\n"
"Point.__doc__ += ': Cartesian coordinate'\n"
"Point.x.__doc__ = 'abscissa'\n"
"Point.y.__doc__ = 'ordinate'"
msgstr ""
"Point = namedtuple('Point', ['x', 'y'])\n"
"Point.__doc__ += ': Coordenada cartesiana'\n"
"Point.x.__doc__ = 'abcissa'\n"
"Point.y.__doc__ = 'ordenada'"

#: ../../whatsnew/3.5.rst:927
msgid "(Contributed by Berker Peksag in :issue:`24064`.)"
msgstr "(Contribuído por Berker Peksag em :issue:`24064`.)"

#: ../../whatsnew/3.5.rst:929
msgid ""
"The :class:`~collections.UserString` class now implements the :meth:`~object."
"__getnewargs__`, :meth:`~object.__rmod__`, :meth:`~str.casefold`, :meth:"
"`~str.format_map`, :meth:`~str.isprintable`, and :meth:`~str.maketrans` "
"methods to match the corresponding methods of :class:`str`. (Contributed by "
"Joe Jevnik in :issue:`22189`.)"
msgstr ""
"A classe :class:`~collections.UserString` agora implementa os métodos :meth:"
"`~object.__getnewargs__`, :meth:`~object.__rmod__`, :meth:`~str.casefold`, :"
"meth:`~str.format_map`, :meth:`~str.isprintable` e :meth:`~str.maketrans` "
"para corresponder aos métodos correspondentes de :class:`str`. (Contribuído "
"por Joe Jevnik em :issue:`22189`.)"

#: ../../whatsnew/3.5.rst:937
msgid "collections.abc"
msgstr "collections.abc"

#: ../../whatsnew/3.5.rst:939
msgid ""
"The :meth:`!Sequence.index` method now accepts *start* and *stop* arguments "
"to match the corresponding methods of :class:`tuple`, :class:`list`, etc. "
"(Contributed by Devin Jeanpierre in :issue:`23086`.)"
msgstr ""
"O método :meth:`!Sequence.index` agora aceita argumentos *start* e *stop* "
"para corresponder aos métodos correspondentes de :class:`tuple`, :class:"
"`list`, etc. (Contribuído por Devin Jeanpierre em :issue:`23086`.)"

#: ../../whatsnew/3.5.rst:944
msgid ""
"A new :class:`~collections.abc.Generator` abstract base class. (Contributed "
"by Stefan Behnel in :issue:`24018`.)"
msgstr ""
"Uma nova classe base abstrata :class:`~collections.abc.Generator`. "
"(Contribuído por Stefan Behnel em :issue:`24018`.)"

#: ../../whatsnew/3.5.rst:947
msgid ""
"New :class:`~collections.abc.Awaitable`, :class:`~collections.abc."
"Coroutine`, :class:`~collections.abc.AsyncIterator`, and :class:"
"`~collections.abc.AsyncIterable` abstract base classes. (Contributed by Yury "
"Selivanov in :issue:`24184`.)"
msgstr ""
"Novas classes base abstratas :class:`~collections.abc.Awaitable`, :class:"
"`~collections.abc.Coroutine`, :class:`~collections.abc.AsyncIterator` e :"
"class:`~collections.abc.AsyncIterable`. (Contribuído por Yury Selivanov em :"
"issue:`24184`.)"

#: ../../whatsnew/3.5.rst:952
msgid ""
"For earlier Python versions, a backport of the new ABCs is available in an "
"external :pypi:`PyPI package <backports_abc>`."
msgstr ""
"Para versões anteriores do Python, uma retroportagem das novas ABCs está "
"disponível num pacote externo :pypi:`PyPI <backports_abc>`."

#: ../../whatsnew/3.5.rst:957
msgid "compileall"
msgstr "compileall"

#: ../../whatsnew/3.5.rst:959
msgid ""
"A new :mod:`compileall` option, :samp:`-j {N}`, allows running *N* workers "
"simultaneously to perform parallel bytecode compilation. The :func:"
"`~compileall.compile_dir` function has a corresponding ``workers`` "
"parameter.  (Contributed by Claudiu Popa in :issue:`16104`.)"
msgstr ""
"Uma nova opção :mod:`compileall`, :samp:`-j {N}`, permite executar *N* "
"trabalhadores simultaneamente para realizar compilação paralela de "
"*bytecode*. A função :func:`~compileall.compile_dir` tem um parâmetro "
"correspondente ``workers``. (Contribuído por Claudiu Popa em :issue:`16104`.)"

#: ../../whatsnew/3.5.rst:964
msgid ""
"Another new option, ``-r``, allows controlling the maximum recursion level "
"for subdirectories.  (Contributed by Claudiu Popa in :issue:`19628`.)"
msgstr ""
"Outra nova opção, ``-r``, permite controlar o nível máximo de recursão para "
"subdiretórios. (Contribuído por Claudiu Popa em :issue:`19628`.)"

#: ../../whatsnew/3.5.rst:967
msgid ""
"The ``-q`` command line option can now be specified more than once, in which "
"case all output, including errors, will be suppressed.  The corresponding "
"``quiet`` parameter in :func:`~compileall.compile_dir`, :func:`~compileall."
"compile_file`, and :func:`~compileall.compile_path` can now accept an "
"integer value indicating the level of output suppression. (Contributed by "
"Thomas Kluyver in :issue:`21338`.)"
msgstr ""
"A opção de linha de comandos ``-q`` agora pode ser especificada mais do que "
"uma vez, caso em que toda a saída, incluindo erros, será suprimida. O "
"parâmetro correspondente ``quiet`` em :func:`~compileall.compile_dir`, :func:"
"`~compileall.compile_file` e :func:`~compileall.compile_path` agora pode "
"aceitar um valor inteiro indicando o nível de supressão de saída. "
"(Contribuído por Thomas Kluyver em :issue:`21338`.)"

#: ../../whatsnew/3.5.rst:976
msgid "concurrent.futures"
msgstr "concurrent.futures"

#: ../../whatsnew/3.5.rst:978
msgid ""
"The :meth:`Executor.map() <concurrent.futures.Executor.map>` method now "
"accepts a *chunksize* argument to allow batching of tasks to improve "
"performance when :meth:`~concurrent.futures.ProcessPoolExecutor` is used. "
"(Contributed by Dan O'Reilly in :issue:`11271`.)"
msgstr ""
"O método :meth:`Executor.map() <concurrent.futures.Executor.map>` agora "
"aceita um argumento *chunksize* para permitir o processamento em lote de "
"tarefas e melhorar o desempenho quando :meth:`~concurrent.futures."
"ProcessPoolExecutor` é usado. (Contribuído por Dan O'Reilly em :issue:"
"`11271`.)"

#: ../../whatsnew/3.5.rst:983
msgid ""
"The number of workers in the :class:`~concurrent.futures.ThreadPoolExecutor` "
"constructor is optional now.  The default value is 5 times the number of "
"CPUs. (Contributed by Claudiu Popa in :issue:`21527`.)"
msgstr ""
"O número de trabalhadores no construtor :class:`~concurrent.futures."
"ThreadPoolExecutor` agora é opcional. O valor predefinido é 5 vezes o número "
"de CPUs. (Contribuído por Claudiu Popa em :issue:`21527`.)"

#: ../../whatsnew/3.5.rst:989
msgid "configparser"
msgstr "configparser"

#: ../../whatsnew/3.5.rst:991
msgid ""
":mod:`configparser` now provides a way to customize the conversion of values "
"by specifying a dictionary of converters in the :class:`~configparser."
"ConfigParser` constructor, or by defining them as methods in "
"``ConfigParser`` subclasses.  Converters defined in a parser instance are "
"inherited by its section proxies."
msgstr ""
"O módulo :mod:`configparser` agora fornece uma forma de personalizar a "
"conversão de valores especificando um dicionário de conversores no "
"construtor :class:`~configparser.ConfigParser`, ou definindo-os como métodos "
"em subclasses de ``ConfigParser``. Os conversores definidos numa instância "
"de *parser* são herdados pelos seus proxies de secção."

#: ../../whatsnew/3.5.rst:997
msgid "Example::"
msgstr "Exemplo::"

#: ../../whatsnew/3.5.rst:999
msgid ""
">>> import configparser\n"
">>> conv = {}\n"
">>> conv['list'] = lambda v: [e.strip() for e in v.split() if e.strip()]\n"
">>> cfg = configparser.ConfigParser(converters=conv)\n"
">>> cfg.read_string(\"\"\"\n"
"... [s]\n"
"... list = a b c d e f g\n"
"... \"\"\")\n"
">>> cfg.get('s', 'list')\n"
"'a b c d e f g'\n"
">>> cfg.getlist('s', 'list')\n"
"['a', 'b', 'c', 'd', 'e', 'f', 'g']\n"
">>> section = cfg['s']\n"
">>> section.getlist('list')\n"
"['a', 'b', 'c', 'd', 'e', 'f', 'g']"
msgstr ""
">>> import configparser\n"
">>> conv = {}\n"
">>> conv['list'] = lambda v: [e.strip() for e in v.split() if e.strip()]\n"
">>> cfg = configparser.ConfigParser(converters=conv)\n"
">>> cfg.read_string(\"\"\"\n"
"... [s]\n"
"... list = a b c d e f g\n"
"... \"\"\")\n"
">>> cfg.get('s', 'list')\n"
"'a b c d e f g'\n"
">>> cfg.getlist('s', 'list')\n"
"['a', 'b', 'c', 'd', 'e', 'f', 'g']\n"
">>> section = cfg['s']\n"
">>> section.getlist('list')\n"
"['a', 'b', 'c', 'd', 'e', 'f', 'g']"

#: ../../whatsnew/3.5.rst:1015
msgid "(Contributed by Łukasz Langa in :issue:`18159`.)"
msgstr "(Contribuído por Łukasz Langa em :issue:`18159`.)"

#: ../../whatsnew/3.5.rst:1019
msgid "contextlib"
msgstr "contextlib"

#: ../../whatsnew/3.5.rst:1021
msgid ""
"The new :func:`~contextlib.redirect_stderr` :term:`context manager` (similar "
"to :func:`~contextlib.redirect_stdout`) makes it easier for utility scripts "
"to handle inflexible APIs that write their output to :data:`sys.stderr` and "
"don't provide any options to redirect it::"
msgstr ""
"O novo :term:`gestor de contexto` :func:`~contextlib.redirect_stderr` "
"(semelhante a :func:`~contextlib.redirect_stdout`) facilita a manipulação de "
"APIs inflexíveis que escrevem a sua saída para :data:`sys.stderr` e não "
"fornecem opções para a redirecionar::"

#: ../../whatsnew/3.5.rst:1026
msgid ""
">>> import contextlib, io, logging\n"
">>> f = io.StringIO()\n"
">>> with contextlib.redirect_stderr(f):\n"
"...     logging.warning('warning')\n"
"...\n"
">>> f.getvalue()\n"
"'WARNING:root:warning\\n'"
msgstr ""
">>> import contextlib, io, logging\n"
">>> f = io.StringIO()\n"
">>> with contextlib.redirect_stderr(f):\n"
"...     logging.warning('warning')\n"
"...\n"
">>> f.getvalue()\n"
"'WARNING:root:warning\\n'"

#: ../../whatsnew/3.5.rst:1034
msgid "(Contributed by Berker Peksag in :issue:`22389`.)"
msgstr "(Contribuído por Berker Peksag em :issue:`22389`.)"

#: ../../whatsnew/3.5.rst:1038
msgid "csv"
msgstr "csv"

#: ../../whatsnew/3.5.rst:1040
msgid ""
"The :meth:`~csv.csvwriter.writerow` method now supports arbitrary iterables, "
"not just sequences.  (Contributed by Serhiy Storchaka in :issue:`23171`.)"
msgstr ""
"O método :meth:`~csv.csvwriter.writerow` agora suporta iteráveis "
"arbitrários, não apenas sequências. (Contribuído por Serhiy Storchaka em :"
"issue:`23171`.)"

#: ../../whatsnew/3.5.rst:1045
msgid "curses"
msgstr "curses"

#: ../../whatsnew/3.5.rst:1047
msgid ""
"The new :func:`~curses.update_lines_cols` function updates the :data:"
"`~curses.LINES` and :data:`~curses.COLS` module variables.  This is useful "
"for detecting manual screen resizing.  (Contributed by Arnon Yaari in :issue:"
"`4254`.)"
msgstr ""
"A nova função :func:`~curses.update_lines_cols` atualiza as variáveis do "
"módulo :data:`~curses.LINES` e :data:`~curses.COLS`. Isto é útil para "
"detetar redimensionamento manual do ecrã. (Contribuído por Arnon Yaari em :"
"issue:`4254`.)"

#: ../../whatsnew/3.5.rst:1053
msgid "dbm"
msgstr "dbm"

#: ../../whatsnew/3.5.rst:1055
msgid ""
":func:`dumb.open <dbm.dumb.open>` always creates a new database when the "
"flag has the value ``\"n\"``.  (Contributed by Claudiu Popa in :issue:"
"`18039`.)"
msgstr ""
":func:`dumb.open <dbm.dumb.open>` cria sempre uma nova base de dados quando "
"a flag tem o valor ``\"n\"``. (Contribuído por Claudiu Popa em :issue:"
"`18039`.)"

#: ../../whatsnew/3.5.rst:1060
msgid "difflib"
msgstr "difflib"

#: ../../whatsnew/3.5.rst:1062
msgid ""
"The charset of HTML documents generated by :meth:`HtmlDiff.make_file() "
"<difflib.HtmlDiff.make_file>` can now be customized by using a new *charset* "
"keyword-only argument. The default charset of HTML document changed from "
"``\"ISO-8859-1\"`` to ``\"utf-8\"``. (Contributed by Berker Peksag in :issue:"
"`2052`.)"
msgstr ""
"O conjunto de caracteres dos documentos HTML gerados por :meth:`HtmlDiff."
"make_file() <difflib.HtmlDiff.make_file>` agora pode ser personalizado "
"usando um novo argumento apenas por palavra-chave *charset*. O conjunto de "
"caracteres predefinido do documento HTML mudou de ``\"ISO-8859-1\"`` para "
"``\"utf-8\"``. (Contribuído por Berker Peksag em :issue:`2052`.)"

#: ../../whatsnew/3.5.rst:1069
msgid ""
"The :func:`~difflib.diff_bytes` function can now compare lists of byte "
"strings.  This fixes a regression from Python 2. (Contributed by Terry J. "
"Reedy and Greg Ward in :issue:`17445`.)"
msgstr ""
"A função :func:`~difflib.diff_bytes` agora pode comparar listas de *strings* "
"de bytes. Isto corrige uma regressão do Python 2. (Contribuído por Terry J. "
"Reedy e Greg Ward em :issue:`17445`.)"

#: ../../whatsnew/3.5.rst:1075
msgid "distutils"
msgstr "distutils"

#: ../../whatsnew/3.5.rst:1077
msgid ""
"Both the ``build`` and ``build_ext`` commands now accept a ``-j`` option to "
"enable parallel building of extension modules. (Contributed by Antoine "
"Pitrou in :issue:`5309`.)"
msgstr ""
"Tanto os comandos ``build`` como ``build_ext`` agora aceitam uma opção ``-"
"j`` para ativar a construção paralela de módulos de extensão. (Contribuído "
"por Antoine Pitrou em :issue:`5309`.)"

#: ../../whatsnew/3.5.rst:1081
msgid ""
"The ``distutils`` module now supports ``xz`` compression, and can be enabled "
"by passing ``xztar`` as an argument to ``bdist --format``. (Contributed by "
"Serhiy Storchaka in :issue:`16314`.)"
msgstr ""
"O módulo ``distutils`` agora suporta compressão ``xz`` e pode ser ativada "
"passando ``xztar`` como argumento para ``bdist --format``. (Contribuído por "
"Serhiy Storchaka em :issue:`16314`.)"

#: ../../whatsnew/3.5.rst:1087
msgid "doctest"
msgstr "doctest"

#: ../../whatsnew/3.5.rst:1089
msgid ""
"The :func:`~doctest.DocTestSuite` function returns an empty :class:`unittest."
"TestSuite` if *module* contains no docstrings, instead of raising :exc:"
"`ValueError`.  (Contributed by Glenn Jones in :issue:`15916`.)"
msgstr ""
"A função :func:`~doctest.DocTestSuite` devolve uma :class:`unittest."
"TestSuite` vazia se *module* não contiver *docstrings*, em vez de lançar :"
"exc:`ValueError`. (Contribuído por Glenn Jones em :issue:`15916`.)"

#: ../../whatsnew/3.5.rst:1095
msgid "email"
msgstr "email"

#: ../../whatsnew/3.5.rst:1097
msgid ""
"A new policy option :attr:`Policy.mangle_from_ <email.policy.Policy."
"mangle_from_>` controls whether or not lines that start with ``\"From \"`` "
"in email bodies are prefixed with a ``\">\"`` character by generators.  The "
"default is ``True`` for :attr:`~email.policy.compat32` and ``False`` for all "
"other policies. (Contributed by Milan Oberkirch in :issue:`20098`.)"
msgstr ""
"Uma nova opção de política :attr:`Policy.mangle_from_ <email.policy.Policy."
"mangle_from_>` controla se as linhas que começam com ``\"From \"`` nos "
"corpos de email são prefixadas com um carácter ``\">\"`` pelos geradores. O "
"valor predefinido é ``True`` para :attr:`~email.policy.compat32` e ``False`` "
"para todas as outras políticas. (Contribuído por Milan Oberkirch em :issue:"
"`20098`.)"

#: ../../whatsnew/3.5.rst:1103
msgid ""
"A new :meth:`Message.get_content_disposition() <email.message.Message."
"get_content_disposition>` method provides easy access to a canonical value "
"for the :mailheader:`Content-Disposition` header. (Contributed by Abhilash "
"Raj in :issue:`21083`.)"
msgstr ""
"Um novo método :meth:`Message.get_content_disposition() <email.message."
"Message.get_content_disposition>` fornece acesso fácil a um valor canónico "
"para o cabeçalho :mailheader:`Content-Disposition`. (Contribuído por "
"Abhilash Raj em :issue:`21083`.)"

#: ../../whatsnew/3.5.rst:1109
msgid ""
"A new policy option :attr:`EmailPolicy.utf8 <email.policy.EmailPolicy.utf8>` "
"can be set to ``True`` to encode email headers using the UTF-8 charset "
"instead of using encoded words.  This allows ``Messages`` to be formatted "
"according to :rfc:`6532` and used with an SMTP server that supports the :rfc:"
"`6531` ``SMTPUTF8`` extension.  (Contributed by R. David Murray in :issue:"
"`24211`.)"
msgstr ""
"Uma nova opção de política :attr:`EmailPolicy.utf8 <email.policy.EmailPolicy."
"utf8>` pode ser definida como ``True`` para codificar cabeçalhos de email "
"usando o conjunto de caracteres UTF-8 em vez de usar palavras codificadas. "
"Isto permite que ``Messages`` sejam formatadas de acordo com :rfc:`6532` e "
"usadas com um servidor SMTP que suporta a extensão :rfc:`6531` ``SMTPUTF8``. "
"(Contribuído por R. David Murray em :issue:`24211`.)"

#: ../../whatsnew/3.5.rst:1116
msgid ""
"The :class:`mime.text.MIMEText <email.mime.text.MIMEText>` constructor now "
"accepts a :class:`charset.Charset <email.charset.Charset>` instance. "
"(Contributed by Claude Paroz and Berker Peksag in :issue:`16324`.)"
msgstr ""
"O construtor :class:`mime.text.MIMEText <email.mime.text.MIMEText>` agora "
"aceita uma instância de :class:`charset.Charset <email.charset.Charset>`. "
"(Contribuído por Claude Paroz e Berker Peksag em :issue:`16324`.)"

#: ../../whatsnew/3.5.rst:1122
msgid "enum"
msgstr "enum"

#: ../../whatsnew/3.5.rst:1124
msgid ""
"The :class:`~enum.Enum` callable has a new parameter *start* to specify the "
"initial number of enum values if only *names* are provided::"
msgstr ""
"O chamável :class:`~enum.Enum` tem um novo parâmetro *start* para "
"especificar o número inicial de valores de enumeração se apenas *names* "
"forem fornecidos::"

#: ../../whatsnew/3.5.rst:1127
msgid ""
">>> Animal = enum.Enum('Animal', 'cat dog', start=10)\n"
">>> Animal.cat\n"
"<Animal.cat: 10>\n"
">>> Animal.dog\n"
"<Animal.dog: 11>"
msgstr ""
">>> Animal = enum.Enum('Animal', 'cat dog', start=10)\n"
">>> Animal.cat\n"
"<Animal.cat: 10>\n"
">>> Animal.dog\n"
"<Animal.dog: 11>"

#: ../../whatsnew/3.5.rst:1133
msgid "(Contributed by Ethan Furman in :issue:`21706`.)"
msgstr "(Contribuído por Ethan Furman em :issue:`21706`.)"

#: ../../whatsnew/3.5.rst:1137
msgid "faulthandler"
msgstr "faulthandler"

#: ../../whatsnew/3.5.rst:1139
msgid ""
"The :func:`~faulthandler.enable`, :func:`~faulthandler.register`, :func:"
"`~faulthandler.dump_traceback` and :func:`~faulthandler."
"dump_traceback_later` functions now accept file descriptors in addition to "
"file-like objects. (Contributed by Wei Wu in :issue:`23566`.)"
msgstr ""
"As funções :func:`~faulthandler.enable`, :func:`~faulthandler.register`, :"
"func:`~faulthandler.dump_traceback` e :func:`~faulthandler."
"dump_traceback_later` agora aceitam descritores de ficheiro além de objetos "
"tipo ficheiro. (Contribuído por Wei Wu em :issue:`23566`.)"

#: ../../whatsnew/3.5.rst:1147
msgid "functools"
msgstr "functools"

#: ../../whatsnew/3.5.rst:1151
msgid ""
"Most of the :func:`~functools.lru_cache` machinery is now implemented in C, "
"making it significantly faster.  (Contributed by Matt Joiner, Alexey "
"Kachayev, and Serhiy Storchaka in :issue:`14373`.)"
msgstr ""
"A maior parte da maquinaria de :func:`~functools.lru_cache` é agora "
"implementada em C, tornando-a significativamente mais rápida. (Contribuído "
"por Matt Joiner, Alexey Kachayev e Serhiy Storchaka em :issue:`14373`.)"

#: ../../whatsnew/3.5.rst:1157
msgid "glob"
msgstr "glob"

#: ../../whatsnew/3.5.rst:1159
msgid ""
"The :func:`~glob.iglob` and :func:`~glob.glob` functions now support "
"recursive search in subdirectories, using the ``\"**\"`` pattern. "
"(Contributed by Serhiy Storchaka in :issue:`13968`.)"
msgstr ""
"As funções :func:`~glob.iglob` e :func:`~glob.glob` agora suportam pesquisa "
"recursiva em subdiretórios, usando o padrão ``\"**\"``. (Contribuído por "
"Serhiy Storchaka em :issue:`13968`.)"

#: ../../whatsnew/3.5.rst:1165
msgid "gzip"
msgstr "gzip"

#: ../../whatsnew/3.5.rst:1167
msgid ""
"The *mode* argument of the :class:`~gzip.GzipFile` constructor now accepts "
"``\"x\"`` to request exclusive creation. (Contributed by Tim Heaney in :"
"issue:`19222`.)"
msgstr ""
"O argumento *mode* do construtor :class:`~gzip.GzipFile` agora aceita "
"``\"x\"`` para solicitar criação exclusiva. (Contribuído por Tim Heaney em :"
"issue:`19222`.)"

#: ../../whatsnew/3.5.rst:1173
msgid "heapq"
msgstr "heapq"

#: ../../whatsnew/3.5.rst:1175
msgid ""
"Element comparison in :func:`~heapq.merge` can now be customized by passing "
"a :term:`key function` in a new optional *key* keyword argument, and a new "
"optional *reverse* keyword argument can be used to reverse element "
"comparison::"
msgstr ""
"A comparação de elementos em :func:`~heapq.merge` agora pode ser "
"personalizada passando uma :term:`função-chave` num novo argumento opcional "
"*key*, e um novo argumento opcional *reverse* pode ser usado para inverter a "
"comparação de elementos::"

#: ../../whatsnew/3.5.rst:1180
msgid ""
">>> import heapq\n"
">>> a = ['9', '777', '55555']\n"
">>> b = ['88', '6666']\n"
">>> list(heapq.merge(a, b, key=len))\n"
"['9', '88', '777', '6666', '55555']\n"
">>> list(heapq.merge(reversed(a), reversed(b), key=len, reverse=True))\n"
"['55555', '6666', '777', '88', '9']"
msgstr ""
">>> import heapq\n"
">>> a = ['9', '777', '55555']\n"
">>> b = ['88', '6666']\n"
">>> list(heapq.merge(a, b, key=len))\n"
"['9', '88', '777', '6666', '55555']\n"
">>> list(heapq.merge(reversed(a), reversed(b), key=len, reverse=True))\n"
"['55555', '6666', '777', '88', '9']"

#: ../../whatsnew/3.5.rst:1188
msgid "(Contributed by Raymond Hettinger in :issue:`13742`.)"
msgstr "(Contribuído por Raymond Hettinger em :issue:`13742`.)"

#: ../../whatsnew/3.5.rst:1192
msgid "http"
msgstr "http"

#: ../../whatsnew/3.5.rst:1194
msgid ""
"A new :class:`HTTPStatus <http.HTTPStatus>` enum that defines a set of HTTP "
"status codes, reason phrases and long descriptions written in English. "
"(Contributed by Demian Brecht in :issue:`21793`.)"
msgstr ""
"Uma nova enumeração :class:`HTTPStatus <http.HTTPStatus>` que define um "
"conjunto de códigos de estado HTTP, frases de razão e descrições longas "
"escritas em inglês. (Contribuído por Demian Brecht em :issue:`21793`.)"

#: ../../whatsnew/3.5.rst:1200
msgid "http.client"
msgstr "http.client"

#: ../../whatsnew/3.5.rst:1202
msgid ""
":meth:`HTTPConnection.getresponse() <http.client.HTTPConnection."
"getresponse>` now raises a :exc:`~http.client.RemoteDisconnected` exception "
"when a remote server connection is closed unexpectedly.  Additionally, if a :"
"exc:`ConnectionError` (of which ``RemoteDisconnected`` is a subclass) is "
"raised, the client socket is now closed automatically, and will reconnect on "
"the next request::"
msgstr ""
":meth:`HTTPConnection.getresponse() <http.client.HTTPConnection."
"getresponse>` agora lança uma exceção :exc:`~http.client.RemoteDisconnected` "
"quando uma ligação a um servidor remoto é fechada inesperadamente. Além "
"disso, se for lançada uma :exc:`ConnectionError` (da qual "
"``RemoteDisconnected`` é uma subclasse), o *socket* do cliente é agora "
"fechado automaticamente e reconectará na próxima solicitação::"

#: ../../whatsnew/3.5.rst:1209
msgid ""
"import http.client\n"
"conn = http.client.HTTPConnection('www.python.org')\n"
"for retries in range(3):\n"
"    try:\n"
"        conn.request('GET', '/')\n"
"        resp = conn.getresponse()\n"
"    except http.client.RemoteDisconnected:\n"
"        pass"
msgstr ""
"import http.client\n"
"conn = http.client.HTTPConnection('www.python.org')\n"
"for retries in range(3):\n"
"    try:\n"
"        conn.request('GET', '/')\n"
"        resp = conn.getresponse()\n"
"    except http.client.RemoteDisconnected:\n"
"        pass"

#: ../../whatsnew/3.5.rst:1218
msgid "(Contributed by Martin Panter in :issue:`3566`.)"
msgstr "(Contribuído por Martin Panter em :issue:`3566`.)"

#: ../../whatsnew/3.5.rst:1222
msgid "idlelib and IDLE"
msgstr "idlelib e IDLE"

#: ../../whatsnew/3.5.rst:1224
msgid ""
"Since idlelib implements the IDLE shell and editor and is not intended for "
"import by other programs, it gets improvements with every release.  See :"
"file:`Lib/idlelib/NEWS.txt` for a cumulative list of changes since 3.4.0, as "
"well as changes made in future 3.5.x releases. This file is also available "
"from the IDLE :menuselection:`Help --> About IDLE` dialog."
msgstr ""
"Como o idlelib implementa a *shell* e o editor IDLE e não é destinado a ser "
"importado por outros programas, recebe melhorias em cada lançamento. "
"Consulte :file:`Lib/idlelib/NEWS.txt` para uma lista cumulativa de "
"alterações desde o 3.4.0, bem como alterações feitas em futuras versões 3.5."
"x. Este ficheiro também está disponível a partir do diálogo :menuselection:"
"`Ajuda --> Sobre o IDLE` do IDLE."

#: ../../whatsnew/3.5.rst:1232
msgid "imaplib"
msgstr "imaplib"

#: ../../whatsnew/3.5.rst:1234
msgid ""
"The :class:`~imaplib.IMAP4` class now supports the :term:`context manager` "
"protocol. When used in a :keyword:`with` statement, the IMAP4 ``LOGOUT`` "
"command will be called automatically at the end of the block. (Contributed "
"by Tarek Ziadé and Serhiy Storchaka in :issue:`4972`.)"
msgstr ""
"A classe :class:`~imaplib.IMAP4` agora suporta o protocolo :term:`gestor de "
"contexto`. Quando usada numa instrução :keyword:`with`, o comando IMAP4 "
"``LOGOUT`` será chamado automaticamente no final do bloco. (Contribuído por "
"Tarek Ziadé e Serhiy Storchaka em :issue:`4972`.)"

#: ../../whatsnew/3.5.rst:1239
msgid ""
"The :mod:`imaplib` module now supports :rfc:`5161` (ENABLE Extension) and :"
"rfc:`6855` (UTF-8 Support) via the :meth:`IMAP4.enable() <imaplib.IMAP4."
"enable>` method.  A new :attr:`IMAP4.utf8_enabled <imaplib.IMAP4."
"utf8_enabled>` attribute tracks whether or not :rfc:`6855` support is "
"enabled. (Contributed by Milan Oberkirch, R. David Murray, and Maciej Szulik "
"in :issue:`21800`.)"
msgstr ""
"O módulo :mod:`imaplib` agora suporta :rfc:`5161` (Extensão ENABLE) e :rfc:"
"`6855` (Suporte UTF-8) através do método :meth:`IMAP4.enable() <imaplib."
"IMAP4.enable>`. Um novo atributo :attr:`IMAP4.utf8_enabled <imaplib.IMAP4."
"utf8_enabled>` regista se o suporte :rfc:`6855` está ativado. (Contribuído "
"por Milan Oberkirch, R. David Murray e Maciej Szulik em :issue:`21800`.)"

#: ../../whatsnew/3.5.rst:1246
msgid ""
"The :mod:`imaplib` module now automatically encodes non-ASCII string "
"usernames and passwords using UTF-8, as recommended by the RFCs.  "
"(Contributed by Milan Oberkirch in :issue:`21800`.)"
msgstr ""
"O módulo :mod:`imaplib` agora codifica automaticamente nomes de utilizador e "
"palavras-passe não-ASCII usando UTF-8, como recomendado pelas RFCs. "
"(Contribuído por Milan Oberkirch em :issue:`21800`.)"

#: ../../whatsnew/3.5.rst:1252
msgid "imghdr"
msgstr "imghdr"

#: ../../whatsnew/3.5.rst:1254
msgid ""
"The :func:`!what` function now recognizes the `OpenEXR <https://www.openexr."
"com>`_ format (contributed by Martin Vignali and Claudiu Popa in :issue:"
"`20295`), and the `WebP <https://en.wikipedia.org/wiki/WebP>`_ format "
"(contributed by Fabrice Aneche and Claudiu Popa in :issue:`20197`.)"
msgstr ""
"A função :func:`!what` agora reconhece o formato `OpenEXR <https://www."
"openexr.com>`_ (contribuído por Martin Vignali e Claudiu Popa em :issue:"
"`20295`), e o formato `WebP <https://en.wikipedia.org/wiki/WebP>`_ "
"(contribuído por Fabrice Aneche e Claudiu Popa em :issue:`20197`.)"

#: ../../whatsnew/3.5.rst:1262
msgid "importlib"
msgstr "importlib"

#: ../../whatsnew/3.5.rst:1264
msgid ""
"The :class:`util.LazyLoader <importlib.util.LazyLoader>` class allows for "
"lazy loading of modules in applications where startup time is important. "
"(Contributed by Brett Cannon in :issue:`17621`.)"
msgstr ""
"A classe :class:`util.LazyLoader <importlib.util.LazyLoader>` permite o "
"carregamento preguiçoso de módulos em aplicações onde o tempo de arranque é "
"importante. (Contribuído por Brett Cannon em :issue:`17621`.)"

#: ../../whatsnew/3.5.rst:1268
msgid ""
"The :func:`abc.InspectLoader.source_to_code() <importlib.abc.InspectLoader."
"source_to_code>` method is now a static method.  This makes it easier to "
"initialize a module object with code compiled from a string by running "
"``exec(code, module.__dict__)``. (Contributed by Brett Cannon in :issue:"
"`21156`.)"
msgstr ""
"O método :func:`abc.InspectLoader.source_to_code() <importlib.abc."
"InspectLoader.source_to_code>` é agora um método estático. Isto facilita a "
"inicialização de um objeto de módulo com código compilado a partir de uma "
"*string* executando ``exec(code, module.__dict__)``. (Contribuído por Brett "
"Cannon em :issue:`21156`.)"

#: ../../whatsnew/3.5.rst:1274
msgid ""
"The new :func:`util.module_from_spec() <importlib.util.module_from_spec>` "
"function is now the preferred way to create a new module.  As opposed to "
"creating a :class:`types.ModuleType` instance directly, this new function "
"will set the various import-controlled attributes based on the passed-in "
"spec object.  (Contributed by Brett Cannon in :issue:`20383`.)"
msgstr ""
"A nova função :func:`util.module_from_spec() <importlib.util."
"module_from_spec>` é agora a forma preferida de criar um novo módulo. Em "
"oposição à criação direta de uma instância :class:`types.ModuleType`, esta "
"nova função definirá os vários atributos controlados por importação com base "
"no objeto de especificação passado. (Contribuído por Brett Cannon em :issue:"
"`20383`.)"

#: ../../whatsnew/3.5.rst:1282
msgid "inspect"
msgstr "inspect"

#: ../../whatsnew/3.5.rst:1284
msgid ""
"Both the :class:`~inspect.Signature` and :class:`~inspect.Parameter` classes "
"are now picklable and hashable.  (Contributed by Yury Selivanov in :issue:"
"`20726` and :issue:`20334`.)"
msgstr ""
"Tanto a classe :class:`~inspect.Signature` como a classe :class:`~inspect."
"Parameter` são agora *picklable* e *hashable*. (Contribuído por Yury "
"Selivanov em :issue:`20726` e :issue:`20334`.)"

#: ../../whatsnew/3.5.rst:1288
msgid ""
"A new :meth:`BoundArguments.apply_defaults() <inspect.BoundArguments."
"apply_defaults>` method provides a way to set default values for missing "
"arguments::"
msgstr ""
"Um novo método :meth:`BoundArguments.apply_defaults() <inspect."
"BoundArguments.apply_defaults>` fornece uma forma de definir valores "
"predefinidos para argumentos em falta::"

#: ../../whatsnew/3.5.rst:1292
msgid ""
">>> def foo(a, b='ham', *args): pass\n"
">>> ba = inspect.signature(foo).bind('spam')\n"
">>> ba.apply_defaults()\n"
">>> ba.arguments\n"
"OrderedDict([('a', 'spam'), ('b', 'ham'), ('args', ())])"
msgstr ""
">>> def foo(a, b='ham', *args): pass\n"
">>> ba = inspect.signature(foo).bind('spam')\n"
">>> ba.apply_defaults()\n"
">>> ba.arguments\n"
"OrderedDict([('a', 'spam'), ('b', 'ham'), ('args', ())])"

#: ../../whatsnew/3.5.rst:1298
msgid "(Contributed by Yury Selivanov in :issue:`24190`.)"
msgstr "(Contribuído por Yury Selivanov em :issue:`24190`.)"

#: ../../whatsnew/3.5.rst:1300
msgid ""
"A new class method :meth:`Signature.from_callable() <inspect.Signature."
"from_callable>` makes subclassing of :class:`~inspect.Signature` easier.  "
"(Contributed by Yury Selivanov and Eric Snow in :issue:`17373`.)"
msgstr ""
"Um novo método de classe :meth:`Signature.from_callable() <inspect.Signature."
"from_callable>` facilita a criação de subclasses de :class:`~inspect."
"Signature`. (Contribuído por Yury Selivanov e Eric Snow em :issue:`17373`.)"

#: ../../whatsnew/3.5.rst:1305
msgid ""
"The :func:`~inspect.signature` function now accepts a *follow_wrapped* "
"optional keyword argument, which, when set to ``False``, disables automatic "
"following of ``__wrapped__`` links. (Contributed by Yury Selivanov in :issue:"
"`20691`.)"
msgstr ""
"A função :func:`~inspect.signature` agora aceita um argumento opcional de "
"palavra-chave *follow_wrapped*, que, quando definido para ``False``, "
"desativa o seguimento automático de ligações ``__wrapped__``. (Contribuído "
"por Yury Selivanov em :issue:`20691`.)"

#: ../../whatsnew/3.5.rst:1310
msgid ""
"A set of new functions to inspect :term:`coroutine functions <coroutine "
"function>` and :term:`coroutine objects <coroutine>` has been added: :func:"
"`~inspect.iscoroutine`, :func:`~inspect.iscoroutinefunction`, :func:"
"`~inspect.isawaitable`, :func:`~inspect.getcoroutinelocals`, and :func:"
"`~inspect.getcoroutinestate`. (Contributed by Yury Selivanov in :issue:"
"`24017` and :issue:`24400`.)"
msgstr ""
"Um conjunto de novas funções para inspecionar :term:`funções *coroutine* "
"<coroutine function>` e :term:`objetos *coroutine* <coroutine>` foi "
"adicionado: :func:`~inspect.iscoroutine`, :func:`~inspect."
"iscoroutinefunction`, :func:`~inspect.isawaitable`, :func:`~inspect."
"getcoroutinelocals` e :func:`~inspect.getcoroutinestate`. (Contribuído por "
"Yury Selivanov em :issue:`24017` e :issue:`24400`.)"

#: ../../whatsnew/3.5.rst:1318
msgid ""
"The :func:`~inspect.stack`, :func:`~inspect.trace`, :func:`~inspect."
"getouterframes`, and :func:`~inspect.getinnerframes` functions now return a "
"list of named tuples. (Contributed by Daniel Shahaf in :issue:`16808`.)"
msgstr ""
"As funções :func:`~inspect.stack`, :func:`~inspect.trace`, :func:`~inspect."
"getouterframes` e :func:`~inspect.getinnerframes` agora devolvem uma lista "
"de *tuples* nomeados. (Contribuído por Daniel Shahaf em :issue:`16808`.)"

#: ../../whatsnew/3.5.rst:1325
msgid "io"
msgstr "io"

#: ../../whatsnew/3.5.rst:1327
msgid ""
"A new :meth:`BufferedIOBase.readinto1() <io.BufferedIOBase.readinto1>` "
"method, that uses at most one call to the underlying raw stream's :meth:"
"`RawIOBase.read() <io.RawIOBase.read>` or :meth:`RawIOBase.readinto() <io."
"RawIOBase.readinto>` methods. (Contributed by Nikolaus Rath in :issue:"
"`20578`.)"
msgstr ""
"Um novo método :meth:`BufferedIOBase.readinto1() <io.BufferedIOBase."
"readinto1>`, que usa no máximo uma chamada aos métodos :meth:`RawIOBase."
"read() <io.RawIOBase.read>` ou :meth:`RawIOBase.readinto() <io.RawIOBase."
"readinto>` do fluxo bruto subjacente. (Contribuído por Nikolaus Rath em :"
"issue:`20578`.)"

#: ../../whatsnew/3.5.rst:1335
msgid "ipaddress"
msgstr "ipaddress"

#: ../../whatsnew/3.5.rst:1337
msgid ""
"Both the :class:`~ipaddress.IPv4Network` and :class:`~ipaddress.IPv6Network` "
"classes now accept an ``(address, netmask)`` tuple argument, so as to easily "
"construct network objects from existing addresses::"
msgstr ""
"Tanto a classe :class:`~ipaddress.IPv4Network` como a classe :class:"
"`~ipaddress.IPv6Network` agora aceitam um argumento de tuplo ``(address, "
"netmask)``, de forma a construir facilmente objetos de rede a partir de "
"endereços existentes::"

#: ../../whatsnew/3.5.rst:1341
msgid ""
">>> import ipaddress\n"
">>> ipaddress.IPv4Network(('127.0.0.0', 8))\n"
"IPv4Network('127.0.0.0/8')\n"
">>> ipaddress.IPv4Network(('127.0.0.0', '255.0.0.0'))\n"
"IPv4Network('127.0.0.0/8')"
msgstr ""
">>> import ipaddress\n"
">>> ipaddress.IPv4Network(('127.0.0.0', 8))\n"
"IPv4Network('127.0.0.0/8')\n"
">>> ipaddress.IPv4Network(('127.0.0.0', '255.0.0.0'))\n"
"IPv4Network('127.0.0.0/8')"

#: ../../whatsnew/3.5.rst:1347
msgid "(Contributed by Peter Moody and Antoine Pitrou in :issue:`16531`.)"
msgstr "(Contribuído por Peter Moody e Antoine Pitrou em :issue:`16531`.)"

#: ../../whatsnew/3.5.rst:1349
msgid ""
"A new :attr:`~ipaddress.IPv4Address.reverse_pointer` attribute for the :"
"class:`~ipaddress.IPv4Address` and :class:`~ipaddress.IPv6Address` classes "
"returns the name of the reverse DNS PTR record::"
msgstr ""
"Um novo atributo :attr:`~ipaddress.IPv4Address.reverse_pointer` para as "
"classes :class:`~ipaddress.IPv4Address` e :class:`~ipaddress.IPv6Address` "
"devolve o nome do registo PTR de DNS reverso::"

#: ../../whatsnew/3.5.rst:1353
msgid ""
">>> import ipaddress\n"
">>> addr = ipaddress.IPv4Address('127.0.0.1')\n"
">>> addr.reverse_pointer\n"
"'1.0.0.127.in-addr.arpa'\n"
">>> addr6 = ipaddress.IPv6Address('::1')\n"
">>> addr6.reverse_pointer\n"
"'1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.ip6.arpa'"
msgstr ""
">>> import ipaddress\n"
">>> addr = ipaddress.IPv4Address('127.0.0.1')\n"
">>> addr.reverse_pointer\n"
"'1.0.0.127.in-addr.arpa'\n"
">>> addr6 = ipaddress.IPv6Address('::1')\n"
">>> addr6.reverse_pointer\n"
"'1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.ip6.arpa'"

#: ../../whatsnew/3.5.rst:1361
msgid "(Contributed by Leon Weber in :issue:`20480`.)"
msgstr "(Contribuído por Leon Weber em :issue:`20480`.)"

#: ../../whatsnew/3.5.rst:1365
msgid "json"
msgstr "json"

#: ../../whatsnew/3.5.rst:1367
msgid ""
"The :mod:`json.tool` command line interface now preserves the order of keys "
"in JSON objects passed in input.  The new ``--sort-keys`` option can be used "
"to sort the keys alphabetically. (Contributed by Berker Peksag in :issue:"
"`21650`.)"
msgstr ""
"A interface de linha de comandos :mod:`json.tool` agora preserva a ordem das "
"chaves em objetos JSON passados como entrada. A nova opção ``--sort-keys`` "
"pode ser usada para ordenar as chaves alfabéticamente. (Contribuído por "
"Berker Peksag em :issue:`21650`.)"

#: ../../whatsnew/3.5.rst:1372
msgid ""
"JSON decoder now raises :exc:`~json.JSONDecodeError` instead of :exc:"
"`ValueError` to provide better context information about the error. "
"(Contributed by Serhiy Storchaka in :issue:`19361`.)"
msgstr ""
"O descodificador JSON agora lança :exc:`~json.JSONDecodeError` em vez de :"
"exc:`ValueError` para fornecer melhor informação de contexto sobre o erro. "
"(Contribuído por Serhiy Storchaka em :issue:`19361`.)"

#: ../../whatsnew/3.5.rst:1378
msgid "linecache"
msgstr "linecache"

#: ../../whatsnew/3.5.rst:1380
msgid ""
"A new :func:`~linecache.lazycache` function can be used to capture "
"information about a non-file-based module to permit getting its lines later "
"via :func:`~linecache.getline`. This avoids doing I/O until a line is "
"actually needed, without having to carry the module globals around "
"indefinitely. (Contributed by Robert Collins in :issue:`17911`.)"
msgstr ""
"Uma nova função :func:`~linecache.lazycache` pode ser usada para capturar "
"informação sobre um módulo não baseado em ficheiros para permitir obter as "
"suas linhas mais tarde através de :func:`~linecache.getline`. Isto evita "
"fazer E/S até que uma linha seja realmente necessária, sem ter de "
"transportar os globais do módulo indefinidamente. (Contribuído por Robert "
"Collins em :issue:`17911`.)"

#: ../../whatsnew/3.5.rst:1388
msgid "locale"
msgstr "locale"

#: ../../whatsnew/3.5.rst:1390
msgid ""
"A new :func:`~locale.delocalize` function can be used to convert a string "
"into a normalized number string, taking the ``LC_NUMERIC`` settings into "
"account::"
msgstr ""
"Uma nova função :func:`~locale.delocalize` pode ser usada para converter uma "
"*string* numa *string* de número normalizada, tendo em conta as definições "
"``LC_NUMERIC``::"

#: ../../whatsnew/3.5.rst:1393
msgid ""
">>> import locale\n"
">>> locale.setlocale(locale.LC_NUMERIC, 'de_DE.UTF-8')\n"
"'de_DE.UTF-8'\n"
">>> locale.delocalize('1.234,56')\n"
"'1234.56'\n"
">>> locale.setlocale(locale.LC_NUMERIC, 'en_US.UTF-8')\n"
"'en_US.UTF-8'\n"
">>> locale.delocalize('1,234.56')\n"
"'1234.56'"
msgstr ""
">>> import locale\n"
">>> locale.setlocale(locale.LC_NUMERIC, 'de_DE.UTF-8')\n"
"'de_DE.UTF-8'\n"
">>> locale.delocalize('1.234,56')\n"
"'1234.56'\n"
">>> locale.setlocale(locale.LC_NUMERIC, 'en_US.UTF-8')\n"
"'en_US.UTF-8'\n"
">>> locale.delocalize('1,234.56')\n"
"'1234.56'"

#: ../../whatsnew/3.5.rst:1403
msgid "(Contributed by Cédric Krier in :issue:`13918`.)"
msgstr "(Contribuído por Cédric Krier em :issue:`13918`.)"

#: ../../whatsnew/3.5.rst:1407
msgid "logging"
msgstr "logging"

#: ../../whatsnew/3.5.rst:1409
msgid ""
"All logging methods (:class:`~logging.Logger` :meth:`~logging.Logger.log`, :"
"meth:`~logging.Logger.exception`, :meth:`~logging.Logger.critical`, :meth:"
"`~logging.Logger.debug`, etc.), now accept exception instances as an "
"*exc_info* argument, in addition to boolean values and exception tuples::"
msgstr ""
"Todos os métodos de registo (:class:`~logging.Logger` :meth:`~logging.Logger."
"log`, :meth:`~logging.Logger.exception`, :meth:`~logging.Logger.critical`, :"
"meth:`~logging.Logger.debug`, etc.), agora aceitam instâncias de exceção "
"como um argumento *exc_info*, além de valores booleanos e tuplos de exceção::"

#: ../../whatsnew/3.5.rst:1415
msgid ""
">>> import logging\n"
">>> try:\n"
"...     1/0\n"
"... except ZeroDivisionError as ex:\n"
"...     logging.error('exception', exc_info=ex)\n"
"ERROR:root:exception"
msgstr ""
">>> import logging\n"
">>> try:\n"
"...     1/0\n"
"... except ZeroDivisionError as ex:\n"
"...     logging.error('exceção', exc_info=ex)\n"
"ERROR:root:exceção"

#: ../../whatsnew/3.5.rst:1422
msgid "(Contributed by Yury Selivanov in :issue:`20537`.)"
msgstr "(Contribuído por Yury Selivanov em :issue:`20537`.)"

#: ../../whatsnew/3.5.rst:1424
msgid ""
"The :class:`handlers.HTTPHandler <logging.handlers.HTTPHandler>` class now "
"accepts an optional :class:`ssl.SSLContext` instance to configure SSL "
"settings used in an HTTP connection. (Contributed by Alex Gaynor in :issue:"
"`22788`.)"
msgstr ""
"A classe :class:`handlers.HTTPHandler <logging.handlers.HTTPHandler>` agora "
"aceita uma instância opcional :class:`ssl.SSLContext` para configurar as "
"definições SSL usadas numa ligação HTTP. (Contribuído por Alex Gaynor em :"
"issue:`22788`.)"

#: ../../whatsnew/3.5.rst:1429
msgid ""
"The :class:`handlers.QueueListener <logging.handlers.QueueListener>` class "
"now takes a *respect_handler_level* keyword argument which, if set to "
"``True``, will pass messages to handlers taking handler levels into account. "
"(Contributed by Vinay Sajip.)"
msgstr ""
"A classe :class:`handlers.QueueListener <logging.handlers.QueueListener>` "
"agora aceita um argumento de palavra-chave *respect_handler_level* que, se "
"definido para ``True``, passará mensagens para os gestores tendo em conta os "
"níveis dos gestores. (Contribuído por Vinay Sajip.)"

#: ../../whatsnew/3.5.rst:1436
msgid "lzma"
msgstr "lzma"

#: ../../whatsnew/3.5.rst:1438
msgid ""
"The :meth:`LZMADecompressor.decompress() <lzma.LZMADecompressor.decompress>` "
"method now accepts an optional *max_length* argument to limit the maximum "
"size of decompressed data. (Contributed by Martin Panter in :issue:`15955`.)"
msgstr ""
"O método :meth:`LZMADecompressor.decompress() <lzma.LZMADecompressor."
"decompress>` agora aceita um argumento opcional *max_length* para limitar o "
"tamanho máximo dos dados descomprimidos. (Contribuído por Martin Panter em :"
"issue:`15955`.)"

#: ../../whatsnew/3.5.rst:1445
msgid "math"
msgstr "math"

#: ../../whatsnew/3.5.rst:1447
msgid ""
"Two new constants have been added to the :mod:`math` module: :data:`~math."
"inf` and :data:`~math.nan`.  (Contributed by Mark Dickinson in :issue:"
"`23185`.)"
msgstr ""
"Duas novas constantes foram adicionadas ao módulo :mod:`math`: :data:`~math."
"inf` e :data:`~math.nan`. (Contribuído por Mark Dickinson em :issue:`23185`.)"

#: ../../whatsnew/3.5.rst:1450
msgid ""
"A new function :func:`~math.isclose` provides a way to test for approximate "
"equality. (Contributed by Chris Barker and Tal Einat in :issue:`24270`.)"
msgstr ""
"Uma nova função :func:`~math.isclose` fornece uma forma de testar igualdade "
"aproximada. (Contribuído por Chris Barker e Tal Einat em :issue:`24270`.)"

#: ../../whatsnew/3.5.rst:1453
msgid ""
"A new :func:`~math.gcd` function has been added.  The :func:`!fractions.gcd` "
"function is now deprecated. (Contributed by Mark Dickinson and Serhiy "
"Storchaka in :issue:`22486`.)"
msgstr ""
"Uma nova função :func:`~math.gcd` foi adicionada. A função :func:`!fractions."
"gcd` agora está obsoleta. (Contribuído por Mark Dickinson e Serhiy Storchaka "
"em :issue:`22486`.)"

#: ../../whatsnew/3.5.rst:1459
msgid "multiprocessing"
msgstr "multiprocessamento"

#: ../../whatsnew/3.5.rst:1461
msgid ""
":func:`sharedctypes.synchronized() <multiprocessing.sharedctypes."
"synchronized>` objects now support the :term:`context manager` protocol. "
"(Contributed by Charles-François Natali in :issue:`21565`.)"
msgstr ""
"Os objetos :func:`sharedctypes.synchronized() <multiprocessing.sharedctypes."
"synchronized>` agora suportam o protocolo :term:`gestor de contexto`. "
"(Contribuído por Charles-François Natali em :issue:`21565`.)"

#: ../../whatsnew/3.5.rst:1467
msgid "operator"
msgstr "operator"

#: ../../whatsnew/3.5.rst:1469
msgid ""
":func:`~operator.attrgetter`, :func:`~operator.itemgetter`, and :func:"
"`~operator.methodcaller` objects now support pickling. (Contributed by Josh "
"Rosenberg and Serhiy Storchaka in :issue:`22955`.)"
msgstr ""
"Os objetos :func:`~operator.attrgetter`, :func:`~operator.itemgetter` e :"
"func:`~operator.methodcaller` agora suportam *pickling*. (Contribuído por "
"Josh Rosenberg e Serhiy Storchaka em :issue:`22955`.)"

#: ../../whatsnew/3.5.rst:1473
msgid ""
"New :func:`~operator.matmul` and :func:`~operator.imatmul` functions to "
"perform matrix multiplication. (Contributed by Benjamin Peterson in :issue:"
"`21176`.)"
msgstr ""
"Novas funções :func:`~operator.matmul` e :func:`~operator.imatmul` para "
"realizar multiplicação de matrizes. (Contribuído por Benjamin Peterson em :"
"issue:`21176`.)"

#: ../../whatsnew/3.5.rst:1479
msgid "os"
msgstr "os"

#: ../../whatsnew/3.5.rst:1481
msgid ""
"The new :func:`~os.scandir` function returning an iterator of :class:`~os."
"DirEntry` objects has been added.  If possible, :func:`~os.scandir` extracts "
"file attributes while scanning a directory, removing the need to perform "
"subsequent system calls to determine file type or attributes, which may "
"significantly improve performance.  (Contributed by Ben Hoyt with the help "
"of Victor Stinner in :issue:`22524`.)"
msgstr ""
"A nova função :func:`~os.scandir`, que devolve um iterador de objetos :class:"
"`~os.DirEntry`, foi adicionada. Se possível, :func:`~os.scandir` extrai "
"atributos de ficheiros enquanto percorre um diretório, eliminando a "
"necessidade de realizar chamadas subsequentes ao sistema para determinar o "
"tipo de ficheiro ou atributos, o que pode melhorar significativamente o "
"desempenho. (Contribuído por Ben Hoyt com a ajuda de Victor Stinner em :"
"issue:`22524`.)"

#: ../../whatsnew/3.5.rst:1488
msgid ""
"On Windows, a new :attr:`stat_result.st_file_attributes <os.stat_result."
"st_file_attributes>` attribute is now available.  It corresponds to the "
"``dwFileAttributes`` member of the ``BY_HANDLE_FILE_INFORMATION`` structure "
"returned by ``GetFileInformationByHandle()``.  (Contributed by Ben Hoyt in :"
"issue:`21719`.)"
msgstr ""
"No Windows, um novo atributo :attr:`stat_result.st_file_attributes <os."
"stat_result.st_file_attributes>` está agora disponível. Corresponde ao "
"membro ``dwFileAttributes`` da estrutura ``BY_HANDLE_FILE_INFORMATION`` "
"devolvida por ``GetFileInformationByHandle()``. (Contribuído por Ben Hoyt "
"em :issue:`21719`.)"

#: ../../whatsnew/3.5.rst:1494
msgid ""
"The :func:`~os.urandom` function now uses the ``getrandom()`` syscall on "
"Linux 3.17 or newer, and ``getentropy()`` on OpenBSD 5.6 and newer, removing "
"the need to use ``/dev/urandom`` and avoiding failures due to potential file "
"descriptor exhaustion.  (Contributed by Victor Stinner in :issue:`22181`.)"
msgstr ""
"A função :func:`~os.urandom` agora usa a chamada de sistema ``getrandom()`` "
"no Linux 3.17 ou mais recente, e ``getentropy()`` no OpenBSD 5.6 e mais "
"recente, eliminando a necessidade de usar ``/dev/urandom`` e evitando falhas "
"devido à potencial exaustão de descritores de ficheiro. (Contribuído por "
"Victor Stinner em :issue:`22181`.)"

#: ../../whatsnew/3.5.rst:1499
msgid ""
"New :func:`~os.get_blocking` and :func:`~os.set_blocking` functions allow "
"getting and setting a file descriptor's blocking mode (:const:`~os."
"O_NONBLOCK`.) (Contributed by Victor Stinner in :issue:`22054`.)"
msgstr ""
"Novas funções :func:`~os.get_blocking` e :func:`~os.set_blocking` permitem "
"obter e definir o modo de bloqueio de um descritor de ficheiro (:const:`~os."
"O_NONBLOCK`.) (Contribuído por Victor Stinner em :issue:`22054`.)"

#: ../../whatsnew/3.5.rst:1503
msgid ""
"The :func:`~os.truncate` and :func:`~os.ftruncate` functions are now "
"supported on Windows.  (Contributed by Steve Dower in :issue:`23668`.)"
msgstr ""
"As funções :func:`~os.truncate` e :func:`~os.ftruncate` são agora suportadas "
"no Windows. (Contribuído por Steve Dower em :issue:`23668`.)"

#: ../../whatsnew/3.5.rst:1506
msgid ""
"There is a new :func:`os.path.commonpath` function returning the longest "
"common sub-path of each passed pathname.  Unlike the :func:`os.path."
"commonprefix` function, it always returns a valid path::"
msgstr ""
"Existe uma nova função :func:`os.path.commonpath` que devolve o caminho "
"subcomum mais longo de cada caminho passado. Ao contrário da função :func:"
"`os.path.commonprefix`, sempre devolve um caminho válido::"

#: ../../whatsnew/3.5.rst:1511
msgid ""
">>> os.path.commonprefix(['/usr/lib', '/usr/local/lib'])\n"
"'/usr/l'\n"
"\n"
">>> os.path.commonpath(['/usr/lib', '/usr/local/lib'])\n"
"'/usr'"
msgstr ""
">>> os.path.commonprefix(['/usr/lib', '/usr/local/lib'])\n"
"'/usr/l'\n"
"\n"
">>> os.path.commonpath(['/usr/lib', '/usr/local/lib'])\n"
"'/usr'"

#: ../../whatsnew/3.5.rst:1517
msgid "(Contributed by Rafik Draoui and Serhiy Storchaka in :issue:`10395`.)"
msgstr "(Contribuído por Rafik Draoui e Serhiy Storchaka em :issue:`10395`.)"

#: ../../whatsnew/3.5.rst:1521
msgid "pathlib"
msgstr "pathlib"

#: ../../whatsnew/3.5.rst:1523
msgid ""
"The new :meth:`Path.samefile() <pathlib.Path.samefile>` method can be used "
"to check whether the path points to the same file as another path, which can "
"be either another :class:`~pathlib.Path` object, or a string::"
msgstr ""
"O novo método :meth:`Path.samefile() <pathlib.Path.samefile>` pode ser usado "
"para verificar se o caminho aponta para o mesmo ficheiro que outro caminho, "
"que pode ser outro objeto :class:`~pathlib.Path` ou uma *string*::"

#: ../../whatsnew/3.5.rst:1527
msgid ""
">>> import pathlib\n"
">>> p1 = pathlib.Path('/etc/hosts')\n"
">>> p2 = pathlib.Path('/etc/../etc/hosts')\n"
">>> p1.samefile(p2)\n"
"True"
msgstr ""
">>> import pathlib\n"
">>> p1 = pathlib.Path('/etc/hosts')\n"
">>> p2 = pathlib.Path('/etc/../etc/hosts')\n"
">>> p1.samefile(p2)\n"
"True"

#: ../../whatsnew/3.5.rst:1533
msgid "(Contributed by Vajrasky Kok and Antoine Pitrou in :issue:`19775`.)"
msgstr "(Contribuído por Vajrasky Kok e Antoine Pitrou em :issue:`19775`.)"

#: ../../whatsnew/3.5.rst:1535
msgid ""
"The :meth:`Path.mkdir() <pathlib.Path.mkdir>` method now accepts a new "
"optional *exist_ok* argument to match ``mkdir -p`` and :func:`os.makedirs` "
"functionality.  (Contributed by Berker Peksag in :issue:`21539`.)"
msgstr ""
"O método :meth:`Path.mkdir() <pathlib.Path.mkdir>` agora aceita um novo "
"argumento opcional *exist_ok* para corresponder à funcionalidade de ``mkdir -"
"p`` e :func:`os.makedirs`. (Contribuído por Berker Peksag em :issue:`21539`.)"

#: ../../whatsnew/3.5.rst:1539
msgid ""
"There is a new :meth:`Path.expanduser() <pathlib.Path.expanduser>` method to "
"expand ``~`` and ``~user`` prefixes.  (Contributed by Serhiy Storchaka and "
"Claudiu Popa in :issue:`19776`.)"
msgstr ""
"Existe um novo método :meth:`Path.expanduser() <pathlib.Path.expanduser>` "
"para expandir prefixos ``~`` e ``~user``. (Contribuído por Serhiy Storchaka "
"e Claudiu Popa em :issue:`19776`.)"

#: ../../whatsnew/3.5.rst:1543
msgid ""
"A new :meth:`Path.home() <pathlib.Path.home>` class method can be used to "
"get a :class:`~pathlib.Path` instance representing the user’s home "
"directory. (Contributed by Victor Salgado and Mayank Tripathi in :issue:"
"`19777`.)"
msgstr ""
"Um novo método de classe :meth:`Path.home() <pathlib.Path.home>` pode ser "
"usado para obter uma instância :class:`~pathlib.Path` que representa o "
"diretório *home* do utilizador. (Contribuído por Victor Salgado e Mayank "
"Tripathi em :issue:`19777`.)"

#: ../../whatsnew/3.5.rst:1548
msgid ""
"New :meth:`Path.write_text() <pathlib.Path.write_text>`, :meth:`Path."
"read_text() <pathlib.Path.read_text>`, :meth:`Path.write_bytes() <pathlib."
"Path.write_bytes>`, :meth:`Path.read_bytes() <pathlib.Path.read_bytes>` "
"methods to simplify read/write operations on files."
msgstr ""
"Novos métodos :meth:`Path.write_text() <pathlib.Path.write_text>`, :meth:"
"`Path.read_text() <pathlib.Path.read_text>`, :meth:`Path.write_bytes() "
"<pathlib.Path.write_bytes>`, :meth:`Path.read_bytes() <pathlib.Path."
"read_bytes>` para simplificar operações de leitura/escrita em ficheiros."

#: ../../whatsnew/3.5.rst:1554
msgid ""
"The following code snippet will create or rewrite existing file ``~/"
"spam42``::"
msgstr ""
"O seguinte trecho de código criará ou reescreverá o ficheiro existente ``~/"
"spam42``::"

#: ../../whatsnew/3.5.rst:1557
msgid ""
">>> import pathlib\n"
">>> p = pathlib.Path('~/spam42')\n"
">>> p.expanduser().write_text('ham')\n"
"3"
msgstr ""
">>> import pathlib\n"
">>> p = pathlib.Path('~/spam42')\n"
">>> p.expanduser().write_text('ham')\n"
"3"

#: ../../whatsnew/3.5.rst:1562
msgid "(Contributed by Christopher Welborn in :issue:`20218`.)"
msgstr "(Contribuído por Christopher Welborn em :issue:`20218`.)"

#: ../../whatsnew/3.5.rst:1566
msgid "pickle"
msgstr "pickle"

#: ../../whatsnew/3.5.rst:1568
msgid ""
"Nested objects, such as unbound methods or nested classes, can now be "
"pickled using :ref:`pickle protocols <pickle-protocols>` older than protocol "
"version 4. Protocol version 4 already supports these cases.  (Contributed by "
"Serhiy Storchaka in :issue:`23611`.)"
msgstr ""
"Objetos aninhados, como métodos não ligados ou classes aninhadas, agora "
"podem ser serializados usando :ref:`protocolos pickle <pickle-protocols>` "
"anteriores à versão 4 do protocolo. A versão 4 do protocolo já suporta estes "
"casos. (Contribuído por Serhiy Storchaka em :issue:`23611`.)"

#: ../../whatsnew/3.5.rst:1575
msgid "poplib"
msgstr "poplib"

#: ../../whatsnew/3.5.rst:1577
msgid ""
"A new :meth:`POP3.utf8() <poplib.POP3.utf8>` command enables :rfc:`6856` "
"(Internationalized Email) support, if a POP server supports it. (Contributed "
"by Milan OberKirch in :issue:`21804`.)"
msgstr ""
"Um novo comando :meth:`POP3.utf8() <poplib.POP3.utf8>` ativa o suporte para :"
"rfc:`6856` (Email Internacionalizado), se um servidor POP o suportar. "
"(Contribuído por Milan OberKirch em :issue:`21804`.)"

#: ../../whatsnew/3.5.rst:1583
msgid "re"
msgstr "re"

#: ../../whatsnew/3.5.rst:1585
msgid ""
"References and conditional references to groups with fixed length are now "
"allowed in lookbehind assertions::"
msgstr ""
"Referências e referências condicionais a grupos com comprimento fixo são "
"agora permitidas em afirmações de *lookbehind*::"

#: ../../whatsnew/3.5.rst:1588
msgid ""
">>> import re\n"
">>> pat = re.compile(r'(a|b).(?<=\\1)c')\n"
">>> pat.match('aac')\n"
"<_sre.SRE_Match object; span=(0, 3), match='aac'>\n"
">>> pat.match('bbc')\n"
"<_sre.SRE_Match object; span=(0, 3), match='bbc'>"
msgstr ""
">>> import re\n"
">>> pat = re.compile(r'(a|b).(?<=\\1)c')\n"
">>> pat.match('aac')\n"
"<_sre.SRE_Match object; span=(0, 3), match='aac'>\n"
">>> pat.match('bbc')\n"
"<_sre.SRE_Match object; span=(0, 3), match='bbc'>"

#: ../../whatsnew/3.5.rst:1595
msgid "(Contributed by Serhiy Storchaka in :issue:`9179`.)"
msgstr "(Contribuído por Serhiy Storchaka em :issue:`9179`.)"

#: ../../whatsnew/3.5.rst:1597
msgid ""
"The number of capturing groups in regular expressions is no longer limited "
"to 100.  (Contributed by Serhiy Storchaka in :issue:`22437`.)"
msgstr ""
"O número de grupos de captura em expressões regulares já não está limitado a "
"100. (Contribuído por Serhiy Storchaka em :issue:`22437`.)"

#: ../../whatsnew/3.5.rst:1600
msgid ""
"The :func:`~re.sub` and :func:`~re.subn` functions now replace unmatched "
"groups with empty strings instead of raising an exception. (Contributed by "
"Serhiy Storchaka in :issue:`1519638`.)"
msgstr ""
"As funções :func:`~re.sub` e :func:`~re.subn` agora substituem grupos não "
"correspondidos por *strings* vazias em vez de lançar uma exceção. "
"(Contribuído por Serhiy Storchaka em :issue:`1519638`.)"

#: ../../whatsnew/3.5.rst:1604
msgid ""
"The :class:`re.error <re.PatternError>` exceptions have new attributes, :"
"attr:`~re.PatternError.msg`, :attr:`~re.PatternError.pattern`, :attr:`~re."
"PatternError.pos`, :attr:`~re.PatternError.lineno`, and :attr:`~re."
"PatternError.colno`, that provide better context information about the "
"error::"
msgstr ""
"As exceções :class:`re.error <re.PatternError>` têm novos atributos, :attr:"
"`~re.PatternError.msg`, :attr:`~re.PatternError.pattern`, :attr:`~re."
"PatternError.pos`, :attr:`~re.PatternError.lineno` e :attr:`~re.PatternError."
"colno`, que fornecem melhor informação de contexto sobre o erro::"

#: ../../whatsnew/3.5.rst:1610
msgid ""
">>> re.compile(\"\"\"\n"
"...     (?x)\n"
"...     .++\n"
"... \"\"\")\n"
"Traceback (most recent call last):\n"
"   ...\n"
"sre_constants.error: multiple repeat at position 16 (line 3, column 7)"
msgstr ""
">>> re.compile(\"\"\"\n"
"...     (?x)\n"
"...     .++\n"
"... \"\"\")\n"
"Traceback (most recent call last):\n"
"   ...\n"
"sre_constants.error: multiple repeat at position 16 (line 3, column 7)"

#: ../../whatsnew/3.5.rst:1618
msgid "(Contributed by Serhiy Storchaka in :issue:`22578`.)"
msgstr "(Contribuído por Serhiy Storchaka em :issue:`22578`.)"

#: ../../whatsnew/3.5.rst:1622
msgid "readline"
msgstr "readline"

#: ../../whatsnew/3.5.rst:1624
msgid ""
"A new :func:`~readline.append_history_file` function can be used to append "
"the specified number of trailing elements in history to the given file. "
"(Contributed by Bruno Cauet in :issue:`22940`.)"
msgstr ""
"Uma nova função :func:`~readline.append_history_file` pode ser usada para "
"anexar o número especificado de elementos finais no histórico ao ficheiro "
"dado. (Contribuído por Bruno Cauet em :issue:`22940`.)"

#: ../../whatsnew/3.5.rst:1630
msgid "selectors"
msgstr "selectors"

#: ../../whatsnew/3.5.rst:1632
msgid ""
"The new :class:`~selectors.DevpollSelector` supports efficient ``/dev/poll`` "
"polling on Solaris. (Contributed by Giampaolo Rodola' in :issue:`18931`.)"
msgstr ""
"O novo :class:`~selectors.DevpollSelector` suporta sondagem eficiente de ``/"
"dev/poll`` no Solaris. (Contribuído por Giampaolo Rodola' em :issue:`18931`.)"

#: ../../whatsnew/3.5.rst:1638
msgid "shutil"
msgstr "shutil"

#: ../../whatsnew/3.5.rst:1640
msgid ""
"The :func:`~shutil.move` function now accepts a *copy_function* argument, "
"allowing, for example, the :func:`~shutil.copy` function to be used instead "
"of the default :func:`~shutil.copy2` if there is a need to ignore file "
"metadata when moving. (Contributed by Claudiu Popa in :issue:`19840`.)"
msgstr ""
"A função :func:`~shutil.move` agora aceita um argumento *copy_function*, "
"permitindo, por exemplo, que a função :func:`~shutil.copy` seja usada em vez "
"da função predefinida :func:`~shutil.copy2` se houver necessidade de ignorar "
"os metadados do ficheiro ao mover. (Contribuído por Claudiu Popa em :issue:"
"`19840`.)"

#: ../../whatsnew/3.5.rst:1646
msgid ""
"The :func:`~shutil.make_archive` function now supports the *xztar* format. "
"(Contributed by Serhiy Storchaka in :issue:`5411`.)"
msgstr ""
"A função :func:`~shutil.make_archive` agora suporta o formato *xztar*. "
"(Contribuído por Serhiy Storchaka em :issue:`5411`.)"

#: ../../whatsnew/3.5.rst:1651
msgid "signal"
msgstr "sinal"

#: ../../whatsnew/3.5.rst:1653
msgid ""
"On Windows, the :func:`~signal.set_wakeup_fd` function now also supports "
"socket handles.  (Contributed by Victor Stinner in :issue:`22018`.)"
msgstr ""
"No Windows, a função :func:`~signal.set_wakeup_fd` agora também suporta "
"descritores de *socket*. (Contribuído por Victor Stinner em :issue:`22018`.)"

#: ../../whatsnew/3.5.rst:1656
msgid ""
"Various ``SIG*`` constants in the :mod:`signal` module have been converted "
"into :mod:`Enums <enum>`.  This allows meaningful names to be printed during "
"debugging, instead of integer \"magic numbers\". (Contributed by Giampaolo "
"Rodola' in :issue:`21076`.)"
msgstr ""
"Várias constantes ``SIG*`` no módulo :mod:`signal` foram convertidas em :mod:"
"`Enums <enum>`. Isto permite que nomes significativos sejam impressos "
"durante a depuração, em vez de números inteiros \"mágicos\". (Contribuído "
"por Giampaolo Rodola' em :issue:`21076`.)"

#: ../../whatsnew/3.5.rst:1663
msgid "smtpd"
msgstr "smtpd"

#: ../../whatsnew/3.5.rst:1665
msgid ""
"Both the :class:`!SMTPServer` and :class:`!SMTPChannel` classes now accept a "
"*decode_data* keyword argument to determine if the ``DATA`` portion of the "
"SMTP transaction is decoded using the ``\"utf-8\"`` codec or is instead "
"provided to the :meth:`!SMTPServer.process_message` method as a byte "
"string.  The default is ``True`` for backward compatibility reasons, but "
"will change to ``False`` in Python 3.6.  If *decode_data* is set to "
"``False``, the ``process_message`` method must be prepared to accept keyword "
"arguments. (Contributed by Maciej Szulik in :issue:`19662`.)"
msgstr ""
"Tanto a classe :class:`!SMTPServer` como a classe :class:`!SMTPChannel` "
"agora aceitam um argumento de palavra-chave *decode_data* para determinar se "
"a parte ``DATA`` da transação SMTP é descodificada usando o *codec* "
"``\"utf-8\"`` ou se é fornecida ao método :meth:`!SMTPServer."
"process_message` como uma *string* de bytes. O valor predefinido é ``True`` "
"por razões de compatibilidade retroativa, mas mudará para ``False`` no "
"Python 3.6. Se *decode_data* for definido como ``False``, o método "
"``process_message`` deve estar preparado para aceitar argumentos de palavra-"
"chave. (Contribuído por Maciej Szulik em :issue:`19662`.)"

#: ../../whatsnew/3.5.rst:1676
msgid ""
"The :class:`!SMTPServer` class now advertises the ``8BITMIME`` extension (:"
"rfc:`6152`) if *decode_data* has been set ``True``.  If the client specifies "
"``BODY=8BITMIME`` on the ``MAIL`` command, it is passed to :meth:`!"
"SMTPServer.process_message` via the *mail_options* keyword. (Contributed by "
"Milan Oberkirch and R.  David Murray in :issue:`21795`.)"
msgstr ""
"A classe :class:`!SMTPServer` agora anuncia a extensão ``8BITMIME`` (:rfc:"
"`6152`) se *decode_data* estiver definido como ``True``. Se o cliente "
"especificar ``BODY=8BITMIME`` no comando ``MAIL``, é passado para :meth:`!"
"SMTPServer.process_message` através da palavra-chave *mail_options*. "
"(Contribuído por Milan Oberkirch e R. David Murray em :issue:`21795`.)"

#: ../../whatsnew/3.5.rst:1683
msgid ""
"The :class:`!SMTPServer` class now also supports the ``SMTPUTF8`` extension "
"(:rfc:`6531`: Internationalized Email).  If the client specified ``SMTPUTF8 "
"BODY=8BITMIME`` on the ``MAIL`` command, they are passed to :meth:`!"
"SMTPServer.process_message` via the *mail_options* keyword.  It is the "
"responsibility of the ``process_message`` method to correctly handle the "
"``SMTPUTF8`` data. (Contributed by Milan Oberkirch in :issue:`21725`.)"
msgstr ""
"A classe :class:`!SMTPServer` agora também suporta a extensão ``SMTPUTF8`` (:"
"rfc:`6531`: Email Internacionalizado). Se o cliente especificar ``SMTPUTF8 "
"BODY=8BITMIME`` no comando ``MAIL``, são passados para :meth:`!SMTPServer."
"process_message` através da palavra-chave *mail_options*. É responsabilidade "
"do método ``process_message`` tratar corretamente os dados ``SMTPUTF8``. "
"(Contribuído por Milan Oberkirch em :issue:`21725`.)"

#: ../../whatsnew/3.5.rst:1691
msgid ""
"It is now possible to provide, directly or via name resolution, IPv6 "
"addresses in the :class:`!SMTPServer` constructor, and have it successfully "
"connect.  (Contributed by Milan Oberkirch in :issue:`14758`.)"
msgstr ""
"Agora é possível fornecer, diretamente ou através de resolução de nome, "
"endereços IPv6 no construtor :class:`!SMTPServer` e conectar com sucesso. "
"(Contribuído por Milan Oberkirch em :issue:`14758`.)"

#: ../../whatsnew/3.5.rst:1697
msgid "smtplib"
msgstr "smtplib"

#: ../../whatsnew/3.5.rst:1699
msgid ""
"A new :meth:`SMTP.auth() <smtplib.SMTP.auth>` method provides a convenient "
"way to implement custom authentication mechanisms. (Contributed by Milan "
"Oberkirch in :issue:`15014`.)"
msgstr ""
"Um novo método :meth:`SMTP.auth() <smtplib.SMTP.auth>` fornece uma forma "
"conveniente de implementar mecanismos de autenticação personalizados. "
"(Contribuído por Milan Oberkirch em :issue:`15014`.)"

#: ../../whatsnew/3.5.rst:1703
msgid ""
"The :meth:`SMTP.set_debuglevel() <smtplib.SMTP.set_debuglevel>` method now "
"accepts an additional debuglevel (2), which enables timestamps in debug "
"messages. (Contributed by Gavin Chappell and Maciej Szulik in :issue:"
"`16914`.)"
msgstr ""
"O método :meth:`SMTP.set_debuglevel() <smtplib.SMTP.set_debuglevel>` agora "
"aceita um nível de depuração adicional (2), que ativa carimbos de data/hora "
"nas mensagens de depuração. (Contribuído por Gavin Chappell e Maciej Szulik "
"em :issue:`16914`.)"

#: ../../whatsnew/3.5.rst:1707
msgid ""
"Both the :meth:`SMTP.sendmail() <smtplib.SMTP.sendmail>` and :meth:`SMTP."
"send_message() <smtplib.SMTP.send_message>` methods now support :rfc:`6531` "
"(SMTPUTF8). (Contributed by Milan Oberkirch and R. David Murray in :issue:"
"`22027`.)"
msgstr ""
"Tanto o método :meth:`SMTP.sendmail() <smtplib.SMTP.sendmail>` como o "
"método :meth:`SMTP.send_message() <smtplib.SMTP.send_message>` agora "
"suportam :rfc:`6531` (SMTPUTF8). (Contribuído por Milan Oberkirch e R. David "
"Murray em :issue:`22027`.)"

#: ../../whatsnew/3.5.rst:1714
msgid "sndhdr"
msgstr "sndhdr"

#: ../../whatsnew/3.5.rst:1716
msgid ""
"The :func:`!what` and :func:`!whathdr` functions  now return a :func:"
"`~collections.namedtuple`.  (Contributed by Claudiu Popa in :issue:`18615`.)"
msgstr ""
"As funções :func:`!what` e :func:`!whathdr` agora devolvem um :func:"
"`~collections.namedtuple`. (Contribuído por Claudiu Popa em :issue:`18615`.)"

#: ../../whatsnew/3.5.rst:1722
msgid "socket"
msgstr "socket"

#: ../../whatsnew/3.5.rst:1724
msgid ""
"Functions with timeouts now use a monotonic clock, instead of a system "
"clock. (Contributed by Victor Stinner in :issue:`22043`.)"
msgstr ""
"Funções com *timeouts* agora usam um relógio monótono, em vez de um relógio "
"do sistema. (Contribuído por Victor Stinner em :issue:`22043`.)"

#: ../../whatsnew/3.5.rst:1727
msgid ""
"A new :meth:`socket.sendfile() <socket.socket.sendfile>` method allows "
"sending a file over a socket by using the high-performance :func:`os."
"sendfile` function on UNIX, resulting in uploads being from 2 to 3 times "
"faster than when using plain :meth:`socket.send() <socket.socket.send>`. "
"(Contributed by Giampaolo Rodola' in :issue:`17552`.)"
msgstr ""
"Um novo método :meth:`socket.sendfile() <socket.socket.sendfile>` permite "
"enviar um ficheiro através de um *socket* usando a função de alto "
"desempenho :func:`os.sendfile` no UNIX, resultando em *uploads* 2 a 3 vezes "
"mais rápidos do que quando se usa :meth:`socket.send() <socket.socket."
"send>`. (Contribuído por Giampaolo Rodola' em :issue:`17552`.)"

#: ../../whatsnew/3.5.rst:1733
msgid ""
"The :meth:`socket.sendall() <socket.socket.sendall>` method no longer resets "
"the socket timeout every time bytes are received or sent.  The socket "
"timeout is now the maximum total duration to send all data. (Contributed by "
"Victor Stinner in :issue:`23853`.)"
msgstr ""
"O método :meth:`socket.sendall() <socket.socket.sendall>` já não redefine o "
"*timeout* do *socket* sempre que os bytes são recebidos ou enviados. O "
"*timeout* do *socket* é agora a duração total máxima para enviar todos os "
"dados. (Contribuído por Victor Stinner em :issue:`23853`.)"

#: ../../whatsnew/3.5.rst:1738
msgid ""
"The *backlog* argument of the :meth:`socket.listen() <socket.socket.listen>` "
"method is now optional.  By default it is set to :data:`SOMAXCONN <socket."
"SOMAXCONN>` or to ``128``, whichever is less. (Contributed by Charles-"
"François Natali in :issue:`21455`.)"
msgstr ""
"O argumento *backlog* do método :meth:`socket.listen() <socket.socket."
"listen>` agora é opcional. Por predefinição, é definido para :data:"
"`SOMAXCONN <socket.SOMAXCONN>` ou para ``128``, o que for menor. "
"(Contribuído por Charles-François Natali em :issue:`21455`.)"

#: ../../whatsnew/3.5.rst:1745
msgid "ssl"
msgstr "ssl"

#: ../../whatsnew/3.5.rst:1750
msgid "Memory BIO Support"
msgstr "Suporte para Memory BIO"

#: ../../whatsnew/3.5.rst:1752
msgid "(Contributed by Geert Jansen in :issue:`21965`.)"
msgstr "(Contribuído por Geert Jansen em :issue:`21965`.)"

#: ../../whatsnew/3.5.rst:1754
msgid ""
"The new :class:`~ssl.SSLObject` class has been added to provide SSL protocol "
"support for cases when the network I/O capabilities of :class:`~ssl."
"SSLSocket` are not necessary or are suboptimal.  ``SSLObject`` represents an "
"SSL protocol instance, but does not implement any network I/O methods, and "
"instead provides a memory buffer interface.  The new :class:`~ssl.MemoryBIO` "
"class can be used to pass data between Python and an SSL protocol instance."
msgstr ""
"A nova classe :class:`~ssl.SSLObject` foi adicionada para fornecer suporte "
"ao protocolo SSL para casos em que as capacidades de E/S de rede de :class:"
"`~ssl.SSLSocket` não são necessárias ou são subótimas. ``SSLObject`` "
"representa uma instância do protocolo SSL, mas não implementa quaisquer "
"métodos de E/S de rede, e em vez disso fornece uma interface de *buffer* de "
"memória. A nova classe :class:`~ssl.MemoryBIO` pode ser usada para passar "
"dados entre Python e uma instância do protocolo SSL."

#: ../../whatsnew/3.5.rst:1761
msgid ""
"The memory BIO SSL support is primarily intended to be used in frameworks "
"implementing asynchronous I/O for which :class:`~ssl.SSLSocket`'s readiness "
"model (\"select/poll\") is inefficient."
msgstr ""
"O suporte para SSL Memory BIO é principalmente destinado a ser usado em "
"*frameworks* que implementam E/S assíncrona para os quais o modelo de "
"prontidão de :class:`~ssl.SSLSocket` (\"select/poll\") é ineficiente."

#: ../../whatsnew/3.5.rst:1765
msgid ""
"A new :meth:`SSLContext.wrap_bio() <ssl.SSLContext.wrap_bio>` method can be "
"used to create a new ``SSLObject`` instance."
msgstr ""
"Um novo método :meth:`SSLContext.wrap_bio() <ssl.SSLContext.wrap_bio>` pode "
"ser usado para criar uma nova instância ``SSLObject``."

#: ../../whatsnew/3.5.rst:1770
msgid "Application-Layer Protocol Negotiation Support"
msgstr "Suporte para Negociação de Protocolo de Camada de Aplicação"

#: ../../whatsnew/3.5.rst:1772
msgid "(Contributed by Benjamin Peterson in :issue:`20188`.)"
msgstr "(Contribuído por Benjamin Peterson em :issue:`20188`.)"

#: ../../whatsnew/3.5.rst:1774
msgid ""
"Where OpenSSL support is present, the :mod:`ssl` module now implements the "
"*Application-Layer Protocol Negotiation* TLS extension as described in :rfc:"
"`7301`."
msgstr ""
"Onde o suporte OpenSSL está presente, o módulo :mod:`ssl` agora implementa a "
"extensão TLS *Application-Layer Protocol Negotiation* como descrito em :rfc:"
"`7301`."

#: ../../whatsnew/3.5.rst:1778
msgid ""
"The new :meth:`SSLContext.set_alpn_protocols() <ssl.SSLContext."
"set_alpn_protocols>` can be used to specify which protocols a socket should "
"advertise during the TLS handshake."
msgstr ""
"O novo método :meth:`SSLContext.set_alpn_protocols() <ssl.SSLContext."
"set_alpn_protocols>` pode ser usado para especificar quais protocolos um "
"*socket* deve anunciar durante o *handshake* TLS."

#: ../../whatsnew/3.5.rst:1782
msgid ""
"The new :meth:`SSLSocket.selected_alpn_protocol() <ssl.SSLSocket."
"selected_alpn_protocol>` returns the protocol that was selected during the "
"TLS handshake. The :const:`~ssl.HAS_ALPN` flag indicates whether ALPN "
"support is present."
msgstr ""
"O novo método :meth:`SSLSocket.selected_alpn_protocol() <ssl.SSLSocket."
"selected_alpn_protocol>` devolve o protocolo que foi selecionado durante o "
"*handshake* TLS. A flag :const:`~ssl.HAS_ALPN` indica se o suporte ALPN está "
"presente."

#: ../../whatsnew/3.5.rst:1789
msgid "Other Changes"
msgstr "Outras Alterações"

#: ../../whatsnew/3.5.rst:1791
msgid ""
"There is a new :meth:`SSLSocket.version() <ssl.SSLSocket.version>` method to "
"query the actual protocol version in use. (Contributed by Antoine Pitrou in :"
"issue:`20421`.)"
msgstr ""
"Existe um novo método :meth:`SSLSocket.version() <ssl.SSLSocket.version>` "
"para consultar a versão do protocolo em uso. (Contribuído por Antoine Pitrou "
"em :issue:`20421`.)"

#: ../../whatsnew/3.5.rst:1795
msgid ""
"The :class:`~ssl.SSLSocket` class now implements a :meth:`!SSLSocket."
"sendfile` method. (Contributed by Giampaolo Rodola' in :issue:`17552`.)"
msgstr ""
"A classe :class:`~ssl.SSLSocket` agora implementa um método :meth:`!"
"SSLSocket.sendfile`. (Contribuído por Giampaolo Rodola' em :issue:`17552`.)"

#: ../../whatsnew/3.5.rst:1799
msgid ""
"The :meth:`!SSLSocket.send` method now raises either the :exc:`ssl."
"SSLWantReadError` or :exc:`ssl.SSLWantWriteError` exception on a non-"
"blocking socket if the operation would block. Previously, it would return "
"``0``.  (Contributed by Nikolaus Rath in :issue:`20951`.)"
msgstr ""
"O método :meth:`!SSLSocket.send` agora lança a exceção :exc:`ssl."
"SSLWantReadError` ou :exc:`ssl.SSLWantWriteError` num *socket* não "
"bloqueante se a operação bloqueasse. Anteriormente, devolvia ``0``. "
"(Contribuído por Nikolaus Rath em :issue:`20951`.)"

#: ../../whatsnew/3.5.rst:1804
msgid ""
"The :func:`~ssl.cert_time_to_seconds` function now interprets the input time "
"as UTC and not as local time, per :rfc:`5280`.  Additionally, the return "
"value is always an :class:`int`. (Contributed by Akira Li in :issue:`19940`.)"
msgstr ""
"A função :func:`~ssl.cert_time_to_seconds` agora interpreta o tempo de "
"entrada como UTC e não como hora local, de acordo com :rfc:`5280`. Além "
"disso, o valor de retorno é sempre um :class:`int`. (Contribuído por Akira "
"Li em :issue:`19940`.)"

#: ../../whatsnew/3.5.rst:1808
msgid ""
"New :meth:`!SSLObject.shared_ciphers` and :meth:`SSLSocket.shared_ciphers() "
"<ssl.SSLSocket.shared_ciphers>` methods return the list of ciphers sent by "
"the client during the handshake. (Contributed by Benjamin Peterson in :issue:"
"`23186`.)"
msgstr ""
"Novos métodos :meth:`!SSLObject.shared_ciphers` e :meth:`SSLSocket."
"shared_ciphers() <ssl.SSLSocket.shared_ciphers>` devolvem a lista de cifras "
"enviadas pelo cliente durante o *handshake*. (Contribuído por Benjamin "
"Peterson em :issue:`23186`.)"

#: ../../whatsnew/3.5.rst:1813
msgid ""
"The :meth:`SSLSocket.do_handshake() <ssl.SSLSocket.do_handshake>`, :meth:"
"`SSLSocket.read() <ssl.SSLSocket.read>`, :meth:`!SSLSocket.shutdown`, and :"
"meth:`SSLSocket.write() <ssl.SSLSocket.write>` methods of the :class:`~ssl."
"SSLSocket` class no longer reset the socket timeout every time bytes are "
"received or sent. The socket timeout is now the maximum total duration of "
"the method. (Contributed by Victor Stinner in :issue:`23853`.)"
msgstr ""
"Os métodos :meth:`SSLSocket.do_handshake() <ssl.SSLSocket.do_handshake>`, :"
"meth:`SSLSocket.read() <ssl.SSLSocket.read>`, :meth:`!SSLSocket.shutdown` e :"
"meth:`SSLSocket.write() <ssl.SSLSocket.write>` da classe :class:`~ssl."
"SSLSocket` já não redefinem o *timeout* do *socket* sempre que os bytes são "
"recebidos ou enviados. O *timeout* do *socket* é agora a duração total "
"máxima do método. (Contribuído por Victor Stinner em :issue:`23853`.)"

#: ../../whatsnew/3.5.rst:1821
msgid ""
"The :func:`!match_hostname` function now supports matching of IP addresses. "
"(Contributed by Antoine Pitrou in :issue:`23239`.)"
msgstr ""
"A função :func:`!match_hostname` agora suporta a correspondência de "
"endereços IP. (Contribuído por Antoine Pitrou em :issue:`23239`.)"

#: ../../whatsnew/3.5.rst:1826
msgid "sqlite3"
msgstr "sqlite3"

#: ../../whatsnew/3.5.rst:1828
msgid ""
"The :class:`~sqlite3.Row` class now fully supports the sequence protocol, in "
"particular :func:`reversed` iteration and slice indexing. (Contributed by "
"Claudiu Popa in :issue:`10203`; by Lucas Sinclair, Jessica McKellar, and  "
"Serhiy Storchaka in :issue:`13583`.)"
msgstr ""
"A classe :class:`~sqlite3.Row` agora suporta totalmente o protocolo de "
"sequência, em particular a iteração :func:`reversed` e a indexação por "
"*slice*. (Contribuído por Claudiu Popa em :issue:`10203`; por Lucas "
"Sinclair, Jessica McKellar e Serhiy Storchaka em :issue:`13583`.)"

#: ../../whatsnew/3.5.rst:1837
msgid "subprocess"
msgstr "subprocesso"

#: ../../whatsnew/3.5.rst:1839
msgid ""
"The new :func:`~subprocess.run` function has been added. It runs the "
"specified command and returns a :class:`~subprocess.CompletedProcess` "
"object, which describes a finished process.  The new API is more consistent "
"and is the recommended approach to invoking subprocesses in Python code that "
"does not need to maintain compatibility with earlier Python versions. "
"(Contributed by Thomas Kluyver in :issue:`23342`.)"
msgstr ""
"A nova função :func:`~subprocess.run` foi adicionada. Executa o comando "
"especificado e devolve um objeto :class:`~subprocess.CompletedProcess`, que "
"descreve um processo terminado. A nova API é mais consistente e é a "
"abordagem recomendada para invocar subprocessos em código Python que não "
"precisa de manter compatibilidade com versões anteriores do Python. "
"(Contribuído por Thomas Kluyver em :issue:`23342`.)"

#: ../../whatsnew/3.5.rst:1849
msgid ""
">>> subprocess.run([\"ls\", \"-l\"])  # doesn't capture output\n"
"CompletedProcess(args=['ls', '-l'], returncode=0)\n"
"\n"
">>> subprocess.run(\"exit 1\", shell=True, check=True)\n"
"Traceback (most recent call last):\n"
"  ...\n"
"subprocess.CalledProcessError: Command 'exit 1' returned non-zero exit "
"status 1\n"
"\n"
">>> subprocess.run([\"ls\", \"-l\", \"/dev/null\"], stdout=subprocess.PIPE)\n"
"CompletedProcess(args=['ls', '-l', '/dev/null'], returncode=0,\n"
"stdout=b'crw-rw-rw- 1 root root 1, 3 Jan 23 16:23 /dev/null\\n')"
msgstr ""
">>> subprocess.run([\"ls\", \"-l\"])  # não captura a saída\n"
"CompletedProcess(args=['ls', '-l'], returncode=0)\n"
"\n"
">>> subprocess.run(\"exit 1\", shell=True, check=True)\n"
"Traceback (most recent call last):\n"
"  File \"<stdin>\", line 1, in <module>\n"
"subprocess.CalledProcessError: O comando 'exit 1' devolveu estado de saída "
"não nulo 1\n"
"\n"
">>> subprocess.run([\"ls\", \"-l\", \"/dev/null\"], stdout=subprocess.PIPE)\n"
"CompletedProcess(args=['ls', '-l', '/dev/null'], returncode=0,\n"
"stdout=b'crw-rw-rw- 1 root root 1, 3 Jan 23 16:23 /dev/null\\n')"

#: ../../whatsnew/3.5.rst:1863
msgid "sys"
msgstr "sys"

#: ../../whatsnew/3.5.rst:1865
msgid ""
"A new :func:`!set_coroutine_wrapper` function allows setting a global hook "
"that will be called whenever a :term:`coroutine object <coroutine>` is "
"created by an :keyword:`async def` function.  A corresponding :func:`!"
"get_coroutine_wrapper` can be used to obtain a currently set wrapper.  Both "
"functions are :term:`provisional <provisional API>`, and are intended for "
"debugging purposes only.  (Contributed by Yury Selivanov in :issue:`24017`.)"
msgstr ""
"Uma nova função :func:`!set_coroutine_wrapper` permite definir um *hook* "
"global que será chamado sempre que um :term:`objeto *coroutine* <coroutine>` "
"for criado por uma função :keyword:`async def`. Uma função correspondente :"
"func:`!get_coroutine_wrapper` pode ser usada para obter o *wrapper* "
"atualmente definido. Ambas as funções são :term:`provisórias <provisional "
"API>`, e são destinadas apenas a fins de depuração. (Contribuído por Yury "
"Selivanov em :issue:`24017`.)"

#: ../../whatsnew/3.5.rst:1873
msgid ""
"A new :func:`~sys.is_finalizing` function can be used to check if the Python "
"interpreter is :term:`shutting down <interpreter shutdown>`. (Contributed by "
"Antoine Pitrou in :issue:`22696`.)"
msgstr ""
"Uma nova função :func:`~sys.is_finalizing` pode ser usada para verificar se "
"o interpretador Python está a :term:`terminar <interpreter shutdown>`. "
"(Contribuído por Antoine Pitrou em :issue:`22696`.)"

#: ../../whatsnew/3.5.rst:1879
msgid "sysconfig"
msgstr "sysconfig"

#: ../../whatsnew/3.5.rst:1881
msgid ""
"The name of the user scripts directory on Windows now includes the first two "
"components of the Python version. (Contributed by Paul Moore in :issue:"
"`23437`.)"
msgstr ""
"O nome do diretório de *scripts* do utilizador no Windows agora inclui os "
"dois primeiros componentes da versão do Python. (Contribuído por Paul Moore "
"em :issue:`23437`.)"

#: ../../whatsnew/3.5.rst:1887
msgid "tarfile"
msgstr "tarfile"

#: ../../whatsnew/3.5.rst:1889
msgid ""
"The *mode* argument of the :func:`~tarfile.open` function now accepts "
"``\"x\"`` to request exclusive creation.  (Contributed by Berker Peksag in :"
"issue:`21717`.)"
msgstr ""
"O argumento *mode* da função :func:`~tarfile.open` agora aceita ``\"x\"`` "
"para solicitar criação exclusiva. (Contribuído por Berker Peksag em :issue:"
"`21717`.)"

#: ../../whatsnew/3.5.rst:1892
msgid ""
"The :meth:`TarFile.extractall() <tarfile.TarFile.extractall>` and :meth:"
"`TarFile.extract() <tarfile.TarFile.extract>` methods now take a keyword "
"argument *numeric_owner*.  If set to ``True``, the extracted files and "
"directories will be owned by the numeric ``uid`` and ``gid`` from the "
"tarfile. If set to ``False`` (the default, and the behavior in versions "
"prior to 3.5), they will be owned by the named user and group in the "
"tarfile. (Contributed by Michael Vogt and Eric Smith in :issue:`23193`.)"
msgstr ""
"Os métodos :meth:`TarFile.extractall() <tarfile.TarFile.extractall>` e :meth:"
"`TarFile.extract() <tarfile.TarFile.extract>` agora aceitam um argumento de "
"palavra-chave *numeric_owner*. Se definido como ``True``, os ficheiros e "
"diretórios extraídos serão propriedade do ``uid`` e ``gid`` numéricos do "
"ficheiro tar. Se definido como ``False`` (o predefinido, e o comportamento "
"em versões anteriores à 3.5), serão propriedade do utilizador e grupo "
"nomeados no ficheiro tar. (Contribuído por Michael Vogt e Eric Smith em :"
"issue:`23193`.)"

#: ../../whatsnew/3.5.rst:1900
msgid ""
"The :meth:`TarFile.list() <tarfile.TarFile.list>` now accepts an optional "
"*members* keyword argument that can be set to a subset of the list returned "
"by :meth:`TarFile.getmembers() <tarfile.TarFile.getmembers>`. (Contributed "
"by Serhiy Storchaka in :issue:`21549`.)"
msgstr ""
"O método :meth:`TarFile.list() <tarfile.TarFile.list>` agora aceita um "
"argumento de palavra-chave opcional *members* que pode ser definido como um "
"subconjunto da lista devolvida por :meth:`TarFile.getmembers() <tarfile."
"TarFile.getmembers>`. (Contribuído por Serhiy Storchaka em :issue:`21549`.)"

#: ../../whatsnew/3.5.rst:1907
msgid "threading"
msgstr "threading"

#: ../../whatsnew/3.5.rst:1909
msgid ""
"Both the :meth:`Lock.acquire() <threading.Lock.acquire>` and :meth:`RLock."
"acquire() <threading.RLock.acquire>` methods now use a monotonic clock for "
"timeout management. (Contributed by Victor Stinner in :issue:`22043`.)"
msgstr ""
"Tanto o método :meth:`Lock.acquire() <threading.Lock.acquire>` como o "
"método :meth:`RLock.acquire() <threading.RLock.acquire>` agora usam um "
"relógio monótono para gestão de *timeout*. (Contribuído por Victor Stinner "
"em :issue:`22043`.)"

#: ../../whatsnew/3.5.rst:1916
msgid "time"
msgstr "time"

#: ../../whatsnew/3.5.rst:1918
msgid ""
"The :func:`~time.monotonic` function is now always available. (Contributed "
"by Victor Stinner in :issue:`22043`.)"
msgstr ""
"A função :func:`~time.monotonic` está agora sempre disponível. (Contribuído "
"por Victor Stinner em :issue:`22043`.)"

#: ../../whatsnew/3.5.rst:1923
msgid "timeit"
msgstr "timeit"

#: ../../whatsnew/3.5.rst:1925
msgid ""
"A new command line option ``-u`` or :samp:`--unit={U}` can be used to "
"specify the time unit for the timer output.  Supported options are ``usec``, "
"``msec``, or ``sec``.  (Contributed by Julian Gindi in :issue:`18983`.)"
msgstr ""
"Uma nova opção de linha de comandos ``-u`` ou :samp:`--unit={U}` pode ser "
"usada para especificar a unidade de tempo para a saída do temporizador. As "
"opções suportadas são ``usec``, ``msec`` ou ``sec``. (Contribuído por Julian "
"Gindi em :issue:`18983`.)"

#: ../../whatsnew/3.5.rst:1929
msgid ""
"The :func:`~timeit.timeit` function has a new *globals* parameter for "
"specifying the namespace in which the code will be running. (Contributed by "
"Ben Roberts in :issue:`2527`.)"
msgstr ""
"A função :func:`~timeit.timeit` tem um novo parâmetro *globals* para "
"especificar o espaço de nomes no qual o código será executado. (Contribuído "
"por Ben Roberts em :issue:`2527`.)"

#: ../../whatsnew/3.5.rst:1935
msgid "tkinter"
msgstr "tkinter"

#: ../../whatsnew/3.5.rst:1937
msgid ""
"The :mod:`!tkinter._fix` module used for setting up the Tcl/Tk environment "
"on Windows has been replaced by a private function in the :mod:`!_tkinter` "
"module which makes no permanent changes to environment variables. "
"(Contributed by Zachary Ware in :issue:`20035`.)"
msgstr ""
"O módulo :mod:`!tkinter._fix` usado para configurar o ambiente Tcl/Tk no "
"Windows foi substituído por uma função privada no módulo :mod:`!_tkinter` "
"que não faz alterações permanentes às variáveis de ambiente. (Contribuído "
"por Zachary Ware em :issue:`20035`.)"

#: ../../whatsnew/3.5.rst:1946
msgid "traceback"
msgstr "traceback"

#: ../../whatsnew/3.5.rst:1948
msgid ""
"New :func:`~traceback.walk_stack` and :func:`~traceback.walk_tb` functions "
"to conveniently traverse frame and :ref:`traceback objects <traceback-"
"objects>`. (Contributed by Robert Collins in :issue:`17911`.)"
msgstr ""
"Novas funções :func:`~traceback.walk_stack` e :func:`~traceback.walk_tb` "
"para percorrer convenientemente *frames* e :ref:`objetos *traceback* "
"<traceback-objects>`. (Contribuído por Robert Collins em :issue:`17911`.)"

#: ../../whatsnew/3.5.rst:1953
msgid ""
"New lightweight classes: :class:`~traceback.TracebackException`, :class:"
"`~traceback.StackSummary`, and :class:`~traceback.FrameSummary`. "
"(Contributed by Robert Collins in :issue:`17911`.)"
msgstr ""
"Novas classes leves: :class:`~traceback.TracebackException`, :class:"
"`~traceback.StackSummary` e :class:`~traceback.FrameSummary`. (Contribuído "
"por Robert Collins em :issue:`17911`.)"

#: ../../whatsnew/3.5.rst:1957
msgid ""
"Both the :func:`~traceback.print_tb` and :func:`~traceback.print_stack` "
"functions now support negative values for the *limit* argument. (Contributed "
"by Dmitry Kazakov in :issue:`22619`.)"
msgstr ""
"Tanto a função :func:`~traceback.print_tb` como a função :func:`~traceback."
"print_stack` agora suportam valores negativos para o argumento *limit*. "
"(Contribuído por Dmitry Kazakov em :issue:`22619`.)"

#: ../../whatsnew/3.5.rst:1963
msgid "types"
msgstr "types"

#: ../../whatsnew/3.5.rst:1965
msgid ""
"A new :func:`~types.coroutine` function to transform :term:`generator "
"<generator iterator>` and :class:`generator-like <collections.abc."
"Generator>` objects into :term:`awaitables <awaitable>`. (Contributed by "
"Yury Selivanov in :issue:`24017`.)"
msgstr ""
"Uma nova função :func:`~types.coroutine` para transformar objetos :term:"
"`gerador <generator iterator>` e :class:`semelhantes a geradores "
"<collections.abc.Generator>` em :term:`objetos aguardáveis <awaitable>`. "
"(Contribuído por Yury Selivanov em :issue:`24017`.)"

#: ../../whatsnew/3.5.rst:1971
msgid ""
"A new type called :class:`~types.CoroutineType`, which is used for :term:"
"`coroutine` objects created by :keyword:`async def` functions. (Contributed "
"by Yury Selivanov in :issue:`24400`.)"
msgstr ""
"Um novo tipo chamado :class:`~types.CoroutineType`, que é usado para "
"objetos :term:`coroutine` criados por funções :keyword:`async def`. "
"(Contribuído por Yury Selivanov em :issue:`24400`.)"

#: ../../whatsnew/3.5.rst:1977
msgid "unicodedata"
msgstr "unicodedata"

#: ../../whatsnew/3.5.rst:1979
msgid ""
"The :mod:`unicodedata` module now uses data from `Unicode 8.0.0 <https://"
"unicode.org/versions/Unicode8.0.0/>`_."
msgstr ""
"O módulo :mod:`unicodedata` agora usa dados do `Unicode 8.0.0 <https://"
"unicode.org/versions/Unicode8.0.0/>`_."

#: ../../whatsnew/3.5.rst:1984
msgid "unittest"
msgstr "unittest"

#: ../../whatsnew/3.5.rst:1986
msgid ""
"The :meth:`TestLoader.loadTestsFromModule() <unittest.TestLoader."
"loadTestsFromModule>` method now accepts a keyword-only argument *pattern* "
"which is passed to ``load_tests`` as the third argument.  Found packages are "
"now checked for ``load_tests`` regardless of whether their path matches "
"*pattern*, because it is impossible for a package name to match the default "
"pattern. (Contributed by Robert Collins and Barry A. Warsaw in :issue:"
"`16662`.)"
msgstr ""
"O método :meth:`TestLoader.loadTestsFromModule() <unittest.TestLoader."
"loadTestsFromModule>` agora aceita um argumento apenas por palavra-chave "
"*pattern* que é passado para ``load_tests`` como terceiro argumento. Os "
"pacotes encontrados agora são verificados quanto a ``load_tests`` "
"independentemente de o seu caminho corresponder a *pattern*, porque é "
"impossível que um nome de pacote corresponda ao padrão predefinido. "
"(Contribuído por Robert Collins e Barry A. Warsaw em :issue:`16662`.)"

#: ../../whatsnew/3.5.rst:1993
msgid ""
"Unittest discovery errors now are exposed in the :data:`TestLoader.errors "
"<unittest.TestLoader.errors>` attribute of the :class:`~unittest.TestLoader` "
"instance. (Contributed by Robert Collins in :issue:`19746`.)"
msgstr ""
"Os erros de descoberta de *unittest* agora são expostos no atributo :data:"
"`TestLoader.errors <unittest.TestLoader.errors>` da instância :class:"
"`~unittest.TestLoader`. (Contribuído por Robert Collins em :issue:`19746`.)"

#: ../../whatsnew/3.5.rst:1998
msgid ""
"A new command line option ``--locals`` to show local variables in "
"tracebacks.  (Contributed by Robert Collins in :issue:`22936`.)"
msgstr ""
"Uma nova opção de linha de comandos ``--locals`` para mostrar variáveis "
"locais em *tracebacks*. (Contribuído por Robert Collins em :issue:`22936`.)"

#: ../../whatsnew/3.5.rst:2003
msgid "unittest.mock"
msgstr "unittest.mock"

#: ../../whatsnew/3.5.rst:2005
msgid "The :class:`~unittest.mock.Mock` class has the following improvements:"
msgstr "A classe :class:`~unittest.mock.Mock` tem as seguintes melhorias:"

#: ../../whatsnew/3.5.rst:2007
msgid ""
"The class constructor has a new *unsafe* parameter, which causes mock "
"objects to raise :exc:`AttributeError` on attribute names starting with "
"``\"assert\"``. (Contributed by Kushal Das in :issue:`21238`.)"
msgstr ""
"O construtor da classe tem um novo parâmetro *unsafe*, que faz com que os "
"objetos *mock* lançem :exc:`AttributeError` em nomes de atributos que "
"comecem com ``\"assert\"``. (Contribuído por Kushal Das em :issue:`21238`.)"

#: ../../whatsnew/3.5.rst:2012
msgid ""
"A new :meth:`Mock.assert_not_called() <unittest.mock.Mock."
"assert_not_called>` method to check if the mock object was called. "
"(Contributed by Kushal Das in :issue:`21262`.)"
msgstr ""
"Um novo método :meth:`Mock.assert_not_called() <unittest.mock.Mock."
"assert_not_called>` para verificar se o objeto *mock* foi chamado. "
"(Contribuído por Kushal Das em :issue:`21262`.)"

#: ../../whatsnew/3.5.rst:2016
msgid ""
"The :class:`~unittest.mock.MagicMock` class now supports :meth:`~object."
"__truediv__`, :meth:`~object.__divmod__` and :meth:`~object.__matmul__` "
"operators. (Contributed by Johannes Baiter in :issue:`20968`, and Håkan "
"Lövdahl in :issue:`23581` and :issue:`23568`.)"
msgstr ""
"A classe :class:`~unittest.mock.MagicMock` agora suporta os operadores :meth:"
"`~object.__truediv__`, :meth:`~object.__divmod__` e :meth:`~object."
"__matmul__`. (Contribuído por Johannes Baiter em :issue:`20968`, e Håkan "
"Lövdahl em :issue:`23581` e :issue:`23568`.)"

#: ../../whatsnew/3.5.rst:2022
msgid ""
"It is no longer necessary to explicitly pass ``create=True`` to the :func:"
"`~unittest.mock.patch` function when patching builtin names. (Contributed by "
"Kushal Das in :issue:`17660`.)"
msgstr ""
"Já não é necessário passar explicitamente ``create=True`` para a função :"
"func:`~unittest.mock.patch` ao aplicar *patches* a nomes integrados. "
"(Contribuído por Kushal Das em :issue:`17660`.)"

#: ../../whatsnew/3.5.rst:2028
msgid "urllib"
msgstr "urllib"

#: ../../whatsnew/3.5.rst:2030
msgid ""
"A new :class:`request.HTTPPasswordMgrWithPriorAuth <urllib.request."
"HTTPPasswordMgrWithPriorAuth>` class allows HTTP Basic Authentication "
"credentials to be managed so as to eliminate unnecessary ``401`` response "
"handling, or to unconditionally send credentials on the first request in "
"order to communicate with servers that return a ``404`` response instead of "
"a ``401`` if the ``Authorization`` header is not sent. (Contributed by Matej "
"Cepl in :issue:`19494` and Akshit Khurana in :issue:`7159`.)"
msgstr ""
"Uma nova classe :class:`request.HTTPPasswordMgrWithPriorAuth <urllib.request."
"HTTPPasswordMgrWithPriorAuth>` permite gerir credenciais de Autenticação "
"Básica HTTP de forma a eliminar o tratamento desnecessário de respostas "
"``401``, ou enviar incondicionalmente credenciais na primeira solicitação "
"para comunicar com servidores que devolvem uma resposta ``404`` em vez de "
"``401`` se o cabeçalho ``Authorization`` não for enviado. (Contribuído por "
"Matej Cepl em :issue:`19494` e Akshit Khurana em :issue:`7159`.)"

#: ../../whatsnew/3.5.rst:2039
msgid ""
"A new *quote_via* argument for the :func:`parse.urlencode() <urllib.parse."
"urlencode>` function provides a way to control the encoding of query parts "
"if needed. (Contributed by Samwyse and Arnon Yaari in :issue:`13866`.)"
msgstr ""
"Um novo argumento *quote_via* para a função :func:`parse.urlencode() <urllib."
"parse.urlencode>` fornece uma forma de controlar a codificação de partes da "
"consulta, se necessário. (Contribuído por Samwyse e Arnon Yaari em :issue:"
"`13866`.)"

#: ../../whatsnew/3.5.rst:2044
msgid ""
"The :func:`request.urlopen() <urllib.request.urlopen>` function accepts an :"
"class:`ssl.SSLContext` object as a *context* argument, which will be used "
"for the HTTPS connection.  (Contributed by Alex Gaynor in :issue:`22366`.)"
msgstr ""
"A função :func:`request.urlopen() <urllib.request.urlopen>` aceita um "
"objeto :class:`ssl.SSLContext` como argumento *context*, que será usado para "
"a ligação HTTPS. (Contribuído por Alex Gaynor em :issue:`22366`.)"

#: ../../whatsnew/3.5.rst:2048
msgid ""
"The :func:`parse.urljoin() <urllib.parse.urljoin>` was updated to use the :"
"rfc:`3986` semantics for the resolution of relative URLs, rather than :rfc:"
"`1808` and :rfc:`2396`. (Contributed by Demian Brecht and Senthil Kumaran "
"in :issue:`22118`.)"
msgstr ""
"A função :func:`parse.urljoin() <urllib.parse.urljoin>` foi atualizada para "
"usar a semântica :rfc:`3986` para a resolução de URLs relativos, em vez de :"
"rfc:`1808` e :rfc:`2396`. (Contribuído por Demian Brecht e Senthil Kumaran "
"em :issue:`22118`.)"

#: ../../whatsnew/3.5.rst:2055
msgid "wsgiref"
msgstr "wsgiref"

#: ../../whatsnew/3.5.rst:2057
msgid ""
"The *headers* argument of the :class:`headers.Headers <wsgiref.headers."
"Headers>` class constructor is now optional. (Contributed by Pablo Torres "
"Navarrete and SilentGhost in :issue:`5800`.)"
msgstr ""
"O argumento *headers* do construtor da classe :class:`headers.Headers "
"<wsgiref.headers.Headers>` agora é opcional. (Contribuído por Pablo Torres "
"Navarrete e SilentGhost em :issue:`5800`.)"

#: ../../whatsnew/3.5.rst:2063
msgid "xmlrpc"
msgstr "xmlrpc"

#: ../../whatsnew/3.5.rst:2065
msgid ""
"The :class:`client.ServerProxy <xmlrpc.client.ServerProxy>` class now "
"supports the :term:`context manager` protocol. (Contributed by Claudiu Popa "
"in :issue:`20627`.)"
msgstr ""
"A classe :class:`client.ServerProxy <xmlrpc.client.ServerProxy>` agora "
"suporta o protocolo :term:`gestor de contexto`. (Contribuído por Claudiu "
"Popa em :issue:`20627`.)"

#: ../../whatsnew/3.5.rst:2069
msgid ""
"The :class:`client.ServerProxy <xmlrpc.client.ServerProxy>` constructor now "
"accepts an optional :class:`ssl.SSLContext` instance. (Contributed by Alex "
"Gaynor in :issue:`22960`.)"
msgstr ""
"O construtor :class:`client.ServerProxy <xmlrpc.client.ServerProxy>` agora "
"aceita uma instância opcional :class:`ssl.SSLContext`. (Contribuído por Alex "
"Gaynor em :issue:`22960`.)"

#: ../../whatsnew/3.5.rst:2075
msgid "xml.sax"
msgstr "xml.sax"

#: ../../whatsnew/3.5.rst:2077
msgid ""
"SAX parsers now support a character stream of the :class:`xmlreader."
"InputSource <xml.sax.xmlreader.InputSource>` object. (Contributed by Serhiy "
"Storchaka in :issue:`2175`.)"
msgstr ""
"Os *parsers* SAX agora suportam um fluxo de caracteres do objeto :class:"
"`xmlreader.InputSource <xml.sax.xmlreader.InputSource>`. (Contribuído por "
"Serhiy Storchaka em :issue:`2175`.)"

#: ../../whatsnew/3.5.rst:2081
msgid ""
":func:`~xml.sax.parseString` now accepts a :class:`str` instance. "
"(Contributed by Serhiy Storchaka in :issue:`10590`.)"
msgstr ""
"A função :func:`~xml.sax.parseString` agora aceita uma instância :class:"
"`str`. (Contribuído por Serhiy Storchaka em :issue:`10590`.)"

#: ../../whatsnew/3.5.rst:2086
msgid "zipfile"
msgstr "zipfile"

#: ../../whatsnew/3.5.rst:2088
msgid ""
"ZIP output can now be written to unseekable streams. (Contributed by Serhiy "
"Storchaka in :issue:`23252`.)"
msgstr ""
"A saída ZIP agora pode ser escrita para fluxos não procuráveis. (Contribuído "
"por Serhiy Storchaka em :issue:`23252`.)"

#: ../../whatsnew/3.5.rst:2091
msgid ""
"The *mode* argument of :meth:`ZipFile.open() <zipfile.ZipFile.open>` method "
"now accepts ``\"x\"`` to request exclusive creation. (Contributed by Serhiy "
"Storchaka in :issue:`21717`.)"
msgstr ""
"O argumento *mode* do método :meth:`ZipFile.open() <zipfile.ZipFile.open>` "
"agora aceita ``\"x\"`` para solicitar criação exclusiva. (Contribuído por "
"Serhiy Storchaka em :issue:`21717`.)"

#: ../../whatsnew/3.5.rst:2097
msgid "Other module-level changes"
msgstr "Outras alterações a nível de módulo"

#: ../../whatsnew/3.5.rst:2099
msgid ""
"Many functions in the :mod:`mmap`, :mod:`!ossaudiodev`, :mod:`socket`, :mod:"
"`ssl`, and :mod:`codecs` modules now accept writable :term:`bytes-like "
"objects <bytes-like object>`. (Contributed by Serhiy Storchaka in :issue:"
"`23001`.)"
msgstr ""
"Muitas funções nos módulos :mod:`mmap`, :mod:`!ossaudiodev`, :mod:`socket`, :"
"mod:`ssl` e :mod:`codecs` agora aceitam objetos :term:`semelhantes a bytes "
"<bytes-like object>` graváveis. (Contribuído por Serhiy Storchaka em :issue:"
"`23001`.)"

#: ../../whatsnew/3.5.rst:2106
msgid "Optimizations"
msgstr "Otimizações"

#: ../../whatsnew/3.5.rst:2108
msgid ""
"The :func:`os.walk` function has been sped up by 3 to 5 times on POSIX "
"systems, and by 7 to 20 times on Windows.  This was done using the new :func:"
"`os.scandir` function, which exposes file information from the underlying "
"``readdir`` or ``FindFirstFile``/``FindNextFile`` system calls.  "
"(Contributed by Ben Hoyt with help from Victor Stinner in :issue:`23605`.)"
msgstr ""
"A função :func:`os.walk` foi acelerada entre 3 a 5 vezes em sistemas POSIX, "
"e entre 7 a 20 vezes no Windows. Isto foi feito usando a nova função :func:"
"`os.scandir`, que expõe informações de ficheiros a partir das chamadas de "
"sistema subjacentes ``readdir`` ou ``FindFirstFile``/``FindNextFile``. "
"(Contribuído por Ben Hoyt com a ajuda de Victor Stinner em :issue:`23605`.)"

#: ../../whatsnew/3.5.rst:2114
msgid ""
"Construction of ``bytes(int)`` (filled by zero bytes) is faster and uses "
"less memory for large objects. ``calloc()`` is used instead of ``malloc()`` "
"to allocate memory for these objects. (Contributed by Victor Stinner in :"
"issue:`21233`.)"
msgstr ""
"A construção de ``bytes(int)`` (preenchido com bytes a zero) é mais rápida e "
"usa menos memória para objetos grandes. ``calloc()`` é usado em vez de "
"``malloc()`` para alocar memória para estes objetos. (Contribuído por Victor "
"Stinner em :issue:`21233`.)"

#: ../../whatsnew/3.5.rst:2119
msgid ""
"Some operations on :mod:`ipaddress` :class:`~ipaddress.IPv4Network` and :"
"class:`~ipaddress.IPv6Network` have been massively sped up, such as :meth:"
"`~ipaddress.IPv4Network.subnets`, :meth:`~ipaddress.IPv4Network.supernet`, :"
"func:`~ipaddress.summarize_address_range`, :func:`~ipaddress."
"collapse_addresses`. The speed up can range from 3 to 15 times. (Contributed "
"by Antoine Pitrou, Michel Albert, and Markus in :issue:`21486`, :issue:"
"`21487`, :issue:`20826`, :issue:`23266`.)"
msgstr ""
"Algumas operações em :mod:`ipaddress` :class:`~ipaddress.IPv4Network` e :"
"class:`~ipaddress.IPv6Network` foram significativamente aceleradas, como :"
"meth:`~ipaddress.IPv4Network.subnets`, :meth:`~ipaddress.IPv4Network."
"supernet`, :func:`~ipaddress.summarize_address_range`, :func:`~ipaddress."
"collapse_addresses`. A aceleração pode variar de 3 a 15 vezes. (Contribuído "
"por Antoine Pitrou, Michel Albert e Markus em :issue:`21486`, :issue:"
"`21487`, :issue:`20826`, :issue:`23266`.)"

#: ../../whatsnew/3.5.rst:2127
msgid ""
"Pickling of :mod:`ipaddress` objects was optimized to produce significantly "
"smaller output.  (Contributed by Serhiy Storchaka in :issue:`23133`.)"
msgstr ""
"A serialização de objetos :mod:`ipaddress` foi otimizada para produzir uma "
"saída significativamente menor. (Contribuído por Serhiy Storchaka em :issue:"
"`23133`.)"

#: ../../whatsnew/3.5.rst:2130
msgid ""
"Many operations on :class:`io.BytesIO` are now 50% to 100% faster. "
"(Contributed by Serhiy Storchaka in :issue:`15381` and David Wilson in :"
"issue:`22003`.)"
msgstr ""
"Muitas operações em :class:`io.BytesIO` são agora 50% a 100% mais rápidas. "
"(Contribuído por Serhiy Storchaka em :issue:`15381` e David Wilson em :issue:"
"`22003`.)"

#: ../../whatsnew/3.5.rst:2134
msgid ""
"The :func:`marshal.dumps` function is now faster: 65--85% with versions 3 "
"and 4, 20--25% with versions 0 to 2 on typical data, and up to 5 times in "
"best cases. (Contributed by Serhiy Storchaka in :issue:`20416` and :issue:"
"`23344`.)"
msgstr ""
"A função :func:`marshal.dumps` é agora mais rápida: 65--85% com as versões 3 "
"e 4, 20--25% com as versões 0 a 2 em dados típicos, e até 5 vezes nos "
"melhores casos. (Contribuído por Serhiy Storchaka em :issue:`20416` e :issue:"
"`23344`.)"

#: ../../whatsnew/3.5.rst:2139
msgid ""
"The UTF-32 encoder is now 3 to 7 times faster. (Contributed by Serhiy "
"Storchaka in :issue:`15027`.)"
msgstr ""
"O codificador UTF-32 é agora 3 a 7 vezes mais rápido. (Contribuído por "
"Serhiy Storchaka em :issue:`15027`.)"

#: ../../whatsnew/3.5.rst:2142
msgid ""
"Regular expressions are now parsed up to 10% faster. (Contributed by Serhiy "
"Storchaka in :issue:`19380`.)"
msgstr ""
"As expressões regulares são agora analisadas até 10% mais rápido. "
"(Contribuído por Serhiy Storchaka em :issue:`19380`.)"

#: ../../whatsnew/3.5.rst:2145
msgid ""
"The :func:`json.dumps` function was optimized to run with "
"``ensure_ascii=False`` as fast as with ``ensure_ascii=True``. (Contributed "
"by Naoki Inada in :issue:`23206`.)"
msgstr ""
"A função :func:`json.dumps` foi otimizada para executar com "
"``ensure_ascii=False`` tão rápido quanto com ``ensure_ascii=True``. "
"(Contribuído por Naoki Inada em :issue:`23206`.)"

#: ../../whatsnew/3.5.rst:2149
msgid ""
"The :c:func:`PyObject_IsInstance` and :c:func:`PyObject_IsSubclass` "
"functions have been sped up in the common case that the second argument has :"
"class:`type` as its metaclass. (Contributed Georg Brandl by in :issue:"
"`22540`.)"
msgstr ""
"As funções :c:func:`PyObject_IsInstance` e :c:func:`PyObject_IsSubclass` "
"foram aceleradas no caso comum em que o segundo argumento tem :class:`type` "
"como sua metaclasse. (Contribuído por Georg Brandl em :issue:`22540`.)"

#: ../../whatsnew/3.5.rst:2154
msgid ""
"Method caching was slightly improved, yielding up to 5% performance "
"improvement in some benchmarks. (Contributed by Antoine Pitrou in :issue:"
"`22847`.)"
msgstr ""
"A cache de métodos foi ligeiramente melhorada, resultando em melhorias de "
"desempenho de até 5% em alguns *benchmarks*. (Contribuído por Antoine Pitrou "
"em :issue:`22847`.)"

#: ../../whatsnew/3.5.rst:2158
msgid ""
"Objects from the :mod:`random` module now use 50% less memory on 64-bit "
"builds.  (Contributed by Serhiy Storchaka in :issue:`23488`.)"
msgstr ""
"Os objetos do módulo :mod:`random` agora usam 50% menos memória em "
"compilações de 64 bits. (Contribuído por Serhiy Storchaka em :issue:`23488`.)"

#: ../../whatsnew/3.5.rst:2161
msgid ""
"The :func:`property` getter calls are up to 25% faster. (Contributed by Joe "
"Jevnik in :issue:`23910`.)"
msgstr ""
"As chamadas de *getter* de :func:`property` são até 25% mais rápidas. "
"(Contribuído por Joe Jevnik em :issue:`23910`.)"

#: ../../whatsnew/3.5.rst:2164
msgid ""
"Instantiation of :class:`fractions.Fraction` is now up to 30% faster. "
"(Contributed by Stefan Behnel in :issue:`22464`.)"
msgstr ""
"A instanciação de :class:`fractions.Fraction` é agora até 30% mais rápida. "
"(Contribuído por Stefan Behnel em :issue:`22464`.)"

#: ../../whatsnew/3.5.rst:2167
msgid ""
"String methods :meth:`~str.find`, :meth:`~str.rfind`, :meth:`~str.split`, :"
"meth:`~str.partition` and the :keyword:`in` string operator are now "
"significantly faster for searching 1-character substrings. (Contributed by "
"Serhiy Storchaka in :issue:`23573`.)"
msgstr ""
"Os métodos de *string* :meth:`~str.find`, :meth:`~str.rfind`, :meth:`~str."
"split`, :meth:`~str.partition` e o operador de *string* :keyword:`in` são "
"agora significativamente mais rápidos para pesquisar substrings de 1 "
"carácter. (Contribuído por Serhiy Storchaka em :issue:`23573`.)"

#: ../../whatsnew/3.5.rst:2174
msgid "Build and C API Changes"
msgstr "Alterações na Compilação e na API C"

#: ../../whatsnew/3.5.rst:2176
msgid "New ``calloc`` functions were added:"
msgstr "Foram adicionadas novas funções ``calloc``:"

#: ../../whatsnew/3.5.rst:2178
msgid ":c:func:`PyMem_RawCalloc`,"
msgstr ":c:func:`PyMem_RawCalloc`,"

#: ../../whatsnew/3.5.rst:2179
msgid ":c:func:`PyMem_Calloc`,"
msgstr ":c:func:`PyMem_Calloc`,"

#: ../../whatsnew/3.5.rst:2180
msgid ":c:func:`PyObject_Calloc`."
msgstr ":c:func:`PyObject_Calloc`."

#: ../../whatsnew/3.5.rst:2182
msgid "(Contributed by Victor Stinner in :issue:`21233`.)"
msgstr "(Contribuído por Victor Stinner em :issue:`21233`.)"

#: ../../whatsnew/3.5.rst:2184
msgid "New encoding/decoding helper functions:"
msgstr "Novas funções auxiliares de codificação/descodificação:"

#: ../../whatsnew/3.5.rst:2186
msgid ":c:func:`Py_DecodeLocale` (replaced ``_Py_char2wchar()``),"
msgstr ":c:func:`Py_DecodeLocale` (substituída ``_Py_char2wchar()``),"

#: ../../whatsnew/3.5.rst:2187
msgid ":c:func:`Py_EncodeLocale` (replaced ``_Py_wchar2char()``)."
msgstr ":c:func:`Py_EncodeLocale` (substituída ``_Py_wchar2char()``)."

#: ../../whatsnew/3.5.rst:2189
msgid "(Contributed by Victor Stinner in :issue:`18395`.)"
msgstr "(Contribuído por Victor Stinner em :issue:`18395`.)"

#: ../../whatsnew/3.5.rst:2191
msgid ""
"A new :c:func:`PyCodec_NameReplaceErrors` function to replace the unicode "
"encode error with ``\\N{...}`` escapes. (Contributed by Serhiy Storchaka in :"
"issue:`19676`.)"
msgstr ""
"Uma nova função :c:func:`PyCodec_NameReplaceErrors` para substituir o erro "
"de codificação unicode com escapes ``\\N{...}``. (Contribuído por Serhiy "
"Storchaka em :issue:`19676`.)"

#: ../../whatsnew/3.5.rst:2195
msgid ""
"A new :c:func:`PyErr_FormatV` function similar to :c:func:`PyErr_Format`, "
"but accepts a :c:type:`va_list` argument. (Contributed by Antoine Pitrou in :"
"issue:`18711`.)"
msgstr ""
"Uma nova função :c:func:`PyErr_FormatV` semelhante a :c:func:`PyErr_Format`, "
"mas que aceita um argumento :c:type:`va_list`. (Contribuído por Antoine "
"Pitrou em :issue:`18711`.)"

#: ../../whatsnew/3.5.rst:2199
msgid ""
"A new :c:data:`PyExc_RecursionError` exception. (Contributed by Georg Brandl "
"in :issue:`19235`.)"
msgstr ""
"Uma nova exceção :c:data:`PyExc_RecursionError`. (Contribuído por Georg "
"Brandlem :issue:`19235`.)"

#: ../../whatsnew/3.5.rst:2202
msgid ""
"New :c:func:`PyModule_FromDefAndSpec`, :c:func:`PyModule_FromDefAndSpec2`, "
"and :c:func:`PyModule_ExecDef` functions introduced by :pep:`489` -- multi-"
"phase extension module initialization. (Contributed by Petr Viktorin in :"
"issue:`24268`.)"
msgstr ""
"Novas funções :c:func:`PyModule_FromDefAndSpec`, :c:func:"
"`PyModule_FromDefAndSpec2`, e :c:func:`PyModule_ExecDef` introduzidas pela :"
"pep:`489` -- inicialização de módulos de extensão em múltiplas fases. "
"(Contribuído por Petr Viktorin em :issue:`24268`.)"

#: ../../whatsnew/3.5.rst:2207
msgid ""
"New :c:func:`PyNumber_MatrixMultiply` and :c:func:"
"`PyNumber_InPlaceMatrixMultiply` functions to perform matrix multiplication. "
"(Contributed by Benjamin Peterson in :issue:`21176`.  See also :pep:`465` "
"for details.)"
msgstr ""
"Novas funções :c:func:`PyNumber_MatrixMultiply` e :c:func:"
"`PyNumber_InPlaceMatrixMultiply` para realizar multiplicação de matrizes. "
"(Contribuído por Benjamin Peterson em :issue:`21176`. Veja também :pep:`465` "
"para detalhes.)"

#: ../../whatsnew/3.5.rst:2213
msgid ""
"The :c:member:`PyTypeObject.tp_finalize` slot is now part of the stable ABI."
msgstr ""
"O *slot* :c:member:`PyTypeObject.tp_finalize` agora faz parte da ABI estável."

#: ../../whatsnew/3.5.rst:2215
msgid ""
"Windows builds now require Microsoft Visual C++ 14.0, which is available as "
"part of `Visual Studio 2015 <https://visualstudio.microsoft.com/en/vs/older-"
"downloads/#visual-studio-2015-and-other-products>`_."
msgstr ""
"As compilações para Windows agora requerem Microsoft Visual C++ 14.0, que "
"está disponível como parte do `Visual Studio 2015 <https://visualstudio."
"microsoft.com/en/vs/older-downloads/#visual-studio-2015-and-other-"
"products>`_."

#: ../../whatsnew/3.5.rst:2218
msgid ""
"Extension modules now include a platform information tag in their filename "
"on some platforms (the tag is optional, and CPython will import extensions "
"without it, although if the tag is present and mismatched, the extension "
"won't be loaded):"
msgstr ""
"Os módulos de extensão agora incluem uma etiqueta de informação da "
"plataforma nos seus nomes de ficheiro em algumas plataformas (a etiqueta é "
"opcional, e o CPython importará extensões sem ela, embora se a etiqueta "
"estiver presente e não corresponder, a extensão não será carregada):"

#: ../../whatsnew/3.5.rst:2223
msgid ""
"On Linux, extension module filenames end with ``.cpython-<major><minor>m-"
"<architecture>-<os>.pyd``:"
msgstr ""
"No Linux, os nomes de ficheiros dos módulos de extensão terminam com ``."
"cpython-<major><minor>m-<architecture>-<os>.pyd``:"

#: ../../whatsnew/3.5.rst:2226 ../../whatsnew/3.5.rst:2243
msgid ""
"``<major>`` is the major number of the Python version; for Python 3.5 this "
"is ``3``."
msgstr ""
"``<major>`` é o número principal da versão do Python; para o Python 3.5 este "
"é ``3``."

#: ../../whatsnew/3.5.rst:2229 ../../whatsnew/3.5.rst:2246
msgid ""
"``<minor>`` is the minor number of the Python version; for Python 3.5 this "
"is ``5``."
msgstr ""
"``<minor>`` é o número secundário da versão do Python; para o Python 3.5 "
"este é ``5``."

#: ../../whatsnew/3.5.rst:2232
msgid ""
"``<architecture>`` is the hardware architecture the extension module was "
"built to run on. It's most commonly either ``i386`` for 32-bit Intel "
"platforms or ``x86_64`` for 64-bit Intel (and AMD) platforms."
msgstr ""
"``<architecture>`` é a arquitetura de hardware para a qual o módulo de "
"extensão foi compilado para executar. É mais comumente ``i386`` para "
"plataformas Intel de 32 bits ou ``x86_64`` para plataformas Intel (e AMD) de "
"64 bits."

#: ../../whatsnew/3.5.rst:2236
msgid ""
"``<os>`` is always ``linux-gnu``, except for extensions built to talk to the "
"32-bit ABI on 64-bit platforms, in which case it is ``linux-gnu32`` (and "
"``<architecture>`` will be ``x86_64``)."
msgstr ""
"``<os>`` é sempre ``linux-gnu``, exceto para extensões compiladas para "
"comunicar com a ABI de 32 bits em plataformas de 64 bits, caso em que será "
"``linux-gnu32`` (e ``<architecture>`` será ``x86_64``)."

#: ../../whatsnew/3.5.rst:2240
msgid ""
"On Windows, extension module filenames end with ``<debug>.cp<major><minor>-"
"<platform>.pyd``:"
msgstr ""
"No Windows, os nomes de ficheiros dos módulos de extensão terminam com "
"``<debug>.cp<major><minor>-<platform>.pyd``:"

#: ../../whatsnew/3.5.rst:2249
msgid ""
"``<platform>`` is the platform the extension module was built for, either "
"``win32`` for Win32, ``win_amd64`` for Win64, ``win_ia64`` for Windows "
"Itanium 64, and ``win_arm`` for Windows on ARM."
msgstr ""
"``<platform>`` é a plataforma para a qual o módulo de extensão foi "
"compilado, seja ``win32`` para Win32, ``win_amd64`` para Win64, ``win_ia64`` "
"para Windows Itanium 64, e ``win_arm`` para Windows em ARM."

#: ../../whatsnew/3.5.rst:2253
msgid ""
"If built in debug mode, ``<debug>`` will be ``_d``, otherwise it will be "
"blank."
msgstr ""
"Se compilado em modo de depuração, ``<debug>`` será ``_d``, caso contrário, "
"ficará em branco."

#: ../../whatsnew/3.5.rst:2256
msgid ""
"On OS X platforms, extension module filenames now end with ``-darwin.so``."
msgstr ""
"Nas plataformas OS X, os nomes de ficheiros dos módulos de extensão agora "
"terminam com ``-darwin.so``."

#: ../../whatsnew/3.5.rst:2258
msgid ""
"On all other platforms, extension module filenames are the same as they were "
"with Python 3.4."
msgstr ""
"Em todas as outras plataformas, os nomes de ficheiros dos módulos de "
"extensão são os mesmos que eram com o Python 3.4."

#: ../../whatsnew/3.5.rst:2263
msgid "Deprecated"
msgstr "Obsoleto"

#: ../../whatsnew/3.5.rst:2266
msgid "New Keywords"
msgstr "Novas Palavras-Chave"

#: ../../whatsnew/3.5.rst:2268
msgid ""
"``async`` and ``await`` are not recommended to be used as variable, class, "
"function or module names.  Introduced by :pep:`492` in Python 3.5, they will "
"become proper keywords in Python 3.7."
msgstr ""
"Não é recomendado usar ``async`` e ``await`` como nomes de variáveis, "
"classes, funções ou módulos. Introduzidas pela :pep:`492` no Python 3.5, "
"tornar-se-ão palavras-chave próprias no Python 3.7."

#: ../../whatsnew/3.5.rst:2274
msgid "Deprecated Python Behavior"
msgstr "Comportamento Python Obsoleto"

#: ../../whatsnew/3.5.rst:2276
msgid ""
"Raising the :exc:`StopIteration` exception inside a generator will now "
"generate a silent :exc:`PendingDeprecationWarning`, which will become a non-"
"silent deprecation warning in Python 3.6 and will trigger a :exc:"
"`RuntimeError` in Python 3.7. See :ref:`PEP 479: Change StopIteration "
"handling inside generators <whatsnew-pep-479>` for details."
msgstr ""
"Lançar a exceção :exc:`StopIteration` dentro de um gerador agora gerará um "
"aviso silencioso :exc:`PendingDeprecationWarning`, que se tornará um aviso "
"de obsolescência não silencioso no Python 3.6 e desencadeará um :exc:"
"`RuntimeError` no Python 3.7. Veja :ref:`PEP 479: Alterar o tratamento de "
"StopIteration dentro de geradores <whatsnew-pep-479>` para detalhes."

#: ../../whatsnew/3.5.rst:2284
msgid "Unsupported Operating Systems"
msgstr "Sistemas Operativos Não Suportados"

#: ../../whatsnew/3.5.rst:2286
msgid ""
"Windows XP is no longer supported by Microsoft, thus, per :PEP:`11`, CPython "
"3.5 is no longer officially supported on this OS."
msgstr ""
"O Windows XP já não é suportado pela Microsoft, portanto, de acordo com a :"
"PEP:`11`, o CPython 3.5 já não é oficialmente suportado neste sistema "
"operativo."

#: ../../whatsnew/3.5.rst:2291
msgid "Deprecated Python modules, functions and methods"
msgstr "Módulos, funções e métodos Python obsoleto"

#: ../../whatsnew/3.5.rst:2293
msgid ""
"The :mod:`!formatter` module has now graduated to full deprecation and is "
"still slated for removal in Python 3.6."
msgstr ""
"O módulo :mod:`!formatter` agora está completamente obsoleto e ainda está "
"previsto para remoção no Python 3.6."

#: ../../whatsnew/3.5.rst:2296
msgid ""
"The :func:`!asyncio.async` function is deprecated in favor of :func:"
"`~asyncio.ensure_future`."
msgstr ""
"A função :func:`!asyncio.async` está obsoleta em favor de :func:`~asyncio."
"ensure_future`."

#: ../../whatsnew/3.5.rst:2299
msgid ""
"The :mod:`!smtpd` module has in the past always decoded the DATA portion of "
"email messages using the ``utf-8`` codec.  This can now be controlled by the "
"new *decode_data* keyword to :class:`!SMTPServer`.  The default value is "
"``True``, but this default is deprecated.  Specify the *decode_data* keyword "
"with an appropriate value to avoid the deprecation warning."
msgstr ""
"O módulo :mod:`!smtpd` no passado sempre descodificava a parte DATA das "
"mensagens de email usando o *codec* ``utf-8``. Isto agora pode ser "
"controlado pela nova palavra-chave *decode_data* para :class:`!SMTPServer`. "
"O valor predefinido é ``True``, mas este predefinido está obsoleto. "
"Especifique a palavra-chave *decode_data* com um valor apropriado para "
"evitar o aviso de obsolescência."

#: ../../whatsnew/3.5.rst:2305
msgid ""
"Directly assigning values to the :attr:`~http.cookies.Morsel.key`, :attr:"
"`~http.cookies.Morsel.value` and :attr:`~http.cookies.Morsel.coded_value` "
"of :class:`http.cookies.Morsel` objects is deprecated.  Use the :meth:`~http."
"cookies.Morsel.set` method instead.  In addition, the undocumented "
"*LegalChars* parameter of :meth:`~http.cookies.Morsel.set` is deprecated, "
"and is now ignored."
msgstr ""
"Atribuir valores diretamente aos atributos :attr:`~http.cookies.Morsel."
"key`, :attr:`~http.cookies.Morsel.value` e :attr:`~http.cookies.Morsel."
"coded_value` de objetos :class:`http.cookies.Morsel` está obsoleto. Use o "
"método :meth:`~http.cookies.Morsel.set` em vez disso. Além disso, o "
"parâmetro não documentado *LegalChars* do método :meth:`~http.cookies.Morsel."
"set` está obsoleto e agora é ignorado."

#: ../../whatsnew/3.5.rst:2312
msgid ""
"Passing a format string as keyword argument *format_string* to the :meth:"
"`~string.Formatter.format` method of the :class:`string.Formatter` class has "
"been deprecated. (Contributed by Serhiy Storchaka in :issue:`23671`.)"
msgstr ""
"Passar uma *string* de formato como argumento de palavra-chave "
"*format_string* para o método :meth:`~string.Formatter.format` da classe :"
"class:`string.Formatter` está obsoleto. (Contribuído por Serhiy Storchaka "
"em :issue:`23671`.)"

#: ../../whatsnew/3.5.rst:2317
msgid ""
"The :func:`!platform.dist` and :func:`!platform.linux_distribution` "
"functions are now deprecated.  Linux distributions use too many different "
"ways of describing themselves, so the functionality is left to a package. "
"(Contributed by Vajrasky Kok and Berker Peksag in :issue:`1322`.)"
msgstr ""
"As funções :func:`!platform.dist` e :func:`!platform.linux_distribution` "
"agora estão obsoletas. As distribuições Linux usam muitas formas diferentes "
"de se descreverem, por isso a funcionalidade é deixada para um pacote. "
"(Contribuído por Vajrasky Kok e Berker Peksag em :issue:`1322`.)"

#: ../../whatsnew/3.5.rst:2322
msgid ""
"The previously undocumented ``from_function`` and ``from_builtin`` methods "
"of :class:`inspect.Signature` are deprecated.  Use the new :meth:`Signature."
"from_callable() <inspect.Signature.from_callable>` method instead. "
"(Contributed by Yury Selivanov in :issue:`24248`.)"
msgstr ""
"Os métodos não documentados ``from_function`` e ``from_builtin`` de :class:"
"`inspect.Signature` estão obsoletos. Use o novo método :meth:`Signature."
"from_callable() <inspect.Signature.from_callable>` em vez disso. "
"(Contribuído por Yury Selivanov em :issue:`24248`.)"

#: ../../whatsnew/3.5.rst:2327
msgid ""
"The :func:`inspect.getargspec` function is deprecated and scheduled to be "
"removed in Python 3.6.  (See :issue:`20438` for details.)"
msgstr ""

#: ../../whatsnew/3.5.rst:2330
msgid ""
"The :mod:`inspect` :func:`~inspect.getfullargspec`, :func:`~inspect."
"getcallargs`, and :func:`!formatargspec` functions are deprecated in favor "
"of the :func:`inspect.signature` API. (Contributed by Yury Selivanov in :"
"issue:`20438`.)"
msgstr ""
"As funções :mod:`inspect` :func:`~inspect.getfullargspec`, :func:`~inspect."
"getcallargs` e :func:`!formatargspec` estão obsoletas em favor da API :func:"
"`inspect.signature`. (Contribuído por Yury Selivanov em :issue:`20438`.)"

#: ../../whatsnew/3.5.rst:2335
msgid ""
":func:`~inspect.getargvalues` and :func:`~inspect.formatargvalues` functions "
"were inadvertently marked as deprecated with the release of Python 3.5.0."
msgstr ""
"As funções :func:`~inspect.getargvalues` e :func:`~inspect.formatargvalues` "
"foram inadvertidamente marcadas como obsoletas com o lançamento do Python "
"3.5.0."

#: ../../whatsnew/3.5.rst:2338
msgid ""
"Use of :const:`re.LOCALE` flag with str patterns or :const:`re.ASCII` is now "
"deprecated.  (Contributed by Serhiy Storchaka in :issue:`22407`.)"
msgstr ""
"O uso da flag :const:`re.LOCALE` com padrões de *string* ou :const:`re."
"ASCII` está agora obsoleto. (Contribuído por Serhiy Storchaka em :issue:"
"`22407`.)"

#: ../../whatsnew/3.5.rst:2341
msgid ""
"Use of unrecognized special sequences consisting of ``'\\'`` and an ASCII "
"letter in regular expression patterns and replacement patterns now raises a "
"deprecation warning and will be forbidden in Python 3.6. (Contributed by "
"Serhiy Storchaka in :issue:`23622`.)"
msgstr ""
"O uso de sequências especiais não reconhecidas consistindo de ``'\\'`` e uma "
"letra ASCII em padrões de expressões regulares e padrões de substituição "
"agora gera um aviso de obsolescência e será proibido no Python 3.6. "
"(Contribuído por Serhiy Storchaka em :issue:`23622`.)"

#: ../../whatsnew/3.5.rst:2346
msgid ""
"The undocumented and unofficial *use_load_tests* default argument of the :"
"meth:`unittest.TestLoader.loadTestsFromModule` method now is deprecated and "
"ignored. (Contributed by Robert Collins and Barry A. Warsaw in :issue:"
"`16662`.)"
msgstr ""
"O argumento predefinido não documentado e não oficial *use_load_tests* do "
"método :meth:`unittest.TestLoader.loadTestsFromModule` agora está obsoleto e "
"é ignorado. (Contribuído por Robert Collins e Barry A. Warsaw em :issue:"
"`16662`.)"

#: ../../whatsnew/3.5.rst:2353
msgid "Removed"
msgstr "Removido"

#: ../../whatsnew/3.5.rst:2356
msgid "API and Feature Removals"
msgstr "Remoções de API e Funcionalidades"

#: ../../whatsnew/3.5.rst:2358
msgid ""
"The following obsolete and previously deprecated APIs and features have been "
"removed:"
msgstr ""
"As seguintes APIs e funcionalidades obsoletas e previamente obsoletas foram "
"removidas:"

#: ../../whatsnew/3.5.rst:2361
msgid ""
"The ``__version__`` attribute has been dropped from the email package.  The "
"email code hasn't been shipped separately from the stdlib for a long time, "
"and the ``__version__`` string was not updated in the last few releases."
msgstr ""
"O atributo ``__version__`` foi removido do pacote email. O código de email "
"não tem sido distribuído separadamente da biblioteca padrão há muito tempo, "
"e a *string* ``__version__`` não foi atualizada nas últimas versões."

#: ../../whatsnew/3.5.rst:2365
msgid ""
"The internal ``Netrc`` class in the :mod:`ftplib` module was deprecated in "
"3.4, and has now been removed. (Contributed by Matt Chaput in :issue:`6623`.)"
msgstr ""
"A classe interna ``Netrc`` no módulo :mod:`ftplib` estava obsoleta desde a "
"versão 3.4 e foi agora removida. (Contribuído por Matt Chaput em :issue:"
"`6623`.)"

#: ../../whatsnew/3.5.rst:2369
msgid "The concept of ``.pyo`` files has been removed."
msgstr "O conceito de ficheiros ``.pyo`` foi removido."

#: ../../whatsnew/3.5.rst:2371
msgid ""
"The JoinableQueue class in the provisional :mod:`asyncio` module was "
"deprecated in 3.4.4 and is now removed. (Contributed by A. Jesse Jiryu Davis "
"in :issue:`23464`.)"
msgstr ""
"A classe JoinableQueue no módulo provisório :mod:`asyncio` estava obsoleta "
"desde a versão 3.4.4 e foi agora removida. (Contribuído por A. Jesse Jiryu "
"Davis em :issue:`23464`.)"

#: ../../whatsnew/3.5.rst:2377
msgid "Porting to Python 3.5"
msgstr "Portabilidade para Python 3.5"

#: ../../whatsnew/3.5.rst:2379
msgid ""
"This section lists previously described changes and other bugfixes that may "
"require changes to your code."
msgstr ""
"Esta secção lista alterações previamente descritas e outras correções de "
"erros que podem exigir alterações no seu código."

#: ../../whatsnew/3.5.rst:2384
msgid "Changes in Python behavior"
msgstr "Alterações no comportamento do Python"

#: ../../whatsnew/3.5.rst:2386
msgid ""
"Due to an oversight, earlier Python versions erroneously accepted the "
"following syntax::"
msgstr ""
"Devido a um descuido, versões anteriores do Python aceitavam erroneamente a "
"seguinte sintaxe::"

#: ../../whatsnew/3.5.rst:2389
msgid ""
"f(1 for x in [1], *args)\n"
"f(1 for x in [1], **kwargs)"
msgstr ""
"f(1 for x in [1], *args)\n"
"f(1 for x in [1], **kwargs)"

#: ../../whatsnew/3.5.rst:2392
msgid ""
"Python 3.5 now correctly raises a :exc:`SyntaxError`, as generator "
"expressions must be put in parentheses if not a sole argument to a function."
msgstr ""
"O Python 3.5 agora lança corretamente um :exc:`SyntaxError`, uma vez que as "
"expressões geradoras devem ser colocadas entre parênteses se não forem o "
"único argumento de uma função."

#: ../../whatsnew/3.5.rst:2397
msgid "Changes in the Python API"
msgstr "Alterações na API do Python"

#: ../../whatsnew/3.5.rst:2399
msgid ""
":pep:`475`: System calls are now retried when interrupted by a signal "
"instead of raising :exc:`InterruptedError` if the Python signal handler does "
"not raise an exception."
msgstr ""
":pep:`475`: As chamadas de sistema são agora repetidas quando interrompidas "
"por um sinal em vez de lançar :exc:`InterruptedError` se o gestor de sinal "
"do Python não lançar uma exceção."

#: ../../whatsnew/3.5.rst:2403
msgid ""
"Before Python 3.5, a :class:`datetime.time` object was considered to be "
"false if it represented midnight in UTC.  This behavior was considered "
"obscure and error-prone and has been removed in Python 3.5.  See :issue:"
"`13936` for full details."
msgstr ""
"Antes do Python 3.5, um objeto :class:`datetime.time` era considerado falso "
"se representasse meia-noite em UTC. Este comportamento era considerado "
"obscuro e propenso a erros e foi removido no Python 3.5. Veja :issue:`13936` "
"para detalhes completos."

#: ../../whatsnew/3.5.rst:2408
msgid ""
"The :meth:`!ssl.SSLSocket.send` method now raises either :exc:`ssl."
"SSLWantReadError` or :exc:`ssl.SSLWantWriteError` on a non-blocking socket "
"if the operation would block.  Previously, it would return ``0``.  "
"(Contributed by Nikolaus Rath in :issue:`20951`.)"
msgstr ""
"O método :meth:`!ssl.SSLSocket.send` agora lança :exc:`ssl.SSLWantReadError` "
"ou :exc:`ssl.SSLWantWriteError` num *socket* não bloqueante se a operação "
"bloqueasse. Anteriormente, devolvia ``0``. (Contribuído por Nikolaus Rath "
"em :issue:`20951`.)"

#: ../../whatsnew/3.5.rst:2413
msgid ""
"The ``__name__`` attribute of generators is now set from the function name, "
"instead of being set from the code name. Use ``gen.gi_code.co_name`` to "
"retrieve the code name. Generators also have a new ``__qualname__`` "
"attribute, the qualified name, which is now used for the representation of a "
"generator (``repr(gen)``). (Contributed by Victor Stinner in :issue:`21205`.)"
msgstr ""
"O atributo ``__name__`` dos geradores é agora definido a partir do nome da "
"função, em vez de ser definido a partir do nome do código. Use ``gen.gi_code."
"co_name`` para recuperar o nome do código. Os geradores também têm um novo "
"atributo ``__qualname__``, o nome qualificado, que é agora usado para a "
"representação de um gerador (``repr(gen)``). (Contribuído por Victor Stinner "
"em :issue:`21205`.)"

#: ../../whatsnew/3.5.rst:2420
msgid ""
"The deprecated \"strict\" mode and argument of :class:`~html.parser."
"HTMLParser`, :meth:`!HTMLParser.error`, and the :exc:`!HTMLParserError` "
"exception have been removed.  (Contributed by Ezio Melotti in :issue:"
"`15114`.) The *convert_charrefs* argument of :class:`~html.parser."
"HTMLParser` is now ``True`` by default.  (Contributed by Berker Peksag in :"
"issue:`21047`.)"
msgstr ""
"O modo \"strict\" obsoleto e o argumento de :class:`~html.parser."
"HTMLParser`, :meth:`!HTMLParser.error` e a exceção :exc:`!HTMLParserError` "
"foram removidos. (Contribuído por Ezio Melotti em :issue:`15114`.) O "
"argumento *convert_charrefs* de :class:`~html.parser.HTMLParser` é agora "
"``True`` por predefinição. (Contribuído por Berker Peksag em :issue:`21047`.)"

#: ../../whatsnew/3.5.rst:2426
msgid ""
"Although it is not formally part of the API, it is worth noting for porting "
"purposes (ie: fixing tests) that error messages that were previously of the "
"form \"'sometype' does not support the buffer protocol\" are now of the form "
"\"a :term:`bytes-like object` is required, not 'sometype'\". (Contributed by "
"Ezio Melotti in :issue:`16518`.)"
msgstr ""
"Embora não faça formalmente parte da API, vale a pena notar para fins de "
"portabilidade (ou seja: corrigir testes) que as mensagens de erro que antes "
"eram da forma \"'sometype' não suporta o protocolo de *buffer*\" agora são "
"da forma \"é necessário um objeto :term:`semelhante a bytes`, não "
"'sometype'\". (Contribuído por Ezio Melotti em :issue:`16518`.)"

#: ../../whatsnew/3.5.rst:2432
msgid ""
"If the current directory is set to a directory that no longer exists then :"
"exc:`FileNotFoundError` will no longer be raised and instead :meth:"
"`~importlib.machinery.FileFinder.find_spec` will return ``None`` **without** "
"caching ``None`` in :data:`sys.path_importer_cache`, which is different than "
"the typical case (:issue:`22834`)."
msgstr ""
"Se o diretório atual estiver definido para um diretório que já não existe, "
"então :exc:`FileNotFoundError` já não será lançado e, em vez disso, :meth:"
"`~importlib.machinery.FileFinder.find_spec` devolverá ``None`` **sem** "
"armazenar em cache ``None`` em :data:`sys.path_importer_cache`, o que é "
"diferente do caso típico (:issue:`22834`)."

#: ../../whatsnew/3.5.rst:2438
msgid ""
"HTTP status code and messages from :mod:`http.client` and :mod:`http.server` "
"were refactored into a common :class:`~http.HTTPStatus` enum.  The values "
"in :mod:`http.client` and :mod:`http.server` remain available for backwards "
"compatibility.  (Contributed by Demian Brecht in :issue:`21793`.)"
msgstr ""
"Os códigos de estado HTTP e mensagens de :mod:`http.client` e :mod:`http."
"server` foram refatorados para uma enumeração comum :class:`~http."
"HTTPStatus`. Os valores em :mod:`http.client` e :mod:`http.server` "
"permanecem disponíveis para compatibilidade retroativa. (Contribuído por "
"Demian Brecht em :issue:`21793`.)"

#: ../../whatsnew/3.5.rst:2443
msgid ""
"When an import loader defines :meth:`~importlib.abc.Loader.exec_module` it "
"is now expected to also define :meth:`~importlib.abc.Loader.create_module` "
"(raises a :exc:`DeprecationWarning` now, will be an error in Python 3.6). If "
"the loader inherits from :class:`importlib.abc.Loader` then there is nothing "
"to do, else simply define :meth:`~importlib.abc.Loader.create_module` to "
"return ``None``.  (Contributed by Brett Cannon in :issue:`23014`.)"
msgstr ""
"Quando um carregador de importação define :meth:`~importlib.abc.Loader."
"exec_module`, agora também é esperado que defina :meth:`~importlib.abc."
"Loader.create_module` (lança um :exc:`DeprecationWarning` agora, será um "
"erro no Python 3.6). Se o carregador herda de :class:`importlib.abc.Loader`, "
"então não há nada a fazer, caso contrário, defina simplesmente :meth:"
"`~importlib.abc.Loader.create_module` para devolver ``None``. (Contribuído "
"por Brett Cannon em :issue:`23014`.)"

#: ../../whatsnew/3.5.rst:2451
msgid ""
"The :func:`re.split` function always ignored empty pattern matches, so the "
"``\"x*\"`` pattern worked the same as ``\"x+\"``, and the ``\"\\b\"`` "
"pattern never worked.  Now :func:`re.split` raises a warning if the pattern "
"could match an empty string.  For compatibility, use patterns that never "
"match an empty string (e.g. ``\"x+\"`` instead of ``\"x*\"``).  Patterns "
"that could only match an empty string (such as ``\"\\b\"``) now raise an "
"error. (Contributed by Serhiy Storchaka in :issue:`22818`.)"
msgstr ""
"A função :func:`re.split` sempre ignorou correspondências de padrões vazios, "
"por isso o padrão ``\"x*\"`` funcionava da mesma forma que ``\"x+\"``, e o "
"padrão ``\"\\b\"`` nunca funcionou. Agora, :func:`re.split` lança um aviso "
"se o padrão puder corresponder a uma *string* vazia. Para compatibilidade, "
"use padrões que nunca correspondam a uma *string* vazia (por exemplo, ``\"x+"
"\"`` em vez de ``\"x*\"``). Padrões que só possam corresponder a uma "
"*string* vazia (como ``\"\\b\"``) agora lançam um erro. (Contribuído por "
"Serhiy Storchaka em :issue:`22818`.)"

#: ../../whatsnew/3.5.rst:2459
msgid ""
"The :class:`http.cookies.Morsel` dict-like interface has been made self "
"consistent:  morsel comparison now takes the :attr:`~http.cookies.Morsel."
"key` and :attr:`~http.cookies.Morsel.value` into account, :meth:`~http."
"cookies.Morsel.copy` now results in a :class:`~http.cookies.Morsel` instance "
"rather than a :class:`dict`, and :meth:`~http.cookies.Morsel.update` will "
"now raise an exception if any of the keys in the update dictionary are "
"invalid.  In addition, the undocumented *LegalChars* parameter of :func:"
"`~http.cookies.Morsel.set` is deprecated and is now ignored.  (Contributed "
"by Demian Brecht in :issue:`2211`.)"
msgstr ""
"A interface semelhante a dicionário de :class:`http.cookies.Morsel` foi "
"tornada auto-consistente: a comparação de *morsel* agora tem em conta o :"
"attr:`~http.cookies.Morsel.key` e :attr:`~http.cookies.Morsel.value`, :meth:"
"`~http.cookies.Morsel.copy` agora resulta numa instância :class:`~http."
"cookies.Morsel` em vez de um :class:`dict`, e :meth:`~http.cookies.Morsel."
"update` agora lançará uma exceção se alguma das chaves no dicionário de "
"atualização for inválida. Além disso, o parâmetro não documentado "
"*LegalChars* de :func:`~http.cookies.Morsel.set` está obsoleto e agora é "
"ignorado. (Contribuído por Demian Brecht em :issue:`2211`.)"

#: ../../whatsnew/3.5.rst:2469
msgid ""
":pep:`488` has removed ``.pyo`` files from Python and introduced the "
"optional ``opt-`` tag in ``.pyc`` file names. The :func:`importlib.util."
"cache_from_source` has gained an *optimization* parameter to help control "
"the ``opt-`` tag. Because of this, the *debug_override* parameter of the "
"function is now deprecated. ``.pyo`` files are also no longer supported as a "
"file argument to the Python interpreter and thus serve no purpose when "
"distributed on their own (i.e. sourceless code distribution). Due to the "
"fact that the magic number for bytecode has changed in Python 3.5, all old "
"``.pyo`` files from previous versions of Python are invalid regardless of "
"this PEP."
msgstr ""
"A :pep:`488` removeu os ficheiros ``.pyo`` do Python e introduziu a etiqueta "
"opcional ``opt-`` nos nomes de ficheiros ``.pyc``. A função :func:`importlib."
"util.cache_from_source` ganhou um parâmetro *optimization* para ajudar a "
"controlar a etiqueta ``opt-``. Devido a isto, o parâmetro *debug_override* "
"da função agora está obsoleto. Os ficheiros ``.pyo`` também já não são "
"suportados como argumento de ficheiro para o interpretador Python e, "
"portanto, não servem para nada quando distribuídos sozinhos (ou seja, "
"distribuição de código sem fonte). Devido ao facto de o número mágico para "
"*bytecode* ter mudado no Python 3.5, todos os antigos ficheiros ``.pyo`` de "
"versões anteriores do Python são inválidos independentemente desta PEP."

#: ../../whatsnew/3.5.rst:2480
msgid ""
"The :mod:`socket` module now exports the :const:`~socket.CAN_RAW_FD_FRAMES` "
"constant on linux 3.6 and greater."
msgstr ""
"O módulo :mod:`socket` agora exporta a constante :const:`~socket."
"CAN_RAW_FD_FRAMES` no Linux 3.6 e superior."

#: ../../whatsnew/3.5.rst:2483
msgid ""
"The :func:`ssl.cert_time_to_seconds` function now interprets the input time "
"as UTC and not as local time, per :rfc:`5280`.  Additionally, the return "
"value is always an :class:`int`. (Contributed by Akira Li in :issue:`19940`.)"
msgstr ""
"A função :func:`ssl.cert_time_to_seconds` agora interpreta o tempo de "
"entrada como UTC e não como hora local, de acordo com :rfc:`5280`. Além "
"disso, o valor de retorno é sempre um :class:`int`. (Contribuído por Akira "
"Li em :issue:`19940`.)"

#: ../../whatsnew/3.5.rst:2487
msgid ""
"The ``pygettext.py`` Tool now uses the standard +NNNN format for timezones "
"in the POT-Creation-Date header."
msgstr ""
"A ferramenta ``pygettext.py`` agora usa o formato padrão +NNNN para fusos "
"horários no cabeçalho POT-Creation-Date."

#: ../../whatsnew/3.5.rst:2490
msgid ""
"The :mod:`smtplib` module now uses :data:`sys.stderr` instead of the "
"previous module-level :data:`!stderr` variable for debug output.  If your "
"(test) program depends on patching the module-level variable to capture the "
"debug output, you will need to update it to capture sys.stderr instead."
msgstr ""
"O módulo :mod:`smtplib` agora usa :data:`sys.stderr` em vez da variável "
"anterior a nível de módulo :data:`!stderr` para saída de depuração. Se o seu "
"programa (de teste) depender de corrigir a variável a nível de módulo para "
"capturar a saída de depuração, terá de atualizá-lo para capturar sys.stderr "
"em vez disso."

#: ../../whatsnew/3.5.rst:2495
msgid ""
"The :meth:`str.startswith` and :meth:`str.endswith` methods no longer return "
"``True`` when finding the empty string and the indexes are completely out of "
"range.  (Contributed by Serhiy Storchaka in :issue:`24284`.)"
msgstr ""
"Os métodos :meth:`str.startswith` e :meth:`str.endswith` já não devolvem "
"``True`` ao encontrar a *string* vazia e os índices estarem completamente "
"fora do intervalo. (Contribuído por Serhiy Storchaka em :issue:`24284`.)"

#: ../../whatsnew/3.5.rst:2499
msgid ""
"The :func:`inspect.getdoc` function now returns documentation strings "
"inherited from base classes.  Documentation strings no longer need to be "
"duplicated if the inherited documentation is appropriate.  To suppress an "
"inherited string, an empty string must be specified (or the documentation "
"may be filled in).  This change affects the output of the :mod:`pydoc` "
"module and the :func:`help` function. (Contributed by Serhiy Storchaka in :"
"issue:`15582`.)"
msgstr ""
"A função :func:`inspect.getdoc` agora devolve *strings* de documentação "
"herdadas de classes base. As *strings* de documentação já não precisam de "
"ser duplicadas se a documentação herdada for apropriada. Para suprimir uma "
"*string* herdada, deve ser especificada uma *string* vazia (ou a "
"documentação pode ser preenchida). Esta alteração afeta a saída do módulo :"
"mod:`pydoc` e da função :func:`help`. (Contribuído por Serhiy Storchaka em :"
"issue:`15582`.)"

#: ../../whatsnew/3.5.rst:2507
msgid ""
"Nested :func:`functools.partial` calls are now flattened.  If you were "
"relying on the previous behavior, you can now either add an attribute to a :"
"func:`functools.partial` object or you can create a subclass of :func:"
"`functools.partial`. (Contributed by Alexander Belopolsky in :issue:`7830`.)"
msgstr ""
"As chamadas aninhadas de :func:`functools.partial` são agora achatadas. Se "
"estava a depender do comportamento anterior, pode agora adicionar um "
"atributo a um objeto :func:`functools.partial` ou pode criar uma subclasse "
"de :func:`functools.partial`. (Contribuído por Alexander Belopolsky em :"
"issue:`7830`.)"

#: ../../whatsnew/3.5.rst:2514
msgid "Changes in the C API"
msgstr "Alterações na API C"

#: ../../whatsnew/3.5.rst:2516
msgid ""
"The undocumented :c:member:`!format` member of the (non-public) :c:type:`!"
"PyMemoryViewObject` structure has been removed. All extensions relying on "
"the relevant parts in ``memoryobject.h`` must be rebuilt."
msgstr ""
"O membro não documentado :c:member:`!format` da estrutura (não pública) :c:"
"type:`!PyMemoryViewObject` foi removido. Todas as extensões que dependem das "
"partes relevantes em ``memoryobject.h`` devem ser recompiladas."

#: ../../whatsnew/3.5.rst:2521
msgid ""
"The :c:type:`!PyMemAllocator` structure was renamed to :c:type:"
"`PyMemAllocatorEx` and a new ``calloc`` field was added."
msgstr ""
"A estrutura :c:type:`!PyMemAllocator` foi renomeada para :c:type:"
"`PyMemAllocatorEx` e foi adicionado um novo campo ``calloc``."

#: ../../whatsnew/3.5.rst:2524
msgid ""
"Removed non-documented macro :c:macro:`!PyObject_REPR()` which leaked "
"references. Use format character ``%R`` in :c:func:`PyUnicode_FromFormat`-"
"like functions to format the :func:`repr` of the object. (Contributed by "
"Serhiy Storchaka in :issue:`22453`.)"
msgstr ""
"Macro não documentada removida :c:macro:`!PyObject_REPR()`, que causava "
"fugas de referências. Use o carácter de formatação ``%R`` em funções do "
"tipo :c:func:`PyUnicode_FromFormat` para formatar o :func:`repr` do objeto. "
"(Contribuído por Serhiy Storchaka em :issue:`22453`.)"

#: ../../whatsnew/3.5.rst:2529
msgid ""
"Because the lack of the :attr:`~type.__module__` attribute breaks pickling "
"and introspection, a deprecation warning is now raised for builtin types "
"without the :attr:`~type.__module__` attribute.  This will be an :exc:"
"`AttributeError` in the future. (Contributed by Serhiy Storchaka in :issue:"
"`20204`.)"
msgstr ""
"Porque a falta do atributo :attr:`~type.__module__` quebra a serialização e "
"a introspeção, um aviso de obsolescência é agora lançado para tipos "
"integrados sem o atributo :attr:`~type.__module__`. Isto será um :exc:"
"`AttributeError` no futuro. (Contribuído por Serhiy Storchaka em :issue:"
"`20204`.)"

#: ../../whatsnew/3.5.rst:2535
msgid ""
"As part of the :pep:`492` implementation, the ``tp_reserved`` slot of :c:"
"type:`PyTypeObject` was replaced with a :c:member:`~PyTypeObject."
"tp_as_async` slot.  Refer to :ref:`coro-objects` for new types, structures "
"and functions."
msgstr ""
"Como parte da implementação da :pep:`492`, o *slot* ``tp_reserved`` de :c:"
"type:`PyTypeObject` foi substituído por um slot :c:member:`~PyTypeObject."
"tp_as_async`. Consulte :ref:`coro-objects` para novos tipos, estruturas e "
"funções."

#: ../../whatsnew/3.5.rst:2542
msgid "Notable changes in Python 3.5.4"
msgstr "Alterações notáveis no Python 3.5.4"

#: ../../whatsnew/3.5.rst:2545
msgid "New ``make regen-all`` build target"
msgstr "Novo alvo de compilação ``make regen-all``"

#: ../../whatsnew/3.5.rst:2547
msgid ""
"To simplify cross-compilation, and to ensure that CPython can reliably be "
"compiled without requiring an existing version of Python to already be "
"available, the autotools-based build system no longer attempts to implicitly "
"recompile generated files based on file modification times."
msgstr ""
"Para simplificar a compilação cruzada e garantir que o CPython possa ser "
"compilado de forma confiável sem a necessidade de uma versão existente do "
"Python já disponível, o sistema de compilação baseado em autotools não tenta "
"mais recompilar implicitamente os ficheiros gerados com base nas datas de "
"modificação dos ficheiros."

#: ../../whatsnew/3.5.rst:2552
msgid ""
"Instead, a new ``make regen-all`` command has been added to force "
"regeneration of these files when desired (e.g. after an initial version of "
"Python has already been built based on the pregenerated versions)."
msgstr ""
"Em vez disso, foi adicionado um novo comando ``make regen-all`` para forçar "
"a regeneração desses ficheiros quando desejado (por exemplo, após uma versão "
"inicial do Python já ter sido compilada com base nas versões pré-geradas)."

#: ../../whatsnew/3.5.rst:2556
msgid ""
"More selective regeneration targets are also defined - see :source:`Makefile."
"pre.in` for details."
msgstr ""
"Também são definidos alvos de regeneração mais seletivos - consulte :source:"
"`Makefile.pre.in` para obter detalhes."

#: ../../whatsnew/3.5.rst:2559 ../../whatsnew/3.5.rst:2572
msgid "(Contributed by Victor Stinner in :issue:`23404`.)"
msgstr "(Contribuição de Victor Stinner na :issue:`23404`.)"

#: ../../whatsnew/3.5.rst:2565
msgid "Removal of ``make touch`` build target"
msgstr "Remoção do alvo de compilação ``make touch``"

#: ../../whatsnew/3.5.rst:2567
msgid ""
"The ``make touch`` build target previously used to request implicit "
"regeneration of generated files by updating their modification times has "
"been removed."
msgstr ""
"O alvo de compilação ``make touch``, anteriormente utilizado para solicitar "
"a regeneração implícita de ficheiros gerados através da atualização das suas "
"datas de modificação, foi removido."

#: ../../whatsnew/3.5.rst:2570
msgid "It has been replaced by the new ``make regen-all`` target."
msgstr "Foi substituído pelo novo alvo ``make regen-all``."
