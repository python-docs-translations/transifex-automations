# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001 Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.14\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-10-11 14:13+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../using/configure.rst:3
msgid "Configure Python"
msgstr ""

#: ../../using/configure.rst:8
msgid "Build Requirements"
msgstr ""

#: ../../using/configure.rst:10
msgid "Features and minimum versions required to build CPython:"
msgstr ""

#: ../../using/configure.rst:12
msgid ""
"A `C11 <https://en.cppreference.com/w/c/11>`_ compiler. `Optional C11 "
"features <https://en.wikipedia.org/wiki/"
"C11_(C_standard_revision)#Optional_features>`_ are not required."
msgstr ""

#: ../../using/configure.rst:17
msgid "On Windows, Microsoft Visual Studio 2017 or later is required."
msgstr ""

#: ../../using/configure.rst:19
msgid ""
"Support for `IEEE 754 <https://en.wikipedia.org/wiki/IEEE_754>`_ floating-"
"point numbers and `floating-point Not-a-Number (NaN) <https://en.wikipedia."
"org/wiki/NaN#Floating_point>`_."
msgstr ""

#: ../../using/configure.rst:23
msgid "Support for threads."
msgstr ""

#: ../../using/configure.rst:25
msgid "To build optional modules:"
msgstr ""

#: ../../using/configure.rst:27
msgid "`libbz2 <https://sourceware.org/bzip2/>`_ for the :mod:`bz2` module."
msgstr ""

#: ../../using/configure.rst:29
msgid ""
"`libb2 <https://github.com/BLAKE2/libb2>`_ (:ref:`BLAKE2 <hashlib-blake2>`), "
"used by :mod:`hashlib` module."
msgstr ""

#: ../../using/configure.rst:32
msgid ""
"`libffi <https://sourceware.org/libffi/>`_ 3.3.0 is the recommended minimum "
"version for the :mod:`ctypes` module."
msgstr ""

#: ../../using/configure.rst:35
msgid "``liblzma``, for the :mod:`lzma` module."
msgstr ""

#: ../../using/configure.rst:37
msgid ""
"`libmpdec <https://www.bytereef.org/mpdecimal/doc/libmpdec/>`_ 2.5.0 for "
"the :mod:`decimal` module."
msgstr ""

#: ../../using/configure.rst:40
msgid "``libncurses`` or ``libncursesw``, for the :mod:`curses` module."
msgstr ""

#: ../../using/configure.rst:43
msgid "``libpanel`` or ``libpanelw``, for the :mod:`curses.panel` module."
msgstr ""

#: ../../using/configure.rst:46
msgid ""
"`libreadline <https://tiswww.case.edu/php/chet/readline/rltop.html>`_ or "
"`libedit <https://www.thrysoee.dk/editline/>`_ for the :mod:`readline` "
"module."
msgstr ""

#: ../../using/configure.rst:50
msgid ""
"`libuuid <https://linux.die.net/man/3/libuuid>`_, for the :mod:`uuid` module."
msgstr ""

#: ../../using/configure.rst:52
msgid ""
"`OpenSSL <https://www.openssl.org/>`_ 1.1.1 is the minimum version and "
"OpenSSL 3.0.18 is the recommended minimum version for the :mod:`ssl` and :"
"mod:`hashlib` extension modules."
msgstr ""

#: ../../using/configure.rst:56
msgid ""
"`SQLite <https://sqlite.org/>`_ 3.15.2 for the :mod:`sqlite3` extension "
"module."
msgstr ""

#: ../../using/configure.rst:58
msgid ""
"`Tcl/Tk <https://www.tcl-lang.org/>`_ 8.5.12 for the :mod:`tkinter` module."
msgstr ""

#: ../../using/configure.rst:60
msgid ""
"`zlib <https://www.zlib.net>`_ 1.1.4 is the reccomended minimum version for "
"the :mod:`zlib` module."
msgstr ""

#: ../../using/configure.rst:63
msgid ""
"`zstd <https://facebook.github.io/zstd/>`_ 1.4.5 is the minimum version for "
"the :mod:`compression.zstd` module."
msgstr ""

#: ../../using/configure.rst:66
msgid ""
"For a full list of dependencies required to build all modules and how to "
"install them, see the `devguide <https://devguide.python.org/getting-started/"
"setup-building/#install-dependencies>`_."
msgstr ""

#: ../../using/configure.rst:70
msgid ""
"Autoconf 2.72 and aclocal 1.16.5 are required to regenerate the :file:"
"`configure` script."
msgstr ""

#: ../../using/configure.rst:73
msgid "Tcl/Tk version 8.3.1 is now required."
msgstr ""

#: ../../using/configure.rst:76
msgid ""
"On Windows, Visual Studio 2015 or later is now required. Tcl/Tk version 8.4 "
"is now required."
msgstr ""

#: ../../using/configure.rst:80
msgid ""
"Selected C99 features are now required, like ``<stdint.h>`` and ``static "
"inline`` functions."
msgstr ""

#: ../../using/configure.rst:84
msgid "Thread support and OpenSSL 1.0.2 are now required."
msgstr ""

#: ../../using/configure.rst:87
msgid "OpenSSL 1.1.1 is now required. Require SQLite 3.7.15."
msgstr ""

#: ../../using/configure.rst:91
msgid ""
"C11 compiler, IEEE 754 and NaN support are now required. On Windows, Visual "
"Studio 2017 or later is required. Tcl/Tk version 8.5.12 is now required for "
"the :mod:`tkinter` module."
msgstr ""

#: ../../using/configure.rst:96
msgid "Autoconf 2.71, aclocal 1.16.5 and SQLite 3.15.2 are now required."
msgstr ""

#: ../../using/configure.rst:99
msgid "Autoconf 2.72 is now required."
msgstr ""

#: ../../using/configure.rst:102
msgid ""
"See also :pep:`7` \"Style Guide for C Code\" and :pep:`11` \"CPython "
"platform support\"."
msgstr ""

#: ../../using/configure.rst:107
msgid "Generated files"
msgstr ""

#: ../../using/configure.rst:109
msgid ""
"To reduce build dependencies, Python source code contains multiple generated "
"files. Commands to regenerate all generated files::"
msgstr ""

#: ../../using/configure.rst:112
msgid ""
"make regen-all\n"
"make regen-stdlib-module-names\n"
"make regen-limited-abi\n"
"make regen-configure"
msgstr ""

#: ../../using/configure.rst:117
msgid ""
"The ``Makefile.pre.in`` file documents generated files, their inputs, and "
"tools used to regenerate them. Search for ``regen-*`` make targets."
msgstr ""

#: ../../using/configure.rst:121
msgid "configure script"
msgstr ""

#: ../../using/configure.rst:123
msgid ""
"The ``make regen-configure`` command regenerates the ``aclocal.m4`` file and "
"the ``configure`` script using the ``Tools/build/regen-configure.sh`` shell "
"script which uses an Ubuntu container to get the same tools versions and "
"have a reproducible output."
msgstr ""

#: ../../using/configure.rst:128
msgid "The container is optional, the following command can be run locally::"
msgstr ""

#: ../../using/configure.rst:130
msgid "autoreconf -ivf -Werror"
msgstr ""

#: ../../using/configure.rst:132
msgid ""
"The generated files can change depending on the exact ``autoconf-archive``, "
"``aclocal`` and ``pkg-config`` versions."
msgstr ""

#: ../../using/configure.rst:139
msgid "Configure Options"
msgstr ""

#: ../../using/configure.rst:141
msgid "List all :file:`configure` script options using::"
msgstr ""

#: ../../using/configure.rst:143
msgid "./configure --help"
msgstr ""

#: ../../using/configure.rst:145
msgid ""
"See also the :file:`Misc/SpecialBuilds.txt` in the Python source "
"distribution."
msgstr ""

#: ../../using/configure.rst:148
msgid "General Options"
msgstr ""

#: ../../using/configure.rst:152
msgid ""
"Support loadable extensions in the :mod:`!_sqlite` extension module (default "
"is no) of the :mod:`sqlite3` module."
msgstr ""

#: ../../using/configure.rst:155
msgid ""
"See the :meth:`sqlite3.Connection.enable_load_extension` method of the :mod:"
"`sqlite3` module."
msgstr ""

#: ../../using/configure.rst:162
msgid ""
"Disable IPv6 support (enabled by default if supported), see the :mod:"
"`socket` module."
msgstr ""

#: ../../using/configure.rst:167
msgid "Define the size in bits of Python :class:`int` digits: 15 or 30 bits."
msgstr ""

#: ../../using/configure.rst:169
msgid "By default, the digit size is 30."
msgstr ""

#: ../../using/configure.rst:171
msgid "Define the ``PYLONG_BITS_IN_DIGIT`` to ``15`` or ``30``."
msgstr ""

#: ../../using/configure.rst:173
msgid "See :data:`sys.int_info.bits_per_digit <sys.int_info>`."
msgstr ""

#: ../../using/configure.rst:177
msgid "Set the Python executable suffix to *SUFFIX*."
msgstr ""

#: ../../using/configure.rst:179
msgid ""
"The default suffix is ``.exe`` on Windows and macOS (``python.exe`` "
"executable), ``.js`` on Emscripten node, ``.html`` on Emscripten browser, ``."
"wasm`` on WASI, and an empty string on other platforms (``python`` "
"executable)."
msgstr ""

#: ../../using/configure.rst:184
msgid ""
"The default suffix on WASM platform is one of ``.js``, ``.html`` or ``."
"wasm``."
msgstr ""

#: ../../using/configure.rst:190
msgid ""
"Select the default time zone search path for :const:`zoneinfo.TZPATH`. See "
"the :ref:`Compile-time configuration <zoneinfo_data_compile_time_config>` of "
"the :mod:`zoneinfo` module."
msgstr ""

#: ../../using/configure.rst:194
msgid ""
"Default: ``/usr/share/zoneinfo:/usr/lib/zoneinfo:/usr/share/lib/zoneinfo:/"
"etc/zoneinfo``."
msgstr ""

#: ../../using/configure.rst:196
msgid "See :data:`os.pathsep` path separator."
msgstr ""

#: ../../using/configure.rst:202
msgid ""
"Build the ``_decimal`` extension module using a thread-local context rather "
"than a coroutine-local context (default), see the :mod:`decimal` module."
msgstr ""

#: ../../using/configure.rst:205
msgid "See :const:`decimal.HAVE_CONTEXTVAR` and the :mod:`contextvars` module."
msgstr ""

#: ../../using/configure.rst:211
msgid "Override order to check db backends for the :mod:`dbm` module"
msgstr ""

#: ../../using/configure.rst:213
msgid ""
"A valid value is a colon (``:``) separated string with the backend names:"
msgstr ""

#: ../../using/configure.rst:215
msgid "``ndbm``;"
msgstr ""

#: ../../using/configure.rst:216
msgid "``gdbm``;"
msgstr ""

#: ../../using/configure.rst:217
msgid "``bdb``."
msgstr ""

#: ../../using/configure.rst:221
msgid "Disable C locale coercion to a UTF-8 based locale (enabled by default)."
msgstr ""

#: ../../using/configure.rst:223
msgid "Don't define the ``PY_COERCE_C_LOCALE`` macro."
msgstr ""

#: ../../using/configure.rst:225
msgid "See :envvar:`PYTHONCOERCECLOCALE` and the :pep:`538`."
msgstr ""

#: ../../using/configure.rst:229
msgid "Python library directory name (default is ``lib``)."
msgstr ""

#: ../../using/configure.rst:231
msgid "Fedora and SuSE use ``lib64`` on 64-bit platforms."
msgstr ""

#: ../../using/configure.rst:233
msgid "See :data:`sys.platlibdir`."
msgstr ""

#: ../../using/configure.rst:239
msgid ""
"Directory of wheel packages used by the :mod:`ensurepip` module (none by "
"default)."
msgstr ""

#: ../../using/configure.rst:242
msgid ""
"Some Linux distribution packaging policies recommend against bundling "
"dependencies. For example, Fedora installs wheel packages in the ``/usr/"
"share/python-wheels/`` directory and don't install the :mod:`!ensurepip."
"_bundled` package."
msgstr ""

#: ../../using/configure.rst:251
msgid ""
"Whether configure should use :program:`pkg-config` to detect build "
"dependencies."
msgstr ""

#: ../../using/configure.rst:254
msgid "``check`` (default): :program:`pkg-config` is optional"
msgstr ""

#: ../../using/configure.rst:255
msgid "``yes``: :program:`pkg-config` is mandatory"
msgstr ""

#: ../../using/configure.rst:256
msgid "``no``: configure does not use :program:`pkg-config` even when present"
msgstr ""

#: ../../using/configure.rst:262
msgid "Turn on internal Python performance statistics gathering."
msgstr ""

#: ../../using/configure.rst:264
msgid ""
"By default, statistics gathering is off. Use ``python3 -X pystats`` command "
"or set ``PYTHONSTATS=1`` environment variable to turn on statistics "
"gathering at Python startup."
msgstr ""

#: ../../using/configure.rst:268
msgid ""
"At Python exit, dump statistics if statistics gathering was on and not "
"cleared."
msgstr ""

#: ../../using/configure.rst:271 ../../using/configure.rst:794
msgid "Effects:"
msgstr ""

#: ../../using/configure.rst:273
msgid "Add :option:`-X pystats <-X>` command line option."
msgstr ""

#: ../../using/configure.rst:274
msgid "Add :envvar:`!PYTHONSTATS` environment variable."
msgstr ""

#: ../../using/configure.rst:275
msgid "Define the ``Py_STATS`` macro."
msgstr ""

#: ../../using/configure.rst:276
msgid "Add functions to the :mod:`sys` module:"
msgstr ""

#: ../../using/configure.rst:278
msgid ":func:`!sys._stats_on`: Turns on statistics gathering."
msgstr ""

#: ../../using/configure.rst:279
msgid ":func:`!sys._stats_off`: Turns off statistics gathering."
msgstr ""

#: ../../using/configure.rst:280
msgid ":func:`!sys._stats_clear`: Clears the statistics."
msgstr ""

#: ../../using/configure.rst:281
msgid ""
":func:`!sys._stats_dump`: Dump statistics to file, and clears the statistics."
msgstr ""

#: ../../using/configure.rst:283
msgid ""
"The statistics will be dumped to a arbitrary (probably unique) file in ``/"
"tmp/py_stats/`` (Unix) or ``C:\\temp\\py_stats\\`` (Windows). If that "
"directory does not exist, results will be printed on stderr."
msgstr ""

#: ../../using/configure.rst:287
msgid "Use ``Tools/scripts/summarize_stats.py`` to read the stats."
msgstr ""

#: ../../using/configure.rst:289
msgid "Statistics:"
msgstr ""

#: ../../using/configure.rst:291
msgid "Opcode:"
msgstr ""

#: ../../using/configure.rst:293
msgid "Specialization: success, failure, hit, deferred, miss, deopt, failures;"
msgstr ""

#: ../../using/configure.rst:294
msgid "Execution count;"
msgstr ""

#: ../../using/configure.rst:295
msgid "Pair count."
msgstr ""

#: ../../using/configure.rst:297
msgid "Call:"
msgstr ""

#: ../../using/configure.rst:299
msgid "Inlined Python calls;"
msgstr ""

#: ../../using/configure.rst:300
msgid "PyEval calls;"
msgstr ""

#: ../../using/configure.rst:301
msgid "Frames pushed;"
msgstr ""

#: ../../using/configure.rst:302
msgid "Frame object created;"
msgstr ""

#: ../../using/configure.rst:303
msgid ""
"Eval calls: vector, generator, legacy, function VECTORCALL, build class, "
"slot, function \"ex\", API, method."
msgstr ""

#: ../../using/configure.rst:306
msgid "Object:"
msgstr ""

#: ../../using/configure.rst:308
msgid "incref and decref;"
msgstr ""

#: ../../using/configure.rst:309
msgid "interpreter incref and decref;"
msgstr ""

#: ../../using/configure.rst:310
msgid "allocations: all, 512 bytes, 4 kiB, big;"
msgstr ""

#: ../../using/configure.rst:311
msgid "free;"
msgstr ""

#: ../../using/configure.rst:312
msgid "to/from free lists;"
msgstr ""

#: ../../using/configure.rst:313
msgid "dictionary materialized/dematerialized;"
msgstr ""

#: ../../using/configure.rst:314
msgid "type cache;"
msgstr ""

#: ../../using/configure.rst:315
msgid "optimization attempts;"
msgstr ""

#: ../../using/configure.rst:316
msgid "optimization traces created/executed;"
msgstr ""

#: ../../using/configure.rst:317
msgid "uops executed."
msgstr ""

#: ../../using/configure.rst:319
msgid "Garbage collector:"
msgstr ""

#: ../../using/configure.rst:321
msgid "Garbage collections;"
msgstr ""

#: ../../using/configure.rst:322
msgid "Objects visited;"
msgstr ""

#: ../../using/configure.rst:323
msgid "Objects collected."
msgstr ""

#: ../../using/configure.rst:331
msgid ""
"Enables support for running Python without the :term:`global interpreter "
"lock` (GIL): free threading build."
msgstr ""

#: ../../using/configure.rst:334
msgid ""
"Defines the ``Py_GIL_DISABLED`` macro and adds ``\"t\"`` to :data:`sys."
"abiflags`."
msgstr ""

#: ../../using/configure.rst:337
msgid "See :ref:`whatsnew313-free-threaded-cpython` for more detail."
msgstr ""

#: ../../using/configure.rst:343
msgid ""
"Indicate how to integrate the :ref:`experimental just-in-time compiler "
"<whatsnew314-jit-compiler>`."
msgstr ""

#: ../../using/configure.rst:345
msgid "``no``: Don't build the JIT."
msgstr ""

#: ../../using/configure.rst:346
msgid ""
"``yes``: Enable the JIT. To disable it at runtime, set the environment "
"variable :envvar:`PYTHON_JIT=0 <PYTHON_JIT>`."
msgstr ""

#: ../../using/configure.rst:348
msgid ""
"``yes-off``: Build the JIT, but disable it by default. To enable it at "
"runtime, set the environment variable :envvar:`PYTHON_JIT=1 <PYTHON_JIT>`."
msgstr ""

#: ../../using/configure.rst:350
msgid ""
"``interpreter``: Enable the \"JIT interpreter\" (only useful for those "
"debugging the JIT itself). To disable it at runtime, set the environment "
"variable :envvar:`PYTHON_JIT=0 <PYTHON_JIT>`."
msgstr ""

#: ../../using/configure.rst:354
msgid ""
"``--enable-experimental-jit=no`` is the default behavior if the option is "
"not provided, and ``--enable-experimental-jit`` is shorthand for ``--enable-"
"experimental-jit=yes``.  See :file:`Tools/jit/README.md` for more "
"information, including how to install the necessary build-time dependencies."
msgstr ""

#: ../../using/configure.rst:361
msgid ""
"When building CPython with JIT enabled, ensure that your system has Python "
"3.11 or later installed."
msgstr ""

#: ../../using/configure.rst:367
msgid "Path to ``pkg-config`` utility."
msgstr ""

#: ../../using/configure.rst:372
msgid "``pkg-config`` options."
msgstr ""

#: ../../using/configure.rst:376
msgid "C compiler options"
msgstr ""

#: ../../using/configure.rst:380 ../../using/configure.rst:1364
msgid "C compiler command."
msgstr ""

#: ../../using/configure.rst:384 ../../using/configure.rst:1376
msgid "C compiler flags."
msgstr ""

#: ../../using/configure.rst:388
msgid "C preprocessor command."
msgstr ""

#: ../../using/configure.rst:392
msgid "C preprocessor flags, e.g. :samp:`-I{include_dir}`."
msgstr ""

#: ../../using/configure.rst:396 ../../using/configure.rst:868
msgid "Linker options"
msgstr ""

#: ../../using/configure.rst:400
msgid "Linker flags, e.g. :samp:`-L{library_directory}`."
msgstr ""

#: ../../using/configure.rst:404
msgid "Libraries to pass to the linker, e.g. :samp:`-l{library}`."
msgstr ""

#: ../../using/configure.rst:408
msgid "Name for machine-dependent library files."
msgstr ""

#: ../../using/configure.rst:412
msgid "Options for third-party dependencies"
msgstr ""

#: ../../using/configure.rst:419
msgid ""
"C compiler and linker flags to link Python to ``libbz2``, used by :mod:`bz2` "
"module, overriding ``pkg-config``."
msgstr ""

#: ../../using/configure.rst:425
msgid ""
"C compiler and linker flags for ``libncurses`` or ``libncursesw``, used by :"
"mod:`curses` module, overriding ``pkg-config``."
msgstr ""

#: ../../using/configure.rst:431
msgid "C compiler and linker flags for ``gdbm``."
msgstr ""

#: ../../using/configure.rst:436
msgid ""
"C compiler and linker flags for ``libb2`` (:ref:`BLAKE2 <hashlib-blake2>`), "
"used by :mod:`hashlib` module, overriding ``pkg-config``."
msgstr ""

#: ../../using/configure.rst:442
msgid ""
"C compiler and linker flags for ``libedit``, used by :mod:`readline` module, "
"overriding ``pkg-config``."
msgstr ""

#: ../../using/configure.rst:448
msgid ""
"C compiler and linker flags for ``libffi``, used by :mod:`ctypes` module, "
"overriding ``pkg-config``."
msgstr ""

#: ../../using/configure.rst:454
msgid ""
"C compiler and linker flags for ``libmpdec``, used by :mod:`decimal` module, "
"overriding ``pkg-config``."
msgstr ""

#: ../../using/configure.rst:459
msgid ""
"These environment variables have no effect unless :option:`--with-system-"
"libmpdec` is specified."
msgstr ""

#: ../../using/configure.rst:465
msgid ""
"C compiler and linker flags for ``liblzma``, used by :mod:`lzma` module, "
"overriding ``pkg-config``."
msgstr ""

#: ../../using/configure.rst:471
msgid ""
"C compiler and linker flags for ``libreadline``, used by :mod:`readline` "
"module, overriding ``pkg-config``."
msgstr ""

#: ../../using/configure.rst:477
msgid ""
"C compiler and linker flags for ``libsqlite3``, used by :mod:`sqlite3` "
"module, overriding ``pkg-config``."
msgstr ""

#: ../../using/configure.rst:483
msgid ""
"C compiler and linker flags for ``libuuid``, used by :mod:`uuid` module, "
"overriding ``pkg-config``."
msgstr ""

#: ../../using/configure.rst:489
msgid ""
"C compiler and linker flags for ``libzstd``, used by :mod:`compression.zstd` "
"module, overriding ``pkg-config``."
msgstr ""

#: ../../using/configure.rst:497
msgid "C compiler and linker flags for PANEL, overriding ``pkg-config``."
msgstr ""

#: ../../using/configure.rst:499
msgid ""
"C compiler and linker flags for ``libpanel`` or ``libpanelw``, used by :mod:"
"`curses.panel` module, overriding ``pkg-config``."
msgstr ""

#: ../../using/configure.rst:505
msgid "C compiler and linker flags for TCLTK, overriding ``pkg-config``."
msgstr ""

#: ../../using/configure.rst:510
msgid ""
"C compiler and linker flags for ``libzlib``, used by :mod:`gzip` module, "
"overriding ``pkg-config``."
msgstr ""

#: ../../using/configure.rst:515
msgid "WebAssembly Options"
msgstr ""

#: ../../using/configure.rst:519
msgid "Turn on dynamic linking support for WASM."
msgstr ""

#: ../../using/configure.rst:521
msgid ""
"Dynamic linking enables ``dlopen``. File size of the executable increases "
"due to limited dead code elimination and additional features."
msgstr ""

#: ../../using/configure.rst:528
msgid "Turn on pthreads support for WASM."
msgstr ""

#: ../../using/configure.rst:534
msgid "Install Options"
msgstr ""

#: ../../using/configure.rst:538
msgid ""
"Install architecture-independent files in PREFIX. On Unix, it defaults to :"
"file:`/usr/local`."
msgstr ""

#: ../../using/configure.rst:541
msgid "This value can be retrieved at runtime using :data:`sys.prefix`."
msgstr ""

#: ../../using/configure.rst:543
msgid ""
"As an example, one can use ``--prefix=\"$HOME/.local/\"`` to install a "
"Python in its home directory."
msgstr ""

#: ../../using/configure.rst:548
msgid ""
"Install architecture-dependent files in EPREFIX, defaults to :option:`--"
"prefix`."
msgstr ""

#: ../../using/configure.rst:550
msgid "This value can be retrieved at runtime using :data:`sys.exec_prefix`."
msgstr ""

#: ../../using/configure.rst:554
msgid ""
"Don't build nor install test modules, like the :mod:`test` package or the :"
"mod:`!_testcapi` extension module (built and installed by default)."
msgstr ""

#: ../../using/configure.rst:561
msgid "Select the :mod:`ensurepip` command run on Python installation:"
msgstr ""

#: ../../using/configure.rst:563
msgid ""
"``upgrade`` (default): run ``python -m ensurepip --altinstall --upgrade`` "
"command."
msgstr ""

#: ../../using/configure.rst:565
msgid "``install``: run ``python -m ensurepip --altinstall`` command;"
msgstr ""

#: ../../using/configure.rst:566
msgid "``no``: don't run ensurepip;"
msgstr ""

#: ../../using/configure.rst:572
msgid "Performance options"
msgstr ""

#: ../../using/configure.rst:574
msgid ""
"Configuring Python using ``--enable-optimizations --with-lto`` (PGO + LTO) "
"is recommended for best performance. The experimental ``--enable-bolt`` flag "
"can also be used to improve performance."
msgstr ""

#: ../../using/configure.rst:580
msgid ""
"Enable Profile Guided Optimization (PGO) using :envvar:`PROFILE_TASK` "
"(disabled by default)."
msgstr ""

#: ../../using/configure.rst:583
msgid ""
"The C compiler Clang requires ``llvm-profdata`` program for PGO. On macOS, "
"GCC also requires it: GCC is just an alias to Clang on macOS."
msgstr ""

#: ../../using/configure.rst:586
msgid ""
"Disable also semantic interposition in libpython if ``--enable-shared`` and "
"GCC is used: add ``-fno-semantic-interposition`` to the compiler and linker "
"flags."
msgstr ""

#: ../../using/configure.rst:592
msgid ""
"During the build, you may encounter compiler warnings about profile data not "
"being available for some source files. These warnings are harmless, as only "
"a subset of the code is exercised during profile data acquisition. To "
"disable these warnings on Clang, manually suppress them by adding ``-Wno-"
"profile-instr-unprofiled`` to :envvar:`CFLAGS`."
msgstr ""

#: ../../using/configure.rst:601
msgid "Use ``-fno-semantic-interposition`` on GCC."
msgstr ""

#: ../../using/configure.rst:606
msgid ""
"Environment variable used in the Makefile: Python command line arguments for "
"the PGO generation task."
msgstr ""

#: ../../using/configure.rst:609
msgid "Default: ``-m test --pgo --timeout=$(TESTTIMEOUT)``."
msgstr ""

#: ../../using/configure.rst:613
msgid "Task failure is no longer ignored silently."
msgstr ""

#: ../../using/configure.rst:618
msgid "Enable Link Time Optimization (LTO) in any build (disabled by default)."
msgstr ""

#: ../../using/configure.rst:620
msgid ""
"The C compiler Clang requires ``llvm-ar`` for LTO (``ar`` on macOS), as well "
"as an LTO-aware linker (``ld.gold`` or ``lld``)."
msgstr ""

#: ../../using/configure.rst:625
msgid "To use ThinLTO feature, use ``--with-lto=thin`` on Clang."
msgstr ""

#: ../../using/configure.rst:628
msgid ""
"Use ThinLTO as the default optimization policy on Clang if the compiler "
"accepts the flag."
msgstr ""

#: ../../using/configure.rst:633
msgid ""
"Enable usage of the `BOLT post-link binary optimizer <https://github.com/"
"llvm/llvm-project/tree/main/bolt>`_ (disabled by default)."
msgstr ""

#: ../../using/configure.rst:637
msgid ""
"BOLT is part of the LLVM project but is not always included in their binary "
"distributions. This flag requires that ``llvm-bolt`` and ``merge-fdata`` are "
"available."
msgstr ""

#: ../../using/configure.rst:641
msgid ""
"BOLT is still a fairly new project so this flag should be considered "
"experimental for now. Because this tool operates on machine code its success "
"is dependent on a combination of the build environment + the other "
"optimization configure args + the CPU architecture, and not all combinations "
"are supported. BOLT versions before LLVM 16 are known to crash BOLT under "
"some scenarios. Use of LLVM 16 or newer for BOLT optimization is strongly "
"encouraged."
msgstr ""

#: ../../using/configure.rst:649
msgid ""
"The :envvar:`!BOLT_INSTRUMENT_FLAGS` and :envvar:`!BOLT_APPLY_FLAGS` :"
"program:`configure` variables can be defined to override the default set of "
"arguments for :program:`llvm-bolt` to instrument and apply BOLT data to "
"binaries, respectively."
msgstr ""

#: ../../using/configure.rst:658
msgid ""
"Arguments to ``llvm-bolt`` when creating a `BOLT optimized binary <https://"
"github.com/facebookarchive/BOLT>`_."
msgstr ""

#: ../../using/configure.rst:665
msgid "Arguments to ``llvm-bolt`` when instrumenting binaries."
msgstr ""

#: ../../using/configure.rst:671
msgid ""
"Enable computed gotos in evaluation loop (enabled by default on supported "
"compilers)."
msgstr ""

#: ../../using/configure.rst:676
msgid ""
"Enable interpreters using tail calls in CPython. If enabled, enabling PGO (:"
"option:`--enable-optimizations`) is highly recommended. This option "
"specifically requires a C compiler with proper tail call support, and the "
"`preserve_none <https://clang.llvm.org/docs/AttributeReference.html#preserve-"
"none>`_ calling convention. For example, Clang 19 and newer supports this "
"feature."
msgstr ""

#: ../../using/configure.rst:686
msgid ""
"Disable the fast :ref:`mimalloc <mimalloc>` allocator (enabled by default)."
msgstr ""

#: ../../using/configure.rst:689 ../../using/configure.rst:696
msgid "See also :envvar:`PYTHONMALLOC` environment variable."
msgstr ""

#: ../../using/configure.rst:693
msgid ""
"Disable the specialized Python memory allocator :ref:`pymalloc <pymalloc>` "
"(enabled by default)."
msgstr ""

#: ../../using/configure.rst:700
msgid ""
"Disable static documentation strings to reduce the memory footprint (enabled "
"by default). Documentation strings defined in Python are not affected."
msgstr ""

#: ../../using/configure.rst:703
msgid "Don't define the ``WITH_DOC_STRINGS`` macro."
msgstr ""

#: ../../using/configure.rst:705
msgid "See the ``PyDoc_STRVAR()`` macro."
msgstr ""

#: ../../using/configure.rst:709
msgid "Enable C-level code profiling with ``gprof`` (disabled by default)."
msgstr ""

#: ../../using/configure.rst:713
msgid ""
"Add ``-fstrict-overflow`` to the C compiler flags (by default we add ``-fno-"
"strict-overflow`` instead)."
msgstr ""

#: ../../using/configure.rst:718
msgid ""
"Deactivate remote debugging support described in :pep:`768` (enabled by "
"default). When this flag is provided the code that allows the interpreter to "
"schedule the execution of a Python file in a separate process as described "
"in :pep:`768` is not compiled. This includes both the functionality to "
"schedule code to be executed and the functionality to receive code to be "
"executed."
msgstr ""

#: ../../using/configure.rst:726
msgid ""
"This macro is defined by default, unless Python is configured with :option:"
"`--without-remote-debug`."
msgstr ""

#: ../../using/configure.rst:729
msgid ""
"Note that even if the macro is defined, remote debugging may not be "
"available (for example, on an incompatible platform)."
msgstr ""

#: ../../using/configure.rst:738
msgid "Python Debug Build"
msgstr ""

#: ../../using/configure.rst:740
msgid ""
"A debug build is Python built with the :option:`--with-pydebug` configure "
"option."
msgstr ""

#: ../../using/configure.rst:743
msgid "Effects of a debug build:"
msgstr ""

#: ../../using/configure.rst:745
msgid ""
"Display all warnings by default: the list of default warning filters is "
"empty in the :mod:`warnings` module."
msgstr ""

#: ../../using/configure.rst:747
msgid "Add ``d`` to :data:`sys.abiflags`."
msgstr ""

#: ../../using/configure.rst:748
msgid "Add :func:`!sys.gettotalrefcount` function."
msgstr ""

#: ../../using/configure.rst:749
msgid "Add :option:`-X showrefcount <-X>` command line option."
msgstr ""

#: ../../using/configure.rst:750
msgid ""
"Add :option:`-d` command line option and :envvar:`PYTHONDEBUG` environment "
"variable to debug the parser."
msgstr ""

#: ../../using/configure.rst:752
msgid ""
"Add support for the ``__lltrace__`` variable: enable low-level tracing in "
"the bytecode evaluation loop if the variable is defined."
msgstr ""

#: ../../using/configure.rst:754
msgid ""
"Install :ref:`debug hooks on memory allocators <default-memory-allocators>` "
"to detect buffer overflow and other memory errors."
msgstr ""

#: ../../using/configure.rst:756
msgid "Define ``Py_DEBUG`` and ``Py_REF_DEBUG`` macros."
msgstr ""

#: ../../using/configure.rst:757
msgid ""
"Add runtime checks: code surrounded by ``#ifdef Py_DEBUG`` and ``#endif``. "
"Enable ``assert(...)`` and ``_PyObject_ASSERT(...)`` assertions: don't set "
"the ``NDEBUG`` macro (see also the :option:`--with-assertions` configure "
"option). Main runtime checks:"
msgstr ""

#: ../../using/configure.rst:762
msgid "Add sanity checks on the function arguments."
msgstr ""

#: ../../using/configure.rst:763
msgid ""
"Unicode and int objects are created with their memory filled with a pattern "
"to detect usage of uninitialized objects."
msgstr ""

#: ../../using/configure.rst:765
msgid ""
"Ensure that functions which can clear or replace the current exception are "
"not called with an exception raised."
msgstr ""

#: ../../using/configure.rst:767
msgid "Check that deallocator functions don't change the current exception."
msgstr ""

#: ../../using/configure.rst:768
msgid ""
"The garbage collector (:func:`gc.collect` function) runs some basic checks "
"on objects consistency."
msgstr ""

#: ../../using/configure.rst:770
msgid ""
"The :c:macro:`!Py_SAFE_DOWNCAST()` macro checks for integer underflow and "
"overflow when downcasting from wide types to narrow types."
msgstr ""

#: ../../using/configure.rst:773
msgid ""
"See also the :ref:`Python Development Mode <devmode>` and the :option:`--"
"with-trace-refs` configure option."
msgstr ""

#: ../../using/configure.rst:776
msgid ""
"Release builds and debug builds are now ABI compatible: defining the "
"``Py_DEBUG`` macro no longer implies the ``Py_TRACE_REFS`` macro (see the :"
"option:`--with-trace-refs` option)."
msgstr ""

#: ../../using/configure.rst:783
msgid "Debug options"
msgstr ""

#: ../../using/configure.rst:787
msgid ""
":ref:`Build Python in debug mode <debug-build>`: define the ``Py_DEBUG`` "
"macro (disabled by default)."
msgstr ""

#: ../../using/configure.rst:792
msgid "Enable tracing references for debugging purpose (disabled by default)."
msgstr ""

#: ../../using/configure.rst:796
msgid "Define the ``Py_TRACE_REFS`` macro."
msgstr ""

#: ../../using/configure.rst:797
msgid "Add :func:`sys.getobjects` function."
msgstr ""

#: ../../using/configure.rst:798
msgid "Add :envvar:`PYTHONDUMPREFS` environment variable."
msgstr ""

#: ../../using/configure.rst:800
msgid ""
"The :envvar:`PYTHONDUMPREFS` environment variable can be used to dump "
"objects and reference counts still alive at Python exit."
msgstr ""

#: ../../using/configure.rst:803
msgid ":ref:`Statically allocated objects <static-types>` are not traced."
msgstr ""

#: ../../using/configure.rst:807
msgid ""
"This build is now ABI compatible with release build and :ref:`debug build "
"<debug-build>`."
msgstr ""

#: ../../using/configure.rst:813
msgid ""
"Build with C assertions enabled (default is no): ``assert(...);`` and "
"``_PyObject_ASSERT(...);``."
msgstr ""

#: ../../using/configure.rst:816
msgid ""
"If set, the ``NDEBUG`` macro is not defined in the :envvar:`OPT` compiler "
"variable."
msgstr ""

#: ../../using/configure.rst:819
msgid ""
"See also the :option:`--with-pydebug` option (:ref:`debug build <debug-"
"build>`) which also enables assertions."
msgstr ""

#: ../../using/configure.rst:826
msgid "Enable Valgrind support (default is no)."
msgstr ""

#: ../../using/configure.rst:830
msgid "Enable DTrace support (default is no)."
msgstr ""

#: ../../using/configure.rst:832
msgid ""
"See :ref:`Instrumenting CPython with DTrace and SystemTap <instrumentation>`."
msgstr ""

#: ../../using/configure.rst:839
msgid ""
"Enable AddressSanitizer memory error detector, ``asan`` (default is no). To "
"improve ASan detection capabilities you may also want to combine this with :"
"option:`--without-pymalloc` to disable the specialized small-object "
"allocator whose allocations are not tracked by ASan."
msgstr ""

#: ../../using/configure.rst:848
msgid ""
"Enable MemorySanitizer allocation error detector, ``msan`` (default is no)."
msgstr ""

#: ../../using/configure.rst:854
msgid ""
"Enable UndefinedBehaviorSanitizer undefined behaviour detector, ``ubsan`` "
"(default is no)."
msgstr ""

#: ../../using/configure.rst:861
msgid "Enable ThreadSanitizer data race detector, ``tsan`` (default is no)."
msgstr ""

#: ../../using/configure.rst:872
msgid "Enable building a shared Python library: ``libpython`` (default is no)."
msgstr ""

#: ../../using/configure.rst:876
msgid ""
"Do not build ``libpythonMAJOR.MINOR.a`` and do not install ``python.o`` "
"(built and enabled by default)."
msgstr ""

#: ../../using/configure.rst:883
msgid "Libraries options"
msgstr ""

#: ../../using/configure.rst:887
msgid "Link against additional libraries (default is no)."
msgstr ""

#: ../../using/configure.rst:891
msgid ""
"Build the :mod:`!pyexpat` module using an installed ``expat`` library "
"(default is no)."
msgstr ""

#: ../../using/configure.rst:896
msgid ""
"Build the ``_decimal`` extension module using an installed ``mpdecimal`` "
"library, see the :mod:`decimal` module (default is yes)."
msgstr ""

#: ../../using/configure.rst:901
msgid "Default to using the installed ``mpdecimal`` library."
msgstr ""

#: ../../using/configure.rst:904
msgid ""
"A copy of the ``mpdecimal`` library sources will no longer be distributed "
"with Python 3.16."
msgstr ""

#: ../../using/configure.rst:908
msgid ":option:`LIBMPDEC_CFLAGS` and :option:`LIBMPDEC_LIBS`."
msgstr ""

#: ../../using/configure.rst:912
msgid "Designate a backend library for the :mod:`readline` module."
msgstr ""

#: ../../using/configure.rst:914
msgid "readline: Use readline as the backend."
msgstr ""

#: ../../using/configure.rst:915
msgid "editline: Use editline as the backend."
msgstr ""

#: ../../using/configure.rst:921
msgid "Don't build the :mod:`readline` module (built by default)."
msgstr ""

#: ../../using/configure.rst:923
msgid "Don't define the ``HAVE_LIBREADLINE`` macro."
msgstr ""

#: ../../using/configure.rst:929
msgid ""
"Override ``libm`` math library to *STRING* (default is system-dependent)."
msgstr ""

#: ../../using/configure.rst:933
msgid "Override ``libc`` C library to *STRING* (default is system-dependent)."
msgstr ""

#: ../../using/configure.rst:937
msgid "Root of the OpenSSL directory."
msgstr ""

#: ../../using/configure.rst:943
msgid "Set runtime library directory (rpath) for OpenSSL libraries:"
msgstr ""

#: ../../using/configure.rst:945
msgid "``no`` (default): don't set rpath;"
msgstr ""

#: ../../using/configure.rst:946
msgid ""
"``auto``: auto-detect rpath from :option:`--with-openssl` and ``pkg-config``;"
msgstr ""

#: ../../using/configure.rst:948
msgid "*DIR*: set an explicit rpath."
msgstr ""

#: ../../using/configure.rst:954
msgid "Security Options"
msgstr ""

#: ../../using/configure.rst:958
msgid "Select hash algorithm for use in ``Python/pyhash.c``:"
msgstr ""

#: ../../using/configure.rst:960
msgid "``siphash13`` (default);"
msgstr ""

#: ../../using/configure.rst:961
msgid "``siphash24``;"
msgstr ""

#: ../../using/configure.rst:962
msgid "``fnv``."
msgstr ""

#: ../../using/configure.rst:966
msgid "``siphash13`` is added and it is the new default."
msgstr ""

#: ../../using/configure.rst:971
msgid "Built-in hash modules:"
msgstr ""

#: ../../using/configure.rst:973
msgid "``md5``;"
msgstr ""

#: ../../using/configure.rst:974
msgid "``sha1``;"
msgstr ""

#: ../../using/configure.rst:975
msgid "``sha256``;"
msgstr ""

#: ../../using/configure.rst:976
msgid "``sha512``;"
msgstr ""

#: ../../using/configure.rst:977
msgid "``sha3`` (with shake);"
msgstr ""

#: ../../using/configure.rst:978
msgid "``blake2``."
msgstr ""

#: ../../using/configure.rst:984
msgid "Override the OpenSSL default cipher suites string:"
msgstr ""

#: ../../using/configure.rst:986
msgid "``python`` (default): use Python's preferred selection;"
msgstr ""

#: ../../using/configure.rst:987
msgid "``openssl``: leave OpenSSL's defaults untouched;"
msgstr ""

#: ../../using/configure.rst:988
msgid "*STRING*: use a custom string"
msgstr ""

#: ../../using/configure.rst:990
msgid "See the :mod:`ssl` module."
msgstr ""

#: ../../using/configure.rst:996
msgid ""
"The settings ``python`` and *STRING* also set TLS 1.2 as minimum protocol "
"version."
msgstr ""

#: ../../using/configure.rst:1001
msgid ""
"Disable compiler options that are `recommended by OpenSSF`_ for security "
"reasons with no performance overhead. If this option is not enabled, CPython "
"will be built based on safety compiler options with no slow down. When this "
"option is enabled, CPython will not be built with the compiler options "
"listed below."
msgstr ""

#: ../../using/configure.rst:1005
msgid ""
"The following compiler options are disabled with :option:`!--disable-safety`:"
msgstr ""

#: ../../using/configure.rst:1007
msgid ""
"`-fstack-protector-strong`_: Enable run-time checks for stack-based buffer "
"overflows."
msgstr ""

#: ../../using/configure.rst:1008
msgid ""
"`-Wtrampolines`_: Enable warnings about trampolines that require executable "
"stacks."
msgstr ""

#: ../../using/configure.rst:1018
msgid ""
"Enable compiler options that are `recommended by OpenSSF`_ for security "
"reasons which require overhead. If this option is not enabled, CPython will "
"not be built based on safety compiler options which performance impact. When "
"this option is enabled, CPython will be built with the compiler options "
"listed below."
msgstr ""

#: ../../using/configure.rst:1022
msgid ""
"The following compiler options are enabled with :option:`!--enable-slower-"
"safety`:"
msgstr ""

#: ../../using/configure.rst:1024
msgid ""
"`-D_FORTIFY_SOURCE=3`_: Fortify sources with compile- and run-time checks "
"for unsafe libc usage and buffer overflows."
msgstr ""

#: ../../using/configure.rst:1032
msgid "macOS Options"
msgstr ""

#: ../../using/configure.rst:1034
msgid "See :source:`Mac/README.rst`."
msgstr ""

#: ../../using/configure.rst:1039
msgid ""
"Create a universal binary build. *SDKDIR* specifies which macOS SDK should "
"be used to perform the build (default is no)."
msgstr ""

#: ../../using/configure.rst:1045
msgid ""
"Create a Python.framework rather than a traditional Unix install. Optional "
"*INSTALLDIR* specifies the installation path (default is no)."
msgstr ""

#: ../../using/configure.rst:1050
msgid ""
"Specify the kind of universal binary that should be created. This option is "
"only valid when :option:`--enable-universalsdk` is set."
msgstr ""

#: ../../using/configure.rst:1053
msgid "Options:"
msgstr ""

#: ../../using/configure.rst:1055
msgid "``universal2`` (x86-64 and arm64);"
msgstr ""

#: ../../using/configure.rst:1056
msgid "``32-bit`` (PPC and i386);"
msgstr ""

#: ../../using/configure.rst:1057
msgid "``64-bit``  (PPC64 and x86-64);"
msgstr ""

#: ../../using/configure.rst:1058
msgid "``3-way`` (i386, PPC and x86-64);"
msgstr ""

#: ../../using/configure.rst:1059
msgid "``intel`` (i386 and x86-64);"
msgstr ""

#: ../../using/configure.rst:1060
msgid "``intel-32`` (i386);"
msgstr ""

#: ../../using/configure.rst:1061
msgid "``intel-64`` (x86-64);"
msgstr ""

#: ../../using/configure.rst:1062
msgid "``all``  (PPC, i386, PPC64 and x86-64)."
msgstr ""

#: ../../using/configure.rst:1064
msgid ""
"Note that values for this configuration item are *not* the same as the "
"identifiers used for universal binary wheels on macOS. See the Python "
"Packaging User Guide for details on the `packaging platform compatibility "
"tags used on macOS <https://packaging.python.org/en/latest/specifications/"
"platform-compatibility-tags/#macos>`_"
msgstr ""

#: ../../using/configure.rst:1072
msgid ""
"Specify the name for the python framework on macOS only valid when :option:"
"`--enable-framework` is set (default: ``Python``)."
msgstr ""

#: ../../using/configure.rst:1078
msgid ""
"The Python standard library contains strings that are known to trigger "
"automated inspection tool errors when submitted for distribution by the "
"macOS and iOS App Stores. If enabled, this option will apply the list of "
"patches that are known to correct app store compliance. A custom patch file "
"can also be specified. This option is disabled by default."
msgstr ""

#: ../../using/configure.rst:1087
msgid "iOS Options"
msgstr ""

#: ../../using/configure.rst:1089
msgid "See :source:`iOS/README.rst`."
msgstr ""

#: ../../using/configure.rst:1093
msgid ""
"Create a Python.framework. Unlike macOS, the *INSTALLDIR* argument "
"specifying the installation path is mandatory."
msgstr ""

#: ../../using/configure.rst:1098
msgid "Specify the name for the framework (default: ``Python``)."
msgstr ""

#: ../../using/configure.rst:1102
msgid "Cross Compiling Options"
msgstr ""

#: ../../using/configure.rst:1104
msgid ""
"Cross compiling, also known as cross building, can be used to build Python "
"for another CPU architecture or platform. Cross compiling requires a Python "
"interpreter for the build platform. The version of the build Python must "
"match the version of the cross compiled host Python."
msgstr ""

#: ../../using/configure.rst:1111
msgid ""
"configure for building on BUILD, usually guessed by :program:`config.guess`."
msgstr ""

#: ../../using/configure.rst:1115
msgid "cross-compile to build programs to run on HOST (target platform)"
msgstr ""

#: ../../using/configure.rst:1119
msgid "path to build ``python`` binary for cross compiling"
msgstr ""

#: ../../using/configure.rst:1125
msgid "An environment variable that points to a file with configure overrides."
msgstr ""

#: ../../using/configure.rst:1127
msgid "Example *config.site* file:"
msgstr ""

#: ../../using/configure.rst:1129
msgid ""
"# config.site-aarch64\n"
"ac_cv_buggy_getaddrinfo=no\n"
"ac_cv_file__dev_ptmx=yes\n"
"ac_cv_file__dev_ptc=no"
msgstr ""

#: ../../using/configure.rst:1138
msgid "Program to run CPython for the host platform for cross-compilation."
msgstr ""

#: ../../using/configure.rst:1143
msgid "Cross compiling example::"
msgstr ""

#: ../../using/configure.rst:1145
msgid ""
"CONFIG_SITE=config.site-aarch64 ../configure \\\n"
"    --build=x86_64-pc-linux-gnu \\\n"
"    --host=aarch64-unknown-linux-gnu \\\n"
"    --with-build-python=../x86_64/python"
msgstr ""

#: ../../using/configure.rst:1152
msgid "Python Build System"
msgstr ""

#: ../../using/configure.rst:1155
msgid "Main files of the build system"
msgstr ""

#: ../../using/configure.rst:1157
msgid ":file:`configure.ac` => :file:`configure`;"
msgstr ""

#: ../../using/configure.rst:1158
msgid ""
":file:`Makefile.pre.in` => :file:`Makefile` (created by :file:`configure`);"
msgstr ""

#: ../../using/configure.rst:1159
msgid ":file:`pyconfig.h` (created by :file:`configure`);"
msgstr ""

#: ../../using/configure.rst:1160
msgid ""
":file:`Modules/Setup`: C extensions built by the Makefile using :file:"
"`Module/makesetup` shell script;"
msgstr ""

#: ../../using/configure.rst:1164
msgid "Main build steps"
msgstr ""

#: ../../using/configure.rst:1166
msgid "C files (``.c``) are built as object files (``.o``)."
msgstr ""

#: ../../using/configure.rst:1167
msgid "A static ``libpython`` library (``.a``) is created from objects files."
msgstr ""

#: ../../using/configure.rst:1168
msgid ""
"``python.o`` and the static ``libpython`` library are linked into the final "
"``python`` program."
msgstr ""

#: ../../using/configure.rst:1170
msgid "C extensions are built by the Makefile (see :file:`Modules/Setup`)."
msgstr ""

#: ../../using/configure.rst:1173
msgid "Main Makefile targets"
msgstr ""

#: ../../using/configure.rst:1176
msgid "make"
msgstr ""

#: ../../using/configure.rst:1178
msgid ""
"For the most part, when rebuilding after editing some code or refreshing "
"your checkout from upstream, all you need to do is execute ``make``, which "
"(per Make's semantics) builds the default target, the first one defined in "
"the Makefile.  By tradition (including in the CPython project) this is "
"usually the ``all`` target. The ``configure`` script expands an ``autoconf`` "
"variable, ``@DEF_MAKE_ALL_RULE@`` to describe precisely which targets ``make "
"all`` will build. The three choices are:"
msgstr ""

#: ../../using/configure.rst:1187
msgid "``profile-opt`` (configured with ``--enable-optimizations``)"
msgstr ""

#: ../../using/configure.rst:1188
msgid ""
"``build_wasm`` (chosen if the host platform matches ``wasm32-wasi*`` or "
"``wasm32-emscripten``)"
msgstr ""

#: ../../using/configure.rst:1190
msgid ""
"``build_all`` (configured without explicitly using either of the others)"
msgstr ""

#: ../../using/configure.rst:1192
msgid ""
"Depending on the most recent source file changes, Make will rebuild any "
"targets (object files and executables) deemed out-of-date, including running "
"``configure`` again if necessary. Source/target dependencies are many and "
"maintained manually however, so Make sometimes doesn't have all the "
"information necessary to correctly detect all targets which need to be "
"rebuilt.  Depending on which targets aren't rebuilt, you might experience a "
"number of problems. If you have build or test problems which you can't "
"otherwise explain, ``make clean && make`` should work around most dependency "
"problems, at the expense of longer build times."
msgstr ""

#: ../../using/configure.rst:1205
msgid "make platform"
msgstr ""

#: ../../using/configure.rst:1207
msgid ""
"Build the ``python`` program, but don't build the standard library extension "
"modules. This generates a file named ``platform`` which contains a single "
"line describing the details of the build platform, e.g., ``macosx-14.3-"
"arm64-3.12`` or ``linux-x86_64-3.13``."
msgstr ""

#: ../../using/configure.rst:1214
msgid "make profile-opt"
msgstr ""

#: ../../using/configure.rst:1216
msgid ""
"Build Python using profile-guided optimization (PGO).  You can use the "
"configure :option:`--enable-optimizations` option to make this the default "
"target of the ``make`` command (``make all`` or just ``make``)."
msgstr ""

#: ../../using/configure.rst:1224
msgid "make clean"
msgstr ""

#: ../../using/configure.rst:1226
msgid "Remove built files."
msgstr ""

#: ../../using/configure.rst:1230
msgid "make distclean"
msgstr ""

#: ../../using/configure.rst:1232
msgid ""
"In addition to the work done by ``make clean``, remove files created by the "
"configure script.  ``configure`` will have to be run before building again. "
"[#]_"
msgstr ""

#: ../../using/configure.rst:1238
msgid "make install"
msgstr ""

#: ../../using/configure.rst:1240
msgid "Build the ``all`` target and install Python."
msgstr ""

#: ../../using/configure.rst:1244
msgid "make test"
msgstr ""

#: ../../using/configure.rst:1246
msgid ""
"Build the ``all`` target and run the Python test suite with the ``--fast-"
"ci`` option without GUI tests. Variables:"
msgstr ""

#: ../../using/configure.rst:1249
msgid "``TESTOPTS``: additional regrtest command-line options."
msgstr ""

#: ../../using/configure.rst:1250
msgid "``TESTPYTHONOPTS``: additional Python command-line options."
msgstr ""

#: ../../using/configure.rst:1251
msgid "``TESTTIMEOUT``: timeout in seconds (default: 10 minutes)."
msgstr ""

#: ../../using/configure.rst:1255
msgid "make ci"
msgstr ""

#: ../../using/configure.rst:1257
msgid ""
"This is similar to ``make test``, but uses the ``-ugui`` to also run GUI "
"tests."
msgstr ""

#: ../../using/configure.rst:1263
msgid "make buildbottest"
msgstr ""

#: ../../using/configure.rst:1265
msgid ""
"This is similar to ``make test``, but uses the ``--slow-ci`` option and "
"default timeout of 20 minutes, instead of ``--fast-ci`` option."
msgstr ""

#: ../../using/configure.rst:1270
msgid "make regen-all"
msgstr ""

#: ../../using/configure.rst:1272
msgid ""
"Regenerate (almost) all generated files. These include (but are not limited "
"to) bytecode cases, and parser generator file. ``make regen-stdlib-module-"
"names`` and ``autoconf`` must be run separately for the remaining `generated "
"files <#generated-files>`_."
msgstr ""

#: ../../using/configure.rst:1279
msgid "C extensions"
msgstr ""

#: ../../using/configure.rst:1281
msgid ""
"Some C extensions are built as built-in modules, like the ``sys`` module. "
"They are built with the ``Py_BUILD_CORE_BUILTIN`` macro defined. Built-in "
"modules have no ``__file__`` attribute:"
msgstr ""

#: ../../using/configure.rst:1285
msgid ""
">>> import sys\n"
">>> sys\n"
"<module 'sys' (built-in)>\n"
">>> sys.__file__\n"
"Traceback (most recent call last):\n"
"  File \"<stdin>\", line 1, in <module>\n"
"AttributeError: module 'sys' has no attribute '__file__'"
msgstr ""

#: ../../using/configure.rst:1295
msgid ""
"Other C extensions are built as dynamic libraries, like the ``_asyncio`` "
"module. They are built with the ``Py_BUILD_CORE_MODULE`` macro defined. "
"Example on Linux x86-64:"
msgstr ""

#: ../../using/configure.rst:1299
msgid ""
">>> import _asyncio\n"
">>> _asyncio\n"
"<module '_asyncio' from '/usr/lib64/python3.9/lib-dynload/_asyncio."
"cpython-39-x86_64-linux-gnu.so'>\n"
">>> _asyncio.__file__\n"
"'/usr/lib64/python3.9/lib-dynload/_asyncio.cpython-39-x86_64-linux-gnu.so'"
msgstr ""

#: ../../using/configure.rst:1307
msgid ""
":file:`Modules/Setup` is used to generate Makefile targets to build C "
"extensions. At the beginning of the files, C extensions are built as built-"
"in modules. Extensions defined after the ``*shared*`` marker are built as "
"dynamic libraries."
msgstr ""

#: ../../using/configure.rst:1311
msgid ""
"The :c:macro:`!PyAPI_FUNC()`, :c:macro:`!PyAPI_DATA()` and :c:macro:"
"`PyMODINIT_FUNC` macros of :file:`Include/exports.h` are defined differently "
"depending if the ``Py_BUILD_CORE_MODULE`` macro is defined:"
msgstr ""

#: ../../using/configure.rst:1315
msgid "Use ``Py_EXPORTED_SYMBOL`` if the ``Py_BUILD_CORE_MODULE`` is defined"
msgstr ""

#: ../../using/configure.rst:1316
msgid "Use ``Py_IMPORTED_SYMBOL`` otherwise."
msgstr ""

#: ../../using/configure.rst:1318
msgid ""
"If the ``Py_BUILD_CORE_BUILTIN`` macro is used by mistake on a C extension "
"built as a shared library, its :samp:`PyInit_{xxx}()` function is not "
"exported, causing an :exc:`ImportError` on import."
msgstr ""

#: ../../using/configure.rst:1324
msgid "Compiler and linker flags"
msgstr ""

#: ../../using/configure.rst:1326
msgid ""
"Options set by the ``./configure`` script and environment variables and used "
"by ``Makefile``."
msgstr ""

#: ../../using/configure.rst:1330
msgid "Preprocessor flags"
msgstr ""

#: ../../using/configure.rst:1334
msgid ""
"Value of :envvar:`CPPFLAGS` variable passed to the ``./configure`` script."
msgstr ""

#: ../../using/configure.rst:1340
msgid ""
"(Objective) C/C++ preprocessor flags, e.g. :samp:`-I{include_dir}` if you "
"have headers in a nonstandard directory *include_dir*."
msgstr ""

#: ../../using/configure.rst:1343 ../../using/configure.rst:1533
msgid ""
"Both :envvar:`CPPFLAGS` and :envvar:`LDFLAGS` need to contain the shell's "
"value to be able to build extension modules using the directories specified "
"in the environment variables."
msgstr ""

#: ../../using/configure.rst:1353
msgid ""
"Extra preprocessor flags added for building the interpreter object files."
msgstr ""

#: ../../using/configure.rst:1355
msgid ""
"Default: ``$(BASECPPFLAGS) -I. -I$(srcdir)/Include $(CONFIGURE_CPPFLAGS) "
"$(CPPFLAGS)``."
msgstr ""

#: ../../using/configure.rst:1360
msgid "Compiler flags"
msgstr ""

#: ../../using/configure.rst:1366
msgid "Example: ``gcc -pthread``."
msgstr ""

#: ../../using/configure.rst:1370
msgid "C++ compiler command."
msgstr ""

#: ../../using/configure.rst:1372
msgid "Example: ``g++ -pthread``."
msgstr ""

#: ../../using/configure.rst:1380
msgid ""
":envvar:`CFLAGS_NODIST` is used for building the interpreter and stdlib C "
"extensions.  Use it when a compiler flag should *not* be part of :envvar:"
"`CFLAGS` once Python is installed (:gh:`65320`)."
msgstr ""

#: ../../using/configure.rst:1384
msgid "In particular, :envvar:`CFLAGS` should not contain:"
msgstr ""

#: ../../using/configure.rst:1386
msgid ""
"the compiler flag ``-I`` (for setting the search path for include files). "
"The ``-I`` flags are processed from left to right, and any flags in :envvar:"
"`CFLAGS` would take precedence over user- and package-supplied ``-I`` flags."
msgstr ""

#: ../../using/configure.rst:1391
msgid ""
"hardening flags such as ``-Werror`` because distributions cannot control "
"whether packages installed by users conform to such heightened standards."
msgstr ""

#: ../../using/configure.rst:1399
msgid ""
"Options passed to the :mod:`compileall` command line when building PYC files "
"in ``make install``. Default: ``-j0``."
msgstr ""

#: ../../using/configure.rst:1406
msgid "Extra C compiler flags."
msgstr ""

#: ../../using/configure.rst:1410
msgid ""
"Value of :envvar:`CFLAGS` variable passed to the ``./configure`` script."
msgstr ""

#: ../../using/configure.rst:1417
msgid ""
"Value of :envvar:`CFLAGS_NODIST` variable passed to the ``./configure`` "
"script."
msgstr ""

#: ../../using/configure.rst:1424
msgid "Base compiler flags."
msgstr ""

#: ../../using/configure.rst:1428
msgid "Optimization flags."
msgstr ""

#: ../../using/configure.rst:1432
msgid "Strict or non-strict aliasing flags used to compile ``Python/dtoa.c``."
msgstr ""

#: ../../using/configure.rst:1438
msgid "Compiler flags used to build a shared library."
msgstr ""

#: ../../using/configure.rst:1440
msgid "For example, ``-fPIC`` is used on Linux and on BSD."
msgstr ""

#: ../../using/configure.rst:1444
msgid "Extra C flags added for building the interpreter object files."
msgstr ""

#: ../../using/configure.rst:1446
msgid ""
"Default: ``$(CCSHARED)`` when :option:`--enable-shared` is used, or an empty "
"string otherwise."
msgstr ""

#: ../../using/configure.rst:1451
msgid ""
"Default: ``$(BASECFLAGS) $(OPT) $(CONFIGURE_CFLAGS) $(CFLAGS) "
"$(EXTRA_CFLAGS)``."
msgstr ""

#: ../../using/configure.rst:1455
msgid ""
"Default: ``$(CONFIGURE_CFLAGS_NODIST) $(CFLAGS_NODIST) -I$(srcdir)/Include/"
"internal``."
msgstr ""

#: ../../using/configure.rst:1461
msgid "C flags used for building the interpreter object files."
msgstr ""

#: ../../using/configure.rst:1463
msgid ""
"Default: ``$(PY_CFLAGS) $(PY_CFLAGS_NODIST) $(PY_CPPFLAGS) "
"$(CFLAGSFORSHARED)``."
msgstr ""

#: ../../using/configure.rst:1469
msgid "Default: ``$(PY_STDMODULE_CFLAGS) -DPy_BUILD_CORE``."
msgstr ""

#: ../../using/configure.rst:1475
msgid ""
"Compiler flags to build a standard library extension module as a built-in "
"module, like the :mod:`posix` module."
msgstr ""

#: ../../using/configure.rst:1478
msgid "Default: ``$(PY_STDMODULE_CFLAGS) -DPy_BUILD_CORE_BUILTIN``."
msgstr ""

#: ../../using/configure.rst:1484
msgid "Purify command. Purify is a memory debugger program."
msgstr ""

#: ../../using/configure.rst:1486
msgid "Default: empty string (not used)."
msgstr ""

#: ../../using/configure.rst:1490
msgid "Linker flags"
msgstr ""

#: ../../using/configure.rst:1494
msgid ""
"Linker command used to build programs like ``python`` and ``_testembed``."
msgstr ""

#: ../../using/configure.rst:1496
msgid "Default: ``$(PURIFY) $(CC)``."
msgstr ""

#: ../../using/configure.rst:1500
msgid ""
"Value of :envvar:`LDFLAGS` variable passed to the ``./configure`` script."
msgstr ""

#: ../../using/configure.rst:1502
msgid ""
"Avoid assigning :envvar:`CFLAGS`, :envvar:`LDFLAGS`, etc. so users can use "
"them on the command line to append to these values without stomping the pre-"
"set values."
msgstr ""

#: ../../using/configure.rst:1510
msgid ""
":envvar:`LDFLAGS_NODIST` is used in the same manner as :envvar:"
"`CFLAGS_NODIST`.  Use it when a linker flag should *not* be part of :envvar:"
"`LDFLAGS` once Python is installed (:gh:`65320`)."
msgstr ""

#: ../../using/configure.rst:1514
msgid "In particular, :envvar:`LDFLAGS` should not contain:"
msgstr ""

#: ../../using/configure.rst:1516
msgid ""
"the compiler flag ``-L`` (for setting the search path for libraries). The ``-"
"L`` flags are processed from left to right, and any flags in :envvar:"
"`LDFLAGS` would take precedence over user- and package-supplied ``-L`` flags."
msgstr ""

#: ../../using/configure.rst:1523
msgid ""
"Value of :envvar:`LDFLAGS_NODIST` variable passed to the ``./configure`` "
"script."
msgstr ""

#: ../../using/configure.rst:1530
msgid ""
"Linker flags, e.g. :samp:`-L{lib_dir}` if you have libraries in a "
"nonstandard directory *lib_dir*."
msgstr ""

#: ../../using/configure.rst:1539
msgid ""
"Linker flags to pass libraries to the linker when linking the Python "
"executable."
msgstr ""

#: ../../using/configure.rst:1542
msgid "Example: ``-lrt``."
msgstr ""

#: ../../using/configure.rst:1546
msgid "Command to build a shared library."
msgstr ""

#: ../../using/configure.rst:1548
msgid "Default: ``@LDSHARED@ $(PY_LDFLAGS)``."
msgstr ""

#: ../../using/configure.rst:1552
msgid "Command to build ``libpython`` shared library."
msgstr ""

#: ../../using/configure.rst:1554
msgid "Default: ``@BLDSHARED@ $(PY_CORE_LDFLAGS)``."
msgstr ""

#: ../../using/configure.rst:1558
msgid "Default: ``$(CONFIGURE_LDFLAGS) $(LDFLAGS)``."
msgstr ""

#: ../../using/configure.rst:1562
msgid "Default: ``$(CONFIGURE_LDFLAGS_NODIST) $(LDFLAGS_NODIST)``."
msgstr ""

#: ../../using/configure.rst:1568
msgid "Linker flags used for building the interpreter object files."
msgstr ""

#: ../../using/configure.rst:1574
msgid "Footnotes"
msgstr ""

#: ../../using/configure.rst:1575
msgid ""
"``git clean -fdx`` is an even more extreme way to \"clean\" your checkout. "
"It removes all files not known to Git. When bug hunting using ``git "
"bisect``, this is `recommended between probes <https://github.com/python/"
"cpython/issues/114505#issuecomment-1907021718>`_ to guarantee a completely "
"clean build. **Use with care**, as it will delete all files not checked into "
"Git, including your new, uncommitted work."
msgstr ""
